// Cell: cACint209_L5_LBC_126a82ac08_0_0
/*
{
  "id" : "cACint209_L5_LBC_126a82ac08_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.26545, 12.8263, -0.385372, 4.20571", "-2.99538, 11.4835, -0.361166, 7.19402", "-2.72531, 10.1406, -0.336961, 9.45629", "-2.45524, 8.79768, -0.312756, 10.8887", "-2.18516, 7.45479, -0.28855, 12.1858", "-1.91509, 6.11191, -0.264345, 13.0837", "-1.64502, 4.76902, -0.24014, 13.8391", "-1.37495, 3.42613, -0.215934, 14.1927", "-1.10488, 2.08325, -0.191729, 14.7245", "-0.834809, 0.740358, -0.167524, 15.0655", "-0.564738, -0.602529, -0.143318, 15.0604", "-0.294667, -1.94542, -0.119113, 14.8454", "-0.0245954, -3.2883, -0.0949076, 14.4598", "0.245476, -4.63119, -0.0707023, 13.4621", "0.515547, -5.97408, -0.0464969, 12.4622", "0.785618, -7.31696, -0.0222916, 11.0253", "1.05569, -8.65985, 0.00191374, 9.34508", "1.32576, -10.0027, 0.0261191, 7.80961", "1.59583, -11.3456, 0.0503244, 6.28847", "1.8659, -12.6885, 0.0745297, 5.0944", "2.13597, -14.0314, 0.0987351, 2.89855" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.80934, 11.8727, 8.90928, 5.26", "-3.91609, 12.6287, 7.67675, 4.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.75934, -3.04229, 15.6893, 1.66", "-9.09916, -3.22644, 17.6808, 1.66", "-10.7165, -3.44874, 20.0848, 1.66", "-14.2099, -3.92889, 25.2773, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.73066, -11.4973, 8.52928, 3.32", "3.64701, -16.1874, 8.52928, 3.05", "4.15614, -18.7933, 8.52928, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.13597, -14.0314, 0.0987351, 1.11", "5.09344, -28.737, 0.0987351, 1.11", "8.05091, -43.4425, 0.0987351, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.91609, 12.6287, 7.67675, 3.88", "-4.46759, 15.2538, 7.72015, 3.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.91609, 12.6287, 7.67675, 1.11", "-1.34238, 19.7895, -5.89538, 1.11", "-0.59279, 21.8335, -9.39439, 1.11", "-0.17233, 22.9113, -11.0608, 0.83", "0.158412, 23.7498, -12.2106, 0.55", "0.96556, 25.6393, -14.5034, 0.55", "1.36158, 26.4842, -15.4318, 0.55", "2.16582, 27.7679, -15.9553, 0.55", "2.98632, 28.8266, -16.684, 0.83", "3.92676, 29.9508, -17.6194, 0.83", "5.10363, 31.2706, -18.8262, 0.55", "5.82433, 31.9921, -19.5105, 0.55", "6.55321, 32.672, -20.2128, 0.55", "10.4837, 36.289, -25.127, 0.55", "11.0139, 36.7404, -25.8816, 0.55", "11.5379, 37.1585, -26.6613, 0.28", "12.1288, 37.6508, -27.595, 0.28", "12.9969, 38.4629, -29.0548, 0.28", "15.9778, 41.5342, -33.7678, 0.55", "17.1247, 42.8432, -35.1227, 0.28", "17.8537, 43.7169, -35.924, 0.28", "18.3861, 44.3778, -36.4289, 0.28", "19.347, 45.5801, -37.1069, 0.55", "21.0344, 47.8133, -37.8194, 0.55", "23.1166, 50.6354, -38.0576, 0.28", "23.2554, 50.8318, -38.068, 0.28", "24.2717, 52.1688, -38.3592, 0.28", "25.577, 53.7446, -38.9249, 0.28", "26.6887, 54.9491, -39.4932, 0.28", "27.3631, 55.6644, -39.9011, 0.28", "28.5827, 56.8792, -40.6379, 0.55", "32.0751, 60.4209, -43.3162, 0.28", "33.4999, 61.8973, -44.5092, 0.28", "34.9823, 63.5733, -45.7723, 0.28", "35.8699, 64.707, -46.6558, 0.28", "37.3961, 66.889, -48.4199, 0.55", "39.924, 70.9368, -51.6279, 0.28", "41.4805, 73.8005, -53.7078, 0.28", "42.9988, 76.9239, -55.9681, 0.28", "44.96, 81.4461, -59.0797, 0.55", "45.9943, 84.0498, -60.7376, 0.28", "46.525, 85.4757, -61.5316, 0.28", "47.2039, 87.2265, -62.2526, 0.28", "48.1797, 89.5638, -63.1085, 0.55", "49.2926, 91.7345, -63.8517, 0.28", "50.0262, 92.998, -64.162, 0.28", "51.0558, 94.6922, -64.5766, 0.28", "52.581, 97.035, -65.2771, 0.28", "53.3657, 98.1784, -65.6699, 0.55", "55.5987, 101.374, -66.8731, 0.55", "56.3841, 102.482, -67.2962, 0.55", "57.1294, 103.581, -67.6671, 0.55", "58.2333, 105.381, -68.1754, 0.83", "59.215, 107.079, -68.5353, 0.28", "59.7339, 108.127, -68.6685, 0.28", "60.3471, 109.661, -68.7873, 0.28", "61.1236, 112.453, -69.1224, 0.28", "61.2642, 113.392, -69.269, 0.28", "61.4122, 114.85, -69.5289, 0.55", "61.6301, 116.581, -69.8647, 0.28", "62.2283, 119.496, -70.443, 0.28", "62.8961, 121.762, -70.8881, 0.28", "63.8202, 124.171, -71.5924, 0.28", "65.2601, 127.072, -72.607, 0.28", "66.3223, 128.796, -73.267, 0.28", "67.7269, 130.581, -73.9692, 0.55", "68.7203, 131.663, -74.3724, 0.28", "71.2799, 134.304, -75.3963, 0.28", "73.4622, 136.49, -76.2724, 0.28", "74.4249, 137.435, -76.6252, 0.28", "76.055, 139.042, -77.1102, 0.83", "77.3426, 140.307, -78.0466, 0.28", "78.6432, 141.589, -79.3986, 0.28", "79.774, 142.708, -80.9512, 0.28", "81.1515, 144.007, -83.1677, 0.28", "82.5018, 145.222, -85.4547, 0.28", "88.5263, 150.704, -96.2574, 0.28", "89.0513, 151.197, -97.221, 0.55", "90.0785, 152.182, -99.3444, 0.28", "91.3038, 153.501, -102.331, 0.28", "91.9234, 154.193, -104.1, 0.28", "92.613, 154.878, -105.941, 0.28", "94.2776, 156.206, -106.13, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.2099, -3.92889, 25.2773, 1.66", "-16.5236, -3.99307, 25.4604, 1.66", "-19.0599, -3.84623, 25.3962, 1.66", "-22.241, -3.45483, 25.7622, 1.39", "-25.3344, -3.03454, 26.3475, 1.39", "-28.1258, -2.65692, 26.9854, 1.11", "-32.4437, -2.07014, 28.2611, 1.11", "-37.6173, -1.09325, 30.1207, 1.11", "-44.2062, 0.479448, 33.3673, 1.11", "-45.1324, 0.74538, 33.912, 1.11", "-47.4697, 1.34721, 35.3253, 1.11", "-51.0623, 2.17145, 37.1189, 1.11", "-52.9391, 2.5859, 37.957, 1.11", "-57.0716, 3.37658, 39.7254, 1.11", "-58.8807, 3.68547, 40.211, 1.11", "-62.9914, 4.38274, 41.1972, 1.11", "-67.9786, 5.02366, 42.2022, 1.11", "-73.6746, 5.4178, 42.9252, 1.11", "-76.1338, 5.50018, 43.1607, 0.83", "-78.794, 5.55281, 43.6071, 0.83", "-80.0694, 5.60501, 44.019, 0.83", "-82.0879, 5.74781, 44.9279, 0.83", "-83.8713, 5.86529, 45.9309, 0.83", "-85.3634, 5.92398, 46.605, 0.83", "-90.7178, 6.79851, 50.0708, 0.83", "-91.0959, 6.90884, 50.4354, 0.83", "-100.561, 7.25716, 52.5068, 0.83", "-109.569, 8.93392, 55.5856, 0.83", "-118.765, 10.0032, 58.4212, 0.83", "-128.282, 10.1976, 60.2729, 0.83", "-137.913, 10.6021, 61.2671, 0.83", "-147.506, 9.3363, 62.1013, 0.83", "-156.879, 7.32491, 63.663, 0.83", "-165.612, 4.39425, 66.6955, 0.83", "-173.863, 0.56002, 69.9815, 0.83", "-181.823, -4.09356, 72.8191, 0.83", "-189.298, -8.0811, 77.4589, 0.83", "-195.576, -13.4327, 82.3529, 0.83", "-201.979, -18.6096, 87.2914, 0.83", "-208.471, -24.1806, 91.6166, 0.83", "-215.749, -28.054, 96.653, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.2099, -3.92889, 25.2773, 1.11", "-16.2548, -3.15813, 27.5875, 1.11", "-17.3687, -2.83811, 29.0425, 1.11", "-20.7379, -2.15154, 33.2037, 1.11", "-21.8244, -1.95118, 34.4633, 1.11", "-24.0044, -1.50083, 36.8407, 1.11", "-29.9205, -0.110651, 43.514, 1.11", "-31.0887, 0.220215, 44.8856, 0.83", "-32.6782, 0.713818, 46.5159, 0.83", "-33.7407, 1.02558, 47.3909, 0.83", "-34.9128, 1.41958, 48.394, 0.83", "-38.1863, 2.79798, 51.1123, 0.83", "-41.1227, 4.18123, 52.3839, 0.83", "-42.9239, 5.12344, 53.2349, 0.83", "-43.3283, 5.34631, 53.4711, 0.83", "-50.4773, 8.85654, 58.4303, 0.83", "-57.3411, 12.3895, 63.7637, 0.83", "-65.2602, 13.8716, 68.6961, 0.83", "-73.5883, 15.3699, 72.8914, 0.83", "-81.6822, 17.0245, 77.4631, 0.83", "-89.7553, 19.7909, 81.4208, 0.83", "-97.5055, 22.7317, 85.8582, 0.83", "-105.746, 26.5061, 88.1938, 0.83", "-113.893, 30.096, 91.1145, 0.83", "-122.031, 33.6644, 94.0895, 0.83", "-129.443, 37.2669, 98.56, 0.83", "-137.237, 39.4206, 103.412, 0.83", "-145.1, 41.3724, 108.248, 0.83", "-152.637, 42.0616, 113.925, 0.83", "-159.974, 41.7767, 119.901, 0.83", "-167.491, 40.4625, 125.496, 0.83", "-176.195, 39.1746, 128.984, 0.83", "-184.524, 37.3366, 133.069, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.15614, -18.7933, 8.52928, 4.16", "4.36017, -20.0406, 8.52729, 4.16" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.15614, -18.7933, 8.52928, 1.39", "12.9771, -18.2663, 2.03748, 1.39", "15.4427, -18.0924, 0.336656, 1.11", "18.4609, -17.9796, -1.30336, 1.11", "20.7071, -17.9898, -2.29782, 0.83", "22.8909, -18.0532, -3.06981, 0.83", "29.5661, -18.2993, -5.21773, 0.83", "32.7796, -18.4467, -5.70576, 0.83", "38.2057, -18.5716, -6.46932, 0.55", "40.4977, -18.5442, -6.73716, 0.55", "44.0163, -18.4107, -7.02939, 0.55", "48.2243, -18.0851, -7.20223, 0.55", "51.8815, -17.7453, -7.34294, 0.55", "53.6714, -17.5311, -7.56402, 0.55", "57.1052, -17.035, -8.25338, 0.55", "59.7339, -16.6753, -8.79737, 0.55", "61.6551, -16.4695, -9.19132, 0.55", "66.6608, -16.0963, -10.114, 0.55", "69.088, -15.9875, -10.497, 0.55", "71.5753, -15.8869, -10.6831, 0.55", "73.8865, -15.7304, -10.6679, 0.55", "75.5052, -15.5789, -10.5356, 0.55", "77.6716, -15.3297, -10.3429, 0.55", "81.2224, -14.7835, -9.96655, 0.55", "85.7974, -13.9826, -9.79111, 0.55", "88.6505, -13.3863, -9.84865, 0.28", "91.5829, -12.6964, -10.0685, 0.55", "96.4185, -11.4906, -10.7086, 0.55", "99.0337, -10.7772, -11.2407, 0.55", "101.85, -9.90931, -12.0815, 0.28", "103.547, -9.28413, -12.7038, 0.55", "104.515, -8.86068, -13.0508, 0.28", "105.668, -8.22171, -13.4072, 0.55", "106.941, -7.42305, -13.5985, 0.28", "108.082, -6.73039, -13.6918, 0.28", "109.127, -6.13717, -13.6995, 0.28", "110.855, -5.21461, -13.7293, 0.28", "111.56, -4.83615, -13.7466, 0.28", "114.696, -3.2188, -13.8343, 1.11", "116.15, -2.46955, -13.8772, 0.28", "117.41, -1.80859, -14.0984, 0.28", "118.896, -0.972887, -14.4975, 0.28", "121.178, 0.463048, -15.0667, 0.28", "124.101, 2.38558, -15.7352, 0.28", "126.095, 3.77009, -16.1544, 0.28", "131.785, 7.77556, -17.1913, 0.28", "133.768, 9.18876, -17.4922, 0.28", "137.781, 12.064, -17.9482, 0.83", "139.326, 13.2324, -18.0547, 0.83", "141.136, 14.6331, -18.0452, 0.28", "142.292, 15.4782, -17.9046, 0.28", "143.465, 16.3347, -17.5079, 0.28", "144.44, 16.9902, -17.2731, 0.55", "145.937, 17.9708, -17.2892, 0.28", "146.994, 18.7802, -17.3018, 0.28", "147.673, 19.2755, -17.3102, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.05091, -43.4425, 0.0987351, 0.55", "11.0084, -58.1481, 0.0987351, 0.55", "13.9659, -72.8536, 0.0987351, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.46759, 15.2538, 7.72015, 4.43", "-4.52378, 18.9384, 7.75776, 4.43" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.46759, 15.2538, 7.72015, 1.39", "-6.39221, 20.1788, 4.17665, 1.39", "-7.25862, 23.8681, 1.29707, 1.39", "-7.49906, 26.3693, -0.826902, 1.39", "-7.71795, 29.1784, -3.27976, 1.39", "-7.71097, 31.0475, -5.2358, 1.11", "-7.58068, 34.656, -9.22608, 1.11", "-7.36344, 38.026, -12.8737, 1.11", "-6.78126, 41.3315, -16.8478, 1.11", "-6.27683, 43.512, -19.5612, 1.39", "-4.69603, 49.5468, -27.2232, 1.11", "-4.3776, 50.8996, -28.8982, 1.11", "-3.96099, 53.3984, -31.7754, 1.11", "-3.25567, 58.5951, -37.2621, 1.11", "-2.99396, 60.515, -39.0951, 1.11", "-2.41692, 64.3621, -42.3319, 0.83", "-2.19142, 66.3189, -43.69, 0.83", "-1.82055, 69.5053, -45.8625, 0.83", "-1.40721, 72.2993, -47.8669, 0.28", "-1.32829, 73.0029, -48.3188, 0.55", "-1.11959, 74.7959, -49.4831, 0.55", "-0.815949, 77.9769, -51.4601, 0.28", "-0.586744, 80.5468, -53.069, 1.11", "0.330773, 85.2807, -56.4583, 0.28", "0.78962, 86.9343, -57.7609, 0.28", "1.36377, 88.564, -59.0588, 0.55", "1.84156, 89.5473, -59.8704, 0.55", "2.0791, 89.98, -60.2126, 0.55", "6.53507, 95.7757, -66.0149, 0.28", "7.31851, 96.7439, -67.0445, 0.28", "8.92466, 98.6582, -69.1673, 0.83", "11.8223, 101.928, -73.0501, 0.28", "12.9852, 103.275, -74.6895, 0.83", "19.4644, 111.465, -84.5957, 0.28", "20.5274, 112.831, -86.3836, 0.28", "21.2056, 113.675, -87.5948, 0.83", "25.142, 118.295, -94.8603, 0.28", "25.832, 119.134, -96.2134, 0.55", "26.7143, 120.265, -98.0554, 0.55", "30.9497, 126.303, -107.735, 0.28", "31.5161, 127.051, -109.009, 0.28", "33.7462, 129.955, -114.227, 0.55", "34.3975, 130.828, -115.854, 0.28", "34.8885, 131.411, -117.008, 0.55", "37.624, 134.378, -123.078, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.36017, -20.0406, 8.52729, 2.49", "6.49984, -27.9436, 8.00621, 2.49", "8.12337, -33.9808, 7.18357, 2.22", "9.74708, -40.0186, 6.36083, 2.22", "11.7723, -47.5495, 5.33465, 1.94", "14.5024, -57.7012, 3.95134, 2.22", "16.0878, -63.5967, 3.14801, 2.22", "17.7882, -69.9794, 2.39166, 2.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.36017, -20.0406, 8.52729, 2.49", "-2.41452, -23.6156, -3.39022, 2.49", "-4.16039, -24.5369, -6.46142, 2.49" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.52378, 18.9384, 7.75776, 4.43", "-5.51352, 22.9459, 11.2804, 4.43" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.52378, 18.9384, 7.75776, 1.39", "-6.45494, 20.3187, 9.09195, 1.39", "-8.46563, 21.9911, 10.3684, 1.39", "-11.9457, 25.0615, 12.9757, 1.39", "-13.4656, 26.4939, 14.2062, 0.83", "-14.9343, 27.8813, 15.5594, 0.83", "-18.3844, 31.2143, 18.8613, 1.11", "-20.9965, 34.0517, 21.6564, 1.11", "-24.0439, 37.7492, 25.2365, 1.11", "-24.5976, 38.5561, 25.9347, 1.11", "-26.7035, 42.065, 28.8098, 1.11", "-27.5821, 43.8156, 30.0582, 1.11", "-28.4497, 45.7647, 31.1046, 0.83", "-29.048, 47.3033, 31.7769, 0.83", "-29.3996, 48.6216, 31.9512, 0.83", "-29.7702, 50.1491, 32.0939, 0.83", "-30.1309, 51.8812, 32.1201, 0.83", "-30.443, 53.2567, 32.2059, 0.83", "-31.1749, 56.176, 32.5266, 0.83", "-31.5979, 57.6297, 32.9899, 0.83", "-32.7759, 61.3678, 34.4868, 0.83", "-33.0266, 62.1131, 34.8797, 0.83", "-33.5757, 63.4946, 35.8634, 0.83", "-33.9807, 64.4196, 36.7452, 0.83", "-35.4871, 67.2579, 40.3473, 0.83", "-38.3605, 71.7992, 45.1704, 0.83", "-41.6514, 76.2489, 49.826, 0.83", "-43.8108, 81.2157, 54.5462, 0.83", "-45.0536, 86.2353, 59.5098, 0.83", "-45.3458, 90.5023, 65.31, 0.83", "-44.9102, 93.8874, 71.7091, 0.83", "-45.9535, 97.0992, 78.1521, 0.83", "-47.9632, 101.276, 83.7026, 0.83", "-49.0764, 103.955, 90.4014, 0.83", "-50.8198, 107.37, 96.5783, 0.83", "-52.4015, 110.815, 102.779, 0.83", "-53.5405, 115.083, 108.485, 0.83", "-54.0836, 120.142, 113.516, 0.83", "-55.2893, 124.808, 118.854, 0.83", "-56.8858, 129.535, 124.035, 0.83", "-58.8852, 134.79, 128.471, 0.83", "-60.4085, 139.47, 133.718, 0.83", "-60.8127, 144.353, 138.948, 0.83", "-60.9082, 148.703, 144.684, 0.83", "-61.9985, 152.364, 150.847, 0.83", "-62.8407, 155.626, 157.289, 0.83", "-63.0081, 158.601, 163.93, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "17.7882, -69.9794, 2.39166, 2.22", "16.7562, -71.6596, 9.03776, 2.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "17.7882, -69.9794, 2.39166, 0.83", "26.2819, -74.9889, -10.8654, 0.83", "28.6304, -76.4821, -14.4708, 0.83", "30.821, -77.8763, -17.5872, 0.83", "35.3964, -80.8488, -23.7202, 0.55", "42.0079, -85.1565, -31.9762, 0.55", "43.4205, -86.1386, -33.8187, 0.55", "48.3098, -89.8184, -39.9701, 0.28", "50.7783, -91.8676, -43.3728, 0.28", "52.146, -93.052, -45.3605, 0.55", "54.1824, -94.905, -48.3025, 0.55", "59.962, -100.26, -56.4255, 0.83", "64.5148, -104.423, -62.8361, 0.28", "67.8863, -107.432, -67.2848, 0.28", "71.1365, -110.417, -71.7827, 0.28", "73.656, -112.709, -75.1309, 0.28", "78.1725, -116.692, -80.8341, 0.28", "81.1096, -119.162, -84.3042, 0.55", "85.1868, -122.667, -89.4734, 0.83", "92.6678, -129.36, -100.405, 0.28", "95.7561, -132.162, -105.171, 0.28", "99.223, -135.354, -110.748, 0.28", "103.564, -139.274, -117.62, 0.28", "108.196, -143.85, -125.291, 0.28", "112.93, -148.828, -132.936, 0.28", "114.91, -151.077, -135.938, 0.28", "115.698, -152.016, -137.06, 0.28", "118.052, -154.783, -139.946, 0.83", "124.419, -161.971, -146.521, 0.28", "128.53, -166.114, -149.564, 0.28", "136.917, -173.79, -154.239, 0.28", "143.119, -178.872, -157.103, 0.28", "146.974, -181.614, -158.517, 0.28", "149.187, -182.899, -159.084, 0.83", "160.897, -187.678, -160.15, 0.28", "163.147, -188.436, -160.136, 0.83", "167.802, -189.764, -159.727, 0.28", "171.338, -190.801, -159.481, 0.83", "176.309, -192.366, -159.482, 0.28", "183.171, -194.627, -160.026, 0.83", "187.85, -196.313, -160.861, 0.28", "191.876, -197.828, -161.62, 0.28", "196.299, -199.655, -162.528, 0.83", "203.765, -203.077, -164.179, 0.28", "205.654, -204.046, -164.64, 0.55", "209.053, -205.984, -165.581, 0.28", "213.301, -208.532, -166.569, 0.55", "220.278, -212.969, -167.949, 0.28", "223.958, -215.549, -168.73, 1.11", "227.865, -218.516, -169.602, 0.28", "233.156, -222.584, -170.859, 0.28", "238.658, -226.803, -172.444, 0.28", "241.12, -228.851, -173.602, 0.55", "248.031, -235.205, -178.413, 0.28", "249.328, -236.439, -179.486, 0.55", "250.399, -237.538, -180.596, 0.28", "252.893, -240.484, -184.155, 0.28", "257.795, -247.551, -194.165, 0.28", "259.369, -250.193, -198.331, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.16039, -24.5369, -6.46142, 2.22", "-4.70911, -31.6365, -4.57163, 2.22", "-5.23264, -38.41, -2.76862, 1.94", "-5.31865, -39.523, -2.47238, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.16039, -24.5369, -6.46142, 1.11", "-9.75578, -24.0762, -3.20939, 1.11", "-11.0635, -23.96, -2.64748, 0.83", "-12.9199, -23.7926, -2.13282, 0.83", "-15.7059, -23.4982, -1.67233, 0.83", "-17.1324, -23.316, -1.54114, 0.83", "-18.9346, -23.0744, -1.46975, 0.83", "-22.7076, -22.6988, -2.13489, 0.83", "-24.7589, -22.4525, -2.32553, 0.83", "-26.3034, -22.2575, -2.24931, 0.83", "-27.4769, -22.1186, -2.1608, 0.83", "-28.8811, -22.0347, -1.81934, 0.83", "-29.9738, -22.0138, -1.43957, 0.83", "-34.2777, -21.9522, 0.475042, 0.83", "-36.7328, -21.9258, 1.60576, 0.83", "-39.3394, -21.9662, 2.78196, 0.55", "-41.9567, -22.078, 4.02267, 0.55", "-43.1497, -22.1115, 4.56308, 0.55", "-44.4281, -22.1135, 5.04386, 0.55", "-45.2522, -22.1138, 5.22687, 0.55", "-46.5341, -22.117, 5.50528, 0.55", "-49.2234, -22.1403, 6.41524, 0.55", "-50.5279, -22.1897, 6.83692, 0.55", "-51.3757, -22.2823, 7.14791, 0.55", "-52.1627, -22.3971, 7.42043, 0.55", "-53.3985, -22.5621, 7.77979, 0.55", "-55.9663, -22.769, 8.46231, 0.55", "-57.2443, -22.8332, 8.71767, 0.55", "-58.727, -22.8679, 9.17336, 0.55", "-60.2774, -22.8327, 9.73371, 0.55", "-61.6644, -22.7403, 10.2624, 0.55", "-63.2276, -22.5863, 10.9856, 0.55", "-64.8592, -22.4368, 11.8152, 0.55", "-67.9645, -22.0354, 13.5991, 0.55", "-68.8722, -21.907, 14.2084, 0.55", "-69.8415, -21.8006, 14.9696, 0.55", "-71.8104, -21.7068, 16.7072, 0.55", "-72.7735, -21.7632, 17.5871, 0.55", "-79.4092, -21.8417, 20.7624, 0.55", "-85.7849, -21.5347, 24.4321, 0.55", "-92.0163, -21.3392, 28.3466, 0.55", "-97.8464, -22.0374, 32.7582, 0.55", "-103.583, -22.1051, 37.3659, 0.55", "-109.346, -22.9096, 41.8427, 0.55", "-114.443, -24.1752, 46.9557, 0.55", "-118.544, -25.186, 52.9599, 0.55", "-123.677, -26.1821, 58.1086, 0.55", "-128.592, -27.151, 63.4726, 0.55", "-133.64, -27.7894, 68.7732, 0.55", "-139.297, -27.5739, 73.4806, 0.55", "-145.742, -25.7965, 76.571, 0.55", "-152.513, -24.9085, 79.3364, 0.55", "-158.656, -23.3818, 83.105, 0.55", "-164.328, -22.1989, 87.6565, 0.55", "-169.498, -19.9523, 92.386, 0.55", "-174.265, -18.3606, 97.7705, 0.55", "-178.183, -16.8381, 103.819, 0.55", "-182.323, -14.3307, 109.35, 0.55", "-186.237, -10.9917, 114.564, 0.55", "-190.366, -7.51861, 119.511, 0.55", "-194.009, -4.31168, 125.002, 0.55", "-198.556, -1.86744, 130.237, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-5.51352, 22.9459, 11.2804, 2.49", "-6.51528, 24.1969, 11.4549, 2.49", "-7.42041, 25.3048, 11.7294, 1.11", "-8.533, 26.7198, 12.0731, 1.11", "-9.90339, 28.3811, 12.5342, 1.11", "-11.0885, 29.7334, 13.0275, 1.11", "-14.2625, 33.1659, 14.6542, 0.83", "-15.0208, 33.9651, 15.14, 0.83", "-16.0138, 34.9707, 15.9558, 0.83", "-17.511, 36.5251, 17.4778, 0.83", "-19.0623, 38.3075, 19.3753, 0.83", "-20.5492, 39.979, 21.3328, 0.83", "-21.2662, 40.8159, 22.2806, 0.83", "-22.6528, 42.4988, 24.1638, 0.83", "-23.3046, 43.2986, 25.0841, 0.83", "-23.9022, 44.1667, 25.9602, 0.83", "-24.8254, 45.7504, 27.351, 0.83", "-25.2616, 46.6014, 28.0494, 0.83", "-25.8995, 47.9525, 29.1744, 0.83", "-27.3277, 51.6318, 32.0999, 0.83", "-27.6683, 52.8144, 33.1575, 0.83", "-27.7295, 53.739, 34.0584, 0.83", "-27.5561, 54.4416, 34.7893, 0.83", "-27.2094, 55.0693, 35.5233, 0.83", "-26.7138, 55.5804, 36.1644, 0.55", "-25.7946, 56.2023, 36.8208, 0.55", "-24.6937, 56.8727, 37.5833, 0.28", "-23.781, 57.4463, 38.1892, 0.28", "-22.9293, 58.0028, 38.7295, 0.28", "-22.2824, 58.4169, 39.1242, 0.28", "-21.0438, 59.1012, 39.8524, 0.28", "-20.3398, 59.458, 40.316, 0.28", "-22.7189, 64.246, 45.3666, 0.28", "-25.0972, 68.3588, 51.0247, 0.28", "-27.1319, 72.7373, 56.5876, 0.28", "-29.0693, 77.1501, 62.1526, 0.28", "-29.5187, 81.911, 67.6761, 0.28", "-30.1868, 87.7829, 71.8787, 0.28", "-29.3523, 93.9874, 75.4385, 0.28", "-29.3937, 100.223, 79.0755, 0.28", "-30.5912, 106.506, 82.4891, 0.28", "-32.2697, 112.088, 86.8753, 0.28", "-35.0641, 117.447, 91.0426, 0.28", "-36.4638, 123.468, 94.8619, 0.28", "-37.1531, 129.431, 98.9245, 0.28", "-37.8174, 134.157, 104.466, 0.28", "-37.6333, 138.184, 110.594, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.51352, 22.9459, 11.2804, 1.94", "-4.23742, 24.2898, 12.5393, 1.94", "-3.29015, 25.2875, 13.4738, 1.94", "-2.05144, 26.592, 14.6958, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.7562, -71.6596, 9.03776, 1.94", "17.0572, -81.495, 7.29435, 1.94", "17.643, -90.2117, 6.37073, 1.39", "18.0989, -94.5275, 6.07571, 1.11", "18.9305, -100.945, 5.74419, 1.11", "19.8312, -107.275, 5.38813, 1.11", "21.0263, -116.008, 4.99912, 1.11", "22.6822, -126.311, 5.2313, 0.83", "23.9974, -135.37, 6.13916, 0.83", "24.4515, -139.096, 6.94055, 0.83", "24.8174, -143.03, 8.28049, 0.83", "25.2428, -146.907, 9.95532, 0.83", "25.7486, -152.633, 12.8385, 0.83", "26.1113, -161.346, 17.218, 0.83", "26.2302, -166.89, 20.0648, 0.83", "26.3676, -170.3, 21.6344, 0.83", "26.7149, -177.725, 24.9654, 0.83", "27.1087, -184.488, 27.5604, 0.83", "27.3059, -187.729, 28.6884, 0.83", "27.4993, -189.97, 29.4229, 0.83", "27.6565, -195.207, 31.1101, 0.83", "27.4368, -203.262, 33.9211, 0.83", "27.2649, -205.644, 34.8683, 0.83", "26.9049, -211.971, 37.7841, 0.83", "26.7641, -216.018, 39.7266, 0.83", "26.9601, -223.251, 43.3408, 0.83", "27.1995, -227.503, 45.4438, 0.83", "27.8058, -231.983, 47.6697, 1.39", "28.7622, -236.74, 50.5114, 0.83", "29.3743, -239.19, 52.0914, 0.55", "31.0396, -243.938, 55.8332, 0.55", "32.0454, -245.896, 57.7626, 0.55", "35.1175, -250.945, 63.2163, 0.55", "37.1735, -254.4, 66.9352, 0.55", "36.644, -264.98, 70.5566, 0.55", "37.9665, -275.793, 73.103, 0.55", "38.18, -286.858, 74.5987, 0.55", "37.7469, -297.67, 77.4038, 0.55", "38.8601, -308.346, 80.5826, 0.55", "41.412, -319.022, 82.8464, 0.55", "43.428, -329.36, 86.7308, 0.55", "47.8648, -338.926, 90.8052, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "16.7562, -71.6596, 9.03776, 0.55", "10.7676, -81.0255, 0.908239, 0.55", "5.80456, -88.5309, -5.1609, 0.55", "3.786, -91.4896, -7.35403, 0.55", "1.76368, -94.68, -9.48164, 0.55", "-0.660018, -98.9788, -12.0675, 0.55", "-3.78629, -104.734, -15.8189, 0.55", "-5.80583, -108.854, -18.2119, 0.55", "-7.21816, -111.865, -20.078, 0.55", "-9.46726, -116.826, -23.2032, 0.55", "-13.551, -125.615, -28.675, 0.28", "-17.4884, -134.22, -33.7856, 1.66", "-20.0017, -139.351, -36.3275, 0.28", "-22.3787, -143.914, -38.2664, 1.94", "-26.9533, -152.174, -41.1512, 0.28", "-29.1152, -155.887, -42.1205, 1.39", "-30.4004, -158.104, -42.4773, 1.39", "-37.0136, -169.93, -43.4039, 0.28", "-41.7187, -178.542, -43.8511, 0.28", "-44.1015, -183.139, -44.6473, 0.83", "-46.8999, -189.169, -46.4557, 0.28", "-47.9983, -192.112, -47.6799, 0.83", "-48.5466, -193.894, -48.5877, 0.28", "-49.1447, -196.463, -50.1006, 1.11", "-52.8078, -214.912, -60.8963, 0.28", "-53.3841, -218.041, -62.6529, 0.55", "-55.3365, -229.314, -68.5265, 0.28", "-55.6429, -231.568, -69.5028, 0.55", "-56.2685, -237.641, -71.7072, 0.28", "-56.536, -243.542, -73.0825, 0.83", "-56.5155, -245.114, -73.0869, 0.83", "-56.1133, -252.15, -72.7809, 0.28", "-55.3472, -259.421, -71.7893, 0.28", "-54.5308, -265.169, -70.8121, 0.55", "-52.6162, -276.143, -69.1048, 0.28", "-51.1959, -283.978, -68.3653, 0.55", "-49.7276, -291.582, -67.7214, 0.28", "-48.3947, -298.186, -67.1358, 0.83", "-47.6976, -301.786, -67.0085, 0.28", "-46.7421, -307.038, -67.1413, 0.83", "-44.4614, -319.89, -68.1514, 0.28", "-43.8278, -323.688, -68.6084, 0.55", "-43.516, -325.416, -68.8175, 0.28", "-42.2419, -331.075, -69.5054, 0.83", "-39.2036, -342.118, -69.9942, 0.28", "-36.8713, -348.808, -69.5819, 1.11", "-34.46, -354.311, -68.6813, 0.28", "-32.7458, -357.804, -67.9336, 0.28", "-30.2529, -362.443, -66.6718, 0.28", "-28.104, -366.079, -65.3306, 0.28", "-27.2968, -367.634, -64.8825, 0.55", "-26.7889, -370.765, -64.8346, 0.28", "-26.9338, -373.235, -65.004, 0.55", "-27.3101, -374.661, -65.2124, 0.28", "-28.3418, -377.16, -65.7816, 0.55", "-32.8157, -386.334, -68.7391, 0.28", "-33.6657, -387.797, -69.2887, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.31865, -39.523, -2.47238, 1.39", "-6.5907, -45.7814, -2.88228, 1.39", "-7.20617, -48.4942, -3.05151, 1.39", "-7.91389, -51.7211, -2.78386, 1.39", "-9.06173, -57.2948, -1.97141, 1.39", "-9.8356, -61.2965, -1.2961, 1.39", "-10.3567, -64.3569, -0.7611, 1.39", "-11.109, -68.4442, 3.40616E-5, 1.11", "-12.4141, -76.6294, 1.8147, 1.11", "-12.9014, -81.0324, 2.88943, 1.11", "-13.2896, -86.5631, 4.39156, 1.11", "-13.4949, -90.0912, 5.35425, 1.39", "-13.7763, -94.7007, 6.4809, 1.39", "-14.3855, -104.025, 8.47904, 0.83", "-14.6383, -106.942, 8.95636, 0.83", "-14.9869, -109.947, 9.45625, 1.11", "-15.5217, -113.467, 10.0313, 0.83", "-16.4571, -118.5, 10.7762, 1.11", "-17.0638, -121.592, 11.1365, 0.83", "-17.6523, -124.023, 11.3935, 0.83", "-18.2113, -126.469, 11.6278, 0.83", "-18.6203, -129.055, 11.8823, 0.83", "-18.8201, -131.51, 12.1508, 0.83", "-18.8565, -133.004, 12.3615, 0.83", "-18.7974, -135.119, 12.6316, 0.83", "-18.6025, -138.426, 13.0642, 0.83", "-18.2843, -142.848, 13.7029, 0.83", "-18.0048, -145.935, 14.1737, 1.11", "-17.7896, -148.591, 14.6216, 0.83", "-17.5123, -151.929, 15.0618, 0.83", "-17.4283, -152.822, 15.1521, 0.83", "-17.2823, -155.075, 15.2697, 0.83", "-17.1506, -157.322, 15.2615, 0.83", "-16.8037, -162.478, 15.1435, 0.83", "-16.5558, -166.624, 14.9914, 0.83", "-16.4357, -168.438, 14.9033, 0.83", "-16.236, -171.467, 14.6221, 0.83", "-16.0313, -174.811, 14.2243, 0.83", "-15.9045, -177.788, 13.8274, 0.83", "-15.7814, -179.791, 13.5106, 0.83", "-15.6279, -182.193, 13.2732, 0.83", "-15.328, -185.045, 12.9404, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.31865, -39.523, -2.47238, 0.83", "-9.29922, -40.8615, 2.47753, 0.83", "-9.73939, -41.025, 2.94926, 0.83", "-10.6915, -41.381, 3.82245, 0.83", "-13.6183, -42.3693, 6.16928, 0.83", "-14.8919, -42.7854, 7.04243, 0.83", "-16.1489, -43.2011, 7.76306, 0.83", "-17.1112, -43.5699, 8.01889, 0.83", "-18.2664, -44.0126, 8.22307, 0.83", "-19.3756, -44.4144, 8.30548, 0.83", "-20.9401, -45.0361, 8.34938, 0.83", "-22.6475, -45.7696, 8.48836, 0.83", "-24.0727, -46.4368, 8.65908, 0.83", "-25.643, -47.2568, 8.88016, 0.83", "-26.8894, -47.9716, 9.07007, 0.83", "-29.1116, -49.2832, 9.41502, 0.83", "-30.4629, -50.061, 9.62195, 0.83", "-32.0571, -50.9781, 9.85305, 0.83", "-34.3004, -52.2809, 10.0364, 0.83", "-35.5889, -53.0341, 10.0435, 0.83", "-36.4704, -53.6072, 9.98113, 0.83", "-37.3845, -54.2293, 9.83713, 0.83", "-38.2973, -54.9018, 9.56956, 0.83", "-39.9861, -56.2475, 8.87085, 0.83", "-41.4949, -57.5154, 8.08854, 0.83", "-43.0238, -58.8215, 7.29768, 0.83", "-43.6889, -59.3816, 6.99661, 0.83", "-46.4163, -61.5972, 5.94634, 0.83", "-47.6488, -62.5651, 5.54816, 0.83", "-49.3393, -63.8876, 4.98893, 0.83", "-51.6041, -65.6929, 4.21396, 0.83", "-54.5336, -67.9058, 3.26495, 0.55", "-56.2551, -69.2317, 2.76471, 0.55", "-57.2807, -70.0269, 2.52055, 0.55", "-60.4486, -72.3772, 1.73964, 0.55", "-62.4812, -73.8884, 0.959481, 0.55", "-64.0636, -75.0263, 0.150735, 1.11", "-65.523, -76.0286, -0.689776, 1.11", "-66.1605, -76.468, -1.03776, 1.11", "-68.0182, -77.7466, -2.10139, 0.28", "-72.6089, -80.8359, -4.6749, 0.83", "-75.0942, -82.5169, -6.16802, 0.28", "-76.6433, -83.5802, -6.97877, 0.83", "-78.842, -84.9789, -7.85918, 0.55", "-81.3551, -86.5092, -8.38808, 0.55", "-82.6502, -87.2886, -8.39695, 0.83", "-83.8358, -87.8611, -7.92763, 0.55", "-87.9674, -89.4975, -5.35531, 0.55", "-88.9289, -89.7621, -4.57223, 0.55", "-90.091, -89.9394, -3.47787, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-37.6333, 138.184, 110.594, 0.28", "-39.7455, 143.656, 115.322, 0.28", "-41.4968, 148.547, 120.807, 0.28", "-41.899, 153.899, 126.04, 0.28", "-42.3302, 159.063, 131.474, 0.28", "-43.1937, 163.89, 137.198, 0.28", "-45.1335, 168.636, 142.763, 0.28", "-47.9551, 172.835, 148.458, 0.28", "-49.6207, 177.723, 153.969, 0.28", "-50.6874, 182.931, 159.288, 0.28", "-52.52, 188.772, 163.632, 0.28", "-52.4468, 194.986, 167.72, 0.28", "-52.4825, 201.171, 171.859, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-37.6333, 138.184, 110.594, 0.28", "-37.2215, 142.804, 114.865, 0.28", "-37.1416, 147.115, 119.498, 0.28", "-36.6468, 150.85, 124.611, 0.28", "-35.1102, 154.642, 129.44, 0.28", "-34.2688, 157.92, 134.837, 0.28", "-32.6349, 160.887, 140.238, 0.28", "-30.9223, 163.862, 145.609, 0.28", "-29.6032, 165.833, 151.592, 0.28", "-26.9701, 167.492, 157.227, 0.28", "-23.3697, 169.326, 162.219, 0.28", "-19.8046, 171.588, 167.027, 0.28", "-16.0393, 173.601, 171.811, 0.28", "-12.7936, 175.32, 177.088, 0.28", "-9.42414, 176.816, 182.371, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.05144, 26.592, 14.6958, 1.66", "-3.34696, 20.8539, 22.4726, 1.66", "-4.06391, 17.6785, 26.7763, 1.66", "-4.51597, 15.6762, 29.4899, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.05144, 26.592, 14.6958, 0.83", "0.837666, 27.1763, 15.6146, 0.83", "3.06595, 27.6866, 16.5637, 0.83", "5.29857, 28.3742, 17.3933, 0.83", "8.84172, 29.8452, 18.7004, 0.83", "11.078, 30.9642, 19.5469, 0.83", "13.9831, 32.4407, 20.5644, 0.83", "16.7111, 33.713, 20.9968, 0.83", "21.8742, 36.0171, 21.3472, 0.83", "25.3374, 37.5941, 21.3598, 0.83", "27.3507, 38.5662, 21.3702, 0.83", "31.0982, 40.4349, 21.0722, 0.83", "39.767, 44.9322, 19.7229, 0.83", "41.8774, 46.035, 19.3366, 0.83", "44.4285, 47.3122, 18.6879, 0.83", "47.3758, 48.8615, 17.949, 0.55", "53.5829, 52.5526, 16.4645, 0.55", "55.6766, 54.1483, 16.0479, 0.55", "57.049, 55.4147, 15.9383, 0.55", "64.6059, 62.3698, 15.4777, 0.55", "70.0517, 67.2879, 15.5759, 0.55", "71.8546, 68.9896, 15.781, 0.83", "73.403, 70.36, 15.9535, 0.83", "75.4811, 72.0207, 15.9539, 0.83", "76.7921, 73.0217, 15.9205, 0.83", "78.7347, 74.4097, 15.6882, 0.55", "80.8974, 75.819, 15.2366, 0.55", "88.9698, 81.2424, 13.6242, 0.55", "90.3266, 82.1806, 13.366, 0.55", "94.0583, 85.0104, 12.7313, 1.11", "99.1228, 89.1056, 12.1161, 0.55", "100.228, 90.0625, 12.0779, 0.55", "103.352, 93.0054, 12.4563, 0.83", "105.043, 94.9286, 13.0829, 0.28", "107.156, 97.5024, 14.0375, 0.55", "108.177, 98.7215, 14.4321, 0.28", "109.616, 100.504, 15.1865, 0.28", "111.386, 102.581, 15.9788, 0.28", "111.915, 103.12, 16.1463, 0.28", "113.129, 104.211, 16.3587, 0.55", "119.73, 109.129, 16.3704, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.328, -185.045, 12.9404, 0.83", "-15.169, -189.788, 12.374, 0.83", "-15.0401, -191.835, 12.1512, 0.83", "-14.6797, -197.087, 11.6287, 0.83", "-14.13, -203.806, 10.7728, 0.83", "-13.8217, -208.444, 10.1419, 0.83", "-13.6917, -210.898, 9.88142, 0.83", "-13.587, -213.897, 9.62235, 0.83", "-13.5845, -215.836, 9.58569, 0.83", "-13.7028, -221.027, 9.861, 0.83", "-13.8411, -225.359, 10.435, 0.83", "-13.9661, -229.593, 11.0852, 0.55", "-14.1716, -233.768, 11.7851, 0.55", "-14.4533, -239.665, 12.4594, 0.83", "-14.4848, -241.882, 12.6571, 0.83", "-14.5002, -244.502, 12.8338, 0.83", "-14.5386, -246.362, 12.7246, 0.83", "-14.6795, -248.959, 12.2856, 0.83", "-15.2134, -255.635, 10.81, 0.83", "-15.6282, -259.221, 10.0508, 1.39", "-15.9483, -261.367, 9.64644, 1.39", "-17.4698, -269.458, 8.38428, 0.83", "-17.9849, -271.921, 8.10251, 0.83", "-18.9593, -275.786, 7.84258, 1.39", "-20.2855, -279.775, 7.8001, 0.83", "-20.8805, -281.318, 7.77103, 0.28", "-22.3641, -284.907, 7.61641, 0.83", "-23.8447, -288.189, 7.43447, 0.83", "-25.557, -291.793, 6.95743, 1.11", "-27.6092, -295.846, 6.3042, 0.28", "-29.504, -299.465, 5.60424, 0.28", "-32.8512, -305.776, 4.22432, 0.28", "-34.8358, -309.485, 3.26855, 0.28", "-37.5087, -314.708, 1.70441, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-15.328, -185.045, 12.9404, 0.28", "-12.5778, -185.589, 12.5212, 0.28", "-10.8143, -185.942, 12.4973, 0.28", "-8.80067, -186.341, 12.594, 0.28", "-4.62299, -187.078, 13.5377, 0.28", "-3.35643, -187.249, 14.0306, 0.28", "0.678759, -187.689, 15.7867, 0.28", "2.83498, -187.869, 16.8698, 0.28", "3.97143, -187.949, 17.4904, 0.28", "8.31142, -188.236, 20.023, 0.28", "12.1285, -188.545, 22.3395, 0.28", "15.2808, -188.825, 24.0569, 0.28", "17.1278, -188.996, 24.9399, 0.28", "18.5982, -189.136, 25.6313, 0.28", "19.7696, -189.273, 26.1102, 0.28", "21.8855, -189.651, 26.5416, 0.28", "23.1907, -190.032, 26.6265, 0.28", "31.1158, -190.983, 31.1684, 0.28", "39.7289, -191.239, 34.3539, 0.28", "48.397, -193.252, 36.5724, 0.28", "56.878, -196.241, 38.2484, 0.28", "64.1637, -200.423, 41.7333, 0.28", "71.8023, -203.508, 45.6907, 0.28", "79.6067, -206.404, 49.4788, 0.28", "87.187, -209.436, 53.5891, 0.28", "94.3622, -212.303, 58.4788, 0.28", "100.922, -214.033, 64.6488, 0.28", "106.779, -214.348, 71.7187, 0.28", "111.296, -214.025, 79.7115, 0.28", "116.117, -215.49, 87.3762, 0.28", "118.959, -217.447, 95.8596, 0.28", "123.566, -218.249, 103.762, 0.28", "127.883, -218.14, 111.87, 0.28", "132.225, -219.659, 119.804, 0.28", "137.377, -219.579, 127.409, 0.28", "143.364, -219.065, 134.357, 0.28", "149.745, -219.796, 140.922, 0.28", "157.062, -221.24, 146.269, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-52.4825, 201.171, 171.859, 0.28", "-59.2142, 207.168, 181.736, 0.28", "-67.1851, 211.351, 191.747, 0.28", "-77.1844, 213.559, 200.599, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-52.4825, 201.171, 171.859, 0.28", "-41.6883, 204.194, 167.023, 0.28", "-31.3247, 209.195, 163.205, 0.28", "-20.4013, 213.72, 160.491, 0.28", "-10.7723, 220.367, 157.712, 0.28", "-1.34564, 227.276, 154.944, 0.28", "7.58584, 234.324, 151.056, 0.28", "15.8464, 240.57, 144.789, 0.28", "25.5525, 243.884, 138.153, 0.28", "34.1906, 247.8, 130.463, 0.28", "44.2364, 249.311, 123.611, 0.28", "52.9651, 250.976, 115.168, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-9.42414, 176.816, 182.371, 0.28", "-15.3214, 171.725, 189.166, 0.28", "-19.6358, 166.793, 197.21, 0.28", "-23.1379, 163.483, 206.447, 0.28", "-24.6622, 160.56, 216.335, 0.28", "-27.9378, 158.209, 225.946, 0.28", "-31.5942, 157.361, 235.659, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-9.42414, 176.816, 182.371, 0.28", "-4.77693, 181.857, 172.155, 0.28", "0.397507, 185.401, 161.543, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-4.51597, 15.6762, 29.4899, 1.11", "3.79613, 12.7218, 33.7278, 1.11", "7.4011, 11.4327, 35.9426, 1.11", "14.7221, 9.10044, 40.9847, 1.11", "19.3859, 7.85575, 44.626, 1.11", "23.0154, 7.03943, 47.657, 1.11", "29.7799, 5.53505, 53.4683, 1.11", "36.9297, 4.27487, 60.2544, 1.11", "40.0759, 3.94615, 62.9096, 1.11", "44.3433, 3.8672, 65.7142, 0.83", "47.1569, 3.88644, 67.5186, 0.83", "49.1333, 3.80729, 68.7496, 0.83", "54.8546, 3.36086, 72.3087, 0.83", "57.0785, 3.18596, 73.366, 0.83", "61.8113, 2.70266, 75.6934, 0.83", "65.143, 2.34635, 77.4334, 0.83", "67.4137, 2.11875, 78.8255, 0.83", "69.6827, 1.88267, 80.4658, 0.83", "72.2114, 1.52476, 82.6942, 0.83", "74.5343, 1.2585, 84.64, 0.83", "76.2614, 1.15455, 86.0206, 0.83", "78.4104, 1.13363, 87.4888, 0.83", "80.2371, 1.14222, 88.6197, 0.83", "82.573, 1.13692, 89.9251, 0.83", "85.7467, 1.21429, 91.5665, 0.83", "88.0152, 1.35805, 92.7703, 0.83", "90.5628, 1.65418, 94.187, 0.83", "92.8348, 2.06509, 95.5385, 0.83", "94.6576, 2.50451, 96.719, 0.83", "97.0076, 3.09839, 98.4034, 0.83", "98.5031, 3.45539, 99.6218, 0.55", "99.2952, 3.65982, 100.271, 0.55", "100.575, 3.97568, 101.079, 0.55", "101.493, 4.16669, 101.5, 0.55", "103.576, 4.56104, 102.214, 0.55", "105.2, 4.77143, 102.331, 0.55", "106.715, 4.89007, 102.255, 0.55", "112.308, 5.01193, 101.688, 0.55", "114.284, 4.95192, 101.441, 0.55", "116.113, 4.833, 101.23, 0.55", "123.444, 4.11515, 100.573, 0.55", "124.994, 3.88758, 100.509, 0.55", "127.075, 3.39351, 100.598, 0.55", "128.861, 2.66909, 101.073, 0.55", "130.935, 1.43972, 101.964, 0.55", "132.555, 0.171761, 103.059, 0.55", "133.337, -0.554026, 103.84, 0.83", "134.629, -1.69829, 105.113, 0.83", "137.337, -4.11643, 107.993, 0.83", "138.714, -5.26783, 109.48, 0.55", "140.323, -6.43331, 111.165, 0.55", "142.279, -7.55167, 113.118, 0.55", "143.978, -8.29708, 114.711, 0.55", "146.238, -9.11886, 116.969, 0.55", "149.043, -9.91218, 119.802, 0.83", "151.757, -10.5157, 122.756, 0.55", "153.908, -10.8633, 124.88, 0.55", "156.109, -11.0851, 126.817, 0.55", "160.303, -11.3275, 129.96, 0.55", "162.521, -11.3959, 131.338, 0.55", "164.968, -11.499, 132.703, 0.55", "171.259, -11.9252, 136.506, 0.55", "173.767, -12.1159, 138.092, 0.55", "179.305, -12.5558, 141.714, 1.11", "180.76, -12.7222, 142.89, 0.55", "185.062, -13.4024, 147.466, 0.83", "188.507, -14.0972, 152.125, 0.55", "189.633, -14.3464, 153.992, 0.55", "191.268, -14.6868, 156.854, 0.55", "195.274, -15.492, 163.994, 0.55", "196.251, -15.6668, 165.557, 0.28", "198.629, -15.999, 168.839, 0.28", "200.912, -16.2076, 171.34, 0.28", "203.826, -16.3897, 174.154, 0.83", "206.54, -16.414, 176.358, 0.55", "208.896, -16.3399, 177.878, 0.55", "211.249, -16.2592, 179.392, 0.55", "213.646, -16.1032, 180.95, 0.55", "215.186, -15.9322, 182.015, 0.28", "216.233, -15.7638, 182.801, 0.28", "217.918, -15.4431, 184.18, 0.55", "220.091, -15.0536, 186.094, 0.55", "221.817, -14.8129, 187.624, 0.55", "223.168, -14.6865, 188.829, 0.55", "225.342, -14.4895, 190.802, 0.55", "227.034, -14.3457, 192.367, 0.55", "238.983, -14.9085, 198.175, 0.55", "250.555, -13.9872, 204.582, 0.55", "261.091, -14.3354, 212.661, 0.55", "269.955, -17.3578, 222.127, 0.55", "280.557, -22.0191, 228.68, 0.55", "291.716, -27.6277, 233.19, 0.55", "303.553, -31.2815, 238.066, 0.55", "314.852, -35.3775, 243.786, 0.55", "326.793, -38.0122, 249.06, 0.55", "338.084, -39.096, 256.008, 0.55", "348.298, -38.8401, 264.466, 0.55", "356.635, -37.9931, 274.708, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.51597, 15.6762, 29.4899, 1.11", "-5.72911, 17.274, 32.3526, 1.11", "-7.2324, 19.6327, 36.377, 1.11", "-7.95926, 20.7413, 38.4433, 1.11", "-8.62999, 21.8791, 40.5794, 0.83", "-9.68826, 23.9988, 44.4285, 0.83", "-10.513, 25.5376, 47.3193, 0.83", "-11.2949, 26.8833, 49.8532, 0.83", "-12.2134, 29.0987, 53.5566, 0.55", "-12.4886, 29.8397, 54.8943, 0.55", "-12.7356, 30.7292, 56.3566, 0.55", "-13.1584, 33.0121, 59.3526, 0.55", "-14.037, 36.6486, 63.5998, 0.55", "-14.3642, 37.3402, 64.5867, 0.55", "-15.9898, 40.4933, 68.6306, 0.55", "-16.2892, 40.7508, 69.1921, 0.55", "-16.6241, 40.8626, 69.7804, 0.55", "-17.5331, 44.9841, 76.2252, 0.55", "-16.7527, 50.0828, 81.8593, 0.55", "-16.1639, 55.9951, 86.5795, 0.55", "-15.6052, 62.3473, 90.6472, 0.55", "-14.883, 68.1938, 95.4369, 0.55", "-12.9694, 73.1314, 100.962, 0.55", "-12.1974, 78.4408, 106.38, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "119.73, 109.129, 16.3704, 0.28", "114.395, 109.823, 17.7207, 0.28", "112.836, 110.026, 18.1153, 0.28", "111.283, 110.228, 18.5082, 0.28", "109.809, 110.42, 18.8812, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "119.73, 109.129, 16.3704, 0.55", "124.464, 113.349, 11.4524, 0.55", "125.395, 114.269, 10.7995, 0.55", "132.146, 120.893, 7.88664, 0.55", "133.383, 122.167, 7.63444, 0.28", "134.71, 123.597, 7.59765, 0.28", "134.71, 123.597, 7.59765, 0.28", "137.589, 126.283, 7.26509, 0.83", "140.746, 129.046, 6.9887, 0.28", "143.23, 131.332, 7.34713, 0.28", "144.699, 132.697, 7.65499, 0.55", "146.741, 134.65, 8.22443, 0.28", "156.235, 143.416, 9.60077, 0.28", "157.109, 144.235, 9.65245, 0.28", "163.458, 150.539, 9.81581, 0.55", "165.318, 152.452, 9.82222, 0.55", "166.797, 154.08, 9.88258, 0.28", "173.25, 161.952, 10.6444, 0.28", "175.608, 165.242, 11.3458, 0.28", "176.712, 166.711, 11.5737, 0.28", "179.401, 170.035, 11.8673, 0.83", "180.23, 171.093, 12.0668, 0.28", "181.185, 172.385, 12.5398, 0.55", "181.835, 173.331, 13.1754, 0.28", "183.381, 175.088, 14.5891, 0.28", "184.44, 176.056, 15.5077, 0.28", "185.882, 177.117, 16.7048, 0.55", "187.124, 177.839, 17.4854, 0.55", "190.789, 179.451, 19.309, 0.28", "193.992, 180.578, 20.3758, 0.83", "196.023, 181.233, 20.8385, 0.28", "198.991, 182.232, 21.3262, 0.28", "204.942, 184.24, 22.0404, 0.28", "208.006, 185.344, 22.3591, 0.83", "212.23, 187.137, 22.7729, 0.28", "214.62, 188.384, 23.0983, 0.28", "216.774, 189.668, 23.5732, 0.28", "218.196, 190.655, 24.0526, 0.28", "220.543, 192.632, 25.4847, 0.28", "222.325, 194.399, 26.8757, 0.28", "223.369, 195.582, 27.9172, 0.28", "224.345, 196.678, 28.7679, 0.28", "226.072, 198.644, 30.0958, 0.55", "228.352, 201.338, 31.6724, 0.28", "230.452, 203.614, 32.9794, 0.28", "232.382, 205.515, 34.1001, 0.28", "235.576, 208.344, 35.8895, 0.28", "237.638, 209.92, 37.0186, 0.28", "239.771, 211.208, 38.0359, 0.55", "243.371, 212.9, 39.5422, 0.28", "244.697, 213.397, 40.1241, 0.55", "246.591, 213.982, 41.0323, 0.28", "248.966, 214.672, 42.3284, 0.28", "252.554, 215.695, 44.2342, 0.28", "256.093, 216.696, 46.1359, 0.28", "257.319, 217.079, 46.8169, 0.55", "258.96, 217.609, 47.7811, 0.28", "260.32, 218.06, 48.7555, 0.28", "261.881, 218.58, 50.0824, 0.28", "265.284, 219.555, 53.4001, 0.55", "266.894, 219.931, 55.0114, 0.28", "268.699, 220.214, 56.8131, 0.28", "272.615, 220.47, 60.6385, 0.55", "274.57, 220.446, 62.492, 0.28", "276.985, 220.282, 64.7851, 0.28", "279.125, 219.995, 66.8104, 0.28", "281.028, 219.629, 68.5416, 0.28", "283.746, 218.975, 70.7961, 0.28", "285.878, 218.403, 72.1654, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-37.5087, -314.708, 1.70441, 0.28", "-34.0756, -314.883, 5.05832, 0.28", "-30.3992, -315.122, 8.27595, 0.28", "-25.0281, -315.464, 13.0502, 0.28", "-23.0951, -315.565, 14.7485, 0.28", "-21.1044, -315.681, 16.3969, 0.28", "-19.0242, -315.807, 18.0781, 0.28", "-16.0265, -315.922, 20.6107, 0.28", "-13.368, -315.968, 22.7678, 0.28", "-10.6871, -315.992, 24.281, 0.28", "-7.8309, -316.008, 25.6451, 0.28", "-4.83043, -316.003, 26.9218, 0.28", "-0.845917, -315.955, 28.4707, 0.28", "0.945132, -315.931, 29.0158, 0.28", "10.4757, -315.879, 30.9442, 0.28", "13.3279, -315.879, 31.3006, 0.28", "17.6042, -315.864, 31.4254, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-37.5087, -314.708, 1.70441, 0.28", "-42.6218, -314.268, 1.36813, 0.28", "-47.4486, -313.904, 0.897471, 0.28", "-51.5091, -313.703, 0.357747, 0.28", "-59.7012, -313.313, -0.941666, 0.28", "-64.1491, -313.081, -1.74843, 0.28", "-68.2056, -312.879, -2.57726, 0.28", "-72.3008, -312.75, -3.50953, 0.28", "-76.9363, -312.758, -4.73721, 0.28", "-79.2555, -312.895, -5.49167, 0.28", "-81.9125, -313.24, -6.59335, 0.28", "-85.5931, -314.05, -8.09728, 0.28", "-88.6678, -315.003, -9.33766, 0.28", "-91.1764, -316.006, -10.328, 0.28", "-94.7507, -317.769, -11.7069, 0.28", "-98.2344, -319.688, -13.0315, 0.28", "-101.562, -321.716, -14.2778, 0.28", "-104.297, -323.526, -15.2885, 0.28", "-107.233, -325.558, -16.3652, 0.28", "-110.564, -327.905, -17.5826, 0.28", "-122.365, -330.658, -18.9836, 0.28", "-134.189, -333.587, -19.4759, 0.28", "-146.105, -336.045, -20.4611, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "157.062, -221.24, 146.269, 0.28", "166.809, -223.614, 151.831, 0.28", "176.894, -224.997, 157.149, 0.28", "187.155, -227.825, 161.414, 0.28", "197.725, -231.253, 164.198, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "157.062, -221.24, 146.269, 0.28", "161.857, -221.606, 155.392, 0.28", "166.215, -221.383, 164.736, 0.28", "170.512, -219.463, 173.889, 0.28", "175.208, -216.144, 182.377, 0.28", "178.103, -211.807, 191.157, 0.28", "179.395, -206.449, 199.691, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_0", "axon_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "axon_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_LBC_126a82ac08_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_19, dend_0, axon_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, axon_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.49999926341317097)
    connect dend_19(0), soma_0(0.49999926341317097)
    connect dend_0(0), soma_0(0.49999926341317097)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.26545, 12.8263, -0.385372, 4.20571 ) }
    soma_0 { pt3dadd( -2.99538, 11.4835, -0.361166, 7.19402 ) }
    soma_0 { pt3dadd( -2.72531, 10.1406, -0.336961, 9.45629 ) }
    soma_0 { pt3dadd( -2.45524, 8.79768, -0.312756, 10.8887 ) }
    soma_0 { pt3dadd( -2.18516, 7.45479, -0.28855, 12.1858 ) }
    soma_0 { pt3dadd( -1.91509, 6.11191, -0.264345, 13.0837 ) }
    soma_0 { pt3dadd( -1.64502, 4.76902, -0.24014, 13.8391 ) }
    soma_0 { pt3dadd( -1.37495, 3.42613, -0.215934, 14.1927 ) }
    soma_0 { pt3dadd( -1.10488, 2.08325, -0.191729, 14.7245 ) }
    soma_0 { pt3dadd( -0.834809, 0.740358, -0.167524, 15.0655 ) }
    soma_0 { pt3dadd( -0.564738, -0.602529, -0.143318, 15.0604 ) }
    soma_0 { pt3dadd( -0.294667, -1.94542, -0.119113, 14.8454 ) }
    soma_0 { pt3dadd( -0.0245954, -3.2883, -0.0949076, 14.4598 ) }
    soma_0 { pt3dadd( 0.245476, -4.63119, -0.0707023, 13.4621 ) }
    soma_0 { pt3dadd( 0.515547, -5.97408, -0.0464969, 12.4622 ) }
    soma_0 { pt3dadd( 0.785618, -7.31696, -0.0222916, 11.0253 ) }
    soma_0 { pt3dadd( 1.05569, -8.65985, 0.00191374, 9.34508 ) }
    soma_0 { pt3dadd( 1.32576, -10.0027, 0.0261191, 7.80961 ) }
    soma_0 { pt3dadd( 1.59583, -11.3456, 0.0503244, 6.28847 ) }
    soma_0 { pt3dadd( 1.8659, -12.6885, 0.0745297, 5.0944 ) }
    soma_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 2.89855 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.80934, 11.8727, 8.90928, 5.26 ) }
    dend_22 { pt3dadd( -3.91609, 12.6287, 7.67675, 4.43 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.75934, -3.04229, 15.6893, 1.66 ) }
    dend_19 { pt3dadd( -9.09916, -3.22644, 17.6808, 1.66 ) }
    dend_19 { pt3dadd( -10.7165, -3.44874, 20.0848, 1.66 ) }
    dend_19 { pt3dadd( -14.2099, -3.92889, 25.2773, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.73066, -11.4973, 8.52928, 3.32 ) }
    dend_0 { pt3dadd( 3.64701, -16.1874, 8.52928, 3.05 ) }
    dend_0 { pt3dadd( 4.15614, -18.7933, 8.52928, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 5.09344, -28.737, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 8.05091, -43.4425, 0.0987351, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.91609, 12.6287, 7.67675, 3.88 ) }
    dend_24 { pt3dadd( -4.46759, 15.2538, 7.72015, 3.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.91609, 12.6287, 7.67675, 1.11 ) }
    dend_23 { pt3dadd( -1.34238, 19.7895, -5.89538, 1.11 ) }
    dend_23 { pt3dadd( -0.59279, 21.8335, -9.39439, 1.11 ) }
    dend_23 { pt3dadd( -0.17233, 22.9113, -11.0608, 0.83 ) }
    dend_23 { pt3dadd( 0.158412, 23.7498, -12.2106, 0.55 ) }
    dend_23 { pt3dadd( 0.96556, 25.6393, -14.5034, 0.55 ) }
    dend_23 { pt3dadd( 1.36158, 26.4842, -15.4318, 0.55 ) }
    dend_23 { pt3dadd( 2.16582, 27.7679, -15.9553, 0.55 ) }
    dend_23 { pt3dadd( 2.98632, 28.8266, -16.684, 0.83 ) }
    dend_23 { pt3dadd( 3.92676, 29.9508, -17.6194, 0.83 ) }
    dend_23 { pt3dadd( 5.10363, 31.2706, -18.8262, 0.55 ) }
    dend_23 { pt3dadd( 5.82433, 31.9921, -19.5105, 0.55 ) }
    dend_23 { pt3dadd( 6.55321, 32.672, -20.2128, 0.55 ) }
    dend_23 { pt3dadd( 10.4837, 36.289, -25.127, 0.55 ) }
    dend_23 { pt3dadd( 11.0139, 36.7404, -25.8816, 0.55 ) }
    dend_23 { pt3dadd( 11.5379, 37.1585, -26.6613, 0.28 ) }
    dend_23 { pt3dadd( 12.1288, 37.6508, -27.595, 0.28 ) }
    dend_23 { pt3dadd( 12.9969, 38.4629, -29.0548, 0.28 ) }
    dend_23 { pt3dadd( 15.9778, 41.5342, -33.7678, 0.55 ) }
    dend_23 { pt3dadd( 17.1247, 42.8432, -35.1227, 0.28 ) }
    dend_23 { pt3dadd( 17.8537, 43.7169, -35.924, 0.28 ) }
    dend_23 { pt3dadd( 18.3861, 44.3778, -36.4289, 0.28 ) }
    dend_23 { pt3dadd( 19.347, 45.5801, -37.1069, 0.55 ) }
    dend_23 { pt3dadd( 21.0344, 47.8133, -37.8194, 0.55 ) }
    dend_23 { pt3dadd( 23.1166, 50.6354, -38.0576, 0.28 ) }
    dend_23 { pt3dadd( 23.2554, 50.8318, -38.068, 0.28 ) }
    dend_23 { pt3dadd( 24.2717, 52.1688, -38.3592, 0.28 ) }
    dend_23 { pt3dadd( 25.577, 53.7446, -38.9249, 0.28 ) }
    dend_23 { pt3dadd( 26.6887, 54.9491, -39.4932, 0.28 ) }
    dend_23 { pt3dadd( 27.3631, 55.6644, -39.9011, 0.28 ) }
    dend_23 { pt3dadd( 28.5827, 56.8792, -40.6379, 0.55 ) }
    dend_23 { pt3dadd( 32.0751, 60.4209, -43.3162, 0.28 ) }
    dend_23 { pt3dadd( 33.4999, 61.8973, -44.5092, 0.28 ) }
    dend_23 { pt3dadd( 34.9823, 63.5733, -45.7723, 0.28 ) }
    dend_23 { pt3dadd( 35.8699, 64.707, -46.6558, 0.28 ) }
    dend_23 { pt3dadd( 37.3961, 66.889, -48.4199, 0.55 ) }
    dend_23 { pt3dadd( 39.924, 70.9368, -51.6279, 0.28 ) }
    dend_23 { pt3dadd( 41.4805, 73.8005, -53.7078, 0.28 ) }
    dend_23 { pt3dadd( 42.9988, 76.9239, -55.9681, 0.28 ) }
    dend_23 { pt3dadd( 44.96, 81.4461, -59.0797, 0.55 ) }
    dend_23 { pt3dadd( 45.9943, 84.0498, -60.7376, 0.28 ) }
    dend_23 { pt3dadd( 46.525, 85.4757, -61.5316, 0.28 ) }
    dend_23 { pt3dadd( 47.2039, 87.2265, -62.2526, 0.28 ) }
    dend_23 { pt3dadd( 48.1797, 89.5638, -63.1085, 0.55 ) }
    dend_23 { pt3dadd( 49.2926, 91.7345, -63.8517, 0.28 ) }
    dend_23 { pt3dadd( 50.0262, 92.998, -64.162, 0.28 ) }
    dend_23 { pt3dadd( 51.0558, 94.6922, -64.5766, 0.28 ) }
    dend_23 { pt3dadd( 52.581, 97.035, -65.2771, 0.28 ) }
    dend_23 { pt3dadd( 53.3657, 98.1784, -65.6699, 0.55 ) }
    dend_23 { pt3dadd( 55.5987, 101.374, -66.8731, 0.55 ) }
    dend_23 { pt3dadd( 56.3841, 102.482, -67.2962, 0.55 ) }
    dend_23 { pt3dadd( 57.1294, 103.581, -67.6671, 0.55 ) }
    dend_23 { pt3dadd( 58.2333, 105.381, -68.1754, 0.83 ) }
    dend_23 { pt3dadd( 59.215, 107.079, -68.5353, 0.28 ) }
    dend_23 { pt3dadd( 59.7339, 108.127, -68.6685, 0.28 ) }
    dend_23 { pt3dadd( 60.3471, 109.661, -68.7873, 0.28 ) }
    dend_23 { pt3dadd( 61.1236, 112.453, -69.1224, 0.28 ) }
    dend_23 { pt3dadd( 61.2642, 113.392, -69.269, 0.28 ) }
    dend_23 { pt3dadd( 61.4122, 114.85, -69.5289, 0.55 ) }
    dend_23 { pt3dadd( 61.6301, 116.581, -69.8647, 0.28 ) }
    dend_23 { pt3dadd( 62.2283, 119.496, -70.443, 0.28 ) }
    dend_23 { pt3dadd( 62.8961, 121.762, -70.8881, 0.28 ) }
    dend_23 { pt3dadd( 63.8202, 124.171, -71.5924, 0.28 ) }
    dend_23 { pt3dadd( 65.2601, 127.072, -72.607, 0.28 ) }
    dend_23 { pt3dadd( 66.3223, 128.796, -73.267, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 67.7269, 130.581, -73.9692, 0.55 ) }
    dend_23 { pt3dadd( 68.7203, 131.663, -74.3724, 0.28 ) }
    dend_23 { pt3dadd( 71.2799, 134.304, -75.3963, 0.28 ) }
    dend_23 { pt3dadd( 73.4622, 136.49, -76.2724, 0.28 ) }
    dend_23 { pt3dadd( 74.4249, 137.435, -76.6252, 0.28 ) }
    dend_23 { pt3dadd( 76.055, 139.042, -77.1102, 0.83 ) }
    dend_23 { pt3dadd( 77.3426, 140.307, -78.0466, 0.28 ) }
    dend_23 { pt3dadd( 78.6432, 141.589, -79.3986, 0.28 ) }
    dend_23 { pt3dadd( 79.774, 142.708, -80.9512, 0.28 ) }
    dend_23 { pt3dadd( 81.1515, 144.007, -83.1677, 0.28 ) }
    dend_23 { pt3dadd( 82.5018, 145.222, -85.4547, 0.28 ) }
    dend_23 { pt3dadd( 88.5263, 150.704, -96.2574, 0.28 ) }
    dend_23 { pt3dadd( 89.0513, 151.197, -97.221, 0.55 ) }
    dend_23 { pt3dadd( 90.0785, 152.182, -99.3444, 0.28 ) }
    dend_23 { pt3dadd( 91.3038, 153.501, -102.331, 0.28 ) }
    dend_23 { pt3dadd( 91.9234, 154.193, -104.1, 0.28 ) }
    dend_23 { pt3dadd( 92.613, 154.878, -105.941, 0.28 ) }
    dend_23 { pt3dadd( 94.2776, 156.206, -106.13, 0.28 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.2099, -3.92889, 25.2773, 1.66 ) }
    dend_21 { pt3dadd( -16.5236, -3.99307, 25.4604, 1.66 ) }
    dend_21 { pt3dadd( -19.0599, -3.84623, 25.3962, 1.66 ) }
    dend_21 { pt3dadd( -22.241, -3.45483, 25.7622, 1.39 ) }
    dend_21 { pt3dadd( -25.3344, -3.03454, 26.3475, 1.39 ) }
    dend_21 { pt3dadd( -28.1258, -2.65692, 26.9854, 1.11 ) }
    dend_21 { pt3dadd( -32.4437, -2.07014, 28.2611, 1.11 ) }
    dend_21 { pt3dadd( -37.6173, -1.09325, 30.1207, 1.11 ) }
    dend_21 { pt3dadd( -44.2062, 0.479448, 33.3673, 1.11 ) }
    dend_21 { pt3dadd( -45.1324, 0.74538, 33.912, 1.11 ) }
    dend_21 { pt3dadd( -47.4697, 1.34721, 35.3253, 1.11 ) }
    dend_21 { pt3dadd( -51.0623, 2.17145, 37.1189, 1.11 ) }
    dend_21 { pt3dadd( -52.9391, 2.5859, 37.957, 1.11 ) }
    dend_21 { pt3dadd( -57.0716, 3.37658, 39.7254, 1.11 ) }
    dend_21 { pt3dadd( -58.8807, 3.68547, 40.211, 1.11 ) }
    dend_21 { pt3dadd( -62.9914, 4.38274, 41.1972, 1.11 ) }
    dend_21 { pt3dadd( -67.9786, 5.02366, 42.2022, 1.11 ) }
    dend_21 { pt3dadd( -73.6746, 5.4178, 42.9252, 1.11 ) }
    dend_21 { pt3dadd( -76.1338, 5.50018, 43.1607, 0.83 ) }
    dend_21 { pt3dadd( -78.794, 5.55281, 43.6071, 0.83 ) }
    dend_21 { pt3dadd( -80.0694, 5.60501, 44.019, 0.83 ) }
    dend_21 { pt3dadd( -82.0879, 5.74781, 44.9279, 0.83 ) }
    dend_21 { pt3dadd( -83.8713, 5.86529, 45.9309, 0.83 ) }
    dend_21 { pt3dadd( -85.3634, 5.92398, 46.605, 0.83 ) }
    dend_21 { pt3dadd( -90.7178, 6.79851, 50.0708, 0.83 ) }
    dend_21 { pt3dadd( -91.0959, 6.90884, 50.4354, 0.83 ) }
    dend_21 { pt3dadd( -100.561, 7.25716, 52.5068, 0.83 ) }
    dend_21 { pt3dadd( -109.569, 8.93392, 55.5856, 0.83 ) }
    dend_21 { pt3dadd( -118.765, 10.0032, 58.4212, 0.83 ) }
    dend_21 { pt3dadd( -128.282, 10.1976, 60.2729, 0.83 ) }
    dend_21 { pt3dadd( -137.913, 10.6021, 61.2671, 0.83 ) }
    dend_21 { pt3dadd( -147.506, 9.3363, 62.1013, 0.83 ) }
    dend_21 { pt3dadd( -156.879, 7.32491, 63.663, 0.83 ) }
    dend_21 { pt3dadd( -165.612, 4.39425, 66.6955, 0.83 ) }
    dend_21 { pt3dadd( -173.863, 0.56002, 69.9815, 0.83 ) }
    dend_21 { pt3dadd( -181.823, -4.09356, 72.8191, 0.83 ) }
    dend_21 { pt3dadd( -189.298, -8.0811, 77.4589, 0.83 ) }
    dend_21 { pt3dadd( -195.576, -13.4327, 82.3529, 0.83 ) }
    dend_21 { pt3dadd( -201.979, -18.6096, 87.2914, 0.83 ) }
    dend_21 { pt3dadd( -208.471, -24.1806, 91.6166, 0.83 ) }
    dend_21 { pt3dadd( -215.749, -28.054, 96.653, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.2099, -3.92889, 25.2773, 1.11 ) }
    dend_20 { pt3dadd( -16.2548, -3.15813, 27.5875, 1.11 ) }
    dend_20 { pt3dadd( -17.3687, -2.83811, 29.0425, 1.11 ) }
    dend_20 { pt3dadd( -20.7379, -2.15154, 33.2037, 1.11 ) }
    dend_20 { pt3dadd( -21.8244, -1.95118, 34.4633, 1.11 ) }
    dend_20 { pt3dadd( -24.0044, -1.50083, 36.8407, 1.11 ) }
    dend_20 { pt3dadd( -29.9205, -0.110651, 43.514, 1.11 ) }
    dend_20 { pt3dadd( -31.0887, 0.220215, 44.8856, 0.83 ) }
    dend_20 { pt3dadd( -32.6782, 0.713818, 46.5159, 0.83 ) }
    dend_20 { pt3dadd( -33.7407, 1.02558, 47.3909, 0.83 ) }
    dend_20 { pt3dadd( -34.9128, 1.41958, 48.394, 0.83 ) }
    dend_20 { pt3dadd( -38.1863, 2.79798, 51.1123, 0.83 ) }
    dend_20 { pt3dadd( -41.1227, 4.18123, 52.3839, 0.83 ) }
    dend_20 { pt3dadd( -42.9239, 5.12344, 53.2349, 0.83 ) }
    dend_20 { pt3dadd( -43.3283, 5.34631, 53.4711, 0.83 ) }
    dend_20 { pt3dadd( -50.4773, 8.85654, 58.4303, 0.83 ) }
    dend_20 { pt3dadd( -57.3411, 12.3895, 63.7637, 0.83 ) }
    dend_20 { pt3dadd( -65.2602, 13.8716, 68.6961, 0.83 ) }
    dend_20 { pt3dadd( -73.5883, 15.3699, 72.8914, 0.83 ) }
    dend_20 { pt3dadd( -81.6822, 17.0245, 77.4631, 0.83 ) }
    dend_20 { pt3dadd( -89.7553, 19.7909, 81.4208, 0.83 ) }
    dend_20 { pt3dadd( -97.5055, 22.7317, 85.8582, 0.83 ) }
    dend_20 { pt3dadd( -105.746, 26.5061, 88.1938, 0.83 ) }
    dend_20 { pt3dadd( -113.893, 30.096, 91.1145, 0.83 ) }
    dend_20 { pt3dadd( -122.031, 33.6644, 94.0895, 0.83 ) }
    dend_20 { pt3dadd( -129.443, 37.2669, 98.56, 0.83 ) }
    dend_20 { pt3dadd( -137.237, 39.4206, 103.412, 0.83 ) }
    dend_20 { pt3dadd( -145.1, 41.3724, 108.248, 0.83 ) }
    dend_20 { pt3dadd( -152.637, 42.0616, 113.925, 0.83 ) }
    dend_20 { pt3dadd( -159.974, 41.7767, 119.901, 0.83 ) }
    dend_20 { pt3dadd( -167.491, 40.4625, 125.496, 0.83 ) }
    dend_20 { pt3dadd( -176.195, 39.1746, 128.984, 0.83 ) }
    dend_20 { pt3dadd( -184.524, 37.3366, 133.069, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 92/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.15614, -18.7933, 8.52928, 4.16 ) }
    dend_2 { pt3dadd( 4.36017, -20.0406, 8.52729, 4.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.15614, -18.7933, 8.52928, 1.39 ) }
    dend_1 { pt3dadd( 12.9771, -18.2663, 2.03748, 1.39 ) }
    dend_1 { pt3dadd( 15.4427, -18.0924, 0.336656, 1.11 ) }
    dend_1 { pt3dadd( 18.4609, -17.9796, -1.30336, 1.11 ) }
    dend_1 { pt3dadd( 20.7071, -17.9898, -2.29782, 0.83 ) }
    dend_1 { pt3dadd( 22.8909, -18.0532, -3.06981, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 29.5661, -18.2993, -5.21773, 0.83 ) }
    dend_1 { pt3dadd( 32.7796, -18.4467, -5.70576, 0.83 ) }
    dend_1 { pt3dadd( 38.2057, -18.5716, -6.46932, 0.55 ) }
    dend_1 { pt3dadd( 40.4977, -18.5442, -6.73716, 0.55 ) }
    dend_1 { pt3dadd( 44.0163, -18.4107, -7.02939, 0.55 ) }
    dend_1 { pt3dadd( 48.2243, -18.0851, -7.20223, 0.55 ) }
    dend_1 { pt3dadd( 51.8815, -17.7453, -7.34294, 0.55 ) }
    dend_1 { pt3dadd( 53.6714, -17.5311, -7.56402, 0.55 ) }
    dend_1 { pt3dadd( 57.1052, -17.035, -8.25338, 0.55 ) }
    dend_1 { pt3dadd( 59.7339, -16.6753, -8.79737, 0.55 ) }
    dend_1 { pt3dadd( 61.6551, -16.4695, -9.19132, 0.55 ) }
    dend_1 { pt3dadd( 66.6608, -16.0963, -10.114, 0.55 ) }
    dend_1 { pt3dadd( 69.088, -15.9875, -10.497, 0.55 ) }
    dend_1 { pt3dadd( 71.5753, -15.8869, -10.6831, 0.55 ) }
    dend_1 { pt3dadd( 73.8865, -15.7304, -10.6679, 0.55 ) }
    dend_1 { pt3dadd( 75.5052, -15.5789, -10.5356, 0.55 ) }
    dend_1 { pt3dadd( 77.6716, -15.3297, -10.3429, 0.55 ) }
    dend_1 { pt3dadd( 81.2224, -14.7835, -9.96655, 0.55 ) }
    dend_1 { pt3dadd( 85.7974, -13.9826, -9.79111, 0.55 ) }
    dend_1 { pt3dadd( 88.6505, -13.3863, -9.84865, 0.28 ) }
    dend_1 { pt3dadd( 91.5829, -12.6964, -10.0685, 0.55 ) }
    dend_1 { pt3dadd( 96.4185, -11.4906, -10.7086, 0.55 ) }
    dend_1 { pt3dadd( 99.0337, -10.7772, -11.2407, 0.55 ) }
    dend_1 { pt3dadd( 101.85, -9.90931, -12.0815, 0.28 ) }
    dend_1 { pt3dadd( 103.547, -9.28413, -12.7038, 0.55 ) }
    dend_1 { pt3dadd( 104.515, -8.86068, -13.0508, 0.28 ) }
    dend_1 { pt3dadd( 105.668, -8.22171, -13.4072, 0.55 ) }
    dend_1 { pt3dadd( 106.941, -7.42305, -13.5985, 0.28 ) }
    dend_1 { pt3dadd( 108.082, -6.73039, -13.6918, 0.28 ) }
    dend_1 { pt3dadd( 109.127, -6.13717, -13.6995, 0.28 ) }
    dend_1 { pt3dadd( 110.855, -5.21461, -13.7293, 0.28 ) }
    dend_1 { pt3dadd( 111.56, -4.83615, -13.7466, 0.28 ) }
    dend_1 { pt3dadd( 114.696, -3.2188, -13.8343, 1.11 ) }
    dend_1 { pt3dadd( 116.15, -2.46955, -13.8772, 0.28 ) }
    dend_1 { pt3dadd( 117.41, -1.80859, -14.0984, 0.28 ) }
    dend_1 { pt3dadd( 118.896, -0.972887, -14.4975, 0.28 ) }
    dend_1 { pt3dadd( 121.178, 0.463048, -15.0667, 0.28 ) }
    dend_1 { pt3dadd( 124.101, 2.38558, -15.7352, 0.28 ) }
    dend_1 { pt3dadd( 126.095, 3.77009, -16.1544, 0.28 ) }
    dend_1 { pt3dadd( 131.785, 7.77556, -17.1913, 0.28 ) }
    dend_1 { pt3dadd( 133.768, 9.18876, -17.4922, 0.28 ) }
    dend_1 { pt3dadd( 137.781, 12.064, -17.9482, 0.83 ) }
    dend_1 { pt3dadd( 139.326, 13.2324, -18.0547, 0.83 ) }
    dend_1 { pt3dadd( 141.136, 14.6331, -18.0452, 0.28 ) }
    dend_1 { pt3dadd( 142.292, 15.4782, -17.9046, 0.28 ) }
    dend_1 { pt3dadd( 143.465, 16.3347, -17.5079, 0.28 ) }
    dend_1 { pt3dadd( 144.44, 16.9902, -17.2731, 0.55 ) }
    dend_1 { pt3dadd( 145.937, 17.9708, -17.2892, 0.28 ) }
    dend_1 { pt3dadd( 146.994, 18.7802, -17.3018, 0.28 ) }
    dend_1 { pt3dadd( 147.673, 19.2755, -17.3102, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.05091, -43.4425, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 11.0084, -58.1481, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 13.9659, -72.8536, 0.0987351, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 53/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.46759, 15.2538, 7.72015, 4.43 ) }
    dend_26 { pt3dadd( -4.52378, 18.9384, 7.75776, 4.43 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 55/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.46759, 15.2538, 7.72015, 1.39 ) }
    dend_25 { pt3dadd( -6.39221, 20.1788, 4.17665, 1.39 ) }
    dend_25 { pt3dadd( -7.25862, 23.8681, 1.29707, 1.39 ) }
    dend_25 { pt3dadd( -7.49906, 26.3693, -0.826902, 1.39 ) }
    dend_25 { pt3dadd( -7.71795, 29.1784, -3.27976, 1.39 ) }
    dend_25 { pt3dadd( -7.71097, 31.0475, -5.2358, 1.11 ) }
    dend_25 { pt3dadd( -7.58068, 34.656, -9.22608, 1.11 ) }
    dend_25 { pt3dadd( -7.36344, 38.026, -12.8737, 1.11 ) }
    dend_25 { pt3dadd( -6.78126, 41.3315, -16.8478, 1.11 ) }
    dend_25 { pt3dadd( -6.27683, 43.512, -19.5612, 1.39 ) }
    dend_25 { pt3dadd( -4.69603, 49.5468, -27.2232, 1.11 ) }
    dend_25 { pt3dadd( -4.3776, 50.8996, -28.8982, 1.11 ) }
    dend_25 { pt3dadd( -3.96099, 53.3984, -31.7754, 1.11 ) }
    dend_25 { pt3dadd( -3.25567, 58.5951, -37.2621, 1.11 ) }
    dend_25 { pt3dadd( -2.99396, 60.515, -39.0951, 1.11 ) }
    dend_25 { pt3dadd( -2.41692, 64.3621, -42.3319, 0.83 ) }
    dend_25 { pt3dadd( -2.19142, 66.3189, -43.69, 0.83 ) }
    dend_25 { pt3dadd( -1.82055, 69.5053, -45.8625, 0.83 ) }
    dend_25 { pt3dadd( -1.40721, 72.2993, -47.8669, 0.28 ) }
    dend_25 { pt3dadd( -1.32829, 73.0029, -48.3188, 0.55 ) }
    dend_25 { pt3dadd( -1.11959, 74.7959, -49.4831, 0.55 ) }
    dend_25 { pt3dadd( -0.815949, 77.9769, -51.4601, 0.28 ) }
    dend_25 { pt3dadd( -0.586744, 80.5468, -53.069, 1.11 ) }
    dend_25 { pt3dadd( 0.330773, 85.2807, -56.4583, 0.28 ) }
    dend_25 { pt3dadd( 0.78962, 86.9343, -57.7609, 0.28 ) }
    dend_25 { pt3dadd( 1.36377, 88.564, -59.0588, 0.55 ) }
    dend_25 { pt3dadd( 1.84156, 89.5473, -59.8704, 0.55 ) }
    dend_25 { pt3dadd( 2.0791, 89.98, -60.2126, 0.55 ) }
    dend_25 { pt3dadd( 6.53507, 95.7757, -66.0149, 0.28 ) }
    dend_25 { pt3dadd( 7.31851, 96.7439, -67.0445, 0.28 ) }
    dend_25 { pt3dadd( 8.92466, 98.6582, -69.1673, 0.83 ) }
    dend_25 { pt3dadd( 11.8223, 101.928, -73.0501, 0.28 ) }
    dend_25 { pt3dadd( 12.9852, 103.275, -74.6895, 0.83 ) }
    dend_25 { pt3dadd( 19.4644, 111.465, -84.5957, 0.28 ) }
    dend_25 { pt3dadd( 20.5274, 112.831, -86.3836, 0.28 ) }
    dend_25 { pt3dadd( 21.2056, 113.675, -87.5948, 0.83 ) }
    dend_25 { pt3dadd( 25.142, 118.295, -94.8603, 0.28 ) }
    dend_25 { pt3dadd( 25.832, 119.134, -96.2134, 0.55 ) }
    dend_25 { pt3dadd( 26.7143, 120.265, -98.0554, 0.55 ) }
    dend_25 { pt3dadd( 30.9497, 126.303, -107.735, 0.28 ) }
    dend_25 { pt3dadd( 31.5161, 127.051, -109.009, 0.28 ) }
    dend_25 { pt3dadd( 33.7462, 129.955, -114.227, 0.55 ) }
    dend_25 { pt3dadd( 34.3975, 130.828, -115.854, 0.28 ) }
    dend_25 { pt3dadd( 34.8885, 131.411, -117.008, 0.55 ) }
    dend_25 { pt3dadd( 37.624, 134.378, -123.078, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 0/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.36017, -20.0406, 8.52729, 2.49 ) }
    dend_14 { pt3dadd( 6.49984, -27.9436, 8.00621, 2.49 ) }
    dend_14 { pt3dadd( 8.12337, -33.9808, 7.18357, 2.22 ) }
    dend_14 { pt3dadd( 9.74708, -40.0186, 6.36083, 2.22 ) }
    dend_14 { pt3dadd( 11.7723, -47.5495, 5.33465, 1.94 ) }
    dend_14 { pt3dadd( 14.5024, -57.7012, 3.95134, 2.22 ) }
    dend_14 { pt3dadd( 16.0878, -63.5967, 3.14801, 2.22 ) }
    dend_14 { pt3dadd( 17.7882, -69.9794, 2.39166, 2.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.36017, -20.0406, 8.52729, 2.49 ) }
    dend_3 { pt3dadd( -2.41452, -23.6156, -3.39022, 2.49 ) }
    dend_3 { pt3dadd( -4.16039, -24.5369, -6.46142, 2.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.52378, 18.9384, 7.75776, 4.43 ) }
    dend_28 { pt3dadd( -5.51352, 22.9459, 11.2804, 4.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.52378, 18.9384, 7.75776, 1.39 ) }
    dend_27 { pt3dadd( -6.45494, 20.3187, 9.09195, 1.39 ) }
    dend_27 { pt3dadd( -8.46563, 21.9911, 10.3684, 1.39 ) }
    dend_27 { pt3dadd( -11.9457, 25.0615, 12.9757, 1.39 ) }
    dend_27 { pt3dadd( -13.4656, 26.4939, 14.2062, 0.83 ) }
    dend_27 { pt3dadd( -14.9343, 27.8813, 15.5594, 0.83 ) }
    dend_27 { pt3dadd( -18.3844, 31.2143, 18.8613, 1.11 ) }
    dend_27 { pt3dadd( -20.9965, 34.0517, 21.6564, 1.11 ) }
    dend_27 { pt3dadd( -24.0439, 37.7492, 25.2365, 1.11 ) }
    dend_27 { pt3dadd( -24.5976, 38.5561, 25.9347, 1.11 ) }
    dend_27 { pt3dadd( -26.7035, 42.065, 28.8098, 1.11 ) }
    dend_27 { pt3dadd( -27.5821, 43.8156, 30.0582, 1.11 ) }
    dend_27 { pt3dadd( -28.4497, 45.7647, 31.1046, 0.83 ) }
    dend_27 { pt3dadd( -29.048, 47.3033, 31.7769, 0.83 ) }
    dend_27 { pt3dadd( -29.3996, 48.6216, 31.9512, 0.83 ) }
    dend_27 { pt3dadd( -29.7702, 50.1491, 32.0939, 0.83 ) }
    dend_27 { pt3dadd( -30.1309, 51.8812, 32.1201, 0.83 ) }
    dend_27 { pt3dadd( -30.443, 53.2567, 32.2059, 0.83 ) }
    dend_27 { pt3dadd( -31.1749, 56.176, 32.5266, 0.83 ) }
    dend_27 { pt3dadd( -31.5979, 57.6297, 32.9899, 0.83 ) }
    dend_27 { pt3dadd( -32.7759, 61.3678, 34.4868, 0.83 ) }
    dend_27 { pt3dadd( -33.0266, 62.1131, 34.8797, 0.83 ) }
    dend_27 { pt3dadd( -33.5757, 63.4946, 35.8634, 0.83 ) }
    dend_27 { pt3dadd( -33.9807, 64.4196, 36.7452, 0.83 ) }
    dend_27 { pt3dadd( -35.4871, 67.2579, 40.3473, 0.83 ) }
    dend_27 { pt3dadd( -38.3605, 71.7992, 45.1704, 0.83 ) }
    dend_27 { pt3dadd( -41.6514, 76.2489, 49.826, 0.83 ) }
    dend_27 { pt3dadd( -43.8108, 81.2157, 54.5462, 0.83 ) }
    dend_27 { pt3dadd( -45.0536, 86.2353, 59.5098, 0.83 ) }
    dend_27 { pt3dadd( -45.3458, 90.5023, 65.31, 0.83 ) }
    dend_27 { pt3dadd( -44.9102, 93.8874, 71.7091, 0.83 ) }
    dend_27 { pt3dadd( -45.9535, 97.0992, 78.1521, 0.83 ) }
    dend_27 { pt3dadd( -47.9632, 101.276, 83.7026, 0.83 ) }
    dend_27 { pt3dadd( -49.0764, 103.955, 90.4014, 0.83 ) }
    dend_27 { pt3dadd( -50.8198, 107.37, 96.5783, 0.83 ) }
    dend_27 { pt3dadd( -52.4015, 110.815, 102.779, 0.83 ) }
    dend_27 { pt3dadd( -53.5405, 115.083, 108.485, 0.83 ) }
    dend_27 { pt3dadd( -54.0836, 120.142, 113.516, 0.83 ) }
    dend_27 { pt3dadd( -55.2893, 124.808, 118.854, 0.83 ) }
    dend_27 { pt3dadd( -56.8858, 129.535, 124.035, 0.83 ) }
    dend_27 { pt3dadd( -58.8852, 134.79, 128.471, 0.83 ) }
    dend_27 { pt3dadd( -60.4085, 139.47, 133.718, 0.83 ) }
    dend_27 { pt3dadd( -60.8127, 144.353, 138.948, 0.83 ) }
    dend_27 { pt3dadd( -60.9082, 148.703, 144.684, 0.83 ) }
    dend_27 { pt3dadd( -61.9985, 152.364, 150.847, 0.83 ) }
    dend_27 { pt3dadd( -62.8407, 155.626, 157.289, 0.83 ) }
    dend_27 { pt3dadd( -63.0081, 158.601, 163.93, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 17.7882, -69.9794, 2.39166, 2.22 ) }
    dend_16 { pt3dadd( 16.7562, -71.6596, 9.03776, 2.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 62/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 17.7882, -69.9794, 2.39166, 0.83 ) }
    dend_15 { pt3dadd( 26.2819, -74.9889, -10.8654, 0.83 ) }
    dend_15 { pt3dadd( 28.6304, -76.4821, -14.4708, 0.83 ) }
    dend_15 { pt3dadd( 30.821, -77.8763, -17.5872, 0.83 ) }
    dend_15 { pt3dadd( 35.3964, -80.8488, -23.7202, 0.55 ) }
    dend_15 { pt3dadd( 42.0079, -85.1565, -31.9762, 0.55 ) }
    dend_15 { pt3dadd( 43.4205, -86.1386, -33.8187, 0.55 ) }
    dend_15 { pt3dadd( 48.3098, -89.8184, -39.9701, 0.28 ) }
    dend_15 { pt3dadd( 50.7783, -91.8676, -43.3728, 0.28 ) }
    dend_15 { pt3dadd( 52.146, -93.052, -45.3605, 0.55 ) }
    dend_15 { pt3dadd( 54.1824, -94.905, -48.3025, 0.55 ) }
    dend_15 { pt3dadd( 59.962, -100.26, -56.4255, 0.83 ) }
    dend_15 { pt3dadd( 64.5148, -104.423, -62.8361, 0.28 ) }
    dend_15 { pt3dadd( 67.8863, -107.432, -67.2848, 0.28 ) }
    dend_15 { pt3dadd( 71.1365, -110.417, -71.7827, 0.28 ) }
    dend_15 { pt3dadd( 73.656, -112.709, -75.1309, 0.28 ) }
    dend_15 { pt3dadd( 78.1725, -116.692, -80.8341, 0.28 ) }
    dend_15 { pt3dadd( 81.1096, -119.162, -84.3042, 0.55 ) }
    dend_15 { pt3dadd( 85.1868, -122.667, -89.4734, 0.83 ) }
    dend_15 { pt3dadd( 92.6678, -129.36, -100.405, 0.28 ) }
    dend_15 { pt3dadd( 95.7561, -132.162, -105.171, 0.28 ) }
    dend_15 { pt3dadd( 99.223, -135.354, -110.748, 0.28 ) }
    dend_15 { pt3dadd( 103.564, -139.274, -117.62, 0.28 ) }
    dend_15 { pt3dadd( 108.196, -143.85, -125.291, 0.28 ) }
    dend_15 { pt3dadd( 112.93, -148.828, -132.936, 0.28 ) }
    dend_15 { pt3dadd( 114.91, -151.077, -135.938, 0.28 ) }
    dend_15 { pt3dadd( 115.698, -152.016, -137.06, 0.28 ) }
    dend_15 { pt3dadd( 118.052, -154.783, -139.946, 0.83 ) }
    dend_15 { pt3dadd( 124.419, -161.971, -146.521, 0.28 ) }
    dend_15 { pt3dadd( 128.53, -166.114, -149.564, 0.28 ) }
    dend_15 { pt3dadd( 136.917, -173.79, -154.239, 0.28 ) }
    dend_15 { pt3dadd( 143.119, -178.872, -157.103, 0.28 ) }
    dend_15 { pt3dadd( 146.974, -181.614, -158.517, 0.28 ) }
    dend_15 { pt3dadd( 149.187, -182.899, -159.084, 0.83 ) }
    dend_15 { pt3dadd( 160.897, -187.678, -160.15, 0.28 ) }
    dend_15 { pt3dadd( 163.147, -188.436, -160.136, 0.83 ) }
    dend_15 { pt3dadd( 167.802, -189.764, -159.727, 0.28 ) }
    dend_15 { pt3dadd( 171.338, -190.801, -159.481, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 176.309, -192.366, -159.482, 0.28 ) }
    dend_15 { pt3dadd( 183.171, -194.627, -160.026, 0.83 ) }
    dend_15 { pt3dadd( 187.85, -196.313, -160.861, 0.28 ) }
    dend_15 { pt3dadd( 191.876, -197.828, -161.62, 0.28 ) }
    dend_15 { pt3dadd( 196.299, -199.655, -162.528, 0.83 ) }
    dend_15 { pt3dadd( 203.765, -203.077, -164.179, 0.28 ) }
    dend_15 { pt3dadd( 205.654, -204.046, -164.64, 0.55 ) }
    dend_15 { pt3dadd( 209.053, -205.984, -165.581, 0.28 ) }
    dend_15 { pt3dadd( 213.301, -208.532, -166.569, 0.55 ) }
    dend_15 { pt3dadd( 220.278, -212.969, -167.949, 0.28 ) }
    dend_15 { pt3dadd( 223.958, -215.549, -168.73, 1.11 ) }
    dend_15 { pt3dadd( 227.865, -218.516, -169.602, 0.28 ) }
    dend_15 { pt3dadd( 233.156, -222.584, -170.859, 0.28 ) }
    dend_15 { pt3dadd( 238.658, -226.803, -172.444, 0.28 ) }
    dend_15 { pt3dadd( 241.12, -228.851, -173.602, 0.55 ) }
    dend_15 { pt3dadd( 248.031, -235.205, -178.413, 0.28 ) }
    dend_15 { pt3dadd( 249.328, -236.439, -179.486, 0.55 ) }
    dend_15 { pt3dadd( 250.399, -237.538, -180.596, 0.28 ) }
    dend_15 { pt3dadd( 252.893, -240.484, -184.155, 0.28 ) }
    dend_15 { pt3dadd( 257.795, -247.551, -194.165, 0.28 ) }
    dend_15 { pt3dadd( 259.369, -250.193, -198.331, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.16039, -24.5369, -6.46142, 2.22 ) }
    dend_5 { pt3dadd( -4.70911, -31.6365, -4.57163, 2.22 ) }
    dend_5 { pt3dadd( -5.23264, -38.41, -2.76862, 1.94 ) }
    dend_5 { pt3dadd( -5.31865, -39.523, -2.47238, 1.39 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.16039, -24.5369, -6.46142, 1.11 ) }
    dend_4 { pt3dadd( -9.75578, -24.0762, -3.20939, 1.11 ) }
    dend_4 { pt3dadd( -11.0635, -23.96, -2.64748, 0.83 ) }
    dend_4 { pt3dadd( -12.9199, -23.7926, -2.13282, 0.83 ) }
    dend_4 { pt3dadd( -15.7059, -23.4982, -1.67233, 0.83 ) }
    dend_4 { pt3dadd( -17.1324, -23.316, -1.54114, 0.83 ) }
    dend_4 { pt3dadd( -18.9346, -23.0744, -1.46975, 0.83 ) }
    dend_4 { pt3dadd( -22.7076, -22.6988, -2.13489, 0.83 ) }
    dend_4 { pt3dadd( -24.7589, -22.4525, -2.32553, 0.83 ) }
    dend_4 { pt3dadd( -26.3034, -22.2575, -2.24931, 0.83 ) }
    dend_4 { pt3dadd( -27.4769, -22.1186, -2.1608, 0.83 ) }
    dend_4 { pt3dadd( -28.8811, -22.0347, -1.81934, 0.83 ) }
    dend_4 { pt3dadd( -29.9738, -22.0138, -1.43957, 0.83 ) }
    dend_4 { pt3dadd( -34.2777, -21.9522, 0.475042, 0.83 ) }
    dend_4 { pt3dadd( -36.7328, -21.9258, 1.60576, 0.83 ) }
    dend_4 { pt3dadd( -39.3394, -21.9662, 2.78196, 0.55 ) }
    dend_4 { pt3dadd( -41.9567, -22.078, 4.02267, 0.55 ) }
    dend_4 { pt3dadd( -43.1497, -22.1115, 4.56308, 0.55 ) }
    dend_4 { pt3dadd( -44.4281, -22.1135, 5.04386, 0.55 ) }
    dend_4 { pt3dadd( -45.2522, -22.1138, 5.22687, 0.55 ) }
    dend_4 { pt3dadd( -46.5341, -22.117, 5.50528, 0.55 ) }
    dend_4 { pt3dadd( -49.2234, -22.1403, 6.41524, 0.55 ) }
    dend_4 { pt3dadd( -50.5279, -22.1897, 6.83692, 0.55 ) }
    dend_4 { pt3dadd( -51.3757, -22.2823, 7.14791, 0.55 ) }
    dend_4 { pt3dadd( -52.1627, -22.3971, 7.42043, 0.55 ) }
    dend_4 { pt3dadd( -53.3985, -22.5621, 7.77979, 0.55 ) }
    dend_4 { pt3dadd( -55.9663, -22.769, 8.46231, 0.55 ) }
    dend_4 { pt3dadd( -57.2443, -22.8332, 8.71767, 0.55 ) }
    dend_4 { pt3dadd( -58.727, -22.8679, 9.17336, 0.55 ) }
    dend_4 { pt3dadd( -60.2774, -22.8327, 9.73371, 0.55 ) }
    dend_4 { pt3dadd( -61.6644, -22.7403, 10.2624, 0.55 ) }
    dend_4 { pt3dadd( -63.2276, -22.5863, 10.9856, 0.55 ) }
    dend_4 { pt3dadd( -64.8592, -22.4368, 11.8152, 0.55 ) }
    dend_4 { pt3dadd( -67.9645, -22.0354, 13.5991, 0.55 ) }
    dend_4 { pt3dadd( -68.8722, -21.907, 14.2084, 0.55 ) }
    dend_4 { pt3dadd( -69.8415, -21.8006, 14.9696, 0.55 ) }
    dend_4 { pt3dadd( -71.8104, -21.7068, 16.7072, 0.55 ) }
    dend_4 { pt3dadd( -72.7735, -21.7632, 17.5871, 0.55 ) }
    dend_4 { pt3dadd( -79.4092, -21.8417, 20.7624, 0.55 ) }
    dend_4 { pt3dadd( -85.7849, -21.5347, 24.4321, 0.55 ) }
    dend_4 { pt3dadd( -92.0163, -21.3392, 28.3466, 0.55 ) }
    dend_4 { pt3dadd( -97.8464, -22.0374, 32.7582, 0.55 ) }
    dend_4 { pt3dadd( -103.583, -22.1051, 37.3659, 0.55 ) }
    dend_4 { pt3dadd( -109.346, -22.9096, 41.8427, 0.55 ) }
    dend_4 { pt3dadd( -114.443, -24.1752, 46.9557, 0.55 ) }
    dend_4 { pt3dadd( -118.544, -25.186, 52.9599, 0.55 ) }
    dend_4 { pt3dadd( -123.677, -26.1821, 58.1086, 0.55 ) }
    dend_4 { pt3dadd( -128.592, -27.151, 63.4726, 0.55 ) }
    dend_4 { pt3dadd( -133.64, -27.7894, 68.7732, 0.55 ) }
    dend_4 { pt3dadd( -139.297, -27.5739, 73.4806, 0.55 ) }
    dend_4 { pt3dadd( -145.742, -25.7965, 76.571, 0.55 ) }
    dend_4 { pt3dadd( -152.513, -24.9085, 79.3364, 0.55 ) }
    dend_4 { pt3dadd( -158.656, -23.3818, 83.105, 0.55 ) }
    dend_4 { pt3dadd( -164.328, -22.1989, 87.6565, 0.55 ) }
    dend_4 { pt3dadd( -169.498, -19.9523, 92.386, 0.55 ) }
    dend_4 { pt3dadd( -174.265, -18.3606, 97.7705, 0.55 ) }
    dend_4 { pt3dadd( -178.183, -16.8381, 103.819, 0.55 ) }
    dend_4 { pt3dadd( -182.323, -14.3307, 109.35, 0.55 ) }
    dend_4 { pt3dadd( -186.237, -10.9917, 114.564, 0.55 ) }
    dend_4 { pt3dadd( -190.366, -7.51861, 119.511, 0.55 ) }
    dend_4 { pt3dadd( -194.009, -4.31168, 125.002, 0.55 ) }
    dend_4 { pt3dadd( -198.556, -1.86744, 130.237, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 87/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -5.51352, 22.9459, 11.2804, 2.49 ) }
    dend_36 { pt3dadd( -6.51528, 24.1969, 11.4549, 2.49 ) }
    dend_36 { pt3dadd( -7.42041, 25.3048, 11.7294, 1.11 ) }
    dend_36 { pt3dadd( -8.533, 26.7198, 12.0731, 1.11 ) }
    dend_36 { pt3dadd( -9.90339, 28.3811, 12.5342, 1.11 ) }
    dend_36 { pt3dadd( -11.0885, 29.7334, 13.0275, 1.11 ) }
    dend_36 { pt3dadd( -14.2625, 33.1659, 14.6542, 0.83 ) }
    dend_36 { pt3dadd( -15.0208, 33.9651, 15.14, 0.83 ) }
    dend_36 { pt3dadd( -16.0138, 34.9707, 15.9558, 0.83 ) }
    dend_36 { pt3dadd( -17.511, 36.5251, 17.4778, 0.83 ) }
    dend_36 { pt3dadd( -19.0623, 38.3075, 19.3753, 0.83 ) }
    dend_36 { pt3dadd( -20.5492, 39.979, 21.3328, 0.83 ) }
    dend_36 { pt3dadd( -21.2662, 40.8159, 22.2806, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -22.6528, 42.4988, 24.1638, 0.83 ) }
    dend_36 { pt3dadd( -23.3046, 43.2986, 25.0841, 0.83 ) }
    dend_36 { pt3dadd( -23.9022, 44.1667, 25.9602, 0.83 ) }
    dend_36 { pt3dadd( -24.8254, 45.7504, 27.351, 0.83 ) }
    dend_36 { pt3dadd( -25.2616, 46.6014, 28.0494, 0.83 ) }
    dend_36 { pt3dadd( -25.8995, 47.9525, 29.1744, 0.83 ) }
    dend_36 { pt3dadd( -27.3277, 51.6318, 32.0999, 0.83 ) }
    dend_36 { pt3dadd( -27.6683, 52.8144, 33.1575, 0.83 ) }
    dend_36 { pt3dadd( -27.7295, 53.739, 34.0584, 0.83 ) }
    dend_36 { pt3dadd( -27.5561, 54.4416, 34.7893, 0.83 ) }
    dend_36 { pt3dadd( -27.2094, 55.0693, 35.5233, 0.83 ) }
    dend_36 { pt3dadd( -26.7138, 55.5804, 36.1644, 0.55 ) }
    dend_36 { pt3dadd( -25.7946, 56.2023, 36.8208, 0.55 ) }
    dend_36 { pt3dadd( -24.6937, 56.8727, 37.5833, 0.28 ) }
    dend_36 { pt3dadd( -23.781, 57.4463, 38.1892, 0.28 ) }
    dend_36 { pt3dadd( -22.9293, 58.0028, 38.7295, 0.28 ) }
    dend_36 { pt3dadd( -22.2824, 58.4169, 39.1242, 0.28 ) }
    dend_36 { pt3dadd( -21.0438, 59.1012, 39.8524, 0.28 ) }
    dend_36 { pt3dadd( -20.3398, 59.458, 40.316, 0.28 ) }
    dend_36 { pt3dadd( -22.7189, 64.246, 45.3666, 0.28 ) }
    dend_36 { pt3dadd( -25.0972, 68.3588, 51.0247, 0.28 ) }
    dend_36 { pt3dadd( -27.1319, 72.7373, 56.5876, 0.28 ) }
    dend_36 { pt3dadd( -29.0693, 77.1501, 62.1526, 0.28 ) }
    dend_36 { pt3dadd( -29.5187, 81.911, 67.6761, 0.28 ) }
    dend_36 { pt3dadd( -30.1868, 87.7829, 71.8787, 0.28 ) }
    dend_36 { pt3dadd( -29.3523, 93.9874, 75.4385, 0.28 ) }
    dend_36 { pt3dadd( -29.3937, 100.223, 79.0755, 0.28 ) }
    dend_36 { pt3dadd( -30.5912, 106.506, 82.4891, 0.28 ) }
    dend_36 { pt3dadd( -32.2697, 112.088, 86.8753, 0.28 ) }
    dend_36 { pt3dadd( -35.0641, 117.447, 91.0426, 0.28 ) }
    dend_36 { pt3dadd( -36.4638, 123.468, 94.8619, 0.28 ) }
    dend_36 { pt3dadd( -37.1531, 129.431, 98.9245, 0.28 ) }
    dend_36 { pt3dadd( -37.8174, 134.157, 104.466, 0.28 ) }
    dend_36 { pt3dadd( -37.6333, 138.184, 110.594, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 34/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.51352, 22.9459, 11.2804, 1.94 ) }
    dend_29 { pt3dadd( -4.23742, 24.2898, 12.5393, 1.94 ) }
    dend_29 { pt3dadd( -3.29015, 25.2875, 13.4738, 1.94 ) }
    dend_29 { pt3dadd( -2.05144, 26.592, 14.6958, 1.94 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.7562, -71.6596, 9.03776, 1.94 ) }
    dend_18 { pt3dadd( 17.0572, -81.495, 7.29435, 1.94 ) }
    dend_18 { pt3dadd( 17.643, -90.2117, 6.37073, 1.39 ) }
    dend_18 { pt3dadd( 18.0989, -94.5275, 6.07571, 1.11 ) }
    dend_18 { pt3dadd( 18.9305, -100.945, 5.74419, 1.11 ) }
    dend_18 { pt3dadd( 19.8312, -107.275, 5.38813, 1.11 ) }
    dend_18 { pt3dadd( 21.0263, -116.008, 4.99912, 1.11 ) }
    dend_18 { pt3dadd( 22.6822, -126.311, 5.2313, 0.83 ) }
    dend_18 { pt3dadd( 23.9974, -135.37, 6.13916, 0.83 ) }
    dend_18 { pt3dadd( 24.4515, -139.096, 6.94055, 0.83 ) }
    dend_18 { pt3dadd( 24.8174, -143.03, 8.28049, 0.83 ) }
    dend_18 { pt3dadd( 25.2428, -146.907, 9.95532, 0.83 ) }
    dend_18 { pt3dadd( 25.7486, -152.633, 12.8385, 0.83 ) }
    dend_18 { pt3dadd( 26.1113, -161.346, 17.218, 0.83 ) }
    dend_18 { pt3dadd( 26.2302, -166.89, 20.0648, 0.83 ) }
    dend_18 { pt3dadd( 26.3676, -170.3, 21.6344, 0.83 ) }
    dend_18 { pt3dadd( 26.7149, -177.725, 24.9654, 0.83 ) }
    dend_18 { pt3dadd( 27.1087, -184.488, 27.5604, 0.83 ) }
    dend_18 { pt3dadd( 27.3059, -187.729, 28.6884, 0.83 ) }
    dend_18 { pt3dadd( 27.4993, -189.97, 29.4229, 0.83 ) }
    dend_18 { pt3dadd( 27.6565, -195.207, 31.1101, 0.83 ) }
    dend_18 { pt3dadd( 27.4368, -203.262, 33.9211, 0.83 ) }
    dend_18 { pt3dadd( 27.2649, -205.644, 34.8683, 0.83 ) }
    dend_18 { pt3dadd( 26.9049, -211.971, 37.7841, 0.83 ) }
    dend_18 { pt3dadd( 26.7641, -216.018, 39.7266, 0.83 ) }
    dend_18 { pt3dadd( 26.9601, -223.251, 43.3408, 0.83 ) }
    dend_18 { pt3dadd( 27.1995, -227.503, 45.4438, 0.83 ) }
    dend_18 { pt3dadd( 27.8058, -231.983, 47.6697, 1.39 ) }
    dend_18 { pt3dadd( 28.7622, -236.74, 50.5114, 0.83 ) }
    dend_18 { pt3dadd( 29.3743, -239.19, 52.0914, 0.55 ) }
    dend_18 { pt3dadd( 31.0396, -243.938, 55.8332, 0.55 ) }
    dend_18 { pt3dadd( 32.0454, -245.896, 57.7626, 0.55 ) }
    dend_18 { pt3dadd( 35.1175, -250.945, 63.2163, 0.55 ) }
    dend_18 { pt3dadd( 37.1735, -254.4, 66.9352, 0.55 ) }
    dend_18 { pt3dadd( 36.644, -264.98, 70.5566, 0.55 ) }
    dend_18 { pt3dadd( 37.9665, -275.793, 73.103, 0.55 ) }
    dend_18 { pt3dadd( 38.18, -286.858, 74.5987, 0.55 ) }
    dend_18 { pt3dadd( 37.7469, -297.67, 77.4038, 0.55 ) }
    dend_18 { pt3dadd( 38.8601, -308.346, 80.5826, 0.55 ) }
    dend_18 { pt3dadd( 41.412, -319.022, 82.8464, 0.55 ) }
    dend_18 { pt3dadd( 43.428, -329.36, 86.7308, 0.55 ) }
    dend_18 { pt3dadd( 47.8648, -338.926, 90.8052, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 16.7562, -71.6596, 9.03776, 0.55 ) }
    dend_17 { pt3dadd( 10.7676, -81.0255, 0.908239, 0.55 ) }
    dend_17 { pt3dadd( 5.80456, -88.5309, -5.1609, 0.55 ) }
    dend_17 { pt3dadd( 3.786, -91.4896, -7.35403, 0.55 ) }
    dend_17 { pt3dadd( 1.76368, -94.68, -9.48164, 0.55 ) }
    dend_17 { pt3dadd( -0.660018, -98.9788, -12.0675, 0.55 ) }
    dend_17 { pt3dadd( -3.78629, -104.734, -15.8189, 0.55 ) }
    dend_17 { pt3dadd( -5.80583, -108.854, -18.2119, 0.55 ) }
    dend_17 { pt3dadd( -7.21816, -111.865, -20.078, 0.55 ) }
    dend_17 { pt3dadd( -9.46726, -116.826, -23.2032, 0.55 ) }
    dend_17 { pt3dadd( -13.551, -125.615, -28.675, 0.28 ) }
    dend_17 { pt3dadd( -17.4884, -134.22, -33.7856, 1.66 ) }
    dend_17 { pt3dadd( -20.0017, -139.351, -36.3275, 0.28 ) }
    dend_17 { pt3dadd( -22.3787, -143.914, -38.2664, 1.94 ) }
    dend_17 { pt3dadd( -26.9533, -152.174, -41.1512, 0.28 ) }
    dend_17 { pt3dadd( -29.1152, -155.887, -42.1205, 1.39 ) }
    dend_17 { pt3dadd( -30.4004, -158.104, -42.4773, 1.39 ) }
    dend_17 { pt3dadd( -37.0136, -169.93, -43.4039, 0.28 ) }
    dend_17 { pt3dadd( -41.7187, -178.542, -43.8511, 0.28 ) }
    dend_17 { pt3dadd( -44.1015, -183.139, -44.6473, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( -46.8999, -189.169, -46.4557, 0.28 ) }
    dend_17 { pt3dadd( -47.9983, -192.112, -47.6799, 0.83 ) }
    dend_17 { pt3dadd( -48.5466, -193.894, -48.5877, 0.28 ) }
    dend_17 { pt3dadd( -49.1447, -196.463, -50.1006, 1.11 ) }
    dend_17 { pt3dadd( -52.8078, -214.912, -60.8963, 0.28 ) }
    dend_17 { pt3dadd( -53.3841, -218.041, -62.6529, 0.55 ) }
    dend_17 { pt3dadd( -55.3365, -229.314, -68.5265, 0.28 ) }
    dend_17 { pt3dadd( -55.6429, -231.568, -69.5028, 0.55 ) }
    dend_17 { pt3dadd( -56.2685, -237.641, -71.7072, 0.28 ) }
    dend_17 { pt3dadd( -56.536, -243.542, -73.0825, 0.83 ) }
    dend_17 { pt3dadd( -56.5155, -245.114, -73.0869, 0.83 ) }
    dend_17 { pt3dadd( -56.1133, -252.15, -72.7809, 0.28 ) }
    dend_17 { pt3dadd( -55.3472, -259.421, -71.7893, 0.28 ) }
    dend_17 { pt3dadd( -54.5308, -265.169, -70.8121, 0.55 ) }
    dend_17 { pt3dadd( -52.6162, -276.143, -69.1048, 0.28 ) }
    dend_17 { pt3dadd( -51.1959, -283.978, -68.3653, 0.55 ) }
    dend_17 { pt3dadd( -49.7276, -291.582, -67.7214, 0.28 ) }
    dend_17 { pt3dadd( -48.3947, -298.186, -67.1358, 0.83 ) }
    dend_17 { pt3dadd( -47.6976, -301.786, -67.0085, 0.28 ) }
    dend_17 { pt3dadd( -46.7421, -307.038, -67.1413, 0.83 ) }
    dend_17 { pt3dadd( -44.4614, -319.89, -68.1514, 0.28 ) }
    dend_17 { pt3dadd( -43.8278, -323.688, -68.6084, 0.55 ) }
    dend_17 { pt3dadd( -43.516, -325.416, -68.8175, 0.28 ) }
    dend_17 { pt3dadd( -42.2419, -331.075, -69.5054, 0.83 ) }
    dend_17 { pt3dadd( -39.2036, -342.118, -69.9942, 0.28 ) }
    dend_17 { pt3dadd( -36.8713, -348.808, -69.5819, 1.11 ) }
    dend_17 { pt3dadd( -34.46, -354.311, -68.6813, 0.28 ) }
    dend_17 { pt3dadd( -32.7458, -357.804, -67.9336, 0.28 ) }
    dend_17 { pt3dadd( -30.2529, -362.443, -66.6718, 0.28 ) }
    dend_17 { pt3dadd( -28.104, -366.079, -65.3306, 0.28 ) }
    dend_17 { pt3dadd( -27.2968, -367.634, -64.8825, 0.55 ) }
    dend_17 { pt3dadd( -26.7889, -370.765, -64.8346, 0.28 ) }
    dend_17 { pt3dadd( -26.9338, -373.235, -65.004, 0.55 ) }
    dend_17 { pt3dadd( -27.3101, -374.661, -65.2124, 0.28 ) }
    dend_17 { pt3dadd( -28.3418, -377.16, -65.7816, 0.55 ) }
    dend_17 { pt3dadd( -32.8157, -386.334, -68.7391, 0.28 ) }
    dend_17 { pt3dadd( -33.6657, -387.797, -69.2887, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.31865, -39.523, -2.47238, 1.39 ) }
    dend_7 { pt3dadd( -6.5907, -45.7814, -2.88228, 1.39 ) }
    dend_7 { pt3dadd( -7.20617, -48.4942, -3.05151, 1.39 ) }
    dend_7 { pt3dadd( -7.91389, -51.7211, -2.78386, 1.39 ) }
    dend_7 { pt3dadd( -9.06173, -57.2948, -1.97141, 1.39 ) }
    dend_7 { pt3dadd( -9.8356, -61.2965, -1.2961, 1.39 ) }
    dend_7 { pt3dadd( -10.3567, -64.3569, -0.7611, 1.39 ) }
    dend_7 { pt3dadd( -11.109, -68.4442, 3.40616E-5, 1.11 ) }
    dend_7 { pt3dadd( -12.4141, -76.6294, 1.8147, 1.11 ) }
    dend_7 { pt3dadd( -12.9014, -81.0324, 2.88943, 1.11 ) }
    dend_7 { pt3dadd( -13.2896, -86.5631, 4.39156, 1.11 ) }
    dend_7 { pt3dadd( -13.4949, -90.0912, 5.35425, 1.39 ) }
    dend_7 { pt3dadd( -13.7763, -94.7007, 6.4809, 1.39 ) }
    dend_7 { pt3dadd( -14.3855, -104.025, 8.47904, 0.83 ) }
    dend_7 { pt3dadd( -14.6383, -106.942, 8.95636, 0.83 ) }
    dend_7 { pt3dadd( -14.9869, -109.947, 9.45625, 1.11 ) }
    dend_7 { pt3dadd( -15.5217, -113.467, 10.0313, 0.83 ) }
    dend_7 { pt3dadd( -16.4571, -118.5, 10.7762, 1.11 ) }
    dend_7 { pt3dadd( -17.0638, -121.592, 11.1365, 0.83 ) }
    dend_7 { pt3dadd( -17.6523, -124.023, 11.3935, 0.83 ) }
    dend_7 { pt3dadd( -18.2113, -126.469, 11.6278, 0.83 ) }
    dend_7 { pt3dadd( -18.6203, -129.055, 11.8823, 0.83 ) }
    dend_7 { pt3dadd( -18.8201, -131.51, 12.1508, 0.83 ) }
    dend_7 { pt3dadd( -18.8565, -133.004, 12.3615, 0.83 ) }
    dend_7 { pt3dadd( -18.7974, -135.119, 12.6316, 0.83 ) }
    dend_7 { pt3dadd( -18.6025, -138.426, 13.0642, 0.83 ) }
    dend_7 { pt3dadd( -18.2843, -142.848, 13.7029, 0.83 ) }
    dend_7 { pt3dadd( -18.0048, -145.935, 14.1737, 1.11 ) }
    dend_7 { pt3dadd( -17.7896, -148.591, 14.6216, 0.83 ) }
    dend_7 { pt3dadd( -17.5123, -151.929, 15.0618, 0.83 ) }
    dend_7 { pt3dadd( -17.4283, -152.822, 15.1521, 0.83 ) }
    dend_7 { pt3dadd( -17.2823, -155.075, 15.2697, 0.83 ) }
    dend_7 { pt3dadd( -17.1506, -157.322, 15.2615, 0.83 ) }
    dend_7 { pt3dadd( -16.8037, -162.478, 15.1435, 0.83 ) }
    dend_7 { pt3dadd( -16.5558, -166.624, 14.9914, 0.83 ) }
    dend_7 { pt3dadd( -16.4357, -168.438, 14.9033, 0.83 ) }
    dend_7 { pt3dadd( -16.236, -171.467, 14.6221, 0.83 ) }
    dend_7 { pt3dadd( -16.0313, -174.811, 14.2243, 0.83 ) }
    dend_7 { pt3dadd( -15.9045, -177.788, 13.8274, 0.83 ) }
    dend_7 { pt3dadd( -15.7814, -179.791, 13.5106, 0.83 ) }
    dend_7 { pt3dadd( -15.6279, -182.193, 13.2732, 0.83 ) }
    dend_7 { pt3dadd( -15.328, -185.045, 12.9404, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 79/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.31865, -39.523, -2.47238, 0.83 ) }
    dend_6 { pt3dadd( -9.29922, -40.8615, 2.47753, 0.83 ) }
    dend_6 { pt3dadd( -9.73939, -41.025, 2.94926, 0.83 ) }
    dend_6 { pt3dadd( -10.6915, -41.381, 3.82245, 0.83 ) }
    dend_6 { pt3dadd( -13.6183, -42.3693, 6.16928, 0.83 ) }
    dend_6 { pt3dadd( -14.8919, -42.7854, 7.04243, 0.83 ) }
    dend_6 { pt3dadd( -16.1489, -43.2011, 7.76306, 0.83 ) }
    dend_6 { pt3dadd( -17.1112, -43.5699, 8.01889, 0.83 ) }
    dend_6 { pt3dadd( -18.2664, -44.0126, 8.22307, 0.83 ) }
    dend_6 { pt3dadd( -19.3756, -44.4144, 8.30548, 0.83 ) }
    dend_6 { pt3dadd( -20.9401, -45.0361, 8.34938, 0.83 ) }
    dend_6 { pt3dadd( -22.6475, -45.7696, 8.48836, 0.83 ) }
    dend_6 { pt3dadd( -24.0727, -46.4368, 8.65908, 0.83 ) }
    dend_6 { pt3dadd( -25.643, -47.2568, 8.88016, 0.83 ) }
    dend_6 { pt3dadd( -26.8894, -47.9716, 9.07007, 0.83 ) }
    dend_6 { pt3dadd( -29.1116, -49.2832, 9.41502, 0.83 ) }
    dend_6 { pt3dadd( -30.4629, -50.061, 9.62195, 0.83 ) }
    dend_6 { pt3dadd( -32.0571, -50.9781, 9.85305, 0.83 ) }
    dend_6 { pt3dadd( -34.3004, -52.2809, 10.0364, 0.83 ) }
    dend_6 { pt3dadd( -35.5889, -53.0341, 10.0435, 0.83 ) }
    dend_6 { pt3dadd( -36.4704, -53.6072, 9.98113, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -37.3845, -54.2293, 9.83713, 0.83 ) }
    dend_6 { pt3dadd( -38.2973, -54.9018, 9.56956, 0.83 ) }
    dend_6 { pt3dadd( -39.9861, -56.2475, 8.87085, 0.83 ) }
    dend_6 { pt3dadd( -41.4949, -57.5154, 8.08854, 0.83 ) }
    dend_6 { pt3dadd( -43.0238, -58.8215, 7.29768, 0.83 ) }
    dend_6 { pt3dadd( -43.6889, -59.3816, 6.99661, 0.83 ) }
    dend_6 { pt3dadd( -46.4163, -61.5972, 5.94634, 0.83 ) }
    dend_6 { pt3dadd( -47.6488, -62.5651, 5.54816, 0.83 ) }
    dend_6 { pt3dadd( -49.3393, -63.8876, 4.98893, 0.83 ) }
    dend_6 { pt3dadd( -51.6041, -65.6929, 4.21396, 0.83 ) }
    dend_6 { pt3dadd( -54.5336, -67.9058, 3.26495, 0.55 ) }
    dend_6 { pt3dadd( -56.2551, -69.2317, 2.76471, 0.55 ) }
    dend_6 { pt3dadd( -57.2807, -70.0269, 2.52055, 0.55 ) }
    dend_6 { pt3dadd( -60.4486, -72.3772, 1.73964, 0.55 ) }
    dend_6 { pt3dadd( -62.4812, -73.8884, 0.959481, 0.55 ) }
    dend_6 { pt3dadd( -64.0636, -75.0263, 0.150735, 1.11 ) }
    dend_6 { pt3dadd( -65.523, -76.0286, -0.689776, 1.11 ) }
    dend_6 { pt3dadd( -66.1605, -76.468, -1.03776, 1.11 ) }
    dend_6 { pt3dadd( -68.0182, -77.7466, -2.10139, 0.28 ) }
    dend_6 { pt3dadd( -72.6089, -80.8359, -4.6749, 0.83 ) }
    dend_6 { pt3dadd( -75.0942, -82.5169, -6.16802, 0.28 ) }
    dend_6 { pt3dadd( -76.6433, -83.5802, -6.97877, 0.83 ) }
    dend_6 { pt3dadd( -78.842, -84.9789, -7.85918, 0.55 ) }
    dend_6 { pt3dadd( -81.3551, -86.5092, -8.38808, 0.55 ) }
    dend_6 { pt3dadd( -82.6502, -87.2886, -8.39695, 0.83 ) }
    dend_6 { pt3dadd( -83.8358, -87.8611, -7.92763, 0.55 ) }
    dend_6 { pt3dadd( -87.9674, -89.4975, -5.35531, 0.55 ) }
    dend_6 { pt3dadd( -88.9289, -89.7621, -4.57223, 0.55 ) }
    dend_6 { pt3dadd( -90.091, -89.9394, -3.47787, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -37.6333, 138.184, 110.594, 0.28 ) }
    dend_40 { pt3dadd( -39.7455, 143.656, 115.322, 0.28 ) }
    dend_40 { pt3dadd( -41.4968, 148.547, 120.807, 0.28 ) }
    dend_40 { pt3dadd( -41.899, 153.899, 126.04, 0.28 ) }
    dend_40 { pt3dadd( -42.3302, 159.063, 131.474, 0.28 ) }
    dend_40 { pt3dadd( -43.1937, 163.89, 137.198, 0.28 ) }
    dend_40 { pt3dadd( -45.1335, 168.636, 142.763, 0.28 ) }
    dend_40 { pt3dadd( -47.9551, 172.835, 148.458, 0.28 ) }
    dend_40 { pt3dadd( -49.6207, 177.723, 153.969, 0.28 ) }
    dend_40 { pt3dadd( -50.6874, 182.931, 159.288, 0.28 ) }
    dend_40 { pt3dadd( -52.52, 188.772, 163.632, 0.28 ) }
    dend_40 { pt3dadd( -52.4468, 194.986, 167.72, 0.28 ) }
    dend_40 { pt3dadd( -52.4825, 201.171, 171.859, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 42/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -37.6333, 138.184, 110.594, 0.28 ) }
    dend_37 { pt3dadd( -37.2215, 142.804, 114.865, 0.28 ) }
    dend_37 { pt3dadd( -37.1416, 147.115, 119.498, 0.28 ) }
    dend_37 { pt3dadd( -36.6468, 150.85, 124.611, 0.28 ) }
    dend_37 { pt3dadd( -35.1102, 154.642, 129.44, 0.28 ) }
    dend_37 { pt3dadd( -34.2688, 157.92, 134.837, 0.28 ) }
    dend_37 { pt3dadd( -32.6349, 160.887, 140.238, 0.28 ) }
    dend_37 { pt3dadd( -30.9223, 163.862, 145.609, 0.28 ) }
    dend_37 { pt3dadd( -29.6032, 165.833, 151.592, 0.28 ) }
    dend_37 { pt3dadd( -26.9701, 167.492, 157.227, 0.28 ) }
    dend_37 { pt3dadd( -23.3697, 169.326, 162.219, 0.28 ) }
    dend_37 { pt3dadd( -19.8046, 171.588, 167.027, 0.28 ) }
    dend_37 { pt3dadd( -16.0393, 173.601, 171.811, 0.28 ) }
    dend_37 { pt3dadd( -12.7936, 175.32, 177.088, 0.28 ) }
    dend_37 { pt3dadd( -9.42414, 176.816, 182.371, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.05144, 26.592, 14.6958, 1.66 ) }
    dend_33 { pt3dadd( -3.34696, 20.8539, 22.4726, 1.66 ) }
    dend_33 { pt3dadd( -4.06391, 17.6785, 26.7763, 1.66 ) }
    dend_33 { pt3dadd( -4.51597, 15.6762, 29.4899, 1.66 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.05144, 26.592, 14.6958, 0.83 ) }
    dend_30 { pt3dadd( 0.837666, 27.1763, 15.6146, 0.83 ) }
    dend_30 { pt3dadd( 3.06595, 27.6866, 16.5637, 0.83 ) }
    dend_30 { pt3dadd( 5.29857, 28.3742, 17.3933, 0.83 ) }
    dend_30 { pt3dadd( 8.84172, 29.8452, 18.7004, 0.83 ) }
    dend_30 { pt3dadd( 11.078, 30.9642, 19.5469, 0.83 ) }
    dend_30 { pt3dadd( 13.9831, 32.4407, 20.5644, 0.83 ) }
    dend_30 { pt3dadd( 16.7111, 33.713, 20.9968, 0.83 ) }
    dend_30 { pt3dadd( 21.8742, 36.0171, 21.3472, 0.83 ) }
    dend_30 { pt3dadd( 25.3374, 37.5941, 21.3598, 0.83 ) }
    dend_30 { pt3dadd( 27.3507, 38.5662, 21.3702, 0.83 ) }
    dend_30 { pt3dadd( 31.0982, 40.4349, 21.0722, 0.83 ) }
    dend_30 { pt3dadd( 39.767, 44.9322, 19.7229, 0.83 ) }
    dend_30 { pt3dadd( 41.8774, 46.035, 19.3366, 0.83 ) }
    dend_30 { pt3dadd( 44.4285, 47.3122, 18.6879, 0.83 ) }
    dend_30 { pt3dadd( 47.3758, 48.8615, 17.949, 0.55 ) }
    dend_30 { pt3dadd( 53.5829, 52.5526, 16.4645, 0.55 ) }
    dend_30 { pt3dadd( 55.6766, 54.1483, 16.0479, 0.55 ) }
    dend_30 { pt3dadd( 57.049, 55.4147, 15.9383, 0.55 ) }
    dend_30 { pt3dadd( 64.6059, 62.3698, 15.4777, 0.55 ) }
    dend_30 { pt3dadd( 70.0517, 67.2879, 15.5759, 0.55 ) }
    dend_30 { pt3dadd( 71.8546, 68.9896, 15.781, 0.83 ) }
    dend_30 { pt3dadd( 73.403, 70.36, 15.9535, 0.83 ) }
    dend_30 { pt3dadd( 75.4811, 72.0207, 15.9539, 0.83 ) }
    dend_30 { pt3dadd( 76.7921, 73.0217, 15.9205, 0.83 ) }
    dend_30 { pt3dadd( 78.7347, 74.4097, 15.6882, 0.55 ) }
    dend_30 { pt3dadd( 80.8974, 75.819, 15.2366, 0.55 ) }
    dend_30 { pt3dadd( 88.9698, 81.2424, 13.6242, 0.55 ) }
    dend_30 { pt3dadd( 90.3266, 82.1806, 13.366, 0.55 ) }
    dend_30 { pt3dadd( 94.0583, 85.0104, 12.7313, 1.11 ) }
    dend_30 { pt3dadd( 99.1228, 89.1056, 12.1161, 0.55 ) }
    dend_30 { pt3dadd( 100.228, 90.0625, 12.0779, 0.55 ) }
    dend_30 { pt3dadd( 103.352, 93.0054, 12.4563, 0.83 ) }
    dend_30 { pt3dadd( 105.043, 94.9286, 13.0829, 0.28 ) }
    dend_30 { pt3dadd( 107.156, 97.5024, 14.0375, 0.55 ) }
    dend_30 { pt3dadd( 108.177, 98.7215, 14.4321, 0.28 ) }
    dend_30 { pt3dadd( 109.616, 100.504, 15.1865, 0.28 ) }
    dend_30 { pt3dadd( 111.386, 102.581, 15.9788, 0.28 ) }
    dend_30 { pt3dadd( 111.915, 103.12, 16.1463, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 113.129, 104.211, 16.3587, 0.55 ) }
    dend_30 { pt3dadd( 119.73, 109.129, 16.3704, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.328, -185.045, 12.9404, 0.83 ) }
    dend_11 { pt3dadd( -15.169, -189.788, 12.374, 0.83 ) }
    dend_11 { pt3dadd( -15.0401, -191.835, 12.1512, 0.83 ) }
    dend_11 { pt3dadd( -14.6797, -197.087, 11.6287, 0.83 ) }
    dend_11 { pt3dadd( -14.13, -203.806, 10.7728, 0.83 ) }
    dend_11 { pt3dadd( -13.8217, -208.444, 10.1419, 0.83 ) }
    dend_11 { pt3dadd( -13.6917, -210.898, 9.88142, 0.83 ) }
    dend_11 { pt3dadd( -13.587, -213.897, 9.62235, 0.83 ) }
    dend_11 { pt3dadd( -13.5845, -215.836, 9.58569, 0.83 ) }
    dend_11 { pt3dadd( -13.7028, -221.027, 9.861, 0.83 ) }
    dend_11 { pt3dadd( -13.8411, -225.359, 10.435, 0.83 ) }
    dend_11 { pt3dadd( -13.9661, -229.593, 11.0852, 0.55 ) }
    dend_11 { pt3dadd( -14.1716, -233.768, 11.7851, 0.55 ) }
    dend_11 { pt3dadd( -14.4533, -239.665, 12.4594, 0.83 ) }
    dend_11 { pt3dadd( -14.4848, -241.882, 12.6571, 0.83 ) }
    dend_11 { pt3dadd( -14.5002, -244.502, 12.8338, 0.83 ) }
    dend_11 { pt3dadd( -14.5386, -246.362, 12.7246, 0.83 ) }
    dend_11 { pt3dadd( -14.6795, -248.959, 12.2856, 0.83 ) }
    dend_11 { pt3dadd( -15.2134, -255.635, 10.81, 0.83 ) }
    dend_11 { pt3dadd( -15.6282, -259.221, 10.0508, 1.39 ) }
    dend_11 { pt3dadd( -15.9483, -261.367, 9.64644, 1.39 ) }
    dend_11 { pt3dadd( -17.4698, -269.458, 8.38428, 0.83 ) }
    dend_11 { pt3dadd( -17.9849, -271.921, 8.10251, 0.83 ) }
    dend_11 { pt3dadd( -18.9593, -275.786, 7.84258, 1.39 ) }
    dend_11 { pt3dadd( -20.2855, -279.775, 7.8001, 0.83 ) }
    dend_11 { pt3dadd( -20.8805, -281.318, 7.77103, 0.28 ) }
    dend_11 { pt3dadd( -22.3641, -284.907, 7.61641, 0.83 ) }
    dend_11 { pt3dadd( -23.8447, -288.189, 7.43447, 0.83 ) }
    dend_11 { pt3dadd( -25.557, -291.793, 6.95743, 1.11 ) }
    dend_11 { pt3dadd( -27.6092, -295.846, 6.3042, 0.28 ) }
    dend_11 { pt3dadd( -29.504, -299.465, 5.60424, 0.28 ) }
    dend_11 { pt3dadd( -32.8512, -305.776, 4.22432, 0.28 ) }
    dend_11 { pt3dadd( -34.8358, -309.485, 3.26855, 0.28 ) }
    dend_11 { pt3dadd( -37.5087, -314.708, 1.70441, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -15.328, -185.045, 12.9404, 0.28 ) }
    dend_8 { pt3dadd( -12.5778, -185.589, 12.5212, 0.28 ) }
    dend_8 { pt3dadd( -10.8143, -185.942, 12.4973, 0.28 ) }
    dend_8 { pt3dadd( -8.80067, -186.341, 12.594, 0.28 ) }
    dend_8 { pt3dadd( -4.62299, -187.078, 13.5377, 0.28 ) }
    dend_8 { pt3dadd( -3.35643, -187.249, 14.0306, 0.28 ) }
    dend_8 { pt3dadd( 0.678759, -187.689, 15.7867, 0.28 ) }
    dend_8 { pt3dadd( 2.83498, -187.869, 16.8698, 0.28 ) }
    dend_8 { pt3dadd( 3.97143, -187.949, 17.4904, 0.28 ) }
    dend_8 { pt3dadd( 8.31142, -188.236, 20.023, 0.28 ) }
    dend_8 { pt3dadd( 12.1285, -188.545, 22.3395, 0.28 ) }
    dend_8 { pt3dadd( 15.2808, -188.825, 24.0569, 0.28 ) }
    dend_8 { pt3dadd( 17.1278, -188.996, 24.9399, 0.28 ) }
    dend_8 { pt3dadd( 18.5982, -189.136, 25.6313, 0.28 ) }
    dend_8 { pt3dadd( 19.7696, -189.273, 26.1102, 0.28 ) }
    dend_8 { pt3dadd( 21.8855, -189.651, 26.5416, 0.28 ) }
    dend_8 { pt3dadd( 23.1907, -190.032, 26.6265, 0.28 ) }
    dend_8 { pt3dadd( 31.1158, -190.983, 31.1684, 0.28 ) }
    dend_8 { pt3dadd( 39.7289, -191.239, 34.3539, 0.28 ) }
    dend_8 { pt3dadd( 48.397, -193.252, 36.5724, 0.28 ) }
    dend_8 { pt3dadd( 56.878, -196.241, 38.2484, 0.28 ) }
    dend_8 { pt3dadd( 64.1637, -200.423, 41.7333, 0.28 ) }
    dend_8 { pt3dadd( 71.8023, -203.508, 45.6907, 0.28 ) }
    dend_8 { pt3dadd( 79.6067, -206.404, 49.4788, 0.28 ) }
    dend_8 { pt3dadd( 87.187, -209.436, 53.5891, 0.28 ) }
    dend_8 { pt3dadd( 94.3622, -212.303, 58.4788, 0.28 ) }
    dend_8 { pt3dadd( 100.922, -214.033, 64.6488, 0.28 ) }
    dend_8 { pt3dadd( 106.779, -214.348, 71.7187, 0.28 ) }
    dend_8 { pt3dadd( 111.296, -214.025, 79.7115, 0.28 ) }
    dend_8 { pt3dadd( 116.117, -215.49, 87.3762, 0.28 ) }
    dend_8 { pt3dadd( 118.959, -217.447, 95.8596, 0.28 ) }
    dend_8 { pt3dadd( 123.566, -218.249, 103.762, 0.28 ) }
    dend_8 { pt3dadd( 127.883, -218.14, 111.87, 0.28 ) }
    dend_8 { pt3dadd( 132.225, -219.659, 119.804, 0.28 ) }
    dend_8 { pt3dadd( 137.377, -219.579, 127.409, 0.28 ) }
    dend_8 { pt3dadd( 143.364, -219.065, 134.357, 0.28 ) }
    dend_8 { pt3dadd( 149.745, -219.796, 140.922, 0.28 ) }
    dend_8 { pt3dadd( 157.062, -221.24, 146.269, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -52.4825, 201.171, 171.859, 0.28 ) }
    dend_42 { pt3dadd( -59.2142, 207.168, 181.736, 0.28 ) }
    dend_42 { pt3dadd( -67.1851, 211.351, 191.747, 0.28 ) }
    dend_42 { pt3dadd( -77.1844, 213.559, 200.599, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 78/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -52.4825, 201.171, 171.859, 0.28 ) }
    dend_41 { pt3dadd( -41.6883, 204.194, 167.023, 0.28 ) }
    dend_41 { pt3dadd( -31.3247, 209.195, 163.205, 0.28 ) }
    dend_41 { pt3dadd( -20.4013, 213.72, 160.491, 0.28 ) }
    dend_41 { pt3dadd( -10.7723, 220.367, 157.712, 0.28 ) }
    dend_41 { pt3dadd( -1.34564, 227.276, 154.944, 0.28 ) }
    dend_41 { pt3dadd( 7.58584, 234.324, 151.056, 0.28 ) }
    dend_41 { pt3dadd( 15.8464, 240.57, 144.789, 0.28 ) }
    dend_41 { pt3dadd( 25.5525, 243.884, 138.153, 0.28 ) }
    dend_41 { pt3dadd( 34.1906, 247.8, 130.463, 0.28 ) }
    dend_41 { pt3dadd( 44.2364, 249.311, 123.611, 0.28 ) }
    dend_41 { pt3dadd( 52.9651, 250.976, 115.168, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -9.42414, 176.816, 182.371, 0.28 ) }
    dend_39 { pt3dadd( -15.3214, 171.725, 189.166, 0.28 ) }
    dend_39 { pt3dadd( -19.6358, 166.793, 197.21, 0.28 ) }
    dend_39 { pt3dadd( -23.1379, 163.483, 206.447, 0.28 ) }
    dend_39 { pt3dadd( -24.6622, 160.56, 216.335, 0.28 ) }
    dend_39 { pt3dadd( -27.9378, 158.209, 225.946, 0.28 ) }
    dend_39 { pt3dadd( -31.5942, 157.361, 235.659, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -9.42414, 176.816, 182.371, 0.28 ) }
    dend_38 { pt3dadd( -4.77693, 181.857, 172.155, 0.28 ) }
    dend_38 { pt3dadd( 0.397507, 185.401, 161.543, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 0/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -4.51597, 15.6762, 29.4899, 1.11 ) }
    dend_35 { pt3dadd( 3.79613, 12.7218, 33.7278, 1.11 ) }
    dend_35 { pt3dadd( 7.4011, 11.4327, 35.9426, 1.11 ) }
    dend_35 { pt3dadd( 14.7221, 9.10044, 40.9847, 1.11 ) }
    dend_35 { pt3dadd( 19.3859, 7.85575, 44.626, 1.11 ) }
    dend_35 { pt3dadd( 23.0154, 7.03943, 47.657, 1.11 ) }
    dend_35 { pt3dadd( 29.7799, 5.53505, 53.4683, 1.11 ) }
    dend_35 { pt3dadd( 36.9297, 4.27487, 60.2544, 1.11 ) }
    dend_35 { pt3dadd( 40.0759, 3.94615, 62.9096, 1.11 ) }
    dend_35 { pt3dadd( 44.3433, 3.8672, 65.7142, 0.83 ) }
    dend_35 { pt3dadd( 47.1569, 3.88644, 67.5186, 0.83 ) }
    dend_35 { pt3dadd( 49.1333, 3.80729, 68.7496, 0.83 ) }
    dend_35 { pt3dadd( 54.8546, 3.36086, 72.3087, 0.83 ) }
    dend_35 { pt3dadd( 57.0785, 3.18596, 73.366, 0.83 ) }
    dend_35 { pt3dadd( 61.8113, 2.70266, 75.6934, 0.83 ) }
    dend_35 { pt3dadd( 65.143, 2.34635, 77.4334, 0.83 ) }
    dend_35 { pt3dadd( 67.4137, 2.11875, 78.8255, 0.83 ) }
    dend_35 { pt3dadd( 69.6827, 1.88267, 80.4658, 0.83 ) }
    dend_35 { pt3dadd( 72.2114, 1.52476, 82.6942, 0.83 ) }
    dend_35 { pt3dadd( 74.5343, 1.2585, 84.64, 0.83 ) }
    dend_35 { pt3dadd( 76.2614, 1.15455, 86.0206, 0.83 ) }
    dend_35 { pt3dadd( 78.4104, 1.13363, 87.4888, 0.83 ) }
    dend_35 { pt3dadd( 80.2371, 1.14222, 88.6197, 0.83 ) }
    dend_35 { pt3dadd( 82.573, 1.13692, 89.9251, 0.83 ) }
    dend_35 { pt3dadd( 85.7467, 1.21429, 91.5665, 0.83 ) }
    dend_35 { pt3dadd( 88.0152, 1.35805, 92.7703, 0.83 ) }
    dend_35 { pt3dadd( 90.5628, 1.65418, 94.187, 0.83 ) }
    dend_35 { pt3dadd( 92.8348, 2.06509, 95.5385, 0.83 ) }
    dend_35 { pt3dadd( 94.6576, 2.50451, 96.719, 0.83 ) }
    dend_35 { pt3dadd( 97.0076, 3.09839, 98.4034, 0.83 ) }
    dend_35 { pt3dadd( 98.5031, 3.45539, 99.6218, 0.55 ) }
    dend_35 { pt3dadd( 99.2952, 3.65982, 100.271, 0.55 ) }
    dend_35 { pt3dadd( 100.575, 3.97568, 101.079, 0.55 ) }
    dend_35 { pt3dadd( 101.493, 4.16669, 101.5, 0.55 ) }
    dend_35 { pt3dadd( 103.576, 4.56104, 102.214, 0.55 ) }
    dend_35 { pt3dadd( 105.2, 4.77143, 102.331, 0.55 ) }
    dend_35 { pt3dadd( 106.715, 4.89007, 102.255, 0.55 ) }
    dend_35 { pt3dadd( 112.308, 5.01193, 101.688, 0.55 ) }
    dend_35 { pt3dadd( 114.284, 4.95192, 101.441, 0.55 ) }
    dend_35 { pt3dadd( 116.113, 4.833, 101.23, 0.55 ) }
    dend_35 { pt3dadd( 123.444, 4.11515, 100.573, 0.55 ) }
    dend_35 { pt3dadd( 124.994, 3.88758, 100.509, 0.55 ) }
    dend_35 { pt3dadd( 127.075, 3.39351, 100.598, 0.55 ) }
    dend_35 { pt3dadd( 128.861, 2.66909, 101.073, 0.55 ) }
    dend_35 { pt3dadd( 130.935, 1.43972, 101.964, 0.55 ) }
    dend_35 { pt3dadd( 132.555, 0.171761, 103.059, 0.55 ) }
    dend_35 { pt3dadd( 133.337, -0.554026, 103.84, 0.83 ) }
    dend_35 { pt3dadd( 134.629, -1.69829, 105.113, 0.83 ) }
    dend_35 { pt3dadd( 137.337, -4.11643, 107.993, 0.83 ) }
    dend_35 { pt3dadd( 138.714, -5.26783, 109.48, 0.55 ) }
    dend_35 { pt3dadd( 140.323, -6.43331, 111.165, 0.55 ) }
    dend_35 { pt3dadd( 142.279, -7.55167, 113.118, 0.55 ) }
    dend_35 { pt3dadd( 143.978, -8.29708, 114.711, 0.55 ) }
    dend_35 { pt3dadd( 146.238, -9.11886, 116.969, 0.55 ) }
    dend_35 { pt3dadd( 149.043, -9.91218, 119.802, 0.83 ) }
    dend_35 { pt3dadd( 151.757, -10.5157, 122.756, 0.55 ) }
    dend_35 { pt3dadd( 153.908, -10.8633, 124.88, 0.55 ) }
    dend_35 { pt3dadd( 156.109, -11.0851, 126.817, 0.55 ) }
    dend_35 { pt3dadd( 160.303, -11.3275, 129.96, 0.55 ) }
    dend_35 { pt3dadd( 162.521, -11.3959, 131.338, 0.55 ) }
    dend_35 { pt3dadd( 164.968, -11.499, 132.703, 0.55 ) }
    dend_35 { pt3dadd( 171.259, -11.9252, 136.506, 0.55 ) }
    dend_35 { pt3dadd( 173.767, -12.1159, 138.092, 0.55 ) }
    dend_35 { pt3dadd( 179.305, -12.5558, 141.714, 1.11 ) }
    dend_35 { pt3dadd( 180.76, -12.7222, 142.89, 0.55 ) }
    dend_35 { pt3dadd( 185.062, -13.4024, 147.466, 0.83 ) }
    dend_35 { pt3dadd( 188.507, -14.0972, 152.125, 0.55 ) }
    dend_35 { pt3dadd( 189.633, -14.3464, 153.992, 0.55 ) }
    dend_35 { pt3dadd( 191.268, -14.6868, 156.854, 0.55 ) }
    dend_35 { pt3dadd( 195.274, -15.492, 163.994, 0.55 ) }
    dend_35 { pt3dadd( 196.251, -15.6668, 165.557, 0.28 ) }
    dend_35 { pt3dadd( 198.629, -15.999, 168.839, 0.28 ) }
    dend_35 { pt3dadd( 200.912, -16.2076, 171.34, 0.28 ) }
    dend_35 { pt3dadd( 203.826, -16.3897, 174.154, 0.83 ) }
    dend_35 { pt3dadd( 206.54, -16.414, 176.358, 0.55 ) }
    dend_35 { pt3dadd( 208.896, -16.3399, 177.878, 0.55 ) }
    dend_35 { pt3dadd( 211.249, -16.2592, 179.392, 0.55 ) }
    dend_35 { pt3dadd( 213.646, -16.1032, 180.95, 0.55 ) }
    dend_35 { pt3dadd( 215.186, -15.9322, 182.015, 0.28 ) }
    dend_35 { pt3dadd( 216.233, -15.7638, 182.801, 0.28 ) }
    dend_35 { pt3dadd( 217.918, -15.4431, 184.18, 0.55 ) }
    dend_35 { pt3dadd( 220.091, -15.0536, 186.094, 0.55 ) }
    dend_35 { pt3dadd( 221.817, -14.8129, 187.624, 0.55 ) }
    dend_35 { pt3dadd( 223.168, -14.6865, 188.829, 0.55 ) }
    dend_35 { pt3dadd( 225.342, -14.4895, 190.802, 0.55 ) }
    dend_35 { pt3dadd( 227.034, -14.3457, 192.367, 0.55 ) }
    dend_35 { pt3dadd( 238.983, -14.9085, 198.175, 0.55 ) }
    dend_35 { pt3dadd( 250.555, -13.9872, 204.582, 0.55 ) }
    dend_35 { pt3dadd( 261.091, -14.3354, 212.661, 0.55 ) }
    dend_35 { pt3dadd( 269.955, -17.3578, 222.127, 0.55 ) }
    dend_35 { pt3dadd( 280.557, -22.0191, 228.68, 0.55 ) }
    dend_35 { pt3dadd( 291.716, -27.6277, 233.19, 0.55 ) }
    dend_35 { pt3dadd( 303.553, -31.2815, 238.066, 0.55 ) }
    dend_35 { pt3dadd( 314.852, -35.3775, 243.786, 0.55 ) }
    dend_35 { pt3dadd( 326.793, -38.0122, 249.06, 0.55 ) }
    dend_35 { pt3dadd( 338.084, -39.096, 256.008, 0.55 ) }
    dend_35 { pt3dadd( 348.298, -38.8401, 264.466, 0.55 ) }
    dend_35 { pt3dadd( 356.635, -37.9931, 274.708, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 98/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.51597, 15.6762, 29.4899, 1.11 ) }
    dend_34 { pt3dadd( -5.72911, 17.274, 32.3526, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( -7.2324, 19.6327, 36.377, 1.11 ) }
    dend_34 { pt3dadd( -7.95926, 20.7413, 38.4433, 1.11 ) }
    dend_34 { pt3dadd( -8.62999, 21.8791, 40.5794, 0.83 ) }
    dend_34 { pt3dadd( -9.68826, 23.9988, 44.4285, 0.83 ) }
    dend_34 { pt3dadd( -10.513, 25.5376, 47.3193, 0.83 ) }
    dend_34 { pt3dadd( -11.2949, 26.8833, 49.8532, 0.83 ) }
    dend_34 { pt3dadd( -12.2134, 29.0987, 53.5566, 0.55 ) }
    dend_34 { pt3dadd( -12.4886, 29.8397, 54.8943, 0.55 ) }
    dend_34 { pt3dadd( -12.7356, 30.7292, 56.3566, 0.55 ) }
    dend_34 { pt3dadd( -13.1584, 33.0121, 59.3526, 0.55 ) }
    dend_34 { pt3dadd( -14.037, 36.6486, 63.5998, 0.55 ) }
    dend_34 { pt3dadd( -14.3642, 37.3402, 64.5867, 0.55 ) }
    dend_34 { pt3dadd( -15.9898, 40.4933, 68.6306, 0.55 ) }
    dend_34 { pt3dadd( -16.2892, 40.7508, 69.1921, 0.55 ) }
    dend_34 { pt3dadd( -16.6241, 40.8626, 69.7804, 0.55 ) }
    dend_34 { pt3dadd( -17.5331, 44.9841, 76.2252, 0.55 ) }
    dend_34 { pt3dadd( -16.7527, 50.0828, 81.8593, 0.55 ) }
    dend_34 { pt3dadd( -16.1639, 55.9951, 86.5795, 0.55 ) }
    dend_34 { pt3dadd( -15.6052, 62.3473, 90.6472, 0.55 ) }
    dend_34 { pt3dadd( -14.883, 68.1938, 95.4369, 0.55 ) }
    dend_34 { pt3dadd( -12.9694, 73.1314, 100.962, 0.55 ) }
    dend_34 { pt3dadd( -12.1974, 78.4408, 106.38, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 119.73, 109.129, 16.3704, 0.28 ) }
    dend_32 { pt3dadd( 114.395, 109.823, 17.7207, 0.28 ) }
    dend_32 { pt3dadd( 112.836, 110.026, 18.1153, 0.28 ) }
    dend_32 { pt3dadd( 111.283, 110.228, 18.5082, 0.28 ) }
    dend_32 { pt3dadd( 109.809, 110.42, 18.8812, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 27/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 119.73, 109.129, 16.3704, 0.55 ) }
    dend_31 { pt3dadd( 124.464, 113.349, 11.4524, 0.55 ) }
    dend_31 { pt3dadd( 125.395, 114.269, 10.7995, 0.55 ) }
    dend_31 { pt3dadd( 132.146, 120.893, 7.88664, 0.55 ) }
    dend_31 { pt3dadd( 133.383, 122.167, 7.63444, 0.28 ) }
    dend_31 { pt3dadd( 134.71, 123.597, 7.59765, 0.28 ) }
    dend_31 { pt3dadd( 134.71, 123.597, 7.59765, 0.28 ) }
    dend_31 { pt3dadd( 137.589, 126.283, 7.26509, 0.83 ) }
    dend_31 { pt3dadd( 140.746, 129.046, 6.9887, 0.28 ) }
    dend_31 { pt3dadd( 143.23, 131.332, 7.34713, 0.28 ) }
    dend_31 { pt3dadd( 144.699, 132.697, 7.65499, 0.55 ) }
    dend_31 { pt3dadd( 146.741, 134.65, 8.22443, 0.28 ) }
    dend_31 { pt3dadd( 156.235, 143.416, 9.60077, 0.28 ) }
    dend_31 { pt3dadd( 157.109, 144.235, 9.65245, 0.28 ) }
    dend_31 { pt3dadd( 163.458, 150.539, 9.81581, 0.55 ) }
    dend_31 { pt3dadd( 165.318, 152.452, 9.82222, 0.55 ) }
    dend_31 { pt3dadd( 166.797, 154.08, 9.88258, 0.28 ) }
    dend_31 { pt3dadd( 173.25, 161.952, 10.6444, 0.28 ) }
    dend_31 { pt3dadd( 175.608, 165.242, 11.3458, 0.28 ) }
    dend_31 { pt3dadd( 176.712, 166.711, 11.5737, 0.28 ) }
    dend_31 { pt3dadd( 179.401, 170.035, 11.8673, 0.83 ) }
    dend_31 { pt3dadd( 180.23, 171.093, 12.0668, 0.28 ) }
    dend_31 { pt3dadd( 181.185, 172.385, 12.5398, 0.55 ) }
    dend_31 { pt3dadd( 181.835, 173.331, 13.1754, 0.28 ) }
    dend_31 { pt3dadd( 183.381, 175.088, 14.5891, 0.28 ) }
    dend_31 { pt3dadd( 184.44, 176.056, 15.5077, 0.28 ) }
    dend_31 { pt3dadd( 185.882, 177.117, 16.7048, 0.55 ) }
    dend_31 { pt3dadd( 187.124, 177.839, 17.4854, 0.55 ) }
    dend_31 { pt3dadd( 190.789, 179.451, 19.309, 0.28 ) }
    dend_31 { pt3dadd( 193.992, 180.578, 20.3758, 0.83 ) }
    dend_31 { pt3dadd( 196.023, 181.233, 20.8385, 0.28 ) }
    dend_31 { pt3dadd( 198.991, 182.232, 21.3262, 0.28 ) }
    dend_31 { pt3dadd( 204.942, 184.24, 22.0404, 0.28 ) }
    dend_31 { pt3dadd( 208.006, 185.344, 22.3591, 0.83 ) }
    dend_31 { pt3dadd( 212.23, 187.137, 22.7729, 0.28 ) }
    dend_31 { pt3dadd( 214.62, 188.384, 23.0983, 0.28 ) }
    dend_31 { pt3dadd( 216.774, 189.668, 23.5732, 0.28 ) }
    dend_31 { pt3dadd( 218.196, 190.655, 24.0526, 0.28 ) }
    dend_31 { pt3dadd( 220.543, 192.632, 25.4847, 0.28 ) }
    dend_31 { pt3dadd( 222.325, 194.399, 26.8757, 0.28 ) }
    dend_31 { pt3dadd( 223.369, 195.582, 27.9172, 0.28 ) }
    dend_31 { pt3dadd( 224.345, 196.678, 28.7679, 0.28 ) }
    dend_31 { pt3dadd( 226.072, 198.644, 30.0958, 0.55 ) }
    dend_31 { pt3dadd( 228.352, 201.338, 31.6724, 0.28 ) }
    dend_31 { pt3dadd( 230.452, 203.614, 32.9794, 0.28 ) }
    dend_31 { pt3dadd( 232.382, 205.515, 34.1001, 0.28 ) }
    dend_31 { pt3dadd( 235.576, 208.344, 35.8895, 0.28 ) }
    dend_31 { pt3dadd( 237.638, 209.92, 37.0186, 0.28 ) }
    dend_31 { pt3dadd( 239.771, 211.208, 38.0359, 0.55 ) }
    dend_31 { pt3dadd( 243.371, 212.9, 39.5422, 0.28 ) }
    dend_31 { pt3dadd( 244.697, 213.397, 40.1241, 0.55 ) }
    dend_31 { pt3dadd( 246.591, 213.982, 41.0323, 0.28 ) }
    dend_31 { pt3dadd( 248.966, 214.672, 42.3284, 0.28 ) }
    dend_31 { pt3dadd( 252.554, 215.695, 44.2342, 0.28 ) }
    dend_31 { pt3dadd( 256.093, 216.696, 46.1359, 0.28 ) }
    dend_31 { pt3dadd( 257.319, 217.079, 46.8169, 0.55 ) }
    dend_31 { pt3dadd( 258.96, 217.609, 47.7811, 0.28 ) }
    dend_31 { pt3dadd( 260.32, 218.06, 48.7555, 0.28 ) }
    dend_31 { pt3dadd( 261.881, 218.58, 50.0824, 0.28 ) }
    dend_31 { pt3dadd( 265.284, 219.555, 53.4001, 0.55 ) }
    dend_31 { pt3dadd( 266.894, 219.931, 55.0114, 0.28 ) }
    dend_31 { pt3dadd( 268.699, 220.214, 56.8131, 0.28 ) }
    dend_31 { pt3dadd( 272.615, 220.47, 60.6385, 0.55 ) }
    dend_31 { pt3dadd( 274.57, 220.446, 62.492, 0.28 ) }
    dend_31 { pt3dadd( 276.985, 220.282, 64.7851, 0.28 ) }
    dend_31 { pt3dadd( 279.125, 219.995, 66.8104, 0.28 ) }
    dend_31 { pt3dadd( 281.028, 219.629, 68.5416, 0.28 ) }
    dend_31 { pt3dadd( 283.746, 218.975, 70.7961, 0.28 ) }
    dend_31 { pt3dadd( 285.878, 218.403, 72.1654, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -37.5087, -314.708, 1.70441, 0.28 ) }
    dend_13 { pt3dadd( -34.0756, -314.883, 5.05832, 0.28 ) }
    dend_13 { pt3dadd( -30.3992, -315.122, 8.27595, 0.28 ) }
    dend_13 { pt3dadd( -25.0281, -315.464, 13.0502, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -23.0951, -315.565, 14.7485, 0.28 ) }
    dend_13 { pt3dadd( -21.1044, -315.681, 16.3969, 0.28 ) }
    dend_13 { pt3dadd( -19.0242, -315.807, 18.0781, 0.28 ) }
    dend_13 { pt3dadd( -16.0265, -315.922, 20.6107, 0.28 ) }
    dend_13 { pt3dadd( -13.368, -315.968, 22.7678, 0.28 ) }
    dend_13 { pt3dadd( -10.6871, -315.992, 24.281, 0.28 ) }
    dend_13 { pt3dadd( -7.8309, -316.008, 25.6451, 0.28 ) }
    dend_13 { pt3dadd( -4.83043, -316.003, 26.9218, 0.28 ) }
    dend_13 { pt3dadd( -0.845917, -315.955, 28.4707, 0.28 ) }
    dend_13 { pt3dadd( 0.945132, -315.931, 29.0158, 0.28 ) }
    dend_13 { pt3dadd( 10.4757, -315.879, 30.9442, 0.28 ) }
    dend_13 { pt3dadd( 13.3279, -315.879, 31.3006, 0.28 ) }
    dend_13 { pt3dadd( 17.6042, -315.864, 31.4254, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 13/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -37.5087, -314.708, 1.70441, 0.28 ) }
    dend_12 { pt3dadd( -42.6218, -314.268, 1.36813, 0.28 ) }
    dend_12 { pt3dadd( -47.4486, -313.904, 0.897471, 0.28 ) }
    dend_12 { pt3dadd( -51.5091, -313.703, 0.357747, 0.28 ) }
    dend_12 { pt3dadd( -59.7012, -313.313, -0.941666, 0.28 ) }
    dend_12 { pt3dadd( -64.1491, -313.081, -1.74843, 0.28 ) }
    dend_12 { pt3dadd( -68.2056, -312.879, -2.57726, 0.28 ) }
    dend_12 { pt3dadd( -72.3008, -312.75, -3.50953, 0.28 ) }
    dend_12 { pt3dadd( -76.9363, -312.758, -4.73721, 0.28 ) }
    dend_12 { pt3dadd( -79.2555, -312.895, -5.49167, 0.28 ) }
    dend_12 { pt3dadd( -81.9125, -313.24, -6.59335, 0.28 ) }
    dend_12 { pt3dadd( -85.5931, -314.05, -8.09728, 0.28 ) }
    dend_12 { pt3dadd( -88.6678, -315.003, -9.33766, 0.28 ) }
    dend_12 { pt3dadd( -91.1764, -316.006, -10.328, 0.28 ) }
    dend_12 { pt3dadd( -94.7507, -317.769, -11.7069, 0.28 ) }
    dend_12 { pt3dadd( -98.2344, -319.688, -13.0315, 0.28 ) }
    dend_12 { pt3dadd( -101.562, -321.716, -14.2778, 0.28 ) }
    dend_12 { pt3dadd( -104.297, -323.526, -15.2885, 0.28 ) }
    dend_12 { pt3dadd( -107.233, -325.558, -16.3652, 0.28 ) }
    dend_12 { pt3dadd( -110.564, -327.905, -17.5826, 0.28 ) }
    dend_12 { pt3dadd( -122.365, -330.658, -18.9836, 0.28 ) }
    dend_12 { pt3dadd( -134.189, -333.587, -19.4759, 0.28 ) }
    dend_12 { pt3dadd( -146.105, -336.045, -20.4611, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 36/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 157.062, -221.24, 146.269, 0.28 ) }
    dend_10 { pt3dadd( 166.809, -223.614, 151.831, 0.28 ) }
    dend_10 { pt3dadd( 176.894, -224.997, 157.149, 0.28 ) }
    dend_10 { pt3dadd( 187.155, -227.825, 161.414, 0.28 ) }
    dend_10 { pt3dadd( 197.725, -231.253, 164.198, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 41/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 157.062, -221.24, 146.269, 0.28 ) }
    dend_9 { pt3dadd( 161.857, -221.606, 155.392, 0.28 ) }
    dend_9 { pt3dadd( 166.215, -221.383, 164.736, 0.28 ) }
    dend_9 { pt3dadd( 170.512, -219.463, 173.889, 0.28 ) }
    dend_9 { pt3dadd( 175.208, -216.144, 182.377, 0.28 ) }
    dend_9 { pt3dadd( 178.103, -211.807, 191.157, 0.28 ) }
    dend_9 { pt3dadd( 179.395, -206.449, 199.691, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_19, dend_0, axon_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, axon_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_30 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_42 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_41 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_39 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_35 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_32 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_38 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 11
    dend_21 nseg = 11
    dend_20 nseg = 11
    dend_1 nseg = 7
    dend_25 nseg = 9
    dend_14 nseg = 3
    dend_27 nseg = 11
    dend_15 nseg = 19
    dend_4 nseg = 13
    dend_36 nseg = 9
    dend_18 nseg = 15
    dend_17 nseg = 19
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_40 nseg = 5
    dend_37 nseg = 5
    dend_30 nseg = 7
    dend_11 nseg = 7
    dend_8 nseg = 11
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_39 nseg = 3
    dend_35 nseg = 23
    dend_34 nseg = 5
    dend_31 nseg = 11
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_LBC_126a82ac08_0_0


