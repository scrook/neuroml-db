// Cell: cIR216_L6_DBC_be42e7893c_0_0
/*
{
  "id" : "cIR216_L6_DBC_be42e7893c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29416, -10.039, 0.0, 3.29577", "-2.90858, -8.93717, 0.0, 5.95579", "-2.523, -7.83528, 0.0, 9.15271", "-2.13742, -6.7334, 0.0, 11.3921", "-1.75184, -5.63152, 0.0, 12.7837", "-1.36626, -4.52964, 0.0, 13.7064", "-0.980683, -3.42776, 0.0, 14.2605", "-0.595104, -2.32587, 0.0, 14.5213", "-0.209524, -1.22399, 0.0, 14.7821", "0.176055, -0.122111, 0.0, 14.8675", "0.561635, 0.979771, 0.0, 14.5727", "0.947214, 2.08165, 0.0, 14.1", "1.33279, 3.18354, 0.0, 13.169", "1.71837, 4.28542, 0.0, 12.1705", "2.10395, 5.3873, 0.0, 11.0272", "2.48953, 6.48918, 0.0, 9.72958", "2.87511, 7.59106, 0.0, 8.28215", "3.26069, 8.69295, 0.0, 6.88757", "3.64627, 9.79483, 0.0, 5.52197", "4.03185, 10.8967, 0.0, 3.91408", "4.41743, 11.9986, 0.0, 2.33646" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.37545, -9.70146, 9.67, 2.76", "-1.59291, -11.397, 9.74604, 2.76", "-1.96059, -13.5754, 9.75989, 2.76", "-2.3228, -15.396, 9.74318, 2.76", "-2.89218, -17.9497, 9.69971, 2.16", "-3.42987, -20.319, 9.70158, 2.16", "-4.20938, -23.6588, 9.73984, 1.92", "-4.98089, -26.5495, 9.79658, 1.92", "-5.38359, -27.9277, 9.82724, 1.92", "-6.29686, -30.9339, 9.90387, 1.92", "-6.87035, -32.7532, 9.9587, 1.56", "-7.58182, -35.1231, 10.0438, 1.56", "-8.1131, -37.0403, 10.1279, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.36455, 4.48483, -1.63, 2.16", "7.23562, 3.68795, -1.96176, 2.16", "9.42845, 1.71668, -2.95116, 1.8", "11.0693, 0.193859, -3.70459, 1.56", "12.2359, -0.907356, -4.14729, 1.56", "13.2937, -1.93431, -4.4929, 1.56", "16.1916, -4.80475, -5.32958, 1.2", "18.0773, -6.69362, -5.75374, 1.2", "19.3946, -8.01519, -5.96932, 1.2", "21.1558, -9.81016, -6.15666, 1.2", "22.082, -10.7826, -6.23593, 1.44", "22.6882, -11.4775, -6.2438, 1.44", "23.8703, -13.0589, -5.90804, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.61455, 10.4128, 0.0, 2.4", "6.80125, 13.4798, -0.311649, 1.8", "8.15467, 17.3623, -0.690344, 1.2", "9.24581, 20.4924, -0.995654, 1.2", "10.803, 24.9594, -1.43136, 1.2", "12.2811, 29.1995, -1.84494, 1.68", "13.0463, 31.3948, -2.05907, 1.68", "14.0136, 34.4177, -2.40003, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.41455, 11.1538, 0.29, 2.4", "2.99926, 12.77, 0.393044, 2.4", "2.2575, 17.2524, 0.394123, 1.44", "2.04771, 18.9916, 0.357959, 1.44", "1.89376, 20.5374, 0.277175, 1.44", "1.76447, 21.9715, 0.180981, 1.44", "1.46045, 26.4818, 0.279088, 1.44", "1.23845, 31.4388, 0.718076, 1.44", "1.1906, 33.4357, 0.9956, 1.44", "1.14549, 35.1843, 1.29859, 1.44", "0.938049, 39.3046, 2.2503, 1.32", "0.227358, 48.3164, 4.70222, 1.44", "-0.06894, 51.1016, 5.57366, 1.44", "-0.296581, 52.9185, 6.2319, 1.44", "-0.427688, 53.8358, 6.57644, 1.44", "-1.2593, 59.1199, 8.53781, 1.8", "-1.95757, 63.0451, 9.77783, 1.08", "-2.17158, 64.152, 9.96123, 1.08", "-2.39683, 65.4766, 10.0804, 1.08", "-2.66113, 67.1618, 10.0697, 1.08", "-3.07356, 69.9225, 9.94974, 1.08", "-3.30922, 71.9495, 9.78887, 1.08", "-3.67708, 75.8658, 9.63091, 1.44", "-3.76128, 77.0967, 9.63826, 1.44", "-3.89632, 79.8479, 9.81796, 1.44", "-4.00178, 84.844, 10.183, 0.84", "-4.02167, 87.1572, 10.4193, 0.84", "-4.02996, 88.3106, 10.5583, 0.84", "-4.08458, 91.7893, 10.9731, 0.84", "-4.08652, 93.8267, 11.2113, 1.08", "-4.0503, 98.973, 11.7796, 1.68", "-3.96723, 103.523, 12.0236, 0.84", "-3.94578, 105.641, 12.1014, 0.84", "-3.93828, 106.876, 12.1378, 0.84", "-3.91111, 112.995, 12.3364, 1.56", "-3.91745, 117.436, 12.5218, 0.96", "-3.92321, 121.067, 12.7941, 0.96", "-3.90362, 123.266, 12.9419, 0.96", "-3.86841, 125.151, 13.0113, 0.96", "-3.84206, 126.267, 13.0167, 0.96", "-3.70052, 131.496, 12.6835, 1.44", "-3.61734, 132.871, 12.5442, 1.44", "-3.51887, 134.26, 12.3883, 1.44", "-3.14391, 138.708, 11.8553, 0.96", "-3.00558, 140.271, 11.6617, 0.96", "-2.68449, 143.678, 11.2231, 1.44", "-2.4382, 145.953, 10.9459, 1.44", "-2.12879, 149.036, 10.6556, 0.96", "-1.97174, 150.806, 10.5623, 0.96", "-1.8236, 152.776, 10.5631, 0.96", "-1.74676, 154.021, 10.6013, 0.96", "-1.58914, 157.836, 10.8167, 1.44", "-1.53462, 159.503, 10.8985, 1.44", "-1.42174, 162.364, 10.9459, 0.84", "-1.35881, 164.166, 10.9181, 0.84", "-1.29013, 166.585, 10.8333, 1.44", "-1.1839, 170.792, 10.6114, 0.84", "-1.12636, 172.909, 10.4571, 0.84", "-1.03779, 174.756, 10.2903, 0.84", "-0.935302, 176.125, 10.1417, 0.84", "-0.763848, 177.865, 9.92531, 0.84", "-0.591888, 179.307, 9.72253, 0.84", "-0.394403, 180.836, 9.54055, 0.84", "-0.19077, 182.368, 9.42084, 0.84", "-0.028584, 183.703, 9.35873, 0.84", "0.0402083, 184.54, 9.32865, 0.84", "0.138515, 185.928, 9.3265, 0.84", "0.53932, 191.861, 9.08235, 1.44", "0.926985, 197.928, 8.62179, 0.72", "1.24241, 203.128, 8.27291, 0.72", "1.59746, 209.629, 7.95889, 1.08", "1.8403, 214.854, 7.81106, 1.44", "2.13899, 222.146, 7.78609, 0.72", "2.22782, 225.058, 7.78644, 0.72", "2.33784, 230.037, 7.77918, 1.2", "2.46659, 234.416, 7.71029, 0.72", "2.57626, 237.5, 7.72168, 0.72", "2.64609, 240.65, 7.767, 1.2", "2.74422, 245.759, 8.17411, 0.96", "2.79716, 247.724, 8.28321, 0.96", "2.96953, 252.271, 8.04636, 1.44", "3.21826, 256.445, 7.55972, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.02545, -1.51142, 5.97, 2.16", "-10.4303, -0.923296, 5.8075, 2.16", "-15.5162, 0.114089, 5.12311, 1.92", "-20.0273, 0.9717, 5.10822, 1.56", "-25.3628, 1.98606, 5.09062, 1.08", "-28.8186, 2.64304, 5.07922, 1.56", "-33.9083, 3.61066, 5.06242, 2.52", "-38.1851, 4.65135, 4.86377, 2.52", "-47.2976, 7.51726, 3.61051, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.08545, 4.99183, 3.55, 2.28", "-5.49549, 6.1525, 4.17268, 2.28", "-7.1898, 7.40486, 5.0427, 2.28", "-9.76319, 9.30699, 6.36414, 1.8", "-12.7717, 11.5307, 7.90903, 1.44", "-14.3343, 12.6857, 8.71139, 1.08", "-16.1881, 14.0559, 9.66335, 1.08", "-19.1452, 16.0121, 11.2749, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.41743, 11.9986, 0.0, 0.48", "9.37179, 26.1568, 0.0, 0.48", "14.3261, 40.315, 0.0, 0.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.1131, -37.0403, 10.1279, 0.6", "-8.04881, -38.9033, 10.1006, 0.6", "-7.93449, -41.5487, 10.0618, 0.6", "-7.75973, -45.5787, 10.0042, 1.08", "-7.67806, -47.6354, 9.97576, 1.08", "-7.56404, -50.4618, 9.93713, 0.48", "-7.41046, -53.9915, 9.8888, 1.2", "-7.35206, -55.0536, 9.92033, 1.2", "-7.16915, -58.1759, 10.1423, 0.6", "-7.05701, -60.1279, 10.3571, 0.6", "-6.9558, -62.0588, 10.6225, 0.6", "-6.94353, -62.4513, 10.684, 0.6", "-6.91501, -66.6518, 11.3707, 1.8", "-6.93703, -69.0506, 11.7479, 1.8", "-6.98997, -71.2719, 12.0707, 1.8", "-7.07073, -73.2075, 12.3047, 1.8", "-7.24841, -75.9886, 12.5552, 1.32", "-7.44989, -78.5142, 12.6877, 1.92", "-7.55271, -79.6975, 12.6827, 1.92", "-7.70775, -81.8454, 12.6797, 1.08", "-7.86316, -84.0241, 12.7868, 0.84", "-7.9915, -85.5938, 12.8304, 0.84", "-8.08078, -86.8436, 12.92, 1.32", "-8.23663, -88.6011, 13.0869, 1.32", "-8.34172, -89.7535, 13.2082, 1.32", "-8.69593, -93.4557, 13.6412, 1.8", "-9.11978, -97.7228, 14.1845, 1.08", "-9.5636, -101.89, 14.7438, 0.72", "-10.1755, -106.915, 15.4366, 2.04" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.1131, -37.0403, 10.1279, 0.96", "-9.01944, -38.6413, 11.1673, 0.96", "-9.37931, -39.4084, 11.4538, 0.96", "-10.3482, -41.4668, 11.8422, 0.96", "-10.7922, -42.4675, 11.9234, 0.96", "-11.2151, -43.4392, 11.9552, 0.96", "-11.9865, -45.0988, 11.9631, 0.96", "-13.396, -48.1153, 11.9319, 0.96", "-14.0539, -49.4253, 11.7984, 1.44", "-15.1282, -51.2685, 11.3581, 0.72", "-15.7198, -52.1022, 11.1114, 0.72", "-16.5094, -53.041, 10.7329, 1.2", "-17.4428, -53.9885, 10.2684, 0.48", "-19.0393, -55.3509, 9.52241, 0.48", "-20.4544, -56.4107, 8.8942, 1.08", "-21.9379, -57.4, 8.14466, 0.6", "-23.7133, -58.5381, 7.16516, 1.56", "-24.7354, -59.147, 6.56485, 0.72", "-26.6773, -60.1576, 5.41025, 1.8", "-28.9049, -61.1476, 4.20536, 0.84", "-31.5815, -62.2216, 2.83027, 0.48", "-33.0808, -62.7303, 2.15159, 1.56", "-35.1025, -63.3372, 1.41119, 0.72", "-36.978, -63.8766, 0.818153, 1.44", "-39.195, -64.5466, 0.288031, 0.48", "-40.1995, -64.8385, 0.0544031, 0.48", "-41.882, -65.2968, -0.0981736, 1.08", "-43.0714, -65.6405, -0.104825, 0.48", "-44.2336, -66.0737, 0.0284059, 1.08", "-45.6333, -66.7702, 0.377666, 0.6" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "23.8703, -13.0589, -5.90804, 1.8", "25.3878, -15.4748, -5.26355, 1.8", "26.3577, -17.0188, -4.85165, 1.8" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "23.8703, -13.0589, -5.90804, 1.08", "25.3843, -13.7905, -3.87067, 1.08", "26.2954, -14.2425, -2.57138, 1.08", "26.8743, -14.5297, -1.74581, 1.08", "27.4396, -14.8102, -0.939621, 1.08", "29.4861, -15.8254, 1.97893, 0.84", "30.9814, -16.5673, 4.11142, 1.32", "31.1447, -16.6513, 4.3875, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.0136, 34.4177, -2.40003, 1.2", "16.6579, 34.2566, -0.577669, 1.2", "19.4558, 33.9848, 1.04438, 1.2", "23.1048, 33.4883, 2.90382, 1.2", "26.2295, 32.9508, 4.34398, 1.2", "30.9445, 32.0003, 6.33816, 1.8", "34.3163, 31.2347, 7.65973, 1.32", "37.8349, 30.323, 8.7384, 0.96", "40.1413, 29.6815, 9.23475, 0.96", "42.0932, 29.1338, 9.45978, 0.96", "45.113, 28.2854, 9.67645, 0.84", "47.1844, 27.6759, 9.76321, 0.84", "50.0886, 26.7955, 9.95869, 1.32", "52.9474, 25.9126, 10.421, 0.96", "54.8819, 25.3602, 10.7595, 1.44", "57.6438, 24.6068, 11.293, 1.32", "58.8894, 24.2464, 11.5763, 1.32", "60.8763, 23.5544, 12.2358, 1.08", "62.4176, 22.6392, 13.1936, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.0136, 34.4177, -2.40003, 1.2", "13.9653, 35.221, -2.38745, 1.2", "13.8189, 37.9026, -2.37202, 1.2", "13.627, 41.4178, -2.3518, 1.2", "13.3992, 45.5899, -2.3278, 0.96", "13.2921, 47.5513, -2.31652, 0.96", "13.0637, 51.7349, -2.29246, 1.2", "12.9621, 53.6342, -2.3222, 1.2" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.21826, 256.445, 7.55972, 0.72", "-2.84551, 258.162, 10.6966, 0.72", "-6.2846, 259.135, 12.4756, 0.72", "-7.76026, 259.553, 13.239, 0.72", "-9.89681, 260.158, 14.3442, 1.08", "-12.6712, 260.944, 15.7794, 1.08", "-13.8941, 261.29, 16.4121, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.21826, 256.445, 7.55972, 0.96", "4.31606, 256.67, 6.54471, 0.96", "5.97644, 257.215, 5.03606, 0.96", "6.61491, 257.476, 4.56936, 0.96", "9.92488, 259.286, 3.14545, 0.96", "11.127, 260.002, 2.84103, 0.96", "12.4538, 260.664, 2.69249, 0.96", "15.0901, 261.639, 2.63517, 0.96", "18.9816, 262.643, 2.78057, 0.96", "23.0491, 263.108, 2.58741, 0.6", "23.9156, 263.168, 2.63254, 0.6", "28.0699, 263.101, 2.76812, 1.08", "31.2, 262.493, 2.55953, 1.44", "33.5764, 261.509, 1.94576, 1.2", "36.8935, 259.659, 0.279712, 0.84" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.1452, 16.0121, 11.2749, 1.2", "-19.7347, 15.2514, 11.6703, 1.2", "-20.6255, 14.1017, 12.2678, 1.2", "-21.1143, 13.4709, 12.5957, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-19.1452, 16.0121, 11.2749, 1.2", "-18.9702, 16.8645, 12.8179, 1.2", "-18.7936, 17.7249, 14.3754, 1.2", "-18.6251, 18.5453, 15.8603, 1.2", "-18.5681, 18.8233, 16.3635, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.3261, 40.315, 0.0, 0.12", "19.2805, 54.4732, 0.0, 0.12", "24.2349, 68.6314, 0.0, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.1755, -106.915, 15.4366, 0.84", "-10.0664, -108.865, 16.0569, 0.84", "-9.91931, -110.383, 16.5023, 0.84", "-9.79569, -111.278, 16.7306, 0.84", "-9.71882, -111.787, 16.8427, 0.84", "-9.33135, -114.229, 17.3264, 1.44", "-9.11184, -115.568, 17.5716, 1.44", "-8.78288, -117.415, 17.876, 0.72", "-8.52599, -119.103, 18.1257, 0.72", "-8.32965, -120.594, 18.3087, 0.72", "-8.25268, -121.295, 18.3744, 0.72", "-8.21196, -121.781, 18.3785, 0.72", "-8.02608, -124.268, 18.3186, 1.44", "-7.78111, -127.874, 18.1283, 0.72", "-7.71273, -129.123, 18.0341, 0.72", "-7.67409, -129.871, 17.9653, 0.72", "-7.52324, -133.086, 17.6348, 0.72", "-7.47671, -134.169, 17.5103, 0.72", "-7.41234, -135.584, 17.3209, 0.72", "-7.33762, -137.6, 17.0233, 1.44", "-7.36285, -139.545, 16.7373, 0.72", "-7.441, -140.852, 16.5657, 0.72", "-7.52774, -141.743, 16.5351, 0.72", "-7.61958, -142.604, 16.5154, 0.72", "-7.77008, -144.024, 16.4716, 0.72", "-8.10518, -146.818, 16.5059, 1.44", "-8.2179, -147.687, 16.5447, 1.44", "-8.61659, -150.684, 16.7546, 0.6", "-8.99028, -153.544, 17.0354, 1.2", "-9.42237, -156.876, 17.442, 0.6", "-9.73662, -159.488, 17.8207, 1.08", "-9.86968, -160.706, 18.025, 0.36", "-9.94201, -161.332, 18.1083, 0.36", "-10.3, -163.828, 18.3225, 1.08", "-10.4467, -164.679, 18.4018, 1.08", "-10.6994, -166.076, 18.4902, 0.36", "-10.9084, -167.37, 18.4869, 1.68", "-11.3019, -169.927, 18.395, 0.72", "-11.5545, -171.474, 18.2977, 0.72", "-11.6738, -172.196, 18.234, 0.72", "-11.7962, -173.012, 18.1574, 0.72", "-12.0322, -174.836, 17.9816, 1.44", "-12.2466, -176.435, 17.8353, 1.44", "-12.4672, -177.718, 17.6588, 0.72", "-12.7133, -178.923, 17.4423, 0.72", "-12.8756, -179.583, 17.3552, 0.72", "-13.1539, -180.572, 17.2195, 0.72", "-13.7945, -182.456, 16.96, 1.32", "-14.5522, -184.482, 16.7143, 0.84", "-14.9828, -185.561, 16.5671, 0.84", "-16.081, -187.852, 16.2302, 0.48" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.1755, -106.915, 15.4366, 1.2", "-11.8115, -108.75, 14.8787, 1.2", "-12.9175, -110.023, 14.4391, 1.2", "-15.4424, -113.0, 13.3177, 0.96", "-16.6098, -114.4, 12.9349, 1.44", "-18.8093, -117.093, 12.1587, 0.72", "-21.2264, -120.103, 11.303, 0.72", "-22.1055, -121.239, 10.9744, 0.72", "-23.3666, -122.912, 10.5019, 1.2", "-26.4797, -126.993, 9.04162, 0.48", "-28.9389, -130.16, 7.78188, 0.96", "-31.2134, -133.038, 6.45753, 0.36", "-31.5524, -133.458, 6.24762, 0.36", "-33.0344, -135.283, 5.60414, 0.72", "-35.9768, -139.162, 5.04325, 0.72", "-38.0062, -142.525, 4.84844, 1.2", "-39.2825, -145.443, 5.15268, 0.6", "-39.8554, -147.467, 5.50889, 0.6", "-42.5325, -159.013, 8.38522, 0.6", "-43.1327, -162.864, 9.79384, 0.6", "-43.59, -168.55, 12.6879, 1.08", "-43.5105, -170.807, 14.0011, 0.36", "-43.3513, -172.201, 14.8819, 0.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.3577, -17.0188, -4.85165, 1.8", "26.2656, -18.3565, -2.78295, 1.8", "26.217, -19.0638, -1.68919, 1.8", "26.0803, -21.0487, 1.38033, 1.8" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.3577, -17.0188, -4.85165, 1.44", "28.2138, -18.791, -6.70305, 1.44", "29.3873, -19.9312, -7.76338, 1.44", "30.153, -20.6742, -8.42786, 1.44", "33.706, -23.6546, -10.739, 1.56", "35.0481, -24.6068, -11.3762, 1.56", "37.49, -26.2445, -12.4413, 1.8", "39.467, -27.5433, -13.1989, 1.8", "41.9249, -28.9692, -14.0132, 1.32", "45.8609, -31.0114, -15.2216, 1.68", "48.3462, -32.2809, -16.098, 1.32", "52.1726, -34.0132, -17.3752, 0.72", "54.3275, -34.8593, -18.0342, 0.72", "55.7585, -35.3701, -18.5562, 1.32", "58.5989, -36.2012, -19.8698, 0.96", "63.0901, -37.5438, -23.0294, 1.44", "68.288, -39.0936, -28.0262, 0.6", "69.1687, -39.3327, -29.1463, 0.6", "70.7205, -39.7527, -31.4643, 1.08", "72.8883, -40.3519, -35.2569, 1.56", "74.6172, -40.7234, -39.0908, 1.2", "75.6105, -40.9887, -42.4843, 1.2", "76.01, -41.2502, -44.7726, 1.2" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "31.1447, -16.6513, 4.3875, 1.08", "36.1791, -16.612, 4.65186, 1.08", "38.3013, -16.4443, 3.73276, 1.08", "41.6305, -16.0581, 1.9139, 1.56", "47.7161, -15.2366, -1.707, 1.08", "52.0802, -14.5136, -4.44041, 0.6", "63.6319, -11.8987, -12.2674, 0.6", "66.7833, -10.8512, -14.9253, 1.2", "68.5589, -10.0367, -16.6403, 0.6", "69.9216, -9.17295, -18.0847, 1.08", "71.0818, -8.2121, -19.4584, 0.36", "73.4796, -5.7398, -22.1322, 1.44", "75.2939, -3.45048, -23.2396, 0.84", "76.4985, -1.75083, -23.8099, 1.32", "78.2734, 0.893861, -24.4889, 0.72", "79.1291, 2.10441, -24.7242, 0.72", "80.2583, 3.49939, -24.9638, 1.08", "82.4092, 5.71429, -25.2686, 0.6", "84.6184, 7.68195, -25.5724, 1.2", "85.8743, 8.65511, -25.7353, 1.2", "88.3672, 10.324, -26.0526, 0.72", "91.3625, 12.259, -26.5123, 1.08", "95.0565, 14.6811, -26.9405, 0.6", "95.9375, 15.2994, -27.0079, 0.6", "97.3013, 16.3681, -27.0543, 0.6", "101.79, 20.4623, -26.9269, 1.08", "103.464, 22.2027, -26.7421, 0.72", "106.272, 25.3633, -26.1996, 1.2", "108.354, 27.8364, -25.7252, 1.2", "109.567, 29.229, -25.4397, 1.2", "111.625, 31.443, -24.9444, 0.72", "113.065, 32.8236, -24.576, 0.72", "115.436, 34.6829, -24.0308, 0.72", "117.233, 35.8022, -23.6762, 1.32", "121.008, 37.6995, -22.8379, 0.96", "122.52, 38.357, -22.4838, 0.96", "124.18, 39.0007, -22.0827, 1.44", "126.634, 40.0075, -21.4145, 1.08", "129.165, 41.079, -20.8783, 1.56", "132.299, 42.4321, -20.4152, 0.96", "133.859, 43.1232, -20.3142, 0.96", "135.041, 43.6622, -20.3328, 1.56", "137.626, 44.8794, -20.6739, 0.96", "141.831, 46.9576, -21.6779, 0.96", "143.157, 47.6024, -21.9765, 0.96", "145.887, 48.7901, -22.4548, 1.56", "148.0, 49.6869, -22.8091, 0.84", "150.245, 50.6163, -22.9841, 1.44", "154.703, 52.4375, -22.8449, 0.72", "158.628, 54.2568, -21.9616, 0.48", "160.302, 55.117, -21.343, 0.48", "163.501, 56.856, -19.5771, 1.68", "167.667, 59.1481, -16.8706, 0.72", "169.829, 60.3378, -15.1813, 0.72", "172.842, 62.061, -12.2994, 1.32", "174.037, 62.8489, -11.0304, 1.32", "175.945, 64.2327, -8.41968, 0.72" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "31.1447, -16.6513, 4.3875, 1.08", "33.5459, -17.3183, 1.92494, 1.08", "34.1078, -17.4743, 1.34868, 1.08", "35.148, -17.7633, 0.281869, 0.84", "35.6687, -17.9079, -0.2521, 0.84", "36.6662, -18.185, -1.27517, 0.84", "37.3614, -18.3781, -1.98814, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.9621, 53.6342, -2.3222, 0.96", "11.8332, 59.5868, -2.99503, 0.96", "11.1955, 62.9494, -3.37511, 0.96", "10.0791, 68.8366, -4.04056, 1.2", "9.27318, 73.0862, -4.52088, 1.92" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "12.9621, 53.6342, -2.3222, 0.96", "14.1612, 55.0193, -1.61273, 0.96", "16.4924, 57.5296, -0.463433, 0.84", "17.1939, 58.2684, -0.182997, 0.84", "20.0355, 61.3307, 0.727085, 0.84", "21.0708, 62.4736, 1.02276, 0.84", "23.4576, 65.147, 1.64985, 0.84", "24.9437, 66.8476, 1.94036, 0.84", "27.1466, 69.3462, 2.25925, 0.84", "29.7641, 72.2983, 2.55174, 0.84", "32.0609, 74.9195, 2.68027, 1.08", "32.8274, 75.8294, 2.72746, 1.08", "34.5718, 78.0914, 2.83676, 1.08" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.081, -187.852, 16.2302, 0.72", "-16.6521, -189.348, 16.1803, 0.72", "-17.3979, -191.162, 16.1102, 1.2", "-18.0497, -192.491, 16.0441, 1.2", "-18.8385, -194.125, 15.8189, 0.6", "-19.4775, -195.521, 15.5833, 0.6", "-20.3519, -197.547, 15.2229, 0.6", "-20.8535, -198.833, 14.9478, 0.6", "-21.8681, -201.783, 14.1718, 1.2", "-23.1584, -205.424, 13.5374, 0.72", "-23.6465, -206.827, 13.2864, 0.72", "-24.2901, -208.831, 12.9311, 0.72", "-24.7208, -210.379, 12.6718, 0.72", "-25.8009, -214.824, 12.0401, 1.32", "-27.003, -221.191, 11.5868, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-16.081, -187.852, 16.2302, 0.48", "-15.3394, -191.527, 15.5994, 0.48", "-15.1319, -192.616, 15.4561, 0.48", "-14.7879, -195.133, 15.1923, 0.48", "-14.6759, -196.661, 15.0434, 0.48", "-14.7068, -198.246, 14.8871, 0.48", "-14.9343, -200.4, 14.6852, 1.08", "-15.3875, -202.322, 14.4978, 1.08", "-16.366, -205.031, 14.0935, 1.08", "-17.23, -206.73, 13.7135, 1.08", "-19.2603, -209.797, 12.6706, 0.48", "-20.8612, -211.566, 11.6644, 0.48", "-22.0897, -212.585, 10.6995, 0.48", "-24.5101, -214.146, 8.48238, 1.44", "-25.8738, -214.831, 7.06825, 0.84", "-26.6065, -215.11, 6.2453, 0.84", "-28.949, -215.734, 3.31386, 1.32", "-30.394, -216.038, 1.32496, 0.72", "-31.4397, -216.248, -0.179659, 0.72", "-32.0947, -216.405, -1.08947, 0.72", "-33.1525, -216.777, -2.52296, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.081, -187.852, 16.2302, 0.84", "-15.5382, -190.319, 16.0617, 0.84", "-15.0786, -192.459, 15.9607, 2.16", "-14.4376, -195.555, 15.8574, 1.08", "-14.1375, -197.176, 15.8308, 0.84", "-13.9626, -198.349, 15.8672, 0.84", "-13.8728, -199.341, 15.831, 0.84", "-13.8979, -200.455, 15.7995, 0.84", "-13.9643, -201.205, 15.7601, 0.84", "-14.0989, -202.237, 15.6748, 0.84", "-14.3461, -203.551, 15.6193, 0.84", "-15.3676, -207.628, 15.427, 2.04", "-16.0712, -209.788, 15.2987, 0.96", "-16.271, -210.351, 15.2393, 0.96", "-16.8098, -211.836, 15.036, 0.96", "-17.1504, -212.769, 14.8842, 0.96", "-17.6937, -214.309, 14.6123, 0.96", "-18.3903, -216.4, 14.3221, 1.68", "-19.0218, -218.694, 13.9369, 0.96", "-19.2586, -219.948, 13.7372, 0.96", "-19.3252, -220.895, 13.6026, 0.96", "-19.2809, -221.936, 13.55, 1.32", "-18.9719, -223.517, 13.7677, 0.6", "-18.5765, -224.608, 14.1676, 0.96", "-17.9467, -225.865, 14.9186, 0.6", "-17.1234, -227.065, 15.8443, 1.08", "-16.1611, -228.13, 16.8587, 0.48", "-14.347, -229.763, 18.7067, 0.48", "-13.6222, -230.318, 19.4542, 0.48", "-12.9177, -230.782, 20.1919, 0.48", "-11.8707, -231.376, 21.3137, 0.48", "-11.1092, -231.72, 22.0898, 0.48", "-10.7063, -231.861, 22.4006, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "26.0803, -21.0487, 1.38033, 1.32", "25.5004, -22.3598, 2.33285, 1.32", "24.9257, -23.647, 3.06331, 0.84", "24.5125, -24.6371, 3.55007, 0.84", "24.0548, -25.7971, 4.0791, 0.84", "22.8511, -29.0047, 5.46427, 1.32", "22.2333, -30.8708, 6.15723, 1.32", "21.3924, -33.9584, 7.17385, 0.72", "20.9289, -35.9251, 7.74997, 0.72", "20.7942, -36.6039, 7.9277, 0.72", "20.6452, -37.4114, 8.113, 0.72", "19.7975, -42.9183, 9.08238, 1.56", "19.639, -44.1173, 9.28702, 1.56", "19.3613, -47.0369, 9.93337, 1.56", "19.2179, -48.5321, 10.2505, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "26.0803, -21.0487, 1.38033, 0.72", "26.3731, -23.2979, 2.64273, 0.72", "26.4332, -23.7582, 2.90784, 0.72", "26.5746, -24.7384, 3.49254, 1.2", "26.9973, -27.379, 5.03665, 0.84", "27.3217, -29.1629, 6.04486, 1.56", "27.6878, -30.9376, 7.01885, 0.84", "28.1448, -33.0652, 8.18794, 1.44", "28.6992, -34.753, 9.05075, 0.96", "29.2632, -35.8246, 9.55927, 0.96", "30.0009, -36.67, 9.91797, 0.96", "30.5815, -37.1394, 10.0316, 0.96", "31.814, -37.8661, 10.0481, 0.84", "34.5605, -39.2707, 9.97098, 1.32", "37.3794, -40.5691, 9.80181, 0.6", "40.6153, -41.934, 9.56343, 1.2", "44.9788, -43.6471, 9.17029, 0.48", "48.3659, -44.8988, 8.78783, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.27318, 73.0862, -4.52088, 1.2", "8.67768, 77.7621, -3.71976, 1.2", "8.64053, 80.0528, -3.38557, 1.2", "8.72838, 81.5545, -3.13458, 1.2", "8.9186, 83.4467, -2.81583, 1.2", "9.16279, 85.3243, -2.52426, 0.96", "9.35853, 86.9781, -2.3259, 0.96", "9.61194, 88.4669, -2.25156, 0.96", "10.1319, 91.7267, -2.11854, 0.96", "10.349, 93.4097, -2.08871, 0.96", "10.5181, 95.1665, -2.09005, 0.96", "10.75, 98.4239, -2.14293, 0.84", "10.8375, 100.002, -2.19417, 0.84", "10.9373, 102.957, -2.35478, 0.84", "10.9702, 105.231, -2.54238, 0.84", "10.9482, 107.118, -2.73749, 0.84", "10.874, 109.432, -3.01325, 0.84", "10.7888, 111.59, -3.29581, 0.84", "10.6657, 113.884, -3.62916, 0.84", "10.4617, 116.837, -4.10156, 0.84", "10.038, 122.532, -5.07156, 0.84", "9.7858, 125.585, -5.63179, 0.84", "9.65617, 126.991, -5.90754, 0.84", "9.54531, 128.154, -6.14036, 0.84", "9.40204, 129.495, -6.39596, 0.84", "9.17177, 131.113, -6.69779, 0.84", "8.90504, 132.715, -6.97738, 0.84", "8.57219, 134.532, -7.29687, 0.84", "8.28492, 135.974, -7.55749, 0.84", "7.53848, 139.626, -8.22693, 0.72", "7.1064, 141.744, -8.6169, 0.72", "6.80337, 143.593, -8.9408, 0.72", "6.60333, 145.239, -9.2092, 0.72", "6.39535, 147.466, -9.51091, 1.2", "6.25286, 149.377, -9.71334, 1.2", "6.1518, 151.549, -9.88573, 0.96", "5.99696, 155.499, -10.1087, 1.44", "5.94208, 156.998, -10.172, 1.44", "5.9111, 159.231, -10.2593, 1.2", "5.9466, 160.768, -10.3508, 1.2", "6.05554, 163.395, -10.5781, 1.2", "6.12854, 164.756, -10.7172, 1.2", "6.17488, 165.598, -10.8023, 1.2", "6.29815, 167.531, -11.0019, 1.56", "6.6188, 172.216, -11.5101, 0.84", "6.75418, 174.442, -11.7431, 0.84", "6.95901, 178.64, -12.1011, 1.32", "7.12144, 182.729, -12.368, 0.96", "7.16474, 184.202, -12.4326, 0.96", "7.19517, 185.905, -12.4614, 0.96", "7.21278, 186.747, -12.4577, 0.96", "7.34876, 189.598, -12.4453, 0.96", "7.48768, 191.323, -12.4097, 0.96", "7.64309, 192.699, -12.4069, 0.96", "7.91072, 194.695, -12.4251, 0.96", "8.1517, 196.295, -12.4607, 0.96", "8.37477, 197.641, -12.532, 0.96", "8.90144, 200.651, -12.799, 0.96", "9.37194, 203.331, -13.0954, 0.96", "9.88688, 206.512, -13.4609, 0.96", "10.2118, 208.638, -13.7894, 0.96", "10.5814, 211.357, -14.3468, 1.44", "10.951, 214.552, -15.1386, 0.96", "11.157, 216.71, -15.7718, 0.72", "11.3849, 219.665, -16.7102, 1.2", "11.5439, 222.621, -17.6197, 1.2", "11.5773, 224.995, -18.222, 1.2", "11.5414, 227.01, -18.6551, 1.56", "11.4472, 230.004, -19.1943, 1.68", "11.3536, 233.01, -19.7327, 1.08", "11.0544, 238.49, -20.5274, 1.44", "10.6947, 244.357, -21.1547, 0.84", "10.6075, 245.724, -21.269, 0.84", "10.3544, 249.22, -21.5186, 1.44", "10.0133, 253.156, -21.7227, 0.6", "9.54951, 257.441, -21.904, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.27318, 73.0862, -4.52088, 0.96", "10.2469, 76.1261, -5.90291, 0.96", "10.8883, 78.6156, -6.7938, 0.96", "12.1304, 84.1702, -8.49426, 0.96", "12.5962, 86.5742, -9.14886, 1.32", "12.8248, 88.0651, -9.50391, 1.32", "13.3564, 92.7162, -10.4862, 0.96", "13.486, 95.6467, -11.0024, 0.96", "13.4699, 97.3494, -11.1584, 0.96", "13.4191, 99.1917, -11.17, 0.96", "13.4247, 101.559, -11.3398, 0.96", "13.457, 104.23, -11.656, 0.96", "13.5153, 105.56, -11.8827, 0.96", "13.675, 107.56, -12.2663, 0.96", "14.1767, 112.143, -13.2181, 1.44", "15.2716, 119.75, -14.8724, 1.2", "15.6024, 121.611, -15.2908, 1.2", "16.476, 126.245, -16.3382, 1.08", "16.9754, 129.038, -16.9557, 1.08", "17.1809, 130.311, -17.225, 1.08", "17.6099, 133.29, -17.7959, 1.08", "17.9442, 136.079, -18.1728, 1.08", "18.1292, 139.705, -18.5832, 1.08", "17.9381, 142.797, -18.7843, 1.08", "17.5494, 145.314, -18.9488, 1.08", "17.1354, 147.144, -19.0656, 1.08", "16.3107, 150.002, -19.2463, 1.08", "14.9788, 154.317, -19.4931, 1.56", "13.6974, 158.429, -19.612, 0.84", "12.9721, 160.882, -19.6499, 0.84", "12.1458, 163.831, -19.6489, 0.84", "11.5664, 166.218, -19.633, 0.84", "10.518, 171.652, -19.5873, 1.2", "9.91854, 175.78, -19.5673, 0.96", "9.62969, 178.405, -19.5486, 0.96", "9.33326, 181.888, -19.4485, 1.2", "8.9176, 187.275, -19.2736, 0.84", "8.67918, 190.334, -19.1896, 0.84", "8.56865, 191.764, -19.2014, 0.84", "8.50891, 192.711, -19.2675, 0.84", "8.4119, 194.376, -19.4173, 0.84", "8.22464, 198.66, -19.8694, 0.72", "8.15069, 200.626, -20.0759, 1.32", "7.92607, 204.96, -20.4384, 0.96", "7.80728, 207.833, -20.6276, 0.96", "7.72268, 210.432, -20.7687, 0.96", "7.68722, 212.228, -20.8516, 0.96", "7.74005, 217.282, -21.0334, 1.32", "7.87632, 221.663, -21.1115, 0.72", "8.0723, 225.936, -21.1002, 0.72", "8.32544, 230.516, -21.0733, 0.72", "8.43259, 232.169, -21.0946, 0.72", "8.64355, 235.043, -21.1641, 0.72", "8.84204, 237.336, -21.2444, 0.72", "9.03902, 239.237, -21.3478, 0.72", "9.19681, 241.139, -21.4566, 0.72", "9.33743, 243.076, -21.5698, 0.72", "9.40285, 244.602, -21.6321, 0.72", "9.44688, 247.312, -21.6486, 0.72", "9.42986, 249.388, -21.5925, 0.72", "9.37954, 251.171, -21.4665, 0.72", "9.38651, 252.927, -21.1249, 0.72", "9.47389, 255.067, -20.4606, 0.72", "9.54787, 256.259, -19.9885, 0.72", "9.60099, 256.897, -19.7358, 0.72", "9.66678, 257.608, -19.492, 0.72", "10.0751, 262.101, -18.1717, 1.32", "10.1678, 263.318, -17.8682, 0.84", "10.5452, 268.961, -16.7533, 0.84", "10.8226, 273.44, -16.0689, 0.84", "11.15, 279.001, -15.4107, 1.2", "11.2712, 281.186, -15.2505, 1.2", "11.3407, 282.652, -15.2222, 1.2", "11.4876, 285.048, -15.1625, 1.2", "11.7085, 287.679, -15.1091, 1.2", "11.8188, 288.9, -15.0826, 1.2", "12.034, 291.339, -15.0543, 1.2", "12.2573, 293.722, -15.0337, 1.2", "12.8703, 301.76, -14.9282, 1.2", "13.1522, 306.278, -14.8691, 1.68", "13.4957, 312.704, -14.8075, 1.08", "13.8154, 319.565, -14.7781, 1.56", "13.9411, 322.661, -14.7848, 1.56", "14.142, 327.734, -14.7998, 1.44", "14.3399, 332.618, -14.8366, 1.44", "14.4945, 336.94, -14.8192, 1.44", "14.6447, 340.827, -14.7191, 1.44", "14.7464, 343.277, -14.6708, 1.44", "14.909, 348.055, -14.5199, 1.44", "14.9882, 350.019, -14.443, 1.44", "15.0363, 352.275, -14.2941, 1.44", "15.0409, 354.971, -14.0615, 1.44", "14.8182, 359.628, -13.934, 0.84", "14.58, 363.435, -13.874, 0.84", "14.3719, 365.776, -13.9044, 0.84", "14.1358, 367.989, -13.9689, 0.84", "13.8796, 369.87, -14.0764, 0.84", "12.6619, 376.69, -14.8088, 1.2" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "34.5718, 78.0914, 2.83676, 0.96", "38.1873, 79.5046, 1.91728, 0.96", "40.625, 81.0606, 1.30535, 0.96", "42.3372, 82.4917, 0.886478, 0.96", "44.4733, 84.6777, 0.382103, 0.96", "47.4874, 88.2948, -0.307506, 0.96", "48.9116, 90.2491, -0.614731, 0.96", "51.4203, 95.1572, -1.10055, 1.2", "52.0399, 96.8602, -1.19863, 1.2", "52.5424, 98.8101, -1.24808, 0.6", "52.8772, 100.507, -1.25586, 0.6", "53.3732, 103.792, -1.05487, 1.08", "53.7095, 106.064, -0.873809, 0.36", "53.9232, 107.438, -0.744053, 0.36", "54.4232, 110.693, -0.408825, 0.84", "54.8183, 113.626, -0.0660664, 0.84", "55.3619, 118.438, 0.548962, 1.44", "55.5416, 120.335, 0.843448, 1.44", "55.7381, 122.39, 1.19579, 0.84", "55.9345, 124.966, 1.58589, 0.84", "56.1112, 128.243, 2.02198, 1.32", "56.1682, 130.078, 2.2541, 1.32", "56.2896, 132.86, 2.51441, 1.08", "56.3311, 134.0, 2.61606, 1.08", "56.5478, 138.24, 2.93384, 1.56", "56.608, 139.408, 2.98902, 1.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "34.5718, 78.0914, 2.83676, 1.08", "34.892, 80.4279, 2.97864, 1.08", "35.1083, 82.0589, 3.03152, 1.08", "35.3903, 84.1849, 3.171, 1.08", "35.7088, 86.7069, 3.39675, 0.84", "36.3116, 91.5881, 3.88659, 1.56", "36.94, 96.2029, 4.40317, 1.2", "37.4374, 99.9336, 4.834, 1.08", "37.8964, 103.622, 5.2464, 1.32", "38.1247, 106.009, 5.46417, 0.96", "38.2658, 108.15, 5.67157, 1.32", "38.3679, 110.892, 5.93889, 1.08", "38.4691, 115.66, 6.41127, 0.84", "38.4801, 117.558, 6.608, 0.84", "38.4242, 123.964, 7.11959, 1.08", "38.3398, 127.921, 7.4308, 1.08", "38.237, 130.259, 7.63783, 0.96", "37.858, 135.255, 8.15777, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "19.2179, -48.5321, 10.2505, 0.84", "19.6446, -52.5401, 11.1965, 0.84", "19.9456, -55.208, 11.8138, 0.84", "20.2898, -58.5116, 12.6169, 1.44", "20.6177, -61.6673, 13.4051, 1.08", "20.9218, -64.8439, 14.2205, 0.48", "21.548, -71.3865, 15.9, 1.2", "21.805, -73.6889, 16.498, 1.2", "22.1793, -77.014, 17.3552, 1.2", "22.4514, -79.539, 18.0063, 1.2", "22.7021, -82.4001, 18.7628, 1.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "19.2179, -48.5321, 10.2505, 0.96", "21.3402, -51.7579, 11.4519, 0.96", "22.2642, -53.3859, 11.9314, 0.96", "24.1815, -56.8569, 13.1266, 1.56", "25.4182, -59.2039, 13.8384, 0.84", "26.9173, -62.1692, 14.8373, 1.32", "28.7126, -65.7824, 16.1088, 0.72", "30.4266, -69.4555, 17.5327, 1.2", "32.2993, -73.6757, 19.1868, 0.72", "33.9508, -77.7104, 20.7708, 1.44", "35.9785, -82.8497, 22.8458, 0.72", "36.3202, -83.7319, 23.2314, 0.72", "37.26, -86.1638, 24.3922, 1.32" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "22.7021, -82.4001, 18.7628, 1.2", "22.8561, -83.1896, 19.0612, 1.2", "23.2498, -83.8683, 19.6361, 0.72", "24.0841, -85.0181, 20.8404, 1.92", "24.5816, -85.6442, 21.5577, 1.92", "24.9916, -86.1917, 22.1657, 1.2", "25.5789, -87.0248, 23.0527, 1.68", "27.6643, -90.0163, 26.2748, 1.68", "28.3166, -91.0368, 27.3219, 2.28", "28.8106, -91.8942, 28.1584, 1.2", "29.2649, -92.841, 28.9766, 1.2", "29.5399, -93.5787, 29.5224, 1.2", "29.9433, -95.1338, 30.4595, 1.8", "30.1745, -97.0237, 31.3046, 1.08", "30.2525, -97.7508, 31.6215, 1.08", "30.4098, -99.3848, 32.3216, 0.6", "30.5277, -100.568, 32.8592, 1.2", "30.6155, -101.687, 33.3903, 1.2", "30.7015, -102.831, 33.9901, 1.8", "30.8107, -104.054, 34.7346, 0.72", "30.8842, -104.75, 35.209, 0.72", "30.9858, -105.617, 35.8662, 0.72", "31.0881, -106.401, 36.5027, 0.72", "31.2737, -107.675, 37.5834, 1.8", "31.4982, -108.987, 38.698, 0.84", "31.6292, -109.817, 39.377, 0.84", "31.7087, -110.345, 39.7854, 0.84", "31.9177, -111.806, 40.8726, 1.44", "32.0379, -112.745, 41.5443, 0.72", "32.1355, -113.731, 42.2158, 0.72", "32.1787, -114.501, 42.7005, 0.72", "32.23, -115.507, 43.3394, 1.2", "32.3013, -117.225, 44.4436, 0.6", "32.3272, -117.908, 44.8799, 0.6", "32.3429, -118.374, 45.1747, 0.6", "32.2931, -120.849, 46.6104, 1.8", "32.2188, -122.089, 47.2714, 0.96", "32.1313, -123.033, 47.7318, 0.96", "31.983, -124.284, 48.2873, 0.96", "31.8043, -125.617, 48.8711, 1.68", "31.5075, -127.604, 49.7799, 0.84", "31.3994, -128.193, 50.0833, 0.84", "31.3407, -128.449, 50.2085, 0.84", "31.108, -129.351, 50.6699, 0.84", "30.9183, -129.997, 51.0472, 0.84", "30.6673, -131.048, 51.8095, 1.44", "30.6324, -131.741, 52.5394, 0.72" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "22.7021, -82.4001, 18.7628, 0.96", "23.7513, -83.7635, 18.9459, 0.96", "24.6651, -85.3832, 18.7832, 1.44", "25.7799, -87.5904, 18.3845, 0.96", "26.7154, -89.3188, 17.9776, 0.96", "27.8106, -91.2298, 17.4931, 0.96", "29.5229, -94.1541, 16.7053, 0.6", "32.4382, -99.07, 15.5344, 1.2", "33.3654, -100.584, 15.2007, 1.2", "35.4392, -103.963, 14.3844, 1.44", "36.7923, -105.989, 14.001, 0.6", "38.0703, -107.641, 13.9116, 1.08", "40.1997, -109.968, 14.3371, 0.6", "41.2516, -111.043, 14.9202, 0.6", "43.0739, -113.116, 16.4216, 1.08", "44.864, -115.721, 18.6685, 0.6", "46.2427, -118.148, 20.7978, 0.6", "46.9132, -119.425, 21.9683, 0.6", "47.829, -121.493, 23.7604, 1.08", "48.2982, -122.609, 24.7741, 1.08", "49.2034, -124.936, 26.8981, 0.48", "49.4292, -126.14, 27.6022, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "49.4292, -126.14, 27.6022, 0.84", "49.6001, -127.672, 27.9675, 0.84", "49.8945, -129.791, 28.5712, 0.84", "50.1758, -132.154, 29.1298, 1.44", "50.5431, -136.038, 29.9619, 0.6", "50.6381, -137.982, 30.3691, 0.6", "50.6501, -139.767, 30.8559, 0.6", "50.4976, -143.059, 31.5457, 0.6", "50.0873, -146.16, 31.8974, 1.08", "49.5406, -148.171, 31.8971, 0.6", "48.3916, -150.193, 31.4098, 0.6", "45.8162, -153.529, 29.9829, 1.44", "40.8633, -158.109, 26.5409, 1.44", "39.1341, -159.17, 25.0141, 1.44", "37.9275, -159.599, 23.7449, 0.96", "36.0452, -159.978, 21.315, 1.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "49.4292, -126.14, 27.6022, 0.48", "51.3818, -126.205, 26.5029, 0.48", "53.5183, -126.217, 25.2799, 0.48", "54.5648, -126.223, 24.6808, 0.48", "55.5799, -126.229, 24.0997, 0.48", "58.4946, -126.246, 22.4313, 0.84", "61.8322, -126.265, 20.5206, 1.32", "62.6229, -126.306, 20.0553, 1.32" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "62.6229, -126.306, 20.0553, 0.6", "65.0358, -126.398, 19.5832, 0.6", "68.7467, -126.818, 18.9248, 0.6", "70.1727, -127.066, 18.6963, 0.6", "71.6559, -127.415, 18.3935, 0.6", "73.7257, -128.062, 17.9422, 1.08", "77.9771, -129.681, 17.0068, 0.6", "80.1405, -130.758, 16.6055, 0.6", "81.3218, -131.532, 16.3692, 0.6", "83.8406, -133.514, 15.7694, 0.6", "85.9574, -135.4, 15.1825, 1.2", "87.307, -136.779, 14.7699, 1.2", "88.727, -138.473, 14.2562, 0.6", "91.0297, -141.279, 13.335, 0.6", "92.4239, -142.955, 12.7719, 0.6", "93.4557, -144.204, 12.4317, 0.6" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "62.6229, -126.306, 20.0553, 1.2", "62.8755, -125.711, 19.942, 1.2", "63.5964, -124.016, 19.6185, 0.84", "64.5448, -121.785, 19.193, 0.36", "64.9207, -120.901, 19.0243, 0.36", "65.8902, -118.621, 18.5893, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "axon_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "axon_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_DBC_be42e7893c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_40, id: dend_40, parent: dend_37
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999988276266909)
    connect dend_16(0), soma_0(0.4999988276266909)
    connect dend_7(0), soma_0(0.4999988276266909)
    connect dend_4(0), soma_0(0.4999988276266909)
    connect dend_3(0), soma_0(0.4999988276266909)
    connect dend_0(0), soma_0(0.4999988276266909)
    connect axon_0(0), soma_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_40(0), dend_37(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29416, -10.039, 0.0, 3.29577 ) }
    soma_0 { pt3dadd( -2.90858, -8.93717, 0.0, 5.95579 ) }
    soma_0 { pt3dadd( -2.523, -7.83528, 0.0, 9.15271 ) }
    soma_0 { pt3dadd( -2.13742, -6.7334, 0.0, 11.3921 ) }
    soma_0 { pt3dadd( -1.75184, -5.63152, 0.0, 12.7837 ) }
    soma_0 { pt3dadd( -1.36626, -4.52964, 0.0, 13.7064 ) }
    soma_0 { pt3dadd( -0.980683, -3.42776, 0.0, 14.2605 ) }
    soma_0 { pt3dadd( -0.595104, -2.32587, 0.0, 14.5213 ) }
    soma_0 { pt3dadd( -0.209524, -1.22399, 0.0, 14.7821 ) }
    soma_0 { pt3dadd( 0.176055, -0.122111, 0.0, 14.8675 ) }
    soma_0 { pt3dadd( 0.561635, 0.979771, 0.0, 14.5727 ) }
    soma_0 { pt3dadd( 0.947214, 2.08165, 0.0, 14.1 ) }
    soma_0 { pt3dadd( 1.33279, 3.18354, 0.0, 13.169 ) }
    soma_0 { pt3dadd( 1.71837, 4.28542, 0.0, 12.1705 ) }
    soma_0 { pt3dadd( 2.10395, 5.3873, 0.0, 11.0272 ) }
    soma_0 { pt3dadd( 2.48953, 6.48918, 0.0, 9.72958 ) }
    soma_0 { pt3dadd( 2.87511, 7.59106, 0.0, 8.28215 ) }
    soma_0 { pt3dadd( 3.26069, 8.69295, 0.0, 6.88757 ) }
    soma_0 { pt3dadd( 3.64627, 9.79483, 0.0, 5.52197 ) }
    soma_0 { pt3dadd( 4.03185, 10.8967, 0.0, 3.91408 ) }
    soma_0 { pt3dadd( 4.41743, 11.9986, 0.0, 2.33646 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.37545, -9.70146, 9.67, 2.76 ) }
    dend_33 { pt3dadd( -1.59291, -11.397, 9.74604, 2.76 ) }
    dend_33 { pt3dadd( -1.96059, -13.5754, 9.75989, 2.76 ) }
    dend_33 { pt3dadd( -2.3228, -15.396, 9.74318, 2.76 ) }
    dend_33 { pt3dadd( -2.89218, -17.9497, 9.69971, 2.16 ) }
    dend_33 { pt3dadd( -3.42987, -20.319, 9.70158, 2.16 ) }
    dend_33 { pt3dadd( -4.20938, -23.6588, 9.73984, 1.92 ) }
    dend_33 { pt3dadd( -4.98089, -26.5495, 9.79658, 1.92 ) }
    dend_33 { pt3dadd( -5.38359, -27.9277, 9.82724, 1.92 ) }
    dend_33 { pt3dadd( -6.29686, -30.9339, 9.90387, 1.92 ) }
    dend_33 { pt3dadd( -6.87035, -32.7532, 9.9587, 1.56 ) }
    dend_33 { pt3dadd( -7.58182, -35.1231, 10.0438, 1.56 ) }
    dend_33 { pt3dadd( -8.1131, -37.0403, 10.1279, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.36455, 4.48483, -1.63, 2.16 ) }
    dend_16 { pt3dadd( 7.23562, 3.68795, -1.96176, 2.16 ) }
    dend_16 { pt3dadd( 9.42845, 1.71668, -2.95116, 1.8 ) }
    dend_16 { pt3dadd( 11.0693, 0.193859, -3.70459, 1.56 ) }
    dend_16 { pt3dadd( 12.2359, -0.907356, -4.14729, 1.56 ) }
    dend_16 { pt3dadd( 13.2937, -1.93431, -4.4929, 1.56 ) }
    dend_16 { pt3dadd( 16.1916, -4.80475, -5.32958, 1.2 ) }
    dend_16 { pt3dadd( 18.0773, -6.69362, -5.75374, 1.2 ) }
    dend_16 { pt3dadd( 19.3946, -8.01519, -5.96932, 1.2 ) }
    dend_16 { pt3dadd( 21.1558, -9.81016, -6.15666, 1.2 ) }
    dend_16 { pt3dadd( 22.082, -10.7826, -6.23593, 1.44 ) }
    dend_16 { pt3dadd( 22.6882, -11.4775, -6.2438, 1.44 ) }
    dend_16 { pt3dadd( 23.8703, -13.0589, -5.90804, 1.68 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.61455, 10.4128, 0.0, 2.4 ) }
    dend_7 { pt3dadd( 6.80125, 13.4798, -0.311649, 1.8 ) }
    dend_7 { pt3dadd( 8.15467, 17.3623, -0.690344, 1.2 ) }
    dend_7 { pt3dadd( 9.24581, 20.4924, -0.995654, 1.2 ) }
    dend_7 { pt3dadd( 10.803, 24.9594, -1.43136, 1.2 ) }
    dend_7 { pt3dadd( 12.2811, 29.1995, -1.84494, 1.68 ) }
    dend_7 { pt3dadd( 13.0463, 31.3948, -2.05907, 1.68 ) }
    dend_7 { pt3dadd( 14.0136, 34.4177, -2.40003, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.41455, 11.1538, 0.29, 2.4 ) }
    dend_4 { pt3dadd( 2.99926, 12.77, 0.393044, 2.4 ) }
    dend_4 { pt3dadd( 2.2575, 17.2524, 0.394123, 1.44 ) }
    dend_4 { pt3dadd( 2.04771, 18.9916, 0.357959, 1.44 ) }
    dend_4 { pt3dadd( 1.89376, 20.5374, 0.277175, 1.44 ) }
    dend_4 { pt3dadd( 1.76447, 21.9715, 0.180981, 1.44 ) }
    dend_4 { pt3dadd( 1.46045, 26.4818, 0.279088, 1.44 ) }
    dend_4 { pt3dadd( 1.23845, 31.4388, 0.718076, 1.44 ) }
    dend_4 { pt3dadd( 1.1906, 33.4357, 0.9956, 1.44 ) }
    dend_4 { pt3dadd( 1.14549, 35.1843, 1.29859, 1.44 ) }
    dend_4 { pt3dadd( 0.938049, 39.3046, 2.2503, 1.32 ) }
    dend_4 { pt3dadd( 0.227358, 48.3164, 4.70222, 1.44 ) }
    dend_4 { pt3dadd( -0.06894, 51.1016, 5.57366, 1.44 ) }
    dend_4 { pt3dadd( -0.296581, 52.9185, 6.2319, 1.44 ) }
    dend_4 { pt3dadd( -0.427688, 53.8358, 6.57644, 1.44 ) }
    dend_4 { pt3dadd( -1.2593, 59.1199, 8.53781, 1.8 ) }
    dend_4 { pt3dadd( -1.95757, 63.0451, 9.77783, 1.08 ) }
    dend_4 { pt3dadd( -2.17158, 64.152, 9.96123, 1.08 ) }
    dend_4 { pt3dadd( -2.39683, 65.4766, 10.0804, 1.08 ) }
    dend_4 { pt3dadd( -2.66113, 67.1618, 10.0697, 1.08 ) }
    dend_4 { pt3dadd( -3.07356, 69.9225, 9.94974, 1.08 ) }
    dend_4 { pt3dadd( -3.30922, 71.9495, 9.78887, 1.08 ) }
    dend_4 { pt3dadd( -3.67708, 75.8658, 9.63091, 1.44 ) }
    dend_4 { pt3dadd( -3.76128, 77.0967, 9.63826, 1.44 ) }
    dend_4 { pt3dadd( -3.89632, 79.8479, 9.81796, 1.44 ) }
    dend_4 { pt3dadd( -4.00178, 84.844, 10.183, 0.84 ) }
    dend_4 { pt3dadd( -4.02167, 87.1572, 10.4193, 0.84 ) }
    dend_4 { pt3dadd( -4.02996, 88.3106, 10.5583, 0.84 ) }
    dend_4 { pt3dadd( -4.08458, 91.7893, 10.9731, 0.84 ) }
    dend_4 { pt3dadd( -4.08652, 93.8267, 11.2113, 1.08 ) }
    dend_4 { pt3dadd( -4.0503, 98.973, 11.7796, 1.68 ) }
    dend_4 { pt3dadd( -3.96723, 103.523, 12.0236, 0.84 ) }
    dend_4 { pt3dadd( -3.94578, 105.641, 12.1014, 0.84 ) }
    dend_4 { pt3dadd( -3.93828, 106.876, 12.1378, 0.84 ) }
    dend_4 { pt3dadd( -3.91111, 112.995, 12.3364, 1.56 ) }
    dend_4 { pt3dadd( -3.91745, 117.436, 12.5218, 0.96 ) }
    dend_4 { pt3dadd( -3.92321, 121.067, 12.7941, 0.96 ) }
    dend_4 { pt3dadd( -3.90362, 123.266, 12.9419, 0.96 ) }
    dend_4 { pt3dadd( -3.86841, 125.151, 13.0113, 0.96 ) }
    dend_4 { pt3dadd( -3.84206, 126.267, 13.0167, 0.96 ) }
    dend_4 { pt3dadd( -3.70052, 131.496, 12.6835, 1.44 ) }
    dend_4 { pt3dadd( -3.61734, 132.871, 12.5442, 1.44 ) }
    dend_4 { pt3dadd( -3.51887, 134.26, 12.3883, 1.44 ) }
    dend_4 { pt3dadd( -3.14391, 138.708, 11.8553, 0.96 ) }
    dend_4 { pt3dadd( -3.00558, 140.271, 11.6617, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( -2.68449, 143.678, 11.2231, 1.44 ) }
    dend_4 { pt3dadd( -2.4382, 145.953, 10.9459, 1.44 ) }
    dend_4 { pt3dadd( -2.12879, 149.036, 10.6556, 0.96 ) }
    dend_4 { pt3dadd( -1.97174, 150.806, 10.5623, 0.96 ) }
    dend_4 { pt3dadd( -1.8236, 152.776, 10.5631, 0.96 ) }
    dend_4 { pt3dadd( -1.74676, 154.021, 10.6013, 0.96 ) }
    dend_4 { pt3dadd( -1.58914, 157.836, 10.8167, 1.44 ) }
    dend_4 { pt3dadd( -1.53462, 159.503, 10.8985, 1.44 ) }
    dend_4 { pt3dadd( -1.42174, 162.364, 10.9459, 0.84 ) }
    dend_4 { pt3dadd( -1.35881, 164.166, 10.9181, 0.84 ) }
    dend_4 { pt3dadd( -1.29013, 166.585, 10.8333, 1.44 ) }
    dend_4 { pt3dadd( -1.1839, 170.792, 10.6114, 0.84 ) }
    dend_4 { pt3dadd( -1.12636, 172.909, 10.4571, 0.84 ) }
    dend_4 { pt3dadd( -1.03779, 174.756, 10.2903, 0.84 ) }
    dend_4 { pt3dadd( -0.935302, 176.125, 10.1417, 0.84 ) }
    dend_4 { pt3dadd( -0.763848, 177.865, 9.92531, 0.84 ) }
    dend_4 { pt3dadd( -0.591888, 179.307, 9.72253, 0.84 ) }
    dend_4 { pt3dadd( -0.394403, 180.836, 9.54055, 0.84 ) }
    dend_4 { pt3dadd( -0.19077, 182.368, 9.42084, 0.84 ) }
    dend_4 { pt3dadd( -0.028584, 183.703, 9.35873, 0.84 ) }
    dend_4 { pt3dadd( 0.0402083, 184.54, 9.32865, 0.84 ) }
    dend_4 { pt3dadd( 0.138515, 185.928, 9.3265, 0.84 ) }
    dend_4 { pt3dadd( 0.53932, 191.861, 9.08235, 1.44 ) }
    dend_4 { pt3dadd( 0.926985, 197.928, 8.62179, 0.72 ) }
    dend_4 { pt3dadd( 1.24241, 203.128, 8.27291, 0.72 ) }
    dend_4 { pt3dadd( 1.59746, 209.629, 7.95889, 1.08 ) }
    dend_4 { pt3dadd( 1.8403, 214.854, 7.81106, 1.44 ) }
    dend_4 { pt3dadd( 2.13899, 222.146, 7.78609, 0.72 ) }
    dend_4 { pt3dadd( 2.22782, 225.058, 7.78644, 0.72 ) }
    dend_4 { pt3dadd( 2.33784, 230.037, 7.77918, 1.2 ) }
    dend_4 { pt3dadd( 2.46659, 234.416, 7.71029, 0.72 ) }
    dend_4 { pt3dadd( 2.57626, 237.5, 7.72168, 0.72 ) }
    dend_4 { pt3dadd( 2.64609, 240.65, 7.767, 1.2 ) }
    dend_4 { pt3dadd( 2.74422, 245.759, 8.17411, 0.96 ) }
    dend_4 { pt3dadd( 2.79716, 247.724, 8.28321, 0.96 ) }
    dend_4 { pt3dadd( 2.96953, 252.271, 8.04636, 1.44 ) }
    dend_4 { pt3dadd( 3.21826, 256.445, 7.55972, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.02545, -1.51142, 5.97, 2.16 ) }
    dend_3 { pt3dadd( -10.4303, -0.923296, 5.8075, 2.16 ) }
    dend_3 { pt3dadd( -15.5162, 0.114089, 5.12311, 1.92 ) }
    dend_3 { pt3dadd( -20.0273, 0.9717, 5.10822, 1.56 ) }
    dend_3 { pt3dadd( -25.3628, 1.98606, 5.09062, 1.08 ) }
    dend_3 { pt3dadd( -28.8186, 2.64304, 5.07922, 1.56 ) }
    dend_3 { pt3dadd( -33.9083, 3.61066, 5.06242, 2.52 ) }
    dend_3 { pt3dadd( -38.1851, 4.65135, 4.86377, 2.52 ) }
    dend_3 { pt3dadd( -47.2976, 7.51726, 3.61051, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.08545, 4.99183, 3.55, 2.28 ) }
    dend_0 { pt3dadd( -5.49549, 6.1525, 4.17268, 2.28 ) }
    dend_0 { pt3dadd( -7.1898, 7.40486, 5.0427, 2.28 ) }
    dend_0 { pt3dadd( -9.76319, 9.30699, 6.36414, 1.8 ) }
    dend_0 { pt3dadd( -12.7717, 11.5307, 7.90903, 1.44 ) }
    dend_0 { pt3dadd( -14.3343, 12.6857, 8.71139, 1.08 ) }
    dend_0 { pt3dadd( -16.1881, 14.0559, 9.66335, 1.08 ) }
    dend_0 { pt3dadd( -19.1452, 16.0121, 11.2749, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.41743, 11.9986, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 9.37179, 26.1568, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 14.3261, 40.315, 0.0, 0.48 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.1131, -37.0403, 10.1279, 0.6 ) }
    dend_35 { pt3dadd( -8.04881, -38.9033, 10.1006, 0.6 ) }
    dend_35 { pt3dadd( -7.93449, -41.5487, 10.0618, 0.6 ) }
    dend_35 { pt3dadd( -7.75973, -45.5787, 10.0042, 1.08 ) }
    dend_35 { pt3dadd( -7.67806, -47.6354, 9.97576, 1.08 ) }
    dend_35 { pt3dadd( -7.56404, -50.4618, 9.93713, 0.48 ) }
    dend_35 { pt3dadd( -7.41046, -53.9915, 9.8888, 1.2 ) }
    dend_35 { pt3dadd( -7.35206, -55.0536, 9.92033, 1.2 ) }
    dend_35 { pt3dadd( -7.16915, -58.1759, 10.1423, 0.6 ) }
    dend_35 { pt3dadd( -7.05701, -60.1279, 10.3571, 0.6 ) }
    dend_35 { pt3dadd( -6.9558, -62.0588, 10.6225, 0.6 ) }
    dend_35 { pt3dadd( -6.94353, -62.4513, 10.684, 0.6 ) }
    dend_35 { pt3dadd( -6.91501, -66.6518, 11.3707, 1.8 ) }
    dend_35 { pt3dadd( -6.93703, -69.0506, 11.7479, 1.8 ) }
    dend_35 { pt3dadd( -6.98997, -71.2719, 12.0707, 1.8 ) }
    dend_35 { pt3dadd( -7.07073, -73.2075, 12.3047, 1.8 ) }
    dend_35 { pt3dadd( -7.24841, -75.9886, 12.5552, 1.32 ) }
    dend_35 { pt3dadd( -7.44989, -78.5142, 12.6877, 1.92 ) }
    dend_35 { pt3dadd( -7.55271, -79.6975, 12.6827, 1.92 ) }
    dend_35 { pt3dadd( -7.70775, -81.8454, 12.6797, 1.08 ) }
    dend_35 { pt3dadd( -7.86316, -84.0241, 12.7868, 0.84 ) }
    dend_35 { pt3dadd( -7.9915, -85.5938, 12.8304, 0.84 ) }
    dend_35 { pt3dadd( -8.08078, -86.8436, 12.92, 1.32 ) }
    dend_35 { pt3dadd( -8.23663, -88.6011, 13.0869, 1.32 ) }
    dend_35 { pt3dadd( -8.34172, -89.7535, 13.2082, 1.32 ) }
    dend_35 { pt3dadd( -8.69593, -93.4557, 13.6412, 1.8 ) }
    dend_35 { pt3dadd( -9.11978, -97.7228, 14.1845, 1.08 ) }
    dend_35 { pt3dadd( -9.5636, -101.89, 14.7438, 0.72 ) }
    dend_35 { pt3dadd( -10.1755, -106.915, 15.4366, 2.04 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.1131, -37.0403, 10.1279, 0.96 ) }
    dend_34 { pt3dadd( -9.01944, -38.6413, 11.1673, 0.96 ) }
    dend_34 { pt3dadd( -9.37931, -39.4084, 11.4538, 0.96 ) }
    dend_34 { pt3dadd( -10.3482, -41.4668, 11.8422, 0.96 ) }
    dend_34 { pt3dadd( -10.7922, -42.4675, 11.9234, 0.96 ) }
    dend_34 { pt3dadd( -11.2151, -43.4392, 11.9552, 0.96 ) }
    dend_34 { pt3dadd( -11.9865, -45.0988, 11.9631, 0.96 ) }
    dend_34 { pt3dadd( -13.396, -48.1153, 11.9319, 0.96 ) }
    dend_34 { pt3dadd( -14.0539, -49.4253, 11.7984, 1.44 ) }
    dend_34 { pt3dadd( -15.1282, -51.2685, 11.3581, 0.72 ) }
    dend_34 { pt3dadd( -15.7198, -52.1022, 11.1114, 0.72 ) }
    dend_34 { pt3dadd( -16.5094, -53.041, 10.7329, 1.2 ) }
    dend_34 { pt3dadd( -17.4428, -53.9885, 10.2684, 0.48 ) }
    dend_34 { pt3dadd( -19.0393, -55.3509, 9.52241, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -20.4544, -56.4107, 8.8942, 1.08 ) }
    dend_34 { pt3dadd( -21.9379, -57.4, 8.14466, 0.6 ) }
    dend_34 { pt3dadd( -23.7133, -58.5381, 7.16516, 1.56 ) }
    dend_34 { pt3dadd( -24.7354, -59.147, 6.56485, 0.72 ) }
    dend_34 { pt3dadd( -26.6773, -60.1576, 5.41025, 1.8 ) }
    dend_34 { pt3dadd( -28.9049, -61.1476, 4.20536, 0.84 ) }
    dend_34 { pt3dadd( -31.5815, -62.2216, 2.83027, 0.48 ) }
    dend_34 { pt3dadd( -33.0808, -62.7303, 2.15159, 1.56 ) }
    dend_34 { pt3dadd( -35.1025, -63.3372, 1.41119, 0.72 ) }
    dend_34 { pt3dadd( -36.978, -63.8766, 0.818153, 1.44 ) }
    dend_34 { pt3dadd( -39.195, -64.5466, 0.288031, 0.48 ) }
    dend_34 { pt3dadd( -40.1995, -64.8385, 0.0544031, 0.48 ) }
    dend_34 { pt3dadd( -41.882, -65.2968, -0.0981736, 1.08 ) }
    dend_34 { pt3dadd( -43.0714, -65.6405, -0.104825, 0.48 ) }
    dend_34 { pt3dadd( -44.2336, -66.0737, 0.0284059, 1.08 ) }
    dend_34 { pt3dadd( -45.6333, -66.7702, 0.377666, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 16/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 23.8703, -13.0589, -5.90804, 1.8 ) }
    dend_20 { pt3dadd( 25.3878, -15.4748, -5.26355, 1.8 ) }
    dend_20 { pt3dadd( 26.3577, -17.0188, -4.85165, 1.8 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 23.8703, -13.0589, -5.90804, 1.08 ) }
    dend_17 { pt3dadd( 25.3843, -13.7905, -3.87067, 1.08 ) }
    dend_17 { pt3dadd( 26.2954, -14.2425, -2.57138, 1.08 ) }
    dend_17 { pt3dadd( 26.8743, -14.5297, -1.74581, 1.08 ) }
    dend_17 { pt3dadd( 27.4396, -14.8102, -0.939621, 1.08 ) }
    dend_17 { pt3dadd( 29.4861, -15.8254, 1.97893, 0.84 ) }
    dend_17 { pt3dadd( 30.9814, -16.5673, 4.11142, 1.32 ) }
    dend_17 { pt3dadd( 31.1447, -16.6513, 4.3875, 1.32 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.0136, 34.4177, -2.40003, 1.2 ) }
    dend_15 { pt3dadd( 16.6579, 34.2566, -0.577669, 1.2 ) }
    dend_15 { pt3dadd( 19.4558, 33.9848, 1.04438, 1.2 ) }
    dend_15 { pt3dadd( 23.1048, 33.4883, 2.90382, 1.2 ) }
    dend_15 { pt3dadd( 26.2295, 32.9508, 4.34398, 1.2 ) }
    dend_15 { pt3dadd( 30.9445, 32.0003, 6.33816, 1.8 ) }
    dend_15 { pt3dadd( 34.3163, 31.2347, 7.65973, 1.32 ) }
    dend_15 { pt3dadd( 37.8349, 30.323, 8.7384, 0.96 ) }
    dend_15 { pt3dadd( 40.1413, 29.6815, 9.23475, 0.96 ) }
    dend_15 { pt3dadd( 42.0932, 29.1338, 9.45978, 0.96 ) }
    dend_15 { pt3dadd( 45.113, 28.2854, 9.67645, 0.84 ) }
    dend_15 { pt3dadd( 47.1844, 27.6759, 9.76321, 0.84 ) }
    dend_15 { pt3dadd( 50.0886, 26.7955, 9.95869, 1.32 ) }
    dend_15 { pt3dadd( 52.9474, 25.9126, 10.421, 0.96 ) }
    dend_15 { pt3dadd( 54.8819, 25.3602, 10.7595, 1.44 ) }
    dend_15 { pt3dadd( 57.6438, 24.6068, 11.293, 1.32 ) }
    dend_15 { pt3dadd( 58.8894, 24.2464, 11.5763, 1.32 ) }
    dend_15 { pt3dadd( 60.8763, 23.5544, 12.2358, 1.08 ) }
    dend_15 { pt3dadd( 62.4176, 22.6392, 13.1936, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.0136, 34.4177, -2.40003, 1.2 ) }
    dend_8 { pt3dadd( 13.9653, 35.221, -2.38745, 1.2 ) }
    dend_8 { pt3dadd( 13.8189, 37.9026, -2.37202, 1.2 ) }
    dend_8 { pt3dadd( 13.627, 41.4178, -2.3518, 1.2 ) }
    dend_8 { pt3dadd( 13.3992, 45.5899, -2.3278, 0.96 ) }
    dend_8 { pt3dadd( 13.2921, 47.5513, -2.31652, 0.96 ) }
    dend_8 { pt3dadd( 13.0637, 51.7349, -2.29246, 1.2 ) }
    dend_8 { pt3dadd( 12.9621, 53.6342, -2.3222, 1.2 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.21826, 256.445, 7.55972, 0.72 ) }
    dend_6 { pt3dadd( -2.84551, 258.162, 10.6966, 0.72 ) }
    dend_6 { pt3dadd( -6.2846, 259.135, 12.4756, 0.72 ) }
    dend_6 { pt3dadd( -7.76026, 259.553, 13.239, 0.72 ) }
    dend_6 { pt3dadd( -9.89681, 260.158, 14.3442, 1.08 ) }
    dend_6 { pt3dadd( -12.6712, 260.944, 15.7794, 1.08 ) }
    dend_6 { pt3dadd( -13.8941, 261.29, 16.4121, 1.08 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.21826, 256.445, 7.55972, 0.96 ) }
    dend_5 { pt3dadd( 4.31606, 256.67, 6.54471, 0.96 ) }
    dend_5 { pt3dadd( 5.97644, 257.215, 5.03606, 0.96 ) }
    dend_5 { pt3dadd( 6.61491, 257.476, 4.56936, 0.96 ) }
    dend_5 { pt3dadd( 9.92488, 259.286, 3.14545, 0.96 ) }
    dend_5 { pt3dadd( 11.127, 260.002, 2.84103, 0.96 ) }
    dend_5 { pt3dadd( 12.4538, 260.664, 2.69249, 0.96 ) }
    dend_5 { pt3dadd( 15.0901, 261.639, 2.63517, 0.96 ) }
    dend_5 { pt3dadd( 18.9816, 262.643, 2.78057, 0.96 ) }
    dend_5 { pt3dadd( 23.0491, 263.108, 2.58741, 0.6 ) }
    dend_5 { pt3dadd( 23.9156, 263.168, 2.63254, 0.6 ) }
    dend_5 { pt3dadd( 28.0699, 263.101, 2.76812, 1.08 ) }
    dend_5 { pt3dadd( 31.2, 262.493, 2.55953, 1.44 ) }
    dend_5 { pt3dadd( 33.5764, 261.509, 1.94576, 1.2 ) }
    dend_5 { pt3dadd( 36.8935, 259.659, 0.279712, 0.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.1452, 16.0121, 11.2749, 1.2 ) }
    dend_2 { pt3dadd( -19.7347, 15.2514, 11.6703, 1.2 ) }
    dend_2 { pt3dadd( -20.6255, 14.1017, 12.2678, 1.2 ) }
    dend_2 { pt3dadd( -21.1143, 13.4709, 12.5957, 1.2 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -19.1452, 16.0121, 11.2749, 1.2 ) }
    dend_1 { pt3dadd( -18.9702, 16.8645, 12.8179, 1.2 ) }
    dend_1 { pt3dadd( -18.7936, 17.7249, 14.3754, 1.2 ) }
    dend_1 { pt3dadd( -18.6251, 18.5453, 15.8603, 1.2 ) }
    dend_1 { pt3dadd( -18.5681, 18.8233, 16.3635, 1.2 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.3261, 40.315, 0.0, 0.12 ) }
    axon_1 { pt3dadd( 19.2805, 54.4732, 0.0, 0.12 ) }
    axon_1 { pt3dadd( 24.2349, 68.6314, 0.0, 0.12 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 88/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.1755, -106.915, 15.4366, 0.84 ) }
    dend_37 { pt3dadd( -10.0664, -108.865, 16.0569, 0.84 ) }
    dend_37 { pt3dadd( -9.91931, -110.383, 16.5023, 0.84 ) }
    dend_37 { pt3dadd( -9.79569, -111.278, 16.7306, 0.84 ) }
    dend_37 { pt3dadd( -9.71882, -111.787, 16.8427, 0.84 ) }
    dend_37 { pt3dadd( -9.33135, -114.229, 17.3264, 1.44 ) }
    dend_37 { pt3dadd( -9.11184, -115.568, 17.5716, 1.44 ) }
    dend_37 { pt3dadd( -8.78288, -117.415, 17.876, 0.72 ) }
    dend_37 { pt3dadd( -8.52599, -119.103, 18.1257, 0.72 ) }
    dend_37 { pt3dadd( -8.32965, -120.594, 18.3087, 0.72 ) }
    dend_37 { pt3dadd( -8.25268, -121.295, 18.3744, 0.72 ) }
    dend_37 { pt3dadd( -8.21196, -121.781, 18.3785, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( -8.02608, -124.268, 18.3186, 1.44 ) }
    dend_37 { pt3dadd( -7.78111, -127.874, 18.1283, 0.72 ) }
    dend_37 { pt3dadd( -7.71273, -129.123, 18.0341, 0.72 ) }
    dend_37 { pt3dadd( -7.67409, -129.871, 17.9653, 0.72 ) }
    dend_37 { pt3dadd( -7.52324, -133.086, 17.6348, 0.72 ) }
    dend_37 { pt3dadd( -7.47671, -134.169, 17.5103, 0.72 ) }
    dend_37 { pt3dadd( -7.41234, -135.584, 17.3209, 0.72 ) }
    dend_37 { pt3dadd( -7.33762, -137.6, 17.0233, 1.44 ) }
    dend_37 { pt3dadd( -7.36285, -139.545, 16.7373, 0.72 ) }
    dend_37 { pt3dadd( -7.441, -140.852, 16.5657, 0.72 ) }
    dend_37 { pt3dadd( -7.52774, -141.743, 16.5351, 0.72 ) }
    dend_37 { pt3dadd( -7.61958, -142.604, 16.5154, 0.72 ) }
    dend_37 { pt3dadd( -7.77008, -144.024, 16.4716, 0.72 ) }
    dend_37 { pt3dadd( -8.10518, -146.818, 16.5059, 1.44 ) }
    dend_37 { pt3dadd( -8.2179, -147.687, 16.5447, 1.44 ) }
    dend_37 { pt3dadd( -8.61659, -150.684, 16.7546, 0.6 ) }
    dend_37 { pt3dadd( -8.99028, -153.544, 17.0354, 1.2 ) }
    dend_37 { pt3dadd( -9.42237, -156.876, 17.442, 0.6 ) }
    dend_37 { pt3dadd( -9.73662, -159.488, 17.8207, 1.08 ) }
    dend_37 { pt3dadd( -9.86968, -160.706, 18.025, 0.36 ) }
    dend_37 { pt3dadd( -9.94201, -161.332, 18.1083, 0.36 ) }
    dend_37 { pt3dadd( -10.3, -163.828, 18.3225, 1.08 ) }
    dend_37 { pt3dadd( -10.4467, -164.679, 18.4018, 1.08 ) }
    dend_37 { pt3dadd( -10.6994, -166.076, 18.4902, 0.36 ) }
    dend_37 { pt3dadd( -10.9084, -167.37, 18.4869, 1.68 ) }
    dend_37 { pt3dadd( -11.3019, -169.927, 18.395, 0.72 ) }
    dend_37 { pt3dadd( -11.5545, -171.474, 18.2977, 0.72 ) }
    dend_37 { pt3dadd( -11.6738, -172.196, 18.234, 0.72 ) }
    dend_37 { pt3dadd( -11.7962, -173.012, 18.1574, 0.72 ) }
    dend_37 { pt3dadd( -12.0322, -174.836, 17.9816, 1.44 ) }
    dend_37 { pt3dadd( -12.2466, -176.435, 17.8353, 1.44 ) }
    dend_37 { pt3dadd( -12.4672, -177.718, 17.6588, 0.72 ) }
    dend_37 { pt3dadd( -12.7133, -178.923, 17.4423, 0.72 ) }
    dend_37 { pt3dadd( -12.8756, -179.583, 17.3552, 0.72 ) }
    dend_37 { pt3dadd( -13.1539, -180.572, 17.2195, 0.72 ) }
    dend_37 { pt3dadd( -13.7945, -182.456, 16.96, 1.32 ) }
    dend_37 { pt3dadd( -14.5522, -184.482, 16.7143, 0.84 ) }
    dend_37 { pt3dadd( -14.9828, -185.561, 16.5671, 0.84 ) }
    dend_37 { pt3dadd( -16.081, -187.852, 16.2302, 0.48 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 39/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.1755, -106.915, 15.4366, 1.2 ) }
    dend_36 { pt3dadd( -11.8115, -108.75, 14.8787, 1.2 ) }
    dend_36 { pt3dadd( -12.9175, -110.023, 14.4391, 1.2 ) }
    dend_36 { pt3dadd( -15.4424, -113.0, 13.3177, 0.96 ) }
    dend_36 { pt3dadd( -16.6098, -114.4, 12.9349, 1.44 ) }
    dend_36 { pt3dadd( -18.8093, -117.093, 12.1587, 0.72 ) }
    dend_36 { pt3dadd( -21.2264, -120.103, 11.303, 0.72 ) }
    dend_36 { pt3dadd( -22.1055, -121.239, 10.9744, 0.72 ) }
    dend_36 { pt3dadd( -23.3666, -122.912, 10.5019, 1.2 ) }
    dend_36 { pt3dadd( -26.4797, -126.993, 9.04162, 0.48 ) }
    dend_36 { pt3dadd( -28.9389, -130.16, 7.78188, 0.96 ) }
    dend_36 { pt3dadd( -31.2134, -133.038, 6.45753, 0.36 ) }
    dend_36 { pt3dadd( -31.5524, -133.458, 6.24762, 0.36 ) }
    dend_36 { pt3dadd( -33.0344, -135.283, 5.60414, 0.72 ) }
    dend_36 { pt3dadd( -35.9768, -139.162, 5.04325, 0.72 ) }
    dend_36 { pt3dadd( -38.0062, -142.525, 4.84844, 1.2 ) }
    dend_36 { pt3dadd( -39.2825, -145.443, 5.15268, 0.6 ) }
    dend_36 { pt3dadd( -39.8554, -147.467, 5.50889, 0.6 ) }
    dend_36 { pt3dadd( -42.5325, -159.013, 8.38522, 0.6 ) }
    dend_36 { pt3dadd( -43.1327, -162.864, 9.79384, 0.6 ) }
    dend_36 { pt3dadd( -43.59, -168.55, 12.6879, 1.08 ) }
    dend_36 { pt3dadd( -43.5105, -170.807, 14.0011, 0.36 ) }
    dend_36 { pt3dadd( -43.3513, -172.201, 14.8819, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.3577, -17.0188, -4.85165, 1.8 ) }
    dend_22 { pt3dadd( 26.2656, -18.3565, -2.78295, 1.8 ) }
    dend_22 { pt3dadd( 26.217, -19.0638, -1.68919, 1.8 ) }
    dend_22 { pt3dadd( 26.0803, -21.0487, 1.38033, 1.8 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.3577, -17.0188, -4.85165, 1.44 ) }
    dend_21 { pt3dadd( 28.2138, -18.791, -6.70305, 1.44 ) }
    dend_21 { pt3dadd( 29.3873, -19.9312, -7.76338, 1.44 ) }
    dend_21 { pt3dadd( 30.153, -20.6742, -8.42786, 1.44 ) }
    dend_21 { pt3dadd( 33.706, -23.6546, -10.739, 1.56 ) }
    dend_21 { pt3dadd( 35.0481, -24.6068, -11.3762, 1.56 ) }
    dend_21 { pt3dadd( 37.49, -26.2445, -12.4413, 1.8 ) }
    dend_21 { pt3dadd( 39.467, -27.5433, -13.1989, 1.8 ) }
    dend_21 { pt3dadd( 41.9249, -28.9692, -14.0132, 1.32 ) }
    dend_21 { pt3dadd( 45.8609, -31.0114, -15.2216, 1.68 ) }
    dend_21 { pt3dadd( 48.3462, -32.2809, -16.098, 1.32 ) }
    dend_21 { pt3dadd( 52.1726, -34.0132, -17.3752, 0.72 ) }
    dend_21 { pt3dadd( 54.3275, -34.8593, -18.0342, 0.72 ) }
    dend_21 { pt3dadd( 55.7585, -35.3701, -18.5562, 1.32 ) }
    dend_21 { pt3dadd( 58.5989, -36.2012, -19.8698, 0.96 ) }
    dend_21 { pt3dadd( 63.0901, -37.5438, -23.0294, 1.44 ) }
    dend_21 { pt3dadd( 68.288, -39.0936, -28.0262, 0.6 ) }
    dend_21 { pt3dadd( 69.1687, -39.3327, -29.1463, 0.6 ) }
    dend_21 { pt3dadd( 70.7205, -39.7527, -31.4643, 1.08 ) }
    dend_21 { pt3dadd( 72.8883, -40.3519, -35.2569, 1.56 ) }
    dend_21 { pt3dadd( 74.6172, -40.7234, -39.0908, 1.2 ) }
    dend_21 { pt3dadd( 75.6105, -40.9887, -42.4843, 1.2 ) }
    dend_21 { pt3dadd( 76.01, -41.2502, -44.7726, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 31.1447, -16.6513, 4.3875, 1.08 ) }
    dend_19 { pt3dadd( 36.1791, -16.612, 4.65186, 1.08 ) }
    dend_19 { pt3dadd( 38.3013, -16.4443, 3.73276, 1.08 ) }
    dend_19 { pt3dadd( 41.6305, -16.0581, 1.9139, 1.56 ) }
    dend_19 { pt3dadd( 47.7161, -15.2366, -1.707, 1.08 ) }
    dend_19 { pt3dadd( 52.0802, -14.5136, -4.44041, 0.6 ) }
    dend_19 { pt3dadd( 63.6319, -11.8987, -12.2674, 0.6 ) }
    dend_19 { pt3dadd( 66.7833, -10.8512, -14.9253, 1.2 ) }
    dend_19 { pt3dadd( 68.5589, -10.0367, -16.6403, 0.6 ) }
    dend_19 { pt3dadd( 69.9216, -9.17295, -18.0847, 1.08 ) }
    dend_19 { pt3dadd( 71.0818, -8.2121, -19.4584, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 73.4796, -5.7398, -22.1322, 1.44 ) }
    dend_19 { pt3dadd( 75.2939, -3.45048, -23.2396, 0.84 ) }
    dend_19 { pt3dadd( 76.4985, -1.75083, -23.8099, 1.32 ) }
    dend_19 { pt3dadd( 78.2734, 0.893861, -24.4889, 0.72 ) }
    dend_19 { pt3dadd( 79.1291, 2.10441, -24.7242, 0.72 ) }
    dend_19 { pt3dadd( 80.2583, 3.49939, -24.9638, 1.08 ) }
    dend_19 { pt3dadd( 82.4092, 5.71429, -25.2686, 0.6 ) }
    dend_19 { pt3dadd( 84.6184, 7.68195, -25.5724, 1.2 ) }
    dend_19 { pt3dadd( 85.8743, 8.65511, -25.7353, 1.2 ) }
    dend_19 { pt3dadd( 88.3672, 10.324, -26.0526, 0.72 ) }
    dend_19 { pt3dadd( 91.3625, 12.259, -26.5123, 1.08 ) }
    dend_19 { pt3dadd( 95.0565, 14.6811, -26.9405, 0.6 ) }
    dend_19 { pt3dadd( 95.9375, 15.2994, -27.0079, 0.6 ) }
    dend_19 { pt3dadd( 97.3013, 16.3681, -27.0543, 0.6 ) }
    dend_19 { pt3dadd( 101.79, 20.4623, -26.9269, 1.08 ) }
    dend_19 { pt3dadd( 103.464, 22.2027, -26.7421, 0.72 ) }
    dend_19 { pt3dadd( 106.272, 25.3633, -26.1996, 1.2 ) }
    dend_19 { pt3dadd( 108.354, 27.8364, -25.7252, 1.2 ) }
    dend_19 { pt3dadd( 109.567, 29.229, -25.4397, 1.2 ) }
    dend_19 { pt3dadd( 111.625, 31.443, -24.9444, 0.72 ) }
    dend_19 { pt3dadd( 113.065, 32.8236, -24.576, 0.72 ) }
    dend_19 { pt3dadd( 115.436, 34.6829, -24.0308, 0.72 ) }
    dend_19 { pt3dadd( 117.233, 35.8022, -23.6762, 1.32 ) }
    dend_19 { pt3dadd( 121.008, 37.6995, -22.8379, 0.96 ) }
    dend_19 { pt3dadd( 122.52, 38.357, -22.4838, 0.96 ) }
    dend_19 { pt3dadd( 124.18, 39.0007, -22.0827, 1.44 ) }
    dend_19 { pt3dadd( 126.634, 40.0075, -21.4145, 1.08 ) }
    dend_19 { pt3dadd( 129.165, 41.079, -20.8783, 1.56 ) }
    dend_19 { pt3dadd( 132.299, 42.4321, -20.4152, 0.96 ) }
    dend_19 { pt3dadd( 133.859, 43.1232, -20.3142, 0.96 ) }
    dend_19 { pt3dadd( 135.041, 43.6622, -20.3328, 1.56 ) }
    dend_19 { pt3dadd( 137.626, 44.8794, -20.6739, 0.96 ) }
    dend_19 { pt3dadd( 141.831, 46.9576, -21.6779, 0.96 ) }
    dend_19 { pt3dadd( 143.157, 47.6024, -21.9765, 0.96 ) }
    dend_19 { pt3dadd( 145.887, 48.7901, -22.4548, 1.56 ) }
    dend_19 { pt3dadd( 148.0, 49.6869, -22.8091, 0.84 ) }
    dend_19 { pt3dadd( 150.245, 50.6163, -22.9841, 1.44 ) }
    dend_19 { pt3dadd( 154.703, 52.4375, -22.8449, 0.72 ) }
    dend_19 { pt3dadd( 158.628, 54.2568, -21.9616, 0.48 ) }
    dend_19 { pt3dadd( 160.302, 55.117, -21.343, 0.48 ) }
    dend_19 { pt3dadd( 163.501, 56.856, -19.5771, 1.68 ) }
    dend_19 { pt3dadd( 167.667, 59.1481, -16.8706, 0.72 ) }
    dend_19 { pt3dadd( 169.829, 60.3378, -15.1813, 0.72 ) }
    dend_19 { pt3dadd( 172.842, 62.061, -12.2994, 1.32 ) }
    dend_19 { pt3dadd( 174.037, 62.8489, -11.0304, 1.32 ) }
    dend_19 { pt3dadd( 175.945, 64.2327, -8.41968, 0.72 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 46/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 31.1447, -16.6513, 4.3875, 1.08 ) }
    dend_18 { pt3dadd( 33.5459, -17.3183, 1.92494, 1.08 ) }
    dend_18 { pt3dadd( 34.1078, -17.4743, 1.34868, 1.08 ) }
    dend_18 { pt3dadd( 35.148, -17.7633, 0.281869, 0.84 ) }
    dend_18 { pt3dadd( 35.6687, -17.9079, -0.2521, 0.84 ) }
    dend_18 { pt3dadd( 36.6662, -18.185, -1.27517, 0.84 ) }
    dend_18 { pt3dadd( 37.3614, -18.3781, -1.98814, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.9621, 53.6342, -2.3222, 0.96 ) }
    dend_12 { pt3dadd( 11.8332, 59.5868, -2.99503, 0.96 ) }
    dend_12 { pt3dadd( 11.1955, 62.9494, -3.37511, 0.96 ) }
    dend_12 { pt3dadd( 10.0791, 68.8366, -4.04056, 1.2 ) }
    dend_12 { pt3dadd( 9.27318, 73.0862, -4.52088, 1.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 12.9621, 53.6342, -2.3222, 0.96 ) }
    dend_9 { pt3dadd( 14.1612, 55.0193, -1.61273, 0.96 ) }
    dend_9 { pt3dadd( 16.4924, 57.5296, -0.463433, 0.84 ) }
    dend_9 { pt3dadd( 17.1939, 58.2684, -0.182997, 0.84 ) }
    dend_9 { pt3dadd( 20.0355, 61.3307, 0.727085, 0.84 ) }
    dend_9 { pt3dadd( 21.0708, 62.4736, 1.02276, 0.84 ) }
    dend_9 { pt3dadd( 23.4576, 65.147, 1.64985, 0.84 ) }
    dend_9 { pt3dadd( 24.9437, 66.8476, 1.94036, 0.84 ) }
    dend_9 { pt3dadd( 27.1466, 69.3462, 2.25925, 0.84 ) }
    dend_9 { pt3dadd( 29.7641, 72.2983, 2.55174, 0.84 ) }
    dend_9 { pt3dadd( 32.0609, 74.9195, 2.68027, 1.08 ) }
    dend_9 { pt3dadd( 32.8274, 75.8294, 2.72746, 1.08 ) }
    dend_9 { pt3dadd( 34.5718, 78.0914, 2.83676, 1.08 ) }
    // Section: dend_40, id: dend_40, parent: dend_37 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.081, -187.852, 16.2302, 0.72 ) }
    dend_40 { pt3dadd( -16.6521, -189.348, 16.1803, 0.72 ) }
    dend_40 { pt3dadd( -17.3979, -191.162, 16.1102, 1.2 ) }
    dend_40 { pt3dadd( -18.0497, -192.491, 16.0441, 1.2 ) }
    dend_40 { pt3dadd( -18.8385, -194.125, 15.8189, 0.6 ) }
    dend_40 { pt3dadd( -19.4775, -195.521, 15.5833, 0.6 ) }
    dend_40 { pt3dadd( -20.3519, -197.547, 15.2229, 0.6 ) }
    dend_40 { pt3dadd( -20.8535, -198.833, 14.9478, 0.6 ) }
    dend_40 { pt3dadd( -21.8681, -201.783, 14.1718, 1.2 ) }
    dend_40 { pt3dadd( -23.1584, -205.424, 13.5374, 0.72 ) }
    dend_40 { pt3dadd( -23.6465, -206.827, 13.2864, 0.72 ) }
    dend_40 { pt3dadd( -24.2901, -208.831, 12.9311, 0.72 ) }
    dend_40 { pt3dadd( -24.7208, -210.379, 12.6718, 0.72 ) }
    dend_40 { pt3dadd( -25.8009, -214.824, 12.0401, 1.32 ) }
    dend_40 { pt3dadd( -27.003, -221.191, 11.5868, 0.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -16.081, -187.852, 16.2302, 0.48 ) }
    dend_39 { pt3dadd( -15.3394, -191.527, 15.5994, 0.48 ) }
    dend_39 { pt3dadd( -15.1319, -192.616, 15.4561, 0.48 ) }
    dend_39 { pt3dadd( -14.7879, -195.133, 15.1923, 0.48 ) }
    dend_39 { pt3dadd( -14.6759, -196.661, 15.0434, 0.48 ) }
    dend_39 { pt3dadd( -14.7068, -198.246, 14.8871, 0.48 ) }
    dend_39 { pt3dadd( -14.9343, -200.4, 14.6852, 1.08 ) }
    dend_39 { pt3dadd( -15.3875, -202.322, 14.4978, 1.08 ) }
    dend_39 { pt3dadd( -16.366, -205.031, 14.0935, 1.08 ) }
    dend_39 { pt3dadd( -17.23, -206.73, 13.7135, 1.08 ) }
    dend_39 { pt3dadd( -19.2603, -209.797, 12.6706, 0.48 ) }
    dend_39 { pt3dadd( -20.8612, -211.566, 11.6644, 0.48 ) }
    dend_39 { pt3dadd( -22.0897, -212.585, 10.6995, 0.48 ) }
    dend_39 { pt3dadd( -24.5101, -214.146, 8.48238, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -25.8738, -214.831, 7.06825, 0.84 ) }
    dend_39 { pt3dadd( -26.6065, -215.11, 6.2453, 0.84 ) }
    dend_39 { pt3dadd( -28.949, -215.734, 3.31386, 1.32 ) }
    dend_39 { pt3dadd( -30.394, -216.038, 1.32496, 0.72 ) }
    dend_39 { pt3dadd( -31.4397, -216.248, -0.179659, 0.72 ) }
    dend_39 { pt3dadd( -32.0947, -216.405, -1.08947, 0.72 ) }
    dend_39 { pt3dadd( -33.1525, -216.777, -2.52296, 0.72 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.081, -187.852, 16.2302, 0.84 ) }
    dend_38 { pt3dadd( -15.5382, -190.319, 16.0617, 0.84 ) }
    dend_38 { pt3dadd( -15.0786, -192.459, 15.9607, 2.16 ) }
    dend_38 { pt3dadd( -14.4376, -195.555, 15.8574, 1.08 ) }
    dend_38 { pt3dadd( -14.1375, -197.176, 15.8308, 0.84 ) }
    dend_38 { pt3dadd( -13.9626, -198.349, 15.8672, 0.84 ) }
    dend_38 { pt3dadd( -13.8728, -199.341, 15.831, 0.84 ) }
    dend_38 { pt3dadd( -13.8979, -200.455, 15.7995, 0.84 ) }
    dend_38 { pt3dadd( -13.9643, -201.205, 15.7601, 0.84 ) }
    dend_38 { pt3dadd( -14.0989, -202.237, 15.6748, 0.84 ) }
    dend_38 { pt3dadd( -14.3461, -203.551, 15.6193, 0.84 ) }
    dend_38 { pt3dadd( -15.3676, -207.628, 15.427, 2.04 ) }
    dend_38 { pt3dadd( -16.0712, -209.788, 15.2987, 0.96 ) }
    dend_38 { pt3dadd( -16.271, -210.351, 15.2393, 0.96 ) }
    dend_38 { pt3dadd( -16.8098, -211.836, 15.036, 0.96 ) }
    dend_38 { pt3dadd( -17.1504, -212.769, 14.8842, 0.96 ) }
    dend_38 { pt3dadd( -17.6937, -214.309, 14.6123, 0.96 ) }
    dend_38 { pt3dadd( -18.3903, -216.4, 14.3221, 1.68 ) }
    dend_38 { pt3dadd( -19.0218, -218.694, 13.9369, 0.96 ) }
    dend_38 { pt3dadd( -19.2586, -219.948, 13.7372, 0.96 ) }
    dend_38 { pt3dadd( -19.3252, -220.895, 13.6026, 0.96 ) }
    dend_38 { pt3dadd( -19.2809, -221.936, 13.55, 1.32 ) }
    dend_38 { pt3dadd( -18.9719, -223.517, 13.7677, 0.6 ) }
    dend_38 { pt3dadd( -18.5765, -224.608, 14.1676, 0.96 ) }
    dend_38 { pt3dadd( -17.9467, -225.865, 14.9186, 0.6 ) }
    dend_38 { pt3dadd( -17.1234, -227.065, 15.8443, 1.08 ) }
    dend_38 { pt3dadd( -16.1611, -228.13, 16.8587, 0.48 ) }
    dend_38 { pt3dadd( -14.347, -229.763, 18.7067, 0.48 ) }
    dend_38 { pt3dadd( -13.6222, -230.318, 19.4542, 0.48 ) }
    dend_38 { pt3dadd( -12.9177, -230.782, 20.1919, 0.48 ) }
    dend_38 { pt3dadd( -11.8707, -231.376, 21.3137, 0.48 ) }
    dend_38 { pt3dadd( -11.1092, -231.72, 22.0898, 0.48 ) }
    dend_38 { pt3dadd( -10.7063, -231.861, 22.4006, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 26.0803, -21.0487, 1.38033, 1.32 ) }
    dend_24 { pt3dadd( 25.5004, -22.3598, 2.33285, 1.32 ) }
    dend_24 { pt3dadd( 24.9257, -23.647, 3.06331, 0.84 ) }
    dend_24 { pt3dadd( 24.5125, -24.6371, 3.55007, 0.84 ) }
    dend_24 { pt3dadd( 24.0548, -25.7971, 4.0791, 0.84 ) }
    dend_24 { pt3dadd( 22.8511, -29.0047, 5.46427, 1.32 ) }
    dend_24 { pt3dadd( 22.2333, -30.8708, 6.15723, 1.32 ) }
    dend_24 { pt3dadd( 21.3924, -33.9584, 7.17385, 0.72 ) }
    dend_24 { pt3dadd( 20.9289, -35.9251, 7.74997, 0.72 ) }
    dend_24 { pt3dadd( 20.7942, -36.6039, 7.9277, 0.72 ) }
    dend_24 { pt3dadd( 20.6452, -37.4114, 8.113, 0.72 ) }
    dend_24 { pt3dadd( 19.7975, -42.9183, 9.08238, 1.56 ) }
    dend_24 { pt3dadd( 19.639, -44.1173, 9.28702, 1.56 ) }
    dend_24 { pt3dadd( 19.3613, -47.0369, 9.93337, 1.56 ) }
    dend_24 { pt3dadd( 19.2179, -48.5321, 10.2505, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 26.0803, -21.0487, 1.38033, 0.72 ) }
    dend_23 { pt3dadd( 26.3731, -23.2979, 2.64273, 0.72 ) }
    dend_23 { pt3dadd( 26.4332, -23.7582, 2.90784, 0.72 ) }
    dend_23 { pt3dadd( 26.5746, -24.7384, 3.49254, 1.2 ) }
    dend_23 { pt3dadd( 26.9973, -27.379, 5.03665, 0.84 ) }
    dend_23 { pt3dadd( 27.3217, -29.1629, 6.04486, 1.56 ) }
    dend_23 { pt3dadd( 27.6878, -30.9376, 7.01885, 0.84 ) }
    dend_23 { pt3dadd( 28.1448, -33.0652, 8.18794, 1.44 ) }
    dend_23 { pt3dadd( 28.6992, -34.753, 9.05075, 0.96 ) }
    dend_23 { pt3dadd( 29.2632, -35.8246, 9.55927, 0.96 ) }
    dend_23 { pt3dadd( 30.0009, -36.67, 9.91797, 0.96 ) }
    dend_23 { pt3dadd( 30.5815, -37.1394, 10.0316, 0.96 ) }
    dend_23 { pt3dadd( 31.814, -37.8661, 10.0481, 0.84 ) }
    dend_23 { pt3dadd( 34.5605, -39.2707, 9.97098, 1.32 ) }
    dend_23 { pt3dadd( 37.3794, -40.5691, 9.80181, 0.6 ) }
    dend_23 { pt3dadd( 40.6153, -41.934, 9.56343, 1.2 ) }
    dend_23 { pt3dadd( 44.9788, -43.6471, 9.17029, 0.48 ) }
    dend_23 { pt3dadd( 48.3659, -44.8988, 8.78783, 0.96 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.27318, 73.0862, -4.52088, 1.2 ) }
    dend_14 { pt3dadd( 8.67768, 77.7621, -3.71976, 1.2 ) }
    dend_14 { pt3dadd( 8.64053, 80.0528, -3.38557, 1.2 ) }
    dend_14 { pt3dadd( 8.72838, 81.5545, -3.13458, 1.2 ) }
    dend_14 { pt3dadd( 8.9186, 83.4467, -2.81583, 1.2 ) }
    dend_14 { pt3dadd( 9.16279, 85.3243, -2.52426, 0.96 ) }
    dend_14 { pt3dadd( 9.35853, 86.9781, -2.3259, 0.96 ) }
    dend_14 { pt3dadd( 9.61194, 88.4669, -2.25156, 0.96 ) }
    dend_14 { pt3dadd( 10.1319, 91.7267, -2.11854, 0.96 ) }
    dend_14 { pt3dadd( 10.349, 93.4097, -2.08871, 0.96 ) }
    dend_14 { pt3dadd( 10.5181, 95.1665, -2.09005, 0.96 ) }
    dend_14 { pt3dadd( 10.75, 98.4239, -2.14293, 0.84 ) }
    dend_14 { pt3dadd( 10.8375, 100.002, -2.19417, 0.84 ) }
    dend_14 { pt3dadd( 10.9373, 102.957, -2.35478, 0.84 ) }
    dend_14 { pt3dadd( 10.9702, 105.231, -2.54238, 0.84 ) }
    dend_14 { pt3dadd( 10.9482, 107.118, -2.73749, 0.84 ) }
    dend_14 { pt3dadd( 10.874, 109.432, -3.01325, 0.84 ) }
    dend_14 { pt3dadd( 10.7888, 111.59, -3.29581, 0.84 ) }
    dend_14 { pt3dadd( 10.6657, 113.884, -3.62916, 0.84 ) }
    dend_14 { pt3dadd( 10.4617, 116.837, -4.10156, 0.84 ) }
    dend_14 { pt3dadd( 10.038, 122.532, -5.07156, 0.84 ) }
    dend_14 { pt3dadd( 9.7858, 125.585, -5.63179, 0.84 ) }
    dend_14 { pt3dadd( 9.65617, 126.991, -5.90754, 0.84 ) }
    dend_14 { pt3dadd( 9.54531, 128.154, -6.14036, 0.84 ) }
    dend_14 { pt3dadd( 9.40204, 129.495, -6.39596, 0.84 ) }
    dend_14 { pt3dadd( 9.17177, 131.113, -6.69779, 0.84 ) }
    dend_14 { pt3dadd( 8.90504, 132.715, -6.97738, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 8.57219, 134.532, -7.29687, 0.84 ) }
    dend_14 { pt3dadd( 8.28492, 135.974, -7.55749, 0.84 ) }
    dend_14 { pt3dadd( 7.53848, 139.626, -8.22693, 0.72 ) }
    dend_14 { pt3dadd( 7.1064, 141.744, -8.6169, 0.72 ) }
    dend_14 { pt3dadd( 6.80337, 143.593, -8.9408, 0.72 ) }
    dend_14 { pt3dadd( 6.60333, 145.239, -9.2092, 0.72 ) }
    dend_14 { pt3dadd( 6.39535, 147.466, -9.51091, 1.2 ) }
    dend_14 { pt3dadd( 6.25286, 149.377, -9.71334, 1.2 ) }
    dend_14 { pt3dadd( 6.1518, 151.549, -9.88573, 0.96 ) }
    dend_14 { pt3dadd( 5.99696, 155.499, -10.1087, 1.44 ) }
    dend_14 { pt3dadd( 5.94208, 156.998, -10.172, 1.44 ) }
    dend_14 { pt3dadd( 5.9111, 159.231, -10.2593, 1.2 ) }
    dend_14 { pt3dadd( 5.9466, 160.768, -10.3508, 1.2 ) }
    dend_14 { pt3dadd( 6.05554, 163.395, -10.5781, 1.2 ) }
    dend_14 { pt3dadd( 6.12854, 164.756, -10.7172, 1.2 ) }
    dend_14 { pt3dadd( 6.17488, 165.598, -10.8023, 1.2 ) }
    dend_14 { pt3dadd( 6.29815, 167.531, -11.0019, 1.56 ) }
    dend_14 { pt3dadd( 6.6188, 172.216, -11.5101, 0.84 ) }
    dend_14 { pt3dadd( 6.75418, 174.442, -11.7431, 0.84 ) }
    dend_14 { pt3dadd( 6.95901, 178.64, -12.1011, 1.32 ) }
    dend_14 { pt3dadd( 7.12144, 182.729, -12.368, 0.96 ) }
    dend_14 { pt3dadd( 7.16474, 184.202, -12.4326, 0.96 ) }
    dend_14 { pt3dadd( 7.19517, 185.905, -12.4614, 0.96 ) }
    dend_14 { pt3dadd( 7.21278, 186.747, -12.4577, 0.96 ) }
    dend_14 { pt3dadd( 7.34876, 189.598, -12.4453, 0.96 ) }
    dend_14 { pt3dadd( 7.48768, 191.323, -12.4097, 0.96 ) }
    dend_14 { pt3dadd( 7.64309, 192.699, -12.4069, 0.96 ) }
    dend_14 { pt3dadd( 7.91072, 194.695, -12.4251, 0.96 ) }
    dend_14 { pt3dadd( 8.1517, 196.295, -12.4607, 0.96 ) }
    dend_14 { pt3dadd( 8.37477, 197.641, -12.532, 0.96 ) }
    dend_14 { pt3dadd( 8.90144, 200.651, -12.799, 0.96 ) }
    dend_14 { pt3dadd( 9.37194, 203.331, -13.0954, 0.96 ) }
    dend_14 { pt3dadd( 9.88688, 206.512, -13.4609, 0.96 ) }
    dend_14 { pt3dadd( 10.2118, 208.638, -13.7894, 0.96 ) }
    dend_14 { pt3dadd( 10.5814, 211.357, -14.3468, 1.44 ) }
    dend_14 { pt3dadd( 10.951, 214.552, -15.1386, 0.96 ) }
    dend_14 { pt3dadd( 11.157, 216.71, -15.7718, 0.72 ) }
    dend_14 { pt3dadd( 11.3849, 219.665, -16.7102, 1.2 ) }
    dend_14 { pt3dadd( 11.5439, 222.621, -17.6197, 1.2 ) }
    dend_14 { pt3dadd( 11.5773, 224.995, -18.222, 1.2 ) }
    dend_14 { pt3dadd( 11.5414, 227.01, -18.6551, 1.56 ) }
    dend_14 { pt3dadd( 11.4472, 230.004, -19.1943, 1.68 ) }
    dend_14 { pt3dadd( 11.3536, 233.01, -19.7327, 1.08 ) }
    dend_14 { pt3dadd( 11.0544, 238.49, -20.5274, 1.44 ) }
    dend_14 { pt3dadd( 10.6947, 244.357, -21.1547, 0.84 ) }
    dend_14 { pt3dadd( 10.6075, 245.724, -21.269, 0.84 ) }
    dend_14 { pt3dadd( 10.3544, 249.22, -21.5186, 1.44 ) }
    dend_14 { pt3dadd( 10.0133, 253.156, -21.7227, 0.6 ) }
    dend_14 { pt3dadd( 9.54951, 257.441, -21.904, 1.08 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.27318, 73.0862, -4.52088, 0.96 ) }
    dend_13 { pt3dadd( 10.2469, 76.1261, -5.90291, 0.96 ) }
    dend_13 { pt3dadd( 10.8883, 78.6156, -6.7938, 0.96 ) }
    dend_13 { pt3dadd( 12.1304, 84.1702, -8.49426, 0.96 ) }
    dend_13 { pt3dadd( 12.5962, 86.5742, -9.14886, 1.32 ) }
    dend_13 { pt3dadd( 12.8248, 88.0651, -9.50391, 1.32 ) }
    dend_13 { pt3dadd( 13.3564, 92.7162, -10.4862, 0.96 ) }
    dend_13 { pt3dadd( 13.486, 95.6467, -11.0024, 0.96 ) }
    dend_13 { pt3dadd( 13.4699, 97.3494, -11.1584, 0.96 ) }
    dend_13 { pt3dadd( 13.4191, 99.1917, -11.17, 0.96 ) }
    dend_13 { pt3dadd( 13.4247, 101.559, -11.3398, 0.96 ) }
    dend_13 { pt3dadd( 13.457, 104.23, -11.656, 0.96 ) }
    dend_13 { pt3dadd( 13.5153, 105.56, -11.8827, 0.96 ) }
    dend_13 { pt3dadd( 13.675, 107.56, -12.2663, 0.96 ) }
    dend_13 { pt3dadd( 14.1767, 112.143, -13.2181, 1.44 ) }
    dend_13 { pt3dadd( 15.2716, 119.75, -14.8724, 1.2 ) }
    dend_13 { pt3dadd( 15.6024, 121.611, -15.2908, 1.2 ) }
    dend_13 { pt3dadd( 16.476, 126.245, -16.3382, 1.08 ) }
    dend_13 { pt3dadd( 16.9754, 129.038, -16.9557, 1.08 ) }
    dend_13 { pt3dadd( 17.1809, 130.311, -17.225, 1.08 ) }
    dend_13 { pt3dadd( 17.6099, 133.29, -17.7959, 1.08 ) }
    dend_13 { pt3dadd( 17.9442, 136.079, -18.1728, 1.08 ) }
    dend_13 { pt3dadd( 18.1292, 139.705, -18.5832, 1.08 ) }
    dend_13 { pt3dadd( 17.9381, 142.797, -18.7843, 1.08 ) }
    dend_13 { pt3dadd( 17.5494, 145.314, -18.9488, 1.08 ) }
    dend_13 { pt3dadd( 17.1354, 147.144, -19.0656, 1.08 ) }
    dend_13 { pt3dadd( 16.3107, 150.002, -19.2463, 1.08 ) }
    dend_13 { pt3dadd( 14.9788, 154.317, -19.4931, 1.56 ) }
    dend_13 { pt3dadd( 13.6974, 158.429, -19.612, 0.84 ) }
    dend_13 { pt3dadd( 12.9721, 160.882, -19.6499, 0.84 ) }
    dend_13 { pt3dadd( 12.1458, 163.831, -19.6489, 0.84 ) }
    dend_13 { pt3dadd( 11.5664, 166.218, -19.633, 0.84 ) }
    dend_13 { pt3dadd( 10.518, 171.652, -19.5873, 1.2 ) }
    dend_13 { pt3dadd( 9.91854, 175.78, -19.5673, 0.96 ) }
    dend_13 { pt3dadd( 9.62969, 178.405, -19.5486, 0.96 ) }
    dend_13 { pt3dadd( 9.33326, 181.888, -19.4485, 1.2 ) }
    dend_13 { pt3dadd( 8.9176, 187.275, -19.2736, 0.84 ) }
    dend_13 { pt3dadd( 8.67918, 190.334, -19.1896, 0.84 ) }
    dend_13 { pt3dadd( 8.56865, 191.764, -19.2014, 0.84 ) }
    dend_13 { pt3dadd( 8.50891, 192.711, -19.2675, 0.84 ) }
    dend_13 { pt3dadd( 8.4119, 194.376, -19.4173, 0.84 ) }
    dend_13 { pt3dadd( 8.22464, 198.66, -19.8694, 0.72 ) }
    dend_13 { pt3dadd( 8.15069, 200.626, -20.0759, 1.32 ) }
    dend_13 { pt3dadd( 7.92607, 204.96, -20.4384, 0.96 ) }
    dend_13 { pt3dadd( 7.80728, 207.833, -20.6276, 0.96 ) }
    dend_13 { pt3dadd( 7.72268, 210.432, -20.7687, 0.96 ) }
    dend_13 { pt3dadd( 7.68722, 212.228, -20.8516, 0.96 ) }
    dend_13 { pt3dadd( 7.74005, 217.282, -21.0334, 1.32 ) }
    dend_13 { pt3dadd( 7.87632, 221.663, -21.1115, 0.72 ) }
    dend_13 { pt3dadd( 8.0723, 225.936, -21.1002, 0.72 ) }
    dend_13 { pt3dadd( 8.32544, 230.516, -21.0733, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_13 { pt3dadd( 8.43259, 232.169, -21.0946, 0.72 ) }
    dend_13 { pt3dadd( 8.64355, 235.043, -21.1641, 0.72 ) }
    dend_13 { pt3dadd( 8.84204, 237.336, -21.2444, 0.72 ) }
    dend_13 { pt3dadd( 9.03902, 239.237, -21.3478, 0.72 ) }
    dend_13 { pt3dadd( 9.19681, 241.139, -21.4566, 0.72 ) }
    dend_13 { pt3dadd( 9.33743, 243.076, -21.5698, 0.72 ) }
    dend_13 { pt3dadd( 9.40285, 244.602, -21.6321, 0.72 ) }
    dend_13 { pt3dadd( 9.44688, 247.312, -21.6486, 0.72 ) }
    dend_13 { pt3dadd( 9.42986, 249.388, -21.5925, 0.72 ) }
    dend_13 { pt3dadd( 9.37954, 251.171, -21.4665, 0.72 ) }
    dend_13 { pt3dadd( 9.38651, 252.927, -21.1249, 0.72 ) }
    dend_13 { pt3dadd( 9.47389, 255.067, -20.4606, 0.72 ) }
    dend_13 { pt3dadd( 9.54787, 256.259, -19.9885, 0.72 ) }
    dend_13 { pt3dadd( 9.60099, 256.897, -19.7358, 0.72 ) }
    dend_13 { pt3dadd( 9.66678, 257.608, -19.492, 0.72 ) }
    dend_13 { pt3dadd( 10.0751, 262.101, -18.1717, 1.32 ) }
    dend_13 { pt3dadd( 10.1678, 263.318, -17.8682, 0.84 ) }
    dend_13 { pt3dadd( 10.5452, 268.961, -16.7533, 0.84 ) }
    dend_13 { pt3dadd( 10.8226, 273.44, -16.0689, 0.84 ) }
    dend_13 { pt3dadd( 11.15, 279.001, -15.4107, 1.2 ) }
    dend_13 { pt3dadd( 11.2712, 281.186, -15.2505, 1.2 ) }
    dend_13 { pt3dadd( 11.3407, 282.652, -15.2222, 1.2 ) }
    dend_13 { pt3dadd( 11.4876, 285.048, -15.1625, 1.2 ) }
    dend_13 { pt3dadd( 11.7085, 287.679, -15.1091, 1.2 ) }
    dend_13 { pt3dadd( 11.8188, 288.9, -15.0826, 1.2 ) }
    dend_13 { pt3dadd( 12.034, 291.339, -15.0543, 1.2 ) }
    dend_13 { pt3dadd( 12.2573, 293.722, -15.0337, 1.2 ) }
    dend_13 { pt3dadd( 12.8703, 301.76, -14.9282, 1.2 ) }
    dend_13 { pt3dadd( 13.1522, 306.278, -14.8691, 1.68 ) }
    dend_13 { pt3dadd( 13.4957, 312.704, -14.8075, 1.08 ) }
    dend_13 { pt3dadd( 13.8154, 319.565, -14.7781, 1.56 ) }
    dend_13 { pt3dadd( 13.9411, 322.661, -14.7848, 1.56 ) }
    dend_13 { pt3dadd( 14.142, 327.734, -14.7998, 1.44 ) }
    dend_13 { pt3dadd( 14.3399, 332.618, -14.8366, 1.44 ) }
    dend_13 { pt3dadd( 14.4945, 336.94, -14.8192, 1.44 ) }
    dend_13 { pt3dadd( 14.6447, 340.827, -14.7191, 1.44 ) }
    dend_13 { pt3dadd( 14.7464, 343.277, -14.6708, 1.44 ) }
    dend_13 { pt3dadd( 14.909, 348.055, -14.5199, 1.44 ) }
    dend_13 { pt3dadd( 14.9882, 350.019, -14.443, 1.44 ) }
    dend_13 { pt3dadd( 15.0363, 352.275, -14.2941, 1.44 ) }
    dend_13 { pt3dadd( 15.0409, 354.971, -14.0615, 1.44 ) }
    dend_13 { pt3dadd( 14.8182, 359.628, -13.934, 0.84 ) }
    dend_13 { pt3dadd( 14.58, 363.435, -13.874, 0.84 ) }
    dend_13 { pt3dadd( 14.3719, 365.776, -13.9044, 0.84 ) }
    dend_13 { pt3dadd( 14.1358, 367.989, -13.9689, 0.84 ) }
    dend_13 { pt3dadd( 13.8796, 369.87, -14.0764, 0.84 ) }
    dend_13 { pt3dadd( 12.6619, 376.69, -14.8088, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 34.5718, 78.0914, 2.83676, 0.96 ) }
    dend_11 { pt3dadd( 38.1873, 79.5046, 1.91728, 0.96 ) }
    dend_11 { pt3dadd( 40.625, 81.0606, 1.30535, 0.96 ) }
    dend_11 { pt3dadd( 42.3372, 82.4917, 0.886478, 0.96 ) }
    dend_11 { pt3dadd( 44.4733, 84.6777, 0.382103, 0.96 ) }
    dend_11 { pt3dadd( 47.4874, 88.2948, -0.307506, 0.96 ) }
    dend_11 { pt3dadd( 48.9116, 90.2491, -0.614731, 0.96 ) }
    dend_11 { pt3dadd( 51.4203, 95.1572, -1.10055, 1.2 ) }
    dend_11 { pt3dadd( 52.0399, 96.8602, -1.19863, 1.2 ) }
    dend_11 { pt3dadd( 52.5424, 98.8101, -1.24808, 0.6 ) }
    dend_11 { pt3dadd( 52.8772, 100.507, -1.25586, 0.6 ) }
    dend_11 { pt3dadd( 53.3732, 103.792, -1.05487, 1.08 ) }
    dend_11 { pt3dadd( 53.7095, 106.064, -0.873809, 0.36 ) }
    dend_11 { pt3dadd( 53.9232, 107.438, -0.744053, 0.36 ) }
    dend_11 { pt3dadd( 54.4232, 110.693, -0.408825, 0.84 ) }
    dend_11 { pt3dadd( 54.8183, 113.626, -0.0660664, 0.84 ) }
    dend_11 { pt3dadd( 55.3619, 118.438, 0.548962, 1.44 ) }
    dend_11 { pt3dadd( 55.5416, 120.335, 0.843448, 1.44 ) }
    dend_11 { pt3dadd( 55.7381, 122.39, 1.19579, 0.84 ) }
    dend_11 { pt3dadd( 55.9345, 124.966, 1.58589, 0.84 ) }
    dend_11 { pt3dadd( 56.1112, 128.243, 2.02198, 1.32 ) }
    dend_11 { pt3dadd( 56.1682, 130.078, 2.2541, 1.32 ) }
    dend_11 { pt3dadd( 56.2896, 132.86, 2.51441, 1.08 ) }
    dend_11 { pt3dadd( 56.3311, 134.0, 2.61606, 1.08 ) }
    dend_11 { pt3dadd( 56.5478, 138.24, 2.93384, 1.56 ) }
    dend_11 { pt3dadd( 56.608, 139.408, 2.98902, 1.56 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 34.5718, 78.0914, 2.83676, 1.08 ) }
    dend_10 { pt3dadd( 34.892, 80.4279, 2.97864, 1.08 ) }
    dend_10 { pt3dadd( 35.1083, 82.0589, 3.03152, 1.08 ) }
    dend_10 { pt3dadd( 35.3903, 84.1849, 3.171, 1.08 ) }
    dend_10 { pt3dadd( 35.7088, 86.7069, 3.39675, 0.84 ) }
    dend_10 { pt3dadd( 36.3116, 91.5881, 3.88659, 1.56 ) }
    dend_10 { pt3dadd( 36.94, 96.2029, 4.40317, 1.2 ) }
    dend_10 { pt3dadd( 37.4374, 99.9336, 4.834, 1.08 ) }
    dend_10 { pt3dadd( 37.8964, 103.622, 5.2464, 1.32 ) }
    dend_10 { pt3dadd( 38.1247, 106.009, 5.46417, 0.96 ) }
    dend_10 { pt3dadd( 38.2658, 108.15, 5.67157, 1.32 ) }
    dend_10 { pt3dadd( 38.3679, 110.892, 5.93889, 1.08 ) }
    dend_10 { pt3dadd( 38.4691, 115.66, 6.41127, 0.84 ) }
    dend_10 { pt3dadd( 38.4801, 117.558, 6.608, 0.84 ) }
    dend_10 { pt3dadd( 38.4242, 123.964, 7.11959, 1.08 ) }
    dend_10 { pt3dadd( 38.3398, 127.921, 7.4308, 1.08 ) }
    dend_10 { pt3dadd( 38.237, 130.259, 7.63783, 0.96 ) }
    dend_10 { pt3dadd( 37.858, 135.255, 8.15777, 1.2 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 19.2179, -48.5321, 10.2505, 0.84 ) }
    dend_26 { pt3dadd( 19.6446, -52.5401, 11.1965, 0.84 ) }
    dend_26 { pt3dadd( 19.9456, -55.208, 11.8138, 0.84 ) }
    dend_26 { pt3dadd( 20.2898, -58.5116, 12.6169, 1.44 ) }
    dend_26 { pt3dadd( 20.6177, -61.6673, 13.4051, 1.08 ) }
    dend_26 { pt3dadd( 20.9218, -64.8439, 14.2205, 0.48 ) }
    dend_26 { pt3dadd( 21.548, -71.3865, 15.9, 1.2 ) }
    dend_26 { pt3dadd( 21.805, -73.6889, 16.498, 1.2 ) }
    dend_26 { pt3dadd( 22.1793, -77.014, 17.3552, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_26 { pt3dadd( 22.4514, -79.539, 18.0063, 1.2 ) }
    dend_26 { pt3dadd( 22.7021, -82.4001, 18.7628, 1.8 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 19.2179, -48.5321, 10.2505, 0.96 ) }
    dend_25 { pt3dadd( 21.3402, -51.7579, 11.4519, 0.96 ) }
    dend_25 { pt3dadd( 22.2642, -53.3859, 11.9314, 0.96 ) }
    dend_25 { pt3dadd( 24.1815, -56.8569, 13.1266, 1.56 ) }
    dend_25 { pt3dadd( 25.4182, -59.2039, 13.8384, 0.84 ) }
    dend_25 { pt3dadd( 26.9173, -62.1692, 14.8373, 1.32 ) }
    dend_25 { pt3dadd( 28.7126, -65.7824, 16.1088, 0.72 ) }
    dend_25 { pt3dadd( 30.4266, -69.4555, 17.5327, 1.2 ) }
    dend_25 { pt3dadd( 32.2993, -73.6757, 19.1868, 0.72 ) }
    dend_25 { pt3dadd( 33.9508, -77.7104, 20.7708, 1.44 ) }
    dend_25 { pt3dadd( 35.9785, -82.8497, 22.8458, 0.72 ) }
    dend_25 { pt3dadd( 36.3202, -83.7319, 23.2314, 0.72 ) }
    dend_25 { pt3dadd( 37.26, -86.1638, 24.3922, 1.32 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 15/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 22.7021, -82.4001, 18.7628, 1.2 ) }
    dend_32 { pt3dadd( 22.8561, -83.1896, 19.0612, 1.2 ) }
    dend_32 { pt3dadd( 23.2498, -83.8683, 19.6361, 0.72 ) }
    dend_32 { pt3dadd( 24.0841, -85.0181, 20.8404, 1.92 ) }
    dend_32 { pt3dadd( 24.5816, -85.6442, 21.5577, 1.92 ) }
    dend_32 { pt3dadd( 24.9916, -86.1917, 22.1657, 1.2 ) }
    dend_32 { pt3dadd( 25.5789, -87.0248, 23.0527, 1.68 ) }
    dend_32 { pt3dadd( 27.6643, -90.0163, 26.2748, 1.68 ) }
    dend_32 { pt3dadd( 28.3166, -91.0368, 27.3219, 2.28 ) }
    dend_32 { pt3dadd( 28.8106, -91.8942, 28.1584, 1.2 ) }
    dend_32 { pt3dadd( 29.2649, -92.841, 28.9766, 1.2 ) }
    dend_32 { pt3dadd( 29.5399, -93.5787, 29.5224, 1.2 ) }
    dend_32 { pt3dadd( 29.9433, -95.1338, 30.4595, 1.8 ) }
    dend_32 { pt3dadd( 30.1745, -97.0237, 31.3046, 1.08 ) }
    dend_32 { pt3dadd( 30.2525, -97.7508, 31.6215, 1.08 ) }
    dend_32 { pt3dadd( 30.4098, -99.3848, 32.3216, 0.6 ) }
    dend_32 { pt3dadd( 30.5277, -100.568, 32.8592, 1.2 ) }
    dend_32 { pt3dadd( 30.6155, -101.687, 33.3903, 1.2 ) }
    dend_32 { pt3dadd( 30.7015, -102.831, 33.9901, 1.8 ) }
    dend_32 { pt3dadd( 30.8107, -104.054, 34.7346, 0.72 ) }
    dend_32 { pt3dadd( 30.8842, -104.75, 35.209, 0.72 ) }
    dend_32 { pt3dadd( 30.9858, -105.617, 35.8662, 0.72 ) }
    dend_32 { pt3dadd( 31.0881, -106.401, 36.5027, 0.72 ) }
    dend_32 { pt3dadd( 31.2737, -107.675, 37.5834, 1.8 ) }
    dend_32 { pt3dadd( 31.4982, -108.987, 38.698, 0.84 ) }
    dend_32 { pt3dadd( 31.6292, -109.817, 39.377, 0.84 ) }
    dend_32 { pt3dadd( 31.7087, -110.345, 39.7854, 0.84 ) }
    dend_32 { pt3dadd( 31.9177, -111.806, 40.8726, 1.44 ) }
    dend_32 { pt3dadd( 32.0379, -112.745, 41.5443, 0.72 ) }
    dend_32 { pt3dadd( 32.1355, -113.731, 42.2158, 0.72 ) }
    dend_32 { pt3dadd( 32.1787, -114.501, 42.7005, 0.72 ) }
    dend_32 { pt3dadd( 32.23, -115.507, 43.3394, 1.2 ) }
    dend_32 { pt3dadd( 32.3013, -117.225, 44.4436, 0.6 ) }
    dend_32 { pt3dadd( 32.3272, -117.908, 44.8799, 0.6 ) }
    dend_32 { pt3dadd( 32.3429, -118.374, 45.1747, 0.6 ) }
    dend_32 { pt3dadd( 32.2931, -120.849, 46.6104, 1.8 ) }
    dend_32 { pt3dadd( 32.2188, -122.089, 47.2714, 0.96 ) }
    dend_32 { pt3dadd( 32.1313, -123.033, 47.7318, 0.96 ) }
    dend_32 { pt3dadd( 31.983, -124.284, 48.2873, 0.96 ) }
    dend_32 { pt3dadd( 31.8043, -125.617, 48.8711, 1.68 ) }
    dend_32 { pt3dadd( 31.5075, -127.604, 49.7799, 0.84 ) }
    dend_32 { pt3dadd( 31.3994, -128.193, 50.0833, 0.84 ) }
    dend_32 { pt3dadd( 31.3407, -128.449, 50.2085, 0.84 ) }
    dend_32 { pt3dadd( 31.108, -129.351, 50.6699, 0.84 ) }
    dend_32 { pt3dadd( 30.9183, -129.997, 51.0472, 0.84 ) }
    dend_32 { pt3dadd( 30.6673, -131.048, 51.8095, 1.44 ) }
    dend_32 { pt3dadd( 30.6324, -131.741, 52.5394, 0.72 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 62/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 22.7021, -82.4001, 18.7628, 0.96 ) }
    dend_27 { pt3dadd( 23.7513, -83.7635, 18.9459, 0.96 ) }
    dend_27 { pt3dadd( 24.6651, -85.3832, 18.7832, 1.44 ) }
    dend_27 { pt3dadd( 25.7799, -87.5904, 18.3845, 0.96 ) }
    dend_27 { pt3dadd( 26.7154, -89.3188, 17.9776, 0.96 ) }
    dend_27 { pt3dadd( 27.8106, -91.2298, 17.4931, 0.96 ) }
    dend_27 { pt3dadd( 29.5229, -94.1541, 16.7053, 0.6 ) }
    dend_27 { pt3dadd( 32.4382, -99.07, 15.5344, 1.2 ) }
    dend_27 { pt3dadd( 33.3654, -100.584, 15.2007, 1.2 ) }
    dend_27 { pt3dadd( 35.4392, -103.963, 14.3844, 1.44 ) }
    dend_27 { pt3dadd( 36.7923, -105.989, 14.001, 0.6 ) }
    dend_27 { pt3dadd( 38.0703, -107.641, 13.9116, 1.08 ) }
    dend_27 { pt3dadd( 40.1997, -109.968, 14.3371, 0.6 ) }
    dend_27 { pt3dadd( 41.2516, -111.043, 14.9202, 0.6 ) }
    dend_27 { pt3dadd( 43.0739, -113.116, 16.4216, 1.08 ) }
    dend_27 { pt3dadd( 44.864, -115.721, 18.6685, 0.6 ) }
    dend_27 { pt3dadd( 46.2427, -118.148, 20.7978, 0.6 ) }
    dend_27 { pt3dadd( 46.9132, -119.425, 21.9683, 0.6 ) }
    dend_27 { pt3dadd( 47.829, -121.493, 23.7604, 1.08 ) }
    dend_27 { pt3dadd( 48.2982, -122.609, 24.7741, 1.08 ) }
    dend_27 { pt3dadd( 49.2034, -124.936, 26.8981, 0.48 ) }
    dend_27 { pt3dadd( 49.4292, -126.14, 27.6022, 0.48 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 49.4292, -126.14, 27.6022, 0.84 ) }
    dend_31 { pt3dadd( 49.6001, -127.672, 27.9675, 0.84 ) }
    dend_31 { pt3dadd( 49.8945, -129.791, 28.5712, 0.84 ) }
    dend_31 { pt3dadd( 50.1758, -132.154, 29.1298, 1.44 ) }
    dend_31 { pt3dadd( 50.5431, -136.038, 29.9619, 0.6 ) }
    dend_31 { pt3dadd( 50.6381, -137.982, 30.3691, 0.6 ) }
    dend_31 { pt3dadd( 50.6501, -139.767, 30.8559, 0.6 ) }
    dend_31 { pt3dadd( 50.4976, -143.059, 31.5457, 0.6 ) }
    dend_31 { pt3dadd( 50.0873, -146.16, 31.8974, 1.08 ) }
    dend_31 { pt3dadd( 49.5406, -148.171, 31.8971, 0.6 ) }
    dend_31 { pt3dadd( 48.3916, -150.193, 31.4098, 0.6 ) }
    dend_31 { pt3dadd( 45.8162, -153.529, 29.9829, 1.44 ) }
    dend_31 { pt3dadd( 40.8633, -158.109, 26.5409, 1.44 ) }
    dend_31 { pt3dadd( 39.1341, -159.17, 25.0141, 1.44 ) }
    dend_31 { pt3dadd( 37.9275, -159.599, 23.7449, 0.96 ) }
    dend_31 { pt3dadd( 36.0452, -159.978, 21.315, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 0/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 49.4292, -126.14, 27.6022, 0.48 ) }
    dend_28 { pt3dadd( 51.3818, -126.205, 26.5029, 0.48 ) }
    dend_28 { pt3dadd( 53.5183, -126.217, 25.2799, 0.48 ) }
    dend_28 { pt3dadd( 54.5648, -126.223, 24.6808, 0.48 ) }
    dend_28 { pt3dadd( 55.5799, -126.229, 24.0997, 0.48 ) }
    dend_28 { pt3dadd( 58.4946, -126.246, 22.4313, 0.84 ) }
    dend_28 { pt3dadd( 61.8322, -126.265, 20.5206, 1.32 ) }
    dend_28 { pt3dadd( 62.6229, -126.306, 20.0553, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 8/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 62.6229, -126.306, 20.0553, 0.6 ) }
    dend_30 { pt3dadd( 65.0358, -126.398, 19.5832, 0.6 ) }
    dend_30 { pt3dadd( 68.7467, -126.818, 18.9248, 0.6 ) }
    dend_30 { pt3dadd( 70.1727, -127.066, 18.6963, 0.6 ) }
    dend_30 { pt3dadd( 71.6559, -127.415, 18.3935, 0.6 ) }
    dend_30 { pt3dadd( 73.7257, -128.062, 17.9422, 1.08 ) }
    dend_30 { pt3dadd( 77.9771, -129.681, 17.0068, 0.6 ) }
    dend_30 { pt3dadd( 80.1405, -130.758, 16.6055, 0.6 ) }
    dend_30 { pt3dadd( 81.3218, -131.532, 16.3692, 0.6 ) }
    dend_30 { pt3dadd( 83.8406, -133.514, 15.7694, 0.6 ) }
    dend_30 { pt3dadd( 85.9574, -135.4, 15.1825, 1.2 ) }
    dend_30 { pt3dadd( 87.307, -136.779, 14.7699, 1.2 ) }
    dend_30 { pt3dadd( 88.727, -138.473, 14.2562, 0.6 ) }
    dend_30 { pt3dadd( 91.0297, -141.279, 13.335, 0.6 ) }
    dend_30 { pt3dadd( 92.4239, -142.955, 12.7719, 0.6 ) }
    dend_30 { pt3dadd( 93.4557, -144.204, 12.4317, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 62.6229, -126.306, 20.0553, 1.2 ) }
    dend_29 { pt3dadd( 62.8755, -125.711, 19.942, 1.2 ) }
    dend_29 { pt3dadd( 63.5964, -124.016, 19.6185, 0.84 ) }
    dend_29 { pt3dadd( 64.5448, -121.785, 19.193, 0.36 ) }
    dend_29 { pt3dadd( 64.9207, -120.901, 19.0243, 0.36 ) }
    dend_29 { pt3dadd( 65.8902, -118.621, 18.5893, 0.84 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_33 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_35 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_39 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_25 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_31 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_16 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_7 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_17 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_24 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_23 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_9 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_26 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_4 nseg = 13
    dend_3 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_15 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_19 nseg = 9
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_14 nseg = 9
    dend_13 nseg = 15
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_25 nseg = 3
    dend_32 nseg = 3
    dend_27 nseg = 3
    dend_31 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_DBC_be42e7893c_0_0


