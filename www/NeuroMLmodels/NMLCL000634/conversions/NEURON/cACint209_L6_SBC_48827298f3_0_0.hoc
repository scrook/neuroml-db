// Cell: cACint209_L6_SBC_48827298f3_0_0
/*
{
  "id" : "cACint209_L6_SBC_48827298f3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 8.01014, -1.4503, 1.32", "-2.81743, 9.83417, -2.2587, 1.32", "-3.30774, 11.2177, -2.95245, 1.32", "-4.52088, 14.3474, -4.66778, 2.04", "-6.37881, 18.3687, -7.04597, 1.32", "-7.765, 21.2785, -8.77731, 1.8", "-9.10349, 24.0882, -10.4491, 1.32", "-10.2312, 26.4001, -11.9477, 1.68", "-11.2165, 28.3718, -13.3473, 1.68", "-12.6726, 31.1882, -15.597, 1.08", "-13.7457, 32.9387, -16.924, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.37986, -1.5003, 1.8", "6.88835, -3.98328, -2.42352, 1.8", "8.70438, -5.26272, -4.38103, 1.8", "9.94244, -6.13498, -5.71557, 1.8", "11.1057, -6.95452, -6.96946, 2.16", "13.1271, -8.37864, -9.14835, 2.4", "13.4364, -8.59659, -9.4818, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.27986, 5.0897, 2.64", "3.17149, -5.83714, 5.49188, 2.64", "3.30107, -6.52923, 5.95966, 2.64", "4.01038, -9.36965, 7.70309, 1.92", "4.52991, -11.0276, 8.63296, 1.92", "5.15613, -12.7198, 9.51017, 1.92", "5.92966, -14.6568, 10.4441, 2.4", "6.31139, -15.5105, 10.8246, 2.4", "7.07896, -17.0677, 11.4651, 1.8", "8.14099, -18.9666, 12.0769, 1.56", "9.24773, -20.7693, 12.5789, 1.8", "9.91684, -21.8026, 12.8071, 1.8", "10.1522, -22.1493, 12.8802, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.930143, -0.0303001, 5.65", "-8.99529, 0.390043, -0.0247656, 4.93", "-9.68368, 0.07947, -0.0215831, 4.81", "-11.2697, -0.636068, -0.0142509, 1.92", "-12.3748, -1.13465, -0.00914184, 1.68", "-13.5493, -1.66452, -0.00371224, 1.68", "-15.7784, -2.67019, 0.00659297, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21105", "21.5843, -11.7584, 0.00941605, 1.21105", "34.4097, -19.5371, 0.00941605, 1.21105" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.7457, 32.9387, -16.924, 0.6", "-14.4467, 34.7694, -17.2222, 0.6", "-14.9704, 36.0281, -17.5407, 0.6", "-15.3489, 36.8389, -17.7857, 0.6", "-15.9122, 38.0779, -18.4081, 1.68", "-16.511, 39.6332, -19.3721, 0.72", "-16.7373, 40.221, -19.7364, 0.72", "-17.6876, 42.6627, -21.5035, 0.6", "-18.3249, 44.2894, -22.8487, 1.44", "-19.4378, 47.174, -25.5509, 0.84", "-19.867, 48.4023, -26.896, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.7457, 32.9387, -16.924, 1.32", "-13.3974, 33.9776, -18.6604, 1.32", "-12.8711, 35.804, -21.5407, 1.32", "-12.5123, 37.1137, -23.4484, 1.32", "-12.1068, 38.5905, -25.5013, 0.96", "-11.713, 40.0249, -27.4952, 0.96", "-11.4331, 41.0441, -28.9121, 1.2", "-11.1251, 42.3686, -30.7316, 0.48", "-10.8098, 43.7706, -32.4306, 1.32", "-10.6209, 44.6611, -33.4042, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.4364, -8.59659, -9.4818, 1.56", "14.1105, -9.48851, -11.7035, 1.56", "15.3982, -12.0081, -16.7365, 1.32", "15.7651, -13.5267, -19.4585, 1.32", "15.9445, -15.0783, -21.8471, 1.68", "15.9991, -16.2279, -23.4335, 1.68", "16.0017, -17.2384, -24.6526, 1.68", "15.8238, -19.5171, -26.7396, 1.2", "15.0227, -24.6336, -30.1746, 1.2", "14.6092, -26.8995, -31.5019, 1.56", "14.4344, -27.8744, -32.0242, 1.56", "14.0667, -30.174, -33.1907, 1.2", "13.7925, -32.069, -34.1766, 1.2", "13.42, -35.7629, -36.1366, 1.2", "13.3669, -37.1985, -36.8906, 1.2", "13.369, -38.2172, -37.4561, 1.56", "13.3952, -40.7943, -39.0145, 1.08", "13.4258, -43.4347, -40.7554, 2.04", "13.4319, -44.7056, -41.5821, 2.04", "13.4134, -46.9809, -42.7525, 1.32", "13.4291, -50.7191, -44.5244, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.4364, -8.59659, -9.4818, 1.32", "15.867, -8.90001, -9.29292, 1.32", "17.1472, -9.05982, -9.19343, 1.32", "19.7876, -9.38944, -8.98824, 1.32", "20.8341, -9.52007, -8.90692, 1.32", "24.4345, -9.96949, -8.62712, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.1522, -22.1493, 12.8802, 1.2", "11.4645, -23.0276, 14.0603, 1.2", "13.3733, -24.3013, 15.8152, 1.2", "14.762, -25.1977, 17.1124, 1.2", "16.4504, -26.2487, 18.6818, 2.04", "19.6113, -28.1709, 21.5851, 1.08", "21.2069, -29.1538, 23.0441, 1.08", "22.1807, -29.8157, 23.9979, 1.08", "23.2733, -30.5546, 25.0834, 1.08", "24.2087, -31.1254, 25.9044, 1.08", "25.061, -31.5967, 26.5111, 1.08", "25.7491, -31.9125, 26.8588, 1.08", "27.2436, -32.6306, 27.601, 1.08", "28.1362, -33.0665, 27.9942, 1.08", "29.1887, -33.6235, 28.554, 1.08", "30.0168, -34.0698, 29.0336, 1.08", "31.232, -34.7244, 29.8266, 1.08", "31.9408, -35.074, 30.35, 1.08", "33.9197, -35.9411, 32.0467, 1.92", "36.3344, -36.7397, 34.4273, 0.96", "37.0465, -36.8675, 35.2106, 0.96", "38.6238, -36.8159, 37.0753, 0.72", "39.6369, -36.4838, 38.301, 1.32", "40.6642, -35.8449, 39.5445, 1.32", "42.2646, -34.4203, 41.2872, 0.84", "42.743, -33.9692, 41.6843, 0.84", "43.626, -33.1825, 42.3089, 0.84", "44.4525, -32.5362, 42.6878, 0.84", "45.122, -32.1448, 42.8591, 0.84", "47.0777, -31.2981, 43.109, 0.72", "48.3685, -30.9317, 43.1501, 0.72", "49.2168, -30.7099, 43.1466, 0.72", "50.9111, -30.2735, 43.039, 0.72", "51.7442, -30.084, 42.9508, 0.72", "52.1228, -29.9955, 42.8853, 0.72", "54.0899, -29.5055, 42.241, 0.96", "62.5375, -31.4765, 48.9164, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.1522, -22.1493, 12.8802, 0.96", "10.1003, -24.0872, 12.9596, 0.96", "10.0456, -26.127, 13.0432, 1.08", "10.0175, -27.1776, 13.0863, 1.08", "9.96894, -28.9899, 13.1606, 1.56", "9.93644, -30.2042, 13.2104, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.7784, -2.67019, 0.00659297, 1.08", "-17.1131, -6.55141, -0.860224, 1.08", "-17.599, -8.08076, -1.28895, 1.08", "-18.1655, -10.1562, -1.91334, 1.08", "-18.5841, -12.0951, -2.45664, 1.08", "-19.0233, -14.5145, -3.30397, 1.08", "-19.3115, -16.294, -4.04187, 1.32", "-19.9105, -21.1179, -6.36987, 1.8", "-19.9762, -22.4388, -7.09899, 1.8", "-19.8967, -24.8764, -8.66714, 1.56", "-19.4618, -28.7599, -11.5287, 1.44", "-19.0559, -30.9692, -13.3653, 1.44", "-18.5926, -32.9518, -15.1174, 1.56", "-17.9326, -35.4936, -17.361, 1.32", "-17.3309, -38.0178, -19.5992, 1.32", "-16.8061, -40.3635, -21.7699, 2.04", "-16.443, -42.1417, -23.3861, 2.04", "-16.1137, -44.0462, -25.2201, 1.08", "-15.8137, -46.4455, -27.6841, 1.44", "-15.6008, -48.8247, -30.2737, 1.44", "-15.3841, -50.964, -32.6983, 0.96", "-15.2185, -52.3902, -34.3818, 1.56", "-14.9293, -54.4835, -36.9003, 1.56", "-14.4975, -56.8103, -39.7393, 2.16", "-14.0191, -58.6282, -41.8742, 1.56", "-13.4718, -60.0258, -43.2747, 1.56", "-12.0234, -62.7764, -45.849, 1.8", "-11.3628, -63.8114, -46.793, 1.8", "-10.5124, -65.0017, -47.8402, 1.8", "-9.48563, -66.371, -48.982, 1.8", "-6.54361, -70.1681, -52.3327, 1.56", "-3.63972, -73.6982, -55.6437, 1.56", "-2.50671, -74.9412, -56.9298, 1.56", "-1.627, -75.8704, -58.4286, 1.56", "-0.686778, -76.8614, -60.1975, 1.8", "1.23999, -78.9303, -64.4043, 1.44", "1.98452, -79.7512, -66.4509, 1.44", "3.20652, -81.0769, -70.4183, 1.8", "6.87733, -84.8923, -84.4276, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.7784, -2.67019, 0.00659297, 1.56", "-17.6018, -3.94519, 1.34772, 1.56", "-19.6061, -5.34667, 2.82187, 1.32", "-21.0832, -6.37954, 3.9083, 1.32", "-23.0348, -7.74413, 5.34366, 1.68", "-24.754, -8.94632, 6.60819, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.119526", "47.2351, -27.3158, 0.00941605, 0.119526", "60.0606, -35.0945, 0.00941605, 0.119526" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-19.867, 48.4023, -26.896, 0.84", "-15.7653, 49.7958, -22.4029, 0.84", "-14.6454, 50.1762, -21.1762, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-19.867, 48.4023, -26.896, 0.96", "-19.89, 49.4087, -28.0646, 0.96", "-19.9037, 50.203, -28.8274, 0.96", "-19.9142, 51.5751, -30.1971, 1.2", "-19.8025, 54.0694, -32.7145, 0.96", "-19.7143, 54.8353, -33.4257, 0.72", "-19.4851, 56.0285, -34.4726, 1.44", "-19.2467, 56.7163, -35.0687, 1.44", "-18.1696, 58.941, -36.9235, 0.84", "-17.7135, 59.6473, -37.6445, 0.72", "-16.9119, 60.6705, -38.9858, 1.68", "-16.2006, 61.4799, -40.1685, 0.72", "-15.4326, 62.2484, -41.4493, 1.2", "-14.7073, 62.9159, -42.6849, 1.32", "-12.13, 65.0574, -47.095, 0.72", "-10.9698, 65.9959, -49.475, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-10.6209, 44.6611, -33.4042, 0.84", "-9.72401, 46.1478, -34.3141, 0.84", "-8.84739, 47.5428, -35.2132, 0.84", "-8.34539, 48.3589, -35.8224, 0.84", "-7.70851, 49.4261, -36.7784, 0.6", "-7.16719, 50.3332, -37.5909, 0.6", "-6.39619, 51.6252, -38.7483, 1.32", "-5.50463, 53.2006, -40.28, 0.72", "-4.50006, 54.9427, -41.9967, 1.56", "-3.30019, 57.0011, -44.1985, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-10.6209, 44.6611, -33.4042, 0.84", "-13.8312, 49.3283, -43.3016, 0.84", "-14.4339, 50.2047, -45.16, 1.2", "-15.2846, 51.4413, -47.7825, 0.84", "-16.0493, 52.5532, -50.1403, 1.2", "-17.5384, 54.7181, -54.7312, 0.84", "-18.2954, 55.8187, -57.0652, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.4291, -50.7191, -44.5244, 0.72", "11.1664, -54.7143, -46.1716, 0.72", "10.306, -56.1553, -46.6773, 1.2", "9.68694, -57.1319, -46.992, 1.2", "8.69003, -58.5756, -47.5548, 0.6", "7.45782, -60.2088, -48.2634, 1.92", "6.1044, -61.8709, -49.1078, 1.08", "4.37933, -63.6887, -50.2998, 1.68", "3.20554, -64.7574, -51.172, 1.68", "0.92373, -66.5908, -52.9878, 0.96", "-0.0930992, -67.2945, -53.8378, 0.96", "-1.80541, -68.2905, -55.3597, 1.44", "-3.80263, -69.2481, -57.1846, 0.96", "-5.21096, -69.8575, -58.5801, 1.44", "-6.72569, -70.5066, -60.123, 0.96", "-7.87027, -71.0388, -61.2818, 1.56", "-9.73365, -71.9796, -63.1954, 0.84", "-11.5644, -72.9888, -65.0414, 1.56", "-14.0696, -74.5149, -67.5716, 1.08", "-15.3964, -75.4068, -68.9214, 0.84", "-17.0303, -76.6352, -70.625, 1.08", "-17.3937, -76.9332, -71.0069, 0.72", "-18.815, -78.2073, -72.5281, 1.2", "-20.2459, -79.5804, -74.0533, 0.6", "-21.3755, -80.6441, -75.147, 1.08", "-22.6342, -81.7943, -76.3619, 0.72", "-23.9824, -82.9575, -77.7005, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.4291, -50.7191, -44.5244, 0.48", "15.4829, -52.4664, -45.2665, 0.48", "17.5084, -54.2092, -46.0398, 1.32", "18.8789, -55.4104, -46.5891, 0.96", "19.878, -56.2858, -46.9916, 1.56", "21.6125, -57.8223, -47.7042, 0.96", "23.2239, -59.2824, -48.3907, 1.68", "24.9367, -60.8574, -49.1869, 1.08", "26.2583, -62.1406, -49.8573, 1.8", "26.7537, -62.6678, -50.1314, 1.8", "28.4623, -64.6538, -51.1866, 1.08", "29.3941, -65.8793, -51.8774, 1.56", "30.0525, -66.8973, -52.4567, 1.08", "30.6408, -67.9953, -53.0567, 1.56", "31.4123, -69.777, -53.9851, 1.08", "31.8919, -71.0927, -54.6504, 1.68", "32.4148, -72.8011, -55.4776, 1.2", "32.8499, -74.2665, -56.1564, 1.2", "33.4194, -76.208, -57.029, 1.8", "33.9148, -78.063, -57.8964, 1.2", "34.1995, -79.1496, -58.5708, 1.8", "34.8001, -81.3657, -60.171, 1.2", "35.4974, -83.7115, -62.0651, 1.68", "35.9732, -85.1401, -63.2965, 1.2", "36.6767, -87.0497, -65.1444, 1.68", "38.3188, -91.1065, -69.3898, 1.2", "38.75, -92.0985, -70.4852, 1.2", "39.1162, -92.8941, -71.4104, 1.2", "39.7932, -94.2877, -73.1041, 1.56", "41.1884, -96.8969, -76.2521, 0.96", "41.9466, -98.1513, -77.6381, 1.44", "42.5565, -99.2172, -78.6004, 0.72", "43.1337, -100.249, -79.6651, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "24.4345, -9.96949, -8.62712, 0.72", "27.6466, -7.69347, -10.8031, 0.72", "29.8678, -5.8265, -12.5206, 0.72", "31.4887, -4.29063, -13.9069, 0.72", "32.9368, -2.73147, -15.3544, 0.72", "34.5164, -0.839527, -17.3205, 0.48", "34.919, -0.267548, -17.9908, 0.96", "36.0909, 1.97175, -21.0435, 0.6", "36.8537, 3.80769, -24.1285, 1.44", "37.4693, 5.52084, -27.6318, 0.72", "38.0582, 7.03915, -31.7978, 1.2", "38.7265, 8.75014, -37.1375, 0.6", "39.3703, 10.4071, -42.9308, 1.2", "39.8197, 11.6062, -47.9571, 0.84", "40.163, 12.5267, -52.8375, 1.68", "40.652, 13.4024, -59.1917, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "24.4345, -9.96949, -8.62712, 0.48", "26.7842, -10.9946, -9.17256, 0.48", "28.5241, -11.9628, -9.6228, 0.96", "29.1973, -12.4268, -9.82645, 0.72", "31.6553, -14.4027, -10.627, 1.2", "33.7092, -16.2861, -11.3175, 0.84", "35.5674, -18.2192, -11.9685, 1.68", "36.9375, -20.0313, -12.5162, 0.96", "38.1352, -22.0276, -13.0369, 1.92", "38.7202, -23.2236, -13.301, 1.92", "39.3319, -24.857, -13.5812, 0.96", "39.8927, -26.5922, -13.7801, 1.44", "40.1762, -27.5208, -13.8075, 1.44", "40.9683, -29.9215, -13.675, 0.72", "41.278, -30.7541, -13.567, 0.72", "41.9073, -32.3106, -13.279, 1.32", "43.112, -34.7947, -12.5061, 1.32", "43.7453, -35.855, -12.0312, 1.32", "44.4022, -36.7898, -11.5252, 1.32", "44.8514, -37.366, -11.1638, 1.32", "46.2182, -39.0109, -10.0332, 0.72", "48.1219, -41.173, -8.38063, 1.8", "49.3291, -42.4642, -7.40982, 1.8", "50.1411, -43.2654, -6.75852, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.93644, -30.2042, 13.2104, 1.44", "12.5492, -31.8802, 13.8098, 1.44", "14.7704, -33.5928, 14.4289, 1.44", "16.4557, -35.0901, 14.9784, 1.44", "18.0568, -36.7403, 15.5824, 1.44", "19.1788, -37.9904, 16.021, 1.44", "20.8531, -39.9969, 16.7213, 1.44", "21.803, -41.3286, 17.1989, 1.08", "22.7327, -42.7865, 17.794, 1.44", "24.4334, -45.5278, 18.9295, 1.08", "25.5343, -47.1907, 19.5934, 1.56", "26.9852, -49.1655, 20.4104, 0.96", "28.0566, -50.4332, 20.9588, 0.96", "30.2413, -52.7803, 22.0258, 0.96", "31.8124, -54.3564, 22.7878, 0.96", "32.8508, -55.349, 23.311, 0.96", "33.8616, -56.3174, 23.8356, 0.96", "35.3616, -57.7331, 24.6246, 0.72", "36.1106, -58.4763, 25.0297, 0.72", "37.4419, -59.8926, 25.7857, 0.72", "38.4757, -61.083, 26.5284, 0.72", "39.0357, -61.7318, 26.9588, 0.72", "39.8243, -62.5799, 27.5819, 0.72", "40.4042, -63.1801, 28.0544, 0.72", "41.8008, -64.4952, 29.1524, 0.72", "42.4187, -65.0085, 29.592, 0.72", "43.4218, -65.7332, 30.2685, 0.72", "44.6758, -66.5611, 31.1128, 0.72", "55.42, -72.8736, 36.8843, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.93644, -30.2042, 13.2104, 1.44", "8.44427, -31.3565, 13.9896, 1.44", "6.15925, -33.3233, 14.7982, 1.44", "4.91364, -34.5427, 15.1043, 1.2", "3.77205, -35.8213, 15.2703, 1.2", "1.97371, -38.002, 15.3487, 1.08", "1.03832, -39.1377, 15.3273, 1.08", "-1.03828, -41.6235, 14.9156, 1.32", "-2.09972, -42.8951, 14.5269, 1.32", "-3.17726, -44.2397, 14.0674, 0.96", "-4.19916, -45.5577, 13.5417, 0.96", "-5.51242, -47.2464, 12.8225, 1.32", "-6.75278, -48.7469, 12.1574, 0.96", "-7.80384, -49.9128, 11.6794, 0.96", "-9.83075, -52.0627, 10.7934, 1.44", "-11.9751, -54.2808, 9.91037, 0.96", "-12.5503, -54.8949, 9.68096, 0.96", "-14.4242, -57.0171, 8.93376, 1.8", "-15.7776, -58.6244, 8.26463, 1.32", "-16.3498, -59.2979, 7.96439, 1.32", "-16.7552, -59.7592, 7.75761, 1.32", "-17.6451, -60.7426, 7.35597, 0.96", "-18.1079, -61.2492, 7.12118, 0.96", "-21.3145, -64.7682, 5.37186, 2.4", "-23.4749, -67.166, 4.11756, 0.84", "-25.2209, -69.1041, 3.07968, 2.16", "-25.9092, -69.8619, 2.66797, 2.16", "-28.4871, -72.5954, 1.1623, 0.84", "-29.9948, -74.1195, 0.371459, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.87733, -84.8923, -84.4276, 0.84", "7.67132, -86.172, -85.4741, 0.84", "8.21259, -87.0638, -86.2169, 0.96", "8.97637, -88.4291, -87.3598, 0.72", "10.1701, -90.6758, -89.2791, 0.72", "11.5471, -93.4985, -91.6828, 1.08", "12.5684, -95.7322, -93.4626, 1.08", "12.9524, -96.6277, -94.1413, 1.08", "13.8185, -98.9884, -95.8471, 0.6", "14.4404, -101.059, -97.2362, 1.32", "14.886, -103.013, -98.4064, 1.32", "15.3161, -105.328, -99.7502, 0.72", "15.4863, -106.284, -100.326, 0.72", "15.9316, -108.379, -101.567, 1.2", "16.4132, -110.152, -102.574, 0.48", "16.9247, -111.748, -103.485, 1.08", "17.6389, -113.669, -104.665, 0.6", "18.7195, -116.35, -106.484, 1.2", "20.1206, -119.471, -108.553, 0.72", "21.3874, -121.933, -110.129, 1.32", "22.5617, -123.961, -111.388, 0.72", "23.719, -125.793, -112.443, 1.08", "24.9858, -127.748, -113.517, 0.48", "26.1661, -129.532, -114.487, 0.48", "27.2985, -131.321, -115.579, 1.32", "27.9619, -132.491, -116.268, 1.32", "28.8497, -134.387, -117.281, 0.72", "29.2645, -136.012, -118.125, 1.32", "29.0348, -137.829, -119.341, 0.6", "28.1839, -139.321, -120.712, 1.56", "27.4316, -140.104, -121.58, 1.56", "26.3577, -140.965, -122.665, 0.72", "23.9809, -142.525, -124.896, 1.68", "20.9805, -144.337, -127.748, 1.2", "19.6663, -145.135, -129.104, 1.56", "18.2186, -146.124, -130.811, 0.96", "17.1364, -147.043, -132.331, 0.96", "16.4111, -147.929, -133.675, 1.56", "15.6782, -149.305, -135.517, 1.56", "15.0576, -150.935, -137.232, 1.2", "14.6574, -152.18, -138.358, 1.2", "13.9338, -154.417, -140.213, 1.68", "12.8621, -157.683, -142.709, 0.96", "12.2685, -159.461, -143.914, 0.96", "10.9014, -163.479, -146.371, 0.48", "10.3883, -165.044, -147.257, 1.56", "9.14416, -169.226, -149.535, 0.96", "8.92451, -170.069, -149.972, 0.96", "8.33119, -173.275, -151.462, 1.44", "8.19023, -175.269, -152.422, 1.08", "8.35394, -178.086, -153.922, 0.72", "8.66984, -180.169, -155.026, 0.72", "8.9553, -181.319, -155.601, 0.72", "9.68114, -183.891, -156.903, 1.32", "10.5089, -186.483, -158.282, 0.72", "10.9883, -188.014, -159.124, 0.72", "11.2568, -188.786, -159.451, 0.72", "11.6316, -189.781, -159.778, 0.72", "12.5431, -192.046, -160.41, 1.2", "13.5638, -194.463, -160.986, 0.6", "14.5186, -196.625, -161.364, 1.2", "16.9986, -201.963, -162.056, 0.72", "18.1379, -204.261, -162.317, 0.72", "19.1949, -206.247, -162.55, 1.32", "20.2605, -208.154, -162.808, 0.6", "21.6889, -210.738, -163.236, 1.2", "23.1573, -213.486, -163.792, 0.72", "24.1721, -215.557, -164.366, 0.72", "25.288, -217.945, -164.936, 1.2", "26.2361, -220.048, -165.385, 0.6", "26.9219, -221.594, -165.685, 1.2", "28.2026, -224.489, -166.201, 0.48", "29.1265, -226.64, -166.584, 1.44", "30.1479, -229.229, -166.918, 0.96", "30.5836, -230.437, -166.995, 0.96", "30.7928, -231.097, -167.033, 0.96", "31.1435, -232.448, -167.17, 0.96", "31.4557, -234.333, -167.515, 0.96", "31.6701, -236.6, -168.1, 1.68", "31.875, -239.779, -168.79, 0.96", "32.0195, -242.092, -169.203, 1.32", "32.2059, -244.786, -169.563, 0.72", "32.4318, -247.204, -169.787, 0.72", "32.7165, -249.313, -169.918, 1.2", "33.6841, -254.346, -170.131, 0.6", "34.0768, -255.985, -170.151, 0.96", "34.8385, -258.467, -170.039, 0.6", "35.505, -260.432, -169.871, 1.32", "35.9285, -261.681, -169.735, 1.32", "36.2108, -262.62, -169.634, 1.32", "36.517, -263.973, -169.571, 1.32", "36.8542, -265.957, -169.392, 0.96", "37.1516, -268.739, -169.156, 1.44", "37.2644, -270.578, -168.94, 1.44", "37.3176, -272.598, -168.65, 0.72", "37.315, -274.577, -168.307, 1.2", "37.2466, -277.03, -167.846, 0.48", "37.01, -279.367, -167.369, 1.08", "36.7419, -281.707, -166.85, 0.6", "36.5049, -283.48, -166.455, 1.2", "36.1599, -285.652, -165.951, 0.6", "35.9586, -286.735, -165.682, 0.6", "35.4592, -289.103, -165.035, 1.2", "35.022, -291.161, -164.342, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.87733, -84.8923, -84.4276, 0.96", "8.17159, -86.1402, -85.6141, 0.96", "9.46639, -87.3886, -86.8012, 0.96", "11.0221, -88.8887, -88.2274, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-24.754, -8.94632, 6.60819, 1.32", "-26.4171, -8.51758, 7.58241, 1.32", "-28.1597, -8.06831, 8.60328, 1.32", "-30.0437, -7.5826, 9.70697, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-24.754, -8.94632, 6.60819, 0.96", "-25.8588, -11.2851, 7.11092, 0.96", "-26.2404, -11.9024, 7.32617, 1.44", "-26.8785, -12.7109, 7.72426, 1.44", "-27.3864, -13.2866, 8.06723, 1.44", "-28.0352, -14.0043, 8.52191, 1.44", "-29.4741, -15.6116, 9.57948, 1.68", "-30.5437, -16.7067, 10.4636, 1.2", "-31.5489, -17.753, 11.3564, 1.2", "-31.9578, -18.1817, 11.7508, 1.2", "-32.4219, -18.7129, 12.2147, 1.2", "-32.8626, -19.2825, 12.6676, 1.2", "-33.0708, -19.6641, 12.8925, 1.2", "-33.2615, -20.174, 13.1504, 1.2", "-33.4566, -20.8137, 13.4459, 1.2", "-33.9481, -22.3209, 14.1309, 1.56", "-34.3478, -23.2476, 14.5613, 1.08", "-34.7717, -24.032, 14.9226, 1.08", "-35.2073, -24.6418, 15.2544, 1.08", "-35.7576, -25.3469, 15.6492, 1.08", "-36.12, -25.7676, 15.8861, 1.08", "-37.1991, -26.7929, 16.5663, 1.08", "-37.5664, -27.0602, 16.7554, 1.08", "-39.0026, -27.8176, 17.4075, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-23.9824, -82.9575, -77.7005, 1.08", "-23.3531, -84.7528, -77.9153, 1.08", "-22.6221, -86.8383, -78.1648, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-23.9824, -82.9575, -77.7005, 0.84", "-25.7061, -84.21, -78.1255, 0.84", "-27.5112, -85.5158, -79.1104, 1.44", "-29.3116, -86.8182, -80.0928, 0.6", "-30.8401, -87.9239, -80.9268, 1.08", "-33.7005, -89.993, -82.4876, 0.48", "-36.0782, -91.7131, -83.785, 1.56", "-39.3624, -94.0292, -86.0838, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "50.1411, -43.2654, -6.75852, 0.84", "50.5752, -45.1812, -6.59351, 0.84", "50.8987, -46.6472, -6.4616, 1.44", "51.8324, -50.7131, -6.10237, 0.48", "52.6044, -54.0748, -5.80534, 0.48", "53.1271, -56.351, -5.60423, 1.44", "53.8702, -59.5871, -5.3183, 0.6", "54.2158, -60.996, -5.20917, 0.6", "54.695, -62.8898, -5.04807, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "50.1411, -43.2654, -6.75852, 0.6", "51.311, -43.8944, -6.52614, 0.6", "52.7217, -44.5892, -6.18024, 1.2", "53.1739, -44.821, -6.05431, 1.2", "53.9999, -45.2752, -5.80962, 0.6", "56.2247, -46.5975, -5.091, 1.68", "57.0683, -47.116, -4.79554, 1.68", "58.4498, -47.9749, -4.27822, 0.84", "59.7018, -48.714, -3.78415, 0.84", "60.9885, -49.4478, -3.258, 1.44", "62.5463, -50.3459, -2.59538, 0.84", "64.3877, -51.4668, -1.78339, 1.56", "66.5128, -52.7635, -0.832028, 1.08", "67.8568, -53.5625, -0.235479, 1.56", "69.6436, -54.5622, 0.559699, 2.04", "71.4912, -55.5382, 1.39038, 1.2", "73.0266, -56.3142, 2.07648, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-29.9948, -74.1195, 0.371459, 0.48", "-30.2696, -75.8979, 0.941697, 0.48", "-30.4452, -77.6812, 1.43456, 1.56", "-30.5922, -80.8203, 2.16459, 0.6", "-30.5204, -82.8303, 2.58121, 1.8", "-30.3426, -85.0157, 2.97688, 0.6", "-30.2101, -86.2018, 3.16965, 0.6", "-29.9676, -87.6244, 3.34733, 0.6", "-29.5962, -89.2671, 3.53963, 1.56", "-28.8082, -91.8117, 3.77922, 0.48", "-28.1875, -93.554, 3.97483, 0.48", "-27.8747, -94.3777, 4.08256, 0.48", "-27.257, -96.002, 4.33852, 1.68", "-26.3941, -98.3194, 4.78984, 1.08", "-25.8466, -99.7773, 5.15166, 1.08", "-23.1348, -109.096, 5.90747, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-29.9948, -74.1195, 0.371459, 0.72", "-31.9591, -74.9218, -0.681433, 0.72", "-33.0791, -75.4192, -1.35118, 1.56", "-34.128, -75.9565, -2.00012, 0.72", "-35.6732, -76.839, -3.01315, 1.32", "-37.4293, -77.9439, -3.95507, 0.72", "-38.8197, -78.8989, -4.59009, 1.56", "-40.5238, -80.3177, -5.31073, 0.84", "-41.4042, -81.1694, -5.61756, 0.84", "-42.8932, -82.8646, -6.01596, 1.92", "-45.2242, -85.9686, -6.33173, 0.96", "-46.1021, -87.25, -6.35744, 0.96", "-47.7814, -89.9024, -6.23459, 0.72", "-48.2991, -90.7888, -6.14946, 1.32", "-49.2283, -92.449, -5.95664, 0.84", "-49.9802, -94.0529, -5.73222, 1.2", "-57.7214, -100.67, -7.83838, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.0221, -88.8887, -88.2274, 0.96", "9.72634, -90.6821, -90.3779, 0.96", "8.58697, -92.4923, -92.4837, 0.96", "8.14948, -93.2243, -93.3013, 0.96", "7.70333, -93.996, -94.1293, 0.96", "7.0196, -95.2232, -95.3584, 0.96", "6.6683, -95.8675, -95.9709, 0.96", "6.51888, -96.242, -96.2887, 0.96", "6.18134, -97.0397, -96.8586, 0.96", "5.97027, -97.4041, -97.1362, 0.96", "5.32, -98.2577, -97.9072, 0.96", "4.80605, -98.7498, -98.498, 0.96", "3.97963, -99.4195, -99.532, 0.6", "2.85105, -100.235, -101.04, 1.56", "1.35524, -101.2, -103.134, 0.96", "0.452135, -101.714, -104.406, 0.96", "-1.31159, -102.645, -106.852, 0.72", "-3.11552, -103.635, -109.338, 1.2", "-4.49091, -104.421, -111.198, 0.72", "-5.98822, -105.368, -113.194, 1.2", "-7.74644, -106.612, -115.478, 0.72", "-8.58381, -107.288, -116.575, 0.72", "-10.6781, -109.249, -119.331, 1.2", "-12.0324, -110.667, -121.035, 1.2", "-13.5874, -112.427, -122.95, 0.72", "-14.1571, -113.127, -123.645, 0.72", "-15.3773, -114.689, -125.112, 1.32", "-16.2355, -115.82, -126.171, 1.32", "-17.554, -117.53, -127.772, 0.6", "-18.5187, -118.734, -128.943, 1.08", "-20.8729, -121.273, -131.795, 0.6", "-22.0567, -122.386, -133.212, 1.2", "-23.2551, -123.364, -134.522, 0.6", "-24.5147, -124.206, -135.847, 1.2", "-25.7941, -124.909, -137.196, 0.48", "-28.3758, -126.19, -139.831, 1.44", "-28.9862, -126.474, -140.441, 1.44", "-30.9039, -127.42, -142.316, 0.72", "-33.261, -128.739, -144.565, 1.56", "-36.3152, -130.826, -147.442, 0.84", "-37.2724, -131.657, -148.301, 0.84", "-39.0776, -133.628, -150.088, 1.56", "-40.0118, -134.834, -151.176, 1.56", "-41.3893, -136.963, -153.151, 0.72", "-42.5374, -139.057, -155.343, 1.2", "-43.787, -141.565, -157.961, 0.72", "-45.3659, -144.84, -161.634, 1.56", "-46.1461, -146.559, -163.747, 1.08", "-46.8025, -148.145, -165.975, 1.56", "-48.0428, -151.544, -171.847, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "11.0221, -88.8887, -88.2274, 0.48", "12.6628, -90.8605, -88.6701, 0.48", "13.3905, -91.7637, -88.8444, 0.48", "14.5812, -93.2415, -89.1296, 1.56", "15.534, -94.424, -89.3578, 0.36", "15.8614, -94.8304, -89.4362, 0.36", "17.0522, -96.3082, -89.7214, 1.32", "17.7974, -97.2693, -89.7714, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-30.0437, -7.5826, 9.70697, 1.44", "-30.7257, -6.64999, 13.6474, 1.44", "-31.5664, -6.08274, 16.8519, 1.2", "-32.0598, -5.77853, 18.4055, 1.2", "-32.4948, -5.51033, 19.7752, 0.84", "-32.7079, -5.37893, 20.4462, 0.84", "-33.1765, -5.08995, 21.922, 1.2", "-34.4821, -4.70437, 24.5165, 1.08", "-35.3869, -4.60133, 25.7369, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-30.0437, -7.5826, 9.70697, 1.92", "-31.8441, -6.66278, 11.2844, 1.92", "-32.9115, -6.09369, 12.0719, 1.92", "-34.5764, -5.05854, 13.1773, 1.56", "-35.9578, -4.10734, 14.041, 1.32", "-37.2441, -3.08875, 14.8487, 1.8", "-38.6636, -1.86204, 15.7298, 1.2", "-39.7937, -0.714412, 16.3605, 1.2", "-41.3395, 0.975091, 17.216, 0.96", "-42.0587, 1.80651, 17.5861, 0.96", "-43.2654, 3.20171, 18.1239, 1.32", "-44.4194, 4.42565, 18.6021, 1.32", "-45.2575, 5.16093, 18.8861, 1.32", "-46.2813, 5.84714, 19.147, 0.96", "-47.0567, 6.1993, 19.273, 0.96", "-48.3343, 6.65478, 19.5607, 0.96", "-49.7314, 7.01417, 19.8222, 0.96", "-51.9357, 7.4615, 20.1989, 1.44", "-53.0677, 7.66306, 20.3875, 1.44", "-53.9522, 7.85852, 20.5519, 1.44", "-56.7671, 8.71687, 21.3783, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-39.0026, -27.8176, 17.4075, 0.96", "-39.9007, -27.6061, 18.2569, 0.96", "-41.1514, -27.2283, 19.4702, 0.96", "-42.286, -26.8574, 20.5652, 0.96", "-44.2682, -26.1729, 22.423, 0.6", "-46.099, -25.5365, 24.0666, 1.2", "-49.1328, -24.3497, 26.7475, 0.72", "-49.7032, -24.0627, 27.2907, 0.72", "-49.9824, -23.9017, 27.5623, 0.72", "-50.6189, -23.4779, 28.1804, 0.72", "-51.118, -23.038, 28.6825, 0.72", "-52.4622, -21.557, 30.1758, 1.2", "-54.2361, -19.3962, 31.9604, 0.84", "-63.6221, -16.0079, 37.7403, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-39.0026, -27.8176, 17.4075, 0.84", "-40.2405, -28.4189, 17.3344, 0.84", "-41.1776, -28.7783, 17.3043, 0.84", "-42.5766, -29.3144, 17.2729, 0.6", "-43.5305, -29.6523, 17.263, 0.6", "-44.8862, -30.0764, 17.2624, 0.6", "-46.34, -30.478, 17.2745, 0.6", "-47.7037, -30.7459, 17.2747, 0.6", "-48.7919, -30.9216, 17.3034, 0.6", "-49.9385, -31.0839, 17.3871, 0.6", "-50.5791, -31.1581, 17.4407, 0.6", "-51.3464, -31.2358, 17.5109, 0.6", "-51.8125, -31.2485, 17.5526, 1.08", "-53.38, -31.2053, 17.7042, 0.72", "-55.0922, -31.093, 17.8783, 0.72", "-56.4318, -31.0104, 18.0148, 0.72", "-57.0685, -30.9751, 18.0793, 0.72", "-58.7172, -30.8002, 18.2553, 1.08", "-69.1918, -32.9218, 17.1313, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "73.0266, -56.3142, 2.07648, 0.72", "73.3621, -60.6131, 1.11121, 0.72", "73.5674, -63.2436, 0.52055, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "73.0266, -56.3142, 2.07648, 0.96", "74.5967, -57.4952, 2.55883, 0.96", "76.2029, -58.7507, 3.15087, 0.96", "78.0349, -60.2393, 3.87676, 1.56", "80.2291, -62.0266, 4.71972, 0.84", "82.1985, -63.6633, 5.44212, 1.32", "84.7211, -65.8541, 6.5033, 0.6", "86.1905, -67.1821, 7.2091, 1.32", "88.202, -69.0211, 8.22963, 0.72", "89.9759, -70.6203, 9.12865, 0.72", "91.306, -71.7307, 9.80858, 1.68", "94.8002, -74.3141, 11.5669, 0.72", "96.9389, -75.6084, 12.6141, 0.72", "98.2217, -76.2061, 13.2454, 0.72", "99.5446, -76.5867, 13.9379, 0.72", "101.577, -76.8389, 14.9955, 1.08", "103.085, -76.8342, 15.7423, 0.48", "104.811, -76.5475, 16.4621, 0.96", "106.209, -76.1597, 17.1016, 0.96", "107.91, -75.574, 17.9651, 0.72", "109.896, -74.7881, 19.0578, 0.48", "118.283, -78.9819, 23.594, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-48.0428, -151.544, -171.847, 0.84", "-50.1884, -152.511, -170.639, 0.84", "-52.4623, -153.469, -169.546, 0.84", "-57.532, -155.637, -167.538, 1.32", "-61.8947, -157.617, -165.987, 0.84", "-63.266, -158.29, -165.582, 0.84", "-65.8427, -159.643, -164.93, 1.44", "-69.4518, -161.835, -164.233, 0.96", "-71.5785, -163.435, -164.102, 0.96", "-72.9588, -164.781, -164.451, 1.44", "-74.5966, -166.929, -165.365, 0.96", "-75.0325, -167.647, -165.699, 0.96", "-76.1989, -170.048, -166.907, 1.44", "-77.1765, -172.363, -168.077, 1.08", "-78.3893, -175.011, -169.438, 1.44", "-79.7621, -177.656, -170.647, 0.84", "-80.6131, -179.057, -171.084, 0.84", "-81.1088, -179.809, -171.296, 0.84", "-83.3061, -182.729, -171.908, 1.2", "-84.4451, -184.009, -171.973, 1.2", "-87.6828, -186.839, -171.184, 0.84", "-90.3696, -188.613, -169.742, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-48.0428, -151.544, -171.847, 0.72", "-48.9456, -152.809, -172.301, 0.72", "-50.7912, -155.186, -173.458, 1.2", "-51.8769, -156.473, -174.23, 0.84", "-53.1021, -157.823, -175.175, 1.32", "-54.8199, -159.609, -176.52, 0.72", "-56.0114, -160.799, -177.47, 1.32", "-57.9452, -162.601, -179.114, 0.84", "-59.6957, -164.097, -180.671, 1.32", "-61.432, -165.53, -182.252, 0.84", "-62.3384, -166.257, -183.074, 0.84", "-64.0421, -167.626, -184.634, 1.44", "-64.6711, -168.161, -185.219, 1.44", "-66.3682, -169.785, -186.877, 0.96", "-68.4658, -172.049, -189.038, 1.44", "-70.3322, -174.27, -191.02, 0.84", "-70.9901, -175.099, -191.732, 1.32", "-72.083, -176.508, -192.852, 0.84", "-74.1491, -179.113, -194.683, 1.32", "-75.4846, -180.767, -195.771, 0.84", "-77.271, -182.867, -197.15, 1.44", "-78.1627, -183.883, -197.844, 0.72", "-80.0106, -185.912, -199.428, 1.32", "-82.2357, -188.221, -201.301, 0.6", "-84.3106, -190.257, -203.047, 1.08", "-86.4834, -192.332, -204.951, 0.48", "-88.8042, -194.562, -207.202, 1.44", "-90.7298, -196.483, -209.349, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "17.7974, -97.2693, -89.7714, 0.84", "16.8711, -97.6781, -91.498, 0.84", "16.0086, -97.9976, -93.2431, 0.96", "15.4252, -98.2271, -94.5077, 0.72", "15.0272, -98.3839, -95.4146, 0.72", "14.2729, -98.6728, -97.2141, 0.72", "13.6396, -98.9175, -98.7348, 0.72", "13.2913, -99.0465, -99.5988, 0.72", "12.881, -99.2274, -100.747, 0.72", "12.409, -99.4835, -102.073, 1.08", "11.9392, -99.7363, -103.3, 1.08", "11.7019, -99.8813, -103.85, 1.08", "11.1993, -100.204, -104.957, 0.6", "10.8244, -100.424, -105.793, 0.6", "9.92154, -100.85, -107.709, 1.08", "9.23841, -101.159, -109.194, 1.08", "8.20802, -101.535, -111.331, 0.6", "7.53667, -101.718, -112.678, 0.6", "6.26384, -101.986, -115.117, 1.56", "5.29627, -102.178, -116.915, 0.84", "4.46129, -102.352, -118.422, 1.44", "3.3278, -102.633, -120.406, 0.96", "2.39835, -102.892, -121.989, 1.56", "1.27343, -103.32, -123.888, 0.96", "0.68937, -103.609, -124.82, 0.96", "-0.144444, -104.136, -126.207, 1.56", "-0.593863, -104.478, -126.99, 1.56", "-1.53483, -105.387, -128.813, 1.08", "-2.40188, -106.328, -130.572, 1.68", "-3.20057, -107.278, -132.254, 1.68", "-4.03213, -108.374, -134.096, 0.96", "-4.70211, -109.394, -135.671, 1.56", "-5.28323, -110.354, -137.118, 0.96", "-5.91251, -111.493, -138.713, 1.8", "-6.71983, -113.073, -140.828, 1.2", "-7.25752, -114.246, -142.327, 0.72", "-7.92164, -115.822, -144.224, 1.2", "-8.3857, -116.989, -145.57, 0.72", "-8.87834, -118.415, -147.145, 0.72", "-9.11217, -119.236, -148.024, 0.72", "-9.40452, -120.489, -149.348, 1.2", "-9.59496, -121.332, -150.234, 0.72", "-9.8636, -122.676, -151.668, 1.2", "-10.1301, -124.053, -153.154, 0.6", "-10.3273, -124.883, -154.106, 1.2", "-10.7852, -126.152, -155.639, 0.6", "-11.1331, -126.894, -156.569, 0.6", "-11.6917, -127.817, -157.83, 1.32", "-13.0036, -129.657, -160.544, 0.72", "-13.9668, -130.84, -162.408, 1.2", "-15.1332, -132.172, -164.584, 0.72", "-15.4545, -132.536, -165.177, 0.72", "-16.5595, -133.84, -167.251, 1.32", "-17.5116, -135.05, -169.142, 0.6", "-18.3375, -136.168, -170.871, 1.32", "-19.2667, -137.487, -172.969, 0.6", "-20.5808, -139.435, -176.167, 0.6", "-21.3418, -140.573, -178.079, 1.2", "-22.8299, -142.822, -181.915, 0.72", "-23.3504, -143.552, -183.256, 1.2", "-24.2179, -144.736, -185.58, 1.08", "-24.8566, -145.617, -187.416, 0.72", "-25.3521, -146.331, -189.005, 0.72", "-25.8739, -147.146, -190.76, 1.2", "-26.4434, -148.082, -192.622, 0.6", "-27.0577, -149.187, -194.675, 1.08", "-27.5448, -150.097, -196.161, 0.6", "-27.9985, -150.981, -197.482, 1.2", "-28.9962, -152.988, -200.236, 0.6", "-29.4657, -154.02, -201.521, 0.6", "-29.6955, -154.682, -202.314, 1.2", "-30.2069, -156.12, -204.0, 0.72", "-30.5537, -157.099, -205.11, 1.2", "-30.7766, -157.8, -205.884, 1.2", "-30.9741, -159.024, -207.194, 1.2", "-31.0188, -161.539, -209.877, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "17.7974, -97.2693, -89.7714, 0.72", "19.4248, -99.7278, -88.8065, 0.72", "20.3159, -101.176, -88.1603, 0.72", "21.0922, -102.514, -87.6395, 1.56", "21.9282, -104.022, -87.1369, 0.96", "23.3042, -106.531, -86.4318, 1.56", "24.4205, -108.554, -85.9566, 1.56", "25.4201, -110.404, -85.6735, 0.96", "26.6503, -112.819, -85.409, 1.2", "27.4815, -114.618, -85.3389, 1.2", "28.2192, -116.474, -85.441, 1.56", "28.8085, -118.025, -85.6669, 1.56", "29.4149, -119.683, -86.0156, 0.84", "30.0961, -121.561, -86.5095, 1.44", "30.8107, -123.749, -87.1116, 0.84", "31.3692, -125.739, -87.7112, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-35.3869, -4.60133, 25.7369, 0.72", "-36.3348, -4.64443, 26.5834, 0.72", "-37.7168, -4.82116, 27.6258, 1.2", "-38.9602, -4.98016, 28.5636, 1.2", "-39.8352, -5.09205, 29.2236, 0.96", "-40.5836, -5.18776, 29.7881, 0.72", "-41.916, -5.35814, 30.7931, 0.72", "-42.9773, -5.57301, 31.5935, 1.2", "-48.6203, -5.80246, 36.4485, 1.2", "-55.3344, -6.19992, 39.6468, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-35.3869, -4.60133, 25.7369, 1.08", "-34.2841, -4.26391, 27.2733, 1.08", "-34.0011, -4.16523, 27.7162, 1.08", "-33.1744, -3.81021, 28.9786, 0.96", "-32.4875, -3.51974, 29.96, 0.96", "-31.4361, -3.09454, 31.3459, 1.44", "-29.9576, -2.49658, 33.295, 1.44", "-28.8804, -2.0067, 34.6468, 0.96", "-28.1378, -1.65901, 35.6103, 1.32", "-27.6325, -1.43753, 36.3191, 1.32", "-27.1632, -1.24122, 36.9665, 1.32", "-22.8522, 0.986557, 45.4751, 1.32", "-18.131, 3.30089, 53.7394, 1.32", "-12.5614, 4.70652, 61.6733, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-56.7671, 8.71687, 21.3783, 0.72", "-57.9385, 9.45071, 22.5221, 0.72", "-58.6709, 9.90952, 23.2373, 0.72", "-59.4205, 10.3791, 23.9693, 0.72", "-60.7199, 11.1932, 25.2381, 1.2", "-62.5348, 12.3302, 27.0103, 0.72", "-63.7198, 13.0725, 28.1673, 1.08", "-70.1735, 16.7779, 35.9062, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-56.7671, 8.71687, 21.3783, 1.08", "-57.6859, 9.0045, 22.4231, 1.08", "-58.1924, 9.08242, 22.9914, 1.08", "-59.299, 9.14119, 24.218, 1.2", "-60.0312, 9.1707, 25.0151, 1.2", "-60.5292, 9.20688, 25.6107, 1.44", "-61.2167, 9.28053, 26.4601, 1.08", "-61.5936, 9.29666, 26.9762, 0.84", "-61.9674, 9.31694, 27.508, 0.84", "-62.467, 9.38689, 28.22, 0.84", "-63.2138, 9.62177, 29.2047, 1.2", "-63.8257, 9.90702, 29.9394, 1.2", "-64.69, 10.3527, 30.8262, 1.08", "-65.1372, 10.5542, 31.218, 0.96", "-65.7267, 10.8099, 31.6955, 0.96", "-66.8051, 11.2231, 32.4689, 1.32", "-67.3204, 11.3976, 32.7746, 1.32", "-68.5677, 11.817, 33.4461, 1.32", "-69.8466, 12.2292, 34.019, 0.84", "-75.9152, 14.7273, 38.9232, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "31.3692, -125.739, -87.7112, 0.6", "32.815, -127.042, -87.3662, 0.6", "33.7675, -127.901, -87.1389, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "31.3692, -125.739, -87.7112, 0.6", "30.5415, -127.589, -89.021, 0.6", "30.1522, -129.265, -90.2758, 1.08", "30.0042, -130.535, -91.2141, 1.08", "29.961, -131.546, -91.9595, 1.08", "29.9472, -132.656, -92.7641, 1.08", "29.8439, -135.134, -94.4184, 0.72", "29.8328, -136.771, -95.3672, 1.2", "29.8119, -137.67, -95.8435, 1.2", "29.7564, -138.441, -96.2259, 1.2", "29.578, -139.871, -96.8929, 0.84", "29.3048, -142.084, -97.9164, 0.6", "28.8847, -144.762, -99.0722, 1.32", "28.6487, -146.306, -99.7691, 1.32", "28.4784, -147.919, -100.599, 0.72", "28.3801, -149.126, -101.26, 1.2", "28.1986, -152.213, -103.083, 1.2", "28.1709, -153.018, -103.612, 0.72", "28.1013, -154.871, -104.897, 1.56", "27.9328, -157.229, -106.622, 0.72", "27.7319, -159.056, -108.046, 0.72", "27.5276, -160.474, -109.2, 1.44", "27.2981, -161.62, -110.143, 0.84", "27.1368, -162.492, -110.85, 0.84", "26.8945, -163.817, -111.761, 1.44", "26.5478, -166.104, -113.063, 0.84", "26.4453, -167.14, -113.642, 0.84", "26.3752, -168.251, -114.2, 1.32", "26.3317, -169.244, -114.614, 1.32", "26.2711, -172.485, -115.697, 0.72", "26.2928, -174.015, -115.965, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.5614, 4.70652, 61.6733, 0.96", "-7.04541, 2.84904, 70.5289, 0.96", "-2.28452, 2.35665, 79.9834, 0.96", "1.44674, 4.19528, 89.7299, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.5614, 4.70652, 61.6733, 0.84", "-8.15492, 6.07315, 68.4757, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "26.2928, -174.015, -115.965, 0.6", "26.6903, -174.621, -115.483, 0.6", "26.9975, -175.208, -115.04, 0.96", "27.3993, -175.977, -114.459, 0.6", "27.6494, -176.456, -114.098, 0.6", "28.0506, -177.223, -113.518, 1.2", "28.5311, -178.142, -112.824, 0.72", "28.805, -178.822, -112.349, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "26.2928, -174.015, -115.965, 0.48", "26.1872, -175.441, -116.336, 0.48", "26.4922, -177.383, -117.137, 1.08", "26.7898, -179.497, -117.98, 0.6", "26.9527, -181.161, -118.637, 0.36", "27.141, -183.291, -119.447, 0.36", "27.3245, -185.206, -120.17, 0.84", "27.858, -188.985, -121.695, 0.6", "28.3866, -191.903, -122.908, 0.6", "28.9032, -194.537, -123.985, 1.08", "29.1016, -195.672, -124.405, 0.72", "29.3472, -197.309, -124.927, 1.08", "29.8071, -200.166, -125.699, 0.48", "30.2813, -202.656, -126.243, 0.48", "30.5624, -203.713, -126.467, 0.48", "31.0941, -205.519, -126.808, 0.48", "31.5269, -207.029, -127.071, 0.48", "32.167, -209.324, -127.365, 1.08", "32.5267, -210.578, -127.453, 0.48", "33.2096, -212.71, -127.588, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "axon_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "axon_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_SBC_48827298f3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 8.01014, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.81743, 9.83417, -2.2587, 1.32 ) }
    dend_47 { pt3dadd( -3.30774, 11.2177, -2.95245, 1.32 ) }
    dend_47 { pt3dadd( -4.52088, 14.3474, -4.66778, 2.04 ) }
    dend_47 { pt3dadd( -6.37881, 18.3687, -7.04597, 1.32 ) }
    dend_47 { pt3dadd( -7.765, 21.2785, -8.77731, 1.8 ) }
    dend_47 { pt3dadd( -9.10349, 24.0882, -10.4491, 1.32 ) }
    dend_47 { pt3dadd( -10.2312, 26.4001, -11.9477, 1.68 ) }
    dend_47 { pt3dadd( -11.2165, 28.3718, -13.3473, 1.68 ) }
    dend_47 { pt3dadd( -12.6726, 31.1882, -15.597, 1.08 ) }
    dend_47 { pt3dadd( -13.7457, 32.9387, -16.924, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.37986, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 6.88835, -3.98328, -2.42352, 1.8 ) }
    dend_34 { pt3dadd( 8.70438, -5.26272, -4.38103, 1.8 ) }
    dend_34 { pt3dadd( 9.94244, -6.13498, -5.71557, 1.8 ) }
    dend_34 { pt3dadd( 11.1057, -6.95452, -6.96946, 2.16 ) }
    dend_34 { pt3dadd( 13.1271, -8.37864, -9.14835, 2.4 ) }
    dend_34 { pt3dadd( 13.4364, -8.59659, -9.4818, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.27986, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.17149, -5.83714, 5.49188, 2.64 ) }
    dend_27 { pt3dadd( 3.30107, -6.52923, 5.95966, 2.64 ) }
    dend_27 { pt3dadd( 4.01038, -9.36965, 7.70309, 1.92 ) }
    dend_27 { pt3dadd( 4.52991, -11.0276, 8.63296, 1.92 ) }
    dend_27 { pt3dadd( 5.15613, -12.7198, 9.51017, 1.92 ) }
    dend_27 { pt3dadd( 5.92966, -14.6568, 10.4441, 2.4 ) }
    dend_27 { pt3dadd( 6.31139, -15.5105, 10.8246, 2.4 ) }
    dend_27 { pt3dadd( 7.07896, -17.0677, 11.4651, 1.8 ) }
    dend_27 { pt3dadd( 8.14099, -18.9666, 12.0769, 1.56 ) }
    dend_27 { pt3dadd( 9.24773, -20.7693, 12.5789, 1.8 ) }
    dend_27 { pt3dadd( 9.91684, -21.8026, 12.8071, 1.8 ) }
    dend_27 { pt3dadd( 10.1522, -22.1493, 12.8802, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.930143, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -8.99529, 0.390043, -0.0247656, 4.93 ) }
    dend_0 { pt3dadd( -9.68368, 0.07947, -0.0215831, 4.81 ) }
    dend_0 { pt3dadd( -11.2697, -0.636068, -0.0142509, 1.92 ) }
    dend_0 { pt3dadd( -12.3748, -1.13465, -0.00914184, 1.68 ) }
    dend_0 { pt3dadd( -13.5493, -1.66452, -0.00371224, 1.68 ) }
    dend_0 { pt3dadd( -15.7784, -2.67019, 0.00659297, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21105 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.7457, 32.9387, -16.924, 0.6 ) }
    dend_51 { pt3dadd( -14.4467, 34.7694, -17.2222, 0.6 ) }
    dend_51 { pt3dadd( -14.9704, 36.0281, -17.5407, 0.6 ) }
    dend_51 { pt3dadd( -15.3489, 36.8389, -17.7857, 0.6 ) }
    dend_51 { pt3dadd( -15.9122, 38.0779, -18.4081, 1.68 ) }
    dend_51 { pt3dadd( -16.511, 39.6332, -19.3721, 0.72 ) }
    dend_51 { pt3dadd( -16.7373, 40.221, -19.7364, 0.72 ) }
    dend_51 { pt3dadd( -17.6876, 42.6627, -21.5035, 0.6 ) }
    dend_51 { pt3dadd( -18.3249, 44.2894, -22.8487, 1.44 ) }
    dend_51 { pt3dadd( -19.4378, 47.174, -25.5509, 0.84 ) }
    dend_51 { pt3dadd( -19.867, 48.4023, -26.896, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.7457, 32.9387, -16.924, 1.32 ) }
    dend_48 { pt3dadd( -13.3974, 33.9776, -18.6604, 1.32 ) }
    dend_48 { pt3dadd( -12.8711, 35.804, -21.5407, 1.32 ) }
    dend_48 { pt3dadd( -12.5123, 37.1137, -23.4484, 1.32 ) }
    dend_48 { pt3dadd( -12.1068, 38.5905, -25.5013, 0.96 ) }
    dend_48 { pt3dadd( -11.713, 40.0249, -27.4952, 0.96 ) }
    dend_48 { pt3dadd( -11.4331, 41.0441, -28.9121, 1.2 ) }
    dend_48 { pt3dadd( -11.1251, 42.3686, -30.7316, 0.48 ) }
    dend_48 { pt3dadd( -10.8098, 43.7706, -32.4306, 1.32 ) }
    dend_48 { pt3dadd( -10.6209, 44.6611, -33.4042, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.4364, -8.59659, -9.4818, 1.56 ) }
    dend_42 { pt3dadd( 14.1105, -9.48851, -11.7035, 1.56 ) }
    dend_42 { pt3dadd( 15.3982, -12.0081, -16.7365, 1.32 ) }
    dend_42 { pt3dadd( 15.7651, -13.5267, -19.4585, 1.32 ) }
    dend_42 { pt3dadd( 15.9445, -15.0783, -21.8471, 1.68 ) }
    dend_42 { pt3dadd( 15.9991, -16.2279, -23.4335, 1.68 ) }
    dend_42 { pt3dadd( 16.0017, -17.2384, -24.6526, 1.68 ) }
    dend_42 { pt3dadd( 15.8238, -19.5171, -26.7396, 1.2 ) }
    dend_42 { pt3dadd( 15.0227, -24.6336, -30.1746, 1.2 ) }
    dend_42 { pt3dadd( 14.6092, -26.8995, -31.5019, 1.56 ) }
    dend_42 { pt3dadd( 14.4344, -27.8744, -32.0242, 1.56 ) }
    dend_42 { pt3dadd( 14.0667, -30.174, -33.1907, 1.2 ) }
    dend_42 { pt3dadd( 13.7925, -32.069, -34.1766, 1.2 ) }
    dend_42 { pt3dadd( 13.42, -35.7629, -36.1366, 1.2 ) }
    dend_42 { pt3dadd( 13.3669, -37.1985, -36.8906, 1.2 ) }
    dend_42 { pt3dadd( 13.369, -38.2172, -37.4561, 1.56 ) }
    dend_42 { pt3dadd( 13.3952, -40.7943, -39.0145, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 13.4258, -43.4347, -40.7554, 2.04 ) }
    dend_42 { pt3dadd( 13.4319, -44.7056, -41.5821, 2.04 ) }
    dend_42 { pt3dadd( 13.4134, -46.9809, -42.7525, 1.32 ) }
    dend_42 { pt3dadd( 13.4291, -50.7191, -44.5244, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.4364, -8.59659, -9.4818, 1.32 ) }
    dend_35 { pt3dadd( 15.867, -8.90001, -9.29292, 1.32 ) }
    dend_35 { pt3dadd( 17.1472, -9.05982, -9.19343, 1.32 ) }
    dend_35 { pt3dadd( 19.7876, -9.38944, -8.98824, 1.32 ) }
    dend_35 { pt3dadd( 20.8341, -9.52007, -8.90692, 1.32 ) }
    dend_35 { pt3dadd( 24.4345, -9.96949, -8.62712, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.1522, -22.1493, 12.8802, 1.2 ) }
    dend_33 { pt3dadd( 11.4645, -23.0276, 14.0603, 1.2 ) }
    dend_33 { pt3dadd( 13.3733, -24.3013, 15.8152, 1.2 ) }
    dend_33 { pt3dadd( 14.762, -25.1977, 17.1124, 1.2 ) }
    dend_33 { pt3dadd( 16.4504, -26.2487, 18.6818, 2.04 ) }
    dend_33 { pt3dadd( 19.6113, -28.1709, 21.5851, 1.08 ) }
    dend_33 { pt3dadd( 21.2069, -29.1538, 23.0441, 1.08 ) }
    dend_33 { pt3dadd( 22.1807, -29.8157, 23.9979, 1.08 ) }
    dend_33 { pt3dadd( 23.2733, -30.5546, 25.0834, 1.08 ) }
    dend_33 { pt3dadd( 24.2087, -31.1254, 25.9044, 1.08 ) }
    dend_33 { pt3dadd( 25.061, -31.5967, 26.5111, 1.08 ) }
    dend_33 { pt3dadd( 25.7491, -31.9125, 26.8588, 1.08 ) }
    dend_33 { pt3dadd( 27.2436, -32.6306, 27.601, 1.08 ) }
    dend_33 { pt3dadd( 28.1362, -33.0665, 27.9942, 1.08 ) }
    dend_33 { pt3dadd( 29.1887, -33.6235, 28.554, 1.08 ) }
    dend_33 { pt3dadd( 30.0168, -34.0698, 29.0336, 1.08 ) }
    dend_33 { pt3dadd( 31.232, -34.7244, 29.8266, 1.08 ) }
    dend_33 { pt3dadd( 31.9408, -35.074, 30.35, 1.08 ) }
    dend_33 { pt3dadd( 33.9197, -35.9411, 32.0467, 1.92 ) }
    dend_33 { pt3dadd( 36.3344, -36.7397, 34.4273, 0.96 ) }
    dend_33 { pt3dadd( 37.0465, -36.8675, 35.2106, 0.96 ) }
    dend_33 { pt3dadd( 38.6238, -36.8159, 37.0753, 0.72 ) }
    dend_33 { pt3dadd( 39.6369, -36.4838, 38.301, 1.32 ) }
    dend_33 { pt3dadd( 40.6642, -35.8449, 39.5445, 1.32 ) }
    dend_33 { pt3dadd( 42.2646, -34.4203, 41.2872, 0.84 ) }
    dend_33 { pt3dadd( 42.743, -33.9692, 41.6843, 0.84 ) }
    dend_33 { pt3dadd( 43.626, -33.1825, 42.3089, 0.84 ) }
    dend_33 { pt3dadd( 44.4525, -32.5362, 42.6878, 0.84 ) }
    dend_33 { pt3dadd( 45.122, -32.1448, 42.8591, 0.84 ) }
    dend_33 { pt3dadd( 47.0777, -31.2981, 43.109, 0.72 ) }
    dend_33 { pt3dadd( 48.3685, -30.9317, 43.1501, 0.72 ) }
    dend_33 { pt3dadd( 49.2168, -30.7099, 43.1466, 0.72 ) }
    dend_33 { pt3dadd( 50.9111, -30.2735, 43.039, 0.72 ) }
    dend_33 { pt3dadd( 51.7442, -30.084, 42.9508, 0.72 ) }
    dend_33 { pt3dadd( 52.1228, -29.9955, 42.8853, 0.72 ) }
    dend_33 { pt3dadd( 54.0899, -29.5055, 42.241, 0.96 ) }
    dend_33 { pt3dadd( 62.5375, -31.4765, 48.9164, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.1522, -22.1493, 12.8802, 0.96 ) }
    dend_28 { pt3dadd( 10.1003, -24.0872, 12.9596, 0.96 ) }
    dend_28 { pt3dadd( 10.0456, -26.127, 13.0432, 1.08 ) }
    dend_28 { pt3dadd( 10.0175, -27.1776, 13.0863, 1.08 ) }
    dend_28 { pt3dadd( 9.96894, -28.9899, 13.1606, 1.56 ) }
    dend_28 { pt3dadd( 9.93644, -30.2042, 13.2104, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.7784, -2.67019, 0.00659297, 1.08 ) }
    dend_14 { pt3dadd( -17.1131, -6.55141, -0.860224, 1.08 ) }
    dend_14 { pt3dadd( -17.599, -8.08076, -1.28895, 1.08 ) }
    dend_14 { pt3dadd( -18.1655, -10.1562, -1.91334, 1.08 ) }
    dend_14 { pt3dadd( -18.5841, -12.0951, -2.45664, 1.08 ) }
    dend_14 { pt3dadd( -19.0233, -14.5145, -3.30397, 1.08 ) }
    dend_14 { pt3dadd( -19.3115, -16.294, -4.04187, 1.32 ) }
    dend_14 { pt3dadd( -19.9105, -21.1179, -6.36987, 1.8 ) }
    dend_14 { pt3dadd( -19.9762, -22.4388, -7.09899, 1.8 ) }
    dend_14 { pt3dadd( -19.8967, -24.8764, -8.66714, 1.56 ) }
    dend_14 { pt3dadd( -19.4618, -28.7599, -11.5287, 1.44 ) }
    dend_14 { pt3dadd( -19.0559, -30.9692, -13.3653, 1.44 ) }
    dend_14 { pt3dadd( -18.5926, -32.9518, -15.1174, 1.56 ) }
    dend_14 { pt3dadd( -17.9326, -35.4936, -17.361, 1.32 ) }
    dend_14 { pt3dadd( -17.3309, -38.0178, -19.5992, 1.32 ) }
    dend_14 { pt3dadd( -16.8061, -40.3635, -21.7699, 2.04 ) }
    dend_14 { pt3dadd( -16.443, -42.1417, -23.3861, 2.04 ) }
    dend_14 { pt3dadd( -16.1137, -44.0462, -25.2201, 1.08 ) }
    dend_14 { pt3dadd( -15.8137, -46.4455, -27.6841, 1.44 ) }
    dend_14 { pt3dadd( -15.6008, -48.8247, -30.2737, 1.44 ) }
    dend_14 { pt3dadd( -15.3841, -50.964, -32.6983, 0.96 ) }
    dend_14 { pt3dadd( -15.2185, -52.3902, -34.3818, 1.56 ) }
    dend_14 { pt3dadd( -14.9293, -54.4835, -36.9003, 1.56 ) }
    dend_14 { pt3dadd( -14.4975, -56.8103, -39.7393, 2.16 ) }
    dend_14 { pt3dadd( -14.0191, -58.6282, -41.8742, 1.56 ) }
    dend_14 { pt3dadd( -13.4718, -60.0258, -43.2747, 1.56 ) }
    dend_14 { pt3dadd( -12.0234, -62.7764, -45.849, 1.8 ) }
    dend_14 { pt3dadd( -11.3628, -63.8114, -46.793, 1.8 ) }
    dend_14 { pt3dadd( -10.5124, -65.0017, -47.8402, 1.8 ) }
    dend_14 { pt3dadd( -9.48563, -66.371, -48.982, 1.8 ) }
    dend_14 { pt3dadd( -6.54361, -70.1681, -52.3327, 1.56 ) }
    dend_14 { pt3dadd( -3.63972, -73.6982, -55.6437, 1.56 ) }
    dend_14 { pt3dadd( -2.50671, -74.9412, -56.9298, 1.56 ) }
    dend_14 { pt3dadd( -1.627, -75.8704, -58.4286, 1.56 ) }
    dend_14 { pt3dadd( -0.686778, -76.8614, -60.1975, 1.8 ) }
    dend_14 { pt3dadd( 1.23999, -78.9303, -64.4043, 1.44 ) }
    dend_14 { pt3dadd( 1.98452, -79.7512, -66.4509, 1.44 ) }
    dend_14 { pt3dadd( 3.20652, -81.0769, -70.4183, 1.8 ) }
    dend_14 { pt3dadd( 6.87733, -84.8923, -84.4276, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.7784, -2.67019, 0.00659297, 1.56 ) }
    dend_1 { pt3dadd( -17.6018, -3.94519, 1.34772, 1.56 ) }
    dend_1 { pt3dadd( -19.6061, -5.34667, 2.82187, 1.32 ) }
    dend_1 { pt3dadd( -21.0832, -6.37954, 3.9083, 1.32 ) }
    dend_1 { pt3dadd( -23.0348, -7.74413, 5.34366, 1.68 ) }
    dend_1 { pt3dadd( -24.754, -8.94632, 6.60819, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.119526 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.119526 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.119526 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -19.867, 48.4023, -26.896, 0.84 ) }
    dend_53 { pt3dadd( -15.7653, 49.7958, -22.4029, 0.84 ) }
    dend_53 { pt3dadd( -14.6454, 50.1762, -21.1762, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -19.867, 48.4023, -26.896, 0.96 ) }
    dend_52 { pt3dadd( -19.89, 49.4087, -28.0646, 0.96 ) }
    dend_52 { pt3dadd( -19.9037, 50.203, -28.8274, 0.96 ) }
    dend_52 { pt3dadd( -19.9142, 51.5751, -30.1971, 1.2 ) }
    dend_52 { pt3dadd( -19.8025, 54.0694, -32.7145, 0.96 ) }
    dend_52 { pt3dadd( -19.7143, 54.8353, -33.4257, 0.72 ) }
    dend_52 { pt3dadd( -19.4851, 56.0285, -34.4726, 1.44 ) }
    dend_52 { pt3dadd( -19.2467, 56.7163, -35.0687, 1.44 ) }
    dend_52 { pt3dadd( -18.1696, 58.941, -36.9235, 0.84 ) }
    dend_52 { pt3dadd( -17.7135, 59.6473, -37.6445, 0.72 ) }
    dend_52 { pt3dadd( -16.9119, 60.6705, -38.9858, 1.68 ) }
    dend_52 { pt3dadd( -16.2006, 61.4799, -40.1685, 0.72 ) }
    dend_52 { pt3dadd( -15.4326, 62.2484, -41.4493, 1.2 ) }
    dend_52 { pt3dadd( -14.7073, 62.9159, -42.6849, 1.32 ) }
    dend_52 { pt3dadd( -12.13, 65.0574, -47.095, 0.72 ) }
    dend_52 { pt3dadd( -10.9698, 65.9959, -49.475, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -10.6209, 44.6611, -33.4042, 0.84 ) }
    dend_50 { pt3dadd( -9.72401, 46.1478, -34.3141, 0.84 ) }
    dend_50 { pt3dadd( -8.84739, 47.5428, -35.2132, 0.84 ) }
    dend_50 { pt3dadd( -8.34539, 48.3589, -35.8224, 0.84 ) }
    dend_50 { pt3dadd( -7.70851, 49.4261, -36.7784, 0.6 ) }
    dend_50 { pt3dadd( -7.16719, 50.3332, -37.5909, 0.6 ) }
    dend_50 { pt3dadd( -6.39619, 51.6252, -38.7483, 1.32 ) }
    dend_50 { pt3dadd( -5.50463, 53.2006, -40.28, 0.72 ) }
    dend_50 { pt3dadd( -4.50006, 54.9427, -41.9967, 1.56 ) }
    dend_50 { pt3dadd( -3.30019, 57.0011, -44.1985, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -10.6209, 44.6611, -33.4042, 0.84 ) }
    dend_49 { pt3dadd( -13.8312, 49.3283, -43.3016, 0.84 ) }
    dend_49 { pt3dadd( -14.4339, 50.2047, -45.16, 1.2 ) }
    dend_49 { pt3dadd( -15.2846, 51.4413, -47.7825, 0.84 ) }
    dend_49 { pt3dadd( -16.0493, 52.5532, -50.1403, 1.2 ) }
    dend_49 { pt3dadd( -17.5384, 54.7181, -54.7312, 0.84 ) }
    dend_49 { pt3dadd( -18.2954, 55.8187, -57.0652, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.4291, -50.7191, -44.5244, 0.72 ) }
    dend_44 { pt3dadd( 11.1664, -54.7143, -46.1716, 0.72 ) }
    dend_44 { pt3dadd( 10.306, -56.1553, -46.6773, 1.2 ) }
    dend_44 { pt3dadd( 9.68694, -57.1319, -46.992, 1.2 ) }
    dend_44 { pt3dadd( 8.69003, -58.5756, -47.5548, 0.6 ) }
    dend_44 { pt3dadd( 7.45782, -60.2088, -48.2634, 1.92 ) }
    dend_44 { pt3dadd( 6.1044, -61.8709, -49.1078, 1.08 ) }
    dend_44 { pt3dadd( 4.37933, -63.6887, -50.2998, 1.68 ) }
    dend_44 { pt3dadd( 3.20554, -64.7574, -51.172, 1.68 ) }
    dend_44 { pt3dadd( 0.92373, -66.5908, -52.9878, 0.96 ) }
    dend_44 { pt3dadd( -0.0930992, -67.2945, -53.8378, 0.96 ) }
    dend_44 { pt3dadd( -1.80541, -68.2905, -55.3597, 1.44 ) }
    dend_44 { pt3dadd( -3.80263, -69.2481, -57.1846, 0.96 ) }
    dend_44 { pt3dadd( -5.21096, -69.8575, -58.5801, 1.44 ) }
    dend_44 { pt3dadd( -6.72569, -70.5066, -60.123, 0.96 ) }
    dend_44 { pt3dadd( -7.87027, -71.0388, -61.2818, 1.56 ) }
    dend_44 { pt3dadd( -9.73365, -71.9796, -63.1954, 0.84 ) }
    dend_44 { pt3dadd( -11.5644, -72.9888, -65.0414, 1.56 ) }
    dend_44 { pt3dadd( -14.0696, -74.5149, -67.5716, 1.08 ) }
    dend_44 { pt3dadd( -15.3964, -75.4068, -68.9214, 0.84 ) }
    dend_44 { pt3dadd( -17.0303, -76.6352, -70.625, 1.08 ) }
    dend_44 { pt3dadd( -17.3937, -76.9332, -71.0069, 0.72 ) }
    dend_44 { pt3dadd( -18.815, -78.2073, -72.5281, 1.2 ) }
    dend_44 { pt3dadd( -20.2459, -79.5804, -74.0533, 0.6 ) }
    dend_44 { pt3dadd( -21.3755, -80.6441, -75.147, 1.08 ) }
    dend_44 { pt3dadd( -22.6342, -81.7943, -76.3619, 0.72 ) }
    dend_44 { pt3dadd( -23.9824, -82.9575, -77.7005, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.4291, -50.7191, -44.5244, 0.48 ) }
    dend_43 { pt3dadd( 15.4829, -52.4664, -45.2665, 0.48 ) }
    dend_43 { pt3dadd( 17.5084, -54.2092, -46.0398, 1.32 ) }
    dend_43 { pt3dadd( 18.8789, -55.4104, -46.5891, 0.96 ) }
    dend_43 { pt3dadd( 19.878, -56.2858, -46.9916, 1.56 ) }
    dend_43 { pt3dadd( 21.6125, -57.8223, -47.7042, 0.96 ) }
    dend_43 { pt3dadd( 23.2239, -59.2824, -48.3907, 1.68 ) }
    dend_43 { pt3dadd( 24.9367, -60.8574, -49.1869, 1.08 ) }
    dend_43 { pt3dadd( 26.2583, -62.1406, -49.8573, 1.8 ) }
    dend_43 { pt3dadd( 26.7537, -62.6678, -50.1314, 1.8 ) }
    dend_43 { pt3dadd( 28.4623, -64.6538, -51.1866, 1.08 ) }
    dend_43 { pt3dadd( 29.3941, -65.8793, -51.8774, 1.56 ) }
    dend_43 { pt3dadd( 30.0525, -66.8973, -52.4567, 1.08 ) }
    dend_43 { pt3dadd( 30.6408, -67.9953, -53.0567, 1.56 ) }
    dend_43 { pt3dadd( 31.4123, -69.777, -53.9851, 1.08 ) }
    dend_43 { pt3dadd( 31.8919, -71.0927, -54.6504, 1.68 ) }
    dend_43 { pt3dadd( 32.4148, -72.8011, -55.4776, 1.2 ) }
    dend_43 { pt3dadd( 32.8499, -74.2665, -56.1564, 1.2 ) }
    dend_43 { pt3dadd( 33.4194, -76.208, -57.029, 1.8 ) }
    dend_43 { pt3dadd( 33.9148, -78.063, -57.8964, 1.2 ) }
    dend_43 { pt3dadd( 34.1995, -79.1496, -58.5708, 1.8 ) }
    dend_43 { pt3dadd( 34.8001, -81.3657, -60.171, 1.2 ) }
    dend_43 { pt3dadd( 35.4974, -83.7115, -62.0651, 1.68 ) }
    dend_43 { pt3dadd( 35.9732, -85.1401, -63.2965, 1.2 ) }
    dend_43 { pt3dadd( 36.6767, -87.0497, -65.1444, 1.68 ) }
    dend_43 { pt3dadd( 38.3188, -91.1065, -69.3898, 1.2 ) }
    dend_43 { pt3dadd( 38.75, -92.0985, -70.4852, 1.2 ) }
    dend_43 { pt3dadd( 39.1162, -92.8941, -71.4104, 1.2 ) }
    dend_43 { pt3dadd( 39.7932, -94.2877, -73.1041, 1.56 ) }
    dend_43 { pt3dadd( 41.1884, -96.8969, -76.2521, 0.96 ) }
    dend_43 { pt3dadd( 41.9466, -98.1513, -77.6381, 1.44 ) }
    dend_43 { pt3dadd( 42.5565, -99.2172, -78.6004, 0.72 ) }
    dend_43 { pt3dadd( 43.1337, -100.249, -79.6651, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 24.4345, -9.96949, -8.62712, 0.72 ) }
    dend_41 { pt3dadd( 27.6466, -7.69347, -10.8031, 0.72 ) }
    dend_41 { pt3dadd( 29.8678, -5.8265, -12.5206, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 31.4887, -4.29063, -13.9069, 0.72 ) }
    dend_41 { pt3dadd( 32.9368, -2.73147, -15.3544, 0.72 ) }
    dend_41 { pt3dadd( 34.5164, -0.839527, -17.3205, 0.48 ) }
    dend_41 { pt3dadd( 34.919, -0.267548, -17.9908, 0.96 ) }
    dend_41 { pt3dadd( 36.0909, 1.97175, -21.0435, 0.6 ) }
    dend_41 { pt3dadd( 36.8537, 3.80769, -24.1285, 1.44 ) }
    dend_41 { pt3dadd( 37.4693, 5.52084, -27.6318, 0.72 ) }
    dend_41 { pt3dadd( 38.0582, 7.03915, -31.7978, 1.2 ) }
    dend_41 { pt3dadd( 38.7265, 8.75014, -37.1375, 0.6 ) }
    dend_41 { pt3dadd( 39.3703, 10.4071, -42.9308, 1.2 ) }
    dend_41 { pt3dadd( 39.8197, 11.6062, -47.9571, 0.84 ) }
    dend_41 { pt3dadd( 40.163, 12.5267, -52.8375, 1.68 ) }
    dend_41 { pt3dadd( 40.652, 13.4024, -59.1917, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 24.4345, -9.96949, -8.62712, 0.48 ) }
    dend_36 { pt3dadd( 26.7842, -10.9946, -9.17256, 0.48 ) }
    dend_36 { pt3dadd( 28.5241, -11.9628, -9.6228, 0.96 ) }
    dend_36 { pt3dadd( 29.1973, -12.4268, -9.82645, 0.72 ) }
    dend_36 { pt3dadd( 31.6553, -14.4027, -10.627, 1.2 ) }
    dend_36 { pt3dadd( 33.7092, -16.2861, -11.3175, 0.84 ) }
    dend_36 { pt3dadd( 35.5674, -18.2192, -11.9685, 1.68 ) }
    dend_36 { pt3dadd( 36.9375, -20.0313, -12.5162, 0.96 ) }
    dend_36 { pt3dadd( 38.1352, -22.0276, -13.0369, 1.92 ) }
    dend_36 { pt3dadd( 38.7202, -23.2236, -13.301, 1.92 ) }
    dend_36 { pt3dadd( 39.3319, -24.857, -13.5812, 0.96 ) }
    dend_36 { pt3dadd( 39.8927, -26.5922, -13.7801, 1.44 ) }
    dend_36 { pt3dadd( 40.1762, -27.5208, -13.8075, 1.44 ) }
    dend_36 { pt3dadd( 40.9683, -29.9215, -13.675, 0.72 ) }
    dend_36 { pt3dadd( 41.278, -30.7541, -13.567, 0.72 ) }
    dend_36 { pt3dadd( 41.9073, -32.3106, -13.279, 1.32 ) }
    dend_36 { pt3dadd( 43.112, -34.7947, -12.5061, 1.32 ) }
    dend_36 { pt3dadd( 43.7453, -35.855, -12.0312, 1.32 ) }
    dend_36 { pt3dadd( 44.4022, -36.7898, -11.5252, 1.32 ) }
    dend_36 { pt3dadd( 44.8514, -37.366, -11.1638, 1.32 ) }
    dend_36 { pt3dadd( 46.2182, -39.0109, -10.0332, 0.72 ) }
    dend_36 { pt3dadd( 48.1219, -41.173, -8.38063, 1.8 ) }
    dend_36 { pt3dadd( 49.3291, -42.4642, -7.40982, 1.8 ) }
    dend_36 { pt3dadd( 50.1411, -43.2654, -6.75852, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.93644, -30.2042, 13.2104, 1.44 ) }
    dend_32 { pt3dadd( 12.5492, -31.8802, 13.8098, 1.44 ) }
    dend_32 { pt3dadd( 14.7704, -33.5928, 14.4289, 1.44 ) }
    dend_32 { pt3dadd( 16.4557, -35.0901, 14.9784, 1.44 ) }
    dend_32 { pt3dadd( 18.0568, -36.7403, 15.5824, 1.44 ) }
    dend_32 { pt3dadd( 19.1788, -37.9904, 16.021, 1.44 ) }
    dend_32 { pt3dadd( 20.8531, -39.9969, 16.7213, 1.44 ) }
    dend_32 { pt3dadd( 21.803, -41.3286, 17.1989, 1.08 ) }
    dend_32 { pt3dadd( 22.7327, -42.7865, 17.794, 1.44 ) }
    dend_32 { pt3dadd( 24.4334, -45.5278, 18.9295, 1.08 ) }
    dend_32 { pt3dadd( 25.5343, -47.1907, 19.5934, 1.56 ) }
    dend_32 { pt3dadd( 26.9852, -49.1655, 20.4104, 0.96 ) }
    dend_32 { pt3dadd( 28.0566, -50.4332, 20.9588, 0.96 ) }
    dend_32 { pt3dadd( 30.2413, -52.7803, 22.0258, 0.96 ) }
    dend_32 { pt3dadd( 31.8124, -54.3564, 22.7878, 0.96 ) }
    dend_32 { pt3dadd( 32.8508, -55.349, 23.311, 0.96 ) }
    dend_32 { pt3dadd( 33.8616, -56.3174, 23.8356, 0.96 ) }
    dend_32 { pt3dadd( 35.3616, -57.7331, 24.6246, 0.72 ) }
    dend_32 { pt3dadd( 36.1106, -58.4763, 25.0297, 0.72 ) }
    dend_32 { pt3dadd( 37.4419, -59.8926, 25.7857, 0.72 ) }
    dend_32 { pt3dadd( 38.4757, -61.083, 26.5284, 0.72 ) }
    dend_32 { pt3dadd( 39.0357, -61.7318, 26.9588, 0.72 ) }
    dend_32 { pt3dadd( 39.8243, -62.5799, 27.5819, 0.72 ) }
    dend_32 { pt3dadd( 40.4042, -63.1801, 28.0544, 0.72 ) }
    dend_32 { pt3dadd( 41.8008, -64.4952, 29.1524, 0.72 ) }
    dend_32 { pt3dadd( 42.4187, -65.0085, 29.592, 0.72 ) }
    dend_32 { pt3dadd( 43.4218, -65.7332, 30.2685, 0.72 ) }
    dend_32 { pt3dadd( 44.6758, -66.5611, 31.1128, 0.72 ) }
    dend_32 { pt3dadd( 55.42, -72.8736, 36.8843, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.93644, -30.2042, 13.2104, 1.44 ) }
    dend_29 { pt3dadd( 8.44427, -31.3565, 13.9896, 1.44 ) }
    dend_29 { pt3dadd( 6.15925, -33.3233, 14.7982, 1.44 ) }
    dend_29 { pt3dadd( 4.91364, -34.5427, 15.1043, 1.2 ) }
    dend_29 { pt3dadd( 3.77205, -35.8213, 15.2703, 1.2 ) }
    dend_29 { pt3dadd( 1.97371, -38.002, 15.3487, 1.08 ) }
    dend_29 { pt3dadd( 1.03832, -39.1377, 15.3273, 1.08 ) }
    dend_29 { pt3dadd( -1.03828, -41.6235, 14.9156, 1.32 ) }
    dend_29 { pt3dadd( -2.09972, -42.8951, 14.5269, 1.32 ) }
    dend_29 { pt3dadd( -3.17726, -44.2397, 14.0674, 0.96 ) }
    dend_29 { pt3dadd( -4.19916, -45.5577, 13.5417, 0.96 ) }
    dend_29 { pt3dadd( -5.51242, -47.2464, 12.8225, 1.32 ) }
    dend_29 { pt3dadd( -6.75278, -48.7469, 12.1574, 0.96 ) }
    dend_29 { pt3dadd( -7.80384, -49.9128, 11.6794, 0.96 ) }
    dend_29 { pt3dadd( -9.83075, -52.0627, 10.7934, 1.44 ) }
    dend_29 { pt3dadd( -11.9751, -54.2808, 9.91037, 0.96 ) }
    dend_29 { pt3dadd( -12.5503, -54.8949, 9.68096, 0.96 ) }
    dend_29 { pt3dadd( -14.4242, -57.0171, 8.93376, 1.8 ) }
    dend_29 { pt3dadd( -15.7776, -58.6244, 8.26463, 1.32 ) }
    dend_29 { pt3dadd( -16.3498, -59.2979, 7.96439, 1.32 ) }
    dend_29 { pt3dadd( -16.7552, -59.7592, 7.75761, 1.32 ) }
    dend_29 { pt3dadd( -17.6451, -60.7426, 7.35597, 0.96 ) }
    dend_29 { pt3dadd( -18.1079, -61.2492, 7.12118, 0.96 ) }
    dend_29 { pt3dadd( -21.3145, -64.7682, 5.37186, 2.4 ) }
    dend_29 { pt3dadd( -23.4749, -67.166, 4.11756, 0.84 ) }
    dend_29 { pt3dadd( -25.2209, -69.1041, 3.07968, 2.16 ) }
    dend_29 { pt3dadd( -25.9092, -69.8619, 2.66797, 2.16 ) }
    dend_29 { pt3dadd( -28.4871, -72.5954, 1.1623, 0.84 ) }
    dend_29 { pt3dadd( -29.9948, -74.1195, 0.371459, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.87733, -84.8923, -84.4276, 0.84 ) }
    dend_26 { pt3dadd( 7.67132, -86.172, -85.4741, 0.84 ) }
    dend_26 { pt3dadd( 8.21259, -87.0638, -86.2169, 0.96 ) }
    dend_26 { pt3dadd( 8.97637, -88.4291, -87.3598, 0.72 ) }
    dend_26 { pt3dadd( 10.1701, -90.6758, -89.2791, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 11.5471, -93.4985, -91.6828, 1.08 ) }
    dend_26 { pt3dadd( 12.5684, -95.7322, -93.4626, 1.08 ) }
    dend_26 { pt3dadd( 12.9524, -96.6277, -94.1413, 1.08 ) }
    dend_26 { pt3dadd( 13.8185, -98.9884, -95.8471, 0.6 ) }
    dend_26 { pt3dadd( 14.4404, -101.059, -97.2362, 1.32 ) }
    dend_26 { pt3dadd( 14.886, -103.013, -98.4064, 1.32 ) }
    dend_26 { pt3dadd( 15.3161, -105.328, -99.7502, 0.72 ) }
    dend_26 { pt3dadd( 15.4863, -106.284, -100.326, 0.72 ) }
    dend_26 { pt3dadd( 15.9316, -108.379, -101.567, 1.2 ) }
    dend_26 { pt3dadd( 16.4132, -110.152, -102.574, 0.48 ) }
    dend_26 { pt3dadd( 16.9247, -111.748, -103.485, 1.08 ) }
    dend_26 { pt3dadd( 17.6389, -113.669, -104.665, 0.6 ) }
    dend_26 { pt3dadd( 18.7195, -116.35, -106.484, 1.2 ) }
    dend_26 { pt3dadd( 20.1206, -119.471, -108.553, 0.72 ) }
    dend_26 { pt3dadd( 21.3874, -121.933, -110.129, 1.32 ) }
    dend_26 { pt3dadd( 22.5617, -123.961, -111.388, 0.72 ) }
    dend_26 { pt3dadd( 23.719, -125.793, -112.443, 1.08 ) }
    dend_26 { pt3dadd( 24.9858, -127.748, -113.517, 0.48 ) }
    dend_26 { pt3dadd( 26.1661, -129.532, -114.487, 0.48 ) }
    dend_26 { pt3dadd( 27.2985, -131.321, -115.579, 1.32 ) }
    dend_26 { pt3dadd( 27.9619, -132.491, -116.268, 1.32 ) }
    dend_26 { pt3dadd( 28.8497, -134.387, -117.281, 0.72 ) }
    dend_26 { pt3dadd( 29.2645, -136.012, -118.125, 1.32 ) }
    dend_26 { pt3dadd( 29.0348, -137.829, -119.341, 0.6 ) }
    dend_26 { pt3dadd( 28.1839, -139.321, -120.712, 1.56 ) }
    dend_26 { pt3dadd( 27.4316, -140.104, -121.58, 1.56 ) }
    dend_26 { pt3dadd( 26.3577, -140.965, -122.665, 0.72 ) }
    dend_26 { pt3dadd( 23.9809, -142.525, -124.896, 1.68 ) }
    dend_26 { pt3dadd( 20.9805, -144.337, -127.748, 1.2 ) }
    dend_26 { pt3dadd( 19.6663, -145.135, -129.104, 1.56 ) }
    dend_26 { pt3dadd( 18.2186, -146.124, -130.811, 0.96 ) }
    dend_26 { pt3dadd( 17.1364, -147.043, -132.331, 0.96 ) }
    dend_26 { pt3dadd( 16.4111, -147.929, -133.675, 1.56 ) }
    dend_26 { pt3dadd( 15.6782, -149.305, -135.517, 1.56 ) }
    dend_26 { pt3dadd( 15.0576, -150.935, -137.232, 1.2 ) }
    dend_26 { pt3dadd( 14.6574, -152.18, -138.358, 1.2 ) }
    dend_26 { pt3dadd( 13.9338, -154.417, -140.213, 1.68 ) }
    dend_26 { pt3dadd( 12.8621, -157.683, -142.709, 0.96 ) }
    dend_26 { pt3dadd( 12.2685, -159.461, -143.914, 0.96 ) }
    dend_26 { pt3dadd( 10.9014, -163.479, -146.371, 0.48 ) }
    dend_26 { pt3dadd( 10.3883, -165.044, -147.257, 1.56 ) }
    dend_26 { pt3dadd( 9.14416, -169.226, -149.535, 0.96 ) }
    dend_26 { pt3dadd( 8.92451, -170.069, -149.972, 0.96 ) }
    dend_26 { pt3dadd( 8.33119, -173.275, -151.462, 1.44 ) }
    dend_26 { pt3dadd( 8.19023, -175.269, -152.422, 1.08 ) }
    dend_26 { pt3dadd( 8.35394, -178.086, -153.922, 0.72 ) }
    dend_26 { pt3dadd( 8.66984, -180.169, -155.026, 0.72 ) }
    dend_26 { pt3dadd( 8.9553, -181.319, -155.601, 0.72 ) }
    dend_26 { pt3dadd( 9.68114, -183.891, -156.903, 1.32 ) }
    dend_26 { pt3dadd( 10.5089, -186.483, -158.282, 0.72 ) }
    dend_26 { pt3dadd( 10.9883, -188.014, -159.124, 0.72 ) }
    dend_26 { pt3dadd( 11.2568, -188.786, -159.451, 0.72 ) }
    dend_26 { pt3dadd( 11.6316, -189.781, -159.778, 0.72 ) }
    dend_26 { pt3dadd( 12.5431, -192.046, -160.41, 1.2 ) }
    dend_26 { pt3dadd( 13.5638, -194.463, -160.986, 0.6 ) }
    dend_26 { pt3dadd( 14.5186, -196.625, -161.364, 1.2 ) }
    dend_26 { pt3dadd( 16.9986, -201.963, -162.056, 0.72 ) }
    dend_26 { pt3dadd( 18.1379, -204.261, -162.317, 0.72 ) }
    dend_26 { pt3dadd( 19.1949, -206.247, -162.55, 1.32 ) }
    dend_26 { pt3dadd( 20.2605, -208.154, -162.808, 0.6 ) }
    dend_26 { pt3dadd( 21.6889, -210.738, -163.236, 1.2 ) }
    dend_26 { pt3dadd( 23.1573, -213.486, -163.792, 0.72 ) }
    dend_26 { pt3dadd( 24.1721, -215.557, -164.366, 0.72 ) }
    dend_26 { pt3dadd( 25.288, -217.945, -164.936, 1.2 ) }
    dend_26 { pt3dadd( 26.2361, -220.048, -165.385, 0.6 ) }
    dend_26 { pt3dadd( 26.9219, -221.594, -165.685, 1.2 ) }
    dend_26 { pt3dadd( 28.2026, -224.489, -166.201, 0.48 ) }
    dend_26 { pt3dadd( 29.1265, -226.64, -166.584, 1.44 ) }
    dend_26 { pt3dadd( 30.1479, -229.229, -166.918, 0.96 ) }
    dend_26 { pt3dadd( 30.5836, -230.437, -166.995, 0.96 ) }
    dend_26 { pt3dadd( 30.7928, -231.097, -167.033, 0.96 ) }
    dend_26 { pt3dadd( 31.1435, -232.448, -167.17, 0.96 ) }
    dend_26 { pt3dadd( 31.4557, -234.333, -167.515, 0.96 ) }
    dend_26 { pt3dadd( 31.6701, -236.6, -168.1, 1.68 ) }
    dend_26 { pt3dadd( 31.875, -239.779, -168.79, 0.96 ) }
    dend_26 { pt3dadd( 32.0195, -242.092, -169.203, 1.32 ) }
    dend_26 { pt3dadd( 32.2059, -244.786, -169.563, 0.72 ) }
    dend_26 { pt3dadd( 32.4318, -247.204, -169.787, 0.72 ) }
    dend_26 { pt3dadd( 32.7165, -249.313, -169.918, 1.2 ) }
    dend_26 { pt3dadd( 33.6841, -254.346, -170.131, 0.6 ) }
    dend_26 { pt3dadd( 34.0768, -255.985, -170.151, 0.96 ) }
    dend_26 { pt3dadd( 34.8385, -258.467, -170.039, 0.6 ) }
    dend_26 { pt3dadd( 35.505, -260.432, -169.871, 1.32 ) }
    dend_26 { pt3dadd( 35.9285, -261.681, -169.735, 1.32 ) }
    dend_26 { pt3dadd( 36.2108, -262.62, -169.634, 1.32 ) }
    dend_26 { pt3dadd( 36.517, -263.973, -169.571, 1.32 ) }
    dend_26 { pt3dadd( 36.8542, -265.957, -169.392, 0.96 ) }
    dend_26 { pt3dadd( 37.1516, -268.739, -169.156, 1.44 ) }
    dend_26 { pt3dadd( 37.2644, -270.578, -168.94, 1.44 ) }
    dend_26 { pt3dadd( 37.3176, -272.598, -168.65, 0.72 ) }
    dend_26 { pt3dadd( 37.315, -274.577, -168.307, 1.2 ) }
    dend_26 { pt3dadd( 37.2466, -277.03, -167.846, 0.48 ) }
    dend_26 { pt3dadd( 37.01, -279.367, -167.369, 1.08 ) }
    dend_26 { pt3dadd( 36.7419, -281.707, -166.85, 0.6 ) }
    dend_26 { pt3dadd( 36.5049, -283.48, -166.455, 1.2 ) }
    dend_26 { pt3dadd( 36.1599, -285.652, -165.951, 0.6 ) }
    dend_26 { pt3dadd( 35.9586, -286.735, -165.682, 0.6 ) }
    dend_26 { pt3dadd( 35.4592, -289.103, -165.035, 1.2 ) }
    dend_26 { pt3dadd( 35.022, -291.161, -164.342, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.87733, -84.8923, -84.4276, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( 8.17159, -86.1402, -85.6141, 0.96 ) }
    dend_15 { pt3dadd( 9.46639, -87.3886, -86.8012, 0.96 ) }
    dend_15 { pt3dadd( 11.0221, -88.8887, -88.2274, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -24.754, -8.94632, 6.60819, 1.32 ) }
    dend_5 { pt3dadd( -26.4171, -8.51758, 7.58241, 1.32 ) }
    dend_5 { pt3dadd( -28.1597, -8.06831, 8.60328, 1.32 ) }
    dend_5 { pt3dadd( -30.0437, -7.5826, 9.70697, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -24.754, -8.94632, 6.60819, 0.96 ) }
    dend_2 { pt3dadd( -25.8588, -11.2851, 7.11092, 0.96 ) }
    dend_2 { pt3dadd( -26.2404, -11.9024, 7.32617, 1.44 ) }
    dend_2 { pt3dadd( -26.8785, -12.7109, 7.72426, 1.44 ) }
    dend_2 { pt3dadd( -27.3864, -13.2866, 8.06723, 1.44 ) }
    dend_2 { pt3dadd( -28.0352, -14.0043, 8.52191, 1.44 ) }
    dend_2 { pt3dadd( -29.4741, -15.6116, 9.57948, 1.68 ) }
    dend_2 { pt3dadd( -30.5437, -16.7067, 10.4636, 1.2 ) }
    dend_2 { pt3dadd( -31.5489, -17.753, 11.3564, 1.2 ) }
    dend_2 { pt3dadd( -31.9578, -18.1817, 11.7508, 1.2 ) }
    dend_2 { pt3dadd( -32.4219, -18.7129, 12.2147, 1.2 ) }
    dend_2 { pt3dadd( -32.8626, -19.2825, 12.6676, 1.2 ) }
    dend_2 { pt3dadd( -33.0708, -19.6641, 12.8925, 1.2 ) }
    dend_2 { pt3dadd( -33.2615, -20.174, 13.1504, 1.2 ) }
    dend_2 { pt3dadd( -33.4566, -20.8137, 13.4459, 1.2 ) }
    dend_2 { pt3dadd( -33.9481, -22.3209, 14.1309, 1.56 ) }
    dend_2 { pt3dadd( -34.3478, -23.2476, 14.5613, 1.08 ) }
    dend_2 { pt3dadd( -34.7717, -24.032, 14.9226, 1.08 ) }
    dend_2 { pt3dadd( -35.2073, -24.6418, 15.2544, 1.08 ) }
    dend_2 { pt3dadd( -35.7576, -25.3469, 15.6492, 1.08 ) }
    dend_2 { pt3dadd( -36.12, -25.7676, 15.8861, 1.08 ) }
    dend_2 { pt3dadd( -37.1991, -26.7929, 16.5663, 1.08 ) }
    dend_2 { pt3dadd( -37.5664, -27.0602, 16.7554, 1.08 ) }
    dend_2 { pt3dadd( -39.0026, -27.8176, 17.4075, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -23.9824, -82.9575, -77.7005, 1.08 ) }
    dend_46 { pt3dadd( -23.3531, -84.7528, -77.9153, 1.08 ) }
    dend_46 { pt3dadd( -22.6221, -86.8383, -78.1648, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -23.9824, -82.9575, -77.7005, 0.84 ) }
    dend_45 { pt3dadd( -25.7061, -84.21, -78.1255, 0.84 ) }
    dend_45 { pt3dadd( -27.5112, -85.5158, -79.1104, 1.44 ) }
    dend_45 { pt3dadd( -29.3116, -86.8182, -80.0928, 0.6 ) }
    dend_45 { pt3dadd( -30.8401, -87.9239, -80.9268, 1.08 ) }
    dend_45 { pt3dadd( -33.7005, -89.993, -82.4876, 0.48 ) }
    dend_45 { pt3dadd( -36.0782, -91.7131, -83.785, 1.56 ) }
    dend_45 { pt3dadd( -39.3624, -94.0292, -86.0838, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 50.1411, -43.2654, -6.75852, 0.84 ) }
    dend_40 { pt3dadd( 50.5752, -45.1812, -6.59351, 0.84 ) }
    dend_40 { pt3dadd( 50.8987, -46.6472, -6.4616, 1.44 ) }
    dend_40 { pt3dadd( 51.8324, -50.7131, -6.10237, 0.48 ) }
    dend_40 { pt3dadd( 52.6044, -54.0748, -5.80534, 0.48 ) }
    dend_40 { pt3dadd( 53.1271, -56.351, -5.60423, 1.44 ) }
    dend_40 { pt3dadd( 53.8702, -59.5871, -5.3183, 0.6 ) }
    dend_40 { pt3dadd( 54.2158, -60.996, -5.20917, 0.6 ) }
    dend_40 { pt3dadd( 54.695, -62.8898, -5.04807, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 50.1411, -43.2654, -6.75852, 0.6 ) }
    dend_37 { pt3dadd( 51.311, -43.8944, -6.52614, 0.6 ) }
    dend_37 { pt3dadd( 52.7217, -44.5892, -6.18024, 1.2 ) }
    dend_37 { pt3dadd( 53.1739, -44.821, -6.05431, 1.2 ) }
    dend_37 { pt3dadd( 53.9999, -45.2752, -5.80962, 0.6 ) }
    dend_37 { pt3dadd( 56.2247, -46.5975, -5.091, 1.68 ) }
    dend_37 { pt3dadd( 57.0683, -47.116, -4.79554, 1.68 ) }
    dend_37 { pt3dadd( 58.4498, -47.9749, -4.27822, 0.84 ) }
    dend_37 { pt3dadd( 59.7018, -48.714, -3.78415, 0.84 ) }
    dend_37 { pt3dadd( 60.9885, -49.4478, -3.258, 1.44 ) }
    dend_37 { pt3dadd( 62.5463, -50.3459, -2.59538, 0.84 ) }
    dend_37 { pt3dadd( 64.3877, -51.4668, -1.78339, 1.56 ) }
    dend_37 { pt3dadd( 66.5128, -52.7635, -0.832028, 1.08 ) }
    dend_37 { pt3dadd( 67.8568, -53.5625, -0.235479, 1.56 ) }
    dend_37 { pt3dadd( 69.6436, -54.5622, 0.559699, 2.04 ) }
    dend_37 { pt3dadd( 71.4912, -55.5382, 1.39038, 1.2 ) }
    dend_37 { pt3dadd( 73.0266, -56.3142, 2.07648, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -29.9948, -74.1195, 0.371459, 0.48 ) }
    dend_31 { pt3dadd( -30.2696, -75.8979, 0.941697, 0.48 ) }
    dend_31 { pt3dadd( -30.4452, -77.6812, 1.43456, 1.56 ) }
    dend_31 { pt3dadd( -30.5922, -80.8203, 2.16459, 0.6 ) }
    dend_31 { pt3dadd( -30.5204, -82.8303, 2.58121, 1.8 ) }
    dend_31 { pt3dadd( -30.3426, -85.0157, 2.97688, 0.6 ) }
    dend_31 { pt3dadd( -30.2101, -86.2018, 3.16965, 0.6 ) }
    dend_31 { pt3dadd( -29.9676, -87.6244, 3.34733, 0.6 ) }
    dend_31 { pt3dadd( -29.5962, -89.2671, 3.53963, 1.56 ) }
    dend_31 { pt3dadd( -28.8082, -91.8117, 3.77922, 0.48 ) }
    dend_31 { pt3dadd( -28.1875, -93.554, 3.97483, 0.48 ) }
    dend_31 { pt3dadd( -27.8747, -94.3777, 4.08256, 0.48 ) }
    dend_31 { pt3dadd( -27.257, -96.002, 4.33852, 1.68 ) }
    dend_31 { pt3dadd( -26.3941, -98.3194, 4.78984, 1.08 ) }
    dend_31 { pt3dadd( -25.8466, -99.7773, 5.15166, 1.08 ) }
    dend_31 { pt3dadd( -23.1348, -109.096, 5.90747, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -29.9948, -74.1195, 0.371459, 0.72 ) }
    dend_30 { pt3dadd( -31.9591, -74.9218, -0.681433, 0.72 ) }
    dend_30 { pt3dadd( -33.0791, -75.4192, -1.35118, 1.56 ) }
    dend_30 { pt3dadd( -34.128, -75.9565, -2.00012, 0.72 ) }
    dend_30 { pt3dadd( -35.6732, -76.839, -3.01315, 1.32 ) }
    dend_30 { pt3dadd( -37.4293, -77.9439, -3.95507, 0.72 ) }
    dend_30 { pt3dadd( -38.8197, -78.8989, -4.59009, 1.56 ) }
    dend_30 { pt3dadd( -40.5238, -80.3177, -5.31073, 0.84 ) }
    dend_30 { pt3dadd( -41.4042, -81.1694, -5.61756, 0.84 ) }
    dend_30 { pt3dadd( -42.8932, -82.8646, -6.01596, 1.92 ) }
    dend_30 { pt3dadd( -45.2242, -85.9686, -6.33173, 0.96 ) }
    dend_30 { pt3dadd( -46.1021, -87.25, -6.35744, 0.96 ) }
    dend_30 { pt3dadd( -47.7814, -89.9024, -6.23459, 0.72 ) }
    dend_30 { pt3dadd( -48.2991, -90.7888, -6.14946, 1.32 ) }
    dend_30 { pt3dadd( -49.2283, -92.449, -5.95664, 0.84 ) }
    dend_30 { pt3dadd( -49.9802, -94.0529, -5.73222, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -57.7214, -100.67, -7.83838, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.0221, -88.8887, -88.2274, 0.96 ) }
    dend_23 { pt3dadd( 9.72634, -90.6821, -90.3779, 0.96 ) }
    dend_23 { pt3dadd( 8.58697, -92.4923, -92.4837, 0.96 ) }
    dend_23 { pt3dadd( 8.14948, -93.2243, -93.3013, 0.96 ) }
    dend_23 { pt3dadd( 7.70333, -93.996, -94.1293, 0.96 ) }
    dend_23 { pt3dadd( 7.0196, -95.2232, -95.3584, 0.96 ) }
    dend_23 { pt3dadd( 6.6683, -95.8675, -95.9709, 0.96 ) }
    dend_23 { pt3dadd( 6.51888, -96.242, -96.2887, 0.96 ) }
    dend_23 { pt3dadd( 6.18134, -97.0397, -96.8586, 0.96 ) }
    dend_23 { pt3dadd( 5.97027, -97.4041, -97.1362, 0.96 ) }
    dend_23 { pt3dadd( 5.32, -98.2577, -97.9072, 0.96 ) }
    dend_23 { pt3dadd( 4.80605, -98.7498, -98.498, 0.96 ) }
    dend_23 { pt3dadd( 3.97963, -99.4195, -99.532, 0.6 ) }
    dend_23 { pt3dadd( 2.85105, -100.235, -101.04, 1.56 ) }
    dend_23 { pt3dadd( 1.35524, -101.2, -103.134, 0.96 ) }
    dend_23 { pt3dadd( 0.452135, -101.714, -104.406, 0.96 ) }
    dend_23 { pt3dadd( -1.31159, -102.645, -106.852, 0.72 ) }
    dend_23 { pt3dadd( -3.11552, -103.635, -109.338, 1.2 ) }
    dend_23 { pt3dadd( -4.49091, -104.421, -111.198, 0.72 ) }
    dend_23 { pt3dadd( -5.98822, -105.368, -113.194, 1.2 ) }
    dend_23 { pt3dadd( -7.74644, -106.612, -115.478, 0.72 ) }
    dend_23 { pt3dadd( -8.58381, -107.288, -116.575, 0.72 ) }
    dend_23 { pt3dadd( -10.6781, -109.249, -119.331, 1.2 ) }
    dend_23 { pt3dadd( -12.0324, -110.667, -121.035, 1.2 ) }
    dend_23 { pt3dadd( -13.5874, -112.427, -122.95, 0.72 ) }
    dend_23 { pt3dadd( -14.1571, -113.127, -123.645, 0.72 ) }
    dend_23 { pt3dadd( -15.3773, -114.689, -125.112, 1.32 ) }
    dend_23 { pt3dadd( -16.2355, -115.82, -126.171, 1.32 ) }
    dend_23 { pt3dadd( -17.554, -117.53, -127.772, 0.6 ) }
    dend_23 { pt3dadd( -18.5187, -118.734, -128.943, 1.08 ) }
    dend_23 { pt3dadd( -20.8729, -121.273, -131.795, 0.6 ) }
    dend_23 { pt3dadd( -22.0567, -122.386, -133.212, 1.2 ) }
    dend_23 { pt3dadd( -23.2551, -123.364, -134.522, 0.6 ) }
    dend_23 { pt3dadd( -24.5147, -124.206, -135.847, 1.2 ) }
    dend_23 { pt3dadd( -25.7941, -124.909, -137.196, 0.48 ) }
    dend_23 { pt3dadd( -28.3758, -126.19, -139.831, 1.44 ) }
    dend_23 { pt3dadd( -28.9862, -126.474, -140.441, 1.44 ) }
    dend_23 { pt3dadd( -30.9039, -127.42, -142.316, 0.72 ) }
    dend_23 { pt3dadd( -33.261, -128.739, -144.565, 1.56 ) }
    dend_23 { pt3dadd( -36.3152, -130.826, -147.442, 0.84 ) }
    dend_23 { pt3dadd( -37.2724, -131.657, -148.301, 0.84 ) }
    dend_23 { pt3dadd( -39.0776, -133.628, -150.088, 1.56 ) }
    dend_23 { pt3dadd( -40.0118, -134.834, -151.176, 1.56 ) }
    dend_23 { pt3dadd( -41.3893, -136.963, -153.151, 0.72 ) }
    dend_23 { pt3dadd( -42.5374, -139.057, -155.343, 1.2 ) }
    dend_23 { pt3dadd( -43.787, -141.565, -157.961, 0.72 ) }
    dend_23 { pt3dadd( -45.3659, -144.84, -161.634, 1.56 ) }
    dend_23 { pt3dadd( -46.1461, -146.559, -163.747, 1.08 ) }
    dend_23 { pt3dadd( -46.8025, -148.145, -165.975, 1.56 ) }
    dend_23 { pt3dadd( -48.0428, -151.544, -171.847, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 11.0221, -88.8887, -88.2274, 0.48 ) }
    dend_16 { pt3dadd( 12.6628, -90.8605, -88.6701, 0.48 ) }
    dend_16 { pt3dadd( 13.3905, -91.7637, -88.8444, 0.48 ) }
    dend_16 { pt3dadd( 14.5812, -93.2415, -89.1296, 1.56 ) }
    dend_16 { pt3dadd( 15.534, -94.424, -89.3578, 0.36 ) }
    dend_16 { pt3dadd( 15.8614, -94.8304, -89.4362, 0.36 ) }
    dend_16 { pt3dadd( 17.0522, -96.3082, -89.7214, 1.32 ) }
    dend_16 { pt3dadd( 17.7974, -97.2693, -89.7714, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -30.0437, -7.5826, 9.70697, 1.44 ) }
    dend_9 { pt3dadd( -30.7257, -6.64999, 13.6474, 1.44 ) }
    dend_9 { pt3dadd( -31.5664, -6.08274, 16.8519, 1.2 ) }
    dend_9 { pt3dadd( -32.0598, -5.77853, 18.4055, 1.2 ) }
    dend_9 { pt3dadd( -32.4948, -5.51033, 19.7752, 0.84 ) }
    dend_9 { pt3dadd( -32.7079, -5.37893, 20.4462, 0.84 ) }
    dend_9 { pt3dadd( -33.1765, -5.08995, 21.922, 1.2 ) }
    dend_9 { pt3dadd( -34.4821, -4.70437, 24.5165, 1.08 ) }
    dend_9 { pt3dadd( -35.3869, -4.60133, 25.7369, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -30.0437, -7.5826, 9.70697, 1.92 ) }
    dend_6 { pt3dadd( -31.8441, -6.66278, 11.2844, 1.92 ) }
    dend_6 { pt3dadd( -32.9115, -6.09369, 12.0719, 1.92 ) }
    dend_6 { pt3dadd( -34.5764, -5.05854, 13.1773, 1.56 ) }
    dend_6 { pt3dadd( -35.9578, -4.10734, 14.041, 1.32 ) }
    dend_6 { pt3dadd( -37.2441, -3.08875, 14.8487, 1.8 ) }
    dend_6 { pt3dadd( -38.6636, -1.86204, 15.7298, 1.2 ) }
    dend_6 { pt3dadd( -39.7937, -0.714412, 16.3605, 1.2 ) }
    dend_6 { pt3dadd( -41.3395, 0.975091, 17.216, 0.96 ) }
    dend_6 { pt3dadd( -42.0587, 1.80651, 17.5861, 0.96 ) }
    dend_6 { pt3dadd( -43.2654, 3.20171, 18.1239, 1.32 ) }
    dend_6 { pt3dadd( -44.4194, 4.42565, 18.6021, 1.32 ) }
    dend_6 { pt3dadd( -45.2575, 5.16093, 18.8861, 1.32 ) }
    dend_6 { pt3dadd( -46.2813, 5.84714, 19.147, 0.96 ) }
    dend_6 { pt3dadd( -47.0567, 6.1993, 19.273, 0.96 ) }
    dend_6 { pt3dadd( -48.3343, 6.65478, 19.5607, 0.96 ) }
    dend_6 { pt3dadd( -49.7314, 7.01417, 19.8222, 0.96 ) }
    dend_6 { pt3dadd( -51.9357, 7.4615, 20.1989, 1.44 ) }
    dend_6 { pt3dadd( -53.0677, 7.66306, 20.3875, 1.44 ) }
    dend_6 { pt3dadd( -53.9522, 7.85852, 20.5519, 1.44 ) }
    dend_6 { pt3dadd( -56.7671, 8.71687, 21.3783, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -39.0026, -27.8176, 17.4075, 0.96 ) }
    dend_4 { pt3dadd( -39.9007, -27.6061, 18.2569, 0.96 ) }
    dend_4 { pt3dadd( -41.1514, -27.2283, 19.4702, 0.96 ) }
    dend_4 { pt3dadd( -42.286, -26.8574, 20.5652, 0.96 ) }
    dend_4 { pt3dadd( -44.2682, -26.1729, 22.423, 0.6 ) }
    dend_4 { pt3dadd( -46.099, -25.5365, 24.0666, 1.2 ) }
    dend_4 { pt3dadd( -49.1328, -24.3497, 26.7475, 0.72 ) }
    dend_4 { pt3dadd( -49.7032, -24.0627, 27.2907, 0.72 ) }
    dend_4 { pt3dadd( -49.9824, -23.9017, 27.5623, 0.72 ) }
    dend_4 { pt3dadd( -50.6189, -23.4779, 28.1804, 0.72 ) }
    dend_4 { pt3dadd( -51.118, -23.038, 28.6825, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -52.4622, -21.557, 30.1758, 1.2 ) }
    dend_4 { pt3dadd( -54.2361, -19.3962, 31.9604, 0.84 ) }
    dend_4 { pt3dadd( -63.6221, -16.0079, 37.7403, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -39.0026, -27.8176, 17.4075, 0.84 ) }
    dend_3 { pt3dadd( -40.2405, -28.4189, 17.3344, 0.84 ) }
    dend_3 { pt3dadd( -41.1776, -28.7783, 17.3043, 0.84 ) }
    dend_3 { pt3dadd( -42.5766, -29.3144, 17.2729, 0.6 ) }
    dend_3 { pt3dadd( -43.5305, -29.6523, 17.263, 0.6 ) }
    dend_3 { pt3dadd( -44.8862, -30.0764, 17.2624, 0.6 ) }
    dend_3 { pt3dadd( -46.34, -30.478, 17.2745, 0.6 ) }
    dend_3 { pt3dadd( -47.7037, -30.7459, 17.2747, 0.6 ) }
    dend_3 { pt3dadd( -48.7919, -30.9216, 17.3034, 0.6 ) }
    dend_3 { pt3dadd( -49.9385, -31.0839, 17.3871, 0.6 ) }
    dend_3 { pt3dadd( -50.5791, -31.1581, 17.4407, 0.6 ) }
    dend_3 { pt3dadd( -51.3464, -31.2358, 17.5109, 0.6 ) }
    dend_3 { pt3dadd( -51.8125, -31.2485, 17.5526, 1.08 ) }
    dend_3 { pt3dadd( -53.38, -31.2053, 17.7042, 0.72 ) }
    dend_3 { pt3dadd( -55.0922, -31.093, 17.8783, 0.72 ) }
    dend_3 { pt3dadd( -56.4318, -31.0104, 18.0148, 0.72 ) }
    dend_3 { pt3dadd( -57.0685, -30.9751, 18.0793, 0.72 ) }
    dend_3 { pt3dadd( -58.7172, -30.8002, 18.2553, 1.08 ) }
    dend_3 { pt3dadd( -69.1918, -32.9218, 17.1313, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 73.0266, -56.3142, 2.07648, 0.72 ) }
    dend_39 { pt3dadd( 73.3621, -60.6131, 1.11121, 0.72 ) }
    dend_39 { pt3dadd( 73.5674, -63.2436, 0.52055, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 73.0266, -56.3142, 2.07648, 0.96 ) }
    dend_38 { pt3dadd( 74.5967, -57.4952, 2.55883, 0.96 ) }
    dend_38 { pt3dadd( 76.2029, -58.7507, 3.15087, 0.96 ) }
    dend_38 { pt3dadd( 78.0349, -60.2393, 3.87676, 1.56 ) }
    dend_38 { pt3dadd( 80.2291, -62.0266, 4.71972, 0.84 ) }
    dend_38 { pt3dadd( 82.1985, -63.6633, 5.44212, 1.32 ) }
    dend_38 { pt3dadd( 84.7211, -65.8541, 6.5033, 0.6 ) }
    dend_38 { pt3dadd( 86.1905, -67.1821, 7.2091, 1.32 ) }
    dend_38 { pt3dadd( 88.202, -69.0211, 8.22963, 0.72 ) }
    dend_38 { pt3dadd( 89.9759, -70.6203, 9.12865, 0.72 ) }
    dend_38 { pt3dadd( 91.306, -71.7307, 9.80858, 1.68 ) }
    dend_38 { pt3dadd( 94.8002, -74.3141, 11.5669, 0.72 ) }
    dend_38 { pt3dadd( 96.9389, -75.6084, 12.6141, 0.72 ) }
    dend_38 { pt3dadd( 98.2217, -76.2061, 13.2454, 0.72 ) }
    dend_38 { pt3dadd( 99.5446, -76.5867, 13.9379, 0.72 ) }
    dend_38 { pt3dadd( 101.577, -76.8389, 14.9955, 1.08 ) }
    dend_38 { pt3dadd( 103.085, -76.8342, 15.7423, 0.48 ) }
    dend_38 { pt3dadd( 104.811, -76.5475, 16.4621, 0.96 ) }
    dend_38 { pt3dadd( 106.209, -76.1597, 17.1016, 0.96 ) }
    dend_38 { pt3dadd( 107.91, -75.574, 17.9651, 0.72 ) }
    dend_38 { pt3dadd( 109.896, -74.7881, 19.0578, 0.48 ) }
    dend_38 { pt3dadd( 118.283, -78.9819, 23.594, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -48.0428, -151.544, -171.847, 0.84 ) }
    dend_25 { pt3dadd( -50.1884, -152.511, -170.639, 0.84 ) }
    dend_25 { pt3dadd( -52.4623, -153.469, -169.546, 0.84 ) }
    dend_25 { pt3dadd( -57.532, -155.637, -167.538, 1.32 ) }
    dend_25 { pt3dadd( -61.8947, -157.617, -165.987, 0.84 ) }
    dend_25 { pt3dadd( -63.266, -158.29, -165.582, 0.84 ) }
    dend_25 { pt3dadd( -65.8427, -159.643, -164.93, 1.44 ) }
    dend_25 { pt3dadd( -69.4518, -161.835, -164.233, 0.96 ) }
    dend_25 { pt3dadd( -71.5785, -163.435, -164.102, 0.96 ) }
    dend_25 { pt3dadd( -72.9588, -164.781, -164.451, 1.44 ) }
    dend_25 { pt3dadd( -74.5966, -166.929, -165.365, 0.96 ) }
    dend_25 { pt3dadd( -75.0325, -167.647, -165.699, 0.96 ) }
    dend_25 { pt3dadd( -76.1989, -170.048, -166.907, 1.44 ) }
    dend_25 { pt3dadd( -77.1765, -172.363, -168.077, 1.08 ) }
    dend_25 { pt3dadd( -78.3893, -175.011, -169.438, 1.44 ) }
    dend_25 { pt3dadd( -79.7621, -177.656, -170.647, 0.84 ) }
    dend_25 { pt3dadd( -80.6131, -179.057, -171.084, 0.84 ) }
    dend_25 { pt3dadd( -81.1088, -179.809, -171.296, 0.84 ) }
    dend_25 { pt3dadd( -83.3061, -182.729, -171.908, 1.2 ) }
    dend_25 { pt3dadd( -84.4451, -184.009, -171.973, 1.2 ) }
    dend_25 { pt3dadd( -87.6828, -186.839, -171.184, 0.84 ) }
    dend_25 { pt3dadd( -90.3696, -188.613, -169.742, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -48.0428, -151.544, -171.847, 0.72 ) }
    dend_24 { pt3dadd( -48.9456, -152.809, -172.301, 0.72 ) }
    dend_24 { pt3dadd( -50.7912, -155.186, -173.458, 1.2 ) }
    dend_24 { pt3dadd( -51.8769, -156.473, -174.23, 0.84 ) }
    dend_24 { pt3dadd( -53.1021, -157.823, -175.175, 1.32 ) }
    dend_24 { pt3dadd( -54.8199, -159.609, -176.52, 0.72 ) }
    dend_24 { pt3dadd( -56.0114, -160.799, -177.47, 1.32 ) }
    dend_24 { pt3dadd( -57.9452, -162.601, -179.114, 0.84 ) }
    dend_24 { pt3dadd( -59.6957, -164.097, -180.671, 1.32 ) }
    dend_24 { pt3dadd( -61.432, -165.53, -182.252, 0.84 ) }
    dend_24 { pt3dadd( -62.3384, -166.257, -183.074, 0.84 ) }
    dend_24 { pt3dadd( -64.0421, -167.626, -184.634, 1.44 ) }
    dend_24 { pt3dadd( -64.6711, -168.161, -185.219, 1.44 ) }
    dend_24 { pt3dadd( -66.3682, -169.785, -186.877, 0.96 ) }
    dend_24 { pt3dadd( -68.4658, -172.049, -189.038, 1.44 ) }
    dend_24 { pt3dadd( -70.3322, -174.27, -191.02, 0.84 ) }
    dend_24 { pt3dadd( -70.9901, -175.099, -191.732, 1.32 ) }
    dend_24 { pt3dadd( -72.083, -176.508, -192.852, 0.84 ) }
    dend_24 { pt3dadd( -74.1491, -179.113, -194.683, 1.32 ) }
    dend_24 { pt3dadd( -75.4846, -180.767, -195.771, 0.84 ) }
    dend_24 { pt3dadd( -77.271, -182.867, -197.15, 1.44 ) }
    dend_24 { pt3dadd( -78.1627, -183.883, -197.844, 0.72 ) }
    dend_24 { pt3dadd( -80.0106, -185.912, -199.428, 1.32 ) }
    dend_24 { pt3dadd( -82.2357, -188.221, -201.301, 0.6 ) }
    dend_24 { pt3dadd( -84.3106, -190.257, -203.047, 1.08 ) }
    dend_24 { pt3dadd( -86.4834, -192.332, -204.951, 0.48 ) }
    dend_24 { pt3dadd( -88.8042, -194.562, -207.202, 1.44 ) }
    dend_24 { pt3dadd( -90.7298, -196.483, -209.349, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 17.7974, -97.2693, -89.7714, 0.84 ) }
    dend_22 { pt3dadd( 16.8711, -97.6781, -91.498, 0.84 ) }
    dend_22 { pt3dadd( 16.0086, -97.9976, -93.2431, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 15.4252, -98.2271, -94.5077, 0.72 ) }
    dend_22 { pt3dadd( 15.0272, -98.3839, -95.4146, 0.72 ) }
    dend_22 { pt3dadd( 14.2729, -98.6728, -97.2141, 0.72 ) }
    dend_22 { pt3dadd( 13.6396, -98.9175, -98.7348, 0.72 ) }
    dend_22 { pt3dadd( 13.2913, -99.0465, -99.5988, 0.72 ) }
    dend_22 { pt3dadd( 12.881, -99.2274, -100.747, 0.72 ) }
    dend_22 { pt3dadd( 12.409, -99.4835, -102.073, 1.08 ) }
    dend_22 { pt3dadd( 11.9392, -99.7363, -103.3, 1.08 ) }
    dend_22 { pt3dadd( 11.7019, -99.8813, -103.85, 1.08 ) }
    dend_22 { pt3dadd( 11.1993, -100.204, -104.957, 0.6 ) }
    dend_22 { pt3dadd( 10.8244, -100.424, -105.793, 0.6 ) }
    dend_22 { pt3dadd( 9.92154, -100.85, -107.709, 1.08 ) }
    dend_22 { pt3dadd( 9.23841, -101.159, -109.194, 1.08 ) }
    dend_22 { pt3dadd( 8.20802, -101.535, -111.331, 0.6 ) }
    dend_22 { pt3dadd( 7.53667, -101.718, -112.678, 0.6 ) }
    dend_22 { pt3dadd( 6.26384, -101.986, -115.117, 1.56 ) }
    dend_22 { pt3dadd( 5.29627, -102.178, -116.915, 0.84 ) }
    dend_22 { pt3dadd( 4.46129, -102.352, -118.422, 1.44 ) }
    dend_22 { pt3dadd( 3.3278, -102.633, -120.406, 0.96 ) }
    dend_22 { pt3dadd( 2.39835, -102.892, -121.989, 1.56 ) }
    dend_22 { pt3dadd( 1.27343, -103.32, -123.888, 0.96 ) }
    dend_22 { pt3dadd( 0.68937, -103.609, -124.82, 0.96 ) }
    dend_22 { pt3dadd( -0.144444, -104.136, -126.207, 1.56 ) }
    dend_22 { pt3dadd( -0.593863, -104.478, -126.99, 1.56 ) }
    dend_22 { pt3dadd( -1.53483, -105.387, -128.813, 1.08 ) }
    dend_22 { pt3dadd( -2.40188, -106.328, -130.572, 1.68 ) }
    dend_22 { pt3dadd( -3.20057, -107.278, -132.254, 1.68 ) }
    dend_22 { pt3dadd( -4.03213, -108.374, -134.096, 0.96 ) }
    dend_22 { pt3dadd( -4.70211, -109.394, -135.671, 1.56 ) }
    dend_22 { pt3dadd( -5.28323, -110.354, -137.118, 0.96 ) }
    dend_22 { pt3dadd( -5.91251, -111.493, -138.713, 1.8 ) }
    dend_22 { pt3dadd( -6.71983, -113.073, -140.828, 1.2 ) }
    dend_22 { pt3dadd( -7.25752, -114.246, -142.327, 0.72 ) }
    dend_22 { pt3dadd( -7.92164, -115.822, -144.224, 1.2 ) }
    dend_22 { pt3dadd( -8.3857, -116.989, -145.57, 0.72 ) }
    dend_22 { pt3dadd( -8.87834, -118.415, -147.145, 0.72 ) }
    dend_22 { pt3dadd( -9.11217, -119.236, -148.024, 0.72 ) }
    dend_22 { pt3dadd( -9.40452, -120.489, -149.348, 1.2 ) }
    dend_22 { pt3dadd( -9.59496, -121.332, -150.234, 0.72 ) }
    dend_22 { pt3dadd( -9.8636, -122.676, -151.668, 1.2 ) }
    dend_22 { pt3dadd( -10.1301, -124.053, -153.154, 0.6 ) }
    dend_22 { pt3dadd( -10.3273, -124.883, -154.106, 1.2 ) }
    dend_22 { pt3dadd( -10.7852, -126.152, -155.639, 0.6 ) }
    dend_22 { pt3dadd( -11.1331, -126.894, -156.569, 0.6 ) }
    dend_22 { pt3dadd( -11.6917, -127.817, -157.83, 1.32 ) }
    dend_22 { pt3dadd( -13.0036, -129.657, -160.544, 0.72 ) }
    dend_22 { pt3dadd( -13.9668, -130.84, -162.408, 1.2 ) }
    dend_22 { pt3dadd( -15.1332, -132.172, -164.584, 0.72 ) }
    dend_22 { pt3dadd( -15.4545, -132.536, -165.177, 0.72 ) }
    dend_22 { pt3dadd( -16.5595, -133.84, -167.251, 1.32 ) }
    dend_22 { pt3dadd( -17.5116, -135.05, -169.142, 0.6 ) }
    dend_22 { pt3dadd( -18.3375, -136.168, -170.871, 1.32 ) }
    dend_22 { pt3dadd( -19.2667, -137.487, -172.969, 0.6 ) }
    dend_22 { pt3dadd( -20.5808, -139.435, -176.167, 0.6 ) }
    dend_22 { pt3dadd( -21.3418, -140.573, -178.079, 1.2 ) }
    dend_22 { pt3dadd( -22.8299, -142.822, -181.915, 0.72 ) }
    dend_22 { pt3dadd( -23.3504, -143.552, -183.256, 1.2 ) }
    dend_22 { pt3dadd( -24.2179, -144.736, -185.58, 1.08 ) }
    dend_22 { pt3dadd( -24.8566, -145.617, -187.416, 0.72 ) }
    dend_22 { pt3dadd( -25.3521, -146.331, -189.005, 0.72 ) }
    dend_22 { pt3dadd( -25.8739, -147.146, -190.76, 1.2 ) }
    dend_22 { pt3dadd( -26.4434, -148.082, -192.622, 0.6 ) }
    dend_22 { pt3dadd( -27.0577, -149.187, -194.675, 1.08 ) }
    dend_22 { pt3dadd( -27.5448, -150.097, -196.161, 0.6 ) }
    dend_22 { pt3dadd( -27.9985, -150.981, -197.482, 1.2 ) }
    dend_22 { pt3dadd( -28.9962, -152.988, -200.236, 0.6 ) }
    dend_22 { pt3dadd( -29.4657, -154.02, -201.521, 0.6 ) }
    dend_22 { pt3dadd( -29.6955, -154.682, -202.314, 1.2 ) }
    dend_22 { pt3dadd( -30.2069, -156.12, -204.0, 0.72 ) }
    dend_22 { pt3dadd( -30.5537, -157.099, -205.11, 1.2 ) }
    dend_22 { pt3dadd( -30.7766, -157.8, -205.884, 1.2 ) }
    dend_22 { pt3dadd( -30.9741, -159.024, -207.194, 1.2 ) }
    dend_22 { pt3dadd( -31.0188, -161.539, -209.877, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 17.7974, -97.2693, -89.7714, 0.72 ) }
    dend_17 { pt3dadd( 19.4248, -99.7278, -88.8065, 0.72 ) }
    dend_17 { pt3dadd( 20.3159, -101.176, -88.1603, 0.72 ) }
    dend_17 { pt3dadd( 21.0922, -102.514, -87.6395, 1.56 ) }
    dend_17 { pt3dadd( 21.9282, -104.022, -87.1369, 0.96 ) }
    dend_17 { pt3dadd( 23.3042, -106.531, -86.4318, 1.56 ) }
    dend_17 { pt3dadd( 24.4205, -108.554, -85.9566, 1.56 ) }
    dend_17 { pt3dadd( 25.4201, -110.404, -85.6735, 0.96 ) }
    dend_17 { pt3dadd( 26.6503, -112.819, -85.409, 1.2 ) }
    dend_17 { pt3dadd( 27.4815, -114.618, -85.3389, 1.2 ) }
    dend_17 { pt3dadd( 28.2192, -116.474, -85.441, 1.56 ) }
    dend_17 { pt3dadd( 28.8085, -118.025, -85.6669, 1.56 ) }
    dend_17 { pt3dadd( 29.4149, -119.683, -86.0156, 0.84 ) }
    dend_17 { pt3dadd( 30.0961, -121.561, -86.5095, 1.44 ) }
    dend_17 { pt3dadd( 30.8107, -123.749, -87.1116, 0.84 ) }
    dend_17 { pt3dadd( 31.3692, -125.739, -87.7112, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -35.3869, -4.60133, 25.7369, 0.72 ) }
    dend_13 { pt3dadd( -36.3348, -4.64443, 26.5834, 0.72 ) }
    dend_13 { pt3dadd( -37.7168, -4.82116, 27.6258, 1.2 ) }
    dend_13 { pt3dadd( -38.9602, -4.98016, 28.5636, 1.2 ) }
    dend_13 { pt3dadd( -39.8352, -5.09205, 29.2236, 0.96 ) }
    dend_13 { pt3dadd( -40.5836, -5.18776, 29.7881, 0.72 ) }
    dend_13 { pt3dadd( -41.916, -5.35814, 30.7931, 0.72 ) }
    dend_13 { pt3dadd( -42.9773, -5.57301, 31.5935, 1.2 ) }
    dend_13 { pt3dadd( -48.6203, -5.80246, 36.4485, 1.2 ) }
    dend_13 { pt3dadd( -55.3344, -6.19992, 39.6468, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -35.3869, -4.60133, 25.7369, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -34.2841, -4.26391, 27.2733, 1.08 ) }
    dend_10 { pt3dadd( -34.0011, -4.16523, 27.7162, 1.08 ) }
    dend_10 { pt3dadd( -33.1744, -3.81021, 28.9786, 0.96 ) }
    dend_10 { pt3dadd( -32.4875, -3.51974, 29.96, 0.96 ) }
    dend_10 { pt3dadd( -31.4361, -3.09454, 31.3459, 1.44 ) }
    dend_10 { pt3dadd( -29.9576, -2.49658, 33.295, 1.44 ) }
    dend_10 { pt3dadd( -28.8804, -2.0067, 34.6468, 0.96 ) }
    dend_10 { pt3dadd( -28.1378, -1.65901, 35.6103, 1.32 ) }
    dend_10 { pt3dadd( -27.6325, -1.43753, 36.3191, 1.32 ) }
    dend_10 { pt3dadd( -27.1632, -1.24122, 36.9665, 1.32 ) }
    dend_10 { pt3dadd( -22.8522, 0.986557, 45.4751, 1.32 ) }
    dend_10 { pt3dadd( -18.131, 3.30089, 53.7394, 1.32 ) }
    dend_10 { pt3dadd( -12.5614, 4.70652, 61.6733, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -56.7671, 8.71687, 21.3783, 0.72 ) }
    dend_8 { pt3dadd( -57.9385, 9.45071, 22.5221, 0.72 ) }
    dend_8 { pt3dadd( -58.6709, 9.90952, 23.2373, 0.72 ) }
    dend_8 { pt3dadd( -59.4205, 10.3791, 23.9693, 0.72 ) }
    dend_8 { pt3dadd( -60.7199, 11.1932, 25.2381, 1.2 ) }
    dend_8 { pt3dadd( -62.5348, 12.3302, 27.0103, 0.72 ) }
    dend_8 { pt3dadd( -63.7198, 13.0725, 28.1673, 1.08 ) }
    dend_8 { pt3dadd( -70.1735, 16.7779, 35.9062, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -56.7671, 8.71687, 21.3783, 1.08 ) }
    dend_7 { pt3dadd( -57.6859, 9.0045, 22.4231, 1.08 ) }
    dend_7 { pt3dadd( -58.1924, 9.08242, 22.9914, 1.08 ) }
    dend_7 { pt3dadd( -59.299, 9.14119, 24.218, 1.2 ) }
    dend_7 { pt3dadd( -60.0312, 9.1707, 25.0151, 1.2 ) }
    dend_7 { pt3dadd( -60.5292, 9.20688, 25.6107, 1.44 ) }
    dend_7 { pt3dadd( -61.2167, 9.28053, 26.4601, 1.08 ) }
    dend_7 { pt3dadd( -61.5936, 9.29666, 26.9762, 0.84 ) }
    dend_7 { pt3dadd( -61.9674, 9.31694, 27.508, 0.84 ) }
    dend_7 { pt3dadd( -62.467, 9.38689, 28.22, 0.84 ) }
    dend_7 { pt3dadd( -63.2138, 9.62177, 29.2047, 1.2 ) }
    dend_7 { pt3dadd( -63.8257, 9.90702, 29.9394, 1.2 ) }
    dend_7 { pt3dadd( -64.69, 10.3527, 30.8262, 1.08 ) }
    dend_7 { pt3dadd( -65.1372, 10.5542, 31.218, 0.96 ) }
    dend_7 { pt3dadd( -65.7267, 10.8099, 31.6955, 0.96 ) }
    dend_7 { pt3dadd( -66.8051, 11.2231, 32.4689, 1.32 ) }
    dend_7 { pt3dadd( -67.3204, 11.3976, 32.7746, 1.32 ) }
    dend_7 { pt3dadd( -68.5677, 11.817, 33.4461, 1.32 ) }
    dend_7 { pt3dadd( -69.8466, 12.2292, 34.019, 0.84 ) }
    dend_7 { pt3dadd( -75.9152, 14.7273, 38.9232, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 31.3692, -125.739, -87.7112, 0.6 ) }
    dend_21 { pt3dadd( 32.815, -127.042, -87.3662, 0.6 ) }
    dend_21 { pt3dadd( 33.7675, -127.901, -87.1389, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 31.3692, -125.739, -87.7112, 0.6 ) }
    dend_18 { pt3dadd( 30.5415, -127.589, -89.021, 0.6 ) }
    dend_18 { pt3dadd( 30.1522, -129.265, -90.2758, 1.08 ) }
    dend_18 { pt3dadd( 30.0042, -130.535, -91.2141, 1.08 ) }
    dend_18 { pt3dadd( 29.961, -131.546, -91.9595, 1.08 ) }
    dend_18 { pt3dadd( 29.9472, -132.656, -92.7641, 1.08 ) }
    dend_18 { pt3dadd( 29.8439, -135.134, -94.4184, 0.72 ) }
    dend_18 { pt3dadd( 29.8328, -136.771, -95.3672, 1.2 ) }
    dend_18 { pt3dadd( 29.8119, -137.67, -95.8435, 1.2 ) }
    dend_18 { pt3dadd( 29.7564, -138.441, -96.2259, 1.2 ) }
    dend_18 { pt3dadd( 29.578, -139.871, -96.8929, 0.84 ) }
    dend_18 { pt3dadd( 29.3048, -142.084, -97.9164, 0.6 ) }
    dend_18 { pt3dadd( 28.8847, -144.762, -99.0722, 1.32 ) }
    dend_18 { pt3dadd( 28.6487, -146.306, -99.7691, 1.32 ) }
    dend_18 { pt3dadd( 28.4784, -147.919, -100.599, 0.72 ) }
    dend_18 { pt3dadd( 28.3801, -149.126, -101.26, 1.2 ) }
    dend_18 { pt3dadd( 28.1986, -152.213, -103.083, 1.2 ) }
    dend_18 { pt3dadd( 28.1709, -153.018, -103.612, 0.72 ) }
    dend_18 { pt3dadd( 28.1013, -154.871, -104.897, 1.56 ) }
    dend_18 { pt3dadd( 27.9328, -157.229, -106.622, 0.72 ) }
    dend_18 { pt3dadd( 27.7319, -159.056, -108.046, 0.72 ) }
    dend_18 { pt3dadd( 27.5276, -160.474, -109.2, 1.44 ) }
    dend_18 { pt3dadd( 27.2981, -161.62, -110.143, 0.84 ) }
    dend_18 { pt3dadd( 27.1368, -162.492, -110.85, 0.84 ) }
    dend_18 { pt3dadd( 26.8945, -163.817, -111.761, 1.44 ) }
    dend_18 { pt3dadd( 26.5478, -166.104, -113.063, 0.84 ) }
    dend_18 { pt3dadd( 26.4453, -167.14, -113.642, 0.84 ) }
    dend_18 { pt3dadd( 26.3752, -168.251, -114.2, 1.32 ) }
    dend_18 { pt3dadd( 26.3317, -169.244, -114.614, 1.32 ) }
    dend_18 { pt3dadd( 26.2711, -172.485, -115.697, 0.72 ) }
    dend_18 { pt3dadd( 26.2928, -174.015, -115.965, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.5614, 4.70652, 61.6733, 0.96 ) }
    dend_12 { pt3dadd( -7.04541, 2.84904, 70.5289, 0.96 ) }
    dend_12 { pt3dadd( -2.28452, 2.35665, 79.9834, 0.96 ) }
    dend_12 { pt3dadd( 1.44674, 4.19528, 89.7299, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.5614, 4.70652, 61.6733, 0.84 ) }
    dend_11 { pt3dadd( -8.15492, 6.07315, 68.4757, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 26.2928, -174.015, -115.965, 0.6 ) }
    dend_20 { pt3dadd( 26.6903, -174.621, -115.483, 0.6 ) }
    dend_20 { pt3dadd( 26.9975, -175.208, -115.04, 0.96 ) }
    dend_20 { pt3dadd( 27.3993, -175.977, -114.459, 0.6 ) }
    dend_20 { pt3dadd( 27.6494, -176.456, -114.098, 0.6 ) }
    dend_20 { pt3dadd( 28.0506, -177.223, -113.518, 1.2 ) }
    dend_20 { pt3dadd( 28.5311, -178.142, -112.824, 0.72 ) }
    dend_20 { pt3dadd( 28.805, -178.822, -112.349, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 26.2928, -174.015, -115.965, 0.48 ) }
    dend_19 { pt3dadd( 26.1872, -175.441, -116.336, 0.48 ) }
    dend_19 { pt3dadd( 26.4922, -177.383, -117.137, 1.08 ) }
    dend_19 { pt3dadd( 26.7898, -179.497, -117.98, 0.6 ) }
    dend_19 { pt3dadd( 26.9527, -181.161, -118.637, 0.36 ) }
    dend_19 { pt3dadd( 27.141, -183.291, -119.447, 0.36 ) }
    dend_19 { pt3dadd( 27.3245, -185.206, -120.17, 0.84 ) }
    dend_19 { pt3dadd( 27.858, -188.985, -121.695, 0.6 ) }
    dend_19 { pt3dadd( 28.3866, -191.903, -122.908, 0.6 ) }
    dend_19 { pt3dadd( 28.9032, -194.537, -123.985, 1.08 ) }
    dend_19 { pt3dadd( 29.1016, -195.672, -124.405, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 29.3472, -197.309, -124.927, 1.08 ) }
    dend_19 { pt3dadd( 29.8071, -200.166, -125.699, 0.48 ) }
    dend_19 { pt3dadd( 30.2813, -202.656, -126.243, 0.48 ) }
    dend_19 { pt3dadd( 30.5624, -203.713, -126.467, 0.48 ) }
    dend_19 { pt3dadd( 31.0941, -205.519, -126.808, 0.48 ) }
    dend_19 { pt3dadd( 31.5269, -207.029, -127.071, 0.48 ) }
    dend_19 { pt3dadd( 32.167, -209.324, -127.365, 1.08 ) }
    dend_19 { pt3dadd( 32.5267, -210.578, -127.453, 0.48 ) }
    dend_19 { pt3dadd( 33.2096, -212.71, -127.588, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 3
    dend_33 nseg = 3
    dend_14 nseg = 7
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_41 nseg = 3
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 13
    dend_30 nseg = 3
    dend_23 nseg = 7
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_22 nseg = 7
    dend_10 nseg = 3
    dend_18 nseg = 3
    dend_19 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_SBC_48827298f3_0_0


