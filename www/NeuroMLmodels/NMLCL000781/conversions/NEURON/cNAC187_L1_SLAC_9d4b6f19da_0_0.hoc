// Cell: cNAC187_L1_SLAC_9d4b6f19da_0_0
/*
{
  "id" : "cNAC187_L1_SLAC_9d4b6f19da_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.86979, -3.62109, 0.0, 3.40802", "-3.4648, -3.20389, 0.0, 6.39426", "-3.05982, -2.7867, 0.0, 8.90883", "-2.65483, -2.36951, 0.0, 9.83284", "-2.24985, -1.95232, 0.0, 10.3489", "-1.84486, -1.53513, 0.0, 10.7154", "-1.43988, -1.11794, 0.0, 10.9388", "-1.03489, -0.700747, 0.0, 11.0039", "-0.629907, -0.283556, 0.0, 11.0691", "-0.224923, 0.133635, 0.0, 10.9504", "0.180062, 0.550827, 0.0, 10.7888", "0.585047, 0.968018, 0.0, 10.5771", "0.990032, 1.38521, 0.0, 10.3653", "1.39502, 1.8024, 0.0, 9.98268", "1.8, 2.21959, 0.0, 9.53555", "2.20499, 2.63678, 0.0, 8.94537", "2.60997, 3.05397, 0.0, 8.30699", "3.01496, 3.47116, 0.0, 7.27769", "3.41994, 3.88836, 0.0, 6.11009", "3.82493, 4.30555, 0.0, 4.18013", "4.22991, 4.72274, 0.0, 2.41866" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.93111, 4.51573, 8.39, 0.95", "4.13621, 4.83521, 8.60373, 0.95", "4.50751, 5.35809, 9.09064, 0.95", "4.83792, 5.83498, 9.60463, 0.73", "5.20372, 6.3839, 10.2039, 0.59", "5.53803, 6.88822, 10.746, 1.1", "5.98869, 7.56805, 11.4767, 1.25", "6.68301, 8.52936, 12.5883, 1.62", "6.98632, 8.92324, 13.0804, 2.35", "7.20102, 9.19527, 13.4611, 2.35", "7.34821, 9.40204, 13.7642, 2.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "0.311109, 5.87423, -3.6, 1.14", "-0.289126, 6.13876, -4.37195, 1.14", "-0.590922, 6.2845, -4.86174, 0.91", "-1.12597, 6.67565, -6.11566, 0.91", "-1.50054, 7.0734, -7.14741, 0.91", "-1.92364, 7.48186, -8.29845, 0.91", "-2.24388, 7.78196, -9.22247, 0.91", "-2.45787, 7.98153, -9.83573, 0.91", "-3.06837, 8.61463, -11.7284, 0.91", "-3.67884, 9.28801, -13.6969, 0.68", "-4.23675, 9.8972, -15.4845, 0.68", "-4.80887, 10.4469, -17.0726, 0.68", "-5.38611, 10.89, -18.3862, 0.68", "-5.73412, 11.1214, -19.1427, 0.68", "-5.97681, 11.2589, -19.6481, 0.68", "-6.50641, 11.4989, -20.6802, 0.68", "-7.45512, 11.9238, -22.333, 0.68", "-8.11648, 12.1116, -23.2295, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.09111, 3.59423, -1.73, 2.96", "5.09111, 3.59423, -1.73, 2.96", "6.18739, 4.13019, -2.75136, 2.51", "7.67808, 4.85897, -4.14018, 2.05", "9.22272, 5.61413, -5.57925, 1.37", "10.4695, 6.22364, -6.74077, 1.37", "11.7721, 6.86048, -7.95439, 1.37", "12.7523, 7.33458, -8.85814, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.23111, -3.35027, 4.27, 5.47", "2.23111, -3.35027, 4.27, 5.47", "3.07429, -4.7626, 4.12947, 3.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.55889, 0.620726, -1.0, 1.59", "-6.29298, 0.669777, -1.84405, 1.37", "-7.20766, 0.730895, -2.89574, 1.37", "-8.20322, 0.797417, -4.04044, 1.14", "-8.48222, 0.81606, -4.36123, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.22991, 4.72274, 0.0, 0.68", "14.6779, 15.4856, 0.0, 0.68", "25.1259, 26.2485, 0.0, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-8.11648, 12.1116, -23.2295, 0.68", "-7.93128, 13.0035, -24.9944, 0.68", "-7.69605, 14.1363, -27.2359, 0.91", "-7.48173, 15.1685, -29.2782, 0.91", "-7.23627, 16.3506, -31.6173, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-8.11648, 12.1116, -23.2295, 0.23", "-9.03138, 10.9292, -23.6747, 0.23", "-10.1395, 9.28082, -24.3644, 0.23", "-10.7615, 8.23071, -24.8123, 0.23", "-11.089, 7.663, -25.0667, 0.46", "-11.4742, 7.08187, -25.2557, 0.23", "-12.4326, 5.94871, -25.5206, 0.23", "-12.9833, 5.45653, -25.5838, 0.46", "-14.2649, 4.61685, -25.5779, 0.23", "-15.272, 4.03005, -25.5412, 0.23", "-18.2571, 2.51206, -25.3445, 0.23", "-20.8745, 1.37883, -25.0726, 0.23", "-22.8318, 0.684521, -24.7796, 0.23", "-24.0807, 0.305014, -24.5472, 0.46" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "12.7523, 7.33458, -8.85814, 0.91", "14.04, 7.99845, -9.24974, 0.91", "16.125, 9.07326, -9.88375, 0.68", "18.5196, 10.3077, -10.6119, 0.68", "20.5643, 11.3618, -11.2337, 0.68", "22.5154, 12.3676, -11.827, 1.14", "23.4525, 12.8508, -12.112, 1.14" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.7523, 7.33458, -8.85814, 0.91", "13.7148, 7.9584, -10.0698, 0.91", "14.6378, 8.59733, -11.3122, 0.91", "15.067, 8.90418, -11.8818, 0.91", "15.5707, 9.30185, -12.5882, 0.91", "16.6194, 10.1299, -14.0592, 0.91", "17.6983, 10.9816, -15.5723, 0.91", "18.8172, 11.7766, -16.9623, 0.91", "19.5021, 12.2737, -17.8166, 0.68", "20.0865, 12.6901, -18.5841, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.07429, -4.7626, 4.12947, 1.82", "3.51078, -6.01822, 3.33268, 1.82", "3.78978, -7.46569, 2.35842, 1.59", "3.90593, -8.30939, 1.74141, 1.37", "4.03746, -9.20637, 1.02028, 0.91", "4.25482, -10.4663, -0.107088, 0.91", "4.51917, -11.7881, -1.3297, 0.91", "4.82646, -13.1546, -2.7295, 0.91", "5.18979, -14.3841, -4.10291, 0.91", "5.50915, -15.259, -5.20508, 0.91", "5.88437, -16.0382, -6.31577, 0.91", "6.54017, -17.0095, -7.86117, 0.91", "7.15473, -17.719, -9.07801, 0.68", "7.97253, -18.5327, -10.5552, 0.91", "8.55509, -19.0851, -11.5779, 0.91", "9.18095, -19.6937, -12.685, 0.68", "9.66973, -20.1656, -13.5572, 0.68", "10.375, -20.772, -14.9164, 0.91" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.07429, -4.7626, 4.12947, 3.64", "3.469, -5.25994, 5.46861, 3.64", "3.99557, -5.92343, 7.25512, 3.64", "4.48436, -6.53931, 8.91345, 3.64", "5.01882, -7.21274, 10.7267, 3.42", "5.44191, -7.74583, 12.1622, 3.42", "5.79476, -8.19043, 13.3593, 3.42" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.48222, 0.81606, -4.36123, 0.68", "-8.32927, 0.897362, -5.09847, 0.68", "-7.7381, 1.47366, -7.13951, 0.68", "-6.89905, 2.30049, -9.27831, 0.68", "-6.07287, 3.05734, -11.0838, 0.68", "-5.35377, 3.7179, -12.4877, 0.68", "-4.49146, 4.45175, -14.0168, 0.46", "-3.29382, 5.38373, -15.719, 0.46", "-2.08568, 6.28493, -17.1212, 0.46", "-0.421104, 7.484, -18.8832, 0.46", "1.04576, 8.47108, -20.3521, 0.46", "2.34388, 9.28827, -21.6356, 0.46", "3.88039, 10.1757, -23.1793, 0.46", "5.96514, 11.2755, -25.1924, 0.23", "7.26899, 11.9821, -26.406, 0.23", "8.70677, 12.7529, -27.6384, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.48222, 0.81606, -4.36123, 1.14", "-9.21364, 0.694982, -4.74435, 1.14", "-9.61747, 0.646263, -4.9216, 1.14", "-10.5874, 0.57244, -5.29807, 1.14", "-11.6979, 0.487918, -5.7291, 1.14", "-13.5935, 0.343645, -6.46484, 1.14", "-14.5311, 0.27229, -6.82872, 1.14", "-16.5415, 0.124851, -7.52966, 0.68", "-17.993, 0.0487481, -8.02575, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "25.1259, 26.2485, 0.0, 0.260922", "35.5738, 37.0114, 0.0, 0.260922", "46.0218, 47.7743, 0.0, 0.260922" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-7.23627, 16.3506, -31.6173, 0.46", "-8.53532, 17.3664, -33.797, 0.46", "-9.84075, 18.2093, -35.9055, 0.46", "-10.742, 18.7674, -37.3487, 0.46", "-11.3312, 19.1786, -38.4243, 0.46", "-12.3613, 19.9719, -40.4838, 0.68", "-13.309, 20.8492, -42.7052, 0.68", "-14.3282, 21.9374, -45.5688, 0.68", "-15.0118, 22.7581, -47.8109, 0.68", "-15.7057, 23.729, -50.6869, 0.68", "-16.1063, 24.5422, -53.2177, 0.68", "-16.3453, 25.4946, -56.4242, 0.68", "-16.4348, 26.346, -59.4706, 0.68", "-16.3731, 27.0967, -62.3011, 0.68", "-16.299, 27.5913, -64.4624, 0.68", "-16.2291, 28.0077, -66.8408, 0.68", "-16.1187, 28.3793, -69.8356, 0.68", "-16.0872, 28.4832, -71.1166, 0.68", "-15.9899, 28.7936, -76.9518, 0.46", "-15.9661, 29.055, -83.6267, 0.46", "-15.9992, 29.1989, -88.2014, 0.46", "-16.0817, 29.2564, -91.8795, 0.46", "-16.2146, 29.2639, -96.5002, 0.46", "-16.3251, 29.208, -100.688, 0.46", "-16.4576, 28.9658, -104.822, 0.46" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-7.23627, 16.3506, -31.6173, 0.23", "-6.67935, 16.9137, -32.2704, 0.23", "-5.85469, 17.7171, -33.2544, 0.46", "-5.10863, 18.469, -34.1161, 0.46", "-4.53623, 19.0738, -34.8007, 0.46", "-3.97671, 19.6837, -35.489, 0.46", "-3.57595, 20.1656, -36.0291, 0.46", "-3.18193, 20.6476, -36.6158, 0.46", "-2.73158, 21.2157, -37.3277, 0.68", "-2.13313, 21.9456, -38.2585, 0.46", "-1.39391, 22.7882, -39.3539, 0.46", "-0.529851, 23.6446, -40.5059, 0.23", "0.365416, 24.4248, -41.6432, 0.46", "1.34214, 25.1497, -42.7614, 0.46", "2.00168, 25.5327, -43.4231, 0.46", "3.41539, 26.1899, -44.6129, 0.23", "5.27085, 26.8581, -45.9069, 0.23", "6.5212, 27.2235, -46.6277, 0.23", "7.71695, 27.5003, -47.1989, 0.46", "9.39721, 27.7374, -47.874, 0.46", "10.5532, 27.8187, -48.312, 0.46", "11.7892, 27.8281, -48.7981, 0.46", "12.472, 27.8289, -49.1001, 0.46", "14.3653, 27.8443, -50.201, 0.46", "15.9674, 27.8789, -51.452, 0.46", "17.6553, 27.9241, -53.1631, 0.23", "18.8478, 27.9105, -54.5841, 0.23", "19.9802, 27.8204, -56.1326, 0.46", "21.6632, 27.4927, -58.6953, 0.46", "23.1716, 26.9954, -61.3444, 0.46", "24.355, 26.5356, -63.5884, 0.46", "25.1618, 26.1507, -65.1914, 0.23", "26.1835, 25.5343, -67.2725, 0.46", "27.3474, 24.6258, -69.6104, 0.46", "28.9196, 23.0886, -72.6549, 0.46" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "23.4525, 12.8508, -12.112, 0.68", "24.9214, 13.186, -12.9872, 0.68", "25.9308, 13.4286, -13.6613, 0.68", "27.3899, 13.7777, -14.7432, 0.68", "29.1336, 14.2141, -16.1302, 0.68", "30.3969, 14.5803, -17.1875, 0.68", "31.7442, 15.045, -18.4204, 0.68", "32.9605, 15.5261, -19.6484, 0.68", "34.2026, 16.0997, -21.0835, 0.68", "35.5928, 16.7492, -22.9486, 0.46", "36.5975, 17.1839, -24.4308, 0.46", "37.6799, 17.5722, -26.0858, 0.46", "38.4031, 17.7454, -27.2126, 0.46", "39.4017, 17.8504, -28.9935, 0.46", "40.2671, 17.8251, -30.6741, 0.23", "41.1796, 17.6709, -32.6331, 0.23", "41.7172, 17.5492, -33.8779, 0.68", "42.824, 17.3332, -36.5358, 0.68", "44.3316, 17.1201, -40.2463, 0.68", "44.7752, 17.1048, -41.3653, 0.91", "45.9459, 17.2731, -44.442, 0.46", "46.9654, 17.5915, -47.3089, 0.46", "48.1256, 18.0375, -50.3297, 0.23", "48.4831, 18.1539, -51.1309, 0.68", "50.0224, 18.5879, -54.2086, 0.23", "51.6753, 18.9754, -57.1959, 0.46", "53.7052, 19.3452, -60.4836, 0.46", "56.2564, 19.6413, -64.0783, 0.23", "59.1273, 19.8287, -67.7176, 0.23", "62.244, 19.952, -71.5274, 0.23", "63.8789, 19.9375, -73.3402, 0.23", "65.568, 19.8276, -74.9971, 0.23", "68.0907, 19.5801, -77.1415, 0.23", "68.6638, 19.5253, -77.5841, 0.46" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "23.4525, 12.8508, -12.112, 0.91", "23.782, 13.3345, -11.8642, 0.91", "24.6574, 14.6195, -11.206, 0.91" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "20.0865, 12.6901, -18.5841, 0.46", "20.8607, 12.816, -19.247, 0.46", "21.5483, 12.9625, -19.8858, 0.46", "22.4808, 13.1985, -20.8766, 0.46", "23.495, 13.4553, -21.9484, 0.46", "24.3363, 13.6571, -22.8479, 0.68", "25.1932, 13.8583, -23.7881, 0.68", "25.9833, 14.066, -24.6902, 0.46", "26.8162, 14.2744, -25.6588, 0.46", "27.5133, 14.4086, -26.4919, 0.91", "28.4697, 14.5396, -27.681, 0.68", "29.2505, 14.6068, -28.6484, 0.68", "29.8595, 14.636, -29.3872, 0.46", "30.1943, 14.6362, -29.7931, 0.68", "31.5104, 14.5964, -31.371, 0.46", "32.2536, 14.5563, -32.4229, 0.68" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "20.0865, 12.6901, -18.5841, 0.91", "19.4336, 14.1578, -18.9291, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.375, -20.772, -14.9164, 0.46", "11.3646, -22.0774, -16.5266, 0.46", "12.2241, -23.1929, -18.0568, 0.46", "12.6724, -23.7323, -18.79, 0.68", "13.3721, -24.511, -19.9316, 0.68", "14.35, -25.4805, -21.4801, 0.68", "15.734, -26.7011, -23.6332, 0.46", "16.5143, -27.4169, -24.9238, 0.46", "17.979, -28.6721, -27.2913, 0.46", "19.2535, -29.6351, -29.2608, 0.68", "20.521, -30.4292, -31.1151, 0.46", "22.021, -31.2422, -33.232, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.375, -20.772, -14.9164, 0.46", "9.5213, -22.5032, -15.1096, 0.46", "8.64142, -24.1002, -15.2847, 0.46", "7.77471, -25.4941, -15.3815, 0.46", "7.19612, -26.3549, -15.4447, 0.46", "6.31665, -27.5988, -15.5312, 0.46", "5.18998, -29.0771, -15.6582, 0.46", "4.53024, -29.8078, -15.7319, 0.46", "2.94437, -31.254, -15.9947, 0.46", "1.94953, -32.031, -16.2747, 0.46", "1.15647, -32.5619, -16.5921, 0.68", "-0.45283, -33.5274, -17.4919, 0.23", "-1.93281, -34.3493, -18.5835, 0.46", "-3.15052, -34.9891, -19.5852, 0.46", "-4.43643, -35.6053, -20.8007, 0.46", "-5.74257, -36.1905, -22.1469, 0.46", "-7.13541, -36.7829, -23.7779, 0.46", "-7.86722, -37.0972, -24.8166, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.79476, -8.19043, 13.3593, 0.91", "7.57434, -9.1037, 12.9455, 0.91", "9.9985, -10.4859, 12.4277, 0.46", "12.0634, -11.6832, 12.0174, 0.68", "14.5139, -13.0823, 11.5681, 0.68", "16.6381, -14.3083, 11.1985, 0.68", "17.8494, -15.0437, 11.0185, 0.68", "19.7514, -16.2548, 10.8187, 0.68", "20.7649, -16.9312, 10.7378, 0.68", "22.2773, -17.9837, 10.6619, 0.46", "24.3945, -19.5368, 10.6247, 0.68", "26.882, -21.463, 10.7233, 0.46", "28.65, -22.842, 10.8721, 0.68", "30.3212, -24.1404, 11.1557, 0.68", "31.2999, -24.9243, 11.4563, 0.68", "33.1366, -26.4411, 12.4379, 0.46", "34.501, -27.5357, 13.5239, 0.46", "36.2742, -28.9048, 15.3499, 0.68", "37.5924, -29.9336, 17.034, 0.68", "39.0188, -31.0114, 19.1062, 0.68", "40.6208, -32.1429, 21.6813, 0.68", "41.2879, -32.5876, 22.9347, 0.68", "41.5728, -32.7858, 23.5868, 0.46", "41.9859, -33.0825, 24.8253, 0.46" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.79476, -8.19043, 13.3593, 2.05", "6.03176, -9.56739, 14.6032, 2.05", "6.40128, -11.1421, 16.1101, 2.05", "6.66509, -12.2663, 17.1859, 2.05", "6.95912, -13.5193, 18.3849, 2.05", "7.2291, -14.6698, 19.4858, 1.59", "7.49733, -15.8129, 20.5797, 1.59", "7.7369, -16.885, 21.6215, 1.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.70677, 12.7529, -27.6384, 0.46", "9.26571, 12.9375, -28.1801, 0.46", "10.0125, 13.1842, -28.9039, 0.46", "11.4554, 13.6607, -30.3025, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.70677, 12.7529, -27.6384, 0.46", "8.15181, 13.5051, -29.0388, 0.46", "7.57168, 14.5743, -30.8121, 0.46", "7.07252, 15.6531, -32.4894, 0.46", "6.51851, 16.8298, -34.3459, 0.46", "5.94524, 17.9532, -36.205, 0.23", "5.15832, 19.3055, -38.572, 0.23", "4.7183, 19.9999, -39.8432, 0.46", "4.13461, 20.7989, -41.3641, 0.46", "3.202, 21.8908, -43.5704, 0.46", "2.34795, 22.7852, -45.4713, 0.46", "1.30665, 23.723, -47.5907, 0.46", "0.258795, 24.6019, -49.4882, 0.46", "-0.802389, 25.4984, -51.3938, 0.23", "-1.66556, 26.2889, -52.9292, 0.46", "-2.62294, 27.3521, -54.8145, 0.46", "-3.27609, 28.2573, -56.4413, 0.46", "-4.26589, 29.7921, -59.1325, 0.23", "-4.88533, 30.8616, -60.9934, 0.23", "-5.17444, 31.4139, -61.9795, 0.46", "-6.1156, 33.3533, -65.5181, 0.23", "-7.26097, 35.9835, -70.4683, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.993, 0.0487481, -8.02575, 0.68", "-19.4342, 0.205655, -8.32678, 0.68", "-21.4529, 0.491836, -8.79707, 0.68", "-22.3298, 0.636369, -8.99628, 0.68", "-23.295, 0.791311, -9.20906, 0.68", "-25.1775, 1.09563, -9.65063, 0.68", "-27.7717, 1.54203, -10.3034, 0.46", "-29.624, 1.91181, -10.8701, 0.46", "-31.4009, 2.32805, -11.4273, 0.68", "-32.0829, 2.49099, -11.6522, 0.46", "-33.4539, 2.81236, -12.1312, 0.46", "-34.5847, 3.04298, -12.5879, 0.91", "-36.46, 3.4508, -13.4583, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.993, 0.0487481, -8.02575, 0.46", "-19.0924, -0.842904, -9.19701, 0.46", "-19.6042, -1.18509, -9.68925, 0.46", "-20.1359, -1.51356, -10.1782, 0.46", "-21.1367, -2.11766, -11.0399, 0.46", "-22.0238, -2.62093, -11.7202, 0.46", "-22.7276, -3.01012, -12.2328, 0.46", "-23.6271, -3.46026, -12.7802, 0.46", "-24.3733, -3.82748, -13.2243, 0.46", "-24.9626, -4.15048, -13.5864, 0.46", "-25.882, -4.68412, -14.1517, 0.23", "-27.0867, -5.42977, -14.8742, 0.23", "-27.5602, -5.74322, -15.1621, 0.46", "-28.469, -6.38939, -15.7268, 0.68", "-29.3904, -7.06087, -16.3218, 0.46", "-30.1404, -7.63636, -16.8578, 0.46", "-31.0431, -8.41877, -17.5839, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "24.6574, 14.6195, -11.206, 0.46", "25.3694, 15.7154, -11.9394, 0.46", "25.8736, 16.4918, -12.459, 0.46", "26.6684, 17.7152, -13.2777, 0.68", "28.0052, 19.7732, -14.6551, 0.46", "28.7188, 20.8717, -15.3902, 0.68", "29.6175, 22.2553, -16.3162, 0.68" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "24.6574, 14.6195, -11.206, 0.23", "26.2164, 15.4478, -10.5278, 0.23", "27.2712, 16.0151, -10.1069, 0.68", "28.872, 16.9109, -9.53212, 0.23", "30.1828, 17.6403, -9.10947, 0.23", "31.2778, 18.2589, -8.78685, 0.46", "32.8321, 19.1268, -8.38332, 0.23", "35.3419, 20.5185, -7.81631, 0.23", "36.861, 21.3693, -7.52717, 0.23", "38.319, 22.1843, -7.29804, 0.46", "39.3979, 22.783, -7.16635, 0.46", "41.4971, 23.964, -6.95646, 0.23", "43.1012, 24.8971, -6.80139, 0.46", "45.1063, 26.002, -6.65959, 0.23" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "32.2536, 14.5563, -32.4229, 0.46", "33.4986, 13.5461, -34.6853, 0.46", "34.8587, 12.5948, -36.8404, 0.46", "35.6953, 12.1336, -37.9832, 0.46", "36.7085, 11.6406, -39.3276, 0.46", "37.9688, 11.0712, -40.9523, 0.23", "39.4926, 10.4519, -42.8438, 0.46", "41.1655, 9.86099, -44.7504, 0.46", "43.743, 9.13043, -47.4205, 0.23", "45.3054, 8.76554, -48.9428, 0.23", "45.6615, 8.69823, -49.288, 0.23", "47.4355, 8.44186, -51.0418, 0.46", "49.1525, 8.17431, -52.7354, 0.23", "50.0602, 8.02862, -53.6234, 0.23", "51.0155, 7.86052, -54.6163, 0.46", "52.6749, 7.53638, -56.4168, 0.23", "55.1031, 7.03824, -59.0955, 0.23", "56.9279, 6.6782, -61.1807, 0.23", "57.7698, 6.54424, -62.1784, 0.46", "59.5009, 6.30731, -64.2855, 0.23", "60.9229, 6.2098, -66.0559, 0.23", "61.6998, 6.21489, -67.0767, 0.46", "63.5311, 6.40227, -69.6817, 0.23", "65.4306, 6.71784, -72.4276, 0.23", "65.8426, 6.80074, -73.0414, 0.46", "67.4781, 7.20487, -75.4779, 0.23", "69.3846, 7.78214, -78.5457, 0.23", "70.7811, 8.2298, -81.029, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "32.2536, 14.5563, -32.4229, 0.46", "34.0133, 14.5191, -32.6252, 0.46", "37.265, 14.4505, -32.9991, 0.23", "38.7222, 14.4197, -33.1666, 0.23", "40.3024, 14.3863, -33.3483, 0.68", "41.1921, 14.3676, -33.4506, 0.23", "42.5528, 14.3388, -33.6071, 0.46" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "19.4336, 14.1578, -18.9291, 0.46", "19.8945, 14.8484, -20.753, 0.46", "20.2627, 15.5034, -22.2529, 0.46", "20.6377, 16.2953, -24.0117, 0.46", "20.9514, 17.1891, -25.9412, 0.68", "21.2138, 18.1358, -27.9694, 0.46", "21.29, 18.4522, -28.659, 0.68", "21.4992, 19.5749, -31.1107, 0.23", "21.6789, 20.7524, -33.84, 0.46", "21.7641, 21.6724, -36.2294, 0.46", "21.7739, 22.5682, -38.8531, 0.46", "21.6986, 23.0559, -40.5959, 0.46", "21.4582, 23.5965, -42.9838, 0.46", "21.2036, 23.8282, -44.401, 0.68", "20.5469, 24.1261, -46.9611, 0.68", "20.2724, 24.1825, -47.8038, 0.46", "19.2599, 24.2969, -50.4667, 0.46", "18.0346, 24.3932, -53.292, 0.23", "16.9946, 24.457, -55.3967, 0.23", "15.8386, 24.5477, -57.5558, 0.23", "14.896, 24.6244, -59.2426, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "19.4336, 14.1578, -18.9291, 0.23", "20.0593, 16.3004, -19.6493, 0.23", "20.399, 17.646, -20.221, 0.23", "20.6829, 18.9151, -20.8093, 0.46", "21.0266, 20.8014, -21.6669, 0.46", "21.2469, 22.0552, -22.2598, 0.46", "21.5095, 23.4149, -22.9364, 0.68", "21.7875, 25.1582, -23.9311, 0.46", "21.9173, 26.1907, -24.5869, 0.46", "22.0886, 27.3662, -25.4106, 0.68", "22.3386, 28.7343, -26.448, 0.68", "22.6602, 30.2051, -27.7196, 0.46", "23.0636, 31.545, -29.0673, 0.46", "23.6769, 32.9434, -30.6685, 0.46", "24.4851, 34.2487, -32.3025, 0.46", "25.3636, 35.5228, -34.0063, 0.46", "26.4753, 36.9976, -36.074, 0.46", "27.949, 38.7, -38.6251, 0.23", "29.0454, 39.7235, -40.2757, 0.23", "30.4812, 40.8164, -42.1815, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "22.021, -31.2422, -33.232, 0.46", "22.5238, -32.1052, -35.3242, 0.46", "23.0499, -32.8904, -37.2857, 0.46", "23.4725, -33.4322, -38.6895, 0.46", "23.9564, -33.9843, -40.2357, 0.46", "24.9177, -34.8655, -42.9501, 0.46", "25.8363, -35.7076, -45.5442, 0.46", "26.3837, -36.1235, -46.9639, 0.46", "26.6589, -36.3102, -47.6452, 0.46", "27.4988, -36.8714, -49.8846, 0.46", "28.2006, -37.2667, -51.5202, 0.68" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "22.021, -31.2422, -33.232, 0.46", "21.9779, -29.9565, -35.0896, 0.46", "21.882, -29.0366, -36.4487, 0.46", "21.7181, -27.8844, -38.0875, 0.46", "21.494, -26.4234, -40.2132, 0.46", "21.2719, -25.1626, -42.0967, 0.46", "21.0017, -23.7892, -44.2025, 0.46", "20.7288, -22.4824, -46.2705, 0.46", "20.5403, -21.7659, -47.4421, 0.68", "20.1101, -20.4454, -49.757, 0.46", "19.6766, -19.1702, -52.2074, 0.46", "19.3407, -18.1814, -54.3286, 0.68", "19.0184, -17.3233, -56.401, 0.46", "18.5819, -16.3437, -59.1016, 0.68", "18.1479, -15.6346, -61.3461, 0.68", "17.6609, -15.0535, -63.3506, 0.68", "16.9049, -14.2403, -66.2657, 0.68", "16.4371, -13.8165, -67.8388, 0.68", "15.785, -13.2754, -69.763, 0.68", "15.2954, -12.8335, -71.1936, 0.68", "14.7205, -12.1948, -73.0085, 1.14", "14.2002, -11.375, -75.0627, 0.46", "13.8926, -9.91867, -78.3568, 0.46", "14.1298, -9.47383, -79.2497, 0.46", "15.0624, -8.3064, -81.4871, 0.46", "15.8039, -7.62383, -82.7707, 0.46", "16.93, -6.86419, -84.2051, 0.46", "18.6569, -5.98465, -85.857, 0.46", "23.0031, -4.1825, -88.8904, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "41.9859, -33.0825, 24.8253, 0.23", "43.0635, -33.9968, 25.4328, 0.23", "43.9795, -34.8188, 25.9385, 0.23", "44.7336, -35.5766, 26.3913, 0.68", "45.6982, -36.6494, 27.043, 0.68", "46.7985, -38.0021, 27.859, 0.46", "47.569, -39.0309, 28.4986, 0.46", "47.9068, -39.5847, 28.8665, 0.46", "48.4375, -40.639, 29.5538, 0.46", "48.7446, -41.3621, 30.0154, 0.68", "49.1846, -42.4982, 30.7245, 0.46", "49.6777, -43.8458, 31.5747, 0.68", "50.1585, -45.1993, 32.4258, 0.46", "50.5946, -46.5138, 33.2064, 0.46", "51.0872, -48.0798, 34.0319, 0.23", "51.5477, -49.6876, 34.7578, 0.68", "51.8618, -50.8179, 35.191, 0.68", "52.3363, -52.5, 35.71, 0.46", "52.8583, -54.2662, 36.1985, 0.46", "53.1553, -55.2856, 36.47, 0.23", "53.624, -56.8766, 36.9086, 0.23", "54.1968, -58.6934, 37.4805, 0.23", "54.5722, -59.7715, 37.9053, 0.68", "55.0832, -61.1796, 38.5795, 0.23", "55.4297, -62.0523, 39.1027, 0.46", "55.9507, -63.36, 40.0031, 0.23", "56.55, -64.9014, 41.1824, 0.23", "56.8615, -65.767, 41.9345, 0.46", "57.2728, -66.9368, 42.9896, 0.23", "57.7024, -68.1469, 44.0851, 0.23", "58.0463, -69.0929, 44.9609, 0.46", "58.3783, -70.0577, 45.8777, 0.23", "58.8316, -71.43, 47.2726, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "41.9859, -33.0825, 24.8253, 0.23", "42.0999, -33.443, 25.7311, 0.23", "42.2136, -34.033, 27.1523, 0.23", "42.253, -34.7886, 28.8541, 0.23", "42.2937, -35.5656, 30.6044, 0.23", "42.3091, -35.8601, 31.2677, 0.46", "42.3442, -36.5323, 32.7817, 0.23", "42.3891, -37.2474, 34.2819, 0.23", "42.3814, -38.0773, 35.9413, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.7369, -16.885, 21.6215, 0.91", "8.15478, -17.9444, 21.3808, 0.91", "8.53535, -19.1756, 21.0963, 0.91", "8.88156, -20.3459, 20.8372, 0.91", "9.38537, -22.0489, 20.4601, 0.91", "9.58989, -22.7403, 20.307, 0.91", "10.1531, -24.6441, 19.8854, 0.91", "10.4519, -25.8717, 19.6403, 0.91", "10.6543, -26.8936, 19.445, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.7369, -16.885, 21.6215, 1.82", "7.99555, -18.1367, 23.3659, 1.82", "8.25703, -19.402, 25.1293, 1.82", "8.46105, -20.3892, 26.5052, 1.82", "8.73524, -21.716, 28.3543, 1.82", "8.91454, -22.5836, 29.5635, 1.82" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-36.46, 3.4508, -13.4583, 0.23", "-37.4282, 3.58981, -13.9424, 0.23", "-38.248, 3.68519, -14.3519, 0.68", "-39.2518, 3.74502, -14.8386, 0.46", "-40.0961, 3.78169, -15.2396, 0.68", "-40.8369, 3.8321, -15.5751, 0.68", "-41.5508, 3.90448, -15.8835, 0.46", "-42.34, 4.00832, -16.1955, 0.46", "-43.2761, 4.16755, -16.5304, 0.46", "-44.2349, 4.38931, -16.8423, 0.46", "-45.3292, 4.70521, -17.182, 0.23", "-46.0777, 4.95854, -17.3873, 0.23", "-46.6576, 5.20266, -17.5308, 0.23", "-47.1782, 5.45642, -17.6503, 0.68", "-47.7509, 5.77929, -17.7818, 0.23", "-48.2573, 6.06577, -17.8819, 0.23", "-49.0714, 6.49708, -18.0241, 0.23", "-49.797, 6.855, -18.132, 0.23", "-50.8418, 7.33813, -18.2612, 0.68", "-51.7528, 7.74133, -18.3642, 0.23", "-52.8451, 8.19099, -18.4965, 0.23", "-53.5886, 8.48975, -18.5933, 0.46", "-54.6815, 8.91984, -18.7633, 0.23", "-55.7761, 9.32092, -18.954, 0.23", "-56.7336, 9.65016, -19.1639, 0.23", "-57.5378, 9.90939, -19.3828, 0.23", "-58.307, 10.1719, -19.6665, 0.46", "-59.4975, 10.6095, -20.224, 0.23", "-60.069, 10.8326, -20.5638, 0.46", "-60.7677, 11.1298, -21.0682, 0.23", "-61.1186, 11.2908, -21.3651, 0.46", "-61.849, 11.663, -22.0976, 0.23", "-62.305, 11.9038, -22.6606, 0.46", "-62.7891, 12.1696, -23.4235, 0.23", "-63.0736, 12.3248, -23.9779, 0.46", "-63.5295, 12.5609, -24.9482, 0.23", "-64.0128, 12.7625, -26.0229, 0.46", "-64.6133, 12.9497, -27.3705, 0.46", "-65.327, 13.0971, -28.8906, 0.46", "-66.2876, 13.2071, -30.8498, 0.46", "-66.8034, 13.2246, -31.8372, 0.46", "-67.3176, 13.2114, -32.7412, 0.46", "-67.7758, 13.1826, -33.4511, 0.46", "-68.4277, 13.1369, -34.376, 0.46", "-69.0442, 13.089, -35.1772, 0.46", "-69.9971, 13.0149, -36.3869, 0.23", "-70.6003, 12.9876, -37.1819, 0.46", "-71.4838, 12.9822, -38.3768, 0.23", "-72.1191, 12.9875, -39.2104, 0.23", "-72.6325, 12.9993, -39.844, 0.23", "-73.1164, 13.0119, -40.3385, 0.23", "-73.9666, 13.0286, -41.0209, 0.23", "-75.1002, 13.0581, -41.7091, 0.23", "-76.0332, 13.0828, -42.1267, 0.23", "-77.2611, 13.1112, -42.5419, 0.23", "-78.2663, 13.1289, -42.8047, 0.46", "-78.96, 13.1374, -42.9502, 0.46", "-80.188, 13.155, -43.1575, 0.46", "-81.1132, 13.1869, -43.2932, 0.23", "-81.7018, 13.2016, -43.3875, 0.46", "-82.443, 13.2034, -43.4834, 0.23", "-83.3166, 13.1713, -43.5991, 0.23", "-84.0103, 13.123, -43.7037, 0.46", "-85.4923, 12.9767, -43.931, 0.23", "-87.7181, 12.7175, -44.2495, 0.23", "-88.4268, 12.6209, -44.3529, 0.46", "-90.3147, 12.306, -44.6317, 0.23", "-91.4945, 12.0786, -44.8042, 0.23", "-92.0713, 11.95, -44.8944, 0.46", "-93.169, 11.6637, -45.0838, 0.23", "-93.9169, 11.4512, -45.2225, 0.23", "-94.415, 11.3145, -45.3117, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-36.46, 3.4508, -13.4583, 0.23", "-38.4744, 4.75482, -12.4839, 0.23", "-40.4641, 6.11877, -11.4373, 0.23", "-42.0185, 7.2336, -10.6003, 0.46", "-43.2882, 8.21586, -9.89797, 0.23", "-44.7603, 9.47559, -9.04572, 0.46", "-46.8755, 11.4227, -7.79892, 0.23", "-48.3498, 12.9789, -6.95276, 0.23", "-49.6673, 14.5193, -6.14754, 0.68", "-50.7663, 15.9019, -5.41434, 0.68", "-52.1777, 17.6058, -4.54989, 0.46", "-53.7009, 19.3078, -3.76324, 0.46", "-55.2701, 20.8892, -3.12407, 0.46", "-56.8604, 22.3034, -2.61825, 0.46", "-58.4384, 23.5038, -2.22922, 0.46", "-61.4871, 25.5383, -1.61794, 0.23", "-63.1856, 26.5531, -1.34882, 0.46", "-65.579, 27.8867, -1.02406, 0.23", "-68.5267, 29.4169, -0.691917, 0.23", "-70.8676, 30.6003, -0.486196, 0.46", "-72.8214, 31.5679, -0.32887, 0.23", "-74.4396, 32.4149, -0.159392, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-31.0431, -8.41877, -17.5839, 0.23", "-32.8994, -9.93997, -16.9503, 0.23", "-34.4038, -11.2832, -16.36, 0.23", "-35.8545, -12.5888, -15.7967, 0.23", "-37.1638, -13.7515, -15.3384, 0.46", "-38.6674, -15.092, -14.7828, 0.23", "-40.6328, -16.8341, -14.0712, 0.23", "-42.2471, -18.2958, -13.5025, 0.23", "-43.7021, -19.6058, -13.0406, 0.23", "-45.6884, -21.4324, -12.4297, 0.46", "-47.4683, -23.0943, -11.9015, 0.23", "-49.0234, -24.5558, -11.4865, 0.23", "-50.2781, -25.7024, -11.2163, 0.91", "-51.6601, -26.9317, -10.9306, 0.23", "-53.0864, -28.284, -10.6085, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-31.0431, -8.41877, -17.5839, 0.23", "-33.1987, -8.78801, -20.1759, 0.23", "-34.6189, -9.1494, -22.0175, 0.23", "-35.4169, -9.36807, -23.0838, 0.46", "-36.9832, -9.87777, -25.2471, 0.23", "-37.827, -10.2068, -26.4069, 0.23", "-39.1034, -10.8036, -28.1673, 0.46", "-40.8644, -11.8494, -30.4493, 0.23", "-42.1636, -12.8298, -32.1345, 0.23", "-43.6777, -14.0947, -33.9989, 0.23", "-45.1088, -15.4044, -35.6493, 0.23", "-45.9653, -16.2744, -36.6245, 0.23", "-47.3372, -17.8059, -38.1796, 0.46", "-48.4542, -19.2819, -39.5334, 0.46", "-49.0047, -20.1267, -40.2694, 0.46", "-50.6371, -22.7762, -42.5419, 0.23", "-51.3377, -23.9452, -43.563, 0.68", "-52.2219, -25.5051, -44.9775, 0.46", "-53.4169, -27.7307, -47.1074, 0.23", "-54.0583, -28.8985, -48.288, 0.23", "-54.5334, -29.7991, -49.2721, 0.46", "-55.2268, -31.2096, -50.845, 0.46", "-56.0631, -33.0205, -52.9449, 0.46", "-56.96, -35.2468, -55.6797, 0.46", "-57.4277, -36.5068, -57.4068, 0.46", "-57.8321, -37.7277, -59.3256, 0.46", "-58.1326, -38.7134, -61.1115, 0.46", "-58.442, -39.6648, -63.2522, 0.46", "-58.7579, -40.4671, -65.9439, 0.46", "-58.9665, -41.0512, -68.299, 0.46", "-59.2617, -41.6752, -71.4642, 0.46", "-59.4894, -41.8971, -73.4464, 0.46", "-59.8607, -41.9057, -76.1528, 0.23", "-60.3956, -41.4767, -79.764, 0.23" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "29.6175, 22.2553, -16.3162, 0.46", "29.7055, 23.7146, -16.5821, 0.46", "29.7741, 25.1092, -16.9424, 0.46", "29.8724, 27.0432, -17.4761, 0.46", "29.9552, 28.3278, -17.8313, 0.46", "30.1245, 30.331, -18.4572, 0.68", "30.357, 32.4961, -19.2314, 0.23", "30.6866, 35.0519, -20.4311, 0.23", "30.8578, 36.2409, -21.0696, 0.46", "31.0639, 37.4797, -21.7994, 0.23", "31.3661, 39.0951, -22.8274, 0.23", "31.66, 40.4823, -23.7846, 0.23", "32.1185, 42.3094, -25.1754, 0.23", "32.5056, 43.5395, -26.3062, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "29.6175, 22.2553, -16.3162, 0.46", "31.2542, 23.2873, -15.387, 0.46", "32.6149, 24.2829, -14.4955, 0.23", "33.3963, 24.8871, -13.9158, 0.46", "34.1996, 25.5439, -13.2834, 0.46", "35.5183, 26.6663, -12.2278, 0.46", "36.5788, 27.5723, -11.3194, 0.46", "38.2631, 29.1151, -9.79508, 0.23", "39.2651, 30.0965, -8.84628, 0.23", "40.5066, 31.3521, -7.61219, 0.23", "41.4543, 32.2999, -6.59228, 0.46", "42.5515, 33.3645, -5.33867, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "42.5528, 14.3388, -33.6071, 0.46", "43.5914, 14.1705, -33.4863, 0.46", "45.717, 13.8681, -33.4195, 0.46", "47.2606, 13.7415, -33.4315, 0.46", "48.8055, 13.6676, -33.5151, 0.23", "51.3304, 13.6347, -33.6981, 0.23", "53.363, 13.6563, -33.8686, 0.23", "55.1154, 13.764, -34.0868, 0.46", "57.5234, 13.969, -34.5341, 0.23", "60.0737, 14.2494, -35.1218, 0.46", "62.32, 14.5742, -35.7456, 0.23", "63.5331, 14.8286, -36.1795, 0.46", "65.1655, 15.2183, -36.7861, 0.23", "67.0792, 15.7215, -37.6382, 0.23", "68.4042, 16.0955, -38.3862, 0.23", "69.246, 16.4016, -39.0075, 0.23", "70.8316, 17.0821, -40.6629, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "42.5528, 14.3388, -33.6071, 0.46", "43.1824, 14.1101, -34.73, 0.46", "43.8009, 13.9237, -35.864, 0.68", "45.2233, 13.5429, -38.4353, 0.46", "45.7805, 13.4236, -39.4892, 0.68", "46.6394, 13.2712, -41.1152, 0.46", "47.3819, 13.1533, -42.5527, 0.46", "48.0728, 13.0885, -43.8203, 0.46", "49.2119, 13.0205, -45.7551, 0.46", "50.3073, 12.9557, -47.5117, 0.46", "51.4478, 12.8423, -49.2303, 0.46", "53.0545, 12.6693, -51.5884, 0.46", "54.1549, 12.5306, -53.1478, 0.46", "55.3572, 12.3613, -54.7314, 0.46", "56.4948, 12.1844, -56.1303, 0.46", "57.8049, 11.918, -57.5481, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.6543, -26.8936, 19.445, 0.68", "11.5207, -28.6264, 20.1549, 0.68", "12.5647, -30.7528, 20.8387, 0.68", "14.1968, -33.906, 21.6869, 0.68", "15.8566, -37.0345, 22.3995, 0.68", "17.5271, -40.1917, 23.0254, 0.68", "18.4603, -41.9561, 23.3249, 0.68", "20.3197, -45.3392, 23.6904, 0.68", "21.9392, -48.2095, 23.8051, 0.68", "23.5697, -51.2763, 23.8263, 0.68", "24.2312, -52.6918, 23.8299, 0.68", "25.5159, -55.8946, 23.8491, 0.46", "26.3096, -58.1439, 23.8981, 0.46", "26.9637, -60.2171, 23.9417, 0.46", "27.8883, -63.628, 23.8798, 0.46", "28.4585, -65.8707, 23.7239, 0.46", "29.1757, -68.4445, 23.3808, 0.68", "29.7202, -70.2453, 22.9466, 0.68", "30.5831, -72.4977, 22.2187, 0.46", "31.3942, -74.0709, 21.6431, 0.46", "32.0537, -75.1024, 21.1882, 0.46", "33.5649, -77.3302, 20.1402, 0.46", "34.7971, -79.2261, 19.2877, 0.46", "36.7042, -82.4658, 18.0558, 0.46", "38.3345, -85.6266, 17.164, 0.46", "38.8672, -86.8379, 16.912, 0.46", "39.3056, -88.0533, 16.7438, 0.68", "39.9618, -90.4219, 16.5341, 0.68", "40.3842, -92.6623, 16.4038, 0.46", "40.6354, -94.7565, 16.2195, 0.68", "40.8815, -97.1628, 15.9304, 0.46", "41.2178, -99.7433, 15.5743, 0.46", "41.4222, -100.91, 15.3888, 0.46", "42.2826, -104.638, 14.6308, 0.23", "43.1096, -107.468, 13.9313, 0.46", "43.9164, -109.663, 13.2366, 0.23", "44.6601, -111.333, 12.6368, 0.23", "45.6753, -113.267, 11.8548, 0.68", "46.8849, -115.265, 10.9851, 0.46", "48.1414, -117.048, 10.171, 0.68", "49.7374, -119.302, 9.18266, 0.37", "50.6437, -120.617, 8.58665, 0.29", "51.3004, -121.625, 8.11074, 0.29", "52.0071, -122.811, 7.55833, 0.29", "52.8001, -124.267, 6.94502, 0.44", "53.7387, -126.15, 6.23362, 0.22", "54.5527, -127.92, 5.72602, 0.29", "55.1791, -129.247, 5.34038, 0.59", "55.9035, -130.737, 4.93506, 0.59", "56.2333, -131.396, 4.77801, 0.59", "56.9519, -132.774, 4.46352, 0.44", "58.556, -135.845, 3.81417, 0.44", "59.4642, -137.706, 3.46389, 0.44", "59.9234, -138.771, 3.25532, 0.15", "60.1914, -139.497, 3.08028, 0.37", "60.5792, -140.781, 2.71449, 0.15", "60.799, -141.751, 2.39888, 0.15", "60.9678, -142.865, 1.97988, 0.15", "61.1246, -144.384, 1.36003, 0.73", "61.2338, -146.149, 0.581035, 0.37", "61.2621, -147.805, -0.179296, 0.29", "61.2429, -148.899, -0.677337, 0.15", "61.1754, -150.491, -1.36919, 0.51", "61.0965, -151.804, -1.93402, 0.22", "60.9352, -153.824, -2.76199, 0.15", "60.82, -155.248, -3.36136, 0.15", "60.6916, -157.199, -4.22036, 0.44", "60.6188, -158.916, -4.98644, 0.15", "60.5882, -160.581, -5.7145, 0.44", "60.632, -162.128, -6.37743, 0.15", "60.7594, -163.563, -6.99328, 0.15", "61.0251, -165.155, -7.66865, 0.44", "61.4038, -166.732, -8.31695, 0.29", "61.6698, -167.602, -8.63594, 0.29", "62.0205, -168.573, -8.96172, 0.29", "62.4491, -169.618, -9.28372, 0.66", "63.1499, -171.128, -9.7738, 0.22", "63.4659, -171.742, -9.99052, 0.22", "64.0425, -172.81, -10.371, 0.22", "64.8743, -174.377, -10.929, 0.22", "65.8624, -176.299, -11.6586, 0.73", "67.0568, -178.777, -12.6289, 0.29", "67.9399, -180.806, -13.4533, 0.07", "68.4754, -182.072, -14.0185, 0.22", "69.021, -183.421, -14.6369, 0.22", "69.3675, -184.313, -15.024, 0.22", "69.7271, -185.277, -15.4329, 0.37", "70.2066, -186.608, -15.9062, 0.15", "70.7847, -188.059, -16.462, 0.88", "71.8108, -190.433, -17.3691, 0.29", "72.3784, -191.649, -17.8457, 0.29", "72.9044, -192.763, -18.2633, 0.51", "73.6046, -194.276, -18.8607, 0.29", "74.3653, -195.896, -19.54, 0.73", "74.795, -196.811, -19.9387, 0.44", "75.591, -198.382, -20.7946, 0.29", "76.2449, -199.635, -21.5544, 0.15", "76.9913, -200.949, -22.4963, 0.51", "77.7693, -202.215, -23.466, 0.15", "78.5231, -203.385, -24.3021, 0.15", "79.7884, -205.268, -25.5254, 0.15", "80.0006, -205.565, -25.6987, 0.51", "81.4632, -207.463, -26.6825, 0.22", "82.5654, -208.786, -27.2315, 0.22", "83.8243, -210.233, -27.6743, 0.22", "85.0673, -211.557, -27.9397, 0.22", "85.9886, -212.497, -28.037, 0.22", "87.0048, -213.523, -28.0997, 0.22", "88.6432, -215.181, -28.1048, 0.22", "89.7891, -216.318, -28.1373, 0.22", "90.8539, -217.389, -28.1549, 0.22", "91.9744, -218.617, -28.1772, 0.22", "93.1988, -220.203, -28.1203, 0.44", "93.9062, -221.286, -28.0586, 0.22", "94.186, -221.799, -28.0052, 0.37", "95.0928, -223.798, -27.686, 0.15", "95.8474, -225.677, -27.3129, 0.15", "96.5356, -227.504, -26.8924, 0.37", "96.9155, -228.602, -26.6137, 0.51", "97.7882, -231.244, -25.939, 0.22", "98.5371, -233.573, -25.3311, 0.29", "98.949, -234.944, -24.989, 0.29", "99.3008, -236.246, -24.6861, 0.51", "99.7163, -237.89, -24.363, 0.22", "100.133, -239.587, -24.0976, 0.88", "100.622, -241.515, -23.8972, 0.07", "100.912, -242.595, -23.7804, 0.07", "101.464, -244.679, -23.523, 0.51", "102.039, -246.88, -23.2606, 0.29", "102.497, -248.779, -23.0335, 0.07", "102.761, -250.112, -22.7821, 0.37", "103.196, -252.638, -22.1891, 0.07", "103.344, -253.59, -21.9223, 0.07", "103.523, -255.153, -21.3905, 0.37", "103.641, -256.793, -20.7834, 0.59", "103.734, -259.586, -19.671, 0.22", "103.74, -260.602, -19.2579, 0.22", "103.731, -262.135, -18.666, 0.22", "103.699, -264.726, -17.5535, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.6543, -26.8936, 19.445, 0.68", "10.2164, -28.8944, 18.5226, 0.68", "9.89596, -30.2899, 17.8652, 0.68", "9.32665, -32.561, 16.743, 0.91", "8.64082, -35.0945, 15.4788, 0.91", "7.95278, -37.4938, 14.2518, 0.68", "7.24551, -39.8535, 13.0856, 0.68", "6.73573, -41.4749, 12.3489, 0.68", "6.15829, -43.3141, 11.5739, 0.68", "5.83259, -44.5114, 11.1122, 0.46", "5.60762, -45.545, 10.7289, 0.68", "5.30056, -47.6526, 9.91684, 0.68", "5.15799, -49.7946, 9.04327, 0.68", "5.2063, -51.7933, 8.21184, 0.68", "5.42414, -53.6003, 7.37414, 0.46", "5.82426, -55.4231, 6.40331, 0.46", "6.21109, -56.6484, 5.65973, 0.68", "6.43214, -57.1961, 5.25624, 0.68", "7.03958, -58.3757, 4.24468, 0.68", "7.82939, -59.6828, 2.98016, 0.68", "8.42279, -60.6312, 2.07454, 0.68", "9.00396, -61.5567, 1.22977, 0.46", "9.71206, -62.7477, 0.2458, 0.68", "10.6539, -64.2386, -0.951738, 0.68", "11.2128, -65.0323, -1.63352, 0.68", "12.3129, -66.3834, -2.89249, 0.91", "13.5863, -67.7534, -4.27727, 0.68", "15.0668, -69.1764, -5.7789, 0.91", "16.8496, -70.7517, -7.51769, 0.91", "18.708, -72.3542, -9.31014, 0.68", "20.0704, -73.4467, -10.5954, 0.91", "21.2836, -74.2783, -11.7071, 0.46", "22.2314, -74.8455, -12.5619, 0.68", "23.7886, -75.6868, -13.9258, 0.23", "25.2626, -76.4546, -15.1372, 0.68", "26.4761, -77.105, -16.0191, 0.68", "27.6451, -77.7355, -16.7976, 0.68", "29.0248, -78.4989, -17.7179, 0.68", "30.4021, -79.2637, -18.6146, 0.46", "31.4909, -79.8739, -19.2826, 0.46", "33.3969, -80.9691, -20.4216, 0.68", "35.2576, -82.1151, -21.4772, 0.23", "37.204, -83.4227, -22.575, 0.23", "39.2943, -84.8547, -23.7446, 0.23", "40.2018, -85.4804, -24.2658, 0.46", "41.866, -86.6194, -25.1717, 0.23", "42.6721, -87.1394, -25.5974, 0.46", "45.4402, -88.836, -26.9351, 0.23", "48.6044, -90.7045, -28.2681, 0.23", "51.1702, -92.211, -29.2045, 0.46", "53.0676, -93.3171, -29.8837, 0.46", "54.9048, -94.374, -30.513, 0.23", "56.4976, -95.2615, -31.03, 0.46", "59.8601, -97.0581, -31.8851, 0.23", "61.9603, -98.184, -32.2513, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.91454, -22.5836, 29.5635, 0.68", "7.93675, -24.1221, 30.8195, 0.68", "7.07022, -25.5151, 32.034, 0.68", "6.40165, -26.4684, 32.9639, 0.46", "5.64125, -27.4962, 34.048, 0.46", "5.05906, -28.236, 34.8903, 0.68", "4.30704, -29.0931, 35.9071, 0.46", "3.54957, -29.843, 36.8829, 0.46", "2.61067, -30.5211, 37.9766, 0.68", "1.62215, -31.0242, 39.0214, 0.68", "0.709296, -31.3654, 39.9129, 0.68", "-0.550327, -31.7068, 41.0427, 0.46", "-1.51781, -31.8885, 41.8114, 0.68", "-3.1665, -32.1291, 42.9693, 0.46", "-4.29323, -32.299, 43.7179, 0.46", "-5.33582, -32.4589, 44.346, 0.46", "-6.25798, -32.5957, 44.882, 0.46", "-6.90484, -32.7009, 45.2661, 0.46", "-7.74172, -32.8831, 45.7275, 0.46", "-8.95601, -33.2944, 46.3232, 0.46", "-10.2743, -33.8023, 46.9822, 0.46" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.91454, -22.5836, 29.5635, 0.68", "8.80957, -23.0875, 30.6908, 0.68", "8.65426, -23.7072, 32.1011, 0.68", "8.49814, -24.2226, 33.1422, 0.68", "8.25941, -24.9162, 34.3565, 0.68", "8.01272, -25.633, 35.6115, 0.68", "7.87773, -26.0252, 36.2982, 0.68", "7.46619, -26.8099, 37.655, 0.68", "6.94171, -27.5262, 38.9059, 0.68", "6.56839, -28.1045, 39.7754, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-60.3956, -41.4767, -79.764, 0.23", "-60.9663, -39.2269, -80.2831, 0.23", "-61.3074, -37.9204, -80.6993, 0.23", "-61.6199, -36.7695, -81.1169, 0.46", "-62.1204, -34.9249, -81.7862, 0.23", "-62.5588, -33.3096, -82.3722, 0.23", "-62.9319, -31.9342, -82.8712, 0.46", "-63.3419, -30.117, -83.6695, 0.23", "-63.4333, -29.7499, -83.813, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-60.3956, -41.4767, -79.764, 0.23", "-61.5471, -42.649, -80.0959, 0.23", "-62.7478, -43.8886, -80.7415, 0.23", "-64.0426, -45.3088, -81.677, 0.68", "-64.9394, -46.4383, -82.5077, 0.23", "-66.0118, -47.953, -83.8515, 0.46", "-67.5808, -50.3032, -86.38, 0.23", "-68.3312, -51.6839, -88.218, 0.23", "-68.8167, -52.6751, -89.6931, 0.23", "-69.3131, -53.7928, -91.5791, 0.68", "-69.9665, -55.4408, -94.6985, 0.68", "-70.3865, -56.761, -97.4954, 0.68", "-70.6562, -58.1874, -100.536, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "32.5056, 43.5395, -26.3062, 0.23", "30.5585, 44.1052, -25.1877, 0.23", "28.3769, 44.7392, -23.9344, 0.23", "26.7293, 45.2179, -22.988, 0.23", "24.8062, 45.7767, -21.8832, 0.23", "23.108, 46.2701, -20.9076, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "32.5056, 43.5395, -26.3062, 0.23", "33.9216, 44.1766, -27.9109, 0.23", "34.9729, 44.6929, -29.304, 0.23", "36.5314, 45.4583, -31.3694, 0.23", "38.2458, 46.3001, -33.6411, 0.46", "39.523, 46.9274, -35.3337, 0.23", "41.1432, 47.723, -37.4808, 0.23", "43.0397, 48.5982, -40.2833, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.56839, -28.1045, 39.7754, 0.68", "6.13513, -28.174, 40.425, 0.68", "4.5211, -28.4333, 42.845, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.56839, -28.1045, 39.7754, 0.68", "6.86581, -28.6811, 40.5157, 0.68", "7.49716, -29.8328, 41.8848, 0.68", "7.90766, -30.3906, 42.491, 0.68", "8.25305, -30.8599, 43.0011, 1.14", "8.81216, -31.6196, 43.8269, 0.91", "9.32736, -32.3196, 44.5878, 0.46", "9.80994, -32.9516, 45.2592, 0.23", "11.042, -34.2746, 46.5889, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.5211, -28.4333, 42.845, 0.46", "3.94859, -29.417, 43.5725, 0.46", "3.16852, -30.7574, 44.5636, 0.46", "2.69424, -31.5723, 45.1663, 0.46", "2.08377, -32.6212, 45.9419, 0.46", "1.35568, -33.8723, 46.867, 0.23", "0.721527, -34.9619, 47.6728, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.5211, -28.4333, 42.845, 0.46", "4.44324, -26.9278, 44.3475, 0.46", "4.39049, -25.9077, 45.3656, 0.46", "4.36834, -25.4794, 45.793, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_53", "dend_34", "dend_13", "dend_0", "dend_55", "dend_54", "dend_44", "dend_35", "dend_29", "dend_14", "dend_10", "dend_1", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_36", "dend_31", "dend_30", "dend_26", "dend_15", "dend_12", "dend_11", "dend_7", "dend_2", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_33", "dend_32", "dend_28", "dend_27", "dend_23", "dend_16", "dend_9", "dend_8", "dend_6", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_25", "dend_24", "dend_22", "dend_17", "dend_5", "dend_4", "dend_51", "dend_50", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_53", "dend_34", "dend_13", "dend_0", "dend_55", "dend_54", "dend_44", "dend_35", "dend_29", "dend_14", "dend_10", "dend_1", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_36", "dend_31", "dend_30", "dend_26", "dend_15", "dend_12", "dend_11", "dend_7", "dend_2", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_33", "dend_32", "dend_28", "dend_27", "dend_23", "dend_16", "dend_9", "dend_8", "dend_6", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_25", "dend_24", "dend_22", "dend_17", "dend_5", "dend_4", "dend_51", "dend_50", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_SLAC_9d4b6f19da_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000021234835014)
    connect dend_53(0), soma_0(0.45000021234835014)
    connect dend_34(0), soma_0(0.45000021234835014)
    connect dend_13(0), soma_0(0.45000021234835014)
    connect dend_0(0), soma_0(0.45000021234835014)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.86979, -3.62109, 0.0, 3.40802 ) }
    soma_0 { pt3dadd( -3.4648, -3.20389, 0.0, 6.39426 ) }
    soma_0 { pt3dadd( -3.05982, -2.7867, 0.0, 8.90883 ) }
    soma_0 { pt3dadd( -2.65483, -2.36951, 0.0, 9.83284 ) }
    soma_0 { pt3dadd( -2.24985, -1.95232, 0.0, 10.3489 ) }
    soma_0 { pt3dadd( -1.84486, -1.53513, 0.0, 10.7154 ) }
    soma_0 { pt3dadd( -1.43988, -1.11794, 0.0, 10.9388 ) }
    soma_0 { pt3dadd( -1.03489, -0.700747, 0.0, 11.0039 ) }
    soma_0 { pt3dadd( -0.629907, -0.283556, 0.0, 11.0691 ) }
    soma_0 { pt3dadd( -0.224923, 0.133635, 0.0, 10.9504 ) }
    soma_0 { pt3dadd( 0.180062, 0.550827, 0.0, 10.7888 ) }
    soma_0 { pt3dadd( 0.585047, 0.968018, 0.0, 10.5771 ) }
    soma_0 { pt3dadd( 0.990032, 1.38521, 0.0, 10.3653 ) }
    soma_0 { pt3dadd( 1.39502, 1.8024, 0.0, 9.98268 ) }
    soma_0 { pt3dadd( 1.8, 2.21959, 0.0, 9.53555 ) }
    soma_0 { pt3dadd( 2.20499, 2.63678, 0.0, 8.94537 ) }
    soma_0 { pt3dadd( 2.60997, 3.05397, 0.0, 8.30699 ) }
    soma_0 { pt3dadd( 3.01496, 3.47116, 0.0, 7.27769 ) }
    soma_0 { pt3dadd( 3.41994, 3.88836, 0.0, 6.11009 ) }
    soma_0 { pt3dadd( 3.82493, 4.30555, 0.0, 4.18013 ) }
    soma_0 { pt3dadd( 4.22991, 4.72274, 0.0, 2.41866 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.93111, 4.51573, 8.39, 0.95 ) }
    dend_58 { pt3dadd( 4.13621, 4.83521, 8.60373, 0.95 ) }
    dend_58 { pt3dadd( 4.50751, 5.35809, 9.09064, 0.95 ) }
    dend_58 { pt3dadd( 4.83792, 5.83498, 9.60463, 0.73 ) }
    dend_58 { pt3dadd( 5.20372, 6.3839, 10.2039, 0.59 ) }
    dend_58 { pt3dadd( 5.53803, 6.88822, 10.746, 1.1 ) }
    dend_58 { pt3dadd( 5.98869, 7.56805, 11.4767, 1.25 ) }
    dend_58 { pt3dadd( 6.68301, 8.52936, 12.5883, 1.62 ) }
    dend_58 { pt3dadd( 6.98632, 8.92324, 13.0804, 2.35 ) }
    dend_58 { pt3dadd( 7.20102, 9.19527, 13.4611, 2.35 ) }
    dend_58 { pt3dadd( 7.34821, 9.40204, 13.7642, 2.35 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 0.311109, 5.87423, -3.6, 1.14 ) }
    dend_53 { pt3dadd( -0.289126, 6.13876, -4.37195, 1.14 ) }
    dend_53 { pt3dadd( -0.590922, 6.2845, -4.86174, 0.91 ) }
    dend_53 { pt3dadd( -1.12597, 6.67565, -6.11566, 0.91 ) }
    dend_53 { pt3dadd( -1.50054, 7.0734, -7.14741, 0.91 ) }
    dend_53 { pt3dadd( -1.92364, 7.48186, -8.29845, 0.91 ) }
    dend_53 { pt3dadd( -2.24388, 7.78196, -9.22247, 0.91 ) }
    dend_53 { pt3dadd( -2.45787, 7.98153, -9.83573, 0.91 ) }
    dend_53 { pt3dadd( -3.06837, 8.61463, -11.7284, 0.91 ) }
    dend_53 { pt3dadd( -3.67884, 9.28801, -13.6969, 0.68 ) }
    dend_53 { pt3dadd( -4.23675, 9.8972, -15.4845, 0.68 ) }
    dend_53 { pt3dadd( -4.80887, 10.4469, -17.0726, 0.68 ) }
    dend_53 { pt3dadd( -5.38611, 10.89, -18.3862, 0.68 ) }
    dend_53 { pt3dadd( -5.73412, 11.1214, -19.1427, 0.68 ) }
    dend_53 { pt3dadd( -5.97681, 11.2589, -19.6481, 0.68 ) }
    dend_53 { pt3dadd( -6.50641, 11.4989, -20.6802, 0.68 ) }
    dend_53 { pt3dadd( -7.45512, 11.9238, -22.333, 0.68 ) }
    dend_53 { pt3dadd( -8.11648, 12.1116, -23.2295, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 50/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.09111, 3.59423, -1.73, 2.96 ) }
    dend_34 { pt3dadd( 5.09111, 3.59423, -1.73, 2.96 ) }
    dend_34 { pt3dadd( 6.18739, 4.13019, -2.75136, 2.51 ) }
    dend_34 { pt3dadd( 7.67808, 4.85897, -4.14018, 2.05 ) }
    dend_34 { pt3dadd( 9.22272, 5.61413, -5.57925, 1.37 ) }
    dend_34 { pt3dadd( 10.4695, 6.22364, -6.74077, 1.37 ) }
    dend_34 { pt3dadd( 11.7721, 6.86048, -7.95439, 1.37 ) }
    dend_34 { pt3dadd( 12.7523, 7.33458, -8.85814, 1.37 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 58/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.23111, -3.35027, 4.27, 5.47 ) }
    dend_13 { pt3dadd( 2.23111, -3.35027, 4.27, 5.47 ) }
    dend_13 { pt3dadd( 3.07429, -4.7626, 4.12947, 3.87 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.55889, 0.620726, -1.0, 1.59 ) }
    dend_0 { pt3dadd( -6.29298, 0.669777, -1.84405, 1.37 ) }
    dend_0 { pt3dadd( -7.20766, 0.730895, -2.89574, 1.37 ) }
    dend_0 { pt3dadd( -8.20322, 0.797417, -4.04044, 1.14 ) }
    dend_0 { pt3dadd( -8.48222, 0.81606, -4.36123, 1.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.22991, 4.72274, 0.0, 0.68 ) }
    axon_0 { pt3dadd( 14.6779, 15.4856, 0.0, 0.68 ) }
    axon_0 { pt3dadd( 25.1259, 26.2485, 0.0, 0.68 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -8.11648, 12.1116, -23.2295, 0.68 ) }
    dend_55 { pt3dadd( -7.93128, 13.0035, -24.9944, 0.68 ) }
    dend_55 { pt3dadd( -7.69605, 14.1363, -27.2359, 0.91 ) }
    dend_55 { pt3dadd( -7.48173, 15.1685, -29.2782, 0.91 ) }
    dend_55 { pt3dadd( -7.23627, 16.3506, -31.6173, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 74/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -8.11648, 12.1116, -23.2295, 0.23 ) }
    dend_54 { pt3dadd( -9.03138, 10.9292, -23.6747, 0.23 ) }
    dend_54 { pt3dadd( -10.1395, 9.28082, -24.3644, 0.23 ) }
    dend_54 { pt3dadd( -10.7615, 8.23071, -24.8123, 0.23 ) }
    dend_54 { pt3dadd( -11.089, 7.663, -25.0667, 0.46 ) }
    dend_54 { pt3dadd( -11.4742, 7.08187, -25.2557, 0.23 ) }
    dend_54 { pt3dadd( -12.4326, 5.94871, -25.5206, 0.23 ) }
    dend_54 { pt3dadd( -12.9833, 5.45653, -25.5838, 0.46 ) }
    dend_54 { pt3dadd( -14.2649, 4.61685, -25.5779, 0.23 ) }
    dend_54 { pt3dadd( -15.272, 4.03005, -25.5412, 0.23 ) }
    dend_54 { pt3dadd( -18.2571, 2.51206, -25.3445, 0.23 ) }
    dend_54 { pt3dadd( -20.8745, 1.37883, -25.0726, 0.23 ) }
    dend_54 { pt3dadd( -22.8318, 0.684521, -24.7796, 0.23 ) }
    dend_54 { pt3dadd( -24.0807, 0.305014, -24.5472, 0.46 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 12.7523, 7.33458, -8.85814, 0.91 ) }
    dend_44 { pt3dadd( 14.04, 7.99845, -9.24974, 0.91 ) }
    dend_44 { pt3dadd( 16.125, 9.07326, -9.88375, 0.68 ) }
    dend_44 { pt3dadd( 18.5196, 10.3077, -10.6119, 0.68 ) }
    dend_44 { pt3dadd( 20.5643, 11.3618, -11.2337, 0.68 ) }
    dend_44 { pt3dadd( 22.5154, 12.3676, -11.827, 1.14 ) }
    dend_44 { pt3dadd( 23.4525, 12.8508, -12.112, 1.14 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.7523, 7.33458, -8.85814, 0.91 ) }
    dend_35 { pt3dadd( 13.7148, 7.9584, -10.0698, 0.91 ) }
    dend_35 { pt3dadd( 14.6378, 8.59733, -11.3122, 0.91 ) }
    dend_35 { pt3dadd( 15.067, 8.90418, -11.8818, 0.91 ) }
    dend_35 { pt3dadd( 15.5707, 9.30185, -12.5882, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_35 { pt3dadd( 16.6194, 10.1299, -14.0592, 0.91 ) }
    dend_35 { pt3dadd( 17.6983, 10.9816, -15.5723, 0.91 ) }
    dend_35 { pt3dadd( 18.8172, 11.7766, -16.9623, 0.91 ) }
    dend_35 { pt3dadd( 19.5021, 12.2737, -17.8166, 0.68 ) }
    dend_35 { pt3dadd( 20.0865, 12.6901, -18.5841, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 5/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.07429, -4.7626, 4.12947, 1.82 ) }
    dend_29 { pt3dadd( 3.51078, -6.01822, 3.33268, 1.82 ) }
    dend_29 { pt3dadd( 3.78978, -7.46569, 2.35842, 1.59 ) }
    dend_29 { pt3dadd( 3.90593, -8.30939, 1.74141, 1.37 ) }
    dend_29 { pt3dadd( 4.03746, -9.20637, 1.02028, 0.91 ) }
    dend_29 { pt3dadd( 4.25482, -10.4663, -0.107088, 0.91 ) }
    dend_29 { pt3dadd( 4.51917, -11.7881, -1.3297, 0.91 ) }
    dend_29 { pt3dadd( 4.82646, -13.1546, -2.7295, 0.91 ) }
    dend_29 { pt3dadd( 5.18979, -14.3841, -4.10291, 0.91 ) }
    dend_29 { pt3dadd( 5.50915, -15.259, -5.20508, 0.91 ) }
    dend_29 { pt3dadd( 5.88437, -16.0382, -6.31577, 0.91 ) }
    dend_29 { pt3dadd( 6.54017, -17.0095, -7.86117, 0.91 ) }
    dend_29 { pt3dadd( 7.15473, -17.719, -9.07801, 0.68 ) }
    dend_29 { pt3dadd( 7.97253, -18.5327, -10.5552, 0.91 ) }
    dend_29 { pt3dadd( 8.55509, -19.0851, -11.5779, 0.91 ) }
    dend_29 { pt3dadd( 9.18095, -19.6937, -12.685, 0.68 ) }
    dend_29 { pt3dadd( 9.66973, -20.1656, -13.5572, 0.68 ) }
    dend_29 { pt3dadd( 10.375, -20.772, -14.9164, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.07429, -4.7626, 4.12947, 3.64 ) }
    dend_14 { pt3dadd( 3.469, -5.25994, 5.46861, 3.64 ) }
    dend_14 { pt3dadd( 3.99557, -5.92343, 7.25512, 3.64 ) }
    dend_14 { pt3dadd( 4.48436, -6.53931, 8.91345, 3.64 ) }
    dend_14 { pt3dadd( 5.01882, -7.21274, 10.7267, 3.42 ) }
    dend_14 { pt3dadd( 5.44191, -7.74583, 12.1622, 3.42 ) }
    dend_14 { pt3dadd( 5.79476, -8.19043, 13.3593, 3.42 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.48222, 0.81606, -4.36123, 0.68 ) }
    dend_10 { pt3dadd( -8.32927, 0.897362, -5.09847, 0.68 ) }
    dend_10 { pt3dadd( -7.7381, 1.47366, -7.13951, 0.68 ) }
    dend_10 { pt3dadd( -6.89905, 2.30049, -9.27831, 0.68 ) }
    dend_10 { pt3dadd( -6.07287, 3.05734, -11.0838, 0.68 ) }
    dend_10 { pt3dadd( -5.35377, 3.7179, -12.4877, 0.68 ) }
    dend_10 { pt3dadd( -4.49146, 4.45175, -14.0168, 0.46 ) }
    dend_10 { pt3dadd( -3.29382, 5.38373, -15.719, 0.46 ) }
    dend_10 { pt3dadd( -2.08568, 6.28493, -17.1212, 0.46 ) }
    dend_10 { pt3dadd( -0.421104, 7.484, -18.8832, 0.46 ) }
    dend_10 { pt3dadd( 1.04576, 8.47108, -20.3521, 0.46 ) }
    dend_10 { pt3dadd( 2.34388, 9.28827, -21.6356, 0.46 ) }
    dend_10 { pt3dadd( 3.88039, 10.1757, -23.1793, 0.46 ) }
    dend_10 { pt3dadd( 5.96514, 11.2755, -25.1924, 0.23 ) }
    dend_10 { pt3dadd( 7.26899, 11.9821, -26.406, 0.23 ) }
    dend_10 { pt3dadd( 8.70677, 12.7529, -27.6384, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 46/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.48222, 0.81606, -4.36123, 1.14 ) }
    dend_1 { pt3dadd( -9.21364, 0.694982, -4.74435, 1.14 ) }
    dend_1 { pt3dadd( -9.61747, 0.646263, -4.9216, 1.14 ) }
    dend_1 { pt3dadd( -10.5874, 0.57244, -5.29807, 1.14 ) }
    dend_1 { pt3dadd( -11.6979, 0.487918, -5.7291, 1.14 ) }
    dend_1 { pt3dadd( -13.5935, 0.343645, -6.46484, 1.14 ) }
    dend_1 { pt3dadd( -14.5311, 0.27229, -6.82872, 1.14 ) }
    dend_1 { pt3dadd( -16.5415, 0.124851, -7.52966, 0.68 ) }
    dend_1 { pt3dadd( -17.993, 0.0487481, -8.02575, 0.91 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 25.1259, 26.2485, 0.0, 0.260922 ) }
    axon_1 { pt3dadd( 35.5738, 37.0114, 0.0, 0.260922 ) }
    axon_1 { pt3dadd( 46.0218, 47.7743, 0.0, 0.260922 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -7.23627, 16.3506, -31.6173, 0.46 ) }
    dend_57 { pt3dadd( -8.53532, 17.3664, -33.797, 0.46 ) }
    dend_57 { pt3dadd( -9.84075, 18.2093, -35.9055, 0.46 ) }
    dend_57 { pt3dadd( -10.742, 18.7674, -37.3487, 0.46 ) }
    dend_57 { pt3dadd( -11.3312, 19.1786, -38.4243, 0.46 ) }
    dend_57 { pt3dadd( -12.3613, 19.9719, -40.4838, 0.68 ) }
    dend_57 { pt3dadd( -13.309, 20.8492, -42.7052, 0.68 ) }
    dend_57 { pt3dadd( -14.3282, 21.9374, -45.5688, 0.68 ) }
    dend_57 { pt3dadd( -15.0118, 22.7581, -47.8109, 0.68 ) }
    dend_57 { pt3dadd( -15.7057, 23.729, -50.6869, 0.68 ) }
    dend_57 { pt3dadd( -16.1063, 24.5422, -53.2177, 0.68 ) }
    dend_57 { pt3dadd( -16.3453, 25.4946, -56.4242, 0.68 ) }
    dend_57 { pt3dadd( -16.4348, 26.346, -59.4706, 0.68 ) }
    dend_57 { pt3dadd( -16.3731, 27.0967, -62.3011, 0.68 ) }
    dend_57 { pt3dadd( -16.299, 27.5913, -64.4624, 0.68 ) }
    dend_57 { pt3dadd( -16.2291, 28.0077, -66.8408, 0.68 ) }
    dend_57 { pt3dadd( -16.1187, 28.3793, -69.8356, 0.68 ) }
    dend_57 { pt3dadd( -16.0872, 28.4832, -71.1166, 0.68 ) }
    dend_57 { pt3dadd( -15.9899, 28.7936, -76.9518, 0.46 ) }
    dend_57 { pt3dadd( -15.9661, 29.055, -83.6267, 0.46 ) }
    dend_57 { pt3dadd( -15.9992, 29.1989, -88.2014, 0.46 ) }
    dend_57 { pt3dadd( -16.0817, 29.2564, -91.8795, 0.46 ) }
    dend_57 { pt3dadd( -16.2146, 29.2639, -96.5002, 0.46 ) }
    dend_57 { pt3dadd( -16.3251, 29.208, -100.688, 0.46 ) }
    dend_57 { pt3dadd( -16.4576, 28.9658, -104.822, 0.46 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -7.23627, 16.3506, -31.6173, 0.23 ) }
    dend_56 { pt3dadd( -6.67935, 16.9137, -32.2704, 0.23 ) }
    dend_56 { pt3dadd( -5.85469, 17.7171, -33.2544, 0.46 ) }
    dend_56 { pt3dadd( -5.10863, 18.469, -34.1161, 0.46 ) }
    dend_56 { pt3dadd( -4.53623, 19.0738, -34.8007, 0.46 ) }
    dend_56 { pt3dadd( -3.97671, 19.6837, -35.489, 0.46 ) }
    dend_56 { pt3dadd( -3.57595, 20.1656, -36.0291, 0.46 ) }
    dend_56 { pt3dadd( -3.18193, 20.6476, -36.6158, 0.46 ) }
    dend_56 { pt3dadd( -2.73158, 21.2157, -37.3277, 0.68 ) }
    dend_56 { pt3dadd( -2.13313, 21.9456, -38.2585, 0.46 ) }
    dend_56 { pt3dadd( -1.39391, 22.7882, -39.3539, 0.46 ) }
    dend_56 { pt3dadd( -0.529851, 23.6446, -40.5059, 0.23 ) }
    dend_56 { pt3dadd( 0.365416, 24.4248, -41.6432, 0.46 ) }
    dend_56 { pt3dadd( 1.34214, 25.1497, -42.7614, 0.46 ) }
    dend_56 { pt3dadd( 2.00168, 25.5327, -43.4231, 0.46 ) }
    dend_56 { pt3dadd( 3.41539, 26.1899, -44.6129, 0.23 ) }
    dend_56 { pt3dadd( 5.27085, 26.8581, -45.9069, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( 6.5212, 27.2235, -46.6277, 0.23 ) }
    dend_56 { pt3dadd( 7.71695, 27.5003, -47.1989, 0.46 ) }
    dend_56 { pt3dadd( 9.39721, 27.7374, -47.874, 0.46 ) }
    dend_56 { pt3dadd( 10.5532, 27.8187, -48.312, 0.46 ) }
    dend_56 { pt3dadd( 11.7892, 27.8281, -48.7981, 0.46 ) }
    dend_56 { pt3dadd( 12.472, 27.8289, -49.1001, 0.46 ) }
    dend_56 { pt3dadd( 14.3653, 27.8443, -50.201, 0.46 ) }
    dend_56 { pt3dadd( 15.9674, 27.8789, -51.452, 0.46 ) }
    dend_56 { pt3dadd( 17.6553, 27.9241, -53.1631, 0.23 ) }
    dend_56 { pt3dadd( 18.8478, 27.9105, -54.5841, 0.23 ) }
    dend_56 { pt3dadd( 19.9802, 27.8204, -56.1326, 0.46 ) }
    dend_56 { pt3dadd( 21.6632, 27.4927, -58.6953, 0.46 ) }
    dend_56 { pt3dadd( 23.1716, 26.9954, -61.3444, 0.46 ) }
    dend_56 { pt3dadd( 24.355, 26.5356, -63.5884, 0.46 ) }
    dend_56 { pt3dadd( 25.1618, 26.1507, -65.1914, 0.23 ) }
    dend_56 { pt3dadd( 26.1835, 25.5343, -67.2725, 0.46 ) }
    dend_56 { pt3dadd( 27.3474, 24.6258, -69.6104, 0.46 ) }
    dend_56 { pt3dadd( 28.9196, 23.0886, -72.6549, 0.46 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 18/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 23.4525, 12.8508, -12.112, 0.68 ) }
    dend_52 { pt3dadd( 24.9214, 13.186, -12.9872, 0.68 ) }
    dend_52 { pt3dadd( 25.9308, 13.4286, -13.6613, 0.68 ) }
    dend_52 { pt3dadd( 27.3899, 13.7777, -14.7432, 0.68 ) }
    dend_52 { pt3dadd( 29.1336, 14.2141, -16.1302, 0.68 ) }
    dend_52 { pt3dadd( 30.3969, 14.5803, -17.1875, 0.68 ) }
    dend_52 { pt3dadd( 31.7442, 15.045, -18.4204, 0.68 ) }
    dend_52 { pt3dadd( 32.9605, 15.5261, -19.6484, 0.68 ) }
    dend_52 { pt3dadd( 34.2026, 16.0997, -21.0835, 0.68 ) }
    dend_52 { pt3dadd( 35.5928, 16.7492, -22.9486, 0.46 ) }
    dend_52 { pt3dadd( 36.5975, 17.1839, -24.4308, 0.46 ) }
    dend_52 { pt3dadd( 37.6799, 17.5722, -26.0858, 0.46 ) }
    dend_52 { pt3dadd( 38.4031, 17.7454, -27.2126, 0.46 ) }
    dend_52 { pt3dadd( 39.4017, 17.8504, -28.9935, 0.46 ) }
    dend_52 { pt3dadd( 40.2671, 17.8251, -30.6741, 0.23 ) }
    dend_52 { pt3dadd( 41.1796, 17.6709, -32.6331, 0.23 ) }
    dend_52 { pt3dadd( 41.7172, 17.5492, -33.8779, 0.68 ) }
    dend_52 { pt3dadd( 42.824, 17.3332, -36.5358, 0.68 ) }
    dend_52 { pt3dadd( 44.3316, 17.1201, -40.2463, 0.68 ) }
    dend_52 { pt3dadd( 44.7752, 17.1048, -41.3653, 0.91 ) }
    dend_52 { pt3dadd( 45.9459, 17.2731, -44.442, 0.46 ) }
    dend_52 { pt3dadd( 46.9654, 17.5915, -47.3089, 0.46 ) }
    dend_52 { pt3dadd( 48.1256, 18.0375, -50.3297, 0.23 ) }
    dend_52 { pt3dadd( 48.4831, 18.1539, -51.1309, 0.68 ) }
    dend_52 { pt3dadd( 50.0224, 18.5879, -54.2086, 0.23 ) }
    dend_52 { pt3dadd( 51.6753, 18.9754, -57.1959, 0.46 ) }
    dend_52 { pt3dadd( 53.7052, 19.3452, -60.4836, 0.46 ) }
    dend_52 { pt3dadd( 56.2564, 19.6413, -64.0783, 0.23 ) }
    dend_52 { pt3dadd( 59.1273, 19.8287, -67.7176, 0.23 ) }
    dend_52 { pt3dadd( 62.244, 19.952, -71.5274, 0.23 ) }
    dend_52 { pt3dadd( 63.8789, 19.9375, -73.3402, 0.23 ) }
    dend_52 { pt3dadd( 65.568, 19.8276, -74.9971, 0.23 ) }
    dend_52 { pt3dadd( 68.0907, 19.5801, -77.1415, 0.23 ) }
    dend_52 { pt3dadd( 68.6638, 19.5253, -77.5841, 0.46 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 52/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 23.4525, 12.8508, -12.112, 0.91 ) }
    dend_45 { pt3dadd( 23.782, 13.3345, -11.8642, 0.91 ) }
    dend_45 { pt3dadd( 24.6574, 14.6195, -11.206, 0.91 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 55/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 20.0865, 12.6901, -18.5841, 0.46 ) }
    dend_39 { pt3dadd( 20.8607, 12.816, -19.247, 0.46 ) }
    dend_39 { pt3dadd( 21.5483, 12.9625, -19.8858, 0.46 ) }
    dend_39 { pt3dadd( 22.4808, 13.1985, -20.8766, 0.46 ) }
    dend_39 { pt3dadd( 23.495, 13.4553, -21.9484, 0.46 ) }
    dend_39 { pt3dadd( 24.3363, 13.6571, -22.8479, 0.68 ) }
    dend_39 { pt3dadd( 25.1932, 13.8583, -23.7881, 0.68 ) }
    dend_39 { pt3dadd( 25.9833, 14.066, -24.6902, 0.46 ) }
    dend_39 { pt3dadd( 26.8162, 14.2744, -25.6588, 0.46 ) }
    dend_39 { pt3dadd( 27.5133, 14.4086, -26.4919, 0.91 ) }
    dend_39 { pt3dadd( 28.4697, 14.5396, -27.681, 0.68 ) }
    dend_39 { pt3dadd( 29.2505, 14.6068, -28.6484, 0.68 ) }
    dend_39 { pt3dadd( 29.8595, 14.636, -29.3872, 0.46 ) }
    dend_39 { pt3dadd( 30.1943, 14.6362, -29.7931, 0.68 ) }
    dend_39 { pt3dadd( 31.5104, 14.5964, -31.371, 0.46 ) }
    dend_39 { pt3dadd( 32.2536, 14.5563, -32.4229, 0.68 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 20.0865, 12.6901, -18.5841, 0.91 ) }
    dend_36 { pt3dadd( 19.4336, 14.1578, -18.9291, 0.91 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.375, -20.772, -14.9164, 0.46 ) }
    dend_31 { pt3dadd( 11.3646, -22.0774, -16.5266, 0.46 ) }
    dend_31 { pt3dadd( 12.2241, -23.1929, -18.0568, 0.46 ) }
    dend_31 { pt3dadd( 12.6724, -23.7323, -18.79, 0.68 ) }
    dend_31 { pt3dadd( 13.3721, -24.511, -19.9316, 0.68 ) }
    dend_31 { pt3dadd( 14.35, -25.4805, -21.4801, 0.68 ) }
    dend_31 { pt3dadd( 15.734, -26.7011, -23.6332, 0.46 ) }
    dend_31 { pt3dadd( 16.5143, -27.4169, -24.9238, 0.46 ) }
    dend_31 { pt3dadd( 17.979, -28.6721, -27.2913, 0.46 ) }
    dend_31 { pt3dadd( 19.2535, -29.6351, -29.2608, 0.68 ) }
    dend_31 { pt3dadd( 20.521, -30.4292, -31.1151, 0.46 ) }
    dend_31 { pt3dadd( 22.021, -31.2422, -33.232, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.375, -20.772, -14.9164, 0.46 ) }
    dend_30 { pt3dadd( 9.5213, -22.5032, -15.1096, 0.46 ) }
    dend_30 { pt3dadd( 8.64142, -24.1002, -15.2847, 0.46 ) }
    dend_30 { pt3dadd( 7.77471, -25.4941, -15.3815, 0.46 ) }
    dend_30 { pt3dadd( 7.19612, -26.3549, -15.4447, 0.46 ) }
    dend_30 { pt3dadd( 6.31665, -27.5988, -15.5312, 0.46 ) }
    dend_30 { pt3dadd( 5.18998, -29.0771, -15.6582, 0.46 ) }
    dend_30 { pt3dadd( 4.53024, -29.8078, -15.7319, 0.46 ) }
    dend_30 { pt3dadd( 2.94437, -31.254, -15.9947, 0.46 ) }
    dend_30 { pt3dadd( 1.94953, -32.031, -16.2747, 0.46 ) }
    dend_30 { pt3dadd( 1.15647, -32.5619, -16.5921, 0.68 ) }
    dend_30 { pt3dadd( -0.45283, -33.5274, -17.4919, 0.23 ) }
    dend_30 { pt3dadd( -1.93281, -34.3493, -18.5835, 0.46 ) }
    dend_30 { pt3dadd( -3.15052, -34.9891, -19.5852, 0.46 ) }
    dend_30 { pt3dadd( -4.43643, -35.6053, -20.8007, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( -5.74257, -36.1905, -22.1469, 0.46 ) }
    dend_30 { pt3dadd( -7.13541, -36.7829, -23.7779, 0.46 ) }
    dend_30 { pt3dadd( -7.86722, -37.0972, -24.8166, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.79476, -8.19043, 13.3593, 0.91 ) }
    dend_26 { pt3dadd( 7.57434, -9.1037, 12.9455, 0.91 ) }
    dend_26 { pt3dadd( 9.9985, -10.4859, 12.4277, 0.46 ) }
    dend_26 { pt3dadd( 12.0634, -11.6832, 12.0174, 0.68 ) }
    dend_26 { pt3dadd( 14.5139, -13.0823, 11.5681, 0.68 ) }
    dend_26 { pt3dadd( 16.6381, -14.3083, 11.1985, 0.68 ) }
    dend_26 { pt3dadd( 17.8494, -15.0437, 11.0185, 0.68 ) }
    dend_26 { pt3dadd( 19.7514, -16.2548, 10.8187, 0.68 ) }
    dend_26 { pt3dadd( 20.7649, -16.9312, 10.7378, 0.68 ) }
    dend_26 { pt3dadd( 22.2773, -17.9837, 10.6619, 0.46 ) }
    dend_26 { pt3dadd( 24.3945, -19.5368, 10.6247, 0.68 ) }
    dend_26 { pt3dadd( 26.882, -21.463, 10.7233, 0.46 ) }
    dend_26 { pt3dadd( 28.65, -22.842, 10.8721, 0.68 ) }
    dend_26 { pt3dadd( 30.3212, -24.1404, 11.1557, 0.68 ) }
    dend_26 { pt3dadd( 31.2999, -24.9243, 11.4563, 0.68 ) }
    dend_26 { pt3dadd( 33.1366, -26.4411, 12.4379, 0.46 ) }
    dend_26 { pt3dadd( 34.501, -27.5357, 13.5239, 0.46 ) }
    dend_26 { pt3dadd( 36.2742, -28.9048, 15.3499, 0.68 ) }
    dend_26 { pt3dadd( 37.5924, -29.9336, 17.034, 0.68 ) }
    dend_26 { pt3dadd( 39.0188, -31.0114, 19.1062, 0.68 ) }
    dend_26 { pt3dadd( 40.6208, -32.1429, 21.6813, 0.68 ) }
    dend_26 { pt3dadd( 41.2879, -32.5876, 22.9347, 0.68 ) }
    dend_26 { pt3dadd( 41.5728, -32.7858, 23.5868, 0.46 ) }
    dend_26 { pt3dadd( 41.9859, -33.0825, 24.8253, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.79476, -8.19043, 13.3593, 2.05 ) }
    dend_15 { pt3dadd( 6.03176, -9.56739, 14.6032, 2.05 ) }
    dend_15 { pt3dadd( 6.40128, -11.1421, 16.1101, 2.05 ) }
    dend_15 { pt3dadd( 6.66509, -12.2663, 17.1859, 2.05 ) }
    dend_15 { pt3dadd( 6.95912, -13.5193, 18.3849, 2.05 ) }
    dend_15 { pt3dadd( 7.2291, -14.6698, 19.4858, 1.59 ) }
    dend_15 { pt3dadd( 7.49733, -15.8129, 20.5797, 1.59 ) }
    dend_15 { pt3dadd( 7.7369, -16.885, 21.6215, 1.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 35/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.70677, 12.7529, -27.6384, 0.46 ) }
    dend_12 { pt3dadd( 9.26571, 12.9375, -28.1801, 0.46 ) }
    dend_12 { pt3dadd( 10.0125, 13.1842, -28.9039, 0.46 ) }
    dend_12 { pt3dadd( 11.4554, 13.6607, -30.3025, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.70677, 12.7529, -27.6384, 0.46 ) }
    dend_11 { pt3dadd( 8.15181, 13.5051, -29.0388, 0.46 ) }
    dend_11 { pt3dadd( 7.57168, 14.5743, -30.8121, 0.46 ) }
    dend_11 { pt3dadd( 7.07252, 15.6531, -32.4894, 0.46 ) }
    dend_11 { pt3dadd( 6.51851, 16.8298, -34.3459, 0.46 ) }
    dend_11 { pt3dadd( 5.94524, 17.9532, -36.205, 0.23 ) }
    dend_11 { pt3dadd( 5.15832, 19.3055, -38.572, 0.23 ) }
    dend_11 { pt3dadd( 4.7183, 19.9999, -39.8432, 0.46 ) }
    dend_11 { pt3dadd( 4.13461, 20.7989, -41.3641, 0.46 ) }
    dend_11 { pt3dadd( 3.202, 21.8908, -43.5704, 0.46 ) }
    dend_11 { pt3dadd( 2.34795, 22.7852, -45.4713, 0.46 ) }
    dend_11 { pt3dadd( 1.30665, 23.723, -47.5907, 0.46 ) }
    dend_11 { pt3dadd( 0.258795, 24.6019, -49.4882, 0.46 ) }
    dend_11 { pt3dadd( -0.802389, 25.4984, -51.3938, 0.23 ) }
    dend_11 { pt3dadd( -1.66556, 26.2889, -52.9292, 0.46 ) }
    dend_11 { pt3dadd( -2.62294, 27.3521, -54.8145, 0.46 ) }
    dend_11 { pt3dadd( -3.27609, 28.2573, -56.4413, 0.46 ) }
    dend_11 { pt3dadd( -4.26589, 29.7921, -59.1325, 0.23 ) }
    dend_11 { pt3dadd( -4.88533, 30.8616, -60.9934, 0.23 ) }
    dend_11 { pt3dadd( -5.17444, 31.4139, -61.9795, 0.46 ) }
    dend_11 { pt3dadd( -6.1156, 33.3533, -65.5181, 0.23 ) }
    dend_11 { pt3dadd( -7.26097, 35.9835, -70.4683, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.993, 0.0487481, -8.02575, 0.68 ) }
    dend_7 { pt3dadd( -19.4342, 0.205655, -8.32678, 0.68 ) }
    dend_7 { pt3dadd( -21.4529, 0.491836, -8.79707, 0.68 ) }
    dend_7 { pt3dadd( -22.3298, 0.636369, -8.99628, 0.68 ) }
    dend_7 { pt3dadd( -23.295, 0.791311, -9.20906, 0.68 ) }
    dend_7 { pt3dadd( -25.1775, 1.09563, -9.65063, 0.68 ) }
    dend_7 { pt3dadd( -27.7717, 1.54203, -10.3034, 0.46 ) }
    dend_7 { pt3dadd( -29.624, 1.91181, -10.8701, 0.46 ) }
    dend_7 { pt3dadd( -31.4009, 2.32805, -11.4273, 0.68 ) }
    dend_7 { pt3dadd( -32.0829, 2.49099, -11.6522, 0.46 ) }
    dend_7 { pt3dadd( -33.4539, 2.81236, -12.1312, 0.46 ) }
    dend_7 { pt3dadd( -34.5847, 3.04298, -12.5879, 0.91 ) }
    dend_7 { pt3dadd( -36.46, 3.4508, -13.4583, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.993, 0.0487481, -8.02575, 0.46 ) }
    dend_2 { pt3dadd( -19.0924, -0.842904, -9.19701, 0.46 ) }
    dend_2 { pt3dadd( -19.6042, -1.18509, -9.68925, 0.46 ) }
    dend_2 { pt3dadd( -20.1359, -1.51356, -10.1782, 0.46 ) }
    dend_2 { pt3dadd( -21.1367, -2.11766, -11.0399, 0.46 ) }
    dend_2 { pt3dadd( -22.0238, -2.62093, -11.7202, 0.46 ) }
    dend_2 { pt3dadd( -22.7276, -3.01012, -12.2328, 0.46 ) }
    dend_2 { pt3dadd( -23.6271, -3.46026, -12.7802, 0.46 ) }
    dend_2 { pt3dadd( -24.3733, -3.82748, -13.2243, 0.46 ) }
    dend_2 { pt3dadd( -24.9626, -4.15048, -13.5864, 0.46 ) }
    dend_2 { pt3dadd( -25.882, -4.68412, -14.1517, 0.23 ) }
    dend_2 { pt3dadd( -27.0867, -5.42977, -14.8742, 0.23 ) }
    dend_2 { pt3dadd( -27.5602, -5.74322, -15.1621, 0.46 ) }
    dend_2 { pt3dadd( -28.469, -6.38939, -15.7268, 0.68 ) }
    dend_2 { pt3dadd( -29.3904, -7.06087, -16.3218, 0.46 ) }
    dend_2 { pt3dadd( -30.1404, -7.63636, -16.8578, 0.46 ) }
    dend_2 { pt3dadd( -31.0431, -8.41877, -17.5839, 0.68 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 24.6574, 14.6195, -11.206, 0.46 ) }
    dend_47 { pt3dadd( 25.3694, 15.7154, -11.9394, 0.46 ) }
    dend_47 { pt3dadd( 25.8736, 16.4918, -12.459, 0.46 ) }
    dend_47 { pt3dadd( 26.6684, 17.7152, -13.2777, 0.68 ) }
    dend_47 { pt3dadd( 28.0052, 19.7732, -14.6551, 0.46 ) }
    dend_47 { pt3dadd( 28.7188, 20.8717, -15.3902, 0.68 ) }
    dend_47 { pt3dadd( 29.6175, 22.2553, -16.3162, 0.68 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 98/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 24.6574, 14.6195, -11.206, 0.23 ) }
    dend_46 { pt3dadd( 26.2164, 15.4478, -10.5278, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_46 { pt3dadd( 27.2712, 16.0151, -10.1069, 0.68 ) }
    dend_46 { pt3dadd( 28.872, 16.9109, -9.53212, 0.23 ) }
    dend_46 { pt3dadd( 30.1828, 17.6403, -9.10947, 0.23 ) }
    dend_46 { pt3dadd( 31.2778, 18.2589, -8.78685, 0.46 ) }
    dend_46 { pt3dadd( 32.8321, 19.1268, -8.38332, 0.23 ) }
    dend_46 { pt3dadd( 35.3419, 20.5185, -7.81631, 0.23 ) }
    dend_46 { pt3dadd( 36.861, 21.3693, -7.52717, 0.23 ) }
    dend_46 { pt3dadd( 38.319, 22.1843, -7.29804, 0.46 ) }
    dend_46 { pt3dadd( 39.3979, 22.783, -7.16635, 0.46 ) }
    dend_46 { pt3dadd( 41.4971, 23.964, -6.95646, 0.23 ) }
    dend_46 { pt3dadd( 43.1012, 24.8971, -6.80139, 0.46 ) }
    dend_46 { pt3dadd( 45.1063, 26.002, -6.65959, 0.23 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 12/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 32.2536, 14.5563, -32.4229, 0.46 ) }
    dend_43 { pt3dadd( 33.4986, 13.5461, -34.6853, 0.46 ) }
    dend_43 { pt3dadd( 34.8587, 12.5948, -36.8404, 0.46 ) }
    dend_43 { pt3dadd( 35.6953, 12.1336, -37.9832, 0.46 ) }
    dend_43 { pt3dadd( 36.7085, 11.6406, -39.3276, 0.46 ) }
    dend_43 { pt3dadd( 37.9688, 11.0712, -40.9523, 0.23 ) }
    dend_43 { pt3dadd( 39.4926, 10.4519, -42.8438, 0.46 ) }
    dend_43 { pt3dadd( 41.1655, 9.86099, -44.7504, 0.46 ) }
    dend_43 { pt3dadd( 43.743, 9.13043, -47.4205, 0.23 ) }
    dend_43 { pt3dadd( 45.3054, 8.76554, -48.9428, 0.23 ) }
    dend_43 { pt3dadd( 45.6615, 8.69823, -49.288, 0.23 ) }
    dend_43 { pt3dadd( 47.4355, 8.44186, -51.0418, 0.46 ) }
    dend_43 { pt3dadd( 49.1525, 8.17431, -52.7354, 0.23 ) }
    dend_43 { pt3dadd( 50.0602, 8.02862, -53.6234, 0.23 ) }
    dend_43 { pt3dadd( 51.0155, 7.86052, -54.6163, 0.46 ) }
    dend_43 { pt3dadd( 52.6749, 7.53638, -56.4168, 0.23 ) }
    dend_43 { pt3dadd( 55.1031, 7.03824, -59.0955, 0.23 ) }
    dend_43 { pt3dadd( 56.9279, 6.6782, -61.1807, 0.23 ) }
    dend_43 { pt3dadd( 57.7698, 6.54424, -62.1784, 0.46 ) }
    dend_43 { pt3dadd( 59.5009, 6.30731, -64.2855, 0.23 ) }
    dend_43 { pt3dadd( 60.9229, 6.2098, -66.0559, 0.23 ) }
    dend_43 { pt3dadd( 61.6998, 6.21489, -67.0767, 0.46 ) }
    dend_43 { pt3dadd( 63.5311, 6.40227, -69.6817, 0.23 ) }
    dend_43 { pt3dadd( 65.4306, 6.71784, -72.4276, 0.23 ) }
    dend_43 { pt3dadd( 65.8426, 6.80074, -73.0414, 0.46 ) }
    dend_43 { pt3dadd( 67.4781, 7.20487, -75.4779, 0.23 ) }
    dend_43 { pt3dadd( 69.3846, 7.78214, -78.5457, 0.23 ) }
    dend_43 { pt3dadd( 70.7811, 8.2298, -81.029, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 40/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 32.2536, 14.5563, -32.4229, 0.46 ) }
    dend_40 { pt3dadd( 34.0133, 14.5191, -32.6252, 0.46 ) }
    dend_40 { pt3dadd( 37.265, 14.4505, -32.9991, 0.23 ) }
    dend_40 { pt3dadd( 38.7222, 14.4197, -33.1666, 0.23 ) }
    dend_40 { pt3dadd( 40.3024, 14.3863, -33.3483, 0.68 ) }
    dend_40 { pt3dadd( 41.1921, 14.3676, -33.4506, 0.23 ) }
    dend_40 { pt3dadd( 42.5528, 14.3388, -33.6071, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 19.4336, 14.1578, -18.9291, 0.46 ) }
    dend_38 { pt3dadd( 19.8945, 14.8484, -20.753, 0.46 ) }
    dend_38 { pt3dadd( 20.2627, 15.5034, -22.2529, 0.46 ) }
    dend_38 { pt3dadd( 20.6377, 16.2953, -24.0117, 0.46 ) }
    dend_38 { pt3dadd( 20.9514, 17.1891, -25.9412, 0.68 ) }
    dend_38 { pt3dadd( 21.2138, 18.1358, -27.9694, 0.46 ) }
    dend_38 { pt3dadd( 21.29, 18.4522, -28.659, 0.68 ) }
    dend_38 { pt3dadd( 21.4992, 19.5749, -31.1107, 0.23 ) }
    dend_38 { pt3dadd( 21.6789, 20.7524, -33.84, 0.46 ) }
    dend_38 { pt3dadd( 21.7641, 21.6724, -36.2294, 0.46 ) }
    dend_38 { pt3dadd( 21.7739, 22.5682, -38.8531, 0.46 ) }
    dend_38 { pt3dadd( 21.6986, 23.0559, -40.5959, 0.46 ) }
    dend_38 { pt3dadd( 21.4582, 23.5965, -42.9838, 0.46 ) }
    dend_38 { pt3dadd( 21.2036, 23.8282, -44.401, 0.68 ) }
    dend_38 { pt3dadd( 20.5469, 24.1261, -46.9611, 0.68 ) }
    dend_38 { pt3dadd( 20.2724, 24.1825, -47.8038, 0.46 ) }
    dend_38 { pt3dadd( 19.2599, 24.2969, -50.4667, 0.46 ) }
    dend_38 { pt3dadd( 18.0346, 24.3932, -53.292, 0.23 ) }
    dend_38 { pt3dadd( 16.9946, 24.457, -55.3967, 0.23 ) }
    dend_38 { pt3dadd( 15.8386, 24.5477, -57.5558, 0.23 ) }
    dend_38 { pt3dadd( 14.896, 24.6244, -59.2426, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 68/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 19.4336, 14.1578, -18.9291, 0.23 ) }
    dend_37 { pt3dadd( 20.0593, 16.3004, -19.6493, 0.23 ) }
    dend_37 { pt3dadd( 20.399, 17.646, -20.221, 0.23 ) }
    dend_37 { pt3dadd( 20.6829, 18.9151, -20.8093, 0.46 ) }
    dend_37 { pt3dadd( 21.0266, 20.8014, -21.6669, 0.46 ) }
    dend_37 { pt3dadd( 21.2469, 22.0552, -22.2598, 0.46 ) }
    dend_37 { pt3dadd( 21.5095, 23.4149, -22.9364, 0.68 ) }
    dend_37 { pt3dadd( 21.7875, 25.1582, -23.9311, 0.46 ) }
    dend_37 { pt3dadd( 21.9173, 26.1907, -24.5869, 0.46 ) }
    dend_37 { pt3dadd( 22.0886, 27.3662, -25.4106, 0.68 ) }
    dend_37 { pt3dadd( 22.3386, 28.7343, -26.448, 0.68 ) }
    dend_37 { pt3dadd( 22.6602, 30.2051, -27.7196, 0.46 ) }
    dend_37 { pt3dadd( 23.0636, 31.545, -29.0673, 0.46 ) }
    dend_37 { pt3dadd( 23.6769, 32.9434, -30.6685, 0.46 ) }
    dend_37 { pt3dadd( 24.4851, 34.2487, -32.3025, 0.46 ) }
    dend_37 { pt3dadd( 25.3636, 35.5228, -34.0063, 0.46 ) }
    dend_37 { pt3dadd( 26.4753, 36.9976, -36.074, 0.46 ) }
    dend_37 { pt3dadd( 27.949, 38.7, -38.6251, 0.23 ) }
    dend_37 { pt3dadd( 29.0454, 39.7235, -40.2757, 0.23 ) }
    dend_37 { pt3dadd( 30.4812, 40.8164, -42.1815, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 88/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 22.021, -31.2422, -33.232, 0.46 ) }
    dend_33 { pt3dadd( 22.5238, -32.1052, -35.3242, 0.46 ) }
    dend_33 { pt3dadd( 23.0499, -32.8904, -37.2857, 0.46 ) }
    dend_33 { pt3dadd( 23.4725, -33.4322, -38.6895, 0.46 ) }
    dend_33 { pt3dadd( 23.9564, -33.9843, -40.2357, 0.46 ) }
    dend_33 { pt3dadd( 24.9177, -34.8655, -42.9501, 0.46 ) }
    dend_33 { pt3dadd( 25.8363, -35.7076, -45.5442, 0.46 ) }
    dend_33 { pt3dadd( 26.3837, -36.1235, -46.9639, 0.46 ) }
    dend_33 { pt3dadd( 26.6589, -36.3102, -47.6452, 0.46 ) }
    dend_33 { pt3dadd( 27.4988, -36.8714, -49.8846, 0.46 ) }
    dend_33 { pt3dadd( 28.2006, -37.2667, -51.5202, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 99/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 22.021, -31.2422, -33.232, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_32 { pt3dadd( 21.9779, -29.9565, -35.0896, 0.46 ) }
    dend_32 { pt3dadd( 21.882, -29.0366, -36.4487, 0.46 ) }
    dend_32 { pt3dadd( 21.7181, -27.8844, -38.0875, 0.46 ) }
    dend_32 { pt3dadd( 21.494, -26.4234, -40.2132, 0.46 ) }
    dend_32 { pt3dadd( 21.2719, -25.1626, -42.0967, 0.46 ) }
    dend_32 { pt3dadd( 21.0017, -23.7892, -44.2025, 0.46 ) }
    dend_32 { pt3dadd( 20.7288, -22.4824, -46.2705, 0.46 ) }
    dend_32 { pt3dadd( 20.5403, -21.7659, -47.4421, 0.68 ) }
    dend_32 { pt3dadd( 20.1101, -20.4454, -49.757, 0.46 ) }
    dend_32 { pt3dadd( 19.6766, -19.1702, -52.2074, 0.46 ) }
    dend_32 { pt3dadd( 19.3407, -18.1814, -54.3286, 0.68 ) }
    dend_32 { pt3dadd( 19.0184, -17.3233, -56.401, 0.46 ) }
    dend_32 { pt3dadd( 18.5819, -16.3437, -59.1016, 0.68 ) }
    dend_32 { pt3dadd( 18.1479, -15.6346, -61.3461, 0.68 ) }
    dend_32 { pt3dadd( 17.6609, -15.0535, -63.3506, 0.68 ) }
    dend_32 { pt3dadd( 16.9049, -14.2403, -66.2657, 0.68 ) }
    dend_32 { pt3dadd( 16.4371, -13.8165, -67.8388, 0.68 ) }
    dend_32 { pt3dadd( 15.785, -13.2754, -69.763, 0.68 ) }
    dend_32 { pt3dadd( 15.2954, -12.8335, -71.1936, 0.68 ) }
    dend_32 { pt3dadd( 14.7205, -12.1948, -73.0085, 1.14 ) }
    dend_32 { pt3dadd( 14.2002, -11.375, -75.0627, 0.46 ) }
    dend_32 { pt3dadd( 13.8926, -9.91867, -78.3568, 0.46 ) }
    dend_32 { pt3dadd( 14.1298, -9.47383, -79.2497, 0.46 ) }
    dend_32 { pt3dadd( 15.0624, -8.3064, -81.4871, 0.46 ) }
    dend_32 { pt3dadd( 15.8039, -7.62383, -82.7707, 0.46 ) }
    dend_32 { pt3dadd( 16.93, -6.86419, -84.2051, 0.46 ) }
    dend_32 { pt3dadd( 18.6569, -5.98465, -85.857, 0.46 ) }
    dend_32 { pt3dadd( 23.0031, -4.1825, -88.8904, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 41.9859, -33.0825, 24.8253, 0.23 ) }
    dend_28 { pt3dadd( 43.0635, -33.9968, 25.4328, 0.23 ) }
    dend_28 { pt3dadd( 43.9795, -34.8188, 25.9385, 0.23 ) }
    dend_28 { pt3dadd( 44.7336, -35.5766, 26.3913, 0.68 ) }
    dend_28 { pt3dadd( 45.6982, -36.6494, 27.043, 0.68 ) }
    dend_28 { pt3dadd( 46.7985, -38.0021, 27.859, 0.46 ) }
    dend_28 { pt3dadd( 47.569, -39.0309, 28.4986, 0.46 ) }
    dend_28 { pt3dadd( 47.9068, -39.5847, 28.8665, 0.46 ) }
    dend_28 { pt3dadd( 48.4375, -40.639, 29.5538, 0.46 ) }
    dend_28 { pt3dadd( 48.7446, -41.3621, 30.0154, 0.68 ) }
    dend_28 { pt3dadd( 49.1846, -42.4982, 30.7245, 0.46 ) }
    dend_28 { pt3dadd( 49.6777, -43.8458, 31.5747, 0.68 ) }
    dend_28 { pt3dadd( 50.1585, -45.1993, 32.4258, 0.46 ) }
    dend_28 { pt3dadd( 50.5946, -46.5138, 33.2064, 0.46 ) }
    dend_28 { pt3dadd( 51.0872, -48.0798, 34.0319, 0.23 ) }
    dend_28 { pt3dadd( 51.5477, -49.6876, 34.7578, 0.68 ) }
    dend_28 { pt3dadd( 51.8618, -50.8179, 35.191, 0.68 ) }
    dend_28 { pt3dadd( 52.3363, -52.5, 35.71, 0.46 ) }
    dend_28 { pt3dadd( 52.8583, -54.2662, 36.1985, 0.46 ) }
    dend_28 { pt3dadd( 53.1553, -55.2856, 36.47, 0.23 ) }
    dend_28 { pt3dadd( 53.624, -56.8766, 36.9086, 0.23 ) }
    dend_28 { pt3dadd( 54.1968, -58.6934, 37.4805, 0.23 ) }
    dend_28 { pt3dadd( 54.5722, -59.7715, 37.9053, 0.68 ) }
    dend_28 { pt3dadd( 55.0832, -61.1796, 38.5795, 0.23 ) }
    dend_28 { pt3dadd( 55.4297, -62.0523, 39.1027, 0.46 ) }
    dend_28 { pt3dadd( 55.9507, -63.36, 40.0031, 0.23 ) }
    dend_28 { pt3dadd( 56.55, -64.9014, 41.1824, 0.23 ) }
    dend_28 { pt3dadd( 56.8615, -65.767, 41.9345, 0.46 ) }
    dend_28 { pt3dadd( 57.2728, -66.9368, 42.9896, 0.23 ) }
    dend_28 { pt3dadd( 57.7024, -68.1469, 44.0851, 0.23 ) }
    dend_28 { pt3dadd( 58.0463, -69.0929, 44.9609, 0.46 ) }
    dend_28 { pt3dadd( 58.3783, -70.0577, 45.8777, 0.23 ) }
    dend_28 { pt3dadd( 58.8316, -71.43, 47.2726, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 61/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 41.9859, -33.0825, 24.8253, 0.23 ) }
    dend_27 { pt3dadd( 42.0999, -33.443, 25.7311, 0.23 ) }
    dend_27 { pt3dadd( 42.2136, -34.033, 27.1523, 0.23 ) }
    dend_27 { pt3dadd( 42.253, -34.7886, 28.8541, 0.23 ) }
    dend_27 { pt3dadd( 42.2937, -35.5656, 30.6044, 0.23 ) }
    dend_27 { pt3dadd( 42.3091, -35.8601, 31.2677, 0.46 ) }
    dend_27 { pt3dadd( 42.3442, -36.5323, 32.7817, 0.23 ) }
    dend_27 { pt3dadd( 42.3891, -37.2474, 34.2819, 0.23 ) }
    dend_27 { pt3dadd( 42.3814, -38.0773, 35.9413, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.7369, -16.885, 21.6215, 0.91 ) }
    dend_23 { pt3dadd( 8.15478, -17.9444, 21.3808, 0.91 ) }
    dend_23 { pt3dadd( 8.53535, -19.1756, 21.0963, 0.91 ) }
    dend_23 { pt3dadd( 8.88156, -20.3459, 20.8372, 0.91 ) }
    dend_23 { pt3dadd( 9.38537, -22.0489, 20.4601, 0.91 ) }
    dend_23 { pt3dadd( 9.58989, -22.7403, 20.307, 0.91 ) }
    dend_23 { pt3dadd( 10.1531, -24.6441, 19.8854, 0.91 ) }
    dend_23 { pt3dadd( 10.4519, -25.8717, 19.6403, 0.91 ) }
    dend_23 { pt3dadd( 10.6543, -26.8936, 19.445, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 79/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.7369, -16.885, 21.6215, 1.82 ) }
    dend_16 { pt3dadd( 7.99555, -18.1367, 23.3659, 1.82 ) }
    dend_16 { pt3dadd( 8.25703, -19.402, 25.1293, 1.82 ) }
    dend_16 { pt3dadd( 8.46105, -20.3892, 26.5052, 1.82 ) }
    dend_16 { pt3dadd( 8.73524, -21.716, 28.3543, 1.82 ) }
    dend_16 { pt3dadd( 8.91454, -22.5836, 29.5635, 1.82 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -36.46, 3.4508, -13.4583, 0.23 ) }
    dend_9 { pt3dadd( -37.4282, 3.58981, -13.9424, 0.23 ) }
    dend_9 { pt3dadd( -38.248, 3.68519, -14.3519, 0.68 ) }
    dend_9 { pt3dadd( -39.2518, 3.74502, -14.8386, 0.46 ) }
    dend_9 { pt3dadd( -40.0961, 3.78169, -15.2396, 0.68 ) }
    dend_9 { pt3dadd( -40.8369, 3.8321, -15.5751, 0.68 ) }
    dend_9 { pt3dadd( -41.5508, 3.90448, -15.8835, 0.46 ) }
    dend_9 { pt3dadd( -42.34, 4.00832, -16.1955, 0.46 ) }
    dend_9 { pt3dadd( -43.2761, 4.16755, -16.5304, 0.46 ) }
    dend_9 { pt3dadd( -44.2349, 4.38931, -16.8423, 0.46 ) }
    dend_9 { pt3dadd( -45.3292, 4.70521, -17.182, 0.23 ) }
    dend_9 { pt3dadd( -46.0777, 4.95854, -17.3873, 0.23 ) }
    dend_9 { pt3dadd( -46.6576, 5.20266, -17.5308, 0.23 ) }
    dend_9 { pt3dadd( -47.1782, 5.45642, -17.6503, 0.68 ) }
    dend_9 { pt3dadd( -47.7509, 5.77929, -17.7818, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( -48.2573, 6.06577, -17.8819, 0.23 ) }
    dend_9 { pt3dadd( -49.0714, 6.49708, -18.0241, 0.23 ) }
    dend_9 { pt3dadd( -49.797, 6.855, -18.132, 0.23 ) }
    dend_9 { pt3dadd( -50.8418, 7.33813, -18.2612, 0.68 ) }
    dend_9 { pt3dadd( -51.7528, 7.74133, -18.3642, 0.23 ) }
    dend_9 { pt3dadd( -52.8451, 8.19099, -18.4965, 0.23 ) }
    dend_9 { pt3dadd( -53.5886, 8.48975, -18.5933, 0.46 ) }
    dend_9 { pt3dadd( -54.6815, 8.91984, -18.7633, 0.23 ) }
    dend_9 { pt3dadd( -55.7761, 9.32092, -18.954, 0.23 ) }
    dend_9 { pt3dadd( -56.7336, 9.65016, -19.1639, 0.23 ) }
    dend_9 { pt3dadd( -57.5378, 9.90939, -19.3828, 0.23 ) }
    dend_9 { pt3dadd( -58.307, 10.1719, -19.6665, 0.46 ) }
    dend_9 { pt3dadd( -59.4975, 10.6095, -20.224, 0.23 ) }
    dend_9 { pt3dadd( -60.069, 10.8326, -20.5638, 0.46 ) }
    dend_9 { pt3dadd( -60.7677, 11.1298, -21.0682, 0.23 ) }
    dend_9 { pt3dadd( -61.1186, 11.2908, -21.3651, 0.46 ) }
    dend_9 { pt3dadd( -61.849, 11.663, -22.0976, 0.23 ) }
    dend_9 { pt3dadd( -62.305, 11.9038, -22.6606, 0.46 ) }
    dend_9 { pt3dadd( -62.7891, 12.1696, -23.4235, 0.23 ) }
    dend_9 { pt3dadd( -63.0736, 12.3248, -23.9779, 0.46 ) }
    dend_9 { pt3dadd( -63.5295, 12.5609, -24.9482, 0.23 ) }
    dend_9 { pt3dadd( -64.0128, 12.7625, -26.0229, 0.46 ) }
    dend_9 { pt3dadd( -64.6133, 12.9497, -27.3705, 0.46 ) }
    dend_9 { pt3dadd( -65.327, 13.0971, -28.8906, 0.46 ) }
    dend_9 { pt3dadd( -66.2876, 13.2071, -30.8498, 0.46 ) }
    dend_9 { pt3dadd( -66.8034, 13.2246, -31.8372, 0.46 ) }
    dend_9 { pt3dadd( -67.3176, 13.2114, -32.7412, 0.46 ) }
    dend_9 { pt3dadd( -67.7758, 13.1826, -33.4511, 0.46 ) }
    dend_9 { pt3dadd( -68.4277, 13.1369, -34.376, 0.46 ) }
    dend_9 { pt3dadd( -69.0442, 13.089, -35.1772, 0.46 ) }
    dend_9 { pt3dadd( -69.9971, 13.0149, -36.3869, 0.23 ) }
    dend_9 { pt3dadd( -70.6003, 12.9876, -37.1819, 0.46 ) }
    dend_9 { pt3dadd( -71.4838, 12.9822, -38.3768, 0.23 ) }
    dend_9 { pt3dadd( -72.1191, 12.9875, -39.2104, 0.23 ) }
    dend_9 { pt3dadd( -72.6325, 12.9993, -39.844, 0.23 ) }
    dend_9 { pt3dadd( -73.1164, 13.0119, -40.3385, 0.23 ) }
    dend_9 { pt3dadd( -73.9666, 13.0286, -41.0209, 0.23 ) }
    dend_9 { pt3dadd( -75.1002, 13.0581, -41.7091, 0.23 ) }
    dend_9 { pt3dadd( -76.0332, 13.0828, -42.1267, 0.23 ) }
    dend_9 { pt3dadd( -77.2611, 13.1112, -42.5419, 0.23 ) }
    dend_9 { pt3dadd( -78.2663, 13.1289, -42.8047, 0.46 ) }
    dend_9 { pt3dadd( -78.96, 13.1374, -42.9502, 0.46 ) }
    dend_9 { pt3dadd( -80.188, 13.155, -43.1575, 0.46 ) }
    dend_9 { pt3dadd( -81.1132, 13.1869, -43.2932, 0.23 ) }
    dend_9 { pt3dadd( -81.7018, 13.2016, -43.3875, 0.46 ) }
    dend_9 { pt3dadd( -82.443, 13.2034, -43.4834, 0.23 ) }
    dend_9 { pt3dadd( -83.3166, 13.1713, -43.5991, 0.23 ) }
    dend_9 { pt3dadd( -84.0103, 13.123, -43.7037, 0.46 ) }
    dend_9 { pt3dadd( -85.4923, 12.9767, -43.931, 0.23 ) }
    dend_9 { pt3dadd( -87.7181, 12.7175, -44.2495, 0.23 ) }
    dend_9 { pt3dadd( -88.4268, 12.6209, -44.3529, 0.46 ) }
    dend_9 { pt3dadd( -90.3147, 12.306, -44.6317, 0.23 ) }
    dend_9 { pt3dadd( -91.4945, 12.0786, -44.8042, 0.23 ) }
    dend_9 { pt3dadd( -92.0713, 11.95, -44.8944, 0.46 ) }
    dend_9 { pt3dadd( -93.169, 11.6637, -45.0838, 0.23 ) }
    dend_9 { pt3dadd( -93.9169, 11.4512, -45.2225, 0.23 ) }
    dend_9 { pt3dadd( -94.415, 11.3145, -45.3117, 0.46 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -36.46, 3.4508, -13.4583, 0.23 ) }
    dend_8 { pt3dadd( -38.4744, 4.75482, -12.4839, 0.23 ) }
    dend_8 { pt3dadd( -40.4641, 6.11877, -11.4373, 0.23 ) }
    dend_8 { pt3dadd( -42.0185, 7.2336, -10.6003, 0.46 ) }
    dend_8 { pt3dadd( -43.2882, 8.21586, -9.89797, 0.23 ) }
    dend_8 { pt3dadd( -44.7603, 9.47559, -9.04572, 0.46 ) }
    dend_8 { pt3dadd( -46.8755, 11.4227, -7.79892, 0.23 ) }
    dend_8 { pt3dadd( -48.3498, 12.9789, -6.95276, 0.23 ) }
    dend_8 { pt3dadd( -49.6673, 14.5193, -6.14754, 0.68 ) }
    dend_8 { pt3dadd( -50.7663, 15.9019, -5.41434, 0.68 ) }
    dend_8 { pt3dadd( -52.1777, 17.6058, -4.54989, 0.46 ) }
    dend_8 { pt3dadd( -53.7009, 19.3078, -3.76324, 0.46 ) }
    dend_8 { pt3dadd( -55.2701, 20.8892, -3.12407, 0.46 ) }
    dend_8 { pt3dadd( -56.8604, 22.3034, -2.61825, 0.46 ) }
    dend_8 { pt3dadd( -58.4384, 23.5038, -2.22922, 0.46 ) }
    dend_8 { pt3dadd( -61.4871, 25.5383, -1.61794, 0.23 ) }
    dend_8 { pt3dadd( -63.1856, 26.5531, -1.34882, 0.46 ) }
    dend_8 { pt3dadd( -65.579, 27.8867, -1.02406, 0.23 ) }
    dend_8 { pt3dadd( -68.5267, 29.4169, -0.691917, 0.23 ) }
    dend_8 { pt3dadd( -70.8676, 30.6003, -0.486196, 0.46 ) }
    dend_8 { pt3dadd( -72.8214, 31.5679, -0.32887, 0.23 ) }
    dend_8 { pt3dadd( -74.4396, 32.4149, -0.159392, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 79/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -31.0431, -8.41877, -17.5839, 0.23 ) }
    dend_6 { pt3dadd( -32.8994, -9.93997, -16.9503, 0.23 ) }
    dend_6 { pt3dadd( -34.4038, -11.2832, -16.36, 0.23 ) }
    dend_6 { pt3dadd( -35.8545, -12.5888, -15.7967, 0.23 ) }
    dend_6 { pt3dadd( -37.1638, -13.7515, -15.3384, 0.46 ) }
    dend_6 { pt3dadd( -38.6674, -15.092, -14.7828, 0.23 ) }
    dend_6 { pt3dadd( -40.6328, -16.8341, -14.0712, 0.23 ) }
    dend_6 { pt3dadd( -42.2471, -18.2958, -13.5025, 0.23 ) }
    dend_6 { pt3dadd( -43.7021, -19.6058, -13.0406, 0.23 ) }
    dend_6 { pt3dadd( -45.6884, -21.4324, -12.4297, 0.46 ) }
    dend_6 { pt3dadd( -47.4683, -23.0943, -11.9015, 0.23 ) }
    dend_6 { pt3dadd( -49.0234, -24.5558, -11.4865, 0.23 ) }
    dend_6 { pt3dadd( -50.2781, -25.7024, -11.2163, 0.91 ) }
    dend_6 { pt3dadd( -51.6601, -26.9317, -10.9306, 0.23 ) }
    dend_6 { pt3dadd( -53.0864, -28.284, -10.6085, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 94/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -31.0431, -8.41877, -17.5839, 0.23 ) }
    dend_3 { pt3dadd( -33.1987, -8.78801, -20.1759, 0.23 ) }
    dend_3 { pt3dadd( -34.6189, -9.1494, -22.0175, 0.23 ) }
    dend_3 { pt3dadd( -35.4169, -9.36807, -23.0838, 0.46 ) }
    dend_3 { pt3dadd( -36.9832, -9.87777, -25.2471, 0.23 ) }
    dend_3 { pt3dadd( -37.827, -10.2068, -26.4069, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( -39.1034, -10.8036, -28.1673, 0.46 ) }
    dend_3 { pt3dadd( -40.8644, -11.8494, -30.4493, 0.23 ) }
    dend_3 { pt3dadd( -42.1636, -12.8298, -32.1345, 0.23 ) }
    dend_3 { pt3dadd( -43.6777, -14.0947, -33.9989, 0.23 ) }
    dend_3 { pt3dadd( -45.1088, -15.4044, -35.6493, 0.23 ) }
    dend_3 { pt3dadd( -45.9653, -16.2744, -36.6245, 0.23 ) }
    dend_3 { pt3dadd( -47.3372, -17.8059, -38.1796, 0.46 ) }
    dend_3 { pt3dadd( -48.4542, -19.2819, -39.5334, 0.46 ) }
    dend_3 { pt3dadd( -49.0047, -20.1267, -40.2694, 0.46 ) }
    dend_3 { pt3dadd( -50.6371, -22.7762, -42.5419, 0.23 ) }
    dend_3 { pt3dadd( -51.3377, -23.9452, -43.563, 0.68 ) }
    dend_3 { pt3dadd( -52.2219, -25.5051, -44.9775, 0.46 ) }
    dend_3 { pt3dadd( -53.4169, -27.7307, -47.1074, 0.23 ) }
    dend_3 { pt3dadd( -54.0583, -28.8985, -48.288, 0.23 ) }
    dend_3 { pt3dadd( -54.5334, -29.7991, -49.2721, 0.46 ) }
    dend_3 { pt3dadd( -55.2268, -31.2096, -50.845, 0.46 ) }
    dend_3 { pt3dadd( -56.0631, -33.0205, -52.9449, 0.46 ) }
    dend_3 { pt3dadd( -56.96, -35.2468, -55.6797, 0.46 ) }
    dend_3 { pt3dadd( -57.4277, -36.5068, -57.4068, 0.46 ) }
    dend_3 { pt3dadd( -57.8321, -37.7277, -59.3256, 0.46 ) }
    dend_3 { pt3dadd( -58.1326, -38.7134, -61.1115, 0.46 ) }
    dend_3 { pt3dadd( -58.442, -39.6648, -63.2522, 0.46 ) }
    dend_3 { pt3dadd( -58.7579, -40.4671, -65.9439, 0.46 ) }
    dend_3 { pt3dadd( -58.9665, -41.0512, -68.299, 0.46 ) }
    dend_3 { pt3dadd( -59.2617, -41.6752, -71.4642, 0.46 ) }
    dend_3 { pt3dadd( -59.4894, -41.8971, -73.4464, 0.46 ) }
    dend_3 { pt3dadd( -59.8607, -41.9057, -76.1528, 0.23 ) }
    dend_3 { pt3dadd( -60.3956, -41.4767, -79.764, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 29.6175, 22.2553, -16.3162, 0.46 ) }
    dend_49 { pt3dadd( 29.7055, 23.7146, -16.5821, 0.46 ) }
    dend_49 { pt3dadd( 29.7741, 25.1092, -16.9424, 0.46 ) }
    dend_49 { pt3dadd( 29.8724, 27.0432, -17.4761, 0.46 ) }
    dend_49 { pt3dadd( 29.9552, 28.3278, -17.8313, 0.46 ) }
    dend_49 { pt3dadd( 30.1245, 30.331, -18.4572, 0.68 ) }
    dend_49 { pt3dadd( 30.357, 32.4961, -19.2314, 0.23 ) }
    dend_49 { pt3dadd( 30.6866, 35.0519, -20.4311, 0.23 ) }
    dend_49 { pt3dadd( 30.8578, 36.2409, -21.0696, 0.46 ) }
    dend_49 { pt3dadd( 31.0639, 37.4797, -21.7994, 0.23 ) }
    dend_49 { pt3dadd( 31.3661, 39.0951, -22.8274, 0.23 ) }
    dend_49 { pt3dadd( 31.66, 40.4823, -23.7846, 0.23 ) }
    dend_49 { pt3dadd( 32.1185, 42.3094, -25.1754, 0.23 ) }
    dend_49 { pt3dadd( 32.5056, 43.5395, -26.3062, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 42/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 29.6175, 22.2553, -16.3162, 0.46 ) }
    dend_48 { pt3dadd( 31.2542, 23.2873, -15.387, 0.46 ) }
    dend_48 { pt3dadd( 32.6149, 24.2829, -14.4955, 0.23 ) }
    dend_48 { pt3dadd( 33.3963, 24.8871, -13.9158, 0.46 ) }
    dend_48 { pt3dadd( 34.1996, 25.5439, -13.2834, 0.46 ) }
    dend_48 { pt3dadd( 35.5183, 26.6663, -12.2278, 0.46 ) }
    dend_48 { pt3dadd( 36.5788, 27.5723, -11.3194, 0.46 ) }
    dend_48 { pt3dadd( 38.2631, 29.1151, -9.79508, 0.23 ) }
    dend_48 { pt3dadd( 39.2651, 30.0965, -8.84628, 0.23 ) }
    dend_48 { pt3dadd( 40.5066, 31.3521, -7.61219, 0.23 ) }
    dend_48 { pt3dadd( 41.4543, 32.2999, -6.59228, 0.46 ) }
    dend_48 { pt3dadd( 42.5515, 33.3645, -5.33867, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 42.5528, 14.3388, -33.6071, 0.46 ) }
    dend_42 { pt3dadd( 43.5914, 14.1705, -33.4863, 0.46 ) }
    dend_42 { pt3dadd( 45.717, 13.8681, -33.4195, 0.46 ) }
    dend_42 { pt3dadd( 47.2606, 13.7415, -33.4315, 0.46 ) }
    dend_42 { pt3dadd( 48.8055, 13.6676, -33.5151, 0.23 ) }
    dend_42 { pt3dadd( 51.3304, 13.6347, -33.6981, 0.23 ) }
    dend_42 { pt3dadd( 53.363, 13.6563, -33.8686, 0.23 ) }
    dend_42 { pt3dadd( 55.1154, 13.764, -34.0868, 0.46 ) }
    dend_42 { pt3dadd( 57.5234, 13.969, -34.5341, 0.23 ) }
    dend_42 { pt3dadd( 60.0737, 14.2494, -35.1218, 0.46 ) }
    dend_42 { pt3dadd( 62.32, 14.5742, -35.7456, 0.23 ) }
    dend_42 { pt3dadd( 63.5331, 14.8286, -36.1795, 0.46 ) }
    dend_42 { pt3dadd( 65.1655, 15.2183, -36.7861, 0.23 ) }
    dend_42 { pt3dadd( 67.0792, 15.7215, -37.6382, 0.23 ) }
    dend_42 { pt3dadd( 68.4042, 16.0955, -38.3862, 0.23 ) }
    dend_42 { pt3dadd( 69.246, 16.4016, -39.0075, 0.23 ) }
    dend_42 { pt3dadd( 70.8316, 17.0821, -40.6629, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 42.5528, 14.3388, -33.6071, 0.46 ) }
    dend_41 { pt3dadd( 43.1824, 14.1101, -34.73, 0.46 ) }
    dend_41 { pt3dadd( 43.8009, 13.9237, -35.864, 0.68 ) }
    dend_41 { pt3dadd( 45.2233, 13.5429, -38.4353, 0.46 ) }
    dend_41 { pt3dadd( 45.7805, 13.4236, -39.4892, 0.68 ) }
    dend_41 { pt3dadd( 46.6394, 13.2712, -41.1152, 0.46 ) }
    dend_41 { pt3dadd( 47.3819, 13.1533, -42.5527, 0.46 ) }
    dend_41 { pt3dadd( 48.0728, 13.0885, -43.8203, 0.46 ) }
    dend_41 { pt3dadd( 49.2119, 13.0205, -45.7551, 0.46 ) }
    dend_41 { pt3dadd( 50.3073, 12.9557, -47.5117, 0.46 ) }
    dend_41 { pt3dadd( 51.4478, 12.8423, -49.2303, 0.46 ) }
    dend_41 { pt3dadd( 53.0545, 12.6693, -51.5884, 0.46 ) }
    dend_41 { pt3dadd( 54.1549, 12.5306, -53.1478, 0.46 ) }
    dend_41 { pt3dadd( 55.3572, 12.3613, -54.7314, 0.46 ) }
    dend_41 { pt3dadd( 56.4948, 12.1844, -56.1303, 0.46 ) }
    dend_41 { pt3dadd( 57.8049, 11.918, -57.5481, 0.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 87/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.6543, -26.8936, 19.445, 0.68 ) }
    dend_25 { pt3dadd( 11.5207, -28.6264, 20.1549, 0.68 ) }
    dend_25 { pt3dadd( 12.5647, -30.7528, 20.8387, 0.68 ) }
    dend_25 { pt3dadd( 14.1968, -33.906, 21.6869, 0.68 ) }
    dend_25 { pt3dadd( 15.8566, -37.0345, 22.3995, 0.68 ) }
    dend_25 { pt3dadd( 17.5271, -40.1917, 23.0254, 0.68 ) }
    dend_25 { pt3dadd( 18.4603, -41.9561, 23.3249, 0.68 ) }
    dend_25 { pt3dadd( 20.3197, -45.3392, 23.6904, 0.68 ) }
    dend_25 { pt3dadd( 21.9392, -48.2095, 23.8051, 0.68 ) }
    dend_25 { pt3dadd( 23.5697, -51.2763, 23.8263, 0.68 ) }
    dend_25 { pt3dadd( 24.2312, -52.6918, 23.8299, 0.68 ) }
    dend_25 { pt3dadd( 25.5159, -55.8946, 23.8491, 0.46 ) }
    dend_25 { pt3dadd( 26.3096, -58.1439, 23.8981, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 26.9637, -60.2171, 23.9417, 0.46 ) }
    dend_25 { pt3dadd( 27.8883, -63.628, 23.8798, 0.46 ) }
    dend_25 { pt3dadd( 28.4585, -65.8707, 23.7239, 0.46 ) }
    dend_25 { pt3dadd( 29.1757, -68.4445, 23.3808, 0.68 ) }
    dend_25 { pt3dadd( 29.7202, -70.2453, 22.9466, 0.68 ) }
    dend_25 { pt3dadd( 30.5831, -72.4977, 22.2187, 0.46 ) }
    dend_25 { pt3dadd( 31.3942, -74.0709, 21.6431, 0.46 ) }
    dend_25 { pt3dadd( 32.0537, -75.1024, 21.1882, 0.46 ) }
    dend_25 { pt3dadd( 33.5649, -77.3302, 20.1402, 0.46 ) }
    dend_25 { pt3dadd( 34.7971, -79.2261, 19.2877, 0.46 ) }
    dend_25 { pt3dadd( 36.7042, -82.4658, 18.0558, 0.46 ) }
    dend_25 { pt3dadd( 38.3345, -85.6266, 17.164, 0.46 ) }
    dend_25 { pt3dadd( 38.8672, -86.8379, 16.912, 0.46 ) }
    dend_25 { pt3dadd( 39.3056, -88.0533, 16.7438, 0.68 ) }
    dend_25 { pt3dadd( 39.9618, -90.4219, 16.5341, 0.68 ) }
    dend_25 { pt3dadd( 40.3842, -92.6623, 16.4038, 0.46 ) }
    dend_25 { pt3dadd( 40.6354, -94.7565, 16.2195, 0.68 ) }
    dend_25 { pt3dadd( 40.8815, -97.1628, 15.9304, 0.46 ) }
    dend_25 { pt3dadd( 41.2178, -99.7433, 15.5743, 0.46 ) }
    dend_25 { pt3dadd( 41.4222, -100.91, 15.3888, 0.46 ) }
    dend_25 { pt3dadd( 42.2826, -104.638, 14.6308, 0.23 ) }
    dend_25 { pt3dadd( 43.1096, -107.468, 13.9313, 0.46 ) }
    dend_25 { pt3dadd( 43.9164, -109.663, 13.2366, 0.23 ) }
    dend_25 { pt3dadd( 44.6601, -111.333, 12.6368, 0.23 ) }
    dend_25 { pt3dadd( 45.6753, -113.267, 11.8548, 0.68 ) }
    dend_25 { pt3dadd( 46.8849, -115.265, 10.9851, 0.46 ) }
    dend_25 { pt3dadd( 48.1414, -117.048, 10.171, 0.68 ) }
    dend_25 { pt3dadd( 49.7374, -119.302, 9.18266, 0.37 ) }
    dend_25 { pt3dadd( 50.6437, -120.617, 8.58665, 0.29 ) }
    dend_25 { pt3dadd( 51.3004, -121.625, 8.11074, 0.29 ) }
    dend_25 { pt3dadd( 52.0071, -122.811, 7.55833, 0.29 ) }
    dend_25 { pt3dadd( 52.8001, -124.267, 6.94502, 0.44 ) }
    dend_25 { pt3dadd( 53.7387, -126.15, 6.23362, 0.22 ) }
    dend_25 { pt3dadd( 54.5527, -127.92, 5.72602, 0.29 ) }
    dend_25 { pt3dadd( 55.1791, -129.247, 5.34038, 0.59 ) }
    dend_25 { pt3dadd( 55.9035, -130.737, 4.93506, 0.59 ) }
    dend_25 { pt3dadd( 56.2333, -131.396, 4.77801, 0.59 ) }
    dend_25 { pt3dadd( 56.9519, -132.774, 4.46352, 0.44 ) }
    dend_25 { pt3dadd( 58.556, -135.845, 3.81417, 0.44 ) }
    dend_25 { pt3dadd( 59.4642, -137.706, 3.46389, 0.44 ) }
    dend_25 { pt3dadd( 59.9234, -138.771, 3.25532, 0.15 ) }
    dend_25 { pt3dadd( 60.1914, -139.497, 3.08028, 0.37 ) }
    dend_25 { pt3dadd( 60.5792, -140.781, 2.71449, 0.15 ) }
    dend_25 { pt3dadd( 60.799, -141.751, 2.39888, 0.15 ) }
    dend_25 { pt3dadd( 60.9678, -142.865, 1.97988, 0.15 ) }
    dend_25 { pt3dadd( 61.1246, -144.384, 1.36003, 0.73 ) }
    dend_25 { pt3dadd( 61.2338, -146.149, 0.581035, 0.37 ) }
    dend_25 { pt3dadd( 61.2621, -147.805, -0.179296, 0.29 ) }
    dend_25 { pt3dadd( 61.2429, -148.899, -0.677337, 0.15 ) }
    dend_25 { pt3dadd( 61.1754, -150.491, -1.36919, 0.51 ) }
    dend_25 { pt3dadd( 61.0965, -151.804, -1.93402, 0.22 ) }
    dend_25 { pt3dadd( 60.9352, -153.824, -2.76199, 0.15 ) }
    dend_25 { pt3dadd( 60.82, -155.248, -3.36136, 0.15 ) }
    dend_25 { pt3dadd( 60.6916, -157.199, -4.22036, 0.44 ) }
    dend_25 { pt3dadd( 60.6188, -158.916, -4.98644, 0.15 ) }
    dend_25 { pt3dadd( 60.5882, -160.581, -5.7145, 0.44 ) }
    dend_25 { pt3dadd( 60.632, -162.128, -6.37743, 0.15 ) }
    dend_25 { pt3dadd( 60.7594, -163.563, -6.99328, 0.15 ) }
    dend_25 { pt3dadd( 61.0251, -165.155, -7.66865, 0.44 ) }
    dend_25 { pt3dadd( 61.4038, -166.732, -8.31695, 0.29 ) }
    dend_25 { pt3dadd( 61.6698, -167.602, -8.63594, 0.29 ) }
    dend_25 { pt3dadd( 62.0205, -168.573, -8.96172, 0.29 ) }
    dend_25 { pt3dadd( 62.4491, -169.618, -9.28372, 0.66 ) }
    dend_25 { pt3dadd( 63.1499, -171.128, -9.7738, 0.22 ) }
    dend_25 { pt3dadd( 63.4659, -171.742, -9.99052, 0.22 ) }
    dend_25 { pt3dadd( 64.0425, -172.81, -10.371, 0.22 ) }
    dend_25 { pt3dadd( 64.8743, -174.377, -10.929, 0.22 ) }
    dend_25 { pt3dadd( 65.8624, -176.299, -11.6586, 0.73 ) }
    dend_25 { pt3dadd( 67.0568, -178.777, -12.6289, 0.29 ) }
    dend_25 { pt3dadd( 67.9399, -180.806, -13.4533, 0.07 ) }
    dend_25 { pt3dadd( 68.4754, -182.072, -14.0185, 0.22 ) }
    dend_25 { pt3dadd( 69.021, -183.421, -14.6369, 0.22 ) }
    dend_25 { pt3dadd( 69.3675, -184.313, -15.024, 0.22 ) }
    dend_25 { pt3dadd( 69.7271, -185.277, -15.4329, 0.37 ) }
    dend_25 { pt3dadd( 70.2066, -186.608, -15.9062, 0.15 ) }
    dend_25 { pt3dadd( 70.7847, -188.059, -16.462, 0.88 ) }
    dend_25 { pt3dadd( 71.8108, -190.433, -17.3691, 0.29 ) }
    dend_25 { pt3dadd( 72.3784, -191.649, -17.8457, 0.29 ) }
    dend_25 { pt3dadd( 72.9044, -192.763, -18.2633, 0.51 ) }
    dend_25 { pt3dadd( 73.6046, -194.276, -18.8607, 0.29 ) }
    dend_25 { pt3dadd( 74.3653, -195.896, -19.54, 0.73 ) }
    dend_25 { pt3dadd( 74.795, -196.811, -19.9387, 0.44 ) }
    dend_25 { pt3dadd( 75.591, -198.382, -20.7946, 0.29 ) }
    dend_25 { pt3dadd( 76.2449, -199.635, -21.5544, 0.15 ) }
    dend_25 { pt3dadd( 76.9913, -200.949, -22.4963, 0.51 ) }
    dend_25 { pt3dadd( 77.7693, -202.215, -23.466, 0.15 ) }
    dend_25 { pt3dadd( 78.5231, -203.385, -24.3021, 0.15 ) }
    dend_25 { pt3dadd( 79.7884, -205.268, -25.5254, 0.15 ) }
    dend_25 { pt3dadd( 80.0006, -205.565, -25.6987, 0.51 ) }
    dend_25 { pt3dadd( 81.4632, -207.463, -26.6825, 0.22 ) }
    dend_25 { pt3dadd( 82.5654, -208.786, -27.2315, 0.22 ) }
    dend_25 { pt3dadd( 83.8243, -210.233, -27.6743, 0.22 ) }
    dend_25 { pt3dadd( 85.0673, -211.557, -27.9397, 0.22 ) }
    dend_25 { pt3dadd( 85.9886, -212.497, -28.037, 0.22 ) }
    dend_25 { pt3dadd( 87.0048, -213.523, -28.0997, 0.22 ) }
    dend_25 { pt3dadd( 88.6432, -215.181, -28.1048, 0.22 ) }
    dend_25 { pt3dadd( 89.7891, -216.318, -28.1373, 0.22 ) }
    dend_25 { pt3dadd( 90.8539, -217.389, -28.1549, 0.22 ) }
    dend_25 { pt3dadd( 91.9744, -218.617, -28.1772, 0.22 ) }
    dend_25 { pt3dadd( 93.1988, -220.203, -28.1203, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_25 { pt3dadd( 93.9062, -221.286, -28.0586, 0.22 ) }
    dend_25 { pt3dadd( 94.186, -221.799, -28.0052, 0.37 ) }
    dend_25 { pt3dadd( 95.0928, -223.798, -27.686, 0.15 ) }
    dend_25 { pt3dadd( 95.8474, -225.677, -27.3129, 0.15 ) }
    dend_25 { pt3dadd( 96.5356, -227.504, -26.8924, 0.37 ) }
    dend_25 { pt3dadd( 96.9155, -228.602, -26.6137, 0.51 ) }
    dend_25 { pt3dadd( 97.7882, -231.244, -25.939, 0.22 ) }
    dend_25 { pt3dadd( 98.5371, -233.573, -25.3311, 0.29 ) }
    dend_25 { pt3dadd( 98.949, -234.944, -24.989, 0.29 ) }
    dend_25 { pt3dadd( 99.3008, -236.246, -24.6861, 0.51 ) }
    dend_25 { pt3dadd( 99.7163, -237.89, -24.363, 0.22 ) }
    dend_25 { pt3dadd( 100.133, -239.587, -24.0976, 0.88 ) }
    dend_25 { pt3dadd( 100.622, -241.515, -23.8972, 0.07 ) }
    dend_25 { pt3dadd( 100.912, -242.595, -23.7804, 0.07 ) }
    dend_25 { pt3dadd( 101.464, -244.679, -23.523, 0.51 ) }
    dend_25 { pt3dadd( 102.039, -246.88, -23.2606, 0.29 ) }
    dend_25 { pt3dadd( 102.497, -248.779, -23.0335, 0.07 ) }
    dend_25 { pt3dadd( 102.761, -250.112, -22.7821, 0.37 ) }
    dend_25 { pt3dadd( 103.196, -252.638, -22.1891, 0.07 ) }
    dend_25 { pt3dadd( 103.344, -253.59, -21.9223, 0.07 ) }
    dend_25 { pt3dadd( 103.523, -255.153, -21.3905, 0.37 ) }
    dend_25 { pt3dadd( 103.641, -256.793, -20.7834, 0.59 ) }
    dend_25 { pt3dadd( 103.734, -259.586, -19.671, 0.22 ) }
    dend_25 { pt3dadd( 103.74, -260.602, -19.2579, 0.22 ) }
    dend_25 { pt3dadd( 103.731, -262.135, -18.666, 0.22 ) }
    dend_25 { pt3dadd( 103.699, -264.726, -17.5535, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 26/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.6543, -26.8936, 19.445, 0.68 ) }
    dend_24 { pt3dadd( 10.2164, -28.8944, 18.5226, 0.68 ) }
    dend_24 { pt3dadd( 9.89596, -30.2899, 17.8652, 0.68 ) }
    dend_24 { pt3dadd( 9.32665, -32.561, 16.743, 0.91 ) }
    dend_24 { pt3dadd( 8.64082, -35.0945, 15.4788, 0.91 ) }
    dend_24 { pt3dadd( 7.95278, -37.4938, 14.2518, 0.68 ) }
    dend_24 { pt3dadd( 7.24551, -39.8535, 13.0856, 0.68 ) }
    dend_24 { pt3dadd( 6.73573, -41.4749, 12.3489, 0.68 ) }
    dend_24 { pt3dadd( 6.15829, -43.3141, 11.5739, 0.68 ) }
    dend_24 { pt3dadd( 5.83259, -44.5114, 11.1122, 0.46 ) }
    dend_24 { pt3dadd( 5.60762, -45.545, 10.7289, 0.68 ) }
    dend_24 { pt3dadd( 5.30056, -47.6526, 9.91684, 0.68 ) }
    dend_24 { pt3dadd( 5.15799, -49.7946, 9.04327, 0.68 ) }
    dend_24 { pt3dadd( 5.2063, -51.7933, 8.21184, 0.68 ) }
    dend_24 { pt3dadd( 5.42414, -53.6003, 7.37414, 0.46 ) }
    dend_24 { pt3dadd( 5.82426, -55.4231, 6.40331, 0.46 ) }
    dend_24 { pt3dadd( 6.21109, -56.6484, 5.65973, 0.68 ) }
    dend_24 { pt3dadd( 6.43214, -57.1961, 5.25624, 0.68 ) }
    dend_24 { pt3dadd( 7.03958, -58.3757, 4.24468, 0.68 ) }
    dend_24 { pt3dadd( 7.82939, -59.6828, 2.98016, 0.68 ) }
    dend_24 { pt3dadd( 8.42279, -60.6312, 2.07454, 0.68 ) }
    dend_24 { pt3dadd( 9.00396, -61.5567, 1.22977, 0.46 ) }
    dend_24 { pt3dadd( 9.71206, -62.7477, 0.2458, 0.68 ) }
    dend_24 { pt3dadd( 10.6539, -64.2386, -0.951738, 0.68 ) }
    dend_24 { pt3dadd( 11.2128, -65.0323, -1.63352, 0.68 ) }
    dend_24 { pt3dadd( 12.3129, -66.3834, -2.89249, 0.91 ) }
    dend_24 { pt3dadd( 13.5863, -67.7534, -4.27727, 0.68 ) }
    dend_24 { pt3dadd( 15.0668, -69.1764, -5.7789, 0.91 ) }
    dend_24 { pt3dadd( 16.8496, -70.7517, -7.51769, 0.91 ) }
    dend_24 { pt3dadd( 18.708, -72.3542, -9.31014, 0.68 ) }
    dend_24 { pt3dadd( 20.0704, -73.4467, -10.5954, 0.91 ) }
    dend_24 { pt3dadd( 21.2836, -74.2783, -11.7071, 0.46 ) }
    dend_24 { pt3dadd( 22.2314, -74.8455, -12.5619, 0.68 ) }
    dend_24 { pt3dadd( 23.7886, -75.6868, -13.9258, 0.23 ) }
    dend_24 { pt3dadd( 25.2626, -76.4546, -15.1372, 0.68 ) }
    dend_24 { pt3dadd( 26.4761, -77.105, -16.0191, 0.68 ) }
    dend_24 { pt3dadd( 27.6451, -77.7355, -16.7976, 0.68 ) }
    dend_24 { pt3dadd( 29.0248, -78.4989, -17.7179, 0.68 ) }
    dend_24 { pt3dadd( 30.4021, -79.2637, -18.6146, 0.46 ) }
    dend_24 { pt3dadd( 31.4909, -79.8739, -19.2826, 0.46 ) }
    dend_24 { pt3dadd( 33.3969, -80.9691, -20.4216, 0.68 ) }
    dend_24 { pt3dadd( 35.2576, -82.1151, -21.4772, 0.23 ) }
    dend_24 { pt3dadd( 37.204, -83.4227, -22.575, 0.23 ) }
    dend_24 { pt3dadd( 39.2943, -84.8547, -23.7446, 0.23 ) }
    dend_24 { pt3dadd( 40.2018, -85.4804, -24.2658, 0.46 ) }
    dend_24 { pt3dadd( 41.866, -86.6194, -25.1717, 0.23 ) }
    dend_24 { pt3dadd( 42.6721, -87.1394, -25.5974, 0.46 ) }
    dend_24 { pt3dadd( 45.4402, -88.836, -26.9351, 0.23 ) }
    dend_24 { pt3dadd( 48.6044, -90.7045, -28.2681, 0.23 ) }
    dend_24 { pt3dadd( 51.1702, -92.211, -29.2045, 0.46 ) }
    dend_24 { pt3dadd( 53.0676, -93.3171, -29.8837, 0.46 ) }
    dend_24 { pt3dadd( 54.9048, -94.374, -30.513, 0.23 ) }
    dend_24 { pt3dadd( 56.4976, -95.2615, -31.03, 0.46 ) }
    dend_24 { pt3dadd( 59.8601, -97.0581, -31.8851, 0.23 ) }
    dend_24 { pt3dadd( 61.9603, -98.184, -32.2513, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.91454, -22.5836, 29.5635, 0.68 ) }
    dend_22 { pt3dadd( 7.93675, -24.1221, 30.8195, 0.68 ) }
    dend_22 { pt3dadd( 7.07022, -25.5151, 32.034, 0.68 ) }
    dend_22 { pt3dadd( 6.40165, -26.4684, 32.9639, 0.46 ) }
    dend_22 { pt3dadd( 5.64125, -27.4962, 34.048, 0.46 ) }
    dend_22 { pt3dadd( 5.05906, -28.236, 34.8903, 0.68 ) }
    dend_22 { pt3dadd( 4.30704, -29.0931, 35.9071, 0.46 ) }
    dend_22 { pt3dadd( 3.54957, -29.843, 36.8829, 0.46 ) }
    dend_22 { pt3dadd( 2.61067, -30.5211, 37.9766, 0.68 ) }
    dend_22 { pt3dadd( 1.62215, -31.0242, 39.0214, 0.68 ) }
    dend_22 { pt3dadd( 0.709296, -31.3654, 39.9129, 0.68 ) }
    dend_22 { pt3dadd( -0.550327, -31.7068, 41.0427, 0.46 ) }
    dend_22 { pt3dadd( -1.51781, -31.8885, 41.8114, 0.68 ) }
    dend_22 { pt3dadd( -3.1665, -32.1291, 42.9693, 0.46 ) }
    dend_22 { pt3dadd( -4.29323, -32.299, 43.7179, 0.46 ) }
    dend_22 { pt3dadd( -5.33582, -32.4589, 44.346, 0.46 ) }
    dend_22 { pt3dadd( -6.25798, -32.5957, 44.882, 0.46 ) }
    dend_22 { pt3dadd( -6.90484, -32.7009, 45.2661, 0.46 ) }
    dend_22 { pt3dadd( -7.74172, -32.8831, 45.7275, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( -8.95601, -33.2944, 46.3232, 0.46 ) }
    dend_22 { pt3dadd( -10.2743, -33.8023, 46.9822, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.91454, -22.5836, 29.5635, 0.68 ) }
    dend_17 { pt3dadd( 8.80957, -23.0875, 30.6908, 0.68 ) }
    dend_17 { pt3dadd( 8.65426, -23.7072, 32.1011, 0.68 ) }
    dend_17 { pt3dadd( 8.49814, -24.2226, 33.1422, 0.68 ) }
    dend_17 { pt3dadd( 8.25941, -24.9162, 34.3565, 0.68 ) }
    dend_17 { pt3dadd( 8.01272, -25.633, 35.6115, 0.68 ) }
    dend_17 { pt3dadd( 7.87773, -26.0252, 36.2982, 0.68 ) }
    dend_17 { pt3dadd( 7.46619, -26.8099, 37.655, 0.68 ) }
    dend_17 { pt3dadd( 6.94171, -27.5262, 38.9059, 0.68 ) }
    dend_17 { pt3dadd( 6.56839, -28.1045, 39.7754, 0.68 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 12/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -60.3956, -41.4767, -79.764, 0.23 ) }
    dend_5 { pt3dadd( -60.9663, -39.2269, -80.2831, 0.23 ) }
    dend_5 { pt3dadd( -61.3074, -37.9204, -80.6993, 0.23 ) }
    dend_5 { pt3dadd( -61.6199, -36.7695, -81.1169, 0.46 ) }
    dend_5 { pt3dadd( -62.1204, -34.9249, -81.7862, 0.23 ) }
    dend_5 { pt3dadd( -62.5588, -33.3096, -82.3722, 0.23 ) }
    dend_5 { pt3dadd( -62.9319, -31.9342, -82.8712, 0.46 ) }
    dend_5 { pt3dadd( -63.3419, -30.117, -83.6695, 0.23 ) }
    dend_5 { pt3dadd( -63.4333, -29.7499, -83.813, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -60.3956, -41.4767, -79.764, 0.23 ) }
    dend_4 { pt3dadd( -61.5471, -42.649, -80.0959, 0.23 ) }
    dend_4 { pt3dadd( -62.7478, -43.8886, -80.7415, 0.23 ) }
    dend_4 { pt3dadd( -64.0426, -45.3088, -81.677, 0.68 ) }
    dend_4 { pt3dadd( -64.9394, -46.4383, -82.5077, 0.23 ) }
    dend_4 { pt3dadd( -66.0118, -47.953, -83.8515, 0.46 ) }
    dend_4 { pt3dadd( -67.5808, -50.3032, -86.38, 0.23 ) }
    dend_4 { pt3dadd( -68.3312, -51.6839, -88.218, 0.23 ) }
    dend_4 { pt3dadd( -68.8167, -52.6751, -89.6931, 0.23 ) }
    dend_4 { pt3dadd( -69.3131, -53.7928, -91.5791, 0.68 ) }
    dend_4 { pt3dadd( -69.9665, -55.4408, -94.6985, 0.68 ) }
    dend_4 { pt3dadd( -70.3865, -56.761, -97.4954, 0.68 ) }
    dend_4 { pt3dadd( -70.6562, -58.1874, -100.536, 0.68 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 34/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 32.5056, 43.5395, -26.3062, 0.23 ) }
    dend_51 { pt3dadd( 30.5585, 44.1052, -25.1877, 0.23 ) }
    dend_51 { pt3dadd( 28.3769, 44.7392, -23.9344, 0.23 ) }
    dend_51 { pt3dadd( 26.7293, 45.2179, -22.988, 0.23 ) }
    dend_51 { pt3dadd( 24.8062, 45.7767, -21.8832, 0.23 ) }
    dend_51 { pt3dadd( 23.108, 46.2701, -20.9076, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 32.5056, 43.5395, -26.3062, 0.23 ) }
    dend_50 { pt3dadd( 33.9216, 44.1766, -27.9109, 0.23 ) }
    dend_50 { pt3dadd( 34.9729, 44.6929, -29.304, 0.23 ) }
    dend_50 { pt3dadd( 36.5314, 45.4583, -31.3694, 0.23 ) }
    dend_50 { pt3dadd( 38.2458, 46.3001, -33.6411, 0.46 ) }
    dend_50 { pt3dadd( 39.523, 46.9274, -35.3337, 0.23 ) }
    dend_50 { pt3dadd( 41.1432, 47.723, -37.4808, 0.23 ) }
    dend_50 { pt3dadd( 43.0397, 48.5982, -40.2833, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 48/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.56839, -28.1045, 39.7754, 0.68 ) }
    dend_19 { pt3dadd( 6.13513, -28.174, 40.425, 0.68 ) }
    dend_19 { pt3dadd( 4.5211, -28.4333, 42.845, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.56839, -28.1045, 39.7754, 0.68 ) }
    dend_18 { pt3dadd( 6.86581, -28.6811, 40.5157, 0.68 ) }
    dend_18 { pt3dadd( 7.49716, -29.8328, 41.8848, 0.68 ) }
    dend_18 { pt3dadd( 7.90766, -30.3906, 42.491, 0.68 ) }
    dend_18 { pt3dadd( 8.25305, -30.8599, 43.0011, 1.14 ) }
    dend_18 { pt3dadd( 8.81216, -31.6196, 43.8269, 0.91 ) }
    dend_18 { pt3dadd( 9.32736, -32.3196, 44.5878, 0.46 ) }
    dend_18 { pt3dadd( 9.80994, -32.9516, 45.2592, 0.23 ) }
    dend_18 { pt3dadd( 11.042, -34.2746, 46.5889, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.5211, -28.4333, 42.845, 0.46 ) }
    dend_21 { pt3dadd( 3.94859, -29.417, 43.5725, 0.46 ) }
    dend_21 { pt3dadd( 3.16852, -30.7574, 44.5636, 0.46 ) }
    dend_21 { pt3dadd( 2.69424, -31.5723, 45.1663, 0.46 ) }
    dend_21 { pt3dadd( 2.08377, -32.6212, 45.9419, 0.46 ) }
    dend_21 { pt3dadd( 1.35568, -33.8723, 46.867, 0.23 ) }
    dend_21 { pt3dadd( 0.721527, -34.9619, 47.6728, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 67/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.5211, -28.4333, 42.845, 0.46 ) }
    dend_20 { pt3dadd( 4.44324, -26.9278, 44.3475, 0.46 ) }
    dend_20 { pt3dadd( 4.39049, -25.9077, 45.3656, 0.46 ) }
    dend_20 { pt3dadd( 4.36834, -25.4794, 45.793, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_56 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_43 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_28 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_24 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_15 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_45 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_55 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_7 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_47 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_19 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_46 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_18 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_21 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_22 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_6 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_37 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_33 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_50 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_41 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_42 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_4 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_57 nseg = 3
    dend_56 nseg = 3
    dend_52 nseg = 5
    dend_26 nseg = 3
    dend_11 nseg = 3
    dend_43 nseg = 3
    dend_38 nseg = 3
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
    dend_3 nseg = 5
    dend_25 nseg = 13
    dend_24 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_SLAC_9d4b6f19da_0_0


