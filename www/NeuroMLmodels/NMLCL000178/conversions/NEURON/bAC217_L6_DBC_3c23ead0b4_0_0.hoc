// Cell: bAC217_L6_DBC_3c23ead0b4_0_0
/*
{
  "id" : "bAC217_L6_DBC_3c23ead0b4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.75595, 10.9227, 2.76", "-5.83961, 9.55579, 9.6696, 2.16", "-8.31994, 11.475, 6.70175, 2.52", "-10.1199, 12.7289, 4.76321, 2.52", "-11.429, 13.561, 3.51633, 2.52", "-12.1175, 13.9584, 2.9107, 2.52", "-12.9484, 14.3812, 2.27525, 2.28", "-15.1624, 15.4363, 0.869723, 1.92", "-16.11, 15.8341, 0.425495, 1.92", "-18.1611, 16.5813, -0.4226, 1.8", "-19.3921, 17.0128, -0.863004, 1.8", "-22.0537, 17.8327, -1.68825, 1.56", "-24.1222, 18.3983, -2.24368, 1.92", "-25.9062, 18.8008, -2.65242, 1.92", "-27.1806, 18.9605, -2.88248, 1.92", "-28.8091, 18.9847, -3.10666, 1.92", "-31.9245, 18.8151, -3.51932, 1.8", "-32.4525, 18.7428, -3.59843, 1.8", "-33.5575, 18.5125, -3.76436, 1.8", "-36.1775, 17.841, -4.21906, 1.32", "-37.1043, 17.585, -4.42682, 1.32", "-38.8918, 17.0832, -4.99231, 1.92", "-39.5884, 17.0326, -5.3995, 1.92", "-40.0895, 17.443, -6.18253, 1.92", "-40.3168, 17.7335, -6.67765, 1.92", "-40.5576, 18.0845, -7.27791, 1.92", "-40.8865, 18.2979, -7.81434, 1.92", "-41.4172, 18.3893, -8.46638, 1.92", "-42.9848, 18.3689, -10.2186, 1.44", "-44.1652, 18.2947, -11.4528, 1.44", "-44.7642, 18.2308, -12.0403, 1.44", "-46.3069, 17.9772, -13.4858, 1.44", "-47.3237, 17.7487, -14.4101, 1.8", "-48.1188, 17.5136, -15.1257, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 12.956, 1.77275, 1.32", "-2.76771, 16.2169, 0.52707, 1.32", "-2.51565, 19.6653, -0.633428, 1.32", "-2.3871, 21.5382, -1.19741, 1.32", "-2.25622, 23.5567, -1.72989, 1.32", "-2.17822, 24.8162, -2.01732, 1.32", "-2.06753, 26.2567, -2.29786, 1.32", "-1.91946, 28.0174, -2.47146, 1.32", "-1.81429, 29.1208, -2.42984, 1.32", "-1.60078, 31.1755, -2.27036, 1.08", "-1.34826, 33.3689, -2.05222, 1.56", "-1.07814, 35.6978, -1.76506, 1.56", "-0.83169, 37.7279, -1.46562, 1.56", "-0.153282, 42.3804, -0.646499, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 10.376, 11.3727, 1.8", "-6.5045, 11.4102, 11.7533, 1.8", "-7.22174, 12.5079, 12.185, 1.8", "-8.625, 14.493, 13.1209, 1.56", "-9.02775, 15.0627, 13.3896, 1.56", "-9.94781, 16.3643, 14.0033, 1.44", "-10.9071, 17.7213, 14.6431, 0.96", "-11.3145, 18.2945, 14.9414, 0.96", "-13.0004, 20.5308, 16.2141, 1.92", "-17.7163, 27.2694, 19.5549, 1.92", "-23.8709, 32.4096, 23.3639, 1.92", "-31.0276, 37.0781, 25.7715, 1.92", "-37.5396, 42.7916, 27.7104, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -11.374, 11.5527, 2.64", "1.64946, -13.9378, 11.3658, 2.64", "1.90374, -16.8981, 11.15, 2.64", "2.09127, -19.0814, 10.9908, 2.64", "2.26614, -21.1172, 10.8423, 2.64", "2.62195, -25.2597, 10.5403, 2.4", "2.98043, -29.4332, 10.236, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -12.164, 13.0827, 2.16", "5.00707, -12.8432, 12.8545, 2.16", "5.61044, -15.0031, 12.2735, 2.16", "6.07026, -16.5486, 11.9346, 2.16", "6.86181, -19.209, 11.3512, 2.16", "7.44381, -21.165, 10.9222, 2.16", "7.86579, -22.5834, 10.6112, 2.16", "8.9814, -26.2774, 9.78859, 2.52", "9.76981, -29.1471, 9.15235, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 12.646, 11.8327, 2.52", "-0.138547, 16.1438, 11.8327, 2.52", "0.326465, 19.5883, 11.8327, 2.52", "0.744039, 22.6815, 11.8327, 2.52", "0.955174, 24.2455, 11.8327, 2.52", "1.21244, 26.1512, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.2104", "6.433, -28.5011, -0.0046052, 1.2104", "9.697, -43.1416, -0.0046052, 1.2104" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-48.1188, 17.5136, -15.1257, 1.2", "-49.5593, 19.8774, -14.116, 1.2", "-51.1429, 21.6177, -13.2603, 1.2", "-52.2974, 22.3657, -12.8111, 1.2", "-53.0566, 22.7707, -12.5473, 1.56", "-53.5347, 22.9655, -12.4773, 1.56", "-54.3817, 23.2447, -12.4426, 1.56", "-56.7386, 23.7632, -12.4685, 0.96", "-60.4167, 24.3734, -12.7339, 1.56", "-60.7821, 24.4265, -12.7692, 1.56", "-65.3764, 25.0049, -13.3539, 1.08", "-66.7906, 25.1455, -13.6001, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-48.1188, 17.5136, -15.1257, 1.08", "-49.4644, 17.2941, -15.9938, 1.08", "-50.8717, 16.8993, -16.9977, 1.56", "-53.7432, 15.6972, -19.5512, 0.84", "-54.7908, 15.0964, -20.7468, 0.84", "-55.1192, 14.8572, -21.1956, 0.84", "-55.9315, 14.1598, -22.4627, 0.84", "-56.6252, 13.3125, -23.9302, 0.84", "-57.3408, 12.0738, -25.9096, 0.84", "-57.8446, 10.8197, -27.6225, 0.84", "-58.1387, 10.0072, -28.6491, 0.84", "-58.4632, 9.20009, -29.6484, 0.84", "-58.7619, 8.57713, -30.381, 0.84", "-59.3512, 7.59321, -31.3694, 0.84", "-59.9836, 6.7482, -31.986, 0.84", "-60.3977, 6.29924, -32.2354, 0.84", "-61.3143, 5.4688, -32.6196, 0.84", "-61.9871, 4.94351, -32.8151, 0.84", "-63.0567, 4.20205, -33.0288, 0.84", "-64.3801, 3.25193, -33.2302, 0.84", "-65.8128, 2.1012, -33.4115, 0.84", "-66.7144, 1.2253, -33.5016, 0.84", "-67.7575, 0.0208061, -33.6131, 0.84", "-69.3871, -2.19563, -33.8838, 0.84", "-70.6593, -4.26461, -34.1682, 1.32", "-71.5541, -5.97221, -34.3972, 0.6", "-72.4368, -7.99849, -34.6533, 1.2", "-73.0486, -9.71068, -34.8889, 0.72", "-73.4954, -11.3491, -35.1499, 0.72", "-73.6932, -12.4212, -35.3652, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-0.153282, 42.3804, -0.646499, 1.32", "0.549826, 43.8341, 0.0683974, 1.32", "2.14063, 47.3989, 1.57639, 0.96", "2.78164, 49.0578, 2.17704, 0.96", "3.30578, 50.7926, 2.69835, 1.2", "3.52542, 51.7835, 2.93817, 1.2", "3.67197, 52.658, 3.12042, 1.2", "3.70529, 53.6387, 3.23985, 1.44", "3.48793, 54.9847, 3.24169, 1.08", "2.98262, 56.6948, 3.24314, 1.08", "2.27855, 58.5555, 3.2444, 1.56", "2.05527, 59.0628, 3.24458, 1.56", "1.36689, 60.4365, 3.24425, 1.56", "0.362296, 62.2032, 3.2417, 1.56", "0.27213, 62.3395, 3.24112, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-37.5396, 42.7916, 27.7104, 1.2", "-45.0967, 50.4122, 31.6747, 1.2", "-50.8512, 58.3244, 37.6063, 1.2", "-58.6402, 65.7895, 41.4148, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-37.5396, 42.7916, 27.7104, 1.44", "-45.7607, 50.9865, 31.8959, 1.2", "-52.4976, 60.3446, 36.2894, 1.2", "-60.132, 69.2718, 40.0687, 1.2", "-68.8489, 77.3747, 43.3276, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.98043, -29.4332, 10.236, 1.2", "2.13546, -33.4584, 9.71331, 1.2", "1.67917, -35.8721, 9.38657, 1.2", "1.22361, -38.5941, 9.01639, 1.2", "0.857647, -41.0021, 8.69425, 1.2", "0.638485, -42.7213, 8.47021, 1.2", "0.483714, -44.009, 8.3001, 1.2", "0.420669, -44.9881, 8.14188, 1.2", "0.387506, -46.26, 7.9371, 1.2", "0.416058, -47.0113, 7.84045, 1.2", "0.536408, -48.4402, 7.68401, 1.2", "0.615286, -49.4846, 7.58874, 1.2", "0.632086, -50.5988, 7.52581, 1.2", "0.55075, -51.4854, 7.51038, 1.2", "0.232907, -53.2268, 7.54156, 1.2", "0.060629, -53.9544, 7.57109, 1.2", "-0.357259, -55.5033, 7.6505, 1.2", "-1.07177, -58.1311, 7.80107, 1.68", "-1.96477, -61.3265, 7.988, 1.08", "-2.73882, -64.1252, 8.14656, 0.72", "-3.10261, -65.5582, 8.21976, 1.92", "-3.93399, -69.3114, 8.38644, 0.96", "-4.44518, -72.0828, 8.49087, 0.84", "-4.65704, -73.6761, 8.53411, 1.44", "-4.82001, -75.7847, 8.56984, 1.08", "-4.89469, -77.7749, 8.59394, 1.08", "-4.93973, -80.9811, 8.62906, 0.72", "-4.94579, -82.3512, 8.64939, 1.44", "-4.98261, -84.2898, 8.68572, 1.44", "-5.08073, -86.8899, 8.74642, 0.72", "-5.13965, -87.9058, 8.7749, 1.2", "-5.27711, -89.7676, 8.83363, 1.2", "-5.37419, -91.2103, 8.8769, 1.56", "-5.54878, -93.1978, 8.88816, 1.32", "-5.80249, -95.4372, 8.86552, 0.84", "-6.06256, -98.0649, 8.78836, 1.56", "-6.19286, -99.6202, 8.72618, 1.56", "-6.39942, -102.397, 8.59707, 0.96", "-6.57564, -104.957, 8.46615, 0.96", "-6.72674, -106.931, 8.36659, 1.32", "-6.99378, -109.344, 8.27279, 1.32", "-7.49022, -112.679, 8.20534, 0.72", "-7.69836, -113.8, 8.20224, 1.56", "-7.95924, -114.911, 8.21119, 1.56", "-8.53835, -117.055, 8.25127, 0.96", "-9.16859, -118.892, 8.28416, 1.68", "-10.2892, -121.758, 8.26074, 1.08", "-11.225, -124.078, 8.18318, 0.96", "-12.3557, -127.051, 8.02894, 1.44", "-12.9314, -128.662, 7.92347, 1.08", "-13.806, -131.23, 7.70358, 0.84", "-14.555, -133.542, 7.44904, 1.44", "-14.9162, -134.687, 7.30752, 1.44", "-15.5756, -136.954, 7.02619, 0.72", "-16.0123, -138.614, 6.80589, 0.72", "-16.7607, -141.61, 6.38869, 1.32", "-17.3055, -143.827, 6.04663, 0.96", "-17.5824, -144.774, 5.91008, 0.96", "-17.9176, -145.827, 5.73133, 0.96", "-18.4243, -147.17, 5.4723, 0.96", "-18.7442, -147.95, 5.32755, 0.96", "-19.2212, -149.003, 5.10501, 0.96", "-19.7406, -150.105, 4.86229, 0.96", "-21.3048, -153.38, 4.14643, 1.44", "-23.0904, -157.151, 3.36392, 0.48", "-23.9169, -158.981, 3.01707, 1.56", "-25.5197, -162.736, 2.35777, 0.84", "-25.9285, -163.761, 2.16768, 0.84", "-26.5944, -165.583, 1.81579, 0.84", "-27.0732, -167.092, 1.54407, 0.84", "-27.4699, -168.583, 1.31421, 0.84", "-27.8349, -170.02, 1.13092, 0.84", "-28.7569, -173.917, 0.732921, 0.6", "-29.2886, -176.069, 0.496507, 1.08", "-30.0635, -179.055, 0.143598, 0.72", "-30.8296, -181.83, -0.188048, 0.6", "-31.2269, -183.149, -0.330623, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.98043, -29.4332, 10.236, 1.92", "2.97701, -33.7559, 9.96347, 1.92", "2.97327, -38.4882, 9.66511, 1.92", "2.96904, -43.8252, 9.32862, 2.28", "2.9668, -46.6587, 9.14997, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.76981, -29.1471, 9.15235, 1.32", "12.9028, -30.7847, 9.69872, 1.32", "15.0298, -31.6628, 10.1245, 1.32", "16.7682, -32.2735, 10.5016, 1.32", "18.6434, -32.8765, 10.9305, 1.32", "21.1493, -33.6047, 11.5448, 1.32", "22.4698, -33.9894, 11.8889, 1.32", "25.9115, -34.9503, 12.9325, 1.08", "27.0037, -35.2432, 13.291, 1.08", "27.4554, -35.3688, 13.4481, 1.08", "29.8685, -36.1024, 14.3362, 1.44", "31.7155, -36.8123, 15.0089, 1.08", "32.643, -37.2674, 15.3439, 1.08", "34.8502, -38.5012, 16.0807, 1.08", "36.2837, -39.3022, 16.5115, 0.84", "37.7194, -40.1084, 16.8957, 0.84", "39.4487, -40.9892, 17.2967, 0.84", "40.8533, -41.6721, 17.6076, 0.84", "44.2811, -43.2981, 18.2045, 1.2", "46.2315, -44.1926, 18.43, 0.84", "47.9099, -44.8671, 18.5244, 0.84", "51.2026, -46.0126, 18.574, 0.96", "54.4472, -47.1015, 18.5809, 0.72", "58.0695, -48.2979, 18.5111, 1.2", "60.0745, -48.9675, 18.3922, 1.2", "62.1932, -49.6027, 18.167, 0.6", "63.1801, -49.8637, 18.0108, 0.6", "74.7175, -52.5874, 18.2645, 0.6", "85.599, -57.2664, 17.7215, 0.6", "97.2523, -59.4423, 17.9694, 0.6", "109.098, -59.827, 18.2977, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.76981, -29.1471, 9.15235, 1.8", "10.1675, -32.2949, 9.01083, 1.8", "10.6794, -35.4995, 8.88503, 1.8", "11.0478, -37.3665, 8.82456, 1.8", "11.2521, -38.2805, 8.77836, 1.8", "11.5658, -39.5988, 8.69509, 1.8", "11.8623, -40.8129, 8.65516, 1.8", "12.154, -41.8032, 8.66103, 1.8", "12.5661, -43.4133, 8.70727, 1.8", "12.7616, -44.4858, 8.73302, 1.8", "12.9784, -46.0009, 8.76818, 1.8", "13.3035, -48.8014, 8.7032, 1.8", "13.4496, -50.2347, 8.62906, 1.8", "13.7283, -53.112, 8.42327, 2.16", "13.9899, -55.3213, 8.21366, 1.92", "14.1325, -56.2351, 8.10892, 1.92", "15.003, -61.4268, 7.37476, 2.16", "15.3866, -63.4756, 6.99745, 2.16", "15.6911, -64.857, 6.7207, 2.16", "16.4142, -67.5225, 6.16011, 1.92", "16.9554, -69.1952, 5.80207, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.21244, 26.1512, 11.8327, 1.8", "2.69914, 29.0412, 12.9752, 1.8", "4.05235, 31.6717, 14.015, 1.8", "5.46847, 34.4245, 15.1032, 1.8", "7.13395, 37.662, 16.383, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.932747", "12.961, -57.7822, -0.0046052, 0.932747", "16.225, -72.4228, -0.0046052, 0.932747" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-66.7906, 25.1455, -13.6001, 1.68", "-67.1125, 25.126, -13.6803, 1.68", "-70.9254, 25.079, -14.5216, 1.2", "-73.9492, 25.2188, -15.1058, 1.68", "-75.2914, 25.3483, -15.3474, 1.68", "-77.2597, 25.6682, -15.6932, 1.2", "-80.7137, 26.3853, -16.3271, 1.2", "-82.672, 26.9534, -16.7912, 0.84", "-84.602, 27.7922, -17.42, 1.32", "-85.7107, 28.3999, -17.9245, 1.32", "-87.4943, 29.4894, -18.9357, 0.84", "-88.2518, 29.9948, -19.4587, 0.84", "-90.8976, 31.8969, -21.5608, 0.84", "-92.8956, 33.34, -23.2348, 0.84", "-94.2243, 34.3189, -24.3485, 0.84", "-95.2568, 35.0592, -25.1345, 0.84", "-96.6515, 35.994, -26.0458, 0.84", "-98.0642, 36.9156, -26.7864, 0.84", "-100.111, 38.298, -27.5834, 0.84", "-101.535, 39.2789, -28.0246, 0.84", "-103.509, 40.67, -28.5594, 0.84", "-105.974, 42.5092, -29.2169, 0.84", "-107.272, 43.531, -29.5404, 0.84", "-109.909, 45.6703, -30.2291, 1.32", "-111.763, 47.1943, -30.7425, 1.32", "-114.253, 49.3718, -31.4295, 0.96", "-116.104, 51.1226, -31.9814, 0.96", "-117.154, 52.097, -32.2962, 0.96", "-118.585, 53.3381, -32.7709, 0.96", "-119.847, 54.28, -33.1996, 0.96", "-123.292, 56.5579, -34.3214, 0.72", "-124.547, 57.2664, -34.7122, 0.72", "-129.462, 59.5815, -36.124, 1.08", "-130.875, 60.1629, -36.5105, 1.08", "-135.424, 61.9898, -37.5371, 1.08", "-137.779, 62.946, -38.0606, 1.08", "-140.406, 64.1312, -38.6033, 1.08", "-142.713, 65.3288, -39.0574, 1.08", "-143.531, 65.8275, -39.2402, 1.08", "-147.044, 68.2183, -40.0956, 1.08", "-149.702, 70.2166, -40.8506, 1.08", "-154.707, 74.0375, -42.4217, 1.44", "-156.034, 75.0299, -42.871, 1.44", "-159.249, 77.1545, -43.9975, 1.2", "-160.551, 77.8387, -44.3804, 1.2", "-162.37, 78.5494, -44.8141, 1.2", "-167.569, 80.1307, -45.7353, 1.08", "-170.798, 80.9498, -46.2913, 1.08", "-174.798, 81.9458, -46.9064, 1.08", "-180.506, 83.307, -47.7289, 0.72", "-184.226, 84.1697, -48.2774, 0.72", "-187.198, 84.8404, -48.7153, 1.08", "-190.831, 85.5552, -49.2599, 0.84", "-192.907, 85.8211, -49.6363, 0.84", "-194.359, 85.919, -49.9729, 0.84", "-196.079, 85.9777, -50.464, 0.84", "-199.036, 85.8932, -51.284, 0.84", "-203.267, 85.4533, -52.2958, 0.84", "-209.701, 84.2845, -53.5986, 0.6", "-210.622, 84.0757, -53.7948, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-66.7906, 25.1455, -13.6001, 1.32", "-67.0972, 26.0077, -14.1863, 1.32", "-67.5342, 27.1848, -15.0522, 0.84", "-68.029, 28.6229, -16.1996, 1.44", "-68.7881, 30.6431, -17.9972, 1.08", "-69.3079, 31.798, -19.0836, 1.08", "-69.5128, 32.1847, -19.4669, 1.08", "-70.327, 33.4454, -20.879, 1.56", "-71.276, 34.5565, -22.2856, 0.96", "-72.0571, 35.2404, -23.2386, 0.96", "-73.0144, 35.8072, -24.0078, 0.96", "-73.7777, 36.1139, -24.4201, 0.96", "-74.5046, 36.3232, -24.7117, 0.96", "-75.2207, 36.4535, -24.9053, 0.96", "-76.2381, 36.6295, -25.1068, 0.96", "-78.3947, 37.0441, -25.5154, 0.72", "-80.287, 37.3622, -25.8894, 0.72", "-81.6955, 37.5851, -26.1608, 0.72", "-82.7555, 37.7331, -26.3693, 0.72", "-84.0708, 37.906, -26.6402, 0.72", "-86.0894, 38.2001, -27.0868, 0.72", "-88.2562, 38.5718, -27.5746, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "0.27213, 62.3395, 3.24112, 1.32", "-0.137285, 63.1193, 3.53014, 1.32", "-0.714418, 64.1222, 3.85722, 1.32", "-1.50017, 65.492, 4.28016, 1.08", "-1.98552, 66.3748, 4.53572, 1.08", "-2.26131, 66.9155, 4.67874, 1.08", "-2.65986, 67.7514, 4.88125, 1.08", "-3.10754, 68.6777, 5.04233, 1.08", "-3.31814, 69.1081, 5.10511, 1.08", "-3.56844, 69.6484, 5.1562, 1.08", "-3.90413, 70.337, 5.21633, 1.08", "-4.16349, 70.7904, 5.26068, 1.08", "-4.46054, 71.1681, 5.30403, 1.08", "-4.83259, 71.4804, 5.34557, 1.08", "-5.40248, 71.8804, 5.39685, 1.08", "-6.12018, 72.3613, 5.47152, 1.08", "-6.75359, 72.8025, 5.54709, 1.08", "-7.43113, 73.3509, 5.64207, 1.08", "-8.03862, 74.0514, 5.6485, 0.96", "-8.21856, 74.5576, 5.55625, 0.96", "-8.27304, 75.3332, 5.32606, 0.96", "-8.24881, 75.9675, 5.11933, 0.96", "-8.19995, 76.5153, 4.93613, 0.96", "-7.9593, 78.6062, 4.22274, 0.72", "-7.87087, 79.4712, 3.90951, 0.72", "-7.83466, 80.2155, 3.63595, 0.72", "-7.82872, 81.0129, 3.36499, 0.72", "-7.86529, 82.3626, 2.9893, 0.72", "-7.90098, 83.0344, 2.85107, 0.72", "-7.96296, 83.6658, 2.78951, 0.72", "-8.08584, 84.5755, 2.67015, 0.72", "-8.28381, 85.9783, 2.46463, 0.72", "-8.46593, 86.9819, 2.31255, 0.72", "-8.6714, 87.8199, 2.18769, 0.72", "-9.07276, 89.1072, 1.99877, 1.2", "-9.92431, 91.0723, 1.7275, 1.08", "-10.4752, 91.9377, 1.6288, 1.08", "-11.0902, 92.6849, 1.56306, 1.08", "-11.5572, 93.1989, 1.54214, 1.08", "-11.9924, 93.6526, 1.52442, 0.72", "-13.2366, 94.925, 1.45868, 1.2", "-14.5716, 96.2787, 1.41947, 1.08", "-15.6955, 97.4472, 1.39087, 1.44", "-16.2474, 98.1094, 1.37753, 1.44", "-17.0784, 99.3562, 1.35522, 1.2", "-17.5336, 100.242, 1.34428, 1.2", "-18.0113, 101.56, 1.35237, 1.08", "-18.3674, 103.085, 1.40077, 1.08", "-18.6351, 104.598, 1.50523, 0.96", "-18.8547, 106.115, 1.65644, 0.96", "-18.9436, 106.906, 1.77021, 1.2", "-19.0209, 107.857, 1.85944, 0.72", "-19.0663, 109.749, 1.90071, 1.2", "-19.0649, 110.251, 1.86929, 1.2", "-19.1088, 111.241, 1.74982, 1.2", "-19.2323, 112.217, 1.57637, 1.2", "-19.6087, 114.088, 1.13342, 1.2", "-19.8703, 114.922, 0.877268, 1.2", "-20.1186, 115.439, 0.689478, 1.2", "-20.8488, 116.469, 0.344119, 0.96", "-21.4579, 117.063, 0.205784, 1.2", "-21.8608, 117.397, 0.170779, 1.2", "-22.5461, 117.926, 0.173753, 1.2", "-22.9751, 118.266, 0.176019, 1.2", "-24.0289, 119.182, 0.182621, 1.2", "-25.2161, 120.415, 0.191229, 1.2", "-25.8464, 121.195, 0.195974, 1.2", "-26.2506, 121.753, 0.198749, 1.2", "-26.6857, 122.445, 0.201596, 1.2", "-27.054, 123.115, 0.203835, 1.2", "-27.6269, 124.407, 0.206985, 0.84", "-28.1302, 125.716, 0.224681, 1.32", "-28.8386, 127.672, 0.269695, 0.84", "-29.1882, 128.653, 0.300795, 0.84", "-29.4625, 129.423, 0.331197, 0.84", "-29.8307, 130.47, 0.379882, 0.84", "-30.2783, 131.667, 0.469641, 0.84", "-30.5675, 132.336, 0.536894, 0.84", "-31.0135, 133.129, 0.586302, 0.84", "-31.3421, 133.572, 0.592415, 0.84", "-31.9728, 134.244, 0.569393, 1.2", "-33.0007, 135.15, 0.467457, 0.84", "-33.9604, 135.884, 0.352922, 0.84", "-35.0876, 136.633, 0.229014, 1.2", "-36.0161, 137.077, 0.143807, 0.6", "-37.1482, 137.556, 0.035747, 0.6", "-38.3537, 137.977, -0.0837931, 1.08", "-39.7402, 138.359, -0.226701, 0.48", "-40.5329, 138.52, -0.270648, 0.48", "-42.8557, 138.861, -0.193737, 0.84", "-46.5091, 144.984, 0.659479, 0.84", "-50.0969, 151.204, 0.520975, 0.84", "-52.8184, 157.845, 0.268253, 0.84", "-55.7389, 164.3, -0.908104, 0.84", "-58.4623, 170.851, -2.0231, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.27213, 62.3395, 3.24112, 1.32", "-1.49067, 64.1189, 2.79978, 1.32", "-2.09022, 64.762, 2.59761, 1.32", "-2.79958, 65.6149, 2.2959, 1.32", "-3.48126, 66.5846, 1.92027, 1.32", "-3.85911, 67.1761, 1.68559, 1.32", "-4.38945, 68.2097, 1.29344, 1.32", "-4.7189, 69.2834, 0.861586, 1.32", "-4.90494, 70.5572, 0.369994, 1.56", "-4.85467, 71.8239, -0.0976403, 1.56", "-4.74932, 72.2747, -0.237672, 1.56", "-4.02393, 74.0569, -0.739613, 1.2", "-3.66908, 74.6554, -0.890543, 1.2", "-3.02048, 75.4767, -1.10305, 1.2", "-1.92716, 76.5762, -1.43185, 1.08", "-1.09027, 77.2888, -1.68071, 1.08", "-0.5574, 77.6935, -1.872, 1.08", "-0.047237, 78.0614, -2.10843, 1.08", "0.466295, 78.486, -2.41994, 1.08", "1.3946, 79.4096, -3.15716, 1.8", "1.56376, 79.6408, -3.35003, 1.8", "2.1642, 80.8988, -4.37298, 1.32", "2.36463, 81.6335, -4.95339, 1.32", "2.39914, 82.5755, -5.66979, 1.08", "2.32741, 82.8467, -5.85943, 1.08", "1.96061, 83.5229, -6.25821, 1.08", "1.48827, 84.2352, -6.63357, 1.44", "1.09121, 84.7545, -6.88525, 1.44", "0.602587, 85.3823, -7.19647, 1.44", "0.188069, 85.9341, -7.50178, 1.44", "-0.609345, 87.1578, -8.24052, 0.84", "-1.00244, 87.8915, -8.69318, 0.84", "-1.60111, 89.4125, -9.66822, 1.44", "-1.84553, 90.2835, -10.1279, 1.44", "-2.09307, 91.5948, -10.6944, 0.96", "-2.30495, 92.9433, -11.2611, 0.96", "-2.41036, 93.6305, -11.5351, 0.96", "-2.49968, 94.6516, -11.8608, 0.72", "-2.40628, 97.3427, -12.3775, 1.2", "-2.27301, 98.5058, -12.4663, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-58.6402, 65.7895, 41.4148, 0.6", "-65.0284, 73.5336, 44.9366, 0.6", "-70.7896, 82.3575, 46.3968, 0.6", "-75.1371, 91.7206, 48.969, 0.6", "-80.717, 100.082, 52.4533, 0.6", "-85.1354, 108.954, 56.3189, 0.6", "-90.2027, 117.428, 60.2817, 0.6", "-96.0453, 125.942, 62.8414, 0.6", "-103.479, 133.216, 65.0828, 0.6", "-110.562, 140.52, 68.1923, 0.6", "-115.805, 148.853, 72.2254, 0.6", "-122.045, 157.282, 74.0129, 0.6", "-126.886, 166.509, 76.1583, 0.6", "-132.003, 175.279, 79.3368, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-58.6402, 65.7895, 41.4148, 0.84", "-66.342, 72.2977, 49.227, 0.6", "-74.0963, 80.596, 55.0332, 0.6", "-80.6922, 90.7675, 59.0005, 0.6", "-87.0529, 101.408, 62.0057, 0.6", "-93.2603, 111.747, 66.1615, 0.6", "-101.59, 119.736, 71.5935, 0.6", "-110.4, 128.065, 75.5579, 0.6", "-118.744, 136.72, 79.821, 0.6", "-127.114, 145.719, 83.2355, 0.6", "-134.864, 155.113, 87.0304, 0.6", "-143.747, 164.181, 88.2849, 0.6", "-151.872, 173.952, 89.3821, 0.6", "-159.411, 184.237, 89.6569, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-31.2269, -183.149, -0.330623, 0.96", "-32.9657, -182.585, 0.461118, 0.96", "-34.289, -182.156, 1.06365, 0.96", "-35.2295, -181.852, 1.49185, 0.72", "-35.9217, -181.627, 1.80703, 0.72", "-36.5095, -181.437, 2.07467, 0.72", "-37.5101, -181.112, 2.53028, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-31.2269, -183.149, -0.330623, 0.96", "-33.9007, -189.101, -1.47291, 0.96", "-35.0542, -191.22, -2.43164, 0.96", "-36.28, -193.669, -3.72697, 1.32", "-37.6643, -196.88, -5.35069, 0.6", "-38.3812, -198.795, -6.49252, 0.6", "-39.1166, -201.082, -7.87468, 1.2", "-41.1287, -208.374, -12.1853, 1.2", "-41.7977, -210.831, -13.6974, 1.56", "-42.6648, -214.349, -15.8642, 0.96", "-43.9279, -220.735, -19.6014, 0.6", "-44.3842, -223.646, -21.0817, 1.08", "-44.8029, -226.328, -22.3464, 0.72", "-45.0882, -227.712, -22.8693, 0.72", "-45.6453, -229.615, -23.574, 1.08", "-46.3642, -231.68, -24.2734, 0.72", "-47.2756, -234.039, -24.8614, 0.72", "-49.873, -240.215, -26.3821, 0.48", "-50.8532, -242.443, -26.9034, 1.56", "-52.6576, -246.323, -27.6673, 1.08", "-53.4264, -247.857, -27.8954, 0.72", "-54.9575, -250.815, -28.1731, 1.08", "-56.4111, -253.573, -28.3705, 0.72", "-57.1266, -255.015, -28.3968, 0.72", "-58.8254, -258.526, -28.6109, 1.2", "-60.1099, -261.315, -28.8946, 0.72", "-60.6727, -262.582, -29.0566, 0.72", "-62.1343, -266.395, -29.6224, 0.72", "-62.784, -268.636, -30.2486, 1.08", "-63.2033, -270.598, -30.887, 0.96", "-63.439, -272.073, -31.3852, 0.96", "-63.6397, -273.778, -31.9376, 0.96", "-63.9133, -276.935, -32.8514, 0.96", "-64.3145, -283.835, -34.5463, 1.2", "-64.4861, -288.644, -35.7198, 0.6", "-64.4748, -291.858, -36.4706, 0.6", "-64.3815, -293.679, -36.8426, 0.6", "-64.1761, -295.745, -37.1764, 0.6", "-64.0396, -297.164, -37.2715, 0.6", "-63.9401, -298.326, -37.2273, 0.6", "-63.805, -299.957, -37.1878, 0.6", "-63.5741, -303.672, -37.2913, 0.6", "-63.5241, -304.941, -37.3656, 0.6", "-63.3645, -312.214, -37.9268, 0.96", "-63.336, -315.686, -38.2227, 0.48", "-63.3655, -317.872, -38.4143, 0.48", "-63.5863, -323.024, -38.8516, 0.72", "-63.7758, -326.092, -39.0983, 0.48", "-63.929, -328.522, -39.1821, 1.2", "-64.2756, -333.102, -39.1343, 0.84", "-64.5594, -335.867, -38.9809, 1.32", "-65.0889, -339.812, -38.6013, 0.84", "-65.5899, -342.825, -38.1808, 1.44", "-66.9567, -349.546, -37.052, 0.48", "-67.7408, -352.994, -36.4058, 0.48", "-68.9771, -357.426, -35.4863, 0.48", "-69.8687, -360.039, -34.9024, 0.48", "-70.9041, -362.42, -34.3206, 0.96", "-73.824, -367.524, -32.9982, 0.48", "-74.4684, -368.47, -32.7559, 0.84", "-76.6736, -371.322, -31.9165, 0.6", "-78.3365, -373.092, -31.2996, 0.84", "-80.3295, -374.904, -30.5963, 0.6", "-82.6543, -376.591, -29.8891, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.9668, -46.6587, 9.14997, 0.96", "2.35629, -48.2477, 9.03906, 0.96", "1.91088, -49.9189, 8.94134, 0.96", "1.75917, -50.5576, 8.99725, 0.96", "1.43754, -51.7174, 9.21366, 0.96", "1.09961, -52.7728, 9.47978, 0.96", "0.656908, -53.9711, 9.88194, 0.96", "-0.049885, -55.8503, 10.6759, 1.32", "-0.99096, -58.1818, 11.7738, 0.84", "-1.613, -59.7188, 12.5609, 0.84", "-2.02812, -60.7507, 13.1426, 0.84", "-2.97711, -62.9638, 14.5086, 1.32", "-3.63172, -64.267, 15.3819, 1.32", "-4.32353, -65.4428, 16.2126, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.9668, -46.6587, 9.14997, 1.44", "2.92204, -50.7425, 9.42958, 1.44", "2.87037, -53.6643, 9.61579, 1.44", "2.83636, -55.4133, 9.71497, 1.44", "2.73176, -59.069, 9.90913, 1.8", "2.68816, -60.5927, 9.99005, 1.8", "2.64514, -62.0963, 10.0699, 1.8", "2.58531, -63.3502, 10.1053, 1.8", "2.4391, -65.9212, 10.1878, 1.56", "2.27924, -68.6611, 10.2799, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "16.9554, -69.1952, 5.80207, 1.56", "19.1779, -71.3235, 5.78674, 1.56", "20.5169, -72.6279, 5.77653, 1.56", "22.1756, -74.2396, 5.76407, 1.2", "23.1755, -75.2084, 5.75669, 1.2", "24.6724, -76.6472, 5.74613, 1.56", "26.8185, -78.751, 5.7292, 1.2", "27.7908, -79.7404, 5.71995, 1.8", "28.8186, -80.8014, 5.70951, 1.8", "30.8217, -82.923, 5.70632, 1.08", "32.2342, -84.4537, 5.71428, 1.68", "33.857, -86.2642, 5.70577, 1.32", "34.913, -87.4809, 5.68984, 1.32", "35.5626, -88.2419, 5.67459, 1.32", "37.0884, -90.0979, 5.62393, 1.08", "38.1428, -91.4513, 5.55242, 1.56", "39.7142, -93.6039, 5.44228, 1.2", "40.265, -94.3903, 5.40375, 1.2", "40.7872, -95.1474, 5.38095, 1.2", "41.8077, -96.6294, 5.3596, 1.68", "42.6581, -97.8602, 5.39571, 1.2", "43.7382, -99.3963, 5.5138, 0.96", "44.4466, -100.328, 5.62839, 0.96", "46.3196, -102.593, 5.94693, 0.84", "47.2704, -103.684, 6.12199, 0.84", "48.7536, -105.286, 6.4164, 1.44", "49.5387, -106.1, 6.58041, 1.44", "50.9608, -107.553, 6.83848, 1.44", "51.7854, -108.444, 6.98589, 0.96", "52.6852, -109.489, 7.12729, 1.44", "53.0043, -109.869, 7.16901, 1.44", "53.8153, -110.859, 7.23634, 1.44", "54.441, -111.66, 7.28348, 1.44", "55.5875, -113.163, 7.35001, 1.08", "56.6379, -114.496, 7.38791, 1.08", "57.2681, -115.231, 7.39615, 1.08", "58.5241, -116.576, 7.40139, 1.44", "59.1443, -117.194, 7.40689, 1.44", "60.7398, -118.779, 7.44036, 0.84", "61.7704, -119.824, 7.46922, 1.56", "63.5078, -121.66, 7.52771, 1.08", "64.3492, -122.568, 7.55885, 1.32", "66.8613, -125.06, 7.65575, 1.08", "68.1293, -126.227, 7.71853, 1.08", "69.2255, -127.172, 7.77992, 1.08", "70.8391, -128.462, 7.872, 1.08", "71.9441, -129.306, 7.89685, 1.08", "75.2807, -131.763, 7.85174, 1.44", "77.5649, -133.401, 7.73504, 1.08", "78.9791, -134.425, 7.62762, 1.08", "81.2451, -136.156, 7.43066, 1.08", "83.8222, -138.167, 7.1656, 0.72", "85.7769, -139.791, 6.91523, 1.32", "87.1561, -141.107, 6.66534, 0.84", "88.0067, -141.977, 6.46385, 0.84", "89.4415, -143.628, 6.07565, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.9554, -69.1952, 5.80207, 1.68", "17.275, -72.1219, 5.72983, 1.68", "17.6264, -74.7023, 5.67548, 1.68", "17.8697, -76.1798, 5.64814, 1.68", "18.6936, -80.4355, 5.57759, 1.32", "19.2941, -83.2607, 5.53039, 1.56", "20.0005, -86.9125, 5.44914, 1.56", "20.2661, -88.2879, 5.40857, 1.56", "20.5993, -90.402, 5.33329, 1.56", "20.9059, -92.9523, 5.22586, 1.56", "21.2481, -96.575, 5.05392, 1.2", "21.6551, -101.674, 4.79019, 1.56", "21.9091, -105.227, 4.62785, 1.2", "22.239, -109.692, 4.45843, 1.2", "22.4405, -112.279, 4.35045, 1.56", "22.6879, -115.259, 4.19318, 1.56", "22.9315, -117.659, 4.03246, 1.56", "23.4134, -121.353, 3.82751, 1.2", "23.8129, -124.566, 3.66892, 1.56", "24.225, -128.218, 3.5029, 1.44", "24.4587, -130.781, 3.38884, 1.44", "24.577, -132.626, 3.30536, 1.44", "24.9233, -138.84, 3.02833, 1.08", "25.122, -142.18, 2.80035, 1.08", "25.3458, -145.17, 2.53645, 1.44", "25.4753, -146.502, 2.40326, 1.44", "25.7107, -148.436, 2.16955, 1.44", "26.1179, -151.185, 1.72602, 1.44", "26.8566, -155.03, 0.821235, 1.32", "27.4979, -157.685, 0.143361, 1.32", "27.8715, -159.09, -0.233166, 1.32", "28.1611, -160.255, -0.536186, 1.32", "28.6085, -162.313, -1.02953, 1.32", "28.8193, -163.547, -1.28001, 1.32", "29.0493, -164.999, -1.51495, 1.32", "29.5244, -168.05, -2.02268, 1.8", "29.9552, -170.985, -2.5336, 1.8", "30.3106, -173.542, -2.90526, 1.8", "30.6326, -176.1, -3.21773, 1.8", "31.0832, -180.272, -3.64728, 1.56", "31.4601, -184.516, -4.02029, 1.56", "31.6009, -186.555, -4.16814, 1.56", "31.8514, -190.91, -4.39841, 1.32", "31.9468, -192.956, -4.46874, 1.32", "32.0592, -196.632, -4.52478, 1.8", "32.084, -199.863, -4.50073, 1.8", "32.1442, -203.173, -4.4354, 1.56", "32.3162, -206.285, -4.40368, 1.56", "32.5215, -208.372, -4.42248, 1.56", "32.725, -209.877, -4.43138, 1.56", "32.9551, -211.419, -4.45982, 1.56", "33.2858, -213.644, -4.54316, 1.56", "33.657, -216.384, -4.70086, 1.2", "33.9467, -219.011, -4.93153, 1.2", "34.1087, -220.822, -5.12605, 1.2", "34.3247, -224.202, -5.56255, 1.56", "34.4905, -227.451, -6.05022, 1.56", "34.589, -229.475, -6.38279, 1.56", "34.7707, -232.135, -6.82515, 1.56", "34.978, -234.662, -7.26309, 1.56", "35.4795, -239.636, -8.15053, 1.56", "36.193, -245.344, -9.20298, 1.32", "36.8322, -250.092, -10.1267, 1.32", "37.1797, -252.649, -10.6302, 0.84", "37.5341, -255.275, -11.1449, 1.32", "37.9656, -258.392, -11.7587, 1.08", "38.4241, -261.311, -12.3574, 1.44", "38.9153, -264.386, -13.0414, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.13395, 37.662, 16.383, 1.2", "5.14073, 41.0317, 17.2796, 1.2", "4.38923, 42.5698, 17.7779, 1.2", "3.83582, 43.9106, 18.2582, 1.2", "2.97433, 46.6593, 19.4332, 1.2", "2.63865, 48.1397, 20.1075, 1.2", "2.4223, 49.5625, 20.7692, 1.08", "2.35968, 51.8292, 21.9156, 1.56", "2.4128, 53.3536, 22.6932, 1.56", "2.72276, 56.7146, 24.3345, 1.2", "3.0261, 58.8784, 25.2997, 0.96", "3.34249, 61.248, 26.2241, 1.32", "3.43935, 62.3289, 26.6122, 1.32", "3.48889, 63.5334, 26.9922, 1.32", "3.51271, 65.329, 27.4593, 1.32", "3.50259, 66.3361, 27.6782, 1.32", "3.5075, 68.301, 28.1132, 1.2", "3.57731, 70.3443, 28.6261, 1.56", "3.64496, 71.709, 28.9901, 1.2", "3.80024, 73.8107, 29.598, 1.68", "4.14709, 76.6631, 30.4888, 1.2", "4.36293, 77.8042, 30.8665, 1.44", "4.93839, 79.6964, 31.5075, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.13395, 37.662, 16.383, 1.44", "7.08113, 42.3922, 15.9006, 1.44", "7.05691, 44.561, 15.6794, 1.44", "7.02891, 47.0682, 15.4237, 1.44", "6.99669, 49.9537, 15.1295, 1.44", "6.95767, 53.4472, 14.7732, 1.8", "6.92467, 56.4024, 14.4719, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-4.32353, -65.4428, 16.2126, 0.96", "-4.87345, -68.4173, 16.3862, 0.96", "-5.22077, -70.2505, 16.4093, 0.96", "-5.41613, -71.4336, 16.4064, 0.96", "-5.56315, -72.3312, 16.3974, 0.96", "-5.72111, -73.3505, 16.3783, 0.96", "-5.9558, -75.1865, 16.3632, 0.6", "-6.03838, -75.7533, 16.3265, 0.6", "-6.20891, -76.7657, 16.2705, 1.08", "-6.63183, -78.8857, 16.1924, 0.72", "-6.98149, -80.4802, 16.1475, 0.72", "-7.55602, -82.9447, 16.0695, 0.72", "-8.1597, -85.3074, 15.9513, 1.2", "-8.52867, -86.5959, 15.8476, 1.08", "-9.0372, -88.1386, 15.655, 0.48", "-9.67552, -89.9399, 15.3497, 0.48", "-10.414, -91.9305, 14.9388, 1.44", "-10.9667, -93.4354, 14.5754, 0.84", "-11.2285, -94.283, 14.3769, 1.08", "-11.5898, -95.6452, 14.0626, 1.08", "-12.0034, -97.5329, 13.6645, 1.44", "-12.273, -98.9335, 13.4133, 0.84", "-12.4532, -99.9619, 13.2902, 1.32", "-12.7043, -101.683, 13.1844, 0.72", "-12.8306, -102.539, 13.152, 0.72", "-12.9741, -103.306, 13.132, 0.72", "-13.3301, -104.438, 13.0462, 0.72", "-13.9997, -105.693, 12.7958, 1.08", "-14.6874, -106.733, 12.5179, 0.6", "-15.6159, -107.834, 12.1035, 1.08", "-16.3494, -108.554, 11.7576, 0.96", "-17.621, -109.567, 11.1078, 0.84", "-18.9587, -110.367, 10.3406, 0.84", "-20.3595, -118.208, 9.29684, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-4.32353, -65.4428, 16.2126, 0.84", "-5.37423, -67.3838, 16.5005, 0.84", "-6.10535, -68.77, 16.6847, 0.84", "-6.42086, -69.4268, 16.7651, 0.84", "-7.48799, -71.8989, 17.091, 0.48", "-8.02244, -73.2606, 17.2704, 0.48", "-8.84612, -75.607, 17.554, 0.84", "-9.26589, -77.0797, 17.6984, 0.84", "-9.60557, -78.4769, 17.7862, 0.84", "-10.2238, -81.5891, 17.9244, 0.84", "-10.3938, -82.7602, 17.9591, 0.84", "-10.6083, -84.8522, 18.0318, 0.6", "-10.7226, -86.1859, 18.0531, 1.08", "-10.9168, -87.9593, 18.0191, 1.08", "-11.1014, -89.2533, 17.957, 1.56", "-11.3676, -90.8048, 17.8144, 1.56", "-11.606, -92.0281, 17.6933, 1.08", "-12.0901, -94.2217, 17.47, 0.72", "-12.4312, -95.6257, 17.3228, 1.32", "-12.7531, -96.8169, 17.188, 1.32", "-13.2633, -98.4825, 16.9612, 0.72", "-13.8261, -100.21, 16.6849, 0.72", "-17.7261, -110.46, 15.8934, 0.72", "-20.8643, -120.993, 16.2322, 0.72", "-25.0622, -131.141, 16.7864, 0.72", "-29.2385, -141.299, 17.3052, 0.72", "-33.0763, -151.42, 19.2383, 0.72", "-36.3882, -161.172, 23.0916, 0.72", "-38.2854, -171.597, 26.0277, 0.72", "-37.9888, -182.403, 28.0372, 0.72", "-38.0076, -193.04, 30.8224, 0.72", "-38.3561, -203.906, 32.4721, 0.72", "-38.8874, -214.848, 31.5244, 0.72", "-39.4146, -225.743, 30.1403, 0.72", "-39.3367, -236.731, 30.5324, 0.72", "-39.4504, -247.578, 32.3347, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.27924, -68.6611, 10.2799, 1.08", "0.581888, -69.8573, 5.54052, 1.08", "-0.4893, -70.9452, 2.2993, 1.08", "-0.793916, -71.3375, 1.39891, 1.08", "-1.12062, -71.7534, 0.620013, 1.08", "-1.32407, -72.0316, 0.170682, 1.08", "-2.20613, -73.2652, -1.60904, 1.44", "-2.90493, -74.2802, -2.75428, 1.44", "-3.74729, -75.4468, -3.85573, 1.44", "-5.12854, -77.3104, -5.4451, 1.44", "-5.65488, -78.0299, -5.98039, 1.44", "-6.97719, -79.9358, -7.17051, 1.2", "-9.00868, -82.9924, -8.71805, 1.2", "-10.3535, -85.0778, -9.68424, 1.68", "-11.8305, -87.3258, -10.7108, 0.72", "-12.9443, -89.0127, -11.4279, 0.72", "-14.316, -90.8498, -12.2539, 1.44", "-15.4216, -92.1443, -12.87, 1.44", "-17.9182, -94.4616, -14.3224, 0.96", "-20.8456, -96.4631, -16.2641, 1.68", "-21.9976, -97.0788, -17.082, 1.68", "-24.7646, -98.3097, -19.1941, 1.68", "-26.9574, -99.1836, -20.9412, 1.68", "-30.4228, -100.535, -23.7539, 1.68", "-34.1811, -102.05, -26.7701, 1.68", "-36.9417, -103.213, -28.9511, 1.2", "-39.7255, -104.505, -31.1158, 0.84", "-40.8812, -105.147, -31.9884, 1.44", "-41.9099, -105.832, -32.7301, 0.72", "-44.1547, -107.56, -34.2221, 1.32", "-47.5091, -110.476, -36.3111, 0.6", "-48.2963, -111.21, -36.7966, 0.6", "-49.3459, -112.212, -37.408, 0.96", "-50.2567, -113.051, -37.9493, 0.96", "-53.9771, -116.349, -40.3174, 0.6", "-55.2552, -117.572, -41.2281, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.27924, -68.6611, 10.2799, 1.32", "2.26276, -68.773, 10.2689, 1.32", "1.90401, -71.7186, 9.95062, 1.32", "1.55787, -75.1526, 9.56826, 1.68", "1.36396, -77.3412, 9.34096, 2.04", "1.20049, -79.2806, 9.15931, 1.68", "1.0722, -80.8815, 9.02515, 1.68", "1.00868, -81.8502, 8.95763, 1.68", "0.946349, -83.1461, 8.88993, 1.68", "0.852082, -85.112, 8.83803, 2.04", "0.798611, -86.2397, 8.85612, 1.68", "0.712795, -87.702, 8.93038, 1.68", "0.63042, -89.2737, 9.0508, 1.68", "0.562994, -91.0581, 9.20052, 1.56", "0.525317, -92.7131, 9.33628, 1.56", "0.497395, -96.0436, 9.5892, 1.56", "0.505065, -98.7594, 9.77918, 1.8", "0.555533, -103.107, 10.0564, 1.56", "0.611777, -107.46, 10.309, 1.44", "0.629136, -109.311, 10.4102, 1.92", "0.629677, -111.552, 10.5243, 1.8", "0.596199, -113.276, 10.6133, 1.68", "0.498472, -115.421, 10.7476, 2.04", "-0.266208, -124.155, 11.2896, 1.8", "-0.598228, -126.807, 11.4606, 1.8", "-0.81159, -128.242, 11.553, 1.68", "-1.04391, -129.593, 11.6407, 1.68", "-1.76543, -133.324, 11.8796, 1.68", "-2.23815, -135.35, 11.9645, 1.68", "-2.69388, -137.044, 11.9858, 1.68", "-3.29136, -139.278, 11.9899, 1.32", "-3.98139, -141.961, 11.9787, 1.32", "-4.66986, -144.765, 11.9579, 1.32", "-5.69594, -149.244, 11.9073, 1.32", "-6.33724, -152.28, 11.8892, 1.8", "-6.74576, -154.307, 11.9, 1.8", "-7.05425, -155.936, 11.9313, 1.8", "-7.29594, -157.369, 11.9853, 1.8", "-7.67419, -160.035, 12.1689, 1.68", "-8.15492, -163.868, 12.48, 2.04", "-8.53318, -166.894, 12.6614, 2.04", "-8.84115, -169.381, 12.7869, 1.8", "-9.21727, -172.543, 12.9177, 1.56", "-9.58076, -175.756, 13.0264, 1.92", "-10.0691, -179.831, 13.1704, 1.56", "-10.4827, -182.999, 13.2791, 1.32", "-10.9983, -186.571, 13.3767, 1.32", "-11.2532, -188.266, 13.4353, 1.32", "-11.4717, -189.746, 13.4943, 1.2", "-11.9797, -193.169, 13.6869, 1.68", "-12.378, -196.328, 14.0022, 1.68", "-12.651, -198.354, 14.2489, 1.68", "-12.8953, -200.077, 14.4595, 1.68", "-13.18, -201.992, 14.713, 1.68", "-13.2864, -202.808, 14.8174, 1.68", "-13.6418, -208.081, 15.3502, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "89.4415, -143.628, 6.07565, 0.84", "91.7106, -143.17, 7.06918, 0.84", "93.4852, -142.783, 7.91739, 0.84", "94.8653, -142.483, 8.62633, 1.32", "97.1236, -142.016, 9.88651, 1.32", "98.8945, -141.663, 10.9479, 1.68", "101.092, -141.174, 12.3305, 1.2", "102.233, -140.922, 13.1437, 0.96", "103.693, -140.525, 14.3195, 1.44", "105.412, -139.923, 15.848, 0.84", "106.202, -139.547, 16.6604, 0.84", "106.943, -139.073, 17.5957, 0.84", "107.392, -138.632, 18.3887, 0.84", "107.861, -138.005, 19.4006, 0.84", "108.203, -137.291, 20.4209, 0.84", "108.477, -136.303, 21.688, 1.08", "108.731, -135.13, 23.1794, 0.72", "109.028, -133.698, 25.1946, 1.2", "116.792, -130.322, 29.5196, 1.2", "124.372, -125.752, 32.9901, 1.2", "131.714, -120.235, 35.45, 1.2", "137.467, -113.684, 39.2407, 1.2", "144.296, -108.276, 43.0491, 1.2", "150.444, -102.094, 46.8391, 1.2", "157.231, -95.7334, 48.8031, 1.2", "163.702, -89.2442, 51.3343, 1.2", "169.19, -82.0896, 54.3476, 1.2", "174.175, -74.1817, 56.0778, 1.2", "178.212, -66.0431, 58.8796, 1.2", "180.962, -57.1749, 60.924, 1.2", "183.709, -48.33, 63.07, 1.2", "186.537, -39.4193, 64.7967, 1.2", "190.683, -31.3617, 67.6736, 1.2", "194.704, -23.1132, 70.1593, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "89.4415, -143.628, 6.07565, 0.84", "90.521, -145.501, 6.35793, 0.84", "91.6893, -147.45, 6.63795, 0.6", "92.4492, -148.732, 6.80278, 1.32", "93.6443, -150.747, 7.06199, 0.84", "94.4172, -152.05, 7.22963, 0.72", "95.0328, -153.088, 7.36313, 1.08", "95.8055, -154.447, 7.51644, 0.72", "96.5255, -155.745, 7.72146, 1.2", "101.503, -162.541, 8.27081, 1.2", "106.74, -168.916, 10.0629, 1.2", "111.775, -174.83, 13.37, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "38.9153, -264.386, -13.0414, 0.96", "40.4252, -267.035, -10.8039, 0.96", "41.24, -268.79, -9.41281, 0.96", "42.6587, -272.181, -6.77429, 1.44", "43.6815, -274.642, -4.75304, 0.96", "44.4774, -276.579, -3.16447, 0.96", "45.1281, -278.209, -1.86378, 0.96", "45.6732, -279.7, -0.725492, 0.96", "46.2533, -281.608, 0.72392, 1.08", "46.9304, -284.233, 2.5793, 1.08", "47.2734, -285.545, 3.47121, 1.08", "47.6237, -286.669, 4.22433, 1.08", "48.4055, -289.407, 6.12299, 1.08", "48.9929, -292.159, 7.97121, 0.84", "49.2032, -294.456, 9.37365, 1.2", "49.1454, -296.279, 10.3283, 1.2", "48.997, -297.786, 11.0764, 1.2", "48.4764, -301.481, 12.8849, 0.96", "48.1316, -303.427, 13.8023, 0.96", "47.8836, -305.225, 14.6667, 0.96", "47.6272, -307.519, 15.7388, 0.72", "47.474, -308.949, 16.3486, 0.72", "47.3608, -311.005, 17.2173, 0.72", "47.5836, -313.566, 18.294, 1.2", "48.2178, -317.343, 20.1711, 0.84", "48.5804, -318.911, 21.0555, 0.84", "48.9641, -320.569, 22.0717, 0.84", "50.7525, -330.26, 28.2593, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "38.9153, -264.386, -13.0414, 1.32", "39.4188, -266.992, -12.9463, 1.32", "39.7056, -268.605, -12.9314, 1.32", "39.9591, -270.176, -12.9483, 1.32", "40.1207, -271.346, -12.9864, 1.32", "40.4782, -273.837, -13.071, 1.68", "40.8114, -275.914, -13.1258, 1.68", "41.0967, -277.427, -13.2146, 1.68", "41.3818, -278.851, -13.3072, 1.68", "41.8758, -281.247, -13.4785, 1.2", "42.2118, -282.822, -13.6007, 1.2", "42.76, -285.198, -13.7794, 1.2", "43.4551, -287.893, -13.9894, 1.56", "43.8311, -289.245, -14.0953, 1.56", "44.1693, -290.409, -14.1872, 1.56", "44.5442, -291.633, -14.2786, 1.56", "45.1146, -293.769, -14.3738, 1.44", "45.6685, -295.936, -14.4503, 1.44", "45.9177, -296.923, -14.4486, 1.44", "46.2234, -298.122, -14.4316, 1.44", "46.5786, -299.502, -14.3796, 1.44", "47.1599, -301.747, -14.1944, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.93839, 79.6964, 31.5075, 1.44", "3.28778, 77.7249, 31.6457, 1.44", "2.63978, 77.0488, 31.7366, 1.2", "1.24438, 75.8647, 31.9317, 0.96", "-0.0112708, 74.7993, 32.1073, 0.96", "-0.87652, 74.0651, 32.2282, 0.96", "-1.79739, 73.2837, 32.357, 0.96", "-2.72462, 72.4061, 32.3731, 0.96", "-4.48613, 70.9085, 32.4651, 1.2", "-13.606, 62.6826, 31.5097, 1.2", "-21.8053, 53.4892, 31.5774, 1.2", "-30.0182, 44.394, 30.3219, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.93839, 79.6964, 31.5075, 0.96", "5.38606, 78.9491, 31.6332, 0.96", "5.90114, 78.0893, 31.7779, 0.96", "6.28424, 77.4497, 31.8854, 1.2", "6.49633, 77.0957, 31.945, 1.2", "7.19633, 75.9271, 32.1415, 0.84", "7.51011, 75.4033, 32.2296, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.92467, 56.4024, 14.4719, 1.44", "7.78246, 58.7008, 14.8801, 1.44", "8.43469, 60.5059, 15.1788, 1.44", "8.76458, 61.4516, 15.3337, 1.44", "9.5011, 63.6499, 15.7302, 1.44", "10.3883, 66.2518, 16.2568, 1.32", "10.9506, 67.7436, 16.5139, 1.32", "11.6731, 69.3829, 16.7379, 1.32", "12.3312, 70.7063, 16.8937, 1.56", "13.0375, 71.9639, 17.0071, 1.56", "14.0677, 73.583, 17.1092, 1.32", "15.9904, 76.2617, 17.2504, 1.32", "17.2237, 77.8045, 17.3209, 1.32", "18.3013, 79.0461, 17.299, 1.32", "19.5098, 80.3729, 17.1993, 1.56", "20.1917, 81.1359, 17.0944, 1.56", "21.8464, 83.0371, 16.7585, 1.2", "22.7251, 84.0699, 16.5817, 1.2", "24.4416, 86.1296, 16.188, 1.44", "25.3481, 87.2575, 15.9312, 1.92", "27.0898, 89.6046, 15.484, 1.56", "28.1692, 91.1649, 15.2416, 1.32", "29.7236, 93.6146, 14.9353, 1.32", "30.9503, 95.6908, 14.8044, 1.32", "32.1478, 97.8617, 14.8266, 1.56", "33.7023, 101.025, 15.0085, 1.2", "34.1706, 102.148, 15.1389, 1.2", "34.4181, 102.948, 15.2625, 1.2", "34.634, 104.028, 15.4794, 0.96", "34.7238, 104.726, 15.6461, 1.32", "34.8746, 106.777, 16.1717, 0.96", "34.9117, 107.785, 16.3638, 0.96", "34.9471, 108.808, 16.5326, 0.96", "35.0833, 110.746, 16.8603, 1.32", "35.1933, 111.691, 17.0249, 1.32", "35.4576, 113.118, 17.3201, 0.84", "35.8569, 114.586, 17.6932, 1.08", "36.3439, 116.012, 18.1552, 1.08", "37.1386, 118.032, 18.9096, 0.84", "37.5496, 119.012, 19.2398, 1.2", "38.0401, 120.097, 19.6393, 0.84", "38.6139, 121.253, 20.1103, 1.2", "39.5165, 122.994, 20.8773, 0.96", "39.8151, 123.596, 21.1439, 0.96", "40.9588, 126.437, 22.1443, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.92467, 56.4024, 14.4719, 1.08", "8.23245, 58.2486, 14.5154, 1.08", "9.79197, 60.5452, 14.5575, 1.08", "10.2628, 61.2526, 14.5683, 1.08", "10.7133, 61.9436, 14.5413, 1.08", "11.513, 63.1702, 14.4935, 1.32", "12.7011, 64.9925, 14.4224, 0.96", "13.4502, 66.1312, 14.3437, 1.44", "13.9577, 66.92, 14.2704, 1.44", "14.9666, 68.552, 14.0916, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-13.6418, -208.081, 15.3502, 1.08", "-13.595, -210.342, 16.2775, 1.08", "-13.5665, -211.827, 16.9013, 1.08", "-13.5775, -213.936, 17.8248, 1.08", "-13.5955, -215.228, 18.3989, 1.08", "-13.6362, -216.728, 19.0905, 1.08", "-13.6655, -217.752, 19.5938, 1.08", "-13.7031, -218.396, 19.9271, 1.08", "-13.8108, -219.335, 20.4682, 1.08", "-14.1187, -220.943, 21.4358, 0.84", "-14.313, -221.76, 21.9514, 0.84", "-14.6566, -222.909, 22.6876, 1.32", "-15.2046, -224.459, 23.6857, 1.32", "-16.0317, -226.646, 25.0664, 0.96", "-16.6192, -228.144, 25.9583, 0.96", "-17.031, -229.246, 26.5758, 1.2", "-17.764, -231.433, 27.6963, 1.2", "-18.1993, -232.942, 28.4042, 1.44", "-18.6216, -234.752, 29.2014, 1.2", "-18.9672, -236.676, 29.9622, 1.2", "-19.3563, -239.242, 30.9303, 1.2", "-19.4764, -240.175, 31.2629, 1.2", "-19.5528, -241.711, 31.7522, 1.2", "-19.5334, -242.581, 32.0009, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.6418, -208.081, 15.3502, 0.96", "-14.6072, -212.43, 14.1997, 0.96", "-15.2282, -215.201, 13.5033, 1.32", "-15.4496, -216.306, 13.3665, 1.32", "-15.7241, -217.677, 13.1968, 1.32", "-16.3411, -220.759, 12.8155, 1.56", "-16.7987, -223.044, 12.5326, 1.56", "-17.1333, -224.73, 12.376, 1.56", "-17.7693, -229.383, 12.3653, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "47.1599, -301.747, -14.1944, 0.96", "46.9254, -303.811, -13.5857, 0.96", "46.6808, -305.667, -13.1043, 0.96", "46.3762, -307.521, -12.6373, 1.44", "45.654, -311.634, -11.5643, 1.08", "45.3342, -313.548, -11.0787, 1.08", "44.9305, -316.465, -10.3656, 1.08", "44.811, -317.831, -10.0164, 1.08", "44.6489, -321.354, -9.13442, 0.84", "44.6416, -324.242, -8.48038, 0.84", "44.7246, -326.062, -8.16656, 0.84", "44.9097, -328.106, -7.82109, 0.84", "45.1491, -330.014, -7.51757, 0.84", "45.3483, -331.576, -7.3228, 0.84", "45.4708, -332.682, -7.26767, 0.84", "45.5709, -333.95, -7.25865, 0.84", "45.558, -335.644, -7.271, 0.84", "45.3543, -337.13, -7.3294, 0.84", "45.0328, -338.394, -7.43193, 0.84", "44.2716, -340.606, -7.6278, 0.6", "41.9262, -351.952, -8.01033, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "47.1599, -301.747, -14.1944, 0.84", "47.4792, -303.762, -14.3967, 0.84", "47.7089, -305.206, -14.5776, 0.84", "47.9621, -306.738, -14.8214, 0.84", "48.4549, -309.896, -15.4163, 1.2", "48.5587, -310.632, -15.5733, 1.2", "48.9875, -313.905, -16.33, 0.96", "49.3309, -316.649, -17.05, 1.32", "49.7891, -320.128, -17.9643, 1.08", "50.0965, -322.086, -18.4682, 1.08", "50.3498, -323.528, -18.8234, 1.08", "50.5871, -324.604, -19.0477, 1.08", "50.7724, -325.34, -19.171, 1.08", "51.5541, -328.234, -19.5721, 0.84", "52.658, -331.981, -19.9625, 1.2", "52.9959, -333.037, -20.0448, 1.2", "54.8381, -338.516, -20.3738, 0.84", "55.8822, -341.604, -20.5421, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.51011, 75.4033, 32.2296, 0.72", "7.14774, 74.6507, 32.0551, 0.72", "6.83519, 74.0015, 31.9046, 0.48", "6.45842, 73.219, 31.7232, 0.96", "6.19132, 72.6642, 31.5946, 0.96", "3.45553, 67.4916, 29.7676, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "7.51011, 75.4033, 32.2296, 0.72", "8.00279, 73.675, 32.3873, 0.72", "8.25533, 72.4585, 32.5157, 1.08", "8.63437, 70.3627, 32.6511, 0.72", "8.80812, 68.849, 32.6465, 0.72", "8.93079, 66.6939, 32.4954, 0.72", "9.04019, 64.9265, 32.3128, 1.2", "9.03196, 64.0886, 32.2171, 1.2", "8.91443, 62.2706, 31.9788, 0.84", "8.68074, 60.0184, 31.6097, 0.84", "8.51796, 58.1898, 31.1072, 1.32", "8.42674, 57.0087, 30.6144, 1.08", "7.6363, 45.5979, 29.2351, 1.08", "6.16914, 34.218, 28.1968, 1.08", "4.40329, 23.204, 25.3144, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.9588, 126.437, 22.1443, 0.6", "41.4758, 127.231, 22.4504, 0.6", "42.0038, 128.042, 22.7629, 0.6", "42.6891, 129.094, 23.1686, 0.6", "43.7961, 130.794, 23.8238, 0.6", "44.5141, 131.897, 24.2489, 0.6", "45.2446, 133.019, 24.6813, 0.48", "48.5722, 140.708, 25.8429, 0.48", "52.4459, 148.215, 26.277, 0.48", "56.5687, 155.345, 28.2026, 0.48", "62.1288, 161.659, 29.0754, 0.48", "67.5127, 168.181, 29.2042, 0.48", "73.3059, 174.267, 30.1787, 0.48", "77.6984, 181.495, 30.0958, 0.48", "80.4818, 189.329, 28.5389, 0.48", "82.2523, 197.579, 27.9465, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.9588, 126.437, 22.1443, 0.84", "42.0542, 128.506, 22.0516, 0.84", "42.6723, 129.674, 21.9993, 0.84", "43.3312, 130.919, 21.9436, 0.36", "43.9573, 132.101, 21.8906, 0.6", "44.4633, 133.057, 21.8478, 0.6", "45.3639, 134.758, 21.7716, 0.6", "49.5797, 141.706, 20.3682, 0.6", "53.3969, 148.723, 18.3166, 0.6", "58.1626, 155.075, 16.0891, 0.6", "62.5063, 161.661, 13.6859, 0.6", "65.3904, 168.613, 10.3143, 0.6", "68.1808, 176.21, 8.72817, 0.6", "71.6846, 183.633, 7.92933, 0.6", "74.933, 191.186, 7.29027, 0.6", "76.9116, 198.985, 5.47988, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "14.9666, 68.552, 14.0916, 1.08", "14.2519, 70.3344, 14.4301, 1.08", "13.7912, 71.1853, 14.6719, 1.08", "13.1215, 72.4225, 15.0234, 1.08", "12.3778, 73.7962, 15.4137, 0.96", "11.3001, 75.787, 15.9794, 0.96", "10.4093, 77.4326, 16.4469, 0.84", "9.11829, 79.3994, 17.2037, 1.08", "3.39796, 87.6687, 18.2871, 1.08", "-1.15419, 96.5776, 19.7665, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "14.9666, 68.552, 14.0916, 0.96", "16.7453, 69.7318, 13.5265, 0.96", "17.5516, 70.2501, 13.2309, 0.96", "18.8221, 71.0994, 12.7285, 0.96", "20.3241, 72.1633, 11.9931, 0.84", "21.1121, 72.7342, 11.5763, 0.84", "22.3687, 73.6435, 10.8786, 0.84", "22.9514, 74.0348, 10.5173, 0.84", "23.8936, 74.6346, 9.91496, 0.84", "25.8349, 75.7206, 8.74244, 1.2", "26.2074, 75.8941, 8.55736, 1.2", "27.2216, 76.2733, 8.15794, 1.2", "28.7952, 76.7051, 7.72081, 1.2", "29.2993, 76.804, 7.62718, 1.2", "31.2799, 77.0989, 7.35595, 1.2", "32.8487, 77.3121, 7.2016, 0.96", "34.4033, 77.553, 7.05082, 0.96", "36.1777, 77.7998, 6.89104, 0.96", "37.9383, 78.0388, 6.73339, 1.32", "40.5931, 78.424, 6.48727, 0.84", "42.8919, 78.7781, 6.26104, 1.2", "44.5014, 79.054, 6.17209, 1.2", "46.0614, 79.3762, 6.16299, 0.96", "47.3703, 79.7006, 6.24868, 1.2", "48.3451, 79.96, 6.39353, 1.2", "48.9868, 80.1399, 6.54012, 1.2", "52.2556, 81.1758, 7.48687, 1.2", "53.5582, 81.6682, 7.89876, 1.2", "54.6526, 82.1694, 8.25707, 1.2", "56.7705, 83.1478, 8.94899, 1.08", "57.7291, 83.5521, 9.23723, 1.44", "59.5556, 84.188, 9.57355, 1.08", "60.9651, 84.588, 9.60636, 1.08", "62.04, 84.8888, 9.53179, 1.08", "63.8538, 85.4599, 9.27091, 1.08", "65.8585, 86.1191, 8.85241, 1.44", "68.9691, 87.1509, 8.03097, 1.08", "70.9994, 87.8965, 7.39002, 0.84", "72.5261, 88.558, 6.88015, 1.2", "74.0618, 89.2882, 6.3469, 1.2", "75.7709, 90.2235, 5.67362, 0.84", "77.0194, 90.9726, 5.16773, 1.08", "79.7007, 92.5739, 4.1656, 0.72", "82.3528, 94.0412, 3.15059, 0.72", "84.0414, 94.8253, 2.50891, 1.2", "86.5316, 95.8648, 1.57607, 0.72", "87.4095, 96.2087, 1.26832, 0.72", "89.2475, 96.8699, 0.691562, 0.96", "91.1876, 97.5025, 0.140851, 0.96", "94.6209, 98.7328, -0.693948, 0.72", "96.3861, 99.5152, -1.05111, 0.6", "97.8072, 100.233, -1.27795, 0.6", "99.6331, 101.323, -1.56277, 1.2", "100.176, 101.707, -1.64088, 1.2", "102.391, 103.423, -1.88165, 0.72", "103.427, 104.325, -1.97779, 0.72", "104.151, 104.941, -2.0421, 0.72", "105.88, 106.477, -2.26344, 0.6", "106.164, 106.728, -2.30547, 0.6", "107.597, 107.974, -2.61442, 0.96", "108.559, 108.835, -2.93119, 0.72", "109.186, 109.428, -3.18494, 0.96", "111.604, 111.857, -4.30162, 0.72", "112.997, 113.315, -5.00781, 0.72", "114.848, 115.231, -6.02681, 1.2", "116.805, 117.177, -7.05746, 0.72", "118.15, 118.416, -7.69168, 0.72", "119.823, 119.83, -8.40284, 0.72", "120.479, 120.32, -8.62664, 0.72", "122.518, 121.753, -9.12702, 1.08", "124.874, 123.262, -9.38615, 0.72", "126.571, 124.285, -9.42364, 1.08", "127.014, 124.554, -9.40992, 1.08", "128.875, 125.63, -9.33526, 0.72", "129.973, 126.275, -9.31801, 0.72", "132.031, 127.534, -9.36393, 1.08", "132.843, 128.021, -9.44773, 1.08", "134.451, 128.938, -9.66289, 0.84", "137.417, 130.55, -10.1008, 0.84", "139.93, 131.824, -10.4487, 0.6", "141.887, 132.69, -10.6418, 1.08", "142.828, 133.049, -10.6865, 1.08", "145.296, 133.933, -10.6429, 0.72", "146.525, 134.359, -10.5343, 0.72", "149.1, 135.278, -10.0459, 1.08", "151.346, 136.065, -9.45544, 0.84", "152.527, 136.497, -9.09995, 1.08", "154.296, 137.202, -8.55051, 0.84", "155.204, 137.57, -8.27939, 0.84", "157.543, 138.495, -7.68174, 0.6", "158.699, 138.898, -7.45158, 0.6", "160.47, 139.45, -7.18323, 0.96", "161.21, 139.607, -7.10017, 0.96", "163.446, 139.822, -6.89858, 0.72", "165.207, 139.875, -6.75178, 0.72", "166.64, 139.856, -6.70639, 0.72", "166.999, 139.863, -6.71254, 0.72", "168.302, 139.975, -6.84574, 0.72", "170.423, 140.292, -7.30297, 0.72", "171.014, 140.419, -7.52338, 0.72", "173.227, 140.959, -8.56096, 0.6", "174.441, 141.264, -9.20592, 0.96", "176.537, 141.707, -10.3513, 0.96", "177.875, 141.991, -11.1398, 0.96", "180.098, 142.401, -12.5508, 0.72", "182.111, 142.691, -13.8308, 0.72", "184.029, 142.837, -15.0264, 1.2", "185.834, 142.866, -16.1207, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-19.5334, -242.581, 32.0009, 0.48", "-19.5631, -243.44, 32.0821, 0.48", "-19.5897, -244.209, 32.1548, 0.48", "-19.6125, -244.868, 32.2171, 0.84", "-19.6322, -245.437, 32.2709, 0.84", "-19.6512, -245.987, 32.3228, 0.6", "-20.4026, -249.135, 32.5321, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-19.5334, -242.581, 32.0009, 0.84", "-18.8396, -244.915, 32.1472, 0.84", "-18.3223, -246.816, 32.2717, 0.84", "-17.8841, -248.675, 32.3977, 1.08", "-17.3835, -250.988, 32.5272, 0.84", "-17.0486, -252.591, 32.6059, 0.84", "-16.7502, -254.105, 32.6715, 0.84", "-16.6105, -254.959, 32.7093, 0.84", "-16.2916, -257.616, 32.8042, 1.32", "-16.1767, -259.112, 32.8638, 1.32", "-16.0796, -261.84, 33.0152, 1.2", "-16.0747, -263.426, 33.1271, 0.96", "-16.0874, -265.391, 33.3149, 1.32", "-16.1122, -267.17, 33.5325, 1.32", "-16.1641, -269.343, 33.887, 1.08", "-16.3322, -273.929, 34.7223, 1.08", "-16.4509, -276.317, 35.1986, 0.84", "-16.5435, -278.353, 35.6393, 1.2", "-16.6239, -280.603, 36.1676, 1.08", "-16.6538, -282.419, 36.6231, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-17.7693, -229.383, 12.3653, 0.96", "-18.4576, -231.515, 13.6333, 0.96", "-18.6207, -232.481, 14.1862, 0.96", "-18.7539, -233.336, 14.7037, 0.96", "-18.9159, -234.362, 15.3223, 0.96", "-19.0932, -235.463, 16.0112, 0.96", "-19.4414, -237.898, 17.4757, 1.44", "-19.596, -240.08, 18.6944, 0.96", "-19.7418, -243.776, 20.6941, 1.44", "-19.765, -244.959, 21.308, 0.96", "-19.7932, -247.331, 22.4981, 1.56", "-19.8344, -250.099, 23.8128, 1.2", "-19.9114, -253.934, 25.4451, 0.96", "-19.9404, -255.642, 26.0913, 1.44", "-19.9619, -258.373, 27.0104, 0.96", "-20.0458, -261.353, 27.9745, 1.32", "-20.2573, -264.5, 28.9499, 0.96", "-20.5433, -266.847, 29.6762, 0.96", "-20.7601, -268.207, 30.0544, 0.96", "-20.9489, -269.365, 30.3395, 0.96", "-21.4688, -272.47, 31.0285, 1.32", "-21.9382, -275.215, 31.5897, 0.96", "-22.5656, -279.141, 32.325, 1.44", "-22.981, -282.016, 32.8182, 0.84", "-23.2087, -284.09, 33.1322, 1.2", "-23.2713, -285.166, 33.2937, 1.2", "-23.2691, -285.894, 33.3979, 0.84", "-23.0891, -288.713, 33.8525, 1.2", "-22.8, -291.31, 34.3777, 1.2", "-22.5917, -293.062, 34.8386, 0.96", "-22.2776, -295.94, 35.7267, 0.96", "-22.1, -298.603, 36.6409, 1.32", "-22.044, -300.791, 37.4975, 1.68", "-22.122, -303.033, 38.5281, 1.2", "-22.43, -305.817, 40.0237, 0.96", "-22.9805, -308.194, 41.5026, 0.96", "-23.8229, -310.184, 43.033, 0.84", "-24.5628, -311.144, 44.1137, 0.84", "-25.5331, -311.524, 45.2363, 0.84", "-26.4602, -310.697, 46.1268, 0.84", "-26.9381, -309.942, 46.5531, 0.84", "-27.3468, -309.02, 46.9149, 0.84", "-27.6492, -307.877, 47.234, 1.08", "-27.9174, -306.307, 47.5424, 0.84", "-27.9839, -305.01, 47.7166, 0.6", "-28.1019, -313.881, 50.0594, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.7693, -229.383, 12.3653, 1.08", "-17.8649, -232.878, 12.5466, 1.08", "-17.9829, -236.667, 12.7174, 1.44", "-18.0628, -238.364, 12.8105, 0.84", "-18.2029, -240.827, 12.9509, 1.32", "-18.3046, -242.502, 13.0439, 1.32", "-18.5245, -245.397, 13.1765, 1.32", "-18.727, -247.252, 13.2649, 1.32", "-18.9539, -249.275, 13.3454, 1.32", "-19.429, -253.003, 13.541, 1.44", "-19.6736, -254.83, 13.648, 1.44", "-20.4696, -260.578, 14.0216, 1.44", "-20.679, -262.012, 14.1303, 1.44", "-21.0381, -264.494, 14.3247, 1.08", "-21.6909, -269.459, 14.6677, 1.08", "-22.0156, -272.012, 14.8527, 0.84", "-22.3543, -274.961, 15.0815, 1.32", "-22.5649, -277.3, 15.2512, 1.32", "-22.8429, -280.938, 15.48, 0.96", "-22.9526, -282.834, 15.5874, 1.44", "-23.1398, -285.615, 15.6861, 1.44", "-23.4216, -288.55, 15.8006, 1.2", "-23.8025, -291.471, 15.9477, 1.08", "-24.1654, -293.789, 16.0783, 1.08", "-24.5763, -295.966, 16.2387, 1.68", "-25.2725, -299.406, 16.5094, 1.2", "-25.5571, -300.828, 16.6102, 1.2", "-26.096, -303.678, 16.7833, 1.44", "-26.5396, -306.183, 16.9029, 1.44", "-27.0116, -309.281, 16.9962, 1.44", "-27.3484, -311.962, 17.0496, 1.44", "-27.6068, -315.047, 17.0824, 1.8", "-27.8595, -318.25, 17.0848, 1.32", "-28.0003, -320.128, 17.0717, 1.08", "-28.215, -322.755, 17.0645, 1.56", "-28.4788, -325.795, 17.0495, 1.56", "-28.6326, -327.488, 17.0417, 1.56", "-28.7792, -329.049, 17.0406, 1.56", "-29.0039, -331.429, 17.0576, 1.56", "-29.1662, -333.444, 17.0729, 1.56", "-29.324, -335.771, 17.0511, 1.32", "-29.3881, -336.822, 17.0343, 1.32", "-29.5266, -338.37, 17.0477, 1.32", "-29.6977, -340.075, 17.0801, 1.32", "-29.9845, -342.605, 17.1055, 1.32", "-30.2015, -344.502, 17.1274, 1.32", "-30.4793, -346.726, 17.1799, 1.68", "-31.2932, -352.518, 17.3752, 1.32", "-31.5789, -354.332, 17.4517, 1.32", "-31.9436, -356.407, 17.5519, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "55.8822, -341.604, -20.5421, 0.96", "57.2147, -342.561, -19.0495, 0.96", "57.884, -343.027, -18.3023, 1.32", "59.2731, -344.005, -16.7627, 0.96", "60.3061, -344.778, -15.6054, 1.32", "61.6434, -345.812, -14.1888, 1.2", "62.3361, -346.313, -13.4884, 1.2", "63.0239, -346.777, -12.8334, 1.2", "63.5015, -347.112, -12.3821, 1.2", "64.066, -347.506, -11.8892, 1.2", "65.78, -348.588, -10.5425, 0.96", "67.0502, -349.293, -9.70285, 1.32", "67.8108, -349.665, -9.23219, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "55.8822, -341.604, -20.5421, 1.08", "56.5952, -346.607, -20.5863, 1.08", "57.1542, -351.135, -20.6922, 0.72", "57.4672, -353.348, -20.825, 0.72", "58.2424, -358.689, -21.2646, 1.2", "58.8807, -363.036, -21.668, 0.84", "59.2502, -365.663, -21.9308, 0.84", "59.54, -367.582, -22.1585, 0.84", "60.2977, -372.609, -22.7697, 0.6", "60.7331, -375.405, -23.0872, 0.6", "61.3969, -379.129, -23.4414, 1.2", "62.2545, -383.365, -23.827, 1.2", "63.0359, -386.928, -24.1223, 0.84", "63.6877, -389.89, -24.3472, 0.84", "64.6846, -394.597, -24.7086, 1.08", "65.5757, -398.666, -25.1039, 0.72", "66.3935, -402.262, -25.5545, 1.08", "66.9804, -404.734, -25.9182, 1.08", "67.5122, -407.048, -26.3133, 1.08", "68.3867, -411.207, -27.1049, 0.72", "68.9205, -413.889, -27.639, 0.72", "69.3084, -416.489, -28.0773, 1.08", "69.5025, -418.479, -28.3142, 1.08", "69.5965, -419.833, -28.4062, 1.08", "69.7797, -423.581, -28.6532, 0.72", "69.8582, -425.675, -28.8072, 0.72", "70.0591, -430.324, -29.2395, 1.2", "70.3147, -434.961, -29.7352, 1.2", "70.7493, -441.028, -30.4887, 1.2", "71.2913, -446.853, -31.3139, 0.84", "71.535, -449.146, -31.6961, 1.32", "71.8234, -451.676, -32.1979, 1.32", "71.9924, -452.845, -32.4747, 1.32", "72.3952, -455.439, -33.1457, 0.96", "72.7388, -457.753, -33.7514, 1.56", "73.1135, -460.166, -34.2985, 1.56", "73.4535, -462.201, -34.7288, 1.08", "73.7642, -464.177, -35.1439, 1.08", "74.4563, -468.214, -36.0178, 0.84", "74.8503, -470.091, -36.4058, 1.44", "75.7424, -473.565, -37.0961, 1.08", "76.4251, -475.712, -37.5088, 1.08", "77.5729, -479.116, -38.1542, 0.72", "78.9135, -483.19, -38.9216, 1.08", "79.6734, -485.31, -39.378, 1.08", "80.5767, -487.711, -39.9315, 0.96", "82.0947, -491.783, -40.8733, 0.72", "82.9022, -493.807, -41.391, 0.72", "83.5495, -495.232, -41.7939, 0.72", "85.5123, -499.444, -43.1658, 0.72", "86.244, -501.101, -43.7978, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.45553, 67.4916, 29.7676, 0.6", "0.866883, 62.1119, 28.359, 0.6", "-1.63879, 56.5393, 27.8165, 0.6", "-3.74316, 50.9385, 26.4643, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.45553, 67.4916, 29.7676, 0.84", "-1.27168, 59.4304, 26.3186, 0.6", "-7.94941, 52.3503, 24.1963, 0.6", "-14.4091, 44.8972, 22.8007, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.15419, 96.5776, 19.7665, 0.6", "-6.2507, 104.963, 23.1028, 0.6", "-12.904, 112.095, 26.6079, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.15419, 96.5776, 19.7665, 0.84", "-5.2985, 104.095, 20.2094, 0.6", "-8.17742, 112.194, 20.1331, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.6538, -282.419, 36.6231, 0.6", "-17.5332, -281.879, 38.1523, 0.6", "-18.6278, -281.208, 40.0555, 0.6", "-19.142, -280.893, 40.9497, 0.6", "-19.7592, -280.514, 42.023, 0.96", "-25.0348, -276.535, 49.3691, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.6538, -282.419, 36.6231, 0.96", "-16.9164, -283.447, 36.8983, 0.96", "-17.1738, -284.455, 37.1681, 0.72", "-17.5944, -286.103, 37.6089, 0.72", "-18.9848, -293.404, 41.0025, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-31.9436, -356.407, 17.5519, 0.84", "-31.8089, -358.797, 15.9853, 0.84", "-31.5901, -360.979, 14.3926, 0.84", "-31.5596, -361.571, 13.9592, 0.84", "-31.5741, -363.098, 12.8532, 0.84", "-31.672, -365.132, 11.4513, 0.6", "-31.7837, -366.942, 10.2549, 1.08", "-31.9049, -368.321, 9.39573, 1.08", "-32.0822, -370.431, 8.0898, 0.72", "-32.2189, -372.245, 7.03958, 0.72", "-32.3454, -373.342, 6.42477, 0.72", "-32.5002, -374.242, 5.869, 0.72", "-32.7013, -375.204, 5.27829, 1.2", "-33.1659, -377.588, 3.84511, 0.84", "-33.6386, -380.634, 2.02341, 1.08", "-34.1115, -384.03, 0.0460481, 1.08", "-34.5995, -387.445, -1.91011, 0.84", "-34.816, -388.955, -2.72592, 0.84", "-35.0563, -390.769, -3.66081, 1.32", "-35.3088, -393.105, -4.7658, 0.84", "-35.3678, -393.962, -5.16042, 0.84", "-35.3703, -395.398, -5.76573, 1.32", "-35.3617, -397.612, -6.69998, 0.84", "-35.4293, -399.094, -7.46027, 1.44", "-35.7379, -401.641, -8.93125, 1.2", "-35.9433, -402.771, -9.64602, 1.2", "-36.247, -404.255, -10.6066, 1.44", "-36.6738, -406.173, -11.862, 1.08", "-37.4973, -409.663, -14.1054, 0.84", "-37.9369, -411.528, -15.2553, 1.44", "-38.4079, -413.482, -16.3772, 0.96", "-38.7589, -414.93, -17.093, 0.96", "-39.0218, -416.069, -17.5549, 1.44", "-39.6458, -418.668, -18.3531, 0.96", "-39.8192, -419.364, -18.5121, 0.96", "-40.4905, -422.003, -19.0362, 1.44", "-41.251, -424.812, -19.5873, 0.84", "-42.2547, -427.98, -20.3123, 1.44", "-43.4011, -431.253, -21.1202, 0.84", "-43.7712, -432.196, -21.3719, 0.84", "-44.8125, -434.694, -22.1312, 1.44", "-46.3035, -438.176, -23.3217, 1.44", "-47.9905, -441.994, -24.6524, 1.08", "-48.9117, -444.029, -25.4021, 0.72", "-49.8672, -446.098, -26.2144, 1.32", "-50.7594, -447.925, -26.9354, 0.72", "-51.2504, -448.844, -27.2777, 0.72", "-52.6325, -451.297, -28.0873, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-31.9436, -356.407, 17.5519, 1.08", "-32.5235, -358.805, 17.7484, 1.08", "-32.8307, -360.401, 17.8571, 1.08", "-33.008, -361.551, 17.9754, 1.08", "-33.4528, -363.713, 18.1181, 1.08", "-34.0831, -366.325, 18.171, 1.44", "-34.7158, -368.842, 18.1498, 0.96", "-35.2213, -370.933, 18.0555, 0.96", "-35.7239, -372.975, 17.8792, 0.96", "-36.6176, -376.835, 17.5377, 0.96", "-37.1351, -379.362, 17.3319, 0.84", "-37.3925, -380.855, 17.225, 1.44", "-37.7559, -383.16, 17.1121, 1.08", "-37.9888, -385.012, 17.0481, 1.08", "-38.2559, -387.763, 16.988, 1.56", "-38.4902, -392.051, 17.0416, 1.32", "-38.6097, -394.186, 17.0882, 0.96", "-38.7569, -396.31, 17.1365, 1.32", "-39.055, -400.266, 17.2109, 1.08", "-39.2746, -402.76, 17.2252, 0.72", "-39.518, -404.946, 17.2197, 1.32", "-39.8606, -407.999, 17.2372, 1.08", "-40.1255, -410.431, 17.2799, 1.56", "-40.4056, -413.22, 17.3591, 0.84", "-40.7432, -416.618, 17.4679, 0.6", "-40.8855, -418.083, 17.514, 1.08", "-41.1942, -421.193, 17.6164, 1.2", "-41.4572, -423.983, 17.7007, 0.72", "-41.5419, -424.913, 17.7198, 0.72", "-41.9569, -429.368, 17.7739, 1.32", "-42.0203, -430.187, 17.7614, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "67.8108, -349.665, -9.23219, 0.96", "69.0745, -348.631, -8.63312, 0.96", "69.5828, -348.214, -8.39213, 0.96", "70.202, -347.707, -8.09858, 0.84", "71.6917, -346.488, -7.39233, 0.84", "72.5938, -345.749, -6.96467, 1.08", "73.3802, -345.105, -6.59183, 1.08", "78.5956, -340.137, -3.99678, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "67.8108, -349.665, -9.23219, 0.6", "68.7039, -351.072, -8.29509, 0.6", "69.7355, -352.883, -6.97907, 1.08", "70.7562, -354.904, -5.5425, 0.96", "71.3255, -356.04, -4.74401, 0.96", "71.919, -357.225, -3.91145, 1.32", "73.0041, -359.392, -2.38942, 1.08", "73.4202, -360.33, -1.69746, 1.08", "74.1619, -362.21, -0.220681, 1.08", "74.823, -363.978, 1.12542, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "86.244, -501.101, -43.7978, 0.72", "86.3678, -502.329, -44.2277, 0.72", "86.4916, -503.507, -44.5946, 0.72", "86.6536, -505.119, -45.1086, 0.72", "86.7322, -506.189, -45.4519, 0.72", "86.7702, -506.68, -45.6089, 0.72", "86.9205, -508.373, -46.1308, 0.6", "86.9781, -509.265, -46.393, 0.6", "87.0155, -510.041, -46.6159, 0.6", "87.0523, -511.385, -46.9786, 0.48", "87.0702, -512.141, -47.1968, 0.48", "87.0931, -513.738, -47.6856, 0.84", "87.0533, -515.536, -48.3025, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "86.244, -501.101, -43.7978, 0.72", "87.1855, -503.296, -43.4911, 0.72", "88.511, -506.385, -43.0594, 1.2", "88.9518, -507.413, -42.9158, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-42.0203, -430.187, 17.7614, 0.48", "-43.1483, -431.228, 19.3893, 0.48", "-43.3564, -431.393, 19.6793, 0.48", "-44.0318, -431.993, 20.601, 0.48", "-44.7189, -432.813, 21.7004, 0.48", "-44.9924, -433.224, 22.2138, 0.48", "-45.6822, -434.353, 23.6023, 0.96", "-46.4288, -435.711, 25.2781, 0.6", "-46.9575, -436.799, 26.561, 0.6", "-47.6951, -438.498, 28.5128, 1.08", "-48.1829, -439.76, 29.9419, 0.84", "-48.4614, -440.614, 30.8683, 0.84", "-48.7238, -441.746, 31.9908, 1.2", "-48.9433, -443.003, 33.2542, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-42.0203, -430.187, 17.7614, 0.84", "-42.4485, -433.645, 17.3435, 0.84", "-42.7225, -435.275, 17.2445, 0.84", "-42.9662, -436.715, 17.1903, 0.84", "-43.5947, -440.378, 17.0502, 0.84", "-43.8217, -441.738, 16.9973, 0.84", "-44.3393, -444.902, 16.8832, 1.44", "-44.7445, -447.236, 16.8024, 1.08", "-45.2, -449.892, 16.7578, 1.08", "-45.6148, -452.417, 16.7763, 0.84", "-45.832, -454.004, 16.8211, 0.84", "-45.9709, -455.414, 16.831, 1.08", "-46.0585, -457.304, 16.7469, 0.6", "-46.0709, -458.834, 16.6334, 0.6", "-46.0483, -460.436, 16.5322, 0.6", "-46.0163, -462.555, 16.3628, 1.2", "-46.0063, -464.679, 16.1387, 1.2", "-46.0314, -466.149, 15.9814, 1.2", "-46.0979, -467.805, 15.8187, 0.96", "-46.1554, -468.905, 15.7196, 1.44", "-46.3133, -471.078, 15.5765, 1.44", "-46.6, -474.166, 15.4542, 0.96", "-46.9508, -477.563, 15.3856, 1.32", "-47.0919, -478.972, 15.3649, 1.32", "-47.3965, -482.129, 15.3406, 0.84", "-47.6577, -484.721, 15.3581, 1.32", "-47.7863, -486.131, 15.3936, 1.32", "-47.9696, -487.786, 15.4259, 1.32", "-48.3643, -490.986, 15.4663, 1.32", "-48.6588, -493.088, 15.5047, 0.96", "-48.9211, -494.764, 15.548, 0.96", "-49.5068, -498.537, 15.6077, 1.44", "-49.8844, -500.849, 15.6235, 1.08", "-50.2283, -502.701, 15.6483, 1.08", "-50.6253, -504.553, 15.6626, 1.08", "-51.1057, -506.817, 15.6424, 1.08", "-51.6118, -509.249, 15.6002, 1.08", "-52.3666, -512.686, 15.5222, 1.08", "-53.4934, -517.79, 15.3474, 0.96", "-55.2676, -525.623, 15.0507, 1.32", "-55.8622, -528.2, 14.9441, 0.84", "-56.2215, -529.733, 14.8825, 0.84", "-56.7125, -531.819, 14.8135, 0.84", "-57.0746, -533.412, 14.7788, 0.84", "-57.7379, -536.549, 14.7422, 0.84", "-58.063, -538.107, 14.7848, 0.84", "-58.3468, -539.395, 14.8574, 0.84", "-58.6405, -540.741, 14.9701, 1.2", "-59.1544, -543.275, 15.2029, 0.72", "-59.584, -545.241, 15.428, 1.32", "-59.98, -546.799, 15.5793, 0.84", "-60.472, -548.613, 15.7609, 1.56", "-61.8068, -553.019, 16.1872, 0.84", "-62.3506, -554.65, 16.3547, 1.32", "-63.4244, -557.576, 16.7027, 0.84", "-65.0954, -561.909, 17.2778, 0.6", "-65.5931, -563.195, 17.4565, 1.08", "-66.5215, -565.605, 17.8105, 0.84", "-67.3117, -567.607, 18.1139, 1.44", "-68.1401, -569.695, 18.4622, 0.96", "-68.7842, -571.425, 18.7457, 0.72", "-69.3423, -573.091, 19.1014, 0.72", "-70.3497, -576.221, 19.7271, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "74.823, -363.978, 1.12542, 0.84", "76.383, -363.503, 2.09191, 0.84", "77.068, -363.294, 2.51626, 0.84", "78.6795, -362.803, 3.51469, 0.72", "79.6975, -362.492, 4.14544, 0.72", "86.3312, -361.659, 7.3481, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "74.823, -363.978, 1.12542, 0.72", "75.1947, -365.217, 1.7572, 0.72", "75.5888, -366.53, 2.42711, 0.84", "75.7552, -367.084, 2.70993, 0.84", "76.1035, -368.245, 3.30209, 0.6", "76.3447, -369.048, 3.71208, 0.6", "76.5969, -369.889, 4.14071, 0.6", "78.1925, -375.215, 7.69932, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "87.0533, -515.536, -48.3025, 0.48", "83.7298, -515.953, -51.5934, 0.48", "82.9566, -516.05, -52.359, 1.08", "82.1605, -516.15, -53.1473, 0.48", "81.1616, -516.275, -54.1364, 0.96", "80.3167, -516.381, -54.9731, 0.48", "78.6677, -516.588, -56.6059, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "87.0533, -515.536, -48.3025, 0.96", "87.1409, -516.421, -49.0958, 0.96", "87.2532, -517.993, -50.4199, 0.48", "87.2934, -518.614, -50.8993, 0.48", "87.4041, -519.888, -51.8341, 0.84", "87.4937, -520.815, -52.5044, 0.6", "87.5411, -521.264, -52.8248, 0.6", "87.6784, -522.234, -53.5508, 0.96", "87.7837, -522.88, -54.0399, 0.96", "88.0241, -524.114, -55.049, 0.72", "88.305, -525.294, -56.0936, 0.72", "88.5958, -526.206, -57.0702, 1.2", "88.9011, -527.055, -58.0467, 1.2", "89.1057, -527.56, -58.6828, 1.2", "89.3673, -528.15, -59.5164, 1.08", "89.7368, -528.877, -60.6891, 0.84", "90.2207, -529.611, -62.08, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "88.9518, -507.413, -42.9158, 0.72", "91.073, -507.595, -42.6619, 0.72", "92.3424, -507.703, -42.51, 0.72", "93.1593, -507.773, -42.4122, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "88.9518, -507.413, -42.9158, 0.48", "89.1756, -510.062, -43.1256, 0.48", "89.2415, -511.556, -43.2949, 0.96", "89.2493, -512.247, -43.3888, 0.96", "89.2247, -513.928, -43.6432, 0.48", "89.1873, -514.943, -43.8087, 0.48", "89.1191, -516.604, -44.0824, 0.96", "89.0198, -518.265, -44.376, 0.96", "88.936, -519.366, -44.58, 0.96", "88.7717, -521.008, -44.9179, 1.32", "88.5673, -522.654, -45.2874, 0.96", "88.4915, -523.298, -45.4317, 0.96", "88.4226, -524.073, -45.5934, 0.96", "88.3482, -525.345, -45.8331, 1.32", "88.3343, -526.685, -46.053, 0.96", "88.3945, -528.149, -46.2545, 0.6", "88.5283, -529.227, -46.4227, 0.6", "88.8484, -530.541, -46.7034, 1.32", "89.3497, -531.887, -47.0707, 0.84", "89.8564, -532.993, -47.4089, 0.84", "90.1158, -533.489, -47.5626, 0.84", "91.2211, -535.457, -48.1995, 0.84", "92.4104, -537.502, -48.8836, 1.44", "93.6374, -539.675, -49.6469, 0.96", "94.0854, -540.607, -49.9576, 0.96", "94.5633, -541.894, -50.353, 0.96", "94.8105, -542.85, -50.6008, 0.96", "94.9353, -543.854, -50.7921, 0.96", "94.9383, -546.26, -51.1639, 0.72", "94.7394, -548.754, -51.5033, 1.08", "94.5304, -550.409, -51.7145, 0.72", "94.2855, -551.966, -51.9025, 1.2", "93.9849, -553.764, -52.0967, 0.96", "93.5004, -556.592, -52.362, 1.44", "93.1756, -558.526, -52.5206, 0.96", "93.0244, -559.628, -52.6521, 0.72", "92.7184, -562.37, -53.0576, 1.08", "92.5684, -564.007, -53.3592, 0.6", "92.4697, -565.085, -53.5616, 0.6", "92.3458, -566.402, -53.8064, 1.2", "91.9687, -569.444, -54.3247, 0.72", "91.7875, -570.706, -54.557, 1.08", "91.4412, -572.628, -54.9331, 0.96", "91.041, -574.516, -55.3217, 0.72", "90.7992, -575.595, -55.5315, 0.72", "90.1549, -578.23, -55.9887, 0.72", "89.5735, -580.218, -56.2586, 0.72", "89.32, -581.084, -56.3932, 1.2", "88.9905, -582.303, -56.6504, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_DBC_3c23ead0b4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.75595, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -5.83961, 9.55579, 9.6696, 2.16 ) }
    dend_73 { pt3dadd( -8.31994, 11.475, 6.70175, 2.52 ) }
    dend_73 { pt3dadd( -10.1199, 12.7289, 4.76321, 2.52 ) }
    dend_73 { pt3dadd( -11.429, 13.561, 3.51633, 2.52 ) }
    dend_73 { pt3dadd( -12.1175, 13.9584, 2.9107, 2.52 ) }
    dend_73 { pt3dadd( -12.9484, 14.3812, 2.27525, 2.28 ) }
    dend_73 { pt3dadd( -15.1624, 15.4363, 0.869723, 1.92 ) }
    dend_73 { pt3dadd( -16.11, 15.8341, 0.425495, 1.92 ) }
    dend_73 { pt3dadd( -18.1611, 16.5813, -0.4226, 1.8 ) }
    dend_73 { pt3dadd( -19.3921, 17.0128, -0.863004, 1.8 ) }
    dend_73 { pt3dadd( -22.0537, 17.8327, -1.68825, 1.56 ) }
    dend_73 { pt3dadd( -24.1222, 18.3983, -2.24368, 1.92 ) }
    dend_73 { pt3dadd( -25.9062, 18.8008, -2.65242, 1.92 ) }
    dend_73 { pt3dadd( -27.1806, 18.9605, -2.88248, 1.92 ) }
    dend_73 { pt3dadd( -28.8091, 18.9847, -3.10666, 1.92 ) }
    dend_73 { pt3dadd( -31.9245, 18.8151, -3.51932, 1.8 ) }
    dend_73 { pt3dadd( -32.4525, 18.7428, -3.59843, 1.8 ) }
    dend_73 { pt3dadd( -33.5575, 18.5125, -3.76436, 1.8 ) }
    dend_73 { pt3dadd( -36.1775, 17.841, -4.21906, 1.32 ) }
    dend_73 { pt3dadd( -37.1043, 17.585, -4.42682, 1.32 ) }
    dend_73 { pt3dadd( -38.8918, 17.0832, -4.99231, 1.92 ) }
    dend_73 { pt3dadd( -39.5884, 17.0326, -5.3995, 1.92 ) }
    dend_73 { pt3dadd( -40.0895, 17.443, -6.18253, 1.92 ) }
    dend_73 { pt3dadd( -40.3168, 17.7335, -6.67765, 1.92 ) }
    dend_73 { pt3dadd( -40.5576, 18.0845, -7.27791, 1.92 ) }
    dend_73 { pt3dadd( -40.8865, 18.2979, -7.81434, 1.92 ) }
    dend_73 { pt3dadd( -41.4172, 18.3893, -8.46638, 1.92 ) }
    dend_73 { pt3dadd( -42.9848, 18.3689, -10.2186, 1.44 ) }
    dend_73 { pt3dadd( -44.1652, 18.2947, -11.4528, 1.44 ) }
    dend_73 { pt3dadd( -44.7642, 18.2308, -12.0403, 1.44 ) }
    dend_73 { pt3dadd( -46.3069, 17.9772, -13.4858, 1.44 ) }
    dend_73 { pt3dadd( -47.3237, 17.7487, -14.4101, 1.8 ) }
    dend_73 { pt3dadd( -48.1188, 17.5136, -15.1257, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 12.956, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.76771, 16.2169, 0.52707, 1.32 ) }
    dend_69 { pt3dadd( -2.51565, 19.6653, -0.633428, 1.32 ) }
    dend_69 { pt3dadd( -2.3871, 21.5382, -1.19741, 1.32 ) }
    dend_69 { pt3dadd( -2.25622, 23.5567, -1.72989, 1.32 ) }
    dend_69 { pt3dadd( -2.17822, 24.8162, -2.01732, 1.32 ) }
    dend_69 { pt3dadd( -2.06753, 26.2567, -2.29786, 1.32 ) }
    dend_69 { pt3dadd( -1.91946, 28.0174, -2.47146, 1.32 ) }
    dend_69 { pt3dadd( -1.81429, 29.1208, -2.42984, 1.32 ) }
    dend_69 { pt3dadd( -1.60078, 31.1755, -2.27036, 1.08 ) }
    dend_69 { pt3dadd( -1.34826, 33.3689, -2.05222, 1.56 ) }
    dend_69 { pt3dadd( -1.07814, 35.6978, -1.76506, 1.56 ) }
    dend_69 { pt3dadd( -0.83169, 37.7279, -1.46562, 1.56 ) }
    dend_69 { pt3dadd( -0.153282, 42.3804, -0.646499, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 10.376, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.5045, 11.4102, 11.7533, 1.8 ) }
    dend_64 { pt3dadd( -7.22174, 12.5079, 12.185, 1.8 ) }
    dend_64 { pt3dadd( -8.625, 14.493, 13.1209, 1.56 ) }
    dend_64 { pt3dadd( -9.02775, 15.0627, 13.3896, 1.56 ) }
    dend_64 { pt3dadd( -9.94781, 16.3643, 14.0033, 1.44 ) }
    dend_64 { pt3dadd( -10.9071, 17.7213, 14.6431, 0.96 ) }
    dend_64 { pt3dadd( -11.3145, 18.2945, 14.9414, 0.96 ) }
    dend_64 { pt3dadd( -13.0004, 20.5308, 16.2141, 1.92 ) }
    dend_64 { pt3dadd( -17.7163, 27.2694, 19.5549, 1.92 ) }
    dend_64 { pt3dadd( -23.8709, 32.4096, 23.3639, 1.92 ) }
    dend_64 { pt3dadd( -31.0276, 37.0781, 25.7715, 1.92 ) }
    dend_64 { pt3dadd( -37.5396, 42.7916, 27.7104, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -11.374, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.64946, -13.9378, 11.3658, 2.64 ) }
    dend_41 { pt3dadd( 1.90374, -16.8981, 11.15, 2.64 ) }
    dend_41 { pt3dadd( 2.09127, -19.0814, 10.9908, 2.64 ) }
    dend_41 { pt3dadd( 2.26614, -21.1172, 10.8423, 2.64 ) }
    dend_41 { pt3dadd( 2.62195, -25.2597, 10.5403, 2.4 ) }
    dend_41 { pt3dadd( 2.98043, -29.4332, 10.236, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -12.164, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 5.00707, -12.8432, 12.8545, 2.16 ) }
    dend_18 { pt3dadd( 5.61044, -15.0031, 12.2735, 2.16 ) }
    dend_18 { pt3dadd( 6.07026, -16.5486, 11.9346, 2.16 ) }
    dend_18 { pt3dadd( 6.86181, -19.209, 11.3512, 2.16 ) }
    dend_18 { pt3dadd( 7.44381, -21.165, 10.9222, 2.16 ) }
    dend_18 { pt3dadd( 7.86579, -22.5834, 10.6112, 2.16 ) }
    dend_18 { pt3dadd( 8.9814, -26.2774, 9.78859, 2.52 ) }
    dend_18 { pt3dadd( 9.76981, -29.1471, 9.15235, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 12.646, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.138547, 16.1438, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.326465, 19.5883, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.744039, 22.6815, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.955174, 24.2455, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.21244, 26.1512, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.2104 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.2104 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.2104 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -48.1188, 17.5136, -15.1257, 1.2 ) }
    dend_75 { pt3dadd( -49.5593, 19.8774, -14.116, 1.2 ) }
    dend_75 { pt3dadd( -51.1429, 21.6177, -13.2603, 1.2 ) }
    dend_75 { pt3dadd( -52.2974, 22.3657, -12.8111, 1.2 ) }
    dend_75 { pt3dadd( -53.0566, 22.7707, -12.5473, 1.56 ) }
    dend_75 { pt3dadd( -53.5347, 22.9655, -12.4773, 1.56 ) }
    dend_75 { pt3dadd( -54.3817, 23.2447, -12.4426, 1.56 ) }
    dend_75 { pt3dadd( -56.7386, 23.7632, -12.4685, 0.96 ) }
    dend_75 { pt3dadd( -60.4167, 24.3734, -12.7339, 1.56 ) }
    dend_75 { pt3dadd( -60.7821, 24.4265, -12.7692, 1.56 ) }
    dend_75 { pt3dadd( -65.3764, 25.0049, -13.3539, 1.08 ) }
    dend_75 { pt3dadd( -66.7906, 25.1455, -13.6001, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -48.1188, 17.5136, -15.1257, 1.08 ) }
    dend_74 { pt3dadd( -49.4644, 17.2941, -15.9938, 1.08 ) }
    dend_74 { pt3dadd( -50.8717, 16.8993, -16.9977, 1.56 ) }
    dend_74 { pt3dadd( -53.7432, 15.6972, -19.5512, 0.84 ) }
    dend_74 { pt3dadd( -54.7908, 15.0964, -20.7468, 0.84 ) }
    dend_74 { pt3dadd( -55.1192, 14.8572, -21.1956, 0.84 ) }
    dend_74 { pt3dadd( -55.9315, 14.1598, -22.4627, 0.84 ) }
    dend_74 { pt3dadd( -56.6252, 13.3125, -23.9302, 0.84 ) }
    dend_74 { pt3dadd( -57.3408, 12.0738, -25.9096, 0.84 ) }
    dend_74 { pt3dadd( -57.8446, 10.8197, -27.6225, 0.84 ) }
    dend_74 { pt3dadd( -58.1387, 10.0072, -28.6491, 0.84 ) }
    dend_74 { pt3dadd( -58.4632, 9.20009, -29.6484, 0.84 ) }
    dend_74 { pt3dadd( -58.7619, 8.57713, -30.381, 0.84 ) }
    dend_74 { pt3dadd( -59.3512, 7.59321, -31.3694, 0.84 ) }
    dend_74 { pt3dadd( -59.9836, 6.7482, -31.986, 0.84 ) }
    dend_74 { pt3dadd( -60.3977, 6.29924, -32.2354, 0.84 ) }
    dend_74 { pt3dadd( -61.3143, 5.4688, -32.6196, 0.84 ) }
    dend_74 { pt3dadd( -61.9871, 4.94351, -32.8151, 0.84 ) }
    dend_74 { pt3dadd( -63.0567, 4.20205, -33.0288, 0.84 ) }
    dend_74 { pt3dadd( -64.3801, 3.25193, -33.2302, 0.84 ) }
    dend_74 { pt3dadd( -65.8128, 2.1012, -33.4115, 0.84 ) }
    dend_74 { pt3dadd( -66.7144, 1.2253, -33.5016, 0.84 ) }
    dend_74 { pt3dadd( -67.7575, 0.0208061, -33.6131, 0.84 ) }
    dend_74 { pt3dadd( -69.3871, -2.19563, -33.8838, 0.84 ) }
    dend_74 { pt3dadd( -70.6593, -4.26461, -34.1682, 1.32 ) }
    dend_74 { pt3dadd( -71.5541, -5.97221, -34.3972, 0.6 ) }
    dend_74 { pt3dadd( -72.4368, -7.99849, -34.6533, 1.2 ) }
    dend_74 { pt3dadd( -73.0486, -9.71068, -34.8889, 0.72 ) }
    dend_74 { pt3dadd( -73.4954, -11.3491, -35.1499, 0.72 ) }
    dend_74 { pt3dadd( -73.6932, -12.4212, -35.3652, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -0.153282, 42.3804, -0.646499, 1.32 ) }
    dend_70 { pt3dadd( 0.549826, 43.8341, 0.0683974, 1.32 ) }
    dend_70 { pt3dadd( 2.14063, 47.3989, 1.57639, 0.96 ) }
    dend_70 { pt3dadd( 2.78164, 49.0578, 2.17704, 0.96 ) }
    dend_70 { pt3dadd( 3.30578, 50.7926, 2.69835, 1.2 ) }
    dend_70 { pt3dadd( 3.52542, 51.7835, 2.93817, 1.2 ) }
    dend_70 { pt3dadd( 3.67197, 52.658, 3.12042, 1.2 ) }
    dend_70 { pt3dadd( 3.70529, 53.6387, 3.23985, 1.44 ) }
    dend_70 { pt3dadd( 3.48793, 54.9847, 3.24169, 1.08 ) }
    dend_70 { pt3dadd( 2.98262, 56.6948, 3.24314, 1.08 ) }
    dend_70 { pt3dadd( 2.27855, 58.5555, 3.2444, 1.56 ) }
    dend_70 { pt3dadd( 2.05527, 59.0628, 3.24458, 1.56 ) }
    dend_70 { pt3dadd( 1.36689, 60.4365, 3.24425, 1.56 ) }
    dend_70 { pt3dadd( 0.362296, 62.2032, 3.2417, 1.56 ) }
    dend_70 { pt3dadd( 0.27213, 62.3395, 3.24112, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -37.5396, 42.7916, 27.7104, 1.2 ) }
    dend_66 { pt3dadd( -45.0967, 50.4122, 31.6747, 1.2 ) }
    dend_66 { pt3dadd( -50.8512, 58.3244, 37.6063, 1.2 ) }
    dend_66 { pt3dadd( -58.6402, 65.7895, 41.4148, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -37.5396, 42.7916, 27.7104, 1.44 ) }
    dend_65 { pt3dadd( -45.7607, 50.9865, 31.8959, 1.2 ) }
    dend_65 { pt3dadd( -52.4976, 60.3446, 36.2894, 1.2 ) }
    dend_65 { pt3dadd( -60.132, 69.2718, 40.0687, 1.2 ) }
    dend_65 { pt3dadd( -68.8489, 77.3747, 43.3276, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.98043, -29.4332, 10.236, 1.2 ) }
    dend_61 { pt3dadd( 2.13546, -33.4584, 9.71331, 1.2 ) }
    dend_61 { pt3dadd( 1.67917, -35.8721, 9.38657, 1.2 ) }
    dend_61 { pt3dadd( 1.22361, -38.5941, 9.01639, 1.2 ) }
    dend_61 { pt3dadd( 0.857647, -41.0021, 8.69425, 1.2 ) }
    dend_61 { pt3dadd( 0.638485, -42.7213, 8.47021, 1.2 ) }
    dend_61 { pt3dadd( 0.483714, -44.009, 8.3001, 1.2 ) }
    dend_61 { pt3dadd( 0.420669, -44.9881, 8.14188, 1.2 ) }
    dend_61 { pt3dadd( 0.387506, -46.26, 7.9371, 1.2 ) }
    dend_61 { pt3dadd( 0.416058, -47.0113, 7.84045, 1.2 ) }
    dend_61 { pt3dadd( 0.536408, -48.4402, 7.68401, 1.2 ) }
    dend_61 { pt3dadd( 0.615286, -49.4846, 7.58874, 1.2 ) }
    dend_61 { pt3dadd( 0.632086, -50.5988, 7.52581, 1.2 ) }
    dend_61 { pt3dadd( 0.55075, -51.4854, 7.51038, 1.2 ) }
    dend_61 { pt3dadd( 0.232907, -53.2268, 7.54156, 1.2 ) }
    dend_61 { pt3dadd( 0.060629, -53.9544, 7.57109, 1.2 ) }
    dend_61 { pt3dadd( -0.357259, -55.5033, 7.6505, 1.2 ) }
    dend_61 { pt3dadd( -1.07177, -58.1311, 7.80107, 1.68 ) }
    dend_61 { pt3dadd( -1.96477, -61.3265, 7.988, 1.08 ) }
    dend_61 { pt3dadd( -2.73882, -64.1252, 8.14656, 0.72 ) }
    dend_61 { pt3dadd( -3.10261, -65.5582, 8.21976, 1.92 ) }
    dend_61 { pt3dadd( -3.93399, -69.3114, 8.38644, 0.96 ) }
    dend_61 { pt3dadd( -4.44518, -72.0828, 8.49087, 0.84 ) }
    dend_61 { pt3dadd( -4.65704, -73.6761, 8.53411, 1.44 ) }
    dend_61 { pt3dadd( -4.82001, -75.7847, 8.56984, 1.08 ) }
    dend_61 { pt3dadd( -4.89469, -77.7749, 8.59394, 1.08 ) }
    dend_61 { pt3dadd( -4.93973, -80.9811, 8.62906, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -4.94579, -82.3512, 8.64939, 1.44 ) }
    dend_61 { pt3dadd( -4.98261, -84.2898, 8.68572, 1.44 ) }
    dend_61 { pt3dadd( -5.08073, -86.8899, 8.74642, 0.72 ) }
    dend_61 { pt3dadd( -5.13965, -87.9058, 8.7749, 1.2 ) }
    dend_61 { pt3dadd( -5.27711, -89.7676, 8.83363, 1.2 ) }
    dend_61 { pt3dadd( -5.37419, -91.2103, 8.8769, 1.56 ) }
    dend_61 { pt3dadd( -5.54878, -93.1978, 8.88816, 1.32 ) }
    dend_61 { pt3dadd( -5.80249, -95.4372, 8.86552, 0.84 ) }
    dend_61 { pt3dadd( -6.06256, -98.0649, 8.78836, 1.56 ) }
    dend_61 { pt3dadd( -6.19286, -99.6202, 8.72618, 1.56 ) }
    dend_61 { pt3dadd( -6.39942, -102.397, 8.59707, 0.96 ) }
    dend_61 { pt3dadd( -6.57564, -104.957, 8.46615, 0.96 ) }
    dend_61 { pt3dadd( -6.72674, -106.931, 8.36659, 1.32 ) }
    dend_61 { pt3dadd( -6.99378, -109.344, 8.27279, 1.32 ) }
    dend_61 { pt3dadd( -7.49022, -112.679, 8.20534, 0.72 ) }
    dend_61 { pt3dadd( -7.69836, -113.8, 8.20224, 1.56 ) }
    dend_61 { pt3dadd( -7.95924, -114.911, 8.21119, 1.56 ) }
    dend_61 { pt3dadd( -8.53835, -117.055, 8.25127, 0.96 ) }
    dend_61 { pt3dadd( -9.16859, -118.892, 8.28416, 1.68 ) }
    dend_61 { pt3dadd( -10.2892, -121.758, 8.26074, 1.08 ) }
    dend_61 { pt3dadd( -11.225, -124.078, 8.18318, 0.96 ) }
    dend_61 { pt3dadd( -12.3557, -127.051, 8.02894, 1.44 ) }
    dend_61 { pt3dadd( -12.9314, -128.662, 7.92347, 1.08 ) }
    dend_61 { pt3dadd( -13.806, -131.23, 7.70358, 0.84 ) }
    dend_61 { pt3dadd( -14.555, -133.542, 7.44904, 1.44 ) }
    dend_61 { pt3dadd( -14.9162, -134.687, 7.30752, 1.44 ) }
    dend_61 { pt3dadd( -15.5756, -136.954, 7.02619, 0.72 ) }
    dend_61 { pt3dadd( -16.0123, -138.614, 6.80589, 0.72 ) }
    dend_61 { pt3dadd( -16.7607, -141.61, 6.38869, 1.32 ) }
    dend_61 { pt3dadd( -17.3055, -143.827, 6.04663, 0.96 ) }
    dend_61 { pt3dadd( -17.5824, -144.774, 5.91008, 0.96 ) }
    dend_61 { pt3dadd( -17.9176, -145.827, 5.73133, 0.96 ) }
    dend_61 { pt3dadd( -18.4243, -147.17, 5.4723, 0.96 ) }
    dend_61 { pt3dadd( -18.7442, -147.95, 5.32755, 0.96 ) }
    dend_61 { pt3dadd( -19.2212, -149.003, 5.10501, 0.96 ) }
    dend_61 { pt3dadd( -19.7406, -150.105, 4.86229, 0.96 ) }
    dend_61 { pt3dadd( -21.3048, -153.38, 4.14643, 1.44 ) }
    dend_61 { pt3dadd( -23.0904, -157.151, 3.36392, 0.48 ) }
    dend_61 { pt3dadd( -23.9169, -158.981, 3.01707, 1.56 ) }
    dend_61 { pt3dadd( -25.5197, -162.736, 2.35777, 0.84 ) }
    dend_61 { pt3dadd( -25.9285, -163.761, 2.16768, 0.84 ) }
    dend_61 { pt3dadd( -26.5944, -165.583, 1.81579, 0.84 ) }
    dend_61 { pt3dadd( -27.0732, -167.092, 1.54407, 0.84 ) }
    dend_61 { pt3dadd( -27.4699, -168.583, 1.31421, 0.84 ) }
    dend_61 { pt3dadd( -27.8349, -170.02, 1.13092, 0.84 ) }
    dend_61 { pt3dadd( -28.7569, -173.917, 0.732921, 0.6 ) }
    dend_61 { pt3dadd( -29.2886, -176.069, 0.496507, 1.08 ) }
    dend_61 { pt3dadd( -30.0635, -179.055, 0.143598, 0.72 ) }
    dend_61 { pt3dadd( -30.8296, -181.83, -0.188048, 0.6 ) }
    dend_61 { pt3dadd( -31.2269, -183.149, -0.330623, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.98043, -29.4332, 10.236, 1.92 ) }
    dend_42 { pt3dadd( 2.97701, -33.7559, 9.96347, 1.92 ) }
    dend_42 { pt3dadd( 2.97327, -38.4882, 9.66511, 1.92 ) }
    dend_42 { pt3dadd( 2.96904, -43.8252, 9.32862, 2.28 ) }
    dend_42 { pt3dadd( 2.9668, -46.6587, 9.14997, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.76981, -29.1471, 9.15235, 1.32 ) }
    dend_40 { pt3dadd( 12.9028, -30.7847, 9.69872, 1.32 ) }
    dend_40 { pt3dadd( 15.0298, -31.6628, 10.1245, 1.32 ) }
    dend_40 { pt3dadd( 16.7682, -32.2735, 10.5016, 1.32 ) }
    dend_40 { pt3dadd( 18.6434, -32.8765, 10.9305, 1.32 ) }
    dend_40 { pt3dadd( 21.1493, -33.6047, 11.5448, 1.32 ) }
    dend_40 { pt3dadd( 22.4698, -33.9894, 11.8889, 1.32 ) }
    dend_40 { pt3dadd( 25.9115, -34.9503, 12.9325, 1.08 ) }
    dend_40 { pt3dadd( 27.0037, -35.2432, 13.291, 1.08 ) }
    dend_40 { pt3dadd( 27.4554, -35.3688, 13.4481, 1.08 ) }
    dend_40 { pt3dadd( 29.8685, -36.1024, 14.3362, 1.44 ) }
    dend_40 { pt3dadd( 31.7155, -36.8123, 15.0089, 1.08 ) }
    dend_40 { pt3dadd( 32.643, -37.2674, 15.3439, 1.08 ) }
    dend_40 { pt3dadd( 34.8502, -38.5012, 16.0807, 1.08 ) }
    dend_40 { pt3dadd( 36.2837, -39.3022, 16.5115, 0.84 ) }
    dend_40 { pt3dadd( 37.7194, -40.1084, 16.8957, 0.84 ) }
    dend_40 { pt3dadd( 39.4487, -40.9892, 17.2967, 0.84 ) }
    dend_40 { pt3dadd( 40.8533, -41.6721, 17.6076, 0.84 ) }
    dend_40 { pt3dadd( 44.2811, -43.2981, 18.2045, 1.2 ) }
    dend_40 { pt3dadd( 46.2315, -44.1926, 18.43, 0.84 ) }
    dend_40 { pt3dadd( 47.9099, -44.8671, 18.5244, 0.84 ) }
    dend_40 { pt3dadd( 51.2026, -46.0126, 18.574, 0.96 ) }
    dend_40 { pt3dadd( 54.4472, -47.1015, 18.5809, 0.72 ) }
    dend_40 { pt3dadd( 58.0695, -48.2979, 18.5111, 1.2 ) }
    dend_40 { pt3dadd( 60.0745, -48.9675, 18.3922, 1.2 ) }
    dend_40 { pt3dadd( 62.1932, -49.6027, 18.167, 0.6 ) }
    dend_40 { pt3dadd( 63.1801, -49.8637, 18.0108, 0.6 ) }
    dend_40 { pt3dadd( 74.7175, -52.5874, 18.2645, 0.6 ) }
    dend_40 { pt3dadd( 85.599, -57.2664, 17.7215, 0.6 ) }
    dend_40 { pt3dadd( 97.2523, -59.4423, 17.9694, 0.6 ) }
    dend_40 { pt3dadd( 109.098, -59.827, 18.2977, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.76981, -29.1471, 9.15235, 1.8 ) }
    dend_19 { pt3dadd( 10.1675, -32.2949, 9.01083, 1.8 ) }
    dend_19 { pt3dadd( 10.6794, -35.4995, 8.88503, 1.8 ) }
    dend_19 { pt3dadd( 11.0478, -37.3665, 8.82456, 1.8 ) }
    dend_19 { pt3dadd( 11.2521, -38.2805, 8.77836, 1.8 ) }
    dend_19 { pt3dadd( 11.5658, -39.5988, 8.69509, 1.8 ) }
    dend_19 { pt3dadd( 11.8623, -40.8129, 8.65516, 1.8 ) }
    dend_19 { pt3dadd( 12.154, -41.8032, 8.66103, 1.8 ) }
    dend_19 { pt3dadd( 12.5661, -43.4133, 8.70727, 1.8 ) }
    dend_19 { pt3dadd( 12.7616, -44.4858, 8.73302, 1.8 ) }
    dend_19 { pt3dadd( 12.9784, -46.0009, 8.76818, 1.8 ) }
    dend_19 { pt3dadd( 13.3035, -48.8014, 8.7032, 1.8 ) }
    dend_19 { pt3dadd( 13.4496, -50.2347, 8.62906, 1.8 ) }
    dend_19 { pt3dadd( 13.7283, -53.112, 8.42327, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 13.9899, -55.3213, 8.21366, 1.92 ) }
    dend_19 { pt3dadd( 14.1325, -56.2351, 8.10892, 1.92 ) }
    dend_19 { pt3dadd( 15.003, -61.4268, 7.37476, 2.16 ) }
    dend_19 { pt3dadd( 15.3866, -63.4756, 6.99745, 2.16 ) }
    dend_19 { pt3dadd( 15.6911, -64.857, 6.7207, 2.16 ) }
    dend_19 { pt3dadd( 16.4142, -67.5225, 6.16011, 1.92 ) }
    dend_19 { pt3dadd( 16.9554, -69.1952, 5.80207, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.21244, 26.1512, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.69914, 29.0412, 12.9752, 1.8 ) }
    dend_1 { pt3dadd( 4.05235, 31.6717, 14.015, 1.8 ) }
    dend_1 { pt3dadd( 5.46847, 34.4245, 15.1032, 1.8 ) }
    dend_1 { pt3dadd( 7.13395, 37.662, 16.383, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.932747 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.932747 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.932747 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -66.7906, 25.1455, -13.6001, 1.68 ) }
    dend_77 { pt3dadd( -67.1125, 25.126, -13.6803, 1.68 ) }
    dend_77 { pt3dadd( -70.9254, 25.079, -14.5216, 1.2 ) }
    dend_77 { pt3dadd( -73.9492, 25.2188, -15.1058, 1.68 ) }
    dend_77 { pt3dadd( -75.2914, 25.3483, -15.3474, 1.68 ) }
    dend_77 { pt3dadd( -77.2597, 25.6682, -15.6932, 1.2 ) }
    dend_77 { pt3dadd( -80.7137, 26.3853, -16.3271, 1.2 ) }
    dend_77 { pt3dadd( -82.672, 26.9534, -16.7912, 0.84 ) }
    dend_77 { pt3dadd( -84.602, 27.7922, -17.42, 1.32 ) }
    dend_77 { pt3dadd( -85.7107, 28.3999, -17.9245, 1.32 ) }
    dend_77 { pt3dadd( -87.4943, 29.4894, -18.9357, 0.84 ) }
    dend_77 { pt3dadd( -88.2518, 29.9948, -19.4587, 0.84 ) }
    dend_77 { pt3dadd( -90.8976, 31.8969, -21.5608, 0.84 ) }
    dend_77 { pt3dadd( -92.8956, 33.34, -23.2348, 0.84 ) }
    dend_77 { pt3dadd( -94.2243, 34.3189, -24.3485, 0.84 ) }
    dend_77 { pt3dadd( -95.2568, 35.0592, -25.1345, 0.84 ) }
    dend_77 { pt3dadd( -96.6515, 35.994, -26.0458, 0.84 ) }
    dend_77 { pt3dadd( -98.0642, 36.9156, -26.7864, 0.84 ) }
    dend_77 { pt3dadd( -100.111, 38.298, -27.5834, 0.84 ) }
    dend_77 { pt3dadd( -101.535, 39.2789, -28.0246, 0.84 ) }
    dend_77 { pt3dadd( -103.509, 40.67, -28.5594, 0.84 ) }
    dend_77 { pt3dadd( -105.974, 42.5092, -29.2169, 0.84 ) }
    dend_77 { pt3dadd( -107.272, 43.531, -29.5404, 0.84 ) }
    dend_77 { pt3dadd( -109.909, 45.6703, -30.2291, 1.32 ) }
    dend_77 { pt3dadd( -111.763, 47.1943, -30.7425, 1.32 ) }
    dend_77 { pt3dadd( -114.253, 49.3718, -31.4295, 0.96 ) }
    dend_77 { pt3dadd( -116.104, 51.1226, -31.9814, 0.96 ) }
    dend_77 { pt3dadd( -117.154, 52.097, -32.2962, 0.96 ) }
    dend_77 { pt3dadd( -118.585, 53.3381, -32.7709, 0.96 ) }
    dend_77 { pt3dadd( -119.847, 54.28, -33.1996, 0.96 ) }
    dend_77 { pt3dadd( -123.292, 56.5579, -34.3214, 0.72 ) }
    dend_77 { pt3dadd( -124.547, 57.2664, -34.7122, 0.72 ) }
    dend_77 { pt3dadd( -129.462, 59.5815, -36.124, 1.08 ) }
    dend_77 { pt3dadd( -130.875, 60.1629, -36.5105, 1.08 ) }
    dend_77 { pt3dadd( -135.424, 61.9898, -37.5371, 1.08 ) }
    dend_77 { pt3dadd( -137.779, 62.946, -38.0606, 1.08 ) }
    dend_77 { pt3dadd( -140.406, 64.1312, -38.6033, 1.08 ) }
    dend_77 { pt3dadd( -142.713, 65.3288, -39.0574, 1.08 ) }
    dend_77 { pt3dadd( -143.531, 65.8275, -39.2402, 1.08 ) }
    dend_77 { pt3dadd( -147.044, 68.2183, -40.0956, 1.08 ) }
    dend_77 { pt3dadd( -149.702, 70.2166, -40.8506, 1.08 ) }
    dend_77 { pt3dadd( -154.707, 74.0375, -42.4217, 1.44 ) }
    dend_77 { pt3dadd( -156.034, 75.0299, -42.871, 1.44 ) }
    dend_77 { pt3dadd( -159.249, 77.1545, -43.9975, 1.2 ) }
    dend_77 { pt3dadd( -160.551, 77.8387, -44.3804, 1.2 ) }
    dend_77 { pt3dadd( -162.37, 78.5494, -44.8141, 1.2 ) }
    dend_77 { pt3dadd( -167.569, 80.1307, -45.7353, 1.08 ) }
    dend_77 { pt3dadd( -170.798, 80.9498, -46.2913, 1.08 ) }
    dend_77 { pt3dadd( -174.798, 81.9458, -46.9064, 1.08 ) }
    dend_77 { pt3dadd( -180.506, 83.307, -47.7289, 0.72 ) }
    dend_77 { pt3dadd( -184.226, 84.1697, -48.2774, 0.72 ) }
    dend_77 { pt3dadd( -187.198, 84.8404, -48.7153, 1.08 ) }
    dend_77 { pt3dadd( -190.831, 85.5552, -49.2599, 0.84 ) }
    dend_77 { pt3dadd( -192.907, 85.8211, -49.6363, 0.84 ) }
    dend_77 { pt3dadd( -194.359, 85.919, -49.9729, 0.84 ) }
    dend_77 { pt3dadd( -196.079, 85.9777, -50.464, 0.84 ) }
    dend_77 { pt3dadd( -199.036, 85.8932, -51.284, 0.84 ) }
    dend_77 { pt3dadd( -203.267, 85.4533, -52.2958, 0.84 ) }
    dend_77 { pt3dadd( -209.701, 84.2845, -53.5986, 0.6 ) }
    dend_77 { pt3dadd( -210.622, 84.0757, -53.7948, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -66.7906, 25.1455, -13.6001, 1.32 ) }
    dend_76 { pt3dadd( -67.0972, 26.0077, -14.1863, 1.32 ) }
    dend_76 { pt3dadd( -67.5342, 27.1848, -15.0522, 0.84 ) }
    dend_76 { pt3dadd( -68.029, 28.6229, -16.1996, 1.44 ) }
    dend_76 { pt3dadd( -68.7881, 30.6431, -17.9972, 1.08 ) }
    dend_76 { pt3dadd( -69.3079, 31.798, -19.0836, 1.08 ) }
    dend_76 { pt3dadd( -69.5128, 32.1847, -19.4669, 1.08 ) }
    dend_76 { pt3dadd( -70.327, 33.4454, -20.879, 1.56 ) }
    dend_76 { pt3dadd( -71.276, 34.5565, -22.2856, 0.96 ) }
    dend_76 { pt3dadd( -72.0571, 35.2404, -23.2386, 0.96 ) }
    dend_76 { pt3dadd( -73.0144, 35.8072, -24.0078, 0.96 ) }
    dend_76 { pt3dadd( -73.7777, 36.1139, -24.4201, 0.96 ) }
    dend_76 { pt3dadd( -74.5046, 36.3232, -24.7117, 0.96 ) }
    dend_76 { pt3dadd( -75.2207, 36.4535, -24.9053, 0.96 ) }
    dend_76 { pt3dadd( -76.2381, 36.6295, -25.1068, 0.96 ) }
    dend_76 { pt3dadd( -78.3947, 37.0441, -25.5154, 0.72 ) }
    dend_76 { pt3dadd( -80.287, 37.3622, -25.8894, 0.72 ) }
    dend_76 { pt3dadd( -81.6955, 37.5851, -26.1608, 0.72 ) }
    dend_76 { pt3dadd( -82.7555, 37.7331, -26.3693, 0.72 ) }
    dend_76 { pt3dadd( -84.0708, 37.906, -26.6402, 0.72 ) }
    dend_76 { pt3dadd( -86.0894, 38.2001, -27.0868, 0.72 ) }
    dend_76 { pt3dadd( -88.2562, 38.5718, -27.5746, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 0.27213, 62.3395, 3.24112, 1.32 ) }
    dend_72 { pt3dadd( -0.137285, 63.1193, 3.53014, 1.32 ) }
    dend_72 { pt3dadd( -0.714418, 64.1222, 3.85722, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -1.50017, 65.492, 4.28016, 1.08 ) }
    dend_72 { pt3dadd( -1.98552, 66.3748, 4.53572, 1.08 ) }
    dend_72 { pt3dadd( -2.26131, 66.9155, 4.67874, 1.08 ) }
    dend_72 { pt3dadd( -2.65986, 67.7514, 4.88125, 1.08 ) }
    dend_72 { pt3dadd( -3.10754, 68.6777, 5.04233, 1.08 ) }
    dend_72 { pt3dadd( -3.31814, 69.1081, 5.10511, 1.08 ) }
    dend_72 { pt3dadd( -3.56844, 69.6484, 5.1562, 1.08 ) }
    dend_72 { pt3dadd( -3.90413, 70.337, 5.21633, 1.08 ) }
    dend_72 { pt3dadd( -4.16349, 70.7904, 5.26068, 1.08 ) }
    dend_72 { pt3dadd( -4.46054, 71.1681, 5.30403, 1.08 ) }
    dend_72 { pt3dadd( -4.83259, 71.4804, 5.34557, 1.08 ) }
    dend_72 { pt3dadd( -5.40248, 71.8804, 5.39685, 1.08 ) }
    dend_72 { pt3dadd( -6.12018, 72.3613, 5.47152, 1.08 ) }
    dend_72 { pt3dadd( -6.75359, 72.8025, 5.54709, 1.08 ) }
    dend_72 { pt3dadd( -7.43113, 73.3509, 5.64207, 1.08 ) }
    dend_72 { pt3dadd( -8.03862, 74.0514, 5.6485, 0.96 ) }
    dend_72 { pt3dadd( -8.21856, 74.5576, 5.55625, 0.96 ) }
    dend_72 { pt3dadd( -8.27304, 75.3332, 5.32606, 0.96 ) }
    dend_72 { pt3dadd( -8.24881, 75.9675, 5.11933, 0.96 ) }
    dend_72 { pt3dadd( -8.19995, 76.5153, 4.93613, 0.96 ) }
    dend_72 { pt3dadd( -7.9593, 78.6062, 4.22274, 0.72 ) }
    dend_72 { pt3dadd( -7.87087, 79.4712, 3.90951, 0.72 ) }
    dend_72 { pt3dadd( -7.83466, 80.2155, 3.63595, 0.72 ) }
    dend_72 { pt3dadd( -7.82872, 81.0129, 3.36499, 0.72 ) }
    dend_72 { pt3dadd( -7.86529, 82.3626, 2.9893, 0.72 ) }
    dend_72 { pt3dadd( -7.90098, 83.0344, 2.85107, 0.72 ) }
    dend_72 { pt3dadd( -7.96296, 83.6658, 2.78951, 0.72 ) }
    dend_72 { pt3dadd( -8.08584, 84.5755, 2.67015, 0.72 ) }
    dend_72 { pt3dadd( -8.28381, 85.9783, 2.46463, 0.72 ) }
    dend_72 { pt3dadd( -8.46593, 86.9819, 2.31255, 0.72 ) }
    dend_72 { pt3dadd( -8.6714, 87.8199, 2.18769, 0.72 ) }
    dend_72 { pt3dadd( -9.07276, 89.1072, 1.99877, 1.2 ) }
    dend_72 { pt3dadd( -9.92431, 91.0723, 1.7275, 1.08 ) }
    dend_72 { pt3dadd( -10.4752, 91.9377, 1.6288, 1.08 ) }
    dend_72 { pt3dadd( -11.0902, 92.6849, 1.56306, 1.08 ) }
    dend_72 { pt3dadd( -11.5572, 93.1989, 1.54214, 1.08 ) }
    dend_72 { pt3dadd( -11.9924, 93.6526, 1.52442, 0.72 ) }
    dend_72 { pt3dadd( -13.2366, 94.925, 1.45868, 1.2 ) }
    dend_72 { pt3dadd( -14.5716, 96.2787, 1.41947, 1.08 ) }
    dend_72 { pt3dadd( -15.6955, 97.4472, 1.39087, 1.44 ) }
    dend_72 { pt3dadd( -16.2474, 98.1094, 1.37753, 1.44 ) }
    dend_72 { pt3dadd( -17.0784, 99.3562, 1.35522, 1.2 ) }
    dend_72 { pt3dadd( -17.5336, 100.242, 1.34428, 1.2 ) }
    dend_72 { pt3dadd( -18.0113, 101.56, 1.35237, 1.08 ) }
    dend_72 { pt3dadd( -18.3674, 103.085, 1.40077, 1.08 ) }
    dend_72 { pt3dadd( -18.6351, 104.598, 1.50523, 0.96 ) }
    dend_72 { pt3dadd( -18.8547, 106.115, 1.65644, 0.96 ) }
    dend_72 { pt3dadd( -18.9436, 106.906, 1.77021, 1.2 ) }
    dend_72 { pt3dadd( -19.0209, 107.857, 1.85944, 0.72 ) }
    dend_72 { pt3dadd( -19.0663, 109.749, 1.90071, 1.2 ) }
    dend_72 { pt3dadd( -19.0649, 110.251, 1.86929, 1.2 ) }
    dend_72 { pt3dadd( -19.1088, 111.241, 1.74982, 1.2 ) }
    dend_72 { pt3dadd( -19.2323, 112.217, 1.57637, 1.2 ) }
    dend_72 { pt3dadd( -19.6087, 114.088, 1.13342, 1.2 ) }
    dend_72 { pt3dadd( -19.8703, 114.922, 0.877268, 1.2 ) }
    dend_72 { pt3dadd( -20.1186, 115.439, 0.689478, 1.2 ) }
    dend_72 { pt3dadd( -20.8488, 116.469, 0.344119, 0.96 ) }
    dend_72 { pt3dadd( -21.4579, 117.063, 0.205784, 1.2 ) }
    dend_72 { pt3dadd( -21.8608, 117.397, 0.170779, 1.2 ) }
    dend_72 { pt3dadd( -22.5461, 117.926, 0.173753, 1.2 ) }
    dend_72 { pt3dadd( -22.9751, 118.266, 0.176019, 1.2 ) }
    dend_72 { pt3dadd( -24.0289, 119.182, 0.182621, 1.2 ) }
    dend_72 { pt3dadd( -25.2161, 120.415, 0.191229, 1.2 ) }
    dend_72 { pt3dadd( -25.8464, 121.195, 0.195974, 1.2 ) }
    dend_72 { pt3dadd( -26.2506, 121.753, 0.198749, 1.2 ) }
    dend_72 { pt3dadd( -26.6857, 122.445, 0.201596, 1.2 ) }
    dend_72 { pt3dadd( -27.054, 123.115, 0.203835, 1.2 ) }
    dend_72 { pt3dadd( -27.6269, 124.407, 0.206985, 0.84 ) }
    dend_72 { pt3dadd( -28.1302, 125.716, 0.224681, 1.32 ) }
    dend_72 { pt3dadd( -28.8386, 127.672, 0.269695, 0.84 ) }
    dend_72 { pt3dadd( -29.1882, 128.653, 0.300795, 0.84 ) }
    dend_72 { pt3dadd( -29.4625, 129.423, 0.331197, 0.84 ) }
    dend_72 { pt3dadd( -29.8307, 130.47, 0.379882, 0.84 ) }
    dend_72 { pt3dadd( -30.2783, 131.667, 0.469641, 0.84 ) }
    dend_72 { pt3dadd( -30.5675, 132.336, 0.536894, 0.84 ) }
    dend_72 { pt3dadd( -31.0135, 133.129, 0.586302, 0.84 ) }
    dend_72 { pt3dadd( -31.3421, 133.572, 0.592415, 0.84 ) }
    dend_72 { pt3dadd( -31.9728, 134.244, 0.569393, 1.2 ) }
    dend_72 { pt3dadd( -33.0007, 135.15, 0.467457, 0.84 ) }
    dend_72 { pt3dadd( -33.9604, 135.884, 0.352922, 0.84 ) }
    dend_72 { pt3dadd( -35.0876, 136.633, 0.229014, 1.2 ) }
    dend_72 { pt3dadd( -36.0161, 137.077, 0.143807, 0.6 ) }
    dend_72 { pt3dadd( -37.1482, 137.556, 0.035747, 0.6 ) }
    dend_72 { pt3dadd( -38.3537, 137.977, -0.0837931, 1.08 ) }
    dend_72 { pt3dadd( -39.7402, 138.359, -0.226701, 0.48 ) }
    dend_72 { pt3dadd( -40.5329, 138.52, -0.270648, 0.48 ) }
    dend_72 { pt3dadd( -42.8557, 138.861, -0.193737, 0.84 ) }
    dend_72 { pt3dadd( -46.5091, 144.984, 0.659479, 0.84 ) }
    dend_72 { pt3dadd( -50.0969, 151.204, 0.520975, 0.84 ) }
    dend_72 { pt3dadd( -52.8184, 157.845, 0.268253, 0.84 ) }
    dend_72 { pt3dadd( -55.7389, 164.3, -0.908104, 0.84 ) }
    dend_72 { pt3dadd( -58.4623, 170.851, -2.0231, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.27213, 62.3395, 3.24112, 1.32 ) }
    dend_71 { pt3dadd( -1.49067, 64.1189, 2.79978, 1.32 ) }
    dend_71 { pt3dadd( -2.09022, 64.762, 2.59761, 1.32 ) }
    dend_71 { pt3dadd( -2.79958, 65.6149, 2.2959, 1.32 ) }
    dend_71 { pt3dadd( -3.48126, 66.5846, 1.92027, 1.32 ) }
    dend_71 { pt3dadd( -3.85911, 67.1761, 1.68559, 1.32 ) }
    dend_71 { pt3dadd( -4.38945, 68.2097, 1.29344, 1.32 ) }
    dend_71 { pt3dadd( -4.7189, 69.2834, 0.861586, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -4.90494, 70.5572, 0.369994, 1.56 ) }
    dend_71 { pt3dadd( -4.85467, 71.8239, -0.0976403, 1.56 ) }
    dend_71 { pt3dadd( -4.74932, 72.2747, -0.237672, 1.56 ) }
    dend_71 { pt3dadd( -4.02393, 74.0569, -0.739613, 1.2 ) }
    dend_71 { pt3dadd( -3.66908, 74.6554, -0.890543, 1.2 ) }
    dend_71 { pt3dadd( -3.02048, 75.4767, -1.10305, 1.2 ) }
    dend_71 { pt3dadd( -1.92716, 76.5762, -1.43185, 1.08 ) }
    dend_71 { pt3dadd( -1.09027, 77.2888, -1.68071, 1.08 ) }
    dend_71 { pt3dadd( -0.5574, 77.6935, -1.872, 1.08 ) }
    dend_71 { pt3dadd( -0.047237, 78.0614, -2.10843, 1.08 ) }
    dend_71 { pt3dadd( 0.466295, 78.486, -2.41994, 1.08 ) }
    dend_71 { pt3dadd( 1.3946, 79.4096, -3.15716, 1.8 ) }
    dend_71 { pt3dadd( 1.56376, 79.6408, -3.35003, 1.8 ) }
    dend_71 { pt3dadd( 2.1642, 80.8988, -4.37298, 1.32 ) }
    dend_71 { pt3dadd( 2.36463, 81.6335, -4.95339, 1.32 ) }
    dend_71 { pt3dadd( 2.39914, 82.5755, -5.66979, 1.08 ) }
    dend_71 { pt3dadd( 2.32741, 82.8467, -5.85943, 1.08 ) }
    dend_71 { pt3dadd( 1.96061, 83.5229, -6.25821, 1.08 ) }
    dend_71 { pt3dadd( 1.48827, 84.2352, -6.63357, 1.44 ) }
    dend_71 { pt3dadd( 1.09121, 84.7545, -6.88525, 1.44 ) }
    dend_71 { pt3dadd( 0.602587, 85.3823, -7.19647, 1.44 ) }
    dend_71 { pt3dadd( 0.188069, 85.9341, -7.50178, 1.44 ) }
    dend_71 { pt3dadd( -0.609345, 87.1578, -8.24052, 0.84 ) }
    dend_71 { pt3dadd( -1.00244, 87.8915, -8.69318, 0.84 ) }
    dend_71 { pt3dadd( -1.60111, 89.4125, -9.66822, 1.44 ) }
    dend_71 { pt3dadd( -1.84553, 90.2835, -10.1279, 1.44 ) }
    dend_71 { pt3dadd( -2.09307, 91.5948, -10.6944, 0.96 ) }
    dend_71 { pt3dadd( -2.30495, 92.9433, -11.2611, 0.96 ) }
    dend_71 { pt3dadd( -2.41036, 93.6305, -11.5351, 0.96 ) }
    dend_71 { pt3dadd( -2.49968, 94.6516, -11.8608, 0.72 ) }
    dend_71 { pt3dadd( -2.40628, 97.3427, -12.3775, 1.2 ) }
    dend_71 { pt3dadd( -2.27301, 98.5058, -12.4663, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -58.6402, 65.7895, 41.4148, 0.6 ) }
    dend_68 { pt3dadd( -65.0284, 73.5336, 44.9366, 0.6 ) }
    dend_68 { pt3dadd( -70.7896, 82.3575, 46.3968, 0.6 ) }
    dend_68 { pt3dadd( -75.1371, 91.7206, 48.969, 0.6 ) }
    dend_68 { pt3dadd( -80.717, 100.082, 52.4533, 0.6 ) }
    dend_68 { pt3dadd( -85.1354, 108.954, 56.3189, 0.6 ) }
    dend_68 { pt3dadd( -90.2027, 117.428, 60.2817, 0.6 ) }
    dend_68 { pt3dadd( -96.0453, 125.942, 62.8414, 0.6 ) }
    dend_68 { pt3dadd( -103.479, 133.216, 65.0828, 0.6 ) }
    dend_68 { pt3dadd( -110.562, 140.52, 68.1923, 0.6 ) }
    dend_68 { pt3dadd( -115.805, 148.853, 72.2254, 0.6 ) }
    dend_68 { pt3dadd( -122.045, 157.282, 74.0129, 0.6 ) }
    dend_68 { pt3dadd( -126.886, 166.509, 76.1583, 0.6 ) }
    dend_68 { pt3dadd( -132.003, 175.279, 79.3368, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -58.6402, 65.7895, 41.4148, 0.84 ) }
    dend_67 { pt3dadd( -66.342, 72.2977, 49.227, 0.6 ) }
    dend_67 { pt3dadd( -74.0963, 80.596, 55.0332, 0.6 ) }
    dend_67 { pt3dadd( -80.6922, 90.7675, 59.0005, 0.6 ) }
    dend_67 { pt3dadd( -87.0529, 101.408, 62.0057, 0.6 ) }
    dend_67 { pt3dadd( -93.2603, 111.747, 66.1615, 0.6 ) }
    dend_67 { pt3dadd( -101.59, 119.736, 71.5935, 0.6 ) }
    dend_67 { pt3dadd( -110.4, 128.065, 75.5579, 0.6 ) }
    dend_67 { pt3dadd( -118.744, 136.72, 79.821, 0.6 ) }
    dend_67 { pt3dadd( -127.114, 145.719, 83.2355, 0.6 ) }
    dend_67 { pt3dadd( -134.864, 155.113, 87.0304, 0.6 ) }
    dend_67 { pt3dadd( -143.747, 164.181, 88.2849, 0.6 ) }
    dend_67 { pt3dadd( -151.872, 173.952, 89.3821, 0.6 ) }
    dend_67 { pt3dadd( -159.411, 184.237, 89.6569, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -31.2269, -183.149, -0.330623, 0.96 ) }
    dend_63 { pt3dadd( -32.9657, -182.585, 0.461118, 0.96 ) }
    dend_63 { pt3dadd( -34.289, -182.156, 1.06365, 0.96 ) }
    dend_63 { pt3dadd( -35.2295, -181.852, 1.49185, 0.72 ) }
    dend_63 { pt3dadd( -35.9217, -181.627, 1.80703, 0.72 ) }
    dend_63 { pt3dadd( -36.5095, -181.437, 2.07467, 0.72 ) }
    dend_63 { pt3dadd( -37.5101, -181.112, 2.53028, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -31.2269, -183.149, -0.330623, 0.96 ) }
    dend_62 { pt3dadd( -33.9007, -189.101, -1.47291, 0.96 ) }
    dend_62 { pt3dadd( -35.0542, -191.22, -2.43164, 0.96 ) }
    dend_62 { pt3dadd( -36.28, -193.669, -3.72697, 1.32 ) }
    dend_62 { pt3dadd( -37.6643, -196.88, -5.35069, 0.6 ) }
    dend_62 { pt3dadd( -38.3812, -198.795, -6.49252, 0.6 ) }
    dend_62 { pt3dadd( -39.1166, -201.082, -7.87468, 1.2 ) }
    dend_62 { pt3dadd( -41.1287, -208.374, -12.1853, 1.2 ) }
    dend_62 { pt3dadd( -41.7977, -210.831, -13.6974, 1.56 ) }
    dend_62 { pt3dadd( -42.6648, -214.349, -15.8642, 0.96 ) }
    dend_62 { pt3dadd( -43.9279, -220.735, -19.6014, 0.6 ) }
    dend_62 { pt3dadd( -44.3842, -223.646, -21.0817, 1.08 ) }
    dend_62 { pt3dadd( -44.8029, -226.328, -22.3464, 0.72 ) }
    dend_62 { pt3dadd( -45.0882, -227.712, -22.8693, 0.72 ) }
    dend_62 { pt3dadd( -45.6453, -229.615, -23.574, 1.08 ) }
    dend_62 { pt3dadd( -46.3642, -231.68, -24.2734, 0.72 ) }
    dend_62 { pt3dadd( -47.2756, -234.039, -24.8614, 0.72 ) }
    dend_62 { pt3dadd( -49.873, -240.215, -26.3821, 0.48 ) }
    dend_62 { pt3dadd( -50.8532, -242.443, -26.9034, 1.56 ) }
    dend_62 { pt3dadd( -52.6576, -246.323, -27.6673, 1.08 ) }
    dend_62 { pt3dadd( -53.4264, -247.857, -27.8954, 0.72 ) }
    dend_62 { pt3dadd( -54.9575, -250.815, -28.1731, 1.08 ) }
    dend_62 { pt3dadd( -56.4111, -253.573, -28.3705, 0.72 ) }
    dend_62 { pt3dadd( -57.1266, -255.015, -28.3968, 0.72 ) }
    dend_62 { pt3dadd( -58.8254, -258.526, -28.6109, 1.2 ) }
    dend_62 { pt3dadd( -60.1099, -261.315, -28.8946, 0.72 ) }
    dend_62 { pt3dadd( -60.6727, -262.582, -29.0566, 0.72 ) }
    dend_62 { pt3dadd( -62.1343, -266.395, -29.6224, 0.72 ) }
    dend_62 { pt3dadd( -62.784, -268.636, -30.2486, 1.08 ) }
    dend_62 { pt3dadd( -63.2033, -270.598, -30.887, 0.96 ) }
    dend_62 { pt3dadd( -63.439, -272.073, -31.3852, 0.96 ) }
    dend_62 { pt3dadd( -63.6397, -273.778, -31.9376, 0.96 ) }
    dend_62 { pt3dadd( -63.9133, -276.935, -32.8514, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -64.3145, -283.835, -34.5463, 1.2 ) }
    dend_62 { pt3dadd( -64.4861, -288.644, -35.7198, 0.6 ) }
    dend_62 { pt3dadd( -64.4748, -291.858, -36.4706, 0.6 ) }
    dend_62 { pt3dadd( -64.3815, -293.679, -36.8426, 0.6 ) }
    dend_62 { pt3dadd( -64.1761, -295.745, -37.1764, 0.6 ) }
    dend_62 { pt3dadd( -64.0396, -297.164, -37.2715, 0.6 ) }
    dend_62 { pt3dadd( -63.9401, -298.326, -37.2273, 0.6 ) }
    dend_62 { pt3dadd( -63.805, -299.957, -37.1878, 0.6 ) }
    dend_62 { pt3dadd( -63.5741, -303.672, -37.2913, 0.6 ) }
    dend_62 { pt3dadd( -63.5241, -304.941, -37.3656, 0.6 ) }
    dend_62 { pt3dadd( -63.3645, -312.214, -37.9268, 0.96 ) }
    dend_62 { pt3dadd( -63.336, -315.686, -38.2227, 0.48 ) }
    dend_62 { pt3dadd( -63.3655, -317.872, -38.4143, 0.48 ) }
    dend_62 { pt3dadd( -63.5863, -323.024, -38.8516, 0.72 ) }
    dend_62 { pt3dadd( -63.7758, -326.092, -39.0983, 0.48 ) }
    dend_62 { pt3dadd( -63.929, -328.522, -39.1821, 1.2 ) }
    dend_62 { pt3dadd( -64.2756, -333.102, -39.1343, 0.84 ) }
    dend_62 { pt3dadd( -64.5594, -335.867, -38.9809, 1.32 ) }
    dend_62 { pt3dadd( -65.0889, -339.812, -38.6013, 0.84 ) }
    dend_62 { pt3dadd( -65.5899, -342.825, -38.1808, 1.44 ) }
    dend_62 { pt3dadd( -66.9567, -349.546, -37.052, 0.48 ) }
    dend_62 { pt3dadd( -67.7408, -352.994, -36.4058, 0.48 ) }
    dend_62 { pt3dadd( -68.9771, -357.426, -35.4863, 0.48 ) }
    dend_62 { pt3dadd( -69.8687, -360.039, -34.9024, 0.48 ) }
    dend_62 { pt3dadd( -70.9041, -362.42, -34.3206, 0.96 ) }
    dend_62 { pt3dadd( -73.824, -367.524, -32.9982, 0.48 ) }
    dend_62 { pt3dadd( -74.4684, -368.47, -32.7559, 0.84 ) }
    dend_62 { pt3dadd( -76.6736, -371.322, -31.9165, 0.6 ) }
    dend_62 { pt3dadd( -78.3365, -373.092, -31.2996, 0.84 ) }
    dend_62 { pt3dadd( -80.3295, -374.904, -30.5963, 0.6 ) }
    dend_62 { pt3dadd( -82.6543, -376.591, -29.8891, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.9668, -46.6587, 9.14997, 0.96 ) }
    dend_58 { pt3dadd( 2.35629, -48.2477, 9.03906, 0.96 ) }
    dend_58 { pt3dadd( 1.91088, -49.9189, 8.94134, 0.96 ) }
    dend_58 { pt3dadd( 1.75917, -50.5576, 8.99725, 0.96 ) }
    dend_58 { pt3dadd( 1.43754, -51.7174, 9.21366, 0.96 ) }
    dend_58 { pt3dadd( 1.09961, -52.7728, 9.47978, 0.96 ) }
    dend_58 { pt3dadd( 0.656908, -53.9711, 9.88194, 0.96 ) }
    dend_58 { pt3dadd( -0.049885, -55.8503, 10.6759, 1.32 ) }
    dend_58 { pt3dadd( -0.99096, -58.1818, 11.7738, 0.84 ) }
    dend_58 { pt3dadd( -1.613, -59.7188, 12.5609, 0.84 ) }
    dend_58 { pt3dadd( -2.02812, -60.7507, 13.1426, 0.84 ) }
    dend_58 { pt3dadd( -2.97711, -62.9638, 14.5086, 1.32 ) }
    dend_58 { pt3dadd( -3.63172, -64.267, 15.3819, 1.32 ) }
    dend_58 { pt3dadd( -4.32353, -65.4428, 16.2126, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.9668, -46.6587, 9.14997, 1.44 ) }
    dend_43 { pt3dadd( 2.92204, -50.7425, 9.42958, 1.44 ) }
    dend_43 { pt3dadd( 2.87037, -53.6643, 9.61579, 1.44 ) }
    dend_43 { pt3dadd( 2.83636, -55.4133, 9.71497, 1.44 ) }
    dend_43 { pt3dadd( 2.73176, -59.069, 9.90913, 1.8 ) }
    dend_43 { pt3dadd( 2.68816, -60.5927, 9.99005, 1.8 ) }
    dend_43 { pt3dadd( 2.64514, -62.0963, 10.0699, 1.8 ) }
    dend_43 { pt3dadd( 2.58531, -63.3502, 10.1053, 1.8 ) }
    dend_43 { pt3dadd( 2.4391, -65.9212, 10.1878, 1.56 ) }
    dend_43 { pt3dadd( 2.27924, -68.6611, 10.2799, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 16.9554, -69.1952, 5.80207, 1.56 ) }
    dend_37 { pt3dadd( 19.1779, -71.3235, 5.78674, 1.56 ) }
    dend_37 { pt3dadd( 20.5169, -72.6279, 5.77653, 1.56 ) }
    dend_37 { pt3dadd( 22.1756, -74.2396, 5.76407, 1.2 ) }
    dend_37 { pt3dadd( 23.1755, -75.2084, 5.75669, 1.2 ) }
    dend_37 { pt3dadd( 24.6724, -76.6472, 5.74613, 1.56 ) }
    dend_37 { pt3dadd( 26.8185, -78.751, 5.7292, 1.2 ) }
    dend_37 { pt3dadd( 27.7908, -79.7404, 5.71995, 1.8 ) }
    dend_37 { pt3dadd( 28.8186, -80.8014, 5.70951, 1.8 ) }
    dend_37 { pt3dadd( 30.8217, -82.923, 5.70632, 1.08 ) }
    dend_37 { pt3dadd( 32.2342, -84.4537, 5.71428, 1.68 ) }
    dend_37 { pt3dadd( 33.857, -86.2642, 5.70577, 1.32 ) }
    dend_37 { pt3dadd( 34.913, -87.4809, 5.68984, 1.32 ) }
    dend_37 { pt3dadd( 35.5626, -88.2419, 5.67459, 1.32 ) }
    dend_37 { pt3dadd( 37.0884, -90.0979, 5.62393, 1.08 ) }
    dend_37 { pt3dadd( 38.1428, -91.4513, 5.55242, 1.56 ) }
    dend_37 { pt3dadd( 39.7142, -93.6039, 5.44228, 1.2 ) }
    dend_37 { pt3dadd( 40.265, -94.3903, 5.40375, 1.2 ) }
    dend_37 { pt3dadd( 40.7872, -95.1474, 5.38095, 1.2 ) }
    dend_37 { pt3dadd( 41.8077, -96.6294, 5.3596, 1.68 ) }
    dend_37 { pt3dadd( 42.6581, -97.8602, 5.39571, 1.2 ) }
    dend_37 { pt3dadd( 43.7382, -99.3963, 5.5138, 0.96 ) }
    dend_37 { pt3dadd( 44.4466, -100.328, 5.62839, 0.96 ) }
    dend_37 { pt3dadd( 46.3196, -102.593, 5.94693, 0.84 ) }
    dend_37 { pt3dadd( 47.2704, -103.684, 6.12199, 0.84 ) }
    dend_37 { pt3dadd( 48.7536, -105.286, 6.4164, 1.44 ) }
    dend_37 { pt3dadd( 49.5387, -106.1, 6.58041, 1.44 ) }
    dend_37 { pt3dadd( 50.9608, -107.553, 6.83848, 1.44 ) }
    dend_37 { pt3dadd( 51.7854, -108.444, 6.98589, 0.96 ) }
    dend_37 { pt3dadd( 52.6852, -109.489, 7.12729, 1.44 ) }
    dend_37 { pt3dadd( 53.0043, -109.869, 7.16901, 1.44 ) }
    dend_37 { pt3dadd( 53.8153, -110.859, 7.23634, 1.44 ) }
    dend_37 { pt3dadd( 54.441, -111.66, 7.28348, 1.44 ) }
    dend_37 { pt3dadd( 55.5875, -113.163, 7.35001, 1.08 ) }
    dend_37 { pt3dadd( 56.6379, -114.496, 7.38791, 1.08 ) }
    dend_37 { pt3dadd( 57.2681, -115.231, 7.39615, 1.08 ) }
    dend_37 { pt3dadd( 58.5241, -116.576, 7.40139, 1.44 ) }
    dend_37 { pt3dadd( 59.1443, -117.194, 7.40689, 1.44 ) }
    dend_37 { pt3dadd( 60.7398, -118.779, 7.44036, 0.84 ) }
    dend_37 { pt3dadd( 61.7704, -119.824, 7.46922, 1.56 ) }
    dend_37 { pt3dadd( 63.5078, -121.66, 7.52771, 1.08 ) }
    dend_37 { pt3dadd( 64.3492, -122.568, 7.55885, 1.32 ) }
    dend_37 { pt3dadd( 66.8613, -125.06, 7.65575, 1.08 ) }
    dend_37 { pt3dadd( 68.1293, -126.227, 7.71853, 1.08 ) }
    dend_37 { pt3dadd( 69.2255, -127.172, 7.77992, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 70.8391, -128.462, 7.872, 1.08 ) }
    dend_37 { pt3dadd( 71.9441, -129.306, 7.89685, 1.08 ) }
    dend_37 { pt3dadd( 75.2807, -131.763, 7.85174, 1.44 ) }
    dend_37 { pt3dadd( 77.5649, -133.401, 7.73504, 1.08 ) }
    dend_37 { pt3dadd( 78.9791, -134.425, 7.62762, 1.08 ) }
    dend_37 { pt3dadd( 81.2451, -136.156, 7.43066, 1.08 ) }
    dend_37 { pt3dadd( 83.8222, -138.167, 7.1656, 0.72 ) }
    dend_37 { pt3dadd( 85.7769, -139.791, 6.91523, 1.32 ) }
    dend_37 { pt3dadd( 87.1561, -141.107, 6.66534, 0.84 ) }
    dend_37 { pt3dadd( 88.0067, -141.977, 6.46385, 0.84 ) }
    dend_37 { pt3dadd( 89.4415, -143.628, 6.07565, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.9554, -69.1952, 5.80207, 1.68 ) }
    dend_20 { pt3dadd( 17.275, -72.1219, 5.72983, 1.68 ) }
    dend_20 { pt3dadd( 17.6264, -74.7023, 5.67548, 1.68 ) }
    dend_20 { pt3dadd( 17.8697, -76.1798, 5.64814, 1.68 ) }
    dend_20 { pt3dadd( 18.6936, -80.4355, 5.57759, 1.32 ) }
    dend_20 { pt3dadd( 19.2941, -83.2607, 5.53039, 1.56 ) }
    dend_20 { pt3dadd( 20.0005, -86.9125, 5.44914, 1.56 ) }
    dend_20 { pt3dadd( 20.2661, -88.2879, 5.40857, 1.56 ) }
    dend_20 { pt3dadd( 20.5993, -90.402, 5.33329, 1.56 ) }
    dend_20 { pt3dadd( 20.9059, -92.9523, 5.22586, 1.56 ) }
    dend_20 { pt3dadd( 21.2481, -96.575, 5.05392, 1.2 ) }
    dend_20 { pt3dadd( 21.6551, -101.674, 4.79019, 1.56 ) }
    dend_20 { pt3dadd( 21.9091, -105.227, 4.62785, 1.2 ) }
    dend_20 { pt3dadd( 22.239, -109.692, 4.45843, 1.2 ) }
    dend_20 { pt3dadd( 22.4405, -112.279, 4.35045, 1.56 ) }
    dend_20 { pt3dadd( 22.6879, -115.259, 4.19318, 1.56 ) }
    dend_20 { pt3dadd( 22.9315, -117.659, 4.03246, 1.56 ) }
    dend_20 { pt3dadd( 23.4134, -121.353, 3.82751, 1.2 ) }
    dend_20 { pt3dadd( 23.8129, -124.566, 3.66892, 1.56 ) }
    dend_20 { pt3dadd( 24.225, -128.218, 3.5029, 1.44 ) }
    dend_20 { pt3dadd( 24.4587, -130.781, 3.38884, 1.44 ) }
    dend_20 { pt3dadd( 24.577, -132.626, 3.30536, 1.44 ) }
    dend_20 { pt3dadd( 24.9233, -138.84, 3.02833, 1.08 ) }
    dend_20 { pt3dadd( 25.122, -142.18, 2.80035, 1.08 ) }
    dend_20 { pt3dadd( 25.3458, -145.17, 2.53645, 1.44 ) }
    dend_20 { pt3dadd( 25.4753, -146.502, 2.40326, 1.44 ) }
    dend_20 { pt3dadd( 25.7107, -148.436, 2.16955, 1.44 ) }
    dend_20 { pt3dadd( 26.1179, -151.185, 1.72602, 1.44 ) }
    dend_20 { pt3dadd( 26.8566, -155.03, 0.821235, 1.32 ) }
    dend_20 { pt3dadd( 27.4979, -157.685, 0.143361, 1.32 ) }
    dend_20 { pt3dadd( 27.8715, -159.09, -0.233166, 1.32 ) }
    dend_20 { pt3dadd( 28.1611, -160.255, -0.536186, 1.32 ) }
    dend_20 { pt3dadd( 28.6085, -162.313, -1.02953, 1.32 ) }
    dend_20 { pt3dadd( 28.8193, -163.547, -1.28001, 1.32 ) }
    dend_20 { pt3dadd( 29.0493, -164.999, -1.51495, 1.32 ) }
    dend_20 { pt3dadd( 29.5244, -168.05, -2.02268, 1.8 ) }
    dend_20 { pt3dadd( 29.9552, -170.985, -2.5336, 1.8 ) }
    dend_20 { pt3dadd( 30.3106, -173.542, -2.90526, 1.8 ) }
    dend_20 { pt3dadd( 30.6326, -176.1, -3.21773, 1.8 ) }
    dend_20 { pt3dadd( 31.0832, -180.272, -3.64728, 1.56 ) }
    dend_20 { pt3dadd( 31.4601, -184.516, -4.02029, 1.56 ) }
    dend_20 { pt3dadd( 31.6009, -186.555, -4.16814, 1.56 ) }
    dend_20 { pt3dadd( 31.8514, -190.91, -4.39841, 1.32 ) }
    dend_20 { pt3dadd( 31.9468, -192.956, -4.46874, 1.32 ) }
    dend_20 { pt3dadd( 32.0592, -196.632, -4.52478, 1.8 ) }
    dend_20 { pt3dadd( 32.084, -199.863, -4.50073, 1.8 ) }
    dend_20 { pt3dadd( 32.1442, -203.173, -4.4354, 1.56 ) }
    dend_20 { pt3dadd( 32.3162, -206.285, -4.40368, 1.56 ) }
    dend_20 { pt3dadd( 32.5215, -208.372, -4.42248, 1.56 ) }
    dend_20 { pt3dadd( 32.725, -209.877, -4.43138, 1.56 ) }
    dend_20 { pt3dadd( 32.9551, -211.419, -4.45982, 1.56 ) }
    dend_20 { pt3dadd( 33.2858, -213.644, -4.54316, 1.56 ) }
    dend_20 { pt3dadd( 33.657, -216.384, -4.70086, 1.2 ) }
    dend_20 { pt3dadd( 33.9467, -219.011, -4.93153, 1.2 ) }
    dend_20 { pt3dadd( 34.1087, -220.822, -5.12605, 1.2 ) }
    dend_20 { pt3dadd( 34.3247, -224.202, -5.56255, 1.56 ) }
    dend_20 { pt3dadd( 34.4905, -227.451, -6.05022, 1.56 ) }
    dend_20 { pt3dadd( 34.589, -229.475, -6.38279, 1.56 ) }
    dend_20 { pt3dadd( 34.7707, -232.135, -6.82515, 1.56 ) }
    dend_20 { pt3dadd( 34.978, -234.662, -7.26309, 1.56 ) }
    dend_20 { pt3dadd( 35.4795, -239.636, -8.15053, 1.56 ) }
    dend_20 { pt3dadd( 36.193, -245.344, -9.20298, 1.32 ) }
    dend_20 { pt3dadd( 36.8322, -250.092, -10.1267, 1.32 ) }
    dend_20 { pt3dadd( 37.1797, -252.649, -10.6302, 0.84 ) }
    dend_20 { pt3dadd( 37.5341, -255.275, -11.1449, 1.32 ) }
    dend_20 { pt3dadd( 37.9656, -258.392, -11.7587, 1.08 ) }
    dend_20 { pt3dadd( 38.4241, -261.311, -12.3574, 1.44 ) }
    dend_20 { pt3dadd( 38.9153, -264.386, -13.0414, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.13395, 37.662, 16.383, 1.2 ) }
    dend_11 { pt3dadd( 5.14073, 41.0317, 17.2796, 1.2 ) }
    dend_11 { pt3dadd( 4.38923, 42.5698, 17.7779, 1.2 ) }
    dend_11 { pt3dadd( 3.83582, 43.9106, 18.2582, 1.2 ) }
    dend_11 { pt3dadd( 2.97433, 46.6593, 19.4332, 1.2 ) }
    dend_11 { pt3dadd( 2.63865, 48.1397, 20.1075, 1.2 ) }
    dend_11 { pt3dadd( 2.4223, 49.5625, 20.7692, 1.08 ) }
    dend_11 { pt3dadd( 2.35968, 51.8292, 21.9156, 1.56 ) }
    dend_11 { pt3dadd( 2.4128, 53.3536, 22.6932, 1.56 ) }
    dend_11 { pt3dadd( 2.72276, 56.7146, 24.3345, 1.2 ) }
    dend_11 { pt3dadd( 3.0261, 58.8784, 25.2997, 0.96 ) }
    dend_11 { pt3dadd( 3.34249, 61.248, 26.2241, 1.32 ) }
    dend_11 { pt3dadd( 3.43935, 62.3289, 26.6122, 1.32 ) }
    dend_11 { pt3dadd( 3.48889, 63.5334, 26.9922, 1.32 ) }
    dend_11 { pt3dadd( 3.51271, 65.329, 27.4593, 1.32 ) }
    dend_11 { pt3dadd( 3.50259, 66.3361, 27.6782, 1.32 ) }
    dend_11 { pt3dadd( 3.5075, 68.301, 28.1132, 1.2 ) }
    dend_11 { pt3dadd( 3.57731, 70.3443, 28.6261, 1.56 ) }
    dend_11 { pt3dadd( 3.64496, 71.709, 28.9901, 1.2 ) }
    dend_11 { pt3dadd( 3.80024, 73.8107, 29.598, 1.68 ) }
    dend_11 { pt3dadd( 4.14709, 76.6631, 30.4888, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 4.36293, 77.8042, 30.8665, 1.44 ) }
    dend_11 { pt3dadd( 4.93839, 79.6964, 31.5075, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.13395, 37.662, 16.383, 1.44 ) }
    dend_2 { pt3dadd( 7.08113, 42.3922, 15.9006, 1.44 ) }
    dend_2 { pt3dadd( 7.05691, 44.561, 15.6794, 1.44 ) }
    dend_2 { pt3dadd( 7.02891, 47.0682, 15.4237, 1.44 ) }
    dend_2 { pt3dadd( 6.99669, 49.9537, 15.1295, 1.44 ) }
    dend_2 { pt3dadd( 6.95767, 53.4472, 14.7732, 1.8 ) }
    dend_2 { pt3dadd( 6.92467, 56.4024, 14.4719, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -4.32353, -65.4428, 16.2126, 0.96 ) }
    dend_60 { pt3dadd( -4.87345, -68.4173, 16.3862, 0.96 ) }
    dend_60 { pt3dadd( -5.22077, -70.2505, 16.4093, 0.96 ) }
    dend_60 { pt3dadd( -5.41613, -71.4336, 16.4064, 0.96 ) }
    dend_60 { pt3dadd( -5.56315, -72.3312, 16.3974, 0.96 ) }
    dend_60 { pt3dadd( -5.72111, -73.3505, 16.3783, 0.96 ) }
    dend_60 { pt3dadd( -5.9558, -75.1865, 16.3632, 0.6 ) }
    dend_60 { pt3dadd( -6.03838, -75.7533, 16.3265, 0.6 ) }
    dend_60 { pt3dadd( -6.20891, -76.7657, 16.2705, 1.08 ) }
    dend_60 { pt3dadd( -6.63183, -78.8857, 16.1924, 0.72 ) }
    dend_60 { pt3dadd( -6.98149, -80.4802, 16.1475, 0.72 ) }
    dend_60 { pt3dadd( -7.55602, -82.9447, 16.0695, 0.72 ) }
    dend_60 { pt3dadd( -8.1597, -85.3074, 15.9513, 1.2 ) }
    dend_60 { pt3dadd( -8.52867, -86.5959, 15.8476, 1.08 ) }
    dend_60 { pt3dadd( -9.0372, -88.1386, 15.655, 0.48 ) }
    dend_60 { pt3dadd( -9.67552, -89.9399, 15.3497, 0.48 ) }
    dend_60 { pt3dadd( -10.414, -91.9305, 14.9388, 1.44 ) }
    dend_60 { pt3dadd( -10.9667, -93.4354, 14.5754, 0.84 ) }
    dend_60 { pt3dadd( -11.2285, -94.283, 14.3769, 1.08 ) }
    dend_60 { pt3dadd( -11.5898, -95.6452, 14.0626, 1.08 ) }
    dend_60 { pt3dadd( -12.0034, -97.5329, 13.6645, 1.44 ) }
    dend_60 { pt3dadd( -12.273, -98.9335, 13.4133, 0.84 ) }
    dend_60 { pt3dadd( -12.4532, -99.9619, 13.2902, 1.32 ) }
    dend_60 { pt3dadd( -12.7043, -101.683, 13.1844, 0.72 ) }
    dend_60 { pt3dadd( -12.8306, -102.539, 13.152, 0.72 ) }
    dend_60 { pt3dadd( -12.9741, -103.306, 13.132, 0.72 ) }
    dend_60 { pt3dadd( -13.3301, -104.438, 13.0462, 0.72 ) }
    dend_60 { pt3dadd( -13.9997, -105.693, 12.7958, 1.08 ) }
    dend_60 { pt3dadd( -14.6874, -106.733, 12.5179, 0.6 ) }
    dend_60 { pt3dadd( -15.6159, -107.834, 12.1035, 1.08 ) }
    dend_60 { pt3dadd( -16.3494, -108.554, 11.7576, 0.96 ) }
    dend_60 { pt3dadd( -17.621, -109.567, 11.1078, 0.84 ) }
    dend_60 { pt3dadd( -18.9587, -110.367, 10.3406, 0.84 ) }
    dend_60 { pt3dadd( -20.3595, -118.208, 9.29684, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -4.32353, -65.4428, 16.2126, 0.84 ) }
    dend_59 { pt3dadd( -5.37423, -67.3838, 16.5005, 0.84 ) }
    dend_59 { pt3dadd( -6.10535, -68.77, 16.6847, 0.84 ) }
    dend_59 { pt3dadd( -6.42086, -69.4268, 16.7651, 0.84 ) }
    dend_59 { pt3dadd( -7.48799, -71.8989, 17.091, 0.48 ) }
    dend_59 { pt3dadd( -8.02244, -73.2606, 17.2704, 0.48 ) }
    dend_59 { pt3dadd( -8.84612, -75.607, 17.554, 0.84 ) }
    dend_59 { pt3dadd( -9.26589, -77.0797, 17.6984, 0.84 ) }
    dend_59 { pt3dadd( -9.60557, -78.4769, 17.7862, 0.84 ) }
    dend_59 { pt3dadd( -10.2238, -81.5891, 17.9244, 0.84 ) }
    dend_59 { pt3dadd( -10.3938, -82.7602, 17.9591, 0.84 ) }
    dend_59 { pt3dadd( -10.6083, -84.8522, 18.0318, 0.6 ) }
    dend_59 { pt3dadd( -10.7226, -86.1859, 18.0531, 1.08 ) }
    dend_59 { pt3dadd( -10.9168, -87.9593, 18.0191, 1.08 ) }
    dend_59 { pt3dadd( -11.1014, -89.2533, 17.957, 1.56 ) }
    dend_59 { pt3dadd( -11.3676, -90.8048, 17.8144, 1.56 ) }
    dend_59 { pt3dadd( -11.606, -92.0281, 17.6933, 1.08 ) }
    dend_59 { pt3dadd( -12.0901, -94.2217, 17.47, 0.72 ) }
    dend_59 { pt3dadd( -12.4312, -95.6257, 17.3228, 1.32 ) }
    dend_59 { pt3dadd( -12.7531, -96.8169, 17.188, 1.32 ) }
    dend_59 { pt3dadd( -13.2633, -98.4825, 16.9612, 0.72 ) }
    dend_59 { pt3dadd( -13.8261, -100.21, 16.6849, 0.72 ) }
    dend_59 { pt3dadd( -17.7261, -110.46, 15.8934, 0.72 ) }
    dend_59 { pt3dadd( -20.8643, -120.993, 16.2322, 0.72 ) }
    dend_59 { pt3dadd( -25.0622, -131.141, 16.7864, 0.72 ) }
    dend_59 { pt3dadd( -29.2385, -141.299, 17.3052, 0.72 ) }
    dend_59 { pt3dadd( -33.0763, -151.42, 19.2383, 0.72 ) }
    dend_59 { pt3dadd( -36.3882, -161.172, 23.0916, 0.72 ) }
    dend_59 { pt3dadd( -38.2854, -171.597, 26.0277, 0.72 ) }
    dend_59 { pt3dadd( -37.9888, -182.403, 28.0372, 0.72 ) }
    dend_59 { pt3dadd( -38.0076, -193.04, 30.8224, 0.72 ) }
    dend_59 { pt3dadd( -38.3561, -203.906, 32.4721, 0.72 ) }
    dend_59 { pt3dadd( -38.8874, -214.848, 31.5244, 0.72 ) }
    dend_59 { pt3dadd( -39.4146, -225.743, 30.1403, 0.72 ) }
    dend_59 { pt3dadd( -39.3367, -236.731, 30.5324, 0.72 ) }
    dend_59 { pt3dadd( -39.4504, -247.578, 32.3347, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.27924, -68.6611, 10.2799, 1.08 ) }
    dend_57 { pt3dadd( 0.581888, -69.8573, 5.54052, 1.08 ) }
    dend_57 { pt3dadd( -0.4893, -70.9452, 2.2993, 1.08 ) }
    dend_57 { pt3dadd( -0.793916, -71.3375, 1.39891, 1.08 ) }
    dend_57 { pt3dadd( -1.12062, -71.7534, 0.620013, 1.08 ) }
    dend_57 { pt3dadd( -1.32407, -72.0316, 0.170682, 1.08 ) }
    dend_57 { pt3dadd( -2.20613, -73.2652, -1.60904, 1.44 ) }
    dend_57 { pt3dadd( -2.90493, -74.2802, -2.75428, 1.44 ) }
    dend_57 { pt3dadd( -3.74729, -75.4468, -3.85573, 1.44 ) }
    dend_57 { pt3dadd( -5.12854, -77.3104, -5.4451, 1.44 ) }
    dend_57 { pt3dadd( -5.65488, -78.0299, -5.98039, 1.44 ) }
    dend_57 { pt3dadd( -6.97719, -79.9358, -7.17051, 1.2 ) }
    dend_57 { pt3dadd( -9.00868, -82.9924, -8.71805, 1.2 ) }
    dend_57 { pt3dadd( -10.3535, -85.0778, -9.68424, 1.68 ) }
    dend_57 { pt3dadd( -11.8305, -87.3258, -10.7108, 0.72 ) }
    dend_57 { pt3dadd( -12.9443, -89.0127, -11.4279, 0.72 ) }
    dend_57 { pt3dadd( -14.316, -90.8498, -12.2539, 1.44 ) }
    dend_57 { pt3dadd( -15.4216, -92.1443, -12.87, 1.44 ) }
    dend_57 { pt3dadd( -17.9182, -94.4616, -14.3224, 0.96 ) }
    dend_57 { pt3dadd( -20.8456, -96.4631, -16.2641, 1.68 ) }
    dend_57 { pt3dadd( -21.9976, -97.0788, -17.082, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( -24.7646, -98.3097, -19.1941, 1.68 ) }
    dend_57 { pt3dadd( -26.9574, -99.1836, -20.9412, 1.68 ) }
    dend_57 { pt3dadd( -30.4228, -100.535, -23.7539, 1.68 ) }
    dend_57 { pt3dadd( -34.1811, -102.05, -26.7701, 1.68 ) }
    dend_57 { pt3dadd( -36.9417, -103.213, -28.9511, 1.2 ) }
    dend_57 { pt3dadd( -39.7255, -104.505, -31.1158, 0.84 ) }
    dend_57 { pt3dadd( -40.8812, -105.147, -31.9884, 1.44 ) }
    dend_57 { pt3dadd( -41.9099, -105.832, -32.7301, 0.72 ) }
    dend_57 { pt3dadd( -44.1547, -107.56, -34.2221, 1.32 ) }
    dend_57 { pt3dadd( -47.5091, -110.476, -36.3111, 0.6 ) }
    dend_57 { pt3dadd( -48.2963, -111.21, -36.7966, 0.6 ) }
    dend_57 { pt3dadd( -49.3459, -112.212, -37.408, 0.96 ) }
    dend_57 { pt3dadd( -50.2567, -113.051, -37.9493, 0.96 ) }
    dend_57 { pt3dadd( -53.9771, -116.349, -40.3174, 0.6 ) }
    dend_57 { pt3dadd( -55.2552, -117.572, -41.2281, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.27924, -68.6611, 10.2799, 1.32 ) }
    dend_44 { pt3dadd( 2.26276, -68.773, 10.2689, 1.32 ) }
    dend_44 { pt3dadd( 1.90401, -71.7186, 9.95062, 1.32 ) }
    dend_44 { pt3dadd( 1.55787, -75.1526, 9.56826, 1.68 ) }
    dend_44 { pt3dadd( 1.36396, -77.3412, 9.34096, 2.04 ) }
    dend_44 { pt3dadd( 1.20049, -79.2806, 9.15931, 1.68 ) }
    dend_44 { pt3dadd( 1.0722, -80.8815, 9.02515, 1.68 ) }
    dend_44 { pt3dadd( 1.00868, -81.8502, 8.95763, 1.68 ) }
    dend_44 { pt3dadd( 0.946349, -83.1461, 8.88993, 1.68 ) }
    dend_44 { pt3dadd( 0.852082, -85.112, 8.83803, 2.04 ) }
    dend_44 { pt3dadd( 0.798611, -86.2397, 8.85612, 1.68 ) }
    dend_44 { pt3dadd( 0.712795, -87.702, 8.93038, 1.68 ) }
    dend_44 { pt3dadd( 0.63042, -89.2737, 9.0508, 1.68 ) }
    dend_44 { pt3dadd( 0.562994, -91.0581, 9.20052, 1.56 ) }
    dend_44 { pt3dadd( 0.525317, -92.7131, 9.33628, 1.56 ) }
    dend_44 { pt3dadd( 0.497395, -96.0436, 9.5892, 1.56 ) }
    dend_44 { pt3dadd( 0.505065, -98.7594, 9.77918, 1.8 ) }
    dend_44 { pt3dadd( 0.555533, -103.107, 10.0564, 1.56 ) }
    dend_44 { pt3dadd( 0.611777, -107.46, 10.309, 1.44 ) }
    dend_44 { pt3dadd( 0.629136, -109.311, 10.4102, 1.92 ) }
    dend_44 { pt3dadd( 0.629677, -111.552, 10.5243, 1.8 ) }
    dend_44 { pt3dadd( 0.596199, -113.276, 10.6133, 1.68 ) }
    dend_44 { pt3dadd( 0.498472, -115.421, 10.7476, 2.04 ) }
    dend_44 { pt3dadd( -0.266208, -124.155, 11.2896, 1.8 ) }
    dend_44 { pt3dadd( -0.598228, -126.807, 11.4606, 1.8 ) }
    dend_44 { pt3dadd( -0.81159, -128.242, 11.553, 1.68 ) }
    dend_44 { pt3dadd( -1.04391, -129.593, 11.6407, 1.68 ) }
    dend_44 { pt3dadd( -1.76543, -133.324, 11.8796, 1.68 ) }
    dend_44 { pt3dadd( -2.23815, -135.35, 11.9645, 1.68 ) }
    dend_44 { pt3dadd( -2.69388, -137.044, 11.9858, 1.68 ) }
    dend_44 { pt3dadd( -3.29136, -139.278, 11.9899, 1.32 ) }
    dend_44 { pt3dadd( -3.98139, -141.961, 11.9787, 1.32 ) }
    dend_44 { pt3dadd( -4.66986, -144.765, 11.9579, 1.32 ) }
    dend_44 { pt3dadd( -5.69594, -149.244, 11.9073, 1.32 ) }
    dend_44 { pt3dadd( -6.33724, -152.28, 11.8892, 1.8 ) }
    dend_44 { pt3dadd( -6.74576, -154.307, 11.9, 1.8 ) }
    dend_44 { pt3dadd( -7.05425, -155.936, 11.9313, 1.8 ) }
    dend_44 { pt3dadd( -7.29594, -157.369, 11.9853, 1.8 ) }
    dend_44 { pt3dadd( -7.67419, -160.035, 12.1689, 1.68 ) }
    dend_44 { pt3dadd( -8.15492, -163.868, 12.48, 2.04 ) }
    dend_44 { pt3dadd( -8.53318, -166.894, 12.6614, 2.04 ) }
    dend_44 { pt3dadd( -8.84115, -169.381, 12.7869, 1.8 ) }
    dend_44 { pt3dadd( -9.21727, -172.543, 12.9177, 1.56 ) }
    dend_44 { pt3dadd( -9.58076, -175.756, 13.0264, 1.92 ) }
    dend_44 { pt3dadd( -10.0691, -179.831, 13.1704, 1.56 ) }
    dend_44 { pt3dadd( -10.4827, -182.999, 13.2791, 1.32 ) }
    dend_44 { pt3dadd( -10.9983, -186.571, 13.3767, 1.32 ) }
    dend_44 { pt3dadd( -11.2532, -188.266, 13.4353, 1.32 ) }
    dend_44 { pt3dadd( -11.4717, -189.746, 13.4943, 1.2 ) }
    dend_44 { pt3dadd( -11.9797, -193.169, 13.6869, 1.68 ) }
    dend_44 { pt3dadd( -12.378, -196.328, 14.0022, 1.68 ) }
    dend_44 { pt3dadd( -12.651, -198.354, 14.2489, 1.68 ) }
    dend_44 { pt3dadd( -12.8953, -200.077, 14.4595, 1.68 ) }
    dend_44 { pt3dadd( -13.18, -201.992, 14.713, 1.68 ) }
    dend_44 { pt3dadd( -13.2864, -202.808, 14.8174, 1.68 ) }
    dend_44 { pt3dadd( -13.6418, -208.081, 15.3502, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 89.4415, -143.628, 6.07565, 0.84 ) }
    dend_39 { pt3dadd( 91.7106, -143.17, 7.06918, 0.84 ) }
    dend_39 { pt3dadd( 93.4852, -142.783, 7.91739, 0.84 ) }
    dend_39 { pt3dadd( 94.8653, -142.483, 8.62633, 1.32 ) }
    dend_39 { pt3dadd( 97.1236, -142.016, 9.88651, 1.32 ) }
    dend_39 { pt3dadd( 98.8945, -141.663, 10.9479, 1.68 ) }
    dend_39 { pt3dadd( 101.092, -141.174, 12.3305, 1.2 ) }
    dend_39 { pt3dadd( 102.233, -140.922, 13.1437, 0.96 ) }
    dend_39 { pt3dadd( 103.693, -140.525, 14.3195, 1.44 ) }
    dend_39 { pt3dadd( 105.412, -139.923, 15.848, 0.84 ) }
    dend_39 { pt3dadd( 106.202, -139.547, 16.6604, 0.84 ) }
    dend_39 { pt3dadd( 106.943, -139.073, 17.5957, 0.84 ) }
    dend_39 { pt3dadd( 107.392, -138.632, 18.3887, 0.84 ) }
    dend_39 { pt3dadd( 107.861, -138.005, 19.4006, 0.84 ) }
    dend_39 { pt3dadd( 108.203, -137.291, 20.4209, 0.84 ) }
    dend_39 { pt3dadd( 108.477, -136.303, 21.688, 1.08 ) }
    dend_39 { pt3dadd( 108.731, -135.13, 23.1794, 0.72 ) }
    dend_39 { pt3dadd( 109.028, -133.698, 25.1946, 1.2 ) }
    dend_39 { pt3dadd( 116.792, -130.322, 29.5196, 1.2 ) }
    dend_39 { pt3dadd( 124.372, -125.752, 32.9901, 1.2 ) }
    dend_39 { pt3dadd( 131.714, -120.235, 35.45, 1.2 ) }
    dend_39 { pt3dadd( 137.467, -113.684, 39.2407, 1.2 ) }
    dend_39 { pt3dadd( 144.296, -108.276, 43.0491, 1.2 ) }
    dend_39 { pt3dadd( 150.444, -102.094, 46.8391, 1.2 ) }
    dend_39 { pt3dadd( 157.231, -95.7334, 48.8031, 1.2 ) }
    dend_39 { pt3dadd( 163.702, -89.2442, 51.3343, 1.2 ) }
    dend_39 { pt3dadd( 169.19, -82.0896, 54.3476, 1.2 ) }
    dend_39 { pt3dadd( 174.175, -74.1817, 56.0778, 1.2 ) }
    dend_39 { pt3dadd( 178.212, -66.0431, 58.8796, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 180.962, -57.1749, 60.924, 1.2 ) }
    dend_39 { pt3dadd( 183.709, -48.33, 63.07, 1.2 ) }
    dend_39 { pt3dadd( 186.537, -39.4193, 64.7967, 1.2 ) }
    dend_39 { pt3dadd( 190.683, -31.3617, 67.6736, 1.2 ) }
    dend_39 { pt3dadd( 194.704, -23.1132, 70.1593, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 89.4415, -143.628, 6.07565, 0.84 ) }
    dend_38 { pt3dadd( 90.521, -145.501, 6.35793, 0.84 ) }
    dend_38 { pt3dadd( 91.6893, -147.45, 6.63795, 0.6 ) }
    dend_38 { pt3dadd( 92.4492, -148.732, 6.80278, 1.32 ) }
    dend_38 { pt3dadd( 93.6443, -150.747, 7.06199, 0.84 ) }
    dend_38 { pt3dadd( 94.4172, -152.05, 7.22963, 0.72 ) }
    dend_38 { pt3dadd( 95.0328, -153.088, 7.36313, 1.08 ) }
    dend_38 { pt3dadd( 95.8055, -154.447, 7.51644, 0.72 ) }
    dend_38 { pt3dadd( 96.5255, -155.745, 7.72146, 1.2 ) }
    dend_38 { pt3dadd( 101.503, -162.541, 8.27081, 1.2 ) }
    dend_38 { pt3dadd( 106.74, -168.916, 10.0629, 1.2 ) }
    dend_38 { pt3dadd( 111.775, -174.83, 13.37, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 38.9153, -264.386, -13.0414, 0.96 ) }
    dend_36 { pt3dadd( 40.4252, -267.035, -10.8039, 0.96 ) }
    dend_36 { pt3dadd( 41.24, -268.79, -9.41281, 0.96 ) }
    dend_36 { pt3dadd( 42.6587, -272.181, -6.77429, 1.44 ) }
    dend_36 { pt3dadd( 43.6815, -274.642, -4.75304, 0.96 ) }
    dend_36 { pt3dadd( 44.4774, -276.579, -3.16447, 0.96 ) }
    dend_36 { pt3dadd( 45.1281, -278.209, -1.86378, 0.96 ) }
    dend_36 { pt3dadd( 45.6732, -279.7, -0.725492, 0.96 ) }
    dend_36 { pt3dadd( 46.2533, -281.608, 0.72392, 1.08 ) }
    dend_36 { pt3dadd( 46.9304, -284.233, 2.5793, 1.08 ) }
    dend_36 { pt3dadd( 47.2734, -285.545, 3.47121, 1.08 ) }
    dend_36 { pt3dadd( 47.6237, -286.669, 4.22433, 1.08 ) }
    dend_36 { pt3dadd( 48.4055, -289.407, 6.12299, 1.08 ) }
    dend_36 { pt3dadd( 48.9929, -292.159, 7.97121, 0.84 ) }
    dend_36 { pt3dadd( 49.2032, -294.456, 9.37365, 1.2 ) }
    dend_36 { pt3dadd( 49.1454, -296.279, 10.3283, 1.2 ) }
    dend_36 { pt3dadd( 48.997, -297.786, 11.0764, 1.2 ) }
    dend_36 { pt3dadd( 48.4764, -301.481, 12.8849, 0.96 ) }
    dend_36 { pt3dadd( 48.1316, -303.427, 13.8023, 0.96 ) }
    dend_36 { pt3dadd( 47.8836, -305.225, 14.6667, 0.96 ) }
    dend_36 { pt3dadd( 47.6272, -307.519, 15.7388, 0.72 ) }
    dend_36 { pt3dadd( 47.474, -308.949, 16.3486, 0.72 ) }
    dend_36 { pt3dadd( 47.3608, -311.005, 17.2173, 0.72 ) }
    dend_36 { pt3dadd( 47.5836, -313.566, 18.294, 1.2 ) }
    dend_36 { pt3dadd( 48.2178, -317.343, 20.1711, 0.84 ) }
    dend_36 { pt3dadd( 48.5804, -318.911, 21.0555, 0.84 ) }
    dend_36 { pt3dadd( 48.9641, -320.569, 22.0717, 0.84 ) }
    dend_36 { pt3dadd( 50.7525, -330.26, 28.2593, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 38.9153, -264.386, -13.0414, 1.32 ) }
    dend_21 { pt3dadd( 39.4188, -266.992, -12.9463, 1.32 ) }
    dend_21 { pt3dadd( 39.7056, -268.605, -12.9314, 1.32 ) }
    dend_21 { pt3dadd( 39.9591, -270.176, -12.9483, 1.32 ) }
    dend_21 { pt3dadd( 40.1207, -271.346, -12.9864, 1.32 ) }
    dend_21 { pt3dadd( 40.4782, -273.837, -13.071, 1.68 ) }
    dend_21 { pt3dadd( 40.8114, -275.914, -13.1258, 1.68 ) }
    dend_21 { pt3dadd( 41.0967, -277.427, -13.2146, 1.68 ) }
    dend_21 { pt3dadd( 41.3818, -278.851, -13.3072, 1.68 ) }
    dend_21 { pt3dadd( 41.8758, -281.247, -13.4785, 1.2 ) }
    dend_21 { pt3dadd( 42.2118, -282.822, -13.6007, 1.2 ) }
    dend_21 { pt3dadd( 42.76, -285.198, -13.7794, 1.2 ) }
    dend_21 { pt3dadd( 43.4551, -287.893, -13.9894, 1.56 ) }
    dend_21 { pt3dadd( 43.8311, -289.245, -14.0953, 1.56 ) }
    dend_21 { pt3dadd( 44.1693, -290.409, -14.1872, 1.56 ) }
    dend_21 { pt3dadd( 44.5442, -291.633, -14.2786, 1.56 ) }
    dend_21 { pt3dadd( 45.1146, -293.769, -14.3738, 1.44 ) }
    dend_21 { pt3dadd( 45.6685, -295.936, -14.4503, 1.44 ) }
    dend_21 { pt3dadd( 45.9177, -296.923, -14.4486, 1.44 ) }
    dend_21 { pt3dadd( 46.2234, -298.122, -14.4316, 1.44 ) }
    dend_21 { pt3dadd( 46.5786, -299.502, -14.3796, 1.44 ) }
    dend_21 { pt3dadd( 47.1599, -301.747, -14.1944, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.93839, 79.6964, 31.5075, 1.44 ) }
    dend_17 { pt3dadd( 3.28778, 77.7249, 31.6457, 1.44 ) }
    dend_17 { pt3dadd( 2.63978, 77.0488, 31.7366, 1.2 ) }
    dend_17 { pt3dadd( 1.24438, 75.8647, 31.9317, 0.96 ) }
    dend_17 { pt3dadd( -0.0112708, 74.7993, 32.1073, 0.96 ) }
    dend_17 { pt3dadd( -0.87652, 74.0651, 32.2282, 0.96 ) }
    dend_17 { pt3dadd( -1.79739, 73.2837, 32.357, 0.96 ) }
    dend_17 { pt3dadd( -2.72462, 72.4061, 32.3731, 0.96 ) }
    dend_17 { pt3dadd( -4.48613, 70.9085, 32.4651, 1.2 ) }
    dend_17 { pt3dadd( -13.606, 62.6826, 31.5097, 1.2 ) }
    dend_17 { pt3dadd( -21.8053, 53.4892, 31.5774, 1.2 ) }
    dend_17 { pt3dadd( -30.0182, 44.394, 30.3219, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.93839, 79.6964, 31.5075, 0.96 ) }
    dend_12 { pt3dadd( 5.38606, 78.9491, 31.6332, 0.96 ) }
    dend_12 { pt3dadd( 5.90114, 78.0893, 31.7779, 0.96 ) }
    dend_12 { pt3dadd( 6.28424, 77.4497, 31.8854, 1.2 ) }
    dend_12 { pt3dadd( 6.49633, 77.0957, 31.945, 1.2 ) }
    dend_12 { pt3dadd( 7.19633, 75.9271, 32.1415, 0.84 ) }
    dend_12 { pt3dadd( 7.51011, 75.4033, 32.2296, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.92467, 56.4024, 14.4719, 1.44 ) }
    dend_8 { pt3dadd( 7.78246, 58.7008, 14.8801, 1.44 ) }
    dend_8 { pt3dadd( 8.43469, 60.5059, 15.1788, 1.44 ) }
    dend_8 { pt3dadd( 8.76458, 61.4516, 15.3337, 1.44 ) }
    dend_8 { pt3dadd( 9.5011, 63.6499, 15.7302, 1.44 ) }
    dend_8 { pt3dadd( 10.3883, 66.2518, 16.2568, 1.32 ) }
    dend_8 { pt3dadd( 10.9506, 67.7436, 16.5139, 1.32 ) }
    dend_8 { pt3dadd( 11.6731, 69.3829, 16.7379, 1.32 ) }
    dend_8 { pt3dadd( 12.3312, 70.7063, 16.8937, 1.56 ) }
    dend_8 { pt3dadd( 13.0375, 71.9639, 17.0071, 1.56 ) }
    dend_8 { pt3dadd( 14.0677, 73.583, 17.1092, 1.32 ) }
    dend_8 { pt3dadd( 15.9904, 76.2617, 17.2504, 1.32 ) }
    dend_8 { pt3dadd( 17.2237, 77.8045, 17.3209, 1.32 ) }
    dend_8 { pt3dadd( 18.3013, 79.0461, 17.299, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 19.5098, 80.3729, 17.1993, 1.56 ) }
    dend_8 { pt3dadd( 20.1917, 81.1359, 17.0944, 1.56 ) }
    dend_8 { pt3dadd( 21.8464, 83.0371, 16.7585, 1.2 ) }
    dend_8 { pt3dadd( 22.7251, 84.0699, 16.5817, 1.2 ) }
    dend_8 { pt3dadd( 24.4416, 86.1296, 16.188, 1.44 ) }
    dend_8 { pt3dadd( 25.3481, 87.2575, 15.9312, 1.92 ) }
    dend_8 { pt3dadd( 27.0898, 89.6046, 15.484, 1.56 ) }
    dend_8 { pt3dadd( 28.1692, 91.1649, 15.2416, 1.32 ) }
    dend_8 { pt3dadd( 29.7236, 93.6146, 14.9353, 1.32 ) }
    dend_8 { pt3dadd( 30.9503, 95.6908, 14.8044, 1.32 ) }
    dend_8 { pt3dadd( 32.1478, 97.8617, 14.8266, 1.56 ) }
    dend_8 { pt3dadd( 33.7023, 101.025, 15.0085, 1.2 ) }
    dend_8 { pt3dadd( 34.1706, 102.148, 15.1389, 1.2 ) }
    dend_8 { pt3dadd( 34.4181, 102.948, 15.2625, 1.2 ) }
    dend_8 { pt3dadd( 34.634, 104.028, 15.4794, 0.96 ) }
    dend_8 { pt3dadd( 34.7238, 104.726, 15.6461, 1.32 ) }
    dend_8 { pt3dadd( 34.8746, 106.777, 16.1717, 0.96 ) }
    dend_8 { pt3dadd( 34.9117, 107.785, 16.3638, 0.96 ) }
    dend_8 { pt3dadd( 34.9471, 108.808, 16.5326, 0.96 ) }
    dend_8 { pt3dadd( 35.0833, 110.746, 16.8603, 1.32 ) }
    dend_8 { pt3dadd( 35.1933, 111.691, 17.0249, 1.32 ) }
    dend_8 { pt3dadd( 35.4576, 113.118, 17.3201, 0.84 ) }
    dend_8 { pt3dadd( 35.8569, 114.586, 17.6932, 1.08 ) }
    dend_8 { pt3dadd( 36.3439, 116.012, 18.1552, 1.08 ) }
    dend_8 { pt3dadd( 37.1386, 118.032, 18.9096, 0.84 ) }
    dend_8 { pt3dadd( 37.5496, 119.012, 19.2398, 1.2 ) }
    dend_8 { pt3dadd( 38.0401, 120.097, 19.6393, 0.84 ) }
    dend_8 { pt3dadd( 38.6139, 121.253, 20.1103, 1.2 ) }
    dend_8 { pt3dadd( 39.5165, 122.994, 20.8773, 0.96 ) }
    dend_8 { pt3dadd( 39.8151, 123.596, 21.1439, 0.96 ) }
    dend_8 { pt3dadd( 40.9588, 126.437, 22.1443, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.92467, 56.4024, 14.4719, 1.08 ) }
    dend_3 { pt3dadd( 8.23245, 58.2486, 14.5154, 1.08 ) }
    dend_3 { pt3dadd( 9.79197, 60.5452, 14.5575, 1.08 ) }
    dend_3 { pt3dadd( 10.2628, 61.2526, 14.5683, 1.08 ) }
    dend_3 { pt3dadd( 10.7133, 61.9436, 14.5413, 1.08 ) }
    dend_3 { pt3dadd( 11.513, 63.1702, 14.4935, 1.32 ) }
    dend_3 { pt3dadd( 12.7011, 64.9925, 14.4224, 0.96 ) }
    dend_3 { pt3dadd( 13.4502, 66.1312, 14.3437, 1.44 ) }
    dend_3 { pt3dadd( 13.9577, 66.92, 14.2704, 1.44 ) }
    dend_3 { pt3dadd( 14.9666, 68.552, 14.0916, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -13.6418, -208.081, 15.3502, 1.08 ) }
    dend_52 { pt3dadd( -13.595, -210.342, 16.2775, 1.08 ) }
    dend_52 { pt3dadd( -13.5665, -211.827, 16.9013, 1.08 ) }
    dend_52 { pt3dadd( -13.5775, -213.936, 17.8248, 1.08 ) }
    dend_52 { pt3dadd( -13.5955, -215.228, 18.3989, 1.08 ) }
    dend_52 { pt3dadd( -13.6362, -216.728, 19.0905, 1.08 ) }
    dend_52 { pt3dadd( -13.6655, -217.752, 19.5938, 1.08 ) }
    dend_52 { pt3dadd( -13.7031, -218.396, 19.9271, 1.08 ) }
    dend_52 { pt3dadd( -13.8108, -219.335, 20.4682, 1.08 ) }
    dend_52 { pt3dadd( -14.1187, -220.943, 21.4358, 0.84 ) }
    dend_52 { pt3dadd( -14.313, -221.76, 21.9514, 0.84 ) }
    dend_52 { pt3dadd( -14.6566, -222.909, 22.6876, 1.32 ) }
    dend_52 { pt3dadd( -15.2046, -224.459, 23.6857, 1.32 ) }
    dend_52 { pt3dadd( -16.0317, -226.646, 25.0664, 0.96 ) }
    dend_52 { pt3dadd( -16.6192, -228.144, 25.9583, 0.96 ) }
    dend_52 { pt3dadd( -17.031, -229.246, 26.5758, 1.2 ) }
    dend_52 { pt3dadd( -17.764, -231.433, 27.6963, 1.2 ) }
    dend_52 { pt3dadd( -18.1993, -232.942, 28.4042, 1.44 ) }
    dend_52 { pt3dadd( -18.6216, -234.752, 29.2014, 1.2 ) }
    dend_52 { pt3dadd( -18.9672, -236.676, 29.9622, 1.2 ) }
    dend_52 { pt3dadd( -19.3563, -239.242, 30.9303, 1.2 ) }
    dend_52 { pt3dadd( -19.4764, -240.175, 31.2629, 1.2 ) }
    dend_52 { pt3dadd( -19.5528, -241.711, 31.7522, 1.2 ) }
    dend_52 { pt3dadd( -19.5334, -242.581, 32.0009, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.6418, -208.081, 15.3502, 0.96 ) }
    dend_45 { pt3dadd( -14.6072, -212.43, 14.1997, 0.96 ) }
    dend_45 { pt3dadd( -15.2282, -215.201, 13.5033, 1.32 ) }
    dend_45 { pt3dadd( -15.4496, -216.306, 13.3665, 1.32 ) }
    dend_45 { pt3dadd( -15.7241, -217.677, 13.1968, 1.32 ) }
    dend_45 { pt3dadd( -16.3411, -220.759, 12.8155, 1.56 ) }
    dend_45 { pt3dadd( -16.7987, -223.044, 12.5326, 1.56 ) }
    dend_45 { pt3dadd( -17.1333, -224.73, 12.376, 1.56 ) }
    dend_45 { pt3dadd( -17.7693, -229.383, 12.3653, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 47.1599, -301.747, -14.1944, 0.96 ) }
    dend_35 { pt3dadd( 46.9254, -303.811, -13.5857, 0.96 ) }
    dend_35 { pt3dadd( 46.6808, -305.667, -13.1043, 0.96 ) }
    dend_35 { pt3dadd( 46.3762, -307.521, -12.6373, 1.44 ) }
    dend_35 { pt3dadd( 45.654, -311.634, -11.5643, 1.08 ) }
    dend_35 { pt3dadd( 45.3342, -313.548, -11.0787, 1.08 ) }
    dend_35 { pt3dadd( 44.9305, -316.465, -10.3656, 1.08 ) }
    dend_35 { pt3dadd( 44.811, -317.831, -10.0164, 1.08 ) }
    dend_35 { pt3dadd( 44.6489, -321.354, -9.13442, 0.84 ) }
    dend_35 { pt3dadd( 44.6416, -324.242, -8.48038, 0.84 ) }
    dend_35 { pt3dadd( 44.7246, -326.062, -8.16656, 0.84 ) }
    dend_35 { pt3dadd( 44.9097, -328.106, -7.82109, 0.84 ) }
    dend_35 { pt3dadd( 45.1491, -330.014, -7.51757, 0.84 ) }
    dend_35 { pt3dadd( 45.3483, -331.576, -7.3228, 0.84 ) }
    dend_35 { pt3dadd( 45.4708, -332.682, -7.26767, 0.84 ) }
    dend_35 { pt3dadd( 45.5709, -333.95, -7.25865, 0.84 ) }
    dend_35 { pt3dadd( 45.558, -335.644, -7.271, 0.84 ) }
    dend_35 { pt3dadd( 45.3543, -337.13, -7.3294, 0.84 ) }
    dend_35 { pt3dadd( 45.0328, -338.394, -7.43193, 0.84 ) }
    dend_35 { pt3dadd( 44.2716, -340.606, -7.6278, 0.6 ) }
    dend_35 { pt3dadd( 41.9262, -351.952, -8.01033, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 47.1599, -301.747, -14.1944, 0.84 ) }
    dend_22 { pt3dadd( 47.4792, -303.762, -14.3967, 0.84 ) }
    dend_22 { pt3dadd( 47.7089, -305.206, -14.5776, 0.84 ) }
    dend_22 { pt3dadd( 47.9621, -306.738, -14.8214, 0.84 ) }
    dend_22 { pt3dadd( 48.4549, -309.896, -15.4163, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 48.5587, -310.632, -15.5733, 1.2 ) }
    dend_22 { pt3dadd( 48.9875, -313.905, -16.33, 0.96 ) }
    dend_22 { pt3dadd( 49.3309, -316.649, -17.05, 1.32 ) }
    dend_22 { pt3dadd( 49.7891, -320.128, -17.9643, 1.08 ) }
    dend_22 { pt3dadd( 50.0965, -322.086, -18.4682, 1.08 ) }
    dend_22 { pt3dadd( 50.3498, -323.528, -18.8234, 1.08 ) }
    dend_22 { pt3dadd( 50.5871, -324.604, -19.0477, 1.08 ) }
    dend_22 { pt3dadd( 50.7724, -325.34, -19.171, 1.08 ) }
    dend_22 { pt3dadd( 51.5541, -328.234, -19.5721, 0.84 ) }
    dend_22 { pt3dadd( 52.658, -331.981, -19.9625, 1.2 ) }
    dend_22 { pt3dadd( 52.9959, -333.037, -20.0448, 1.2 ) }
    dend_22 { pt3dadd( 54.8381, -338.516, -20.3738, 0.84 ) }
    dend_22 { pt3dadd( 55.8822, -341.604, -20.5421, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.51011, 75.4033, 32.2296, 0.72 ) }
    dend_14 { pt3dadd( 7.14774, 74.6507, 32.0551, 0.72 ) }
    dend_14 { pt3dadd( 6.83519, 74.0015, 31.9046, 0.48 ) }
    dend_14 { pt3dadd( 6.45842, 73.219, 31.7232, 0.96 ) }
    dend_14 { pt3dadd( 6.19132, 72.6642, 31.5946, 0.96 ) }
    dend_14 { pt3dadd( 3.45553, 67.4916, 29.7676, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 7.51011, 75.4033, 32.2296, 0.72 ) }
    dend_13 { pt3dadd( 8.00279, 73.675, 32.3873, 0.72 ) }
    dend_13 { pt3dadd( 8.25533, 72.4585, 32.5157, 1.08 ) }
    dend_13 { pt3dadd( 8.63437, 70.3627, 32.6511, 0.72 ) }
    dend_13 { pt3dadd( 8.80812, 68.849, 32.6465, 0.72 ) }
    dend_13 { pt3dadd( 8.93079, 66.6939, 32.4954, 0.72 ) }
    dend_13 { pt3dadd( 9.04019, 64.9265, 32.3128, 1.2 ) }
    dend_13 { pt3dadd( 9.03196, 64.0886, 32.2171, 1.2 ) }
    dend_13 { pt3dadd( 8.91443, 62.2706, 31.9788, 0.84 ) }
    dend_13 { pt3dadd( 8.68074, 60.0184, 31.6097, 0.84 ) }
    dend_13 { pt3dadd( 8.51796, 58.1898, 31.1072, 1.32 ) }
    dend_13 { pt3dadd( 8.42674, 57.0087, 30.6144, 1.08 ) }
    dend_13 { pt3dadd( 7.6363, 45.5979, 29.2351, 1.08 ) }
    dend_13 { pt3dadd( 6.16914, 34.218, 28.1968, 1.08 ) }
    dend_13 { pt3dadd( 4.40329, 23.204, 25.3144, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.9588, 126.437, 22.1443, 0.6 ) }
    dend_10 { pt3dadd( 41.4758, 127.231, 22.4504, 0.6 ) }
    dend_10 { pt3dadd( 42.0038, 128.042, 22.7629, 0.6 ) }
    dend_10 { pt3dadd( 42.6891, 129.094, 23.1686, 0.6 ) }
    dend_10 { pt3dadd( 43.7961, 130.794, 23.8238, 0.6 ) }
    dend_10 { pt3dadd( 44.5141, 131.897, 24.2489, 0.6 ) }
    dend_10 { pt3dadd( 45.2446, 133.019, 24.6813, 0.48 ) }
    dend_10 { pt3dadd( 48.5722, 140.708, 25.8429, 0.48 ) }
    dend_10 { pt3dadd( 52.4459, 148.215, 26.277, 0.48 ) }
    dend_10 { pt3dadd( 56.5687, 155.345, 28.2026, 0.48 ) }
    dend_10 { pt3dadd( 62.1288, 161.659, 29.0754, 0.48 ) }
    dend_10 { pt3dadd( 67.5127, 168.181, 29.2042, 0.48 ) }
    dend_10 { pt3dadd( 73.3059, 174.267, 30.1787, 0.48 ) }
    dend_10 { pt3dadd( 77.6984, 181.495, 30.0958, 0.48 ) }
    dend_10 { pt3dadd( 80.4818, 189.329, 28.5389, 0.48 ) }
    dend_10 { pt3dadd( 82.2523, 197.579, 27.9465, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.9588, 126.437, 22.1443, 0.84 ) }
    dend_9 { pt3dadd( 42.0542, 128.506, 22.0516, 0.84 ) }
    dend_9 { pt3dadd( 42.6723, 129.674, 21.9993, 0.84 ) }
    dend_9 { pt3dadd( 43.3312, 130.919, 21.9436, 0.36 ) }
    dend_9 { pt3dadd( 43.9573, 132.101, 21.8906, 0.6 ) }
    dend_9 { pt3dadd( 44.4633, 133.057, 21.8478, 0.6 ) }
    dend_9 { pt3dadd( 45.3639, 134.758, 21.7716, 0.6 ) }
    dend_9 { pt3dadd( 49.5797, 141.706, 20.3682, 0.6 ) }
    dend_9 { pt3dadd( 53.3969, 148.723, 18.3166, 0.6 ) }
    dend_9 { pt3dadd( 58.1626, 155.075, 16.0891, 0.6 ) }
    dend_9 { pt3dadd( 62.5063, 161.661, 13.6859, 0.6 ) }
    dend_9 { pt3dadd( 65.3904, 168.613, 10.3143, 0.6 ) }
    dend_9 { pt3dadd( 68.1808, 176.21, 8.72817, 0.6 ) }
    dend_9 { pt3dadd( 71.6846, 183.633, 7.92933, 0.6 ) }
    dend_9 { pt3dadd( 74.933, 191.186, 7.29027, 0.6 ) }
    dend_9 { pt3dadd( 76.9116, 198.985, 5.47988, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 14.9666, 68.552, 14.0916, 1.08 ) }
    dend_5 { pt3dadd( 14.2519, 70.3344, 14.4301, 1.08 ) }
    dend_5 { pt3dadd( 13.7912, 71.1853, 14.6719, 1.08 ) }
    dend_5 { pt3dadd( 13.1215, 72.4225, 15.0234, 1.08 ) }
    dend_5 { pt3dadd( 12.3778, 73.7962, 15.4137, 0.96 ) }
    dend_5 { pt3dadd( 11.3001, 75.787, 15.9794, 0.96 ) }
    dend_5 { pt3dadd( 10.4093, 77.4326, 16.4469, 0.84 ) }
    dend_5 { pt3dadd( 9.11829, 79.3994, 17.2037, 1.08 ) }
    dend_5 { pt3dadd( 3.39796, 87.6687, 18.2871, 1.08 ) }
    dend_5 { pt3dadd( -1.15419, 96.5776, 19.7665, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 14.9666, 68.552, 14.0916, 0.96 ) }
    dend_4 { pt3dadd( 16.7453, 69.7318, 13.5265, 0.96 ) }
    dend_4 { pt3dadd( 17.5516, 70.2501, 13.2309, 0.96 ) }
    dend_4 { pt3dadd( 18.8221, 71.0994, 12.7285, 0.96 ) }
    dend_4 { pt3dadd( 20.3241, 72.1633, 11.9931, 0.84 ) }
    dend_4 { pt3dadd( 21.1121, 72.7342, 11.5763, 0.84 ) }
    dend_4 { pt3dadd( 22.3687, 73.6435, 10.8786, 0.84 ) }
    dend_4 { pt3dadd( 22.9514, 74.0348, 10.5173, 0.84 ) }
    dend_4 { pt3dadd( 23.8936, 74.6346, 9.91496, 0.84 ) }
    dend_4 { pt3dadd( 25.8349, 75.7206, 8.74244, 1.2 ) }
    dend_4 { pt3dadd( 26.2074, 75.8941, 8.55736, 1.2 ) }
    dend_4 { pt3dadd( 27.2216, 76.2733, 8.15794, 1.2 ) }
    dend_4 { pt3dadd( 28.7952, 76.7051, 7.72081, 1.2 ) }
    dend_4 { pt3dadd( 29.2993, 76.804, 7.62718, 1.2 ) }
    dend_4 { pt3dadd( 31.2799, 77.0989, 7.35595, 1.2 ) }
    dend_4 { pt3dadd( 32.8487, 77.3121, 7.2016, 0.96 ) }
    dend_4 { pt3dadd( 34.4033, 77.553, 7.05082, 0.96 ) }
    dend_4 { pt3dadd( 36.1777, 77.7998, 6.89104, 0.96 ) }
    dend_4 { pt3dadd( 37.9383, 78.0388, 6.73339, 1.32 ) }
    dend_4 { pt3dadd( 40.5931, 78.424, 6.48727, 0.84 ) }
    dend_4 { pt3dadd( 42.8919, 78.7781, 6.26104, 1.2 ) }
    dend_4 { pt3dadd( 44.5014, 79.054, 6.17209, 1.2 ) }
    dend_4 { pt3dadd( 46.0614, 79.3762, 6.16299, 0.96 ) }
    dend_4 { pt3dadd( 47.3703, 79.7006, 6.24868, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 48.3451, 79.96, 6.39353, 1.2 ) }
    dend_4 { pt3dadd( 48.9868, 80.1399, 6.54012, 1.2 ) }
    dend_4 { pt3dadd( 52.2556, 81.1758, 7.48687, 1.2 ) }
    dend_4 { pt3dadd( 53.5582, 81.6682, 7.89876, 1.2 ) }
    dend_4 { pt3dadd( 54.6526, 82.1694, 8.25707, 1.2 ) }
    dend_4 { pt3dadd( 56.7705, 83.1478, 8.94899, 1.08 ) }
    dend_4 { pt3dadd( 57.7291, 83.5521, 9.23723, 1.44 ) }
    dend_4 { pt3dadd( 59.5556, 84.188, 9.57355, 1.08 ) }
    dend_4 { pt3dadd( 60.9651, 84.588, 9.60636, 1.08 ) }
    dend_4 { pt3dadd( 62.04, 84.8888, 9.53179, 1.08 ) }
    dend_4 { pt3dadd( 63.8538, 85.4599, 9.27091, 1.08 ) }
    dend_4 { pt3dadd( 65.8585, 86.1191, 8.85241, 1.44 ) }
    dend_4 { pt3dadd( 68.9691, 87.1509, 8.03097, 1.08 ) }
    dend_4 { pt3dadd( 70.9994, 87.8965, 7.39002, 0.84 ) }
    dend_4 { pt3dadd( 72.5261, 88.558, 6.88015, 1.2 ) }
    dend_4 { pt3dadd( 74.0618, 89.2882, 6.3469, 1.2 ) }
    dend_4 { pt3dadd( 75.7709, 90.2235, 5.67362, 0.84 ) }
    dend_4 { pt3dadd( 77.0194, 90.9726, 5.16773, 1.08 ) }
    dend_4 { pt3dadd( 79.7007, 92.5739, 4.1656, 0.72 ) }
    dend_4 { pt3dadd( 82.3528, 94.0412, 3.15059, 0.72 ) }
    dend_4 { pt3dadd( 84.0414, 94.8253, 2.50891, 1.2 ) }
    dend_4 { pt3dadd( 86.5316, 95.8648, 1.57607, 0.72 ) }
    dend_4 { pt3dadd( 87.4095, 96.2087, 1.26832, 0.72 ) }
    dend_4 { pt3dadd( 89.2475, 96.8699, 0.691562, 0.96 ) }
    dend_4 { pt3dadd( 91.1876, 97.5025, 0.140851, 0.96 ) }
    dend_4 { pt3dadd( 94.6209, 98.7328, -0.693948, 0.72 ) }
    dend_4 { pt3dadd( 96.3861, 99.5152, -1.05111, 0.6 ) }
    dend_4 { pt3dadd( 97.8072, 100.233, -1.27795, 0.6 ) }
    dend_4 { pt3dadd( 99.6331, 101.323, -1.56277, 1.2 ) }
    dend_4 { pt3dadd( 100.176, 101.707, -1.64088, 1.2 ) }
    dend_4 { pt3dadd( 102.391, 103.423, -1.88165, 0.72 ) }
    dend_4 { pt3dadd( 103.427, 104.325, -1.97779, 0.72 ) }
    dend_4 { pt3dadd( 104.151, 104.941, -2.0421, 0.72 ) }
    dend_4 { pt3dadd( 105.88, 106.477, -2.26344, 0.6 ) }
    dend_4 { pt3dadd( 106.164, 106.728, -2.30547, 0.6 ) }
    dend_4 { pt3dadd( 107.597, 107.974, -2.61442, 0.96 ) }
    dend_4 { pt3dadd( 108.559, 108.835, -2.93119, 0.72 ) }
    dend_4 { pt3dadd( 109.186, 109.428, -3.18494, 0.96 ) }
    dend_4 { pt3dadd( 111.604, 111.857, -4.30162, 0.72 ) }
    dend_4 { pt3dadd( 112.997, 113.315, -5.00781, 0.72 ) }
    dend_4 { pt3dadd( 114.848, 115.231, -6.02681, 1.2 ) }
    dend_4 { pt3dadd( 116.805, 117.177, -7.05746, 0.72 ) }
    dend_4 { pt3dadd( 118.15, 118.416, -7.69168, 0.72 ) }
    dend_4 { pt3dadd( 119.823, 119.83, -8.40284, 0.72 ) }
    dend_4 { pt3dadd( 120.479, 120.32, -8.62664, 0.72 ) }
    dend_4 { pt3dadd( 122.518, 121.753, -9.12702, 1.08 ) }
    dend_4 { pt3dadd( 124.874, 123.262, -9.38615, 0.72 ) }
    dend_4 { pt3dadd( 126.571, 124.285, -9.42364, 1.08 ) }
    dend_4 { pt3dadd( 127.014, 124.554, -9.40992, 1.08 ) }
    dend_4 { pt3dadd( 128.875, 125.63, -9.33526, 0.72 ) }
    dend_4 { pt3dadd( 129.973, 126.275, -9.31801, 0.72 ) }
    dend_4 { pt3dadd( 132.031, 127.534, -9.36393, 1.08 ) }
    dend_4 { pt3dadd( 132.843, 128.021, -9.44773, 1.08 ) }
    dend_4 { pt3dadd( 134.451, 128.938, -9.66289, 0.84 ) }
    dend_4 { pt3dadd( 137.417, 130.55, -10.1008, 0.84 ) }
    dend_4 { pt3dadd( 139.93, 131.824, -10.4487, 0.6 ) }
    dend_4 { pt3dadd( 141.887, 132.69, -10.6418, 1.08 ) }
    dend_4 { pt3dadd( 142.828, 133.049, -10.6865, 1.08 ) }
    dend_4 { pt3dadd( 145.296, 133.933, -10.6429, 0.72 ) }
    dend_4 { pt3dadd( 146.525, 134.359, -10.5343, 0.72 ) }
    dend_4 { pt3dadd( 149.1, 135.278, -10.0459, 1.08 ) }
    dend_4 { pt3dadd( 151.346, 136.065, -9.45544, 0.84 ) }
    dend_4 { pt3dadd( 152.527, 136.497, -9.09995, 1.08 ) }
    dend_4 { pt3dadd( 154.296, 137.202, -8.55051, 0.84 ) }
    dend_4 { pt3dadd( 155.204, 137.57, -8.27939, 0.84 ) }
    dend_4 { pt3dadd( 157.543, 138.495, -7.68174, 0.6 ) }
    dend_4 { pt3dadd( 158.699, 138.898, -7.45158, 0.6 ) }
    dend_4 { pt3dadd( 160.47, 139.45, -7.18323, 0.96 ) }
    dend_4 { pt3dadd( 161.21, 139.607, -7.10017, 0.96 ) }
    dend_4 { pt3dadd( 163.446, 139.822, -6.89858, 0.72 ) }
    dend_4 { pt3dadd( 165.207, 139.875, -6.75178, 0.72 ) }
    dend_4 { pt3dadd( 166.64, 139.856, -6.70639, 0.72 ) }
    dend_4 { pt3dadd( 166.999, 139.863, -6.71254, 0.72 ) }
    dend_4 { pt3dadd( 168.302, 139.975, -6.84574, 0.72 ) }
    dend_4 { pt3dadd( 170.423, 140.292, -7.30297, 0.72 ) }
    dend_4 { pt3dadd( 171.014, 140.419, -7.52338, 0.72 ) }
    dend_4 { pt3dadd( 173.227, 140.959, -8.56096, 0.6 ) }
    dend_4 { pt3dadd( 174.441, 141.264, -9.20592, 0.96 ) }
    dend_4 { pt3dadd( 176.537, 141.707, -10.3513, 0.96 ) }
    dend_4 { pt3dadd( 177.875, 141.991, -11.1398, 0.96 ) }
    dend_4 { pt3dadd( 180.098, 142.401, -12.5508, 0.72 ) }
    dend_4 { pt3dadd( 182.111, 142.691, -13.8308, 0.72 ) }
    dend_4 { pt3dadd( 184.029, 142.837, -15.0264, 1.2 ) }
    dend_4 { pt3dadd( 185.834, 142.866, -16.1207, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -19.5334, -242.581, 32.0009, 0.48 ) }
    dend_56 { pt3dadd( -19.5631, -243.44, 32.0821, 0.48 ) }
    dend_56 { pt3dadd( -19.5897, -244.209, 32.1548, 0.48 ) }
    dend_56 { pt3dadd( -19.6125, -244.868, 32.2171, 0.84 ) }
    dend_56 { pt3dadd( -19.6322, -245.437, 32.2709, 0.84 ) }
    dend_56 { pt3dadd( -19.6512, -245.987, 32.3228, 0.6 ) }
    dend_56 { pt3dadd( -20.4026, -249.135, 32.5321, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -19.5334, -242.581, 32.0009, 0.84 ) }
    dend_53 { pt3dadd( -18.8396, -244.915, 32.1472, 0.84 ) }
    dend_53 { pt3dadd( -18.3223, -246.816, 32.2717, 0.84 ) }
    dend_53 { pt3dadd( -17.8841, -248.675, 32.3977, 1.08 ) }
    dend_53 { pt3dadd( -17.3835, -250.988, 32.5272, 0.84 ) }
    dend_53 { pt3dadd( -17.0486, -252.591, 32.6059, 0.84 ) }
    dend_53 { pt3dadd( -16.7502, -254.105, 32.6715, 0.84 ) }
    dend_53 { pt3dadd( -16.6105, -254.959, 32.7093, 0.84 ) }
    dend_53 { pt3dadd( -16.2916, -257.616, 32.8042, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( -16.1767, -259.112, 32.8638, 1.32 ) }
    dend_53 { pt3dadd( -16.0796, -261.84, 33.0152, 1.2 ) }
    dend_53 { pt3dadd( -16.0747, -263.426, 33.1271, 0.96 ) }
    dend_53 { pt3dadd( -16.0874, -265.391, 33.3149, 1.32 ) }
    dend_53 { pt3dadd( -16.1122, -267.17, 33.5325, 1.32 ) }
    dend_53 { pt3dadd( -16.1641, -269.343, 33.887, 1.08 ) }
    dend_53 { pt3dadd( -16.3322, -273.929, 34.7223, 1.08 ) }
    dend_53 { pt3dadd( -16.4509, -276.317, 35.1986, 0.84 ) }
    dend_53 { pt3dadd( -16.5435, -278.353, 35.6393, 1.2 ) }
    dend_53 { pt3dadd( -16.6239, -280.603, 36.1676, 1.08 ) }
    dend_53 { pt3dadd( -16.6538, -282.419, 36.6231, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -17.7693, -229.383, 12.3653, 0.96 ) }
    dend_51 { pt3dadd( -18.4576, -231.515, 13.6333, 0.96 ) }
    dend_51 { pt3dadd( -18.6207, -232.481, 14.1862, 0.96 ) }
    dend_51 { pt3dadd( -18.7539, -233.336, 14.7037, 0.96 ) }
    dend_51 { pt3dadd( -18.9159, -234.362, 15.3223, 0.96 ) }
    dend_51 { pt3dadd( -19.0932, -235.463, 16.0112, 0.96 ) }
    dend_51 { pt3dadd( -19.4414, -237.898, 17.4757, 1.44 ) }
    dend_51 { pt3dadd( -19.596, -240.08, 18.6944, 0.96 ) }
    dend_51 { pt3dadd( -19.7418, -243.776, 20.6941, 1.44 ) }
    dend_51 { pt3dadd( -19.765, -244.959, 21.308, 0.96 ) }
    dend_51 { pt3dadd( -19.7932, -247.331, 22.4981, 1.56 ) }
    dend_51 { pt3dadd( -19.8344, -250.099, 23.8128, 1.2 ) }
    dend_51 { pt3dadd( -19.9114, -253.934, 25.4451, 0.96 ) }
    dend_51 { pt3dadd( -19.9404, -255.642, 26.0913, 1.44 ) }
    dend_51 { pt3dadd( -19.9619, -258.373, 27.0104, 0.96 ) }
    dend_51 { pt3dadd( -20.0458, -261.353, 27.9745, 1.32 ) }
    dend_51 { pt3dadd( -20.2573, -264.5, 28.9499, 0.96 ) }
    dend_51 { pt3dadd( -20.5433, -266.847, 29.6762, 0.96 ) }
    dend_51 { pt3dadd( -20.7601, -268.207, 30.0544, 0.96 ) }
    dend_51 { pt3dadd( -20.9489, -269.365, 30.3395, 0.96 ) }
    dend_51 { pt3dadd( -21.4688, -272.47, 31.0285, 1.32 ) }
    dend_51 { pt3dadd( -21.9382, -275.215, 31.5897, 0.96 ) }
    dend_51 { pt3dadd( -22.5656, -279.141, 32.325, 1.44 ) }
    dend_51 { pt3dadd( -22.981, -282.016, 32.8182, 0.84 ) }
    dend_51 { pt3dadd( -23.2087, -284.09, 33.1322, 1.2 ) }
    dend_51 { pt3dadd( -23.2713, -285.166, 33.2937, 1.2 ) }
    dend_51 { pt3dadd( -23.2691, -285.894, 33.3979, 0.84 ) }
    dend_51 { pt3dadd( -23.0891, -288.713, 33.8525, 1.2 ) }
    dend_51 { pt3dadd( -22.8, -291.31, 34.3777, 1.2 ) }
    dend_51 { pt3dadd( -22.5917, -293.062, 34.8386, 0.96 ) }
    dend_51 { pt3dadd( -22.2776, -295.94, 35.7267, 0.96 ) }
    dend_51 { pt3dadd( -22.1, -298.603, 36.6409, 1.32 ) }
    dend_51 { pt3dadd( -22.044, -300.791, 37.4975, 1.68 ) }
    dend_51 { pt3dadd( -22.122, -303.033, 38.5281, 1.2 ) }
    dend_51 { pt3dadd( -22.43, -305.817, 40.0237, 0.96 ) }
    dend_51 { pt3dadd( -22.9805, -308.194, 41.5026, 0.96 ) }
    dend_51 { pt3dadd( -23.8229, -310.184, 43.033, 0.84 ) }
    dend_51 { pt3dadd( -24.5628, -311.144, 44.1137, 0.84 ) }
    dend_51 { pt3dadd( -25.5331, -311.524, 45.2363, 0.84 ) }
    dend_51 { pt3dadd( -26.4602, -310.697, 46.1268, 0.84 ) }
    dend_51 { pt3dadd( -26.9381, -309.942, 46.5531, 0.84 ) }
    dend_51 { pt3dadd( -27.3468, -309.02, 46.9149, 0.84 ) }
    dend_51 { pt3dadd( -27.6492, -307.877, 47.234, 1.08 ) }
    dend_51 { pt3dadd( -27.9174, -306.307, 47.5424, 0.84 ) }
    dend_51 { pt3dadd( -27.9839, -305.01, 47.7166, 0.6 ) }
    dend_51 { pt3dadd( -28.1019, -313.881, 50.0594, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.7693, -229.383, 12.3653, 1.08 ) }
    dend_46 { pt3dadd( -17.8649, -232.878, 12.5466, 1.08 ) }
    dend_46 { pt3dadd( -17.9829, -236.667, 12.7174, 1.44 ) }
    dend_46 { pt3dadd( -18.0628, -238.364, 12.8105, 0.84 ) }
    dend_46 { pt3dadd( -18.2029, -240.827, 12.9509, 1.32 ) }
    dend_46 { pt3dadd( -18.3046, -242.502, 13.0439, 1.32 ) }
    dend_46 { pt3dadd( -18.5245, -245.397, 13.1765, 1.32 ) }
    dend_46 { pt3dadd( -18.727, -247.252, 13.2649, 1.32 ) }
    dend_46 { pt3dadd( -18.9539, -249.275, 13.3454, 1.32 ) }
    dend_46 { pt3dadd( -19.429, -253.003, 13.541, 1.44 ) }
    dend_46 { pt3dadd( -19.6736, -254.83, 13.648, 1.44 ) }
    dend_46 { pt3dadd( -20.4696, -260.578, 14.0216, 1.44 ) }
    dend_46 { pt3dadd( -20.679, -262.012, 14.1303, 1.44 ) }
    dend_46 { pt3dadd( -21.0381, -264.494, 14.3247, 1.08 ) }
    dend_46 { pt3dadd( -21.6909, -269.459, 14.6677, 1.08 ) }
    dend_46 { pt3dadd( -22.0156, -272.012, 14.8527, 0.84 ) }
    dend_46 { pt3dadd( -22.3543, -274.961, 15.0815, 1.32 ) }
    dend_46 { pt3dadd( -22.5649, -277.3, 15.2512, 1.32 ) }
    dend_46 { pt3dadd( -22.8429, -280.938, 15.48, 0.96 ) }
    dend_46 { pt3dadd( -22.9526, -282.834, 15.5874, 1.44 ) }
    dend_46 { pt3dadd( -23.1398, -285.615, 15.6861, 1.44 ) }
    dend_46 { pt3dadd( -23.4216, -288.55, 15.8006, 1.2 ) }
    dend_46 { pt3dadd( -23.8025, -291.471, 15.9477, 1.08 ) }
    dend_46 { pt3dadd( -24.1654, -293.789, 16.0783, 1.08 ) }
    dend_46 { pt3dadd( -24.5763, -295.966, 16.2387, 1.68 ) }
    dend_46 { pt3dadd( -25.2725, -299.406, 16.5094, 1.2 ) }
    dend_46 { pt3dadd( -25.5571, -300.828, 16.6102, 1.2 ) }
    dend_46 { pt3dadd( -26.096, -303.678, 16.7833, 1.44 ) }
    dend_46 { pt3dadd( -26.5396, -306.183, 16.9029, 1.44 ) }
    dend_46 { pt3dadd( -27.0116, -309.281, 16.9962, 1.44 ) }
    dend_46 { pt3dadd( -27.3484, -311.962, 17.0496, 1.44 ) }
    dend_46 { pt3dadd( -27.6068, -315.047, 17.0824, 1.8 ) }
    dend_46 { pt3dadd( -27.8595, -318.25, 17.0848, 1.32 ) }
    dend_46 { pt3dadd( -28.0003, -320.128, 17.0717, 1.08 ) }
    dend_46 { pt3dadd( -28.215, -322.755, 17.0645, 1.56 ) }
    dend_46 { pt3dadd( -28.4788, -325.795, 17.0495, 1.56 ) }
    dend_46 { pt3dadd( -28.6326, -327.488, 17.0417, 1.56 ) }
    dend_46 { pt3dadd( -28.7792, -329.049, 17.0406, 1.56 ) }
    dend_46 { pt3dadd( -29.0039, -331.429, 17.0576, 1.56 ) }
    dend_46 { pt3dadd( -29.1662, -333.444, 17.0729, 1.56 ) }
    dend_46 { pt3dadd( -29.324, -335.771, 17.0511, 1.32 ) }
    dend_46 { pt3dadd( -29.3881, -336.822, 17.0343, 1.32 ) }
    dend_46 { pt3dadd( -29.5266, -338.37, 17.0477, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -29.6977, -340.075, 17.0801, 1.32 ) }
    dend_46 { pt3dadd( -29.9845, -342.605, 17.1055, 1.32 ) }
    dend_46 { pt3dadd( -30.2015, -344.502, 17.1274, 1.32 ) }
    dend_46 { pt3dadd( -30.4793, -346.726, 17.1799, 1.68 ) }
    dend_46 { pt3dadd( -31.2932, -352.518, 17.3752, 1.32 ) }
    dend_46 { pt3dadd( -31.5789, -354.332, 17.4517, 1.32 ) }
    dend_46 { pt3dadd( -31.9436, -356.407, 17.5519, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 55.8822, -341.604, -20.5421, 0.96 ) }
    dend_30 { pt3dadd( 57.2147, -342.561, -19.0495, 0.96 ) }
    dend_30 { pt3dadd( 57.884, -343.027, -18.3023, 1.32 ) }
    dend_30 { pt3dadd( 59.2731, -344.005, -16.7627, 0.96 ) }
    dend_30 { pt3dadd( 60.3061, -344.778, -15.6054, 1.32 ) }
    dend_30 { pt3dadd( 61.6434, -345.812, -14.1888, 1.2 ) }
    dend_30 { pt3dadd( 62.3361, -346.313, -13.4884, 1.2 ) }
    dend_30 { pt3dadd( 63.0239, -346.777, -12.8334, 1.2 ) }
    dend_30 { pt3dadd( 63.5015, -347.112, -12.3821, 1.2 ) }
    dend_30 { pt3dadd( 64.066, -347.506, -11.8892, 1.2 ) }
    dend_30 { pt3dadd( 65.78, -348.588, -10.5425, 0.96 ) }
    dend_30 { pt3dadd( 67.0502, -349.293, -9.70285, 1.32 ) }
    dend_30 { pt3dadd( 67.8108, -349.665, -9.23219, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 55.8822, -341.604, -20.5421, 1.08 ) }
    dend_23 { pt3dadd( 56.5952, -346.607, -20.5863, 1.08 ) }
    dend_23 { pt3dadd( 57.1542, -351.135, -20.6922, 0.72 ) }
    dend_23 { pt3dadd( 57.4672, -353.348, -20.825, 0.72 ) }
    dend_23 { pt3dadd( 58.2424, -358.689, -21.2646, 1.2 ) }
    dend_23 { pt3dadd( 58.8807, -363.036, -21.668, 0.84 ) }
    dend_23 { pt3dadd( 59.2502, -365.663, -21.9308, 0.84 ) }
    dend_23 { pt3dadd( 59.54, -367.582, -22.1585, 0.84 ) }
    dend_23 { pt3dadd( 60.2977, -372.609, -22.7697, 0.6 ) }
    dend_23 { pt3dadd( 60.7331, -375.405, -23.0872, 0.6 ) }
    dend_23 { pt3dadd( 61.3969, -379.129, -23.4414, 1.2 ) }
    dend_23 { pt3dadd( 62.2545, -383.365, -23.827, 1.2 ) }
    dend_23 { pt3dadd( 63.0359, -386.928, -24.1223, 0.84 ) }
    dend_23 { pt3dadd( 63.6877, -389.89, -24.3472, 0.84 ) }
    dend_23 { pt3dadd( 64.6846, -394.597, -24.7086, 1.08 ) }
    dend_23 { pt3dadd( 65.5757, -398.666, -25.1039, 0.72 ) }
    dend_23 { pt3dadd( 66.3935, -402.262, -25.5545, 1.08 ) }
    dend_23 { pt3dadd( 66.9804, -404.734, -25.9182, 1.08 ) }
    dend_23 { pt3dadd( 67.5122, -407.048, -26.3133, 1.08 ) }
    dend_23 { pt3dadd( 68.3867, -411.207, -27.1049, 0.72 ) }
    dend_23 { pt3dadd( 68.9205, -413.889, -27.639, 0.72 ) }
    dend_23 { pt3dadd( 69.3084, -416.489, -28.0773, 1.08 ) }
    dend_23 { pt3dadd( 69.5025, -418.479, -28.3142, 1.08 ) }
    dend_23 { pt3dadd( 69.5965, -419.833, -28.4062, 1.08 ) }
    dend_23 { pt3dadd( 69.7797, -423.581, -28.6532, 0.72 ) }
    dend_23 { pt3dadd( 69.8582, -425.675, -28.8072, 0.72 ) }
    dend_23 { pt3dadd( 70.0591, -430.324, -29.2395, 1.2 ) }
    dend_23 { pt3dadd( 70.3147, -434.961, -29.7352, 1.2 ) }
    dend_23 { pt3dadd( 70.7493, -441.028, -30.4887, 1.2 ) }
    dend_23 { pt3dadd( 71.2913, -446.853, -31.3139, 0.84 ) }
    dend_23 { pt3dadd( 71.535, -449.146, -31.6961, 1.32 ) }
    dend_23 { pt3dadd( 71.8234, -451.676, -32.1979, 1.32 ) }
    dend_23 { pt3dadd( 71.9924, -452.845, -32.4747, 1.32 ) }
    dend_23 { pt3dadd( 72.3952, -455.439, -33.1457, 0.96 ) }
    dend_23 { pt3dadd( 72.7388, -457.753, -33.7514, 1.56 ) }
    dend_23 { pt3dadd( 73.1135, -460.166, -34.2985, 1.56 ) }
    dend_23 { pt3dadd( 73.4535, -462.201, -34.7288, 1.08 ) }
    dend_23 { pt3dadd( 73.7642, -464.177, -35.1439, 1.08 ) }
    dend_23 { pt3dadd( 74.4563, -468.214, -36.0178, 0.84 ) }
    dend_23 { pt3dadd( 74.8503, -470.091, -36.4058, 1.44 ) }
    dend_23 { pt3dadd( 75.7424, -473.565, -37.0961, 1.08 ) }
    dend_23 { pt3dadd( 76.4251, -475.712, -37.5088, 1.08 ) }
    dend_23 { pt3dadd( 77.5729, -479.116, -38.1542, 0.72 ) }
    dend_23 { pt3dadd( 78.9135, -483.19, -38.9216, 1.08 ) }
    dend_23 { pt3dadd( 79.6734, -485.31, -39.378, 1.08 ) }
    dend_23 { pt3dadd( 80.5767, -487.711, -39.9315, 0.96 ) }
    dend_23 { pt3dadd( 82.0947, -491.783, -40.8733, 0.72 ) }
    dend_23 { pt3dadd( 82.9022, -493.807, -41.391, 0.72 ) }
    dend_23 { pt3dadd( 83.5495, -495.232, -41.7939, 0.72 ) }
    dend_23 { pt3dadd( 85.5123, -499.444, -43.1658, 0.72 ) }
    dend_23 { pt3dadd( 86.244, -501.101, -43.7978, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.45553, 67.4916, 29.7676, 0.6 ) }
    dend_16 { pt3dadd( 0.866883, 62.1119, 28.359, 0.6 ) }
    dend_16 { pt3dadd( -1.63879, 56.5393, 27.8165, 0.6 ) }
    dend_16 { pt3dadd( -3.74316, 50.9385, 26.4643, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.45553, 67.4916, 29.7676, 0.84 ) }
    dend_15 { pt3dadd( -1.27168, 59.4304, 26.3186, 0.6 ) }
    dend_15 { pt3dadd( -7.94941, 52.3503, 24.1963, 0.6 ) }
    dend_15 { pt3dadd( -14.4091, 44.8972, 22.8007, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.15419, 96.5776, 19.7665, 0.6 ) }
    dend_7 { pt3dadd( -6.2507, 104.963, 23.1028, 0.6 ) }
    dend_7 { pt3dadd( -12.904, 112.095, 26.6079, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.15419, 96.5776, 19.7665, 0.84 ) }
    dend_6 { pt3dadd( -5.2985, 104.095, 20.2094, 0.6 ) }
    dend_6 { pt3dadd( -8.17742, 112.194, 20.1331, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.6538, -282.419, 36.6231, 0.6 ) }
    dend_55 { pt3dadd( -17.5332, -281.879, 38.1523, 0.6 ) }
    dend_55 { pt3dadd( -18.6278, -281.208, 40.0555, 0.6 ) }
    dend_55 { pt3dadd( -19.142, -280.893, 40.9497, 0.6 ) }
    dend_55 { pt3dadd( -19.7592, -280.514, 42.023, 0.96 ) }
    dend_55 { pt3dadd( -25.0348, -276.535, 49.3691, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.6538, -282.419, 36.6231, 0.96 ) }
    dend_54 { pt3dadd( -16.9164, -283.447, 36.8983, 0.96 ) }
    dend_54 { pt3dadd( -17.1738, -284.455, 37.1681, 0.72 ) }
    dend_54 { pt3dadd( -17.5944, -286.103, 37.6089, 0.72 ) }
    dend_54 { pt3dadd( -18.9848, -293.404, 41.0025, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -31.9436, -356.407, 17.5519, 0.84 ) }
    dend_50 { pt3dadd( -31.8089, -358.797, 15.9853, 0.84 ) }
    dend_50 { pt3dadd( -31.5901, -360.979, 14.3926, 0.84 ) }
    dend_50 { pt3dadd( -31.5596, -361.571, 13.9592, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( -31.5741, -363.098, 12.8532, 0.84 ) }
    dend_50 { pt3dadd( -31.672, -365.132, 11.4513, 0.6 ) }
    dend_50 { pt3dadd( -31.7837, -366.942, 10.2549, 1.08 ) }
    dend_50 { pt3dadd( -31.9049, -368.321, 9.39573, 1.08 ) }
    dend_50 { pt3dadd( -32.0822, -370.431, 8.0898, 0.72 ) }
    dend_50 { pt3dadd( -32.2189, -372.245, 7.03958, 0.72 ) }
    dend_50 { pt3dadd( -32.3454, -373.342, 6.42477, 0.72 ) }
    dend_50 { pt3dadd( -32.5002, -374.242, 5.869, 0.72 ) }
    dend_50 { pt3dadd( -32.7013, -375.204, 5.27829, 1.2 ) }
    dend_50 { pt3dadd( -33.1659, -377.588, 3.84511, 0.84 ) }
    dend_50 { pt3dadd( -33.6386, -380.634, 2.02341, 1.08 ) }
    dend_50 { pt3dadd( -34.1115, -384.03, 0.0460481, 1.08 ) }
    dend_50 { pt3dadd( -34.5995, -387.445, -1.91011, 0.84 ) }
    dend_50 { pt3dadd( -34.816, -388.955, -2.72592, 0.84 ) }
    dend_50 { pt3dadd( -35.0563, -390.769, -3.66081, 1.32 ) }
    dend_50 { pt3dadd( -35.3088, -393.105, -4.7658, 0.84 ) }
    dend_50 { pt3dadd( -35.3678, -393.962, -5.16042, 0.84 ) }
    dend_50 { pt3dadd( -35.3703, -395.398, -5.76573, 1.32 ) }
    dend_50 { pt3dadd( -35.3617, -397.612, -6.69998, 0.84 ) }
    dend_50 { pt3dadd( -35.4293, -399.094, -7.46027, 1.44 ) }
    dend_50 { pt3dadd( -35.7379, -401.641, -8.93125, 1.2 ) }
    dend_50 { pt3dadd( -35.9433, -402.771, -9.64602, 1.2 ) }
    dend_50 { pt3dadd( -36.247, -404.255, -10.6066, 1.44 ) }
    dend_50 { pt3dadd( -36.6738, -406.173, -11.862, 1.08 ) }
    dend_50 { pt3dadd( -37.4973, -409.663, -14.1054, 0.84 ) }
    dend_50 { pt3dadd( -37.9369, -411.528, -15.2553, 1.44 ) }
    dend_50 { pt3dadd( -38.4079, -413.482, -16.3772, 0.96 ) }
    dend_50 { pt3dadd( -38.7589, -414.93, -17.093, 0.96 ) }
    dend_50 { pt3dadd( -39.0218, -416.069, -17.5549, 1.44 ) }
    dend_50 { pt3dadd( -39.6458, -418.668, -18.3531, 0.96 ) }
    dend_50 { pt3dadd( -39.8192, -419.364, -18.5121, 0.96 ) }
    dend_50 { pt3dadd( -40.4905, -422.003, -19.0362, 1.44 ) }
    dend_50 { pt3dadd( -41.251, -424.812, -19.5873, 0.84 ) }
    dend_50 { pt3dadd( -42.2547, -427.98, -20.3123, 1.44 ) }
    dend_50 { pt3dadd( -43.4011, -431.253, -21.1202, 0.84 ) }
    dend_50 { pt3dadd( -43.7712, -432.196, -21.3719, 0.84 ) }
    dend_50 { pt3dadd( -44.8125, -434.694, -22.1312, 1.44 ) }
    dend_50 { pt3dadd( -46.3035, -438.176, -23.3217, 1.44 ) }
    dend_50 { pt3dadd( -47.9905, -441.994, -24.6524, 1.08 ) }
    dend_50 { pt3dadd( -48.9117, -444.029, -25.4021, 0.72 ) }
    dend_50 { pt3dadd( -49.8672, -446.098, -26.2144, 1.32 ) }
    dend_50 { pt3dadd( -50.7594, -447.925, -26.9354, 0.72 ) }
    dend_50 { pt3dadd( -51.2504, -448.844, -27.2777, 0.72 ) }
    dend_50 { pt3dadd( -52.6325, -451.297, -28.0873, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -31.9436, -356.407, 17.5519, 1.08 ) }
    dend_47 { pt3dadd( -32.5235, -358.805, 17.7484, 1.08 ) }
    dend_47 { pt3dadd( -32.8307, -360.401, 17.8571, 1.08 ) }
    dend_47 { pt3dadd( -33.008, -361.551, 17.9754, 1.08 ) }
    dend_47 { pt3dadd( -33.4528, -363.713, 18.1181, 1.08 ) }
    dend_47 { pt3dadd( -34.0831, -366.325, 18.171, 1.44 ) }
    dend_47 { pt3dadd( -34.7158, -368.842, 18.1498, 0.96 ) }
    dend_47 { pt3dadd( -35.2213, -370.933, 18.0555, 0.96 ) }
    dend_47 { pt3dadd( -35.7239, -372.975, 17.8792, 0.96 ) }
    dend_47 { pt3dadd( -36.6176, -376.835, 17.5377, 0.96 ) }
    dend_47 { pt3dadd( -37.1351, -379.362, 17.3319, 0.84 ) }
    dend_47 { pt3dadd( -37.3925, -380.855, 17.225, 1.44 ) }
    dend_47 { pt3dadd( -37.7559, -383.16, 17.1121, 1.08 ) }
    dend_47 { pt3dadd( -37.9888, -385.012, 17.0481, 1.08 ) }
    dend_47 { pt3dadd( -38.2559, -387.763, 16.988, 1.56 ) }
    dend_47 { pt3dadd( -38.4902, -392.051, 17.0416, 1.32 ) }
    dend_47 { pt3dadd( -38.6097, -394.186, 17.0882, 0.96 ) }
    dend_47 { pt3dadd( -38.7569, -396.31, 17.1365, 1.32 ) }
    dend_47 { pt3dadd( -39.055, -400.266, 17.2109, 1.08 ) }
    dend_47 { pt3dadd( -39.2746, -402.76, 17.2252, 0.72 ) }
    dend_47 { pt3dadd( -39.518, -404.946, 17.2197, 1.32 ) }
    dend_47 { pt3dadd( -39.8606, -407.999, 17.2372, 1.08 ) }
    dend_47 { pt3dadd( -40.1255, -410.431, 17.2799, 1.56 ) }
    dend_47 { pt3dadd( -40.4056, -413.22, 17.3591, 0.84 ) }
    dend_47 { pt3dadd( -40.7432, -416.618, 17.4679, 0.6 ) }
    dend_47 { pt3dadd( -40.8855, -418.083, 17.514, 1.08 ) }
    dend_47 { pt3dadd( -41.1942, -421.193, 17.6164, 1.2 ) }
    dend_47 { pt3dadd( -41.4572, -423.983, 17.7007, 0.72 ) }
    dend_47 { pt3dadd( -41.5419, -424.913, 17.7198, 0.72 ) }
    dend_47 { pt3dadd( -41.9569, -429.368, 17.7739, 1.32 ) }
    dend_47 { pt3dadd( -42.0203, -430.187, 17.7614, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 67.8108, -349.665, -9.23219, 0.96 ) }
    dend_34 { pt3dadd( 69.0745, -348.631, -8.63312, 0.96 ) }
    dend_34 { pt3dadd( 69.5828, -348.214, -8.39213, 0.96 ) }
    dend_34 { pt3dadd( 70.202, -347.707, -8.09858, 0.84 ) }
    dend_34 { pt3dadd( 71.6917, -346.488, -7.39233, 0.84 ) }
    dend_34 { pt3dadd( 72.5938, -345.749, -6.96467, 1.08 ) }
    dend_34 { pt3dadd( 73.3802, -345.105, -6.59183, 1.08 ) }
    dend_34 { pt3dadd( 78.5956, -340.137, -3.99678, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 67.8108, -349.665, -9.23219, 0.6 ) }
    dend_31 { pt3dadd( 68.7039, -351.072, -8.29509, 0.6 ) }
    dend_31 { pt3dadd( 69.7355, -352.883, -6.97907, 1.08 ) }
    dend_31 { pt3dadd( 70.7562, -354.904, -5.5425, 0.96 ) }
    dend_31 { pt3dadd( 71.3255, -356.04, -4.74401, 0.96 ) }
    dend_31 { pt3dadd( 71.919, -357.225, -3.91145, 1.32 ) }
    dend_31 { pt3dadd( 73.0041, -359.392, -2.38942, 1.08 ) }
    dend_31 { pt3dadd( 73.4202, -360.33, -1.69746, 1.08 ) }
    dend_31 { pt3dadd( 74.1619, -362.21, -0.220681, 1.08 ) }
    dend_31 { pt3dadd( 74.823, -363.978, 1.12542, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 86.244, -501.101, -43.7978, 0.72 ) }
    dend_27 { pt3dadd( 86.3678, -502.329, -44.2277, 0.72 ) }
    dend_27 { pt3dadd( 86.4916, -503.507, -44.5946, 0.72 ) }
    dend_27 { pt3dadd( 86.6536, -505.119, -45.1086, 0.72 ) }
    dend_27 { pt3dadd( 86.7322, -506.189, -45.4519, 0.72 ) }
    dend_27 { pt3dadd( 86.7702, -506.68, -45.6089, 0.72 ) }
    dend_27 { pt3dadd( 86.9205, -508.373, -46.1308, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 86.9781, -509.265, -46.393, 0.6 ) }
    dend_27 { pt3dadd( 87.0155, -510.041, -46.6159, 0.6 ) }
    dend_27 { pt3dadd( 87.0523, -511.385, -46.9786, 0.48 ) }
    dend_27 { pt3dadd( 87.0702, -512.141, -47.1968, 0.48 ) }
    dend_27 { pt3dadd( 87.0931, -513.738, -47.6856, 0.84 ) }
    dend_27 { pt3dadd( 87.0533, -515.536, -48.3025, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 86.244, -501.101, -43.7978, 0.72 ) }
    dend_24 { pt3dadd( 87.1855, -503.296, -43.4911, 0.72 ) }
    dend_24 { pt3dadd( 88.511, -506.385, -43.0594, 1.2 ) }
    dend_24 { pt3dadd( 88.9518, -507.413, -42.9158, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -42.0203, -430.187, 17.7614, 0.48 ) }
    dend_49 { pt3dadd( -43.1483, -431.228, 19.3893, 0.48 ) }
    dend_49 { pt3dadd( -43.3564, -431.393, 19.6793, 0.48 ) }
    dend_49 { pt3dadd( -44.0318, -431.993, 20.601, 0.48 ) }
    dend_49 { pt3dadd( -44.7189, -432.813, 21.7004, 0.48 ) }
    dend_49 { pt3dadd( -44.9924, -433.224, 22.2138, 0.48 ) }
    dend_49 { pt3dadd( -45.6822, -434.353, 23.6023, 0.96 ) }
    dend_49 { pt3dadd( -46.4288, -435.711, 25.2781, 0.6 ) }
    dend_49 { pt3dadd( -46.9575, -436.799, 26.561, 0.6 ) }
    dend_49 { pt3dadd( -47.6951, -438.498, 28.5128, 1.08 ) }
    dend_49 { pt3dadd( -48.1829, -439.76, 29.9419, 0.84 ) }
    dend_49 { pt3dadd( -48.4614, -440.614, 30.8683, 0.84 ) }
    dend_49 { pt3dadd( -48.7238, -441.746, 31.9908, 1.2 ) }
    dend_49 { pt3dadd( -48.9433, -443.003, 33.2542, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -42.0203, -430.187, 17.7614, 0.84 ) }
    dend_48 { pt3dadd( -42.4485, -433.645, 17.3435, 0.84 ) }
    dend_48 { pt3dadd( -42.7225, -435.275, 17.2445, 0.84 ) }
    dend_48 { pt3dadd( -42.9662, -436.715, 17.1903, 0.84 ) }
    dend_48 { pt3dadd( -43.5947, -440.378, 17.0502, 0.84 ) }
    dend_48 { pt3dadd( -43.8217, -441.738, 16.9973, 0.84 ) }
    dend_48 { pt3dadd( -44.3393, -444.902, 16.8832, 1.44 ) }
    dend_48 { pt3dadd( -44.7445, -447.236, 16.8024, 1.08 ) }
    dend_48 { pt3dadd( -45.2, -449.892, 16.7578, 1.08 ) }
    dend_48 { pt3dadd( -45.6148, -452.417, 16.7763, 0.84 ) }
    dend_48 { pt3dadd( -45.832, -454.004, 16.8211, 0.84 ) }
    dend_48 { pt3dadd( -45.9709, -455.414, 16.831, 1.08 ) }
    dend_48 { pt3dadd( -46.0585, -457.304, 16.7469, 0.6 ) }
    dend_48 { pt3dadd( -46.0709, -458.834, 16.6334, 0.6 ) }
    dend_48 { pt3dadd( -46.0483, -460.436, 16.5322, 0.6 ) }
    dend_48 { pt3dadd( -46.0163, -462.555, 16.3628, 1.2 ) }
    dend_48 { pt3dadd( -46.0063, -464.679, 16.1387, 1.2 ) }
    dend_48 { pt3dadd( -46.0314, -466.149, 15.9814, 1.2 ) }
    dend_48 { pt3dadd( -46.0979, -467.805, 15.8187, 0.96 ) }
    dend_48 { pt3dadd( -46.1554, -468.905, 15.7196, 1.44 ) }
    dend_48 { pt3dadd( -46.3133, -471.078, 15.5765, 1.44 ) }
    dend_48 { pt3dadd( -46.6, -474.166, 15.4542, 0.96 ) }
    dend_48 { pt3dadd( -46.9508, -477.563, 15.3856, 1.32 ) }
    dend_48 { pt3dadd( -47.0919, -478.972, 15.3649, 1.32 ) }
    dend_48 { pt3dadd( -47.3965, -482.129, 15.3406, 0.84 ) }
    dend_48 { pt3dadd( -47.6577, -484.721, 15.3581, 1.32 ) }
    dend_48 { pt3dadd( -47.7863, -486.131, 15.3936, 1.32 ) }
    dend_48 { pt3dadd( -47.9696, -487.786, 15.4259, 1.32 ) }
    dend_48 { pt3dadd( -48.3643, -490.986, 15.4663, 1.32 ) }
    dend_48 { pt3dadd( -48.6588, -493.088, 15.5047, 0.96 ) }
    dend_48 { pt3dadd( -48.9211, -494.764, 15.548, 0.96 ) }
    dend_48 { pt3dadd( -49.5068, -498.537, 15.6077, 1.44 ) }
    dend_48 { pt3dadd( -49.8844, -500.849, 15.6235, 1.08 ) }
    dend_48 { pt3dadd( -50.2283, -502.701, 15.6483, 1.08 ) }
    dend_48 { pt3dadd( -50.6253, -504.553, 15.6626, 1.08 ) }
    dend_48 { pt3dadd( -51.1057, -506.817, 15.6424, 1.08 ) }
    dend_48 { pt3dadd( -51.6118, -509.249, 15.6002, 1.08 ) }
    dend_48 { pt3dadd( -52.3666, -512.686, 15.5222, 1.08 ) }
    dend_48 { pt3dadd( -53.4934, -517.79, 15.3474, 0.96 ) }
    dend_48 { pt3dadd( -55.2676, -525.623, 15.0507, 1.32 ) }
    dend_48 { pt3dadd( -55.8622, -528.2, 14.9441, 0.84 ) }
    dend_48 { pt3dadd( -56.2215, -529.733, 14.8825, 0.84 ) }
    dend_48 { pt3dadd( -56.7125, -531.819, 14.8135, 0.84 ) }
    dend_48 { pt3dadd( -57.0746, -533.412, 14.7788, 0.84 ) }
    dend_48 { pt3dadd( -57.7379, -536.549, 14.7422, 0.84 ) }
    dend_48 { pt3dadd( -58.063, -538.107, 14.7848, 0.84 ) }
    dend_48 { pt3dadd( -58.3468, -539.395, 14.8574, 0.84 ) }
    dend_48 { pt3dadd( -58.6405, -540.741, 14.9701, 1.2 ) }
    dend_48 { pt3dadd( -59.1544, -543.275, 15.2029, 0.72 ) }
    dend_48 { pt3dadd( -59.584, -545.241, 15.428, 1.32 ) }
    dend_48 { pt3dadd( -59.98, -546.799, 15.5793, 0.84 ) }
    dend_48 { pt3dadd( -60.472, -548.613, 15.7609, 1.56 ) }
    dend_48 { pt3dadd( -61.8068, -553.019, 16.1872, 0.84 ) }
    dend_48 { pt3dadd( -62.3506, -554.65, 16.3547, 1.32 ) }
    dend_48 { pt3dadd( -63.4244, -557.576, 16.7027, 0.84 ) }
    dend_48 { pt3dadd( -65.0954, -561.909, 17.2778, 0.6 ) }
    dend_48 { pt3dadd( -65.5931, -563.195, 17.4565, 1.08 ) }
    dend_48 { pt3dadd( -66.5215, -565.605, 17.8105, 0.84 ) }
    dend_48 { pt3dadd( -67.3117, -567.607, 18.1139, 1.44 ) }
    dend_48 { pt3dadd( -68.1401, -569.695, 18.4622, 0.96 ) }
    dend_48 { pt3dadd( -68.7842, -571.425, 18.7457, 0.72 ) }
    dend_48 { pt3dadd( -69.3423, -573.091, 19.1014, 0.72 ) }
    dend_48 { pt3dadd( -70.3497, -576.221, 19.7271, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 74.823, -363.978, 1.12542, 0.84 ) }
    dend_33 { pt3dadd( 76.383, -363.503, 2.09191, 0.84 ) }
    dend_33 { pt3dadd( 77.068, -363.294, 2.51626, 0.84 ) }
    dend_33 { pt3dadd( 78.6795, -362.803, 3.51469, 0.72 ) }
    dend_33 { pt3dadd( 79.6975, -362.492, 4.14544, 0.72 ) }
    dend_33 { pt3dadd( 86.3312, -361.659, 7.3481, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 74.823, -363.978, 1.12542, 0.72 ) }
    dend_32 { pt3dadd( 75.1947, -365.217, 1.7572, 0.72 ) }
    dend_32 { pt3dadd( 75.5888, -366.53, 2.42711, 0.84 ) }
    dend_32 { pt3dadd( 75.7552, -367.084, 2.70993, 0.84 ) }
    dend_32 { pt3dadd( 76.1035, -368.245, 3.30209, 0.6 ) }
    dend_32 { pt3dadd( 76.3447, -369.048, 3.71208, 0.6 ) }
    dend_32 { pt3dadd( 76.5969, -369.889, 4.14071, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 78.1925, -375.215, 7.69932, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 87.0533, -515.536, -48.3025, 0.48 ) }
    dend_29 { pt3dadd( 83.7298, -515.953, -51.5934, 0.48 ) }
    dend_29 { pt3dadd( 82.9566, -516.05, -52.359, 1.08 ) }
    dend_29 { pt3dadd( 82.1605, -516.15, -53.1473, 0.48 ) }
    dend_29 { pt3dadd( 81.1616, -516.275, -54.1364, 0.96 ) }
    dend_29 { pt3dadd( 80.3167, -516.381, -54.9731, 0.48 ) }
    dend_29 { pt3dadd( 78.6677, -516.588, -56.6059, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 87.0533, -515.536, -48.3025, 0.96 ) }
    dend_28 { pt3dadd( 87.1409, -516.421, -49.0958, 0.96 ) }
    dend_28 { pt3dadd( 87.2532, -517.993, -50.4199, 0.48 ) }
    dend_28 { pt3dadd( 87.2934, -518.614, -50.8993, 0.48 ) }
    dend_28 { pt3dadd( 87.4041, -519.888, -51.8341, 0.84 ) }
    dend_28 { pt3dadd( 87.4937, -520.815, -52.5044, 0.6 ) }
    dend_28 { pt3dadd( 87.5411, -521.264, -52.8248, 0.6 ) }
    dend_28 { pt3dadd( 87.6784, -522.234, -53.5508, 0.96 ) }
    dend_28 { pt3dadd( 87.7837, -522.88, -54.0399, 0.96 ) }
    dend_28 { pt3dadd( 88.0241, -524.114, -55.049, 0.72 ) }
    dend_28 { pt3dadd( 88.305, -525.294, -56.0936, 0.72 ) }
    dend_28 { pt3dadd( 88.5958, -526.206, -57.0702, 1.2 ) }
    dend_28 { pt3dadd( 88.9011, -527.055, -58.0467, 1.2 ) }
    dend_28 { pt3dadd( 89.1057, -527.56, -58.6828, 1.2 ) }
    dend_28 { pt3dadd( 89.3673, -528.15, -59.5164, 1.08 ) }
    dend_28 { pt3dadd( 89.7368, -528.877, -60.6891, 0.84 ) }
    dend_28 { pt3dadd( 90.2207, -529.611, -62.08, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 88.9518, -507.413, -42.9158, 0.72 ) }
    dend_26 { pt3dadd( 91.073, -507.595, -42.6619, 0.72 ) }
    dend_26 { pt3dadd( 92.3424, -507.703, -42.51, 0.72 ) }
    dend_26 { pt3dadd( 93.1593, -507.773, -42.4122, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 88.9518, -507.413, -42.9158, 0.48 ) }
    dend_25 { pt3dadd( 89.1756, -510.062, -43.1256, 0.48 ) }
    dend_25 { pt3dadd( 89.2415, -511.556, -43.2949, 0.96 ) }
    dend_25 { pt3dadd( 89.2493, -512.247, -43.3888, 0.96 ) }
    dend_25 { pt3dadd( 89.2247, -513.928, -43.6432, 0.48 ) }
    dend_25 { pt3dadd( 89.1873, -514.943, -43.8087, 0.48 ) }
    dend_25 { pt3dadd( 89.1191, -516.604, -44.0824, 0.96 ) }
    dend_25 { pt3dadd( 89.0198, -518.265, -44.376, 0.96 ) }
    dend_25 { pt3dadd( 88.936, -519.366, -44.58, 0.96 ) }
    dend_25 { pt3dadd( 88.7717, -521.008, -44.9179, 1.32 ) }
    dend_25 { pt3dadd( 88.5673, -522.654, -45.2874, 0.96 ) }
    dend_25 { pt3dadd( 88.4915, -523.298, -45.4317, 0.96 ) }
    dend_25 { pt3dadd( 88.4226, -524.073, -45.5934, 0.96 ) }
    dend_25 { pt3dadd( 88.3482, -525.345, -45.8331, 1.32 ) }
    dend_25 { pt3dadd( 88.3343, -526.685, -46.053, 0.96 ) }
    dend_25 { pt3dadd( 88.3945, -528.149, -46.2545, 0.6 ) }
    dend_25 { pt3dadd( 88.5283, -529.227, -46.4227, 0.6 ) }
    dend_25 { pt3dadd( 88.8484, -530.541, -46.7034, 1.32 ) }
    dend_25 { pt3dadd( 89.3497, -531.887, -47.0707, 0.84 ) }
    dend_25 { pt3dadd( 89.8564, -532.993, -47.4089, 0.84 ) }
    dend_25 { pt3dadd( 90.1158, -533.489, -47.5626, 0.84 ) }
    dend_25 { pt3dadd( 91.2211, -535.457, -48.1995, 0.84 ) }
    dend_25 { pt3dadd( 92.4104, -537.502, -48.8836, 1.44 ) }
    dend_25 { pt3dadd( 93.6374, -539.675, -49.6469, 0.96 ) }
    dend_25 { pt3dadd( 94.0854, -540.607, -49.9576, 0.96 ) }
    dend_25 { pt3dadd( 94.5633, -541.894, -50.353, 0.96 ) }
    dend_25 { pt3dadd( 94.8105, -542.85, -50.6008, 0.96 ) }
    dend_25 { pt3dadd( 94.9353, -543.854, -50.7921, 0.96 ) }
    dend_25 { pt3dadd( 94.9383, -546.26, -51.1639, 0.72 ) }
    dend_25 { pt3dadd( 94.7394, -548.754, -51.5033, 1.08 ) }
    dend_25 { pt3dadd( 94.5304, -550.409, -51.7145, 0.72 ) }
    dend_25 { pt3dadd( 94.2855, -551.966, -51.9025, 1.2 ) }
    dend_25 { pt3dadd( 93.9849, -553.764, -52.0967, 0.96 ) }
    dend_25 { pt3dadd( 93.5004, -556.592, -52.362, 1.44 ) }
    dend_25 { pt3dadd( 93.1756, -558.526, -52.5206, 0.96 ) }
    dend_25 { pt3dadd( 93.0244, -559.628, -52.6521, 0.72 ) }
    dend_25 { pt3dadd( 92.7184, -562.37, -53.0576, 1.08 ) }
    dend_25 { pt3dadd( 92.5684, -564.007, -53.3592, 0.6 ) }
    dend_25 { pt3dadd( 92.4697, -565.085, -53.5616, 0.6 ) }
    dend_25 { pt3dadd( 92.3458, -566.402, -53.8064, 1.2 ) }
    dend_25 { pt3dadd( 91.9687, -569.444, -54.3247, 0.72 ) }
    dend_25 { pt3dadd( 91.7875, -570.706, -54.557, 1.08 ) }
    dend_25 { pt3dadd( 91.4412, -572.628, -54.9331, 0.96 ) }
    dend_25 { pt3dadd( 91.041, -574.516, -55.3217, 0.72 ) }
    dend_25 { pt3dadd( 90.7992, -575.595, -55.5315, 0.72 ) }
    dend_25 { pt3dadd( 90.1549, -578.23, -55.9887, 0.72 ) }
    dend_25 { pt3dadd( 89.5735, -580.218, -56.2586, 0.72 ) }
    dend_25 { pt3dadd( 89.32, -581.084, -56.3932, 1.2 ) }
    dend_25 { pt3dadd( 88.9905, -582.303, -56.6504, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_65 nseg = 3
    dend_61 nseg = 7
    dend_40 nseg = 5
    dend_19 nseg = 3
    dend_77 nseg = 9
    dend_72 nseg = 7
    dend_71 nseg = 3
    dend_68 nseg = 7
    dend_67 nseg = 9
    dend_62 nseg = 11
    dend_37 nseg = 5
    dend_20 nseg = 9
    dend_11 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 9
    dend_57 nseg = 5
    dend_44 nseg = 7
    dend_39 nseg = 9
    dend_36 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_35 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 9
    dend_53 nseg = 3
    dend_51 nseg = 5
    dend_46 nseg = 7
    dend_23 nseg = 9
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_48 nseg = 7
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_DBC_3c23ead0b4_0_0


