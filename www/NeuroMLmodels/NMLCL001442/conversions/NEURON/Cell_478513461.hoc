// Cell: Cell_478513461
/*
{
  "id" : "Cell_478513461",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "339.081, 360.36, 24.92, 14.6444", "346.403, 360.36, 24.92, 14.6444", "353.725, 360.36, 24.92, 14.6444" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "346.403, 360.36, 24.92, 1.0", "352.244, 374.176, 24.92, 1.0", "358.086, 387.992, 24.92, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "350.932, 365.473, 27.3824, 0.2288", "351.668, 366.304, 28.2923, 0.2542", "352.405, 367.136, 29.101, 0.3304", "353.176, 367.937, 29.7618, 0.4068", "354.098, 368.601, 30.1538, 0.4322", "355.096, 369.101, 30.3209, 0.4068", "356.207, 369.361, 30.3078, 0.3814", "357.327, 369.578, 30.2733, 0.4068", "358.454, 369.773, 30.2568, 0.4068", "359.385, 370.426, 30.28, 0.4068", "360.365, 371.011, 30.3433, 0.3814", "361.371, 371.551, 30.4282, 0.3814", "362.417, 371.997, 30.5396, 0.3814", "363.477, 372.351, 30.6463, 0.3814", "364.596, 372.198, 30.6468, 0.356", "365.721, 372.14, 30.6023, 0.3814", "366.856, 372.257, 30.5917, 0.4068", "367.965, 372.498, 30.569, 0.4576", "369.059, 372.825, 30.5122, 0.4068", "369.958, 373.529, 30.4721, 0.3304", "370.929, 374.102, 30.4654, 0.2542", "372.005, 374.479, 30.4951, 0.2288", "373.076, 374.51, 30.3825, 0.2542", "374.151, 374.65, 30.2422, 0.3304", "375.235, 374.999, 30.2098, 0.4322", "376.258, 375.297, 30.3551, 0.5084", "377.255, 375.571, 30.6622, 0.5084", "378.338, 375.878, 30.8493, 0.4576", "379.331, 376.379, 30.9893, 0.4068", "380.224, 377.092, 31.1172, 0.4068", "381.297, 377.268, 31.2449, 0.4576", "382.4, 377.436, 31.3267, 0.483", "383.465, 377.814, 31.3295, 0.4322", "384.45, 378.272, 31.4709, 0.3304", "385.439, 378.726, 31.6991, 0.2542", "386.514, 379.088, 31.8189, 0.2288", "387.591, 379.435, 31.8844, 0.2288", "388.673, 379.738, 32.006, 0.2288", "389.792, 379.877, 32.0972, 0.2288", "390.933, 379.915, 32.1096, 0.2542", "392.051, 380.135, 32.0779, 0.2796", "393.164, 380.366, 32.0295, 0.3304", "394.277, 380.131, 31.9455, 0.3304", "395.392, 379.948, 31.8466, 0.3304", "396.51, 380.163, 31.8254, 0.2796", "397.634, 380.299, 31.8598, 0.2542", "398.774, 380.207, 31.9032, 0.2288", "399.888, 380.015, 31.9567, 0.2288", "400.933, 379.569, 32.0379, 0.2288", "402.025, 379.313, 32.1135, 0.2288", "403.165, 379.253, 32.1563, 0.2288", "403.586, 378.527, 32.0144, 0.2288", "404.136, 377.795, 31.7783, 0.2288", "405.203, 377.382, 31.6042, 0.2542", "406.237, 376.915, 31.4482, 0.2796", "407.242, 376.4, 31.2855, 0.305", "408.224, 376.214, 31.3818, 0.2796", "409.315, 376.125, 31.5473, 0.2796", "410.457, 376.079, 31.6753, 0.305", "411.588, 375.995, 31.6772, 0.356", "412.717, 375.906, 31.5652, 0.3814" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "348.764, 367.325, 26.3791, 0.4068", "349.594, 368.113, 26.0987, 0.4068", "349.943, 369.155, 25.9306, 0.4068", "350.293, 370.198, 25.696, 0.356", "350.665, 370.567, 25.518, 0.356", "351.472, 371.349, 25.3837, 0.356", "352.319, 371.793, 25.5546, 0.356", "353.204, 372.34, 25.824, 0.4068", "354.134, 373.001, 26.02, 0.483", "354.952, 373.788, 26.1882, 0.5084", "355.743, 374.606, 26.3187, 0.4576", "356.538, 375.321, 26.2304, 0.4322", "357.32, 376.058, 25.9913, 0.4322", "358.051, 376.937, 25.8268, 0.4322", "358.796, 377.803, 25.7341, 0.3814", "359.559, 378.651, 25.6781, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "342.554, 356.725, 36.2331, 0.305", "342.295, 355.622, 35.6966, 0.305", "341.969, 354.563, 35.4766, 0.3304", "341.241, 353.783, 35.1492, 0.356", "340.433, 353.187, 34.8096, 0.4068", "339.308, 353.312, 34.6525, 0.4068", "338.212, 353.579, 34.6388, 0.4068", "337.137, 353.954, 34.7348, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "349.44, 353.922, 22.498, 0.3814", "349.221, 352.816, 21.9101, 0.356", "348.856, 351.738, 21.6726, 0.305", "348.69, 350.643, 21.3413, 0.305", "348.607, 349.54, 20.9292, 0.356", "349.118, 348.641, 20.4824, 0.4576", "349.873, 347.826, 20.0431, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "358.086, 387.992, 24.92, 1.0", "363.927, 401.808, 24.92, 1.0", "369.768, 415.624, 24.92, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "412.717, 375.906, 31.5652, 0.3814", "413.156, 376.473, 32.1126, 0.3814", "413.849, 377.369, 32.529, 0.356", "414.541, 378.264, 32.7146, 0.3304", "415.234, 379.159, 32.9263, 0.305", "415.69, 379.99, 33.0658, 0.5084", "416.424, 380.859, 33.2223, 0.5084", "417.093, 381.737, 33.3432, 0.4322", "417.531, 382.641, 33.2665, 0.3304", "418.327, 383.183, 33.327, 0.305", "419.297, 383.571, 33.6182, 0.4068", "420.323, 384.057, 33.9875, 0.5592", "421.336, 384.521, 34.4495, 0.6102", "422.278, 385.058, 34.9978, 0.5084", "423.099, 385.712, 35.6269, 0.356", "423.933, 386.354, 36.2496, 0.2542", "424.804, 386.94, 36.7962, 0.2288", "425.849, 387.227, 37.0191, 0.2288", "426.884, 387.619, 37.0233, 0.2288", "427.911, 388.071, 36.9177, 0.2288", "428.962, 388.367, 36.9228, 0.2288", "429.966, 388.61, 36.8771, 0.2542", "430.913, 388.787, 36.6414, 0.2796", "431.755, 388.922, 36.6766, 0.305", "432.634, 389.121, 36.9225, 0.2796", "433.698, 389.517, 37.0625, 0.2542", "434.766, 389.92, 37.1347, 0.2542", "435.848, 390.254, 37.1728, 0.305", "436.971, 390.388, 37.1378, 0.356", "438.017, 390.716, 37.1028, 0.356", "438.995, 391.215, 37.1666, 0.305", "439.786, 391.991, 37.2548, 0.2542", "440.585, 392.754, 37.2616, 0.2288", "441.536, 393.293, 37.1134, 0.2542", "442.25, 394.13, 36.9275, 0.305", "442.948, 395.013, 36.7321, 0.356", "443.864, 395.691, 36.5148, 0.356", "444.862, 396.243, 36.3437, 0.3304", "445.855, 396.787, 36.2247, 0.3304", "446.5, 397.696, 36.0506, 0.3814", "447.185, 398.586, 35.8904, 0.4068", "447.906, 399.448, 35.8207, 0.3814", "448.618, 400.281, 35.8515, 0.3304", "449.289, 401.156, 35.7918, 0.356", "449.94, 402.052, 35.5888, 0.4068", "450.221, 403.046, 35.2215, 0.4322", "450.493, 404.066, 34.7533, 0.356", "450.807, 405.137, 34.2944, 0.3304", "451.565, 405.74, 34.018, 0.3304", "452.602, 406.051, 34.0024, 0.3814", "453.611, 406.557, 34.0332, 0.3304", "454.626, 407.063, 34.0774, 0.2796", "455.726, 407.328, 34.1947, 0.2288", "456.843, 407.517, 34.3246, 0.2288", "457.982, 407.581, 34.4193, 0.2288", "459.105, 407.749, 34.4386, 0.2288", "460.217, 407.989, 34.3809, 0.2288", "461.281, 407.668, 34.2583, 0.2288", "462.34, 407.334, 34.1482, 0.2288", "463.314, 407.034, 34.085, 0.2288", "463.949, 406.304, 33.7879, 0.2288", "464.832, 405.729, 33.4575, 0.2288", "465.869, 405.247, 33.1929, 0.2288", "466.992, 405.096, 33.0428, 0.2796", "468.125, 404.976, 33.04, 0.3304" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "412.717, 375.906, 31.5652, 0.3814", "413.277, 374.884, 31.1648, 0.2796", "413.969, 374.225, 30.7894, 0.3304", "414.904, 373.759, 30.6306, 0.4068", "415.94, 373.277, 30.4878, 0.4322", "416.981, 372.966, 30.2708, 0.356", "418.026, 372.703, 29.9813, 0.2796", "419.088, 372.388, 29.8704, 0.2288", "420.147, 372.046, 29.8178, 0.2288", "421.184, 371.611, 29.6632, 0.2288", "421.821, 370.781, 29.4596, 0.2288", "422.233, 369.725, 29.2186, 0.2542", "423.259, 369.47, 29.0864, 0.305", "423.987, 368.787, 28.9114, 0.4068", "424.474, 367.765, 28.6334, 0.5338", "424.687, 366.874, 28.107, 0.6102", "425.093, 365.985, 27.4992, 0.6102", "425.8, 365.088, 26.9974, 0.5338", "426.65, 364.553, 26.4412, 0.5338", "427.613, 364.249, 25.8199, 0.5338", "428.706, 363.918, 25.3803, 0.5338", "429.714, 363.466, 25.0434, 0.4322", "430.543, 362.761, 24.665, 0.4068", "431.511, 362.214, 24.3565, 0.4068", "432.552, 361.752, 24.1699, 0.483", "433.676, 361.572, 24.0261, 0.4576", "434.808, 361.471, 23.8773, 0.4068", "435.923, 361.693, 23.6876, 0.305", "436.99, 361.713, 23.3911, 0.2542", "437.976, 361.386, 23.0344, 0.2288", "438.878, 360.695, 22.7652, 0.2542", "439.688, 359.907, 22.5071, 0.305", "440.564, 359.216, 22.2497, 0.4068", "441.605, 358.745, 22.0261, 0.5084", "442.486, 358.102, 21.7118, 0.5848", "443.299, 357.388, 21.2693, 0.5848", "444.264, 356.794, 20.8425, 0.5084", "445.203, 356.27, 20.399, 0.4068", "445.998, 355.89, 19.7749, 0.305", "446.964, 355.5, 19.184, 0.2542", "447.973, 355.013, 18.7499, 0.2288", "448.822, 354.246, 18.5032, 0.2288", "449.605, 353.479, 18.4894, 0.2288", "450.342, 352.712, 18.7146, 0.2288", "450.89, 351.715, 18.9785, 0.2796", "451.421, 350.709, 19.223, 0.3304", "451.914, 349.703, 19.463, 0.3814", "452.466, 348.748, 19.5925, 0.356", "453.119, 347.884, 19.4918, 0.356", "454.073, 347.318, 19.2911, 0.356", "455.088, 346.82, 19.0651, 0.3814", "456.161, 346.425, 18.8871, 0.4068", "457.257, 346.118, 18.7733, 0.4322", "458.388, 345.957, 18.7443, 0.4576", "459.503, 345.756, 18.8187, 0.4068", "460.605, 345.526, 18.9722, 0.3814", "461.618, 345.028, 19.1374, 0.3814", "462.628, 344.578, 19.2451, 0.4576", "463.695, 344.503, 19.1669, 0.5084", "464.743, 344.729, 19.0916, 0.483", "465.78, 345.16, 19.1149, 0.4322", "466.799, 345.645, 19.1223, 0.3814", "467.811, 346.153, 19.0974, 0.4068", "468.864, 346.383, 19.2273, 0.4322", "469.909, 346.637, 19.4391, 0.4322", "470.913, 347.119, 19.5037, 0.3814", "471.934, 347.253, 19.5905, 0.3304", "472.973, 347.102, 19.8099, 0.305", "473.955, 347.16, 19.7726, 0.305", "474.873, 347.442, 19.678, 0.305", "475.722, 347.997, 19.7294, 0.3304", "476.586, 348.683, 19.6284, 0.3814", "477.562, 349.149, 19.502, 0.4068", "478.637, 349.415, 19.4546, 0.3814" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "359.559, 378.651, 25.6781, 0.305", "359.666, 379.36, 25.7317, 0.3304", "359.835, 380.479, 25.9071, 0.356", "360.004, 381.601, 26.159, 0.4576", "359.954, 381.84, 26.5066, 0.356", "360.422, 382.835, 26.6938, 0.356", "360.717, 383.853, 26.9977, 0.4068", "361.271, 384.792, 27.3298, 0.4068", "361.78, 385.743, 27.646, 0.4068", "361.741, 386.857, 27.9436, 0.3814", "361.883, 387.873, 28.0546, 0.3814", "362.19, 388.795, 27.8912, 0.356" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "359.559, 378.651, 25.6781, 0.305", "360.495, 378.959, 25.7519, 0.5338", "361.545, 379.33, 25.7348, 0.5084", "362.561, 379.848, 25.7352, 0.4068", "363.531, 380.435, 25.6482, 0.356", "364.445, 381.105, 25.4342, 0.3814", "365.454, 381.308, 25.0244, 0.4576", "366.486, 381.395, 24.4488, 0.5338", "367.544, 381.294, 23.7842, 0.5592", "368.593, 381.167, 23.1353, 0.5084", "369.587, 380.879, 22.7988, 0.4322", "370.573, 380.861, 22.5317, 0.4068", "371.544, 381.158, 22.1099, 0.4576", "372.634, 381.2, 21.6838, 0.483", "373.763, 381.096, 21.2847, 0.483", "374.661, 380.388, 20.8654, 0.4322", "375.353, 379.805, 20.2436, 0.3814", "376.098, 379.47, 19.4074, 0.305", "377.035, 379.238, 18.4827, 0.305", "377.707, 380.147, 17.7601, 0.3304", "378.286, 381.078, 17.1363, 0.4322", "378.682, 382.041, 16.4578, 0.4576", "379.368, 382.756, 15.7743, 0.483", "380.248, 383.304, 15.1021, 0.4068", "381.333, 383.491, 14.6901, 0.3304", "382.067, 383.999, 14.391, 0.2796", "382.21, 385.07, 13.72, 0.305" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "337.137, 353.954, 34.7348, 0.3304", "337.003, 353.205, 35.4592, 0.356", "336.816, 352.158, 36.9155, 0.356", "336.7, 351.108, 37.543, 0.3814", "336.95, 350.042, 38.2572, 0.3304", "337.233, 348.991, 39.0264, 0.2796", "337.672, 348.012, 39.8322, 0.2288", "338.153, 347.064, 40.6344, 0.2288", "338.797, 346.242, 41.4089, 0.2288", "339.425, 345.39, 42.1187, 0.2288", "339.995, 344.416, 42.6798, 0.2288", "340.409, 343.405, 43.0391, 0.2288", "340.56, 342.328, 43.12, 0.2288", "340.615, 341.222, 43.0749, 0.2288", "340.556, 340.08, 43.0388, 0.2288", "341.346, 339.313, 43.0556, 0.2288", "342.224, 338.585, 43.1477, 0.2288", "343.104, 337.858, 43.3306, 0.2288", "343.984, 337.13, 43.5817, 0.2288", "344.996, 336.635, 43.8922, 0.2288", "346.025, 336.164, 44.2296, 0.2288", "347.127, 336.074, 44.6118, 0.2288", "348.231, 335.984, 45.526, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "337.137, 353.954, 34.7348, 0.3304", "336.688, 354.219, 34.9031, 0.3814", "335.722, 354.791, 35.152, 0.483", "334.612, 354.99, 35.3903, 0.5848", "333.491, 355.178, 35.5844, 0.5592", "332.425, 355.587, 35.7134, 0.5084", "331.369, 355.554, 35.7557, 0.4576", "330.321, 355.179, 35.7045, 0.4322", "329.508, 355.391, 35.9528, 0.3814", "328.6, 355.21, 36.3126, 0.3814", "327.588, 354.847, 36.5926, 0.4322", "326.498, 354.952, 36.6414, 0.5084", "325.415, 354.871, 36.5098, 0.483", "324.341, 354.64, 36.2384, 0.4322", "323.227, 354.704, 35.9198, 0.3814", "322.098, 354.871, 35.6474, 0.4322", "320.97, 354.963, 35.5314, 0.4576", "319.844, 355.012, 35.5393, 0.4576", "318.739, 354.728, 35.5911, 0.356", "317.675, 354.335, 35.63, 0.3304", "316.656, 353.822, 35.611, 0.356", "315.731, 353.21, 35.4852, 0.483", "314.849, 352.555, 35.2582, 0.5338", "313.923, 351.931, 35.1554, 0.5592", "312.961, 351.354, 35.1604, 0.483", "311.915, 350.891, 35.2008, 0.4322", "310.866, 350.444, 35.233, 0.3814", "309.812, 350.01, 35.2279, 0.3814", "309.026, 349.24, 35.2957, 0.356", "308.163, 348.52, 35.3522, 0.305", "307.235, 347.85, 35.3752, 0.2542", "306.53, 347.051, 35.2366, 0.2288", "305.868, 346.225, 34.9605, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "349.873, 347.826, 20.0431, 0.4576", "350.151, 349.111, 18.2837, 0.4576", "350.381, 350.172, 17.8573, 0.483", "350.611, 351.233, 17.6024, 0.4322", "351.115, 351.679, 17.5102, 0.4576", "351.932, 352.385, 17.5871, 0.483", "352.83, 353.013, 17.7589, 0.5084", "353.863, 353.279, 17.8617, 0.5338", "354.983, 353.323, 17.8195, 0.6102", "356.04, 353.746, 17.6732, 0.6356", "357.089, 354.047, 17.3784, 0.661", "358.12, 354.078, 16.8937, 0.6356", "359.079, 353.609, 16.424, 0.6356", "360.005, 352.939, 16.046, 0.5592", "360.879, 352.202, 15.7384, 0.5338", "361.904, 351.897, 15.4777, 0.5084", "363.042, 351.908, 15.2545, 0.5084", "364.138, 351.958, 15.0013, 0.483", "365.227, 352.04, 14.7381, 0.4576", "366.306, 352.284, 14.6732, 0.5084", "367.313, 352.254, 14.7318, 0.5084", "368.108, 351.431, 14.7935, 0.5338", "368.979, 350.705, 14.9203, 0.5084", "369.868, 349.995, 15.0653, 0.5848", "370.799, 349.348, 15.1552, 0.6356", "371.811, 348.876, 15.1241, 0.6356", "372.775, 348.311, 15.0786, 0.5592", "373.659, 347.596, 15.1211, 0.4576", "374.646, 347.076, 15.2444, 0.4322", "375.697, 346.672, 15.4419, 0.4322", "376.692, 346.346, 15.7741, 0.483", "377.721, 346.092, 16.0346, 0.483", "378.784, 345.909, 16.0624, 0.4576", "379.693, 345.316, 16.0402, 0.356", "380.474, 344.518, 16.0034, 0.305", "380.987, 343.539, 15.8361, 0.305", "381.769, 342.841, 15.6868, 0.356", "382.795, 342.399, 15.6701, 0.3814" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "349.873, 347.826, 20.0431, 0.4576", "350.951, 347.156, 19.7453, 0.356", "351.581, 346.389, 19.3783, 0.305", "351.121, 345.519, 19.2015, 0.3304", "350.365, 344.764, 19.2818, 0.3814", "349.535, 344.182, 19.6191, 0.483", "348.695, 343.485, 20.0466, 0.4576", "347.852, 342.749, 20.4833, 0.483", "347.817, 341.689, 20.7542, 0.5084", "347.984, 340.585, 20.8635, 0.6102", "348.333, 339.496, 20.9128, 0.661", "348.713, 338.436, 20.9696, 0.6864", "349.136, 337.401, 21.0707, 0.6356", "349.667, 336.389, 21.1361, 0.5592", "350.144, 335.397, 21.0887, 0.4322", "350.595, 334.414, 20.9038, 0.3814", "350.879, 333.375, 20.8659, 0.356", "351.015, 332.331, 20.9058, 0.4322", "350.65, 331.275, 20.8345, 0.5084", "350.369, 330.197, 20.7033, 0.5848", "350.238, 329.08, 20.5535, 0.6102", "350.013, 327.991, 20.4705, 0.5848", "349.661, 326.939, 20.5292, 0.5592", "349.814, 325.843, 20.577, 0.5084", "350.04, 324.744, 20.6327, 0.5084", "350.053, 323.703, 20.9201, 0.483", "350.226, 322.649, 21.2778, 0.5084", "350.612, 321.577, 21.5522, 0.5084", "350.587, 320.499, 21.8642, 0.6102", "350.392, 319.418, 22.2551, 0.6864", "350.885, 318.443, 22.64, 0.7372", "351.517, 317.514, 22.9786, 0.6356", "352.427, 316.856, 23.1756, 0.5338", "352.972, 315.953, 23.3527, 0.4322", "353.213, 314.849, 23.5691, 0.4068", "353.185, 313.763, 23.8662, 0.3304", "353.08, 312.679, 24.2426, 0.2796", "352.938, 311.555, 24.5523, 0.2288", "352.795, 310.421, 24.7869, 0.2796", "352.684, 309.283, 24.9734, 0.3304", "352.638, 308.144, 25.1232, 0.4068", "352.686, 307.005, 25.2587, 0.4322", "352.592, 305.869, 25.3479, 0.5084", "352.477, 304.733, 25.4157, 0.5592", "352.309, 303.615, 25.5536, 0.5848", "352.135, 302.5, 25.7462, 0.5592", "352.676, 301.492, 25.9162, 0.5338", "353.213, 300.484, 26.0668, 0.5592", "353.661, 299.455, 26.2675, 0.5592", "354.091, 298.417, 26.475, 0.5592", "354.426, 297.334, 26.5658, 0.5338", "354.701, 296.24, 26.5735, 0.5084", "354.869, 295.127, 26.5241, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "478.637, 349.415, 19.4546, 0.3814", "479.656, 348.516, 19.2198, 0.2796", "480.55, 347.9, 18.8776, 0.3304", "481.616, 347.504, 18.5095, 0.4068", "482.728, 347.254, 18.213, 0.4322", "483.854, 347.086, 17.9279, 0.356", "484.994, 347.007, 17.6192, 0.2796", "486.046, 346.694, 17.2566, 0.2288", "486.933, 346.496, 16.7531, 0.2288", "487.548, 347.05, 16.0215, 0.2542", "488.541, 347.133, 15.3643, 0.2796", "489.647, 346.944, 14.8769, 0.3304", "490.617, 346.337, 14.5267, 0.356", "491.521, 345.673, 14.2505, 0.4068", "492.314, 344.913, 13.9623, 0.4576", "493.268, 344.375, 13.7274, 0.5084", "494.357, 344.026, 13.5619, 0.5084", "495.466, 344.007, 13.4338, 0.4322", "496.589, 344.207, 13.337, 0.356", "497.345, 343.575, 13.3225, 0.356", "497.931, 342.602, 13.3935, 0.4068", "498.281, 341.533, 13.5505, 0.4322", "498.666, 340.476, 13.7392, 0.356", "499.199, 339.465, 13.869, 0.2796", "499.604, 338.412, 13.9514, 0.2288", "499.759, 337.279, 14.0003, 0.2288", "499.574, 336.172, 14.0179, 0.2288", "499.242, 335.078, 14.0, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "478.637, 349.415, 19.4546, 0.3814", "478.694, 349.862, 20.9566, 0.2288", "479.76, 350.204, 20.9556, 0.2288", "480.859, 350.521, 20.9474, 0.2542", "481.96, 350.827, 20.9548, 0.2796", "483.075, 351.076, 20.981, 0.305", "484.206, 351.239, 21.0305, 0.2796", "485.337, 351.404, 21.099, 0.2796", "486.468, 351.569, 21.179, 0.2796", "487.606, 351.667, 21.2564, 0.305", "488.748, 351.722, 21.3231, 0.2796", "489.841, 352.011, 21.4043, 0.2542", "490.909, 352.108, 21.4476, 0.2288", "491.96, 351.753, 21.3756, 0.2288", "493.035, 351.755, 21.4145, 0.2796", "494.127, 351.825, 21.4945, 0.3304", "495.234, 351.879, 21.4682, 0.4068", "496.355, 351.799, 21.464, 0.3814", "497.451, 351.541, 21.5484, 0.356", "498.462, 351.008, 21.6878, 0.2796", "499.379, 350.345, 21.8592, 0.2542", "500.208, 349.563, 22.0709, 0.2542", "501.04, 348.836, 22.381, 0.2796", "501.873, 348.119, 23.24, 0.305" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "362.19, 388.795, 27.8912, 0.356", "361.306, 388.867, 28.0053, 0.305", "360.258, 388.913, 29.2443, 0.305", "359.195, 388.892, 29.7844, 0.3304", "358.124, 388.775, 30.3859, 0.356", "357.043, 388.587, 30.9932, 0.4068", "355.921, 388.612, 31.4387, 0.4068", "354.797, 388.695, 31.7383, 0.4068", "353.716, 388.85, 32.0611, 0.356", "352.607, 388.85, 32.3131, 0.356", "351.477, 388.728, 32.4534, 0.356", "350.4, 388.449, 32.6642, 0.3814", "349.316, 388.235, 32.8966, 0.356", "348.208, 388.228, 32.9949, 0.305", "347.241, 387.809, 33.1114, 0.2796", "346.369, 387.695, 33.3096, 0.2796", "345.503, 388.441, 33.5258, 0.305", "344.636, 388.871, 33.9226, 0.2796", "343.64, 389.219, 34.3613, 0.2796", "342.546, 389.523, 34.7374, 0.356", "341.426, 389.555, 34.9185, 0.483", "340.316, 389.636, 34.9261, 0.5592", "339.243, 389.953, 34.8023, 0.5084", "338.145, 390.101, 34.6735, 0.4322", "337.022, 390.104, 34.72, 0.3814" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "362.19, 388.795, 27.8912, 0.356", "362.272, 390.019, 27.7994, 0.356", "362.288, 391.15, 27.7312, 0.356", "362.261, 392.29, 27.6469, 0.3814", "362.2, 393.425, 27.5377, 0.3304", "361.551, 394.21, 27.6113, 0.2796", "360.865, 394.988, 27.7796, 0.2542", "360.425, 395.986, 27.731, 0.305", "359.889, 396.927, 27.5187, 0.356", "359.257, 397.81, 27.1813, 0.356", "358.401, 398.424, 27.0018, 0.305", "357.643, 399.16, 26.8721, 0.2542", "357.096, 400.155, 26.6578, 0.2288", "356.552, 401.099, 26.327, 0.2288", "356.033, 402.033, 25.8633, 0.2288", "355.584, 402.996, 25.2802, 0.2542", "354.603, 403.49, 24.7076, 0.2796", "353.746, 404.101, 24.1985, 0.3304", "353.418, 405.194, 23.7848, 0.3304", "353.195, 406.265, 23.3317, 0.3304", "353.051, 407.317, 22.7537, 0.2796", "353.219, 408.413, 22.1659, 0.2542", "353.223, 409.345, 21.4778, 0.2288", "353.36, 410.126, 20.6474, 0.2542", "353.846, 411.026, 19.7819, 0.2796", "354.187, 411.937, 18.8908, 0.356", "354.132, 413.063, 18.2013, 0.4068", "353.818, 414.001, 17.6912, 0.483", "352.7, 414.241, 17.3658, 0.4576", "351.996, 414.992, 17.1371, 0.4576", "351.418, 415.882, 16.915, 0.4322", "350.547, 416.357, 16.5933, 0.4576", "349.711, 416.665, 16.4028, 0.4322", "348.92, 416.759, 17.08, 0.3814" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "305.868, 346.225, 34.9605, 0.2288", "305.234, 346.57, 34.8379, 0.2288", "304.304, 347.082, 35.8652, 0.2288", "303.487, 347.807, 36.2939, 0.2288", "302.748, 348.676, 36.7282, 0.2288", "302.026, 349.557, 37.1731, 0.2542", "301.315, 350.447, 37.6295, 0.2796", "300.905, 351.435, 38.1556, 0.305", "300.681, 352.481, 38.7568, 0.2796", "300.285, 353.443, 39.4181, 0.2796", "299.783, 354.353, 40.1125, 0.2796", "298.807, 354.691, 40.7646, 0.305", "297.756, 354.939, 41.3428, 0.2796", "297.095, 355.802, 41.5727, 0.2542", "296.434, 356.666, 41.2457, 0.2796" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "305.868, 346.225, 34.9605, 0.2288", "305.497, 345.636, 34.7931, 0.2288", "304.647, 345.231, 34.4851, 0.2288", "304.154, 344.494, 34.5388, 0.2542", "303.207, 343.991, 34.6545, 0.2796", "302.209, 343.454, 34.757, 0.3304", "301.328, 342.731, 34.8054, 0.3304", "300.458, 341.992, 34.8071, 0.356", "299.594, 341.243, 34.7906, 0.3814", "298.637, 340.619, 34.7208, 0.4576", "297.663, 340.02, 34.6447, 0.483", "296.69, 339.42, 34.5685, 0.4576", "295.706, 338.839, 34.5078, 0.3814", "294.708, 338.28, 34.47, 0.3304", "294.03, 337.451, 34.3538, 0.2796", "293.428, 336.58, 34.1771, 0.2542", "292.716, 336.656, 34.4075, 0.2288", "292.045, 336.222, 34.7606, 0.2542", "291.415, 335.269, 35.0134, 0.2796" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "382.795, 342.399, 15.6701, 0.3814", "382.839, 341.87, 15.6531, 0.305", "382.932, 340.731, 15.5998, 0.3304", "382.94, 339.591, 15.5261, 0.4068", "382.881, 338.448, 15.4491, 0.483", "382.567, 337.39, 15.2864, 0.483", "382.136, 336.37, 15.0329, 0.4068", "381.929, 335.266, 14.8016, 0.3304", "381.81, 334.129, 14.6237, 0.305", "382.222, 333.095, 14.5803, 0.305", "382.66, 332.063, 14.6264, 0.3304", "383.02, 330.992, 14.6121, 0.356", "383.622, 330.053, 14.5741, 0.356", "384.381, 329.197, 14.5261, 0.305", "385.078, 328.293, 14.4835, 0.2796", "385.812, 327.437, 14.4522, 0.2796", "386.823, 326.901, 14.4483, 0.305", "386.829, 325.801, 14.495, 0.2796", "387.127, 324.778, 14.576, 0.2542", "387.847, 323.895, 14.6749, 0.2542", "388.612, 323.076, 14.7026, 0.2796", "389.42, 322.316, 14.6156, 0.305", "390.427, 321.957, 14.6924, 0.2796", "391.367, 321.508, 14.7801, 0.2542", "392.191, 320.887, 14.6695, 0.2542", "393.112, 320.287, 14.4904, 0.2796", "393.954, 319.826, 14.4761, 0.3304", "394.713, 319.509, 14.7829, 0.4068", "395.447, 318.899, 14.9992, 0.483", "396.167, 318.146, 15.0128, 0.5592" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "382.795, 342.399, 15.6701, 0.3814", "383.327, 342.655, 15.8634, 0.5338", "384.27, 343.264, 15.8594, 0.5592", "385.14, 343.971, 15.9187, 0.5592", "386.233, 344.202, 15.8654, 0.5848", "387.348, 344.382, 15.7121, 0.5084", "388.478, 344.51, 15.5807, 0.4068", "389.496, 344.103, 15.3464, 0.3814", "390.423, 343.953, 14.9401, 0.4322", "391.28, 344.15, 14.3556, 0.5084", "392.315, 344.416, 14.0707, 0.5084", "393.353, 344.739, 13.9655, 0.4576", "394.402, 345.195, 13.8756, 0.3814", "395.433, 345.688, 13.817, 0.3304", "396.459, 345.977, 13.7419, 0.3304", "397.5, 345.665, 13.5322, 0.356", "398.612, 345.601, 13.2793, 0.4068", "399.755, 345.648, 13.0446, 0.4068", "400.852, 345.971, 12.8507, 0.4068", "401.909, 346.386, 12.6876, 0.3304", "402.898, 346.96, 12.545, 0.2796", "403.925, 347.117, 12.332, 0.2796", "404.976, 346.975, 11.48, 0.356" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "354.869, 295.127, 26.5241, 0.4576", "354.351, 294.103, 27.8799, 0.3304", "353.972, 293.267, 29.4795, 0.3814", "353.674, 292.34, 30.2061, 0.4068", "353.228, 291.404, 30.9347, 0.4068", "352.599, 290.458, 31.507, 0.3814", "351.631, 290.067, 32.0214, 0.4068", "350.504, 289.936, 32.5198, 0.4068", "349.45, 290.126, 33.0901, 0.3814", "348.374, 290.192, 33.7296, 0.305", "347.29, 290.059, 34.4156, 0.2542", "346.376, 289.425, 35.1196, 0.2288", "345.612, 288.971, 35.9142, 0.2288", "345.017, 288.72, 36.8651, 0.2288", "344.829, 287.948, 37.5726, 0.2288", "344.58, 286.979, 37.9263, 0.2542", "343.817, 286.177, 38.0495, 0.2796", "343.317, 285.236, 38.2113, 0.3304", "342.922, 284.262, 38.3404, 0.3304", "342.591, 283.315, 38.3239, 0.3814", "342.228, 282.453, 38.6011, 0.4068", "341.771, 281.564, 38.9892, 0.483", "341.141, 280.623, 39.48, 0.5084" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "354.869, 295.127, 26.5241, 0.4576", "355.464, 294.999, 26.5741, 0.5084", "356.552, 294.812, 26.7541, 0.4576", "357.676, 294.828, 27.0301, 0.356", "358.737, 294.872, 27.2891, 0.2796", "359.681, 294.66, 27.4569, 0.2542", "360.606, 293.99, 27.7098, 0.2796", "361.088, 293.292, 28.2425, 0.356", "361.634, 292.679, 29.0206, 0.4068", "362.428, 292.19, 29.9443, 0.4576", "363.5, 291.968, 30.6622, 0.4576", "364.579, 291.738, 31.2122, 0.4322", "365.554, 291.325, 31.8158, 0.4322", "366.486, 290.789, 32.4223, 0.3814", "367.388, 290.16, 33.0313, 0.356", "367.948, 289.173, 33.5121, 0.3304", "368.595, 288.392, 34.053, 0.356", "369.375, 287.924, 34.8082, 0.4322", "370.47, 287.706, 35.5104, 0.4322", "371.432, 287.96, 36.1449, 0.4576", "372.259, 288.493, 36.8049, 0.3814", "373.232, 288.431, 37.6765, 0.3814", "374.285, 288.26, 38.6352, 0.356", "375.346, 288.083, 39.6578, 0.4068", "376.336, 288.429, 40.7792, 0.4322", "377.078, 288.496, 42.0104, 0.4322", "377.164, 287.821, 43.4146, 0.3814", "377.305, 287.016, 44.8686, 0.3304", "377.503, 286.112, 46.2308, 0.305", "377.812, 285.017, 47.2965, 0.305", "377.208, 284.688, 48.398, 0.2796", "377.351, 283.87, 49.436, 0.2796", "377.346, 282.883, 50.3801, 0.2796", "377.068, 281.884, 51.2369, 0.3304", "376.605, 280.852, 52.64, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "291.415, 335.269, 35.0134, 0.2796", "292.215, 334.239, 36.96, 0.3814", "291.969, 333.135, 37.3537, 0.4576", "291.594, 332.057, 37.4702, 0.4576", "291.268, 330.963, 37.5606, 0.4068", "290.961, 329.861, 37.637, 0.4068", "290.552, 328.803, 37.7462, 0.3304", "290.118, 327.756, 38.08, 0.3304" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "291.415, 335.269, 35.0134, 0.2796", "290.67, 334.66, 35.1484, 0.3304", "289.741, 334.007, 35.1736, 0.4068", "288.787, 333.386, 35.0888, 0.4322", "287.82, 332.775, 34.9266, 0.356", "286.851, 332.167, 34.7651, 0.2796" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "396.167, 318.146, 15.0128, 0.5592", "395.865, 317.618, 14.6832, 0.2288", "395.3, 316.628, 14.8909, 0.2288", "394.713, 315.649, 14.9825, 0.2542", "394.09, 314.69, 15.0681, 0.3304", "393.416, 313.767, 15.1454, 0.4068", "392.71, 312.867, 15.2142, 0.4322", "392.078, 311.916, 15.2899, 0.3814", "391.492, 310.936, 15.3777, 0.3304", "391.067, 309.881, 15.4745, 0.3304", "390.709, 308.795, 15.5779, 0.3304", "390.598, 307.668, 15.6898, 0.3304", "390.569, 306.527, 15.8061, 0.2796", "390.562, 305.383, 15.9026, 0.2796", "390.562, 304.239, 15.9756, 0.2796", "390.821, 303.136, 16.0462, 0.305", "391.161, 302.045, 16.1183, 0.2796", "391.862, 301.157, 16.171, 0.305", "392.621, 300.3, 16.24, 0.3304" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "396.167, 318.146, 15.0128, 0.5592", "397.201, 317.54, 15.0904, 0.4322", "398.258, 317.235, 15.2506, 0.483", "399.231, 316.699, 15.3609, 0.4322", "400.151, 316.022, 15.3885, 0.4576", "401.189, 315.681, 15.3283, 0.4068", "402.242, 315.378, 15.2054, 0.4068", "403.159, 314.724, 15.1626, 0.356", "403.984, 314.022, 15.2177, 0.3814", "404.663, 313.247, 15.4137, 0.4576", "405.484, 312.723, 15.4428, 0.5848", "406.381, 312.328, 15.1992, 0.6102", "406.562, 311.261, 14.8733, 0.5338", "406.869, 310.213, 14.5136, 0.4068", "407.584, 309.331, 14.2243, 0.3304", "408.497, 308.981, 13.9125, 0.305", "409.573, 309.066, 13.5451, 0.305", "410.435, 308.396, 13.2281, 0.305", "411.268, 307.622, 12.6, 0.305" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "286.851, 332.167, 34.7651, 0.2796", "286.49, 332.378, 35.364, 0.2288", "285.558, 332.92, 36.7671, 0.2288", "284.627, 333.463, 37.3607, 0.2288", "283.883, 334.327, 38.1164, 0.2542", "282.833, 334.725, 38.8576, 0.2796", "281.775, 334.94, 39.5889, 0.305", "280.702, 334.79, 40.3267, 0.305", "279.618, 334.542, 40.9634, 0.305", "278.524, 334.21, 41.4506, 0.305", "277.655, 334.212, 42.0535, 0.305", "276.716, 334.327, 42.7199, 0.305", "275.668, 334.26, 43.2891, 0.305", "274.986, 333.397, 43.8298, 0.2796", "274.117, 333.309, 44.0583, 0.2542", "273.177, 333.455, 44.1829, 0.2288", "272.193, 333.659, 44.455, 0.2288", "271.169, 333.256, 44.7768, 0.2288", "270.096, 333.057, 45.0976, 0.2288", "268.954, 333.133, 45.64, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "286.851, 332.167, 34.7651, 0.2796", "286.257, 331.1, 34.4994, 0.2288", "285.391, 330.372, 34.2527, 0.2288", "284.578, 329.591, 34.0522, 0.2288", "283.929, 328.648, 33.9475, 0.2288", "283.196, 327.797, 33.9685, 0.2288", "282.361, 327.052, 34.1348, 0.2288", "281.494, 326.32, 34.3773, 0.2288", "280.681, 325.529, 34.6447, 0.2288", "279.935, 324.668, 34.9037, 0.2288", "278.994, 324.082, 35.1714, 0.2288", "278.083, 323.498, 35.4183, 0.2288", "277.733, 322.434, 35.4992, 0.2288", "276.964, 321.655, 35.5191, 0.2542", "276.048, 320.971, 35.5144, 0.2796", "275.181, 320.231, 35.4749, 0.305", "274.571, 319.353, 35.5718, 0.2796", "274.041, 318.419, 35.7473, 0.2542", "273.638, 317.364, 35.8215, 0.2542", "273.109, 316.386, 35.81, 0.3304", "272.355, 315.545, 35.7392, 0.4576", "271.595, 314.698, 35.6737, 0.5338", "270.82, 313.859, 35.653, 0.5084", "269.955, 313.129, 35.7582, 0.4068", "269.073, 312.415, 35.975, 0.3304", "268.155, 311.734, 36.2513, 0.3304", "267.401, 310.908, 36.6078, 0.3304", "266.754, 309.987, 37.0373, 0.356", "265.871, 309.323, 37.5332, 0.3304", "264.961, 308.774, 38.0828, 0.3304", "263.994, 308.832, 38.7534, 0.305", "262.992, 308.847, 39.4139, 0.305", "261.876, 308.726, 39.807, 0.305", "260.774, 308.522, 40.0344, 0.2796", "259.688, 308.194, 40.32, 0.2796" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_18", "dend_9", "dend_0", "dend_27", "dend_24", "dend_20", "dend_19", "dend_17", "dend_10", "dend_4", "dend_1", "dend_26", "dend_25", "dend_22", "dend_21", "dend_16", "dend_11", "dend_6", "dend_5", "dend_3", "dend_2", "dend_15", "dend_12", "dend_8", "dend_7", "dend_14", "dend_13" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17225",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "3.542708"
  }, {
    "group" : "axon",
    "value" : "3.542708"
  }, {
    "group" : "dend",
    "value" : "3.542708"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "79.8274"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.8808567E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "9.800909E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.09624063",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0030504595",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.8579999E-6",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.035556488",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.015153745",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.8123259",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "4.1602372E-5",
    "erev" : "-83.267525"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.9129718E-4",
    "erev" : "-83.267525"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.344549E-6",
    "erev" : "-83.267525"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.964463E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0029357036",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513461",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513461

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_23, dend_18, dend_9, dend_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_10, dend_4, dend_1, dend_26, dend_25, dend_22, dend_21, dend_16, dend_11, dend_6, dend_5, dend_3, dend_2, dend_15, dend_12, dend_8, dend_7, dend_14, dend_13]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_17225, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_17225
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513461
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_18(0), soma_0(0.5)
    connect dend_9(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 339.081, 360.36, 24.92, 14.6444 ) }
    soma_0 { pt3dadd( 346.403, 360.36, 24.92, 14.6444 ) }
    soma_0 { pt3dadd( 353.725, 360.36, 24.92, 14.6444 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 346.403, 360.36, 24.92, 1.0 ) }
    axon_0 { pt3dadd( 352.244, 374.176, 24.92, 1.0 ) }
    axon_0 { pt3dadd( 358.086, 387.992, 24.92, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 350.932, 365.473, 27.3824, 0.2288 ) }
    dend_23 { pt3dadd( 351.668, 366.304, 28.2923, 0.2542 ) }
    dend_23 { pt3dadd( 352.405, 367.136, 29.101, 0.3304 ) }
    dend_23 { pt3dadd( 353.176, 367.937, 29.7618, 0.4068 ) }
    dend_23 { pt3dadd( 354.098, 368.601, 30.1538, 0.4322 ) }
    dend_23 { pt3dadd( 355.096, 369.101, 30.3209, 0.4068 ) }
    dend_23 { pt3dadd( 356.207, 369.361, 30.3078, 0.3814 ) }
    dend_23 { pt3dadd( 357.327, 369.578, 30.2733, 0.4068 ) }
    dend_23 { pt3dadd( 358.454, 369.773, 30.2568, 0.4068 ) }
    dend_23 { pt3dadd( 359.385, 370.426, 30.28, 0.4068 ) }
    dend_23 { pt3dadd( 360.365, 371.011, 30.3433, 0.3814 ) }
    dend_23 { pt3dadd( 361.371, 371.551, 30.4282, 0.3814 ) }
    dend_23 { pt3dadd( 362.417, 371.997, 30.5396, 0.3814 ) }
    dend_23 { pt3dadd( 363.477, 372.351, 30.6463, 0.3814 ) }
    dend_23 { pt3dadd( 364.596, 372.198, 30.6468, 0.356 ) }
    dend_23 { pt3dadd( 365.721, 372.14, 30.6023, 0.3814 ) }
    dend_23 { pt3dadd( 366.856, 372.257, 30.5917, 0.4068 ) }
    dend_23 { pt3dadd( 367.965, 372.498, 30.569, 0.4576 ) }
    dend_23 { pt3dadd( 369.059, 372.825, 30.5122, 0.4068 ) }
    dend_23 { pt3dadd( 369.958, 373.529, 30.4721, 0.3304 ) }
    dend_23 { pt3dadd( 370.929, 374.102, 30.4654, 0.2542 ) }
    dend_23 { pt3dadd( 372.005, 374.479, 30.4951, 0.2288 ) }
    dend_23 { pt3dadd( 373.076, 374.51, 30.3825, 0.2542 ) }
    dend_23 { pt3dadd( 374.151, 374.65, 30.2422, 0.3304 ) }
    dend_23 { pt3dadd( 375.235, 374.999, 30.2098, 0.4322 ) }
    dend_23 { pt3dadd( 376.258, 375.297, 30.3551, 0.5084 ) }
    dend_23 { pt3dadd( 377.255, 375.571, 30.6622, 0.5084 ) }
    dend_23 { pt3dadd( 378.338, 375.878, 30.8493, 0.4576 ) }
    dend_23 { pt3dadd( 379.331, 376.379, 30.9893, 0.4068 ) }
    dend_23 { pt3dadd( 380.224, 377.092, 31.1172, 0.4068 ) }
    dend_23 { pt3dadd( 381.297, 377.268, 31.2449, 0.4576 ) }
    dend_23 { pt3dadd( 382.4, 377.436, 31.3267, 0.483 ) }
    dend_23 { pt3dadd( 383.465, 377.814, 31.3295, 0.4322 ) }
    dend_23 { pt3dadd( 384.45, 378.272, 31.4709, 0.3304 ) }
    dend_23 { pt3dadd( 385.439, 378.726, 31.6991, 0.2542 ) }
    dend_23 { pt3dadd( 386.514, 379.088, 31.8189, 0.2288 ) }
    dend_23 { pt3dadd( 387.591, 379.435, 31.8844, 0.2288 ) }
    dend_23 { pt3dadd( 388.673, 379.738, 32.006, 0.2288 ) }
    dend_23 { pt3dadd( 389.792, 379.877, 32.0972, 0.2288 ) }
    dend_23 { pt3dadd( 390.933, 379.915, 32.1096, 0.2542 ) }
    dend_23 { pt3dadd( 392.051, 380.135, 32.0779, 0.2796 ) }
    dend_23 { pt3dadd( 393.164, 380.366, 32.0295, 0.3304 ) }
    dend_23 { pt3dadd( 394.277, 380.131, 31.9455, 0.3304 ) }
    dend_23 { pt3dadd( 395.392, 379.948, 31.8466, 0.3304 ) }
    dend_23 { pt3dadd( 396.51, 380.163, 31.8254, 0.2796 ) }
    dend_23 { pt3dadd( 397.634, 380.299, 31.8598, 0.2542 ) }
    dend_23 { pt3dadd( 398.774, 380.207, 31.9032, 0.2288 ) }
    dend_23 { pt3dadd( 399.888, 380.015, 31.9567, 0.2288 ) }
    dend_23 { pt3dadd( 400.933, 379.569, 32.0379, 0.2288 ) }
    dend_23 { pt3dadd( 402.025, 379.313, 32.1135, 0.2288 ) }
    dend_23 { pt3dadd( 403.165, 379.253, 32.1563, 0.2288 ) }
    dend_23 { pt3dadd( 403.586, 378.527, 32.0144, 0.2288 ) }
    dend_23 { pt3dadd( 404.136, 377.795, 31.7783, 0.2288 ) }
    dend_23 { pt3dadd( 405.203, 377.382, 31.6042, 0.2542 ) }
    dend_23 { pt3dadd( 406.237, 376.915, 31.4482, 0.2796 ) }
    dend_23 { pt3dadd( 407.242, 376.4, 31.2855, 0.305 ) }
    dend_23 { pt3dadd( 408.224, 376.214, 31.3818, 0.2796 ) }
    dend_23 { pt3dadd( 409.315, 376.125, 31.5473, 0.2796 ) }
    dend_23 { pt3dadd( 410.457, 376.079, 31.6753, 0.305 ) }
    dend_23 { pt3dadd( 411.588, 375.995, 31.6772, 0.356 ) }
    dend_23 { pt3dadd( 412.717, 375.906, 31.5652, 0.3814 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 348.764, 367.325, 26.3791, 0.4068 ) }
    dend_18 { pt3dadd( 349.594, 368.113, 26.0987, 0.4068 ) }
    dend_18 { pt3dadd( 349.943, 369.155, 25.9306, 0.4068 ) }
    dend_18 { pt3dadd( 350.293, 370.198, 25.696, 0.356 ) }
    dend_18 { pt3dadd( 350.665, 370.567, 25.518, 0.356 ) }
    dend_18 { pt3dadd( 351.472, 371.349, 25.3837, 0.356 ) }
    dend_18 { pt3dadd( 352.319, 371.793, 25.5546, 0.356 ) }
    dend_18 { pt3dadd( 353.204, 372.34, 25.824, 0.4068 ) }
    dend_18 { pt3dadd( 354.134, 373.001, 26.02, 0.483 ) }
    dend_18 { pt3dadd( 354.952, 373.788, 26.1882, 0.5084 ) }
    dend_18 { pt3dadd( 355.743, 374.606, 26.3187, 0.4576 ) }
    dend_18 { pt3dadd( 356.538, 375.321, 26.2304, 0.4322 ) }
    dend_18 { pt3dadd( 357.32, 376.058, 25.9913, 0.4322 ) }
    dend_18 { pt3dadd( 358.051, 376.937, 25.8268, 0.4322 ) }
    dend_18 { pt3dadd( 358.796, 377.803, 25.7341, 0.3814 ) }
    dend_18 { pt3dadd( 359.559, 378.651, 25.6781, 0.305 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 83/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 342.554, 356.725, 36.2331, 0.305 ) }
    dend_9 { pt3dadd( 342.295, 355.622, 35.6966, 0.305 ) }
    dend_9 { pt3dadd( 341.969, 354.563, 35.4766, 0.3304 ) }
    dend_9 { pt3dadd( 341.241, 353.783, 35.1492, 0.356 ) }
    dend_9 { pt3dadd( 340.433, 353.187, 34.8096, 0.4068 ) }
    dend_9 { pt3dadd( 339.308, 353.312, 34.6525, 0.4068 ) }
    dend_9 { pt3dadd( 338.212, 353.579, 34.6388, 0.4068 ) }
    dend_9 { pt3dadd( 337.137, 353.954, 34.7348, 0.3304 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 91/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 349.44, 353.922, 22.498, 0.3814 ) }
    dend_0 { pt3dadd( 349.221, 352.816, 21.9101, 0.356 ) }
    dend_0 { pt3dadd( 348.856, 351.738, 21.6726, 0.305 ) }
    dend_0 { pt3dadd( 348.69, 350.643, 21.3413, 0.305 ) }
    dend_0 { pt3dadd( 348.607, 349.54, 20.9292, 0.356 ) }
    dend_0 { pt3dadd( 349.118, 348.641, 20.4824, 0.4576 ) }
    dend_0 { pt3dadd( 349.873, 347.826, 20.0431, 0.4576 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 358.086, 387.992, 24.92, 1.0 ) }
    axon_1 { pt3dadd( 363.927, 401.808, 24.92, 1.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_1 { pt3dadd( 369.768, 415.624, 24.92, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 1/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 412.717, 375.906, 31.5652, 0.3814 ) }
    dend_27 { pt3dadd( 413.156, 376.473, 32.1126, 0.3814 ) }
    dend_27 { pt3dadd( 413.849, 377.369, 32.529, 0.356 ) }
    dend_27 { pt3dadd( 414.541, 378.264, 32.7146, 0.3304 ) }
    dend_27 { pt3dadd( 415.234, 379.159, 32.9263, 0.305 ) }
    dend_27 { pt3dadd( 415.69, 379.99, 33.0658, 0.5084 ) }
    dend_27 { pt3dadd( 416.424, 380.859, 33.2223, 0.5084 ) }
    dend_27 { pt3dadd( 417.093, 381.737, 33.3432, 0.4322 ) }
    dend_27 { pt3dadd( 417.531, 382.641, 33.2665, 0.3304 ) }
    dend_27 { pt3dadd( 418.327, 383.183, 33.327, 0.305 ) }
    dend_27 { pt3dadd( 419.297, 383.571, 33.6182, 0.4068 ) }
    dend_27 { pt3dadd( 420.323, 384.057, 33.9875, 0.5592 ) }
    dend_27 { pt3dadd( 421.336, 384.521, 34.4495, 0.6102 ) }
    dend_27 { pt3dadd( 422.278, 385.058, 34.9978, 0.5084 ) }
    dend_27 { pt3dadd( 423.099, 385.712, 35.6269, 0.356 ) }
    dend_27 { pt3dadd( 423.933, 386.354, 36.2496, 0.2542 ) }
    dend_27 { pt3dadd( 424.804, 386.94, 36.7962, 0.2288 ) }
    dend_27 { pt3dadd( 425.849, 387.227, 37.0191, 0.2288 ) }
    dend_27 { pt3dadd( 426.884, 387.619, 37.0233, 0.2288 ) }
    dend_27 { pt3dadd( 427.911, 388.071, 36.9177, 0.2288 ) }
    dend_27 { pt3dadd( 428.962, 388.367, 36.9228, 0.2288 ) }
    dend_27 { pt3dadd( 429.966, 388.61, 36.8771, 0.2542 ) }
    dend_27 { pt3dadd( 430.913, 388.787, 36.6414, 0.2796 ) }
    dend_27 { pt3dadd( 431.755, 388.922, 36.6766, 0.305 ) }
    dend_27 { pt3dadd( 432.634, 389.121, 36.9225, 0.2796 ) }
    dend_27 { pt3dadd( 433.698, 389.517, 37.0625, 0.2542 ) }
    dend_27 { pt3dadd( 434.766, 389.92, 37.1347, 0.2542 ) }
    dend_27 { pt3dadd( 435.848, 390.254, 37.1728, 0.305 ) }
    dend_27 { pt3dadd( 436.971, 390.388, 37.1378, 0.356 ) }
    dend_27 { pt3dadd( 438.017, 390.716, 37.1028, 0.356 ) }
    dend_27 { pt3dadd( 438.995, 391.215, 37.1666, 0.305 ) }
    dend_27 { pt3dadd( 439.786, 391.991, 37.2548, 0.2542 ) }
    dend_27 { pt3dadd( 440.585, 392.754, 37.2616, 0.2288 ) }
    dend_27 { pt3dadd( 441.536, 393.293, 37.1134, 0.2542 ) }
    dend_27 { pt3dadd( 442.25, 394.13, 36.9275, 0.305 ) }
    dend_27 { pt3dadd( 442.948, 395.013, 36.7321, 0.356 ) }
    dend_27 { pt3dadd( 443.864, 395.691, 36.5148, 0.356 ) }
    dend_27 { pt3dadd( 444.862, 396.243, 36.3437, 0.3304 ) }
    dend_27 { pt3dadd( 445.855, 396.787, 36.2247, 0.3304 ) }
    dend_27 { pt3dadd( 446.5, 397.696, 36.0506, 0.3814 ) }
    dend_27 { pt3dadd( 447.185, 398.586, 35.8904, 0.4068 ) }
    dend_27 { pt3dadd( 447.906, 399.448, 35.8207, 0.3814 ) }
    dend_27 { pt3dadd( 448.618, 400.281, 35.8515, 0.3304 ) }
    dend_27 { pt3dadd( 449.289, 401.156, 35.7918, 0.356 ) }
    dend_27 { pt3dadd( 449.94, 402.052, 35.5888, 0.4068 ) }
    dend_27 { pt3dadd( 450.221, 403.046, 35.2215, 0.4322 ) }
    dend_27 { pt3dadd( 450.493, 404.066, 34.7533, 0.356 ) }
    dend_27 { pt3dadd( 450.807, 405.137, 34.2944, 0.3304 ) }
    dend_27 { pt3dadd( 451.565, 405.74, 34.018, 0.3304 ) }
    dend_27 { pt3dadd( 452.602, 406.051, 34.0024, 0.3814 ) }
    dend_27 { pt3dadd( 453.611, 406.557, 34.0332, 0.3304 ) }
    dend_27 { pt3dadd( 454.626, 407.063, 34.0774, 0.2796 ) }
    dend_27 { pt3dadd( 455.726, 407.328, 34.1947, 0.2288 ) }
    dend_27 { pt3dadd( 456.843, 407.517, 34.3246, 0.2288 ) }
    dend_27 { pt3dadd( 457.982, 407.581, 34.4193, 0.2288 ) }
    dend_27 { pt3dadd( 459.105, 407.749, 34.4386, 0.2288 ) }
    dend_27 { pt3dadd( 460.217, 407.989, 34.3809, 0.2288 ) }
    dend_27 { pt3dadd( 461.281, 407.668, 34.2583, 0.2288 ) }
    dend_27 { pt3dadd( 462.34, 407.334, 34.1482, 0.2288 ) }
    dend_27 { pt3dadd( 463.314, 407.034, 34.085, 0.2288 ) }
    dend_27 { pt3dadd( 463.949, 406.304, 33.7879, 0.2288 ) }
    dend_27 { pt3dadd( 464.832, 405.729, 33.4575, 0.2288 ) }
    dend_27 { pt3dadd( 465.869, 405.247, 33.1929, 0.2288 ) }
    dend_27 { pt3dadd( 466.992, 405.096, 33.0428, 0.2796 ) }
    dend_27 { pt3dadd( 468.125, 404.976, 33.04, 0.3304 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 66/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 412.717, 375.906, 31.5652, 0.3814 ) }
    dend_24 { pt3dadd( 413.277, 374.884, 31.1648, 0.2796 ) }
    dend_24 { pt3dadd( 413.969, 374.225, 30.7894, 0.3304 ) }
    dend_24 { pt3dadd( 414.904, 373.759, 30.6306, 0.4068 ) }
    dend_24 { pt3dadd( 415.94, 373.277, 30.4878, 0.4322 ) }
    dend_24 { pt3dadd( 416.981, 372.966, 30.2708, 0.356 ) }
    dend_24 { pt3dadd( 418.026, 372.703, 29.9813, 0.2796 ) }
    dend_24 { pt3dadd( 419.088, 372.388, 29.8704, 0.2288 ) }
    dend_24 { pt3dadd( 420.147, 372.046, 29.8178, 0.2288 ) }
    dend_24 { pt3dadd( 421.184, 371.611, 29.6632, 0.2288 ) }
    dend_24 { pt3dadd( 421.821, 370.781, 29.4596, 0.2288 ) }
    dend_24 { pt3dadd( 422.233, 369.725, 29.2186, 0.2542 ) }
    dend_24 { pt3dadd( 423.259, 369.47, 29.0864, 0.305 ) }
    dend_24 { pt3dadd( 423.987, 368.787, 28.9114, 0.4068 ) }
    dend_24 { pt3dadd( 424.474, 367.765, 28.6334, 0.5338 ) }
    dend_24 { pt3dadd( 424.687, 366.874, 28.107, 0.6102 ) }
    dend_24 { pt3dadd( 425.093, 365.985, 27.4992, 0.6102 ) }
    dend_24 { pt3dadd( 425.8, 365.088, 26.9974, 0.5338 ) }
    dend_24 { pt3dadd( 426.65, 364.553, 26.4412, 0.5338 ) }
    dend_24 { pt3dadd( 427.613, 364.249, 25.8199, 0.5338 ) }
    dend_24 { pt3dadd( 428.706, 363.918, 25.3803, 0.5338 ) }
    dend_24 { pt3dadd( 429.714, 363.466, 25.0434, 0.4322 ) }
    dend_24 { pt3dadd( 430.543, 362.761, 24.665, 0.4068 ) }
    dend_24 { pt3dadd( 431.511, 362.214, 24.3565, 0.4068 ) }
    dend_24 { pt3dadd( 432.552, 361.752, 24.1699, 0.483 ) }
    dend_24 { pt3dadd( 433.676, 361.572, 24.0261, 0.4576 ) }
    dend_24 { pt3dadd( 434.808, 361.471, 23.8773, 0.4068 ) }
    dend_24 { pt3dadd( 435.923, 361.693, 23.6876, 0.305 ) }
    dend_24 { pt3dadd( 436.99, 361.713, 23.3911, 0.2542 ) }
    dend_24 { pt3dadd( 437.976, 361.386, 23.0344, 0.2288 ) }
    dend_24 { pt3dadd( 438.878, 360.695, 22.7652, 0.2542 ) }
    dend_24 { pt3dadd( 439.688, 359.907, 22.5071, 0.305 ) }
    dend_24 { pt3dadd( 440.564, 359.216, 22.2497, 0.4068 ) }
    dend_24 { pt3dadd( 441.605, 358.745, 22.0261, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 442.486, 358.102, 21.7118, 0.5848 ) }
    dend_24 { pt3dadd( 443.299, 357.388, 21.2693, 0.5848 ) }
    dend_24 { pt3dadd( 444.264, 356.794, 20.8425, 0.5084 ) }
    dend_24 { pt3dadd( 445.203, 356.27, 20.399, 0.4068 ) }
    dend_24 { pt3dadd( 445.998, 355.89, 19.7749, 0.305 ) }
    dend_24 { pt3dadd( 446.964, 355.5, 19.184, 0.2542 ) }
    dend_24 { pt3dadd( 447.973, 355.013, 18.7499, 0.2288 ) }
    dend_24 { pt3dadd( 448.822, 354.246, 18.5032, 0.2288 ) }
    dend_24 { pt3dadd( 449.605, 353.479, 18.4894, 0.2288 ) }
    dend_24 { pt3dadd( 450.342, 352.712, 18.7146, 0.2288 ) }
    dend_24 { pt3dadd( 450.89, 351.715, 18.9785, 0.2796 ) }
    dend_24 { pt3dadd( 451.421, 350.709, 19.223, 0.3304 ) }
    dend_24 { pt3dadd( 451.914, 349.703, 19.463, 0.3814 ) }
    dend_24 { pt3dadd( 452.466, 348.748, 19.5925, 0.356 ) }
    dend_24 { pt3dadd( 453.119, 347.884, 19.4918, 0.356 ) }
    dend_24 { pt3dadd( 454.073, 347.318, 19.2911, 0.356 ) }
    dend_24 { pt3dadd( 455.088, 346.82, 19.0651, 0.3814 ) }
    dend_24 { pt3dadd( 456.161, 346.425, 18.8871, 0.4068 ) }
    dend_24 { pt3dadd( 457.257, 346.118, 18.7733, 0.4322 ) }
    dend_24 { pt3dadd( 458.388, 345.957, 18.7443, 0.4576 ) }
    dend_24 { pt3dadd( 459.503, 345.756, 18.8187, 0.4068 ) }
    dend_24 { pt3dadd( 460.605, 345.526, 18.9722, 0.3814 ) }
    dend_24 { pt3dadd( 461.618, 345.028, 19.1374, 0.3814 ) }
    dend_24 { pt3dadd( 462.628, 344.578, 19.2451, 0.4576 ) }
    dend_24 { pt3dadd( 463.695, 344.503, 19.1669, 0.5084 ) }
    dend_24 { pt3dadd( 464.743, 344.729, 19.0916, 0.483 ) }
    dend_24 { pt3dadd( 465.78, 345.16, 19.1149, 0.4322 ) }
    dend_24 { pt3dadd( 466.799, 345.645, 19.1223, 0.3814 ) }
    dend_24 { pt3dadd( 467.811, 346.153, 19.0974, 0.4068 ) }
    dend_24 { pt3dadd( 468.864, 346.383, 19.2273, 0.4322 ) }
    dend_24 { pt3dadd( 469.909, 346.637, 19.4391, 0.4322 ) }
    dend_24 { pt3dadd( 470.913, 347.119, 19.5037, 0.3814 ) }
    dend_24 { pt3dadd( 471.934, 347.253, 19.5905, 0.3304 ) }
    dend_24 { pt3dadd( 472.973, 347.102, 19.8099, 0.305 ) }
    dend_24 { pt3dadd( 473.955, 347.16, 19.7726, 0.305 ) }
    dend_24 { pt3dadd( 474.873, 347.442, 19.678, 0.305 ) }
    dend_24 { pt3dadd( 475.722, 347.997, 19.7294, 0.3304 ) }
    dend_24 { pt3dadd( 476.586, 348.683, 19.6284, 0.3814 ) }
    dend_24 { pt3dadd( 477.562, 349.149, 19.502, 0.4068 ) }
    dend_24 { pt3dadd( 478.637, 349.415, 19.4546, 0.3814 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 359.559, 378.651, 25.6781, 0.305 ) }
    dend_20 { pt3dadd( 359.666, 379.36, 25.7317, 0.3304 ) }
    dend_20 { pt3dadd( 359.835, 380.479, 25.9071, 0.356 ) }
    dend_20 { pt3dadd( 360.004, 381.601, 26.159, 0.4576 ) }
    dend_20 { pt3dadd( 359.954, 381.84, 26.5066, 0.356 ) }
    dend_20 { pt3dadd( 360.422, 382.835, 26.6938, 0.356 ) }
    dend_20 { pt3dadd( 360.717, 383.853, 26.9977, 0.4068 ) }
    dend_20 { pt3dadd( 361.271, 384.792, 27.3298, 0.4068 ) }
    dend_20 { pt3dadd( 361.78, 385.743, 27.646, 0.4068 ) }
    dend_20 { pt3dadd( 361.741, 386.857, 27.9436, 0.3814 ) }
    dend_20 { pt3dadd( 361.883, 387.873, 28.0546, 0.3814 ) }
    dend_20 { pt3dadd( 362.19, 388.795, 27.8912, 0.356 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 359.559, 378.651, 25.6781, 0.305 ) }
    dend_19 { pt3dadd( 360.495, 378.959, 25.7519, 0.5338 ) }
    dend_19 { pt3dadd( 361.545, 379.33, 25.7348, 0.5084 ) }
    dend_19 { pt3dadd( 362.561, 379.848, 25.7352, 0.4068 ) }
    dend_19 { pt3dadd( 363.531, 380.435, 25.6482, 0.356 ) }
    dend_19 { pt3dadd( 364.445, 381.105, 25.4342, 0.3814 ) }
    dend_19 { pt3dadd( 365.454, 381.308, 25.0244, 0.4576 ) }
    dend_19 { pt3dadd( 366.486, 381.395, 24.4488, 0.5338 ) }
    dend_19 { pt3dadd( 367.544, 381.294, 23.7842, 0.5592 ) }
    dend_19 { pt3dadd( 368.593, 381.167, 23.1353, 0.5084 ) }
    dend_19 { pt3dadd( 369.587, 380.879, 22.7988, 0.4322 ) }
    dend_19 { pt3dadd( 370.573, 380.861, 22.5317, 0.4068 ) }
    dend_19 { pt3dadd( 371.544, 381.158, 22.1099, 0.4576 ) }
    dend_19 { pt3dadd( 372.634, 381.2, 21.6838, 0.483 ) }
    dend_19 { pt3dadd( 373.763, 381.096, 21.2847, 0.483 ) }
    dend_19 { pt3dadd( 374.661, 380.388, 20.8654, 0.4322 ) }
    dend_19 { pt3dadd( 375.353, 379.805, 20.2436, 0.3814 ) }
    dend_19 { pt3dadd( 376.098, 379.47, 19.4074, 0.305 ) }
    dend_19 { pt3dadd( 377.035, 379.238, 18.4827, 0.305 ) }
    dend_19 { pt3dadd( 377.707, 380.147, 17.7601, 0.3304 ) }
    dend_19 { pt3dadd( 378.286, 381.078, 17.1363, 0.4322 ) }
    dend_19 { pt3dadd( 378.682, 382.041, 16.4578, 0.4576 ) }
    dend_19 { pt3dadd( 379.368, 382.756, 15.7743, 0.483 ) }
    dend_19 { pt3dadd( 380.248, 383.304, 15.1021, 0.4068 ) }
    dend_19 { pt3dadd( 381.333, 383.491, 14.6901, 0.3304 ) }
    dend_19 { pt3dadd( 382.067, 383.999, 14.391, 0.2796 ) }
    dend_19 { pt3dadd( 382.21, 385.07, 13.72, 0.305 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 79/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 337.137, 353.954, 34.7348, 0.3304 ) }
    dend_17 { pt3dadd( 337.003, 353.205, 35.4592, 0.356 ) }
    dend_17 { pt3dadd( 336.816, 352.158, 36.9155, 0.356 ) }
    dend_17 { pt3dadd( 336.7, 351.108, 37.543, 0.3814 ) }
    dend_17 { pt3dadd( 336.95, 350.042, 38.2572, 0.3304 ) }
    dend_17 { pt3dadd( 337.233, 348.991, 39.0264, 0.2796 ) }
    dend_17 { pt3dadd( 337.672, 348.012, 39.8322, 0.2288 ) }
    dend_17 { pt3dadd( 338.153, 347.064, 40.6344, 0.2288 ) }
    dend_17 { pt3dadd( 338.797, 346.242, 41.4089, 0.2288 ) }
    dend_17 { pt3dadd( 339.425, 345.39, 42.1187, 0.2288 ) }
    dend_17 { pt3dadd( 339.995, 344.416, 42.6798, 0.2288 ) }
    dend_17 { pt3dadd( 340.409, 343.405, 43.0391, 0.2288 ) }
    dend_17 { pt3dadd( 340.56, 342.328, 43.12, 0.2288 ) }
    dend_17 { pt3dadd( 340.615, 341.222, 43.0749, 0.2288 ) }
    dend_17 { pt3dadd( 340.556, 340.08, 43.0388, 0.2288 ) }
    dend_17 { pt3dadd( 341.346, 339.313, 43.0556, 0.2288 ) }
    dend_17 { pt3dadd( 342.224, 338.585, 43.1477, 0.2288 ) }
    dend_17 { pt3dadd( 343.104, 337.858, 43.3306, 0.2288 ) }
    dend_17 { pt3dadd( 343.984, 337.13, 43.5817, 0.2288 ) }
    dend_17 { pt3dadd( 344.996, 336.635, 43.8922, 0.2288 ) }
    dend_17 { pt3dadd( 346.025, 336.164, 44.2296, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( 347.127, 336.074, 44.6118, 0.2288 ) }
    dend_17 { pt3dadd( 348.231, 335.984, 45.526, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 337.137, 353.954, 34.7348, 0.3304 ) }
    dend_10 { pt3dadd( 336.688, 354.219, 34.9031, 0.3814 ) }
    dend_10 { pt3dadd( 335.722, 354.791, 35.152, 0.483 ) }
    dend_10 { pt3dadd( 334.612, 354.99, 35.3903, 0.5848 ) }
    dend_10 { pt3dadd( 333.491, 355.178, 35.5844, 0.5592 ) }
    dend_10 { pt3dadd( 332.425, 355.587, 35.7134, 0.5084 ) }
    dend_10 { pt3dadd( 331.369, 355.554, 35.7557, 0.4576 ) }
    dend_10 { pt3dadd( 330.321, 355.179, 35.7045, 0.4322 ) }
    dend_10 { pt3dadd( 329.508, 355.391, 35.9528, 0.3814 ) }
    dend_10 { pt3dadd( 328.6, 355.21, 36.3126, 0.3814 ) }
    dend_10 { pt3dadd( 327.588, 354.847, 36.5926, 0.4322 ) }
    dend_10 { pt3dadd( 326.498, 354.952, 36.6414, 0.5084 ) }
    dend_10 { pt3dadd( 325.415, 354.871, 36.5098, 0.483 ) }
    dend_10 { pt3dadd( 324.341, 354.64, 36.2384, 0.4322 ) }
    dend_10 { pt3dadd( 323.227, 354.704, 35.9198, 0.3814 ) }
    dend_10 { pt3dadd( 322.098, 354.871, 35.6474, 0.4322 ) }
    dend_10 { pt3dadd( 320.97, 354.963, 35.5314, 0.4576 ) }
    dend_10 { pt3dadd( 319.844, 355.012, 35.5393, 0.4576 ) }
    dend_10 { pt3dadd( 318.739, 354.728, 35.5911, 0.356 ) }
    dend_10 { pt3dadd( 317.675, 354.335, 35.63, 0.3304 ) }
    dend_10 { pt3dadd( 316.656, 353.822, 35.611, 0.356 ) }
    dend_10 { pt3dadd( 315.731, 353.21, 35.4852, 0.483 ) }
    dend_10 { pt3dadd( 314.849, 352.555, 35.2582, 0.5338 ) }
    dend_10 { pt3dadd( 313.923, 351.931, 35.1554, 0.5592 ) }
    dend_10 { pt3dadd( 312.961, 351.354, 35.1604, 0.483 ) }
    dend_10 { pt3dadd( 311.915, 350.891, 35.2008, 0.4322 ) }
    dend_10 { pt3dadd( 310.866, 350.444, 35.233, 0.3814 ) }
    dend_10 { pt3dadd( 309.812, 350.01, 35.2279, 0.3814 ) }
    dend_10 { pt3dadd( 309.026, 349.24, 35.2957, 0.356 ) }
    dend_10 { pt3dadd( 308.163, 348.52, 35.3522, 0.305 ) }
    dend_10 { pt3dadd( 307.235, 347.85, 35.3752, 0.2542 ) }
    dend_10 { pt3dadd( 306.53, 347.051, 35.2366, 0.2288 ) }
    dend_10 { pt3dadd( 305.868, 346.225, 34.9605, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 349.873, 347.826, 20.0431, 0.4576 ) }
    dend_4 { pt3dadd( 350.151, 349.111, 18.2837, 0.4576 ) }
    dend_4 { pt3dadd( 350.381, 350.172, 17.8573, 0.483 ) }
    dend_4 { pt3dadd( 350.611, 351.233, 17.6024, 0.4322 ) }
    dend_4 { pt3dadd( 351.115, 351.679, 17.5102, 0.4576 ) }
    dend_4 { pt3dadd( 351.932, 352.385, 17.5871, 0.483 ) }
    dend_4 { pt3dadd( 352.83, 353.013, 17.7589, 0.5084 ) }
    dend_4 { pt3dadd( 353.863, 353.279, 17.8617, 0.5338 ) }
    dend_4 { pt3dadd( 354.983, 353.323, 17.8195, 0.6102 ) }
    dend_4 { pt3dadd( 356.04, 353.746, 17.6732, 0.6356 ) }
    dend_4 { pt3dadd( 357.089, 354.047, 17.3784, 0.661 ) }
    dend_4 { pt3dadd( 358.12, 354.078, 16.8937, 0.6356 ) }
    dend_4 { pt3dadd( 359.079, 353.609, 16.424, 0.6356 ) }
    dend_4 { pt3dadd( 360.005, 352.939, 16.046, 0.5592 ) }
    dend_4 { pt3dadd( 360.879, 352.202, 15.7384, 0.5338 ) }
    dend_4 { pt3dadd( 361.904, 351.897, 15.4777, 0.5084 ) }
    dend_4 { pt3dadd( 363.042, 351.908, 15.2545, 0.5084 ) }
    dend_4 { pt3dadd( 364.138, 351.958, 15.0013, 0.483 ) }
    dend_4 { pt3dadd( 365.227, 352.04, 14.7381, 0.4576 ) }
    dend_4 { pt3dadd( 366.306, 352.284, 14.6732, 0.5084 ) }
    dend_4 { pt3dadd( 367.313, 352.254, 14.7318, 0.5084 ) }
    dend_4 { pt3dadd( 368.108, 351.431, 14.7935, 0.5338 ) }
    dend_4 { pt3dadd( 368.979, 350.705, 14.9203, 0.5084 ) }
    dend_4 { pt3dadd( 369.868, 349.995, 15.0653, 0.5848 ) }
    dend_4 { pt3dadd( 370.799, 349.348, 15.1552, 0.6356 ) }
    dend_4 { pt3dadd( 371.811, 348.876, 15.1241, 0.6356 ) }
    dend_4 { pt3dadd( 372.775, 348.311, 15.0786, 0.5592 ) }
    dend_4 { pt3dadd( 373.659, 347.596, 15.1211, 0.4576 ) }
    dend_4 { pt3dadd( 374.646, 347.076, 15.2444, 0.4322 ) }
    dend_4 { pt3dadd( 375.697, 346.672, 15.4419, 0.4322 ) }
    dend_4 { pt3dadd( 376.692, 346.346, 15.7741, 0.483 ) }
    dend_4 { pt3dadd( 377.721, 346.092, 16.0346, 0.483 ) }
    dend_4 { pt3dadd( 378.784, 345.909, 16.0624, 0.4576 ) }
    dend_4 { pt3dadd( 379.693, 345.316, 16.0402, 0.356 ) }
    dend_4 { pt3dadd( 380.474, 344.518, 16.0034, 0.305 ) }
    dend_4 { pt3dadd( 380.987, 343.539, 15.8361, 0.305 ) }
    dend_4 { pt3dadd( 381.769, 342.841, 15.6868, 0.356 ) }
    dend_4 { pt3dadd( 382.795, 342.399, 15.6701, 0.3814 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 349.873, 347.826, 20.0431, 0.4576 ) }
    dend_1 { pt3dadd( 350.951, 347.156, 19.7453, 0.356 ) }
    dend_1 { pt3dadd( 351.581, 346.389, 19.3783, 0.305 ) }
    dend_1 { pt3dadd( 351.121, 345.519, 19.2015, 0.3304 ) }
    dend_1 { pt3dadd( 350.365, 344.764, 19.2818, 0.3814 ) }
    dend_1 { pt3dadd( 349.535, 344.182, 19.6191, 0.483 ) }
    dend_1 { pt3dadd( 348.695, 343.485, 20.0466, 0.4576 ) }
    dend_1 { pt3dadd( 347.852, 342.749, 20.4833, 0.483 ) }
    dend_1 { pt3dadd( 347.817, 341.689, 20.7542, 0.5084 ) }
    dend_1 { pt3dadd( 347.984, 340.585, 20.8635, 0.6102 ) }
    dend_1 { pt3dadd( 348.333, 339.496, 20.9128, 0.661 ) }
    dend_1 { pt3dadd( 348.713, 338.436, 20.9696, 0.6864 ) }
    dend_1 { pt3dadd( 349.136, 337.401, 21.0707, 0.6356 ) }
    dend_1 { pt3dadd( 349.667, 336.389, 21.1361, 0.5592 ) }
    dend_1 { pt3dadd( 350.144, 335.397, 21.0887, 0.4322 ) }
    dend_1 { pt3dadd( 350.595, 334.414, 20.9038, 0.3814 ) }
    dend_1 { pt3dadd( 350.879, 333.375, 20.8659, 0.356 ) }
    dend_1 { pt3dadd( 351.015, 332.331, 20.9058, 0.4322 ) }
    dend_1 { pt3dadd( 350.65, 331.275, 20.8345, 0.5084 ) }
    dend_1 { pt3dadd( 350.369, 330.197, 20.7033, 0.5848 ) }
    dend_1 { pt3dadd( 350.238, 329.08, 20.5535, 0.6102 ) }
    dend_1 { pt3dadd( 350.013, 327.991, 20.4705, 0.5848 ) }
    dend_1 { pt3dadd( 349.661, 326.939, 20.5292, 0.5592 ) }
    dend_1 { pt3dadd( 349.814, 325.843, 20.577, 0.5084 ) }
    dend_1 { pt3dadd( 350.04, 324.744, 20.6327, 0.5084 ) }
    dend_1 { pt3dadd( 350.053, 323.703, 20.9201, 0.483 ) }
    dend_1 { pt3dadd( 350.226, 322.649, 21.2778, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 350.612, 321.577, 21.5522, 0.5084 ) }
    dend_1 { pt3dadd( 350.587, 320.499, 21.8642, 0.6102 ) }
    dend_1 { pt3dadd( 350.392, 319.418, 22.2551, 0.6864 ) }
    dend_1 { pt3dadd( 350.885, 318.443, 22.64, 0.7372 ) }
    dend_1 { pt3dadd( 351.517, 317.514, 22.9786, 0.6356 ) }
    dend_1 { pt3dadd( 352.427, 316.856, 23.1756, 0.5338 ) }
    dend_1 { pt3dadd( 352.972, 315.953, 23.3527, 0.4322 ) }
    dend_1 { pt3dadd( 353.213, 314.849, 23.5691, 0.4068 ) }
    dend_1 { pt3dadd( 353.185, 313.763, 23.8662, 0.3304 ) }
    dend_1 { pt3dadd( 353.08, 312.679, 24.2426, 0.2796 ) }
    dend_1 { pt3dadd( 352.938, 311.555, 24.5523, 0.2288 ) }
    dend_1 { pt3dadd( 352.795, 310.421, 24.7869, 0.2796 ) }
    dend_1 { pt3dadd( 352.684, 309.283, 24.9734, 0.3304 ) }
    dend_1 { pt3dadd( 352.638, 308.144, 25.1232, 0.4068 ) }
    dend_1 { pt3dadd( 352.686, 307.005, 25.2587, 0.4322 ) }
    dend_1 { pt3dadd( 352.592, 305.869, 25.3479, 0.5084 ) }
    dend_1 { pt3dadd( 352.477, 304.733, 25.4157, 0.5592 ) }
    dend_1 { pt3dadd( 352.309, 303.615, 25.5536, 0.5848 ) }
    dend_1 { pt3dadd( 352.135, 302.5, 25.7462, 0.5592 ) }
    dend_1 { pt3dadd( 352.676, 301.492, 25.9162, 0.5338 ) }
    dend_1 { pt3dadd( 353.213, 300.484, 26.0668, 0.5592 ) }
    dend_1 { pt3dadd( 353.661, 299.455, 26.2675, 0.5592 ) }
    dend_1 { pt3dadd( 354.091, 298.417, 26.475, 0.5592 ) }
    dend_1 { pt3dadd( 354.426, 297.334, 26.5658, 0.5338 ) }
    dend_1 { pt3dadd( 354.701, 296.24, 26.5735, 0.5084 ) }
    dend_1 { pt3dadd( 354.869, 295.127, 26.5241, 0.4576 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 478.637, 349.415, 19.4546, 0.3814 ) }
    dend_26 { pt3dadd( 479.656, 348.516, 19.2198, 0.2796 ) }
    dend_26 { pt3dadd( 480.55, 347.9, 18.8776, 0.3304 ) }
    dend_26 { pt3dadd( 481.616, 347.504, 18.5095, 0.4068 ) }
    dend_26 { pt3dadd( 482.728, 347.254, 18.213, 0.4322 ) }
    dend_26 { pt3dadd( 483.854, 347.086, 17.9279, 0.356 ) }
    dend_26 { pt3dadd( 484.994, 347.007, 17.6192, 0.2796 ) }
    dend_26 { pt3dadd( 486.046, 346.694, 17.2566, 0.2288 ) }
    dend_26 { pt3dadd( 486.933, 346.496, 16.7531, 0.2288 ) }
    dend_26 { pt3dadd( 487.548, 347.05, 16.0215, 0.2542 ) }
    dend_26 { pt3dadd( 488.541, 347.133, 15.3643, 0.2796 ) }
    dend_26 { pt3dadd( 489.647, 346.944, 14.8769, 0.3304 ) }
    dend_26 { pt3dadd( 490.617, 346.337, 14.5267, 0.356 ) }
    dend_26 { pt3dadd( 491.521, 345.673, 14.2505, 0.4068 ) }
    dend_26 { pt3dadd( 492.314, 344.913, 13.9623, 0.4576 ) }
    dend_26 { pt3dadd( 493.268, 344.375, 13.7274, 0.5084 ) }
    dend_26 { pt3dadd( 494.357, 344.026, 13.5619, 0.5084 ) }
    dend_26 { pt3dadd( 495.466, 344.007, 13.4338, 0.4322 ) }
    dend_26 { pt3dadd( 496.589, 344.207, 13.337, 0.356 ) }
    dend_26 { pt3dadd( 497.345, 343.575, 13.3225, 0.356 ) }
    dend_26 { pt3dadd( 497.931, 342.602, 13.3935, 0.4068 ) }
    dend_26 { pt3dadd( 498.281, 341.533, 13.5505, 0.4322 ) }
    dend_26 { pt3dadd( 498.666, 340.476, 13.7392, 0.356 ) }
    dend_26 { pt3dadd( 499.199, 339.465, 13.869, 0.2796 ) }
    dend_26 { pt3dadd( 499.604, 338.412, 13.9514, 0.2288 ) }
    dend_26 { pt3dadd( 499.759, 337.279, 14.0003, 0.2288 ) }
    dend_26 { pt3dadd( 499.574, 336.172, 14.0179, 0.2288 ) }
    dend_26 { pt3dadd( 499.242, 335.078, 14.0, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 54/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 478.637, 349.415, 19.4546, 0.3814 ) }
    dend_25 { pt3dadd( 478.694, 349.862, 20.9566, 0.2288 ) }
    dend_25 { pt3dadd( 479.76, 350.204, 20.9556, 0.2288 ) }
    dend_25 { pt3dadd( 480.859, 350.521, 20.9474, 0.2542 ) }
    dend_25 { pt3dadd( 481.96, 350.827, 20.9548, 0.2796 ) }
    dend_25 { pt3dadd( 483.075, 351.076, 20.981, 0.305 ) }
    dend_25 { pt3dadd( 484.206, 351.239, 21.0305, 0.2796 ) }
    dend_25 { pt3dadd( 485.337, 351.404, 21.099, 0.2796 ) }
    dend_25 { pt3dadd( 486.468, 351.569, 21.179, 0.2796 ) }
    dend_25 { pt3dadd( 487.606, 351.667, 21.2564, 0.305 ) }
    dend_25 { pt3dadd( 488.748, 351.722, 21.3231, 0.2796 ) }
    dend_25 { pt3dadd( 489.841, 352.011, 21.4043, 0.2542 ) }
    dend_25 { pt3dadd( 490.909, 352.108, 21.4476, 0.2288 ) }
    dend_25 { pt3dadd( 491.96, 351.753, 21.3756, 0.2288 ) }
    dend_25 { pt3dadd( 493.035, 351.755, 21.4145, 0.2796 ) }
    dend_25 { pt3dadd( 494.127, 351.825, 21.4945, 0.3304 ) }
    dend_25 { pt3dadd( 495.234, 351.879, 21.4682, 0.4068 ) }
    dend_25 { pt3dadd( 496.355, 351.799, 21.464, 0.3814 ) }
    dend_25 { pt3dadd( 497.451, 351.541, 21.5484, 0.356 ) }
    dend_25 { pt3dadd( 498.462, 351.008, 21.6878, 0.2796 ) }
    dend_25 { pt3dadd( 499.379, 350.345, 21.8592, 0.2542 ) }
    dend_25 { pt3dadd( 500.208, 349.563, 22.0709, 0.2542 ) }
    dend_25 { pt3dadd( 501.04, 348.836, 22.381, 0.2796 ) }
    dend_25 { pt3dadd( 501.873, 348.119, 23.24, 0.305 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 78/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 362.19, 388.795, 27.8912, 0.356 ) }
    dend_22 { pt3dadd( 361.306, 388.867, 28.0053, 0.305 ) }
    dend_22 { pt3dadd( 360.258, 388.913, 29.2443, 0.305 ) }
    dend_22 { pt3dadd( 359.195, 388.892, 29.7844, 0.3304 ) }
    dend_22 { pt3dadd( 358.124, 388.775, 30.3859, 0.356 ) }
    dend_22 { pt3dadd( 357.043, 388.587, 30.9932, 0.4068 ) }
    dend_22 { pt3dadd( 355.921, 388.612, 31.4387, 0.4068 ) }
    dend_22 { pt3dadd( 354.797, 388.695, 31.7383, 0.4068 ) }
    dend_22 { pt3dadd( 353.716, 388.85, 32.0611, 0.356 ) }
    dend_22 { pt3dadd( 352.607, 388.85, 32.3131, 0.356 ) }
    dend_22 { pt3dadd( 351.477, 388.728, 32.4534, 0.356 ) }
    dend_22 { pt3dadd( 350.4, 388.449, 32.6642, 0.3814 ) }
    dend_22 { pt3dadd( 349.316, 388.235, 32.8966, 0.356 ) }
    dend_22 { pt3dadd( 348.208, 388.228, 32.9949, 0.305 ) }
    dend_22 { pt3dadd( 347.241, 387.809, 33.1114, 0.2796 ) }
    dend_22 { pt3dadd( 346.369, 387.695, 33.3096, 0.2796 ) }
    dend_22 { pt3dadd( 345.503, 388.441, 33.5258, 0.305 ) }
    dend_22 { pt3dadd( 344.636, 388.871, 33.9226, 0.2796 ) }
    dend_22 { pt3dadd( 343.64, 389.219, 34.3613, 0.2796 ) }
    dend_22 { pt3dadd( 342.546, 389.523, 34.7374, 0.356 ) }
    dend_22 { pt3dadd( 341.426, 389.555, 34.9185, 0.483 ) }
    dend_22 { pt3dadd( 340.316, 389.636, 34.9261, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 339.243, 389.953, 34.8023, 0.5084 ) }
    dend_22 { pt3dadd( 338.145, 390.101, 34.6735, 0.4322 ) }
    dend_22 { pt3dadd( 337.022, 390.104, 34.72, 0.3814 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 3/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 362.19, 388.795, 27.8912, 0.356 ) }
    dend_21 { pt3dadd( 362.272, 390.019, 27.7994, 0.356 ) }
    dend_21 { pt3dadd( 362.288, 391.15, 27.7312, 0.356 ) }
    dend_21 { pt3dadd( 362.261, 392.29, 27.6469, 0.3814 ) }
    dend_21 { pt3dadd( 362.2, 393.425, 27.5377, 0.3304 ) }
    dend_21 { pt3dadd( 361.551, 394.21, 27.6113, 0.2796 ) }
    dend_21 { pt3dadd( 360.865, 394.988, 27.7796, 0.2542 ) }
    dend_21 { pt3dadd( 360.425, 395.986, 27.731, 0.305 ) }
    dend_21 { pt3dadd( 359.889, 396.927, 27.5187, 0.356 ) }
    dend_21 { pt3dadd( 359.257, 397.81, 27.1813, 0.356 ) }
    dend_21 { pt3dadd( 358.401, 398.424, 27.0018, 0.305 ) }
    dend_21 { pt3dadd( 357.643, 399.16, 26.8721, 0.2542 ) }
    dend_21 { pt3dadd( 357.096, 400.155, 26.6578, 0.2288 ) }
    dend_21 { pt3dadd( 356.552, 401.099, 26.327, 0.2288 ) }
    dend_21 { pt3dadd( 356.033, 402.033, 25.8633, 0.2288 ) }
    dend_21 { pt3dadd( 355.584, 402.996, 25.2802, 0.2542 ) }
    dend_21 { pt3dadd( 354.603, 403.49, 24.7076, 0.2796 ) }
    dend_21 { pt3dadd( 353.746, 404.101, 24.1985, 0.3304 ) }
    dend_21 { pt3dadd( 353.418, 405.194, 23.7848, 0.3304 ) }
    dend_21 { pt3dadd( 353.195, 406.265, 23.3317, 0.3304 ) }
    dend_21 { pt3dadd( 353.051, 407.317, 22.7537, 0.2796 ) }
    dend_21 { pt3dadd( 353.219, 408.413, 22.1659, 0.2542 ) }
    dend_21 { pt3dadd( 353.223, 409.345, 21.4778, 0.2288 ) }
    dend_21 { pt3dadd( 353.36, 410.126, 20.6474, 0.2542 ) }
    dend_21 { pt3dadd( 353.846, 411.026, 19.7819, 0.2796 ) }
    dend_21 { pt3dadd( 354.187, 411.937, 18.8908, 0.356 ) }
    dend_21 { pt3dadd( 354.132, 413.063, 18.2013, 0.4068 ) }
    dend_21 { pt3dadd( 353.818, 414.001, 17.6912, 0.483 ) }
    dend_21 { pt3dadd( 352.7, 414.241, 17.3658, 0.4576 ) }
    dend_21 { pt3dadd( 351.996, 414.992, 17.1371, 0.4576 ) }
    dend_21 { pt3dadd( 351.418, 415.882, 16.915, 0.4322 ) }
    dend_21 { pt3dadd( 350.547, 416.357, 16.5933, 0.4576 ) }
    dend_21 { pt3dadd( 349.711, 416.665, 16.4028, 0.4322 ) }
    dend_21 { pt3dadd( 348.92, 416.759, 17.08, 0.3814 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 305.868, 346.225, 34.9605, 0.2288 ) }
    dend_16 { pt3dadd( 305.234, 346.57, 34.8379, 0.2288 ) }
    dend_16 { pt3dadd( 304.304, 347.082, 35.8652, 0.2288 ) }
    dend_16 { pt3dadd( 303.487, 347.807, 36.2939, 0.2288 ) }
    dend_16 { pt3dadd( 302.748, 348.676, 36.7282, 0.2288 ) }
    dend_16 { pt3dadd( 302.026, 349.557, 37.1731, 0.2542 ) }
    dend_16 { pt3dadd( 301.315, 350.447, 37.6295, 0.2796 ) }
    dend_16 { pt3dadd( 300.905, 351.435, 38.1556, 0.305 ) }
    dend_16 { pt3dadd( 300.681, 352.481, 38.7568, 0.2796 ) }
    dend_16 { pt3dadd( 300.285, 353.443, 39.4181, 0.2796 ) }
    dend_16 { pt3dadd( 299.783, 354.353, 40.1125, 0.2796 ) }
    dend_16 { pt3dadd( 298.807, 354.691, 40.7646, 0.305 ) }
    dend_16 { pt3dadd( 297.756, 354.939, 41.3428, 0.2796 ) }
    dend_16 { pt3dadd( 297.095, 355.802, 41.5727, 0.2542 ) }
    dend_16 { pt3dadd( 296.434, 356.666, 41.2457, 0.2796 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 52/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 305.868, 346.225, 34.9605, 0.2288 ) }
    dend_11 { pt3dadd( 305.497, 345.636, 34.7931, 0.2288 ) }
    dend_11 { pt3dadd( 304.647, 345.231, 34.4851, 0.2288 ) }
    dend_11 { pt3dadd( 304.154, 344.494, 34.5388, 0.2542 ) }
    dend_11 { pt3dadd( 303.207, 343.991, 34.6545, 0.2796 ) }
    dend_11 { pt3dadd( 302.209, 343.454, 34.757, 0.3304 ) }
    dend_11 { pt3dadd( 301.328, 342.731, 34.8054, 0.3304 ) }
    dend_11 { pt3dadd( 300.458, 341.992, 34.8071, 0.356 ) }
    dend_11 { pt3dadd( 299.594, 341.243, 34.7906, 0.3814 ) }
    dend_11 { pt3dadd( 298.637, 340.619, 34.7208, 0.4576 ) }
    dend_11 { pt3dadd( 297.663, 340.02, 34.6447, 0.483 ) }
    dend_11 { pt3dadd( 296.69, 339.42, 34.5685, 0.4576 ) }
    dend_11 { pt3dadd( 295.706, 338.839, 34.5078, 0.3814 ) }
    dend_11 { pt3dadd( 294.708, 338.28, 34.47, 0.3304 ) }
    dend_11 { pt3dadd( 294.03, 337.451, 34.3538, 0.2796 ) }
    dend_11 { pt3dadd( 293.428, 336.58, 34.1771, 0.2542 ) }
    dend_11 { pt3dadd( 292.716, 336.656, 34.4075, 0.2288 ) }
    dend_11 { pt3dadd( 292.045, 336.222, 34.7606, 0.2542 ) }
    dend_11 { pt3dadd( 291.415, 335.269, 35.0134, 0.2796 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 71/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 382.795, 342.399, 15.6701, 0.3814 ) }
    dend_6 { pt3dadd( 382.839, 341.87, 15.6531, 0.305 ) }
    dend_6 { pt3dadd( 382.932, 340.731, 15.5998, 0.3304 ) }
    dend_6 { pt3dadd( 382.94, 339.591, 15.5261, 0.4068 ) }
    dend_6 { pt3dadd( 382.881, 338.448, 15.4491, 0.483 ) }
    dend_6 { pt3dadd( 382.567, 337.39, 15.2864, 0.483 ) }
    dend_6 { pt3dadd( 382.136, 336.37, 15.0329, 0.4068 ) }
    dend_6 { pt3dadd( 381.929, 335.266, 14.8016, 0.3304 ) }
    dend_6 { pt3dadd( 381.81, 334.129, 14.6237, 0.305 ) }
    dend_6 { pt3dadd( 382.222, 333.095, 14.5803, 0.305 ) }
    dend_6 { pt3dadd( 382.66, 332.063, 14.6264, 0.3304 ) }
    dend_6 { pt3dadd( 383.02, 330.992, 14.6121, 0.356 ) }
    dend_6 { pt3dadd( 383.622, 330.053, 14.5741, 0.356 ) }
    dend_6 { pt3dadd( 384.381, 329.197, 14.5261, 0.305 ) }
    dend_6 { pt3dadd( 385.078, 328.293, 14.4835, 0.2796 ) }
    dend_6 { pt3dadd( 385.812, 327.437, 14.4522, 0.2796 ) }
    dend_6 { pt3dadd( 386.823, 326.901, 14.4483, 0.305 ) }
    dend_6 { pt3dadd( 386.829, 325.801, 14.495, 0.2796 ) }
    dend_6 { pt3dadd( 387.127, 324.778, 14.576, 0.2542 ) }
    dend_6 { pt3dadd( 387.847, 323.895, 14.6749, 0.2542 ) }
    dend_6 { pt3dadd( 388.612, 323.076, 14.7026, 0.2796 ) }
    dend_6 { pt3dadd( 389.42, 322.316, 14.6156, 0.305 ) }
    dend_6 { pt3dadd( 390.427, 321.957, 14.6924, 0.2796 ) }
    dend_6 { pt3dadd( 391.367, 321.508, 14.7801, 0.2542 ) }
    dend_6 { pt3dadd( 392.191, 320.887, 14.6695, 0.2542 ) }
    dend_6 { pt3dadd( 393.112, 320.287, 14.4904, 0.2796 ) }
    dend_6 { pt3dadd( 393.954, 319.826, 14.4761, 0.3304 ) }
    dend_6 { pt3dadd( 394.713, 319.509, 14.7829, 0.4068 ) }
    dend_6 { pt3dadd( 395.447, 318.899, 14.9992, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 396.167, 318.146, 15.0128, 0.5592 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 382.795, 342.399, 15.6701, 0.3814 ) }
    dend_5 { pt3dadd( 383.327, 342.655, 15.8634, 0.5338 ) }
    dend_5 { pt3dadd( 384.27, 343.264, 15.8594, 0.5592 ) }
    dend_5 { pt3dadd( 385.14, 343.971, 15.9187, 0.5592 ) }
    dend_5 { pt3dadd( 386.233, 344.202, 15.8654, 0.5848 ) }
    dend_5 { pt3dadd( 387.348, 344.382, 15.7121, 0.5084 ) }
    dend_5 { pt3dadd( 388.478, 344.51, 15.5807, 0.4068 ) }
    dend_5 { pt3dadd( 389.496, 344.103, 15.3464, 0.3814 ) }
    dend_5 { pt3dadd( 390.423, 343.953, 14.9401, 0.4322 ) }
    dend_5 { pt3dadd( 391.28, 344.15, 14.3556, 0.5084 ) }
    dend_5 { pt3dadd( 392.315, 344.416, 14.0707, 0.5084 ) }
    dend_5 { pt3dadd( 393.353, 344.739, 13.9655, 0.4576 ) }
    dend_5 { pt3dadd( 394.402, 345.195, 13.8756, 0.3814 ) }
    dend_5 { pt3dadd( 395.433, 345.688, 13.817, 0.3304 ) }
    dend_5 { pt3dadd( 396.459, 345.977, 13.7419, 0.3304 ) }
    dend_5 { pt3dadd( 397.5, 345.665, 13.5322, 0.356 ) }
    dend_5 { pt3dadd( 398.612, 345.601, 13.2793, 0.4068 ) }
    dend_5 { pt3dadd( 399.755, 345.648, 13.0446, 0.4068 ) }
    dend_5 { pt3dadd( 400.852, 345.971, 12.8507, 0.4068 ) }
    dend_5 { pt3dadd( 401.909, 346.386, 12.6876, 0.3304 ) }
    dend_5 { pt3dadd( 402.898, 346.96, 12.545, 0.2796 ) }
    dend_5 { pt3dadd( 403.925, 347.117, 12.332, 0.2796 ) }
    dend_5 { pt3dadd( 404.976, 346.975, 11.48, 0.356 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 354.869, 295.127, 26.5241, 0.4576 ) }
    dend_3 { pt3dadd( 354.351, 294.103, 27.8799, 0.3304 ) }
    dend_3 { pt3dadd( 353.972, 293.267, 29.4795, 0.3814 ) }
    dend_3 { pt3dadd( 353.674, 292.34, 30.2061, 0.4068 ) }
    dend_3 { pt3dadd( 353.228, 291.404, 30.9347, 0.4068 ) }
    dend_3 { pt3dadd( 352.599, 290.458, 31.507, 0.3814 ) }
    dend_3 { pt3dadd( 351.631, 290.067, 32.0214, 0.4068 ) }
    dend_3 { pt3dadd( 350.504, 289.936, 32.5198, 0.4068 ) }
    dend_3 { pt3dadd( 349.45, 290.126, 33.0901, 0.3814 ) }
    dend_3 { pt3dadd( 348.374, 290.192, 33.7296, 0.305 ) }
    dend_3 { pt3dadd( 347.29, 290.059, 34.4156, 0.2542 ) }
    dend_3 { pt3dadd( 346.376, 289.425, 35.1196, 0.2288 ) }
    dend_3 { pt3dadd( 345.612, 288.971, 35.9142, 0.2288 ) }
    dend_3 { pt3dadd( 345.017, 288.72, 36.8651, 0.2288 ) }
    dend_3 { pt3dadd( 344.829, 287.948, 37.5726, 0.2288 ) }
    dend_3 { pt3dadd( 344.58, 286.979, 37.9263, 0.2542 ) }
    dend_3 { pt3dadd( 343.817, 286.177, 38.0495, 0.2796 ) }
    dend_3 { pt3dadd( 343.317, 285.236, 38.2113, 0.3304 ) }
    dend_3 { pt3dadd( 342.922, 284.262, 38.3404, 0.3304 ) }
    dend_3 { pt3dadd( 342.591, 283.315, 38.3239, 0.3814 ) }
    dend_3 { pt3dadd( 342.228, 282.453, 38.6011, 0.4068 ) }
    dend_3 { pt3dadd( 341.771, 281.564, 38.9892, 0.483 ) }
    dend_3 { pt3dadd( 341.141, 280.623, 39.48, 0.5084 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 354.869, 295.127, 26.5241, 0.4576 ) }
    dend_2 { pt3dadd( 355.464, 294.999, 26.5741, 0.5084 ) }
    dend_2 { pt3dadd( 356.552, 294.812, 26.7541, 0.4576 ) }
    dend_2 { pt3dadd( 357.676, 294.828, 27.0301, 0.356 ) }
    dend_2 { pt3dadd( 358.737, 294.872, 27.2891, 0.2796 ) }
    dend_2 { pt3dadd( 359.681, 294.66, 27.4569, 0.2542 ) }
    dend_2 { pt3dadd( 360.606, 293.99, 27.7098, 0.2796 ) }
    dend_2 { pt3dadd( 361.088, 293.292, 28.2425, 0.356 ) }
    dend_2 { pt3dadd( 361.634, 292.679, 29.0206, 0.4068 ) }
    dend_2 { pt3dadd( 362.428, 292.19, 29.9443, 0.4576 ) }
    dend_2 { pt3dadd( 363.5, 291.968, 30.6622, 0.4576 ) }
    dend_2 { pt3dadd( 364.579, 291.738, 31.2122, 0.4322 ) }
    dend_2 { pt3dadd( 365.554, 291.325, 31.8158, 0.4322 ) }
    dend_2 { pt3dadd( 366.486, 290.789, 32.4223, 0.3814 ) }
    dend_2 { pt3dadd( 367.388, 290.16, 33.0313, 0.356 ) }
    dend_2 { pt3dadd( 367.948, 289.173, 33.5121, 0.3304 ) }
    dend_2 { pt3dadd( 368.595, 288.392, 34.053, 0.356 ) }
    dend_2 { pt3dadd( 369.375, 287.924, 34.8082, 0.4322 ) }
    dend_2 { pt3dadd( 370.47, 287.706, 35.5104, 0.4322 ) }
    dend_2 { pt3dadd( 371.432, 287.96, 36.1449, 0.4576 ) }
    dend_2 { pt3dadd( 372.259, 288.493, 36.8049, 0.3814 ) }
    dend_2 { pt3dadd( 373.232, 288.431, 37.6765, 0.3814 ) }
    dend_2 { pt3dadd( 374.285, 288.26, 38.6352, 0.356 ) }
    dend_2 { pt3dadd( 375.346, 288.083, 39.6578, 0.4068 ) }
    dend_2 { pt3dadd( 376.336, 288.429, 40.7792, 0.4322 ) }
    dend_2 { pt3dadd( 377.078, 288.496, 42.0104, 0.4322 ) }
    dend_2 { pt3dadd( 377.164, 287.821, 43.4146, 0.3814 ) }
    dend_2 { pt3dadd( 377.305, 287.016, 44.8686, 0.3304 ) }
    dend_2 { pt3dadd( 377.503, 286.112, 46.2308, 0.305 ) }
    dend_2 { pt3dadd( 377.812, 285.017, 47.2965, 0.305 ) }
    dend_2 { pt3dadd( 377.208, 284.688, 48.398, 0.2796 ) }
    dend_2 { pt3dadd( 377.351, 283.87, 49.436, 0.2796 ) }
    dend_2 { pt3dadd( 377.346, 282.883, 50.3801, 0.2796 ) }
    dend_2 { pt3dadd( 377.068, 281.884, 51.2369, 0.3304 ) }
    dend_2 { pt3dadd( 376.605, 280.852, 52.64, 0.356 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 291.415, 335.269, 35.0134, 0.2796 ) }
    dend_15 { pt3dadd( 292.215, 334.239, 36.96, 0.3814 ) }
    dend_15 { pt3dadd( 291.969, 333.135, 37.3537, 0.4576 ) }
    dend_15 { pt3dadd( 291.594, 332.057, 37.4702, 0.4576 ) }
    dend_15 { pt3dadd( 291.268, 330.963, 37.5606, 0.4068 ) }
    dend_15 { pt3dadd( 290.961, 329.861, 37.637, 0.4068 ) }
    dend_15 { pt3dadd( 290.552, 328.803, 37.7462, 0.3304 ) }
    dend_15 { pt3dadd( 290.118, 327.756, 38.08, 0.3304 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 291.415, 335.269, 35.0134, 0.2796 ) }
    dend_12 { pt3dadd( 290.67, 334.66, 35.1484, 0.3304 ) }
    dend_12 { pt3dadd( 289.741, 334.007, 35.1736, 0.4068 ) }
    dend_12 { pt3dadd( 288.787, 333.386, 35.0888, 0.4322 ) }
    dend_12 { pt3dadd( 287.82, 332.775, 34.9266, 0.356 ) }
    dend_12 { pt3dadd( 286.851, 332.167, 34.7651, 0.2796 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 396.167, 318.146, 15.0128, 0.5592 ) }
    dend_8 { pt3dadd( 395.865, 317.618, 14.6832, 0.2288 ) }
    dend_8 { pt3dadd( 395.3, 316.628, 14.8909, 0.2288 ) }
    dend_8 { pt3dadd( 394.713, 315.649, 14.9825, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_8 { pt3dadd( 394.09, 314.69, 15.0681, 0.3304 ) }
    dend_8 { pt3dadd( 393.416, 313.767, 15.1454, 0.4068 ) }
    dend_8 { pt3dadd( 392.71, 312.867, 15.2142, 0.4322 ) }
    dend_8 { pt3dadd( 392.078, 311.916, 15.2899, 0.3814 ) }
    dend_8 { pt3dadd( 391.492, 310.936, 15.3777, 0.3304 ) }
    dend_8 { pt3dadd( 391.067, 309.881, 15.4745, 0.3304 ) }
    dend_8 { pt3dadd( 390.709, 308.795, 15.5779, 0.3304 ) }
    dend_8 { pt3dadd( 390.598, 307.668, 15.6898, 0.3304 ) }
    dend_8 { pt3dadd( 390.569, 306.527, 15.8061, 0.2796 ) }
    dend_8 { pt3dadd( 390.562, 305.383, 15.9026, 0.2796 ) }
    dend_8 { pt3dadd( 390.562, 304.239, 15.9756, 0.2796 ) }
    dend_8 { pt3dadd( 390.821, 303.136, 16.0462, 0.305 ) }
    dend_8 { pt3dadd( 391.161, 302.045, 16.1183, 0.2796 ) }
    dend_8 { pt3dadd( 391.862, 301.157, 16.171, 0.305 ) }
    dend_8 { pt3dadd( 392.621, 300.3, 16.24, 0.3304 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 396.167, 318.146, 15.0128, 0.5592 ) }
    dend_7 { pt3dadd( 397.201, 317.54, 15.0904, 0.4322 ) }
    dend_7 { pt3dadd( 398.258, 317.235, 15.2506, 0.483 ) }
    dend_7 { pt3dadd( 399.231, 316.699, 15.3609, 0.4322 ) }
    dend_7 { pt3dadd( 400.151, 316.022, 15.3885, 0.4576 ) }
    dend_7 { pt3dadd( 401.189, 315.681, 15.3283, 0.4068 ) }
    dend_7 { pt3dadd( 402.242, 315.378, 15.2054, 0.4068 ) }
    dend_7 { pt3dadd( 403.159, 314.724, 15.1626, 0.356 ) }
    dend_7 { pt3dadd( 403.984, 314.022, 15.2177, 0.3814 ) }
    dend_7 { pt3dadd( 404.663, 313.247, 15.4137, 0.4576 ) }
    dend_7 { pt3dadd( 405.484, 312.723, 15.4428, 0.5848 ) }
    dend_7 { pt3dadd( 406.381, 312.328, 15.1992, 0.6102 ) }
    dend_7 { pt3dadd( 406.562, 311.261, 14.8733, 0.5338 ) }
    dend_7 { pt3dadd( 406.869, 310.213, 14.5136, 0.4068 ) }
    dend_7 { pt3dadd( 407.584, 309.331, 14.2243, 0.3304 ) }
    dend_7 { pt3dadd( 408.497, 308.981, 13.9125, 0.305 ) }
    dend_7 { pt3dadd( 409.573, 309.066, 13.5451, 0.305 ) }
    dend_7 { pt3dadd( 410.435, 308.396, 13.2281, 0.305 ) }
    dend_7 { pt3dadd( 411.268, 307.622, 12.6, 0.305 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 286.851, 332.167, 34.7651, 0.2796 ) }
    dend_14 { pt3dadd( 286.49, 332.378, 35.364, 0.2288 ) }
    dend_14 { pt3dadd( 285.558, 332.92, 36.7671, 0.2288 ) }
    dend_14 { pt3dadd( 284.627, 333.463, 37.3607, 0.2288 ) }
    dend_14 { pt3dadd( 283.883, 334.327, 38.1164, 0.2542 ) }
    dend_14 { pt3dadd( 282.833, 334.725, 38.8576, 0.2796 ) }
    dend_14 { pt3dadd( 281.775, 334.94, 39.5889, 0.305 ) }
    dend_14 { pt3dadd( 280.702, 334.79, 40.3267, 0.305 ) }
    dend_14 { pt3dadd( 279.618, 334.542, 40.9634, 0.305 ) }
    dend_14 { pt3dadd( 278.524, 334.21, 41.4506, 0.305 ) }
    dend_14 { pt3dadd( 277.655, 334.212, 42.0535, 0.305 ) }
    dend_14 { pt3dadd( 276.716, 334.327, 42.7199, 0.305 ) }
    dend_14 { pt3dadd( 275.668, 334.26, 43.2891, 0.305 ) }
    dend_14 { pt3dadd( 274.986, 333.397, 43.8298, 0.2796 ) }
    dend_14 { pt3dadd( 274.117, 333.309, 44.0583, 0.2542 ) }
    dend_14 { pt3dadd( 273.177, 333.455, 44.1829, 0.2288 ) }
    dend_14 { pt3dadd( 272.193, 333.659, 44.455, 0.2288 ) }
    dend_14 { pt3dadd( 271.169, 333.256, 44.7768, 0.2288 ) }
    dend_14 { pt3dadd( 270.096, 333.057, 45.0976, 0.2288 ) }
    dend_14 { pt3dadd( 268.954, 333.133, 45.64, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 286.851, 332.167, 34.7651, 0.2796 ) }
    dend_13 { pt3dadd( 286.257, 331.1, 34.4994, 0.2288 ) }
    dend_13 { pt3dadd( 285.391, 330.372, 34.2527, 0.2288 ) }
    dend_13 { pt3dadd( 284.578, 329.591, 34.0522, 0.2288 ) }
    dend_13 { pt3dadd( 283.929, 328.648, 33.9475, 0.2288 ) }
    dend_13 { pt3dadd( 283.196, 327.797, 33.9685, 0.2288 ) }
    dend_13 { pt3dadd( 282.361, 327.052, 34.1348, 0.2288 ) }
    dend_13 { pt3dadd( 281.494, 326.32, 34.3773, 0.2288 ) }
    dend_13 { pt3dadd( 280.681, 325.529, 34.6447, 0.2288 ) }
    dend_13 { pt3dadd( 279.935, 324.668, 34.9037, 0.2288 ) }
    dend_13 { pt3dadd( 278.994, 324.082, 35.1714, 0.2288 ) }
    dend_13 { pt3dadd( 278.083, 323.498, 35.4183, 0.2288 ) }
    dend_13 { pt3dadd( 277.733, 322.434, 35.4992, 0.2288 ) }
    dend_13 { pt3dadd( 276.964, 321.655, 35.5191, 0.2542 ) }
    dend_13 { pt3dadd( 276.048, 320.971, 35.5144, 0.2796 ) }
    dend_13 { pt3dadd( 275.181, 320.231, 35.4749, 0.305 ) }
    dend_13 { pt3dadd( 274.571, 319.353, 35.5718, 0.2796 ) }
    dend_13 { pt3dadd( 274.041, 318.419, 35.7473, 0.2542 ) }
    dend_13 { pt3dadd( 273.638, 317.364, 35.8215, 0.2542 ) }
    dend_13 { pt3dadd( 273.109, 316.386, 35.81, 0.3304 ) }
    dend_13 { pt3dadd( 272.355, 315.545, 35.7392, 0.4576 ) }
    dend_13 { pt3dadd( 271.595, 314.698, 35.6737, 0.5338 ) }
    dend_13 { pt3dadd( 270.82, 313.859, 35.653, 0.5084 ) }
    dend_13 { pt3dadd( 269.955, 313.129, 35.7582, 0.4068 ) }
    dend_13 { pt3dadd( 269.073, 312.415, 35.975, 0.3304 ) }
    dend_13 { pt3dadd( 268.155, 311.734, 36.2513, 0.3304 ) }
    dend_13 { pt3dadd( 267.401, 310.908, 36.6078, 0.3304 ) }
    dend_13 { pt3dadd( 266.754, 309.987, 37.0373, 0.356 ) }
    dend_13 { pt3dadd( 265.871, 309.323, 37.5332, 0.3304 ) }
    dend_13 { pt3dadd( 264.961, 308.774, 38.0828, 0.3304 ) }
    dend_13 { pt3dadd( 263.994, 308.832, 38.7534, 0.305 ) }
    dend_13 { pt3dadd( 262.992, 308.847, 39.4139, 0.305 ) }
    dend_13 { pt3dadd( 261.876, 308.726, 39.807, 0.305 ) }
    dend_13 { pt3dadd( 260.774, 308.522, 40.0344, 0.2796 ) }
    dend_13 { pt3dadd( 259.688, 308.194, 40.32, 0.2796 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_23, dend_18, dend_9, dend_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_10, dend_4, dend_1, dend_26, dend_25, dend_22, dend_21, dend_16, dend_11, dend_6, dend_5, dend_3, dend_2, dend_15, dend_12, dend_8, dend_7, dend_14, dend_13]}
    dend = new SectionList()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_17225, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_17225 = new SectionList()
    soma_0 OneSecGrp_SectionRef_17225.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 3.542708  // units: uF/cm2
    forsec axon cm = 3.542708  // units: uF/cm2
    forsec dend cm = 3.542708  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 79.8274  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 5.8808567E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 9.800909E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.09624063  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0030504595  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 1.8579999E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.035556488  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.015153745  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.8123259  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 4.1602372E-5  // units: S cm-2
        e_pas_nml2 = -83.267525  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.9129718E-4  // units: S cm-2
        e_pas_nml2 = -83.267525  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.344549E-6  // units: S cm-2
        e_pas_nml2 = -83.267525  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.964463E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0029357036  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513461
    forsec soma {
        insert CaDynamics_478513461
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 5
    dend_4 nseg = 3
    dend_1 nseg = 3
    dend_2 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513461


