// Cell: bIR215_L5_BP_6687408de7_0_0
/*
{
  "id" : "bIR215_L5_BP_6687408de7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.07628, 2.40803, 0.83", "-3.6566, 8.64652, 2.96378, 0.83", "-7.30035, 11.4001, 3.51331, 1.11", "-9.44873, 13.0226, 3.79916, 0.83", "-11.536, 14.5852, 4.05529, 0.83", "-12.7718, 15.4762, 4.19563, 1.11", "-16.6417, 18.2606, 4.64545, 1.11", "-23.5635, 23.0275, 5.44059, 0.83", "-26.0572, 24.6794, 5.70317, 0.83", "-28.0319, 25.9486, 5.86626, 0.83", "-29.9576, 27.2065, 6.00744, 0.83", "-31.5251, 28.2432, 6.08361, 0.55", "-32.7034, 28.9452, 6.16092, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.31578, -5.68197, 0.55", "4.94449, 6.23324, -6.32499, 0.55", "8.1126, 6.90144, -7.03249, 0.55", "9.95094, 7.07011, -7.96866, 0.83", "12.8604, 7.24962, -9.70765, 0.55", "14.2649, 7.33627, -10.5471, 1.38", "17.7182, 7.54932, -12.6111, 0.55", "19.189, 7.47718, -13.5959, 0.83", "26.7972, 6.15405, -19.1293, 0.55", "27.5332, 5.97612, -19.738, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.03197, 2.42803, 1.11", "-0.691577, -10.8612, 3.46833, 1.11", "-0.754075, -16.2376, 5.44516, 1.11", "-0.779527, -18.4272, 6.25025, 0.83", "-0.813343, -21.3362, 7.31986, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.41203, -1.26197, 1.11", "0.842489, 9.16377, -1.34892, 1.11", "0.902027, 10.7064, -1.33548, 1.11", "0.988567, 13.2232, -1.21964, 1.38", "0.995771, 13.3634, -1.21051, 1.38", "1.19125, 15.0983, -1.07533, 0.83", "1.47018, 16.9331, -0.828889, 0.83", "1.95611, 19.0056, -0.286689, 0.83", "2.23608, 19.792, 0.0219903, 0.83", "2.51471, 20.3618, 0.307406, 1.11", "3.33512, 21.7503, 1.04778, 0.55", "4.2898, 23.2, 1.93167, 0.83", "5.54873, 24.6921, 2.941, 0.55", "6.19379, 25.3123, 3.40093, 0.83", "7.09328, 26.1524, 4.11542, 0.55", "8.20468, 27.2209, 5.07981, 0.55", "9.75208, 28.8285, 6.54893, 0.55", "11.4568, 30.6657, 8.17089, 0.55", "12.5255, 31.858, 9.37704, 0.55", "13.8273, 33.3654, 11.0742, 0.55", "14.0968, 33.6678, 11.4586, 0.83", "14.8061, 34.4669, 12.5415, 0.55", "15.4055, 35.0899, 13.3928, 0.83", "16.7819, 36.7912, 15.4101, 0.55", "17.3063, 37.4125, 16.0028, 0.83", "17.8031, 37.8708, 16.4088, 0.55", "18.2994, 38.2656, 16.7235, 0.83", "19.4051, 39.0002, 17.2997, 0.83", "20.8717, 40.0002, 17.9266, 0.83", "21.7746, 40.6609, 18.2105, 0.55", "22.4625, 41.2323, 18.4309, 0.55", "24.2669, 42.7088, 18.9808, 0.83", "25.4339, 43.6557, 19.2876, 0.55", "27.2082, 45.043, 19.6793, 0.55", "28.8365, 46.2066, 19.9715, 0.55", "30.2944, 47.1926, 20.1928, 0.55", "32.1398, 48.3482, 20.3871, 0.55", "33.2696, 48.9152, 20.4686, 0.55", "34.0434, 49.2344, 20.4308, 0.55", "35.0747, 49.4746, 20.2932, 0.55", "36.6185, 49.5889, 19.9618, 0.55", "37.5828, 49.5415, 19.7181, 0.55", "38.9895, 49.4354, 19.4603, 0.55", "41.6623, 49.3159, 19.208, 0.55", "43.7551, 49.3166, 19.1592, 0.55", "45.9691, 49.4203, 19.24, 0.55", "47.3854, 49.5344, 19.4042, 0.55", "51.0569, 50.1569, 20.0744, 0.55", "53.2239, 50.6896, 20.6359, 0.55", "54.8441, 51.1939, 21.2107, 0.55", "55.8267, 51.6618, 21.5987, 0.55", "56.9648, 52.3564, 22.0429, 0.55", "58.8948, 53.7246, 22.6197, 0.55", "59.339, 54.0539, 22.6898, 0.55", "60.6161, 54.9348, 22.8057, 0.55", "61.7891, 55.8724, 22.9077, 0.83", "62.4294, 56.3925, 22.9531, 0.55", "63.3886, 57.2845, 22.9827, 0.83", "68.4039, 62.0485, 24.4834, 0.83", "72.7664, 67.5066, 25.4371, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-32.7034, 28.9452, 6.16092, 0.55", "-34.1383, 29.8368, 5.32953, 0.55", "-35.6986, 30.8064, 4.42547, 0.55", "-37.5815, 31.9764, 3.33447, 0.55", "-39.1363, 32.9425, 2.43361, 0.83", "-40.4393, 33.7521, 1.67868, 0.55", "-42.8577, 35.2549, 0.27743, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.7034, 28.9452, 6.16092, 0.55", "-35.6045, 29.4808, 5.79274, 0.55", "-38.6948, 29.9508, 5.70788, 0.55", "-42.1999, 30.4765, 5.69728, 0.55", "-47.2809, 31.1758, 6.14835, 0.55", "-51.5358, 31.6348, 6.82691, 0.55", "-56.0003, 32.0455, 7.72867, 0.55", "-60.3206, 32.1488, 9.06245, 0.55", "-64.0435, 31.8776, 10.5662, 0.55", "-68.6875, 31.2135, 12.934, 0.55", "-70.7095, 30.7751, 14.2437, 0.55", "-72.8945, 30.2771, 15.7525, 0.55", "-76.7473, 29.1174, 18.2338, 0.55", "-78.7946, 28.5122, 19.2306, 0.55", "-80.939, 27.8144, 20.2609, 0.55", "-83.4867, 27.0207, 21.2273, 0.55", "-86.2547, 26.2159, 22.2022, 0.55", "-90.2043, 25.0593, 23.5068, 0.55", "-95.4748, 23.868, 24.7792, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.5332, 5.97612, -19.738, 0.55", "33.182, 6.11807, -21.0998, 0.55", "36.3716, 6.24752, -22.363, 0.55", "39.4738, 6.27927, -23.7091, 0.55", "41.566, 6.22981, -24.6638, 0.55", "44.6009, 6.08651, -26.0677, 0.55", "50.8536, 5.777, -29.2142, 0.55", "57.9248, 5.60956, -33.2441, 0.55", "61.2786, 5.45552, -35.5132, 0.55", "63.0579, 5.39087, -36.8609, 0.55", "65.0108, 5.36698, -38.4108, 0.55", "68.4626, 5.23109, -41.2069, 0.55", "69.6898, 5.13604, -42.2963, 0.55", "74.9249, 5.05432, -47.2477, 0.55", "78.6471, 5.18733, -50.9965, 0.55", "80.8038, 5.331, -53.1937, 0.55", "82.9482, 5.45637, -55.3922, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.5332, 5.97612, -19.738, 0.83", "29.3125, 7.36208, -19.8998, 0.83", "30.3322, 8.14561, -20.0424, 0.55", "31.8355, 9.31244, -20.3961, 0.83", "32.8444, 10.1189, -20.6712, 0.55", "34.2298, 11.2736, -21.0348, 0.83", "35.888, 12.7064, -21.4106, 0.55", "36.7288, 13.3681, -21.5516, 0.55", "38.6917, 14.6379, -21.6835, 0.83", "40.4898, 15.607, -21.52, 0.55", "41.4912, 16.1536, -21.3249, 0.83", "42.9809, 17.0335, -20.8696, 0.55", "45.1009, 18.382, -19.9284, 0.55", "48.0569, 20.121, -18.432, 0.55", "50.8784, 21.706, -16.7776, 0.55", "53.1148, 22.9435, -15.4197, 0.55", "56.7982, 25.0048, -13.163, 0.55", "59.4795, 26.6033, -11.461, 0.55", "61.0765, 27.7204, -10.3917, 0.55", "63.9743, 30.1022, -8.44414, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.813343, -21.3362, 7.31986, 0.83", "-0.955626, -22.3949, 7.28525, 0.83", "-1.09425, -23.4264, 7.25153, 0.83", "-1.24903, -24.5781, 7.21389, 0.83", "-1.32985, -25.1795, 7.19423, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.813343, -21.3362, 7.31986, 0.55", "-0.177209, -22.9614, 8.41981, 0.55", "0.406016, -24.9474, 9.86867, 0.55", "0.772987, -27.5417, 11.9015, 0.55", "0.845351, -28.5486, 12.7246, 0.83", "0.809511, -31.1142, 15.1426, 0.55", "0.681332, -32.4367, 16.425, 0.55", "0.383854, -35.0077, 19.0349, 0.83", "0.0583165, -36.9148, 21.1056, 0.55", "-0.355989, -38.4846, 22.7987, 0.55", "-1.21362, -41.456, 25.9544, 0.55", "-1.89666, -43.8243, 28.4408, 0.55", "-2.40254, -45.7238, 30.4588, 0.55", "-2.82947, -47.7429, 32.5275, 0.28", "-2.9367, -48.5854, 33.3508, 0.55", "-3.09944, -50.1421, 34.7776, 0.28", "-3.04029, -52.5783, 36.5928, 0.55", "-4.81449, -60.6404, 43.2219, 0.55", "-6.74329, -68.086, 50.5315, 0.55", "-8.06896, -74.2176, 59.1438, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-42.8577, 35.2549, 0.27743, 0.55", "-45.2827, 35.4874, 1.59075, 0.55", "-46.3009, 35.5306, 2.27046, 0.83", "-47.4891, 35.5223, 3.22594, 0.55", "-48.397, 35.5154, 4.04104, 0.83", "-50.7766, 35.5812, 6.15568, 0.55", "-51.6775, 35.621, 6.96364, 0.28", "-53.1776, 35.7036, 8.44031, 0.55", "-55.1905, 35.8262, 10.4121, 0.55", "-56.7202, 35.9199, 11.8374, 0.55", "-58.7647, 36.0448, 13.6748, 0.28", "-59.2971, 36.0813, 14.0867, 0.55", "-60.3997, 36.1699, 14.8967, 0.28", "-61.1496, 36.2495, 15.3753, 0.55", "-62.683, 36.4016, 16.2169, 0.28", "-63.5839, 36.442, 16.6634, 0.55", "-65.1732, 36.3988, 17.4641, 0.28", "-66.2413, 36.3629, 17.9639, 0.55", "-72.6976, 35.6273, 23.9424, 0.55", "-78.5826, 34.0793, 30.3323, 0.55", "-84.236, 31.7244, 36.6709, 0.55", "-89.8587, 28.39, 42.5575, 0.55", "-94.5053, 25.3955, 49.4086, 0.55", "-99.8026, 22.7168, 55.9169, 0.55", "-105.201, 21.4278, 62.7792, 0.55", "-110.573, 19.4628, 69.4918, 0.55", "-115.781, 18.0631, 76.4776, 0.55", "-120.584, 16.536, 83.7205, 0.55", "-124.527, 14.0391, 91.1943, 0.55", "-128.551, 12.3322, 98.8575, 0.55", "-132.689, 9.77821, 106.204, 0.55", "-135.808, 6.85603, 113.901, 0.55", "-137.465, 4.50106, 122.231, 0.55", "-139.07, 0.590877, 129.931, 0.55", "-139.417, -3.48344, 137.7, 0.55", "-140.232, -7.20308, 145.62, 0.55", "-141.985, -10.3057, 153.667, 0.55", "-145.553, -12.0645, 161.54, 0.55", "-148.365, -14.775, 169.435, 0.55", "-149.537, -16.0855, 178.084, 0.55", "-152.108, -16.755, 186.505, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-42.8577, 35.2549, 0.27743, 0.55", "-44.1859, 35.8009, -1.34532, 0.55", "-45.2009, 36.4001, -3.15036, 0.55", "-46.1448, 37.1501, -5.06327, 0.55", "-46.7359, 37.6198, -6.26112, 0.55", "-47.8141, 38.4765, -8.44612, 0.83", "-48.603, 39.1033, -10.0447, 0.55", "-49.4995, 39.9516, -12.3898, 0.83", "-49.8206, 40.5335, -13.7092, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-95.4748, 23.868, 24.7792, 0.28", "-96.8694, 21.5988, 23.9591, 0.28", "-97.5315, 20.6366, 23.5156, 0.28", "-98.393, 19.281, 22.8372, 0.55", "-99.1049, 18.0862, 22.2539, 0.28", "-100.156, 16.2618, 21.3916, 0.55", "-103.091, 10.8825, 18.959, 0.28", "-104.046, 9.01478, 17.9462, 0.55", "-105.491, 6.15134, 16.2815, 0.28", "-106.319, 4.44842, 15.2026, 0.55", "-106.891, 3.27888, 14.4278, 0.28", "-107.542, 1.93487, 13.5509, 0.55", "-109.52, -2.57235, 10.7545, 0.28", "-110.139, -3.92827, 9.85466, 0.55", "-111.214, -5.96712, 8.23633, 0.28", "-112.092, -7.25002, 7.06367, 0.28", "-112.878, -8.09541, 6.23434, 0.55", "-115.618, -10.4591, 3.95779, 0.28", "-116.891, -11.4132, 3.05167, 0.55", "-120.002, -13.5581, 0.818664, 0.28", "-123.112, -15.4365, -1.23109, 0.28", "-126.491, -17.1994, -3.31921, 0.28", "-128.038, -17.8526, -4.12821, 0.55", "-135.567, -25.7952, -9.99689, 0.55", "-144.009, -34.1449, -13.6293, 0.55", "-152.212, -41.7775, -19.014, 0.55", "-160.572, -48.5062, -25.3392, 0.55", "-168.982, -54.2148, -32.5862, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-95.4748, 23.868, 24.7792, 0.55", "-96.453, 23.7934, 24.8974, 0.55", "-99.2162, 23.5794, 25.5887, 0.55", "-100.255, 23.4718, 25.9033, 0.55", "-102.7, 23.1462, 26.6796, 0.55", "-106.458, 22.6863, 27.6926, 0.55", "-108.41, 22.5064, 28.1854, 0.28", "-111.447, 22.1633, 28.8917, 0.55", "-113.703, 21.865, 29.3345, 0.55", "-114.655, 21.7328, 29.5234, 0.28", "-120.368, 20.9373, 30.649, 0.55", "-123.038, 20.4489, 31.01, 0.28", "-126.636, 19.7808, 31.2859, 0.28", "-129.736, 19.2527, 31.3428, 0.55", "-141.845, 18.8681, 34.2219, 0.55", "-153.557, 18.1505, 38.3917, 0.55", "-164.617, 16.1713, 43.7465, 0.55", "-175.343, 16.2076, 50.0739, 0.55", "-184.538, 15.7869, 58.4623, 0.55", "-191.942, 15.9871, 68.4715, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "82.9482, 5.45637, -55.3922, 0.55", "86.6701, 6.60937, -58.4763, 0.55", "87.8308, 6.9454, -59.5362, 0.55", "89.2741, 7.31582, -60.8577, 0.55", "91.8782, 8.00826, -63.4149, 0.55", "94.5669, 8.64147, -66.1799, 0.55", "95.8598, 8.83904, -67.5252, 0.83", "96.9019, 8.95163, -68.735, 0.55", "97.6609, 8.99315, -69.7404, 0.83", "99.4192, 8.86344, -72.3724, 0.55", "100.833, 8.61219, -74.59, 0.55", "102.461, 8.28516, -77.0505, 0.55", "104.284, 7.99102, -79.8177, 0.55", "105.498, 7.77127, -81.7174, 0.55", "106.862, 7.53257, -83.9125, 0.55", "108.046, 7.39972, -85.8935, 0.55", "108.802, 7.42424, -87.2349, 0.55", "109.688, 7.6482, -89.8478, 0.55", "110.144, 7.76092, -91.4834, 0.55", "110.452, 7.88337, -93.6452, 0.55", "110.785, 8.02519, -97.3056, 0.55", "110.839, 8.03252, -98.1363, 0.28", "111.578, 7.9992, -108.274, 0.28", "111.882, 7.9908, -111.255, 0.83", "113.167, 7.74447, -121.898, 0.83", "113.845, 7.43189, -126.899, 0.83", "114.2, 7.21413, -128.954, 0.55", "114.65, 6.97249, -130.97, 0.55", "116.107, 6.3178, -134.8, 0.55", "117.754, 5.63668, -138.214, 0.28", "118.325, 5.35844, -138.506, 0.55", "119.637, 4.70474, -138.632, 0.28", "120.469, 4.32476, -138.572, 0.55", "121.339, 3.89684, -138.436, 0.28", "122.399, 3.4209, -138.212, 0.55", "123.993, 2.83562, -138.024, 0.28", "125.261, 2.33944, -137.925, 0.55", "126.679, 1.91097, -137.906, 0.28", "128.597, 1.38103, -138.048, 0.55", "130.751, 0.869797, -138.325, 0.55", "132.643, 0.476005, -138.689, 0.28", "135.257, -0.00662386, -139.332, 0.55", "139.775, -0.58974, -140.896, 0.55", "141.779, -0.681978, -141.804, 0.55", "142.643, -0.662163, -142.278, 0.83", "144.282, -0.572279, -143.328, 0.55", "145.425, -0.446109, -144.117, 0.83", "148.517, -0.0196159, -146.255, 0.55", "150.372, 0.13007, -147.642, 0.28", "151.148, 0.121905, -148.149, 0.55", "153.243, -0.15744, -149.347, 0.28", "153.965, -0.335596, -149.734, 0.55", "155.444, -0.86162, -150.315, 0.28", "156.933, -1.61903, -150.67, 0.55", "159.936, -3.46624, -150.865, 0.28", "161.316, -4.42296, -150.814, 0.55", "163.347, -5.99833, -150.652, 0.28", "165.922, -8.00525, -150.344, 0.55", "167.792, -9.4389, -150.082, 0.55", "171.06, -11.8334, -149.545, 0.28", "172.408, -12.721, -149.426, 0.55", "174.748, -14.0436, -149.457, 0.28", "177.111, -15.1356, -149.612, 0.55", "178.429, -15.5381, -149.848, 0.28", "179.652, -15.7194, -150.115, 0.55", "183.127, -15.9479, -151.144, 0.28", "185.645, -15.9379, -151.877, 0.28", "187.867, -15.7721, -152.507, 0.55", "190.327, -15.4936, -153.305, 0.28", "190.957, -15.3932, -153.478, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "82.9482, 5.45637, -55.3922, 0.55", "82.7686, 4.28204, -57.8431, 0.55", "82.4552, 3.26441, -59.7745, 0.28", "82.165, 2.25403, -61.417, 0.55", "81.7292, 0.0780991, -64.9606, 0.28", "81.6961, -0.0397489, -65.2104, 0.55", "81.5553, -0.613437, -66.6104, 0.28", "81.3531, -0.9777, -67.8888, 0.55", "81.0864, -1.27764, -69.3154, 0.28", "80.6836, -1.63979, -71.3108, 0.55", "79.6692, -2.58467, -76.2626, 0.55", "78.7096, -3.40437, -80.8194, 0.55", "77.918, -4.05036, -84.4602, 0.55", "77.0947, -4.69654, -87.9916, 0.55", "76.8797, -4.87798, -88.8794, 0.28", "76.6686, -5.10893, -89.7806, 0.55", "76.4625, -5.50306, -90.9668, 0.28", "76.2609, -6.34566, -92.9861, 0.55", "76.1419, -8.32325, -96.4469, 0.55", "76.0914, -9.47725, -98.1722, 0.28", "75.9401, -10.5778, -99.9762, 0.55", "75.5511, -12.0148, -102.553, 0.28", "75.1122, -13.1114, -104.652, 0.55", "74.3308, -14.7106, -107.771, 0.28", "73.5435, -16.4245, -110.917, 0.55", "72.3425, -18.8739, -115.511, 0.28", "71.6511, -20.16, -117.956, 0.55", "70.9055, -21.4321, -120.502, 0.28", "70.2281, -22.4722, -122.859, 0.28", "69.4733, -23.673, -126.03, 0.55", "68.9425, -24.8711, -128.945, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "63.9743, 30.1022, -8.44414, 0.55", "66.0985, 30.2637, -7.76702, 0.55", "67.6682, 30.2848, -7.40248, 0.55", "71.1268, 30.2458, -6.76854, 0.55", "72.699, 30.1614, -6.60883, 0.55", "74.4196, 30.0804, -6.5276, 0.55", "76.7414, 29.9668, -6.58529, 0.55", "79.2192, 29.7267, -6.84975, 0.55", "80.5355, 29.5471, -7.12358, 0.55", "83.2439, 29.0887, -8.0187, 0.55", "84.4939, 28.8768, -8.46994, 0.55", "87.435, 28.3113, -9.58264, 0.55", "89.4332, 27.861, -10.3011, 0.55", "90.8988, 27.538, -10.7666, 0.83", "93.2463, 26.9509, -11.4641, 0.55", "95.5482, 26.2981, -12.0375, 0.83", "97.5038, 25.6816, -12.438, 0.55", "99.2338, 25.1782, -12.7175, 0.55", "100.209, 24.9442, -12.8375, 0.83", "102.474, 24.4346, -13.0082, 0.28", "103.589, 24.2417, -13.0384, 0.28", "104.68, 23.9779, -13.1024, 0.28", "105.857, 23.72, -13.1846, 0.28", "107.74, 23.3296, -13.3614, 0.28", "108.495, 23.1868, -13.4139, 0.55", "110.282, 22.9073, -13.3789, 0.55", "113.488, 22.4173, -13.1549, 0.55", "114.374, 22.2701, -13.0499, 0.55", "115.165, 22.1235, -12.9172, 0.83", "116.865, 21.8902, -12.511, 0.55", "118.34, 21.6963, -12.136, 0.55", "119.733, 21.5204, -11.7769, 0.55", "120.817, 21.3585, -11.5233, 0.55", "122.554, 20.9673, -11.1707, 0.55", "124.628, 20.3095, -10.8165, 0.55", "127.904, 18.8967, -10.3866, 0.55", "129.736, 17.8528, -10.1907, 0.55", "131.354, 16.6867, -10.0274, 0.28", "131.849, 16.2394, -9.97851, 0.55", "132.972, 14.9546, -9.84317, 0.28", "133.976, 13.4871, -9.67469, 0.55", "134.958, 11.6624, -9.32729, 0.55", "135.612, 10.4814, -9.03847, 0.28", "135.848, 10.0711, -8.91443, 0.55", "136.453, 9.05904, -8.58992, 0.28", "137.271, 7.75642, -8.13136, 0.55", "139.368, 4.66053, -6.93289, 0.55", "140.452, 3.11479, -6.29069, 0.55", "141.455, 1.70373, -5.68722, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "63.9743, 30.1022, -8.44414, 0.55", "65.3314, 31.0707, -7.18065, 0.55", "65.7726, 31.3689, -6.80135, 0.55", "67.4462, 32.3636, -5.4299, 0.55", "69.3023, 33.525, -3.88546, 0.55", "71.6674, 35.0355, -1.83467, 0.55", "72.3216, 35.4516, -1.27334, 0.55", "73.5054, 36.1448, -0.258334, 0.55", "74.8097, 36.9152, 0.787569, 0.55", "76.3349, 37.8262, 1.91087, 0.55", "77.7677, 38.7081, 2.96584, 0.55", "78.5563, 39.2139, 3.4893, 0.55", "79.4781, 39.835, 4.09027, 0.55", "80.6178, 40.6292, 4.79681, 0.83", "82.53, 41.8416, 5.7452, 0.55", "83.8178, 42.5676, 6.33096, 0.83", "85.6322, 43.4673, 7.11579, 0.55", "86.1959, 43.7101, 7.36145, 0.55", "87.9658, 44.3634, 8.12308, 0.55", "91.1883, 45.2962, 9.43856, 0.55", "93.5788, 45.833, 10.402, 0.55", "95.475, 46.192, 11.2428, 0.55", "97.4096, 46.4878, 12.2045, 0.55", "97.8178, 46.5405, 12.4131, 0.28", "98.6506, 46.6155, 12.8475, 0.83", "102.074, 46.8845, 14.6698, 0.55", "104.477, 47.0577, 15.899, 0.55", "106.433, 47.2651, 16.9356, 0.55", "107.599, 47.3899, 17.5671, 0.83", "108.516, 47.5014, 18.0607, 0.28", "109.348, 47.6008, 18.5002, 0.55", "115.414, 50.2207, 22.2013, 0.55", "122.28, 51.4169, 25.1758, 0.55", "128.924, 53.5503, 28.1261, 0.55", "134.667, 55.1532, 32.8031, 0.55", "140.045, 55.8816, 38.0857, 0.55", "146.501, 55.0021, 41.9169, 0.55", "153.174, 53.0272, 44.827, 0.55", "160.395, 52.1974, 46.9212, 0.55", "167.462, 51.4309, 49.5081, 0.55", "174.794, 51.2751, 51.3942, 0.55", "181.875, 51.7562, 54.0446, 0.55", "188.597, 51.1519, 57.4599, 0.55", "195.187, 52.0274, 61.0938, 0.55", "201.141, 54.2094, 65.2404, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.32985, -25.1795, 7.19423, 1.38", "0.983145, -28.5511, 5.38223, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.32985, -25.1795, 7.19423, 0.55", "-2.72738, -26.6907, 7.3845, 0.55", "-4.28604, -28.6405, 7.59493, 0.55", "-5.48646, -29.9225, 7.77247, 0.55", "-6.51637, -30.9925, 7.76794, 0.55", "-8.78213, -33.2014, 7.55504, 0.55", "-10.3726, -34.6723, 7.36407, 0.55", "-11.7933, -35.9913, 7.14346, 0.55", "-15.4341, -39.192, 6.58053, 0.55", "-19.7977, -42.8898, 5.93759, 0.55", "-23.1805, -45.6863, 5.38427, 0.55", "-25.3457, -47.5256, 5.0013, 0.55", "-27.8341, -49.7383, 4.56865, 0.55", "-31.0048, -52.9336, 4.05752, 0.55", "-32.8756, -55.2212, 3.79375, 0.55", "-35.1842, -58.5329, 3.65509, 0.55", "-37.0403, -61.653, 3.61058, 0.55", "-38.9503, -65.5691, 3.5925, 0.55", "-40.7886, -70.1891, 3.64218, 0.55", "-41.8243, -73.7407, 3.7256, 0.55", "-42.2016, -75.5156, 3.87168, 0.55", "-42.8034, -79.7019, 4.4181, 0.55", "-43.2825, -83.6235, 5.0258, 0.55", "-43.522, -87.5872, 5.91231, 0.55", "-43.6684, -89.8607, 6.5502, 0.55", "-44.046, -96.8941, 8.78051, 0.55", "-44.0762, -97.4118, 8.95441, 0.55", "-44.1908, -100.586, 10.0913, 0.55", "-44.6487, -106.25, 12.2921, 0.55", "-44.8269, -108.142, 12.9146, 0.55", "-45.2419, -111.093, 13.379, 0.55", "-45.3979, -112.189, 13.2913, 0.55", "-45.8435, -115.904, 12.2619, 0.55", "-46.0573, -118.315, 11.0603, 0.55", "-46.3862, -122.155, 8.33765, 0.55", "-46.6391, -126.862, 4.61298, 0.28", "-46.7022, -128.025, 3.52982, 0.55", "-46.811, -129.788, 1.72856, 0.28", "-46.8317, -130.054, 1.44303, 0.55", "-46.9387, -131.508, 0.00766873, 0.28", "-46.9955, -132.001, -0.359625, 0.55", "-47.2896, -134.562, -1.75638, 0.28", "-47.4227, -135.431, -2.21626, 0.55", "-47.8224, -137.946, -3.39587, 0.28", "-47.9443, -138.737, -3.76467, 0.55", "-48.3822, -141.468, -4.98892, 0.28", "-48.5777, -142.725, -5.55946, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.06896, -74.2176, 59.1438, 0.55", "-10.7653, -79.6181, 64.3235, 0.55", "-14.2895, -84.3783, 69.6641, 0.55", "-17.5547, -89.6412, 74.6621, 0.55", "-20.9507, -94.9402, 79.5313, 0.55", "-23.4398, -101.074, 83.8902, 0.55", "-25.8813, -106.949, 88.6345, 0.55", "-27.2905, -114.005, 91.8642, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.06896, -74.2176, 59.1438, 0.55", "-6.23081, -85.6984, 69.1134, 0.55", "-4.73969, -98.7981, 76.7783, 0.55", "-5.62953, -111.537, 85.1015, 0.55", "-7.89287, -124.738, 92.3096, 0.55", "-9.49193, -138.013, 99.5669, 0.55", "-10.6074, -150.838, 107.72, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-49.8206, 40.5335, -13.7092, 0.83", "-49.4158, 42.222, -15.475, 0.83", "-48.5624, 46.2904, -19.4184, 0.55", "-48.1999, 48.0439, -20.9706, 0.83", "-47.8119, 49.919, -22.5002, 0.55", "-47.428, 51.8455, -23.7951, 0.55", "-47.2341, 52.8126, -24.3183, 0.28", "-47.1548, 53.45, -24.5025, 0.55", "-46.8479, 55.5766, -24.6507, 0.28", "-46.696, 56.487, -24.6664, 0.55", "-46.2135, 59.6485, -24.5913, 0.28", "-45.9008, 62.1497, -24.4478, 0.55", "-45.6078, 66.0451, -24.107, 0.28", "-45.4754, 69.4623, -23.7447, 0.28", "-45.5156, 71.3687, -23.508, 0.55", "-45.7051, 73.6215, -23.2313, 0.28", "-45.8686, 74.6923, -23.0864, 0.55", "-46.3893, 77.2045, -22.8686, 0.28", "-46.847, 78.8734, -22.8185, 0.28", "-47.3302, 80.511, -22.8226, 0.28", "-47.5513, 81.3784, -22.827, 0.55", "-48.2484, 84.9005, -22.9233, 0.28", "-48.9288, 89.0825, -23.1112, 0.55", "-49.1419, 90.5284, -23.1811, 0.55", "-49.3807, 91.9759, -23.2199, 0.55", "-50.0518, 95.0412, -23.3605, 0.55", "-50.623, 97.045, -23.5029, 0.28", "-50.9291, 97.7975, -23.5709, 0.55", "-51.9085, 99.8239, -23.7157, 0.28", "-53.039, 101.976, -23.9634, 0.55", "-54.9597, 105.05, -24.4589, 0.28", "-55.9057, 106.323, -24.7156, 0.28", "-57.4537, 108.078, -25.2723, 0.55", "-59.1923, 109.898, -25.962, 0.28", "-59.5106, 110.18, -26.0876, 0.55", "-60.6619, 111.071, -26.5345, 0.28", "-64.6411, 113.902, -28.002, 0.55", "-70.1797, 117.356, -30.2591, 0.28", "-71.2025, 117.93, -30.7389, 0.55", "-74.0115, 119.399, -32.1052, 0.28", "-75.1903, 120.0, -32.7116, 0.28", "-76.214, 120.497, -33.2888, 0.55", "-79.2111, 121.596, -35.2163, 0.28", "-81.3346, 122.156, -36.4939, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-49.8206, 40.5335, -13.7092, 0.55", "-50.0123, 41.7538, -13.8844, 0.55", "-50.1449, 42.4747, -13.9186, 0.28", "-50.3466, 42.989, -13.814, 0.55", "-50.8096, 44.1702, -13.5739, 0.28", "-51.1348, 44.9999, -13.4052, 0.55", "-51.7343, 46.5294, -13.0942, 0.28", "-52.1424, 47.3488, -12.7808, 0.55", "-53.72, 49.2915, -11.3235, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-168.982, -54.2148, -32.5862, 0.55", "-172.736, -58.3025, -35.5539, 0.55", "-175.485, -62.7638, -39.0036, 0.55", "-177.676, -66.5035, -43.5607, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-168.982, -54.2148, -32.5862, 0.55", "-174.406, -59.9535, -36.8801, 0.55", "-178.825, -65.8249, -42.05, 0.55", "-182.869, -71.8419, -47.3497, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-191.942, 15.9871, 68.4715, 0.55", "-202.485, 15.6121, 75.3487, 0.55", "-213.553, 16.9239, 81.199, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-191.942, 15.9871, 68.4715, 0.55", "-201.533, 14.818, 71.3875, 0.55", "-211.065, 15.2305, 74.6882, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "68.9425, -24.8711, -128.945, 0.28", "73.6925, -25.4165, -143.07, 0.28", "74.1707, -25.5678, -144.369, 0.55", "74.9779, -25.8232, -146.563, 0.28", "75.6577, -26.0383, -148.409, 0.28", "76.5575, -26.323, -150.854, 0.55", "77.7438, -26.6984, -154.077, 0.55", "79.5575, -28.3469, -156.405, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "68.9425, -24.8711, -128.945, 0.55", "69.2122, -25.4917, -130.947, 0.55", "69.2224, -25.7378, -131.822, 0.28", "69.185, -26.1307, -133.332, 0.55", "69.1027, -26.9961, -136.657, 0.28", "69.0457, -27.5958, -138.962, 0.55", "68.9491, -28.612, -142.867, 0.28", "68.7395, -29.6849, -147.862, 0.28", "68.5786, -30.1413, -150.176, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "141.455, 1.70373, -5.68722, 0.28", "143.221, 0.347372, -4.05018, 0.28", "145.427, -1.34449, -1.67085, 0.28", "146.813, -2.41135, -0.0582623, 0.55", "147.639, -2.96148, 0.884746, 0.28", "148.077, -3.25601, 1.39712, 0.28", "150.256, -4.73004, 3.88738, 0.55", "150.745, -5.01406, 4.51742, 0.28", "151.89, -5.73336, 6.2708, 0.55", "152.874, -6.39207, 7.73899, 0.28", "153.737, -6.92735, 8.91627, 0.55", "154.76, -7.61511, 10.2429, 0.55", "156.43, -8.84592, 12.0944, 0.55", "156.835, -9.15913, 12.5302, 0.55", "158.293, -10.3517, 14.1323, 0.28", "158.862, -10.8557, 14.7646, 0.55", "159.654, -11.4888, 15.5735, 0.28", "160.781, -12.4232, 16.6587, 0.55", "162.691, -14.0502, 18.0611, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "141.455, 1.70373, -5.68722, 0.55", "138.57, 1.38992, -6.09348, 0.55", "136.226, 1.13507, -6.4234, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.983145, -28.5511, 5.38223, 0.83", "1.07145, -28.8393, 5.3039, 0.83", "2.26119, -31.4265, 4.59596, 0.83", "3.24176, -33.6872, 3.8402, 0.55", "4.02404, -35.4906, 3.23726, 0.55", "5.68682, -39.324, 1.9557, 0.83", "7.70364, -43.9736, 0.401256, 0.55", "8.83681, -46.4142, -0.395559, 0.83", "10.9673, -50.3257, -1.62606, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.983145, -28.5511, 5.38223, 0.55", "-0.958269, -29.2677, 3.40579, 0.55", "-3.04214, -30.0369, 1.28433, 0.55", "-5.50217, -30.945, -1.22008, 0.55", "-8.48944, -32.0478, -4.26124, 0.55", "-10.1846, -32.6735, -5.987, 0.55", "-10.5252, -32.7992, -6.33368, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.6074, -150.838, 107.72, 0.55", "-10.2912, -159.348, 113.773, 0.55", "-8.64718, -168.428, 118.629, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.6074, -150.838, 107.72, 0.55", "-11.5137, -159.136, 112.562, 0.55", "-12.6581, -167.154, 117.828, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-53.72, 49.2915, -11.3235, 0.28", "-55.8473, 50.506, -9.53534, 0.28", "-56.6688, 50.9443, -8.7723, 0.55", "-59.0356, 52.2046, -6.51151, 0.28", "-60.188, 52.8569, -5.49972, 0.55", "-63.3081, 54.6474, -2.86765, 0.28", "-66.4792, 56.4671, -0.192496, 0.55", "-71.7123, 59.2279, 4.2209, 0.28", "-72.8274, 59.8234, 5.16356, 0.55", "-75.2764, 61.285, 7.19059, 0.28", "-76.2372, 61.9063, 7.99916, 0.55", "-86.2517, 65.3922, 14.0446, 0.55", "-96.6088, 70.7309, 17.554, 0.55", "-106.118, 76.0804, 22.9273, 0.55", "-114.176, 82.9923, 28.7609, 0.55", "-123.236, 89.5727, 33.4215, 0.55", "-133.341, 94.0481, 38.5551, 0.55", "-142.966, 97.2762, 45.3388, 0.55", "-151.734, 99.0322, 53.6874, 0.55", "-160.512, 101.537, 61.8146, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.72, 49.2915, -11.3235, 0.55", "-56.6448, 48.0157, -10.7479, 0.55", "-58.1603, 47.3046, -10.4582, 0.28", "-59.288, 46.7753, -10.2425, 0.55", "-60.228, 46.3342, -10.0628, 0.28", "-60.8864, 46.0253, -9.93695, 0.55", "-62.7018, 45.1734, -9.58984, 0.28", "-63.8784, 44.5298, -9.52169, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-177.676, -66.5035, -43.5607, 0.55", "-181.701, -74.4051, -47.3345, 0.55", "-185.494, -82.801, -50.1347, 0.55", "-188.615, -90.7213, -54.6314, 0.55", "-192.674, -98.8611, -57.8104, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-177.676, -66.5035, -43.5607, 0.55", "-184.123, -67.8063, -53.4734, 0.55", "-190.187, -67.1932, -63.7302, 0.55", "-197.039, -68.3996, -73.3871, 0.55", "-206.119, -68.6009, -81.1404, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-182.869, -71.8419, -47.3497, 0.55", "-188.149, -72.771, -55.1718, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-182.869, -71.8419, -47.3497, 0.55", "-187.656, -81.7212, -48.464, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "79.5575, -28.3469, -156.405, 0.28", "81.7203, -29.3401, -158.657, 0.28", "82.725, -29.8014, -159.702, 0.55", "84.6409, -30.6812, -161.697, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "79.5575, -28.3469, -156.405, 0.55", "78.8433, -28.8836, -157.806, 0.55", "77.4148, -29.9573, -160.608, 0.28", "76.9494, -30.307, -161.521, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "68.5786, -30.1413, -150.176, 0.28", "68.6192, -31.9038, -154.658, 0.28", "68.6393, -32.7765, -156.877, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "68.5786, -30.1413, -150.176, 0.55", "66.2872, -31.2401, -149.021, 0.55", "59.8978, -34.3041, -145.802, 0.28", "58.38, -35.032, -145.037, 0.55", "54.2278, -37.0232, -142.945, 0.28", "51.5514, -38.3066, -141.596, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.9673, -50.3257, -1.62606, 0.83", "10.9738, -50.6414, -1.69389, 0.83", "11.1381, -54.7837, -2.47248, 0.83", "11.0124, -57.8844, -2.81722, 0.83", "10.7169, -60.8875, -2.80547, 0.83", "10.2189, -64.8971, -2.46327, 0.83", "9.53784, -69.5206, -1.87847, 0.83", "8.83485, -74.7047, -0.953523, 0.83", "8.18353, -79.7576, 0.179935, 0.83", "6.95773, -85.9228, 1.48059, 0.83", "6.21559, -88.7326, 1.9357, 0.83", "5.63156, -90.8353, 2.14253, 0.83", "4.41154, -94.8569, 2.46304, 0.83", "3.37983, -98.4501, 2.53285, 0.83", "1.49696, -106.078, 1.73815, 0.83", "0.444996, -110.213, 0.730327, 0.83", "-0.564428, -114.001, -0.490287, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.9673, -50.3257, -1.62606, 0.55", "10.2914, -51.6019, -1.41835, 0.55", "9.80712, -52.5295, -1.19212, 0.55", "9.5308, -53.1259, -0.990681, 0.55", "9.16958, -54.0657, -0.59531, 0.55", "8.53742, -55.9344, 0.29548, 0.55", "8.09125, -57.353, 1.13061, 0.55", "7.76907, -58.4941, 1.9222, 0.55", "7.43859, -59.6471, 2.81185, 0.55", "7.17062, -60.6043, 3.6022, 0.28", "6.97269, -61.3893, 4.3662, 0.55", "6.63608, -62.8215, 5.96681, 0.55", "6.40855, -63.6987, 7.05635, 0.55", "6.27427, -64.1895, 7.66334, 0.55", "6.07805, -64.7652, 8.35711, 0.83", "5.44832, -66.4675, 10.3033, 0.28", "5.23608, -67.0304, 10.9316, 0.55", "4.8755, -68.0482, 12.0233, 0.28", "4.77117, -68.3626, 12.3829, 0.55", "4.56359, -69.1039, 13.2008, 0.28", "4.43957, -69.5247, 13.6339, 0.55", "3.84557, -70.8757, 14.695, 0.55", "3.58735, -74.6353, 18.7484, 0.55", "3.65998, -78.2465, 22.9499, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.5252, -32.7992, -6.33368, 0.55", "-13.6951, -33.5516, -8.12721, 0.55", "-14.6191, -33.7167, -8.61873, 0.55", "-16.9211, -34.1373, -9.78415, 0.55", "-21.9104, -34.9509, -12.1612, 0.28", "-22.6426, -35.0613, -12.4775, 0.55", "-25.6734, -35.598, -13.7064, 0.55", "-29.7359, -36.3611, -15.0719, 0.55", "-31.2804, -36.6158, -15.5615, 0.28", "-32.6134, -36.7688, -15.9234, 0.28", "-34.8163, -37.0137, -16.2901, 0.55", "-37.5256, -37.1986, -16.8142, 0.28", "-40.0371, -37.1861, -17.3331, 0.55", "-41.9656, -37.0449, -17.695, 0.55", "-43.3014, -36.8514, -17.9729, 0.55", "-47.2515, -36.1271, -18.8765, 0.55", "-51.3831, -35.1358, -19.748, 0.55", "-53.0772, -34.6505, -20.0682, 0.28", "-54.695, -34.209, -20.3983, 0.55", "-57.9751, -33.493, -21.0514, 0.28", "-59.0771, -33.2794, -21.2636, 0.83", "-61.1, -32.87, -21.543, 0.28", "-62.5121, -32.6823, -21.5908, 0.55", "-64.5537, -32.4758, -21.6284, 0.28", "-65.3593, -32.3864, -21.6195, 0.55", "-66.8311, -32.2517, -21.5342, 0.55", "-69.0238, -31.8535, -21.3174, 0.55", "-70.4298, -31.5186, -21.0984, 0.28", "-71.5312, -31.125, -20.8313, 0.55", "-72.8254, -30.5079, -20.5126, 0.28", "-73.0401, -30.3895, -20.4659, 0.55", "-75.1308, -29.2264, -20.3516, 0.28", "-76.6965, -28.3424, -20.4094, 0.55", "-78.8412, -27.0355, -20.7219, 0.83", "-80.6625, -25.9106, -21.1411, 0.28", "-81.1456, -25.6195, -21.2868, 0.55", "-84.9078, -23.4167, -22.5693, 0.28", "-85.5833, -23.0355, -22.8445, 0.55", "-87.6038, -21.7983, -23.7453, 0.28", "-88.1263, -21.4797, -23.9808, 0.55", "-89.4445, -20.6578, -24.5154, 0.28", "-90.3633, -20.0711, -24.8485, 0.55", "-92.3376, -18.782, -25.3514, 0.28", "-93.5018, -18.0883, -25.6171, 0.55", "-95.9584, -16.747, -26.0827, 0.28", "-96.689, -16.3822, -26.2136, 0.55", "-97.8273, -15.888, -26.3883, 0.28", "-98.7789, -15.4752, -26.4971, 0.55", "-100.723, -14.6496, -26.6237, 0.28", "-101.304, -14.414, -26.646, 0.55", "-105.556, -12.6041, -26.6329, 0.28", "-107.003, -11.8847, -26.5086, 0.55", "-109.525, -10.4998, -26.1313, 0.28", "-110.647, -9.83582, -25.9265, 0.55", "-113.172, -8.34356, -25.3202, 0.28", "-114.086, -7.83964, -25.0614, 0.55", "-117.348, -6.32731, -23.9699, 0.28", "-118.712, -5.87003, -23.5117, 0.55", "-120.67, -5.54159, -22.8529, 0.55", "-121.867, -5.41881, -22.4238, 0.55", "-124.238, -5.24895, -21.3701, 0.28", "-126.511, -5.11958, -20.1886, 0.28", "-128.38, -5.00952, -19.1477, 0.55", "-130.536, -4.68377, -17.6071, 0.28", "-131.52, -4.38336, -16.6819, 0.55", "-133.696, -3.22072, -14.1844, 0.28", "-134.617, -2.35396, -12.5541, 0.55", "-135.088, -1.65783, -11.2996, 0.28", "-135.465, -0.895369, -9.65276, 0.55", "-135.833, 0.0955376, -7.44076, 0.28", "-135.98, 0.440917, -6.60825, 0.55", "-136.977, 1.97748, -2.59476, 0.28", "-137.324, 2.4566, -1.251, 0.55", "-138.121, 3.49799, 1.99005, 0.28", "-138.556, 4.04796, 3.74979, 0.55", "-138.916, 4.4983, 5.19496, 0.55", "-139.369, 5.02926, 6.89404, 0.28", "-139.676, 5.30696, 7.68883, 0.55", "-140.788, 6.32318, 10.2446, 0.28", "-141.343, 6.98976, 11.6083, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.5252, -32.7992, -6.33368, 0.55", "-10.8478, -32.7565, -7.40173, 0.55", "-11.1377, -32.596, -8.46835, 0.55", "-11.4275, -32.3036, -9.80064, 0.55", "-11.6133, -31.9803, -10.8818, 0.55", "-12.2696, -29.153, -17.9186, 0.55", "-12.4287, -28.3458, -19.4835, 0.55", "-12.7022, -26.9928, -21.7763, 0.55", "-12.9034, -25.9826, -23.3923, 0.55", "-13.0618, -24.9114, -24.9472, 0.28", "-13.1849, -23.1364, -27.3004, 0.55", "-13.1698, -20.3961, -30.7528, 0.28", "-13.2455, -20.2132, -31.0811, 0.55", "-14.332, -19.4534, -33.198, 0.28", "-15.3162, -19.0598, -34.5195, 0.55", "-16.5234, -18.7727, -35.8749, 0.55", "-18.7308, -18.4212, -38.3089, 0.55", "-23.0499, -17.773, -43.1046, 0.55", "-25.8927, -17.3723, -46.3824, 0.55", "-26.8433, -17.2425, -47.5412, 0.55", "-32.9063, -16.2894, -55.2865, 0.55", "-34.4572, -15.9825, -57.444, 0.55", "-35.2351, -15.799, -58.7185, 0.55", "-36.7867, -15.4251, -61.8589, 0.55", "-40.0681, -14.8902, -69.6787, 0.55", "-40.8621, -14.8257, -71.8375, 0.28", "-41.2217, -14.836, -73.1097, 0.55", "-41.7197, -14.9222, -75.018, 0.28", "-41.8665, -15.0278, -75.8298, 0.55", "-41.7087, -15.6541, -78.3435, 0.28", "-40.7271, -16.7746, -79.876, 0.55", "-40.0872, -17.6007, -80.7722, 0.28", "-39.413, -18.5441, -81.5413, 0.55", "-38.7671, -19.5979, -82.1956, 0.28", "-38.4985, -20.1451, -82.5004, 0.55", "-37.8236, -21.5958, -83.1824, 0.28", "-37.7015, -22.0239, -83.4129, 0.55", "-37.1213, -24.4617, -84.8307, 0.28", "-36.947, -25.5663, -85.6238, 0.55", "-36.7286, -27.8783, -87.597, 0.28", "-36.7005, -28.7117, -88.4299, 0.55", "-36.6651, -31.4088, -91.396, 0.28", "-36.6779, -32.0599, -92.1441, 0.55", "-36.834, -34.1194, -94.5246, 0.28", "-36.8611, -34.6115, -95.0263, 0.55", "-36.9587, -35.9202, -96.3047, 0.28", "-37.074, -36.6681, -97.1129, 0.55", "-37.2179, -37.3902, -97.9774, 0.55", "-37.4946, -38.8325, -99.6939, 0.28", "-37.6887, -39.6969, -100.918, 0.55", "-38.2631, -41.7135, -104.801, 0.28", "-38.5071, -42.3213, -106.33, 0.55", "-38.6544, -42.6934, -107.379, 0.28", "-38.7833, -43.0155, -108.437, 0.55", "-39.1128, -43.8689, -111.681, 0.28", "-39.3159, -44.5444, -114.12, 0.55", "-39.4525, -45.9271, -118.198, 0.28", "-39.49, -46.3552, -119.479, 0.55", "-39.4093, -47.1388, -121.858, 0.28", "-39.3363, -47.3984, -122.626, 0.55", "-39.0563, -47.8273, -123.778, 0.28", "-38.7416, -48.1895, -124.751, 0.55", "-37.6688, -49.0768, -127.237, 0.28", "-36.3927, -49.9896, -130.051, 0.28", "-35.6601, -50.4005, -131.411, 0.28", "-34.9898, -50.7624, -132.828, 0.55", "-34.0119, -51.197, -134.893, 0.28", "-33.5598, -51.3789, -135.799, 0.83", "-32.3336, -51.8828, -138.059, 0.28", "-31.8501, -52.1178, -139.076, 0.55", "-29.9082, -53.294, -143.685, 0.28", "-29.0899, -53.8889, -146.096, 0.28", "-28.5851, -54.3101, -147.909, 0.55", "-28.3838, -54.5641, -149.026, 0.55", "-28.024, -55.2518, -152.102, 0.28", "-27.778, -55.9902, -155.039, 0.55", "-27.5586, -56.7284, -157.72, 0.28", "-27.452, -57.4136, -160.201, 0.55", "-27.3541, -57.962, -162.245, 0.28", "-27.2051, -58.3244, -163.873, 0.55", "-26.7045, -59.0356, -167.708, 0.28", "-26.3918, -59.4, -169.618, 0.55", "-25.8439, -59.9626, -172.441, 0.28", "-25.3515, -60.3709, -174.721, 0.55", "-24.192, -61.1245, -180.043, 0.28", "-23.8248, -61.313, -182.266, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.64718, -168.428, 118.629, 0.55", "-7.89259, -177.672, 123.219, 0.55", "-5.75946, -187.487, 125.588, 0.55", "-4.45173, -197.043, 129.294, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.64718, -168.428, 118.629, 0.55", "-7.12803, -179.096, 127.678, 0.55", "-8.39509, -188.76, 137.901, 0.55", "-10.7777, -196.261, 149.715, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.6581, -167.154, 117.828, 0.55", "-12.2876, -175.95, 122.887, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.6581, -167.154, 117.828, 0.55", "-13.9126, -174.536, 122.36, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.564428, -114.001, -0.490287, 0.83", "-0.00656523, -117.571, -0.138738, 0.83", "0.569744, -120.603, 0.395741, 0.83", "1.1426, -123.616, 0.92702, 0.83", "1.68663, -126.478, 1.43156, 0.83", "2.52502, -130.888, 2.2091, 0.83", "3.35736, -135.266, 2.98102, 0.83", "4.08575, -138.201, 3.8897, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.564428, -114.001, -0.490287, 0.55", "1.14159, -116.683, -0.251987, 0.55", "2.53343, -118.753, -0.416502, 0.55", "3.53013, -120.269, -0.699919, 0.55", "4.48813, -122.014, -1.31251, 0.83", "5.50353, -123.971, -2.27821, 0.55", "6.49672, -125.885, -3.22279, 0.83", "7.50205, -127.941, -4.46885, 0.55", "8.10991, -129.125, -5.3054, 0.83", "9.98499, -132.926, -8.35787, 0.55", "11.2482, -135.88, -11.0078, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.65998, -78.2465, 22.9499, 0.55", "1.60914, -85.3592, 29.096, 0.55", "-1.37791, -91.4111, 36.0031, 0.55", "-4.64513, -96.5252, 43.5513, 0.55", "-8.39679, -100.453, 51.6052, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.65998, -78.2465, 22.9499, 0.55", "2.1904, -87.5013, 31.7838, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.08575, -138.201, 3.8897, 0.55", "4.09888, -140.788, 4.42778, 0.55", "4.20991, -144.101, 5.19476, 0.55", "4.31513, -147.228, 5.90144, 0.55", "4.36277, -149.447, 6.37074, 0.55", "4.40072, -153.402, 7.14828, 0.55", "4.66684, -164.514, 9.03972, 0.55", "4.84275, -168.284, 9.51337, 0.55", "4.97165, -170.936, 9.71159, 0.55", "5.1341, -173.954, 9.69035, 0.55", "5.21095, -176.272, 9.46488, 0.55", "5.54585, -181.69, 8.70073, 0.55", "5.65266, -185.793, 8.12204, 0.55", "5.80086, -188.496, 7.82013, 0.55", "6.17592, -195.525, 7.40644, 0.55", "6.40688, -200.26, 7.3439, 0.55", "6.7503, -206.386, 7.61206, 0.55", "7.25668, -213.373, 8.45553, 0.55", "7.82071, -218.066, 9.29956, 0.55", "8.22494, -220.848, 9.86935, 0.55", "8.54953, -223.409, 10.3897, 0.55", "9.00847, -226.647, 10.8924, 0.55", "9.99615, -234.418, 11.5775, 0.55", "10.4757, -237.425, 11.7244, 0.55", "10.9278, -240.768, 11.8693, 0.55", "11.5637, -245.783, 12.0628, 0.55", "11.8726, -249.631, 12.2588, 0.55", "11.9491, -253.271, 12.4086, 0.55", "11.8646, -256.732, 12.5607, 0.55", "11.7255, -260.109, 12.7625, 0.55", "11.6403, -262.513, 12.8808, 0.55", "11.5194, -266.438, 12.9339, 0.55", "11.29, -271.127, 12.6327, 0.55", "11.2315, -273.398, 12.3061, 0.55", "11.1959, -275.385, 11.8615, 0.55", "11.2973, -279.131, 10.7812, 0.55", "11.3336, -281.5, 10.0286, 0.55", "11.4175, -284.429, 9.21472, 0.55", "11.4013, -286.49, 8.77715, 0.55", "11.2681, -291.855, 7.86338, 0.55", "11.0785, -295.884, 7.48404, 0.55", "10.7001, -302.143, 7.43206, 0.55", "10.5623, -306.209, 7.78732, 0.55", "10.39, -310.485, 8.30435, 0.28", "10.2802, -312.204, 8.58679, 0.28", "10.0096, -316.399, 9.66117, 0.28", "9.73586, -320.289, 10.9688, 0.28", "9.87575, -325.49, 13.2118, 0.28", "11.5984, -337.109, 15.1841, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "4.08575, -138.201, 3.8897, 0.55", "4.32162, -138.855, 5.36467, 0.55", "4.60833, -140.462, 8.43742, 0.55", "4.75763, -142.01, 11.107, 0.28", "4.84126, -143.758, 13.9875, 0.55", "4.67577, -144.874, 15.7876, 0.28", "4.13066, -146.887, 18.98, 0.55", "3.57051, -147.93, 20.3895, 0.28", "3.28755, -148.313, 20.9203, 0.28", "2.78556, -148.879, 21.8509, 0.55", "1.07137, -150.794, 25.4634, 0.28", "0.396085, -151.554, 26.9976, 0.55", "-1.16374, -153.76, 31.5611, 0.28", "-1.84824, -154.866, 34.0203, 0.28", "-2.53225, -156.267, 37.0514, 0.55", "-3.18066, -158.403, 41.4835, 0.28", "-3.2079, -158.685, 42.0712, 0.55", "-3.15597, -160.05, 44.9233, 0.28", "-3.12398, -160.175, 45.1752, 0.55", "-2.89913, -161.575, 47.3835, 0.28", "-2.85275, -162.326, 48.442, 0.55", "-2.56399, -167.981, 57.2243, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.39679, -100.453, 51.6052, 0.55", "-8.36956, -106.016, 63.6406, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.39679, -100.453, 51.6052, 0.55", "-11.8344, -105.825, 56.8747, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_BP_6687408de7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.07628, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.6566, 8.64652, 2.96378, 0.83 ) }
    dend_43 { pt3dadd( -7.30035, 11.4001, 3.51331, 1.11 ) }
    dend_43 { pt3dadd( -9.44873, 13.0226, 3.79916, 0.83 ) }
    dend_43 { pt3dadd( -11.536, 14.5852, 4.05529, 0.83 ) }
    dend_43 { pt3dadd( -12.7718, 15.4762, 4.19563, 1.11 ) }
    dend_43 { pt3dadd( -16.6417, 18.2606, 4.64545, 1.11 ) }
    dend_43 { pt3dadd( -23.5635, 23.0275, 5.44059, 0.83 ) }
    dend_43 { pt3dadd( -26.0572, 24.6794, 5.70317, 0.83 ) }
    dend_43 { pt3dadd( -28.0319, 25.9486, 5.86626, 0.83 ) }
    dend_43 { pt3dadd( -29.9576, 27.2065, 6.00744, 0.83 ) }
    dend_43 { pt3dadd( -31.5251, 28.2432, 6.08361, 0.55 ) }
    dend_43 { pt3dadd( -32.7034, 28.9452, 6.16092, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.31578, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.94449, 6.23324, -6.32499, 0.55 ) }
    dend_28 { pt3dadd( 8.1126, 6.90144, -7.03249, 0.55 ) }
    dend_28 { pt3dadd( 9.95094, 7.07011, -7.96866, 0.83 ) }
    dend_28 { pt3dadd( 12.8604, 7.24962, -9.70765, 0.55 ) }
    dend_28 { pt3dadd( 14.2649, 7.33627, -10.5471, 1.38 ) }
    dend_28 { pt3dadd( 17.7182, 7.54932, -12.6111, 0.55 ) }
    dend_28 { pt3dadd( 19.189, 7.47718, -13.5959, 0.83 ) }
    dend_28 { pt3dadd( 26.7972, 6.15405, -19.1293, 0.55 ) }
    dend_28 { pt3dadd( 27.5332, 5.97612, -19.738, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.03197, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.691577, -10.8612, 3.46833, 1.11 ) }
    dend_1 { pt3dadd( -0.754075, -16.2376, 5.44516, 1.11 ) }
    dend_1 { pt3dadd( -0.779527, -18.4272, 6.25025, 0.83 ) }
    dend_1 { pt3dadd( -0.813343, -21.3362, 7.31986, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.41203, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.842489, 9.16377, -1.34892, 1.11 ) }
    dend_0 { pt3dadd( 0.902027, 10.7064, -1.33548, 1.11 ) }
    dend_0 { pt3dadd( 0.988567, 13.2232, -1.21964, 1.38 ) }
    dend_0 { pt3dadd( 0.995771, 13.3634, -1.21051, 1.38 ) }
    dend_0 { pt3dadd( 1.19125, 15.0983, -1.07533, 0.83 ) }
    dend_0 { pt3dadd( 1.47018, 16.9331, -0.828889, 0.83 ) }
    dend_0 { pt3dadd( 1.95611, 19.0056, -0.286689, 0.83 ) }
    dend_0 { pt3dadd( 2.23608, 19.792, 0.0219903, 0.83 ) }
    dend_0 { pt3dadd( 2.51471, 20.3618, 0.307406, 1.11 ) }
    dend_0 { pt3dadd( 3.33512, 21.7503, 1.04778, 0.55 ) }
    dend_0 { pt3dadd( 4.2898, 23.2, 1.93167, 0.83 ) }
    dend_0 { pt3dadd( 5.54873, 24.6921, 2.941, 0.55 ) }
    dend_0 { pt3dadd( 6.19379, 25.3123, 3.40093, 0.83 ) }
    dend_0 { pt3dadd( 7.09328, 26.1524, 4.11542, 0.55 ) }
    dend_0 { pt3dadd( 8.20468, 27.2209, 5.07981, 0.55 ) }
    dend_0 { pt3dadd( 9.75208, 28.8285, 6.54893, 0.55 ) }
    dend_0 { pt3dadd( 11.4568, 30.6657, 8.17089, 0.55 ) }
    dend_0 { pt3dadd( 12.5255, 31.858, 9.37704, 0.55 ) }
    dend_0 { pt3dadd( 13.8273, 33.3654, 11.0742, 0.55 ) }
    dend_0 { pt3dadd( 14.0968, 33.6678, 11.4586, 0.83 ) }
    dend_0 { pt3dadd( 14.8061, 34.4669, 12.5415, 0.55 ) }
    dend_0 { pt3dadd( 15.4055, 35.0899, 13.3928, 0.83 ) }
    dend_0 { pt3dadd( 16.7819, 36.7912, 15.4101, 0.55 ) }
    dend_0 { pt3dadd( 17.3063, 37.4125, 16.0028, 0.83 ) }
    dend_0 { pt3dadd( 17.8031, 37.8708, 16.4088, 0.55 ) }
    dend_0 { pt3dadd( 18.2994, 38.2656, 16.7235, 0.83 ) }
    dend_0 { pt3dadd( 19.4051, 39.0002, 17.2997, 0.83 ) }
    dend_0 { pt3dadd( 20.8717, 40.0002, 17.9266, 0.83 ) }
    dend_0 { pt3dadd( 21.7746, 40.6609, 18.2105, 0.55 ) }
    dend_0 { pt3dadd( 22.4625, 41.2323, 18.4309, 0.55 ) }
    dend_0 { pt3dadd( 24.2669, 42.7088, 18.9808, 0.83 ) }
    dend_0 { pt3dadd( 25.4339, 43.6557, 19.2876, 0.55 ) }
    dend_0 { pt3dadd( 27.2082, 45.043, 19.6793, 0.55 ) }
    dend_0 { pt3dadd( 28.8365, 46.2066, 19.9715, 0.55 ) }
    dend_0 { pt3dadd( 30.2944, 47.1926, 20.1928, 0.55 ) }
    dend_0 { pt3dadd( 32.1398, 48.3482, 20.3871, 0.55 ) }
    dend_0 { pt3dadd( 33.2696, 48.9152, 20.4686, 0.55 ) }
    dend_0 { pt3dadd( 34.0434, 49.2344, 20.4308, 0.55 ) }
    dend_0 { pt3dadd( 35.0747, 49.4746, 20.2932, 0.55 ) }
    dend_0 { pt3dadd( 36.6185, 49.5889, 19.9618, 0.55 ) }
    dend_0 { pt3dadd( 37.5828, 49.5415, 19.7181, 0.55 ) }
    dend_0 { pt3dadd( 38.9895, 49.4354, 19.4603, 0.55 ) }
    dend_0 { pt3dadd( 41.6623, 49.3159, 19.208, 0.55 ) }
    dend_0 { pt3dadd( 43.7551, 49.3166, 19.1592, 0.55 ) }
    dend_0 { pt3dadd( 45.9691, 49.4203, 19.24, 0.55 ) }
    dend_0 { pt3dadd( 47.3854, 49.5344, 19.4042, 0.55 ) }
    dend_0 { pt3dadd( 51.0569, 50.1569, 20.0744, 0.55 ) }
    dend_0 { pt3dadd( 53.2239, 50.6896, 20.6359, 0.55 ) }
    dend_0 { pt3dadd( 54.8441, 51.1939, 21.2107, 0.55 ) }
    dend_0 { pt3dadd( 55.8267, 51.6618, 21.5987, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 56.9648, 52.3564, 22.0429, 0.55 ) }
    dend_0 { pt3dadd( 58.8948, 53.7246, 22.6197, 0.55 ) }
    dend_0 { pt3dadd( 59.339, 54.0539, 22.6898, 0.55 ) }
    dend_0 { pt3dadd( 60.6161, 54.9348, 22.8057, 0.55 ) }
    dend_0 { pt3dadd( 61.7891, 55.8724, 22.9077, 0.83 ) }
    dend_0 { pt3dadd( 62.4294, 56.3925, 22.9531, 0.55 ) }
    dend_0 { pt3dadd( 63.3886, 57.2845, 22.9827, 0.83 ) }
    dend_0 { pt3dadd( 68.4039, 62.0485, 24.4834, 0.83 ) }
    dend_0 { pt3dadd( 72.7664, 67.5066, 25.4371, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -32.7034, 28.9452, 6.16092, 0.55 ) }
    dend_55 { pt3dadd( -34.1383, 29.8368, 5.32953, 0.55 ) }
    dend_55 { pt3dadd( -35.6986, 30.8064, 4.42547, 0.55 ) }
    dend_55 { pt3dadd( -37.5815, 31.9764, 3.33447, 0.55 ) }
    dend_55 { pt3dadd( -39.1363, 32.9425, 2.43361, 0.83 ) }
    dend_55 { pt3dadd( -40.4393, 33.7521, 1.67868, 0.55 ) }
    dend_55 { pt3dadd( -42.8577, 35.2549, 0.27743, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.7034, 28.9452, 6.16092, 0.55 ) }
    dend_44 { pt3dadd( -35.6045, 29.4808, 5.79274, 0.55 ) }
    dend_44 { pt3dadd( -38.6948, 29.9508, 5.70788, 0.55 ) }
    dend_44 { pt3dadd( -42.1999, 30.4765, 5.69728, 0.55 ) }
    dend_44 { pt3dadd( -47.2809, 31.1758, 6.14835, 0.55 ) }
    dend_44 { pt3dadd( -51.5358, 31.6348, 6.82691, 0.55 ) }
    dend_44 { pt3dadd( -56.0003, 32.0455, 7.72867, 0.55 ) }
    dend_44 { pt3dadd( -60.3206, 32.1488, 9.06245, 0.55 ) }
    dend_44 { pt3dadd( -64.0435, 31.8776, 10.5662, 0.55 ) }
    dend_44 { pt3dadd( -68.6875, 31.2135, 12.934, 0.55 ) }
    dend_44 { pt3dadd( -70.7095, 30.7751, 14.2437, 0.55 ) }
    dend_44 { pt3dadd( -72.8945, 30.2771, 15.7525, 0.55 ) }
    dend_44 { pt3dadd( -76.7473, 29.1174, 18.2338, 0.55 ) }
    dend_44 { pt3dadd( -78.7946, 28.5122, 19.2306, 0.55 ) }
    dend_44 { pt3dadd( -80.939, 27.8144, 20.2609, 0.55 ) }
    dend_44 { pt3dadd( -83.4867, 27.0207, 21.2273, 0.55 ) }
    dend_44 { pt3dadd( -86.2547, 26.2159, 22.2022, 0.55 ) }
    dend_44 { pt3dadd( -90.2043, 25.0593, 23.5068, 0.55 ) }
    dend_44 { pt3dadd( -95.4748, 23.868, 24.7792, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.5332, 5.97612, -19.738, 0.55 ) }
    dend_34 { pt3dadd( 33.182, 6.11807, -21.0998, 0.55 ) }
    dend_34 { pt3dadd( 36.3716, 6.24752, -22.363, 0.55 ) }
    dend_34 { pt3dadd( 39.4738, 6.27927, -23.7091, 0.55 ) }
    dend_34 { pt3dadd( 41.566, 6.22981, -24.6638, 0.55 ) }
    dend_34 { pt3dadd( 44.6009, 6.08651, -26.0677, 0.55 ) }
    dend_34 { pt3dadd( 50.8536, 5.777, -29.2142, 0.55 ) }
    dend_34 { pt3dadd( 57.9248, 5.60956, -33.2441, 0.55 ) }
    dend_34 { pt3dadd( 61.2786, 5.45552, -35.5132, 0.55 ) }
    dend_34 { pt3dadd( 63.0579, 5.39087, -36.8609, 0.55 ) }
    dend_34 { pt3dadd( 65.0108, 5.36698, -38.4108, 0.55 ) }
    dend_34 { pt3dadd( 68.4626, 5.23109, -41.2069, 0.55 ) }
    dend_34 { pt3dadd( 69.6898, 5.13604, -42.2963, 0.55 ) }
    dend_34 { pt3dadd( 74.9249, 5.05432, -47.2477, 0.55 ) }
    dend_34 { pt3dadd( 78.6471, 5.18733, -50.9965, 0.55 ) }
    dend_34 { pt3dadd( 80.8038, 5.331, -53.1937, 0.55 ) }
    dend_34 { pt3dadd( 82.9482, 5.45637, -55.3922, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.5332, 5.97612, -19.738, 0.83 ) }
    dend_29 { pt3dadd( 29.3125, 7.36208, -19.8998, 0.83 ) }
    dend_29 { pt3dadd( 30.3322, 8.14561, -20.0424, 0.55 ) }
    dend_29 { pt3dadd( 31.8355, 9.31244, -20.3961, 0.83 ) }
    dend_29 { pt3dadd( 32.8444, 10.1189, -20.6712, 0.55 ) }
    dend_29 { pt3dadd( 34.2298, 11.2736, -21.0348, 0.83 ) }
    dend_29 { pt3dadd( 35.888, 12.7064, -21.4106, 0.55 ) }
    dend_29 { pt3dadd( 36.7288, 13.3681, -21.5516, 0.55 ) }
    dend_29 { pt3dadd( 38.6917, 14.6379, -21.6835, 0.83 ) }
    dend_29 { pt3dadd( 40.4898, 15.607, -21.52, 0.55 ) }
    dend_29 { pt3dadd( 41.4912, 16.1536, -21.3249, 0.83 ) }
    dend_29 { pt3dadd( 42.9809, 17.0335, -20.8696, 0.55 ) }
    dend_29 { pt3dadd( 45.1009, 18.382, -19.9284, 0.55 ) }
    dend_29 { pt3dadd( 48.0569, 20.121, -18.432, 0.55 ) }
    dend_29 { pt3dadd( 50.8784, 21.706, -16.7776, 0.55 ) }
    dend_29 { pt3dadd( 53.1148, 22.9435, -15.4197, 0.55 ) }
    dend_29 { pt3dadd( 56.7982, 25.0048, -13.163, 0.55 ) }
    dend_29 { pt3dadd( 59.4795, 26.6033, -11.461, 0.55 ) }
    dend_29 { pt3dadd( 61.0765, 27.7204, -10.3917, 0.55 ) }
    dend_29 { pt3dadd( 63.9743, 30.1022, -8.44414, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.813343, -21.3362, 7.31986, 0.83 ) }
    dend_11 { pt3dadd( -0.955626, -22.3949, 7.28525, 0.83 ) }
    dend_11 { pt3dadd( -1.09425, -23.4264, 7.25153, 0.83 ) }
    dend_11 { pt3dadd( -1.24903, -24.5781, 7.21389, 0.83 ) }
    dend_11 { pt3dadd( -1.32985, -25.1795, 7.19423, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.813343, -21.3362, 7.31986, 0.55 ) }
    dend_2 { pt3dadd( -0.177209, -22.9614, 8.41981, 0.55 ) }
    dend_2 { pt3dadd( 0.406016, -24.9474, 9.86867, 0.55 ) }
    dend_2 { pt3dadd( 0.772987, -27.5417, 11.9015, 0.55 ) }
    dend_2 { pt3dadd( 0.845351, -28.5486, 12.7246, 0.83 ) }
    dend_2 { pt3dadd( 0.809511, -31.1142, 15.1426, 0.55 ) }
    dend_2 { pt3dadd( 0.681332, -32.4367, 16.425, 0.55 ) }
    dend_2 { pt3dadd( 0.383854, -35.0077, 19.0349, 0.83 ) }
    dend_2 { pt3dadd( 0.0583165, -36.9148, 21.1056, 0.55 ) }
    dend_2 { pt3dadd( -0.355989, -38.4846, 22.7987, 0.55 ) }
    dend_2 { pt3dadd( -1.21362, -41.456, 25.9544, 0.55 ) }
    dend_2 { pt3dadd( -1.89666, -43.8243, 28.4408, 0.55 ) }
    dend_2 { pt3dadd( -2.40254, -45.7238, 30.4588, 0.55 ) }
    dend_2 { pt3dadd( -2.82947, -47.7429, 32.5275, 0.28 ) }
    dend_2 { pt3dadd( -2.9367, -48.5854, 33.3508, 0.55 ) }
    dend_2 { pt3dadd( -3.09944, -50.1421, 34.7776, 0.28 ) }
    dend_2 { pt3dadd( -3.04029, -52.5783, 36.5928, 0.55 ) }
    dend_2 { pt3dadd( -4.81449, -60.6404, 43.2219, 0.55 ) }
    dend_2 { pt3dadd( -6.74329, -68.086, 50.5315, 0.55 ) }
    dend_2 { pt3dadd( -8.06896, -74.2176, 59.1438, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -42.8577, 35.2549, 0.27743, 0.55 ) }
    dend_61 { pt3dadd( -45.2827, 35.4874, 1.59075, 0.55 ) }
    dend_61 { pt3dadd( -46.3009, 35.5306, 2.27046, 0.83 ) }
    dend_61 { pt3dadd( -47.4891, 35.5223, 3.22594, 0.55 ) }
    dend_61 { pt3dadd( -48.397, 35.5154, 4.04104, 0.83 ) }
    dend_61 { pt3dadd( -50.7766, 35.5812, 6.15568, 0.55 ) }
    dend_61 { pt3dadd( -51.6775, 35.621, 6.96364, 0.28 ) }
    dend_61 { pt3dadd( -53.1776, 35.7036, 8.44031, 0.55 ) }
    dend_61 { pt3dadd( -55.1905, 35.8262, 10.4121, 0.55 ) }
    dend_61 { pt3dadd( -56.7202, 35.9199, 11.8374, 0.55 ) }
    dend_61 { pt3dadd( -58.7647, 36.0448, 13.6748, 0.28 ) }
    dend_61 { pt3dadd( -59.2971, 36.0813, 14.0867, 0.55 ) }
    dend_61 { pt3dadd( -60.3997, 36.1699, 14.8967, 0.28 ) }
    dend_61 { pt3dadd( -61.1496, 36.2495, 15.3753, 0.55 ) }
    dend_61 { pt3dadd( -62.683, 36.4016, 16.2169, 0.28 ) }
    dend_61 { pt3dadd( -63.5839, 36.442, 16.6634, 0.55 ) }
    dend_61 { pt3dadd( -65.1732, 36.3988, 17.4641, 0.28 ) }
    dend_61 { pt3dadd( -66.2413, 36.3629, 17.9639, 0.55 ) }
    dend_61 { pt3dadd( -72.6976, 35.6273, 23.9424, 0.55 ) }
    dend_61 { pt3dadd( -78.5826, 34.0793, 30.3323, 0.55 ) }
    dend_61 { pt3dadd( -84.236, 31.7244, 36.6709, 0.55 ) }
    dend_61 { pt3dadd( -89.8587, 28.39, 42.5575, 0.55 ) }
    dend_61 { pt3dadd( -94.5053, 25.3955, 49.4086, 0.55 ) }
    dend_61 { pt3dadd( -99.8026, 22.7168, 55.9169, 0.55 ) }
    dend_61 { pt3dadd( -105.201, 21.4278, 62.7792, 0.55 ) }
    dend_61 { pt3dadd( -110.573, 19.4628, 69.4918, 0.55 ) }
    dend_61 { pt3dadd( -115.781, 18.0631, 76.4776, 0.55 ) }
    dend_61 { pt3dadd( -120.584, 16.536, 83.7205, 0.55 ) }
    dend_61 { pt3dadd( -124.527, 14.0391, 91.1943, 0.55 ) }
    dend_61 { pt3dadd( -128.551, 12.3322, 98.8575, 0.55 ) }
    dend_61 { pt3dadd( -132.689, 9.77821, 106.204, 0.55 ) }
    dend_61 { pt3dadd( -135.808, 6.85603, 113.901, 0.55 ) }
    dend_61 { pt3dadd( -137.465, 4.50106, 122.231, 0.55 ) }
    dend_61 { pt3dadd( -139.07, 0.590877, 129.931, 0.55 ) }
    dend_61 { pt3dadd( -139.417, -3.48344, 137.7, 0.55 ) }
    dend_61 { pt3dadd( -140.232, -7.20308, 145.62, 0.55 ) }
    dend_61 { pt3dadd( -141.985, -10.3057, 153.667, 0.55 ) }
    dend_61 { pt3dadd( -145.553, -12.0645, 161.54, 0.55 ) }
    dend_61 { pt3dadd( -148.365, -14.775, 169.435, 0.55 ) }
    dend_61 { pt3dadd( -149.537, -16.0855, 178.084, 0.55 ) }
    dend_61 { pt3dadd( -152.108, -16.755, 186.505, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -42.8577, 35.2549, 0.27743, 0.55 ) }
    dend_56 { pt3dadd( -44.1859, 35.8009, -1.34532, 0.55 ) }
    dend_56 { pt3dadd( -45.2009, 36.4001, -3.15036, 0.55 ) }
    dend_56 { pt3dadd( -46.1448, 37.1501, -5.06327, 0.55 ) }
    dend_56 { pt3dadd( -46.7359, 37.6198, -6.26112, 0.55 ) }
    dend_56 { pt3dadd( -47.8141, 38.4765, -8.44612, 0.83 ) }
    dend_56 { pt3dadd( -48.603, 39.1033, -10.0447, 0.55 ) }
    dend_56 { pt3dadd( -49.4995, 39.9516, -12.3898, 0.83 ) }
    dend_56 { pt3dadd( -49.8206, 40.5335, -13.7092, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -95.4748, 23.868, 24.7792, 0.28 ) }
    dend_48 { pt3dadd( -96.8694, 21.5988, 23.9591, 0.28 ) }
    dend_48 { pt3dadd( -97.5315, 20.6366, 23.5156, 0.28 ) }
    dend_48 { pt3dadd( -98.393, 19.281, 22.8372, 0.55 ) }
    dend_48 { pt3dadd( -99.1049, 18.0862, 22.2539, 0.28 ) }
    dend_48 { pt3dadd( -100.156, 16.2618, 21.3916, 0.55 ) }
    dend_48 { pt3dadd( -103.091, 10.8825, 18.959, 0.28 ) }
    dend_48 { pt3dadd( -104.046, 9.01478, 17.9462, 0.55 ) }
    dend_48 { pt3dadd( -105.491, 6.15134, 16.2815, 0.28 ) }
    dend_48 { pt3dadd( -106.319, 4.44842, 15.2026, 0.55 ) }
    dend_48 { pt3dadd( -106.891, 3.27888, 14.4278, 0.28 ) }
    dend_48 { pt3dadd( -107.542, 1.93487, 13.5509, 0.55 ) }
    dend_48 { pt3dadd( -109.52, -2.57235, 10.7545, 0.28 ) }
    dend_48 { pt3dadd( -110.139, -3.92827, 9.85466, 0.55 ) }
    dend_48 { pt3dadd( -111.214, -5.96712, 8.23633, 0.28 ) }
    dend_48 { pt3dadd( -112.092, -7.25002, 7.06367, 0.28 ) }
    dend_48 { pt3dadd( -112.878, -8.09541, 6.23434, 0.55 ) }
    dend_48 { pt3dadd( -115.618, -10.4591, 3.95779, 0.28 ) }
    dend_48 { pt3dadd( -116.891, -11.4132, 3.05167, 0.55 ) }
    dend_48 { pt3dadd( -120.002, -13.5581, 0.818664, 0.28 ) }
    dend_48 { pt3dadd( -123.112, -15.4365, -1.23109, 0.28 ) }
    dend_48 { pt3dadd( -126.491, -17.1994, -3.31921, 0.28 ) }
    dend_48 { pt3dadd( -128.038, -17.8526, -4.12821, 0.55 ) }
    dend_48 { pt3dadd( -135.567, -25.7952, -9.99689, 0.55 ) }
    dend_48 { pt3dadd( -144.009, -34.1449, -13.6293, 0.55 ) }
    dend_48 { pt3dadd( -152.212, -41.7775, -19.014, 0.55 ) }
    dend_48 { pt3dadd( -160.572, -48.5062, -25.3392, 0.55 ) }
    dend_48 { pt3dadd( -168.982, -54.2148, -32.5862, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -95.4748, 23.868, 24.7792, 0.55 ) }
    dend_45 { pt3dadd( -96.453, 23.7934, 24.8974, 0.55 ) }
    dend_45 { pt3dadd( -99.2162, 23.5794, 25.5887, 0.55 ) }
    dend_45 { pt3dadd( -100.255, 23.4718, 25.9033, 0.55 ) }
    dend_45 { pt3dadd( -102.7, 23.1462, 26.6796, 0.55 ) }
    dend_45 { pt3dadd( -106.458, 22.6863, 27.6926, 0.55 ) }
    dend_45 { pt3dadd( -108.41, 22.5064, 28.1854, 0.28 ) }
    dend_45 { pt3dadd( -111.447, 22.1633, 28.8917, 0.55 ) }
    dend_45 { pt3dadd( -113.703, 21.865, 29.3345, 0.55 ) }
    dend_45 { pt3dadd( -114.655, 21.7328, 29.5234, 0.28 ) }
    dend_45 { pt3dadd( -120.368, 20.9373, 30.649, 0.55 ) }
    dend_45 { pt3dadd( -123.038, 20.4489, 31.01, 0.28 ) }
    dend_45 { pt3dadd( -126.636, 19.7808, 31.2859, 0.28 ) }
    dend_45 { pt3dadd( -129.736, 19.2527, 31.3428, 0.55 ) }
    dend_45 { pt3dadd( -141.845, 18.8681, 34.2219, 0.55 ) }
    dend_45 { pt3dadd( -153.557, 18.1505, 38.3917, 0.55 ) }
    dend_45 { pt3dadd( -164.617, 16.1713, 43.7465, 0.55 ) }
    dend_45 { pt3dadd( -175.343, 16.2076, 50.0739, 0.55 ) }
    dend_45 { pt3dadd( -184.538, 15.7869, 58.4623, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -191.942, 15.9871, 68.4715, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 82.9482, 5.45637, -55.3922, 0.55 ) }
    dend_42 { pt3dadd( 86.6701, 6.60937, -58.4763, 0.55 ) }
    dend_42 { pt3dadd( 87.8308, 6.9454, -59.5362, 0.55 ) }
    dend_42 { pt3dadd( 89.2741, 7.31582, -60.8577, 0.55 ) }
    dend_42 { pt3dadd( 91.8782, 8.00826, -63.4149, 0.55 ) }
    dend_42 { pt3dadd( 94.5669, 8.64147, -66.1799, 0.55 ) }
    dend_42 { pt3dadd( 95.8598, 8.83904, -67.5252, 0.83 ) }
    dend_42 { pt3dadd( 96.9019, 8.95163, -68.735, 0.55 ) }
    dend_42 { pt3dadd( 97.6609, 8.99315, -69.7404, 0.83 ) }
    dend_42 { pt3dadd( 99.4192, 8.86344, -72.3724, 0.55 ) }
    dend_42 { pt3dadd( 100.833, 8.61219, -74.59, 0.55 ) }
    dend_42 { pt3dadd( 102.461, 8.28516, -77.0505, 0.55 ) }
    dend_42 { pt3dadd( 104.284, 7.99102, -79.8177, 0.55 ) }
    dend_42 { pt3dadd( 105.498, 7.77127, -81.7174, 0.55 ) }
    dend_42 { pt3dadd( 106.862, 7.53257, -83.9125, 0.55 ) }
    dend_42 { pt3dadd( 108.046, 7.39972, -85.8935, 0.55 ) }
    dend_42 { pt3dadd( 108.802, 7.42424, -87.2349, 0.55 ) }
    dend_42 { pt3dadd( 109.688, 7.6482, -89.8478, 0.55 ) }
    dend_42 { pt3dadd( 110.144, 7.76092, -91.4834, 0.55 ) }
    dend_42 { pt3dadd( 110.452, 7.88337, -93.6452, 0.55 ) }
    dend_42 { pt3dadd( 110.785, 8.02519, -97.3056, 0.55 ) }
    dend_42 { pt3dadd( 110.839, 8.03252, -98.1363, 0.28 ) }
    dend_42 { pt3dadd( 111.578, 7.9992, -108.274, 0.28 ) }
    dend_42 { pt3dadd( 111.882, 7.9908, -111.255, 0.83 ) }
    dend_42 { pt3dadd( 113.167, 7.74447, -121.898, 0.83 ) }
    dend_42 { pt3dadd( 113.845, 7.43189, -126.899, 0.83 ) }
    dend_42 { pt3dadd( 114.2, 7.21413, -128.954, 0.55 ) }
    dend_42 { pt3dadd( 114.65, 6.97249, -130.97, 0.55 ) }
    dend_42 { pt3dadd( 116.107, 6.3178, -134.8, 0.55 ) }
    dend_42 { pt3dadd( 117.754, 5.63668, -138.214, 0.28 ) }
    dend_42 { pt3dadd( 118.325, 5.35844, -138.506, 0.55 ) }
    dend_42 { pt3dadd( 119.637, 4.70474, -138.632, 0.28 ) }
    dend_42 { pt3dadd( 120.469, 4.32476, -138.572, 0.55 ) }
    dend_42 { pt3dadd( 121.339, 3.89684, -138.436, 0.28 ) }
    dend_42 { pt3dadd( 122.399, 3.4209, -138.212, 0.55 ) }
    dend_42 { pt3dadd( 123.993, 2.83562, -138.024, 0.28 ) }
    dend_42 { pt3dadd( 125.261, 2.33944, -137.925, 0.55 ) }
    dend_42 { pt3dadd( 126.679, 1.91097, -137.906, 0.28 ) }
    dend_42 { pt3dadd( 128.597, 1.38103, -138.048, 0.55 ) }
    dend_42 { pt3dadd( 130.751, 0.869797, -138.325, 0.55 ) }
    dend_42 { pt3dadd( 132.643, 0.476005, -138.689, 0.28 ) }
    dend_42 { pt3dadd( 135.257, -0.00662386, -139.332, 0.55 ) }
    dend_42 { pt3dadd( 139.775, -0.58974, -140.896, 0.55 ) }
    dend_42 { pt3dadd( 141.779, -0.681978, -141.804, 0.55 ) }
    dend_42 { pt3dadd( 142.643, -0.662163, -142.278, 0.83 ) }
    dend_42 { pt3dadd( 144.282, -0.572279, -143.328, 0.55 ) }
    dend_42 { pt3dadd( 145.425, -0.446109, -144.117, 0.83 ) }
    dend_42 { pt3dadd( 148.517, -0.0196159, -146.255, 0.55 ) }
    dend_42 { pt3dadd( 150.372, 0.13007, -147.642, 0.28 ) }
    dend_42 { pt3dadd( 151.148, 0.121905, -148.149, 0.55 ) }
    dend_42 { pt3dadd( 153.243, -0.15744, -149.347, 0.28 ) }
    dend_42 { pt3dadd( 153.965, -0.335596, -149.734, 0.55 ) }
    dend_42 { pt3dadd( 155.444, -0.86162, -150.315, 0.28 ) }
    dend_42 { pt3dadd( 156.933, -1.61903, -150.67, 0.55 ) }
    dend_42 { pt3dadd( 159.936, -3.46624, -150.865, 0.28 ) }
    dend_42 { pt3dadd( 161.316, -4.42296, -150.814, 0.55 ) }
    dend_42 { pt3dadd( 163.347, -5.99833, -150.652, 0.28 ) }
    dend_42 { pt3dadd( 165.922, -8.00525, -150.344, 0.55 ) }
    dend_42 { pt3dadd( 167.792, -9.4389, -150.082, 0.55 ) }
    dend_42 { pt3dadd( 171.06, -11.8334, -149.545, 0.28 ) }
    dend_42 { pt3dadd( 172.408, -12.721, -149.426, 0.55 ) }
    dend_42 { pt3dadd( 174.748, -14.0436, -149.457, 0.28 ) }
    dend_42 { pt3dadd( 177.111, -15.1356, -149.612, 0.55 ) }
    dend_42 { pt3dadd( 178.429, -15.5381, -149.848, 0.28 ) }
    dend_42 { pt3dadd( 179.652, -15.7194, -150.115, 0.55 ) }
    dend_42 { pt3dadd( 183.127, -15.9479, -151.144, 0.28 ) }
    dend_42 { pt3dadd( 185.645, -15.9379, -151.877, 0.28 ) }
    dend_42 { pt3dadd( 187.867, -15.7721, -152.507, 0.55 ) }
    dend_42 { pt3dadd( 190.327, -15.4936, -153.305, 0.28 ) }
    dend_42 { pt3dadd( 190.957, -15.3932, -153.478, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 82.9482, 5.45637, -55.3922, 0.55 ) }
    dend_35 { pt3dadd( 82.7686, 4.28204, -57.8431, 0.55 ) }
    dend_35 { pt3dadd( 82.4552, 3.26441, -59.7745, 0.28 ) }
    dend_35 { pt3dadd( 82.165, 2.25403, -61.417, 0.55 ) }
    dend_35 { pt3dadd( 81.7292, 0.0780991, -64.9606, 0.28 ) }
    dend_35 { pt3dadd( 81.6961, -0.0397489, -65.2104, 0.55 ) }
    dend_35 { pt3dadd( 81.5553, -0.613437, -66.6104, 0.28 ) }
    dend_35 { pt3dadd( 81.3531, -0.9777, -67.8888, 0.55 ) }
    dend_35 { pt3dadd( 81.0864, -1.27764, -69.3154, 0.28 ) }
    dend_35 { pt3dadd( 80.6836, -1.63979, -71.3108, 0.55 ) }
    dend_35 { pt3dadd( 79.6692, -2.58467, -76.2626, 0.55 ) }
    dend_35 { pt3dadd( 78.7096, -3.40437, -80.8194, 0.55 ) }
    dend_35 { pt3dadd( 77.918, -4.05036, -84.4602, 0.55 ) }
    dend_35 { pt3dadd( 77.0947, -4.69654, -87.9916, 0.55 ) }
    dend_35 { pt3dadd( 76.8797, -4.87798, -88.8794, 0.28 ) }
    dend_35 { pt3dadd( 76.6686, -5.10893, -89.7806, 0.55 ) }
    dend_35 { pt3dadd( 76.4625, -5.50306, -90.9668, 0.28 ) }
    dend_35 { pt3dadd( 76.2609, -6.34566, -92.9861, 0.55 ) }
    dend_35 { pt3dadd( 76.1419, -8.32325, -96.4469, 0.55 ) }
    dend_35 { pt3dadd( 76.0914, -9.47725, -98.1722, 0.28 ) }
    dend_35 { pt3dadd( 75.9401, -10.5778, -99.9762, 0.55 ) }
    dend_35 { pt3dadd( 75.5511, -12.0148, -102.553, 0.28 ) }
    dend_35 { pt3dadd( 75.1122, -13.1114, -104.652, 0.55 ) }
    dend_35 { pt3dadd( 74.3308, -14.7106, -107.771, 0.28 ) }
    dend_35 { pt3dadd( 73.5435, -16.4245, -110.917, 0.55 ) }
    dend_35 { pt3dadd( 72.3425, -18.8739, -115.511, 0.28 ) }
    dend_35 { pt3dadd( 71.6511, -20.16, -117.956, 0.55 ) }
    dend_35 { pt3dadd( 70.9055, -21.4321, -120.502, 0.28 ) }
    dend_35 { pt3dadd( 70.2281, -22.4722, -122.859, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 69.4733, -23.673, -126.03, 0.55 ) }
    dend_35 { pt3dadd( 68.9425, -24.8711, -128.945, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 63.9743, 30.1022, -8.44414, 0.55 ) }
    dend_31 { pt3dadd( 66.0985, 30.2637, -7.76702, 0.55 ) }
    dend_31 { pt3dadd( 67.6682, 30.2848, -7.40248, 0.55 ) }
    dend_31 { pt3dadd( 71.1268, 30.2458, -6.76854, 0.55 ) }
    dend_31 { pt3dadd( 72.699, 30.1614, -6.60883, 0.55 ) }
    dend_31 { pt3dadd( 74.4196, 30.0804, -6.5276, 0.55 ) }
    dend_31 { pt3dadd( 76.7414, 29.9668, -6.58529, 0.55 ) }
    dend_31 { pt3dadd( 79.2192, 29.7267, -6.84975, 0.55 ) }
    dend_31 { pt3dadd( 80.5355, 29.5471, -7.12358, 0.55 ) }
    dend_31 { pt3dadd( 83.2439, 29.0887, -8.0187, 0.55 ) }
    dend_31 { pt3dadd( 84.4939, 28.8768, -8.46994, 0.55 ) }
    dend_31 { pt3dadd( 87.435, 28.3113, -9.58264, 0.55 ) }
    dend_31 { pt3dadd( 89.4332, 27.861, -10.3011, 0.55 ) }
    dend_31 { pt3dadd( 90.8988, 27.538, -10.7666, 0.83 ) }
    dend_31 { pt3dadd( 93.2463, 26.9509, -11.4641, 0.55 ) }
    dend_31 { pt3dadd( 95.5482, 26.2981, -12.0375, 0.83 ) }
    dend_31 { pt3dadd( 97.5038, 25.6816, -12.438, 0.55 ) }
    dend_31 { pt3dadd( 99.2338, 25.1782, -12.7175, 0.55 ) }
    dend_31 { pt3dadd( 100.209, 24.9442, -12.8375, 0.83 ) }
    dend_31 { pt3dadd( 102.474, 24.4346, -13.0082, 0.28 ) }
    dend_31 { pt3dadd( 103.589, 24.2417, -13.0384, 0.28 ) }
    dend_31 { pt3dadd( 104.68, 23.9779, -13.1024, 0.28 ) }
    dend_31 { pt3dadd( 105.857, 23.72, -13.1846, 0.28 ) }
    dend_31 { pt3dadd( 107.74, 23.3296, -13.3614, 0.28 ) }
    dend_31 { pt3dadd( 108.495, 23.1868, -13.4139, 0.55 ) }
    dend_31 { pt3dadd( 110.282, 22.9073, -13.3789, 0.55 ) }
    dend_31 { pt3dadd( 113.488, 22.4173, -13.1549, 0.55 ) }
    dend_31 { pt3dadd( 114.374, 22.2701, -13.0499, 0.55 ) }
    dend_31 { pt3dadd( 115.165, 22.1235, -12.9172, 0.83 ) }
    dend_31 { pt3dadd( 116.865, 21.8902, -12.511, 0.55 ) }
    dend_31 { pt3dadd( 118.34, 21.6963, -12.136, 0.55 ) }
    dend_31 { pt3dadd( 119.733, 21.5204, -11.7769, 0.55 ) }
    dend_31 { pt3dadd( 120.817, 21.3585, -11.5233, 0.55 ) }
    dend_31 { pt3dadd( 122.554, 20.9673, -11.1707, 0.55 ) }
    dend_31 { pt3dadd( 124.628, 20.3095, -10.8165, 0.55 ) }
    dend_31 { pt3dadd( 127.904, 18.8967, -10.3866, 0.55 ) }
    dend_31 { pt3dadd( 129.736, 17.8528, -10.1907, 0.55 ) }
    dend_31 { pt3dadd( 131.354, 16.6867, -10.0274, 0.28 ) }
    dend_31 { pt3dadd( 131.849, 16.2394, -9.97851, 0.55 ) }
    dend_31 { pt3dadd( 132.972, 14.9546, -9.84317, 0.28 ) }
    dend_31 { pt3dadd( 133.976, 13.4871, -9.67469, 0.55 ) }
    dend_31 { pt3dadd( 134.958, 11.6624, -9.32729, 0.55 ) }
    dend_31 { pt3dadd( 135.612, 10.4814, -9.03847, 0.28 ) }
    dend_31 { pt3dadd( 135.848, 10.0711, -8.91443, 0.55 ) }
    dend_31 { pt3dadd( 136.453, 9.05904, -8.58992, 0.28 ) }
    dend_31 { pt3dadd( 137.271, 7.75642, -8.13136, 0.55 ) }
    dend_31 { pt3dadd( 139.368, 4.66053, -6.93289, 0.55 ) }
    dend_31 { pt3dadd( 140.452, 3.11479, -6.29069, 0.55 ) }
    dend_31 { pt3dadd( 141.455, 1.70373, -5.68722, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 63.9743, 30.1022, -8.44414, 0.55 ) }
    dend_30 { pt3dadd( 65.3314, 31.0707, -7.18065, 0.55 ) }
    dend_30 { pt3dadd( 65.7726, 31.3689, -6.80135, 0.55 ) }
    dend_30 { pt3dadd( 67.4462, 32.3636, -5.4299, 0.55 ) }
    dend_30 { pt3dadd( 69.3023, 33.525, -3.88546, 0.55 ) }
    dend_30 { pt3dadd( 71.6674, 35.0355, -1.83467, 0.55 ) }
    dend_30 { pt3dadd( 72.3216, 35.4516, -1.27334, 0.55 ) }
    dend_30 { pt3dadd( 73.5054, 36.1448, -0.258334, 0.55 ) }
    dend_30 { pt3dadd( 74.8097, 36.9152, 0.787569, 0.55 ) }
    dend_30 { pt3dadd( 76.3349, 37.8262, 1.91087, 0.55 ) }
    dend_30 { pt3dadd( 77.7677, 38.7081, 2.96584, 0.55 ) }
    dend_30 { pt3dadd( 78.5563, 39.2139, 3.4893, 0.55 ) }
    dend_30 { pt3dadd( 79.4781, 39.835, 4.09027, 0.55 ) }
    dend_30 { pt3dadd( 80.6178, 40.6292, 4.79681, 0.83 ) }
    dend_30 { pt3dadd( 82.53, 41.8416, 5.7452, 0.55 ) }
    dend_30 { pt3dadd( 83.8178, 42.5676, 6.33096, 0.83 ) }
    dend_30 { pt3dadd( 85.6322, 43.4673, 7.11579, 0.55 ) }
    dend_30 { pt3dadd( 86.1959, 43.7101, 7.36145, 0.55 ) }
    dend_30 { pt3dadd( 87.9658, 44.3634, 8.12308, 0.55 ) }
    dend_30 { pt3dadd( 91.1883, 45.2962, 9.43856, 0.55 ) }
    dend_30 { pt3dadd( 93.5788, 45.833, 10.402, 0.55 ) }
    dend_30 { pt3dadd( 95.475, 46.192, 11.2428, 0.55 ) }
    dend_30 { pt3dadd( 97.4096, 46.4878, 12.2045, 0.55 ) }
    dend_30 { pt3dadd( 97.8178, 46.5405, 12.4131, 0.28 ) }
    dend_30 { pt3dadd( 98.6506, 46.6155, 12.8475, 0.83 ) }
    dend_30 { pt3dadd( 102.074, 46.8845, 14.6698, 0.55 ) }
    dend_30 { pt3dadd( 104.477, 47.0577, 15.899, 0.55 ) }
    dend_30 { pt3dadd( 106.433, 47.2651, 16.9356, 0.55 ) }
    dend_30 { pt3dadd( 107.599, 47.3899, 17.5671, 0.83 ) }
    dend_30 { pt3dadd( 108.516, 47.5014, 18.0607, 0.28 ) }
    dend_30 { pt3dadd( 109.348, 47.6008, 18.5002, 0.55 ) }
    dend_30 { pt3dadd( 115.414, 50.2207, 22.2013, 0.55 ) }
    dend_30 { pt3dadd( 122.28, 51.4169, 25.1758, 0.55 ) }
    dend_30 { pt3dadd( 128.924, 53.5503, 28.1261, 0.55 ) }
    dend_30 { pt3dadd( 134.667, 55.1532, 32.8031, 0.55 ) }
    dend_30 { pt3dadd( 140.045, 55.8816, 38.0857, 0.55 ) }
    dend_30 { pt3dadd( 146.501, 55.0021, 41.9169, 0.55 ) }
    dend_30 { pt3dadd( 153.174, 53.0272, 44.827, 0.55 ) }
    dend_30 { pt3dadd( 160.395, 52.1974, 46.9212, 0.55 ) }
    dend_30 { pt3dadd( 167.462, 51.4309, 49.5081, 0.55 ) }
    dend_30 { pt3dadd( 174.794, 51.2751, 51.3942, 0.55 ) }
    dend_30 { pt3dadd( 181.875, 51.7562, 54.0446, 0.55 ) }
    dend_30 { pt3dadd( 188.597, 51.1519, 57.4599, 0.55 ) }
    dend_30 { pt3dadd( 195.187, 52.0274, 61.0938, 0.55 ) }
    dend_30 { pt3dadd( 201.141, 54.2094, 65.2404, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.32985, -25.1795, 7.19423, 1.38 ) }
    dend_13 { pt3dadd( 0.983145, -28.5511, 5.38223, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.32985, -25.1795, 7.19423, 0.55 ) }
    dend_12 { pt3dadd( -2.72738, -26.6907, 7.3845, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.28604, -28.6405, 7.59493, 0.55 ) }
    dend_12 { pt3dadd( -5.48646, -29.9225, 7.77247, 0.55 ) }
    dend_12 { pt3dadd( -6.51637, -30.9925, 7.76794, 0.55 ) }
    dend_12 { pt3dadd( -8.78213, -33.2014, 7.55504, 0.55 ) }
    dend_12 { pt3dadd( -10.3726, -34.6723, 7.36407, 0.55 ) }
    dend_12 { pt3dadd( -11.7933, -35.9913, 7.14346, 0.55 ) }
    dend_12 { pt3dadd( -15.4341, -39.192, 6.58053, 0.55 ) }
    dend_12 { pt3dadd( -19.7977, -42.8898, 5.93759, 0.55 ) }
    dend_12 { pt3dadd( -23.1805, -45.6863, 5.38427, 0.55 ) }
    dend_12 { pt3dadd( -25.3457, -47.5256, 5.0013, 0.55 ) }
    dend_12 { pt3dadd( -27.8341, -49.7383, 4.56865, 0.55 ) }
    dend_12 { pt3dadd( -31.0048, -52.9336, 4.05752, 0.55 ) }
    dend_12 { pt3dadd( -32.8756, -55.2212, 3.79375, 0.55 ) }
    dend_12 { pt3dadd( -35.1842, -58.5329, 3.65509, 0.55 ) }
    dend_12 { pt3dadd( -37.0403, -61.653, 3.61058, 0.55 ) }
    dend_12 { pt3dadd( -38.9503, -65.5691, 3.5925, 0.55 ) }
    dend_12 { pt3dadd( -40.7886, -70.1891, 3.64218, 0.55 ) }
    dend_12 { pt3dadd( -41.8243, -73.7407, 3.7256, 0.55 ) }
    dend_12 { pt3dadd( -42.2016, -75.5156, 3.87168, 0.55 ) }
    dend_12 { pt3dadd( -42.8034, -79.7019, 4.4181, 0.55 ) }
    dend_12 { pt3dadd( -43.2825, -83.6235, 5.0258, 0.55 ) }
    dend_12 { pt3dadd( -43.522, -87.5872, 5.91231, 0.55 ) }
    dend_12 { pt3dadd( -43.6684, -89.8607, 6.5502, 0.55 ) }
    dend_12 { pt3dadd( -44.046, -96.8941, 8.78051, 0.55 ) }
    dend_12 { pt3dadd( -44.0762, -97.4118, 8.95441, 0.55 ) }
    dend_12 { pt3dadd( -44.1908, -100.586, 10.0913, 0.55 ) }
    dend_12 { pt3dadd( -44.6487, -106.25, 12.2921, 0.55 ) }
    dend_12 { pt3dadd( -44.8269, -108.142, 12.9146, 0.55 ) }
    dend_12 { pt3dadd( -45.2419, -111.093, 13.379, 0.55 ) }
    dend_12 { pt3dadd( -45.3979, -112.189, 13.2913, 0.55 ) }
    dend_12 { pt3dadd( -45.8435, -115.904, 12.2619, 0.55 ) }
    dend_12 { pt3dadd( -46.0573, -118.315, 11.0603, 0.55 ) }
    dend_12 { pt3dadd( -46.3862, -122.155, 8.33765, 0.55 ) }
    dend_12 { pt3dadd( -46.6391, -126.862, 4.61298, 0.28 ) }
    dend_12 { pt3dadd( -46.7022, -128.025, 3.52982, 0.55 ) }
    dend_12 { pt3dadd( -46.811, -129.788, 1.72856, 0.28 ) }
    dend_12 { pt3dadd( -46.8317, -130.054, 1.44303, 0.55 ) }
    dend_12 { pt3dadd( -46.9387, -131.508, 0.00766873, 0.28 ) }
    dend_12 { pt3dadd( -46.9955, -132.001, -0.359625, 0.55 ) }
    dend_12 { pt3dadd( -47.2896, -134.562, -1.75638, 0.28 ) }
    dend_12 { pt3dadd( -47.4227, -135.431, -2.21626, 0.55 ) }
    dend_12 { pt3dadd( -47.8224, -137.946, -3.39587, 0.28 ) }
    dend_12 { pt3dadd( -47.9443, -138.737, -3.76467, 0.55 ) }
    dend_12 { pt3dadd( -48.3822, -141.468, -4.98892, 0.28 ) }
    dend_12 { pt3dadd( -48.5777, -142.725, -5.55946, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.06896, -74.2176, 59.1438, 0.55 ) }
    dend_10 { pt3dadd( -10.7653, -79.6181, 64.3235, 0.55 ) }
    dend_10 { pt3dadd( -14.2895, -84.3783, 69.6641, 0.55 ) }
    dend_10 { pt3dadd( -17.5547, -89.6412, 74.6621, 0.55 ) }
    dend_10 { pt3dadd( -20.9507, -94.9402, 79.5313, 0.55 ) }
    dend_10 { pt3dadd( -23.4398, -101.074, 83.8902, 0.55 ) }
    dend_10 { pt3dadd( -25.8813, -106.949, 88.6345, 0.55 ) }
    dend_10 { pt3dadd( -27.2905, -114.005, 91.8642, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.06896, -74.2176, 59.1438, 0.55 ) }
    dend_3 { pt3dadd( -6.23081, -85.6984, 69.1134, 0.55 ) }
    dend_3 { pt3dadd( -4.73969, -98.7981, 76.7783, 0.55 ) }
    dend_3 { pt3dadd( -5.62953, -111.537, 85.1015, 0.55 ) }
    dend_3 { pt3dadd( -7.89287, -124.738, 92.3096, 0.55 ) }
    dend_3 { pt3dadd( -9.49193, -138.013, 99.5669, 0.55 ) }
    dend_3 { pt3dadd( -10.6074, -150.838, 107.72, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -49.8206, 40.5335, -13.7092, 0.83 ) }
    dend_60 { pt3dadd( -49.4158, 42.222, -15.475, 0.83 ) }
    dend_60 { pt3dadd( -48.5624, 46.2904, -19.4184, 0.55 ) }
    dend_60 { pt3dadd( -48.1999, 48.0439, -20.9706, 0.83 ) }
    dend_60 { pt3dadd( -47.8119, 49.919, -22.5002, 0.55 ) }
    dend_60 { pt3dadd( -47.428, 51.8455, -23.7951, 0.55 ) }
    dend_60 { pt3dadd( -47.2341, 52.8126, -24.3183, 0.28 ) }
    dend_60 { pt3dadd( -47.1548, 53.45, -24.5025, 0.55 ) }
    dend_60 { pt3dadd( -46.8479, 55.5766, -24.6507, 0.28 ) }
    dend_60 { pt3dadd( -46.696, 56.487, -24.6664, 0.55 ) }
    dend_60 { pt3dadd( -46.2135, 59.6485, -24.5913, 0.28 ) }
    dend_60 { pt3dadd( -45.9008, 62.1497, -24.4478, 0.55 ) }
    dend_60 { pt3dadd( -45.6078, 66.0451, -24.107, 0.28 ) }
    dend_60 { pt3dadd( -45.4754, 69.4623, -23.7447, 0.28 ) }
    dend_60 { pt3dadd( -45.5156, 71.3687, -23.508, 0.55 ) }
    dend_60 { pt3dadd( -45.7051, 73.6215, -23.2313, 0.28 ) }
    dend_60 { pt3dadd( -45.8686, 74.6923, -23.0864, 0.55 ) }
    dend_60 { pt3dadd( -46.3893, 77.2045, -22.8686, 0.28 ) }
    dend_60 { pt3dadd( -46.847, 78.8734, -22.8185, 0.28 ) }
    dend_60 { pt3dadd( -47.3302, 80.511, -22.8226, 0.28 ) }
    dend_60 { pt3dadd( -47.5513, 81.3784, -22.827, 0.55 ) }
    dend_60 { pt3dadd( -48.2484, 84.9005, -22.9233, 0.28 ) }
    dend_60 { pt3dadd( -48.9288, 89.0825, -23.1112, 0.55 ) }
    dend_60 { pt3dadd( -49.1419, 90.5284, -23.1811, 0.55 ) }
    dend_60 { pt3dadd( -49.3807, 91.9759, -23.2199, 0.55 ) }
    dend_60 { pt3dadd( -50.0518, 95.0412, -23.3605, 0.55 ) }
    dend_60 { pt3dadd( -50.623, 97.045, -23.5029, 0.28 ) }
    dend_60 { pt3dadd( -50.9291, 97.7975, -23.5709, 0.55 ) }
    dend_60 { pt3dadd( -51.9085, 99.8239, -23.7157, 0.28 ) }
    dend_60 { pt3dadd( -53.039, 101.976, -23.9634, 0.55 ) }
    dend_60 { pt3dadd( -54.9597, 105.05, -24.4589, 0.28 ) }
    dend_60 { pt3dadd( -55.9057, 106.323, -24.7156, 0.28 ) }
    dend_60 { pt3dadd( -57.4537, 108.078, -25.2723, 0.55 ) }
    dend_60 { pt3dadd( -59.1923, 109.898, -25.962, 0.28 ) }
    dend_60 { pt3dadd( -59.5106, 110.18, -26.0876, 0.55 ) }
    dend_60 { pt3dadd( -60.6619, 111.071, -26.5345, 0.28 ) }
    dend_60 { pt3dadd( -64.6411, 113.902, -28.002, 0.55 ) }
    dend_60 { pt3dadd( -70.1797, 117.356, -30.2591, 0.28 ) }
    dend_60 { pt3dadd( -71.2025, 117.93, -30.7389, 0.55 ) }
    dend_60 { pt3dadd( -74.0115, 119.399, -32.1052, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -75.1903, 120.0, -32.7116, 0.28 ) }
    dend_60 { pt3dadd( -76.214, 120.497, -33.2888, 0.55 ) }
    dend_60 { pt3dadd( -79.2111, 121.596, -35.2163, 0.28 ) }
    dend_60 { pt3dadd( -81.3346, 122.156, -36.4939, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -49.8206, 40.5335, -13.7092, 0.55 ) }
    dend_57 { pt3dadd( -50.0123, 41.7538, -13.8844, 0.55 ) }
    dend_57 { pt3dadd( -50.1449, 42.4747, -13.9186, 0.28 ) }
    dend_57 { pt3dadd( -50.3466, 42.989, -13.814, 0.55 ) }
    dend_57 { pt3dadd( -50.8096, 44.1702, -13.5739, 0.28 ) }
    dend_57 { pt3dadd( -51.1348, 44.9999, -13.4052, 0.55 ) }
    dend_57 { pt3dadd( -51.7343, 46.5294, -13.0942, 0.28 ) }
    dend_57 { pt3dadd( -52.1424, 47.3488, -12.7808, 0.55 ) }
    dend_57 { pt3dadd( -53.72, 49.2915, -11.3235, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -168.982, -54.2148, -32.5862, 0.55 ) }
    dend_52 { pt3dadd( -172.736, -58.3025, -35.5539, 0.55 ) }
    dend_52 { pt3dadd( -175.485, -62.7638, -39.0036, 0.55 ) }
    dend_52 { pt3dadd( -177.676, -66.5035, -43.5607, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -168.982, -54.2148, -32.5862, 0.55 ) }
    dend_49 { pt3dadd( -174.406, -59.9535, -36.8801, 0.55 ) }
    dend_49 { pt3dadd( -178.825, -65.8249, -42.05, 0.55 ) }
    dend_49 { pt3dadd( -182.869, -71.8419, -47.3497, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -191.942, 15.9871, 68.4715, 0.55 ) }
    dend_47 { pt3dadd( -202.485, 15.6121, 75.3487, 0.55 ) }
    dend_47 { pt3dadd( -213.553, 16.9239, 81.199, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -191.942, 15.9871, 68.4715, 0.55 ) }
    dend_46 { pt3dadd( -201.533, 14.818, 71.3875, 0.55 ) }
    dend_46 { pt3dadd( -211.065, 15.2305, 74.6882, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 68.9425, -24.8711, -128.945, 0.28 ) }
    dend_39 { pt3dadd( 73.6925, -25.4165, -143.07, 0.28 ) }
    dend_39 { pt3dadd( 74.1707, -25.5678, -144.369, 0.55 ) }
    dend_39 { pt3dadd( 74.9779, -25.8232, -146.563, 0.28 ) }
    dend_39 { pt3dadd( 75.6577, -26.0383, -148.409, 0.28 ) }
    dend_39 { pt3dadd( 76.5575, -26.323, -150.854, 0.55 ) }
    dend_39 { pt3dadd( 77.7438, -26.6984, -154.077, 0.55 ) }
    dend_39 { pt3dadd( 79.5575, -28.3469, -156.405, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 68.9425, -24.8711, -128.945, 0.55 ) }
    dend_36 { pt3dadd( 69.2122, -25.4917, -130.947, 0.55 ) }
    dend_36 { pt3dadd( 69.2224, -25.7378, -131.822, 0.28 ) }
    dend_36 { pt3dadd( 69.185, -26.1307, -133.332, 0.55 ) }
    dend_36 { pt3dadd( 69.1027, -26.9961, -136.657, 0.28 ) }
    dend_36 { pt3dadd( 69.0457, -27.5958, -138.962, 0.55 ) }
    dend_36 { pt3dadd( 68.9491, -28.612, -142.867, 0.28 ) }
    dend_36 { pt3dadd( 68.7395, -29.6849, -147.862, 0.28 ) }
    dend_36 { pt3dadd( 68.5786, -30.1413, -150.176, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 141.455, 1.70373, -5.68722, 0.28 ) }
    dend_33 { pt3dadd( 143.221, 0.347372, -4.05018, 0.28 ) }
    dend_33 { pt3dadd( 145.427, -1.34449, -1.67085, 0.28 ) }
    dend_33 { pt3dadd( 146.813, -2.41135, -0.0582623, 0.55 ) }
    dend_33 { pt3dadd( 147.639, -2.96148, 0.884746, 0.28 ) }
    dend_33 { pt3dadd( 148.077, -3.25601, 1.39712, 0.28 ) }
    dend_33 { pt3dadd( 150.256, -4.73004, 3.88738, 0.55 ) }
    dend_33 { pt3dadd( 150.745, -5.01406, 4.51742, 0.28 ) }
    dend_33 { pt3dadd( 151.89, -5.73336, 6.2708, 0.55 ) }
    dend_33 { pt3dadd( 152.874, -6.39207, 7.73899, 0.28 ) }
    dend_33 { pt3dadd( 153.737, -6.92735, 8.91627, 0.55 ) }
    dend_33 { pt3dadd( 154.76, -7.61511, 10.2429, 0.55 ) }
    dend_33 { pt3dadd( 156.43, -8.84592, 12.0944, 0.55 ) }
    dend_33 { pt3dadd( 156.835, -9.15913, 12.5302, 0.55 ) }
    dend_33 { pt3dadd( 158.293, -10.3517, 14.1323, 0.28 ) }
    dend_33 { pt3dadd( 158.862, -10.8557, 14.7646, 0.55 ) }
    dend_33 { pt3dadd( 159.654, -11.4888, 15.5735, 0.28 ) }
    dend_33 { pt3dadd( 160.781, -12.4232, 16.6587, 0.55 ) }
    dend_33 { pt3dadd( 162.691, -14.0502, 18.0611, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 141.455, 1.70373, -5.68722, 0.55 ) }
    dend_32 { pt3dadd( 138.57, 1.38992, -6.09348, 0.55 ) }
    dend_32 { pt3dadd( 136.226, 1.13507, -6.4234, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.983145, -28.5511, 5.38223, 0.83 ) }
    dend_17 { pt3dadd( 1.07145, -28.8393, 5.3039, 0.83 ) }
    dend_17 { pt3dadd( 2.26119, -31.4265, 4.59596, 0.83 ) }
    dend_17 { pt3dadd( 3.24176, -33.6872, 3.8402, 0.55 ) }
    dend_17 { pt3dadd( 4.02404, -35.4906, 3.23726, 0.55 ) }
    dend_17 { pt3dadd( 5.68682, -39.324, 1.9557, 0.83 ) }
    dend_17 { pt3dadd( 7.70364, -43.9736, 0.401256, 0.55 ) }
    dend_17 { pt3dadd( 8.83681, -46.4142, -0.395559, 0.83 ) }
    dend_17 { pt3dadd( 10.9673, -50.3257, -1.62606, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.983145, -28.5511, 5.38223, 0.55 ) }
    dend_14 { pt3dadd( -0.958269, -29.2677, 3.40579, 0.55 ) }
    dend_14 { pt3dadd( -3.04214, -30.0369, 1.28433, 0.55 ) }
    dend_14 { pt3dadd( -5.50217, -30.945, -1.22008, 0.55 ) }
    dend_14 { pt3dadd( -8.48944, -32.0478, -4.26124, 0.55 ) }
    dend_14 { pt3dadd( -10.1846, -32.6735, -5.987, 0.55 ) }
    dend_14 { pt3dadd( -10.5252, -32.7992, -6.33368, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.6074, -150.838, 107.72, 0.55 ) }
    dend_7 { pt3dadd( -10.2912, -159.348, 113.773, 0.55 ) }
    dend_7 { pt3dadd( -8.64718, -168.428, 118.629, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.6074, -150.838, 107.72, 0.55 ) }
    dend_4 { pt3dadd( -11.5137, -159.136, 112.562, 0.55 ) }
    dend_4 { pt3dadd( -12.6581, -167.154, 117.828, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -53.72, 49.2915, -11.3235, 0.28 ) }
    dend_59 { pt3dadd( -55.8473, 50.506, -9.53534, 0.28 ) }
    dend_59 { pt3dadd( -56.6688, 50.9443, -8.7723, 0.55 ) }
    dend_59 { pt3dadd( -59.0356, 52.2046, -6.51151, 0.28 ) }
    dend_59 { pt3dadd( -60.188, 52.8569, -5.49972, 0.55 ) }
    dend_59 { pt3dadd( -63.3081, 54.6474, -2.86765, 0.28 ) }
    dend_59 { pt3dadd( -66.4792, 56.4671, -0.192496, 0.55 ) }
    dend_59 { pt3dadd( -71.7123, 59.2279, 4.2209, 0.28 ) }
    dend_59 { pt3dadd( -72.8274, 59.8234, 5.16356, 0.55 ) }
    dend_59 { pt3dadd( -75.2764, 61.285, 7.19059, 0.28 ) }
    dend_59 { pt3dadd( -76.2372, 61.9063, 7.99916, 0.55 ) }
    dend_59 { pt3dadd( -86.2517, 65.3922, 14.0446, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -96.6088, 70.7309, 17.554, 0.55 ) }
    dend_59 { pt3dadd( -106.118, 76.0804, 22.9273, 0.55 ) }
    dend_59 { pt3dadd( -114.176, 82.9923, 28.7609, 0.55 ) }
    dend_59 { pt3dadd( -123.236, 89.5727, 33.4215, 0.55 ) }
    dend_59 { pt3dadd( -133.341, 94.0481, 38.5551, 0.55 ) }
    dend_59 { pt3dadd( -142.966, 97.2762, 45.3388, 0.55 ) }
    dend_59 { pt3dadd( -151.734, 99.0322, 53.6874, 0.55 ) }
    dend_59 { pt3dadd( -160.512, 101.537, 61.8146, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.72, 49.2915, -11.3235, 0.55 ) }
    dend_58 { pt3dadd( -56.6448, 48.0157, -10.7479, 0.55 ) }
    dend_58 { pt3dadd( -58.1603, 47.3046, -10.4582, 0.28 ) }
    dend_58 { pt3dadd( -59.288, 46.7753, -10.2425, 0.55 ) }
    dend_58 { pt3dadd( -60.228, 46.3342, -10.0628, 0.28 ) }
    dend_58 { pt3dadd( -60.8864, 46.0253, -9.93695, 0.55 ) }
    dend_58 { pt3dadd( -62.7018, 45.1734, -9.58984, 0.28 ) }
    dend_58 { pt3dadd( -63.8784, 44.5298, -9.52169, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -177.676, -66.5035, -43.5607, 0.55 ) }
    dend_54 { pt3dadd( -181.701, -74.4051, -47.3345, 0.55 ) }
    dend_54 { pt3dadd( -185.494, -82.801, -50.1347, 0.55 ) }
    dend_54 { pt3dadd( -188.615, -90.7213, -54.6314, 0.55 ) }
    dend_54 { pt3dadd( -192.674, -98.8611, -57.8104, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -177.676, -66.5035, -43.5607, 0.55 ) }
    dend_53 { pt3dadd( -184.123, -67.8063, -53.4734, 0.55 ) }
    dend_53 { pt3dadd( -190.187, -67.1932, -63.7302, 0.55 ) }
    dend_53 { pt3dadd( -197.039, -68.3996, -73.3871, 0.55 ) }
    dend_53 { pt3dadd( -206.119, -68.6009, -81.1404, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -182.869, -71.8419, -47.3497, 0.55 ) }
    dend_51 { pt3dadd( -188.149, -72.771, -55.1718, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -182.869, -71.8419, -47.3497, 0.55 ) }
    dend_50 { pt3dadd( -187.656, -81.7212, -48.464, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 79.5575, -28.3469, -156.405, 0.28 ) }
    dend_41 { pt3dadd( 81.7203, -29.3401, -158.657, 0.28 ) }
    dend_41 { pt3dadd( 82.725, -29.8014, -159.702, 0.55 ) }
    dend_41 { pt3dadd( 84.6409, -30.6812, -161.697, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 79.5575, -28.3469, -156.405, 0.55 ) }
    dend_40 { pt3dadd( 78.8433, -28.8836, -157.806, 0.55 ) }
    dend_40 { pt3dadd( 77.4148, -29.9573, -160.608, 0.28 ) }
    dend_40 { pt3dadd( 76.9494, -30.307, -161.521, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 68.5786, -30.1413, -150.176, 0.28 ) }
    dend_38 { pt3dadd( 68.6192, -31.9038, -154.658, 0.28 ) }
    dend_38 { pt3dadd( 68.6393, -32.7765, -156.877, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 68.5786, -30.1413, -150.176, 0.55 ) }
    dend_37 { pt3dadd( 66.2872, -31.2401, -149.021, 0.55 ) }
    dend_37 { pt3dadd( 59.8978, -34.3041, -145.802, 0.28 ) }
    dend_37 { pt3dadd( 58.38, -35.032, -145.037, 0.55 ) }
    dend_37 { pt3dadd( 54.2278, -37.0232, -142.945, 0.28 ) }
    dend_37 { pt3dadd( 51.5514, -38.3066, -141.596, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.9673, -50.3257, -1.62606, 0.83 ) }
    dend_23 { pt3dadd( 10.9738, -50.6414, -1.69389, 0.83 ) }
    dend_23 { pt3dadd( 11.1381, -54.7837, -2.47248, 0.83 ) }
    dend_23 { pt3dadd( 11.0124, -57.8844, -2.81722, 0.83 ) }
    dend_23 { pt3dadd( 10.7169, -60.8875, -2.80547, 0.83 ) }
    dend_23 { pt3dadd( 10.2189, -64.8971, -2.46327, 0.83 ) }
    dend_23 { pt3dadd( 9.53784, -69.5206, -1.87847, 0.83 ) }
    dend_23 { pt3dadd( 8.83485, -74.7047, -0.953523, 0.83 ) }
    dend_23 { pt3dadd( 8.18353, -79.7576, 0.179935, 0.83 ) }
    dend_23 { pt3dadd( 6.95773, -85.9228, 1.48059, 0.83 ) }
    dend_23 { pt3dadd( 6.21559, -88.7326, 1.9357, 0.83 ) }
    dend_23 { pt3dadd( 5.63156, -90.8353, 2.14253, 0.83 ) }
    dend_23 { pt3dadd( 4.41154, -94.8569, 2.46304, 0.83 ) }
    dend_23 { pt3dadd( 3.37983, -98.4501, 2.53285, 0.83 ) }
    dend_23 { pt3dadd( 1.49696, -106.078, 1.73815, 0.83 ) }
    dend_23 { pt3dadd( 0.444996, -110.213, 0.730327, 0.83 ) }
    dend_23 { pt3dadd( -0.564428, -114.001, -0.490287, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.9673, -50.3257, -1.62606, 0.55 ) }
    dend_18 { pt3dadd( 10.2914, -51.6019, -1.41835, 0.55 ) }
    dend_18 { pt3dadd( 9.80712, -52.5295, -1.19212, 0.55 ) }
    dend_18 { pt3dadd( 9.5308, -53.1259, -0.990681, 0.55 ) }
    dend_18 { pt3dadd( 9.16958, -54.0657, -0.59531, 0.55 ) }
    dend_18 { pt3dadd( 8.53742, -55.9344, 0.29548, 0.55 ) }
    dend_18 { pt3dadd( 8.09125, -57.353, 1.13061, 0.55 ) }
    dend_18 { pt3dadd( 7.76907, -58.4941, 1.9222, 0.55 ) }
    dend_18 { pt3dadd( 7.43859, -59.6471, 2.81185, 0.55 ) }
    dend_18 { pt3dadd( 7.17062, -60.6043, 3.6022, 0.28 ) }
    dend_18 { pt3dadd( 6.97269, -61.3893, 4.3662, 0.55 ) }
    dend_18 { pt3dadd( 6.63608, -62.8215, 5.96681, 0.55 ) }
    dend_18 { pt3dadd( 6.40855, -63.6987, 7.05635, 0.55 ) }
    dend_18 { pt3dadd( 6.27427, -64.1895, 7.66334, 0.55 ) }
    dend_18 { pt3dadd( 6.07805, -64.7652, 8.35711, 0.83 ) }
    dend_18 { pt3dadd( 5.44832, -66.4675, 10.3033, 0.28 ) }
    dend_18 { pt3dadd( 5.23608, -67.0304, 10.9316, 0.55 ) }
    dend_18 { pt3dadd( 4.8755, -68.0482, 12.0233, 0.28 ) }
    dend_18 { pt3dadd( 4.77117, -68.3626, 12.3829, 0.55 ) }
    dend_18 { pt3dadd( 4.56359, -69.1039, 13.2008, 0.28 ) }
    dend_18 { pt3dadd( 4.43957, -69.5247, 13.6339, 0.55 ) }
    dend_18 { pt3dadd( 3.84557, -70.8757, 14.695, 0.55 ) }
    dend_18 { pt3dadd( 3.58735, -74.6353, 18.7484, 0.55 ) }
    dend_18 { pt3dadd( 3.65998, -78.2465, 22.9499, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.5252, -32.7992, -6.33368, 0.55 ) }
    dend_16 { pt3dadd( -13.6951, -33.5516, -8.12721, 0.55 ) }
    dend_16 { pt3dadd( -14.6191, -33.7167, -8.61873, 0.55 ) }
    dend_16 { pt3dadd( -16.9211, -34.1373, -9.78415, 0.55 ) }
    dend_16 { pt3dadd( -21.9104, -34.9509, -12.1612, 0.28 ) }
    dend_16 { pt3dadd( -22.6426, -35.0613, -12.4775, 0.55 ) }
    dend_16 { pt3dadd( -25.6734, -35.598, -13.7064, 0.55 ) }
    dend_16 { pt3dadd( -29.7359, -36.3611, -15.0719, 0.55 ) }
    dend_16 { pt3dadd( -31.2804, -36.6158, -15.5615, 0.28 ) }
    dend_16 { pt3dadd( -32.6134, -36.7688, -15.9234, 0.28 ) }
    dend_16 { pt3dadd( -34.8163, -37.0137, -16.2901, 0.55 ) }
    dend_16 { pt3dadd( -37.5256, -37.1986, -16.8142, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -40.0371, -37.1861, -17.3331, 0.55 ) }
    dend_16 { pt3dadd( -41.9656, -37.0449, -17.695, 0.55 ) }
    dend_16 { pt3dadd( -43.3014, -36.8514, -17.9729, 0.55 ) }
    dend_16 { pt3dadd( -47.2515, -36.1271, -18.8765, 0.55 ) }
    dend_16 { pt3dadd( -51.3831, -35.1358, -19.748, 0.55 ) }
    dend_16 { pt3dadd( -53.0772, -34.6505, -20.0682, 0.28 ) }
    dend_16 { pt3dadd( -54.695, -34.209, -20.3983, 0.55 ) }
    dend_16 { pt3dadd( -57.9751, -33.493, -21.0514, 0.28 ) }
    dend_16 { pt3dadd( -59.0771, -33.2794, -21.2636, 0.83 ) }
    dend_16 { pt3dadd( -61.1, -32.87, -21.543, 0.28 ) }
    dend_16 { pt3dadd( -62.5121, -32.6823, -21.5908, 0.55 ) }
    dend_16 { pt3dadd( -64.5537, -32.4758, -21.6284, 0.28 ) }
    dend_16 { pt3dadd( -65.3593, -32.3864, -21.6195, 0.55 ) }
    dend_16 { pt3dadd( -66.8311, -32.2517, -21.5342, 0.55 ) }
    dend_16 { pt3dadd( -69.0238, -31.8535, -21.3174, 0.55 ) }
    dend_16 { pt3dadd( -70.4298, -31.5186, -21.0984, 0.28 ) }
    dend_16 { pt3dadd( -71.5312, -31.125, -20.8313, 0.55 ) }
    dend_16 { pt3dadd( -72.8254, -30.5079, -20.5126, 0.28 ) }
    dend_16 { pt3dadd( -73.0401, -30.3895, -20.4659, 0.55 ) }
    dend_16 { pt3dadd( -75.1308, -29.2264, -20.3516, 0.28 ) }
    dend_16 { pt3dadd( -76.6965, -28.3424, -20.4094, 0.55 ) }
    dend_16 { pt3dadd( -78.8412, -27.0355, -20.7219, 0.83 ) }
    dend_16 { pt3dadd( -80.6625, -25.9106, -21.1411, 0.28 ) }
    dend_16 { pt3dadd( -81.1456, -25.6195, -21.2868, 0.55 ) }
    dend_16 { pt3dadd( -84.9078, -23.4167, -22.5693, 0.28 ) }
    dend_16 { pt3dadd( -85.5833, -23.0355, -22.8445, 0.55 ) }
    dend_16 { pt3dadd( -87.6038, -21.7983, -23.7453, 0.28 ) }
    dend_16 { pt3dadd( -88.1263, -21.4797, -23.9808, 0.55 ) }
    dend_16 { pt3dadd( -89.4445, -20.6578, -24.5154, 0.28 ) }
    dend_16 { pt3dadd( -90.3633, -20.0711, -24.8485, 0.55 ) }
    dend_16 { pt3dadd( -92.3376, -18.782, -25.3514, 0.28 ) }
    dend_16 { pt3dadd( -93.5018, -18.0883, -25.6171, 0.55 ) }
    dend_16 { pt3dadd( -95.9584, -16.747, -26.0827, 0.28 ) }
    dend_16 { pt3dadd( -96.689, -16.3822, -26.2136, 0.55 ) }
    dend_16 { pt3dadd( -97.8273, -15.888, -26.3883, 0.28 ) }
    dend_16 { pt3dadd( -98.7789, -15.4752, -26.4971, 0.55 ) }
    dend_16 { pt3dadd( -100.723, -14.6496, -26.6237, 0.28 ) }
    dend_16 { pt3dadd( -101.304, -14.414, -26.646, 0.55 ) }
    dend_16 { pt3dadd( -105.556, -12.6041, -26.6329, 0.28 ) }
    dend_16 { pt3dadd( -107.003, -11.8847, -26.5086, 0.55 ) }
    dend_16 { pt3dadd( -109.525, -10.4998, -26.1313, 0.28 ) }
    dend_16 { pt3dadd( -110.647, -9.83582, -25.9265, 0.55 ) }
    dend_16 { pt3dadd( -113.172, -8.34356, -25.3202, 0.28 ) }
    dend_16 { pt3dadd( -114.086, -7.83964, -25.0614, 0.55 ) }
    dend_16 { pt3dadd( -117.348, -6.32731, -23.9699, 0.28 ) }
    dend_16 { pt3dadd( -118.712, -5.87003, -23.5117, 0.55 ) }
    dend_16 { pt3dadd( -120.67, -5.54159, -22.8529, 0.55 ) }
    dend_16 { pt3dadd( -121.867, -5.41881, -22.4238, 0.55 ) }
    dend_16 { pt3dadd( -124.238, -5.24895, -21.3701, 0.28 ) }
    dend_16 { pt3dadd( -126.511, -5.11958, -20.1886, 0.28 ) }
    dend_16 { pt3dadd( -128.38, -5.00952, -19.1477, 0.55 ) }
    dend_16 { pt3dadd( -130.536, -4.68377, -17.6071, 0.28 ) }
    dend_16 { pt3dadd( -131.52, -4.38336, -16.6819, 0.55 ) }
    dend_16 { pt3dadd( -133.696, -3.22072, -14.1844, 0.28 ) }
    dend_16 { pt3dadd( -134.617, -2.35396, -12.5541, 0.55 ) }
    dend_16 { pt3dadd( -135.088, -1.65783, -11.2996, 0.28 ) }
    dend_16 { pt3dadd( -135.465, -0.895369, -9.65276, 0.55 ) }
    dend_16 { pt3dadd( -135.833, 0.0955376, -7.44076, 0.28 ) }
    dend_16 { pt3dadd( -135.98, 0.440917, -6.60825, 0.55 ) }
    dend_16 { pt3dadd( -136.977, 1.97748, -2.59476, 0.28 ) }
    dend_16 { pt3dadd( -137.324, 2.4566, -1.251, 0.55 ) }
    dend_16 { pt3dadd( -138.121, 3.49799, 1.99005, 0.28 ) }
    dend_16 { pt3dadd( -138.556, 4.04796, 3.74979, 0.55 ) }
    dend_16 { pt3dadd( -138.916, 4.4983, 5.19496, 0.55 ) }
    dend_16 { pt3dadd( -139.369, 5.02926, 6.89404, 0.28 ) }
    dend_16 { pt3dadd( -139.676, 5.30696, 7.68883, 0.55 ) }
    dend_16 { pt3dadd( -140.788, 6.32318, 10.2446, 0.28 ) }
    dend_16 { pt3dadd( -141.343, 6.98976, 11.6083, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.5252, -32.7992, -6.33368, 0.55 ) }
    dend_15 { pt3dadd( -10.8478, -32.7565, -7.40173, 0.55 ) }
    dend_15 { pt3dadd( -11.1377, -32.596, -8.46835, 0.55 ) }
    dend_15 { pt3dadd( -11.4275, -32.3036, -9.80064, 0.55 ) }
    dend_15 { pt3dadd( -11.6133, -31.9803, -10.8818, 0.55 ) }
    dend_15 { pt3dadd( -12.2696, -29.153, -17.9186, 0.55 ) }
    dend_15 { pt3dadd( -12.4287, -28.3458, -19.4835, 0.55 ) }
    dend_15 { pt3dadd( -12.7022, -26.9928, -21.7763, 0.55 ) }
    dend_15 { pt3dadd( -12.9034, -25.9826, -23.3923, 0.55 ) }
    dend_15 { pt3dadd( -13.0618, -24.9114, -24.9472, 0.28 ) }
    dend_15 { pt3dadd( -13.1849, -23.1364, -27.3004, 0.55 ) }
    dend_15 { pt3dadd( -13.1698, -20.3961, -30.7528, 0.28 ) }
    dend_15 { pt3dadd( -13.2455, -20.2132, -31.0811, 0.55 ) }
    dend_15 { pt3dadd( -14.332, -19.4534, -33.198, 0.28 ) }
    dend_15 { pt3dadd( -15.3162, -19.0598, -34.5195, 0.55 ) }
    dend_15 { pt3dadd( -16.5234, -18.7727, -35.8749, 0.55 ) }
    dend_15 { pt3dadd( -18.7308, -18.4212, -38.3089, 0.55 ) }
    dend_15 { pt3dadd( -23.0499, -17.773, -43.1046, 0.55 ) }
    dend_15 { pt3dadd( -25.8927, -17.3723, -46.3824, 0.55 ) }
    dend_15 { pt3dadd( -26.8433, -17.2425, -47.5412, 0.55 ) }
    dend_15 { pt3dadd( -32.9063, -16.2894, -55.2865, 0.55 ) }
    dend_15 { pt3dadd( -34.4572, -15.9825, -57.444, 0.55 ) }
    dend_15 { pt3dadd( -35.2351, -15.799, -58.7185, 0.55 ) }
    dend_15 { pt3dadd( -36.7867, -15.4251, -61.8589, 0.55 ) }
    dend_15 { pt3dadd( -40.0681, -14.8902, -69.6787, 0.55 ) }
    dend_15 { pt3dadd( -40.8621, -14.8257, -71.8375, 0.28 ) }
    dend_15 { pt3dadd( -41.2217, -14.836, -73.1097, 0.55 ) }
    dend_15 { pt3dadd( -41.7197, -14.9222, -75.018, 0.28 ) }
    dend_15 { pt3dadd( -41.8665, -15.0278, -75.8298, 0.55 ) }
    dend_15 { pt3dadd( -41.7087, -15.6541, -78.3435, 0.28 ) }
    dend_15 { pt3dadd( -40.7271, -16.7746, -79.876, 0.55 ) }
    dend_15 { pt3dadd( -40.0872, -17.6007, -80.7722, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -39.413, -18.5441, -81.5413, 0.55 ) }
    dend_15 { pt3dadd( -38.7671, -19.5979, -82.1956, 0.28 ) }
    dend_15 { pt3dadd( -38.4985, -20.1451, -82.5004, 0.55 ) }
    dend_15 { pt3dadd( -37.8236, -21.5958, -83.1824, 0.28 ) }
    dend_15 { pt3dadd( -37.7015, -22.0239, -83.4129, 0.55 ) }
    dend_15 { pt3dadd( -37.1213, -24.4617, -84.8307, 0.28 ) }
    dend_15 { pt3dadd( -36.947, -25.5663, -85.6238, 0.55 ) }
    dend_15 { pt3dadd( -36.7286, -27.8783, -87.597, 0.28 ) }
    dend_15 { pt3dadd( -36.7005, -28.7117, -88.4299, 0.55 ) }
    dend_15 { pt3dadd( -36.6651, -31.4088, -91.396, 0.28 ) }
    dend_15 { pt3dadd( -36.6779, -32.0599, -92.1441, 0.55 ) }
    dend_15 { pt3dadd( -36.834, -34.1194, -94.5246, 0.28 ) }
    dend_15 { pt3dadd( -36.8611, -34.6115, -95.0263, 0.55 ) }
    dend_15 { pt3dadd( -36.9587, -35.9202, -96.3047, 0.28 ) }
    dend_15 { pt3dadd( -37.074, -36.6681, -97.1129, 0.55 ) }
    dend_15 { pt3dadd( -37.2179, -37.3902, -97.9774, 0.55 ) }
    dend_15 { pt3dadd( -37.4946, -38.8325, -99.6939, 0.28 ) }
    dend_15 { pt3dadd( -37.6887, -39.6969, -100.918, 0.55 ) }
    dend_15 { pt3dadd( -38.2631, -41.7135, -104.801, 0.28 ) }
    dend_15 { pt3dadd( -38.5071, -42.3213, -106.33, 0.55 ) }
    dend_15 { pt3dadd( -38.6544, -42.6934, -107.379, 0.28 ) }
    dend_15 { pt3dadd( -38.7833, -43.0155, -108.437, 0.55 ) }
    dend_15 { pt3dadd( -39.1128, -43.8689, -111.681, 0.28 ) }
    dend_15 { pt3dadd( -39.3159, -44.5444, -114.12, 0.55 ) }
    dend_15 { pt3dadd( -39.4525, -45.9271, -118.198, 0.28 ) }
    dend_15 { pt3dadd( -39.49, -46.3552, -119.479, 0.55 ) }
    dend_15 { pt3dadd( -39.4093, -47.1388, -121.858, 0.28 ) }
    dend_15 { pt3dadd( -39.3363, -47.3984, -122.626, 0.55 ) }
    dend_15 { pt3dadd( -39.0563, -47.8273, -123.778, 0.28 ) }
    dend_15 { pt3dadd( -38.7416, -48.1895, -124.751, 0.55 ) }
    dend_15 { pt3dadd( -37.6688, -49.0768, -127.237, 0.28 ) }
    dend_15 { pt3dadd( -36.3927, -49.9896, -130.051, 0.28 ) }
    dend_15 { pt3dadd( -35.6601, -50.4005, -131.411, 0.28 ) }
    dend_15 { pt3dadd( -34.9898, -50.7624, -132.828, 0.55 ) }
    dend_15 { pt3dadd( -34.0119, -51.197, -134.893, 0.28 ) }
    dend_15 { pt3dadd( -33.5598, -51.3789, -135.799, 0.83 ) }
    dend_15 { pt3dadd( -32.3336, -51.8828, -138.059, 0.28 ) }
    dend_15 { pt3dadd( -31.8501, -52.1178, -139.076, 0.55 ) }
    dend_15 { pt3dadd( -29.9082, -53.294, -143.685, 0.28 ) }
    dend_15 { pt3dadd( -29.0899, -53.8889, -146.096, 0.28 ) }
    dend_15 { pt3dadd( -28.5851, -54.3101, -147.909, 0.55 ) }
    dend_15 { pt3dadd( -28.3838, -54.5641, -149.026, 0.55 ) }
    dend_15 { pt3dadd( -28.024, -55.2518, -152.102, 0.28 ) }
    dend_15 { pt3dadd( -27.778, -55.9902, -155.039, 0.55 ) }
    dend_15 { pt3dadd( -27.5586, -56.7284, -157.72, 0.28 ) }
    dend_15 { pt3dadd( -27.452, -57.4136, -160.201, 0.55 ) }
    dend_15 { pt3dadd( -27.3541, -57.962, -162.245, 0.28 ) }
    dend_15 { pt3dadd( -27.2051, -58.3244, -163.873, 0.55 ) }
    dend_15 { pt3dadd( -26.7045, -59.0356, -167.708, 0.28 ) }
    dend_15 { pt3dadd( -26.3918, -59.4, -169.618, 0.55 ) }
    dend_15 { pt3dadd( -25.8439, -59.9626, -172.441, 0.28 ) }
    dend_15 { pt3dadd( -25.3515, -60.3709, -174.721, 0.55 ) }
    dend_15 { pt3dadd( -24.192, -61.1245, -180.043, 0.28 ) }
    dend_15 { pt3dadd( -23.8248, -61.313, -182.266, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.64718, -168.428, 118.629, 0.55 ) }
    dend_9 { pt3dadd( -7.89259, -177.672, 123.219, 0.55 ) }
    dend_9 { pt3dadd( -5.75946, -187.487, 125.588, 0.55 ) }
    dend_9 { pt3dadd( -4.45173, -197.043, 129.294, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.64718, -168.428, 118.629, 0.55 ) }
    dend_8 { pt3dadd( -7.12803, -179.096, 127.678, 0.55 ) }
    dend_8 { pt3dadd( -8.39509, -188.76, 137.901, 0.55 ) }
    dend_8 { pt3dadd( -10.7777, -196.261, 149.715, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.6581, -167.154, 117.828, 0.55 ) }
    dend_6 { pt3dadd( -12.2876, -175.95, 122.887, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.6581, -167.154, 117.828, 0.55 ) }
    dend_5 { pt3dadd( -13.9126, -174.536, 122.36, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.564428, -114.001, -0.490287, 0.83 ) }
    dend_25 { pt3dadd( -0.00656523, -117.571, -0.138738, 0.83 ) }
    dend_25 { pt3dadd( 0.569744, -120.603, 0.395741, 0.83 ) }
    dend_25 { pt3dadd( 1.1426, -123.616, 0.92702, 0.83 ) }
    dend_25 { pt3dadd( 1.68663, -126.478, 1.43156, 0.83 ) }
    dend_25 { pt3dadd( 2.52502, -130.888, 2.2091, 0.83 ) }
    dend_25 { pt3dadd( 3.35736, -135.266, 2.98102, 0.83 ) }
    dend_25 { pt3dadd( 4.08575, -138.201, 3.8897, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.564428, -114.001, -0.490287, 0.55 ) }
    dend_24 { pt3dadd( 1.14159, -116.683, -0.251987, 0.55 ) }
    dend_24 { pt3dadd( 2.53343, -118.753, -0.416502, 0.55 ) }
    dend_24 { pt3dadd( 3.53013, -120.269, -0.699919, 0.55 ) }
    dend_24 { pt3dadd( 4.48813, -122.014, -1.31251, 0.83 ) }
    dend_24 { pt3dadd( 5.50353, -123.971, -2.27821, 0.55 ) }
    dend_24 { pt3dadd( 6.49672, -125.885, -3.22279, 0.83 ) }
    dend_24 { pt3dadd( 7.50205, -127.941, -4.46885, 0.55 ) }
    dend_24 { pt3dadd( 8.10991, -129.125, -5.3054, 0.83 ) }
    dend_24 { pt3dadd( 9.98499, -132.926, -8.35787, 0.55 ) }
    dend_24 { pt3dadd( 11.2482, -135.88, -11.0078, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.65998, -78.2465, 22.9499, 0.55 ) }
    dend_20 { pt3dadd( 1.60914, -85.3592, 29.096, 0.55 ) }
    dend_20 { pt3dadd( -1.37791, -91.4111, 36.0031, 0.55 ) }
    dend_20 { pt3dadd( -4.64513, -96.5252, 43.5513, 0.55 ) }
    dend_20 { pt3dadd( -8.39679, -100.453, 51.6052, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.65998, -78.2465, 22.9499, 0.55 ) }
    dend_19 { pt3dadd( 2.1904, -87.5013, 31.7838, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.08575, -138.201, 3.8897, 0.55 ) }
    dend_27 { pt3dadd( 4.09888, -140.788, 4.42778, 0.55 ) }
    dend_27 { pt3dadd( 4.20991, -144.101, 5.19476, 0.55 ) }
    dend_27 { pt3dadd( 4.31513, -147.228, 5.90144, 0.55 ) }
    dend_27 { pt3dadd( 4.36277, -149.447, 6.37074, 0.55 ) }
    dend_27 { pt3dadd( 4.40072, -153.402, 7.14828, 0.55 ) }
    dend_27 { pt3dadd( 4.66684, -164.514, 9.03972, 0.55 ) }
    dend_27 { pt3dadd( 4.84275, -168.284, 9.51337, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 4.97165, -170.936, 9.71159, 0.55 ) }
    dend_27 { pt3dadd( 5.1341, -173.954, 9.69035, 0.55 ) }
    dend_27 { pt3dadd( 5.21095, -176.272, 9.46488, 0.55 ) }
    dend_27 { pt3dadd( 5.54585, -181.69, 8.70073, 0.55 ) }
    dend_27 { pt3dadd( 5.65266, -185.793, 8.12204, 0.55 ) }
    dend_27 { pt3dadd( 5.80086, -188.496, 7.82013, 0.55 ) }
    dend_27 { pt3dadd( 6.17592, -195.525, 7.40644, 0.55 ) }
    dend_27 { pt3dadd( 6.40688, -200.26, 7.3439, 0.55 ) }
    dend_27 { pt3dadd( 6.7503, -206.386, 7.61206, 0.55 ) }
    dend_27 { pt3dadd( 7.25668, -213.373, 8.45553, 0.55 ) }
    dend_27 { pt3dadd( 7.82071, -218.066, 9.29956, 0.55 ) }
    dend_27 { pt3dadd( 8.22494, -220.848, 9.86935, 0.55 ) }
    dend_27 { pt3dadd( 8.54953, -223.409, 10.3897, 0.55 ) }
    dend_27 { pt3dadd( 9.00847, -226.647, 10.8924, 0.55 ) }
    dend_27 { pt3dadd( 9.99615, -234.418, 11.5775, 0.55 ) }
    dend_27 { pt3dadd( 10.4757, -237.425, 11.7244, 0.55 ) }
    dend_27 { pt3dadd( 10.9278, -240.768, 11.8693, 0.55 ) }
    dend_27 { pt3dadd( 11.5637, -245.783, 12.0628, 0.55 ) }
    dend_27 { pt3dadd( 11.8726, -249.631, 12.2588, 0.55 ) }
    dend_27 { pt3dadd( 11.9491, -253.271, 12.4086, 0.55 ) }
    dend_27 { pt3dadd( 11.8646, -256.732, 12.5607, 0.55 ) }
    dend_27 { pt3dadd( 11.7255, -260.109, 12.7625, 0.55 ) }
    dend_27 { pt3dadd( 11.6403, -262.513, 12.8808, 0.55 ) }
    dend_27 { pt3dadd( 11.5194, -266.438, 12.9339, 0.55 ) }
    dend_27 { pt3dadd( 11.29, -271.127, 12.6327, 0.55 ) }
    dend_27 { pt3dadd( 11.2315, -273.398, 12.3061, 0.55 ) }
    dend_27 { pt3dadd( 11.1959, -275.385, 11.8615, 0.55 ) }
    dend_27 { pt3dadd( 11.2973, -279.131, 10.7812, 0.55 ) }
    dend_27 { pt3dadd( 11.3336, -281.5, 10.0286, 0.55 ) }
    dend_27 { pt3dadd( 11.4175, -284.429, 9.21472, 0.55 ) }
    dend_27 { pt3dadd( 11.4013, -286.49, 8.77715, 0.55 ) }
    dend_27 { pt3dadd( 11.2681, -291.855, 7.86338, 0.55 ) }
    dend_27 { pt3dadd( 11.0785, -295.884, 7.48404, 0.55 ) }
    dend_27 { pt3dadd( 10.7001, -302.143, 7.43206, 0.55 ) }
    dend_27 { pt3dadd( 10.5623, -306.209, 7.78732, 0.55 ) }
    dend_27 { pt3dadd( 10.39, -310.485, 8.30435, 0.28 ) }
    dend_27 { pt3dadd( 10.2802, -312.204, 8.58679, 0.28 ) }
    dend_27 { pt3dadd( 10.0096, -316.399, 9.66117, 0.28 ) }
    dend_27 { pt3dadd( 9.73586, -320.289, 10.9688, 0.28 ) }
    dend_27 { pt3dadd( 9.87575, -325.49, 13.2118, 0.28 ) }
    dend_27 { pt3dadd( 11.5984, -337.109, 15.1841, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 4.08575, -138.201, 3.8897, 0.55 ) }
    dend_26 { pt3dadd( 4.32162, -138.855, 5.36467, 0.55 ) }
    dend_26 { pt3dadd( 4.60833, -140.462, 8.43742, 0.55 ) }
    dend_26 { pt3dadd( 4.75763, -142.01, 11.107, 0.28 ) }
    dend_26 { pt3dadd( 4.84126, -143.758, 13.9875, 0.55 ) }
    dend_26 { pt3dadd( 4.67577, -144.874, 15.7876, 0.28 ) }
    dend_26 { pt3dadd( 4.13066, -146.887, 18.98, 0.55 ) }
    dend_26 { pt3dadd( 3.57051, -147.93, 20.3895, 0.28 ) }
    dend_26 { pt3dadd( 3.28755, -148.313, 20.9203, 0.28 ) }
    dend_26 { pt3dadd( 2.78556, -148.879, 21.8509, 0.55 ) }
    dend_26 { pt3dadd( 1.07137, -150.794, 25.4634, 0.28 ) }
    dend_26 { pt3dadd( 0.396085, -151.554, 26.9976, 0.55 ) }
    dend_26 { pt3dadd( -1.16374, -153.76, 31.5611, 0.28 ) }
    dend_26 { pt3dadd( -1.84824, -154.866, 34.0203, 0.28 ) }
    dend_26 { pt3dadd( -2.53225, -156.267, 37.0514, 0.55 ) }
    dend_26 { pt3dadd( -3.18066, -158.403, 41.4835, 0.28 ) }
    dend_26 { pt3dadd( -3.2079, -158.685, 42.0712, 0.55 ) }
    dend_26 { pt3dadd( -3.15597, -160.05, 44.9233, 0.28 ) }
    dend_26 { pt3dadd( -3.12398, -160.175, 45.1752, 0.55 ) }
    dend_26 { pt3dadd( -2.89913, -161.575, 47.3835, 0.28 ) }
    dend_26 { pt3dadd( -2.85275, -162.326, 48.442, 0.55 ) }
    dend_26 { pt3dadd( -2.56399, -167.981, 57.2243, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.39679, -100.453, 51.6052, 0.55 ) }
    dend_22 { pt3dadd( -8.36956, -106.016, 63.6406, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.39679, -100.453, 51.6052, 0.55 ) }
    dend_21 { pt3dadd( -11.8344, -105.825, 56.8747, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 5
    dend_60 nseg = 5
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_8 nseg = 3
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_BP_6687408de7_0_0


