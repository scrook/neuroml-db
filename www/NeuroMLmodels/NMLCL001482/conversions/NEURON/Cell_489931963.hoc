// Cell: Cell_489931963
/*
{
  "id" : "Cell_489931963",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "314.679, 733.138, 10.08, 12.584", "320.971, 733.138, 10.08, 12.584", "327.263, 733.138, 10.08, 12.584" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "320.971, 733.138, 10.08, 1.0", "326.812, 746.954, 10.08, 1.0", "332.654, 760.77, 10.08, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "317.16, 736.004, 17.6783, 0.7754", "316.35, 736.616, 18.9613, 0.3988", "315.54, 737.302, 19.9994, 0.4456", "314.824, 738.126, 20.8288, 0.6178", "314.137, 738.998, 21.4918, 0.7372", "313.718, 740.033, 22.0006, 0.8082", "313.493, 741.141, 22.3867, 0.6992", "313.263, 742.255, 22.6871, 0.564", "313.181, 743.39, 22.9304, 0.5556", "313.339, 744.515, 23.1361, 0.6578", "313.564, 745.635, 23.3174, 0.7012", "313.859, 746.738, 23.4698, 0.765", "314.169, 747.839, 23.5724, 0.813", "314.432, 748.952, 23.6145, 0.8582", "314.489, 750.091, 23.5973, 0.8916", "314.621, 751.226, 23.537, 0.9676", "314.952, 752.317, 23.4472, 1.0052", "315.246, 753.421, 23.3413, 0.9834", "315.46, 754.545, 23.2165, 0.8982", "315.607, 755.676, 23.0549, 0.6942", "315.681, 756.814, 22.8491, 0.5052", "315.953, 757.918, 22.5968, 0.4302", "316.549, 758.88, 22.3068, 0.5368", "317.112, 759.865, 21.9568, 0.5614", "317.031, 760.987, 21.5805, 0.5124", "316.695, 762.071, 21.2445, 0.5504", "316.431, 763.178, 20.9761, 0.6614", "316.331, 764.316, 20.8005, 0.6832", "316.313, 765.46, 20.7259, 0.7094", "316.316, 766.604, 20.7486, 0.8168", "316.366, 767.745, 20.8645, 0.9592", "316.577, 768.867, 21.0238, 1.0486", "316.769, 769.993, 21.1912, 0.9146" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "322.616, 728.23, 13.0662, 0.637", "322.974, 727.165, 13.5939, 0.3568", "323.285, 726.085, 14.1126, 0.4458", "323.516, 724.985, 14.6301, 0.5066", "324.216, 724.111, 15.0829, 0.5058", "325.171, 723.493, 15.3803, 0.5596", "326.047, 722.761, 15.5154, 0.8046", "326.994, 722.118, 15.4963, 1.0144", "327.806, 721.316, 15.3485, 0.8022" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "325.078, 736.487, 11.7917, 0.5524", "325.959, 737.205, 12.1027, 0.6086", "326.841, 737.922, 12.4097, 0.5474", "327.723, 738.642, 12.7022, 0.507", "328.621, 739.342, 12.9826, 0.6258", "329.617, 739.891, 13.2449, 0.5934", "330.685, 740.29, 13.4587, 0.4838", "331.522, 741.062, 13.6293, 0.4566", "332.559, 741.534, 13.8133, 0.4286", "333.696, 741.464, 14.0176, 0.526", "334.699, 741.965, 14.2632, 0.445", "335.181, 742.996, 14.5246, 0.4256", "335.889, 743.867, 14.8183, 0.4844", "336.89, 744.392, 15.1222, 0.5424", "337.986, 744.683, 15.4755, 0.461", "339.086, 744.953, 15.8079, 0.423", "340.218, 745.071, 16.1215, 0.362", "341.31, 745.271, 16.4297, 0.3604", "342.26, 745.897, 16.7289, 0.3986", "343.21, 746.514, 17.0419, 0.501", "344.268, 746.879, 17.4283, 0.5538", "345.397, 746.904, 17.8144, 0.4926", "346.521, 746.746, 18.1365, 0.5104", "347.641, 746.548, 18.4152, 0.6072", "348.761, 746.563, 18.665, 0.6498", "349.837, 746.93, 18.9003, 0.6998", "350.898, 747.332, 19.1505, 0.78", "352.01, 747.437, 19.4377, 0.8244", "353.129, 747.232, 19.753, 0.699", "354.181, 747.341, 20.1015, 0.4626", "355.204, 747.811, 20.484, 0.3364", "356.264, 747.766, 20.8615, 0.3112", "357.035, 747.019, 21.1791, 0.3546", "357.757, 746.168, 21.3822, 0.3688", "358.748, 745.624, 21.4726, 0.347", "359.81, 745.197, 21.5083, 0.3458", "360.887, 744.818, 21.556, 0.3858", "361.864, 744.263, 21.6717, 0.4922", "362.761, 743.559, 21.8649, 0.6564", "363.685, 742.89, 22.1145, 0.6776", "364.75, 742.578, 22.396, 0.5878", "365.857, 742.33, 22.6984, 0.596", "366.975, 742.369, 23.0272, 0.6454", "367.933, 742.922, 23.381, 0.5814", "369.012, 743.113, 23.7457, 0.5816", "370.146, 743.054, 24.0729, 0.5134", "371.239, 743.353, 24.3477, 0.5496", "372.292, 743.79, 24.601, 0.6154", "373.354, 744.203, 24.8328, 0.5992", "374.411, 744.631, 25.0502, 0.5854", "375.432, 745.135, 25.2899, 0.426", "376.438, 745.674, 25.5111, 0.3346", "377.483, 746.13, 25.7359, 0.2888", "378.499, 746.645, 25.9718, 0.2988", "379.417, 747.321, 26.2177, 0.3216", "380.402, 747.895, 26.4669, 0.3514", "381.535, 747.992, 26.7182, 0.4684", "382.674, 747.972, 26.9867, 0.3868", "383.798, 748.155, 27.2491, 0.3132", "384.837, 748.624, 27.4831, 0.254", "385.872, 749.105, 27.6797, 0.2288", "386.903, 749.583, 28.0, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "319.181, 738.603, 12.1857, 0.5672", "318.826, 739.682, 12.5379, 0.3704", "318.471, 740.761, 12.8602, 0.475", "318.122, 741.844, 13.1516, 0.5356", "318.232, 742.969, 13.4086, 0.6794", "318.057, 744.091, 13.6228, 0.947", "317.142, 744.739, 13.8021, 1.0384", "316.197, 745.381, 13.9506, 0.9756", "315.393, 746.192, 14.086, 0.9562", "315.182, 747.31, 14.2219, 0.8632", "315.158, 748.452, 14.3754, 0.9816", "315.101, 749.592, 14.5537, 0.917", "314.914, 750.718, 14.7434, 0.8378", "314.685, 751.836, 14.9261, 0.9302", "314.26, 752.896, 15.073, 0.856", "313.835, 753.958, 15.1651, 0.772" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "325.096, 729.628, 8.3343, 0.441", "325.966, 728.89, 8.0835, 0.4968", "326.891, 728.225, 7.8802, 0.4456", "327.782, 727.51, 7.7439, 0.423", "328.455, 726.586, 7.6616, 0.4428", "329.065, 725.619, 7.6186, 0.6364", "329.72, 724.682, 7.5963, 0.6922", "330.759, 724.21, 7.5749, 0.9396", "331.882, 723.994, 7.5315, 1.1282", "332.971, 723.645, 7.4673, 1.1894" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "320.605, 727.815, 9.3675, 0.8028", "320.527, 726.676, 9.2356, 0.3932", "320.448, 725.535, 9.1089, 0.5118", "320.37, 724.394, 8.9876, 0.6324", "320.293, 723.254, 8.8716, 0.7734", "320.166, 722.119, 8.7626, 0.9374", "319.963, 720.993, 8.667, 0.8826", "319.805, 719.862, 8.5852, 0.856", "319.674, 718.726, 8.501, 0.863", "319.827, 717.6, 8.3841, 0.9604", "320.568, 716.762, 8.2363, 0.9702", "321.36, 715.938, 8.0758, 1.0536", "321.86, 714.917, 7.9134, 0.975", "322.412, 713.917, 7.7764, 0.9214", "322.938, 712.901, 7.6878, 0.9318", "323.634, 711.995, 7.6618, 0.8968", "324.037, 710.927, 7.7092, 0.9022", "324.093, 709.787, 7.8272, 0.775", "323.865, 708.669, 8.0284, 0.7692" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "315.872, 736.232, 8.4624, 0.3242", "314.782, 736.186, 8.1134, 0.3738", "313.659, 736.026, 7.7611, 0.451", "312.597, 736.406, 7.4042, 0.668", "311.833, 737.238, 7.0218, 0.6948", "311.048, 738.054, 6.6208, 0.5582", "310.36, 738.874, 5.6308, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "316.394, 729.524, 7.9695, 1.004", "315.344, 729.746, 7.6807, 0.7806", "314.241, 730.038, 7.4895, 0.6744", "313.132, 729.81, 7.3563, 0.7692", "312.274, 729.07, 7.2536, 0.879", "311.369, 728.371, 7.1727, 0.9102", "310.43, 727.72, 7.0977, 0.8918", "309.479, 727.084, 7.0137, 0.954", "308.475, 726.538, 6.9038, 0.8034", "307.455, 726.027, 6.7339, 0.7556", "307.639, 724.906, 6.4877, 0.5114", "307.456, 723.995, 6.236, 0.4262", "306.586, 723.328, 6.0803, 0.475", "306.147, 722.29, 5.9858, 0.5898", "306.004, 721.157, 5.9495, 0.654", "305.913, 720.019, 5.9508, 0.7644", "305.622, 718.923, 5.9669, 0.7344", "305.138, 717.886, 5.9903, 0.7042", "304.637, 716.858, 6.0324, 0.7962", "304.124, 715.835, 6.1079, 0.8908", "303.614, 714.812, 6.2275, 0.8712", "303.167, 713.766, 6.3914, 0.7162", "303.049, 712.664, 6.5829, 0.591", "303.38, 711.581, 6.778, 0.5664", "303.796, 710.521, 6.9626, 0.55", "304.018, 709.407, 7.134, 0.632", "303.999, 708.272, 7.2964, 0.6688", "303.788, 707.151, 7.4546, 0.5732", "303.43, 706.071, 7.6093, 0.5076", "302.905, 705.06, 7.7568, 0.478", "302.247, 704.13, 7.8949, 0.4136", "301.46, 703.306, 8.0213, 0.3938", "300.587, 702.568, 8.1355, 0.4592", "299.726, 701.818, 8.2439, 0.5422", "298.943, 700.987, 8.3536, 0.5126", "298.249, 700.08, 8.4589, 0.4926", "297.523, 699.203, 8.5555, 0.4742", "296.799, 698.326, 8.6482, 0.4046", "296.439, 697.274, 8.7349, 0.3958", "296.297, 696.139, 8.8161, 0.3984", "296.05, 695.026, 8.8943, 0.4138", "295.701, 693.937, 8.9676, 0.41", "295.258, 692.885, 9.0334, 0.4134", "294.718, 691.878, 9.0891, 0.4124", "294.224, 690.849, 9.1349, 0.4016", "293.835, 689.774, 9.172, 0.4706", "293.376, 688.73, 9.2015, 0.4998", "292.755, 687.774, 9.2245, 0.4988", "292.082, 686.85, 9.2432, 0.512", "291.412, 685.922, 9.2615, 0.5374", "290.807, 684.953, 9.2678, 0.4786", "290.211, 683.978, 9.2437, 0.365", "289.814, 682.926, 9.1955, 0.2952", "289.598, 681.803, 9.1381, 0.2748", "289.38, 680.68, 9.0792, 0.275", "289.202, 679.551, 9.025, 0.2752", "289.009, 678.424, 8.9798, 0.2756", "288.763, 677.307, 8.9431, 0.2768", "288.349, 676.248, 8.909, 0.2788", "287.721, 675.299, 8.8724, 0.2824", "286.921, 674.487, 8.8297, 0.2888", "285.968, 673.867, 8.7775, 0.3012", "284.976, 673.299, 8.7139, 0.3238", "284.057, 672.624, 8.6328, 0.3678", "283.095, 672.014, 8.5327, 0.4408", "282.136, 671.398, 8.42, 0.6202", "281.316, 670.61, 8.2965, 0.7414", "280.501, 669.811, 8.167, 0.623", "279.542, 669.206, 8.0413, 0.4502", "278.569, 668.609, 7.9292, 0.3706", "277.826, 667.763, 7.8274, 0.4416", "277.141, 666.849, 7.7397, 0.4256", "276.18, 666.295, 7.6731, 0.3622", "275.099, 665.921, 7.6309, 0.3214", "273.997, 665.616, 7.6138, 0.3316", "272.869, 665.437, 7.6227, 0.394", "271.807, 665.046, 7.6626, 0.4314", "270.861, 664.411, 7.7253, 0.3882", "269.928, 663.752, 7.8003, 0.3318", "268.885, 663.305, 7.8805, 0.3094", "267.761, 663.129, 7.9637, 0.3284", "266.922, 662.441, 8.0465, 0.369", "265.97, 661.828, 8.1292, 0.4848", "264.963, 661.286, 8.2184, 0.4968", "263.913, 660.837, 8.3229, 0.4074", "263.027, 660.135, 8.4593, 0.3134", "262.548, 659.111, 8.6099, 0.282", "261.764, 658.295, 8.8093, 0.283", "260.688, 657.922, 9.0166, 0.29", "259.782, 657.23, 9.2212, 0.303", "258.815, 656.624, 9.4131, 0.3286", "258.033, 655.792, 9.5839, 0.37", "257.185, 655.027, 9.7421, 0.4738", "256.313, 654.288, 9.8857, 0.5364", "255.491, 653.494, 10.016, 0.5968", "254.749, 652.625, 10.1355, 0.5182", "254.063, 651.711, 10.2452, 0.386" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "332.654, 760.77, 10.08, 1.0", "338.495, 774.586, 10.08, 1.0", "344.336, 788.402, 10.08, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "316.769, 769.993, 21.1912, 0.9146", "316.014, 770.994, 21.6803, 0.4992", "315.26, 771.852, 21.8504, 0.4042", "314.769, 772.881, 22.0428, 0.4034", "314.537, 773.996, 22.2852, 0.3434", "314.404, 775.126, 22.5667, 0.317", "314.284, 776.257, 22.872, 0.3", "314.34, 777.389, 23.2336, 0.3474", "314.312, 778.521, 23.644, 0.2788", "314.038, 779.554, 24.64, 0.2288" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "316.769, 769.993, 21.1912, 0.9146", "316.882, 770.656, 21.3318, 0.8212", "317.092, 771.778, 21.5127, 0.6752", "317.417, 772.868, 21.621, 0.5382", "317.757, 773.954, 21.6976, 0.4276", "318.006, 775.07, 21.7312, 0.4282", "318.207, 776.195, 21.7417, 0.495", "318.387, 777.324, 21.7382, 0.537", "318.504, 778.458, 21.7316, 0.5464", "318.423, 779.595, 21.7341, 0.5572", "318.119, 780.69, 21.754, 0.4998", "317.685, 781.749, 21.7882, 0.4008", "317.348, 782.837, 21.8322, 0.3566", "317.147, 783.961, 21.8861, 0.3932", "317.102, 785.1, 21.9526, 0.4496", "317.239, 786.232, 22.0347, 0.44", "317.483, 787.349, 22.1381, 0.4134", "317.794, 788.447, 22.2693, 0.458", "318.101, 789.548, 22.4344, 0.5434", "318.009, 790.637, 22.6455, 0.6378", "317.731, 791.738, 22.8928, 0.6704", "317.689, 792.869, 23.1565, 0.6694", "317.595, 793.997, 23.4287, 0.7372", "317.271, 795.083, 23.7076, 0.7554", "317.128, 796.194, 24.0008, 0.6654", "317.479, 797.244, 24.3129, 0.5292", "317.437, 798.308, 24.6219, 0.4932", "316.794, 799.212, 24.9066, 0.5466", "315.985, 800.015, 25.1645, 0.5122", "315.251, 800.885, 25.3867, 0.461", "314.618, 801.833, 25.5589, 0.499", "314.01, 802.801, 25.6697, 0.614", "313.505, 803.824, 25.7169, 0.6606", "313.122, 804.901, 25.7051, 0.6858", "312.77, 805.988, 25.6432, 0.6844", "312.343, 807.049, 25.5394, 0.5944", "311.891, 808.098, 25.4076, 0.5554", "311.44, 809.148, 25.2697, 0.5974", "311.049, 810.221, 25.1425, 0.622", "310.655, 811.294, 25.0366, 0.5072", "310.085, 812.278, 24.9518, 0.385", "309.449, 813.228, 24.8812, 0.3366", "308.864, 814.21, 24.8156, 0.3642", "308.472, 815.279, 24.7441, 0.4348", "308.15, 816.376, 24.6644, 0.6014", "307.807, 817.467, 24.5893, 0.738", "307.405, 818.537, 24.5309, 0.83", "306.876, 819.548, 24.4887, 0.743", "306.283, 820.526, 24.4607, 0.7458", "305.657, 821.484, 24.4449, 0.813", "304.964, 822.393, 24.4312, 0.904", "304.237, 823.276, 24.4045, 1.0078", "303.582, 824.212, 24.3527, 1.1168", "302.833, 825.07, 24.2486, 1.0952", "301.841, 825.609, 24.0961, 1.115", "300.819, 826.119, 23.9288, 1.0996", "299.819, 826.67, 23.7607, 0.9254", "298.831, 827.241, 23.5969, 0.8064", "297.721, 827.412, 23.4306, 0.7812", "296.632, 827.734, 23.2649, 0.647", "295.73, 828.417, 23.0831, 0.5764", "295.478, 829.495, 22.8516, 0.7024", "295.461, 830.633, 22.5819, 0.8968", "295.398, 831.768, 22.273, 0.9534", "294.892, 832.776, 21.9369, 1.0038", "293.948, 833.388, 21.6014, 1.0138", "292.919, 833.866, 21.2723, 0.9936", "291.842, 834.228, 20.9416, 0.8988", "290.794, 834.666, 20.6211, 0.7716", "290.098, 835.55, 20.2943, 0.9164", "289.802, 836.64, 19.9374, 1.096", "289.494, 837.731, 19.5411, 1.1298", "288.93, 838.709, 19.1224, 1.075", "288.2, 839.572, 18.7012, 1.012", "287.346, 840.315, 18.2886, 0.9088", "286.462, 841.024, 17.9062, 0.8836", "285.576, 841.735, 17.5776, 0.7092", "284.719, 842.484, 17.3068, 0.7962", "283.944, 843.321, 17.0925, 0.7502", "283.071, 844.057, 16.919, 0.8194", "282.014, 844.489, 16.7738, 0.8496", "280.987, 844.989, 16.6446, 0.9382", "280.032, 845.619, 16.5344, 0.9434", "279.158, 846.355, 16.4334, 0.812", "278.353, 847.166, 16.3273, 0.7924", "277.514, 847.942, 16.1992, 0.81", "276.641, 848.68, 16.0374, 0.8108", "275.842, 849.493, 15.8372, 0.9686", "275.299, 850.494, 15.5716, 0.953", "274.84, 851.534, 15.3054, 0.8028", "274.129, 852.423, 15.039, 0.7186", "273.456, 853.341, 14.7609, 0.7856", "272.65, 854.142, 14.4678, 0.8956", "271.785, 854.881, 14.1777, 0.8794", "270.946, 855.653, 13.9107, 0.8454", "270.138, 856.453, 13.6737, 0.8202", "269.179, 857.067, 13.4566, 0.8176", "268.109, 857.458, 13.2482, 0.8124", "266.981, 857.635, 13.0515, 0.802", "265.848, 857.754, 12.8611, 0.787", "264.759, 858.096, 12.6627, 0.7388", "263.654, 858.371, 12.4384, 0.8002", "262.632, 858.84, 12.1556, 0.7408", "261.839, 859.579, 11.8315, 0.6166", "260.722, 859.452, 11.4784, 0.634", "259.69, 858.996, 11.1712, 0.6352", "258.797, 858.3, 10.8727, 0.6744", "258.001, 857.486, 10.6014, 0.7274", "257.286, 856.606, 10.3151, 0.7348", "256.194, 857.682, 9.6447, 0.7298", "255.234, 857.638, 9.3051, 0.8984", "254.254, 857.073, 8.999, 1.0162", "253.211, 856.636, 8.7076, 1.0348", "252.107, 856.726, 8.4311, 0.9646", "251.013, 857.039, 8.1572, 0.803", "249.894, 856.982, 7.8944, 0.719", "248.771, 856.787, 7.6544, 0.6422", "247.653, 856.943, 7.4536, 0.6066", "246.527, 857.137, 7.3162, 0.6278", "245.393, 857.065, 7.2348, 0.5626", "244.331, 857.429, 7.2065, 0.6072", "243.203, 857.525, 7.2216, 0.571", "242.15, 857.118, 7.2673, 0.6626", "241.045, 856.843, 7.3349, 0.7198", "240.029, 856.332, 7.4045, 0.7452", "238.92, 856.093, 7.4743, 0.648", "237.794, 855.892, 7.5746, 0.707", "236.675, 855.659, 7.7083, 0.7826", "235.538, 855.583, 7.8883, 0.8728", "234.423, 855.798, 8.1288, 0.8244", "234.314, 856.83, 8.451, 0.7128", "234.513, 857.947, 8.787, 0.6534", "234.515, 859.082, 9.1162, 0.7434", "234.345, 860.205, 9.4392, 0.6452", "234.168, 861.329, 9.7137, 0.6864", "234.212, 862.469, 9.9291, 0.7272", "234.094, 863.588, 10.1123, 0.5714", "233.265, 864.373, 10.2892, 0.4858", "232.37, 865.068, 10.4806, 0.5452", "231.262, 865.304, 10.6536, 0.6818", "230.375, 865.986, 10.8154, 0.7266", "230.105, 867.089, 10.9959, 0.6886", "230.145, 868.229, 11.1516, 0.5552", "229.903, 869.316, 11.2985, 0.5634", "229.092, 870.11, 11.4437, 0.4972", "228.126, 870.719, 11.581, 0.5294", "227.273, 871.464, 11.707, 0.5538", "226.581, 872.364, 11.8172, 0.5858", "225.68, 873.065, 11.8825, 0.5092", "224.708, 873.668, 11.8906, 0.531", "223.765, 874.315, 11.8089, 0.6608", "222.81, 874.935, 11.604, 0.7346", "221.81, 875.479, 11.3436, 0.7116", "220.879, 876.117, 11.0699, 0.6414", "219.968, 876.779, 10.8159, 0.6274", "219.12, 877.455, 10.4995, 0.633", "218.682, 878.511, 10.3835, 0.4792", "218.255, 879.571, 10.3557, 0.3784", "217.776, 880.611, 10.3829, 0.398", "216.869, 881.304, 10.4378, 0.356", "216.099, 882.146, 10.64, 0.4576" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "327.806, 721.316, 15.3485, 0.8022", "327.064, 721.588, 15.696, 1.0944", "326.55, 721.573, 18.0254, 0.9738", "325.763, 721.122, 19.5502, 0.8118", "324.858, 721.31, 21.1071, 0.5312", "324.039, 720.916, 22.3584, 0.4454", "323.713, 720.01, 23.7448, 0.3906", "323.061, 719.832, 25.2852, 0.4578", "322.062, 720.093, 26.4802, 0.4994", "321.019, 720.182, 27.5794, 0.6714", "319.965, 720.164, 28.6689, 0.592", "319.158, 719.561, 29.755, 0.4732", "318.643, 718.62, 30.6706, 0.4532", "318.409, 717.56, 31.5115, 0.4674", "318.36, 716.468, 32.3168, 0.5794", "317.999, 715.44, 33.0876, 0.6002", "317.371, 714.539, 33.8271, 0.63", "316.434, 713.992, 34.5957, 0.5296", "315.344, 714.1, 35.2817, 0.499", "314.29, 713.784, 35.9587, 0.6714", "313.496, 712.992, 36.5196, 0.6328", "312.821, 712.091, 37.0118, 0.7256", "312.188, 711.154, 37.4396, 0.7566", "311.511, 710.245, 37.814, 0.8256", "310.757, 709.396, 38.1548, 0.656", "309.958, 708.589, 38.484, 0.676", "309.085, 707.866, 38.8074, 0.67", "307.954, 707.811, 39.146, 0.632", "306.876, 708.162, 39.4797, 0.4382", "305.896, 708.738, 39.8068, 0.3246", "304.935, 709.346, 40.1106, 0.279", "303.995, 709.988, 40.3763, 0.283", "303.144, 710.748, 40.5992, 0.289", "302.292, 711.507, 40.7775, 0.305", "301.439, 712.268, 40.9234, 0.3004", "300.605, 712.96, 41.2899, 0.2288", "299.949, 712.712, 43.1936, 0.2288", "299.728, 712.14, 45.08, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "327.806, 721.316, 15.3485, 0.8022", "328.35, 720.445, 15.1255, 0.5678", "329.108, 719.594, 14.883, 0.487", "329.925, 718.798, 14.6782, 0.6632", "330.778, 718.039, 14.5479, 0.7896", "331.645, 717.291, 14.5054, 0.8548", "332.667, 716.779, 14.5309, 0.8822", "333.69, 716.268, 14.5994, 0.929", "334.669, 715.676, 14.6864, 1.0348", "335.643, 715.077, 14.7729, 1.1366", "336.528, 714.354, 14.8494, 1.0966", "337.399, 713.611, 14.9157, 0.9912", "338.29, 712.894, 14.9809, 0.9508", "339.182, 712.18, 15.0528, 1.0348", "340.001, 711.381, 15.1402, 1.1034", "340.81, 710.574, 15.246, 1.198" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "313.835, 753.958, 15.1651, 0.772", "313.641, 753.718, 16.9039, 0.461", "312.582, 753.495, 17.3215, 0.4248", "311.702, 754.13, 17.4696, 0.4402", "310.66, 753.724, 17.6023, 0.4222", "309.935, 752.842, 17.7262, 0.4656", "309.141, 752.022, 17.8528, 0.6032", "308.247, 751.312, 18.0067, 0.529", "307.406, 750.693, 18.2731, 0.5158", "306.656, 750.411, 18.8241, 0.5622", "306.019, 749.508, 19.3805, 0.4944", "305.09, 748.976, 20.0571, 0.5016", "304.016, 749.039, 20.7813, 0.5904", "302.93, 749.226, 21.534, 0.7074", "301.888, 749.543, 22.337, 0.834", "300.943, 750.053, 23.2733, 0.7164", "300.873, 751.002, 24.3262, 0.5942", "299.934, 751.484, 25.2022, 0.6002" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "313.835, 753.958, 15.1651, 0.772", "313.79, 755.055, 15.1801, 0.5834", "313.733, 756.197, 15.1108, 0.6234" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "332.971, 723.645, 7.4673, 1.1894", "334.681, 723.397, 7.3534, 0.77", "335.813, 723.23, 7.3281, 0.7142", "336.94, 723.036, 7.3427, 0.6784", "338.067, 722.839, 7.4016, 0.7452", "339.193, 722.641, 7.4826, 0.8974", "340.319, 722.442, 7.5665, 1.0162", "341.438, 722.207, 7.6425, 0.8744", "342.551, 721.949, 7.7048, 0.827", "343.563, 721.413, 7.7611, 0.8218", "344.493, 720.749, 7.8256, 0.8634", "345.513, 720.234, 7.9021, 0.9128", "346.552, 719.759, 7.9908, 0.897", "347.686, 719.614, 8.0905, 0.709", "348.828, 719.595, 8.1993, 0.7276", "349.971, 719.571, 8.3184, 0.7678", "351.097, 719.384, 8.4931, 0.8066", "352.223, 719.187, 8.6407, 0.7896", "353.344, 718.973, 8.8154, 0.7708", "354.467, 718.78, 9.0241, 0.6746", "355.602, 718.68, 9.2611, 0.5014", "356.736, 718.591, 9.5022, 0.4428", "357.837, 718.323, 9.726, 0.4762", "358.849, 717.812, 9.9319, 0.4978", "359.828, 717.231, 10.1139, 0.5304", "360.831, 716.687, 10.25, 0.5786", "361.534, 715.872, 10.3229, 0.5652", "362.099, 714.905, 10.3338, 0.5362", "362.92, 714.112, 10.2981, 0.5022", "363.722, 713.303, 10.2257, 0.4526", "364.417, 712.395, 10.1272, 0.4162", "364.974, 711.404, 10.0287, 0.4", "365.434, 710.358, 9.9545, 0.3774", "366.044, 709.405, 9.9041, 0.3952", "366.938, 708.729, 9.8699, 0.492", "367.984, 708.265, 9.8393, 0.5924", "369.051, 707.855, 9.8, 0.611", "370.132, 707.482, 9.7517, 0.6436", "371.016, 706.838, 9.7084, 0.5894", "371.488, 705.82, 9.6877, 0.4584", "371.857, 704.741, 9.6887, 0.4128", "372.546, 703.871, 9.6988, 0.4076", "373.527, 703.302, 9.707, 0.436", "374.467, 702.664, 9.7166, 0.4418", "375.421, 702.04, 9.7311, 0.4818", "376.483, 701.635, 9.7476, 0.5398", "377.569, 701.278, 9.7737, 0.5896", "378.497, 700.644, 9.8254, 0.6544", "379.03, 699.662, 9.9009, 0.6828", "379.3, 698.554, 9.9869, 0.6188", "379.485, 697.426, 10.0752, 0.5278", "379.64, 696.293, 10.1615, 0.4246", "379.942, 695.195, 10.2502, 0.3746", "380.413, 694.156, 10.3527, 0.3836", "380.963, 693.154, 10.4833, 0.4952", "381.524, 692.16, 10.6515, 0.533", "382.111, 691.182, 10.8667, 0.4802", "382.814, 690.29, 11.131, 0.4412", "383.759, 689.688, 11.4397, 0.5334", "384.866, 689.615, 11.7804, 0.6034", "386.0, 689.656, 12.1319, 0.5114", "387.135, 689.632, 12.4709, 0.4214", "388.237, 689.381, 12.8118, 0.4128", "389.197, 688.791, 13.1331, 0.547", "389.974, 687.967, 13.4308, 0.6212", "390.058, 686.879, 13.7593, 0.5488", "389.793, 685.775, 14.0683, 0.3932", "389.688, 684.644, 14.3776, 0.3044", "389.697, 683.508, 14.6912, 0.2762", "389.835, 682.38, 15.0154, 0.2754", "390.34, 681.364, 15.3338, 0.2762", "391.08, 680.499, 15.6088, 0.2776", "391.615, 679.492, 15.8379, 0.2802", "392.739, 679.302, 16.0053, 0.285", "393.851, 679.038, 16.1139, 0.294", "394.885, 678.549, 16.1742, 0.3102", "395.902, 678.026, 16.2002, 0.3428", "396.919, 677.502, 16.2053, 0.3914", "398.055, 677.362, 16.1983, 0.537", "399.199, 677.361, 16.1843, 0.54", "400.339, 677.285, 16.1639, 0.468", "401.479, 677.177, 16.137, 0.4816", "402.556, 676.795, 16.102, 0.4792", "403.58, 676.284, 16.0558, 0.6092", "404.653, 675.89, 15.9953, 0.653", "405.733, 675.513, 15.9177, 0.5498" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "332.971, 723.645, 7.4673, 1.1894", "333.494, 725.105, 7.9097, 0.3496", "333.982, 726.127, 7.8709, 0.5322", "334.007, 727.228, 7.8045, 0.5474", "334.168, 728.282, 7.7329, 0.5192", "335.133, 728.288, 7.7385, 0.5288", "335.651, 729.109, 7.8744, 0.5906", "335.915, 730.218, 8.0654, 0.4786", "336.482, 731.209, 8.2401, 0.461", "336.944, 732.254, 8.3507, 0.4066", "337.254, 733.352, 8.309, 0.4328", "337.866, 734.315, 8.2177, 0.5538", "338.63, 735.166, 8.1133, 0.5534", "339.301, 736.085, 7.9462, 0.6642", "340.053, 736.864, 7.7027, 0.7444", "340.993, 737.482, 7.4532, 0.809", "341.849, 738.236, 7.273, 0.8372", "342.53, 739.136, 7.1497, 0.7288", "343.058, 740.15, 7.0823, 0.688", "343.947, 740.825, 7.108, 0.863", "344.463, 741.819, 7.1577, 0.9962", "344.832, 742.901, 7.1996, 1.0812", "345.461, 743.851, 7.2279, 0.8318", "346.297, 744.625, 7.242, 0.5846", "347.149, 745.388, 7.2102, 0.4792", "347.614, 746.424, 7.132, 0.6244", "348.026, 747.49, 7.0095, 0.7316", "348.369, 748.58, 6.8649, 0.762", "348.566, 749.704, 6.7167, 0.6974", "348.854, 750.811, 6.5978, 0.675", "349.276, 751.872, 6.5316, 0.7788", "349.819, 752.879, 6.5078, 0.7376", "350.471, 753.818, 6.5011, 0.7432", "351.162, 754.73, 6.4635, 0.7234", "351.909, 755.595, 6.3381, 0.633", "352.655, 756.459, 6.1437, 0.7206", "353.401, 757.321, 5.9009, 0.7894", "354.132, 758.168, 5.32, 0.9152" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "323.865, 708.669, 8.0284, 0.7692", "324.422, 707.438, 8.5999, 0.2882", "325.077, 706.5, 8.5225, 0.3684", "325.603, 705.492, 8.493, 0.4722", "326.04, 704.435, 8.497, 0.5282", "326.533, 703.403, 8.5208, 0.5452", "327.103, 702.413, 8.5333, 0.6244", "327.722, 701.451, 8.5121, 0.6194", "328.35, 700.495, 8.4416, 0.4864", "328.948, 699.523, 8.28, 0.35", "329.251, 698.451, 8.0394, 0.2912", "329.215, 697.318, 7.7988, 0.2864", "329.285, 696.19, 7.6238, 0.2974", "329.376, 695.06, 7.3373, 0.321", "329.509, 693.927, 7.1207, 0.386", "329.644, 692.794, 6.9272, 0.3594", "329.779, 691.66, 6.7463, 0.3418", "329.914, 690.526, 6.5757, 0.3774", "330.047, 689.392, 6.4207, 0.3416", "330.533, 688.356, 6.3211, 0.314", "331.052, 687.338, 6.2569, 0.3", "331.571, 686.319, 6.2194, 0.324", "332.09, 685.298, 6.2009, 0.3556", "332.584, 684.266, 6.1944, 0.4756", "333.013, 683.206, 6.1939, 0.3996", "333.442, 682.146, 6.1939, 0.337", "333.87, 681.085, 6.1939, 0.2966", "334.298, 680.024, 6.1939, 0.3134", "334.728, 678.964, 6.1939, 0.356", "335.156, 677.904, 6.1939, 0.3814", "335.586, 676.843, 6.1939, 0.6864" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "323.865, 708.669, 8.0284, 0.7692", "323.598, 707.682, 8.3703, 0.7568", "323.159, 706.63, 8.5907, 0.6858", "322.55, 705.667, 8.7867, 0.6514", "321.78, 704.826, 8.9667, 0.706", "321.085, 703.92, 9.1082, 0.7226", "320.547, 702.914, 9.1951, 0.8038", "320.423, 701.782, 9.2172, 0.8742", "320.25, 700.652, 9.1957, 0.987", "319.794, 699.605, 9.146, 1.036", "319.395, 698.534, 9.0891, 1.0342", "318.806, 697.554, 9.0105, 0.984", "318.279, 696.54, 8.9117, 0.8704", "317.706, 695.552, 8.7738, 0.7512", "317.042, 694.622, 8.6269, 0.7532", "316.775, 693.512, 8.4902, 0.8142", "316.802, 692.372, 8.3084, 0.6738" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "254.063, 651.711, 10.2452, 0.386", "253.746, 651.023, 10.5978, 0.4448", "253.572, 649.902, 10.6638, 0.3728", "253.602, 648.76, 10.6578, 0.308", "253.688, 647.62, 10.6506, 0.278", "253.756, 646.478, 10.6401, 0.2746", "253.781, 645.334, 10.625, 0.2746", "253.878, 644.194, 10.6047, 0.2746", "254.117, 643.077, 10.5773, 0.2748", "254.389, 641.966, 10.5423, 0.2748", "254.872, 640.933, 10.4977, 0.275", "255.813, 640.32, 10.4418, 0.2756", "256.746, 639.658, 10.3701, 0.2764", "257.252, 638.643, 10.2842, 0.2782", "257.634, 637.565, 10.1936, 0.2812", "258.216, 636.581, 10.1013, 0.2866", "259.074, 635.827, 10.0102, 0.298", "260.047, 635.228, 9.9238, 0.313", "261.003, 634.601, 9.8362, 0.3708", "262.063, 634.172, 9.7503, 0.3308", "263.014, 633.537, 9.6616, 0.2942", "264.053, 633.061, 9.582, 0.263", "265.179, 632.863, 9.5196, 0.2542", "266.229, 632.411, 9.4797, 0.229", "267.056, 631.622, 9.5724, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "254.063, 651.711, 10.2452, 0.386", "253.475, 651.044, 10.3655, 0.2994", "252.623, 650.289, 10.4696, 0.2794", "251.618, 649.748, 10.5658, 0.2834", "250.744, 649.018, 10.6538, 0.2906", "250.086, 648.085, 10.7334, 0.3048", "249.626, 647.038, 10.8062, 0.329", "249.244, 645.961, 10.8756, 0.3826", "248.872, 644.881, 10.9472, 0.3558", "248.617, 643.767, 11.0256, 0.3438", "248.487, 642.631, 11.1181, 0.3686", "248.305, 641.503, 11.2446, 0.3298", "248.136, 640.373, 11.3818, 0.2972", "247.775, 639.315, 11.5174, 0.2754", "246.956, 638.533, 11.643, 0.276", "246.382, 637.544, 11.7442, 0.2772", "245.785, 636.57, 11.8199, 0.2794", "245.211, 635.58, 11.8749, 0.2834", "244.598, 634.621, 11.9197, 0.291", "243.81, 633.792, 11.9623, 0.305", "243.129, 632.879, 12.0091, 0.3308", "242.614, 631.86, 12.0652, 0.3796", "241.994, 630.899, 12.1378, 0.4642", "241.306, 629.987, 12.2364, 0.3932", "240.678, 629.032, 12.3498, 0.3392", "240.06, 628.07, 12.4737, 0.3182", "239.407, 627.133, 12.6065, 0.3562", "238.799, 626.172, 12.7495, 0.423", "238.424, 625.096, 12.9066, 0.4338", "238.263, 623.967, 13.0822, 0.4906", "238.202, 622.829, 13.2871, 0.5142", "238.081, 621.695, 13.5377, 0.4086", "237.954, 620.565, 13.8382, 0.3306", "237.825, 619.437, 14.1831, 0.3028", "237.7, 618.31, 14.5581, 0.3284", "237.714, 617.205, 14.9414, 0.3682", "238.142, 616.158, 15.3037, 0.3326", "238.444, 615.068, 15.6315, 0.3056", "238.725, 614.023, 15.932, 0.296", "238.4, 612.931, 16.1878, 0.3136", "237.946, 611.903, 16.4226, 0.3508", "237.284, 610.982, 16.6526, 0.4016", "236.792, 609.955, 16.8989, 0.3954", "236.262, 608.956, 17.1746, 0.4316", "235.52, 608.098, 17.5039, 0.4972", "234.934, 607.195, 17.8784, 0.462", "234.864, 606.066, 18.2732, 0.485", "234.863, 604.933, 18.6712, 0.564", "234.847, 603.819, 19.2401, 0.5166", "234.839, 602.736, 20.1439, 0.3454", "234.882, 601.649, 21.0071, 0.276", "235.169, 600.571, 21.6185, 0.2728", "236.092, 599.923, 22.0328, 0.2712", "237.171, 599.561, 22.3097, 0.2684", "238.311, 599.485, 22.4503, 0.2626", "239.446, 599.35, 22.5198, 0.2542", "240.582, 599.214, 22.5646, 0.2288", "241.717, 599.077, 22.68, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "340.81, 710.574, 15.246, 1.198", "341.663, 710.034, 15.5626, 0.8022", "342.709, 709.603, 15.8374, 0.533", "343.835, 709.473, 16.0471, 0.4748", "344.963, 709.309, 16.217, 0.6112", "346.003, 709.682, 16.3876, 0.8782", "347.019, 710.202, 16.5696, 0.9538", "347.995, 710.791, 16.8025, 0.9742", "348.923, 711.453, 17.021, 0.898", "349.757, 712.23, 17.2288, 0.8628", "350.732, 712.815, 17.4282, 0.8448", "351.851, 713.006, 17.6247, 0.8594", "352.961, 713.267, 17.8267, 0.8868", "353.908, 713.896, 18.0458, 0.9606", "354.959, 714.333, 18.2736, 0.9844", "356.092, 714.454, 18.4939, 0.918", "357.222, 714.607, 18.7158, 0.8586", "358.324, 714.902, 18.9426, 0.867", "359.402, 715.268, 19.1786, 0.7648", "360.289, 715.982, 19.4241, 0.717", "361.281, 716.541, 19.6791, 0.8148", "362.36, 716.903, 19.965, 0.7934", "363.465, 717.172, 20.2621, 0.8496", "364.524, 717.591, 20.5358, 0.9294", "365.597, 717.974, 20.7648, 0.9682" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "340.81, 710.574, 15.246, 1.198", "341.454, 710.045, 15.0553, 0.9334", "342.343, 709.325, 15.0049, 1.0006", "343.221, 708.591, 14.9857, 0.909", "343.988, 707.744, 14.9599, 0.8456", "344.704, 706.851, 14.9288, 0.806", "345.495, 706.025, 14.9008, 0.823", "346.132, 705.076, 14.8793, 0.6534", "346.556, 704.014, 14.8485, 0.6658", "346.917, 702.93, 14.7836, 0.629", "347.352, 701.872, 14.6736, 0.6802", "347.714, 700.789, 14.5255, 0.6322", "347.949, 699.672, 14.3562, 0.5814", "348.079, 698.538, 14.175, 0.7322", "348.115, 697.396, 13.9856, 0.7282", "348.129, 696.256, 13.7893, 0.7732", "347.733, 695.188, 13.5705, 0.798", "347.236, 694.162, 13.3322, 0.6846", "346.661, 693.178, 13.0972, 0.5542", "346.257, 692.112, 12.8635, 0.6082" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "299.934, 751.484, 25.2022, 0.6002", "299.092, 752.443, 26.3475, 0.5652", "298.645, 753.428, 27.0479, 0.5548", "297.839, 754.164, 27.7201, 0.55", "296.98, 754.86, 28.3721, 0.6214", "296.211, 755.667, 28.9999, 0.6788", "295.395, 756.422, 29.6111, 0.6666", "294.426, 756.954, 30.2117, 0.5336", "293.345, 757.18, 30.8286, 0.3782", "292.243, 757.325, 31.4815, 0.2972", "291.139, 757.449, 32.1434, 0.2776", "290.139, 757.854, 32.7866, 0.2802", "289.315, 758.596, 33.3936, 0.2848", "288.631, 759.481, 33.952, 0.294", "288.024, 760.427, 34.4599, 0.308", "287.325, 761.305, 34.9406, 0.3522", "286.612, 762.172, 35.46, 0.343", "285.911, 763.057, 35.8988, 0.3056", "284.863, 763.399, 36.1889, 0.2786", "283.825, 763.865, 36.3462, 0.2746", "282.905, 764.539, 36.3964, 0.2746", "281.965, 765.19, 36.3793, 0.2746", "281.032, 765.851, 36.3364, 0.2746", "280.215, 766.649, 36.3054, 0.2746", "279.437, 767.487, 36.3006, 0.2746", "278.619, 768.287, 36.3168, 0.2746", "277.843, 769.127, 36.3434, 0.2746", "277.18, 770.057, 36.3695, 0.2746", "276.58, 771.032, 36.3891, 0.2746", "276.005, 772.02, 36.4017, 0.2746", "275.471, 773.032, 36.4081, 0.2746", "275.011, 774.078, 36.4098, 0.2746", "274.631, 775.157, 36.4087, 0.2746", "274.051, 776.14, 36.405, 0.2746", "273.138, 776.816, 36.3944, 0.2746", "272.187, 777.453, 36.3712, 0.2746", "271.182, 777.997, 36.3303, 0.2746", "270.156, 778.501, 36.2681, 0.2746", "269.107, 778.956, 36.1757, 0.2748", "268.013, 779.287, 36.0503, 0.2748", "266.987, 779.788, 35.8994, 0.2752", "266.028, 780.407, 35.733, 0.2756", "265.193, 781.185, 35.5555, 0.2766", "264.425, 782.029, 35.3741, 0.2782", "263.505, 782.703, 35.1851, 0.2814", "262.524, 783.283, 34.97, 0.2868", "261.51, 783.805, 34.7385, 0.2986", "260.483, 784.3, 34.5148, 0.314", "259.424, 784.724, 34.3151, 0.3726", "258.384, 785.197, 34.1522, 0.3344", "257.454, 785.862, 34.0315, 0.3002", "256.557, 786.57, 33.9556, 0.2746", "255.673, 787.295, 33.9133, 0.2742", "254.789, 788.023, 33.892, 0.2736", "253.906, 788.75, 33.8831, 0.2728", "253.024, 789.478, 33.8806, 0.2712", "252.313, 790.374, 33.88, 0.2684", "252.047, 791.486, 33.88, 0.2626", "251.074, 792.083, 33.88, 0.2542", "250.033, 792.559, 33.88, 0.2288", "248.968, 792.975, 33.88, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "299.934, 751.484, 25.2022, 0.6002", "299.023, 750.563, 25.5885, 0.5492", "298.11, 749.878, 25.7229, 0.515", "297.116, 749.317, 25.8605, 0.6186", "296.098, 748.798, 26.0225, 0.6736", "295.104, 748.239, 26.2044, 0.6352", "294.214, 747.525, 26.3987, 0.54", "293.461, 746.669, 26.6014, 0.6492", "292.52, 746.03, 26.8034, 0.556", "291.484, 745.548, 26.9926, 0.587", "290.523, 744.933, 27.1741, 0.4654", "289.631, 744.222, 27.3591, 0.4774", "288.724, 743.529, 27.5609, 0.4316", "287.85, 742.797, 27.772, 0.492", "286.873, 742.208, 27.9864, 0.5586", "286.043, 741.426, 28.2108, 0.4756", "285.625, 740.368, 28.4122, 0.4234", "284.936, 739.46, 28.6199, 0.4752", "284.255, 738.545, 28.8333, 0.5448", "283.59, 737.618, 29.0637, 0.5856", "282.825, 736.774, 29.3132, 0.6366", "281.995, 735.995, 29.5733, 0.6178", "281.183, 735.194, 29.8203, 0.447", "280.489, 734.289, 30.0468, 0.3308", "279.557, 733.633, 30.2582, 0.2796", "278.416, 733.678, 30.4408, 0.3048", "277.288, 733.805, 30.8, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "313.733, 756.197, 15.1108, 0.6234", "313.241, 756.779, 15.966, 0.7292", "312.925, 757.795, 16.5114, 0.629", "312.727, 758.916, 16.7563, 0.5592", "312.335, 759.979, 17.0155, 0.5238", "311.899, 761.031, 17.2661, 0.56", "311.65, 762.136, 17.5128, 0.5256", "311.769, 763.255, 17.7557, 0.5518", "311.91, 764.383, 18.0088, 0.5064", "311.782, 765.506, 18.2775, 0.508", "311.894, 766.621, 18.5946, 0.4966", "311.415, 767.581, 18.927, 0.634", "311.193, 768.671, 19.2395, 0.5952", "310.86, 769.753, 19.5213, 0.6184", "310.63, 770.867, 19.7655, 0.5808", "310.348, 771.971, 19.968, 0.5236", "309.864, 773.001, 20.1582, 0.5946", "309.47, 774.07, 20.3484, 0.508", "309.236, 775.186, 20.5327, 0.4194", "308.893, 776.273, 20.7078, 0.4038", "308.554, 777.363, 20.8718, 0.3874", "308.307, 778.478, 21.0194, 0.4132", "307.909, 779.546, 21.153, 0.3768", "307.393, 780.566, 21.259, 0.3652", "307.062, 781.659, 21.3473, 0.4154", "306.526, 782.665, 21.4343, 0.4218", "305.704, 783.456, 21.5243, 0.4528", "304.795, 784.149, 21.6272, 0.5938", "303.957, 784.927, 21.7513, 0.6818", "303.179, 785.763, 21.8968, 0.6152", "302.303, 786.494, 22.0567, 0.6762", "301.423, 787.222, 22.2153, 0.7202", "300.555, 787.966, 22.3694, 0.739", "299.777, 788.801, 22.5185, 0.621", "299.118, 789.734, 22.668, 0.6864", "298.802, 790.83, 22.8201, 0.7404", "298.691, 791.966, 22.9691, 0.7698", "298.566, 793.102, 23.1267, 0.7008", "298.351, 794.223, 23.2994, 0.716", "298.077, 795.331, 23.4917, 0.7132", "297.758, 796.425, 23.708, 0.6472", "297.336, 797.485, 23.9467, 0.5918", "296.887, 798.531, 24.2032, 0.6104", "296.59, 799.63, 24.4859, 0.5146", "296.222, 800.705, 24.8025, 0.5232", "295.792, 801.756, 25.1378, 0.5324", "295.474, 802.846, 25.489, 0.596", "295.35, 803.974, 25.8509, 0.4858", "295.239, 805.103, 26.2039, 0.4776", "294.746, 806.125, 26.5499, 0.4222", "294.283, 807.164, 26.8665, 0.5142", "293.733, 808.159, 27.1659, 0.4264", "293.37, 809.237, 27.4692, 0.3806", "293.22, 810.364, 27.7818, 0.4022", "292.994, 811.476, 28.1224, 0.388", "293.086, 812.606, 28.4894, 0.398", "292.986, 813.732, 28.896, 0.4724", "292.56, 814.779, 29.3143, 0.5592", "292.027, 815.775, 29.7455, 0.47", "291.307, 816.646, 30.1812, 0.4458", "290.499, 817.437, 30.6124, 0.3766", "289.688, 818.223, 31.0346, 0.399", "289.03, 819.143, 31.4549, 0.3386", "288.392, 820.075, 31.8889, 0.3106", "287.742, 820.997, 32.3526, 0.2966", "287.152, 821.95, 32.853, 0.3166", "287.035, 823.052, 33.4071, 0.3554", "287.337, 824.135, 33.9164, 0.4292", "287.666, 825.212, 34.4126, 0.4424", "288.116, 826.244, 34.8939, 0.5096", "288.495, 827.301, 35.3556, 0.5582", "288.582, 828.425, 35.7977, 0.4856", "288.499, 829.551, 36.1878, 0.471", "288.183, 830.639, 36.5159, 0.5602", "287.689, 831.665, 36.7867, 0.5688", "287.183, 832.688, 37.0115, 0.4302", "286.677, 833.707, 37.1969, 0.3292", "285.976, 834.603, 37.357, 0.298", "285.082, 835.311, 37.5082, 0.318", "284.095, 835.884, 37.6653, 0.3554", "283.096, 836.437, 37.8361, 0.4236", "282.098, 836.985, 38.0248, 0.4338", "281.019, 837.349, 38.2376, 0.4916", "279.907, 837.601, 38.486, 0.5196", "278.795, 837.836, 38.7951, 0.416", "277.692, 837.955, 39.146, 0.3424", "276.655, 837.521, 39.5198, 0.326", "275.709, 836.964, 39.9146, 0.3644", "274.584, 836.966, 40.3315, 0.3254", "273.488, 837.068, 40.7873, 0.292", "272.449, 836.647, 41.2964, 0.2704", "271.471, 836.122, 41.9191, 0.2664", "270.499, 835.828, 43.1614, 0.2552", "269.479, 835.655, 44.3556, 0.2288", "268.472, 835.52, 45.64, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "313.733, 756.197, 15.1108, 0.6234", "312.739, 756.837, 14.7944, 0.5184", "311.892, 757.603, 14.6119, 0.4532", "310.952, 758.251, 14.4609, 0.5576", "310.364, 759.232, 14.3502, 0.5732", "310.093, 760.342, 14.2775, 0.5566", "309.673, 761.406, 14.2316, 0.515", "309.271, 762.477, 14.2033, 0.49", "309.223, 763.62, 14.177, 0.4192", "309.223, 764.764, 14.1481, 0.408", "309.223, 765.908, 14.1151, 0.4894" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "405.733, 675.513, 15.9177, 0.5498", "406.337, 675.638, 16.2423, 0.269", "407.429, 675.967, 16.4318, 0.3272", "408.461, 676.456, 16.5007, 0.3728", "409.375, 677.142, 16.5801, 0.5058", "410.168, 677.964, 16.6762, 0.4718", "410.872, 678.863, 16.7949, 0.4646", "411.445, 679.852, 16.9432, 0.5408", "412.08, 680.8, 17.1179, 0.7104", "412.86, 681.633, 17.3031, 0.689", "413.715, 682.39, 17.4782, 0.4998", "414.58, 683.136, 17.6298, 0.3696", "415.447, 683.881, 17.7489, 0.3742", "416.314, 684.627, 17.8334, 0.3372", "417.223, 685.32, 17.8881, 0.305", "418.278, 685.757, 17.9218, 0.2828", "419.336, 686.195, 17.9439, 0.2888", "420.21, 686.933, 17.9616, 0.3008", "421.018, 687.741, 17.9798, 0.3252", "421.827, 688.551, 18.0032, 0.358", "422.628, 689.367, 18.0351, 0.4798", "423.526, 690.076, 18.086, 0.4096", "424.46, 690.736, 18.1545, 0.356", "425.416, 691.363, 18.2357, 0.3258", "426.42, 691.909, 18.3211, 0.3944", "427.409, 692.484, 18.4029, 0.3744", "428.34, 693.147, 18.4771, 0.3694", "429.184, 693.919, 18.5408, 0.4294", "429.96, 694.76, 18.5973, 0.4336", "430.566, 695.729, 18.6503, 0.507", "431.091, 696.745, 18.7083, 0.5496", "431.644, 697.747, 18.7763, 0.6278", "432.368, 698.632, 18.8535, 0.5482", "432.916, 699.636, 18.9407, 0.5762", "433.322, 700.705, 19.0384, 0.6866", "434.111, 701.531, 19.1513, 0.6094", "435.092, 702.119, 19.2767, 0.4654", "436.099, 702.659, 19.4162, 0.4272", "437.118, 703.173, 19.5724, 0.3886", "438.136, 703.692, 19.752, 0.3908", "439.153, 704.208, 19.9461, 0.4942", "440.265, 704.465, 20.1466, 0.4322", "441.379, 704.711, 20.3464, 0.4068", "442.493, 704.957, 20.5371, 0.382", "443.595, 705.202, 21.0, 0.6864" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "405.733, 675.513, 15.9177, 0.5498", "405.806, 673.865, 15.695, 0.501", "406.114, 672.765, 15.5534, 0.401" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "316.802, 692.372, 8.3084, 0.6738", "316.828, 691.396, 7.8426, 0.2466", "317.047, 690.289, 7.406, 0.5414", "317.334, 689.185, 7.2108, 0.5962", "317.808, 688.148, 6.9832, 0.4616", "318.37, 687.157, 6.7213, 0.3524", "319.477, 686.94, 6.4537, 0.3192", "320.144, 686.02, 6.2126, 0.3588", "320.193, 684.88, 6.0201, 0.4212", "320.486, 683.774, 5.8777, 0.5934", "320.889, 682.705, 5.7836, 0.6356", "321.113, 681.584, 5.6932, 0.6864" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "316.802, 692.372, 8.3084, 0.6738", "316.569, 691.678, 8.2161, 0.6624", "316.211, 690.594, 8.0842, 0.6362", "315.877, 689.5, 8.0017, 0.594", "315.567, 688.402, 7.9237, 0.6776", "315.284, 687.297, 8.0844, 0.739", "315.003, 686.195, 8.2727, 0.7002", "314.808, 685.072, 8.4995, 0.6864", "314.486, 683.987, 8.774, 0.7402", "314.03, 682.946, 9.092, 0.6892", "313.57, 681.906, 9.4023, 0.5944", "312.961, 680.961, 9.6827, 0.519", "312.319, 680.034, 9.9603, 0.46", "312.081, 678.953, 10.2416, 0.4204", "312.019, 677.818, 10.521, 0.4814", "311.864, 676.692, 10.8144, 0.5234", "311.396, 675.694, 11.1389, 0.5544", "310.655, 674.836, 11.4939, 0.5544", "310.127, 673.856, 11.8488, 0.5036", "309.92, 672.747, 12.1818, 0.4088", "309.582, 671.678, 12.5066, 0.3274", "308.816, 670.879, 12.8196, 0.2968", "307.919, 670.179, 13.1253, 0.3022", "307.079, 669.415, 13.4297, 0.3222", "306.211, 668.682, 13.7372, 0.38", "305.308, 667.99, 14.0519, 0.387", "304.488, 667.209, 14.3734, 0.4032", "304.095, 666.181, 14.7058, 0.3736", "303.88, 665.065, 15.0381, 0.3474", "303.598, 663.968, 15.4085, 0.374", "302.96, 663.042, 15.7371, 0.3512", "302.593, 661.976, 16.0252, 0.327", "302.095, 660.953, 16.267, 0.3156", "301.761, 659.864, 16.4699, 0.3682", "301.52, 658.748, 16.6503, 0.339", "301.407, 657.612, 16.8184, 0.3058", "301.176, 656.495, 16.9824, 0.2814", "300.492, 655.594, 17.1482, 0.2826", "299.562, 654.939, 17.3222, 0.2896", "298.531, 654.453, 17.5105, 0.3022", "297.674, 653.705, 17.7075, 0.3276", "296.699, 653.118, 17.9155, 0.3634", "295.63, 652.722, 18.1395, 0.4868", "294.644, 652.153, 18.3933, 0.4372", "293.738, 651.467, 18.6708, 0.4248", "292.841, 650.764, 18.9513, 0.3398", "291.942, 650.067, 19.2272, 0.3022", "290.95, 649.509, 19.4989, 0.2762", "289.882, 649.119, 19.7643, 0.2746", "289.177, 648.25, 20.0737, 0.2746", "288.944, 647.137, 20.3879, 0.2746", "288.815, 646.012, 20.7406, 0.2746", "288.953, 644.894, 21.123, 0.2746", "288.603, 643.842, 21.5487, 0.2746", "287.721, 643.156, 21.99, 0.2746", "286.642, 642.827, 22.455, 0.2746", "285.569, 642.498, 22.9398, 0.2746", "284.598, 641.93, 23.421, 0.2746", "283.722, 641.223, 23.9129, 0.2746", "283.022, 640.365, 24.4057, 0.2746", "282.658, 639.296, 24.8252, 0.2746", "282.324, 638.212, 25.1742, 0.2748", "281.843, 637.186, 25.449, 0.2748", "281.176, 636.262, 25.6509, 0.2752", "280.447, 635.382, 25.7899, 0.2756", "279.71, 634.507, 25.8884, 0.2764", "278.988, 633.622, 25.9622, 0.278", "278.272, 632.742, 26.0102, 0.281", "277.372, 632.036, 26.0422, 0.2864", "276.52, 631.282, 26.0663, 0.297", "275.885, 630.341, 26.088, 0.3156", "275.47, 629.276, 26.1109, 0.3542", "275.141, 628.181, 26.1384, 0.4076", "274.926, 627.058, 26.1719, 0.41", "274.79, 625.924, 26.2319, 0.4396", "274.729, 624.782, 26.3483, 0.4078", "274.703, 623.639, 26.446, 0.3442", "274.669, 622.496, 26.5193, 0.3094", "274.633, 621.353, 26.5695, 0.311", "274.574, 620.21, 26.5948, 0.3502", "274.523, 619.07, 26.6557, 0.369", "274.447, 617.929, 26.6774, 0.3468", "274.347, 616.79, 26.6156, 0.3724", "274.249, 615.651, 26.4969, 0.3534", "274.149, 614.513, 26.3374, 0.3288", "274.05, 613.376, 26.1522, 0.3162", "273.717, 612.291, 25.9784, 0.3622", "273.223, 611.261, 25.8522, 0.3412", "272.706, 610.242, 25.7612, 0.3062", "272.187, 609.222, 25.6875, 0.2792", "271.67, 608.202, 25.6148, 0.2746", "271.284, 607.129, 25.4985, 0.2746", "271.102, 606.005, 25.2972, 0.2746", "270.953, 604.876, 25.0295, 0.2746", "270.804, 603.748, 24.7274, 0.2746", "270.657, 602.621, 24.4201, 0.2746", "270.922, 601.522, 24.1888, 0.2746", "271.164, 600.407, 24.0558, 0.2748", "270.68, 599.384, 24.058, 0.275", "270.156, 598.368, 24.1463, 0.2752", "269.585, 597.377, 24.2725, 0.2756", "268.749, 596.599, 24.3541, 0.2768", "267.906, 595.825, 24.3692, 0.2786", "267.017, 595.107, 24.3133, 0.2826", "265.967, 594.656, 24.1544, 0.288", "264.918, 594.208, 23.9288, 0.305", "263.871, 593.762, 23.6672, 0.3068", "262.841, 593.324, 23.0863, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "365.597, 717.974, 20.7648, 0.9682", "366.966, 717.226, 22.0055, 0.3496", "368.049, 716.892, 22.3772, 0.309", "369.122, 716.776, 22.985, 0.3112", "370.195, 716.969, 23.8112, 0.3476", "371.305, 717.106, 24.3977, 0.43", "372.418, 717.247, 24.9404, 0.4674", "373.532, 717.394, 25.4602, 0.5908", "374.652, 717.543, 25.9012, 0.5474", "375.776, 717.691, 26.2636, 0.4816", "376.877, 717.955, 26.6401, 0.4986", "377.971, 718.245, 27.0509, 0.5962", "379.086, 718.426, 27.4549, 0.6412", "380.19, 718.367, 28.0932, 0.5176", "381.286, 718.541, 28.7232, 0.425", "382.03, 718.261, 29.6531, 0.5178", "383.048, 718.725, 30.1647, 0.5914", "384.082, 719.163, 30.6163, 0.5884", "385.146, 719.553, 30.9812, 0.5226", "386.209, 719.959, 31.2802, 0.4266", "387.281, 720.343, 31.5759, 0.3522", "388.367, 720.677, 31.8522, 0.3368", "389.467, 720.98, 32.0967, 0.368", "390.566, 721.281, 32.3243, 0.4584", "391.655, 721.614, 32.5676, 0.5622", "392.716, 722.021, 32.8826, 0.6688", "393.797, 722.304, 33.3654, 0.7356", "394.904, 722.26, 33.9685, 0.7586", "396.018, 722.258, 34.5769, 0.5608", "397.12, 722.025, 35.0445, 0.4338", "398.247, 721.928, 35.4466, 0.4006", "399.321, 722.262, 35.8431, 0.54", "400.128, 723.058, 36.1438, 0.5786", "401.122, 723.612, 36.4154, 0.4238", "401.995, 724.346, 36.617, 0.2794", "402.765, 725.182, 36.96, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "365.597, 717.974, 20.7648, 0.9682", "366.406, 718.155, 20.9591, 0.8692", "367.533, 718.251, 21.1417, 0.7726", "368.672, 718.159, 21.2316, 0.6848", "369.811, 718.05, 21.3039, 0.6662", "370.951, 717.976, 21.3514, 0.7394", "372.093, 717.986, 21.3664, 0.801", "373.236, 718.011, 21.3532, 0.815", "374.372, 717.904, 21.3267, 0.8664", "375.455, 717.567, 21.2883, 0.9756", "376.54, 717.232, 21.2258, 0.9604", "377.673, 717.113, 21.137, 0.804", "378.794, 716.925, 21.0239, 0.7604", "379.9, 716.638, 20.88, 0.8804", "381.026, 716.55, 20.7001, 1.0034", "382.141, 716.757, 20.4918, 1.041", "383.234, 717.08, 20.2744, 1.0128", "384.294, 717.497, 20.0574, 0.9288", "385.288, 718.05, 19.8502, 0.8374", "386.271, 718.631, 19.6682, 0.775", "387.326, 719.047, 19.5194, 0.6874", "388.394, 718.886, 19.367, 0.7054", "389.501, 718.667, 19.1957, 0.8172", "390.642, 718.631, 19.0084, 0.8598", "391.782, 718.638, 18.8, 0.8238", "392.918, 718.565, 18.5677, 0.7704", "394.019, 718.289, 18.3214, 0.6752", "395.064, 717.842, 18.0739, 0.7124", "396.105, 717.381, 17.8262, 0.737", "397.161, 716.953, 17.5813, 0.6892", "397.882, 716.145, 17.3184, 0.514", "398.305, 715.093, 17.0399, 0.366", "398.645, 714.007, 16.7545, 0.3016", "398.866, 712.893, 16.4692, 0.299", "399.019, 711.765, 16.1918, 0.3162", "399.44, 710.723, 15.9254, 0.3684", "399.845, 709.661, 15.6675, 0.3674", "399.968, 708.539, 15.4069, 0.3476", "400.004, 707.4, 15.1343, 0.3698", "400.108, 706.268, 14.8505, 0.3554", "400.384, 705.167, 14.5689, 0.329", "400.728, 704.082, 14.3029, 0.318", "401.128, 703.014, 14.0596, 0.3438", "401.859, 702.169, 13.8419, 0.3976", "402.852, 701.63, 13.6501, 0.531", "403.858, 701.092, 13.4738, 0.6142", "404.784, 700.429, 13.295, 0.5372", "405.201, 699.416, 13.0612, 0.4794", "405.597, 698.348, 12.8308, 0.4226", "406.443, 697.614, 12.6261, 0.4896", "407.502, 697.205, 12.4494, 0.4118", "408.616, 696.957, 12.3011, 0.3432", "409.502, 696.258, 12.1803, 0.2978", "409.934, 695.212, 12.0793, 0.3104", "410.149, 694.091, 11.9731, 0.336", "410.3, 692.957, 11.8564, 0.412", "410.521, 691.836, 11.7289, 0.414", "410.896, 690.759, 11.5897, 0.465", "411.528, 689.81, 11.4367, 0.4834", "412.331, 688.999, 11.2682, 0.4812", "413.142, 688.196, 11.08, 0.408", "413.858, 687.31, 10.8637, 0.3772", "414.342, 686.281, 10.6066, 0.4312", "414.709, 685.206, 10.293, 0.4708", "415.012, 684.111, 9.947, 0.4364", "415.076, 682.977, 9.6158, 0.4302", "415.033, 681.84, 9.3319, 0.5682", "414.719, 680.743, 9.1578, 0.563", "414.486, 679.623, 9.1021, 0.684", "414.242, 678.505, 9.1506, 0.727", "414.242, 677.362, 9.2753, 0.7742" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "346.257, 692.112, 12.8635, 0.6082", "345.623, 691.382, 12.561, 0.5762", "344.857, 690.539, 12.3391, 0.4624", "343.98, 689.811, 12.16, 0.3934", "343.04, 689.165, 11.976, 0.4328", "342.182, 688.417, 11.7737, 0.4874", "341.792, 687.375, 11.5651, 0.4802", "341.587, 686.252, 11.3609, 0.5218", "341.259, 685.162, 11.1639, 0.6114", "340.806, 684.115, 10.9717, 0.6174", "340.293, 683.096, 10.7881, 0.6168", "339.786, 682.072, 10.6223, 0.502", "339.595, 680.956, 10.4804, 0.4642", "339.707, 679.823, 10.3662, 0.4086", "339.747, 678.681, 10.277, 0.4342", "339.459, 677.582, 10.2103, 0.4368", "338.841, 676.628, 10.1607, 0.3754", "338.122, 675.739, 10.1196, 0.3196", "337.474, 674.796, 10.0764, 0.2996", "336.954, 673.779, 10.0279, 0.316", "336.71, 672.666, 9.9841, 0.3474", "336.612, 671.528, 9.9417, 0.4326", "336.432, 670.399, 9.8931, 0.4566", "336.279, 669.265, 9.8417, 0.5372", "336.188, 668.125, 9.7922, 0.6438", "336.086, 666.986, 9.7424, 0.6626", "336.107, 665.844, 9.6928, 0.6984", "336.32, 664.721, 9.6456, 0.6664", "336.482, 663.589, 9.6084, 0.6698", "336.685, 662.463, 9.5862, 0.7416", "337.011, 661.367, 9.5803, 0.8108", "337.254, 660.249, 9.5853, 0.8496", "337.346, 659.11, 9.5855, 0.8986", "337.211, 657.976, 9.5723, 0.8502", "336.921, 656.87, 9.5429, 0.7844", "336.605, 655.771, 9.4977, 0.7042", "336.159, 654.718, 9.4503, 0.5838", "335.843, 653.619, 9.4224, 0.4484", "335.773, 652.478, 9.4416, 0.4296", "335.622, 651.346, 9.5189, 0.3926", "335.148, 650.308, 9.6615, 0.4008", "334.692, 649.262, 9.853, 0.4816", "334.36, 648.171, 10.0721, 0.553", "334.116, 647.058, 10.2993, 0.6296", "333.694, 645.998, 10.5234, 0.585", "333.797, 644.866, 10.7418, 0.5054", "334.277, 643.833, 10.9591, 0.537", "334.787, 642.814, 11.1885, 0.638", "335.209, 641.754, 11.4332, 0.6334", "335.619, 640.692, 11.688, 0.6454" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "346.257, 692.112, 12.8635, 0.6082", "345.918, 691.526, 12.613, 0.6558", "345.559, 690.466, 12.2385, 0.5564", "345.609, 689.347, 12.027, 0.4246", "345.796, 688.22, 11.8939, 0.396", "345.961, 687.089, 11.7716, 0.4778", "346.424, 686.069, 11.6738, 0.6032", "347.168, 685.209, 11.6112, 0.67", "347.929, 684.356, 11.5773, 0.5934", "348.396, 683.331, 11.5471, 0.5762", "348.839, 682.277, 11.51, 0.5254", "349.37, 681.263, 11.4663, 0.536", "349.881, 680.242, 11.4066, 0.5736", "350.393, 679.219, 11.3177, 0.6518", "351.01, 678.259, 11.1968, 0.6916", "351.732, 677.375, 11.0526, 0.6138", "352.506, 676.536, 10.9004, 0.618", "353.273, 675.69, 10.7586, 0.6146", "354.0, 674.808, 10.6455, 0.6374", "354.728, 673.926, 10.5637, 0.5838", "355.462, 673.049, 10.5017, 0.5086", "356.141, 672.13, 10.4497, 0.4022", "356.74, 671.156, 10.396, 0.3338", "357.273, 670.145, 10.3204, 0.3146", "357.775, 669.118, 10.208, 0.3368", "358.284, 668.095, 10.0587, 0.3878", "358.854, 667.108, 9.8878, 0.4966", "359.473, 666.148, 9.7145, 0.629", "360.103, 665.194, 9.5549, 0.699", "360.721, 664.234, 9.4203, 0.6544", "361.288, 663.241, 9.3134, 0.6142", "361.807, 662.223, 9.2298, 0.4972", "362.32, 661.201, 9.1592, 0.4346", "362.831, 660.177, 9.0905, 0.36", "363.442, 659.213, 9.0139, 0.314", "364.139, 658.307, 8.9214, 0.291", "364.853, 657.414, 8.8068, 0.293", "365.566, 656.522, 8.6665, 0.3082", "366.326, 655.671, 8.4918, 0.3392", "367.125, 654.857, 8.2764, 0.3838", "367.93, 654.051, 8.0215, 0.5318", "368.635, 653.16, 7.7417, 0.4874", "369.139, 652.145, 7.4634, 0.387", "369.578, 651.095, 7.2028, 0.317", "370.043, 650.054, 6.974, 0.3182", "370.521, 649.016, 6.8141, 0.374", "371.346, 648.261, 6.7336, 0.3684", "372.348, 647.713, 6.7201, 0.3514", "373.459, 647.489, 6.751, 0.3812", "374.507, 647.058, 6.8063, 0.3704", "375.492, 646.479, 6.8661, 0.3556", "376.466, 645.88, 6.9134, 0.3898", "377.441, 645.28, 6.9436, 0.3816", "378.452, 644.747, 6.959, 0.3992", "379.487, 644.257, 6.9636, 0.3576", "380.524, 643.776, 6.9606, 0.3262", "381.562, 643.294, 6.9523, 0.315", "382.575, 642.766, 6.9402, 0.341", "383.557, 642.179, 6.9233, 0.3916", "384.532, 641.579, 6.8999, 0.5222", "385.505, 640.98, 6.8672, 0.5858", "386.443, 640.325, 6.8251, 0.4722", "387.554, 640.159, 6.7677, 0.3516", "388.696, 640.099, 6.684, 0.3016", "389.591, 639.429, 6.5642, 0.31", "390.431, 638.654, 6.423, 0.3662", "391.29, 637.902, 6.2501, 0.3222", "391.732, 636.851, 6.076, 0.2796", "392.497, 636.003, 5.9184, 0.2288", "393.605, 635.741, 5.6308, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "309.223, 765.908, 14.1151, 0.4894", "309.167, 767.245, 14.0352, 0.559", "308.909, 768.354, 13.9831, 0.5796", "308.561, 769.443, 13.9366, 0.5646", "308.283, 770.552, 13.9019, 0.5288", "307.898, 771.625, 13.8838, 0.4496", "307.216, 772.525, 13.8858, 0.434", "306.338, 773.254, 13.9075, 0.4182", "305.569, 774.09, 13.9461, 0.4274", "305.221, 775.155, 14.004, 0.5328", "304.786, 776.205, 14.0869, 0.6012", "304.41, 777.283, 14.1784, 0.509", "304.135, 778.393, 14.2595, 0.4108", "303.845, 779.499, 14.3343, 0.418", "303.534, 780.599, 14.4128, 0.4292", "303.133, 781.669, 14.4921, 0.462", "302.685, 782.721, 14.566, 0.6", "301.985, 783.614, 14.6341, 0.711", "301.118, 784.356, 14.6935, 0.7504", "300.224, 785.07, 14.7385, 0.6684", "299.269, 785.697, 14.7654, 0.7208", "298.422, 786.458, 14.7774, 0.837", "297.443, 787.036, 14.7867, 0.8626", "296.52, 787.706, 14.7813, 0.8222", "295.711, 788.512, 14.7594, 0.7658", "295.024, 789.425, 14.7229, 0.7102", "294.46, 790.418, 14.679, 0.6", "294.072, 791.491, 14.6463, 0.4716", "293.987, 792.625, 14.64, 0.4204", "294.042, 793.768, 14.6573, 0.4884", "293.868, 794.892, 14.6774, 0.6066", "293.59, 796.002, 14.6887, 0.5896", "293.32, 797.114, 14.6871, 0.659", "293.097, 798.236, 14.6696, 0.711", "292.992, 799.375, 14.6389, 0.698", "293.028, 800.516, 14.6026, 0.711", "293.133, 801.656, 14.5673, 0.684", "293.254, 802.793, 14.5315, 0.719", "293.268, 803.936, 14.492, 0.7312", "293.064, 805.059, 14.4548, 0.6822", "292.736, 806.154, 14.4227, 0.6756", "292.318, 807.218, 14.3937, 0.6206", "291.797, 808.236, 14.3625, 0.5872", "291.095, 809.136, 14.3257, 0.5622", "290.253, 809.909, 14.2819, 0.594", "289.312, 810.555, 14.2313, 0.504", "288.309, 811.103, 14.187, 0.4826", "287.448, 811.852, 14.1608, 0.4664", "286.721, 812.733, 14.1562, 0.425", "286.033, 813.647, 14.1638, 0.405", "285.364, 814.575, 14.1687, 0.5072", "284.696, 815.504, 14.1549, 0.4778", "283.992, 816.405, 14.1069, 0.494", "283.206, 817.235, 14.0169, 0.4882", "282.32, 817.955, 13.8886, 0.4858", "281.354, 818.565, 13.7346, 0.4178", "280.383, 819.165, 13.5687, 0.3936", "279.438, 819.805, 13.3996, 0.4612", "278.459, 820.392, 13.2277, 0.519", "277.421, 820.868, 13.0473, 0.5746", "276.314, 821.133, 12.854, 0.4682", "275.178, 821.235, 12.6532, 0.4068", "274.07, 821.506, 12.4477, 0.4062", "273.088, 822.08, 12.239, 0.5618", "272.298, 822.9, 12.0319, 0.5698", "271.741, 823.893, 11.8193, 0.6882", "271.382, 824.974, 11.5976, 0.7514", "271.015, 826.054, 11.3694, 0.7856", "270.874, 827.183, 11.1335, 0.769", "270.994, 828.315, 10.8939, 0.669", "271.238, 829.429, 10.6476, 0.7954", "271.803, 830.415, 10.393, 0.8264", "271.93, 831.543, 10.1217, 0.841", "271.421, 832.557, 9.8626, 0.804", "270.659, 833.404, 9.6331, 0.8144", "269.943, 834.293, 9.4417, 0.667", "269.859, 835.432, 9.2989, 0.5268", "269.859, 836.576, 9.2027, 0.5314", "269.833, 837.719, 9.1494, 0.6264", "269.793, 838.862, 9.1306, 0.6164", "269.733, 840.005, 9.1367, 0.5876", "269.549, 841.134, 9.1638, 0.5808", "269.357, 842.262, 9.2053, 0.5722", "269.101, 843.376, 9.2349, 0.764", "268.841, 844.49, 9.2364, 0.7982" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "309.223, 765.908, 14.1151, 0.4894", "308.794, 766.816, 14.6385, 0.4602", "307.81, 767.307, 15.1995, 0.4454", "306.718, 767.626, 15.4049, 0.4666", "305.711, 768.165, 15.5805, 0.5934", "304.738, 768.747, 15.7357, 0.7762", "304.005, 769.615, 15.8683, 0.7866", "303.016, 770.184, 15.9776, 0.6952", "302.196, 770.96, 16.1166, 0.7914", "301.663, 771.97, 16.2791, 0.9166", "301.082, 772.952, 16.4745, 0.8294", "300.301, 773.729, 16.7067, 0.5684", "299.214, 774.061, 16.9616, 0.4582", "298.099, 774.288, 17.2357, 0.4958", "297.06, 774.692, 17.5301, 0.5796", "296.218, 775.453, 17.8333, 0.739", "295.454, 776.295, 18.1243, 0.8478", "294.633, 777.072, 18.3983, 0.9164", "293.648, 777.639, 18.635, 0.856", "292.601, 778.093, 18.8208, 0.7244", "291.534, 778.497, 18.9677, 0.6432", "290.486, 778.923, 19.0847, 0.5456", "289.559, 779.59, 19.1436, 0.4872", "288.675, 780.317, 19.1426, 0.5506", "287.741, 780.968, 19.1012, 0.6772", "286.682, 781.367, 19.0231, 0.7078", "285.564, 781.6, 18.9341, 0.7818", "284.465, 781.916, 18.8598, 0.7828", "283.378, 782.273, 18.819, 0.819", "282.316, 782.695, 18.8227, 0.74", "281.306, 783.226, 18.8767, 0.6576", "280.385, 783.897, 18.9712, 0.5904", "279.565, 784.693, 19.0847, 0.482", "278.812, 785.55, 19.2012, 0.3802", "278.108, 786.451, 19.305, 0.3422", "277.395, 787.344, 19.3908, 0.3688", "276.68, 788.238, 19.4617, 0.4598", "275.945, 789.114, 19.5259, 0.5678", "275.146, 789.93, 19.5931, 0.537", "274.333, 790.731, 19.6723, 0.4026", "273.693, 791.665, 19.7725, 0.3132", "273.246, 792.715, 19.9014, 0.2884", "272.86, 793.791, 20.0655, 0.3002", "272.512, 794.876, 20.2717, 0.3226", "272.083, 795.924, 20.5321, 0.361", "271.488, 796.891, 20.8622, 0.4478", "270.817, 797.802, 21.2659, 0.5342", "270.089, 798.663, 21.7361, 0.5122", "269.366, 799.522, 22.2682, 0.4324", "268.515, 800.164, 22.9277, 0.33", "267.587, 800.727, 23.6217, 0.2854", "266.964, 801.626, 24.2065, 0.2746", "266.553, 802.673, 24.7059, 0.2746", "266.043, 803.674, 25.1182, 0.2746", "265.24, 804.443, 25.4523, 0.2746", "264.255, 805.01, 25.7194, 0.2746", "263.175, 805.311, 25.946, 0.2746", "262.155, 805.733, 26.1541, 0.2746", "261.197, 806.353, 26.3526, 0.2746", "260.166, 806.83, 26.5502, 0.2746", "259.076, 807.159, 26.766, 0.2746", "257.95, 807.293, 26.9969, 0.2746", "256.812, 807.266, 27.2253, 0.2746", "255.676, 807.165, 27.4434, 0.2746", "254.553, 806.971, 27.6476, 0.2746", "253.471, 806.62, 27.8361, 0.2746", "252.419, 806.177, 28.0081, 0.2746", "251.381, 805.7, 28.1621, 0.2746", "250.422, 805.091, 28.2934, 0.2746", "249.508, 804.403, 28.4001, 0.2746", "248.575, 803.742, 28.4833, 0.2746", "247.613, 803.123, 28.5454, 0.2746", "246.702, 802.438, 28.5922, 0.2746", "245.907, 801.62, 28.632, 0.2746", "245.133, 800.778, 28.6734, 0.2746", "244.361, 799.935, 28.7235, 0.2746", "243.672, 799.024, 28.7865, 0.2746", "243.063, 798.057, 28.8641, 0.2746", "242.491, 797.073, 29.0984, 0.2746", "241.853, 796.127, 29.3037, 0.2746", "241.215, 795.181, 29.5042, 0.2746", "240.575, 794.236, 29.6999, 0.2748", "239.937, 793.29, 29.8908, 0.275", "239.414, 792.275, 30.0798, 0.2752", "238.947, 791.234, 30.2683, 0.2756", "238.482, 790.192, 30.4766, 0.2768", "238.016, 789.152, 30.7199, 0.2786", "237.569, 788.106, 31.0153, 0.2826", "237.157, 787.05, 31.3964, 0.2882", "236.747, 785.997, 31.8251, 0.305", "236.337, 784.946, 32.2879, 0.3098", "235.945, 783.941, 33.2214, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "406.114, 672.765, 15.5534, 0.401", "405.582, 671.703, 15.2725, 0.3292", "404.935, 670.774, 15.0998, 0.369", "404.212, 669.89, 14.956, 0.386", "403.487, 669.005, 14.8467, 0.3928", "402.717, 668.161, 14.7739, 0.3696", "401.916, 667.344, 14.7357, 0.3298", "401.123, 666.52, 14.7242, 0.3148", "400.366, 665.663, 14.7324, 0.3274", "399.602, 664.813, 14.7549, 0.383", "398.777, 664.022, 14.7874, 0.426", "397.985, 663.2, 14.8278, 0.3918", "397.418, 662.222, 14.8789, 0.3282", "397.144, 661.12, 14.9425, 0.2936", "397.053, 659.982, 15.0133, 0.2916", "397.037, 658.838, 15.0838, 0.307", "397.037, 657.695, 15.1496, 0.3316", "397.037, 656.551, 15.2081, 0.3944", "397.037, 655.407, 15.2585, 0.428", "397.037, 654.263, 15.303, 0.4678", "397.037, 653.119, 15.3464, 0.5318", "397.037, 651.975, 15.3923, 0.501", "397.093, 650.833, 15.4432, 0.4282", "397.174, 649.693, 15.5074, 0.4468", "397.259, 648.552, 15.5857, 0.423", "397.304, 647.41, 15.6678, 0.3508", "397.355, 646.268, 15.7442, 0.2936", "397.781, 645.248, 15.8091, 0.2746", "398.58, 644.444, 15.8555, 0.2746", "399.476, 643.732, 15.8811, 0.2746", "400.098, 642.808, 15.8888, 0.2746", "400.275, 641.698, 15.8822, 0.2746", "400.286, 640.554, 15.8649, 0.2748", "400.286, 639.41, 15.839, 0.2748", "400.129, 638.282, 15.8007, 0.275", "399.609, 637.286, 15.7536, 0.2752", "399.048, 636.293, 15.6975, 0.2758", "398.547, 635.264, 15.6292, 0.2768", "398.244, 634.169, 15.5471, 0.2786", "398.118, 633.035, 15.4484, 0.2822", "398.026, 631.896, 15.307, 0.289", "397.998, 630.756, 15.1432, 0.301", "397.998, 629.613, 14.9814, 0.3254", "398.138, 628.484, 14.8311, 0.3618", "398.217, 627.347, 14.6945, 0.47", "397.847, 626.298, 14.5764, 0.4734", "397.526, 625.21, 14.4746, 0.4688", "397.064, 624.176, 14.3816, 0.431", "396.72, 623.096, 14.2992, 0.4752", "396.478, 621.978, 14.2319, 0.426", "396.401, 620.841, 14.1837, 0.3506", "396.396, 619.697, 14.1562, 0.2998", "396.396, 618.553, 14.1499, 0.2956", "396.395, 617.409, 14.1633, 0.31", "396.368, 616.265, 14.1927, 0.3572", "396.22, 615.133, 14.2363, 0.3458", "396.138, 613.994, 14.292, 0.311", "396.026, 612.857, 14.3604, 0.284", "396.325, 611.783, 14.431, 0.28", "396.612, 610.679, 14.4947, 0.2848", "396.468, 609.564, 14.5442, 0.2938", "395.864, 608.613, 14.5725, 0.3108", "395.265, 607.64, 14.5749, 0.3386", "394.701, 606.645, 14.558, 0.4086", "394.173, 605.63, 14.5376, 0.4492", "393.769, 604.562, 14.5153, 0.4118", "393.465, 603.459, 14.498, 0.3836", "393.179, 602.352, 14.4903, 0.4046", "392.94, 601.234, 14.4923, 0.543", "392.789, 600.1, 14.5, 0.5954", "392.576, 598.977, 14.5097, 0.6308", "392.332, 597.859, 14.5191, 0.5352", "392.209, 596.723, 14.5258, 0.5414", "392.144, 595.581, 14.5283, 0.4612", "392.076, 594.44, 14.527, 0.4156", "391.782, 593.339, 14.5227, 0.4452", "390.929, 592.63, 14.5159, 0.495", "389.826, 592.356, 14.5071, 0.5106", "388.705, 592.126, 14.4966, 0.4544", "387.605, 591.812, 14.4885, 0.5098", "386.483, 591.591, 14.4875, 0.4352", "385.343, 591.522, 14.4972, 0.3936", "384.2, 591.553, 14.5193, 0.3862", "383.178, 591.067, 14.5628, 0.5238", "382.257, 590.389, 14.6262, 0.5188", "381.133, 590.192, 14.7009, 0.437", "379.995, 590.299, 14.7785, 0.3854", "378.852, 590.313, 14.8527, 0.4824", "377.813, 589.836, 14.9214, 0.4154", "376.731, 589.467, 14.9816, 0.3562", "375.588, 589.519, 15.0307, 0.3814", "374.594, 590.084, 15.12, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "406.114, 672.765, 15.5534, 0.401", "407.226, 672.045, 14.882, 0.2778", "408.049, 671.321, 14.6346, 0.2806", "408.242, 670.208, 14.3722, 0.2858", "408.179, 669.072, 14.0876, 0.2956", "408.172, 667.932, 13.8275, 0.3136", "408.078, 666.803, 13.5995, 0.3468", "407.664, 665.753, 13.4058, 0.4162", "406.967, 664.851, 13.2455, 0.511", "406.201, 664.003, 13.107, 0.4874", "405.522, 663.091, 12.9786, 0.5128", "404.984, 662.082, 12.8731, 0.4944", "404.449, 661.072, 12.7868, 0.388", "403.89, 660.074, 12.7209, 0.3092", "403.402, 659.042, 12.667, 0.276", "403.023, 657.964, 12.6181, 0.2772", "402.646, 656.885, 12.5634, 0.2794", "402.354, 655.798, 12.4947, 0.2834", "402.345, 654.654, 12.4214, 0.2912", "402.345, 653.51, 12.3524, 0.3042", "402.345, 652.367, 12.2947, 0.3346", "402.442, 651.236, 12.2566, 0.3602", "402.746, 650.133, 12.2438, 0.323", "403.077, 649.037, 12.2382, 0.2926", "403.456, 647.963, 12.2189, 0.2772", "404.031, 646.98, 12.172, 0.2794", "404.827, 646.179, 12.0862, 0.284", "405.871, 645.938, 11.9494, 0.2936", "407.005, 646.061, 11.8011, 0.308", "408.111, 646.307, 11.6596, 0.3474", "409.078, 646.88, 11.5302, 0.3556", "410.081, 647.369, 11.4205, 0.3218", "411.18, 647.682, 11.3285, 0.2984", "412.298, 647.899, 11.229, 0.2994", "413.439, 647.955, 11.1424, 0.3238", "414.582, 647.99, 11.0634, 0.3582", "415.724, 648.05, 10.9804, 0.466", "416.862, 648.156, 10.8878, 0.4524", "418.002, 648.159, 10.7174, 0.418", "418.881, 647.514, 10.4835, 0.419", "419.475, 646.545, 10.2777, 0.6018", "419.806, 645.457, 10.0518, 0.5456", "420.021, 644.339, 9.7954, 0.5584", "420.152, 643.207, 9.5463, 0.4272", "420.274, 642.075, 9.3043, 0.3682", "420.303, 640.935, 9.0668, 0.3564", "420.564, 639.827, 8.8418, 0.3828", "421.124, 638.845, 8.4, 0.6864" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "414.242, 677.362, 9.2753, 0.7742", "415.295, 676.702, 9.5271, 0.5372", "416.418, 676.564, 9.7581, 0.4548", "417.439, 676.096, 10.0145, 0.3998", "418.391, 675.486, 10.273, 0.448", "419.464, 675.118, 10.5357, 0.511", "420.51, 674.718, 10.7838, 0.4612", "421.426, 674.041, 11.0256, 0.3732", "422.278, 673.284, 11.2517, 0.3352", "423.095, 672.488, 11.4609, 0.3584", "423.873, 671.653, 11.6474, 0.4372", "424.578, 670.758, 11.8087, 0.5406", "425.116, 669.76, 11.9482, 0.6472", "425.503, 668.685, 12.0713, 0.6674", "425.924, 667.622, 12.1794, 0.6046", "426.482, 666.632, 12.2745, 0.5812", "427.235, 665.781, 12.3584, 0.5192", "428.143, 665.092, 12.4329, 0.4444", "429.169, 664.609, 12.5006, 0.3646", "430.19, 664.126, 12.566, 0.3476", "431.106, 663.443, 12.6332, 0.395", "432.108, 662.946, 12.7073, 0.4572", "433.234, 662.78, 12.7937, 0.4688", "434.364, 662.633, 12.8956, 0.4136", "435.382, 662.171, 13.0121, 0.3412", "436.189, 661.377, 13.1303, 0.3126", "436.883, 660.469, 13.2365, 0.3216", "437.5, 659.509, 13.3349, 0.3816", "437.462, 658.43, 13.3954, 0.3998", "437.334, 657.297, 13.4154, 0.4048", "437.355, 656.155, 13.4045, 0.4896", "437.676, 655.069, 13.3667, 0.5106", "438.402, 654.208, 13.3077, 0.4348", "439.153, 653.346, 13.2313, 0.3674", "439.693, 652.345, 13.1427, 0.3678", "439.913, 651.233, 13.033, 0.4564", "439.865, 650.095, 12.8956, 0.5292", "439.949, 648.959, 12.7421, 0.5942", "440.371, 647.907, 12.5846, 0.5452", "441.074, 647.013, 12.4352, 0.4332", "441.864, 646.188, 12.2987, 0.366", "442.717, 645.428, 12.178, 0.3738", "443.687, 644.828, 12.0591, 0.4702", "444.722, 644.345, 11.9394, 0.5482", "445.777, 643.906, 11.8194, 0.6274", "446.785, 643.368, 11.7087, 0.5974", "447.732, 642.73, 11.6191, 0.5476", "448.745, 642.202, 11.5581, 0.4992", "449.801, 641.762, 11.5315, 0.428", "450.839, 641.281, 11.5398, 0.435", "451.831, 640.712, 11.579, 0.4038", "452.847, 640.188, 11.6469, 0.443", "453.922, 639.803, 11.7406, 0.4196", "455.017, 639.477, 11.8555, 0.4934", "456.13, 639.216, 11.985, 0.4144", "457.256, 639.02, 12.1171, 0.3504", "458.36, 638.729, 12.2418, 0.3136", "459.492, 638.581, 12.3588, 0.3332", "460.6, 638.303, 12.4625, 0.4112", "461.538, 637.65, 12.5384, 0.4074", "462.646, 637.374, 12.6032, 0.4298", "463.789, 637.343, 12.663, 0.5524", "464.931, 637.335, 12.7276, 0.5888", "465.964, 636.848, 12.8228, 0.4388", "466.882, 636.169, 12.9366, 0.3246", "467.906, 635.664, 13.0691, 0.2786", "469.0, 635.334, 13.2123, 0.2822", "470.081, 634.966, 13.3633, 0.2884", "471.109, 634.472, 13.5267, 0.3012", "472.069, 633.858, 13.712, 0.3214", "473.151, 633.497, 13.8998, 0.3748", "474.219, 633.096, 14.0686, 0.3398", "475.196, 632.51, 14.2056, 0.3144", "476.004, 631.705, 14.3, 0.3056", "476.565, 630.71, 14.3457, 0.333", "476.968, 629.64, 14.344, 0.3786", "477.231, 628.529, 14.3041, 0.4876", "477.376, 627.394, 14.2313, 0.4302", "477.501, 626.259, 14.1274, 0.3998", "477.764, 625.149, 14.0014, 0.4324", "477.81, 624.007, 13.8624, 0.4466", "477.832, 622.867, 13.7107, 0.5188", "478.008, 621.745, 13.5484, 0.5812", "478.544, 620.746, 13.387, 0.532", "479.401, 619.992, 13.2427, 0.431", "480.324, 619.318, 13.1231, 0.4006", "481.232, 618.623, 13.0329, 0.4732", "482.173, 617.975, 12.9768, 0.5278", "483.188, 617.45, 12.9579, 0.559", "484.273, 617.089, 12.9732, 0.4428", "485.353, 616.72, 13.0184, 0.3844", "486.353, 616.176, 13.1653, 0.3992", "487.09, 615.368, 13.7035, 0.4214", "488.048, 614.77, 14.0235, 0.3808", "489.031, 614.195, 14.2617, 0.4034", "490.017, 613.62, 14.428, 0.3512", "491.148, 613.529, 14.5324, 0.3238", "492.239, 613.869, 14.5599, 0.3138", "493.332, 614.211, 14.56, 0.3724", "494.441, 614.488, 14.56, 0.332", "495.567, 614.694, 14.56, 0.2966", "496.692, 614.9, 14.56, 0.2684", "497.817, 615.105, 14.56, 0.2626", "498.943, 615.311, 14.56, 0.2542", "500.068, 615.517, 14.56, 0.2288", "501.193, 615.722, 14.56, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "414.242, 677.362, 9.2753, 0.7742", "413.684, 676.269, 8.7377, 0.3718", "413.069, 675.305, 8.7962, 0.5934", "412.442, 674.349, 8.8302, 0.5746", "411.723, 673.479, 8.8636, 0.4862", "410.954, 672.648, 8.8913, 0.434", "410.521, 671.609, 8.9115, 0.4234", "410.376, 670.479, 8.9298, 0.4448", "410.353, 669.335, 8.9538, 0.4126", "410.353, 668.191, 8.9895, 0.3616", "410.353, 667.047, 9.0355, 0.3456", "410.353, 665.904, 9.0851, 0.3914", "410.392, 664.761, 9.1317, 0.4514", "410.515, 663.625, 9.168, 0.4456", "410.704, 662.496, 9.1858, 0.431", "410.959, 661.383, 9.178, 0.436", "411.313, 660.296, 9.1408, 0.3956", "411.775, 659.252, 9.0735, 0.33", "412.102, 658.174, 8.9455, 0.2854", "411.726, 657.139, 8.7769, 0.2798", "411.682, 656.032, 8.5632, 0.2848", "411.988, 654.938, 8.3453, 0.2936", "412.22, 653.822, 8.1292, 0.3106", "412.781, 652.842, 7.9173, 0.338", "413.524, 651.977, 7.7319, 0.4156", "414.294, 651.134, 7.5631, 0.4244", "415.027, 650.258, 7.3985, 0.482", "415.688, 649.328, 7.2288, 0.5194", "416.287, 648.355, 7.0592, 0.5396", "416.842, 647.356, 6.897, 0.5626", "417.366, 646.342, 6.747, 0.4464", "417.902, 645.333, 6.6079, 0.3604", "418.532, 644.381, 6.4878, 0.327", "418.931, 643.312, 6.3908, 0.365", "419.003, 642.174, 6.3203, 0.4348", "419.006, 641.031, 6.2724, 0.6104", "419.016, 639.887, 6.2446, 0.7086", "419.062, 638.743, 6.2328, 0.7268", "419.454, 637.674, 6.2314, 0.6032", "420.282, 636.893, 6.2367, 0.6442", "420.993, 636.0, 6.2462, 0.668", "421.363, 634.919, 6.2577, 0.6104", "421.611, 633.802, 6.2686, 0.534", "422.024, 632.736, 6.2793, 0.454", "422.648, 631.777, 6.2913, 0.4574", "423.144, 630.747, 6.2946, 0.6348", "423.535, 629.672, 6.2754, 0.6024", "424.056, 628.654, 6.2233, 0.507", "424.639, 627.67, 6.1318, 0.4682", "425.385, 626.807, 5.9784, 0.6268", "426.288, 626.109, 5.7642, 0.7224", "427.267, 625.527, 5.5173, 0.7426", "428.286, 625.015, 5.2736, 0.6136", "429.175, 624.301, 5.0581, 0.7282", "430.034, 623.55, 4.8858, 0.5836", "430.893, 622.799, 4.6581, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "335.619, 640.692, 11.688, 0.6454", "336.148, 639.986, 11.9669, 0.5328", "336.839, 639.082, 12.2243, 0.4534", "337.561, 638.196, 12.3721, 0.516", "338.258, 637.292, 12.4798, 0.6134", "338.798, 636.292, 12.5552, 0.586", "339.22, 635.229, 12.6092, 0.5242", "339.651, 634.169, 12.6515, 0.5326", "340.385, 633.363, 12.6966, 0.4964", "341.437, 632.951, 12.7486, 0.4168", "342.515, 632.583, 12.7996, 0.387", "343.509, 632.028, 12.8514, 0.451", "344.414, 631.33, 12.9111, 0.5528", "345.145, 630.466, 12.9847, 0.6498", "345.741, 629.491, 13.078, 0.7134", "346.161, 628.437, 13.2006, 0.6796", "346.56, 627.371, 13.3683, 0.6938", "347.284, 626.531, 13.5815, 0.7964", "348.244, 625.924, 13.8307, 0.8532", "348.99, 625.11, 14.1016, 0.7176", "349.475, 624.085, 14.3835, 0.5956", "349.745, 622.985, 14.6597, 0.5768", "349.906, 621.858, 14.9196, 0.6424", "349.983, 620.722, 15.1656, 0.6678", "350.042, 619.583, 15.4039, 0.6682", "350.24, 618.465, 15.6365, 0.723", "350.605, 617.387, 15.8615, 0.7916", "351.041, 616.333, 16.0876, 0.8586", "351.565, 615.323, 16.3169, 0.8178", "352.355, 614.532, 16.5565, 0.7844", "353.337, 613.961, 16.7964, 0.803", "354.385, 613.516, 17.041, 0.761", "355.453, 613.121, 17.3105, 0.6014", "356.566, 612.95, 17.6115, 0.4668", "357.694, 613.032, 17.95, 0.4942", "358.57, 613.652, 18.3486, 0.5024", "359.296, 614.513, 18.8228, 0.4942", "360.296, 614.919, 19.3424, 0.628", "361.356, 614.645, 19.8629, 0.6428", "362.434, 614.804, 20.466, 0.5984", "363.448, 615.276, 20.9616, 0.5248", "364.514, 614.906, 21.4078, 0.6304", "365.596, 614.568, 21.7799, 0.792", "366.695, 614.28, 22.1045, 0.9502", "367.793, 613.979, 22.4, 0.9904", "368.886, 613.666, 22.6875, 0.9648", "369.96, 613.29, 22.9843, 0.7028", "371.021, 612.88, 23.294, 0.485", "372.084, 612.476, 23.6044, 0.4052", "373.148, 612.073, 23.896, 0.482", "374.199, 611.633, 24.1402, 0.566", "375.248, 611.182, 24.3152, 0.4926", "376.278, 610.712, 24.4151, 0.4672", "376.927, 609.783, 24.4314, 0.5706", "377.192, 608.675, 24.3644, 0.5894", "377.721, 607.674, 24.2186, 0.5972", "377.837, 606.542, 23.9649, 0.466", "378.207, 605.528, 23.6683, 0.4378", "379.072, 604.796, 23.4035, 0.4984", "379.693, 603.86, 23.1718, 0.5688", "380.156, 602.828, 22.9728, 0.5944", "380.872, 601.945, 22.7949, 0.5152", "381.731, 601.197, 22.6421, 0.4438", "382.643, 600.507, 22.5132, 0.4272", "383.518, 599.773, 22.4214, 0.4238", "384.384, 599.029, 22.3852, 0.4522", "385.32, 598.372, 22.4176, 0.4596", "386.33, 597.862, 22.5279, 0.5728", "387.436, 597.59, 22.7243, 0.6746", "388.562, 597.419, 22.9978, 0.5804", "389.67, 597.207, 23.3423, 0.5658", "390.67, 596.715, 23.7672, 0.6784", "391.534, 595.995, 24.2693, 0.865", "392.425, 595.331, 24.866, 1.0056", "393.345, 594.716, 25.5525, 1.0128", "394.037, 593.887, 26.2854, 0.8232", "394.342, 592.845, 27.0157, 0.659", "394.358, 591.737, 27.6693, 0.6194", "394.14, 590.646, 28.2254, 0.5338", "393.695, 589.614, 28.6846, 0.4202", "393.318, 588.558, 29.0696, 0.3714", "393.455, 587.483, 29.4129, 0.4094", "394.065, 586.538, 29.7413, 0.5452", "394.846, 585.718, 30.0902, 0.6888", "395.656, 584.925, 30.4766, 0.6628", "396.389, 584.067, 30.8809, 0.5036", "396.889, 583.064, 31.2696, 0.3766", "397.68, 582.362, 31.6022, 0.3652", "398.563, 581.667, 31.8416, 0.3552", "399.106, 580.688, 31.9822, 0.3254", "399.454, 579.598, 32.0443, 0.3094", "399.75, 578.495, 32.0569, 0.3194", "400.137, 577.42, 32.0407, 0.3724", "400.625, 576.387, 32.0076, 0.3846", "401.156, 575.374, 31.9659, 0.378", "401.69, 574.362, 31.9214, 0.418", "402.171, 573.325, 31.8951, 0.468", "402.627, 572.276, 31.9096, 0.4564", "403.12, 571.244, 31.9799, 0.4838", "403.638, 570.226, 32.1154, 0.4406", "404.21, 569.24, 32.319, 0.3698", "404.917, 568.352, 32.5844, 0.3328", "405.827, 567.696, 32.9272, 0.3446", "406.895, 567.369, 33.3852, 0.4386", "408.001, 567.391, 33.976, 0.416", "409.052, 567.726, 34.6578, 0.346", "410.033, 568.228, 35.3931, 0.2954", "411.095, 568.478, 36.1444, 0.2938", "412.199, 568.518, 36.8584, 0.3108", "413.308, 568.478, 37.5449, 0.3374", "414.054, 567.774, 38.3547, 0.422", "414.161, 566.693, 39.1297, 0.4276", "414.512, 565.646, 39.8471, 0.5192", "415.067, 564.686, 40.5241, 0.4484", "415.827, 563.878, 41.1852, 0.4108", "416.763, 563.272, 41.8141, 0.4788", "417.767, 562.782, 42.3965, 0.4126", "418.845, 562.473, 42.9481, 0.3576", "419.927, 562.169, 43.4759, 0.3346", "421.054, 562.112, 43.9379, 0.3752", "422.188, 562.112, 44.298, 0.5126", "423.325, 562.04, 44.5603, 0.4634", "424.446, 561.828, 44.7423, 0.481", "425.589, 561.82, 44.8641, 0.4364", "426.701, 562.085, 44.9585, 0.505", "427.775, 562.476, 45.0582, 0.5774", "428.881, 562.766, 45.1646, 0.5292", "429.987, 563.053, 45.2696, 0.407", "430.992, 563.6, 45.3642, 0.3388", "431.984, 564.169, 45.4409, 0.356", "433.117, 564.319, 45.4941, 0.3814", "434.258, 564.4, 45.5468, 0.6864" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "335.619, 640.692, 11.688, 0.6454", "335.933, 639.898, 12.2733, 0.6556", "336.098, 638.782, 12.0192, 0.4992", "335.925, 637.653, 11.9014, 0.4576", "335.782, 636.521, 11.784, 0.4178", "335.771, 635.378, 11.6806, 0.3478", "335.749, 634.235, 11.5986, 0.2962", "335.61, 633.101, 11.5327, 0.2778", "335.303, 632.003, 11.4687, 0.2804", "334.803, 630.978, 11.3921, 0.2856", "334.175, 630.023, 11.3008, 0.295", "333.63, 629.02, 11.1912, 0.3126", "333.196, 627.963, 11.0647, 0.345", "332.727, 626.922, 10.9346, 0.4066", "332.251, 625.885, 10.8162, 0.5132", "331.912, 624.794, 10.7098, 0.5842", "331.714, 623.67, 10.6093, 0.5336", "331.649, 622.529, 10.5056, 0.4528", "331.649, 621.386, 10.39, 0.463", "331.627, 620.245, 10.2489, 0.5678", "331.403, 619.153, 10.0712, 0.5802", "330.77, 618.205, 9.8437, 0.565", "330.228, 617.213, 9.6077, 0.548", "329.92, 616.117, 9.4043, 0.541", "329.708, 614.995, 9.2469, 0.5638", "329.491, 613.873, 9.1413, 0.666", "329.282, 612.748, 9.0861, 0.707", "328.892, 611.695, 9.1173, 0.648", "328.228, 610.764, 9.2552, 0.4756", "327.706, 609.749, 9.3565, 0.448", "327.062, 608.804, 9.4356, 0.6162", "326.241, 608.007, 9.4923, 0.5688", "325.468, 607.164, 9.528, 0.4442", "324.53, 606.511, 9.5454, 0.3538", "323.534, 605.949, 9.5553, 0.3986", "322.637, 605.239, 9.5678, 0.3816", "321.791, 604.468, 9.5894, 0.3844", "320.97, 603.672, 9.6202, 0.4506", "320.148, 602.875, 9.6566, 0.5058", "319.327, 602.079, 9.6958, 0.4794", "318.509, 601.281, 9.7353, 0.5986", "318.066, 600.226, 9.7639, 0.4576", "317.541, 599.209, 9.7826, 0.356", "316.996, 598.203, 9.7936, 0.305", "316.451, 597.198, 9.8, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "268.841, 844.49, 9.2364, 0.7982", "269.507, 845.145, 10.5598, 0.695", "270.256, 845.954, 11.2311, 0.6706", "271.043, 846.756, 11.7597, 0.665", "271.887, 847.5, 12.2561, 0.6072", "272.98, 847.661, 12.7459, 0.523", "274.108, 847.687, 13.1997, 0.4222", "275.135, 848.152, 13.6119, 0.4336", "276.168, 848.619, 13.9741, 0.3962", "277.202, 849.094, 14.3022, 0.4356", "278.171, 849.688, 14.6086, 0.4088", "279.064, 850.391, 14.8998, 0.4274", "279.954, 851.101, 15.1883, 0.548", "280.961, 851.628, 15.4882, 0.593", "282.058, 851.927, 15.7908, 0.452", "283.104, 852.37, 16.0859, 0.3362", "284.122, 852.883, 16.3533, 0.2936", "285.214, 853.208, 16.5936, 0.3104", "286.323, 853.479, 16.7989, 0.336", "287.414, 853.811, 16.9961, 0.4124", "288.516, 854.109, 17.1734, 0.4152", "289.546, 854.602, 17.329, 0.4076", "290.566, 855.106, 17.64, 0.6864" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "268.841, 844.49, 9.2364, 0.7982", "268.052, 845.711, 9.1667, 0.6036", "267.594, 846.759, 9.1102, 0.5786", "267.527, 847.9, 9.0861, 0.4446", "267.78, 849.015, 9.0838, 0.4428", "268.274, 850.046, 9.0982, 0.3684", "268.428, 851.18, 9.1134, 0.3652", "268.382, 852.322, 9.1454, 0.3846" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "268.382, 852.322, 9.1454, 0.3846", "269.137, 852.248, 9.1858, 0.528", "270.279, 852.174, 9.2377, 0.4972", "271.417, 852.066, 9.2987, 0.5388", "272.558, 851.976, 9.3633, 0.564", "273.702, 851.984, 9.4256, 0.6428", "274.846, 851.983, 9.4775, 0.6302", "275.989, 851.962, 9.5179, 0.4724", "277.133, 851.94, 9.5483, 0.3708", "278.273, 852.024, 9.5727, 0.3822", "279.399, 852.229, 9.5954, 0.3508", "280.496, 852.551, 9.6198, 0.3308", "281.582, 852.914, 9.6483, 0.3334", "282.7, 853.154, 9.6844, 0.373", "283.826, 853.353, 9.7298, 0.5074", "284.969, 853.38, 9.7845, 0.4618", "286.109, 853.279, 9.8446, 0.4428", "287.248, 853.172, 9.9087, 0.5384", "288.377, 852.994, 9.9776, 0.537", "289.496, 852.759, 10.0529, 0.4936", "290.615, 852.519, 10.1366, 0.3784", "291.686, 852.12, 10.2281, 0.3342", "292.746, 851.692, 10.3289, 0.34", "293.783, 851.211, 10.4479, 0.3858", "294.819, 850.73, 10.5802, 0.5278", "295.856, 850.249, 10.7208, 0.5168", "296.956, 849.943, 10.8749, 0.4578", "298.045, 849.6, 11.0419, 0.3048", "298.973, 848.954, 11.48, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "268.382, 852.322, 9.1454, 0.3846", "267.645, 853.114, 9.2601, 0.6442", "266.748, 853.822, 9.3496, 0.621", "265.883, 854.569, 9.4501, 0.6926", "265.18, 855.469, 9.5522, 0.7168", "264.503, 856.39, 9.6368, 0.6974", "263.75, 857.252, 9.6959, 0.7106", "263.12, 858.206, 9.7389, 0.6992", "262.551, 859.198, 9.7796, 0.6502", "262.118, 860.256, 9.8065, 0.4626", "261.985, 861.391, 9.8122, 0.351", "261.783, 862.516, 9.8153, 0.3062", "261.367, 863.582, 9.8479, 0.3794", "261.104, 864.682, 10.248, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_30", "dend_29", "dend_16", "dend_9", "dend_4", "dend_3", "dend_0", "dend_45", "dend_44", "dend_42", "dend_31", "dend_26", "dend_17", "dend_11", "dend_10", "dend_8", "dend_5", "dend_2", "dend_1", "dend_37", "dend_32", "dend_28", "dend_27", "dend_25", "dend_18", "dend_15", "dend_12", "dend_7", "dend_6", "dend_41", "dend_38", "dend_34", "dend_33", "dend_20", "dend_19", "dend_14", "dend_13", "dend_40", "dend_39", "dend_36", "dend_35", "dend_24", "dend_21", "dend_23", "dend_22" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8457",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "0.87629277"
  }, {
    "group" : "axon",
    "value" : "0.87629277"
  }, {
    "group" : "dend",
    "value" : "0.87629277"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "74.33427"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.725E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.030994745",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.492675E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.036404833",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.8165514",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.02011411",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.7278384E-8",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.118128E-6",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.1116222E-5",
    "erev" : "-87.30191"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.6532565E-4",
    "erev" : "-87.30191"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.1066384E-7",
    "erev" : "-87.30191"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.6280693E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.00935437",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_489931963",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_489931963

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_30
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_17
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_43, dend_30, dend_29, dend_16, dend_9, dend_4, dend_3, dend_0, dend_45, dend_44, dend_42, dend_31, dend_26, dend_17, dend_11, dend_10, dend_8, dend_5, dend_2, dend_1, dend_37, dend_32, dend_28, dend_27, dend_25, dend_18, dend_15, dend_12, dend_7, dend_6, dend_41, dend_38, dend_34, dend_33, dend_20, dend_19, dend_14, dend_13, dend_40, dend_39, dend_36, dend_35, dend_24, dend_21, dend_23, dend_22]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_8457, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_8457
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_489931963
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000022)
    connect dend_43(0), soma_0(0.5000000000000022)
    connect dend_30(0), soma_0(0.5000000000000022)
    connect dend_29(0), soma_0(0.5000000000000022)
    connect dend_16(0), soma_0(0.5000000000000022)
    connect dend_9(0), soma_0(0.5000000000000022)
    connect dend_4(0), soma_0(0.5000000000000022)
    connect dend_3(0), soma_0(0.5000000000000022)
    connect dend_0(0), soma_0(0.5000000000000022)
    connect axon_1(0), axon_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 314.679, 733.138, 10.08, 12.584 ) }
    soma_0 { pt3dadd( 320.971, 733.138, 10.08, 12.584 ) }
    soma_0 { pt3dadd( 327.263, 733.138, 10.08, 12.584 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 320.971, 733.138, 10.08, 1.0 ) }
    axon_0 { pt3dadd( 326.812, 746.954, 10.08, 1.0 ) }
    axon_0 { pt3dadd( 332.654, 760.77, 10.08, 1.0 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 6/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 317.16, 736.004, 17.6783, 0.7754 ) }
    dend_43 { pt3dadd( 316.35, 736.616, 18.9613, 0.3988 ) }
    dend_43 { pt3dadd( 315.54, 737.302, 19.9994, 0.4456 ) }
    dend_43 { pt3dadd( 314.824, 738.126, 20.8288, 0.6178 ) }
    dend_43 { pt3dadd( 314.137, 738.998, 21.4918, 0.7372 ) }
    dend_43 { pt3dadd( 313.718, 740.033, 22.0006, 0.8082 ) }
    dend_43 { pt3dadd( 313.493, 741.141, 22.3867, 0.6992 ) }
    dend_43 { pt3dadd( 313.263, 742.255, 22.6871, 0.564 ) }
    dend_43 { pt3dadd( 313.181, 743.39, 22.9304, 0.5556 ) }
    dend_43 { pt3dadd( 313.339, 744.515, 23.1361, 0.6578 ) }
    dend_43 { pt3dadd( 313.564, 745.635, 23.3174, 0.7012 ) }
    dend_43 { pt3dadd( 313.859, 746.738, 23.4698, 0.765 ) }
    dend_43 { pt3dadd( 314.169, 747.839, 23.5724, 0.813 ) }
    dend_43 { pt3dadd( 314.432, 748.952, 23.6145, 0.8582 ) }
    dend_43 { pt3dadd( 314.489, 750.091, 23.5973, 0.8916 ) }
    dend_43 { pt3dadd( 314.621, 751.226, 23.537, 0.9676 ) }
    dend_43 { pt3dadd( 314.952, 752.317, 23.4472, 1.0052 ) }
    dend_43 { pt3dadd( 315.246, 753.421, 23.3413, 0.9834 ) }
    dend_43 { pt3dadd( 315.46, 754.545, 23.2165, 0.8982 ) }
    dend_43 { pt3dadd( 315.607, 755.676, 23.0549, 0.6942 ) }
    dend_43 { pt3dadd( 315.681, 756.814, 22.8491, 0.5052 ) }
    dend_43 { pt3dadd( 315.953, 757.918, 22.5968, 0.4302 ) }
    dend_43 { pt3dadd( 316.549, 758.88, 22.3068, 0.5368 ) }
    dend_43 { pt3dadd( 317.112, 759.865, 21.9568, 0.5614 ) }
    dend_43 { pt3dadd( 317.031, 760.987, 21.5805, 0.5124 ) }
    dend_43 { pt3dadd( 316.695, 762.071, 21.2445, 0.5504 ) }
    dend_43 { pt3dadd( 316.431, 763.178, 20.9761, 0.6614 ) }
    dend_43 { pt3dadd( 316.331, 764.316, 20.8005, 0.6832 ) }
    dend_43 { pt3dadd( 316.313, 765.46, 20.7259, 0.7094 ) }
    dend_43 { pt3dadd( 316.316, 766.604, 20.7486, 0.8168 ) }
    dend_43 { pt3dadd( 316.366, 767.745, 20.8645, 0.9592 ) }
    dend_43 { pt3dadd( 316.577, 768.867, 21.0238, 1.0486 ) }
    dend_43 { pt3dadd( 316.769, 769.993, 21.1912, 0.9146 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 39/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 322.616, 728.23, 13.0662, 0.637 ) }
    dend_30 { pt3dadd( 322.974, 727.165, 13.5939, 0.3568 ) }
    dend_30 { pt3dadd( 323.285, 726.085, 14.1126, 0.4458 ) }
    dend_30 { pt3dadd( 323.516, 724.985, 14.6301, 0.5066 ) }
    dend_30 { pt3dadd( 324.216, 724.111, 15.0829, 0.5058 ) }
    dend_30 { pt3dadd( 325.171, 723.493, 15.3803, 0.5596 ) }
    dend_30 { pt3dadd( 326.047, 722.761, 15.5154, 0.8046 ) }
    dend_30 { pt3dadd( 326.994, 722.118, 15.4963, 1.0144 ) }
    dend_30 { pt3dadd( 327.806, 721.316, 15.3485, 0.8022 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 48/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 325.078, 736.487, 11.7917, 0.5524 ) }
    dend_29 { pt3dadd( 325.959, 737.205, 12.1027, 0.6086 ) }
    dend_29 { pt3dadd( 326.841, 737.922, 12.4097, 0.5474 ) }
    dend_29 { pt3dadd( 327.723, 738.642, 12.7022, 0.507 ) }
    dend_29 { pt3dadd( 328.621, 739.342, 12.9826, 0.6258 ) }
    dend_29 { pt3dadd( 329.617, 739.891, 13.2449, 0.5934 ) }
    dend_29 { pt3dadd( 330.685, 740.29, 13.4587, 0.4838 ) }
    dend_29 { pt3dadd( 331.522, 741.062, 13.6293, 0.4566 ) }
    dend_29 { pt3dadd( 332.559, 741.534, 13.8133, 0.4286 ) }
    dend_29 { pt3dadd( 333.696, 741.464, 14.0176, 0.526 ) }
    dend_29 { pt3dadd( 334.699, 741.965, 14.2632, 0.445 ) }
    dend_29 { pt3dadd( 335.181, 742.996, 14.5246, 0.4256 ) }
    dend_29 { pt3dadd( 335.889, 743.867, 14.8183, 0.4844 ) }
    dend_29 { pt3dadd( 336.89, 744.392, 15.1222, 0.5424 ) }
    dend_29 { pt3dadd( 337.986, 744.683, 15.4755, 0.461 ) }
    dend_29 { pt3dadd( 339.086, 744.953, 15.8079, 0.423 ) }
    dend_29 { pt3dadd( 340.218, 745.071, 16.1215, 0.362 ) }
    dend_29 { pt3dadd( 341.31, 745.271, 16.4297, 0.3604 ) }
    dend_29 { pt3dadd( 342.26, 745.897, 16.7289, 0.3986 ) }
    dend_29 { pt3dadd( 343.21, 746.514, 17.0419, 0.501 ) }
    dend_29 { pt3dadd( 344.268, 746.879, 17.4283, 0.5538 ) }
    dend_29 { pt3dadd( 345.397, 746.904, 17.8144, 0.4926 ) }
    dend_29 { pt3dadd( 346.521, 746.746, 18.1365, 0.5104 ) }
    dend_29 { pt3dadd( 347.641, 746.548, 18.4152, 0.6072 ) }
    dend_29 { pt3dadd( 348.761, 746.563, 18.665, 0.6498 ) }
    dend_29 { pt3dadd( 349.837, 746.93, 18.9003, 0.6998 ) }
    dend_29 { pt3dadd( 350.898, 747.332, 19.1505, 0.78 ) }
    dend_29 { pt3dadd( 352.01, 747.437, 19.4377, 0.8244 ) }
    dend_29 { pt3dadd( 353.129, 747.232, 19.753, 0.699 ) }
    dend_29 { pt3dadd( 354.181, 747.341, 20.1015, 0.4626 ) }
    dend_29 { pt3dadd( 355.204, 747.811, 20.484, 0.3364 ) }
    dend_29 { pt3dadd( 356.264, 747.766, 20.8615, 0.3112 ) }
    dend_29 { pt3dadd( 357.035, 747.019, 21.1791, 0.3546 ) }
    dend_29 { pt3dadd( 357.757, 746.168, 21.3822, 0.3688 ) }
    dend_29 { pt3dadd( 358.748, 745.624, 21.4726, 0.347 ) }
    dend_29 { pt3dadd( 359.81, 745.197, 21.5083, 0.3458 ) }
    dend_29 { pt3dadd( 360.887, 744.818, 21.556, 0.3858 ) }
    dend_29 { pt3dadd( 361.864, 744.263, 21.6717, 0.4922 ) }
    dend_29 { pt3dadd( 362.761, 743.559, 21.8649, 0.6564 ) }
    dend_29 { pt3dadd( 363.685, 742.89, 22.1145, 0.6776 ) }
    dend_29 { pt3dadd( 364.75, 742.578, 22.396, 0.5878 ) }
    dend_29 { pt3dadd( 365.857, 742.33, 22.6984, 0.596 ) }
    dend_29 { pt3dadd( 366.975, 742.369, 23.0272, 0.6454 ) }
    dend_29 { pt3dadd( 367.933, 742.922, 23.381, 0.5814 ) }
    dend_29 { pt3dadd( 369.012, 743.113, 23.7457, 0.5816 ) }
    dend_29 { pt3dadd( 370.146, 743.054, 24.0729, 0.5134 ) }
    dend_29 { pt3dadd( 371.239, 743.353, 24.3477, 0.5496 ) }
    dend_29 { pt3dadd( 372.292, 743.79, 24.601, 0.6154 ) }
    dend_29 { pt3dadd( 373.354, 744.203, 24.8328, 0.5992 ) }
    dend_29 { pt3dadd( 374.411, 744.631, 25.0502, 0.5854 ) }
    dend_29 { pt3dadd( 375.432, 745.135, 25.2899, 0.426 ) }
    dend_29 { pt3dadd( 376.438, 745.674, 25.5111, 0.3346 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 377.483, 746.13, 25.7359, 0.2888 ) }
    dend_29 { pt3dadd( 378.499, 746.645, 25.9718, 0.2988 ) }
    dend_29 { pt3dadd( 379.417, 747.321, 26.2177, 0.3216 ) }
    dend_29 { pt3dadd( 380.402, 747.895, 26.4669, 0.3514 ) }
    dend_29 { pt3dadd( 381.535, 747.992, 26.7182, 0.4684 ) }
    dend_29 { pt3dadd( 382.674, 747.972, 26.9867, 0.3868 ) }
    dend_29 { pt3dadd( 383.798, 748.155, 27.2491, 0.3132 ) }
    dend_29 { pt3dadd( 384.837, 748.624, 27.4831, 0.254 ) }
    dend_29 { pt3dadd( 385.872, 749.105, 27.6797, 0.2288 ) }
    dend_29 { pt3dadd( 386.903, 749.583, 28.0, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 10/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 319.181, 738.603, 12.1857, 0.5672 ) }
    dend_16 { pt3dadd( 318.826, 739.682, 12.5379, 0.3704 ) }
    dend_16 { pt3dadd( 318.471, 740.761, 12.8602, 0.475 ) }
    dend_16 { pt3dadd( 318.122, 741.844, 13.1516, 0.5356 ) }
    dend_16 { pt3dadd( 318.232, 742.969, 13.4086, 0.6794 ) }
    dend_16 { pt3dadd( 318.057, 744.091, 13.6228, 0.947 ) }
    dend_16 { pt3dadd( 317.142, 744.739, 13.8021, 1.0384 ) }
    dend_16 { pt3dadd( 316.197, 745.381, 13.9506, 0.9756 ) }
    dend_16 { pt3dadd( 315.393, 746.192, 14.086, 0.9562 ) }
    dend_16 { pt3dadd( 315.182, 747.31, 14.2219, 0.8632 ) }
    dend_16 { pt3dadd( 315.158, 748.452, 14.3754, 0.9816 ) }
    dend_16 { pt3dadd( 315.101, 749.592, 14.5537, 0.917 ) }
    dend_16 { pt3dadd( 314.914, 750.718, 14.7434, 0.8378 ) }
    dend_16 { pt3dadd( 314.685, 751.836, 14.9261, 0.9302 ) }
    dend_16 { pt3dadd( 314.26, 752.896, 15.073, 0.856 ) }
    dend_16 { pt3dadd( 313.835, 753.958, 15.1651, 0.772 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 325.096, 729.628, 8.3343, 0.441 ) }
    dend_9 { pt3dadd( 325.966, 728.89, 8.0835, 0.4968 ) }
    dend_9 { pt3dadd( 326.891, 728.225, 7.8802, 0.4456 ) }
    dend_9 { pt3dadd( 327.782, 727.51, 7.7439, 0.423 ) }
    dend_9 { pt3dadd( 328.455, 726.586, 7.6616, 0.4428 ) }
    dend_9 { pt3dadd( 329.065, 725.619, 7.6186, 0.6364 ) }
    dend_9 { pt3dadd( 329.72, 724.682, 7.5963, 0.6922 ) }
    dend_9 { pt3dadd( 330.759, 724.21, 7.5749, 0.9396 ) }
    dend_9 { pt3dadd( 331.882, 723.994, 7.5315, 1.1282 ) }
    dend_9 { pt3dadd( 332.971, 723.645, 7.4673, 1.1894 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 320.605, 727.815, 9.3675, 0.8028 ) }
    dend_4 { pt3dadd( 320.527, 726.676, 9.2356, 0.3932 ) }
    dend_4 { pt3dadd( 320.448, 725.535, 9.1089, 0.5118 ) }
    dend_4 { pt3dadd( 320.37, 724.394, 8.9876, 0.6324 ) }
    dend_4 { pt3dadd( 320.293, 723.254, 8.8716, 0.7734 ) }
    dend_4 { pt3dadd( 320.166, 722.119, 8.7626, 0.9374 ) }
    dend_4 { pt3dadd( 319.963, 720.993, 8.667, 0.8826 ) }
    dend_4 { pt3dadd( 319.805, 719.862, 8.5852, 0.856 ) }
    dend_4 { pt3dadd( 319.674, 718.726, 8.501, 0.863 ) }
    dend_4 { pt3dadd( 319.827, 717.6, 8.3841, 0.9604 ) }
    dend_4 { pt3dadd( 320.568, 716.762, 8.2363, 0.9702 ) }
    dend_4 { pt3dadd( 321.36, 715.938, 8.0758, 1.0536 ) }
    dend_4 { pt3dadd( 321.86, 714.917, 7.9134, 0.975 ) }
    dend_4 { pt3dadd( 322.412, 713.917, 7.7764, 0.9214 ) }
    dend_4 { pt3dadd( 322.938, 712.901, 7.6878, 0.9318 ) }
    dend_4 { pt3dadd( 323.634, 711.995, 7.6618, 0.8968 ) }
    dend_4 { pt3dadd( 324.037, 710.927, 7.7092, 0.9022 ) }
    dend_4 { pt3dadd( 324.093, 709.787, 7.8272, 0.775 ) }
    dend_4 { pt3dadd( 323.865, 708.669, 8.0284, 0.7692 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 315.872, 736.232, 8.4624, 0.3242 ) }
    dend_3 { pt3dadd( 314.782, 736.186, 8.1134, 0.3738 ) }
    dend_3 { pt3dadd( 313.659, 736.026, 7.7611, 0.451 ) }
    dend_3 { pt3dadd( 312.597, 736.406, 7.4042, 0.668 ) }
    dend_3 { pt3dadd( 311.833, 737.238, 7.0218, 0.6948 ) }
    dend_3 { pt3dadd( 311.048, 738.054, 6.6208, 0.5582 ) }
    dend_3 { pt3dadd( 310.36, 738.874, 5.6308, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 62/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 316.394, 729.524, 7.9695, 1.004 ) }
    dend_0 { pt3dadd( 315.344, 729.746, 7.6807, 0.7806 ) }
    dend_0 { pt3dadd( 314.241, 730.038, 7.4895, 0.6744 ) }
    dend_0 { pt3dadd( 313.132, 729.81, 7.3563, 0.7692 ) }
    dend_0 { pt3dadd( 312.274, 729.07, 7.2536, 0.879 ) }
    dend_0 { pt3dadd( 311.369, 728.371, 7.1727, 0.9102 ) }
    dend_0 { pt3dadd( 310.43, 727.72, 7.0977, 0.8918 ) }
    dend_0 { pt3dadd( 309.479, 727.084, 7.0137, 0.954 ) }
    dend_0 { pt3dadd( 308.475, 726.538, 6.9038, 0.8034 ) }
    dend_0 { pt3dadd( 307.455, 726.027, 6.7339, 0.7556 ) }
    dend_0 { pt3dadd( 307.639, 724.906, 6.4877, 0.5114 ) }
    dend_0 { pt3dadd( 307.456, 723.995, 6.236, 0.4262 ) }
    dend_0 { pt3dadd( 306.586, 723.328, 6.0803, 0.475 ) }
    dend_0 { pt3dadd( 306.147, 722.29, 5.9858, 0.5898 ) }
    dend_0 { pt3dadd( 306.004, 721.157, 5.9495, 0.654 ) }
    dend_0 { pt3dadd( 305.913, 720.019, 5.9508, 0.7644 ) }
    dend_0 { pt3dadd( 305.622, 718.923, 5.9669, 0.7344 ) }
    dend_0 { pt3dadd( 305.138, 717.886, 5.9903, 0.7042 ) }
    dend_0 { pt3dadd( 304.637, 716.858, 6.0324, 0.7962 ) }
    dend_0 { pt3dadd( 304.124, 715.835, 6.1079, 0.8908 ) }
    dend_0 { pt3dadd( 303.614, 714.812, 6.2275, 0.8712 ) }
    dend_0 { pt3dadd( 303.167, 713.766, 6.3914, 0.7162 ) }
    dend_0 { pt3dadd( 303.049, 712.664, 6.5829, 0.591 ) }
    dend_0 { pt3dadd( 303.38, 711.581, 6.778, 0.5664 ) }
    dend_0 { pt3dadd( 303.796, 710.521, 6.9626, 0.55 ) }
    dend_0 { pt3dadd( 304.018, 709.407, 7.134, 0.632 ) }
    dend_0 { pt3dadd( 303.999, 708.272, 7.2964, 0.6688 ) }
    dend_0 { pt3dadd( 303.788, 707.151, 7.4546, 0.5732 ) }
    dend_0 { pt3dadd( 303.43, 706.071, 7.6093, 0.5076 ) }
    dend_0 { pt3dadd( 302.905, 705.06, 7.7568, 0.478 ) }
    dend_0 { pt3dadd( 302.247, 704.13, 7.8949, 0.4136 ) }
    dend_0 { pt3dadd( 301.46, 703.306, 8.0213, 0.3938 ) }
    dend_0 { pt3dadd( 300.587, 702.568, 8.1355, 0.4592 ) }
    dend_0 { pt3dadd( 299.726, 701.818, 8.2439, 0.5422 ) }
    dend_0 { pt3dadd( 298.943, 700.987, 8.3536, 0.5126 ) }
    dend_0 { pt3dadd( 298.249, 700.08, 8.4589, 0.4926 ) }
    dend_0 { pt3dadd( 297.523, 699.203, 8.5555, 0.4742 ) }
    dend_0 { pt3dadd( 296.799, 698.326, 8.6482, 0.4046 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 296.439, 697.274, 8.7349, 0.3958 ) }
    dend_0 { pt3dadd( 296.297, 696.139, 8.8161, 0.3984 ) }
    dend_0 { pt3dadd( 296.05, 695.026, 8.8943, 0.4138 ) }
    dend_0 { pt3dadd( 295.701, 693.937, 8.9676, 0.41 ) }
    dend_0 { pt3dadd( 295.258, 692.885, 9.0334, 0.4134 ) }
    dend_0 { pt3dadd( 294.718, 691.878, 9.0891, 0.4124 ) }
    dend_0 { pt3dadd( 294.224, 690.849, 9.1349, 0.4016 ) }
    dend_0 { pt3dadd( 293.835, 689.774, 9.172, 0.4706 ) }
    dend_0 { pt3dadd( 293.376, 688.73, 9.2015, 0.4998 ) }
    dend_0 { pt3dadd( 292.755, 687.774, 9.2245, 0.4988 ) }
    dend_0 { pt3dadd( 292.082, 686.85, 9.2432, 0.512 ) }
    dend_0 { pt3dadd( 291.412, 685.922, 9.2615, 0.5374 ) }
    dend_0 { pt3dadd( 290.807, 684.953, 9.2678, 0.4786 ) }
    dend_0 { pt3dadd( 290.211, 683.978, 9.2437, 0.365 ) }
    dend_0 { pt3dadd( 289.814, 682.926, 9.1955, 0.2952 ) }
    dend_0 { pt3dadd( 289.598, 681.803, 9.1381, 0.2748 ) }
    dend_0 { pt3dadd( 289.38, 680.68, 9.0792, 0.275 ) }
    dend_0 { pt3dadd( 289.202, 679.551, 9.025, 0.2752 ) }
    dend_0 { pt3dadd( 289.009, 678.424, 8.9798, 0.2756 ) }
    dend_0 { pt3dadd( 288.763, 677.307, 8.9431, 0.2768 ) }
    dend_0 { pt3dadd( 288.349, 676.248, 8.909, 0.2788 ) }
    dend_0 { pt3dadd( 287.721, 675.299, 8.8724, 0.2824 ) }
    dend_0 { pt3dadd( 286.921, 674.487, 8.8297, 0.2888 ) }
    dend_0 { pt3dadd( 285.968, 673.867, 8.7775, 0.3012 ) }
    dend_0 { pt3dadd( 284.976, 673.299, 8.7139, 0.3238 ) }
    dend_0 { pt3dadd( 284.057, 672.624, 8.6328, 0.3678 ) }
    dend_0 { pt3dadd( 283.095, 672.014, 8.5327, 0.4408 ) }
    dend_0 { pt3dadd( 282.136, 671.398, 8.42, 0.6202 ) }
    dend_0 { pt3dadd( 281.316, 670.61, 8.2965, 0.7414 ) }
    dend_0 { pt3dadd( 280.501, 669.811, 8.167, 0.623 ) }
    dend_0 { pt3dadd( 279.542, 669.206, 8.0413, 0.4502 ) }
    dend_0 { pt3dadd( 278.569, 668.609, 7.9292, 0.3706 ) }
    dend_0 { pt3dadd( 277.826, 667.763, 7.8274, 0.4416 ) }
    dend_0 { pt3dadd( 277.141, 666.849, 7.7397, 0.4256 ) }
    dend_0 { pt3dadd( 276.18, 666.295, 7.6731, 0.3622 ) }
    dend_0 { pt3dadd( 275.099, 665.921, 7.6309, 0.3214 ) }
    dend_0 { pt3dadd( 273.997, 665.616, 7.6138, 0.3316 ) }
    dend_0 { pt3dadd( 272.869, 665.437, 7.6227, 0.394 ) }
    dend_0 { pt3dadd( 271.807, 665.046, 7.6626, 0.4314 ) }
    dend_0 { pt3dadd( 270.861, 664.411, 7.7253, 0.3882 ) }
    dend_0 { pt3dadd( 269.928, 663.752, 7.8003, 0.3318 ) }
    dend_0 { pt3dadd( 268.885, 663.305, 7.8805, 0.3094 ) }
    dend_0 { pt3dadd( 267.761, 663.129, 7.9637, 0.3284 ) }
    dend_0 { pt3dadd( 266.922, 662.441, 8.0465, 0.369 ) }
    dend_0 { pt3dadd( 265.97, 661.828, 8.1292, 0.4848 ) }
    dend_0 { pt3dadd( 264.963, 661.286, 8.2184, 0.4968 ) }
    dend_0 { pt3dadd( 263.913, 660.837, 8.3229, 0.4074 ) }
    dend_0 { pt3dadd( 263.027, 660.135, 8.4593, 0.3134 ) }
    dend_0 { pt3dadd( 262.548, 659.111, 8.6099, 0.282 ) }
    dend_0 { pt3dadd( 261.764, 658.295, 8.8093, 0.283 ) }
    dend_0 { pt3dadd( 260.688, 657.922, 9.0166, 0.29 ) }
    dend_0 { pt3dadd( 259.782, 657.23, 9.2212, 0.303 ) }
    dend_0 { pt3dadd( 258.815, 656.624, 9.4131, 0.3286 ) }
    dend_0 { pt3dadd( 258.033, 655.792, 9.5839, 0.37 ) }
    dend_0 { pt3dadd( 257.185, 655.027, 9.7421, 0.4738 ) }
    dend_0 { pt3dadd( 256.313, 654.288, 9.8857, 0.5364 ) }
    dend_0 { pt3dadd( 255.491, 653.494, 10.016, 0.5968 ) }
    dend_0 { pt3dadd( 254.749, 652.625, 10.1355, 0.5182 ) }
    dend_0 { pt3dadd( 254.063, 651.711, 10.2452, 0.386 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 59/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 332.654, 760.77, 10.08, 1.0 ) }
    axon_1 { pt3dadd( 338.495, 774.586, 10.08, 1.0 ) }
    axon_1 { pt3dadd( 344.336, 788.402, 10.08, 1.0 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 62/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 316.769, 769.993, 21.1912, 0.9146 ) }
    dend_45 { pt3dadd( 316.014, 770.994, 21.6803, 0.4992 ) }
    dend_45 { pt3dadd( 315.26, 771.852, 21.8504, 0.4042 ) }
    dend_45 { pt3dadd( 314.769, 772.881, 22.0428, 0.4034 ) }
    dend_45 { pt3dadd( 314.537, 773.996, 22.2852, 0.3434 ) }
    dend_45 { pt3dadd( 314.404, 775.126, 22.5667, 0.317 ) }
    dend_45 { pt3dadd( 314.284, 776.257, 22.872, 0.3 ) }
    dend_45 { pt3dadd( 314.34, 777.389, 23.2336, 0.3474 ) }
    dend_45 { pt3dadd( 314.312, 778.521, 23.644, 0.2788 ) }
    dend_45 { pt3dadd( 314.038, 779.554, 24.64, 0.2288 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 316.769, 769.993, 21.1912, 0.9146 ) }
    dend_44 { pt3dadd( 316.882, 770.656, 21.3318, 0.8212 ) }
    dend_44 { pt3dadd( 317.092, 771.778, 21.5127, 0.6752 ) }
    dend_44 { pt3dadd( 317.417, 772.868, 21.621, 0.5382 ) }
    dend_44 { pt3dadd( 317.757, 773.954, 21.6976, 0.4276 ) }
    dend_44 { pt3dadd( 318.006, 775.07, 21.7312, 0.4282 ) }
    dend_44 { pt3dadd( 318.207, 776.195, 21.7417, 0.495 ) }
    dend_44 { pt3dadd( 318.387, 777.324, 21.7382, 0.537 ) }
    dend_44 { pt3dadd( 318.504, 778.458, 21.7316, 0.5464 ) }
    dend_44 { pt3dadd( 318.423, 779.595, 21.7341, 0.5572 ) }
    dend_44 { pt3dadd( 318.119, 780.69, 21.754, 0.4998 ) }
    dend_44 { pt3dadd( 317.685, 781.749, 21.7882, 0.4008 ) }
    dend_44 { pt3dadd( 317.348, 782.837, 21.8322, 0.3566 ) }
    dend_44 { pt3dadd( 317.147, 783.961, 21.8861, 0.3932 ) }
    dend_44 { pt3dadd( 317.102, 785.1, 21.9526, 0.4496 ) }
    dend_44 { pt3dadd( 317.239, 786.232, 22.0347, 0.44 ) }
    dend_44 { pt3dadd( 317.483, 787.349, 22.1381, 0.4134 ) }
    dend_44 { pt3dadd( 317.794, 788.447, 22.2693, 0.458 ) }
    dend_44 { pt3dadd( 318.101, 789.548, 22.4344, 0.5434 ) }
    dend_44 { pt3dadd( 318.009, 790.637, 22.6455, 0.6378 ) }
    dend_44 { pt3dadd( 317.731, 791.738, 22.8928, 0.6704 ) }
    dend_44 { pt3dadd( 317.689, 792.869, 23.1565, 0.6694 ) }
    dend_44 { pt3dadd( 317.595, 793.997, 23.4287, 0.7372 ) }
    dend_44 { pt3dadd( 317.271, 795.083, 23.7076, 0.7554 ) }
    dend_44 { pt3dadd( 317.128, 796.194, 24.0008, 0.6654 ) }
    dend_44 { pt3dadd( 317.479, 797.244, 24.3129, 0.5292 ) }
    dend_44 { pt3dadd( 317.437, 798.308, 24.6219, 0.4932 ) }
    dend_44 { pt3dadd( 316.794, 799.212, 24.9066, 0.5466 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 315.985, 800.015, 25.1645, 0.5122 ) }
    dend_44 { pt3dadd( 315.251, 800.885, 25.3867, 0.461 ) }
    dend_44 { pt3dadd( 314.618, 801.833, 25.5589, 0.499 ) }
    dend_44 { pt3dadd( 314.01, 802.801, 25.6697, 0.614 ) }
    dend_44 { pt3dadd( 313.505, 803.824, 25.7169, 0.6606 ) }
    dend_44 { pt3dadd( 313.122, 804.901, 25.7051, 0.6858 ) }
    dend_44 { pt3dadd( 312.77, 805.988, 25.6432, 0.6844 ) }
    dend_44 { pt3dadd( 312.343, 807.049, 25.5394, 0.5944 ) }
    dend_44 { pt3dadd( 311.891, 808.098, 25.4076, 0.5554 ) }
    dend_44 { pt3dadd( 311.44, 809.148, 25.2697, 0.5974 ) }
    dend_44 { pt3dadd( 311.049, 810.221, 25.1425, 0.622 ) }
    dend_44 { pt3dadd( 310.655, 811.294, 25.0366, 0.5072 ) }
    dend_44 { pt3dadd( 310.085, 812.278, 24.9518, 0.385 ) }
    dend_44 { pt3dadd( 309.449, 813.228, 24.8812, 0.3366 ) }
    dend_44 { pt3dadd( 308.864, 814.21, 24.8156, 0.3642 ) }
    dend_44 { pt3dadd( 308.472, 815.279, 24.7441, 0.4348 ) }
    dend_44 { pt3dadd( 308.15, 816.376, 24.6644, 0.6014 ) }
    dend_44 { pt3dadd( 307.807, 817.467, 24.5893, 0.738 ) }
    dend_44 { pt3dadd( 307.405, 818.537, 24.5309, 0.83 ) }
    dend_44 { pt3dadd( 306.876, 819.548, 24.4887, 0.743 ) }
    dend_44 { pt3dadd( 306.283, 820.526, 24.4607, 0.7458 ) }
    dend_44 { pt3dadd( 305.657, 821.484, 24.4449, 0.813 ) }
    dend_44 { pt3dadd( 304.964, 822.393, 24.4312, 0.904 ) }
    dend_44 { pt3dadd( 304.237, 823.276, 24.4045, 1.0078 ) }
    dend_44 { pt3dadd( 303.582, 824.212, 24.3527, 1.1168 ) }
    dend_44 { pt3dadd( 302.833, 825.07, 24.2486, 1.0952 ) }
    dend_44 { pt3dadd( 301.841, 825.609, 24.0961, 1.115 ) }
    dend_44 { pt3dadd( 300.819, 826.119, 23.9288, 1.0996 ) }
    dend_44 { pt3dadd( 299.819, 826.67, 23.7607, 0.9254 ) }
    dend_44 { pt3dadd( 298.831, 827.241, 23.5969, 0.8064 ) }
    dend_44 { pt3dadd( 297.721, 827.412, 23.4306, 0.7812 ) }
    dend_44 { pt3dadd( 296.632, 827.734, 23.2649, 0.647 ) }
    dend_44 { pt3dadd( 295.73, 828.417, 23.0831, 0.5764 ) }
    dend_44 { pt3dadd( 295.478, 829.495, 22.8516, 0.7024 ) }
    dend_44 { pt3dadd( 295.461, 830.633, 22.5819, 0.8968 ) }
    dend_44 { pt3dadd( 295.398, 831.768, 22.273, 0.9534 ) }
    dend_44 { pt3dadd( 294.892, 832.776, 21.9369, 1.0038 ) }
    dend_44 { pt3dadd( 293.948, 833.388, 21.6014, 1.0138 ) }
    dend_44 { pt3dadd( 292.919, 833.866, 21.2723, 0.9936 ) }
    dend_44 { pt3dadd( 291.842, 834.228, 20.9416, 0.8988 ) }
    dend_44 { pt3dadd( 290.794, 834.666, 20.6211, 0.7716 ) }
    dend_44 { pt3dadd( 290.098, 835.55, 20.2943, 0.9164 ) }
    dend_44 { pt3dadd( 289.802, 836.64, 19.9374, 1.096 ) }
    dend_44 { pt3dadd( 289.494, 837.731, 19.5411, 1.1298 ) }
    dend_44 { pt3dadd( 288.93, 838.709, 19.1224, 1.075 ) }
    dend_44 { pt3dadd( 288.2, 839.572, 18.7012, 1.012 ) }
    dend_44 { pt3dadd( 287.346, 840.315, 18.2886, 0.9088 ) }
    dend_44 { pt3dadd( 286.462, 841.024, 17.9062, 0.8836 ) }
    dend_44 { pt3dadd( 285.576, 841.735, 17.5776, 0.7092 ) }
    dend_44 { pt3dadd( 284.719, 842.484, 17.3068, 0.7962 ) }
    dend_44 { pt3dadd( 283.944, 843.321, 17.0925, 0.7502 ) }
    dend_44 { pt3dadd( 283.071, 844.057, 16.919, 0.8194 ) }
    dend_44 { pt3dadd( 282.014, 844.489, 16.7738, 0.8496 ) }
    dend_44 { pt3dadd( 280.987, 844.989, 16.6446, 0.9382 ) }
    dend_44 { pt3dadd( 280.032, 845.619, 16.5344, 0.9434 ) }
    dend_44 { pt3dadd( 279.158, 846.355, 16.4334, 0.812 ) }
    dend_44 { pt3dadd( 278.353, 847.166, 16.3273, 0.7924 ) }
    dend_44 { pt3dadd( 277.514, 847.942, 16.1992, 0.81 ) }
    dend_44 { pt3dadd( 276.641, 848.68, 16.0374, 0.8108 ) }
    dend_44 { pt3dadd( 275.842, 849.493, 15.8372, 0.9686 ) }
    dend_44 { pt3dadd( 275.299, 850.494, 15.5716, 0.953 ) }
    dend_44 { pt3dadd( 274.84, 851.534, 15.3054, 0.8028 ) }
    dend_44 { pt3dadd( 274.129, 852.423, 15.039, 0.7186 ) }
    dend_44 { pt3dadd( 273.456, 853.341, 14.7609, 0.7856 ) }
    dend_44 { pt3dadd( 272.65, 854.142, 14.4678, 0.8956 ) }
    dend_44 { pt3dadd( 271.785, 854.881, 14.1777, 0.8794 ) }
    dend_44 { pt3dadd( 270.946, 855.653, 13.9107, 0.8454 ) }
    dend_44 { pt3dadd( 270.138, 856.453, 13.6737, 0.8202 ) }
    dend_44 { pt3dadd( 269.179, 857.067, 13.4566, 0.8176 ) }
    dend_44 { pt3dadd( 268.109, 857.458, 13.2482, 0.8124 ) }
    dend_44 { pt3dadd( 266.981, 857.635, 13.0515, 0.802 ) }
    dend_44 { pt3dadd( 265.848, 857.754, 12.8611, 0.787 ) }
    dend_44 { pt3dadd( 264.759, 858.096, 12.6627, 0.7388 ) }
    dend_44 { pt3dadd( 263.654, 858.371, 12.4384, 0.8002 ) }
    dend_44 { pt3dadd( 262.632, 858.84, 12.1556, 0.7408 ) }
    dend_44 { pt3dadd( 261.839, 859.579, 11.8315, 0.6166 ) }
    dend_44 { pt3dadd( 260.722, 859.452, 11.4784, 0.634 ) }
    dend_44 { pt3dadd( 259.69, 858.996, 11.1712, 0.6352 ) }
    dend_44 { pt3dadd( 258.797, 858.3, 10.8727, 0.6744 ) }
    dend_44 { pt3dadd( 258.001, 857.486, 10.6014, 0.7274 ) }
    dend_44 { pt3dadd( 257.286, 856.606, 10.3151, 0.7348 ) }
    dend_44 { pt3dadd( 256.194, 857.682, 9.6447, 0.7298 ) }
    dend_44 { pt3dadd( 255.234, 857.638, 9.3051, 0.8984 ) }
    dend_44 { pt3dadd( 254.254, 857.073, 8.999, 1.0162 ) }
    dend_44 { pt3dadd( 253.211, 856.636, 8.7076, 1.0348 ) }
    dend_44 { pt3dadd( 252.107, 856.726, 8.4311, 0.9646 ) }
    dend_44 { pt3dadd( 251.013, 857.039, 8.1572, 0.803 ) }
    dend_44 { pt3dadd( 249.894, 856.982, 7.8944, 0.719 ) }
    dend_44 { pt3dadd( 248.771, 856.787, 7.6544, 0.6422 ) }
    dend_44 { pt3dadd( 247.653, 856.943, 7.4536, 0.6066 ) }
    dend_44 { pt3dadd( 246.527, 857.137, 7.3162, 0.6278 ) }
    dend_44 { pt3dadd( 245.393, 857.065, 7.2348, 0.5626 ) }
    dend_44 { pt3dadd( 244.331, 857.429, 7.2065, 0.6072 ) }
    dend_44 { pt3dadd( 243.203, 857.525, 7.2216, 0.571 ) }
    dend_44 { pt3dadd( 242.15, 857.118, 7.2673, 0.6626 ) }
    dend_44 { pt3dadd( 241.045, 856.843, 7.3349, 0.7198 ) }
    dend_44 { pt3dadd( 240.029, 856.332, 7.4045, 0.7452 ) }
    dend_44 { pt3dadd( 238.92, 856.093, 7.4743, 0.648 ) }
    dend_44 { pt3dadd( 237.794, 855.892, 7.5746, 0.707 ) }
    dend_44 { pt3dadd( 236.675, 855.659, 7.7083, 0.7826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_44 { pt3dadd( 235.538, 855.583, 7.8883, 0.8728 ) }
    dend_44 { pt3dadd( 234.423, 855.798, 8.1288, 0.8244 ) }
    dend_44 { pt3dadd( 234.314, 856.83, 8.451, 0.7128 ) }
    dend_44 { pt3dadd( 234.513, 857.947, 8.787, 0.6534 ) }
    dend_44 { pt3dadd( 234.515, 859.082, 9.1162, 0.7434 ) }
    dend_44 { pt3dadd( 234.345, 860.205, 9.4392, 0.6452 ) }
    dend_44 { pt3dadd( 234.168, 861.329, 9.7137, 0.6864 ) }
    dend_44 { pt3dadd( 234.212, 862.469, 9.9291, 0.7272 ) }
    dend_44 { pt3dadd( 234.094, 863.588, 10.1123, 0.5714 ) }
    dend_44 { pt3dadd( 233.265, 864.373, 10.2892, 0.4858 ) }
    dend_44 { pt3dadd( 232.37, 865.068, 10.4806, 0.5452 ) }
    dend_44 { pt3dadd( 231.262, 865.304, 10.6536, 0.6818 ) }
    dend_44 { pt3dadd( 230.375, 865.986, 10.8154, 0.7266 ) }
    dend_44 { pt3dadd( 230.105, 867.089, 10.9959, 0.6886 ) }
    dend_44 { pt3dadd( 230.145, 868.229, 11.1516, 0.5552 ) }
    dend_44 { pt3dadd( 229.903, 869.316, 11.2985, 0.5634 ) }
    dend_44 { pt3dadd( 229.092, 870.11, 11.4437, 0.4972 ) }
    dend_44 { pt3dadd( 228.126, 870.719, 11.581, 0.5294 ) }
    dend_44 { pt3dadd( 227.273, 871.464, 11.707, 0.5538 ) }
    dend_44 { pt3dadd( 226.581, 872.364, 11.8172, 0.5858 ) }
    dend_44 { pt3dadd( 225.68, 873.065, 11.8825, 0.5092 ) }
    dend_44 { pt3dadd( 224.708, 873.668, 11.8906, 0.531 ) }
    dend_44 { pt3dadd( 223.765, 874.315, 11.8089, 0.6608 ) }
    dend_44 { pt3dadd( 222.81, 874.935, 11.604, 0.7346 ) }
    dend_44 { pt3dadd( 221.81, 875.479, 11.3436, 0.7116 ) }
    dend_44 { pt3dadd( 220.879, 876.117, 11.0699, 0.6414 ) }
    dend_44 { pt3dadd( 219.968, 876.779, 10.8159, 0.6274 ) }
    dend_44 { pt3dadd( 219.12, 877.455, 10.4995, 0.633 ) }
    dend_44 { pt3dadd( 218.682, 878.511, 10.3835, 0.4792 ) }
    dend_44 { pt3dadd( 218.255, 879.571, 10.3557, 0.3784 ) }
    dend_44 { pt3dadd( 217.776, 880.611, 10.3829, 0.398 ) }
    dend_44 { pt3dadd( 216.869, 881.304, 10.4378, 0.356 ) }
    dend_44 { pt3dadd( 216.099, 882.146, 10.64, 0.4576 ) }
    // Section: dend_42, id: dend_42, parent: dend_30 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 327.806, 721.316, 15.3485, 0.8022 ) }
    dend_42 { pt3dadd( 327.064, 721.588, 15.696, 1.0944 ) }
    dend_42 { pt3dadd( 326.55, 721.573, 18.0254, 0.9738 ) }
    dend_42 { pt3dadd( 325.763, 721.122, 19.5502, 0.8118 ) }
    dend_42 { pt3dadd( 324.858, 721.31, 21.1071, 0.5312 ) }
    dend_42 { pt3dadd( 324.039, 720.916, 22.3584, 0.4454 ) }
    dend_42 { pt3dadd( 323.713, 720.01, 23.7448, 0.3906 ) }
    dend_42 { pt3dadd( 323.061, 719.832, 25.2852, 0.4578 ) }
    dend_42 { pt3dadd( 322.062, 720.093, 26.4802, 0.4994 ) }
    dend_42 { pt3dadd( 321.019, 720.182, 27.5794, 0.6714 ) }
    dend_42 { pt3dadd( 319.965, 720.164, 28.6689, 0.592 ) }
    dend_42 { pt3dadd( 319.158, 719.561, 29.755, 0.4732 ) }
    dend_42 { pt3dadd( 318.643, 718.62, 30.6706, 0.4532 ) }
    dend_42 { pt3dadd( 318.409, 717.56, 31.5115, 0.4674 ) }
    dend_42 { pt3dadd( 318.36, 716.468, 32.3168, 0.5794 ) }
    dend_42 { pt3dadd( 317.999, 715.44, 33.0876, 0.6002 ) }
    dend_42 { pt3dadd( 317.371, 714.539, 33.8271, 0.63 ) }
    dend_42 { pt3dadd( 316.434, 713.992, 34.5957, 0.5296 ) }
    dend_42 { pt3dadd( 315.344, 714.1, 35.2817, 0.499 ) }
    dend_42 { pt3dadd( 314.29, 713.784, 35.9587, 0.6714 ) }
    dend_42 { pt3dadd( 313.496, 712.992, 36.5196, 0.6328 ) }
    dend_42 { pt3dadd( 312.821, 712.091, 37.0118, 0.7256 ) }
    dend_42 { pt3dadd( 312.188, 711.154, 37.4396, 0.7566 ) }
    dend_42 { pt3dadd( 311.511, 710.245, 37.814, 0.8256 ) }
    dend_42 { pt3dadd( 310.757, 709.396, 38.1548, 0.656 ) }
    dend_42 { pt3dadd( 309.958, 708.589, 38.484, 0.676 ) }
    dend_42 { pt3dadd( 309.085, 707.866, 38.8074, 0.67 ) }
    dend_42 { pt3dadd( 307.954, 707.811, 39.146, 0.632 ) }
    dend_42 { pt3dadd( 306.876, 708.162, 39.4797, 0.4382 ) }
    dend_42 { pt3dadd( 305.896, 708.738, 39.8068, 0.3246 ) }
    dend_42 { pt3dadd( 304.935, 709.346, 40.1106, 0.279 ) }
    dend_42 { pt3dadd( 303.995, 709.988, 40.3763, 0.283 ) }
    dend_42 { pt3dadd( 303.144, 710.748, 40.5992, 0.289 ) }
    dend_42 { pt3dadd( 302.292, 711.507, 40.7775, 0.305 ) }
    dend_42 { pt3dadd( 301.439, 712.268, 40.9234, 0.3004 ) }
    dend_42 { pt3dadd( 300.605, 712.96, 41.2899, 0.2288 ) }
    dend_42 { pt3dadd( 299.949, 712.712, 43.1936, 0.2288 ) }
    dend_42 { pt3dadd( 299.728, 712.14, 45.08, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 327.806, 721.316, 15.3485, 0.8022 ) }
    dend_31 { pt3dadd( 328.35, 720.445, 15.1255, 0.5678 ) }
    dend_31 { pt3dadd( 329.108, 719.594, 14.883, 0.487 ) }
    dend_31 { pt3dadd( 329.925, 718.798, 14.6782, 0.6632 ) }
    dend_31 { pt3dadd( 330.778, 718.039, 14.5479, 0.7896 ) }
    dend_31 { pt3dadd( 331.645, 717.291, 14.5054, 0.8548 ) }
    dend_31 { pt3dadd( 332.667, 716.779, 14.5309, 0.8822 ) }
    dend_31 { pt3dadd( 333.69, 716.268, 14.5994, 0.929 ) }
    dend_31 { pt3dadd( 334.669, 715.676, 14.6864, 1.0348 ) }
    dend_31 { pt3dadd( 335.643, 715.077, 14.7729, 1.1366 ) }
    dend_31 { pt3dadd( 336.528, 714.354, 14.8494, 1.0966 ) }
    dend_31 { pt3dadd( 337.399, 713.611, 14.9157, 0.9912 ) }
    dend_31 { pt3dadd( 338.29, 712.894, 14.9809, 0.9508 ) }
    dend_31 { pt3dadd( 339.182, 712.18, 15.0528, 1.0348 ) }
    dend_31 { pt3dadd( 340.001, 711.381, 15.1402, 1.1034 ) }
    dend_31 { pt3dadd( 340.81, 710.574, 15.246, 1.198 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 313.835, 753.958, 15.1651, 0.772 ) }
    dend_26 { pt3dadd( 313.641, 753.718, 16.9039, 0.461 ) }
    dend_26 { pt3dadd( 312.582, 753.495, 17.3215, 0.4248 ) }
    dend_26 { pt3dadd( 311.702, 754.13, 17.4696, 0.4402 ) }
    dend_26 { pt3dadd( 310.66, 753.724, 17.6023, 0.4222 ) }
    dend_26 { pt3dadd( 309.935, 752.842, 17.7262, 0.4656 ) }
    dend_26 { pt3dadd( 309.141, 752.022, 17.8528, 0.6032 ) }
    dend_26 { pt3dadd( 308.247, 751.312, 18.0067, 0.529 ) }
    dend_26 { pt3dadd( 307.406, 750.693, 18.2731, 0.5158 ) }
    dend_26 { pt3dadd( 306.656, 750.411, 18.8241, 0.5622 ) }
    dend_26 { pt3dadd( 306.019, 749.508, 19.3805, 0.4944 ) }
    dend_26 { pt3dadd( 305.09, 748.976, 20.0571, 0.5016 ) }
    dend_26 { pt3dadd( 304.016, 749.039, 20.7813, 0.5904 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 302.93, 749.226, 21.534, 0.7074 ) }
    dend_26 { pt3dadd( 301.888, 749.543, 22.337, 0.834 ) }
    dend_26 { pt3dadd( 300.943, 750.053, 23.2733, 0.7164 ) }
    dend_26 { pt3dadd( 300.873, 751.002, 24.3262, 0.5942 ) }
    dend_26 { pt3dadd( 299.934, 751.484, 25.2022, 0.6002 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 313.835, 753.958, 15.1651, 0.772 ) }
    dend_17 { pt3dadd( 313.79, 755.055, 15.1801, 0.5834 ) }
    dend_17 { pt3dadd( 313.733, 756.197, 15.1108, 0.6234 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 332.971, 723.645, 7.4673, 1.1894 ) }
    dend_11 { pt3dadd( 334.681, 723.397, 7.3534, 0.77 ) }
    dend_11 { pt3dadd( 335.813, 723.23, 7.3281, 0.7142 ) }
    dend_11 { pt3dadd( 336.94, 723.036, 7.3427, 0.6784 ) }
    dend_11 { pt3dadd( 338.067, 722.839, 7.4016, 0.7452 ) }
    dend_11 { pt3dadd( 339.193, 722.641, 7.4826, 0.8974 ) }
    dend_11 { pt3dadd( 340.319, 722.442, 7.5665, 1.0162 ) }
    dend_11 { pt3dadd( 341.438, 722.207, 7.6425, 0.8744 ) }
    dend_11 { pt3dadd( 342.551, 721.949, 7.7048, 0.827 ) }
    dend_11 { pt3dadd( 343.563, 721.413, 7.7611, 0.8218 ) }
    dend_11 { pt3dadd( 344.493, 720.749, 7.8256, 0.8634 ) }
    dend_11 { pt3dadd( 345.513, 720.234, 7.9021, 0.9128 ) }
    dend_11 { pt3dadd( 346.552, 719.759, 7.9908, 0.897 ) }
    dend_11 { pt3dadd( 347.686, 719.614, 8.0905, 0.709 ) }
    dend_11 { pt3dadd( 348.828, 719.595, 8.1993, 0.7276 ) }
    dend_11 { pt3dadd( 349.971, 719.571, 8.3184, 0.7678 ) }
    dend_11 { pt3dadd( 351.097, 719.384, 8.4931, 0.8066 ) }
    dend_11 { pt3dadd( 352.223, 719.187, 8.6407, 0.7896 ) }
    dend_11 { pt3dadd( 353.344, 718.973, 8.8154, 0.7708 ) }
    dend_11 { pt3dadd( 354.467, 718.78, 9.0241, 0.6746 ) }
    dend_11 { pt3dadd( 355.602, 718.68, 9.2611, 0.5014 ) }
    dend_11 { pt3dadd( 356.736, 718.591, 9.5022, 0.4428 ) }
    dend_11 { pt3dadd( 357.837, 718.323, 9.726, 0.4762 ) }
    dend_11 { pt3dadd( 358.849, 717.812, 9.9319, 0.4978 ) }
    dend_11 { pt3dadd( 359.828, 717.231, 10.1139, 0.5304 ) }
    dend_11 { pt3dadd( 360.831, 716.687, 10.25, 0.5786 ) }
    dend_11 { pt3dadd( 361.534, 715.872, 10.3229, 0.5652 ) }
    dend_11 { pt3dadd( 362.099, 714.905, 10.3338, 0.5362 ) }
    dend_11 { pt3dadd( 362.92, 714.112, 10.2981, 0.5022 ) }
    dend_11 { pt3dadd( 363.722, 713.303, 10.2257, 0.4526 ) }
    dend_11 { pt3dadd( 364.417, 712.395, 10.1272, 0.4162 ) }
    dend_11 { pt3dadd( 364.974, 711.404, 10.0287, 0.4 ) }
    dend_11 { pt3dadd( 365.434, 710.358, 9.9545, 0.3774 ) }
    dend_11 { pt3dadd( 366.044, 709.405, 9.9041, 0.3952 ) }
    dend_11 { pt3dadd( 366.938, 708.729, 9.8699, 0.492 ) }
    dend_11 { pt3dadd( 367.984, 708.265, 9.8393, 0.5924 ) }
    dend_11 { pt3dadd( 369.051, 707.855, 9.8, 0.611 ) }
    dend_11 { pt3dadd( 370.132, 707.482, 9.7517, 0.6436 ) }
    dend_11 { pt3dadd( 371.016, 706.838, 9.7084, 0.5894 ) }
    dend_11 { pt3dadd( 371.488, 705.82, 9.6877, 0.4584 ) }
    dend_11 { pt3dadd( 371.857, 704.741, 9.6887, 0.4128 ) }
    dend_11 { pt3dadd( 372.546, 703.871, 9.6988, 0.4076 ) }
    dend_11 { pt3dadd( 373.527, 703.302, 9.707, 0.436 ) }
    dend_11 { pt3dadd( 374.467, 702.664, 9.7166, 0.4418 ) }
    dend_11 { pt3dadd( 375.421, 702.04, 9.7311, 0.4818 ) }
    dend_11 { pt3dadd( 376.483, 701.635, 9.7476, 0.5398 ) }
    dend_11 { pt3dadd( 377.569, 701.278, 9.7737, 0.5896 ) }
    dend_11 { pt3dadd( 378.497, 700.644, 9.8254, 0.6544 ) }
    dend_11 { pt3dadd( 379.03, 699.662, 9.9009, 0.6828 ) }
    dend_11 { pt3dadd( 379.3, 698.554, 9.9869, 0.6188 ) }
    dend_11 { pt3dadd( 379.485, 697.426, 10.0752, 0.5278 ) }
    dend_11 { pt3dadd( 379.64, 696.293, 10.1615, 0.4246 ) }
    dend_11 { pt3dadd( 379.942, 695.195, 10.2502, 0.3746 ) }
    dend_11 { pt3dadd( 380.413, 694.156, 10.3527, 0.3836 ) }
    dend_11 { pt3dadd( 380.963, 693.154, 10.4833, 0.4952 ) }
    dend_11 { pt3dadd( 381.524, 692.16, 10.6515, 0.533 ) }
    dend_11 { pt3dadd( 382.111, 691.182, 10.8667, 0.4802 ) }
    dend_11 { pt3dadd( 382.814, 690.29, 11.131, 0.4412 ) }
    dend_11 { pt3dadd( 383.759, 689.688, 11.4397, 0.5334 ) }
    dend_11 { pt3dadd( 384.866, 689.615, 11.7804, 0.6034 ) }
    dend_11 { pt3dadd( 386.0, 689.656, 12.1319, 0.5114 ) }
    dend_11 { pt3dadd( 387.135, 689.632, 12.4709, 0.4214 ) }
    dend_11 { pt3dadd( 388.237, 689.381, 12.8118, 0.4128 ) }
    dend_11 { pt3dadd( 389.197, 688.791, 13.1331, 0.547 ) }
    dend_11 { pt3dadd( 389.974, 687.967, 13.4308, 0.6212 ) }
    dend_11 { pt3dadd( 390.058, 686.879, 13.7593, 0.5488 ) }
    dend_11 { pt3dadd( 389.793, 685.775, 14.0683, 0.3932 ) }
    dend_11 { pt3dadd( 389.688, 684.644, 14.3776, 0.3044 ) }
    dend_11 { pt3dadd( 389.697, 683.508, 14.6912, 0.2762 ) }
    dend_11 { pt3dadd( 389.835, 682.38, 15.0154, 0.2754 ) }
    dend_11 { pt3dadd( 390.34, 681.364, 15.3338, 0.2762 ) }
    dend_11 { pt3dadd( 391.08, 680.499, 15.6088, 0.2776 ) }
    dend_11 { pt3dadd( 391.615, 679.492, 15.8379, 0.2802 ) }
    dend_11 { pt3dadd( 392.739, 679.302, 16.0053, 0.285 ) }
    dend_11 { pt3dadd( 393.851, 679.038, 16.1139, 0.294 ) }
    dend_11 { pt3dadd( 394.885, 678.549, 16.1742, 0.3102 ) }
    dend_11 { pt3dadd( 395.902, 678.026, 16.2002, 0.3428 ) }
    dend_11 { pt3dadd( 396.919, 677.502, 16.2053, 0.3914 ) }
    dend_11 { pt3dadd( 398.055, 677.362, 16.1983, 0.537 ) }
    dend_11 { pt3dadd( 399.199, 677.361, 16.1843, 0.54 ) }
    dend_11 { pt3dadd( 400.339, 677.285, 16.1639, 0.468 ) }
    dend_11 { pt3dadd( 401.479, 677.177, 16.137, 0.4816 ) }
    dend_11 { pt3dadd( 402.556, 676.795, 16.102, 0.4792 ) }
    dend_11 { pt3dadd( 403.58, 676.284, 16.0558, 0.6092 ) }
    dend_11 { pt3dadd( 404.653, 675.89, 15.9953, 0.653 ) }
    dend_11 { pt3dadd( 405.733, 675.513, 15.9177, 0.5498 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 332.971, 723.645, 7.4673, 1.1894 ) }
    dend_10 { pt3dadd( 333.494, 725.105, 7.9097, 0.3496 ) }
    dend_10 { pt3dadd( 333.982, 726.127, 7.8709, 0.5322 ) }
    dend_10 { pt3dadd( 334.007, 727.228, 7.8045, 0.5474 ) }
    dend_10 { pt3dadd( 334.168, 728.282, 7.7329, 0.5192 ) }
    dend_10 { pt3dadd( 335.133, 728.288, 7.7385, 0.5288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 335.651, 729.109, 7.8744, 0.5906 ) }
    dend_10 { pt3dadd( 335.915, 730.218, 8.0654, 0.4786 ) }
    dend_10 { pt3dadd( 336.482, 731.209, 8.2401, 0.461 ) }
    dend_10 { pt3dadd( 336.944, 732.254, 8.3507, 0.4066 ) }
    dend_10 { pt3dadd( 337.254, 733.352, 8.309, 0.4328 ) }
    dend_10 { pt3dadd( 337.866, 734.315, 8.2177, 0.5538 ) }
    dend_10 { pt3dadd( 338.63, 735.166, 8.1133, 0.5534 ) }
    dend_10 { pt3dadd( 339.301, 736.085, 7.9462, 0.6642 ) }
    dend_10 { pt3dadd( 340.053, 736.864, 7.7027, 0.7444 ) }
    dend_10 { pt3dadd( 340.993, 737.482, 7.4532, 0.809 ) }
    dend_10 { pt3dadd( 341.849, 738.236, 7.273, 0.8372 ) }
    dend_10 { pt3dadd( 342.53, 739.136, 7.1497, 0.7288 ) }
    dend_10 { pt3dadd( 343.058, 740.15, 7.0823, 0.688 ) }
    dend_10 { pt3dadd( 343.947, 740.825, 7.108, 0.863 ) }
    dend_10 { pt3dadd( 344.463, 741.819, 7.1577, 0.9962 ) }
    dend_10 { pt3dadd( 344.832, 742.901, 7.1996, 1.0812 ) }
    dend_10 { pt3dadd( 345.461, 743.851, 7.2279, 0.8318 ) }
    dend_10 { pt3dadd( 346.297, 744.625, 7.242, 0.5846 ) }
    dend_10 { pt3dadd( 347.149, 745.388, 7.2102, 0.4792 ) }
    dend_10 { pt3dadd( 347.614, 746.424, 7.132, 0.6244 ) }
    dend_10 { pt3dadd( 348.026, 747.49, 7.0095, 0.7316 ) }
    dend_10 { pt3dadd( 348.369, 748.58, 6.8649, 0.762 ) }
    dend_10 { pt3dadd( 348.566, 749.704, 6.7167, 0.6974 ) }
    dend_10 { pt3dadd( 348.854, 750.811, 6.5978, 0.675 ) }
    dend_10 { pt3dadd( 349.276, 751.872, 6.5316, 0.7788 ) }
    dend_10 { pt3dadd( 349.819, 752.879, 6.5078, 0.7376 ) }
    dend_10 { pt3dadd( 350.471, 753.818, 6.5011, 0.7432 ) }
    dend_10 { pt3dadd( 351.162, 754.73, 6.4635, 0.7234 ) }
    dend_10 { pt3dadd( 351.909, 755.595, 6.3381, 0.633 ) }
    dend_10 { pt3dadd( 352.655, 756.459, 6.1437, 0.7206 ) }
    dend_10 { pt3dadd( 353.401, 757.321, 5.9009, 0.7894 ) }
    dend_10 { pt3dadd( 354.132, 758.168, 5.32, 0.9152 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 323.865, 708.669, 8.0284, 0.7692 ) }
    dend_8 { pt3dadd( 324.422, 707.438, 8.5999, 0.2882 ) }
    dend_8 { pt3dadd( 325.077, 706.5, 8.5225, 0.3684 ) }
    dend_8 { pt3dadd( 325.603, 705.492, 8.493, 0.4722 ) }
    dend_8 { pt3dadd( 326.04, 704.435, 8.497, 0.5282 ) }
    dend_8 { pt3dadd( 326.533, 703.403, 8.5208, 0.5452 ) }
    dend_8 { pt3dadd( 327.103, 702.413, 8.5333, 0.6244 ) }
    dend_8 { pt3dadd( 327.722, 701.451, 8.5121, 0.6194 ) }
    dend_8 { pt3dadd( 328.35, 700.495, 8.4416, 0.4864 ) }
    dend_8 { pt3dadd( 328.948, 699.523, 8.28, 0.35 ) }
    dend_8 { pt3dadd( 329.251, 698.451, 8.0394, 0.2912 ) }
    dend_8 { pt3dadd( 329.215, 697.318, 7.7988, 0.2864 ) }
    dend_8 { pt3dadd( 329.285, 696.19, 7.6238, 0.2974 ) }
    dend_8 { pt3dadd( 329.376, 695.06, 7.3373, 0.321 ) }
    dend_8 { pt3dadd( 329.509, 693.927, 7.1207, 0.386 ) }
    dend_8 { pt3dadd( 329.644, 692.794, 6.9272, 0.3594 ) }
    dend_8 { pt3dadd( 329.779, 691.66, 6.7463, 0.3418 ) }
    dend_8 { pt3dadd( 329.914, 690.526, 6.5757, 0.3774 ) }
    dend_8 { pt3dadd( 330.047, 689.392, 6.4207, 0.3416 ) }
    dend_8 { pt3dadd( 330.533, 688.356, 6.3211, 0.314 ) }
    dend_8 { pt3dadd( 331.052, 687.338, 6.2569, 0.3 ) }
    dend_8 { pt3dadd( 331.571, 686.319, 6.2194, 0.324 ) }
    dend_8 { pt3dadd( 332.09, 685.298, 6.2009, 0.3556 ) }
    dend_8 { pt3dadd( 332.584, 684.266, 6.1944, 0.4756 ) }
    dend_8 { pt3dadd( 333.013, 683.206, 6.1939, 0.3996 ) }
    dend_8 { pt3dadd( 333.442, 682.146, 6.1939, 0.337 ) }
    dend_8 { pt3dadd( 333.87, 681.085, 6.1939, 0.2966 ) }
    dend_8 { pt3dadd( 334.298, 680.024, 6.1939, 0.3134 ) }
    dend_8 { pt3dadd( 334.728, 678.964, 6.1939, 0.356 ) }
    dend_8 { pt3dadd( 335.156, 677.904, 6.1939, 0.3814 ) }
    dend_8 { pt3dadd( 335.586, 676.843, 6.1939, 0.6864 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 323.865, 708.669, 8.0284, 0.7692 ) }
    dend_5 { pt3dadd( 323.598, 707.682, 8.3703, 0.7568 ) }
    dend_5 { pt3dadd( 323.159, 706.63, 8.5907, 0.6858 ) }
    dend_5 { pt3dadd( 322.55, 705.667, 8.7867, 0.6514 ) }
    dend_5 { pt3dadd( 321.78, 704.826, 8.9667, 0.706 ) }
    dend_5 { pt3dadd( 321.085, 703.92, 9.1082, 0.7226 ) }
    dend_5 { pt3dadd( 320.547, 702.914, 9.1951, 0.8038 ) }
    dend_5 { pt3dadd( 320.423, 701.782, 9.2172, 0.8742 ) }
    dend_5 { pt3dadd( 320.25, 700.652, 9.1957, 0.987 ) }
    dend_5 { pt3dadd( 319.794, 699.605, 9.146, 1.036 ) }
    dend_5 { pt3dadd( 319.395, 698.534, 9.0891, 1.0342 ) }
    dend_5 { pt3dadd( 318.806, 697.554, 9.0105, 0.984 ) }
    dend_5 { pt3dadd( 318.279, 696.54, 8.9117, 0.8704 ) }
    dend_5 { pt3dadd( 317.706, 695.552, 8.7738, 0.7512 ) }
    dend_5 { pt3dadd( 317.042, 694.622, 8.6269, 0.7532 ) }
    dend_5 { pt3dadd( 316.775, 693.512, 8.4902, 0.8142 ) }
    dend_5 { pt3dadd( 316.802, 692.372, 8.3084, 0.6738 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 254.063, 651.711, 10.2452, 0.386 ) }
    dend_2 { pt3dadd( 253.746, 651.023, 10.5978, 0.4448 ) }
    dend_2 { pt3dadd( 253.572, 649.902, 10.6638, 0.3728 ) }
    dend_2 { pt3dadd( 253.602, 648.76, 10.6578, 0.308 ) }
    dend_2 { pt3dadd( 253.688, 647.62, 10.6506, 0.278 ) }
    dend_2 { pt3dadd( 253.756, 646.478, 10.6401, 0.2746 ) }
    dend_2 { pt3dadd( 253.781, 645.334, 10.625, 0.2746 ) }
    dend_2 { pt3dadd( 253.878, 644.194, 10.6047, 0.2746 ) }
    dend_2 { pt3dadd( 254.117, 643.077, 10.5773, 0.2748 ) }
    dend_2 { pt3dadd( 254.389, 641.966, 10.5423, 0.2748 ) }
    dend_2 { pt3dadd( 254.872, 640.933, 10.4977, 0.275 ) }
    dend_2 { pt3dadd( 255.813, 640.32, 10.4418, 0.2756 ) }
    dend_2 { pt3dadd( 256.746, 639.658, 10.3701, 0.2764 ) }
    dend_2 { pt3dadd( 257.252, 638.643, 10.2842, 0.2782 ) }
    dend_2 { pt3dadd( 257.634, 637.565, 10.1936, 0.2812 ) }
    dend_2 { pt3dadd( 258.216, 636.581, 10.1013, 0.2866 ) }
    dend_2 { pt3dadd( 259.074, 635.827, 10.0102, 0.298 ) }
    dend_2 { pt3dadd( 260.047, 635.228, 9.9238, 0.313 ) }
    dend_2 { pt3dadd( 261.003, 634.601, 9.8362, 0.3708 ) }
    dend_2 { pt3dadd( 262.063, 634.172, 9.7503, 0.3308 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 263.014, 633.537, 9.6616, 0.2942 ) }
    dend_2 { pt3dadd( 264.053, 633.061, 9.582, 0.263 ) }
    dend_2 { pt3dadd( 265.179, 632.863, 9.5196, 0.2542 ) }
    dend_2 { pt3dadd( 266.229, 632.411, 9.4797, 0.229 ) }
    dend_2 { pt3dadd( 267.056, 631.622, 9.5724, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 5/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 254.063, 651.711, 10.2452, 0.386 ) }
    dend_1 { pt3dadd( 253.475, 651.044, 10.3655, 0.2994 ) }
    dend_1 { pt3dadd( 252.623, 650.289, 10.4696, 0.2794 ) }
    dend_1 { pt3dadd( 251.618, 649.748, 10.5658, 0.2834 ) }
    dend_1 { pt3dadd( 250.744, 649.018, 10.6538, 0.2906 ) }
    dend_1 { pt3dadd( 250.086, 648.085, 10.7334, 0.3048 ) }
    dend_1 { pt3dadd( 249.626, 647.038, 10.8062, 0.329 ) }
    dend_1 { pt3dadd( 249.244, 645.961, 10.8756, 0.3826 ) }
    dend_1 { pt3dadd( 248.872, 644.881, 10.9472, 0.3558 ) }
    dend_1 { pt3dadd( 248.617, 643.767, 11.0256, 0.3438 ) }
    dend_1 { pt3dadd( 248.487, 642.631, 11.1181, 0.3686 ) }
    dend_1 { pt3dadd( 248.305, 641.503, 11.2446, 0.3298 ) }
    dend_1 { pt3dadd( 248.136, 640.373, 11.3818, 0.2972 ) }
    dend_1 { pt3dadd( 247.775, 639.315, 11.5174, 0.2754 ) }
    dend_1 { pt3dadd( 246.956, 638.533, 11.643, 0.276 ) }
    dend_1 { pt3dadd( 246.382, 637.544, 11.7442, 0.2772 ) }
    dend_1 { pt3dadd( 245.785, 636.57, 11.8199, 0.2794 ) }
    dend_1 { pt3dadd( 245.211, 635.58, 11.8749, 0.2834 ) }
    dend_1 { pt3dadd( 244.598, 634.621, 11.9197, 0.291 ) }
    dend_1 { pt3dadd( 243.81, 633.792, 11.9623, 0.305 ) }
    dend_1 { pt3dadd( 243.129, 632.879, 12.0091, 0.3308 ) }
    dend_1 { pt3dadd( 242.614, 631.86, 12.0652, 0.3796 ) }
    dend_1 { pt3dadd( 241.994, 630.899, 12.1378, 0.4642 ) }
    dend_1 { pt3dadd( 241.306, 629.987, 12.2364, 0.3932 ) }
    dend_1 { pt3dadd( 240.678, 629.032, 12.3498, 0.3392 ) }
    dend_1 { pt3dadd( 240.06, 628.07, 12.4737, 0.3182 ) }
    dend_1 { pt3dadd( 239.407, 627.133, 12.6065, 0.3562 ) }
    dend_1 { pt3dadd( 238.799, 626.172, 12.7495, 0.423 ) }
    dend_1 { pt3dadd( 238.424, 625.096, 12.9066, 0.4338 ) }
    dend_1 { pt3dadd( 238.263, 623.967, 13.0822, 0.4906 ) }
    dend_1 { pt3dadd( 238.202, 622.829, 13.2871, 0.5142 ) }
    dend_1 { pt3dadd( 238.081, 621.695, 13.5377, 0.4086 ) }
    dend_1 { pt3dadd( 237.954, 620.565, 13.8382, 0.3306 ) }
    dend_1 { pt3dadd( 237.825, 619.437, 14.1831, 0.3028 ) }
    dend_1 { pt3dadd( 237.7, 618.31, 14.5581, 0.3284 ) }
    dend_1 { pt3dadd( 237.714, 617.205, 14.9414, 0.3682 ) }
    dend_1 { pt3dadd( 238.142, 616.158, 15.3037, 0.3326 ) }
    dend_1 { pt3dadd( 238.444, 615.068, 15.6315, 0.3056 ) }
    dend_1 { pt3dadd( 238.725, 614.023, 15.932, 0.296 ) }
    dend_1 { pt3dadd( 238.4, 612.931, 16.1878, 0.3136 ) }
    dend_1 { pt3dadd( 237.946, 611.903, 16.4226, 0.3508 ) }
    dend_1 { pt3dadd( 237.284, 610.982, 16.6526, 0.4016 ) }
    dend_1 { pt3dadd( 236.792, 609.955, 16.8989, 0.3954 ) }
    dend_1 { pt3dadd( 236.262, 608.956, 17.1746, 0.4316 ) }
    dend_1 { pt3dadd( 235.52, 608.098, 17.5039, 0.4972 ) }
    dend_1 { pt3dadd( 234.934, 607.195, 17.8784, 0.462 ) }
    dend_1 { pt3dadd( 234.864, 606.066, 18.2732, 0.485 ) }
    dend_1 { pt3dadd( 234.863, 604.933, 18.6712, 0.564 ) }
    dend_1 { pt3dadd( 234.847, 603.819, 19.2401, 0.5166 ) }
    dend_1 { pt3dadd( 234.839, 602.736, 20.1439, 0.3454 ) }
    dend_1 { pt3dadd( 234.882, 601.649, 21.0071, 0.276 ) }
    dend_1 { pt3dadd( 235.169, 600.571, 21.6185, 0.2728 ) }
    dend_1 { pt3dadd( 236.092, 599.923, 22.0328, 0.2712 ) }
    dend_1 { pt3dadd( 237.171, 599.561, 22.3097, 0.2684 ) }
    dend_1 { pt3dadd( 238.311, 599.485, 22.4503, 0.2626 ) }
    dend_1 { pt3dadd( 239.446, 599.35, 22.5198, 0.2542 ) }
    dend_1 { pt3dadd( 240.582, 599.214, 22.5646, 0.2288 ) }
    dend_1 { pt3dadd( 241.717, 599.077, 22.68, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 63/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 340.81, 710.574, 15.246, 1.198 ) }
    dend_37 { pt3dadd( 341.663, 710.034, 15.5626, 0.8022 ) }
    dend_37 { pt3dadd( 342.709, 709.603, 15.8374, 0.533 ) }
    dend_37 { pt3dadd( 343.835, 709.473, 16.0471, 0.4748 ) }
    dend_37 { pt3dadd( 344.963, 709.309, 16.217, 0.6112 ) }
    dend_37 { pt3dadd( 346.003, 709.682, 16.3876, 0.8782 ) }
    dend_37 { pt3dadd( 347.019, 710.202, 16.5696, 0.9538 ) }
    dend_37 { pt3dadd( 347.995, 710.791, 16.8025, 0.9742 ) }
    dend_37 { pt3dadd( 348.923, 711.453, 17.021, 0.898 ) }
    dend_37 { pt3dadd( 349.757, 712.23, 17.2288, 0.8628 ) }
    dend_37 { pt3dadd( 350.732, 712.815, 17.4282, 0.8448 ) }
    dend_37 { pt3dadd( 351.851, 713.006, 17.6247, 0.8594 ) }
    dend_37 { pt3dadd( 352.961, 713.267, 17.8267, 0.8868 ) }
    dend_37 { pt3dadd( 353.908, 713.896, 18.0458, 0.9606 ) }
    dend_37 { pt3dadd( 354.959, 714.333, 18.2736, 0.9844 ) }
    dend_37 { pt3dadd( 356.092, 714.454, 18.4939, 0.918 ) }
    dend_37 { pt3dadd( 357.222, 714.607, 18.7158, 0.8586 ) }
    dend_37 { pt3dadd( 358.324, 714.902, 18.9426, 0.867 ) }
    dend_37 { pt3dadd( 359.402, 715.268, 19.1786, 0.7648 ) }
    dend_37 { pt3dadd( 360.289, 715.982, 19.4241, 0.717 ) }
    dend_37 { pt3dadd( 361.281, 716.541, 19.6791, 0.8148 ) }
    dend_37 { pt3dadd( 362.36, 716.903, 19.965, 0.7934 ) }
    dend_37 { pt3dadd( 363.465, 717.172, 20.2621, 0.8496 ) }
    dend_37 { pt3dadd( 364.524, 717.591, 20.5358, 0.9294 ) }
    dend_37 { pt3dadd( 365.597, 717.974, 20.7648, 0.9682 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 88/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 340.81, 710.574, 15.246, 1.198 ) }
    dend_32 { pt3dadd( 341.454, 710.045, 15.0553, 0.9334 ) }
    dend_32 { pt3dadd( 342.343, 709.325, 15.0049, 1.0006 ) }
    dend_32 { pt3dadd( 343.221, 708.591, 14.9857, 0.909 ) }
    dend_32 { pt3dadd( 343.988, 707.744, 14.9599, 0.8456 ) }
    dend_32 { pt3dadd( 344.704, 706.851, 14.9288, 0.806 ) }
    dend_32 { pt3dadd( 345.495, 706.025, 14.9008, 0.823 ) }
    dend_32 { pt3dadd( 346.132, 705.076, 14.8793, 0.6534 ) }
    dend_32 { pt3dadd( 346.556, 704.014, 14.8485, 0.6658 ) }
    dend_32 { pt3dadd( 346.917, 702.93, 14.7836, 0.629 ) }
    dend_32 { pt3dadd( 347.352, 701.872, 14.6736, 0.6802 ) }
    dend_32 { pt3dadd( 347.714, 700.789, 14.5255, 0.6322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( 347.949, 699.672, 14.3562, 0.5814 ) }
    dend_32 { pt3dadd( 348.079, 698.538, 14.175, 0.7322 ) }
    dend_32 { pt3dadd( 348.115, 697.396, 13.9856, 0.7282 ) }
    dend_32 { pt3dadd( 348.129, 696.256, 13.7893, 0.7732 ) }
    dend_32 { pt3dadd( 347.733, 695.188, 13.5705, 0.798 ) }
    dend_32 { pt3dadd( 347.236, 694.162, 13.3322, 0.6846 ) }
    dend_32 { pt3dadd( 346.661, 693.178, 13.0972, 0.5542 ) }
    dend_32 { pt3dadd( 346.257, 692.112, 12.8635, 0.6082 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 299.934, 751.484, 25.2022, 0.6002 ) }
    dend_28 { pt3dadd( 299.092, 752.443, 26.3475, 0.5652 ) }
    dend_28 { pt3dadd( 298.645, 753.428, 27.0479, 0.5548 ) }
    dend_28 { pt3dadd( 297.839, 754.164, 27.7201, 0.55 ) }
    dend_28 { pt3dadd( 296.98, 754.86, 28.3721, 0.6214 ) }
    dend_28 { pt3dadd( 296.211, 755.667, 28.9999, 0.6788 ) }
    dend_28 { pt3dadd( 295.395, 756.422, 29.6111, 0.6666 ) }
    dend_28 { pt3dadd( 294.426, 756.954, 30.2117, 0.5336 ) }
    dend_28 { pt3dadd( 293.345, 757.18, 30.8286, 0.3782 ) }
    dend_28 { pt3dadd( 292.243, 757.325, 31.4815, 0.2972 ) }
    dend_28 { pt3dadd( 291.139, 757.449, 32.1434, 0.2776 ) }
    dend_28 { pt3dadd( 290.139, 757.854, 32.7866, 0.2802 ) }
    dend_28 { pt3dadd( 289.315, 758.596, 33.3936, 0.2848 ) }
    dend_28 { pt3dadd( 288.631, 759.481, 33.952, 0.294 ) }
    dend_28 { pt3dadd( 288.024, 760.427, 34.4599, 0.308 ) }
    dend_28 { pt3dadd( 287.325, 761.305, 34.9406, 0.3522 ) }
    dend_28 { pt3dadd( 286.612, 762.172, 35.46, 0.343 ) }
    dend_28 { pt3dadd( 285.911, 763.057, 35.8988, 0.3056 ) }
    dend_28 { pt3dadd( 284.863, 763.399, 36.1889, 0.2786 ) }
    dend_28 { pt3dadd( 283.825, 763.865, 36.3462, 0.2746 ) }
    dend_28 { pt3dadd( 282.905, 764.539, 36.3964, 0.2746 ) }
    dend_28 { pt3dadd( 281.965, 765.19, 36.3793, 0.2746 ) }
    dend_28 { pt3dadd( 281.032, 765.851, 36.3364, 0.2746 ) }
    dend_28 { pt3dadd( 280.215, 766.649, 36.3054, 0.2746 ) }
    dend_28 { pt3dadd( 279.437, 767.487, 36.3006, 0.2746 ) }
    dend_28 { pt3dadd( 278.619, 768.287, 36.3168, 0.2746 ) }
    dend_28 { pt3dadd( 277.843, 769.127, 36.3434, 0.2746 ) }
    dend_28 { pt3dadd( 277.18, 770.057, 36.3695, 0.2746 ) }
    dend_28 { pt3dadd( 276.58, 771.032, 36.3891, 0.2746 ) }
    dend_28 { pt3dadd( 276.005, 772.02, 36.4017, 0.2746 ) }
    dend_28 { pt3dadd( 275.471, 773.032, 36.4081, 0.2746 ) }
    dend_28 { pt3dadd( 275.011, 774.078, 36.4098, 0.2746 ) }
    dend_28 { pt3dadd( 274.631, 775.157, 36.4087, 0.2746 ) }
    dend_28 { pt3dadd( 274.051, 776.14, 36.405, 0.2746 ) }
    dend_28 { pt3dadd( 273.138, 776.816, 36.3944, 0.2746 ) }
    dend_28 { pt3dadd( 272.187, 777.453, 36.3712, 0.2746 ) }
    dend_28 { pt3dadd( 271.182, 777.997, 36.3303, 0.2746 ) }
    dend_28 { pt3dadd( 270.156, 778.501, 36.2681, 0.2746 ) }
    dend_28 { pt3dadd( 269.107, 778.956, 36.1757, 0.2748 ) }
    dend_28 { pt3dadd( 268.013, 779.287, 36.0503, 0.2748 ) }
    dend_28 { pt3dadd( 266.987, 779.788, 35.8994, 0.2752 ) }
    dend_28 { pt3dadd( 266.028, 780.407, 35.733, 0.2756 ) }
    dend_28 { pt3dadd( 265.193, 781.185, 35.5555, 0.2766 ) }
    dend_28 { pt3dadd( 264.425, 782.029, 35.3741, 0.2782 ) }
    dend_28 { pt3dadd( 263.505, 782.703, 35.1851, 0.2814 ) }
    dend_28 { pt3dadd( 262.524, 783.283, 34.97, 0.2868 ) }
    dend_28 { pt3dadd( 261.51, 783.805, 34.7385, 0.2986 ) }
    dend_28 { pt3dadd( 260.483, 784.3, 34.5148, 0.314 ) }
    dend_28 { pt3dadd( 259.424, 784.724, 34.3151, 0.3726 ) }
    dend_28 { pt3dadd( 258.384, 785.197, 34.1522, 0.3344 ) }
    dend_28 { pt3dadd( 257.454, 785.862, 34.0315, 0.3002 ) }
    dend_28 { pt3dadd( 256.557, 786.57, 33.9556, 0.2746 ) }
    dend_28 { pt3dadd( 255.673, 787.295, 33.9133, 0.2742 ) }
    dend_28 { pt3dadd( 254.789, 788.023, 33.892, 0.2736 ) }
    dend_28 { pt3dadd( 253.906, 788.75, 33.8831, 0.2728 ) }
    dend_28 { pt3dadd( 253.024, 789.478, 33.8806, 0.2712 ) }
    dend_28 { pt3dadd( 252.313, 790.374, 33.88, 0.2684 ) }
    dend_28 { pt3dadd( 252.047, 791.486, 33.88, 0.2626 ) }
    dend_28 { pt3dadd( 251.074, 792.083, 33.88, 0.2542 ) }
    dend_28 { pt3dadd( 250.033, 792.559, 33.88, 0.2288 ) }
    dend_28 { pt3dadd( 248.968, 792.975, 33.88, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 69/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 299.934, 751.484, 25.2022, 0.6002 ) }
    dend_27 { pt3dadd( 299.023, 750.563, 25.5885, 0.5492 ) }
    dend_27 { pt3dadd( 298.11, 749.878, 25.7229, 0.515 ) }
    dend_27 { pt3dadd( 297.116, 749.317, 25.8605, 0.6186 ) }
    dend_27 { pt3dadd( 296.098, 748.798, 26.0225, 0.6736 ) }
    dend_27 { pt3dadd( 295.104, 748.239, 26.2044, 0.6352 ) }
    dend_27 { pt3dadd( 294.214, 747.525, 26.3987, 0.54 ) }
    dend_27 { pt3dadd( 293.461, 746.669, 26.6014, 0.6492 ) }
    dend_27 { pt3dadd( 292.52, 746.03, 26.8034, 0.556 ) }
    dend_27 { pt3dadd( 291.484, 745.548, 26.9926, 0.587 ) }
    dend_27 { pt3dadd( 290.523, 744.933, 27.1741, 0.4654 ) }
    dend_27 { pt3dadd( 289.631, 744.222, 27.3591, 0.4774 ) }
    dend_27 { pt3dadd( 288.724, 743.529, 27.5609, 0.4316 ) }
    dend_27 { pt3dadd( 287.85, 742.797, 27.772, 0.492 ) }
    dend_27 { pt3dadd( 286.873, 742.208, 27.9864, 0.5586 ) }
    dend_27 { pt3dadd( 286.043, 741.426, 28.2108, 0.4756 ) }
    dend_27 { pt3dadd( 285.625, 740.368, 28.4122, 0.4234 ) }
    dend_27 { pt3dadd( 284.936, 739.46, 28.6199, 0.4752 ) }
    dend_27 { pt3dadd( 284.255, 738.545, 28.8333, 0.5448 ) }
    dend_27 { pt3dadd( 283.59, 737.618, 29.0637, 0.5856 ) }
    dend_27 { pt3dadd( 282.825, 736.774, 29.3132, 0.6366 ) }
    dend_27 { pt3dadd( 281.995, 735.995, 29.5733, 0.6178 ) }
    dend_27 { pt3dadd( 281.183, 735.194, 29.8203, 0.447 ) }
    dend_27 { pt3dadd( 280.489, 734.289, 30.0468, 0.3308 ) }
    dend_27 { pt3dadd( 279.557, 733.633, 30.2582, 0.2796 ) }
    dend_27 { pt3dadd( 278.416, 733.678, 30.4408, 0.3048 ) }
    dend_27 { pt3dadd( 277.288, 733.805, 30.8, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_17 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 313.733, 756.197, 15.1108, 0.6234 ) }
    dend_25 { pt3dadd( 313.241, 756.779, 15.966, 0.7292 ) }
    dend_25 { pt3dadd( 312.925, 757.795, 16.5114, 0.629 ) }
    dend_25 { pt3dadd( 312.727, 758.916, 16.7563, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_25 { pt3dadd( 312.335, 759.979, 17.0155, 0.5238 ) }
    dend_25 { pt3dadd( 311.899, 761.031, 17.2661, 0.56 ) }
    dend_25 { pt3dadd( 311.65, 762.136, 17.5128, 0.5256 ) }
    dend_25 { pt3dadd( 311.769, 763.255, 17.7557, 0.5518 ) }
    dend_25 { pt3dadd( 311.91, 764.383, 18.0088, 0.5064 ) }
    dend_25 { pt3dadd( 311.782, 765.506, 18.2775, 0.508 ) }
    dend_25 { pt3dadd( 311.894, 766.621, 18.5946, 0.4966 ) }
    dend_25 { pt3dadd( 311.415, 767.581, 18.927, 0.634 ) }
    dend_25 { pt3dadd( 311.193, 768.671, 19.2395, 0.5952 ) }
    dend_25 { pt3dadd( 310.86, 769.753, 19.5213, 0.6184 ) }
    dend_25 { pt3dadd( 310.63, 770.867, 19.7655, 0.5808 ) }
    dend_25 { pt3dadd( 310.348, 771.971, 19.968, 0.5236 ) }
    dend_25 { pt3dadd( 309.864, 773.001, 20.1582, 0.5946 ) }
    dend_25 { pt3dadd( 309.47, 774.07, 20.3484, 0.508 ) }
    dend_25 { pt3dadd( 309.236, 775.186, 20.5327, 0.4194 ) }
    dend_25 { pt3dadd( 308.893, 776.273, 20.7078, 0.4038 ) }
    dend_25 { pt3dadd( 308.554, 777.363, 20.8718, 0.3874 ) }
    dend_25 { pt3dadd( 308.307, 778.478, 21.0194, 0.4132 ) }
    dend_25 { pt3dadd( 307.909, 779.546, 21.153, 0.3768 ) }
    dend_25 { pt3dadd( 307.393, 780.566, 21.259, 0.3652 ) }
    dend_25 { pt3dadd( 307.062, 781.659, 21.3473, 0.4154 ) }
    dend_25 { pt3dadd( 306.526, 782.665, 21.4343, 0.4218 ) }
    dend_25 { pt3dadd( 305.704, 783.456, 21.5243, 0.4528 ) }
    dend_25 { pt3dadd( 304.795, 784.149, 21.6272, 0.5938 ) }
    dend_25 { pt3dadd( 303.957, 784.927, 21.7513, 0.6818 ) }
    dend_25 { pt3dadd( 303.179, 785.763, 21.8968, 0.6152 ) }
    dend_25 { pt3dadd( 302.303, 786.494, 22.0567, 0.6762 ) }
    dend_25 { pt3dadd( 301.423, 787.222, 22.2153, 0.7202 ) }
    dend_25 { pt3dadd( 300.555, 787.966, 22.3694, 0.739 ) }
    dend_25 { pt3dadd( 299.777, 788.801, 22.5185, 0.621 ) }
    dend_25 { pt3dadd( 299.118, 789.734, 22.668, 0.6864 ) }
    dend_25 { pt3dadd( 298.802, 790.83, 22.8201, 0.7404 ) }
    dend_25 { pt3dadd( 298.691, 791.966, 22.9691, 0.7698 ) }
    dend_25 { pt3dadd( 298.566, 793.102, 23.1267, 0.7008 ) }
    dend_25 { pt3dadd( 298.351, 794.223, 23.2994, 0.716 ) }
    dend_25 { pt3dadd( 298.077, 795.331, 23.4917, 0.7132 ) }
    dend_25 { pt3dadd( 297.758, 796.425, 23.708, 0.6472 ) }
    dend_25 { pt3dadd( 297.336, 797.485, 23.9467, 0.5918 ) }
    dend_25 { pt3dadd( 296.887, 798.531, 24.2032, 0.6104 ) }
    dend_25 { pt3dadd( 296.59, 799.63, 24.4859, 0.5146 ) }
    dend_25 { pt3dadd( 296.222, 800.705, 24.8025, 0.5232 ) }
    dend_25 { pt3dadd( 295.792, 801.756, 25.1378, 0.5324 ) }
    dend_25 { pt3dadd( 295.474, 802.846, 25.489, 0.596 ) }
    dend_25 { pt3dadd( 295.35, 803.974, 25.8509, 0.4858 ) }
    dend_25 { pt3dadd( 295.239, 805.103, 26.2039, 0.4776 ) }
    dend_25 { pt3dadd( 294.746, 806.125, 26.5499, 0.4222 ) }
    dend_25 { pt3dadd( 294.283, 807.164, 26.8665, 0.5142 ) }
    dend_25 { pt3dadd( 293.733, 808.159, 27.1659, 0.4264 ) }
    dend_25 { pt3dadd( 293.37, 809.237, 27.4692, 0.3806 ) }
    dend_25 { pt3dadd( 293.22, 810.364, 27.7818, 0.4022 ) }
    dend_25 { pt3dadd( 292.994, 811.476, 28.1224, 0.388 ) }
    dend_25 { pt3dadd( 293.086, 812.606, 28.4894, 0.398 ) }
    dend_25 { pt3dadd( 292.986, 813.732, 28.896, 0.4724 ) }
    dend_25 { pt3dadd( 292.56, 814.779, 29.3143, 0.5592 ) }
    dend_25 { pt3dadd( 292.027, 815.775, 29.7455, 0.47 ) }
    dend_25 { pt3dadd( 291.307, 816.646, 30.1812, 0.4458 ) }
    dend_25 { pt3dadd( 290.499, 817.437, 30.6124, 0.3766 ) }
    dend_25 { pt3dadd( 289.688, 818.223, 31.0346, 0.399 ) }
    dend_25 { pt3dadd( 289.03, 819.143, 31.4549, 0.3386 ) }
    dend_25 { pt3dadd( 288.392, 820.075, 31.8889, 0.3106 ) }
    dend_25 { pt3dadd( 287.742, 820.997, 32.3526, 0.2966 ) }
    dend_25 { pt3dadd( 287.152, 821.95, 32.853, 0.3166 ) }
    dend_25 { pt3dadd( 287.035, 823.052, 33.4071, 0.3554 ) }
    dend_25 { pt3dadd( 287.337, 824.135, 33.9164, 0.4292 ) }
    dend_25 { pt3dadd( 287.666, 825.212, 34.4126, 0.4424 ) }
    dend_25 { pt3dadd( 288.116, 826.244, 34.8939, 0.5096 ) }
    dend_25 { pt3dadd( 288.495, 827.301, 35.3556, 0.5582 ) }
    dend_25 { pt3dadd( 288.582, 828.425, 35.7977, 0.4856 ) }
    dend_25 { pt3dadd( 288.499, 829.551, 36.1878, 0.471 ) }
    dend_25 { pt3dadd( 288.183, 830.639, 36.5159, 0.5602 ) }
    dend_25 { pt3dadd( 287.689, 831.665, 36.7867, 0.5688 ) }
    dend_25 { pt3dadd( 287.183, 832.688, 37.0115, 0.4302 ) }
    dend_25 { pt3dadd( 286.677, 833.707, 37.1969, 0.3292 ) }
    dend_25 { pt3dadd( 285.976, 834.603, 37.357, 0.298 ) }
    dend_25 { pt3dadd( 285.082, 835.311, 37.5082, 0.318 ) }
    dend_25 { pt3dadd( 284.095, 835.884, 37.6653, 0.3554 ) }
    dend_25 { pt3dadd( 283.096, 836.437, 37.8361, 0.4236 ) }
    dend_25 { pt3dadd( 282.098, 836.985, 38.0248, 0.4338 ) }
    dend_25 { pt3dadd( 281.019, 837.349, 38.2376, 0.4916 ) }
    dend_25 { pt3dadd( 279.907, 837.601, 38.486, 0.5196 ) }
    dend_25 { pt3dadd( 278.795, 837.836, 38.7951, 0.416 ) }
    dend_25 { pt3dadd( 277.692, 837.955, 39.146, 0.3424 ) }
    dend_25 { pt3dadd( 276.655, 837.521, 39.5198, 0.326 ) }
    dend_25 { pt3dadd( 275.709, 836.964, 39.9146, 0.3644 ) }
    dend_25 { pt3dadd( 274.584, 836.966, 40.3315, 0.3254 ) }
    dend_25 { pt3dadd( 273.488, 837.068, 40.7873, 0.292 ) }
    dend_25 { pt3dadd( 272.449, 836.647, 41.2964, 0.2704 ) }
    dend_25 { pt3dadd( 271.471, 836.122, 41.9191, 0.2664 ) }
    dend_25 { pt3dadd( 270.499, 835.828, 43.1614, 0.2552 ) }
    dend_25 { pt3dadd( 269.479, 835.655, 44.3556, 0.2288 ) }
    dend_25 { pt3dadd( 268.472, 835.52, 45.64, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 91/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 313.733, 756.197, 15.1108, 0.6234 ) }
    dend_18 { pt3dadd( 312.739, 756.837, 14.7944, 0.5184 ) }
    dend_18 { pt3dadd( 311.892, 757.603, 14.6119, 0.4532 ) }
    dend_18 { pt3dadd( 310.952, 758.251, 14.4609, 0.5576 ) }
    dend_18 { pt3dadd( 310.364, 759.232, 14.3502, 0.5732 ) }
    dend_18 { pt3dadd( 310.093, 760.342, 14.2775, 0.5566 ) }
    dend_18 { pt3dadd( 309.673, 761.406, 14.2316, 0.515 ) }
    dend_18 { pt3dadd( 309.271, 762.477, 14.2033, 0.49 ) }
    dend_18 { pt3dadd( 309.223, 763.62, 14.177, 0.4192 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 309.223, 764.764, 14.1481, 0.408 ) }
    dend_18 { pt3dadd( 309.223, 765.908, 14.1151, 0.4894 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 2/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 405.733, 675.513, 15.9177, 0.5498 ) }
    dend_15 { pt3dadd( 406.337, 675.638, 16.2423, 0.269 ) }
    dend_15 { pt3dadd( 407.429, 675.967, 16.4318, 0.3272 ) }
    dend_15 { pt3dadd( 408.461, 676.456, 16.5007, 0.3728 ) }
    dend_15 { pt3dadd( 409.375, 677.142, 16.5801, 0.5058 ) }
    dend_15 { pt3dadd( 410.168, 677.964, 16.6762, 0.4718 ) }
    dend_15 { pt3dadd( 410.872, 678.863, 16.7949, 0.4646 ) }
    dend_15 { pt3dadd( 411.445, 679.852, 16.9432, 0.5408 ) }
    dend_15 { pt3dadd( 412.08, 680.8, 17.1179, 0.7104 ) }
    dend_15 { pt3dadd( 412.86, 681.633, 17.3031, 0.689 ) }
    dend_15 { pt3dadd( 413.715, 682.39, 17.4782, 0.4998 ) }
    dend_15 { pt3dadd( 414.58, 683.136, 17.6298, 0.3696 ) }
    dend_15 { pt3dadd( 415.447, 683.881, 17.7489, 0.3742 ) }
    dend_15 { pt3dadd( 416.314, 684.627, 17.8334, 0.3372 ) }
    dend_15 { pt3dadd( 417.223, 685.32, 17.8881, 0.305 ) }
    dend_15 { pt3dadd( 418.278, 685.757, 17.9218, 0.2828 ) }
    dend_15 { pt3dadd( 419.336, 686.195, 17.9439, 0.2888 ) }
    dend_15 { pt3dadd( 420.21, 686.933, 17.9616, 0.3008 ) }
    dend_15 { pt3dadd( 421.018, 687.741, 17.9798, 0.3252 ) }
    dend_15 { pt3dadd( 421.827, 688.551, 18.0032, 0.358 ) }
    dend_15 { pt3dadd( 422.628, 689.367, 18.0351, 0.4798 ) }
    dend_15 { pt3dadd( 423.526, 690.076, 18.086, 0.4096 ) }
    dend_15 { pt3dadd( 424.46, 690.736, 18.1545, 0.356 ) }
    dend_15 { pt3dadd( 425.416, 691.363, 18.2357, 0.3258 ) }
    dend_15 { pt3dadd( 426.42, 691.909, 18.3211, 0.3944 ) }
    dend_15 { pt3dadd( 427.409, 692.484, 18.4029, 0.3744 ) }
    dend_15 { pt3dadd( 428.34, 693.147, 18.4771, 0.3694 ) }
    dend_15 { pt3dadd( 429.184, 693.919, 18.5408, 0.4294 ) }
    dend_15 { pt3dadd( 429.96, 694.76, 18.5973, 0.4336 ) }
    dend_15 { pt3dadd( 430.566, 695.729, 18.6503, 0.507 ) }
    dend_15 { pt3dadd( 431.091, 696.745, 18.7083, 0.5496 ) }
    dend_15 { pt3dadd( 431.644, 697.747, 18.7763, 0.6278 ) }
    dend_15 { pt3dadd( 432.368, 698.632, 18.8535, 0.5482 ) }
    dend_15 { pt3dadd( 432.916, 699.636, 18.9407, 0.5762 ) }
    dend_15 { pt3dadd( 433.322, 700.705, 19.0384, 0.6866 ) }
    dend_15 { pt3dadd( 434.111, 701.531, 19.1513, 0.6094 ) }
    dend_15 { pt3dadd( 435.092, 702.119, 19.2767, 0.4654 ) }
    dend_15 { pt3dadd( 436.099, 702.659, 19.4162, 0.4272 ) }
    dend_15 { pt3dadd( 437.118, 703.173, 19.5724, 0.3886 ) }
    dend_15 { pt3dadd( 438.136, 703.692, 19.752, 0.3908 ) }
    dend_15 { pt3dadd( 439.153, 704.208, 19.9461, 0.4942 ) }
    dend_15 { pt3dadd( 440.265, 704.465, 20.1466, 0.4322 ) }
    dend_15 { pt3dadd( 441.379, 704.711, 20.3464, 0.4068 ) }
    dend_15 { pt3dadd( 442.493, 704.957, 20.5371, 0.382 ) }
    dend_15 { pt3dadd( 443.595, 705.202, 21.0, 0.6864 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 47/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 405.733, 675.513, 15.9177, 0.5498 ) }
    dend_12 { pt3dadd( 405.806, 673.865, 15.695, 0.501 ) }
    dend_12 { pt3dadd( 406.114, 672.765, 15.5534, 0.401 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 50/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 316.802, 692.372, 8.3084, 0.6738 ) }
    dend_7 { pt3dadd( 316.828, 691.396, 7.8426, 0.2466 ) }
    dend_7 { pt3dadd( 317.047, 690.289, 7.406, 0.5414 ) }
    dend_7 { pt3dadd( 317.334, 689.185, 7.2108, 0.5962 ) }
    dend_7 { pt3dadd( 317.808, 688.148, 6.9832, 0.4616 ) }
    dend_7 { pt3dadd( 318.37, 687.157, 6.7213, 0.3524 ) }
    dend_7 { pt3dadd( 319.477, 686.94, 6.4537, 0.3192 ) }
    dend_7 { pt3dadd( 320.144, 686.02, 6.2126, 0.3588 ) }
    dend_7 { pt3dadd( 320.193, 684.88, 6.0201, 0.4212 ) }
    dend_7 { pt3dadd( 320.486, 683.774, 5.8777, 0.5934 ) }
    dend_7 { pt3dadd( 320.889, 682.705, 5.7836, 0.6356 ) }
    dend_7 { pt3dadd( 321.113, 681.584, 5.6932, 0.6864 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 316.802, 692.372, 8.3084, 0.6738 ) }
    dend_6 { pt3dadd( 316.569, 691.678, 8.2161, 0.6624 ) }
    dend_6 { pt3dadd( 316.211, 690.594, 8.0842, 0.6362 ) }
    dend_6 { pt3dadd( 315.877, 689.5, 8.0017, 0.594 ) }
    dend_6 { pt3dadd( 315.567, 688.402, 7.9237, 0.6776 ) }
    dend_6 { pt3dadd( 315.284, 687.297, 8.0844, 0.739 ) }
    dend_6 { pt3dadd( 315.003, 686.195, 8.2727, 0.7002 ) }
    dend_6 { pt3dadd( 314.808, 685.072, 8.4995, 0.6864 ) }
    dend_6 { pt3dadd( 314.486, 683.987, 8.774, 0.7402 ) }
    dend_6 { pt3dadd( 314.03, 682.946, 9.092, 0.6892 ) }
    dend_6 { pt3dadd( 313.57, 681.906, 9.4023, 0.5944 ) }
    dend_6 { pt3dadd( 312.961, 680.961, 9.6827, 0.519 ) }
    dend_6 { pt3dadd( 312.319, 680.034, 9.9603, 0.46 ) }
    dend_6 { pt3dadd( 312.081, 678.953, 10.2416, 0.4204 ) }
    dend_6 { pt3dadd( 312.019, 677.818, 10.521, 0.4814 ) }
    dend_6 { pt3dadd( 311.864, 676.692, 10.8144, 0.5234 ) }
    dend_6 { pt3dadd( 311.396, 675.694, 11.1389, 0.5544 ) }
    dend_6 { pt3dadd( 310.655, 674.836, 11.4939, 0.5544 ) }
    dend_6 { pt3dadd( 310.127, 673.856, 11.8488, 0.5036 ) }
    dend_6 { pt3dadd( 309.92, 672.747, 12.1818, 0.4088 ) }
    dend_6 { pt3dadd( 309.582, 671.678, 12.5066, 0.3274 ) }
    dend_6 { pt3dadd( 308.816, 670.879, 12.8196, 0.2968 ) }
    dend_6 { pt3dadd( 307.919, 670.179, 13.1253, 0.3022 ) }
    dend_6 { pt3dadd( 307.079, 669.415, 13.4297, 0.3222 ) }
    dend_6 { pt3dadd( 306.211, 668.682, 13.7372, 0.38 ) }
    dend_6 { pt3dadd( 305.308, 667.99, 14.0519, 0.387 ) }
    dend_6 { pt3dadd( 304.488, 667.209, 14.3734, 0.4032 ) }
    dend_6 { pt3dadd( 304.095, 666.181, 14.7058, 0.3736 ) }
    dend_6 { pt3dadd( 303.88, 665.065, 15.0381, 0.3474 ) }
    dend_6 { pt3dadd( 303.598, 663.968, 15.4085, 0.374 ) }
    dend_6 { pt3dadd( 302.96, 663.042, 15.7371, 0.3512 ) }
    dend_6 { pt3dadd( 302.593, 661.976, 16.0252, 0.327 ) }
    dend_6 { pt3dadd( 302.095, 660.953, 16.267, 0.3156 ) }
    dend_6 { pt3dadd( 301.761, 659.864, 16.4699, 0.3682 ) }
    dend_6 { pt3dadd( 301.52, 658.748, 16.6503, 0.339 ) }
    dend_6 { pt3dadd( 301.407, 657.612, 16.8184, 0.3058 ) }
    dend_6 { pt3dadd( 301.176, 656.495, 16.9824, 0.2814 ) }
    dend_6 { pt3dadd( 300.492, 655.594, 17.1482, 0.2826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_6 { pt3dadd( 299.562, 654.939, 17.3222, 0.2896 ) }
    dend_6 { pt3dadd( 298.531, 654.453, 17.5105, 0.3022 ) }
    dend_6 { pt3dadd( 297.674, 653.705, 17.7075, 0.3276 ) }
    dend_6 { pt3dadd( 296.699, 653.118, 17.9155, 0.3634 ) }
    dend_6 { pt3dadd( 295.63, 652.722, 18.1395, 0.4868 ) }
    dend_6 { pt3dadd( 294.644, 652.153, 18.3933, 0.4372 ) }
    dend_6 { pt3dadd( 293.738, 651.467, 18.6708, 0.4248 ) }
    dend_6 { pt3dadd( 292.841, 650.764, 18.9513, 0.3398 ) }
    dend_6 { pt3dadd( 291.942, 650.067, 19.2272, 0.3022 ) }
    dend_6 { pt3dadd( 290.95, 649.509, 19.4989, 0.2762 ) }
    dend_6 { pt3dadd( 289.882, 649.119, 19.7643, 0.2746 ) }
    dend_6 { pt3dadd( 289.177, 648.25, 20.0737, 0.2746 ) }
    dend_6 { pt3dadd( 288.944, 647.137, 20.3879, 0.2746 ) }
    dend_6 { pt3dadd( 288.815, 646.012, 20.7406, 0.2746 ) }
    dend_6 { pt3dadd( 288.953, 644.894, 21.123, 0.2746 ) }
    dend_6 { pt3dadd( 288.603, 643.842, 21.5487, 0.2746 ) }
    dend_6 { pt3dadd( 287.721, 643.156, 21.99, 0.2746 ) }
    dend_6 { pt3dadd( 286.642, 642.827, 22.455, 0.2746 ) }
    dend_6 { pt3dadd( 285.569, 642.498, 22.9398, 0.2746 ) }
    dend_6 { pt3dadd( 284.598, 641.93, 23.421, 0.2746 ) }
    dend_6 { pt3dadd( 283.722, 641.223, 23.9129, 0.2746 ) }
    dend_6 { pt3dadd( 283.022, 640.365, 24.4057, 0.2746 ) }
    dend_6 { pt3dadd( 282.658, 639.296, 24.8252, 0.2746 ) }
    dend_6 { pt3dadd( 282.324, 638.212, 25.1742, 0.2748 ) }
    dend_6 { pt3dadd( 281.843, 637.186, 25.449, 0.2748 ) }
    dend_6 { pt3dadd( 281.176, 636.262, 25.6509, 0.2752 ) }
    dend_6 { pt3dadd( 280.447, 635.382, 25.7899, 0.2756 ) }
    dend_6 { pt3dadd( 279.71, 634.507, 25.8884, 0.2764 ) }
    dend_6 { pt3dadd( 278.988, 633.622, 25.9622, 0.278 ) }
    dend_6 { pt3dadd( 278.272, 632.742, 26.0102, 0.281 ) }
    dend_6 { pt3dadd( 277.372, 632.036, 26.0422, 0.2864 ) }
    dend_6 { pt3dadd( 276.52, 631.282, 26.0663, 0.297 ) }
    dend_6 { pt3dadd( 275.885, 630.341, 26.088, 0.3156 ) }
    dend_6 { pt3dadd( 275.47, 629.276, 26.1109, 0.3542 ) }
    dend_6 { pt3dadd( 275.141, 628.181, 26.1384, 0.4076 ) }
    dend_6 { pt3dadd( 274.926, 627.058, 26.1719, 0.41 ) }
    dend_6 { pt3dadd( 274.79, 625.924, 26.2319, 0.4396 ) }
    dend_6 { pt3dadd( 274.729, 624.782, 26.3483, 0.4078 ) }
    dend_6 { pt3dadd( 274.703, 623.639, 26.446, 0.3442 ) }
    dend_6 { pt3dadd( 274.669, 622.496, 26.5193, 0.3094 ) }
    dend_6 { pt3dadd( 274.633, 621.353, 26.5695, 0.311 ) }
    dend_6 { pt3dadd( 274.574, 620.21, 26.5948, 0.3502 ) }
    dend_6 { pt3dadd( 274.523, 619.07, 26.6557, 0.369 ) }
    dend_6 { pt3dadd( 274.447, 617.929, 26.6774, 0.3468 ) }
    dend_6 { pt3dadd( 274.347, 616.79, 26.6156, 0.3724 ) }
    dend_6 { pt3dadd( 274.249, 615.651, 26.4969, 0.3534 ) }
    dend_6 { pt3dadd( 274.149, 614.513, 26.3374, 0.3288 ) }
    dend_6 { pt3dadd( 274.05, 613.376, 26.1522, 0.3162 ) }
    dend_6 { pt3dadd( 273.717, 612.291, 25.9784, 0.3622 ) }
    dend_6 { pt3dadd( 273.223, 611.261, 25.8522, 0.3412 ) }
    dend_6 { pt3dadd( 272.706, 610.242, 25.7612, 0.3062 ) }
    dend_6 { pt3dadd( 272.187, 609.222, 25.6875, 0.2792 ) }
    dend_6 { pt3dadd( 271.67, 608.202, 25.6148, 0.2746 ) }
    dend_6 { pt3dadd( 271.284, 607.129, 25.4985, 0.2746 ) }
    dend_6 { pt3dadd( 271.102, 606.005, 25.2972, 0.2746 ) }
    dend_6 { pt3dadd( 270.953, 604.876, 25.0295, 0.2746 ) }
    dend_6 { pt3dadd( 270.804, 603.748, 24.7274, 0.2746 ) }
    dend_6 { pt3dadd( 270.657, 602.621, 24.4201, 0.2746 ) }
    dend_6 { pt3dadd( 270.922, 601.522, 24.1888, 0.2746 ) }
    dend_6 { pt3dadd( 271.164, 600.407, 24.0558, 0.2748 ) }
    dend_6 { pt3dadd( 270.68, 599.384, 24.058, 0.275 ) }
    dend_6 { pt3dadd( 270.156, 598.368, 24.1463, 0.2752 ) }
    dend_6 { pt3dadd( 269.585, 597.377, 24.2725, 0.2756 ) }
    dend_6 { pt3dadd( 268.749, 596.599, 24.3541, 0.2768 ) }
    dend_6 { pt3dadd( 267.906, 595.825, 24.3692, 0.2786 ) }
    dend_6 { pt3dadd( 267.017, 595.107, 24.3133, 0.2826 ) }
    dend_6 { pt3dadd( 265.967, 594.656, 24.1544, 0.288 ) }
    dend_6 { pt3dadd( 264.918, 594.208, 23.9288, 0.305 ) }
    dend_6 { pt3dadd( 263.871, 593.762, 23.6672, 0.3068 ) }
    dend_6 { pt3dadd( 262.841, 593.324, 23.0863, 0.4576 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 70/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 365.597, 717.974, 20.7648, 0.9682 ) }
    dend_41 { pt3dadd( 366.966, 717.226, 22.0055, 0.3496 ) }
    dend_41 { pt3dadd( 368.049, 716.892, 22.3772, 0.309 ) }
    dend_41 { pt3dadd( 369.122, 716.776, 22.985, 0.3112 ) }
    dend_41 { pt3dadd( 370.195, 716.969, 23.8112, 0.3476 ) }
    dend_41 { pt3dadd( 371.305, 717.106, 24.3977, 0.43 ) }
    dend_41 { pt3dadd( 372.418, 717.247, 24.9404, 0.4674 ) }
    dend_41 { pt3dadd( 373.532, 717.394, 25.4602, 0.5908 ) }
    dend_41 { pt3dadd( 374.652, 717.543, 25.9012, 0.5474 ) }
    dend_41 { pt3dadd( 375.776, 717.691, 26.2636, 0.4816 ) }
    dend_41 { pt3dadd( 376.877, 717.955, 26.6401, 0.4986 ) }
    dend_41 { pt3dadd( 377.971, 718.245, 27.0509, 0.5962 ) }
    dend_41 { pt3dadd( 379.086, 718.426, 27.4549, 0.6412 ) }
    dend_41 { pt3dadd( 380.19, 718.367, 28.0932, 0.5176 ) }
    dend_41 { pt3dadd( 381.286, 718.541, 28.7232, 0.425 ) }
    dend_41 { pt3dadd( 382.03, 718.261, 29.6531, 0.5178 ) }
    dend_41 { pt3dadd( 383.048, 718.725, 30.1647, 0.5914 ) }
    dend_41 { pt3dadd( 384.082, 719.163, 30.6163, 0.5884 ) }
    dend_41 { pt3dadd( 385.146, 719.553, 30.9812, 0.5226 ) }
    dend_41 { pt3dadd( 386.209, 719.959, 31.2802, 0.4266 ) }
    dend_41 { pt3dadd( 387.281, 720.343, 31.5759, 0.3522 ) }
    dend_41 { pt3dadd( 388.367, 720.677, 31.8522, 0.3368 ) }
    dend_41 { pt3dadd( 389.467, 720.98, 32.0967, 0.368 ) }
    dend_41 { pt3dadd( 390.566, 721.281, 32.3243, 0.4584 ) }
    dend_41 { pt3dadd( 391.655, 721.614, 32.5676, 0.5622 ) }
    dend_41 { pt3dadd( 392.716, 722.021, 32.8826, 0.6688 ) }
    dend_41 { pt3dadd( 393.797, 722.304, 33.3654, 0.7356 ) }
    dend_41 { pt3dadd( 394.904, 722.26, 33.9685, 0.7586 ) }
    dend_41 { pt3dadd( 396.018, 722.258, 34.5769, 0.5608 ) }
    dend_41 { pt3dadd( 397.12, 722.025, 35.0445, 0.4338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 398.247, 721.928, 35.4466, 0.4006 ) }
    dend_41 { pt3dadd( 399.321, 722.262, 35.8431, 0.54 ) }
    dend_41 { pt3dadd( 400.128, 723.058, 36.1438, 0.5786 ) }
    dend_41 { pt3dadd( 401.122, 723.612, 36.4154, 0.4238 ) }
    dend_41 { pt3dadd( 401.995, 724.346, 36.617, 0.2794 ) }
    dend_41 { pt3dadd( 402.765, 725.182, 36.96, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 6/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 365.597, 717.974, 20.7648, 0.9682 ) }
    dend_38 { pt3dadd( 366.406, 718.155, 20.9591, 0.8692 ) }
    dend_38 { pt3dadd( 367.533, 718.251, 21.1417, 0.7726 ) }
    dend_38 { pt3dadd( 368.672, 718.159, 21.2316, 0.6848 ) }
    dend_38 { pt3dadd( 369.811, 718.05, 21.3039, 0.6662 ) }
    dend_38 { pt3dadd( 370.951, 717.976, 21.3514, 0.7394 ) }
    dend_38 { pt3dadd( 372.093, 717.986, 21.3664, 0.801 ) }
    dend_38 { pt3dadd( 373.236, 718.011, 21.3532, 0.815 ) }
    dend_38 { pt3dadd( 374.372, 717.904, 21.3267, 0.8664 ) }
    dend_38 { pt3dadd( 375.455, 717.567, 21.2883, 0.9756 ) }
    dend_38 { pt3dadd( 376.54, 717.232, 21.2258, 0.9604 ) }
    dend_38 { pt3dadd( 377.673, 717.113, 21.137, 0.804 ) }
    dend_38 { pt3dadd( 378.794, 716.925, 21.0239, 0.7604 ) }
    dend_38 { pt3dadd( 379.9, 716.638, 20.88, 0.8804 ) }
    dend_38 { pt3dadd( 381.026, 716.55, 20.7001, 1.0034 ) }
    dend_38 { pt3dadd( 382.141, 716.757, 20.4918, 1.041 ) }
    dend_38 { pt3dadd( 383.234, 717.08, 20.2744, 1.0128 ) }
    dend_38 { pt3dadd( 384.294, 717.497, 20.0574, 0.9288 ) }
    dend_38 { pt3dadd( 385.288, 718.05, 19.8502, 0.8374 ) }
    dend_38 { pt3dadd( 386.271, 718.631, 19.6682, 0.775 ) }
    dend_38 { pt3dadd( 387.326, 719.047, 19.5194, 0.6874 ) }
    dend_38 { pt3dadd( 388.394, 718.886, 19.367, 0.7054 ) }
    dend_38 { pt3dadd( 389.501, 718.667, 19.1957, 0.8172 ) }
    dend_38 { pt3dadd( 390.642, 718.631, 19.0084, 0.8598 ) }
    dend_38 { pt3dadd( 391.782, 718.638, 18.8, 0.8238 ) }
    dend_38 { pt3dadd( 392.918, 718.565, 18.5677, 0.7704 ) }
    dend_38 { pt3dadd( 394.019, 718.289, 18.3214, 0.6752 ) }
    dend_38 { pt3dadd( 395.064, 717.842, 18.0739, 0.7124 ) }
    dend_38 { pt3dadd( 396.105, 717.381, 17.8262, 0.737 ) }
    dend_38 { pt3dadd( 397.161, 716.953, 17.5813, 0.6892 ) }
    dend_38 { pt3dadd( 397.882, 716.145, 17.3184, 0.514 ) }
    dend_38 { pt3dadd( 398.305, 715.093, 17.0399, 0.366 ) }
    dend_38 { pt3dadd( 398.645, 714.007, 16.7545, 0.3016 ) }
    dend_38 { pt3dadd( 398.866, 712.893, 16.4692, 0.299 ) }
    dend_38 { pt3dadd( 399.019, 711.765, 16.1918, 0.3162 ) }
    dend_38 { pt3dadd( 399.44, 710.723, 15.9254, 0.3684 ) }
    dend_38 { pt3dadd( 399.845, 709.661, 15.6675, 0.3674 ) }
    dend_38 { pt3dadd( 399.968, 708.539, 15.4069, 0.3476 ) }
    dend_38 { pt3dadd( 400.004, 707.4, 15.1343, 0.3698 ) }
    dend_38 { pt3dadd( 400.108, 706.268, 14.8505, 0.3554 ) }
    dend_38 { pt3dadd( 400.384, 705.167, 14.5689, 0.329 ) }
    dend_38 { pt3dadd( 400.728, 704.082, 14.3029, 0.318 ) }
    dend_38 { pt3dadd( 401.128, 703.014, 14.0596, 0.3438 ) }
    dend_38 { pt3dadd( 401.859, 702.169, 13.8419, 0.3976 ) }
    dend_38 { pt3dadd( 402.852, 701.63, 13.6501, 0.531 ) }
    dend_38 { pt3dadd( 403.858, 701.092, 13.4738, 0.6142 ) }
    dend_38 { pt3dadd( 404.784, 700.429, 13.295, 0.5372 ) }
    dend_38 { pt3dadd( 405.201, 699.416, 13.0612, 0.4794 ) }
    dend_38 { pt3dadd( 405.597, 698.348, 12.8308, 0.4226 ) }
    dend_38 { pt3dadd( 406.443, 697.614, 12.6261, 0.4896 ) }
    dend_38 { pt3dadd( 407.502, 697.205, 12.4494, 0.4118 ) }
    dend_38 { pt3dadd( 408.616, 696.957, 12.3011, 0.3432 ) }
    dend_38 { pt3dadd( 409.502, 696.258, 12.1803, 0.2978 ) }
    dend_38 { pt3dadd( 409.934, 695.212, 12.0793, 0.3104 ) }
    dend_38 { pt3dadd( 410.149, 694.091, 11.9731, 0.336 ) }
    dend_38 { pt3dadd( 410.3, 692.957, 11.8564, 0.412 ) }
    dend_38 { pt3dadd( 410.521, 691.836, 11.7289, 0.414 ) }
    dend_38 { pt3dadd( 410.896, 690.759, 11.5897, 0.465 ) }
    dend_38 { pt3dadd( 411.528, 689.81, 11.4367, 0.4834 ) }
    dend_38 { pt3dadd( 412.331, 688.999, 11.2682, 0.4812 ) }
    dend_38 { pt3dadd( 413.142, 688.196, 11.08, 0.408 ) }
    dend_38 { pt3dadd( 413.858, 687.31, 10.8637, 0.3772 ) }
    dend_38 { pt3dadd( 414.342, 686.281, 10.6066, 0.4312 ) }
    dend_38 { pt3dadd( 414.709, 685.206, 10.293, 0.4708 ) }
    dend_38 { pt3dadd( 415.012, 684.111, 9.947, 0.4364 ) }
    dend_38 { pt3dadd( 415.076, 682.977, 9.6158, 0.4302 ) }
    dend_38 { pt3dadd( 415.033, 681.84, 9.3319, 0.5682 ) }
    dend_38 { pt3dadd( 414.719, 680.743, 9.1578, 0.563 ) }
    dend_38 { pt3dadd( 414.486, 679.623, 9.1021, 0.684 ) }
    dend_38 { pt3dadd( 414.242, 678.505, 9.1506, 0.727 ) }
    dend_38 { pt3dadd( 414.242, 677.362, 9.2753, 0.7742 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 77/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 346.257, 692.112, 12.8635, 0.6082 ) }
    dend_34 { pt3dadd( 345.623, 691.382, 12.561, 0.5762 ) }
    dend_34 { pt3dadd( 344.857, 690.539, 12.3391, 0.4624 ) }
    dend_34 { pt3dadd( 343.98, 689.811, 12.16, 0.3934 ) }
    dend_34 { pt3dadd( 343.04, 689.165, 11.976, 0.4328 ) }
    dend_34 { pt3dadd( 342.182, 688.417, 11.7737, 0.4874 ) }
    dend_34 { pt3dadd( 341.792, 687.375, 11.5651, 0.4802 ) }
    dend_34 { pt3dadd( 341.587, 686.252, 11.3609, 0.5218 ) }
    dend_34 { pt3dadd( 341.259, 685.162, 11.1639, 0.6114 ) }
    dend_34 { pt3dadd( 340.806, 684.115, 10.9717, 0.6174 ) }
    dend_34 { pt3dadd( 340.293, 683.096, 10.7881, 0.6168 ) }
    dend_34 { pt3dadd( 339.786, 682.072, 10.6223, 0.502 ) }
    dend_34 { pt3dadd( 339.595, 680.956, 10.4804, 0.4642 ) }
    dend_34 { pt3dadd( 339.707, 679.823, 10.3662, 0.4086 ) }
    dend_34 { pt3dadd( 339.747, 678.681, 10.277, 0.4342 ) }
    dend_34 { pt3dadd( 339.459, 677.582, 10.2103, 0.4368 ) }
    dend_34 { pt3dadd( 338.841, 676.628, 10.1607, 0.3754 ) }
    dend_34 { pt3dadd( 338.122, 675.739, 10.1196, 0.3196 ) }
    dend_34 { pt3dadd( 337.474, 674.796, 10.0764, 0.2996 ) }
    dend_34 { pt3dadd( 336.954, 673.779, 10.0279, 0.316 ) }
    dend_34 { pt3dadd( 336.71, 672.666, 9.9841, 0.3474 ) }
    dend_34 { pt3dadd( 336.612, 671.528, 9.9417, 0.4326 ) }
    dend_34 { pt3dadd( 336.432, 670.399, 9.8931, 0.4566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_34 { pt3dadd( 336.279, 669.265, 9.8417, 0.5372 ) }
    dend_34 { pt3dadd( 336.188, 668.125, 9.7922, 0.6438 ) }
    dend_34 { pt3dadd( 336.086, 666.986, 9.7424, 0.6626 ) }
    dend_34 { pt3dadd( 336.107, 665.844, 9.6928, 0.6984 ) }
    dend_34 { pt3dadd( 336.32, 664.721, 9.6456, 0.6664 ) }
    dend_34 { pt3dadd( 336.482, 663.589, 9.6084, 0.6698 ) }
    dend_34 { pt3dadd( 336.685, 662.463, 9.5862, 0.7416 ) }
    dend_34 { pt3dadd( 337.011, 661.367, 9.5803, 0.8108 ) }
    dend_34 { pt3dadd( 337.254, 660.249, 9.5853, 0.8496 ) }
    dend_34 { pt3dadd( 337.346, 659.11, 9.5855, 0.8986 ) }
    dend_34 { pt3dadd( 337.211, 657.976, 9.5723, 0.8502 ) }
    dend_34 { pt3dadd( 336.921, 656.87, 9.5429, 0.7844 ) }
    dend_34 { pt3dadd( 336.605, 655.771, 9.4977, 0.7042 ) }
    dend_34 { pt3dadd( 336.159, 654.718, 9.4503, 0.5838 ) }
    dend_34 { pt3dadd( 335.843, 653.619, 9.4224, 0.4484 ) }
    dend_34 { pt3dadd( 335.773, 652.478, 9.4416, 0.4296 ) }
    dend_34 { pt3dadd( 335.622, 651.346, 9.5189, 0.3926 ) }
    dend_34 { pt3dadd( 335.148, 650.308, 9.6615, 0.4008 ) }
    dend_34 { pt3dadd( 334.692, 649.262, 9.853, 0.4816 ) }
    dend_34 { pt3dadd( 334.36, 648.171, 10.0721, 0.553 ) }
    dend_34 { pt3dadd( 334.116, 647.058, 10.2993, 0.6296 ) }
    dend_34 { pt3dadd( 333.694, 645.998, 10.5234, 0.585 ) }
    dend_34 { pt3dadd( 333.797, 644.866, 10.7418, 0.5054 ) }
    dend_34 { pt3dadd( 334.277, 643.833, 10.9591, 0.537 ) }
    dend_34 { pt3dadd( 334.787, 642.814, 11.1885, 0.638 ) }
    dend_34 { pt3dadd( 335.209, 641.754, 11.4332, 0.6334 ) }
    dend_34 { pt3dadd( 335.619, 640.692, 11.688, 0.6454 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 346.257, 692.112, 12.8635, 0.6082 ) }
    dend_33 { pt3dadd( 345.918, 691.526, 12.613, 0.6558 ) }
    dend_33 { pt3dadd( 345.559, 690.466, 12.2385, 0.5564 ) }
    dend_33 { pt3dadd( 345.609, 689.347, 12.027, 0.4246 ) }
    dend_33 { pt3dadd( 345.796, 688.22, 11.8939, 0.396 ) }
    dend_33 { pt3dadd( 345.961, 687.089, 11.7716, 0.4778 ) }
    dend_33 { pt3dadd( 346.424, 686.069, 11.6738, 0.6032 ) }
    dend_33 { pt3dadd( 347.168, 685.209, 11.6112, 0.67 ) }
    dend_33 { pt3dadd( 347.929, 684.356, 11.5773, 0.5934 ) }
    dend_33 { pt3dadd( 348.396, 683.331, 11.5471, 0.5762 ) }
    dend_33 { pt3dadd( 348.839, 682.277, 11.51, 0.5254 ) }
    dend_33 { pt3dadd( 349.37, 681.263, 11.4663, 0.536 ) }
    dend_33 { pt3dadd( 349.881, 680.242, 11.4066, 0.5736 ) }
    dend_33 { pt3dadd( 350.393, 679.219, 11.3177, 0.6518 ) }
    dend_33 { pt3dadd( 351.01, 678.259, 11.1968, 0.6916 ) }
    dend_33 { pt3dadd( 351.732, 677.375, 11.0526, 0.6138 ) }
    dend_33 { pt3dadd( 352.506, 676.536, 10.9004, 0.618 ) }
    dend_33 { pt3dadd( 353.273, 675.69, 10.7586, 0.6146 ) }
    dend_33 { pt3dadd( 354.0, 674.808, 10.6455, 0.6374 ) }
    dend_33 { pt3dadd( 354.728, 673.926, 10.5637, 0.5838 ) }
    dend_33 { pt3dadd( 355.462, 673.049, 10.5017, 0.5086 ) }
    dend_33 { pt3dadd( 356.141, 672.13, 10.4497, 0.4022 ) }
    dend_33 { pt3dadd( 356.74, 671.156, 10.396, 0.3338 ) }
    dend_33 { pt3dadd( 357.273, 670.145, 10.3204, 0.3146 ) }
    dend_33 { pt3dadd( 357.775, 669.118, 10.208, 0.3368 ) }
    dend_33 { pt3dadd( 358.284, 668.095, 10.0587, 0.3878 ) }
    dend_33 { pt3dadd( 358.854, 667.108, 9.8878, 0.4966 ) }
    dend_33 { pt3dadd( 359.473, 666.148, 9.7145, 0.629 ) }
    dend_33 { pt3dadd( 360.103, 665.194, 9.5549, 0.699 ) }
    dend_33 { pt3dadd( 360.721, 664.234, 9.4203, 0.6544 ) }
    dend_33 { pt3dadd( 361.288, 663.241, 9.3134, 0.6142 ) }
    dend_33 { pt3dadd( 361.807, 662.223, 9.2298, 0.4972 ) }
    dend_33 { pt3dadd( 362.32, 661.201, 9.1592, 0.4346 ) }
    dend_33 { pt3dadd( 362.831, 660.177, 9.0905, 0.36 ) }
    dend_33 { pt3dadd( 363.442, 659.213, 9.0139, 0.314 ) }
    dend_33 { pt3dadd( 364.139, 658.307, 8.9214, 0.291 ) }
    dend_33 { pt3dadd( 364.853, 657.414, 8.8068, 0.293 ) }
    dend_33 { pt3dadd( 365.566, 656.522, 8.6665, 0.3082 ) }
    dend_33 { pt3dadd( 366.326, 655.671, 8.4918, 0.3392 ) }
    dend_33 { pt3dadd( 367.125, 654.857, 8.2764, 0.3838 ) }
    dend_33 { pt3dadd( 367.93, 654.051, 8.0215, 0.5318 ) }
    dend_33 { pt3dadd( 368.635, 653.16, 7.7417, 0.4874 ) }
    dend_33 { pt3dadd( 369.139, 652.145, 7.4634, 0.387 ) }
    dend_33 { pt3dadd( 369.578, 651.095, 7.2028, 0.317 ) }
    dend_33 { pt3dadd( 370.043, 650.054, 6.974, 0.3182 ) }
    dend_33 { pt3dadd( 370.521, 649.016, 6.8141, 0.374 ) }
    dend_33 { pt3dadd( 371.346, 648.261, 6.7336, 0.3684 ) }
    dend_33 { pt3dadd( 372.348, 647.713, 6.7201, 0.3514 ) }
    dend_33 { pt3dadd( 373.459, 647.489, 6.751, 0.3812 ) }
    dend_33 { pt3dadd( 374.507, 647.058, 6.8063, 0.3704 ) }
    dend_33 { pt3dadd( 375.492, 646.479, 6.8661, 0.3556 ) }
    dend_33 { pt3dadd( 376.466, 645.88, 6.9134, 0.3898 ) }
    dend_33 { pt3dadd( 377.441, 645.28, 6.9436, 0.3816 ) }
    dend_33 { pt3dadd( 378.452, 644.747, 6.959, 0.3992 ) }
    dend_33 { pt3dadd( 379.487, 644.257, 6.9636, 0.3576 ) }
    dend_33 { pt3dadd( 380.524, 643.776, 6.9606, 0.3262 ) }
    dend_33 { pt3dadd( 381.562, 643.294, 6.9523, 0.315 ) }
    dend_33 { pt3dadd( 382.575, 642.766, 6.9402, 0.341 ) }
    dend_33 { pt3dadd( 383.557, 642.179, 6.9233, 0.3916 ) }
    dend_33 { pt3dadd( 384.532, 641.579, 6.8999, 0.5222 ) }
    dend_33 { pt3dadd( 385.505, 640.98, 6.8672, 0.5858 ) }
    dend_33 { pt3dadd( 386.443, 640.325, 6.8251, 0.4722 ) }
    dend_33 { pt3dadd( 387.554, 640.159, 6.7677, 0.3516 ) }
    dend_33 { pt3dadd( 388.696, 640.099, 6.684, 0.3016 ) }
    dend_33 { pt3dadd( 389.591, 639.429, 6.5642, 0.31 ) }
    dend_33 { pt3dadd( 390.431, 638.654, 6.423, 0.3662 ) }
    dend_33 { pt3dadd( 391.29, 637.902, 6.2501, 0.3222 ) }
    dend_33 { pt3dadd( 391.732, 636.851, 6.076, 0.2796 ) }
    dend_33 { pt3dadd( 392.497, 636.003, 5.9184, 0.2288 ) }
    dend_33 { pt3dadd( 393.605, 635.741, 5.6308, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 97/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 309.223, 765.908, 14.1151, 0.4894 ) }
    dend_20 { pt3dadd( 309.167, 767.245, 14.0352, 0.559 ) }
    dend_20 { pt3dadd( 308.909, 768.354, 13.9831, 0.5796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_20 { pt3dadd( 308.561, 769.443, 13.9366, 0.5646 ) }
    dend_20 { pt3dadd( 308.283, 770.552, 13.9019, 0.5288 ) }
    dend_20 { pt3dadd( 307.898, 771.625, 13.8838, 0.4496 ) }
    dend_20 { pt3dadd( 307.216, 772.525, 13.8858, 0.434 ) }
    dend_20 { pt3dadd( 306.338, 773.254, 13.9075, 0.4182 ) }
    dend_20 { pt3dadd( 305.569, 774.09, 13.9461, 0.4274 ) }
    dend_20 { pt3dadd( 305.221, 775.155, 14.004, 0.5328 ) }
    dend_20 { pt3dadd( 304.786, 776.205, 14.0869, 0.6012 ) }
    dend_20 { pt3dadd( 304.41, 777.283, 14.1784, 0.509 ) }
    dend_20 { pt3dadd( 304.135, 778.393, 14.2595, 0.4108 ) }
    dend_20 { pt3dadd( 303.845, 779.499, 14.3343, 0.418 ) }
    dend_20 { pt3dadd( 303.534, 780.599, 14.4128, 0.4292 ) }
    dend_20 { pt3dadd( 303.133, 781.669, 14.4921, 0.462 ) }
    dend_20 { pt3dadd( 302.685, 782.721, 14.566, 0.6 ) }
    dend_20 { pt3dadd( 301.985, 783.614, 14.6341, 0.711 ) }
    dend_20 { pt3dadd( 301.118, 784.356, 14.6935, 0.7504 ) }
    dend_20 { pt3dadd( 300.224, 785.07, 14.7385, 0.6684 ) }
    dend_20 { pt3dadd( 299.269, 785.697, 14.7654, 0.7208 ) }
    dend_20 { pt3dadd( 298.422, 786.458, 14.7774, 0.837 ) }
    dend_20 { pt3dadd( 297.443, 787.036, 14.7867, 0.8626 ) }
    dend_20 { pt3dadd( 296.52, 787.706, 14.7813, 0.8222 ) }
    dend_20 { pt3dadd( 295.711, 788.512, 14.7594, 0.7658 ) }
    dend_20 { pt3dadd( 295.024, 789.425, 14.7229, 0.7102 ) }
    dend_20 { pt3dadd( 294.46, 790.418, 14.679, 0.6 ) }
    dend_20 { pt3dadd( 294.072, 791.491, 14.6463, 0.4716 ) }
    dend_20 { pt3dadd( 293.987, 792.625, 14.64, 0.4204 ) }
    dend_20 { pt3dadd( 294.042, 793.768, 14.6573, 0.4884 ) }
    dend_20 { pt3dadd( 293.868, 794.892, 14.6774, 0.6066 ) }
    dend_20 { pt3dadd( 293.59, 796.002, 14.6887, 0.5896 ) }
    dend_20 { pt3dadd( 293.32, 797.114, 14.6871, 0.659 ) }
    dend_20 { pt3dadd( 293.097, 798.236, 14.6696, 0.711 ) }
    dend_20 { pt3dadd( 292.992, 799.375, 14.6389, 0.698 ) }
    dend_20 { pt3dadd( 293.028, 800.516, 14.6026, 0.711 ) }
    dend_20 { pt3dadd( 293.133, 801.656, 14.5673, 0.684 ) }
    dend_20 { pt3dadd( 293.254, 802.793, 14.5315, 0.719 ) }
    dend_20 { pt3dadd( 293.268, 803.936, 14.492, 0.7312 ) }
    dend_20 { pt3dadd( 293.064, 805.059, 14.4548, 0.6822 ) }
    dend_20 { pt3dadd( 292.736, 806.154, 14.4227, 0.6756 ) }
    dend_20 { pt3dadd( 292.318, 807.218, 14.3937, 0.6206 ) }
    dend_20 { pt3dadd( 291.797, 808.236, 14.3625, 0.5872 ) }
    dend_20 { pt3dadd( 291.095, 809.136, 14.3257, 0.5622 ) }
    dend_20 { pt3dadd( 290.253, 809.909, 14.2819, 0.594 ) }
    dend_20 { pt3dadd( 289.312, 810.555, 14.2313, 0.504 ) }
    dend_20 { pt3dadd( 288.309, 811.103, 14.187, 0.4826 ) }
    dend_20 { pt3dadd( 287.448, 811.852, 14.1608, 0.4664 ) }
    dend_20 { pt3dadd( 286.721, 812.733, 14.1562, 0.425 ) }
    dend_20 { pt3dadd( 286.033, 813.647, 14.1638, 0.405 ) }
    dend_20 { pt3dadd( 285.364, 814.575, 14.1687, 0.5072 ) }
    dend_20 { pt3dadd( 284.696, 815.504, 14.1549, 0.4778 ) }
    dend_20 { pt3dadd( 283.992, 816.405, 14.1069, 0.494 ) }
    dend_20 { pt3dadd( 283.206, 817.235, 14.0169, 0.4882 ) }
    dend_20 { pt3dadd( 282.32, 817.955, 13.8886, 0.4858 ) }
    dend_20 { pt3dadd( 281.354, 818.565, 13.7346, 0.4178 ) }
    dend_20 { pt3dadd( 280.383, 819.165, 13.5687, 0.3936 ) }
    dend_20 { pt3dadd( 279.438, 819.805, 13.3996, 0.4612 ) }
    dend_20 { pt3dadd( 278.459, 820.392, 13.2277, 0.519 ) }
    dend_20 { pt3dadd( 277.421, 820.868, 13.0473, 0.5746 ) }
    dend_20 { pt3dadd( 276.314, 821.133, 12.854, 0.4682 ) }
    dend_20 { pt3dadd( 275.178, 821.235, 12.6532, 0.4068 ) }
    dend_20 { pt3dadd( 274.07, 821.506, 12.4477, 0.4062 ) }
    dend_20 { pt3dadd( 273.088, 822.08, 12.239, 0.5618 ) }
    dend_20 { pt3dadd( 272.298, 822.9, 12.0319, 0.5698 ) }
    dend_20 { pt3dadd( 271.741, 823.893, 11.8193, 0.6882 ) }
    dend_20 { pt3dadd( 271.382, 824.974, 11.5976, 0.7514 ) }
    dend_20 { pt3dadd( 271.015, 826.054, 11.3694, 0.7856 ) }
    dend_20 { pt3dadd( 270.874, 827.183, 11.1335, 0.769 ) }
    dend_20 { pt3dadd( 270.994, 828.315, 10.8939, 0.669 ) }
    dend_20 { pt3dadd( 271.238, 829.429, 10.6476, 0.7954 ) }
    dend_20 { pt3dadd( 271.803, 830.415, 10.393, 0.8264 ) }
    dend_20 { pt3dadd( 271.93, 831.543, 10.1217, 0.841 ) }
    dend_20 { pt3dadd( 271.421, 832.557, 9.8626, 0.804 ) }
    dend_20 { pt3dadd( 270.659, 833.404, 9.6331, 0.8144 ) }
    dend_20 { pt3dadd( 269.943, 834.293, 9.4417, 0.667 ) }
    dend_20 { pt3dadd( 269.859, 835.432, 9.2989, 0.5268 ) }
    dend_20 { pt3dadd( 269.859, 836.576, 9.2027, 0.5314 ) }
    dend_20 { pt3dadd( 269.833, 837.719, 9.1494, 0.6264 ) }
    dend_20 { pt3dadd( 269.793, 838.862, 9.1306, 0.6164 ) }
    dend_20 { pt3dadd( 269.733, 840.005, 9.1367, 0.5876 ) }
    dend_20 { pt3dadd( 269.549, 841.134, 9.1638, 0.5808 ) }
    dend_20 { pt3dadd( 269.357, 842.262, 9.2053, 0.5722 ) }
    dend_20 { pt3dadd( 269.101, 843.376, 9.2349, 0.764 ) }
    dend_20 { pt3dadd( 268.841, 844.49, 9.2364, 0.7982 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 309.223, 765.908, 14.1151, 0.4894 ) }
    dend_19 { pt3dadd( 308.794, 766.816, 14.6385, 0.4602 ) }
    dend_19 { pt3dadd( 307.81, 767.307, 15.1995, 0.4454 ) }
    dend_19 { pt3dadd( 306.718, 767.626, 15.4049, 0.4666 ) }
    dend_19 { pt3dadd( 305.711, 768.165, 15.5805, 0.5934 ) }
    dend_19 { pt3dadd( 304.738, 768.747, 15.7357, 0.7762 ) }
    dend_19 { pt3dadd( 304.005, 769.615, 15.8683, 0.7866 ) }
    dend_19 { pt3dadd( 303.016, 770.184, 15.9776, 0.6952 ) }
    dend_19 { pt3dadd( 302.196, 770.96, 16.1166, 0.7914 ) }
    dend_19 { pt3dadd( 301.663, 771.97, 16.2791, 0.9166 ) }
    dend_19 { pt3dadd( 301.082, 772.952, 16.4745, 0.8294 ) }
    dend_19 { pt3dadd( 300.301, 773.729, 16.7067, 0.5684 ) }
    dend_19 { pt3dadd( 299.214, 774.061, 16.9616, 0.4582 ) }
    dend_19 { pt3dadd( 298.099, 774.288, 17.2357, 0.4958 ) }
    dend_19 { pt3dadd( 297.06, 774.692, 17.5301, 0.5796 ) }
    dend_19 { pt3dadd( 296.218, 775.453, 17.8333, 0.739 ) }
    dend_19 { pt3dadd( 295.454, 776.295, 18.1243, 0.8478 ) }
    dend_19 { pt3dadd( 294.633, 777.072, 18.3983, 0.9164 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 293.648, 777.639, 18.635, 0.856 ) }
    dend_19 { pt3dadd( 292.601, 778.093, 18.8208, 0.7244 ) }
    dend_19 { pt3dadd( 291.534, 778.497, 18.9677, 0.6432 ) }
    dend_19 { pt3dadd( 290.486, 778.923, 19.0847, 0.5456 ) }
    dend_19 { pt3dadd( 289.559, 779.59, 19.1436, 0.4872 ) }
    dend_19 { pt3dadd( 288.675, 780.317, 19.1426, 0.5506 ) }
    dend_19 { pt3dadd( 287.741, 780.968, 19.1012, 0.6772 ) }
    dend_19 { pt3dadd( 286.682, 781.367, 19.0231, 0.7078 ) }
    dend_19 { pt3dadd( 285.564, 781.6, 18.9341, 0.7818 ) }
    dend_19 { pt3dadd( 284.465, 781.916, 18.8598, 0.7828 ) }
    dend_19 { pt3dadd( 283.378, 782.273, 18.819, 0.819 ) }
    dend_19 { pt3dadd( 282.316, 782.695, 18.8227, 0.74 ) }
    dend_19 { pt3dadd( 281.306, 783.226, 18.8767, 0.6576 ) }
    dend_19 { pt3dadd( 280.385, 783.897, 18.9712, 0.5904 ) }
    dend_19 { pt3dadd( 279.565, 784.693, 19.0847, 0.482 ) }
    dend_19 { pt3dadd( 278.812, 785.55, 19.2012, 0.3802 ) }
    dend_19 { pt3dadd( 278.108, 786.451, 19.305, 0.3422 ) }
    dend_19 { pt3dadd( 277.395, 787.344, 19.3908, 0.3688 ) }
    dend_19 { pt3dadd( 276.68, 788.238, 19.4617, 0.4598 ) }
    dend_19 { pt3dadd( 275.945, 789.114, 19.5259, 0.5678 ) }
    dend_19 { pt3dadd( 275.146, 789.93, 19.5931, 0.537 ) }
    dend_19 { pt3dadd( 274.333, 790.731, 19.6723, 0.4026 ) }
    dend_19 { pt3dadd( 273.693, 791.665, 19.7725, 0.3132 ) }
    dend_19 { pt3dadd( 273.246, 792.715, 19.9014, 0.2884 ) }
    dend_19 { pt3dadd( 272.86, 793.791, 20.0655, 0.3002 ) }
    dend_19 { pt3dadd( 272.512, 794.876, 20.2717, 0.3226 ) }
    dend_19 { pt3dadd( 272.083, 795.924, 20.5321, 0.361 ) }
    dend_19 { pt3dadd( 271.488, 796.891, 20.8622, 0.4478 ) }
    dend_19 { pt3dadd( 270.817, 797.802, 21.2659, 0.5342 ) }
    dend_19 { pt3dadd( 270.089, 798.663, 21.7361, 0.5122 ) }
    dend_19 { pt3dadd( 269.366, 799.522, 22.2682, 0.4324 ) }
    dend_19 { pt3dadd( 268.515, 800.164, 22.9277, 0.33 ) }
    dend_19 { pt3dadd( 267.587, 800.727, 23.6217, 0.2854 ) }
    dend_19 { pt3dadd( 266.964, 801.626, 24.2065, 0.2746 ) }
    dend_19 { pt3dadd( 266.553, 802.673, 24.7059, 0.2746 ) }
    dend_19 { pt3dadd( 266.043, 803.674, 25.1182, 0.2746 ) }
    dend_19 { pt3dadd( 265.24, 804.443, 25.4523, 0.2746 ) }
    dend_19 { pt3dadd( 264.255, 805.01, 25.7194, 0.2746 ) }
    dend_19 { pt3dadd( 263.175, 805.311, 25.946, 0.2746 ) }
    dend_19 { pt3dadd( 262.155, 805.733, 26.1541, 0.2746 ) }
    dend_19 { pt3dadd( 261.197, 806.353, 26.3526, 0.2746 ) }
    dend_19 { pt3dadd( 260.166, 806.83, 26.5502, 0.2746 ) }
    dend_19 { pt3dadd( 259.076, 807.159, 26.766, 0.2746 ) }
    dend_19 { pt3dadd( 257.95, 807.293, 26.9969, 0.2746 ) }
    dend_19 { pt3dadd( 256.812, 807.266, 27.2253, 0.2746 ) }
    dend_19 { pt3dadd( 255.676, 807.165, 27.4434, 0.2746 ) }
    dend_19 { pt3dadd( 254.553, 806.971, 27.6476, 0.2746 ) }
    dend_19 { pt3dadd( 253.471, 806.62, 27.8361, 0.2746 ) }
    dend_19 { pt3dadd( 252.419, 806.177, 28.0081, 0.2746 ) }
    dend_19 { pt3dadd( 251.381, 805.7, 28.1621, 0.2746 ) }
    dend_19 { pt3dadd( 250.422, 805.091, 28.2934, 0.2746 ) }
    dend_19 { pt3dadd( 249.508, 804.403, 28.4001, 0.2746 ) }
    dend_19 { pt3dadd( 248.575, 803.742, 28.4833, 0.2746 ) }
    dend_19 { pt3dadd( 247.613, 803.123, 28.5454, 0.2746 ) }
    dend_19 { pt3dadd( 246.702, 802.438, 28.5922, 0.2746 ) }
    dend_19 { pt3dadd( 245.907, 801.62, 28.632, 0.2746 ) }
    dend_19 { pt3dadd( 245.133, 800.778, 28.6734, 0.2746 ) }
    dend_19 { pt3dadd( 244.361, 799.935, 28.7235, 0.2746 ) }
    dend_19 { pt3dadd( 243.672, 799.024, 28.7865, 0.2746 ) }
    dend_19 { pt3dadd( 243.063, 798.057, 28.8641, 0.2746 ) }
    dend_19 { pt3dadd( 242.491, 797.073, 29.0984, 0.2746 ) }
    dend_19 { pt3dadd( 241.853, 796.127, 29.3037, 0.2746 ) }
    dend_19 { pt3dadd( 241.215, 795.181, 29.5042, 0.2746 ) }
    dend_19 { pt3dadd( 240.575, 794.236, 29.6999, 0.2748 ) }
    dend_19 { pt3dadd( 239.937, 793.29, 29.8908, 0.275 ) }
    dend_19 { pt3dadd( 239.414, 792.275, 30.0798, 0.2752 ) }
    dend_19 { pt3dadd( 238.947, 791.234, 30.2683, 0.2756 ) }
    dend_19 { pt3dadd( 238.482, 790.192, 30.4766, 0.2768 ) }
    dend_19 { pt3dadd( 238.016, 789.152, 30.7199, 0.2786 ) }
    dend_19 { pt3dadd( 237.569, 788.106, 31.0153, 0.2826 ) }
    dend_19 { pt3dadd( 237.157, 787.05, 31.3964, 0.2882 ) }
    dend_19 { pt3dadd( 236.747, 785.997, 31.8251, 0.305 ) }
    dend_19 { pt3dadd( 236.337, 784.946, 32.2879, 0.3098 ) }
    dend_19 { pt3dadd( 235.945, 783.941, 33.2214, 0.4576 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 406.114, 672.765, 15.5534, 0.401 ) }
    dend_14 { pt3dadd( 405.582, 671.703, 15.2725, 0.3292 ) }
    dend_14 { pt3dadd( 404.935, 670.774, 15.0998, 0.369 ) }
    dend_14 { pt3dadd( 404.212, 669.89, 14.956, 0.386 ) }
    dend_14 { pt3dadd( 403.487, 669.005, 14.8467, 0.3928 ) }
    dend_14 { pt3dadd( 402.717, 668.161, 14.7739, 0.3696 ) }
    dend_14 { pt3dadd( 401.916, 667.344, 14.7357, 0.3298 ) }
    dend_14 { pt3dadd( 401.123, 666.52, 14.7242, 0.3148 ) }
    dend_14 { pt3dadd( 400.366, 665.663, 14.7324, 0.3274 ) }
    dend_14 { pt3dadd( 399.602, 664.813, 14.7549, 0.383 ) }
    dend_14 { pt3dadd( 398.777, 664.022, 14.7874, 0.426 ) }
    dend_14 { pt3dadd( 397.985, 663.2, 14.8278, 0.3918 ) }
    dend_14 { pt3dadd( 397.418, 662.222, 14.8789, 0.3282 ) }
    dend_14 { pt3dadd( 397.144, 661.12, 14.9425, 0.2936 ) }
    dend_14 { pt3dadd( 397.053, 659.982, 15.0133, 0.2916 ) }
    dend_14 { pt3dadd( 397.037, 658.838, 15.0838, 0.307 ) }
    dend_14 { pt3dadd( 397.037, 657.695, 15.1496, 0.3316 ) }
    dend_14 { pt3dadd( 397.037, 656.551, 15.2081, 0.3944 ) }
    dend_14 { pt3dadd( 397.037, 655.407, 15.2585, 0.428 ) }
    dend_14 { pt3dadd( 397.037, 654.263, 15.303, 0.4678 ) }
    dend_14 { pt3dadd( 397.037, 653.119, 15.3464, 0.5318 ) }
    dend_14 { pt3dadd( 397.037, 651.975, 15.3923, 0.501 ) }
    dend_14 { pt3dadd( 397.093, 650.833, 15.4432, 0.4282 ) }
    dend_14 { pt3dadd( 397.174, 649.693, 15.5074, 0.4468 ) }
    dend_14 { pt3dadd( 397.259, 648.552, 15.5857, 0.423 ) }
    dend_14 { pt3dadd( 397.304, 647.41, 15.6678, 0.3508 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_14 { pt3dadd( 397.355, 646.268, 15.7442, 0.2936 ) }
    dend_14 { pt3dadd( 397.781, 645.248, 15.8091, 0.2746 ) }
    dend_14 { pt3dadd( 398.58, 644.444, 15.8555, 0.2746 ) }
    dend_14 { pt3dadd( 399.476, 643.732, 15.8811, 0.2746 ) }
    dend_14 { pt3dadd( 400.098, 642.808, 15.8888, 0.2746 ) }
    dend_14 { pt3dadd( 400.275, 641.698, 15.8822, 0.2746 ) }
    dend_14 { pt3dadd( 400.286, 640.554, 15.8649, 0.2748 ) }
    dend_14 { pt3dadd( 400.286, 639.41, 15.839, 0.2748 ) }
    dend_14 { pt3dadd( 400.129, 638.282, 15.8007, 0.275 ) }
    dend_14 { pt3dadd( 399.609, 637.286, 15.7536, 0.2752 ) }
    dend_14 { pt3dadd( 399.048, 636.293, 15.6975, 0.2758 ) }
    dend_14 { pt3dadd( 398.547, 635.264, 15.6292, 0.2768 ) }
    dend_14 { pt3dadd( 398.244, 634.169, 15.5471, 0.2786 ) }
    dend_14 { pt3dadd( 398.118, 633.035, 15.4484, 0.2822 ) }
    dend_14 { pt3dadd( 398.026, 631.896, 15.307, 0.289 ) }
    dend_14 { pt3dadd( 397.998, 630.756, 15.1432, 0.301 ) }
    dend_14 { pt3dadd( 397.998, 629.613, 14.9814, 0.3254 ) }
    dend_14 { pt3dadd( 398.138, 628.484, 14.8311, 0.3618 ) }
    dend_14 { pt3dadd( 398.217, 627.347, 14.6945, 0.47 ) }
    dend_14 { pt3dadd( 397.847, 626.298, 14.5764, 0.4734 ) }
    dend_14 { pt3dadd( 397.526, 625.21, 14.4746, 0.4688 ) }
    dend_14 { pt3dadd( 397.064, 624.176, 14.3816, 0.431 ) }
    dend_14 { pt3dadd( 396.72, 623.096, 14.2992, 0.4752 ) }
    dend_14 { pt3dadd( 396.478, 621.978, 14.2319, 0.426 ) }
    dend_14 { pt3dadd( 396.401, 620.841, 14.1837, 0.3506 ) }
    dend_14 { pt3dadd( 396.396, 619.697, 14.1562, 0.2998 ) }
    dend_14 { pt3dadd( 396.396, 618.553, 14.1499, 0.2956 ) }
    dend_14 { pt3dadd( 396.395, 617.409, 14.1633, 0.31 ) }
    dend_14 { pt3dadd( 396.368, 616.265, 14.1927, 0.3572 ) }
    dend_14 { pt3dadd( 396.22, 615.133, 14.2363, 0.3458 ) }
    dend_14 { pt3dadd( 396.138, 613.994, 14.292, 0.311 ) }
    dend_14 { pt3dadd( 396.026, 612.857, 14.3604, 0.284 ) }
    dend_14 { pt3dadd( 396.325, 611.783, 14.431, 0.28 ) }
    dend_14 { pt3dadd( 396.612, 610.679, 14.4947, 0.2848 ) }
    dend_14 { pt3dadd( 396.468, 609.564, 14.5442, 0.2938 ) }
    dend_14 { pt3dadd( 395.864, 608.613, 14.5725, 0.3108 ) }
    dend_14 { pt3dadd( 395.265, 607.64, 14.5749, 0.3386 ) }
    dend_14 { pt3dadd( 394.701, 606.645, 14.558, 0.4086 ) }
    dend_14 { pt3dadd( 394.173, 605.63, 14.5376, 0.4492 ) }
    dend_14 { pt3dadd( 393.769, 604.562, 14.5153, 0.4118 ) }
    dend_14 { pt3dadd( 393.465, 603.459, 14.498, 0.3836 ) }
    dend_14 { pt3dadd( 393.179, 602.352, 14.4903, 0.4046 ) }
    dend_14 { pt3dadd( 392.94, 601.234, 14.4923, 0.543 ) }
    dend_14 { pt3dadd( 392.789, 600.1, 14.5, 0.5954 ) }
    dend_14 { pt3dadd( 392.576, 598.977, 14.5097, 0.6308 ) }
    dend_14 { pt3dadd( 392.332, 597.859, 14.5191, 0.5352 ) }
    dend_14 { pt3dadd( 392.209, 596.723, 14.5258, 0.5414 ) }
    dend_14 { pt3dadd( 392.144, 595.581, 14.5283, 0.4612 ) }
    dend_14 { pt3dadd( 392.076, 594.44, 14.527, 0.4156 ) }
    dend_14 { pt3dadd( 391.782, 593.339, 14.5227, 0.4452 ) }
    dend_14 { pt3dadd( 390.929, 592.63, 14.5159, 0.495 ) }
    dend_14 { pt3dadd( 389.826, 592.356, 14.5071, 0.5106 ) }
    dend_14 { pt3dadd( 388.705, 592.126, 14.4966, 0.4544 ) }
    dend_14 { pt3dadd( 387.605, 591.812, 14.4885, 0.5098 ) }
    dend_14 { pt3dadd( 386.483, 591.591, 14.4875, 0.4352 ) }
    dend_14 { pt3dadd( 385.343, 591.522, 14.4972, 0.3936 ) }
    dend_14 { pt3dadd( 384.2, 591.553, 14.5193, 0.3862 ) }
    dend_14 { pt3dadd( 383.178, 591.067, 14.5628, 0.5238 ) }
    dend_14 { pt3dadd( 382.257, 590.389, 14.6262, 0.5188 ) }
    dend_14 { pt3dadd( 381.133, 590.192, 14.7009, 0.437 ) }
    dend_14 { pt3dadd( 379.995, 590.299, 14.7785, 0.3854 ) }
    dend_14 { pt3dadd( 378.852, 590.313, 14.8527, 0.4824 ) }
    dend_14 { pt3dadd( 377.813, 589.836, 14.9214, 0.4154 ) }
    dend_14 { pt3dadd( 376.731, 589.467, 14.9816, 0.3562 ) }
    dend_14 { pt3dadd( 375.588, 589.519, 15.0307, 0.3814 ) }
    dend_14 { pt3dadd( 374.594, 590.084, 15.12, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 406.114, 672.765, 15.5534, 0.401 ) }
    dend_13 { pt3dadd( 407.226, 672.045, 14.882, 0.2778 ) }
    dend_13 { pt3dadd( 408.049, 671.321, 14.6346, 0.2806 ) }
    dend_13 { pt3dadd( 408.242, 670.208, 14.3722, 0.2858 ) }
    dend_13 { pt3dadd( 408.179, 669.072, 14.0876, 0.2956 ) }
    dend_13 { pt3dadd( 408.172, 667.932, 13.8275, 0.3136 ) }
    dend_13 { pt3dadd( 408.078, 666.803, 13.5995, 0.3468 ) }
    dend_13 { pt3dadd( 407.664, 665.753, 13.4058, 0.4162 ) }
    dend_13 { pt3dadd( 406.967, 664.851, 13.2455, 0.511 ) }
    dend_13 { pt3dadd( 406.201, 664.003, 13.107, 0.4874 ) }
    dend_13 { pt3dadd( 405.522, 663.091, 12.9786, 0.5128 ) }
    dend_13 { pt3dadd( 404.984, 662.082, 12.8731, 0.4944 ) }
    dend_13 { pt3dadd( 404.449, 661.072, 12.7868, 0.388 ) }
    dend_13 { pt3dadd( 403.89, 660.074, 12.7209, 0.3092 ) }
    dend_13 { pt3dadd( 403.402, 659.042, 12.667, 0.276 ) }
    dend_13 { pt3dadd( 403.023, 657.964, 12.6181, 0.2772 ) }
    dend_13 { pt3dadd( 402.646, 656.885, 12.5634, 0.2794 ) }
    dend_13 { pt3dadd( 402.354, 655.798, 12.4947, 0.2834 ) }
    dend_13 { pt3dadd( 402.345, 654.654, 12.4214, 0.2912 ) }
    dend_13 { pt3dadd( 402.345, 653.51, 12.3524, 0.3042 ) }
    dend_13 { pt3dadd( 402.345, 652.367, 12.2947, 0.3346 ) }
    dend_13 { pt3dadd( 402.442, 651.236, 12.2566, 0.3602 ) }
    dend_13 { pt3dadd( 402.746, 650.133, 12.2438, 0.323 ) }
    dend_13 { pt3dadd( 403.077, 649.037, 12.2382, 0.2926 ) }
    dend_13 { pt3dadd( 403.456, 647.963, 12.2189, 0.2772 ) }
    dend_13 { pt3dadd( 404.031, 646.98, 12.172, 0.2794 ) }
    dend_13 { pt3dadd( 404.827, 646.179, 12.0862, 0.284 ) }
    dend_13 { pt3dadd( 405.871, 645.938, 11.9494, 0.2936 ) }
    dend_13 { pt3dadd( 407.005, 646.061, 11.8011, 0.308 ) }
    dend_13 { pt3dadd( 408.111, 646.307, 11.6596, 0.3474 ) }
    dend_13 { pt3dadd( 409.078, 646.88, 11.5302, 0.3556 ) }
    dend_13 { pt3dadd( 410.081, 647.369, 11.4205, 0.3218 ) }
    dend_13 { pt3dadd( 411.18, 647.682, 11.3285, 0.2984 ) }
    dend_13 { pt3dadd( 412.298, 647.899, 11.229, 0.2994 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_13 { pt3dadd( 413.439, 647.955, 11.1424, 0.3238 ) }
    dend_13 { pt3dadd( 414.582, 647.99, 11.0634, 0.3582 ) }
    dend_13 { pt3dadd( 415.724, 648.05, 10.9804, 0.466 ) }
    dend_13 { pt3dadd( 416.862, 648.156, 10.8878, 0.4524 ) }
    dend_13 { pt3dadd( 418.002, 648.159, 10.7174, 0.418 ) }
    dend_13 { pt3dadd( 418.881, 647.514, 10.4835, 0.419 ) }
    dend_13 { pt3dadd( 419.475, 646.545, 10.2777, 0.6018 ) }
    dend_13 { pt3dadd( 419.806, 645.457, 10.0518, 0.5456 ) }
    dend_13 { pt3dadd( 420.021, 644.339, 9.7954, 0.5584 ) }
    dend_13 { pt3dadd( 420.152, 643.207, 9.5463, 0.4272 ) }
    dend_13 { pt3dadd( 420.274, 642.075, 9.3043, 0.3682 ) }
    dend_13 { pt3dadd( 420.303, 640.935, 9.0668, 0.3564 ) }
    dend_13 { pt3dadd( 420.564, 639.827, 8.8418, 0.3828 ) }
    dend_13 { pt3dadd( 421.124, 638.845, 8.4, 0.6864 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 14/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 414.242, 677.362, 9.2753, 0.7742 ) }
    dend_40 { pt3dadd( 415.295, 676.702, 9.5271, 0.5372 ) }
    dend_40 { pt3dadd( 416.418, 676.564, 9.7581, 0.4548 ) }
    dend_40 { pt3dadd( 417.439, 676.096, 10.0145, 0.3998 ) }
    dend_40 { pt3dadd( 418.391, 675.486, 10.273, 0.448 ) }
    dend_40 { pt3dadd( 419.464, 675.118, 10.5357, 0.511 ) }
    dend_40 { pt3dadd( 420.51, 674.718, 10.7838, 0.4612 ) }
    dend_40 { pt3dadd( 421.426, 674.041, 11.0256, 0.3732 ) }
    dend_40 { pt3dadd( 422.278, 673.284, 11.2517, 0.3352 ) }
    dend_40 { pt3dadd( 423.095, 672.488, 11.4609, 0.3584 ) }
    dend_40 { pt3dadd( 423.873, 671.653, 11.6474, 0.4372 ) }
    dend_40 { pt3dadd( 424.578, 670.758, 11.8087, 0.5406 ) }
    dend_40 { pt3dadd( 425.116, 669.76, 11.9482, 0.6472 ) }
    dend_40 { pt3dadd( 425.503, 668.685, 12.0713, 0.6674 ) }
    dend_40 { pt3dadd( 425.924, 667.622, 12.1794, 0.6046 ) }
    dend_40 { pt3dadd( 426.482, 666.632, 12.2745, 0.5812 ) }
    dend_40 { pt3dadd( 427.235, 665.781, 12.3584, 0.5192 ) }
    dend_40 { pt3dadd( 428.143, 665.092, 12.4329, 0.4444 ) }
    dend_40 { pt3dadd( 429.169, 664.609, 12.5006, 0.3646 ) }
    dend_40 { pt3dadd( 430.19, 664.126, 12.566, 0.3476 ) }
    dend_40 { pt3dadd( 431.106, 663.443, 12.6332, 0.395 ) }
    dend_40 { pt3dadd( 432.108, 662.946, 12.7073, 0.4572 ) }
    dend_40 { pt3dadd( 433.234, 662.78, 12.7937, 0.4688 ) }
    dend_40 { pt3dadd( 434.364, 662.633, 12.8956, 0.4136 ) }
    dend_40 { pt3dadd( 435.382, 662.171, 13.0121, 0.3412 ) }
    dend_40 { pt3dadd( 436.189, 661.377, 13.1303, 0.3126 ) }
    dend_40 { pt3dadd( 436.883, 660.469, 13.2365, 0.3216 ) }
    dend_40 { pt3dadd( 437.5, 659.509, 13.3349, 0.3816 ) }
    dend_40 { pt3dadd( 437.462, 658.43, 13.3954, 0.3998 ) }
    dend_40 { pt3dadd( 437.334, 657.297, 13.4154, 0.4048 ) }
    dend_40 { pt3dadd( 437.355, 656.155, 13.4045, 0.4896 ) }
    dend_40 { pt3dadd( 437.676, 655.069, 13.3667, 0.5106 ) }
    dend_40 { pt3dadd( 438.402, 654.208, 13.3077, 0.4348 ) }
    dend_40 { pt3dadd( 439.153, 653.346, 13.2313, 0.3674 ) }
    dend_40 { pt3dadd( 439.693, 652.345, 13.1427, 0.3678 ) }
    dend_40 { pt3dadd( 439.913, 651.233, 13.033, 0.4564 ) }
    dend_40 { pt3dadd( 439.865, 650.095, 12.8956, 0.5292 ) }
    dend_40 { pt3dadd( 439.949, 648.959, 12.7421, 0.5942 ) }
    dend_40 { pt3dadd( 440.371, 647.907, 12.5846, 0.5452 ) }
    dend_40 { pt3dadd( 441.074, 647.013, 12.4352, 0.4332 ) }
    dend_40 { pt3dadd( 441.864, 646.188, 12.2987, 0.366 ) }
    dend_40 { pt3dadd( 442.717, 645.428, 12.178, 0.3738 ) }
    dend_40 { pt3dadd( 443.687, 644.828, 12.0591, 0.4702 ) }
    dend_40 { pt3dadd( 444.722, 644.345, 11.9394, 0.5482 ) }
    dend_40 { pt3dadd( 445.777, 643.906, 11.8194, 0.6274 ) }
    dend_40 { pt3dadd( 446.785, 643.368, 11.7087, 0.5974 ) }
    dend_40 { pt3dadd( 447.732, 642.73, 11.6191, 0.5476 ) }
    dend_40 { pt3dadd( 448.745, 642.202, 11.5581, 0.4992 ) }
    dend_40 { pt3dadd( 449.801, 641.762, 11.5315, 0.428 ) }
    dend_40 { pt3dadd( 450.839, 641.281, 11.5398, 0.435 ) }
    dend_40 { pt3dadd( 451.831, 640.712, 11.579, 0.4038 ) }
    dend_40 { pt3dadd( 452.847, 640.188, 11.6469, 0.443 ) }
    dend_40 { pt3dadd( 453.922, 639.803, 11.7406, 0.4196 ) }
    dend_40 { pt3dadd( 455.017, 639.477, 11.8555, 0.4934 ) }
    dend_40 { pt3dadd( 456.13, 639.216, 11.985, 0.4144 ) }
    dend_40 { pt3dadd( 457.256, 639.02, 12.1171, 0.3504 ) }
    dend_40 { pt3dadd( 458.36, 638.729, 12.2418, 0.3136 ) }
    dend_40 { pt3dadd( 459.492, 638.581, 12.3588, 0.3332 ) }
    dend_40 { pt3dadd( 460.6, 638.303, 12.4625, 0.4112 ) }
    dend_40 { pt3dadd( 461.538, 637.65, 12.5384, 0.4074 ) }
    dend_40 { pt3dadd( 462.646, 637.374, 12.6032, 0.4298 ) }
    dend_40 { pt3dadd( 463.789, 637.343, 12.663, 0.5524 ) }
    dend_40 { pt3dadd( 464.931, 637.335, 12.7276, 0.5888 ) }
    dend_40 { pt3dadd( 465.964, 636.848, 12.8228, 0.4388 ) }
    dend_40 { pt3dadd( 466.882, 636.169, 12.9366, 0.3246 ) }
    dend_40 { pt3dadd( 467.906, 635.664, 13.0691, 0.2786 ) }
    dend_40 { pt3dadd( 469.0, 635.334, 13.2123, 0.2822 ) }
    dend_40 { pt3dadd( 470.081, 634.966, 13.3633, 0.2884 ) }
    dend_40 { pt3dadd( 471.109, 634.472, 13.5267, 0.3012 ) }
    dend_40 { pt3dadd( 472.069, 633.858, 13.712, 0.3214 ) }
    dend_40 { pt3dadd( 473.151, 633.497, 13.8998, 0.3748 ) }
    dend_40 { pt3dadd( 474.219, 633.096, 14.0686, 0.3398 ) }
    dend_40 { pt3dadd( 475.196, 632.51, 14.2056, 0.3144 ) }
    dend_40 { pt3dadd( 476.004, 631.705, 14.3, 0.3056 ) }
    dend_40 { pt3dadd( 476.565, 630.71, 14.3457, 0.333 ) }
    dend_40 { pt3dadd( 476.968, 629.64, 14.344, 0.3786 ) }
    dend_40 { pt3dadd( 477.231, 628.529, 14.3041, 0.4876 ) }
    dend_40 { pt3dadd( 477.376, 627.394, 14.2313, 0.4302 ) }
    dend_40 { pt3dadd( 477.501, 626.259, 14.1274, 0.3998 ) }
    dend_40 { pt3dadd( 477.764, 625.149, 14.0014, 0.4324 ) }
    dend_40 { pt3dadd( 477.81, 624.007, 13.8624, 0.4466 ) }
    dend_40 { pt3dadd( 477.832, 622.867, 13.7107, 0.5188 ) }
    dend_40 { pt3dadd( 478.008, 621.745, 13.5484, 0.5812 ) }
    dend_40 { pt3dadd( 478.544, 620.746, 13.387, 0.532 ) }
    dend_40 { pt3dadd( 479.401, 619.992, 13.2427, 0.431 ) }
    dend_40 { pt3dadd( 480.324, 619.318, 13.1231, 0.4006 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( 481.232, 618.623, 13.0329, 0.4732 ) }
    dend_40 { pt3dadd( 482.173, 617.975, 12.9768, 0.5278 ) }
    dend_40 { pt3dadd( 483.188, 617.45, 12.9579, 0.559 ) }
    dend_40 { pt3dadd( 484.273, 617.089, 12.9732, 0.4428 ) }
    dend_40 { pt3dadd( 485.353, 616.72, 13.0184, 0.3844 ) }
    dend_40 { pt3dadd( 486.353, 616.176, 13.1653, 0.3992 ) }
    dend_40 { pt3dadd( 487.09, 615.368, 13.7035, 0.4214 ) }
    dend_40 { pt3dadd( 488.048, 614.77, 14.0235, 0.3808 ) }
    dend_40 { pt3dadd( 489.031, 614.195, 14.2617, 0.4034 ) }
    dend_40 { pt3dadd( 490.017, 613.62, 14.428, 0.3512 ) }
    dend_40 { pt3dadd( 491.148, 613.529, 14.5324, 0.3238 ) }
    dend_40 { pt3dadd( 492.239, 613.869, 14.5599, 0.3138 ) }
    dend_40 { pt3dadd( 493.332, 614.211, 14.56, 0.3724 ) }
    dend_40 { pt3dadd( 494.441, 614.488, 14.56, 0.332 ) }
    dend_40 { pt3dadd( 495.567, 614.694, 14.56, 0.2966 ) }
    dend_40 { pt3dadd( 496.692, 614.9, 14.56, 0.2684 ) }
    dend_40 { pt3dadd( 497.817, 615.105, 14.56, 0.2626 ) }
    dend_40 { pt3dadd( 498.943, 615.311, 14.56, 0.2542 ) }
    dend_40 { pt3dadd( 500.068, 615.517, 14.56, 0.2288 ) }
    dend_40 { pt3dadd( 501.193, 615.722, 14.56, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 414.242, 677.362, 9.2753, 0.7742 ) }
    dend_39 { pt3dadd( 413.684, 676.269, 8.7377, 0.3718 ) }
    dend_39 { pt3dadd( 413.069, 675.305, 8.7962, 0.5934 ) }
    dend_39 { pt3dadd( 412.442, 674.349, 8.8302, 0.5746 ) }
    dend_39 { pt3dadd( 411.723, 673.479, 8.8636, 0.4862 ) }
    dend_39 { pt3dadd( 410.954, 672.648, 8.8913, 0.434 ) }
    dend_39 { pt3dadd( 410.521, 671.609, 8.9115, 0.4234 ) }
    dend_39 { pt3dadd( 410.376, 670.479, 8.9298, 0.4448 ) }
    dend_39 { pt3dadd( 410.353, 669.335, 8.9538, 0.4126 ) }
    dend_39 { pt3dadd( 410.353, 668.191, 8.9895, 0.3616 ) }
    dend_39 { pt3dadd( 410.353, 667.047, 9.0355, 0.3456 ) }
    dend_39 { pt3dadd( 410.353, 665.904, 9.0851, 0.3914 ) }
    dend_39 { pt3dadd( 410.392, 664.761, 9.1317, 0.4514 ) }
    dend_39 { pt3dadd( 410.515, 663.625, 9.168, 0.4456 ) }
    dend_39 { pt3dadd( 410.704, 662.496, 9.1858, 0.431 ) }
    dend_39 { pt3dadd( 410.959, 661.383, 9.178, 0.436 ) }
    dend_39 { pt3dadd( 411.313, 660.296, 9.1408, 0.3956 ) }
    dend_39 { pt3dadd( 411.775, 659.252, 9.0735, 0.33 ) }
    dend_39 { pt3dadd( 412.102, 658.174, 8.9455, 0.2854 ) }
    dend_39 { pt3dadd( 411.726, 657.139, 8.7769, 0.2798 ) }
    dend_39 { pt3dadd( 411.682, 656.032, 8.5632, 0.2848 ) }
    dend_39 { pt3dadd( 411.988, 654.938, 8.3453, 0.2936 ) }
    dend_39 { pt3dadd( 412.22, 653.822, 8.1292, 0.3106 ) }
    dend_39 { pt3dadd( 412.781, 652.842, 7.9173, 0.338 ) }
    dend_39 { pt3dadd( 413.524, 651.977, 7.7319, 0.4156 ) }
    dend_39 { pt3dadd( 414.294, 651.134, 7.5631, 0.4244 ) }
    dend_39 { pt3dadd( 415.027, 650.258, 7.3985, 0.482 ) }
    dend_39 { pt3dadd( 415.688, 649.328, 7.2288, 0.5194 ) }
    dend_39 { pt3dadd( 416.287, 648.355, 7.0592, 0.5396 ) }
    dend_39 { pt3dadd( 416.842, 647.356, 6.897, 0.5626 ) }
    dend_39 { pt3dadd( 417.366, 646.342, 6.747, 0.4464 ) }
    dend_39 { pt3dadd( 417.902, 645.333, 6.6079, 0.3604 ) }
    dend_39 { pt3dadd( 418.532, 644.381, 6.4878, 0.327 ) }
    dend_39 { pt3dadd( 418.931, 643.312, 6.3908, 0.365 ) }
    dend_39 { pt3dadd( 419.003, 642.174, 6.3203, 0.4348 ) }
    dend_39 { pt3dadd( 419.006, 641.031, 6.2724, 0.6104 ) }
    dend_39 { pt3dadd( 419.016, 639.887, 6.2446, 0.7086 ) }
    dend_39 { pt3dadd( 419.062, 638.743, 6.2328, 0.7268 ) }
    dend_39 { pt3dadd( 419.454, 637.674, 6.2314, 0.6032 ) }
    dend_39 { pt3dadd( 420.282, 636.893, 6.2367, 0.6442 ) }
    dend_39 { pt3dadd( 420.993, 636.0, 6.2462, 0.668 ) }
    dend_39 { pt3dadd( 421.363, 634.919, 6.2577, 0.6104 ) }
    dend_39 { pt3dadd( 421.611, 633.802, 6.2686, 0.534 ) }
    dend_39 { pt3dadd( 422.024, 632.736, 6.2793, 0.454 ) }
    dend_39 { pt3dadd( 422.648, 631.777, 6.2913, 0.4574 ) }
    dend_39 { pt3dadd( 423.144, 630.747, 6.2946, 0.6348 ) }
    dend_39 { pt3dadd( 423.535, 629.672, 6.2754, 0.6024 ) }
    dend_39 { pt3dadd( 424.056, 628.654, 6.2233, 0.507 ) }
    dend_39 { pt3dadd( 424.639, 627.67, 6.1318, 0.4682 ) }
    dend_39 { pt3dadd( 425.385, 626.807, 5.9784, 0.6268 ) }
    dend_39 { pt3dadd( 426.288, 626.109, 5.7642, 0.7224 ) }
    dend_39 { pt3dadd( 427.267, 625.527, 5.5173, 0.7426 ) }
    dend_39 { pt3dadd( 428.286, 625.015, 5.2736, 0.6136 ) }
    dend_39 { pt3dadd( 429.175, 624.301, 5.0581, 0.7282 ) }
    dend_39 { pt3dadd( 430.034, 623.55, 4.8858, 0.5836 ) }
    dend_39 { pt3dadd( 430.893, 622.799, 4.6581, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 335.619, 640.692, 11.688, 0.6454 ) }
    dend_36 { pt3dadd( 336.148, 639.986, 11.9669, 0.5328 ) }
    dend_36 { pt3dadd( 336.839, 639.082, 12.2243, 0.4534 ) }
    dend_36 { pt3dadd( 337.561, 638.196, 12.3721, 0.516 ) }
    dend_36 { pt3dadd( 338.258, 637.292, 12.4798, 0.6134 ) }
    dend_36 { pt3dadd( 338.798, 636.292, 12.5552, 0.586 ) }
    dend_36 { pt3dadd( 339.22, 635.229, 12.6092, 0.5242 ) }
    dend_36 { pt3dadd( 339.651, 634.169, 12.6515, 0.5326 ) }
    dend_36 { pt3dadd( 340.385, 633.363, 12.6966, 0.4964 ) }
    dend_36 { pt3dadd( 341.437, 632.951, 12.7486, 0.4168 ) }
    dend_36 { pt3dadd( 342.515, 632.583, 12.7996, 0.387 ) }
    dend_36 { pt3dadd( 343.509, 632.028, 12.8514, 0.451 ) }
    dend_36 { pt3dadd( 344.414, 631.33, 12.9111, 0.5528 ) }
    dend_36 { pt3dadd( 345.145, 630.466, 12.9847, 0.6498 ) }
    dend_36 { pt3dadd( 345.741, 629.491, 13.078, 0.7134 ) }
    dend_36 { pt3dadd( 346.161, 628.437, 13.2006, 0.6796 ) }
    dend_36 { pt3dadd( 346.56, 627.371, 13.3683, 0.6938 ) }
    dend_36 { pt3dadd( 347.284, 626.531, 13.5815, 0.7964 ) }
    dend_36 { pt3dadd( 348.244, 625.924, 13.8307, 0.8532 ) }
    dend_36 { pt3dadd( 348.99, 625.11, 14.1016, 0.7176 ) }
    dend_36 { pt3dadd( 349.475, 624.085, 14.3835, 0.5956 ) }
    dend_36 { pt3dadd( 349.745, 622.985, 14.6597, 0.5768 ) }
    dend_36 { pt3dadd( 349.906, 621.858, 14.9196, 0.6424 ) }
    dend_36 { pt3dadd( 349.983, 620.722, 15.1656, 0.6678 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_36 { pt3dadd( 350.042, 619.583, 15.4039, 0.6682 ) }
    dend_36 { pt3dadd( 350.24, 618.465, 15.6365, 0.723 ) }
    dend_36 { pt3dadd( 350.605, 617.387, 15.8615, 0.7916 ) }
    dend_36 { pt3dadd( 351.041, 616.333, 16.0876, 0.8586 ) }
    dend_36 { pt3dadd( 351.565, 615.323, 16.3169, 0.8178 ) }
    dend_36 { pt3dadd( 352.355, 614.532, 16.5565, 0.7844 ) }
    dend_36 { pt3dadd( 353.337, 613.961, 16.7964, 0.803 ) }
    dend_36 { pt3dadd( 354.385, 613.516, 17.041, 0.761 ) }
    dend_36 { pt3dadd( 355.453, 613.121, 17.3105, 0.6014 ) }
    dend_36 { pt3dadd( 356.566, 612.95, 17.6115, 0.4668 ) }
    dend_36 { pt3dadd( 357.694, 613.032, 17.95, 0.4942 ) }
    dend_36 { pt3dadd( 358.57, 613.652, 18.3486, 0.5024 ) }
    dend_36 { pt3dadd( 359.296, 614.513, 18.8228, 0.4942 ) }
    dend_36 { pt3dadd( 360.296, 614.919, 19.3424, 0.628 ) }
    dend_36 { pt3dadd( 361.356, 614.645, 19.8629, 0.6428 ) }
    dend_36 { pt3dadd( 362.434, 614.804, 20.466, 0.5984 ) }
    dend_36 { pt3dadd( 363.448, 615.276, 20.9616, 0.5248 ) }
    dend_36 { pt3dadd( 364.514, 614.906, 21.4078, 0.6304 ) }
    dend_36 { pt3dadd( 365.596, 614.568, 21.7799, 0.792 ) }
    dend_36 { pt3dadd( 366.695, 614.28, 22.1045, 0.9502 ) }
    dend_36 { pt3dadd( 367.793, 613.979, 22.4, 0.9904 ) }
    dend_36 { pt3dadd( 368.886, 613.666, 22.6875, 0.9648 ) }
    dend_36 { pt3dadd( 369.96, 613.29, 22.9843, 0.7028 ) }
    dend_36 { pt3dadd( 371.021, 612.88, 23.294, 0.485 ) }
    dend_36 { pt3dadd( 372.084, 612.476, 23.6044, 0.4052 ) }
    dend_36 { pt3dadd( 373.148, 612.073, 23.896, 0.482 ) }
    dend_36 { pt3dadd( 374.199, 611.633, 24.1402, 0.566 ) }
    dend_36 { pt3dadd( 375.248, 611.182, 24.3152, 0.4926 ) }
    dend_36 { pt3dadd( 376.278, 610.712, 24.4151, 0.4672 ) }
    dend_36 { pt3dadd( 376.927, 609.783, 24.4314, 0.5706 ) }
    dend_36 { pt3dadd( 377.192, 608.675, 24.3644, 0.5894 ) }
    dend_36 { pt3dadd( 377.721, 607.674, 24.2186, 0.5972 ) }
    dend_36 { pt3dadd( 377.837, 606.542, 23.9649, 0.466 ) }
    dend_36 { pt3dadd( 378.207, 605.528, 23.6683, 0.4378 ) }
    dend_36 { pt3dadd( 379.072, 604.796, 23.4035, 0.4984 ) }
    dend_36 { pt3dadd( 379.693, 603.86, 23.1718, 0.5688 ) }
    dend_36 { pt3dadd( 380.156, 602.828, 22.9728, 0.5944 ) }
    dend_36 { pt3dadd( 380.872, 601.945, 22.7949, 0.5152 ) }
    dend_36 { pt3dadd( 381.731, 601.197, 22.6421, 0.4438 ) }
    dend_36 { pt3dadd( 382.643, 600.507, 22.5132, 0.4272 ) }
    dend_36 { pt3dadd( 383.518, 599.773, 22.4214, 0.4238 ) }
    dend_36 { pt3dadd( 384.384, 599.029, 22.3852, 0.4522 ) }
    dend_36 { pt3dadd( 385.32, 598.372, 22.4176, 0.4596 ) }
    dend_36 { pt3dadd( 386.33, 597.862, 22.5279, 0.5728 ) }
    dend_36 { pt3dadd( 387.436, 597.59, 22.7243, 0.6746 ) }
    dend_36 { pt3dadd( 388.562, 597.419, 22.9978, 0.5804 ) }
    dend_36 { pt3dadd( 389.67, 597.207, 23.3423, 0.5658 ) }
    dend_36 { pt3dadd( 390.67, 596.715, 23.7672, 0.6784 ) }
    dend_36 { pt3dadd( 391.534, 595.995, 24.2693, 0.865 ) }
    dend_36 { pt3dadd( 392.425, 595.331, 24.866, 1.0056 ) }
    dend_36 { pt3dadd( 393.345, 594.716, 25.5525, 1.0128 ) }
    dend_36 { pt3dadd( 394.037, 593.887, 26.2854, 0.8232 ) }
    dend_36 { pt3dadd( 394.342, 592.845, 27.0157, 0.659 ) }
    dend_36 { pt3dadd( 394.358, 591.737, 27.6693, 0.6194 ) }
    dend_36 { pt3dadd( 394.14, 590.646, 28.2254, 0.5338 ) }
    dend_36 { pt3dadd( 393.695, 589.614, 28.6846, 0.4202 ) }
    dend_36 { pt3dadd( 393.318, 588.558, 29.0696, 0.3714 ) }
    dend_36 { pt3dadd( 393.455, 587.483, 29.4129, 0.4094 ) }
    dend_36 { pt3dadd( 394.065, 586.538, 29.7413, 0.5452 ) }
    dend_36 { pt3dadd( 394.846, 585.718, 30.0902, 0.6888 ) }
    dend_36 { pt3dadd( 395.656, 584.925, 30.4766, 0.6628 ) }
    dend_36 { pt3dadd( 396.389, 584.067, 30.8809, 0.5036 ) }
    dend_36 { pt3dadd( 396.889, 583.064, 31.2696, 0.3766 ) }
    dend_36 { pt3dadd( 397.68, 582.362, 31.6022, 0.3652 ) }
    dend_36 { pt3dadd( 398.563, 581.667, 31.8416, 0.3552 ) }
    dend_36 { pt3dadd( 399.106, 580.688, 31.9822, 0.3254 ) }
    dend_36 { pt3dadd( 399.454, 579.598, 32.0443, 0.3094 ) }
    dend_36 { pt3dadd( 399.75, 578.495, 32.0569, 0.3194 ) }
    dend_36 { pt3dadd( 400.137, 577.42, 32.0407, 0.3724 ) }
    dend_36 { pt3dadd( 400.625, 576.387, 32.0076, 0.3846 ) }
    dend_36 { pt3dadd( 401.156, 575.374, 31.9659, 0.378 ) }
    dend_36 { pt3dadd( 401.69, 574.362, 31.9214, 0.418 ) }
    dend_36 { pt3dadd( 402.171, 573.325, 31.8951, 0.468 ) }
    dend_36 { pt3dadd( 402.627, 572.276, 31.9096, 0.4564 ) }
    dend_36 { pt3dadd( 403.12, 571.244, 31.9799, 0.4838 ) }
    dend_36 { pt3dadd( 403.638, 570.226, 32.1154, 0.4406 ) }
    dend_36 { pt3dadd( 404.21, 569.24, 32.319, 0.3698 ) }
    dend_36 { pt3dadd( 404.917, 568.352, 32.5844, 0.3328 ) }
    dend_36 { pt3dadd( 405.827, 567.696, 32.9272, 0.3446 ) }
    dend_36 { pt3dadd( 406.895, 567.369, 33.3852, 0.4386 ) }
    dend_36 { pt3dadd( 408.001, 567.391, 33.976, 0.416 ) }
    dend_36 { pt3dadd( 409.052, 567.726, 34.6578, 0.346 ) }
    dend_36 { pt3dadd( 410.033, 568.228, 35.3931, 0.2954 ) }
    dend_36 { pt3dadd( 411.095, 568.478, 36.1444, 0.2938 ) }
    dend_36 { pt3dadd( 412.199, 568.518, 36.8584, 0.3108 ) }
    dend_36 { pt3dadd( 413.308, 568.478, 37.5449, 0.3374 ) }
    dend_36 { pt3dadd( 414.054, 567.774, 38.3547, 0.422 ) }
    dend_36 { pt3dadd( 414.161, 566.693, 39.1297, 0.4276 ) }
    dend_36 { pt3dadd( 414.512, 565.646, 39.8471, 0.5192 ) }
    dend_36 { pt3dadd( 415.067, 564.686, 40.5241, 0.4484 ) }
    dend_36 { pt3dadd( 415.827, 563.878, 41.1852, 0.4108 ) }
    dend_36 { pt3dadd( 416.763, 563.272, 41.8141, 0.4788 ) }
    dend_36 { pt3dadd( 417.767, 562.782, 42.3965, 0.4126 ) }
    dend_36 { pt3dadd( 418.845, 562.473, 42.9481, 0.3576 ) }
    dend_36 { pt3dadd( 419.927, 562.169, 43.4759, 0.3346 ) }
    dend_36 { pt3dadd( 421.054, 562.112, 43.9379, 0.3752 ) }
    dend_36 { pt3dadd( 422.188, 562.112, 44.298, 0.5126 ) }
    dend_36 { pt3dadd( 423.325, 562.04, 44.5603, 0.4634 ) }
    dend_36 { pt3dadd( 424.446, 561.828, 44.7423, 0.481 ) }
    dend_36 { pt3dadd( 425.589, 561.82, 44.8641, 0.4364 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_36 { pt3dadd( 426.701, 562.085, 44.9585, 0.505 ) }
    dend_36 { pt3dadd( 427.775, 562.476, 45.0582, 0.5774 ) }
    dend_36 { pt3dadd( 428.881, 562.766, 45.1646, 0.5292 ) }
    dend_36 { pt3dadd( 429.987, 563.053, 45.2696, 0.407 ) }
    dend_36 { pt3dadd( 430.992, 563.6, 45.3642, 0.3388 ) }
    dend_36 { pt3dadd( 431.984, 564.169, 45.4409, 0.356 ) }
    dend_36 { pt3dadd( 433.117, 564.319, 45.4941, 0.3814 ) }
    dend_36 { pt3dadd( 434.258, 564.4, 45.5468, 0.6864 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 8/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 335.619, 640.692, 11.688, 0.6454 ) }
    dend_35 { pt3dadd( 335.933, 639.898, 12.2733, 0.6556 ) }
    dend_35 { pt3dadd( 336.098, 638.782, 12.0192, 0.4992 ) }
    dend_35 { pt3dadd( 335.925, 637.653, 11.9014, 0.4576 ) }
    dend_35 { pt3dadd( 335.782, 636.521, 11.784, 0.4178 ) }
    dend_35 { pt3dadd( 335.771, 635.378, 11.6806, 0.3478 ) }
    dend_35 { pt3dadd( 335.749, 634.235, 11.5986, 0.2962 ) }
    dend_35 { pt3dadd( 335.61, 633.101, 11.5327, 0.2778 ) }
    dend_35 { pt3dadd( 335.303, 632.003, 11.4687, 0.2804 ) }
    dend_35 { pt3dadd( 334.803, 630.978, 11.3921, 0.2856 ) }
    dend_35 { pt3dadd( 334.175, 630.023, 11.3008, 0.295 ) }
    dend_35 { pt3dadd( 333.63, 629.02, 11.1912, 0.3126 ) }
    dend_35 { pt3dadd( 333.196, 627.963, 11.0647, 0.345 ) }
    dend_35 { pt3dadd( 332.727, 626.922, 10.9346, 0.4066 ) }
    dend_35 { pt3dadd( 332.251, 625.885, 10.8162, 0.5132 ) }
    dend_35 { pt3dadd( 331.912, 624.794, 10.7098, 0.5842 ) }
    dend_35 { pt3dadd( 331.714, 623.67, 10.6093, 0.5336 ) }
    dend_35 { pt3dadd( 331.649, 622.529, 10.5056, 0.4528 ) }
    dend_35 { pt3dadd( 331.649, 621.386, 10.39, 0.463 ) }
    dend_35 { pt3dadd( 331.627, 620.245, 10.2489, 0.5678 ) }
    dend_35 { pt3dadd( 331.403, 619.153, 10.0712, 0.5802 ) }
    dend_35 { pt3dadd( 330.77, 618.205, 9.8437, 0.565 ) }
    dend_35 { pt3dadd( 330.228, 617.213, 9.6077, 0.548 ) }
    dend_35 { pt3dadd( 329.92, 616.117, 9.4043, 0.541 ) }
    dend_35 { pt3dadd( 329.708, 614.995, 9.2469, 0.5638 ) }
    dend_35 { pt3dadd( 329.491, 613.873, 9.1413, 0.666 ) }
    dend_35 { pt3dadd( 329.282, 612.748, 9.0861, 0.707 ) }
    dend_35 { pt3dadd( 328.892, 611.695, 9.1173, 0.648 ) }
    dend_35 { pt3dadd( 328.228, 610.764, 9.2552, 0.4756 ) }
    dend_35 { pt3dadd( 327.706, 609.749, 9.3565, 0.448 ) }
    dend_35 { pt3dadd( 327.062, 608.804, 9.4356, 0.6162 ) }
    dend_35 { pt3dadd( 326.241, 608.007, 9.4923, 0.5688 ) }
    dend_35 { pt3dadd( 325.468, 607.164, 9.528, 0.4442 ) }
    dend_35 { pt3dadd( 324.53, 606.511, 9.5454, 0.3538 ) }
    dend_35 { pt3dadd( 323.534, 605.949, 9.5553, 0.3986 ) }
    dend_35 { pt3dadd( 322.637, 605.239, 9.5678, 0.3816 ) }
    dend_35 { pt3dadd( 321.791, 604.468, 9.5894, 0.3844 ) }
    dend_35 { pt3dadd( 320.97, 603.672, 9.6202, 0.4506 ) }
    dend_35 { pt3dadd( 320.148, 602.875, 9.6566, 0.5058 ) }
    dend_35 { pt3dadd( 319.327, 602.079, 9.6958, 0.4794 ) }
    dend_35 { pt3dadd( 318.509, 601.281, 9.7353, 0.5986 ) }
    dend_35 { pt3dadd( 318.066, 600.226, 9.7639, 0.4576 ) }
    dend_35 { pt3dadd( 317.541, 599.209, 9.7826, 0.356 ) }
    dend_35 { pt3dadd( 316.996, 598.203, 9.7936, 0.305 ) }
    dend_35 { pt3dadd( 316.451, 597.198, 9.8, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 53/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 268.841, 844.49, 9.2364, 0.7982 ) }
    dend_24 { pt3dadd( 269.507, 845.145, 10.5598, 0.695 ) }
    dend_24 { pt3dadd( 270.256, 845.954, 11.2311, 0.6706 ) }
    dend_24 { pt3dadd( 271.043, 846.756, 11.7597, 0.665 ) }
    dend_24 { pt3dadd( 271.887, 847.5, 12.2561, 0.6072 ) }
    dend_24 { pt3dadd( 272.98, 847.661, 12.7459, 0.523 ) }
    dend_24 { pt3dadd( 274.108, 847.687, 13.1997, 0.4222 ) }
    dend_24 { pt3dadd( 275.135, 848.152, 13.6119, 0.4336 ) }
    dend_24 { pt3dadd( 276.168, 848.619, 13.9741, 0.3962 ) }
    dend_24 { pt3dadd( 277.202, 849.094, 14.3022, 0.4356 ) }
    dend_24 { pt3dadd( 278.171, 849.688, 14.6086, 0.4088 ) }
    dend_24 { pt3dadd( 279.064, 850.391, 14.8998, 0.4274 ) }
    dend_24 { pt3dadd( 279.954, 851.101, 15.1883, 0.548 ) }
    dend_24 { pt3dadd( 280.961, 851.628, 15.4882, 0.593 ) }
    dend_24 { pt3dadd( 282.058, 851.927, 15.7908, 0.452 ) }
    dend_24 { pt3dadd( 283.104, 852.37, 16.0859, 0.3362 ) }
    dend_24 { pt3dadd( 284.122, 852.883, 16.3533, 0.2936 ) }
    dend_24 { pt3dadd( 285.214, 853.208, 16.5936, 0.3104 ) }
    dend_24 { pt3dadd( 286.323, 853.479, 16.7989, 0.336 ) }
    dend_24 { pt3dadd( 287.414, 853.811, 16.9961, 0.4124 ) }
    dend_24 { pt3dadd( 288.516, 854.109, 17.1734, 0.4152 ) }
    dend_24 { pt3dadd( 289.546, 854.602, 17.329, 0.4076 ) }
    dend_24 { pt3dadd( 290.566, 855.106, 17.64, 0.6864 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 76/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 268.841, 844.49, 9.2364, 0.7982 ) }
    dend_21 { pt3dadd( 268.052, 845.711, 9.1667, 0.6036 ) }
    dend_21 { pt3dadd( 267.594, 846.759, 9.1102, 0.5786 ) }
    dend_21 { pt3dadd( 267.527, 847.9, 9.0861, 0.4446 ) }
    dend_21 { pt3dadd( 267.78, 849.015, 9.0838, 0.4428 ) }
    dend_21 { pt3dadd( 268.274, 850.046, 9.0982, 0.3684 ) }
    dend_21 { pt3dadd( 268.428, 851.18, 9.1134, 0.3652 ) }
    dend_21 { pt3dadd( 268.382, 852.322, 9.1454, 0.3846 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 268.382, 852.322, 9.1454, 0.3846 ) }
    dend_23 { pt3dadd( 269.137, 852.248, 9.1858, 0.528 ) }
    dend_23 { pt3dadd( 270.279, 852.174, 9.2377, 0.4972 ) }
    dend_23 { pt3dadd( 271.417, 852.066, 9.2987, 0.5388 ) }
    dend_23 { pt3dadd( 272.558, 851.976, 9.3633, 0.564 ) }
    dend_23 { pt3dadd( 273.702, 851.984, 9.4256, 0.6428 ) }
    dend_23 { pt3dadd( 274.846, 851.983, 9.4775, 0.6302 ) }
    dend_23 { pt3dadd( 275.989, 851.962, 9.5179, 0.4724 ) }
    dend_23 { pt3dadd( 277.133, 851.94, 9.5483, 0.3708 ) }
    dend_23 { pt3dadd( 278.273, 852.024, 9.5727, 0.3822 ) }
    dend_23 { pt3dadd( 279.399, 852.229, 9.5954, 0.3508 ) }
    dend_23 { pt3dadd( 280.496, 852.551, 9.6198, 0.3308 ) }
    dend_23 { pt3dadd( 281.582, 852.914, 9.6483, 0.3334 ) }
    dend_23 { pt3dadd( 282.7, 853.154, 9.6844, 0.373 ) }
    dend_23 { pt3dadd( 283.826, 853.353, 9.7298, 0.5074 ) }
    dend_23 { pt3dadd( 284.969, 853.38, 9.7845, 0.4618 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_23 { pt3dadd( 286.109, 853.279, 9.8446, 0.4428 ) }
    dend_23 { pt3dadd( 287.248, 853.172, 9.9087, 0.5384 ) }
    dend_23 { pt3dadd( 288.377, 852.994, 9.9776, 0.537 ) }
    dend_23 { pt3dadd( 289.496, 852.759, 10.0529, 0.4936 ) }
    dend_23 { pt3dadd( 290.615, 852.519, 10.1366, 0.3784 ) }
    dend_23 { pt3dadd( 291.686, 852.12, 10.2281, 0.3342 ) }
    dend_23 { pt3dadd( 292.746, 851.692, 10.3289, 0.34 ) }
    dend_23 { pt3dadd( 293.783, 851.211, 10.4479, 0.3858 ) }
    dend_23 { pt3dadd( 294.819, 850.73, 10.5802, 0.5278 ) }
    dend_23 { pt3dadd( 295.856, 850.249, 10.7208, 0.5168 ) }
    dend_23 { pt3dadd( 296.956, 849.943, 10.8749, 0.4578 ) }
    dend_23 { pt3dadd( 298.045, 849.6, 11.0419, 0.3048 ) }
    dend_23 { pt3dadd( 298.973, 848.954, 11.48, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 268.382, 852.322, 9.1454, 0.3846 ) }
    dend_22 { pt3dadd( 267.645, 853.114, 9.2601, 0.6442 ) }
    dend_22 { pt3dadd( 266.748, 853.822, 9.3496, 0.621 ) }
    dend_22 { pt3dadd( 265.883, 854.569, 9.4501, 0.6926 ) }
    dend_22 { pt3dadd( 265.18, 855.469, 9.5522, 0.7168 ) }
    dend_22 { pt3dadd( 264.503, 856.39, 9.6368, 0.6974 ) }
    dend_22 { pt3dadd( 263.75, 857.252, 9.6959, 0.7106 ) }
    dend_22 { pt3dadd( 263.12, 858.206, 9.7389, 0.6992 ) }
    dend_22 { pt3dadd( 262.551, 859.198, 9.7796, 0.6502 ) }
    dend_22 { pt3dadd( 262.118, 860.256, 9.8065, 0.4626 ) }
    dend_22 { pt3dadd( 261.985, 861.391, 9.8122, 0.351 ) }
    dend_22 { pt3dadd( 261.783, 862.516, 9.8153, 0.3062 ) }
    dend_22 { pt3dadd( 261.367, 863.582, 9.8479, 0.3794 ) }
    dend_22 { pt3dadd( 261.104, 864.682, 10.248, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_43, dend_30, dend_29, dend_16, dend_9, dend_4, dend_3, dend_0, dend_45, dend_44, dend_42, dend_31, dend_26, dend_17, dend_11, dend_10, dend_8, dend_5, dend_2, dend_1, dend_37, dend_32, dend_28, dend_27, dend_25, dend_18, dend_15, dend_12, dend_7, dend_6, dend_41, dend_38, dend_34, dend_33, dend_20, dend_19, dend_14, dend_13, dend_40, dend_39, dend_36, dend_35, dend_24, dend_21, dend_23, dend_22]}
    dend = new SectionList()
    dend_43 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_16 dend.append()
    dend_9 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_42 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_17 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_37 dend.append()
    dend_32 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_25 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_8457, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_8457 = new SectionList()
    soma_0 OneSecGrp_SectionRef_8457.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 0.87629277  // units: uF/cm2
    forsec axon cm = 0.87629277  // units: uF/cm2
    forsec dend cm = 0.87629277  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 74.33427  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.725E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.030994745  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 3.492675E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.036404833  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 2.8165514  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.02011411  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 4.7278384E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 7.118128E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.1116222E-5  // units: S cm-2
        e_pas_nml2 = -87.30191  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.6532565E-4  // units: S cm-2
        e_pas_nml2 = -87.30191  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.1066384E-7  // units: S cm-2
        e_pas_nml2 = -87.30191  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.6280693E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.00935437  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_489931963
    forsec soma {
        insert CaDynamics_489931963
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 9
    dend_42 nseg = 3
    dend_11 nseg = 5
    dend_10 nseg = 3
    dend_1 nseg = 3
    dend_28 nseg = 3
    dend_25 nseg = 5
    dend_15 nseg = 3
    dend_6 nseg = 7
    dend_41 nseg = 3
    dend_38 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_14 nseg = 5
    dend_13 nseg = 3
    dend_40 nseg = 7
    dend_39 nseg = 3
    dend_36 nseg = 7
    dend_35 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_489931963


