// Cell: dNAC222_L4_LBC_a6205ed0df_0_0
/*
{
  "id" : "dNAC222_L4_LBC_a6205ed0df_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0460118, 9.4193, 0.0420007, 3.85614", "-0.0586314, 8.45043, 0.0375696, 7.03826", "-0.0712511, 7.48157, 0.0331385, 8.2185", "-0.0838708, 6.51271, 0.0287073, 9.16918", "-0.0964904, 5.54385, 0.0242762, 10.0966", "-0.10911, 4.57499, 0.0198451, 11.2325", "-0.12173, 3.60613, 0.0154139, 12.296", "-0.134349, 2.63727, 0.0109828, 12.2546", "-0.146969, 1.66841, 0.00655169, 11.6979", "-0.159589, 0.69955, 0.00212056, 10.9264", "-0.172208, -0.26931, -0.00231057, 9.80041", "-0.184828, -1.23817, -0.0067417, 8.57664", "-0.197448, -2.20703, -0.0111728, 7.89172", "-0.210067, -3.17589, -0.015604, 7.62756", "-0.222687, -4.14475, -0.0200351, 7.36341", "-0.235307, -5.11361, -0.0244662, 7.04275", "-0.247926, -6.08247, -0.0288973, 6.5615", "-0.260546, -7.05133, -0.0333285, 5.89923", "-0.273166, -8.02019, -0.0377596, 4.92342", "-0.285785, -8.98905, -0.0421907, 3.8632", "-0.298405, -9.95792, -0.0466218, 2.78029" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.117947, 7.40719, 10.3203, 0.55", "0.240213, 10.0282, 11.0465, 0.55", "0.942661, 12.8777, 12.4796, 0.55", "1.62696, 15.0498, 13.8512, 0.55", "2.24186, 17.0016, 15.0837, 0.55", "3.19599, 20.0302, 16.9962, 0.55", "4.41455, 23.8981, 19.4387, 0.55", "5.68553, 27.0085, 21.9214, 0.55", "6.6966, 28.8285, 23.7465, 2.49", "9.91664, 39.2586, 28.6299, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.57205, 2.64019, -8.5197, 0.55", "4.63793, 5.7021, -8.75993, 0.55", "7.51938, 8.28964, -9.03062, 0.55", "11.5524, 11.4303, -9.48887, 0.55", "13.9491, 13.139, -9.80092, 0.28", "15.6986, 14.2647, -10.0441, 0.55", "18.7752, 16.0755, -10.4903, 0.28", "20.2977, 16.7326, -10.6872, 0.55", "22.9224, 17.5837, -10.9859, 0.28", "23.4159, 17.7072, -11.0307, 0.83", "25.323, 18.1801, -11.0933, 0.28", "27.3127, 18.7595, -11.0289, 0.28", "30.0614, 19.8548, -10.7215, 0.55", "31.9405, 20.8616, -10.4287, 0.28", "32.7116, 21.4693, -10.2332, 0.55", "34.5127, 23.2935, -9.66617, 0.28", "35.4236, 24.4265, -9.36228, 0.55", "37.04, 26.7716, -8.82742, 0.28", "37.7633, 27.9417, -8.60025, 0.55", "39.7953, 31.5727, -7.86811, 0.28", "40.6597, 33.2946, -7.5474, 0.55", "41.6528, 35.5548, -7.17093, 0.28", "42.2541, 36.922, -6.93183, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.89205, 6.52519, -1.4497, 0.55", "6.55588, 8.23595, -1.82632, 0.55", "8.96983, 9.79237, -2.27095, 0.55", "11.1902, 11.0849, -2.71621, 0.83", "14.3504, 12.7791, -3.30006, 0.83", "16.6508, 13.8858, -3.70247, 1.11", "19.3084, 15.0022, -4.10604, 0.55", "21.9812, 15.8685, -4.46671, 0.55", "24.0712, 16.4405, -4.69473, 0.83", "26.4278, 16.9666, -4.88393, 0.55", "29.189, 17.4298, -4.99502, 0.83", "31.4122, 17.7549, -4.98472, 0.55", "32.1784, 17.8533, -4.98263, 0.55", "35.2326, 18.3059, -5.06749, 0.83", "38.2144, 19.0021, -5.33132, 0.83", "40.3272, 19.6472, -5.66046, 0.83", "42.6682, 20.589, -6.13847, 0.83", "44.3128, 21.4027, -6.55173, 0.83", "46.689, 22.8072, -7.24609, 0.83", "48.8102, 24.3336, -7.96653, 0.55", "51.0133, 26.2601, -8.7765, 0.55", "52.1874, 27.3465, -9.22826, 0.55", "54.1913, 29.3035, -10.0557, 0.55", "56.0115, 31.0927, -10.8406, 0.83", "57.8306, 32.8027, -11.656, 0.55", "58.9679, 33.7914, -12.1705, 0.55", "61.0947, 35.5598, -13.1834, 0.55", "63.3958, 37.2205, -14.216, 0.83", "65.8166, 38.8083, -15.1919, 0.55", "66.8496, 39.4461, -15.5533, 0.55", "67.887, 40.0901, -15.8786, 0.55", "68.6986, 40.6309, -16.1136, 0.55", "72.1227, 43.116, -16.9916, 0.55", "75.332, 45.534, -17.6989, 0.28", "76.4131, 46.3977, -17.9351, 0.55", "78.582, 48.2219, -18.4397, 0.28", "79.6484, 49.1349, -18.6967, 0.83", "81.3154, 50.5394, -19.0997, 0.28", "82.1938, 51.2823, -19.3104, 0.83", "83.6502, 52.3906, -19.6494, 0.28", "84.9815, 53.3023, -19.9431, 0.55", "87.1094, 54.6457, -20.3658, 0.28", "89.6784, 56.129, -20.8535, 0.55", "90.6789, 56.695, -21.0336, 0.55", "92.7897, 57.891, -21.402, 0.28", "94.0108, 58.6177, -21.6131, 0.83", "95.5915, 59.5998, -21.9028, 0.28", "96.063, 59.9085, -21.9894, 0.55", "97.7527, 61.0103, -22.3221, 0.28", "98.589, 61.5684, -22.4898, 0.83", "100.572, 62.9249, -23.0127, 0.28", "101.704, 63.7444, -23.353, 0.55", "103.058, 64.8248, -23.768, 0.55", "105.347, 66.8218, -24.4793, 0.28", "106.261, 67.6531, -24.7653, 0.83", "109.096, 70.3557, -25.6454, 0.28", "111.015, 72.3099, -26.2436, 0.83", "114.085, 75.6347, -27.1906, 0.28", "115.42, 77.1971, -27.5945, 0.55", "116.534, 78.5821, -27.9035, 0.28", "117.407, 79.6901, -28.1258, 0.55", "118.19, 80.6824, -28.2639, 0.28", "119.398, 82.04, -28.5005, 0.55", "120.429, 83.0486, -28.7137, 0.28", "121.086, 83.6576, -28.8409, 0.55", "122.931, 85.3288, -29.1973, 0.28", "124.24, 86.5324, -29.4458, 0.83", "127.115, 89.3194, -30.0059, 0.28", "127.934, 90.1621, -30.1795, 0.55", "129.313, 91.6586, -30.4772, 0.55", "131.044, 93.7064, -30.8016, 0.28", "132.085, 95.0647, -30.9643, 0.83", "133.54, 97.154, -31.1194, 0.28", "134.328, 98.4158, -31.1169, 0.83", "134.993, 99.5261, -31.0685, 0.83", "136.096, 101.336, -30.8853, 0.28", "136.43, 101.885, -30.8008, 0.55", "138.066, 104.466, -30.3788, 0.28", "138.421, 105.038, -30.281, 0.28", "138.743, 105.591, -30.2313, 0.83", "139.525, 106.982, -30.2505, 0.28", "140.075, 107.963, -30.3469, 0.55", "141.088, 109.671, -30.5701, 0.28", "141.521, 110.372, -30.66, 0.55", "142.813, 112.302, -30.8521, 0.28", "144.705, 114.915, -31.0393, 0.28", "145.319, 115.732, -31.0737, 0.83", "146.731, 117.543, -31.2257, 0.83", "149.044, 120.412, -31.5358, 0.28", "151.727, 123.657, -31.9623, 0.28", "155.115, 127.616, -32.5647, 0.28", "156.966, 129.76, -32.9393, 0.83", "160.106, 133.372, -33.6613, 0.28", "160.501, 133.828, -33.7732, 0.55", "161.346, 134.764, -34.0986, 0.28", "162.155, 135.639, -34.5349, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.60205, 4.43569, 8.8103, 0.83", "5.59111, 4.29122, 9.44353, 0.83", "6.91204, 4.10548, 9.81442, 0.83", "9.38984, 3.5639, 10.4816, 0.83", "12.957, 2.50877, 11.4221, 0.83", "15.7603, 1.49814, 12.2341, 0.55", "17.5712, 0.755147, 12.7699, 0.55", "19.3144, -0.20165, 13.2939, 0.83", "22.0046, -1.9786, 14.0669, 0.55", "23.3268, -2.99746, 14.4106, 0.83", "24.9338, -4.39034, 14.6832, 0.83", "26.0658, -5.44703, 14.8398, 1.11", "27.2774, -6.74341, 15.0302, 0.55", "28.1832, -7.76835, 15.1638, 0.83", "28.9918, -8.67779, 15.2929, 0.55", "30.7366, -10.5325, 15.611, 0.55", "32.5683, -12.5158, 16.069, 0.55", "33.5594, -13.6287, 16.3926, 0.55", "34.2341, -14.4387, 16.667, 0.55", "35.8427, -16.405, 17.3627, 0.83", "37.7914, -18.6401, 18.2226, 0.83", "39.59, -20.4784, 18.9818, 0.55", "41.2234, -21.9189, 19.6795, 0.55", "43.6271, -23.6746, 20.6929, 0.55", "45.1217, -24.7238, 21.3229, 0.55", "47.0174, -25.9043, 22.0765, 0.55", "48.2301, -26.4891, 22.5658, 0.55", "51.8218, -27.6581, 23.9124, 0.55", "54.021, -28.0292, 24.8211, 0.28", "60.9574, -32.3926, 27.5432, 0.28", "67.7653, -37.2052, 29.8882, 0.28", "74.2541, -42.2581, 32.6364, 0.28", "80.3056, -47.4362, 36.0686, 0.28", "86.2192, -53.433, 38.3634, 0.28", "92.4188, -58.3453, 41.8832, 0.28", "98.8435, -63.9731, 43.5961, 0.28", "103.939, -71.1263, 44.3396, 0.28", "109.786, -77.4805, 45.7998, 0.28", "115.616, -83.9193, 46.9736, 0.28", "121.318, -90.5958, 47.2746, 0.28", "125.464, -98.214, 48.9652, 0.28", "128.437, -106.491, 50.203, 0.28", "132.979, -114.031, 51.0049, 0.28", "137.66, -121.387, 52.3601, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.497947, -3.61781, -10.1097, 0.83", "0.853804, -2.08267, -10.1553, 0.83", "2.17214, -0.585483, -10.1997, 1.11", "3.97294, 1.45963, -10.2604, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.93795, 5.71669, -5.2197, 0.83", "-5.97302, 7.72695, -5.02002, 0.83", "-7.16173, 10.0356, -4.79071, 1.38", "-8.43829, 12.5149, -4.54444, 0.83", "-9.65394, 14.8759, -4.30993, 1.11", "-10.6644, 16.8384, -4.11499, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.00795, -10.6633, -1.2597, 3.88", "-1.70064, -12.7162, -1.2597, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.298405, -9.95792, -0.0466218, 0.55", "-0.493767, -24.9566, -0.0466218, 0.55", "-0.689129, -39.9554, -0.0466218, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.97294, 1.45963, -10.2604, 0.83", "6.9868, 2.71406, -10.8417, 0.83", "8.89881, 3.5936, -11.2778, 0.83", "11.1428, 4.70122, -11.8062, 1.11", "15.056, 6.78973, -12.7024, 0.83", "16.5064, 7.66498, -13.0167, 0.83", "19.6241, 9.73247, -13.6693, 1.11", "21.8533, 11.3871, -14.0758, 0.55", "23.2613, 12.5637, -14.3313, 0.55", "25.2953, 14.4171, -14.6829, 0.55", "27.9334, 16.9574, -15.0747, 0.55", "30.2486, 19.2269, -15.3642, 0.83", "31.893, 20.9036, -15.5188, 0.55", "33.8971, 22.9763, -15.7263, 0.83", "35.2095, 24.2473, -15.887, 1.11", "37.6779, 26.435, -16.2173, 0.55", "39.6592, 28.0719, -16.5206, 0.55", "44.253, 31.7176, -17.3043, 0.83", "46.5305, 33.4551, -17.7186, 0.55", "50.0993, 36.0976, -18.396, 0.55", "52.7737, 38.0397, -18.9195, 0.83", "54.9474, 39.6045, -19.3485, 0.55", "57.3194, 41.322, -19.8013, 0.55", "59.4997, 42.932, -20.1926, 0.83", "61.8304, 44.8545, -20.5438, 0.28", "62.5568, 45.5777, -20.6581, 0.55", "63.6307, 46.7598, -20.8104, 0.28", "64.9838, 48.3476, -20.9634, 0.55", "66.892, 50.7668, -21.1878, 0.28", "68.5892, 53.0557, -21.4015, 0.83", "70.5888, 55.8781, -21.787, 0.28", "71.633, 57.3747, -22.031, 0.28", "72.91, 59.2578, -22.4498, 0.83", "75.9555, 63.7809, -23.6565, 0.28", "77.2194, 65.6573, -24.2268, 0.83", "79.4174, 68.9686, -25.3518, 0.28", "80.1428, 70.0346, -25.8129, 0.55", "82.6323, 73.6179, -27.7739, 0.28", "82.9643, 74.0756, -28.0884, 0.83", "83.4578, 74.7093, -28.6201, 0.83", "84.7429, 76.2662, -29.9902, 0.83", "87.4311, 79.5295, -32.7655, 0.55", "90.2848, 83.0194, -35.5938, 0.28", "92.3584, 85.6856, -37.568, 0.83", "94.9907, 89.2366, -40.0046, 0.28", "96.2735, 91.0496, -41.1934, 0.83", "99.1343, 95.1289, -43.7763, 0.28", "100.566, 97.192, -44.9872, 0.83", "103.522, 101.358, -47.3659, 0.28", "104.264, 102.353, -47.9267, 0.55", "107.998, 107.111, -50.6325, 0.28", "108.711, 107.972, -51.1596, 0.83", "110.676, 110.196, -52.5794, 0.28", "111.452, 111.06, -53.157, 0.83", "114.265, 114.011, -55.1326, 0.28", "115.473, 115.43, -56.0056, 0.83", "117.455, 118.067, -57.3592, 0.28", "117.995, 118.884, -57.7086, 0.83", "119.591, 121.551, -58.6756, 0.28", "120.284, 122.767, -59.0845, 0.55", "124.368, 130.145, -61.3399, 0.28", "125.952, 132.899, -62.1206, 1.11", "128.247, 136.612, -63.1081, 0.28", "129.644, 138.679, -63.6156, 0.28", "130.732, 140.178, -63.924, 0.83", "133.093, 143.276, -64.6677, 0.28", "134.547, 145.055, -65.1354, 1.11", "136.972, 148.016, -66.1042, 0.28", "140.301, 152.199, -67.6766, 0.28", "141.268, 153.531, -68.1956, 1.38", "144.267, 158.139, -69.9506, 0.28", "144.724, 158.934, -70.2735, 0.55", "145.495, 160.488, -70.9161, 0.28", "146.295, 162.249, -71.6542, 0.55", "148.296, 166.259, -73.3114, 0.28", "148.993, 167.471, -73.7564, 0.83", "149.969, 168.865, -74.2259, 0.28", "150.799, 169.903, -74.5068, 0.55", "153.487, 172.786, -75.5621, 0.28", "156.928, 175.948, -77.1111, 0.28", "157.747, 176.592, -77.5915, 0.55", "160.495, 178.579, -79.522, 0.28", "163.849, 180.843, -82.6497, 0.55", "168.388, 183.704, -88.0663, 0.28", "169.588, 184.413, -89.7921, 0.55", "171.954, 185.665, -93.8624, 0.28", "172.632, 185.991, -95.1528, 0.55", "175.083, 187.038, -100.677, 0.28", "175.56, 187.218, -101.968, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.97294, 1.45963, -10.2604, 0.55", "4.04864, 0.997647, -11.0146, 0.55", "4.27509, 0.0689631, -12.8197, 0.55", "4.69222, -0.84015, -14.7263, 0.83", "5.21097, -1.76328, -16.8127, 0.55", "5.83129, -2.96976, -19.4133, 0.55", "6.03372, -3.39196, -20.308, 0.55", "6.69289, -4.67483, -23.069, 0.83", "7.10847, -5.52569, -24.8337, 0.83", "7.45529, -6.57314, -26.645, 0.83", "7.6875, -7.51038, -27.9867, 1.11", "7.98575, -8.87121, -29.6922, 0.55", "8.14953, -9.9371, -30.908, 0.55", "8.27237, -11.7513, -32.7834, 1.11", "8.26405, -14.4755, -35.4387, 0.28", "8.23599, -15.1051, -36.0368, 0.55", "8.03243, -17.345, -38.0981, 0.28", "7.89978, -18.2752, -38.9087, 1.11", "7.24985, -21.5526, -41.7446, 0.28", "6.93091, -22.9045, -42.8913, 0.28", "6.41529, -24.6133, -44.3105, 1.11", "5.77775, -26.3678, -45.8024, 0.28", "5.41912, -27.1579, -46.5165, 0.55", "4.07167, -29.7948, -49.0236, 0.28", "3.58263, -30.6749, -49.9424, 1.38", "2.97186, -31.7862, -51.2175, 0.28", "2.32256, -33.0108, -52.724, 0.83", "1.44372, -34.6687, -54.9119, 0.28", "1.21033, -35.144, -55.5899, 0.83", "0.278729, -37.2814, -58.7775, 0.28", "0.0873739, -37.7919, -59.6683, 0.28", "-0.10849, -38.3328, -60.6845, 0.55", "-0.291564, -38.8476, -61.769, 0.55", "-1.06213, -40.9586, -66.4259, 0.28", "-1.13608, -41.1288, -66.8228, 0.83", "-2.46564, -43.7808, -73.0871, 0.28", "-2.69208, -44.1797, -74.0322, 0.83", "-3.79906, -45.9793, -78.0831, 0.28", "-4.00466, -46.3122, -78.7937, 0.83", "-5.02999, -47.9669, -81.938, 0.28", "-5.26002, -48.3414, -82.6105, 0.83", "-6.34564, -50.1643, -85.4195, 0.28", "-6.73096, -50.834, -86.4335, 0.83", "-8.27731, -53.5147, -90.0166, 0.28", "-8.46387, -53.8537, -90.4715, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.6644, 16.8384, -4.11499, 0.55", "-13.1444, 19.0706, -2.74638, 0.55", "-14.7149, 20.5595, -1.94539, 0.83", "-16.037, 21.7989, -1.34892, 0.28", "-16.8971, 22.5632, -1.01685, 0.83", "-18.8029, 24.2708, -0.384351, 0.55", "-20.3793, 25.5961, 0.0697112, 1.11", "-21.7199, 26.6589, 0.424718, 0.83", "-23.0684, 27.6877, 0.753175, 0.83", "-24.9566, 29.0693, 1.12426, 0.83", "-27.1277, 30.5641, 1.45344, 0.83", "-29.432, 32.0232, 1.67214, 0.83", "-31.8221, 33.4425, 1.97476, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.70064, -12.7162, -1.2597, 1.11", "0.506392, -17.0622, -1.16136, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.70064, -12.7162, -1.2597, 1.38", "-2.24135, -13.7012, -1.00545, 1.38", "-3.69914, -16.3567, -0.319986, 1.38", "-5.85387, -20.2818, 0.6932, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.689129, -39.9554, -0.0466218, 0.28", "-0.884491, -54.9541, -0.0466218, 0.28", "-1.07985, -69.9528, -0.0466218, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.46387, -53.8537, -90.4715, 0.28", "-10.2286, -56.3247, -91.9902, 0.28", "-10.9635, -57.3536, -92.6226, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.46387, -53.8537, -90.4715, 0.28", "-8.75271, -58.1498, -88.4465, 0.28", "-8.80771, -59.2574, -87.9477, 0.83", "-9.05311, -62.3325, -86.5173, 0.28", "-9.36482, -64.9656, -85.2792, 0.28", "-9.54252, -66.0344, -84.4237, 0.83", "-9.91462, -68.1222, -82.5191, 0.28", "-10.0171, -68.664, -81.9907, 0.83", "-10.6002, -71.7651, -78.7647, 0.28", "-10.8507, -73.1548, -77.2888, 0.83", "-12.598, -81.4334, -68.2756, 0.28", "-12.811, -82.4337, -67.1306, 0.55", "-13.1528, -83.923, -65.3409, 0.28", "-13.1994, -84.1364, -65.0717, 0.55", "-13.4615, -85.7064, -62.9421, 0.28", "-13.5369, -86.4265, -62.0087, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-31.8221, 33.4425, 1.97476, 0.83", "-33.0085, 34.8284, 2.05547, 0.83", "-33.8435, 35.8038, 2.11228, 0.83", "-34.7499, 36.8627, 2.17394, 0.28", "-35.2759, 37.4772, 2.20973, 0.83", "-40.3717, 44.2229, 3.90913, 0.83", "-44.2687, 52.004, 4.07032, 0.83", "-48.719, 59.4005, 3.23251, 0.83", "-52.1873, 67.0189, 0.896809, 0.83", "-56.2268, 73.812, -2.56084, 0.83", "-58.705, 81.1252, -6.49485, 0.83", "-61.2834, 88.6858, -9.90564, 0.83", "-63.15, 95.7852, -14.4804, 0.83", "-63.541, 103.769, -17.9671, 0.83", "-63.1621, 111.64, -21.6819, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-31.8221, 33.4425, 1.97476, 0.55", "-32.43, 36.3007, 1.24236, 0.55", "-33.106, 39.0474, 0.582701, 0.55", "-33.427, 40.3066, 0.296501, 1.11", "-33.9271, 42.4214, -0.142221, 0.28", "-34.2937, 43.9313, -0.472917, 0.83", "-34.9825, 46.5467, -1.18017, 0.55", "-36.021, 49.7712, -2.19185, 0.83", "-37.6473, 53.3712, -3.65906, 0.28", "-38.977, 55.6842, -4.81328, 0.28", "-39.8462, 56.8512, -5.47727, 0.55", "-42.448, 59.4621, -7.16497, 0.55", "-45.371, 61.6423, -8.77557, 0.83", "-49.963, 64.2402, -11.035, 0.55", "-52.2294, 65.2779, -11.982, 0.28", "-55.232, 66.483, -13.0434, 0.83", "-58.9956, 67.9579, -14.1872, 0.55", "-61.1754, 68.7997, -14.7275, 0.55", "-63.2471, 69.6856, -15.1783, 0.83", "-65.8254, 70.944, -15.5194, 0.28", "-67.395, 71.7603, -15.6952, 0.55", "-70.4652, 73.4785, -15.9977, 0.28", "-71.6898, 74.2441, -16.1149, 0.55", "-73.6684, 75.4942, -16.2676, 0.55", "-77.9774, 78.1915, -16.5361, 0.28", "-80.2731, 79.6154, -16.6833, 0.83", "-83.9875, 82.0434, -16.9101, 0.28", "-89.0307, 85.4959, -17.2477, 0.28", "-92.6509, 88.1611, -17.5714, 0.83", "-97.1031, 91.7271, -18.0606, 0.28", "-98.7798, 93.2492, -18.2792, 0.83", "-101.991, 96.43, -18.6968, 0.28", "-103.784, 98.4006, -19.0004, 0.55", "-106.812, 102.027, -19.6181, 0.28", "-108.214, 103.916, -19.9748, 0.55", "-109.174, 105.246, -20.2414, 0.28", "-110.196, 106.597, -20.53, 0.55", "-113.26, 110.316, -21.6615, 0.28", "-114.678, 111.908, -22.2662, 0.55", "-116.098, 113.356, -23.046, 0.28", "-117.926, 115.066, -24.1404, 0.28", "-119.738, 116.626, -25.2934, 0.55", "-122.875, 119.282, -27.4543, 0.28", "-123.581, 119.862, -27.9382, 0.55", "-126.308, 122.131, -29.7998, 0.28", "-128.068, 123.603, -31.0267, 0.83", "-132.44, 127.315, -34.1469, 0.28", "-134.441, 128.935, -35.5701, 0.83", "-137.966, 131.736, -38.0135, 0.28", "-140.179, 133.498, -39.5427, 0.28", "-140.712, 133.924, -39.887, 0.55", "-142.341, 135.217, -40.9024, 0.28", "-145.122, 137.389, -42.5208, 1.11", "-150.44, 141.425, -45.3843, 0.28", "-150.868, 141.748, -45.5969, 0.55", "-153.912, 143.965, -46.9359, 0.28", "-154.538, 144.392, -47.1825, 0.55", "-156.216, 145.397, -47.7871, 0.28", "-157.289, 145.869, -48.2885, 0.55", "-158.897, 146.212, -49.2309, 0.28", "-159.94, 146.367, -49.9267, 0.55", "-163.061, 146.637, -52.1854, 0.28", "-165.589, 146.842, -53.9901, 0.83", "-170.894, 147.343, -57.7702, 0.28", "-172.046, 147.617, -58.5733, 0.55", "-174.268, 148.453, -60.0788, 0.28", "-175.214, 148.978, -60.6027, 0.55", "-176.86, 150.255, -61.2377, 0.28", "-178.505, 151.773, -61.7013, 0.83", "-183.618, 157.268, -62.4922, 0.28", "-184.45, 158.256, -62.614, 0.55", "-186.92, 161.506, -62.9133, 0.28", "-188.187, 163.319, -63.0517, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "0.506392, -17.0622, -1.16136, 0.83", "0.359471, -18.9346, -1.18441, 0.83", "0.267214, -20.3678, -1.13369, 0.28", "0.163718, -22.8524, -0.935248, 1.11", "0.147895, -25.9294, -0.556828, 0.55", "0.162607, -29.6926, -0.0123321, 0.55", "0.243241, -32.3322, 0.412595, 1.11", "0.551666, -37.0333, 1.42997, 1.11", "0.797751, -39.9121, 2.18836, 0.83", "1.1537, -42.9366, 3.13982, 0.83", "1.28527, -43.8355, 3.45747, 0.83", "1.80452, -47.2304, 4.69232, 0.83", "2.32427, -50.5467, 6.00641, 0.83", "2.63072, -52.8159, 6.92031, 0.83", "2.88589, -55.3784, 8.02079, 0.83", "3.04454, -58.1565, 9.26531, 0.83", "3.15716, -61.2586, 10.7742, 0.83", "3.28643, -65.5615, 12.9797, 0.83", "3.48743, -69.0306, 14.8257, 0.83", "3.89465, -72.8941, 17.1143, 0.83", "4.41692, -76.4283, 19.3277, 0.83", "5.02799, -79.1513, 21.1084, 0.83", "5.51201, -80.8198, 22.1762, 0.83", "6.12863, -82.5905, 23.285, 0.83", "6.74074, -83.9301, 24.1881, 0.55", "8.22131, -86.5517, 25.7124, 0.83", "9.77243, -88.8479, 26.9972, 0.55", "11.1343, -91.1124, 28.0418, 0.83", "11.4205, -101.743, 33.9872, 0.83", "11.2399, -111.794, 40.7902, 0.83", "12.0485, -120.744, 48.8308, 0.83", "14.4506, -128.771, 57.4204, 0.83", "18.1828, -135.186, 66.7335, 0.83", "20.7012, -139.247, 77.5316, 0.83", "25.0219, -142.646, 87.9598, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.506392, -17.0622, -1.16136, 0.83", "2.31526, -18.3064, -0.537975, 0.83", "4.86051, -19.8672, 0.39166, 0.83", "5.86595, -20.4995, 0.814823, 0.83", "7.44677, -21.4935, 1.48745, 0.55", "8.37973, -22.1196, 1.88416, 1.11", "9.90173, -23.1626, 2.52542, 0.83", "12.0777, -24.6837, 3.40039, 0.83", "14.2276, -26.2617, 4.23068, 0.83", "16.6206, -28.1759, 4.99631, 0.83", "18.5401, -29.8785, 5.50047, 0.55", "19.468, -30.798, 5.66939, 0.83", "20.811, -32.2392, 5.77382, 0.28", "21.8077, -33.3439, 5.74042, 0.55", "23.6233, -35.0678, 5.54793, 0.28", "23.9449, -35.3276, 5.5253, 0.83", "25.6352, -36.5234, 5.54822, 0.28", "26.3612, -37.0061, 5.6392, 0.28", "28.1023, -38.0884, 6.0251, 0.83", "30.9795, -39.8038, 6.9009, 0.83", "32.9446, -40.9588, 7.54817, 0.55", "35.1419, -42.2379, 8.23837, 0.83", "36.937, -43.1809, 8.81517, 0.28", "37.9828, -43.7098, 9.18181, 0.83", "40.2385, -44.784, 10.0234, 0.28", "42.0799, -45.6144, 10.7777, 0.55", "44.0935, -46.3872, 11.6115, 0.55", "47.2798, -47.3951, 12.9892, 0.55", "49.0098, -47.9222, 13.7808, 0.28", "49.5043, -48.0781, 14.029, 0.55", "51.7334, -48.7154, 15.209, 0.28", "52.953, -49.073, 15.8932, 0.55", "54.0817, -49.4244, 16.4906, 0.28", "55.0047, -49.7617, 16.9261, 0.83", "56.8408, -50.4963, 17.6727, 0.55", "59.3859, -51.6468, 18.6342, 0.55", "61.1953, -52.4942, 19.2379, 0.55", "62.0066, -52.8704, 19.5037, 0.28", "62.4941, -53.1114, 19.658, 0.83", "64.0593, -53.9511, 20.165, 0.83", "65.5657, -54.8808, 20.6699, 0.28", "66.485, -55.5196, 20.9533, 0.55", "68.0033, -56.5328, 21.3865, 0.28", "69.0451, -57.154, 21.6533, 0.83", "70.8396, -58.1291, 22.068, 0.28", "71.5483, -58.5087, 22.2182, 0.55", "73.6432, -59.7481, 22.6255, 0.28", "74.8632, -60.5584, 22.8414, 0.83", "76.0016, -61.3442, 23.0183, 0.28", "77.5212, -62.3942, 23.2397, 0.83", "80.0456, -64.1619, 23.5971, 0.28", "81.7183, -65.3878, 23.8641, 0.55", "83.7837, -67.0641, 24.2785, 0.55", "92.8735, -71.7337, 26.3367, 0.55", "101.225, -77.6557, 28.5863, 0.55", "110.152, -83.0314, 29.4255, 0.55", "119.17, -87.4137, 32.239, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.85387, -20.2818, 0.6932, 1.11", "-7.87041, -26.4664, 2.0886, 1.11", "-9.06294, -30.1238, 2.91381, 1.11", "-10.8945, -35.7409, 4.18118, 1.11", "-12.2559, -39.9163, 5.12325, 0.83", "-13.8574, -44.8279, 6.23144, 0.83", "-15.077, -48.5684, 7.07538, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.85387, -20.2818, 0.6932, 0.83", "-10.1402, -19.9978, -1.0378, 0.83", "-12.1415, -19.7043, -1.97273, 0.83", "-15.2748, -19.0207, -3.45552, 0.55", "-18.2426, -18.1142, -4.92925, 0.83", "-22.484, -16.6633, -6.92361, 0.55", "-28.3136, -14.4872, -9.48794, 0.55", "-30.8367, -13.3375, -10.548, 0.55", "-32.8036, -12.3382, -11.4257, 0.83", "-35.8142, -10.5562, -12.7749, 0.83", "-37.8885, -9.17035, -13.5304, 0.55", "-39.7271, -7.8272, -14.0443, 0.83", "-42.8919, -5.27383, -14.1073, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-188.187, 163.319, -63.0517, 0.28", "-185.965, 165.68, -62.4621, 0.28", "-185.363, 166.164, -62.2034, 0.83", "-184.05, 166.947, -61.3568, 0.55", "-182.861, 167.538, -60.6519, 0.55", "-180.502, 168.503, -59.3774, 0.28", "-179.452, 168.877, -58.8089, 0.55", "-176.998, 169.434, -57.7284, 0.55", "-173.138, 170.097, -56.3183, 0.28", "-170.837, 170.397, -55.4623, 0.55", "-168.647, 170.593, -54.7268, 0.28", "-167.116, 170.677, -54.403, 0.55", "-162.657, 170.955, -54.036, 0.28", "-161.557, 171.012, -54.2168, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-188.187, 163.319, -63.0517, 0.28", "-190.3, 166.445, -62.4699, 0.28", "-191.287, 167.929, -62.1893, 0.83", "-192.235, 169.309, -61.9376, 0.28", "-192.74, 170.037, -61.7856, 0.55", "-194.08, 171.907, -61.3714, 0.28", "-194.374, 172.277, -61.3173, 0.55", "-195.427, 173.495, -61.2301, 0.28", "-196.323, 174.466, -61.1909, 0.55", "-197.341, 175.512, -61.235, 0.28", "-197.806, 175.97, -61.3198, 0.55", "-201.001, 178.948, -62.3278, 0.28", "-201.761, 179.65, -62.69, 0.55", "-202.662, 180.47, -63.1978, 0.28", "-202.969, 180.769, -63.3922, 0.55", "-205.302, 183.2, -65.0828, 0.28", "-206.192, 184.211, -65.8195, 0.83", "-209.323, 188.032, -68.6853, 0.28", "-209.947, 188.808, -69.2899, 0.55", "-211.034, 190.194, -70.3926, 0.28", "-212.065, 191.543, -71.4113, 0.55", "-212.982, 192.792, -72.2709, 0.28", "-213.535, 193.553, -72.7126, 0.55", "-214.81, 195.266, -73.522, 0.28", "-215.392, 195.949, -73.7847, 1.38", "-218.673, 199.355, -74.8215, 0.28", "-219.536, 200.206, -74.9389, 0.55", "-220.881, 201.483, -74.9473, 0.28", "-221.844, 202.396, -74.9099, 1.94", "-225.294, 205.623, -74.5153, 0.28", "-225.926, 206.193, -74.4122, 0.55", "-228.911, 208.597, -73.6282, 0.28", "-229.974, 209.407, -73.336, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.077, -48.5684, 7.07538, 0.83", "-16.2392, -52.5489, 7.24804, 0.83", "-17.2569, -56.0345, 7.39923, 0.83", "-18.0486, -58.7462, 7.51685, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.077, -48.5684, 7.07538, 0.83", "-16.7774, -50.0332, 5.244, 0.83", "-18.0437, -51.2821, 3.2966, 0.55", "-18.9664, -52.358, 1.49751, 0.83", "-19.6132, -53.321, -0.314995, 0.55", "-20.0746, -54.0849, -1.76466, 0.55", "-20.7233, -55.3496, -4.28362, 0.83", "-20.9533, -56.1743, -6.03912, 0.83", "-21.0785, -57.0458, -7.91272, 0.55", "-21.2271, -58.6952, -11.4352, 0.28", "-21.2756, -59.1693, -12.3519, 0.28", "-21.4635, -60.2304, -14.1781, 0.83", "-21.656, -61.2022, -15.5377, 0.55", "-21.7893, -62.1361, -16.7221, 0.83", "-21.8787, -62.8939, -17.6535, 0.83", "-22.0633, -64.7306, -19.7231, 0.28", "-22.1165, -65.4984, -20.6368, 0.83", "-22.1269, -66.5288, -21.9037, 0.83", "-21.9234, -68.1109, -24.0161, 0.28", "-21.6904, -69.2175, -25.6372, 0.83", "-21.5185, -69.9839, -26.9281, 0.83", "-21.3081, -71.1882, -29.201, 0.28", "-21.2762, -71.942, -30.6795, 0.28", "-21.3575, -72.3396, -31.4995, 0.55", "-21.6053, -73.0316, -32.9061, 0.55", "-22.1221, -74.3008, -35.5413, 0.83", "-22.5527, -75.1641, -37.254, 0.28", "-22.7741, -75.5708, -37.9695, 0.55", "-23.4451, -76.8196, -39.9663, 0.28", "-23.6396, -77.2301, -40.5651, 0.83", "-24.0402, -78.3141, -42.0192, 0.28", "-24.1785, -78.7123, -42.5232, 0.55", "-24.5554, -79.754, -43.8442, 0.28", "-24.7167, -80.1822, -44.3852, 0.83", "-25.5547, -82.1933, -46.8724, 0.28", "-26.1338, -83.4798, -48.434, 0.83", "-27.0916, -85.3813, -50.7302, 0.28", "-27.2368, -85.6342, -51.0736, 0.55", "-28.0068, -86.9006, -52.8715, 0.28", "-28.19, -87.2014, -53.2992, 0.55", "-28.8849, -88.4394, -55.0509, 0.28", "-29.2758, -89.1901, -56.0796, 1.11", "-30.5261, -92.0297, -59.823, 0.28", "-30.7011, -92.5196, -60.4564, 0.28", "-30.9257, -93.3272, -61.4301, 0.83", "-31.4063, -95.6443, -63.926, 0.28", "-31.4562, -96.0855, -64.3178, 0.55", "-31.5251, -98.1558, -65.8157, 0.28", "-31.5046, -99.2386, -66.358, 0.83", "-31.4947, -100.548, -66.929, 0.83", "-31.5177, -102.341, -67.5242, 0.28", "-31.5617, -104.68, -68.0367, 0.28", "-31.575, -105.09, -68.1181, 0.83", "-31.7076, -107.884, -68.658, 0.28", "-31.7441, -108.53, -68.7893, 0.55", "-31.8105, -110.391, -69.1867, 0.28", "-31.9131, -112.959, -69.7268, 0.28", "-31.9507, -114.226, -70.0037, 1.11", "-31.9329, -117.444, -70.6983, 0.28", "-31.8958, -119.573, -71.1549, 0.28", "-31.8789, -120.497, -71.3294, 0.55", "-31.8618, -121.55, -71.5054, 0.83", "-31.8853, -122.779, -71.7008, 0.83", "-32.0441, -126.171, -72.1987, 0.28", "-32.1117, -127.038, -72.3449, 0.83", "-32.2986, -129.205, -72.8072, 0.28", "-32.3158, -129.415, -72.8608, 0.83", "-32.557, -132.393, -73.7308, 0.28", "-32.6355, -133.216, -74.0396, 0.83", "-32.9342, -136.297, -75.4207, 0.28", "-33.0009, -137.112, -75.793, 1.11", "-33.1382, -138.827, -76.5774, 0.28", "-33.2141, -139.697, -76.974, 0.83", "-33.4689, -142.894, -78.3965, 0.28", "-33.5212, -143.43, -78.658, 0.55", "-33.7009, -144.732, -79.2934, 0.28", "-33.8368, -145.717, -79.754, 0.55", "-34.2251, -148.763, -81.1296, 0.28", "-34.3257, -149.767, -81.563, 0.55", "-34.4599, -151.806, -82.4349, 0.28", "-34.4933, -153.097, -83.0168, 0.55", "-34.4657, -154.478, -83.6476, 0.55", "-34.2183, -158.115, -85.2241, 0.28", "-34.1228, -158.889, -85.5439, 0.55", "-33.6464, -161.844, -86.7628, 0.28", "-33.4404, -162.876, -87.2098, 0.55", "-32.9842, -164.994, -88.1843, 0.28", "-32.8476, -165.661, -88.5044, 0.55", "-32.3591, -168.02, -89.6466, 0.28", "-32.2277, -168.79, -90.0319, 0.55", "-31.8148, -172.072, -91.6761, 0.28", "-31.7285, -173.393, -92.3738, 0.83", "-31.7319, -174.747, -93.0948, 0.28", "-31.769, -175.428, -93.4485, 0.55", "-31.975, -177.173, -94.3212, 0.28", "-32.0635, -177.765, -94.6183, 0.55", "-32.4446, -179.518, -95.5734, 0.28", "-32.6808, -180.572, -96.1747, 0.28", "-32.7869, -181.091, -96.4582, 0.83", "-33.1808, -183.578, -97.806, 0.28", "-33.2944, -184.593, -98.3528, 0.83", "-33.4154, -186.876, -99.6421, 0.28", "-33.3915, -188.717, -100.693, 0.28", "-33.3018, -189.983, -101.43, 0.55", "-33.0036, -192.457, -102.845, 0.28", "-32.8228, -193.395, -103.378, 0.83", "-32.3544, -195.306, -104.426, 0.28", "-32.148, -195.96, -104.757, 0.55", "-32.0194, -196.37, -104.971, 0.28", "-31.904, -196.748, -105.154, 0.55", "-31.6629, -197.727, -105.521, 0.55", "-31.4064, -199.305, -106.162, 0.83", "-31.2114, -200.936, -106.824, 0.28", "-31.1411, -201.644, -107.11, 0.55", "-30.9855, -203.574, -107.852, 0.28", "-30.8905, -205.28, -108.468, 0.83", "-30.7981, -208.456, -109.566, 0.28", "-30.7998, -209.66, -109.989, 0.28", "-30.8801, -212.08, -110.802, 0.83", "-30.986, -213.959, -111.377, 0.28", "-31.1084, -214.988, -111.658, 0.28", "-31.1464, -215.228, -111.712, 0.55", "-31.3747, -216.309, -111.832, 0.28", "-31.7744, -217.678, -111.959, 0.83", "-32.5595, -219.917, -112.13, 0.28", "-33.0444, -221.262, -112.224, 0.83", "-33.576, -222.789, -112.319, 0.28", "-34.2884, -224.971, -112.421, 0.83", "-34.8145, -226.62, -112.459, 0.28", "-34.9077, -226.91, -112.464, 0.55", "-35.2673, -228.028, -112.462, 0.28", "-35.4964, -228.88, -112.449, 0.55", "-35.8535, -230.334, -112.483, 0.28", "-36.0454, -231.382, -112.616, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-42.8919, -5.27383, -14.1073, 0.55", "-44.6992, -5.97934, -14.8424, 0.55", "-47.9844, -6.538, -16.8089, 0.55", "-50.5808, -6.74189, -19.0487, 0.55", "-51.9918, -6.86465, -20.3555, 0.83", "-55.0196, -7.24977, -23.3078, 0.55", "-56.1517, -7.4133, -24.399, 0.55", "-60.4243, -8.30278, -29.0483, 0.55", "-64.2811, -9.29657, -33.6754, 0.28", "-65.1916, -9.53461, -34.7534, 0.83", "-68.1627, -10.371, -38.122, 0.28", "-69.0488, -10.6973, -39.067, 0.55", "-71.6587, -12.0246, -41.6463, 0.28", "-72.8375, -12.8073, -42.6286, 0.55", "-73.9191, -13.4459, -43.3735, 0.55", "-75.2814, -14.0344, -44.3887, 0.55", "-78.9411, -15.0375, -47.1699, 0.28", "-79.201, -15.0591, -47.3811, 0.55", "-82.8563, -14.6428, -50.3591, 0.28", "-84.2332, -14.1914, -51.5423, 0.55", "-87.1409, -12.6345, -54.0314, 0.28", "-88.2211, -11.7959, -54.9501, 0.55", "-90.2226, -9.77901, -56.4525, 0.28", "-90.8307, -9.04372, -56.8002, 0.55", "-93.2759, -5.66482, -58.0695, 0.28", "-95.0754, -3.062, -58.9405, 0.55", "-96.7513, -0.64315, -59.5969, 0.28", "-97.6334, 0.547206, -59.9257, 0.55", "-101.033, 4.83947, -60.8471, 0.28", "-105.276, 9.12222, -62.0115, 0.55", "-109.132, 12.2755, -62.919, 0.28", "-110.334, 13.0398, -63.1461, 0.55", "-112.334, 14.0813, -63.432, 0.28", "-115.321, 15.4292, -63.8686, 0.55", "-123.175, 18.3954, -64.9254, 0.28", "-124.848, 18.9702, -65.1036, 0.83", "-128.295, 20.0126, -65.5988, 0.28", "-130.648, 20.694, -66.0129, 0.28", "-132.988, 21.377, -66.4672, 0.83", "-134.174, 21.8008, -66.5621, 0.83", "-139.735, 24.2601, -65.9566, 0.28", "-141.074, 24.7816, -65.8995, 0.55", "-145.812, 26.2747, -65.4388, 0.28", "-148.004, 26.8026, -65.0469, 1.11", "-158.861, 28.7794, -62.9261, 0.28", "-161.272, 29.102, -62.4987, 0.83", "-170.585, 29.8541, -60.8156, 0.28", "-175.668, 30.027, -60.6973, 0.83", "-179.642, 30.0189, -61.2012, 0.28", "-183.627, 29.8627, -62.224, 0.55", "-185.93, 29.7342, -63.213, 0.28", "-187.383, 29.7316, -63.9029, 0.55", "-192.309, 30.0883, -66.8795, 0.28", "-192.844, 30.117, -67.35, 0.55", "-193.944, 30.1496, -68.4878, 0.55", "-197.042, 30.2062, -71.8202, 0.55", "-198.249, 30.2435, -73.2634, 0.28", "-200.991, 30.3952, -76.7676, 0.55", "-204.512, 30.4615, -81.4809, 0.55", "-206.264, 30.4501, -83.9202, 0.28", "-206.818, 30.4518, -84.7023, 0.83", "-210.814, 30.4949, -90.1661, 0.28", "-211.382, 30.4891, -90.9538, 0.83", "-214.754, 30.4754, -95.4962, 0.28", "-215.06, 30.4382, -95.908, 0.55", "-216.214, 30.1118, -97.4683, 0.28", "-216.651, 29.9265, -98.0456, 0.55", "-219.344, 28.4988, -101.246, 0.28", "-220.115, 28.1324, -102.228, 0.55", "-223.429, 26.8196, -106.547, 0.28", "-224.373, 26.4995, -107.844, 0.83", "-227.751, 25.5017, -112.562, 0.28", "-228.13, 25.3907, -113.138, 0.55", "-231.218, 24.5306, -118.01, 0.28", "-231.706, 24.3372, -118.863, 0.83", "-233.225, 23.5697, -121.684, 0.28", "-233.649, 23.2491, -122.552, 0.83", "-236.747, 19.1613, -130.298, 0.28", "-237.016, 18.6022, -131.128, 0.55", "-237.763, 16.2079, -133.87, 0.28", "-237.836, 15.8916, -134.201, 0.83", "-238.248, 13.3599, -136.483, 0.28", "-238.62, 10.0073, -139.141, 0.55", "-238.717, 8.50408, -140.077, 0.28", "-238.822, 7.28186, -140.874, 0.55", "-239.235, 3.79446, -143.102, 0.28", "-239.445, 2.35717, -144.109, 0.55", "-239.736, 0.934186, -145.105, 0.28", "-239.975, 0.0861723, -145.659, 0.55", "-241.112, -2.86861, -147.964, 0.28", "-241.523, -3.66511, -148.705, 0.55", "-243.979, -7.23679, -152.364, 0.28", "-244.879, -8.18466, -153.675, 0.55", "-245.711, -8.83484, -154.851, 0.55", "-248.049, -10.1173, -157.963, 0.55", "-250.36, -10.7701, -160.745, 0.28", "-251.261, -10.9095, -161.811, 0.55", "-254.699, -10.7333, -165.548, 0.28", "-255.524, -10.5659, -166.521, 0.55", "-257.153, -9.91528, -168.562, 0.28", "-258.073, -9.10589, -169.625, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-42.8919, -5.27383, -14.1073, 0.55", "-45.675, -6.48484, -13.0652, 0.55", "-48.0357, -7.64995, -12.1294, 0.83", "-50.8046, -9.03234, -11.126, 0.55", "-52.3265, -9.96152, -10.3829, 0.28", "-54.1706, -11.271, -9.33775, 0.55", "-56.9013, -13.5377, -7.65412, 0.28", "-57.7413, -14.3697, -7.10118, 0.55", "-59.8872, -16.75, -5.76384, 0.55", "-63.0647, -20.6269, -3.77397, 0.55", "-64.8926, -22.8932, -2.64556, 0.28", "-67.3905, -25.9856, -1.10425, 0.55", "-68.7819, -27.6763, -0.31627, 0.55", "-70.9264, -30.3465, 0.982467, 0.55", "-71.6141, -31.2082, 1.40014, 0.83", "-73.0103, -32.731, 2.02261, 0.28", "-73.4277, -33.1568, 2.21506, 0.55", "-74.7193, -34.3527, 2.85452, 0.28", "-75.5182, -35.062, 3.32353, 0.55", "-76.7232, -36.152, 4.10533, 0.28", "-77.9134, -37.235, 4.86464, 0.55", "-79.274, -38.5453, 5.73686, 0.28", "-80.2648, -39.5006, 6.38424, 0.55", "-82.109, -41.303, 7.66604, 0.28", "-83.3732, -42.5514, 8.5967, 0.28", "-84.2575, -43.428, 9.30147, 0.28", "-85.3889, -44.5462, 10.2383, 0.55", "-86.7046, -45.7611, 11.2313, 0.55", "-87.9759, -46.9551, 12.1295, 0.28", "-89.06, -47.9831, 12.8223, 0.55", "-90.8276, -49.6357, 13.766, 0.55", "-91.9473, -50.6702, 14.2353, 0.55", "-93.395, -51.9269, 14.7462, 0.55", "-94.3527, -52.7092, 15.0422, 0.55", "-97.3167, -55.0986, 15.9352, 0.55", "-99.269, -56.6554, 16.5616, 0.55", "-101.765, -58.624, 17.3762, 0.55", "-104.331, -60.6609, 18.2343, 0.28", "-106.558, -62.4342, 18.9807, 0.55", "-109.045, -64.3642, 19.8118, 0.55", "-111.851, -66.5436, 20.7331, 0.55", "-113.888, -68.1672, 21.4248, 0.28", "-117.682, -71.2892, 22.6741, 0.55", "-119.177, -72.5486, 23.0898, 0.83", "-120.472, -73.6288, 23.4177, 0.28", "-121.251, -74.249, 23.5694, 0.55", "-123.143, -75.7677, 23.8656, 0.28", "-123.793, -76.2998, 23.9544, 0.28", "-125.31, -77.5957, 24.1548, 0.55", "-131.281, -84.8037, 28.2841, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-18.0486, -58.7462, 7.51685, 0.83", "-16.9515, -59.9662, 8.0467, 0.83", "-15.9712, -61.1682, 8.65904, 0.83", "-13.7264, -64.3321, 10.2637, 0.83", "-10.0106, -70.2962, 13.1834, 0.55", "-8.85884, -72.3708, 14.1339, 0.55", "-7.74114, -74.6046, 15.1512, 0.83", "-6.44151, -77.7087, 16.6867, 0.55", "-5.55898, -80.2721, 17.9717, 0.83", "-5.17321, -81.8335, 18.6879, 0.83", "-4.91712, -83.8341, 19.3113, 0.83", "-4.74165, -86.0084, 19.9398, 0.83", "-4.63943, -88.1432, 20.4326, 0.55", "-4.63414, -89.8474, 20.8688, 0.55", "-4.70137, -92.3716, 21.6606, 0.55", "-4.94498, -95.3034, 22.8482, 0.55", "-5.30342, -97.3102, 23.813, 0.55", "-5.94878, -99.8275, 25.1022, 0.83", "-6.92089, -102.782, 26.7629, 0.28", "-7.25955, -103.632, 27.2769, 0.55", "-8.67025, -106.566, 29.1405, 0.55", "-9.75777, -108.405, 30.3492, 0.55", "-10.446, -109.369, 30.937, 0.55", "-11.3431, -110.391, 31.5411, 0.28", "-13.0821, -112.118, 32.4827, 0.55", "-14.9025, -113.801, 33.4387, 0.55", "-16.6167, -115.199, 34.2888, 0.55", "-18.9499, -116.948, 35.4726, 0.55", "-20.713, -118.203, 36.385, 0.55", "-22.097, -119.12, 37.1126, 0.55", "-23.5316, -120.024, 37.9155, 0.28", "-24.4957, -120.651, 38.4667, 0.55", "-26.5002, -122.118, 39.6209, 0.28", "-27.3542, -122.743, 40.1151, 0.55", "-27.5468, -131.84, 42.9211, 0.55", "-27.3571, -140.847, 45.9696, 0.55", "-26.4092, -148.934, 50.7098, 0.55", "-24.8132, -157.308, 54.7817, 0.55", "-23.7549, -165.528, 59.2879, 0.55", "-23.7956, -174.576, 62.2346, 0.55", "-24.1512, -183.047, 66.4277, 0.55", "-25.1293, -191.134, 71.1719, 0.55", "-24.2063, -199.419, 75.5991, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-18.0486, -58.7462, 7.51685, 0.83", "-19.3931, -62.8623, 6.69539, 0.83", "-20.3188, -65.9273, 6.03565, 0.83", "-21.4697, -70.276, 5.2823, 0.83", "-22.1997, -73.2664, 4.84855, 0.83", "-23.1099, -77.2154, 4.43642, 0.83", "-23.8619, -80.4445, 4.20984, 0.83", "-24.6022, -83.7443, 4.22302, 0.83", "-25.3936, -87.2786, 4.40205, 0.55", "-25.8518, -89.529, 4.67896, 1.11", "-26.3369, -92.478, 5.17288, 0.55", "-26.7267, -95.0661, 5.66322, 0.55", "-27.0594, -97.7451, 6.1812, 0.55", "-27.2126, -99.1198, 6.42482, 0.55", "-27.5225, -102.327, 6.81456, 0.83", "-27.8854, -107.459, 7.22836, 0.83", "-28.0387, -109.902, 7.33305, 0.83", "-28.2299, -112.868, 7.39639, 0.83", "-28.4079, -115.241, 7.39672, 0.83", "-28.6896, -117.99, 7.3568, 0.83", "-29.116, -121.269, 7.26235, 0.83", "-29.6297, -125.028, 7.15613, 0.83", "-30.1746, -129.031, 7.01047, 0.83", "-30.5771, -131.997, 6.86591, 0.83", "-31.0479, -136.005, 6.66626, 0.83", "-31.4683, -140.369, 6.43282, 0.83", "-31.7196, -143.898, 6.21808, 0.83", "-31.8099, -146.391, 6.01238, 0.83", "-31.8322, -150.869, 5.56984, 0.83", "-31.7852, -153.608, 5.21924, 0.55", "-31.7063, -155.219, 4.93903, 0.55", "-31.6475, -156.055, 4.74022, 0.83", "-31.5265, -157.408, 4.31351, 0.28", "-31.4548, -158.662, 3.76151, 0.83", "-31.4209, -160.656, 2.61437, 0.28", "-31.5035, -162.501, 1.4633, 0.83", "-31.6225, -163.83, 0.677676, 0.28", "-31.7949, -165.308, -0.0883904, 0.83", "-32.3445, -168.736, -1.69909, 0.28", "-32.6309, -170.183, -2.31531, 0.28", "-33.0205, -171.668, -2.91434, 0.55", "-33.7642, -174.06, -3.845, 0.55", "-34.8961, -177.222, -4.92827, 0.55", "-35.5841, -178.899, -5.40415, 0.28", "-36.1531, -180.112, -5.66262, 0.55", "-37.8301, -183.246, -6.26055, 0.28", "-38.3648, -184.167, -6.41707, 0.55", "-39.7327, -186.466, -6.76513, 0.55", "-41.13, -188.717, -7.047, 0.55", "-42.8232, -191.613, -7.37119, 0.28", "-43.5703, -192.958, -7.52272, 0.28", "-44.7164, -195.228, -7.74231, 0.55", "-45.6211, -197.208, -7.99281, 0.28", "-46.1593, -198.568, -8.20615, 0.55", "-47.0059, -201.284, -8.64474, 0.28", "-47.5345, -203.573, -8.98199, 0.55", "-48.0185, -206.358, -9.38304, 0.28", "-48.3634, -209.586, -9.83315, 0.28", "-48.3889, -210.043, -9.89202, 0.55", "-48.3969, -211.843, -10.1217, 0.83", "-48.3165, -214.665, -10.4871, 0.83", "-48.1641, -217.696, -10.8769, 0.28", "-48.0734, -219.727, -11.153, 0.83", "-48.0159, -222.433, -11.5088, 0.83", "-48.0447, -225.405, -11.8963, 0.28", "-48.132, -227.57, -12.1818, 0.83", "-48.3219, -230.713, -12.5404, 0.28", "-48.4735, -232.231, -12.6517, 0.55", "-48.6749, -233.559, -12.7021, 0.55", "-48.8812, -234.756, -12.7013, 0.28", "-48.9899, -235.357, -12.6899, 0.55", "-49.3109, -236.946, -12.7988, 0.28", "-49.5148, -237.985, -12.9987, 0.55", "-49.8092, -239.424, -13.4635, 0.28", "-50.1583, -241.059, -14.146, 0.28", "-50.5537, -242.744, -14.961, 0.55", "-51.3272, -245.967, -16.6473, 0.28", "-51.7721, -248.164, -17.7598, 0.83", "-52.3978, -251.564, -19.4217, 0.28", "-52.5835, -252.689, -19.9367, 0.55", "-52.9308, -254.954, -20.8279, 0.28", "-53.3203, -258.12, -21.8231, 0.55", "-53.5086, -261.416, -22.4589, 0.28", "-53.5282, -262.536, -22.5797, 0.55", "-53.4873, -264.453, -22.6223, 0.28", "-53.478, -265.788, -22.5914, 0.55", "-53.4808, -267.512, -22.4744, 0.55", "-53.5687, -270.371, -22.2061, 0.28", "-53.6817, -272.008, -22.0734, 0.55", "-53.8593, -273.993, -21.914, 0.28", "-54.197, -276.998, -21.6887, 0.28", "-54.4821, -278.875, -21.5647, 0.55", "-54.9247, -281.125, -21.3737, 0.28", "-55.1532, -281.935, -21.3043, 0.55", "-55.6548, -283.31, -21.1901, 0.28", "-56.1459, -284.303, -21.1822, 0.55", "-57.6985, -286.917, -21.3043, 0.28", "-58.4621, -288.051, -21.4111, 0.55", "-60.1292, -290.377, -21.6726, 0.28", "-61.3077, -291.982, -21.8706, 0.83", "-64.1365, -295.744, -22.412, 0.28", "-64.9554, -296.786, -22.6052, 0.55", "-66.4603, -298.631, -23.1049, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-36.0454, -231.382, -112.616, 0.28", "-35.9677, -234.627, -113.085, 0.28", "-35.935, -235.893, -113.297, 0.83", "-35.7949, -240.925, -114.19, 0.28", "-35.7718, -242.503, -114.502, 0.83", "-35.6609, -247.032, -115.477, 0.28", "-35.6371, -248.259, -115.768, 0.83", "-35.5987, -251.741, -116.716, 0.28", "-35.5947, -252.352, -116.905, 0.55", "-35.6002, -255.72, -118.055, 0.28", "-35.6569, -257.996, -118.901, 0.83", "-35.8414, -261.375, -120.233, 0.28", "-35.9066, -262.03, -120.517, 0.55", "-36.1832, -263.979, -121.41, 0.28", "-36.4848, -265.405, -122.055, 0.83", "-36.967, -267.235, -122.907, 0.28", "-37.32, -268.398, -123.462, 0.55", "-37.8079, -270.148, -124.341, 0.28", "-38.2025, -271.785, -125.181, 0.28", "-38.6836, -274.132, -126.464, 0.55", "-39.0554, -277.334, -128.268, 0.28", "-39.0828, -278.037, -128.663, 0.55", "-38.9221, -281.55, -130.733, 0.28", "-38.7498, -282.69, -131.412, 0.83", "-38.0058, -285.865, -133.412, 0.28", "-37.2473, -288.167, -134.914, 0.28", "-37.0049, -288.786, -135.313, 0.55", "-35.5654, -292.095, -137.377, 0.28", "-34.5995, -294.003, -138.505, 0.28", "-34.3517, -294.485, -138.777, 0.83", "-32.9503, -297.223, -140.151, 0.28", "-32.5408, -298.174, -140.57, 0.55", "-31.9277, -299.904, -141.188, 0.28", "-31.4645, -301.879, -141.677, 0.28", "-31.323, -303.003, -141.868, 0.55", "-31.1442, -305.534, -142.138, 0.28", "-31.1199, -307.543, -142.312, 0.83", "-31.1409, -310.157, -142.541, 0.28", "-31.1471, -312.442, -142.776, 0.28", "-31.1335, -315.341, -143.105, 0.28", "-31.0428, -317.218, -143.335, 0.83", "-30.6415, -322.542, -144.071, 0.28", "-30.4805, -323.826, -144.255, 0.55", "-30.0456, -326.304, -144.609, 0.28", "-29.9142, -326.908, -144.706, 0.55", "-29.1837, -329.779, -145.187, 0.28", "-28.9082, -330.728, -145.323, 0.55", "-28.0853, -332.92, -145.453, 0.28", "-27.7705, -333.8, -145.479, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-36.0454, -231.382, -112.616, 0.28", "-36.7209, -233.248, -112.707, 0.28", "-37.2702, -234.867, -112.682, 0.55", "-38.0833, -237.226, -112.587, 0.28", "-38.1906, -237.535, -112.576, 0.55", "-38.624, -238.722, -112.548, 0.28", "-38.817, -239.205, -112.545, 0.55", "-39.6418, -241.17, -112.555, 0.28", "-39.8761, -241.702, -112.573, 0.55", "-40.7197, -243.476, -112.683, 0.28", "-41.1208, -244.36, -112.798, 0.55", "-42.0495, -246.408, -113.136, 0.28", "-42.3075, -246.999, -113.256, 1.11", "-43.1886, -249.224, -113.923, 0.28", "-43.5312, -250.269, -114.28, 0.55", "-44.1452, -252.332, -115.288, 0.28", "-44.3975, -253.383, -115.893, 0.55", "-44.5469, -254.148, -116.392, 0.55", "-44.995, -256.492, -118.142, 0.28", "-45.1359, -257.199, -118.718, 0.55", "-45.7779, -260.031, -121.11, 0.28", "-46.202, -261.617, -122.466, 0.28", "-46.3835, -262.179, -122.969, 0.55", "-47.1564, -264.111, -124.624, 0.28", "-47.4473, -264.735, -125.106, 0.83", "-48.0919, -266.066, -126.047, 0.28", "-48.2038, -266.324, -126.198, 0.55", "-48.9415, -268.064, -127.22, 0.28", "-49.4136, -269.389, -127.915, 0.83", "-49.9478, -271.306, -128.784, 0.28", "-50.1061, -272.057, -129.108, 0.55", "-50.4575, -274.432, -130.054, 0.28", "-50.4965, -274.866, -130.213, 0.55", "-50.5242, -276.253, -130.59, 0.28", "-50.5127, -276.62, -130.681, 0.55", "-50.3783, -278.489, -131.077, 0.28", "-50.3381, -278.942, -131.172, 0.83", "-50.1967, -280.868, -131.522, 0.28", "-50.1421, -282.646, -131.868, 0.55", "-50.1809, -283.923, -132.1, 0.55", "-50.4218, -286.57, -132.539, 0.28", "-50.5391, -287.27, -132.659, 0.83", "-50.8142, -288.181, -132.801, 0.83", "-51.837, -290.353, -133.095, 0.28", "-52.6467, -291.644, -133.245, 0.28", "-53.1613, -292.311, -133.267, 0.55", "-54.2668, -293.513, -133.25, 0.28", "-55.7207, -294.972, -133.197, 0.28", "-56.4841, -295.679, -133.155, 0.55", "-57.2899, -296.281, -133.045, 0.28", "-57.8052, -296.64, -132.976, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-66.4603, -298.631, -23.1049, 0.28", "-65.6072, -299.809, -24.0787, 0.28", "-64.6249, -301.165, -25.2, 0.28", "-63.9069, -302.156, -26.0196, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-66.4603, -298.631, -23.1049, 0.55", "-68.4046, -301.597, -20.3525, 0.55", "-69.3788, -303.706, -18.4948, 0.28", "-69.5876, -304.673, -17.7145, 0.55", "-69.7952, -307.744, -15.4299, 0.28", "-69.7584, -308.754, -14.7944, 0.83", "-69.4475, -312.01, -12.955, 0.28", "-69.3326, -312.475, -12.7792, 0.55", "-68.5658, -315.309, -12.1097, 0.28", "-68.2448, -316.493, -11.9052, 0.55", "-67.7025, -319.042, -11.7139, 0.28", "-67.5476, -320.269, -11.6577, 0.55", "-67.5679, -324.358, -11.5118, 0.28", "-67.8104, -327.277, -11.3806, 0.28", "-67.9733, -328.314, -11.3152, 0.83", "-68.7868, -332.361, -10.9375, 0.28", "-69.2145, -334.115, -10.7076, 0.55", "-70.5679, -339.042, -9.96143, 0.28", "-71.071, -340.731, -9.63208, 0.55", "-71.6687, -342.512, -9.37526, 0.28", "-72.1593, -343.899, -9.25328, 0.55", "-72.7304, -345.478, -9.13671, 0.28", "-73.4302, -347.525, -9.0818, 0.28", "-73.7932, -348.594, -9.1555, 0.55", "-75.3284, -352.946, -9.77082, 0.28", "-75.5946, -353.683, -9.97358, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-63.9069, -302.156, -26.0196, 0.28", "-61.7201, -303.311, -27.3452, 0.28", "-60.1243, -304.166, -28.3591, 0.28", "-59.3809, -304.504, -28.8176, 0.55", "-57.6098, -305.254, -29.8857, 0.28", "-56.7654, -305.551, -30.3088, 0.55", "-54.5238, -306.235, -31.2769, 0.28", "-53.9727, -306.371, -31.4494, 0.55", "-51.5898, -306.8, -31.9449, 0.28", "-51.2481, -306.844, -31.9917, 0.55", "-48.5812, -307.121, -32.2229, 0.28", "-47.5957, -307.24, -32.2944, 0.55", "-43.6909, -307.851, -32.534, 0.28", "-42.8441, -308.037, -32.5932, 0.55", "-40.2239, -308.81, -32.8153, 0.28", "-38.3123, -309.531, -33.062, 0.28", "-37.1096, -310.116, -33.3081, 0.55", "-35.256, -311.233, -33.9019, 0.28", "-34.3413, -311.919, -34.3239, 0.28", "-33.8244, -312.353, -34.6387, 0.55", "-32.1851, -313.904, -35.9006, 0.28", "-31.6069, -314.48, -36.3749, 0.83", "-29.3616, -316.739, -38.3379, 0.28", "-29.1495, -316.953, -38.5409, 0.55", "-27.5016, -318.563, -40.1902, 0.28", "-27.3411, -318.714, -40.354, 0.55", "-25.8892, -320.096, -41.9113, 0.28", "-25.2461, -320.691, -42.4883, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-63.9069, -302.156, -26.0196, 0.28", "-62.3674, -309.821, -29.878, 0.28", "-62.0406, -311.258, -30.4559, 0.55", "-61.4118, -314.253, -31.5453, 0.28", "-61.289, -314.822, -31.6898, 0.55", "-60.9236, -316.725, -32.0657, 0.28", "-60.7616, -317.634, -32.2225, 0.55", "-60.2464, -320.522, -32.2727, 0.28", "-60.1031, -321.473, -32.3337, 0.55", "-59.5378, -325.653, -32.7293, 0.28", "-59.173, -328.01, -32.9556, 0.28", "-59.0606, -328.783, -33.0254, 0.55", "-58.5999, -332.16, -33.251, 0.28", "-58.5135, -332.894, -33.2635, 0.55", "-58.3214, -335.2, -33.2633, 0.28", "-58.3132, -336.975, -33.1554, 0.55", "-58.521, -340.567, -32.6917, 0.28", "-58.6004, -341.44, -32.5528, 0.55", "-59.1559, -345.142, -31.7854, 0.28", "-59.4387, -346.536, -31.4393, 0.83", "-60.3412, -349.521, -30.5448, 0.28", "-60.6689, -350.35, -30.2438, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_LBC_a6205ed0df_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999999997358825)
    connect dend_32(0), soma_0(0.4999999997358825)
    connect dend_31(0), soma_0(0.4999999997358825)
    connect dend_30(0), soma_0(0.4999999997358825)
    connect dend_25(0), soma_0(0.4999999997358825)
    connect dend_19(0), soma_0(0.4999999997358825)
    connect dend_0(0), soma_0(0.4999999997358825)
    connect axon_0(0), soma_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0460118, 9.4193, 0.0420007, 3.85614 ) }
    soma_0 { pt3dadd( -0.0586314, 8.45043, 0.0375696, 7.03826 ) }
    soma_0 { pt3dadd( -0.0712511, 7.48157, 0.0331385, 8.2185 ) }
    soma_0 { pt3dadd( -0.0838708, 6.51271, 0.0287073, 9.16918 ) }
    soma_0 { pt3dadd( -0.0964904, 5.54385, 0.0242762, 10.0966 ) }
    soma_0 { pt3dadd( -0.10911, 4.57499, 0.0198451, 11.2325 ) }
    soma_0 { pt3dadd( -0.12173, 3.60613, 0.0154139, 12.296 ) }
    soma_0 { pt3dadd( -0.134349, 2.63727, 0.0109828, 12.2546 ) }
    soma_0 { pt3dadd( -0.146969, 1.66841, 0.00655169, 11.6979 ) }
    soma_0 { pt3dadd( -0.159589, 0.69955, 0.00212056, 10.9264 ) }
    soma_0 { pt3dadd( -0.172208, -0.26931, -0.00231057, 9.80041 ) }
    soma_0 { pt3dadd( -0.184828, -1.23817, -0.0067417, 8.57664 ) }
    soma_0 { pt3dadd( -0.197448, -2.20703, -0.0111728, 7.89172 ) }
    soma_0 { pt3dadd( -0.210067, -3.17589, -0.015604, 7.62756 ) }
    soma_0 { pt3dadd( -0.222687, -4.14475, -0.0200351, 7.36341 ) }
    soma_0 { pt3dadd( -0.235307, -5.11361, -0.0244662, 7.04275 ) }
    soma_0 { pt3dadd( -0.247926, -6.08247, -0.0288973, 6.5615 ) }
    soma_0 { pt3dadd( -0.260546, -7.05133, -0.0333285, 5.89923 ) }
    soma_0 { pt3dadd( -0.273166, -8.02019, -0.0377596, 4.92342 ) }
    soma_0 { pt3dadd( -0.285785, -8.98905, -0.0421907, 3.8632 ) }
    soma_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 2.78029 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.117947, 7.40719, 10.3203, 0.55 ) }
    dend_33 { pt3dadd( 0.240213, 10.0282, 11.0465, 0.55 ) }
    dend_33 { pt3dadd( 0.942661, 12.8777, 12.4796, 0.55 ) }
    dend_33 { pt3dadd( 1.62696, 15.0498, 13.8512, 0.55 ) }
    dend_33 { pt3dadd( 2.24186, 17.0016, 15.0837, 0.55 ) }
    dend_33 { pt3dadd( 3.19599, 20.0302, 16.9962, 0.55 ) }
    dend_33 { pt3dadd( 4.41455, 23.8981, 19.4387, 0.55 ) }
    dend_33 { pt3dadd( 5.68553, 27.0085, 21.9214, 0.55 ) }
    dend_33 { pt3dadd( 6.6966, 28.8285, 23.7465, 2.49 ) }
    dend_33 { pt3dadd( 9.91664, 39.2586, 28.6299, 2.49 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.57205, 2.64019, -8.5197, 0.55 ) }
    dend_32 { pt3dadd( 4.63793, 5.7021, -8.75993, 0.55 ) }
    dend_32 { pt3dadd( 7.51938, 8.28964, -9.03062, 0.55 ) }
    dend_32 { pt3dadd( 11.5524, 11.4303, -9.48887, 0.55 ) }
    dend_32 { pt3dadd( 13.9491, 13.139, -9.80092, 0.28 ) }
    dend_32 { pt3dadd( 15.6986, 14.2647, -10.0441, 0.55 ) }
    dend_32 { pt3dadd( 18.7752, 16.0755, -10.4903, 0.28 ) }
    dend_32 { pt3dadd( 20.2977, 16.7326, -10.6872, 0.55 ) }
    dend_32 { pt3dadd( 22.9224, 17.5837, -10.9859, 0.28 ) }
    dend_32 { pt3dadd( 23.4159, 17.7072, -11.0307, 0.83 ) }
    dend_32 { pt3dadd( 25.323, 18.1801, -11.0933, 0.28 ) }
    dend_32 { pt3dadd( 27.3127, 18.7595, -11.0289, 0.28 ) }
    dend_32 { pt3dadd( 30.0614, 19.8548, -10.7215, 0.55 ) }
    dend_32 { pt3dadd( 31.9405, 20.8616, -10.4287, 0.28 ) }
    dend_32 { pt3dadd( 32.7116, 21.4693, -10.2332, 0.55 ) }
    dend_32 { pt3dadd( 34.5127, 23.2935, -9.66617, 0.28 ) }
    dend_32 { pt3dadd( 35.4236, 24.4265, -9.36228, 0.55 ) }
    dend_32 { pt3dadd( 37.04, 26.7716, -8.82742, 0.28 ) }
    dend_32 { pt3dadd( 37.7633, 27.9417, -8.60025, 0.55 ) }
    dend_32 { pt3dadd( 39.7953, 31.5727, -7.86811, 0.28 ) }
    dend_32 { pt3dadd( 40.6597, 33.2946, -7.5474, 0.55 ) }
    dend_32 { pt3dadd( 41.6528, 35.5548, -7.17093, 0.28 ) }
    dend_32 { pt3dadd( 42.2541, 36.922, -6.93183, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.89205, 6.52519, -1.4497, 0.55 ) }
    dend_31 { pt3dadd( 6.55588, 8.23595, -1.82632, 0.55 ) }
    dend_31 { pt3dadd( 8.96983, 9.79237, -2.27095, 0.55 ) }
    dend_31 { pt3dadd( 11.1902, 11.0849, -2.71621, 0.83 ) }
    dend_31 { pt3dadd( 14.3504, 12.7791, -3.30006, 0.83 ) }
    dend_31 { pt3dadd( 16.6508, 13.8858, -3.70247, 1.11 ) }
    dend_31 { pt3dadd( 19.3084, 15.0022, -4.10604, 0.55 ) }
    dend_31 { pt3dadd( 21.9812, 15.8685, -4.46671, 0.55 ) }
    dend_31 { pt3dadd( 24.0712, 16.4405, -4.69473, 0.83 ) }
    dend_31 { pt3dadd( 26.4278, 16.9666, -4.88393, 0.55 ) }
    dend_31 { pt3dadd( 29.189, 17.4298, -4.99502, 0.83 ) }
    dend_31 { pt3dadd( 31.4122, 17.7549, -4.98472, 0.55 ) }
    dend_31 { pt3dadd( 32.1784, 17.8533, -4.98263, 0.55 ) }
    dend_31 { pt3dadd( 35.2326, 18.3059, -5.06749, 0.83 ) }
    dend_31 { pt3dadd( 38.2144, 19.0021, -5.33132, 0.83 ) }
    dend_31 { pt3dadd( 40.3272, 19.6472, -5.66046, 0.83 ) }
    dend_31 { pt3dadd( 42.6682, 20.589, -6.13847, 0.83 ) }
    dend_31 { pt3dadd( 44.3128, 21.4027, -6.55173, 0.83 ) }
    dend_31 { pt3dadd( 46.689, 22.8072, -7.24609, 0.83 ) }
    dend_31 { pt3dadd( 48.8102, 24.3336, -7.96653, 0.55 ) }
    dend_31 { pt3dadd( 51.0133, 26.2601, -8.7765, 0.55 ) }
    dend_31 { pt3dadd( 52.1874, 27.3465, -9.22826, 0.55 ) }
    dend_31 { pt3dadd( 54.1913, 29.3035, -10.0557, 0.55 ) }
    dend_31 { pt3dadd( 56.0115, 31.0927, -10.8406, 0.83 ) }
    dend_31 { pt3dadd( 57.8306, 32.8027, -11.656, 0.55 ) }
    dend_31 { pt3dadd( 58.9679, 33.7914, -12.1705, 0.55 ) }
    dend_31 { pt3dadd( 61.0947, 35.5598, -13.1834, 0.55 ) }
    dend_31 { pt3dadd( 63.3958, 37.2205, -14.216, 0.83 ) }
    dend_31 { pt3dadd( 65.8166, 38.8083, -15.1919, 0.55 ) }
    dend_31 { pt3dadd( 66.8496, 39.4461, -15.5533, 0.55 ) }
    dend_31 { pt3dadd( 67.887, 40.0901, -15.8786, 0.55 ) }
    dend_31 { pt3dadd( 68.6986, 40.6309, -16.1136, 0.55 ) }
    dend_31 { pt3dadd( 72.1227, 43.116, -16.9916, 0.55 ) }
    dend_31 { pt3dadd( 75.332, 45.534, -17.6989, 0.28 ) }
    dend_31 { pt3dadd( 76.4131, 46.3977, -17.9351, 0.55 ) }
    dend_31 { pt3dadd( 78.582, 48.2219, -18.4397, 0.28 ) }
    dend_31 { pt3dadd( 79.6484, 49.1349, -18.6967, 0.83 ) }
    dend_31 { pt3dadd( 81.3154, 50.5394, -19.0997, 0.28 ) }
    dend_31 { pt3dadd( 82.1938, 51.2823, -19.3104, 0.83 ) }
    dend_31 { pt3dadd( 83.6502, 52.3906, -19.6494, 0.28 ) }
    dend_31 { pt3dadd( 84.9815, 53.3023, -19.9431, 0.55 ) }
    dend_31 { pt3dadd( 87.1094, 54.6457, -20.3658, 0.28 ) }
    dend_31 { pt3dadd( 89.6784, 56.129, -20.8535, 0.55 ) }
    dend_31 { pt3dadd( 90.6789, 56.695, -21.0336, 0.55 ) }
    dend_31 { pt3dadd( 92.7897, 57.891, -21.402, 0.28 ) }
    dend_31 { pt3dadd( 94.0108, 58.6177, -21.6131, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 95.5915, 59.5998, -21.9028, 0.28 ) }
    dend_31 { pt3dadd( 96.063, 59.9085, -21.9894, 0.55 ) }
    dend_31 { pt3dadd( 97.7527, 61.0103, -22.3221, 0.28 ) }
    dend_31 { pt3dadd( 98.589, 61.5684, -22.4898, 0.83 ) }
    dend_31 { pt3dadd( 100.572, 62.9249, -23.0127, 0.28 ) }
    dend_31 { pt3dadd( 101.704, 63.7444, -23.353, 0.55 ) }
    dend_31 { pt3dadd( 103.058, 64.8248, -23.768, 0.55 ) }
    dend_31 { pt3dadd( 105.347, 66.8218, -24.4793, 0.28 ) }
    dend_31 { pt3dadd( 106.261, 67.6531, -24.7653, 0.83 ) }
    dend_31 { pt3dadd( 109.096, 70.3557, -25.6454, 0.28 ) }
    dend_31 { pt3dadd( 111.015, 72.3099, -26.2436, 0.83 ) }
    dend_31 { pt3dadd( 114.085, 75.6347, -27.1906, 0.28 ) }
    dend_31 { pt3dadd( 115.42, 77.1971, -27.5945, 0.55 ) }
    dend_31 { pt3dadd( 116.534, 78.5821, -27.9035, 0.28 ) }
    dend_31 { pt3dadd( 117.407, 79.6901, -28.1258, 0.55 ) }
    dend_31 { pt3dadd( 118.19, 80.6824, -28.2639, 0.28 ) }
    dend_31 { pt3dadd( 119.398, 82.04, -28.5005, 0.55 ) }
    dend_31 { pt3dadd( 120.429, 83.0486, -28.7137, 0.28 ) }
    dend_31 { pt3dadd( 121.086, 83.6576, -28.8409, 0.55 ) }
    dend_31 { pt3dadd( 122.931, 85.3288, -29.1973, 0.28 ) }
    dend_31 { pt3dadd( 124.24, 86.5324, -29.4458, 0.83 ) }
    dend_31 { pt3dadd( 127.115, 89.3194, -30.0059, 0.28 ) }
    dend_31 { pt3dadd( 127.934, 90.1621, -30.1795, 0.55 ) }
    dend_31 { pt3dadd( 129.313, 91.6586, -30.4772, 0.55 ) }
    dend_31 { pt3dadd( 131.044, 93.7064, -30.8016, 0.28 ) }
    dend_31 { pt3dadd( 132.085, 95.0647, -30.9643, 0.83 ) }
    dend_31 { pt3dadd( 133.54, 97.154, -31.1194, 0.28 ) }
    dend_31 { pt3dadd( 134.328, 98.4158, -31.1169, 0.83 ) }
    dend_31 { pt3dadd( 134.993, 99.5261, -31.0685, 0.83 ) }
    dend_31 { pt3dadd( 136.096, 101.336, -30.8853, 0.28 ) }
    dend_31 { pt3dadd( 136.43, 101.885, -30.8008, 0.55 ) }
    dend_31 { pt3dadd( 138.066, 104.466, -30.3788, 0.28 ) }
    dend_31 { pt3dadd( 138.421, 105.038, -30.281, 0.28 ) }
    dend_31 { pt3dadd( 138.743, 105.591, -30.2313, 0.83 ) }
    dend_31 { pt3dadd( 139.525, 106.982, -30.2505, 0.28 ) }
    dend_31 { pt3dadd( 140.075, 107.963, -30.3469, 0.55 ) }
    dend_31 { pt3dadd( 141.088, 109.671, -30.5701, 0.28 ) }
    dend_31 { pt3dadd( 141.521, 110.372, -30.66, 0.55 ) }
    dend_31 { pt3dadd( 142.813, 112.302, -30.8521, 0.28 ) }
    dend_31 { pt3dadd( 144.705, 114.915, -31.0393, 0.28 ) }
    dend_31 { pt3dadd( 145.319, 115.732, -31.0737, 0.83 ) }
    dend_31 { pt3dadd( 146.731, 117.543, -31.2257, 0.83 ) }
    dend_31 { pt3dadd( 149.044, 120.412, -31.5358, 0.28 ) }
    dend_31 { pt3dadd( 151.727, 123.657, -31.9623, 0.28 ) }
    dend_31 { pt3dadd( 155.115, 127.616, -32.5647, 0.28 ) }
    dend_31 { pt3dadd( 156.966, 129.76, -32.9393, 0.83 ) }
    dend_31 { pt3dadd( 160.106, 133.372, -33.6613, 0.28 ) }
    dend_31 { pt3dadd( 160.501, 133.828, -33.7732, 0.55 ) }
    dend_31 { pt3dadd( 161.346, 134.764, -34.0986, 0.28 ) }
    dend_31 { pt3dadd( 162.155, 135.639, -34.5349, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 50/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.60205, 4.43569, 8.8103, 0.83 ) }
    dend_30 { pt3dadd( 5.59111, 4.29122, 9.44353, 0.83 ) }
    dend_30 { pt3dadd( 6.91204, 4.10548, 9.81442, 0.83 ) }
    dend_30 { pt3dadd( 9.38984, 3.5639, 10.4816, 0.83 ) }
    dend_30 { pt3dadd( 12.957, 2.50877, 11.4221, 0.83 ) }
    dend_30 { pt3dadd( 15.7603, 1.49814, 12.2341, 0.55 ) }
    dend_30 { pt3dadd( 17.5712, 0.755147, 12.7699, 0.55 ) }
    dend_30 { pt3dadd( 19.3144, -0.20165, 13.2939, 0.83 ) }
    dend_30 { pt3dadd( 22.0046, -1.9786, 14.0669, 0.55 ) }
    dend_30 { pt3dadd( 23.3268, -2.99746, 14.4106, 0.83 ) }
    dend_30 { pt3dadd( 24.9338, -4.39034, 14.6832, 0.83 ) }
    dend_30 { pt3dadd( 26.0658, -5.44703, 14.8398, 1.11 ) }
    dend_30 { pt3dadd( 27.2774, -6.74341, 15.0302, 0.55 ) }
    dend_30 { pt3dadd( 28.1832, -7.76835, 15.1638, 0.83 ) }
    dend_30 { pt3dadd( 28.9918, -8.67779, 15.2929, 0.55 ) }
    dend_30 { pt3dadd( 30.7366, -10.5325, 15.611, 0.55 ) }
    dend_30 { pt3dadd( 32.5683, -12.5158, 16.069, 0.55 ) }
    dend_30 { pt3dadd( 33.5594, -13.6287, 16.3926, 0.55 ) }
    dend_30 { pt3dadd( 34.2341, -14.4387, 16.667, 0.55 ) }
    dend_30 { pt3dadd( 35.8427, -16.405, 17.3627, 0.83 ) }
    dend_30 { pt3dadd( 37.7914, -18.6401, 18.2226, 0.83 ) }
    dend_30 { pt3dadd( 39.59, -20.4784, 18.9818, 0.55 ) }
    dend_30 { pt3dadd( 41.2234, -21.9189, 19.6795, 0.55 ) }
    dend_30 { pt3dadd( 43.6271, -23.6746, 20.6929, 0.55 ) }
    dend_30 { pt3dadd( 45.1217, -24.7238, 21.3229, 0.55 ) }
    dend_30 { pt3dadd( 47.0174, -25.9043, 22.0765, 0.55 ) }
    dend_30 { pt3dadd( 48.2301, -26.4891, 22.5658, 0.55 ) }
    dend_30 { pt3dadd( 51.8218, -27.6581, 23.9124, 0.55 ) }
    dend_30 { pt3dadd( 54.021, -28.0292, 24.8211, 0.28 ) }
    dend_30 { pt3dadd( 60.9574, -32.3926, 27.5432, 0.28 ) }
    dend_30 { pt3dadd( 67.7653, -37.2052, 29.8882, 0.28 ) }
    dend_30 { pt3dadd( 74.2541, -42.2581, 32.6364, 0.28 ) }
    dend_30 { pt3dadd( 80.3056, -47.4362, 36.0686, 0.28 ) }
    dend_30 { pt3dadd( 86.2192, -53.433, 38.3634, 0.28 ) }
    dend_30 { pt3dadd( 92.4188, -58.3453, 41.8832, 0.28 ) }
    dend_30 { pt3dadd( 98.8435, -63.9731, 43.5961, 0.28 ) }
    dend_30 { pt3dadd( 103.939, -71.1263, 44.3396, 0.28 ) }
    dend_30 { pt3dadd( 109.786, -77.4805, 45.7998, 0.28 ) }
    dend_30 { pt3dadd( 115.616, -83.9193, 46.9736, 0.28 ) }
    dend_30 { pt3dadd( 121.318, -90.5958, 47.2746, 0.28 ) }
    dend_30 { pt3dadd( 125.464, -98.214, 48.9652, 0.28 ) }
    dend_30 { pt3dadd( 128.437, -106.491, 50.203, 0.28 ) }
    dend_30 { pt3dadd( 132.979, -114.031, 51.0049, 0.28 ) }
    dend_30 { pt3dadd( 137.66, -121.387, 52.3601, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 94/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.497947, -3.61781, -10.1097, 0.83 ) }
    dend_25 { pt3dadd( 0.853804, -2.08267, -10.1553, 0.83 ) }
    dend_25 { pt3dadd( 2.17214, -0.585483, -10.1997, 1.11 ) }
    dend_25 { pt3dadd( 3.97294, 1.45963, -10.2604, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.93795, 5.71669, -5.2197, 0.83 ) }
    dend_19 { pt3dadd( -5.97302, 7.72695, -5.02002, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( -7.16173, 10.0356, -4.79071, 1.38 ) }
    dend_19 { pt3dadd( -8.43829, 12.5149, -4.54444, 0.83 ) }
    dend_19 { pt3dadd( -9.65394, 14.8759, -4.30993, 1.11 ) }
    dend_19 { pt3dadd( -10.6644, 16.8384, -4.11499, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.00795, -10.6633, -1.2597, 3.88 ) }
    dend_0 { pt3dadd( -1.70064, -12.7162, -1.2597, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 6/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.493767, -24.9566, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.97294, 1.45963, -10.2604, 0.83 ) }
    dend_29 { pt3dadd( 6.9868, 2.71406, -10.8417, 0.83 ) }
    dend_29 { pt3dadd( 8.89881, 3.5936, -11.2778, 0.83 ) }
    dend_29 { pt3dadd( 11.1428, 4.70122, -11.8062, 1.11 ) }
    dend_29 { pt3dadd( 15.056, 6.78973, -12.7024, 0.83 ) }
    dend_29 { pt3dadd( 16.5064, 7.66498, -13.0167, 0.83 ) }
    dend_29 { pt3dadd( 19.6241, 9.73247, -13.6693, 1.11 ) }
    dend_29 { pt3dadd( 21.8533, 11.3871, -14.0758, 0.55 ) }
    dend_29 { pt3dadd( 23.2613, 12.5637, -14.3313, 0.55 ) }
    dend_29 { pt3dadd( 25.2953, 14.4171, -14.6829, 0.55 ) }
    dend_29 { pt3dadd( 27.9334, 16.9574, -15.0747, 0.55 ) }
    dend_29 { pt3dadd( 30.2486, 19.2269, -15.3642, 0.83 ) }
    dend_29 { pt3dadd( 31.893, 20.9036, -15.5188, 0.55 ) }
    dend_29 { pt3dadd( 33.8971, 22.9763, -15.7263, 0.83 ) }
    dend_29 { pt3dadd( 35.2095, 24.2473, -15.887, 1.11 ) }
    dend_29 { pt3dadd( 37.6779, 26.435, -16.2173, 0.55 ) }
    dend_29 { pt3dadd( 39.6592, 28.0719, -16.5206, 0.55 ) }
    dend_29 { pt3dadd( 44.253, 31.7176, -17.3043, 0.83 ) }
    dend_29 { pt3dadd( 46.5305, 33.4551, -17.7186, 0.55 ) }
    dend_29 { pt3dadd( 50.0993, 36.0976, -18.396, 0.55 ) }
    dend_29 { pt3dadd( 52.7737, 38.0397, -18.9195, 0.83 ) }
    dend_29 { pt3dadd( 54.9474, 39.6045, -19.3485, 0.55 ) }
    dend_29 { pt3dadd( 57.3194, 41.322, -19.8013, 0.55 ) }
    dend_29 { pt3dadd( 59.4997, 42.932, -20.1926, 0.83 ) }
    dend_29 { pt3dadd( 61.8304, 44.8545, -20.5438, 0.28 ) }
    dend_29 { pt3dadd( 62.5568, 45.5777, -20.6581, 0.55 ) }
    dend_29 { pt3dadd( 63.6307, 46.7598, -20.8104, 0.28 ) }
    dend_29 { pt3dadd( 64.9838, 48.3476, -20.9634, 0.55 ) }
    dend_29 { pt3dadd( 66.892, 50.7668, -21.1878, 0.28 ) }
    dend_29 { pt3dadd( 68.5892, 53.0557, -21.4015, 0.83 ) }
    dend_29 { pt3dadd( 70.5888, 55.8781, -21.787, 0.28 ) }
    dend_29 { pt3dadd( 71.633, 57.3747, -22.031, 0.28 ) }
    dend_29 { pt3dadd( 72.91, 59.2578, -22.4498, 0.83 ) }
    dend_29 { pt3dadd( 75.9555, 63.7809, -23.6565, 0.28 ) }
    dend_29 { pt3dadd( 77.2194, 65.6573, -24.2268, 0.83 ) }
    dend_29 { pt3dadd( 79.4174, 68.9686, -25.3518, 0.28 ) }
    dend_29 { pt3dadd( 80.1428, 70.0346, -25.8129, 0.55 ) }
    dend_29 { pt3dadd( 82.6323, 73.6179, -27.7739, 0.28 ) }
    dend_29 { pt3dadd( 82.9643, 74.0756, -28.0884, 0.83 ) }
    dend_29 { pt3dadd( 83.4578, 74.7093, -28.6201, 0.83 ) }
    dend_29 { pt3dadd( 84.7429, 76.2662, -29.9902, 0.83 ) }
    dend_29 { pt3dadd( 87.4311, 79.5295, -32.7655, 0.55 ) }
    dend_29 { pt3dadd( 90.2848, 83.0194, -35.5938, 0.28 ) }
    dend_29 { pt3dadd( 92.3584, 85.6856, -37.568, 0.83 ) }
    dend_29 { pt3dadd( 94.9907, 89.2366, -40.0046, 0.28 ) }
    dend_29 { pt3dadd( 96.2735, 91.0496, -41.1934, 0.83 ) }
    dend_29 { pt3dadd( 99.1343, 95.1289, -43.7763, 0.28 ) }
    dend_29 { pt3dadd( 100.566, 97.192, -44.9872, 0.83 ) }
    dend_29 { pt3dadd( 103.522, 101.358, -47.3659, 0.28 ) }
    dend_29 { pt3dadd( 104.264, 102.353, -47.9267, 0.55 ) }
    dend_29 { pt3dadd( 107.998, 107.111, -50.6325, 0.28 ) }
    dend_29 { pt3dadd( 108.711, 107.972, -51.1596, 0.83 ) }
    dend_29 { pt3dadd( 110.676, 110.196, -52.5794, 0.28 ) }
    dend_29 { pt3dadd( 111.452, 111.06, -53.157, 0.83 ) }
    dend_29 { pt3dadd( 114.265, 114.011, -55.1326, 0.28 ) }
    dend_29 { pt3dadd( 115.473, 115.43, -56.0056, 0.83 ) }
    dend_29 { pt3dadd( 117.455, 118.067, -57.3592, 0.28 ) }
    dend_29 { pt3dadd( 117.995, 118.884, -57.7086, 0.83 ) }
    dend_29 { pt3dadd( 119.591, 121.551, -58.6756, 0.28 ) }
    dend_29 { pt3dadd( 120.284, 122.767, -59.0845, 0.55 ) }
    dend_29 { pt3dadd( 124.368, 130.145, -61.3399, 0.28 ) }
    dend_29 { pt3dadd( 125.952, 132.899, -62.1206, 1.11 ) }
    dend_29 { pt3dadd( 128.247, 136.612, -63.1081, 0.28 ) }
    dend_29 { pt3dadd( 129.644, 138.679, -63.6156, 0.28 ) }
    dend_29 { pt3dadd( 130.732, 140.178, -63.924, 0.83 ) }
    dend_29 { pt3dadd( 133.093, 143.276, -64.6677, 0.28 ) }
    dend_29 { pt3dadd( 134.547, 145.055, -65.1354, 1.11 ) }
    dend_29 { pt3dadd( 136.972, 148.016, -66.1042, 0.28 ) }
    dend_29 { pt3dadd( 140.301, 152.199, -67.6766, 0.28 ) }
    dend_29 { pt3dadd( 141.268, 153.531, -68.1956, 1.38 ) }
    dend_29 { pt3dadd( 144.267, 158.139, -69.9506, 0.28 ) }
    dend_29 { pt3dadd( 144.724, 158.934, -70.2735, 0.55 ) }
    dend_29 { pt3dadd( 145.495, 160.488, -70.9161, 0.28 ) }
    dend_29 { pt3dadd( 146.295, 162.249, -71.6542, 0.55 ) }
    dend_29 { pt3dadd( 148.296, 166.259, -73.3114, 0.28 ) }
    dend_29 { pt3dadd( 148.993, 167.471, -73.7564, 0.83 ) }
    dend_29 { pt3dadd( 149.969, 168.865, -74.2259, 0.28 ) }
    dend_29 { pt3dadd( 150.799, 169.903, -74.5068, 0.55 ) }
    dend_29 { pt3dadd( 153.487, 172.786, -75.5621, 0.28 ) }
    dend_29 { pt3dadd( 156.928, 175.948, -77.1111, 0.28 ) }
    dend_29 { pt3dadd( 157.747, 176.592, -77.5915, 0.55 ) }
    dend_29 { pt3dadd( 160.495, 178.579, -79.522, 0.28 ) }
    dend_29 { pt3dadd( 163.849, 180.843, -82.6497, 0.55 ) }
    dend_29 { pt3dadd( 168.388, 183.704, -88.0663, 0.28 ) }
    dend_29 { pt3dadd( 169.588, 184.413, -89.7921, 0.55 ) }
    dend_29 { pt3dadd( 171.954, 185.665, -93.8624, 0.28 ) }
    dend_29 { pt3dadd( 172.632, 185.991, -95.1528, 0.55 ) }
    dend_29 { pt3dadd( 175.083, 187.038, -100.677, 0.28 ) }
    dend_29 { pt3dadd( 175.56, 187.218, -101.968, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.97294, 1.45963, -10.2604, 0.55 ) }
    dend_26 { pt3dadd( 4.04864, 0.997647, -11.0146, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( 4.27509, 0.0689631, -12.8197, 0.55 ) }
    dend_26 { pt3dadd( 4.69222, -0.84015, -14.7263, 0.83 ) }
    dend_26 { pt3dadd( 5.21097, -1.76328, -16.8127, 0.55 ) }
    dend_26 { pt3dadd( 5.83129, -2.96976, -19.4133, 0.55 ) }
    dend_26 { pt3dadd( 6.03372, -3.39196, -20.308, 0.55 ) }
    dend_26 { pt3dadd( 6.69289, -4.67483, -23.069, 0.83 ) }
    dend_26 { pt3dadd( 7.10847, -5.52569, -24.8337, 0.83 ) }
    dend_26 { pt3dadd( 7.45529, -6.57314, -26.645, 0.83 ) }
    dend_26 { pt3dadd( 7.6875, -7.51038, -27.9867, 1.11 ) }
    dend_26 { pt3dadd( 7.98575, -8.87121, -29.6922, 0.55 ) }
    dend_26 { pt3dadd( 8.14953, -9.9371, -30.908, 0.55 ) }
    dend_26 { pt3dadd( 8.27237, -11.7513, -32.7834, 1.11 ) }
    dend_26 { pt3dadd( 8.26405, -14.4755, -35.4387, 0.28 ) }
    dend_26 { pt3dadd( 8.23599, -15.1051, -36.0368, 0.55 ) }
    dend_26 { pt3dadd( 8.03243, -17.345, -38.0981, 0.28 ) }
    dend_26 { pt3dadd( 7.89978, -18.2752, -38.9087, 1.11 ) }
    dend_26 { pt3dadd( 7.24985, -21.5526, -41.7446, 0.28 ) }
    dend_26 { pt3dadd( 6.93091, -22.9045, -42.8913, 0.28 ) }
    dend_26 { pt3dadd( 6.41529, -24.6133, -44.3105, 1.11 ) }
    dend_26 { pt3dadd( 5.77775, -26.3678, -45.8024, 0.28 ) }
    dend_26 { pt3dadd( 5.41912, -27.1579, -46.5165, 0.55 ) }
    dend_26 { pt3dadd( 4.07167, -29.7948, -49.0236, 0.28 ) }
    dend_26 { pt3dadd( 3.58263, -30.6749, -49.9424, 1.38 ) }
    dend_26 { pt3dadd( 2.97186, -31.7862, -51.2175, 0.28 ) }
    dend_26 { pt3dadd( 2.32256, -33.0108, -52.724, 0.83 ) }
    dend_26 { pt3dadd( 1.44372, -34.6687, -54.9119, 0.28 ) }
    dend_26 { pt3dadd( 1.21033, -35.144, -55.5899, 0.83 ) }
    dend_26 { pt3dadd( 0.278729, -37.2814, -58.7775, 0.28 ) }
    dend_26 { pt3dadd( 0.0873739, -37.7919, -59.6683, 0.28 ) }
    dend_26 { pt3dadd( -0.10849, -38.3328, -60.6845, 0.55 ) }
    dend_26 { pt3dadd( -0.291564, -38.8476, -61.769, 0.55 ) }
    dend_26 { pt3dadd( -1.06213, -40.9586, -66.4259, 0.28 ) }
    dend_26 { pt3dadd( -1.13608, -41.1288, -66.8228, 0.83 ) }
    dend_26 { pt3dadd( -2.46564, -43.7808, -73.0871, 0.28 ) }
    dend_26 { pt3dadd( -2.69208, -44.1797, -74.0322, 0.83 ) }
    dend_26 { pt3dadd( -3.79906, -45.9793, -78.0831, 0.28 ) }
    dend_26 { pt3dadd( -4.00466, -46.3122, -78.7937, 0.83 ) }
    dend_26 { pt3dadd( -5.02999, -47.9669, -81.938, 0.28 ) }
    dend_26 { pt3dadd( -5.26002, -48.3414, -82.6105, 0.83 ) }
    dend_26 { pt3dadd( -6.34564, -50.1643, -85.4195, 0.28 ) }
    dend_26 { pt3dadd( -6.73096, -50.834, -86.4335, 0.83 ) }
    dend_26 { pt3dadd( -8.27731, -53.5147, -90.0166, 0.28 ) }
    dend_26 { pt3dadd( -8.46387, -53.8537, -90.4715, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.6644, 16.8384, -4.11499, 0.55 ) }
    dend_20 { pt3dadd( -13.1444, 19.0706, -2.74638, 0.55 ) }
    dend_20 { pt3dadd( -14.7149, 20.5595, -1.94539, 0.83 ) }
    dend_20 { pt3dadd( -16.037, 21.7989, -1.34892, 0.28 ) }
    dend_20 { pt3dadd( -16.8971, 22.5632, -1.01685, 0.83 ) }
    dend_20 { pt3dadd( -18.8029, 24.2708, -0.384351, 0.55 ) }
    dend_20 { pt3dadd( -20.3793, 25.5961, 0.0697112, 1.11 ) }
    dend_20 { pt3dadd( -21.7199, 26.6589, 0.424718, 0.83 ) }
    dend_20 { pt3dadd( -23.0684, 27.6877, 0.753175, 0.83 ) }
    dend_20 { pt3dadd( -24.9566, 29.0693, 1.12426, 0.83 ) }
    dend_20 { pt3dadd( -27.1277, 30.5641, 1.45344, 0.83 ) }
    dend_20 { pt3dadd( -29.432, 32.0232, 1.67214, 0.83 ) }
    dend_20 { pt3dadd( -31.8221, 33.4425, 1.97476, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.70064, -12.7162, -1.2597, 1.11 ) }
    dend_16 { pt3dadd( 0.506392, -17.0622, -1.16136, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.70064, -12.7162, -1.2597, 1.38 ) }
    dend_1 { pt3dadd( -2.24135, -13.7012, -1.00545, 1.38 ) }
    dend_1 { pt3dadd( -3.69914, -16.3567, -0.319986, 1.38 ) }
    dend_1 { pt3dadd( -5.85387, -20.2818, 0.6932, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -0.884491, -54.9541, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -1.07985, -69.9528, -0.0466218, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 65/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.46387, -53.8537, -90.4715, 0.28 ) }
    dend_28 { pt3dadd( -10.2286, -56.3247, -91.9902, 0.28 ) }
    dend_28 { pt3dadd( -10.9635, -57.3536, -92.6226, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 68/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.46387, -53.8537, -90.4715, 0.28 ) }
    dend_27 { pt3dadd( -8.75271, -58.1498, -88.4465, 0.28 ) }
    dend_27 { pt3dadd( -8.80771, -59.2574, -87.9477, 0.83 ) }
    dend_27 { pt3dadd( -9.05311, -62.3325, -86.5173, 0.28 ) }
    dend_27 { pt3dadd( -9.36482, -64.9656, -85.2792, 0.28 ) }
    dend_27 { pt3dadd( -9.54252, -66.0344, -84.4237, 0.83 ) }
    dend_27 { pt3dadd( -9.91462, -68.1222, -82.5191, 0.28 ) }
    dend_27 { pt3dadd( -10.0171, -68.664, -81.9907, 0.83 ) }
    dend_27 { pt3dadd( -10.6002, -71.7651, -78.7647, 0.28 ) }
    dend_27 { pt3dadd( -10.8507, -73.1548, -77.2888, 0.83 ) }
    dend_27 { pt3dadd( -12.598, -81.4334, -68.2756, 0.28 ) }
    dend_27 { pt3dadd( -12.811, -82.4337, -67.1306, 0.55 ) }
    dend_27 { pt3dadd( -13.1528, -83.923, -65.3409, 0.28 ) }
    dend_27 { pt3dadd( -13.1994, -84.1364, -65.0717, 0.55 ) }
    dend_27 { pt3dadd( -13.4615, -85.7064, -62.9421, 0.28 ) }
    dend_27 { pt3dadd( -13.5369, -86.4265, -62.0087, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 84/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -31.8221, 33.4425, 1.97476, 0.83 ) }
    dend_24 { pt3dadd( -33.0085, 34.8284, 2.05547, 0.83 ) }
    dend_24 { pt3dadd( -33.8435, 35.8038, 2.11228, 0.83 ) }
    dend_24 { pt3dadd( -34.7499, 36.8627, 2.17394, 0.28 ) }
    dend_24 { pt3dadd( -35.2759, 37.4772, 2.20973, 0.83 ) }
    dend_24 { pt3dadd( -40.3717, 44.2229, 3.90913, 0.83 ) }
    dend_24 { pt3dadd( -44.2687, 52.004, 4.07032, 0.83 ) }
    dend_24 { pt3dadd( -48.719, 59.4005, 3.23251, 0.83 ) }
    dend_24 { pt3dadd( -52.1873, 67.0189, 0.896809, 0.83 ) }
    dend_24 { pt3dadd( -56.2268, 73.812, -2.56084, 0.83 ) }
    dend_24 { pt3dadd( -58.705, 81.1252, -6.49485, 0.83 ) }
    dend_24 { pt3dadd( -61.2834, 88.6858, -9.90564, 0.83 ) }
    dend_24 { pt3dadd( -63.15, 95.7852, -14.4804, 0.83 ) }
    dend_24 { pt3dadd( -63.541, 103.769, -17.9671, 0.83 ) }
    dend_24 { pt3dadd( -63.1621, 111.64, -21.6819, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 99/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -31.8221, 33.4425, 1.97476, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -32.43, 36.3007, 1.24236, 0.55 ) }
    dend_21 { pt3dadd( -33.106, 39.0474, 0.582701, 0.55 ) }
    dend_21 { pt3dadd( -33.427, 40.3066, 0.296501, 1.11 ) }
    dend_21 { pt3dadd( -33.9271, 42.4214, -0.142221, 0.28 ) }
    dend_21 { pt3dadd( -34.2937, 43.9313, -0.472917, 0.83 ) }
    dend_21 { pt3dadd( -34.9825, 46.5467, -1.18017, 0.55 ) }
    dend_21 { pt3dadd( -36.021, 49.7712, -2.19185, 0.83 ) }
    dend_21 { pt3dadd( -37.6473, 53.3712, -3.65906, 0.28 ) }
    dend_21 { pt3dadd( -38.977, 55.6842, -4.81328, 0.28 ) }
    dend_21 { pt3dadd( -39.8462, 56.8512, -5.47727, 0.55 ) }
    dend_21 { pt3dadd( -42.448, 59.4621, -7.16497, 0.55 ) }
    dend_21 { pt3dadd( -45.371, 61.6423, -8.77557, 0.83 ) }
    dend_21 { pt3dadd( -49.963, 64.2402, -11.035, 0.55 ) }
    dend_21 { pt3dadd( -52.2294, 65.2779, -11.982, 0.28 ) }
    dend_21 { pt3dadd( -55.232, 66.483, -13.0434, 0.83 ) }
    dend_21 { pt3dadd( -58.9956, 67.9579, -14.1872, 0.55 ) }
    dend_21 { pt3dadd( -61.1754, 68.7997, -14.7275, 0.55 ) }
    dend_21 { pt3dadd( -63.2471, 69.6856, -15.1783, 0.83 ) }
    dend_21 { pt3dadd( -65.8254, 70.944, -15.5194, 0.28 ) }
    dend_21 { pt3dadd( -67.395, 71.7603, -15.6952, 0.55 ) }
    dend_21 { pt3dadd( -70.4652, 73.4785, -15.9977, 0.28 ) }
    dend_21 { pt3dadd( -71.6898, 74.2441, -16.1149, 0.55 ) }
    dend_21 { pt3dadd( -73.6684, 75.4942, -16.2676, 0.55 ) }
    dend_21 { pt3dadd( -77.9774, 78.1915, -16.5361, 0.28 ) }
    dend_21 { pt3dadd( -80.2731, 79.6154, -16.6833, 0.83 ) }
    dend_21 { pt3dadd( -83.9875, 82.0434, -16.9101, 0.28 ) }
    dend_21 { pt3dadd( -89.0307, 85.4959, -17.2477, 0.28 ) }
    dend_21 { pt3dadd( -92.6509, 88.1611, -17.5714, 0.83 ) }
    dend_21 { pt3dadd( -97.1031, 91.7271, -18.0606, 0.28 ) }
    dend_21 { pt3dadd( -98.7798, 93.2492, -18.2792, 0.83 ) }
    dend_21 { pt3dadd( -101.991, 96.43, -18.6968, 0.28 ) }
    dend_21 { pt3dadd( -103.784, 98.4006, -19.0004, 0.55 ) }
    dend_21 { pt3dadd( -106.812, 102.027, -19.6181, 0.28 ) }
    dend_21 { pt3dadd( -108.214, 103.916, -19.9748, 0.55 ) }
    dend_21 { pt3dadd( -109.174, 105.246, -20.2414, 0.28 ) }
    dend_21 { pt3dadd( -110.196, 106.597, -20.53, 0.55 ) }
    dend_21 { pt3dadd( -113.26, 110.316, -21.6615, 0.28 ) }
    dend_21 { pt3dadd( -114.678, 111.908, -22.2662, 0.55 ) }
    dend_21 { pt3dadd( -116.098, 113.356, -23.046, 0.28 ) }
    dend_21 { pt3dadd( -117.926, 115.066, -24.1404, 0.28 ) }
    dend_21 { pt3dadd( -119.738, 116.626, -25.2934, 0.55 ) }
    dend_21 { pt3dadd( -122.875, 119.282, -27.4543, 0.28 ) }
    dend_21 { pt3dadd( -123.581, 119.862, -27.9382, 0.55 ) }
    dend_21 { pt3dadd( -126.308, 122.131, -29.7998, 0.28 ) }
    dend_21 { pt3dadd( -128.068, 123.603, -31.0267, 0.83 ) }
    dend_21 { pt3dadd( -132.44, 127.315, -34.1469, 0.28 ) }
    dend_21 { pt3dadd( -134.441, 128.935, -35.5701, 0.83 ) }
    dend_21 { pt3dadd( -137.966, 131.736, -38.0135, 0.28 ) }
    dend_21 { pt3dadd( -140.179, 133.498, -39.5427, 0.28 ) }
    dend_21 { pt3dadd( -140.712, 133.924, -39.887, 0.55 ) }
    dend_21 { pt3dadd( -142.341, 135.217, -40.9024, 0.28 ) }
    dend_21 { pt3dadd( -145.122, 137.389, -42.5208, 1.11 ) }
    dend_21 { pt3dadd( -150.44, 141.425, -45.3843, 0.28 ) }
    dend_21 { pt3dadd( -150.868, 141.748, -45.5969, 0.55 ) }
    dend_21 { pt3dadd( -153.912, 143.965, -46.9359, 0.28 ) }
    dend_21 { pt3dadd( -154.538, 144.392, -47.1825, 0.55 ) }
    dend_21 { pt3dadd( -156.216, 145.397, -47.7871, 0.28 ) }
    dend_21 { pt3dadd( -157.289, 145.869, -48.2885, 0.55 ) }
    dend_21 { pt3dadd( -158.897, 146.212, -49.2309, 0.28 ) }
    dend_21 { pt3dadd( -159.94, 146.367, -49.9267, 0.55 ) }
    dend_21 { pt3dadd( -163.061, 146.637, -52.1854, 0.28 ) }
    dend_21 { pt3dadd( -165.589, 146.842, -53.9901, 0.83 ) }
    dend_21 { pt3dadd( -170.894, 147.343, -57.7702, 0.28 ) }
    dend_21 { pt3dadd( -172.046, 147.617, -58.5733, 0.55 ) }
    dend_21 { pt3dadd( -174.268, 148.453, -60.0788, 0.28 ) }
    dend_21 { pt3dadd( -175.214, 148.978, -60.6027, 0.55 ) }
    dend_21 { pt3dadd( -176.86, 150.255, -61.2377, 0.28 ) }
    dend_21 { pt3dadd( -178.505, 151.773, -61.7013, 0.83 ) }
    dend_21 { pt3dadd( -183.618, 157.268, -62.4922, 0.28 ) }
    dend_21 { pt3dadd( -184.45, 158.256, -62.614, 0.55 ) }
    dend_21 { pt3dadd( -186.92, 161.506, -62.9133, 0.28 ) }
    dend_21 { pt3dadd( -188.187, 163.319, -63.0517, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 0.506392, -17.0622, -1.16136, 0.83 ) }
    dend_18 { pt3dadd( 0.359471, -18.9346, -1.18441, 0.83 ) }
    dend_18 { pt3dadd( 0.267214, -20.3678, -1.13369, 0.28 ) }
    dend_18 { pt3dadd( 0.163718, -22.8524, -0.935248, 1.11 ) }
    dend_18 { pt3dadd( 0.147895, -25.9294, -0.556828, 0.55 ) }
    dend_18 { pt3dadd( 0.162607, -29.6926, -0.0123321, 0.55 ) }
    dend_18 { pt3dadd( 0.243241, -32.3322, 0.412595, 1.11 ) }
    dend_18 { pt3dadd( 0.551666, -37.0333, 1.42997, 1.11 ) }
    dend_18 { pt3dadd( 0.797751, -39.9121, 2.18836, 0.83 ) }
    dend_18 { pt3dadd( 1.1537, -42.9366, 3.13982, 0.83 ) }
    dend_18 { pt3dadd( 1.28527, -43.8355, 3.45747, 0.83 ) }
    dend_18 { pt3dadd( 1.80452, -47.2304, 4.69232, 0.83 ) }
    dend_18 { pt3dadd( 2.32427, -50.5467, 6.00641, 0.83 ) }
    dend_18 { pt3dadd( 2.63072, -52.8159, 6.92031, 0.83 ) }
    dend_18 { pt3dadd( 2.88589, -55.3784, 8.02079, 0.83 ) }
    dend_18 { pt3dadd( 3.04454, -58.1565, 9.26531, 0.83 ) }
    dend_18 { pt3dadd( 3.15716, -61.2586, 10.7742, 0.83 ) }
    dend_18 { pt3dadd( 3.28643, -65.5615, 12.9797, 0.83 ) }
    dend_18 { pt3dadd( 3.48743, -69.0306, 14.8257, 0.83 ) }
    dend_18 { pt3dadd( 3.89465, -72.8941, 17.1143, 0.83 ) }
    dend_18 { pt3dadd( 4.41692, -76.4283, 19.3277, 0.83 ) }
    dend_18 { pt3dadd( 5.02799, -79.1513, 21.1084, 0.83 ) }
    dend_18 { pt3dadd( 5.51201, -80.8198, 22.1762, 0.83 ) }
    dend_18 { pt3dadd( 6.12863, -82.5905, 23.285, 0.83 ) }
    dend_18 { pt3dadd( 6.74074, -83.9301, 24.1881, 0.55 ) }
    dend_18 { pt3dadd( 8.22131, -86.5517, 25.7124, 0.83 ) }
    dend_18 { pt3dadd( 9.77243, -88.8479, 26.9972, 0.55 ) }
    dend_18 { pt3dadd( 11.1343, -91.1124, 28.0418, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( 11.4205, -101.743, 33.9872, 0.83 ) }
    dend_18 { pt3dadd( 11.2399, -111.794, 40.7902, 0.83 ) }
    dend_18 { pt3dadd( 12.0485, -120.744, 48.8308, 0.83 ) }
    dend_18 { pt3dadd( 14.4506, -128.771, 57.4204, 0.83 ) }
    dend_18 { pt3dadd( 18.1828, -135.186, 66.7335, 0.83 ) }
    dend_18 { pt3dadd( 20.7012, -139.247, 77.5316, 0.83 ) }
    dend_18 { pt3dadd( 25.0219, -142.646, 87.9598, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 7/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.506392, -17.0622, -1.16136, 0.83 ) }
    dend_17 { pt3dadd( 2.31526, -18.3064, -0.537975, 0.83 ) }
    dend_17 { pt3dadd( 4.86051, -19.8672, 0.39166, 0.83 ) }
    dend_17 { pt3dadd( 5.86595, -20.4995, 0.814823, 0.83 ) }
    dend_17 { pt3dadd( 7.44677, -21.4935, 1.48745, 0.55 ) }
    dend_17 { pt3dadd( 8.37973, -22.1196, 1.88416, 1.11 ) }
    dend_17 { pt3dadd( 9.90173, -23.1626, 2.52542, 0.83 ) }
    dend_17 { pt3dadd( 12.0777, -24.6837, 3.40039, 0.83 ) }
    dend_17 { pt3dadd( 14.2276, -26.2617, 4.23068, 0.83 ) }
    dend_17 { pt3dadd( 16.6206, -28.1759, 4.99631, 0.83 ) }
    dend_17 { pt3dadd( 18.5401, -29.8785, 5.50047, 0.55 ) }
    dend_17 { pt3dadd( 19.468, -30.798, 5.66939, 0.83 ) }
    dend_17 { pt3dadd( 20.811, -32.2392, 5.77382, 0.28 ) }
    dend_17 { pt3dadd( 21.8077, -33.3439, 5.74042, 0.55 ) }
    dend_17 { pt3dadd( 23.6233, -35.0678, 5.54793, 0.28 ) }
    dend_17 { pt3dadd( 23.9449, -35.3276, 5.5253, 0.83 ) }
    dend_17 { pt3dadd( 25.6352, -36.5234, 5.54822, 0.28 ) }
    dend_17 { pt3dadd( 26.3612, -37.0061, 5.6392, 0.28 ) }
    dend_17 { pt3dadd( 28.1023, -38.0884, 6.0251, 0.83 ) }
    dend_17 { pt3dadd( 30.9795, -39.8038, 6.9009, 0.83 ) }
    dend_17 { pt3dadd( 32.9446, -40.9588, 7.54817, 0.55 ) }
    dend_17 { pt3dadd( 35.1419, -42.2379, 8.23837, 0.83 ) }
    dend_17 { pt3dadd( 36.937, -43.1809, 8.81517, 0.28 ) }
    dend_17 { pt3dadd( 37.9828, -43.7098, 9.18181, 0.83 ) }
    dend_17 { pt3dadd( 40.2385, -44.784, 10.0234, 0.28 ) }
    dend_17 { pt3dadd( 42.0799, -45.6144, 10.7777, 0.55 ) }
    dend_17 { pt3dadd( 44.0935, -46.3872, 11.6115, 0.55 ) }
    dend_17 { pt3dadd( 47.2798, -47.3951, 12.9892, 0.55 ) }
    dend_17 { pt3dadd( 49.0098, -47.9222, 13.7808, 0.28 ) }
    dend_17 { pt3dadd( 49.5043, -48.0781, 14.029, 0.55 ) }
    dend_17 { pt3dadd( 51.7334, -48.7154, 15.209, 0.28 ) }
    dend_17 { pt3dadd( 52.953, -49.073, 15.8932, 0.55 ) }
    dend_17 { pt3dadd( 54.0817, -49.4244, 16.4906, 0.28 ) }
    dend_17 { pt3dadd( 55.0047, -49.7617, 16.9261, 0.83 ) }
    dend_17 { pt3dadd( 56.8408, -50.4963, 17.6727, 0.55 ) }
    dend_17 { pt3dadd( 59.3859, -51.6468, 18.6342, 0.55 ) }
    dend_17 { pt3dadd( 61.1953, -52.4942, 19.2379, 0.55 ) }
    dend_17 { pt3dadd( 62.0066, -52.8704, 19.5037, 0.28 ) }
    dend_17 { pt3dadd( 62.4941, -53.1114, 19.658, 0.83 ) }
    dend_17 { pt3dadd( 64.0593, -53.9511, 20.165, 0.83 ) }
    dend_17 { pt3dadd( 65.5657, -54.8808, 20.6699, 0.28 ) }
    dend_17 { pt3dadd( 66.485, -55.5196, 20.9533, 0.55 ) }
    dend_17 { pt3dadd( 68.0033, -56.5328, 21.3865, 0.28 ) }
    dend_17 { pt3dadd( 69.0451, -57.154, 21.6533, 0.83 ) }
    dend_17 { pt3dadd( 70.8396, -58.1291, 22.068, 0.28 ) }
    dend_17 { pt3dadd( 71.5483, -58.5087, 22.2182, 0.55 ) }
    dend_17 { pt3dadd( 73.6432, -59.7481, 22.6255, 0.28 ) }
    dend_17 { pt3dadd( 74.8632, -60.5584, 22.8414, 0.83 ) }
    dend_17 { pt3dadd( 76.0016, -61.3442, 23.0183, 0.28 ) }
    dend_17 { pt3dadd( 77.5212, -62.3942, 23.2397, 0.83 ) }
    dend_17 { pt3dadd( 80.0456, -64.1619, 23.5971, 0.28 ) }
    dend_17 { pt3dadd( 81.7183, -65.3878, 23.8641, 0.55 ) }
    dend_17 { pt3dadd( 83.7837, -67.0641, 24.2785, 0.55 ) }
    dend_17 { pt3dadd( 92.8735, -71.7337, 26.3367, 0.55 ) }
    dend_17 { pt3dadd( 101.225, -77.6557, 28.5863, 0.55 ) }
    dend_17 { pt3dadd( 110.152, -83.0314, 29.4255, 0.55 ) }
    dend_17 { pt3dadd( 119.17, -87.4137, 32.239, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.85387, -20.2818, 0.6932, 1.11 ) }
    dend_5 { pt3dadd( -7.87041, -26.4664, 2.0886, 1.11 ) }
    dend_5 { pt3dadd( -9.06294, -30.1238, 2.91381, 1.11 ) }
    dend_5 { pt3dadd( -10.8945, -35.7409, 4.18118, 1.11 ) }
    dend_5 { pt3dadd( -12.2559, -39.9163, 5.12325, 0.83 ) }
    dend_5 { pt3dadd( -13.8574, -44.8279, 6.23144, 0.83 ) }
    dend_5 { pt3dadd( -15.077, -48.5684, 7.07538, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.85387, -20.2818, 0.6932, 0.83 ) }
    dend_2 { pt3dadd( -10.1402, -19.9978, -1.0378, 0.83 ) }
    dend_2 { pt3dadd( -12.1415, -19.7043, -1.97273, 0.83 ) }
    dend_2 { pt3dadd( -15.2748, -19.0207, -3.45552, 0.55 ) }
    dend_2 { pt3dadd( -18.2426, -18.1142, -4.92925, 0.83 ) }
    dend_2 { pt3dadd( -22.484, -16.6633, -6.92361, 0.55 ) }
    dend_2 { pt3dadd( -28.3136, -14.4872, -9.48794, 0.55 ) }
    dend_2 { pt3dadd( -30.8367, -13.3375, -10.548, 0.55 ) }
    dend_2 { pt3dadd( -32.8036, -12.3382, -11.4257, 0.83 ) }
    dend_2 { pt3dadd( -35.8142, -10.5562, -12.7749, 0.83 ) }
    dend_2 { pt3dadd( -37.8885, -9.17035, -13.5304, 0.55 ) }
    dend_2 { pt3dadd( -39.7271, -7.8272, -14.0443, 0.83 ) }
    dend_2 { pt3dadd( -42.8919, -5.27383, -14.1073, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -188.187, 163.319, -63.0517, 0.28 ) }
    dend_23 { pt3dadd( -185.965, 165.68, -62.4621, 0.28 ) }
    dend_23 { pt3dadd( -185.363, 166.164, -62.2034, 0.83 ) }
    dend_23 { pt3dadd( -184.05, 166.947, -61.3568, 0.55 ) }
    dend_23 { pt3dadd( -182.861, 167.538, -60.6519, 0.55 ) }
    dend_23 { pt3dadd( -180.502, 168.503, -59.3774, 0.28 ) }
    dend_23 { pt3dadd( -179.452, 168.877, -58.8089, 0.55 ) }
    dend_23 { pt3dadd( -176.998, 169.434, -57.7284, 0.55 ) }
    dend_23 { pt3dadd( -173.138, 170.097, -56.3183, 0.28 ) }
    dend_23 { pt3dadd( -170.837, 170.397, -55.4623, 0.55 ) }
    dend_23 { pt3dadd( -168.647, 170.593, -54.7268, 0.28 ) }
    dend_23 { pt3dadd( -167.116, 170.677, -54.403, 0.55 ) }
    dend_23 { pt3dadd( -162.657, 170.955, -54.036, 0.28 ) }
    dend_23 { pt3dadd( -161.557, 171.012, -54.2168, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 98/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -188.187, 163.319, -63.0517, 0.28 ) }
    dend_22 { pt3dadd( -190.3, 166.445, -62.4699, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -191.287, 167.929, -62.1893, 0.83 ) }
    dend_22 { pt3dadd( -192.235, 169.309, -61.9376, 0.28 ) }
    dend_22 { pt3dadd( -192.74, 170.037, -61.7856, 0.55 ) }
    dend_22 { pt3dadd( -194.08, 171.907, -61.3714, 0.28 ) }
    dend_22 { pt3dadd( -194.374, 172.277, -61.3173, 0.55 ) }
    dend_22 { pt3dadd( -195.427, 173.495, -61.2301, 0.28 ) }
    dend_22 { pt3dadd( -196.323, 174.466, -61.1909, 0.55 ) }
    dend_22 { pt3dadd( -197.341, 175.512, -61.235, 0.28 ) }
    dend_22 { pt3dadd( -197.806, 175.97, -61.3198, 0.55 ) }
    dend_22 { pt3dadd( -201.001, 178.948, -62.3278, 0.28 ) }
    dend_22 { pt3dadd( -201.761, 179.65, -62.69, 0.55 ) }
    dend_22 { pt3dadd( -202.662, 180.47, -63.1978, 0.28 ) }
    dend_22 { pt3dadd( -202.969, 180.769, -63.3922, 0.55 ) }
    dend_22 { pt3dadd( -205.302, 183.2, -65.0828, 0.28 ) }
    dend_22 { pt3dadd( -206.192, 184.211, -65.8195, 0.83 ) }
    dend_22 { pt3dadd( -209.323, 188.032, -68.6853, 0.28 ) }
    dend_22 { pt3dadd( -209.947, 188.808, -69.2899, 0.55 ) }
    dend_22 { pt3dadd( -211.034, 190.194, -70.3926, 0.28 ) }
    dend_22 { pt3dadd( -212.065, 191.543, -71.4113, 0.55 ) }
    dend_22 { pt3dadd( -212.982, 192.792, -72.2709, 0.28 ) }
    dend_22 { pt3dadd( -213.535, 193.553, -72.7126, 0.55 ) }
    dend_22 { pt3dadd( -214.81, 195.266, -73.522, 0.28 ) }
    dend_22 { pt3dadd( -215.392, 195.949, -73.7847, 1.38 ) }
    dend_22 { pt3dadd( -218.673, 199.355, -74.8215, 0.28 ) }
    dend_22 { pt3dadd( -219.536, 200.206, -74.9389, 0.55 ) }
    dend_22 { pt3dadd( -220.881, 201.483, -74.9473, 0.28 ) }
    dend_22 { pt3dadd( -221.844, 202.396, -74.9099, 1.94 ) }
    dend_22 { pt3dadd( -225.294, 205.623, -74.5153, 0.28 ) }
    dend_22 { pt3dadd( -225.926, 206.193, -74.4122, 0.55 ) }
    dend_22 { pt3dadd( -228.911, 208.597, -73.6282, 0.28 ) }
    dend_22 { pt3dadd( -229.974, 209.407, -73.336, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.077, -48.5684, 7.07538, 0.83 ) }
    dend_9 { pt3dadd( -16.2392, -52.5489, 7.24804, 0.83 ) }
    dend_9 { pt3dadd( -17.2569, -56.0345, 7.39923, 0.83 ) }
    dend_9 { pt3dadd( -18.0486, -58.7462, 7.51685, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 35/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.077, -48.5684, 7.07538, 0.83 ) }
    dend_6 { pt3dadd( -16.7774, -50.0332, 5.244, 0.83 ) }
    dend_6 { pt3dadd( -18.0437, -51.2821, 3.2966, 0.55 ) }
    dend_6 { pt3dadd( -18.9664, -52.358, 1.49751, 0.83 ) }
    dend_6 { pt3dadd( -19.6132, -53.321, -0.314995, 0.55 ) }
    dend_6 { pt3dadd( -20.0746, -54.0849, -1.76466, 0.55 ) }
    dend_6 { pt3dadd( -20.7233, -55.3496, -4.28362, 0.83 ) }
    dend_6 { pt3dadd( -20.9533, -56.1743, -6.03912, 0.83 ) }
    dend_6 { pt3dadd( -21.0785, -57.0458, -7.91272, 0.55 ) }
    dend_6 { pt3dadd( -21.2271, -58.6952, -11.4352, 0.28 ) }
    dend_6 { pt3dadd( -21.2756, -59.1693, -12.3519, 0.28 ) }
    dend_6 { pt3dadd( -21.4635, -60.2304, -14.1781, 0.83 ) }
    dend_6 { pt3dadd( -21.656, -61.2022, -15.5377, 0.55 ) }
    dend_6 { pt3dadd( -21.7893, -62.1361, -16.7221, 0.83 ) }
    dend_6 { pt3dadd( -21.8787, -62.8939, -17.6535, 0.83 ) }
    dend_6 { pt3dadd( -22.0633, -64.7306, -19.7231, 0.28 ) }
    dend_6 { pt3dadd( -22.1165, -65.4984, -20.6368, 0.83 ) }
    dend_6 { pt3dadd( -22.1269, -66.5288, -21.9037, 0.83 ) }
    dend_6 { pt3dadd( -21.9234, -68.1109, -24.0161, 0.28 ) }
    dend_6 { pt3dadd( -21.6904, -69.2175, -25.6372, 0.83 ) }
    dend_6 { pt3dadd( -21.5185, -69.9839, -26.9281, 0.83 ) }
    dend_6 { pt3dadd( -21.3081, -71.1882, -29.201, 0.28 ) }
    dend_6 { pt3dadd( -21.2762, -71.942, -30.6795, 0.28 ) }
    dend_6 { pt3dadd( -21.3575, -72.3396, -31.4995, 0.55 ) }
    dend_6 { pt3dadd( -21.6053, -73.0316, -32.9061, 0.55 ) }
    dend_6 { pt3dadd( -22.1221, -74.3008, -35.5413, 0.83 ) }
    dend_6 { pt3dadd( -22.5527, -75.1641, -37.254, 0.28 ) }
    dend_6 { pt3dadd( -22.7741, -75.5708, -37.9695, 0.55 ) }
    dend_6 { pt3dadd( -23.4451, -76.8196, -39.9663, 0.28 ) }
    dend_6 { pt3dadd( -23.6396, -77.2301, -40.5651, 0.83 ) }
    dend_6 { pt3dadd( -24.0402, -78.3141, -42.0192, 0.28 ) }
    dend_6 { pt3dadd( -24.1785, -78.7123, -42.5232, 0.55 ) }
    dend_6 { pt3dadd( -24.5554, -79.754, -43.8442, 0.28 ) }
    dend_6 { pt3dadd( -24.7167, -80.1822, -44.3852, 0.83 ) }
    dend_6 { pt3dadd( -25.5547, -82.1933, -46.8724, 0.28 ) }
    dend_6 { pt3dadd( -26.1338, -83.4798, -48.434, 0.83 ) }
    dend_6 { pt3dadd( -27.0916, -85.3813, -50.7302, 0.28 ) }
    dend_6 { pt3dadd( -27.2368, -85.6342, -51.0736, 0.55 ) }
    dend_6 { pt3dadd( -28.0068, -86.9006, -52.8715, 0.28 ) }
    dend_6 { pt3dadd( -28.19, -87.2014, -53.2992, 0.55 ) }
    dend_6 { pt3dadd( -28.8849, -88.4394, -55.0509, 0.28 ) }
    dend_6 { pt3dadd( -29.2758, -89.1901, -56.0796, 1.11 ) }
    dend_6 { pt3dadd( -30.5261, -92.0297, -59.823, 0.28 ) }
    dend_6 { pt3dadd( -30.7011, -92.5196, -60.4564, 0.28 ) }
    dend_6 { pt3dadd( -30.9257, -93.3272, -61.4301, 0.83 ) }
    dend_6 { pt3dadd( -31.4063, -95.6443, -63.926, 0.28 ) }
    dend_6 { pt3dadd( -31.4562, -96.0855, -64.3178, 0.55 ) }
    dend_6 { pt3dadd( -31.5251, -98.1558, -65.8157, 0.28 ) }
    dend_6 { pt3dadd( -31.5046, -99.2386, -66.358, 0.83 ) }
    dend_6 { pt3dadd( -31.4947, -100.548, -66.929, 0.83 ) }
    dend_6 { pt3dadd( -31.5177, -102.341, -67.5242, 0.28 ) }
    dend_6 { pt3dadd( -31.5617, -104.68, -68.0367, 0.28 ) }
    dend_6 { pt3dadd( -31.575, -105.09, -68.1181, 0.83 ) }
    dend_6 { pt3dadd( -31.7076, -107.884, -68.658, 0.28 ) }
    dend_6 { pt3dadd( -31.7441, -108.53, -68.7893, 0.55 ) }
    dend_6 { pt3dadd( -31.8105, -110.391, -69.1867, 0.28 ) }
    dend_6 { pt3dadd( -31.9131, -112.959, -69.7268, 0.28 ) }
    dend_6 { pt3dadd( -31.9507, -114.226, -70.0037, 1.11 ) }
    dend_6 { pt3dadd( -31.9329, -117.444, -70.6983, 0.28 ) }
    dend_6 { pt3dadd( -31.8958, -119.573, -71.1549, 0.28 ) }
    dend_6 { pt3dadd( -31.8789, -120.497, -71.3294, 0.55 ) }
    dend_6 { pt3dadd( -31.8618, -121.55, -71.5054, 0.83 ) }
    dend_6 { pt3dadd( -31.8853, -122.779, -71.7008, 0.83 ) }
    dend_6 { pt3dadd( -32.0441, -126.171, -72.1987, 0.28 ) }
    dend_6 { pt3dadd( -32.1117, -127.038, -72.3449, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -32.2986, -129.205, -72.8072, 0.28 ) }
    dend_6 { pt3dadd( -32.3158, -129.415, -72.8608, 0.83 ) }
    dend_6 { pt3dadd( -32.557, -132.393, -73.7308, 0.28 ) }
    dend_6 { pt3dadd( -32.6355, -133.216, -74.0396, 0.83 ) }
    dend_6 { pt3dadd( -32.9342, -136.297, -75.4207, 0.28 ) }
    dend_6 { pt3dadd( -33.0009, -137.112, -75.793, 1.11 ) }
    dend_6 { pt3dadd( -33.1382, -138.827, -76.5774, 0.28 ) }
    dend_6 { pt3dadd( -33.2141, -139.697, -76.974, 0.83 ) }
    dend_6 { pt3dadd( -33.4689, -142.894, -78.3965, 0.28 ) }
    dend_6 { pt3dadd( -33.5212, -143.43, -78.658, 0.55 ) }
    dend_6 { pt3dadd( -33.7009, -144.732, -79.2934, 0.28 ) }
    dend_6 { pt3dadd( -33.8368, -145.717, -79.754, 0.55 ) }
    dend_6 { pt3dadd( -34.2251, -148.763, -81.1296, 0.28 ) }
    dend_6 { pt3dadd( -34.3257, -149.767, -81.563, 0.55 ) }
    dend_6 { pt3dadd( -34.4599, -151.806, -82.4349, 0.28 ) }
    dend_6 { pt3dadd( -34.4933, -153.097, -83.0168, 0.55 ) }
    dend_6 { pt3dadd( -34.4657, -154.478, -83.6476, 0.55 ) }
    dend_6 { pt3dadd( -34.2183, -158.115, -85.2241, 0.28 ) }
    dend_6 { pt3dadd( -34.1228, -158.889, -85.5439, 0.55 ) }
    dend_6 { pt3dadd( -33.6464, -161.844, -86.7628, 0.28 ) }
    dend_6 { pt3dadd( -33.4404, -162.876, -87.2098, 0.55 ) }
    dend_6 { pt3dadd( -32.9842, -164.994, -88.1843, 0.28 ) }
    dend_6 { pt3dadd( -32.8476, -165.661, -88.5044, 0.55 ) }
    dend_6 { pt3dadd( -32.3591, -168.02, -89.6466, 0.28 ) }
    dend_6 { pt3dadd( -32.2277, -168.79, -90.0319, 0.55 ) }
    dend_6 { pt3dadd( -31.8148, -172.072, -91.6761, 0.28 ) }
    dend_6 { pt3dadd( -31.7285, -173.393, -92.3738, 0.83 ) }
    dend_6 { pt3dadd( -31.7319, -174.747, -93.0948, 0.28 ) }
    dend_6 { pt3dadd( -31.769, -175.428, -93.4485, 0.55 ) }
    dend_6 { pt3dadd( -31.975, -177.173, -94.3212, 0.28 ) }
    dend_6 { pt3dadd( -32.0635, -177.765, -94.6183, 0.55 ) }
    dend_6 { pt3dadd( -32.4446, -179.518, -95.5734, 0.28 ) }
    dend_6 { pt3dadd( -32.6808, -180.572, -96.1747, 0.28 ) }
    dend_6 { pt3dadd( -32.7869, -181.091, -96.4582, 0.83 ) }
    dend_6 { pt3dadd( -33.1808, -183.578, -97.806, 0.28 ) }
    dend_6 { pt3dadd( -33.2944, -184.593, -98.3528, 0.83 ) }
    dend_6 { pt3dadd( -33.4154, -186.876, -99.6421, 0.28 ) }
    dend_6 { pt3dadd( -33.3915, -188.717, -100.693, 0.28 ) }
    dend_6 { pt3dadd( -33.3018, -189.983, -101.43, 0.55 ) }
    dend_6 { pt3dadd( -33.0036, -192.457, -102.845, 0.28 ) }
    dend_6 { pt3dadd( -32.8228, -193.395, -103.378, 0.83 ) }
    dend_6 { pt3dadd( -32.3544, -195.306, -104.426, 0.28 ) }
    dend_6 { pt3dadd( -32.148, -195.96, -104.757, 0.55 ) }
    dend_6 { pt3dadd( -32.0194, -196.37, -104.971, 0.28 ) }
    dend_6 { pt3dadd( -31.904, -196.748, -105.154, 0.55 ) }
    dend_6 { pt3dadd( -31.6629, -197.727, -105.521, 0.55 ) }
    dend_6 { pt3dadd( -31.4064, -199.305, -106.162, 0.83 ) }
    dend_6 { pt3dadd( -31.2114, -200.936, -106.824, 0.28 ) }
    dend_6 { pt3dadd( -31.1411, -201.644, -107.11, 0.55 ) }
    dend_6 { pt3dadd( -30.9855, -203.574, -107.852, 0.28 ) }
    dend_6 { pt3dadd( -30.8905, -205.28, -108.468, 0.83 ) }
    dend_6 { pt3dadd( -30.7981, -208.456, -109.566, 0.28 ) }
    dend_6 { pt3dadd( -30.7998, -209.66, -109.989, 0.28 ) }
    dend_6 { pt3dadd( -30.8801, -212.08, -110.802, 0.83 ) }
    dend_6 { pt3dadd( -30.986, -213.959, -111.377, 0.28 ) }
    dend_6 { pt3dadd( -31.1084, -214.988, -111.658, 0.28 ) }
    dend_6 { pt3dadd( -31.1464, -215.228, -111.712, 0.55 ) }
    dend_6 { pt3dadd( -31.3747, -216.309, -111.832, 0.28 ) }
    dend_6 { pt3dadd( -31.7744, -217.678, -111.959, 0.83 ) }
    dend_6 { pt3dadd( -32.5595, -219.917, -112.13, 0.28 ) }
    dend_6 { pt3dadd( -33.0444, -221.262, -112.224, 0.83 ) }
    dend_6 { pt3dadd( -33.576, -222.789, -112.319, 0.28 ) }
    dend_6 { pt3dadd( -34.2884, -224.971, -112.421, 0.83 ) }
    dend_6 { pt3dadd( -34.8145, -226.62, -112.459, 0.28 ) }
    dend_6 { pt3dadd( -34.9077, -226.91, -112.464, 0.55 ) }
    dend_6 { pt3dadd( -35.2673, -228.028, -112.462, 0.28 ) }
    dend_6 { pt3dadd( -35.4964, -228.88, -112.449, 0.55 ) }
    dend_6 { pt3dadd( -35.8535, -230.334, -112.483, 0.28 ) }
    dend_6 { pt3dadd( -36.0454, -231.382, -112.616, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -42.8919, -5.27383, -14.1073, 0.55 ) }
    dend_4 { pt3dadd( -44.6992, -5.97934, -14.8424, 0.55 ) }
    dend_4 { pt3dadd( -47.9844, -6.538, -16.8089, 0.55 ) }
    dend_4 { pt3dadd( -50.5808, -6.74189, -19.0487, 0.55 ) }
    dend_4 { pt3dadd( -51.9918, -6.86465, -20.3555, 0.83 ) }
    dend_4 { pt3dadd( -55.0196, -7.24977, -23.3078, 0.55 ) }
    dend_4 { pt3dadd( -56.1517, -7.4133, -24.399, 0.55 ) }
    dend_4 { pt3dadd( -60.4243, -8.30278, -29.0483, 0.55 ) }
    dend_4 { pt3dadd( -64.2811, -9.29657, -33.6754, 0.28 ) }
    dend_4 { pt3dadd( -65.1916, -9.53461, -34.7534, 0.83 ) }
    dend_4 { pt3dadd( -68.1627, -10.371, -38.122, 0.28 ) }
    dend_4 { pt3dadd( -69.0488, -10.6973, -39.067, 0.55 ) }
    dend_4 { pt3dadd( -71.6587, -12.0246, -41.6463, 0.28 ) }
    dend_4 { pt3dadd( -72.8375, -12.8073, -42.6286, 0.55 ) }
    dend_4 { pt3dadd( -73.9191, -13.4459, -43.3735, 0.55 ) }
    dend_4 { pt3dadd( -75.2814, -14.0344, -44.3887, 0.55 ) }
    dend_4 { pt3dadd( -78.9411, -15.0375, -47.1699, 0.28 ) }
    dend_4 { pt3dadd( -79.201, -15.0591, -47.3811, 0.55 ) }
    dend_4 { pt3dadd( -82.8563, -14.6428, -50.3591, 0.28 ) }
    dend_4 { pt3dadd( -84.2332, -14.1914, -51.5423, 0.55 ) }
    dend_4 { pt3dadd( -87.1409, -12.6345, -54.0314, 0.28 ) }
    dend_4 { pt3dadd( -88.2211, -11.7959, -54.9501, 0.55 ) }
    dend_4 { pt3dadd( -90.2226, -9.77901, -56.4525, 0.28 ) }
    dend_4 { pt3dadd( -90.8307, -9.04372, -56.8002, 0.55 ) }
    dend_4 { pt3dadd( -93.2759, -5.66482, -58.0695, 0.28 ) }
    dend_4 { pt3dadd( -95.0754, -3.062, -58.9405, 0.55 ) }
    dend_4 { pt3dadd( -96.7513, -0.64315, -59.5969, 0.28 ) }
    dend_4 { pt3dadd( -97.6334, 0.547206, -59.9257, 0.55 ) }
    dend_4 { pt3dadd( -101.033, 4.83947, -60.8471, 0.28 ) }
    dend_4 { pt3dadd( -105.276, 9.12222, -62.0115, 0.55 ) }
    dend_4 { pt3dadd( -109.132, 12.2755, -62.919, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -110.334, 13.0398, -63.1461, 0.55 ) }
    dend_4 { pt3dadd( -112.334, 14.0813, -63.432, 0.28 ) }
    dend_4 { pt3dadd( -115.321, 15.4292, -63.8686, 0.55 ) }
    dend_4 { pt3dadd( -123.175, 18.3954, -64.9254, 0.28 ) }
    dend_4 { pt3dadd( -124.848, 18.9702, -65.1036, 0.83 ) }
    dend_4 { pt3dadd( -128.295, 20.0126, -65.5988, 0.28 ) }
    dend_4 { pt3dadd( -130.648, 20.694, -66.0129, 0.28 ) }
    dend_4 { pt3dadd( -132.988, 21.377, -66.4672, 0.83 ) }
    dend_4 { pt3dadd( -134.174, 21.8008, -66.5621, 0.83 ) }
    dend_4 { pt3dadd( -139.735, 24.2601, -65.9566, 0.28 ) }
    dend_4 { pt3dadd( -141.074, 24.7816, -65.8995, 0.55 ) }
    dend_4 { pt3dadd( -145.812, 26.2747, -65.4388, 0.28 ) }
    dend_4 { pt3dadd( -148.004, 26.8026, -65.0469, 1.11 ) }
    dend_4 { pt3dadd( -158.861, 28.7794, -62.9261, 0.28 ) }
    dend_4 { pt3dadd( -161.272, 29.102, -62.4987, 0.83 ) }
    dend_4 { pt3dadd( -170.585, 29.8541, -60.8156, 0.28 ) }
    dend_4 { pt3dadd( -175.668, 30.027, -60.6973, 0.83 ) }
    dend_4 { pt3dadd( -179.642, 30.0189, -61.2012, 0.28 ) }
    dend_4 { pt3dadd( -183.627, 29.8627, -62.224, 0.55 ) }
    dend_4 { pt3dadd( -185.93, 29.7342, -63.213, 0.28 ) }
    dend_4 { pt3dadd( -187.383, 29.7316, -63.9029, 0.55 ) }
    dend_4 { pt3dadd( -192.309, 30.0883, -66.8795, 0.28 ) }
    dend_4 { pt3dadd( -192.844, 30.117, -67.35, 0.55 ) }
    dend_4 { pt3dadd( -193.944, 30.1496, -68.4878, 0.55 ) }
    dend_4 { pt3dadd( -197.042, 30.2062, -71.8202, 0.55 ) }
    dend_4 { pt3dadd( -198.249, 30.2435, -73.2634, 0.28 ) }
    dend_4 { pt3dadd( -200.991, 30.3952, -76.7676, 0.55 ) }
    dend_4 { pt3dadd( -204.512, 30.4615, -81.4809, 0.55 ) }
    dend_4 { pt3dadd( -206.264, 30.4501, -83.9202, 0.28 ) }
    dend_4 { pt3dadd( -206.818, 30.4518, -84.7023, 0.83 ) }
    dend_4 { pt3dadd( -210.814, 30.4949, -90.1661, 0.28 ) }
    dend_4 { pt3dadd( -211.382, 30.4891, -90.9538, 0.83 ) }
    dend_4 { pt3dadd( -214.754, 30.4754, -95.4962, 0.28 ) }
    dend_4 { pt3dadd( -215.06, 30.4382, -95.908, 0.55 ) }
    dend_4 { pt3dadd( -216.214, 30.1118, -97.4683, 0.28 ) }
    dend_4 { pt3dadd( -216.651, 29.9265, -98.0456, 0.55 ) }
    dend_4 { pt3dadd( -219.344, 28.4988, -101.246, 0.28 ) }
    dend_4 { pt3dadd( -220.115, 28.1324, -102.228, 0.55 ) }
    dend_4 { pt3dadd( -223.429, 26.8196, -106.547, 0.28 ) }
    dend_4 { pt3dadd( -224.373, 26.4995, -107.844, 0.83 ) }
    dend_4 { pt3dadd( -227.751, 25.5017, -112.562, 0.28 ) }
    dend_4 { pt3dadd( -228.13, 25.3907, -113.138, 0.55 ) }
    dend_4 { pt3dadd( -231.218, 24.5306, -118.01, 0.28 ) }
    dend_4 { pt3dadd( -231.706, 24.3372, -118.863, 0.83 ) }
    dend_4 { pt3dadd( -233.225, 23.5697, -121.684, 0.28 ) }
    dend_4 { pt3dadd( -233.649, 23.2491, -122.552, 0.83 ) }
    dend_4 { pt3dadd( -236.747, 19.1613, -130.298, 0.28 ) }
    dend_4 { pt3dadd( -237.016, 18.6022, -131.128, 0.55 ) }
    dend_4 { pt3dadd( -237.763, 16.2079, -133.87, 0.28 ) }
    dend_4 { pt3dadd( -237.836, 15.8916, -134.201, 0.83 ) }
    dend_4 { pt3dadd( -238.248, 13.3599, -136.483, 0.28 ) }
    dend_4 { pt3dadd( -238.62, 10.0073, -139.141, 0.55 ) }
    dend_4 { pt3dadd( -238.717, 8.50408, -140.077, 0.28 ) }
    dend_4 { pt3dadd( -238.822, 7.28186, -140.874, 0.55 ) }
    dend_4 { pt3dadd( -239.235, 3.79446, -143.102, 0.28 ) }
    dend_4 { pt3dadd( -239.445, 2.35717, -144.109, 0.55 ) }
    dend_4 { pt3dadd( -239.736, 0.934186, -145.105, 0.28 ) }
    dend_4 { pt3dadd( -239.975, 0.0861723, -145.659, 0.55 ) }
    dend_4 { pt3dadd( -241.112, -2.86861, -147.964, 0.28 ) }
    dend_4 { pt3dadd( -241.523, -3.66511, -148.705, 0.55 ) }
    dend_4 { pt3dadd( -243.979, -7.23679, -152.364, 0.28 ) }
    dend_4 { pt3dadd( -244.879, -8.18466, -153.675, 0.55 ) }
    dend_4 { pt3dadd( -245.711, -8.83484, -154.851, 0.55 ) }
    dend_4 { pt3dadd( -248.049, -10.1173, -157.963, 0.55 ) }
    dend_4 { pt3dadd( -250.36, -10.7701, -160.745, 0.28 ) }
    dend_4 { pt3dadd( -251.261, -10.9095, -161.811, 0.55 ) }
    dend_4 { pt3dadd( -254.699, -10.7333, -165.548, 0.28 ) }
    dend_4 { pt3dadd( -255.524, -10.5659, -166.521, 0.55 ) }
    dend_4 { pt3dadd( -257.153, -9.91528, -168.562, 0.28 ) }
    dend_4 { pt3dadd( -258.073, -9.10589, -169.625, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -42.8919, -5.27383, -14.1073, 0.55 ) }
    dend_3 { pt3dadd( -45.675, -6.48484, -13.0652, 0.55 ) }
    dend_3 { pt3dadd( -48.0357, -7.64995, -12.1294, 0.83 ) }
    dend_3 { pt3dadd( -50.8046, -9.03234, -11.126, 0.55 ) }
    dend_3 { pt3dadd( -52.3265, -9.96152, -10.3829, 0.28 ) }
    dend_3 { pt3dadd( -54.1706, -11.271, -9.33775, 0.55 ) }
    dend_3 { pt3dadd( -56.9013, -13.5377, -7.65412, 0.28 ) }
    dend_3 { pt3dadd( -57.7413, -14.3697, -7.10118, 0.55 ) }
    dend_3 { pt3dadd( -59.8872, -16.75, -5.76384, 0.55 ) }
    dend_3 { pt3dadd( -63.0647, -20.6269, -3.77397, 0.55 ) }
    dend_3 { pt3dadd( -64.8926, -22.8932, -2.64556, 0.28 ) }
    dend_3 { pt3dadd( -67.3905, -25.9856, -1.10425, 0.55 ) }
    dend_3 { pt3dadd( -68.7819, -27.6763, -0.31627, 0.55 ) }
    dend_3 { pt3dadd( -70.9264, -30.3465, 0.982467, 0.55 ) }
    dend_3 { pt3dadd( -71.6141, -31.2082, 1.40014, 0.83 ) }
    dend_3 { pt3dadd( -73.0103, -32.731, 2.02261, 0.28 ) }
    dend_3 { pt3dadd( -73.4277, -33.1568, 2.21506, 0.55 ) }
    dend_3 { pt3dadd( -74.7193, -34.3527, 2.85452, 0.28 ) }
    dend_3 { pt3dadd( -75.5182, -35.062, 3.32353, 0.55 ) }
    dend_3 { pt3dadd( -76.7232, -36.152, 4.10533, 0.28 ) }
    dend_3 { pt3dadd( -77.9134, -37.235, 4.86464, 0.55 ) }
    dend_3 { pt3dadd( -79.274, -38.5453, 5.73686, 0.28 ) }
    dend_3 { pt3dadd( -80.2648, -39.5006, 6.38424, 0.55 ) }
    dend_3 { pt3dadd( -82.109, -41.303, 7.66604, 0.28 ) }
    dend_3 { pt3dadd( -83.3732, -42.5514, 8.5967, 0.28 ) }
    dend_3 { pt3dadd( -84.2575, -43.428, 9.30147, 0.28 ) }
    dend_3 { pt3dadd( -85.3889, -44.5462, 10.2383, 0.55 ) }
    dend_3 { pt3dadd( -86.7046, -45.7611, 11.2313, 0.55 ) }
    dend_3 { pt3dadd( -87.9759, -46.9551, 12.1295, 0.28 ) }
    dend_3 { pt3dadd( -89.06, -47.9831, 12.8223, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -90.8276, -49.6357, 13.766, 0.55 ) }
    dend_3 { pt3dadd( -91.9473, -50.6702, 14.2353, 0.55 ) }
    dend_3 { pt3dadd( -93.395, -51.9269, 14.7462, 0.55 ) }
    dend_3 { pt3dadd( -94.3527, -52.7092, 15.0422, 0.55 ) }
    dend_3 { pt3dadd( -97.3167, -55.0986, 15.9352, 0.55 ) }
    dend_3 { pt3dadd( -99.269, -56.6554, 16.5616, 0.55 ) }
    dend_3 { pt3dadd( -101.765, -58.624, 17.3762, 0.55 ) }
    dend_3 { pt3dadd( -104.331, -60.6609, 18.2343, 0.28 ) }
    dend_3 { pt3dadd( -106.558, -62.4342, 18.9807, 0.55 ) }
    dend_3 { pt3dadd( -109.045, -64.3642, 19.8118, 0.55 ) }
    dend_3 { pt3dadd( -111.851, -66.5436, 20.7331, 0.55 ) }
    dend_3 { pt3dadd( -113.888, -68.1672, 21.4248, 0.28 ) }
    dend_3 { pt3dadd( -117.682, -71.2892, 22.6741, 0.55 ) }
    dend_3 { pt3dadd( -119.177, -72.5486, 23.0898, 0.83 ) }
    dend_3 { pt3dadd( -120.472, -73.6288, 23.4177, 0.28 ) }
    dend_3 { pt3dadd( -121.251, -74.249, 23.5694, 0.55 ) }
    dend_3 { pt3dadd( -123.143, -75.7677, 23.8656, 0.28 ) }
    dend_3 { pt3dadd( -123.793, -76.2998, 23.9544, 0.28 ) }
    dend_3 { pt3dadd( -125.31, -77.5957, 24.1548, 0.55 ) }
    dend_3 { pt3dadd( -131.281, -84.8037, 28.2841, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -18.0486, -58.7462, 7.51685, 0.83 ) }
    dend_15 { pt3dadd( -16.9515, -59.9662, 8.0467, 0.83 ) }
    dend_15 { pt3dadd( -15.9712, -61.1682, 8.65904, 0.83 ) }
    dend_15 { pt3dadd( -13.7264, -64.3321, 10.2637, 0.83 ) }
    dend_15 { pt3dadd( -10.0106, -70.2962, 13.1834, 0.55 ) }
    dend_15 { pt3dadd( -8.85884, -72.3708, 14.1339, 0.55 ) }
    dend_15 { pt3dadd( -7.74114, -74.6046, 15.1512, 0.83 ) }
    dend_15 { pt3dadd( -6.44151, -77.7087, 16.6867, 0.55 ) }
    dend_15 { pt3dadd( -5.55898, -80.2721, 17.9717, 0.83 ) }
    dend_15 { pt3dadd( -5.17321, -81.8335, 18.6879, 0.83 ) }
    dend_15 { pt3dadd( -4.91712, -83.8341, 19.3113, 0.83 ) }
    dend_15 { pt3dadd( -4.74165, -86.0084, 19.9398, 0.83 ) }
    dend_15 { pt3dadd( -4.63943, -88.1432, 20.4326, 0.55 ) }
    dend_15 { pt3dadd( -4.63414, -89.8474, 20.8688, 0.55 ) }
    dend_15 { pt3dadd( -4.70137, -92.3716, 21.6606, 0.55 ) }
    dend_15 { pt3dadd( -4.94498, -95.3034, 22.8482, 0.55 ) }
    dend_15 { pt3dadd( -5.30342, -97.3102, 23.813, 0.55 ) }
    dend_15 { pt3dadd( -5.94878, -99.8275, 25.1022, 0.83 ) }
    dend_15 { pt3dadd( -6.92089, -102.782, 26.7629, 0.28 ) }
    dend_15 { pt3dadd( -7.25955, -103.632, 27.2769, 0.55 ) }
    dend_15 { pt3dadd( -8.67025, -106.566, 29.1405, 0.55 ) }
    dend_15 { pt3dadd( -9.75777, -108.405, 30.3492, 0.55 ) }
    dend_15 { pt3dadd( -10.446, -109.369, 30.937, 0.55 ) }
    dend_15 { pt3dadd( -11.3431, -110.391, 31.5411, 0.28 ) }
    dend_15 { pt3dadd( -13.0821, -112.118, 32.4827, 0.55 ) }
    dend_15 { pt3dadd( -14.9025, -113.801, 33.4387, 0.55 ) }
    dend_15 { pt3dadd( -16.6167, -115.199, 34.2888, 0.55 ) }
    dend_15 { pt3dadd( -18.9499, -116.948, 35.4726, 0.55 ) }
    dend_15 { pt3dadd( -20.713, -118.203, 36.385, 0.55 ) }
    dend_15 { pt3dadd( -22.097, -119.12, 37.1126, 0.55 ) }
    dend_15 { pt3dadd( -23.5316, -120.024, 37.9155, 0.28 ) }
    dend_15 { pt3dadd( -24.4957, -120.651, 38.4667, 0.55 ) }
    dend_15 { pt3dadd( -26.5002, -122.118, 39.6209, 0.28 ) }
    dend_15 { pt3dadd( -27.3542, -122.743, 40.1151, 0.55 ) }
    dend_15 { pt3dadd( -27.5468, -131.84, 42.9211, 0.55 ) }
    dend_15 { pt3dadd( -27.3571, -140.847, 45.9696, 0.55 ) }
    dend_15 { pt3dadd( -26.4092, -148.934, 50.7098, 0.55 ) }
    dend_15 { pt3dadd( -24.8132, -157.308, 54.7817, 0.55 ) }
    dend_15 { pt3dadd( -23.7549, -165.528, 59.2879, 0.55 ) }
    dend_15 { pt3dadd( -23.7956, -174.576, 62.2346, 0.55 ) }
    dend_15 { pt3dadd( -24.1512, -183.047, 66.4277, 0.55 ) }
    dend_15 { pt3dadd( -25.1293, -191.134, 71.1719, 0.55 ) }
    dend_15 { pt3dadd( -24.2063, -199.419, 75.5991, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 63/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -18.0486, -58.7462, 7.51685, 0.83 ) }
    dend_10 { pt3dadd( -19.3931, -62.8623, 6.69539, 0.83 ) }
    dend_10 { pt3dadd( -20.3188, -65.9273, 6.03565, 0.83 ) }
    dend_10 { pt3dadd( -21.4697, -70.276, 5.2823, 0.83 ) }
    dend_10 { pt3dadd( -22.1997, -73.2664, 4.84855, 0.83 ) }
    dend_10 { pt3dadd( -23.1099, -77.2154, 4.43642, 0.83 ) }
    dend_10 { pt3dadd( -23.8619, -80.4445, 4.20984, 0.83 ) }
    dend_10 { pt3dadd( -24.6022, -83.7443, 4.22302, 0.83 ) }
    dend_10 { pt3dadd( -25.3936, -87.2786, 4.40205, 0.55 ) }
    dend_10 { pt3dadd( -25.8518, -89.529, 4.67896, 1.11 ) }
    dend_10 { pt3dadd( -26.3369, -92.478, 5.17288, 0.55 ) }
    dend_10 { pt3dadd( -26.7267, -95.0661, 5.66322, 0.55 ) }
    dend_10 { pt3dadd( -27.0594, -97.7451, 6.1812, 0.55 ) }
    dend_10 { pt3dadd( -27.2126, -99.1198, 6.42482, 0.55 ) }
    dend_10 { pt3dadd( -27.5225, -102.327, 6.81456, 0.83 ) }
    dend_10 { pt3dadd( -27.8854, -107.459, 7.22836, 0.83 ) }
    dend_10 { pt3dadd( -28.0387, -109.902, 7.33305, 0.83 ) }
    dend_10 { pt3dadd( -28.2299, -112.868, 7.39639, 0.83 ) }
    dend_10 { pt3dadd( -28.4079, -115.241, 7.39672, 0.83 ) }
    dend_10 { pt3dadd( -28.6896, -117.99, 7.3568, 0.83 ) }
    dend_10 { pt3dadd( -29.116, -121.269, 7.26235, 0.83 ) }
    dend_10 { pt3dadd( -29.6297, -125.028, 7.15613, 0.83 ) }
    dend_10 { pt3dadd( -30.1746, -129.031, 7.01047, 0.83 ) }
    dend_10 { pt3dadd( -30.5771, -131.997, 6.86591, 0.83 ) }
    dend_10 { pt3dadd( -31.0479, -136.005, 6.66626, 0.83 ) }
    dend_10 { pt3dadd( -31.4683, -140.369, 6.43282, 0.83 ) }
    dend_10 { pt3dadd( -31.7196, -143.898, 6.21808, 0.83 ) }
    dend_10 { pt3dadd( -31.8099, -146.391, 6.01238, 0.83 ) }
    dend_10 { pt3dadd( -31.8322, -150.869, 5.56984, 0.83 ) }
    dend_10 { pt3dadd( -31.7852, -153.608, 5.21924, 0.55 ) }
    dend_10 { pt3dadd( -31.7063, -155.219, 4.93903, 0.55 ) }
    dend_10 { pt3dadd( -31.6475, -156.055, 4.74022, 0.83 ) }
    dend_10 { pt3dadd( -31.5265, -157.408, 4.31351, 0.28 ) }
    dend_10 { pt3dadd( -31.4548, -158.662, 3.76151, 0.83 ) }
    dend_10 { pt3dadd( -31.4209, -160.656, 2.61437, 0.28 ) }
    dend_10 { pt3dadd( -31.5035, -162.501, 1.4633, 0.83 ) }
    dend_10 { pt3dadd( -31.6225, -163.83, 0.677676, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -31.7949, -165.308, -0.0883904, 0.83 ) }
    dend_10 { pt3dadd( -32.3445, -168.736, -1.69909, 0.28 ) }
    dend_10 { pt3dadd( -32.6309, -170.183, -2.31531, 0.28 ) }
    dend_10 { pt3dadd( -33.0205, -171.668, -2.91434, 0.55 ) }
    dend_10 { pt3dadd( -33.7642, -174.06, -3.845, 0.55 ) }
    dend_10 { pt3dadd( -34.8961, -177.222, -4.92827, 0.55 ) }
    dend_10 { pt3dadd( -35.5841, -178.899, -5.40415, 0.28 ) }
    dend_10 { pt3dadd( -36.1531, -180.112, -5.66262, 0.55 ) }
    dend_10 { pt3dadd( -37.8301, -183.246, -6.26055, 0.28 ) }
    dend_10 { pt3dadd( -38.3648, -184.167, -6.41707, 0.55 ) }
    dend_10 { pt3dadd( -39.7327, -186.466, -6.76513, 0.55 ) }
    dend_10 { pt3dadd( -41.13, -188.717, -7.047, 0.55 ) }
    dend_10 { pt3dadd( -42.8232, -191.613, -7.37119, 0.28 ) }
    dend_10 { pt3dadd( -43.5703, -192.958, -7.52272, 0.28 ) }
    dend_10 { pt3dadd( -44.7164, -195.228, -7.74231, 0.55 ) }
    dend_10 { pt3dadd( -45.6211, -197.208, -7.99281, 0.28 ) }
    dend_10 { pt3dadd( -46.1593, -198.568, -8.20615, 0.55 ) }
    dend_10 { pt3dadd( -47.0059, -201.284, -8.64474, 0.28 ) }
    dend_10 { pt3dadd( -47.5345, -203.573, -8.98199, 0.55 ) }
    dend_10 { pt3dadd( -48.0185, -206.358, -9.38304, 0.28 ) }
    dend_10 { pt3dadd( -48.3634, -209.586, -9.83315, 0.28 ) }
    dend_10 { pt3dadd( -48.3889, -210.043, -9.89202, 0.55 ) }
    dend_10 { pt3dadd( -48.3969, -211.843, -10.1217, 0.83 ) }
    dend_10 { pt3dadd( -48.3165, -214.665, -10.4871, 0.83 ) }
    dend_10 { pt3dadd( -48.1641, -217.696, -10.8769, 0.28 ) }
    dend_10 { pt3dadd( -48.0734, -219.727, -11.153, 0.83 ) }
    dend_10 { pt3dadd( -48.0159, -222.433, -11.5088, 0.83 ) }
    dend_10 { pt3dadd( -48.0447, -225.405, -11.8963, 0.28 ) }
    dend_10 { pt3dadd( -48.132, -227.57, -12.1818, 0.83 ) }
    dend_10 { pt3dadd( -48.3219, -230.713, -12.5404, 0.28 ) }
    dend_10 { pt3dadd( -48.4735, -232.231, -12.6517, 0.55 ) }
    dend_10 { pt3dadd( -48.6749, -233.559, -12.7021, 0.55 ) }
    dend_10 { pt3dadd( -48.8812, -234.756, -12.7013, 0.28 ) }
    dend_10 { pt3dadd( -48.9899, -235.357, -12.6899, 0.55 ) }
    dend_10 { pt3dadd( -49.3109, -236.946, -12.7988, 0.28 ) }
    dend_10 { pt3dadd( -49.5148, -237.985, -12.9987, 0.55 ) }
    dend_10 { pt3dadd( -49.8092, -239.424, -13.4635, 0.28 ) }
    dend_10 { pt3dadd( -50.1583, -241.059, -14.146, 0.28 ) }
    dend_10 { pt3dadd( -50.5537, -242.744, -14.961, 0.55 ) }
    dend_10 { pt3dadd( -51.3272, -245.967, -16.6473, 0.28 ) }
    dend_10 { pt3dadd( -51.7721, -248.164, -17.7598, 0.83 ) }
    dend_10 { pt3dadd( -52.3978, -251.564, -19.4217, 0.28 ) }
    dend_10 { pt3dadd( -52.5835, -252.689, -19.9367, 0.55 ) }
    dend_10 { pt3dadd( -52.9308, -254.954, -20.8279, 0.28 ) }
    dend_10 { pt3dadd( -53.3203, -258.12, -21.8231, 0.55 ) }
    dend_10 { pt3dadd( -53.5086, -261.416, -22.4589, 0.28 ) }
    dend_10 { pt3dadd( -53.5282, -262.536, -22.5797, 0.55 ) }
    dend_10 { pt3dadd( -53.4873, -264.453, -22.6223, 0.28 ) }
    dend_10 { pt3dadd( -53.478, -265.788, -22.5914, 0.55 ) }
    dend_10 { pt3dadd( -53.4808, -267.512, -22.4744, 0.55 ) }
    dend_10 { pt3dadd( -53.5687, -270.371, -22.2061, 0.28 ) }
    dend_10 { pt3dadd( -53.6817, -272.008, -22.0734, 0.55 ) }
    dend_10 { pt3dadd( -53.8593, -273.993, -21.914, 0.28 ) }
    dend_10 { pt3dadd( -54.197, -276.998, -21.6887, 0.28 ) }
    dend_10 { pt3dadd( -54.4821, -278.875, -21.5647, 0.55 ) }
    dend_10 { pt3dadd( -54.9247, -281.125, -21.3737, 0.28 ) }
    dend_10 { pt3dadd( -55.1532, -281.935, -21.3043, 0.55 ) }
    dend_10 { pt3dadd( -55.6548, -283.31, -21.1901, 0.28 ) }
    dend_10 { pt3dadd( -56.1459, -284.303, -21.1822, 0.55 ) }
    dend_10 { pt3dadd( -57.6985, -286.917, -21.3043, 0.28 ) }
    dend_10 { pt3dadd( -58.4621, -288.051, -21.4111, 0.55 ) }
    dend_10 { pt3dadd( -60.1292, -290.377, -21.6726, 0.28 ) }
    dend_10 { pt3dadd( -61.3077, -291.982, -21.8706, 0.83 ) }
    dend_10 { pt3dadd( -64.1365, -295.744, -22.412, 0.28 ) }
    dend_10 { pt3dadd( -64.9554, -296.786, -22.6052, 0.55 ) }
    dend_10 { pt3dadd( -66.4603, -298.631, -23.1049, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 66/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -36.0454, -231.382, -112.616, 0.28 ) }
    dend_8 { pt3dadd( -35.9677, -234.627, -113.085, 0.28 ) }
    dend_8 { pt3dadd( -35.935, -235.893, -113.297, 0.83 ) }
    dend_8 { pt3dadd( -35.7949, -240.925, -114.19, 0.28 ) }
    dend_8 { pt3dadd( -35.7718, -242.503, -114.502, 0.83 ) }
    dend_8 { pt3dadd( -35.6609, -247.032, -115.477, 0.28 ) }
    dend_8 { pt3dadd( -35.6371, -248.259, -115.768, 0.83 ) }
    dend_8 { pt3dadd( -35.5987, -251.741, -116.716, 0.28 ) }
    dend_8 { pt3dadd( -35.5947, -252.352, -116.905, 0.55 ) }
    dend_8 { pt3dadd( -35.6002, -255.72, -118.055, 0.28 ) }
    dend_8 { pt3dadd( -35.6569, -257.996, -118.901, 0.83 ) }
    dend_8 { pt3dadd( -35.8414, -261.375, -120.233, 0.28 ) }
    dend_8 { pt3dadd( -35.9066, -262.03, -120.517, 0.55 ) }
    dend_8 { pt3dadd( -36.1832, -263.979, -121.41, 0.28 ) }
    dend_8 { pt3dadd( -36.4848, -265.405, -122.055, 0.83 ) }
    dend_8 { pt3dadd( -36.967, -267.235, -122.907, 0.28 ) }
    dend_8 { pt3dadd( -37.32, -268.398, -123.462, 0.55 ) }
    dend_8 { pt3dadd( -37.8079, -270.148, -124.341, 0.28 ) }
    dend_8 { pt3dadd( -38.2025, -271.785, -125.181, 0.28 ) }
    dend_8 { pt3dadd( -38.6836, -274.132, -126.464, 0.55 ) }
    dend_8 { pt3dadd( -39.0554, -277.334, -128.268, 0.28 ) }
    dend_8 { pt3dadd( -39.0828, -278.037, -128.663, 0.55 ) }
    dend_8 { pt3dadd( -38.9221, -281.55, -130.733, 0.28 ) }
    dend_8 { pt3dadd( -38.7498, -282.69, -131.412, 0.83 ) }
    dend_8 { pt3dadd( -38.0058, -285.865, -133.412, 0.28 ) }
    dend_8 { pt3dadd( -37.2473, -288.167, -134.914, 0.28 ) }
    dend_8 { pt3dadd( -37.0049, -288.786, -135.313, 0.55 ) }
    dend_8 { pt3dadd( -35.5654, -292.095, -137.377, 0.28 ) }
    dend_8 { pt3dadd( -34.5995, -294.003, -138.505, 0.28 ) }
    dend_8 { pt3dadd( -34.3517, -294.485, -138.777, 0.83 ) }
    dend_8 { pt3dadd( -32.9503, -297.223, -140.151, 0.28 ) }
    dend_8 { pt3dadd( -32.5408, -298.174, -140.57, 0.55 ) }
    dend_8 { pt3dadd( -31.9277, -299.904, -141.188, 0.28 ) }
    dend_8 { pt3dadd( -31.4645, -301.879, -141.677, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( -31.323, -303.003, -141.868, 0.55 ) }
    dend_8 { pt3dadd( -31.1442, -305.534, -142.138, 0.28 ) }
    dend_8 { pt3dadd( -31.1199, -307.543, -142.312, 0.83 ) }
    dend_8 { pt3dadd( -31.1409, -310.157, -142.541, 0.28 ) }
    dend_8 { pt3dadd( -31.1471, -312.442, -142.776, 0.28 ) }
    dend_8 { pt3dadd( -31.1335, -315.341, -143.105, 0.28 ) }
    dend_8 { pt3dadd( -31.0428, -317.218, -143.335, 0.83 ) }
    dend_8 { pt3dadd( -30.6415, -322.542, -144.071, 0.28 ) }
    dend_8 { pt3dadd( -30.4805, -323.826, -144.255, 0.55 ) }
    dend_8 { pt3dadd( -30.0456, -326.304, -144.609, 0.28 ) }
    dend_8 { pt3dadd( -29.9142, -326.908, -144.706, 0.55 ) }
    dend_8 { pt3dadd( -29.1837, -329.779, -145.187, 0.28 ) }
    dend_8 { pt3dadd( -28.9082, -330.728, -145.323, 0.55 ) }
    dend_8 { pt3dadd( -28.0853, -332.92, -145.453, 0.28 ) }
    dend_8 { pt3dadd( -27.7705, -333.8, -145.479, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -36.0454, -231.382, -112.616, 0.28 ) }
    dend_7 { pt3dadd( -36.7209, -233.248, -112.707, 0.28 ) }
    dend_7 { pt3dadd( -37.2702, -234.867, -112.682, 0.55 ) }
    dend_7 { pt3dadd( -38.0833, -237.226, -112.587, 0.28 ) }
    dend_7 { pt3dadd( -38.1906, -237.535, -112.576, 0.55 ) }
    dend_7 { pt3dadd( -38.624, -238.722, -112.548, 0.28 ) }
    dend_7 { pt3dadd( -38.817, -239.205, -112.545, 0.55 ) }
    dend_7 { pt3dadd( -39.6418, -241.17, -112.555, 0.28 ) }
    dend_7 { pt3dadd( -39.8761, -241.702, -112.573, 0.55 ) }
    dend_7 { pt3dadd( -40.7197, -243.476, -112.683, 0.28 ) }
    dend_7 { pt3dadd( -41.1208, -244.36, -112.798, 0.55 ) }
    dend_7 { pt3dadd( -42.0495, -246.408, -113.136, 0.28 ) }
    dend_7 { pt3dadd( -42.3075, -246.999, -113.256, 1.11 ) }
    dend_7 { pt3dadd( -43.1886, -249.224, -113.923, 0.28 ) }
    dend_7 { pt3dadd( -43.5312, -250.269, -114.28, 0.55 ) }
    dend_7 { pt3dadd( -44.1452, -252.332, -115.288, 0.28 ) }
    dend_7 { pt3dadd( -44.3975, -253.383, -115.893, 0.55 ) }
    dend_7 { pt3dadd( -44.5469, -254.148, -116.392, 0.55 ) }
    dend_7 { pt3dadd( -44.995, -256.492, -118.142, 0.28 ) }
    dend_7 { pt3dadd( -45.1359, -257.199, -118.718, 0.55 ) }
    dend_7 { pt3dadd( -45.7779, -260.031, -121.11, 0.28 ) }
    dend_7 { pt3dadd( -46.202, -261.617, -122.466, 0.28 ) }
    dend_7 { pt3dadd( -46.3835, -262.179, -122.969, 0.55 ) }
    dend_7 { pt3dadd( -47.1564, -264.111, -124.624, 0.28 ) }
    dend_7 { pt3dadd( -47.4473, -264.735, -125.106, 0.83 ) }
    dend_7 { pt3dadd( -48.0919, -266.066, -126.047, 0.28 ) }
    dend_7 { pt3dadd( -48.2038, -266.324, -126.198, 0.55 ) }
    dend_7 { pt3dadd( -48.9415, -268.064, -127.22, 0.28 ) }
    dend_7 { pt3dadd( -49.4136, -269.389, -127.915, 0.83 ) }
    dend_7 { pt3dadd( -49.9478, -271.306, -128.784, 0.28 ) }
    dend_7 { pt3dadd( -50.1061, -272.057, -129.108, 0.55 ) }
    dend_7 { pt3dadd( -50.4575, -274.432, -130.054, 0.28 ) }
    dend_7 { pt3dadd( -50.4965, -274.866, -130.213, 0.55 ) }
    dend_7 { pt3dadd( -50.5242, -276.253, -130.59, 0.28 ) }
    dend_7 { pt3dadd( -50.5127, -276.62, -130.681, 0.55 ) }
    dend_7 { pt3dadd( -50.3783, -278.489, -131.077, 0.28 ) }
    dend_7 { pt3dadd( -50.3381, -278.942, -131.172, 0.83 ) }
    dend_7 { pt3dadd( -50.1967, -280.868, -131.522, 0.28 ) }
    dend_7 { pt3dadd( -50.1421, -282.646, -131.868, 0.55 ) }
    dend_7 { pt3dadd( -50.1809, -283.923, -132.1, 0.55 ) }
    dend_7 { pt3dadd( -50.4218, -286.57, -132.539, 0.28 ) }
    dend_7 { pt3dadd( -50.5391, -287.27, -132.659, 0.83 ) }
    dend_7 { pt3dadd( -50.8142, -288.181, -132.801, 0.83 ) }
    dend_7 { pt3dadd( -51.837, -290.353, -133.095, 0.28 ) }
    dend_7 { pt3dadd( -52.6467, -291.644, -133.245, 0.28 ) }
    dend_7 { pt3dadd( -53.1613, -292.311, -133.267, 0.55 ) }
    dend_7 { pt3dadd( -54.2668, -293.513, -133.25, 0.28 ) }
    dend_7 { pt3dadd( -55.7207, -294.972, -133.197, 0.28 ) }
    dend_7 { pt3dadd( -56.4841, -295.679, -133.155, 0.55 ) }
    dend_7 { pt3dadd( -57.2899, -296.281, -133.045, 0.28 ) }
    dend_7 { pt3dadd( -57.8052, -296.64, -132.976, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -66.4603, -298.631, -23.1049, 0.28 ) }
    dend_12 { pt3dadd( -65.6072, -299.809, -24.0787, 0.28 ) }
    dend_12 { pt3dadd( -64.6249, -301.165, -25.2, 0.28 ) }
    dend_12 { pt3dadd( -63.9069, -302.156, -26.0196, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -66.4603, -298.631, -23.1049, 0.55 ) }
    dend_11 { pt3dadd( -68.4046, -301.597, -20.3525, 0.55 ) }
    dend_11 { pt3dadd( -69.3788, -303.706, -18.4948, 0.28 ) }
    dend_11 { pt3dadd( -69.5876, -304.673, -17.7145, 0.55 ) }
    dend_11 { pt3dadd( -69.7952, -307.744, -15.4299, 0.28 ) }
    dend_11 { pt3dadd( -69.7584, -308.754, -14.7944, 0.83 ) }
    dend_11 { pt3dadd( -69.4475, -312.01, -12.955, 0.28 ) }
    dend_11 { pt3dadd( -69.3326, -312.475, -12.7792, 0.55 ) }
    dend_11 { pt3dadd( -68.5658, -315.309, -12.1097, 0.28 ) }
    dend_11 { pt3dadd( -68.2448, -316.493, -11.9052, 0.55 ) }
    dend_11 { pt3dadd( -67.7025, -319.042, -11.7139, 0.28 ) }
    dend_11 { pt3dadd( -67.5476, -320.269, -11.6577, 0.55 ) }
    dend_11 { pt3dadd( -67.5679, -324.358, -11.5118, 0.28 ) }
    dend_11 { pt3dadd( -67.8104, -327.277, -11.3806, 0.28 ) }
    dend_11 { pt3dadd( -67.9733, -328.314, -11.3152, 0.83 ) }
    dend_11 { pt3dadd( -68.7868, -332.361, -10.9375, 0.28 ) }
    dend_11 { pt3dadd( -69.2145, -334.115, -10.7076, 0.55 ) }
    dend_11 { pt3dadd( -70.5679, -339.042, -9.96143, 0.28 ) }
    dend_11 { pt3dadd( -71.071, -340.731, -9.63208, 0.55 ) }
    dend_11 { pt3dadd( -71.6687, -342.512, -9.37526, 0.28 ) }
    dend_11 { pt3dadd( -72.1593, -343.899, -9.25328, 0.55 ) }
    dend_11 { pt3dadd( -72.7304, -345.478, -9.13671, 0.28 ) }
    dend_11 { pt3dadd( -73.4302, -347.525, -9.0818, 0.28 ) }
    dend_11 { pt3dadd( -73.7932, -348.594, -9.1555, 0.55 ) }
    dend_11 { pt3dadd( -75.3284, -352.946, -9.77082, 0.28 ) }
    dend_11 { pt3dadd( -75.5946, -353.683, -9.97358, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -63.9069, -302.156, -26.0196, 0.28 ) }
    dend_14 { pt3dadd( -61.7201, -303.311, -27.3452, 0.28 ) }
    dend_14 { pt3dadd( -60.1243, -304.166, -28.3591, 0.28 ) }
    dend_14 { pt3dadd( -59.3809, -304.504, -28.8176, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( -57.6098, -305.254, -29.8857, 0.28 ) }
    dend_14 { pt3dadd( -56.7654, -305.551, -30.3088, 0.55 ) }
    dend_14 { pt3dadd( -54.5238, -306.235, -31.2769, 0.28 ) }
    dend_14 { pt3dadd( -53.9727, -306.371, -31.4494, 0.55 ) }
    dend_14 { pt3dadd( -51.5898, -306.8, -31.9449, 0.28 ) }
    dend_14 { pt3dadd( -51.2481, -306.844, -31.9917, 0.55 ) }
    dend_14 { pt3dadd( -48.5812, -307.121, -32.2229, 0.28 ) }
    dend_14 { pt3dadd( -47.5957, -307.24, -32.2944, 0.55 ) }
    dend_14 { pt3dadd( -43.6909, -307.851, -32.534, 0.28 ) }
    dend_14 { pt3dadd( -42.8441, -308.037, -32.5932, 0.55 ) }
    dend_14 { pt3dadd( -40.2239, -308.81, -32.8153, 0.28 ) }
    dend_14 { pt3dadd( -38.3123, -309.531, -33.062, 0.28 ) }
    dend_14 { pt3dadd( -37.1096, -310.116, -33.3081, 0.55 ) }
    dend_14 { pt3dadd( -35.256, -311.233, -33.9019, 0.28 ) }
    dend_14 { pt3dadd( -34.3413, -311.919, -34.3239, 0.28 ) }
    dend_14 { pt3dadd( -33.8244, -312.353, -34.6387, 0.55 ) }
    dend_14 { pt3dadd( -32.1851, -313.904, -35.9006, 0.28 ) }
    dend_14 { pt3dadd( -31.6069, -314.48, -36.3749, 0.83 ) }
    dend_14 { pt3dadd( -29.3616, -316.739, -38.3379, 0.28 ) }
    dend_14 { pt3dadd( -29.1495, -316.953, -38.5409, 0.55 ) }
    dend_14 { pt3dadd( -27.5016, -318.563, -40.1902, 0.28 ) }
    dend_14 { pt3dadd( -27.3411, -318.714, -40.354, 0.55 ) }
    dend_14 { pt3dadd( -25.8892, -320.096, -41.9113, 0.28 ) }
    dend_14 { pt3dadd( -25.2461, -320.691, -42.4883, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -63.9069, -302.156, -26.0196, 0.28 ) }
    dend_13 { pt3dadd( -62.3674, -309.821, -29.878, 0.28 ) }
    dend_13 { pt3dadd( -62.0406, -311.258, -30.4559, 0.55 ) }
    dend_13 { pt3dadd( -61.4118, -314.253, -31.5453, 0.28 ) }
    dend_13 { pt3dadd( -61.289, -314.822, -31.6898, 0.55 ) }
    dend_13 { pt3dadd( -60.9236, -316.725, -32.0657, 0.28 ) }
    dend_13 { pt3dadd( -60.7616, -317.634, -32.2225, 0.55 ) }
    dend_13 { pt3dadd( -60.2464, -320.522, -32.2727, 0.28 ) }
    dend_13 { pt3dadd( -60.1031, -321.473, -32.3337, 0.55 ) }
    dend_13 { pt3dadd( -59.5378, -325.653, -32.7293, 0.28 ) }
    dend_13 { pt3dadd( -59.173, -328.01, -32.9556, 0.28 ) }
    dend_13 { pt3dadd( -59.0606, -328.783, -33.0254, 0.55 ) }
    dend_13 { pt3dadd( -58.5999, -332.16, -33.251, 0.28 ) }
    dend_13 { pt3dadd( -58.5135, -332.894, -33.2635, 0.55 ) }
    dend_13 { pt3dadd( -58.3214, -335.2, -33.2633, 0.28 ) }
    dend_13 { pt3dadd( -58.3132, -336.975, -33.1554, 0.55 ) }
    dend_13 { pt3dadd( -58.521, -340.567, -32.6917, 0.28 ) }
    dend_13 { pt3dadd( -58.6004, -341.44, -32.5528, 0.55 ) }
    dend_13 { pt3dadd( -59.1559, -345.142, -31.7854, 0.28 ) }
    dend_13 { pt3dadd( -59.4387, -346.536, -31.4393, 0.83 ) }
    dend_13 { pt3dadd( -60.3412, -349.521, -30.5448, 0.28 ) }
    dend_13 { pt3dadd( -60.6689, -350.35, -30.2438, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_31 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_30 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_31 nseg = 11
    dend_30 nseg = 9
    dend_29 nseg = 15
    dend_26 nseg = 5
    dend_27 nseg = 3
    dend_24 nseg = 5
    dend_21 nseg = 11
    dend_18 nseg = 9
    dend_17 nseg = 7
    dend_2 nseg = 3
    dend_22 nseg = 3
    dend_6 nseg = 11
    dend_4 nseg = 17
    dend_3 nseg = 7
    dend_15 nseg = 9
    dend_10 nseg = 13
    dend_8 nseg = 5
    dend_7 nseg = 3
    dend_11 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_LBC_a6205ed0df_0_0


