// Cell: cSTUT189_L4_LBC_28153c03c4_0_0
/*
{
  "id" : "cSTUT189_L4_LBC_28153c03c4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.19791, -16.6038, 0.189339, 3.82975", "-0.984226, -15.1158, 0.189878, 6.3833", "-0.770543, -13.6278, 0.190418, 9.41895", "-0.55686, -12.1399, 0.190957, 11.7366", "-0.343177, -10.6519, 0.191496, 14.054", "-0.129494, -9.1639, 0.192035, 15.9877", "0.0841893, -7.67592, 0.192575, 17.5231", "0.297872, -6.18794, 0.193114, 18.7961", "0.511555, -4.69996, 0.193653, 19.9686", "0.725238, -3.21198, 0.194193, 20.6404", "0.938921, -1.724, 0.194732, 20.873", "1.1526, -0.236014, 0.195271, 20.8992", "1.36629, 1.25197, 0.195811, 20.8518", "1.57997, 2.73995, 0.19635, 20.0831", "1.79365, 4.22793, 0.196889, 19.1754", "2.00734, 5.71591, 0.197429, 18.1735", "2.22102, 7.20389, 0.197968, 16.5272", "2.4347, 8.69188, 0.198507, 13.398", "2.64839, 10.1799, 0.199047, 10.9927", "2.86207, 11.6678, 0.199586, 8.47792", "3.07575, 13.1558, 0.200125, 4.9216" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-4.0135, -15.3809, -5.58826, 3.33", "-5.26696, -16.1609, -6.21559, 2.66", "-7.338, -17.4497, -7.25211, 3.99", "-7.88353, -17.7892, -7.52514, 4.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000473126
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.316498, -14.7634, -16.2782, 2.0", "1.42027, -14.4074, -19.5517, 2.0", "2.85689, -13.944, -23.8124, 2.0", "5.81273, -12.9905, -32.5786, 1.33", "7.49266, -12.4487, -37.5609, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000473126
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.3735, 8.36916, -12.0882, 2.66", "-7.24844, 9.91798, -12.5373, 2.66", "-10.8272, 11.846, -13.0963, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000473126
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.856499, 13.2521, 4.81174, 5.99", "1.82559, 14.6906, 4.81174, 5.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000473126
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.07575, 13.1558, 0.200125, 1.16244", "5.20797, 28.0035, 0.200125, 1.16244", "7.34019, 42.8512, 0.200125, 1.16244" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-7.88353, -17.7892, -7.52514, 3.99", "-9.85254, -19.1282, -7.53524, 3.99" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-7.88353, -17.7892, -7.52514, 0.67", "-10.556, -16.3701, -10.5117, 0.67", "-12.3479, -15.5988, -11.791, 0.67", "-14.3314, -14.8034, -12.9255, 0.67", "-16.9841, -13.8465, -13.9793, 1.33", "-22.6845, -11.9071, -15.78, 0.33", "-24.8283, -11.2663, -16.5511, 1.33", "-31.0818, -9.67608, -18.9389, 0.33", "-31.7833, -9.50742, -19.1064, 1.33", "-36.0553, -8.52577, -19.6132, 0.33", "-36.7069, -8.38555, -19.6301, 1.33", "-43.7061, -7.14245, -19.3755, 0.33", "-44.4358, -7.01368, -19.3771, 2.66", "-52.1494, -5.59535, -20.0197, 0.33", "-53.1946, -5.41151, -20.1196, 1.33", "-55.4418, -5.00322, -20.3594, 0.33", "-56.7522, -4.76142, -20.4186, 0.67", "-58.0658, -4.48864, -20.4898, 0.33", "-60.6532, -3.94146, -20.9019, 2.66", "-64.6639, -2.96402, -22.2681, 0.33", "-65.0994, -2.84412, -22.4241, 0.67", "-68.7465, -1.66329, -24.1146, 0.33", "-73.1886, -0.0683467, -26.3941, 0.33", "-74.3506, 0.378972, -27.0488, 2.0", "-79.3116, 2.38258, -30.0106, 0.67", "-80.7589, 2.95886, -30.831, 2.66", "-86.7053, 5.13431, -34.3693, 0.33", "-88.9124, 5.81598, -35.7962, 3.33", "-93.5489, 6.98452, -38.7383, 0.33", "-94.9654, 7.27433, -39.6372, 0.67", "-100.708, 8.15032, -43.1994, 0.33", "-106.017, 8.76583, -46.3646, 2.66", "-112.052, 9.20978, -49.7401, 0.33", "-113.232, 9.31776, -50.4488, 1.33", "-116.1, 9.67058, -52.203, 0.33", "-116.898, 9.81339, -52.6843, 1.33", "-119.255, 10.4098, -54.0389, 0.33", "-120.689, 10.8715, -54.6909, 2.0", "-128.152, 13.5472, -57.734, 0.33", "-129.507, 13.9716, -58.2048, 2.66", "-134.163, 15.246, -59.6134, 0.33", "-136.129, 15.7117, -60.2133, 1.33", "-140.581, 16.5775, -61.3942, 0.33", "-142.942, 16.9234, -61.8484, 2.0", "-148.495, 17.3683, -62.5166, 0.33", "-149.25, 17.4325, -62.6265, 0.67", "-153.251, 17.8602, -63.4487, 0.33", "-156.691, 18.2933, -64.2225, 2.0", "-161.213, 18.9747, -65.3325, 0.33", "-162.83, 19.2375, -65.7993, 1.33", "-171.377, 20.7032, -68.558, 0.33", "-174.789, 21.2033, -69.5122, 2.0", "-182.34, 22.1177, -71.3598, 0.33", "-183.644, 22.2399, -71.6801, 2.66", "-189.116, 22.604, -72.8901, 0.33", "-190.771, 22.6246, -73.2603, 1.33", "-197.181, 22.2498, -74.6047, 0.33", "-198.165, 22.1191, -74.8093, 2.0", "-200.769, 21.5647, -75.4857, 0.33", "-202.015, 21.2555, -75.808, 2.0", "-207.719, 19.5028, -77.2834, 0.33", "-208.799, 19.0964, -77.6556, 2.0", "-211.045, 17.9429, -78.8865, 0.33", "-211.407, 17.7333, -79.0938, 0.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "7.49266, -12.4487, -37.5609, 0.67", "4.96191, -15.4332, -50.4747, 0.67", "4.34496, -16.1099, -53.9011, 0.67", "4.09436, -16.3551, -55.2702, 2.0", "2.92369, -17.4617, -62.0311, 0.33", "2.76268, -17.576, -62.8945, 2.0", "0.879866, -18.6051, -72.5793, 0.33", "0.186415, -18.7847, -75.9566, 1.33", "-0.621288, -18.6504, -80.4106, 0.33", "-1.25188, -18.2853, -84.0968, 1.33", "-2.89708, -16.7102, -93.8247, 0.33", "-3.16622, -16.4007, -95.3598, 0.33", "-3.67949, -15.8149, -97.8455, 1.33", "-5.70409, -13.6614, -106.506, 1.33", "-8.29581, -11.3119, -116.483, 1.33", "-10.9171, -9.29006, -125.599, 0.67", "-11.9385, -8.73485, -128.678, 2.0", "-14.7284, -7.82481, -136.049, 0.33", "-16.0478, -7.68494, -138.919, 2.0", "-19.6998, -8.17841, -145.011, 0.33", "-20.1224, -8.29362, -145.563, 1.33", "-24.1645, -10.0579, -149.879, 0.33", "-25.6423, -10.905, -151.314, 1.33", "-28.6037, -13.1159, -153.493, 0.33", "-29.7294, -13.9968, -154.068, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.49266, -12.4487, -37.5609, 0.67", "13.112, -14.194, -44.6191, 0.67", "14.178, -14.4831, -45.8544, 3.33", "18.5471, -15.5638, -50.4409, 0.33", "20.1712, -15.9655, -52.1458, 3.33", "21.9324, -16.4011, -53.9947, 0.33", "22.4954, -16.5403, -54.5856, 0.67", "24.9571, -16.9213, -56.1517, 0.33", "26.3077, -17.0516, -56.9812, 3.32" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.8272, 11.846, -13.0963, 1.33", "-18.2872, 8.56045, -11.1486, 1.33", "-20.9157, 7.4028, -10.4623, 0.67", "-24.4306, 5.85475, -9.54459, 1.33", "-27.3189, 4.58269, -8.79049, 0.67", "-31.9027, 2.56388, -7.5937, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.8272, 11.846, -13.0963, 0.67", "-13.9512, 11.467, -14.6542, 0.67", "-16.2725, 11.1855, -15.8118, 0.67", "-19.2533, 10.8239, -17.2983, 0.67", "-23.5633, 10.3012, -19.4476, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.82559, 14.6906, 4.81174, 3.99", "5.15261, 18.4328, 4.36097, 3.99", "7.43039, 20.9947, 4.05235, 3.99", "7.43039, 20.9947, 4.05235, 3.99", "10.891, 24.887, 3.58348, 2.0", "13.0024, 27.2619, 3.2974, 2.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.82559, 14.6906, 4.81174, 0.67", "-2.84868, 17.2304, 12.0008, 0.67", "-5.66377, 18.9532, 15.9587, 1.33", "-8.17307, 20.8016, 19.2515, 1.33", "-10.7187, 22.6767, 22.5922, 2.0", "-15.5669, 26.248, 28.9544, 1.33", "-17.2669, 27.5001, 31.1852, 1.33", "-20.0702, 29.3751, 34.1476, 1.33", "-26.0434, 33.2063, 39.6413, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.34019, 42.8512, 0.200125, 0.862796", "9.47241, 57.6988, 0.200125, 0.862796", "11.6046, 72.5465, 0.200125, 0.862796" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-9.85254, -19.1282, -7.53524, 1.33", "-11.902, -22.9633, -12.785, 1.33", "-12.8529, -24.7426, -15.2206, 2.66" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-9.85254, -19.1282, -7.53524, 0.67", "-12.7561, -18.8679, -9.23357, 0.67", "-14.443, -18.6384, -10.0792, 0.33", "-15.0452, -18.5458, -10.3102, 0.67", "-19.4869, -17.8527, -11.7842, 0.33", "-20.7464, -17.6634, -12.1653, 0.67", "-25.4409, -16.9383, -13.4864, 0.33", "-27.1126, -16.6665, -13.891, 0.67", "-33.7779, -15.4805, -15.3789, 0.33", "-35.3313, -15.1978, -15.7123, 0.67", "-36.3079, -15.0141, -15.8947, 0.33", "-37.4443, -14.8232, -16.0801, 1.33", "-42.2168, -14.1398, -16.7486, 0.33", "-42.9282, -14.0502, -16.8358, 2.0", "-48.8966, -13.3292, -17.4103, 0.33", "-50.5361, -13.1419, -17.5297, 2.0", "-54.9052, -12.6612, -17.7286, 0.33", "-55.3472, -12.6058, -17.7682, 1.33", "-57.2739, -12.3147, -17.9437, 0.33", "-57.9682, -12.207, -18.1083, 0.67", "-59.7863, -11.9263, -18.7087, 0.33", "-60.1958, -11.8816, -18.8833, 1.33", "-67.1105, -11.2138, -22.2724, 0.33", "-68.553, -11.1148, -23.0559, 2.0", "-76.1733, -10.6752, -27.6786, 0.33", "-76.7102, -10.6552, -28.0444, 0.67", "-81.8728, -10.5752, -31.7916, 0.33", "-83.3054, -10.5848, -32.9197, 2.66", "-90.1978, -10.8156, -38.8578, 0.33", "-93.0152, -10.9002, -41.5747, 2.0", "-98.3529, -10.9557, -47.0557, 0.33", "-99.1334, -10.9347, -47.9149, 2.0", "-102.682, -10.6664, -52.1364, 0.33", "-104.339, -10.4733, -54.2254, 2.0", "-109.645, -9.38683, -61.3741, 0.33", "-110.666, -9.00479, -62.6888, 2.66", "-113.171, -7.6395, -65.7647, 0.33", "-113.574, -7.36957, -66.177, 0.67", "-115.959, -5.57493, -68.1015, 0.33", "-117.565, -4.29361, -69.2008, 2.66", "-125.005, 1.83042, -73.4953, 0.33", "-125.967, 2.60877, -74.0242, 2.0", "-133.504, 8.54503, -77.6631, 0.33", "-135.809, 10.3192, -78.6839, 0.67", "-138.236, 12.1451, -79.5654, 0.33", "-138.794, 12.5528, -79.7286, 0.67" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "26.3077, -17.0516, -56.9812, 0.33", "27.1862, -16.9334, -58.7356, 0.33", "27.6624, -16.9274, -59.7017, 3.33", "28.1591, -16.9358, -60.7072, 0.33", "28.8272, -16.9753, -61.9865, 2.66", "37.4304, -17.994, -77.5091, 0.33", "37.9269, -18.0834, -78.3867, 0.67", "40.4616, -18.6758, -82.8923, 0.33", "42.7762, -19.4013, -87.2166, 2.0", "45.5675, -20.4108, -92.6999, 0.33", "46.7712, -20.957, -95.1527, 1.33", "49.1887, -22.2737, -99.6891, 0.67", "51.6709, -23.6245, -104.199, 2.0", "55.6611, -25.845, -111.39, 0.33", "59.1513, -27.8994, -117.914, 2.0", "61.8893, -29.4151, -123.697, 0.33", "68.8347, -31.8213, -141.328, 0.67", "69.0714, -31.8694, -142.158, 3.33", "69.2562, -31.8347, -143.759, 0.67", "69.1485, -31.5256, -147.787, 0.67", "69.2034, -31.7216, -145.213, 2.66", "68.887, -32.3563, -136.091, 0.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "26.3077, -17.0516, -56.9812, 0.33", "28.4538, -16.9592, -58.7762, 0.33", "31.5595, -16.7965, -61.2525, 0.33", "33.6596, -16.6851, -62.8624, 0.33", "34.4415, -16.6444, -63.4581, 3.99", "39.0586, -16.4114, -67.2419, 0.33", "39.2228, -16.401, -67.3825, 0.67", "40.0687, -16.3129, -68.2065, 0.33", "40.3787, -16.2783, -68.5166, 0.67", "41.9693, -16.1824, -70.2293, 0.33", "44.0444, -16.0704, -72.4214, 2.66", "46.2471, -15.9325, -74.6046, 0.33", "48.2579, -15.7721, -76.5269, 2.0", "50.0223, -15.6246, -78.1438, 0.33", "52.0376, -15.4469, -79.8655, 2.0", "54.6725, -15.2178, -81.8675, 0.33", "55.9291, -15.1427, -82.6682, 2.66", "59.7228, -15.0001, -84.7982, 0.33", "60.5278, -14.9772, -85.1423, 2.0", "62.7669, -14.9147, -85.9182, 0.33", "63.6427, -14.9007, -86.1105, 2.0", "68.516, -14.8967, -86.7875, 0.33", "69.6755, -14.8916, -86.9284, 2.66", "73.4773, -14.7949, -86.9823, 0.33", "74.5016, -14.6725, -86.9701, 2.0", "77.1688, -14.1656, -86.8358, 0.33", "77.5162, -14.057, -86.8308, 0.67", "80.228, -12.8099, -86.8569, 0.33", "82.445, -11.6796, -87.1653, 2.0", "86.6902, -9.34493, -88.2356, 0.33", "86.9464, -9.2062, -88.31, 0.67", "89.935, -7.63355, -89.307, 0.33", "91.1349, -7.08332, -89.7739, 2.66", "94.6982, -5.68253, -91.3268, 0.33", "95.0661, -5.56259, -91.5146, 0.67", "96.2119, -5.29619, -92.2225, 0.33", "97.7656, -4.97313, -93.1858, 2.0", "100.94, -4.49238, -95.1976, 0.33", "101.579, -4.39601, -95.64, 0.33", "102.313, -4.27102, -96.1842, 2.0", "106.036, -3.58945, -99.1401, 0.33", "107.597, -3.28652, -100.517, 2.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-31.9027, 2.56388, -7.5937, 0.67", "-38.2611, 3.04297, -6.83971, 0.67", "-40.2867, 2.97185, -6.52484, 0.67", "-42.6692, 2.60393, -6.25227, 1.33", "-46.025, 1.9805, -5.95107, 0.33", "-47.2623, 1.75064, -5.84002, 2.0", "-50.4405, 1.16019, -5.55475, 0.33", "-53.6394, 0.397896, -5.57831, 2.66", "-57.4762, -0.921427, -5.53404, 0.33", "-59.7483, -1.97961, -5.4134, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-31.9027, 2.56388, -7.5937, 0.67", "-34.832, 7.29881, -13.9194, 0.67", "-35.4715, 8.17574, -15.4627, 0.33", "-36.1312, 8.72302, -17.5204, 0.67", "-36.6955, 9.00785, -19.259, 0.33", "-37.4123, 9.15822, -21.5213, 0.67", "-38.7916, 9.25617, -25.5021, 0.33", "-40.1186, 8.9299, -29.3182, 2.0", "-43.1762, 7.75656, -38.7614, 0.33", "-43.8193, 7.48587, -40.8327, 2.66", "-45.3158, 6.89813, -45.5756, 0.33", "-46.0785, 6.66595, -48.0457, 0.33", "-47.4267, 6.42611, -52.661, 0.33", "-49.4952, 6.31119, -60.4364, 2.66", "-51.6563, 6.44483, -68.9026, 0.33", "-52.3177, 6.49457, -71.735, 2.0", "-53.9386, 6.58751, -78.9164, 0.33", "-54.7166, 6.55067, -82.5354, 2.0", "-57.787, 6.0676, -96.921, 0.33", "-58.3054, 5.87875, -99.3714, 2.66", "-60.6099, 4.51492, -110.352, 0.33", "-60.8699, 4.29046, -111.659, 1.33", "-61.9809, 2.94909, -117.366, 0.33", "-62.9829, 1.47761, -122.393, 2.0", "-64.0603, -0.25859, -127.113, 0.33", "-64.3769, -0.771862, -128.351, 2.0", "-65.7789, -2.81151, -132.459, 0.67", "-68.1386, -5.89402, -138.222, 0.33", "-69.233, -7.1456, -140.297, 2.0", "-72.9444, -10.9382, -146.102, 0.33", "-73.615, -11.5795, -147.038, 1.33", "-75.744, -13.5276, -149.742, 0.33", "-76.143, -13.8744, -150.245, 1.33", "-79.0083, -16.4524, -154.072, 0.33", "-79.9396, -17.3351, -155.224, 2.0", "-82.2708, -19.6405, -157.882, 0.33", "-82.909, -20.2798, -158.58, 0.67", "-89.9317, -27.5407, -166.399, 0.33", "-90.8436, -28.49, -167.362, 1.33", "-96.1654, -33.9644, -172.314, 0.33", "-96.3854, -34.1849, -172.5, 1.33", "-98.3733, -36.0582, -173.971, 0.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.5633, 10.3012, -19.4476, 0.67", "-22.8321, 11.7613, -20.9594, 0.67", "-22.4398, 12.5446, -21.7704, 2.0", "-20.3789, 16.6599, -26.0314, 0.33", "-19.1842, 19.0454, -28.5013, 1.33", "-15.8217, 25.7598, -35.4534, 0.33", "-15.188, 27.0252, -36.7636, 2.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-23.5633, 10.3012, -19.4476, 0.33", "-29.0921, 5.42735, -30.5823, 0.33", "-29.0921, 5.42735, -30.5823, 0.67", "-31.4934, 2.80881, -35.6924, 0.33", "-32.4848, 1.41769, -38.3664, 2.0", "-36.2113, -4.28995, -49.7249, 0.33", "-36.8518, -5.27435, -51.7575, 2.0", "-40.2854, -10.8282, -63.0987, 0.33", "-41.114, -12.1121, -65.8805, 2.66", "-45.6236, -18.7717, -81.2003, 0.33", "-47.641, -21.3345, -87.7478, 2.66", "-50.6874, -24.3856, -96.8265, 0.33", "-51.1469, -24.7001, -98.0089, 2.0", "-53.2063, -25.447, -102.258, 0.33", "-54.3991, -25.5937, -104.144, 1.33", "-59.367, -24.9723, -108.801, 0.33", "-62.1778, -24.5202, -110.507, 2.0", "-69.0324, -23.3281, -113.188, 0.33", "-69.3895, -23.2836, -113.274, 1.33", "-76.9727, -22.6779, -113.906, 0.33", "-78.5952, -22.6345, -113.914, 2.66", "-87.2785, -22.8328, -113.099, 0.33", "-88.6905, -22.9299, -112.918, 2.0", "-93.6955, -23.6587, -112.187, 0.33", "-94.4252, -23.768, -112.125, 1.33", "-99.121, -24.5759, -112.131, 0.33", "-99.7295, -24.6085, -112.22, 2.0", "-101.883, -24.2535, -113.038, 0.33", "-102.31, -24.124, -113.308, 0.67", "-105.806, -22.7619, -115.822, 0.33", "-107.059, -22.235, -116.824, 2.0", "-111.071, -20.4561, -120.116, 0.33", "-112.02, -20.0526, -120.958, 1.33", "-120.638, -16.4543, -128.929, 0.33", "-122.098, -15.8383, -130.395, 2.66", "-130.149, -12.4714, -139.112, 0.33", "-130.924, -12.1343, -139.947, 2.0", "-134.178, -10.6635, -143.362, 0.33", "-135.175, -10.2442, -144.353, 2.0", "-140.642, -8.07913, -149.34, 0.33", "-141.087, -7.90566, -149.735, 0.67", "-146.493, -5.7404, -153.916, 0.33", "-146.777, -5.62639, -154.122, 1.33", "-151.629, -3.66524, -157.118, 0.33", "-152.311, -3.42359, -157.503, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.0024, 27.2619, 3.2974, 0.67", "17.3849, 27.4199, 1.55683, 0.67", "19.8283, 27.5079, 0.586433, 0.33", "22.27, 27.5959, -0.383331, 0.67", "24.3491, 27.6709, -1.20904, 0.33", "27.5387, 27.7858, -2.47583, 1.33", "30.5422, 27.8941, -3.6687, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "13.0024, 27.2619, 3.2974, 0.67", "12.3446, 29.4607, 13.4914, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-26.0434, 33.2063, 39.6413, 0.67", "-29.3191, 37.1435, 43.666, 0.67", "-32.1032, 40.4897, 47.0866, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-26.0434, 33.2063, 39.6413, 0.33", "-35.9154, 41.8283, 28.7449, 0.33", "-37.7448, 43.1321, 26.8742, 1.33", "-40.2028, 44.7087, 24.5263, 0.33", "-41.5632, 45.5467, 23.2889, 1.33", "-43.2462, 46.5118, 21.8601, 0.33", "-46.6786, 48.3777, 19.138, 1.33", "-51.1396, 50.2369, 16.8309, 0.67", "-52.2857, 50.649, 16.2353, 0.67", "-56.8832, 52.2358, 13.883, 0.33", "-58.8771, 52.953, 12.902, 0.33", "-60.261, 53.4199, 12.3701, 0.67", "-63.0431, 54.3791, 11.6392, 0.33", "-64.0313, 54.7204, 11.4553, 2.0", "-68.6323, 56.2299, 10.6509, 0.33", "-70.8919, 56.9228, 10.3154, 2.0", "-79.1263, 59.5533, 8.94832, 0.33", "-81.5012, 60.2996, 8.51159, 2.66", "-83.0336, 60.7633, 8.20862, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-12.8529, -24.7426, -15.2206, 1.33", "-12.8444, -29.3122, -11.5389, 1.33", "-12.8407, -31.3053, -9.93317, 1.33", "-12.8301, -36.9881, -5.3546, 2.0" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-12.8529, -24.7426, -15.2206, 0.33", "-15.2703, -26.4103, -10.6701, 0.33", "-15.541, -26.5605, -10.3421, 1.33", "-21.6626, -30.1335, -3.96101, 0.67", "-22.4816, -30.6561, -3.16871, 0.67", "-25.7235, -32.9302, -0.196073, 0.33", "-30.3051, -36.1927, 4.03563, 2.66", "-37.2417, -41.1685, 9.88867, 0.33", "-38.9894, -42.4191, 11.2355, 0.33", "-40.5169, -43.4914, 12.1845, 1.33", "-43.9745, -46.1514, 14.5546, 0.33", "-46.8402, -48.6707, 16.8344, 2.66", "-47.4691, -49.2198, 17.5294, 2.66" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "68.887, -32.3563, -136.091, 1.33", "70.4039, -32.4484, -139.887, 1.33", "73.0617, -32.3932, -146.504, 0.67", "75.1688, -32.1587, -151.445, 2.0", "76.8462, -31.9018, -155.173, 2.0", "80.2574, -31.2598, -162.434, 0.67", "81.3684, -31.024, -164.711, 0.33", "82.2451, -30.8083, -166.511, 2.0", "85.3112, -29.9019, -172.519, 0.33", "86.1231, -29.6771, -174.142, 1.33", "87.4915, -29.2887, -177.068, 0.33", "88.4444, -29.0444, -179.084, 1.33", "92.0677, -28.0124, -187.442, 0.33", "92.568, -27.8493, -188.694, 2.0", "95.0619, -26.8694, -195.444, 0.33", "95.9394, -26.4702, -197.867, 0.33", "96.8603, -26.0061, -200.498, 1.33", "98.9621, -24.7403, -206.589, 0.33", "99.2178, -24.5291, -207.284, 0.67", "99.8736, -23.9023, -209.079, 0.33", "100.117, -23.5986, -209.65, 0.67" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "68.887, -32.3563, -136.091, 0.33", "69.0229, -31.9643, -138.054, 0.33", "69.0542, -31.4638, -141.351, 0.67", "69.0747, -30.8299, -147.3, 2.0", "69.1103, -30.1949, -154.861, 0.67", "69.0643, -30.0078, -157.819, 3.33", "68.8683, -29.6908, -165.757, 1.33", "68.6232, -29.7317, -170.893, 0.67", "68.1551, -30.0515, -176.661, 0.33", "68.0955, -30.1206, -177.186, 1.33", "67.217, -31.6246, -184.049, 0.67", "67.03, -32.2066, -185.9, 0.67", "66.9744, -33.0027, -187.877, 0.33", "67.0162, -33.4034, -188.84, 0.67", "67.2926, -34.7891, -191.988, 0.33", "67.5036, -35.4956, -193.612, 0.67", "68.4132, -37.8366, -199.181, 0.33", "69.2284, -39.7689, -204.245, 0.33", "69.9411, -41.4415, -208.776, 0.67", "70.1567, -42.0197, -210.4, 0.33", "70.5374, -43.2565, -213.977, 0.67", "70.8742, -45.0287, -218.795, 0.33", "70.934, -45.606, -220.218, 0.67", "70.9106, -47.6163, -224.682, 0.33", "70.8234, -48.3541, -226.233, 1.33", "70.655, -49.442, -228.602, 0.33", "70.5944, -49.8691, -229.425, 0.67" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "107.597, -3.28652, -100.517, 0.33", "109.179, -2.73514, -102.105, 0.33", "109.402, -2.66495, -102.286, 0.67", "109.918, -2.51241, -102.658, 0.67", "113.05, -1.61581, -104.89, 0.33", "113.737, -1.43331, -105.358, 2.0", "118.033, -0.337965, -108.308, 0.33", "120.513, 0.237127, -110.061, 0.33", "121.068, 0.360359, -110.446, 0.67", "123.967, 1.02612, -112.524, 0.33", "124.954, 1.24976, -113.207, 0.33", "126.278, 1.54841, -114.147, 2.0", "130.148, 2.37086, -116.852, 0.33", "130.148, 2.37086, -116.852, 0.67", "132.933, 3.03518, -119.188, 0.33", "133.537, 3.18754, -119.69, 2.66" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "107.597, -3.28652, -100.517, 0.33", "108.494, -2.67174, -101.217, 0.33", "108.944, -2.35108, -101.553, 0.67", "113.762, 1.16511, -105.198, 0.33", "114.156, 1.46014, -105.496, 0.67", "117.607, 4.09184, -108.072, 0.33", "118.212, 4.5503, -108.477, 1.33", "120.569, 6.39811, -109.902, 0.33", "121.202, 6.85759, -110.173, 0.67", "123.025, 8.07468, -110.539, 0.33", "123.567, 8.3928, -110.645, 1.33", "126.81, 10.069, -111.231, 0.33", "127.167, 10.2442, -111.275, 0.67", "130.725, 11.9276, -111.584, 0.33", "131.879, 12.4639, -111.653, 2.0", "138.612, 15.4881, -111.96, 0.33", "139.73, 15.991, -112.007, 1.33", "141.742, 16.9136, -112.202, 0.33", "143.043, 17.5524, -112.377, 0.67", "145.532, 18.893, -112.741, 0.33", "146.029, 19.173, -112.793, 0.67", "148.51, 20.62, -112.903, 0.33", "151.673, 22.4306, -113.225, 2.0", "153.919, 23.6478, -113.545, 0.33", "155.664, 24.5178, -113.72, 0.67", "159.005, 26.0149, -113.981, 0.33", "160.551, 26.5786, -113.988, 1.33", "162.926, 27.2585, -113.831, 0.33", "164.442, 27.6157, -113.621, 1.33", "167.318, 28.1089, -113.255, 0.33", "168.425, 28.2487, -113.141, 0.67", "172.167, 28.4479, -112.44, 0.33", "172.571, 28.4562, -112.317, 0.67" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-59.7483, -1.97961, -5.4134, 0.33", "-62.2583, -3.09758, -5.19415, 0.33", "-62.6278, -3.21785, -5.11669, 0.67", "-65.2328, -3.86, -4.44911, 0.33", "-65.8194, -3.97233, -4.27303, 1.33", "-67.9306, -4.31316, -3.62047, 0.33", "-70.8191, -4.71054, -2.52357, 2.0", "-73.1732, -4.87824, -1.50682, 0.33", "-74.1737, -4.91562, -1.03388, 0.33", "-75.3908, -4.89416, -0.371494, 1.33", "-76.9076, -4.84906, 0.516018, 0.33", "-80.6924, -4.7088, 2.99304, 2.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-59.7483, -1.97961, -5.4134, 0.33", "-65.6104, -2.48514, -4.37868, 0.33", "-66.9333, -2.42683, -4.03274, 0.67", "-71.177, -1.76356, -2.44182, 0.33", "-72.8251, -1.37429, -1.53849, 1.33", "-76.1011, -0.311908, 0.559671, 0.33", "-78.407, 0.669634, 2.37351, 1.33", "-81.5131, 2.62226, 5.26152, 0.33", "-84.3034, 5.08348, 8.41463, 2.0", "-87.024, 8.28933, 12.03, 0.33", "-88.4949, 10.3475, 14.2658, 2.0", "-91.0923, 14.4317, 18.5859, 0.33", "-92.3264, 16.4771, 20.6503, 2.0", "-95.4707, 21.8373, 25.7997, 0.33", "-96.5516, 23.6197, 27.4195, 2.0", "-99.0883, 27.7705, 30.827, 0.67", "-100.163, 29.5331, 32.1721, 0.33", "-102.444, 33.1361, 34.7854, 2.66", "-105.053, 37.2424, 37.6674, 0.67", "-106.107, 38.9301, 38.7103, 0.33", "-107.845, 41.9469, 40.3075, 0.67", "-109.739, 45.5436, 41.9843, 0.67", "-111.531, 49.294, 43.6765, 3.33", "-114.797, 55.9767, 47.008, 0.67", "-116.726, 59.555, 48.9058, 0.67", "-118.137, 61.8048, 50.2178, 2.66", "-120.465, 64.8074, 52.2295, 2.66", "-123.377, 67.788, 54.4342, 0.67", "-127.199, 70.3974, 57.0372, 0.67", "-129.308, 70.95, 58.3898, 2.0", "-133.063, 71.2573, 60.7979, 0.33", "-134.189, 71.2436, 61.5026, 2.0", "-136.799, 71.0577, 63.0133, 1.33", "-143.34, 70.4517, 66.6027, 0.33", "-145.875, 70.3706, 67.9619, 1.33", "-148.584, 70.4633, 69.5078, 0.33", "-149.917, 70.6219, 70.2918, 0.33", "-151.297, 70.8001, 70.9936, 1.33", "-153.317, 71.1896, 71.7539, 0.67", "-154.995, 71.6419, 72.1117, 1.33", "-157.095, 72.1824, 72.4578, 0.33", "-158.436, 72.4258, 72.6032, 0.67", "-162.606, 73.0117, 73.0185, 0.33", "-165.856, 73.3379, 73.3129, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-15.188, 27.0252, -36.7636, 0.33", "-17.9675, 30.9151, -38.1001, 0.33", "-18.9802, 32.4959, -38.5505, 2.0", "-20.938, 36.0328, -39.403, 0.33", "-21.1901, 37.1453, -39.8998, 1.33", "-21.6653, 42.3552, -42.4988, 0.33", "-21.7677, 44.7696, -44.156, 1.33", "-21.7057, 46.4258, -45.4909, 0.33", "-21.6053, 47.7564, -46.654, 2.0", "-20.5726, 57.2621, -55.5688, 0.33", "-20.4304, 58.2723, -56.5936, 1.33", "-19.2696, 65.1523, -63.8264, 0.33", "-19.1299, 65.9923, -64.7443, 2.0", "-18.3402, 71.3536, -70.501, 0.33", "-18.154, 72.8659, -72.1824, 2.66", "-17.4917, 79.272, -79.3559, 0.33", "-17.4316, 80.0584, -80.3519, 1.33", "-17.2199, 84.1002, -85.9261, 0.33", "-17.2353, 85.7322, -88.4424, 1.33", "-17.5463, 90.0084, -95.9114, 0.33", "-17.6086, 90.5831, -96.888, 1.33", "-18.633, 96.2796, -105.643, 0.33", "-18.9482, 98.2471, -108.558, 2.0", "-19.148, 99.1897, -109.903, 0.67", "-19.7007, 101.816, -113.523, 2.0", "-20.3568, 105.282, -117.654, 0.33", "-21.4665, 110.941, -123.937, 0.33", "-22.3373, 115.494, -128.881, 2.0", "-23.5315, 121.23, -135.412, 0.33", "-23.8862, 122.806, -137.361, 0.67", "-25.125, 127.847, -144.465, 0.33", "-25.3512, 128.723, -145.912, 2.0", "-26.4761, 133.436, -154.863, 0.33", "-26.5541, 133.832, -155.671, 1.33", "-26.8017, 135.837, -160.3, 1.33", "-27.2424, 138.767, -167.774, 0.33", "-27.3637, 139.469, -170.016, 0.67", "-27.5475, 140.461, -173.348, 0.33", "-27.7645, 141.084, -175.256, 1.33", "-28.4235, 142.697, -179.658, 0.33", "-28.646, 143.055, -180.458, 0.67", "-29.2446, 143.828, -181.977, 0.33", "-29.8274, 144.591, -183.292, 0.67", "-31.9254, 147.286, -187.655, 0.33", "-33.8041, 149.785, -191.569, 1.33", "-36.0718, 153.38, -197.337, 0.33", "-37.0557, 154.999, -199.889, 2.0", "-38.3972, 157.308, -203.386, 0.33", "-38.97, 158.319, -204.898, 0.67", "-40.274, 160.708, -208.698, 0.33", "-42.3909, 165.168, -215.606, 1.33" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-15.188, 27.0252, -36.7636, 0.33", "-13.657, 28.577, -38.7456, 0.33", "-12.8132, 29.4357, -39.775, 1.33", "-6.17119, 36.0086, -47.7014, 0.33", "-4.95804, 37.1853, -49.1293, 1.33", "0.604901, 42.5048, -55.4744, 0.33", "1.63627, 43.4842, -56.585, 0.67", "3.23132, 44.9203, -58.2154, 0.33", "6.01684, 47.4587, -60.8126, 1.33", "8.32762, 49.5476, -62.4079, 0.33", "9.26276, 50.4268, -62.954, 1.33", "11.446, 52.3144, -63.3694, 0.33", "11.6662, 52.5222, -63.4318, 0.67", "13.567, 54.3587, -64.2328, 0.33", "13.567, 54.3587, -64.2328, 0.67", "14.918, 55.7524, -64.9904, 0.33", "16.1392, 56.9875, -65.7453, 1.33", "20.2866, 61.356, -68.4957, 0.67", "23.8126, 65.1061, -71.0071, 0.33", "24.4825, 65.8173, -71.5368, 2.0", "26.9827, 68.435, -73.5484, 0.33", "27.7433, 69.2215, -74.1519, 0.67", "29.6269, 71.2675, -75.6816, 0.33", "32.2476, 74.1925, -77.7925, 2.0", "34.9896, 77.3655, -80.2018, 0.33", "35.1645, 77.5545, -80.3742, 0.67", "36.0362, 78.4433, -81.3095, 0.33", "37.9599, 80.4089, -83.5128, 0.67", "41.3531, 83.7328, -87.432, 0.33", "41.796, 84.2226, -88.0075, 2.0", "43.9648, 86.8198, -91.0546, 0.33", "44.1452, 87.0568, -91.3666, 0.67", "45.7555, 89.2467, -94.5779, 0.33", "46.0444, 89.6072, -95.1, 0.67", "48.3932, 92.5392, -99.1032, 0.33", "49.604, 94.0796, -101.127, 0.67", "54.9495, 101.035, -110.221, 0.33", "58.0876, 104.911, -115.558, 0.67", "61.1923, 108.491, -120.678, 0.33", "61.7948, 109.194, -121.726, 1.33", "63.9447, 111.67, -125.527, 1.33", "66.1624, 114.133, -129.357, 0.67", "67.3167, 115.365, -131.174, 0.33", "67.9631, 115.967, -132.1, 0.67", "70.588, 118.055, -135.737, 0.33", "70.7934, 118.173, -135.934, 0.67", "75.6924, 120.2, -138.559, 0.33", "77.1774, 120.739, -139.117, 0.67", "82.0952, 122.548, -140.788, 0.33", "82.3812, 122.647, -140.886, 0.67", "85.3886, 123.646, -141.823, 0.33", "85.6312, 123.758, -141.978, 0.67", "86.964, 124.464, -143.136, 0.33", "87.6116, 124.801, -143.715, 0.67", "89.1091, 125.607, -145.064, 0.33", "89.4252, 125.766, -145.351, 1.33", "97.7587, 129.516, -152.756, 0.33", "98.8683, 130.01, -153.829, 0.67", "99.5832, 130.366, -154.619, 0.33", "100.309, 130.766, -155.499, 0.67", "102.572, 132.285, -158.658, 0.33", "104.462, 133.767, -161.669, 0.67", "107.246, 136.642, -167.024, 1.33", "109.585, 139.678, -172.324, 0.33", "109.968, 140.297, -173.342, 0.67", "111.119, 142.489, -176.931, 0.33", "111.46, 143.316, -178.217, 1.33", "112.205, 145.704, -181.821, 0.67", "112.667, 147.468, -184.402, 0.33", "112.92, 148.336, -185.725, 0.67", "114.782, 153.088, -193.532, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "30.5422, 27.8941, -3.6687, 0.33", "32.0443, 30.0423, -0.652516, 0.33", "32.3518, 30.4718, -0.0380659, 1.33", "34.2431, 33.0486, 3.75957, 0.67", "35.079, 34.1674, 5.44507, 0.33", "36.0331, 35.2814, 7.23021, 2.66", "38.1798, 37.5765, 11.1648, 0.33", "38.4432, 37.8281, 11.6443, 2.0", "41.1119, 40.0606, 16.1508, 0.33", "41.2561, 40.1567, 16.3586, 0.67", "44.0215, 41.6927, 19.7321, 0.33", "45.693, 42.5392, 21.6536, 2.66", "48.8672, 44.0331, 25.0227, 0.33", "49.6196, 44.3594, 25.7876, 2.0", "52.8342, 45.5619, 28.6585, 0.33", "54.9054, 46.3738, 30.4218, 2.0" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "30.5422, 27.8941, -3.6687, 0.67", "32.0869, 27.224, -4.84964, 0.67", "33.8122, 26.2772, -6.88756, 0.33", "34.9423, 25.6373, -8.30816, 0.33", "37.1929, 24.3699, -11.2571, 2.0", "39.7227, 22.9969, -14.5536, 0.33", "40.4448, 22.6396, -15.455, 2.0", "48.2272, 19.0169, -25.4143, 0.33", "48.5486, 18.872, -25.8198, 1.33", "51.1234, 17.7895, -28.9178, 0.33", "52.3565, 17.2906, -30.2809, 2.66", "54.1756, 16.602, -32.0896, 0.33", "54.7545, 16.4001, -32.5383, 1.33", "56.4253, 15.8315, -33.2464, 0.33", "58.3847, 14.9337, -34.0124, 2.0", "61.8191, 13.0377, -35.1896, 0.33", "62.5511, 12.5169, -35.4521, 2.0", "66.3323, 9.25245, -36.8808, 0.33", "66.9398, 8.57025, -37.1503, 2.0", "71.2343, 2.64915, -39.3626, 0.33", "71.7811, 1.65774, -39.6869, 2.66", "73.0686, -1.86339, -40.6651, 0.33", "73.2458, -2.7569, -40.8981, 2.0", "73.1935, -8.68467, -42.2058, 0.33", "73.1494, -9.03667, -42.2732, 0.67", "72.6653, -10.8516, -42.5208, 0.33", "72.3868, -12.1485, -42.6507, 1.33", "72.1848, -13.7787, -42.6928, 0.33", "72.1675, -14.033, -42.6688, 0.67", "72.0541, -18.3421, -41.7552, 0.33", "72.1098, -19.0395, -41.575, 1.33", "72.4832, -21.1402, -40.9544, 0.33", "72.8652, -22.516, -40.3932, 2.0", "74.2082, -26.2138, -38.4152, 0.33", "74.2924, -26.417, -38.2839, 0.67", "76.0447, -30.0928, -35.4635, 0.33", "76.5785, -31.1551, -34.6123, 1.33", "78.2225, -34.3099, -31.9805, 0.33", "78.7636, -35.3431, -31.1112, 1.33", "80.2464, -38.123, -28.7206, 0.33", "80.697, -39.0444, -27.937, 0.67", "81.3996, -40.8765, -26.4318, 0.33", "81.6626, -41.7369, -25.8108, 0.67", "82.3349, -44.9903, -24.1153, 0.33", "82.3775, -45.2178, -24.0082, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.3446, 29.4607, 13.4914, 0.67", "12.6943, 29.5861, 15.1039, 0.67", "15.0547, 30.7508, 25.5579, 0.67", "15.2829, 30.9267, 26.4063, 0.67", "15.8686, 31.4687, 28.2964, 0.33", "15.9751, 31.5583, 28.5574, 0.67", "16.9643, 32.2608, 30.7684, 0.33", "18.247, 32.9039, 32.9655, 1.33", "22.1119, 34.4466, 37.4837, 0.33", "22.9952, 34.6611, 38.3767, 1.33", "25.693, 34.9381, 40.6684, 0.33", "28.0873, 35.0191, 42.3901, 2.66", "29.7967, 34.9442, 43.3269, 0.33", "31.3608, 34.7747, 43.9928, 0.67", "33.3012, 34.5186, 44.4196, 0.67", "35.0578, 34.3361, 44.7232, 0.33", "36.7918, 34.2594, 44.8651, 0.67", "39.6376, 34.4467, 44.8227, 0.33", "42.1506, 34.9009, 44.8486, 0.67", "43.9065, 35.378, 44.8777, 0.33", "44.508, 35.5823, 44.8899, 1.33", "46.9176, 36.5566, 44.9651, 0.33", "49.3567, 37.6253, 45.0144, 2.66", "52.2156, 38.9608, 44.9624, 0.33", "54.5092, 40.0048, 44.8039, 0.67", "55.8875, 40.6325, 44.7232, 0.33", "57.4107, 41.3817, 44.6573, 2.0", "59.9714, 42.8511, 44.6365, 0.33" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.3446, 29.4607, 13.4914, 0.67", "11.7014, 32.8825, 8.35191, 0.67", "12.046, 34.214, 6.05177, 1.33", "12.5914, 35.2071, 4.19719, 0.67", "13.4872, 36.598, 2.09751, 0.67", "13.8917, 37.2949, 1.11251, 1.33", "15.3336, 39.9108, -2.42186, 0.67", "16.1489, 41.1131, -3.92217, 1.33", "16.592, 41.6864, -4.68097, 0.67", "18.2051, 43.6946, -7.36737, 2.0", "20.5214, 46.9437, -11.3566, 0.67", "21.7243, 49.0151, -13.7932, 0.67", "22.325, 50.6584, -15.4416, 2.0" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-32.1032, 40.4897, 47.0866, 0.67", "-36.0599, 40.4171, 47.8105, 0.67", "-38.5335, 40.6296, 48.3357, 0.67", "-41.9502, 41.107, 49.0622, 0.67", "-46.3025, 41.7194, 49.9613, 0.67", "-49.5455, 42.2212, 50.467, 0.67", "-54.2069, 42.9887, 50.7797, 0.67", "-63.4805, 44.4964, 50.9011, 0.67", "-67.4323, 45.2165, 50.7732, 1.33", "-69.5761, 45.5803, 50.6185, 0.67", "-77.6974, 46.7941, 49.8751, 0.67", "-85.8668, 48.0621, 49.0712, 0.67", "-88.0581, 48.3856, 48.8249, 1.33", "-92.498, 48.8505, 48.37, 0.67", "-96.2216, 49.2338, 48.1303, 1.33", "-101.277, 49.7861, 48.0843, 0.67", "-107.781, 50.5599, 48.3948, 0.67", "-110.904, 51.0087, 48.6782, 1.33", "-113.61, 51.5572, 48.8154, 0.33", "-115.56, 52.0922, 48.8641, 1.33", "-118.381, 53.2753, 48.6329, 0.33", "-121.965, 55.4111, 47.7623, 2.0", "-124.548, 57.4868, 46.61, 0.67", "-127.114, 59.6655, 44.9396, 0.67", "-128.567, 60.9966, 43.7943, 1.33", "-131.713, 63.9397, 40.8669, 0.67", "-132.768, 65.0212, 39.8395, 0.67", "-135.109, 67.4274, 37.092, 2.0", "-138.22, 70.5763, 32.7835, 0.33", "-138.884, 71.2131, 31.8705, 0.67", "-141.167, 73.3724, 28.5862, 2.0", "-143.381, 75.3554, 25.3913, 0.33", "-148.814, 80.3314, 16.9906, 2.0", "-151.608, 83.0761, 12.2865, 0.67", "-153.058, 84.6742, 9.6685, 2.0" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-32.1032, 40.4897, 47.0866, 0.33", "-32.6898, 42.9853, 48.7648, 0.33", "-32.9367, 43.6207, 49.7188, 0.67", "-33.1425, 44.5767, 51.0403, 0.33", "-33.2856, 45.2956, 52.144, 1.33", "-33.7448, 47.0544, 55.0917, 0.67", "-34.8361, 51.2342, 62.097, 0.33", "-34.9475, 51.5635, 62.834, 0.67", "-35.2784, 52.3337, 64.8442, 0.33", "-35.6174, 53.0343, 67.2668, 0.33", "-35.9109, 53.5543, 69.6539, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-83.0336, 60.7633, 8.20862, 0.67", "-86.014, 61.1347, 9.60518, 0.67", "-87.4859, 61.3718, 10.2967, 1.33", "-93.9065, 62.597, 13.3579, 0.33", "-94.3105, 62.6865, 13.5496, 2.0", "-99.664, 63.9261, 16.2159, 0.33", "-100.3, 64.0898, 16.5244, 2.66", "-102.718, 64.8215, 17.6882, 0.33", "-103.342, 65.0387, 17.9624, 0.67", "-104.946, 65.7596, 18.6226, 0.33", "-106.663, 66.5616, 19.3617, 0.67", "-109.452, 68.0854, 20.7302, 0.33", "-109.823, 68.279, 20.9006, 2.0", "-110.837, 68.7491, 21.2658, 2.0" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-83.0336, 60.7633, 8.20862, 0.33", "-88.3211, 62.1611, 2.14223, 0.33", "-89.5839, 62.5208, 0.676807, 2.66", "-91.4066, 63.0678, -1.37169, 0.33", "-93.2243, 63.5911, -3.36477, 2.0", "-95.5094, 64.227, -5.75929, 0.33", "-96.364, 64.4774, -6.63336, 2.0", "-99.5352, 65.618, -9.65038, 0.33", "-100.561, 66.0224, -10.6763, 2.0", "-103.255, 67.1732, -13.6772, 0.33", "-104.225, 67.6549, -14.7568, 0.67", "-105.4, 68.3274, -16.1052, 0.33", "-106.509, 69.0208, -17.3886, 2.0", "-108.677, 70.5182, -19.9414, 0.33", "-111.251, 72.3463, -22.8849, 2.0", "-113.453, 73.69, -25.0117, 0.33", "-113.892, 73.9104, -25.3849, 1.33", "-118.127, 75.5821, -28.3932, 0.33", "-118.342, 75.6548, -28.528, 0.67", "-120.357, 76.2403, -29.6497, 2.0", "-126.744, 77.8974, -32.8649, 0.33", "-127.925, 78.1636, -33.4226, 2.66", "-135.157, 79.6567, -36.5275, 0.33", "-136.709, 79.9335, -37.1208, 2.0", "-139.631, 80.428, -38.4127, 0.33", "-140.512, 80.5666, -38.851, 1.33", "-143.447, 81.0198, -40.0594, 0.33", "-144.198, 81.1233, -40.3004, 1.33", "-147.411, 81.328, -40.6927, 0.33", "-154.111, 81.5856, -41.3015, 0.33", "-154.943, 81.608, -41.3596, 2.0", "-162.159, 81.7897, -41.8383, 0.33", "-163.494, 81.826, -41.8693, 2.0", "-168.371, 81.9271, -41.504, 0.33", "-171.992, 81.9514, -40.4227, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-12.8301, -36.9881, -5.3546, 0.67", "-13.4898, -40.8128, -8.39969, 0.67", "-14.0261, -43.8925, -10.5275, 2.0", "-14.7188, -47.8706, -13.2762, 0.67", "-15.0639, -49.852, -14.6453, 2.0", "-15.7525, -53.8064, -17.3776, 0.67", "-15.9958, -55.2034, -18.3428, 1.33", "-16.5784, -57.3573, -20.1038, 2.0" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-12.8301, -36.9881, -5.3546, 0.67", "-14.3377, -38.7266, -7.09313, 0.67", "-15.9468, -40.5507, -8.51663, 0.33", "-17.1884, -41.8401, -9.41978, 0.67", "-18.3, -42.9297, -10.1625, 0.33", "-18.9556, -43.5121, -10.6565, 0.67", "-22.2063, -46.2306, -13.0199, 0.33", "-23.5442, -47.3231, -14.0536, 0.33", "-24.4249, -47.9745, -14.7213, 0.67", "-26.3219, -49.2305, -16.1812, 1.33", "-29.6427, -51.2529, -18.4691, 0.33", "-31.1147, -52.0886, -19.4024, 2.66", "-35.1873, -54.1593, -21.7209, 0.33", "-38.3265, -55.8334, -23.3777, 0.33", "-39.6815, -56.5353, -23.893, 2.0", "-43.8107, -58.6474, -24.8673, 0.33", "-44.3886, -58.9399, -24.9304, 0.67", "-46.4655, -59.9675, -25.0516, 0.33", "-47.9181, -60.6535, -25.1125, 3.33", "-52.1355, -62.7501, -25.5228, 0.33", "-53.322, -63.3198, -25.7019, 0.67", "-56.5268, -64.8199, -26.3438, 0.33", "-58.3694, -65.6746, -26.7343, 2.0", "-63.41, -68.0814, -27.8589, 0.33", "-65.794, -69.2717, -28.4244, 2.66", "-68.6115, -70.8865, -29.321, 0.67", "-71.543, -72.8103, -30.3617, 0.33", "-72.0846, -73.2394, -30.574, 0.67", "-73.5828, -74.8031, -31.3097, 0.33", "-74.2862, -75.8128, -31.739, 2.66", "-76.3162, -79.6488, -33.8297, 0.67", "-77.291, -81.9851, -35.2786, 0.33", "-77.5107, -82.5425, -35.6433, 1.33", "-78.9511, -86.0515, -37.9819, 0.33", "-79.5616, -87.5389, -38.8846, 3.33", "-81.3853, -92.0567, -41.3469, 0.33", "-81.6183, -92.6626, -41.6215, 0.67", "-82.731, -95.7949, -42.9383, 0.33", "-83.0273, -96.6838, -43.2574, 2.0", "-85.0081, -102.921, -44.9342, 0.33", "-85.4878, -104.691, -45.3088, 2.66", "-85.9309, -106.662, -45.5586, 0.33", "-85.9977, -106.962, -45.594, 0.67", "-86.2676, -108.207, -45.7263, 0.33", "-86.5774, -109.437, -45.9197, 2.66", "-87.7539, -113.42, -46.6975, 0.33", "-88.0654, -114.476, -46.961, 1.33", "-89.4808, -119.278, -48.2982, 0.33", "-89.8806, -120.75, -48.7526, 1.33", "-90.9464, -125.03, -50.1627, 0.33", "-91.147, -125.902, -50.4637, 2.0", "-92.057, -130.38, -52.0783, 0.33", "-92.2921, -131.618, -52.5469, 2.66", "-92.6981, -134.283, -53.5885, 0.33", "-92.8026, -134.88, -53.8292, 0.67", "-93.4963, -138.201, -55.262, 0.33", "-93.8264, -139.549, -55.9558, 1.33", "-94.2534, -141.072, -56.8943, 0.33", "-94.452, -141.877, -57.461, 0.67", "-95.0255, -144.358, -59.2838, 0.33", "-95.4705, -146.576, -61.0309, 2.66", "-96.0803, -149.902, -63.772, 0.33", "-96.3475, -151.5, -65.0527, 1.33", "-96.8969, -155.429, -68.0927, 0.33", "-97.0268, -156.419, -68.8687, 1.33", "-97.5893, -160.703, -72.0974, 0.33", "-97.6644, -161.082, -72.3949, 1.33", "-98.0693, -162.561, -73.589, 0.33", "-98.2186, -163.039, -73.9774, 2.0", "-99.7411, -167.1, -77.456, 0.33", "-99.93, -167.564, -77.873, 2.0", "-103.001, -174.265, -84.0482, 0.33", "-103.631, -175.599, -85.3359, 1.33" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-47.4691, -49.2198, 17.5294, 0.33", "-50.2543, -50.1006, 16.524, 0.33", "-51.0658, -50.2831, 16.2131, 0.67", "-53.9161, -50.8162, 15.1469, 0.33", "-55.4974, -51.0843, 14.5607, 0.67", "-59.6847, -51.6856, 12.9391, 0.33", "-60.9836, -51.8279, 12.4756, 0.67", "-64.8283, -51.9674, 11.1109, 0.33", "-65.5477, -51.9727, 10.8469, 0.67", "-68.8518, -51.9201, 9.69479, 0.33", "-71.4858, -51.8719, 8.82417, 2.66", "-74.813, -51.7771, 7.87291, 0.33", "-75.5591, -51.7582, 7.66209, 0.67", "-79.0122, -51.7321, 6.63579, 0.33", "-81.3582, -51.7542, 5.97422, 1.33", "-85.5733, -51.9448, 4.87331, 0.33", "-86.1012, -51.9914, 4.71692, 0.67", "-88.1434, -52.2466, 4.02398, 0.33", "-90.8282, -52.6336, 2.98425, 2.66", "-93.9816, -53.1577, 1.61696, 0.33", "-95.3711, -53.443, 0.950932, 2.0", "-100.864, -54.949, -1.77704, 0.33", "-101.179, -55.0451, -1.96551, 1.33", "-104.084, -56.0443, -3.89921, 0.33", "-105.926, -56.9236, -5.11951, 2.66", "-111.021, -59.9679, -8.54773, 0.33", "-112.893, -61.4076, -9.76045, 2.66", "-117.21, -65.6937, -12.1942, 0.33", "-118.282, -66.822, -12.7756, 2.66", "-123.245, -72.6448, -15.2682, 0.33", "-124.122, -73.8085, -15.692, 2.0", "-128.081, -80.1953, -17.4062, 0.33", "-130.324, -83.9967, -18.0859, 2.0" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-47.4691, -49.2198, 17.5294, 0.33", "-51.6797, -49.5344, 18.958, 0.33", "-53.7627, -49.7642, 19.7164, 0.67", "-55.6588, -50.0136, 20.4239, 0.33", "-56.5521, -50.1686, 20.8061, 2.0", "-59.8081, -50.896, 22.1264, 0.33", "-62.3844, -51.6542, 23.1903, 0.67", "-63.2188, -52.0114, 23.5299, 0.33", "-63.6614, -52.2403, 23.7128, 1.33", "-66.7527, -54.0385, 25.0952, 0.33", "-68.5228, -55.1396, 25.8526, 2.0", "-71.4676, -57.0703, 27.021, 0.33", "-72.6256, -57.8552, 27.4341, 1.33", "-74.7034, -59.2154, 28.1494, 0.33", "-75.3728, -59.6492, 28.349, 2.0", "-77.5729, -60.988, 28.8329, 0.33", "-78.4198, -61.4541, 28.995, 2.66", "-80.9685, -62.72, 29.326, 0.33", "-82.6603, -63.5227, 29.52, 0.33", "-83.9336, -64.1305, 29.6189, 0.67", "-85.8195, -65.0691, 29.7524, 0.33", "-86.5623, -65.4781, 29.7757, 2.0", "-88.968, -66.8973, 29.7864, 0.33", "-89.9173, -67.5239, 29.7629, 1.33", "-91.7468, -68.8738, 29.7694, 0.33", "-91.9198, -69.018, 29.7765, 0.67", "-93.2839, -70.4229, 29.8237, 0.33", "-94.267, -71.7035, 29.8401, 2.0", "-95.3489, -73.6489, 29.7082, 0.33", "-95.4818, -73.9369, 29.6887, 0.67", "-96.0007, -75.2411, 29.6099, 0.33", "-96.5383, -76.7076, 29.5344, 0.67", "-97.1696, -78.486, 29.4465, 2.66", "-98.3172, -81.6115, 29.2473, 0.33", "-98.703, -82.5153, 29.1231, 2.0", "-99.5001, -84.005, 28.9501, 0.33", "-99.6282, -84.1866, 28.9248, 1.33", "-101.671, -86.5635, 28.5774, 0.33", "-102.569, -87.4682, 28.4384, 1.33", "-104.741, -89.3966, 28.1971, 0.33", "-107.344, -91.5591, 27.9023, 2.66", "-109.641, -93.2953, 27.6484, 0.33", "-109.865, -93.4509, 27.628, 0.67" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "133.537, 3.18754, -119.69, 0.33", "134.865, 7.05803, -119.204, 0.33", "135.251, 7.98883, -119.354, 1.33", "137.479, 12.5583, -120.784, 0.33", "137.97, 13.5068, -121.223, 1.33", "139.728, 16.7504, -122.865, 0.33", "140.169, 17.5398, -123.292, 1.33", "143.16, 22.5832, -126.416, 0.33", "144.597, 24.8626, -128.007, 2.0", "147.925, 29.7367, -131.845, 0.33", "148.365, 30.3595, -132.338, 0.67", "150.526, 33.3001, -134.661, 0.33", "151.58, 34.6445, -135.702, 2.0", "154.17, 37.5962, -137.858, 0.33", "154.619, 38.0537, -138.189, 0.67", "156.123, 39.2904, -139.08, 0.33", "157.747, 40.4687, -139.923, 1.33", "159.745, 41.6605, -140.771, 0.33", "160.695, 42.2095, -141.099, 0.67", "161.528, 42.7144, -141.344, 0.33", "162.32, 43.3101, -141.626, 1.33", "164.344, 45.0383, -142.429, 0.33", "165.324, 45.9662, -142.847, 2.0", "168.342, 49.1595, -144.332, 0.33", "169.637, 50.6581, -145.015, 2.0", "172.036, 53.8207, -146.628, 0.33", "172.201, 54.0522, -146.769, 0.67", "173.302, 55.634, -147.872, 0.33", "173.339, 55.6882, -147.912, 0.67", "174.478, 57.2649, -149.212, 0.33", "177.518, 61.1121, -152.662, 1.33", "180.489, 64.53, -155.96, 0.33", "181.564, 65.7414, -157.162, 0.67", "183.222, 67.5494, -159.021, 0.33", "184.393, 68.7884, -160.33, 0.67", "185.614, 69.98, -161.68, 0.33", "186.039, 70.3092, -162.047, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "133.537, 3.18754, -119.69, 0.33", "140.158, 4.43006, -124.308, 0.33", "141.244, 4.7398, -125.23, 0.67", "146.99, 7.434, -132.384, 0.33", "147.833, 7.92163, -133.595, 0.67", "151.206, 10.5705, -139.796, 0.67", "152.718, 11.9691, -143.018, 1.33", "153.865, 13.8336, -147.24, 0.67", "155.286, 18.4934, -157.724, 0.33", "155.247, 18.8891, -158.616, 1.33", "153.911, 22.2247, -166.269, 0.33", "153.719, 22.4735, -166.888, 1.33", "151.799, 24.4253, -171.923, 0.33", "150.649, 25.298, -174.311, 1.33", "148.634, 26.2296, -177.056, 0.33", "147.401, 26.7118, -178.643, 0.67", "144.179, 27.6268, -182.124, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-80.6924, -4.7088, 2.99304, 0.33", "-82.8127, -4.20648, 2.84724, 0.33", "-82.8127, -4.20648, 2.84724, 0.67", "-84.1759, -3.89901, 3.2527, 0.33", "-84.7129, -3.75722, 3.41257, 0.67", "-85.5768, -3.5208, 3.65853, 0.33", "-86.5746, -3.2575, 3.91349, 1.33", "-89.5115, -2.5247, 4.84588, 0.33", "-90.037, -2.38146, 5.03934, 0.67", "-91.1847, -2.02952, 5.48778, 0.33", "-91.8777, -1.8306, 5.78115, 0.67", "-93.2439, -1.42543, 6.37016, 0.33", "-94.8238, -0.941026, 6.94696, 1.33", "-98.0854, 0.169775, 7.84, 0.33", "-98.9433, 0.469336, 8.02613, 1.33", "-100.85, 1.18324, 8.3425, 0.33", "-102.019, 1.68777, 8.51765, 2.66", "-104.184, 2.77257, 8.75782, 0.33", "-105.749, 3.66353, 8.81083, 0.33", "-106.701, 4.28614, 8.80016, 1.33", "-107.375, 4.73003, 8.7902, 1.33", "-109.843, 6.45392, 8.72387, 0.33", "-110.617, 6.94341, 8.72358, 2.0", "-112.01, 7.78428, 8.76213, 0.33", "-113.029, 8.32538, 8.73732, 1.33", "-115.149, 9.37959, 8.57855, 0.33", "-116.197, 9.82591, 8.43389, 2.0", "-120.106, 11.2604, 7.68756, 0.33", "-120.344, 11.3419, 7.64192, 0.67", "-123.229, 12.2981, 7.08234, 0.33", "-124.982, 12.8787, 6.74255, 2.66", "-128.136, 13.9454, 6.27436, 0.33", "-129.132, 14.2889, 6.16833, 0.67", "-131.724, 15.2586, 5.98896, 0.33", "-132.579, 15.6075, 5.96029, 0.67", "-133.83, 16.1848, 5.97376, 0.33", "-136.554, 17.5389, 6.04814, 2.0", "-139.477, 19.1091, 6.14447, 0.33", "-139.7, 19.2315, 6.15904, 0.67", "-142.325, 20.6221, 6.38463, 0.33", "-143.262, 21.0801, 6.47706, 0.67", "-145.165, 21.9704, 6.6712, 0.33", "-146.596, 22.5635, 6.8464, 2.66", "-150.108, 23.846, 7.51144, 0.67", "-151.555, 24.2658, 7.93667, 0.67", "-153.541, 24.6728, 8.71996, 0.33", "-154.067, 24.7457, 8.95888, 1.33", "-156.712, 24.9941, 10.3236, 0.33", "-157.664, 25.0418, 10.8275, 2.66", "-161.003, 25.1184, 12.4408, 0.33", "-161.535, 25.1451, 12.6714, 0.67", "-162.747, 25.2497, 13.0986, 0.33", "-163.641, 25.3456, 13.3475, 0.67", "-165.437, 25.6098, 13.6491, 0.33", "-167.935, 26.0222, 13.9425, 2.0", "-170.633, 26.4985, 14.199, 0.67", "-172.165, 26.7757, 14.3936, 0.33", "-172.415, 26.8214, 14.4295, 1.33", "-174.941, 27.2474, 14.8441, 0.33", "-176.364, 27.4733, 15.1224, 1.33", "-178.508, 27.7693, 15.5912, 0.33", "-179.753, 27.9638, 15.8676, 1.33", "-182.115, 28.3182, 16.4552, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-80.6924, -4.7088, 2.99304, 0.33", "-82.0703, -8.09779, 3.03109, 0.33", "-82.729, -9.55614, 3.0208, 2.66", "-83.8729, -12.0243, 2.99201, 0.33", "-84.5016, -13.4225, 2.89034, 0.67", "-85.6691, -15.9935, 2.72314, 0.33", "-86.2691, -17.292, 2.58835, 0.67", "-87.1002, -19.0732, 2.33068, 0.33", "-87.4156, -19.6817, 2.19437, 2.0", "-89.0782, -22.6311, 1.45513, 0.33", "-89.9339, -24.0999, 1.15506, 1.33", "-91.4892, -26.7496, 0.672823, 0.33", "-92.4339, -28.3609, 0.47485, 2.0", "-94.2462, -31.4241, 0.189077, 0.33", "-94.8358, -32.3785, 0.140159, 2.0", "-96.749, -35.3773, 0.152044, 0.33", "-97.1452, -36.0044, 0.147767, 0.67", "-97.9766, -37.3303, 0.196923, 0.33", "-98.5071, -38.1699, 0.225746, 2.0", "-100.114, -40.6516, 0.187024, 0.33", "-100.249, -40.855, 0.184858, 1.33", "-101.607, -42.8533, 0.207313, 0.33", "-101.738, -43.0541, 0.217898, 0.67", "-103.051, -45.1531, 0.406862, 0.33", "-103.89, -46.4633, 0.677422, 2.66", "-105.339, -48.6572, 1.40814, 0.33", "-105.466, -48.838, 1.4846, 0.67", "-106.789, -50.6322, 2.35162, 0.33", "-106.982, -50.864, 2.48846, 0.67", "-108.702, -52.7493, 3.82925, 0.33", "-108.852, -52.8944, 3.94121, 0.67", "-110.381, -54.2943, 5.04305, 0.33", "-111.303, -55.0896, 5.70259, 1.33", "-113.869, -57.1028, 7.52457, 0.33", "-114.097, -57.2904, 7.68124, 0.67", "-115.119, -58.2298, 8.29847, 0.33", "-115.761, -58.8138, 8.7473, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-42.3909, 165.168, -215.606, 0.33", "-42.5662, 166.516, -216.894, 0.33", "-42.7017, 167.294, -217.62, 1.33", "-43.6899, 172.963, -222.914, 0.33", "-43.8087, 173.644, -223.551, 1.33", "-44.4643, 177.405, -227.062, 0.33", "-44.5484, 177.888, -227.513, 0.67", "-44.6761, 178.531, -228.16, 0.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-42.3909, 165.168, -215.606, 0.33", "-41.2591, 165.267, -213.167, 0.33", "-40.1519, 165.347, -211.104, 0.67", "-36.0493, 165.388, -204.402, 0.33", "-35.6003, 165.38, -203.743, 1.33", "-32.7857, 165.414, -199.63, 0.33", "-32.0514, 165.426, -198.481, 0.67", "-30.2434, 165.372, -195.549, 0.33", "-29.1109, 165.356, -193.703, 0.67", "-27.3352, 165.358, -191.264, 0.33", "-25.1678, 165.343, -188.215, 1.33", "-22.2306, 165.369, -184.115, 0.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "22.325, 50.6584, -15.4416, 1.33", "22.3045, 55.2205, -12.6932, 1.33", "22.2922, 57.9433, -11.0529, 0.67", "22.268, 63.329, -7.80824, 2.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.325, 50.6584, -15.4416, 0.33", "23.4846, 52.1156, -19.6529, 0.33", "25.5553, 54.7176, -27.173, 2.66", "26.2587, 55.6015, -29.7276, 0.33", "27.0391, 56.5821, -32.5618, 2.0", "28.3632, 58.2459, -37.3703, 0.33", "28.7775, 58.7666, -38.8752, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-153.058, 84.6742, 9.6685, 0.33", "-154.94, 85.3062, 8.94178, 0.33", "-155.731, 85.5708, 8.69716, 2.0", "-158.103, 86.5019, 7.70883, 0.33", "-158.355, 86.6169, 7.60462, 0.67", "-159.404, 87.1599, 7.15822, 0.33", "-160.116, 87.5349, 6.8561, 1.33", "-161.201, 88.1373, 6.38052, 0.33", "-163.788, 89.5668, 5.30296, 2.66", "-165.432, 90.4689, 4.66657, 0.33", "-166.751, 91.2082, 4.1277, 2.0", "-168.756, 92.3917, 3.24117, 0.33", "-169.285, 92.713, 2.99909, 0.33", "-169.623, 92.9089, 2.84908, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-153.058, 84.6742, 9.6685, 0.33", "-155.231, 86.0966, 8.58144, 0.33", "-155.502, 86.2767, 8.45816, 0.67", "-161.801, 90.4165, 5.94298, 0.33", "-162.072, 90.6011, 5.82653, 1.33", "-164.872, 92.4029, 4.6987, 0.33", "-165.901, 93.0129, 4.30113, 0.33", "-166.742, 93.4983, 3.91152, 0.67", "-168.198, 94.3097, 3.27064, 0.33", "-170.343, 95.486, 2.18522, 0.67", "-173.33, 97.1912, 0.448019, 0.33", "-174.78, 98.0504, -0.563316, 2.0", "-178.505, 100.397, -3.57419, 0.33", "-181.167, 102.17, -5.98099, 0.33", "-184.033, 104.271, -9.0034, 2.0", "-185.936, 105.782, -11.4045, 0.33", "-187.383, 107.216, -13.9413, 1.33", "-188.989, 109.304, -17.8498, 0.33", "-189.602, 110.329, -19.8058, 2.0", "-190.664, 112.518, -24.0286, 0.33", "-191.511, 114.609, -27.9969, 2.0", "-192.896, 118.699, -35.5799, 0.67", "-194.267, 122.741, -42.7052, 1.33", "-195.603, 126.722, -49.4783, 0.33", "-195.688, 126.991, -49.9223, 0.67", "-196.274, 128.946, -52.9382, 0.33", "-196.471, 129.584, -53.8229, 0.67", "-197.29, 131.812, -56.5816, 0.33", "-197.904, 133.016, -57.7941, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-16.5784, -57.3573, -20.1038, 0.67", "-17.8119, -59.7705, -22.8373, 0.67", "-18.34, -60.7396, -23.6252, 1.33", "-19.2365, -62.2063, -24.8569, 0.67", "-22.4505, -68.3174, -29.4197, 0.67", "-23.456, -70.4567, -31.0044, 0.67", "-25.3272, -74.4953, -33.8107, 2.0", "-26.5243, -77.554, -36.0987, 0.67", "-28.1843, -82.317, -39.7943, 3.33", "-29.3701, -86.6658, -42.8968, 3.33", "-30.3711, -91.7194, -45.9361, 0.67", "-30.809, -94.858, -47.9591, 0.67", "-31.0487, -100.615, -51.9339, 0.67", "-30.9644, -103.138, -53.7451, 3.33", "-30.3857, -107.311, -56.3627, 3.99", "-29.7521, -110.435, -58.6218, 3.33" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-16.5784, -57.3573, -20.1038, 0.67", "-18.3915, -60.2345, -17.0377, 0.67", "-19.3019, -61.513, -15.6463, 0.67", "-20.1694, -62.6499, -14.3959, 0.33", "-21.0755, -63.7863, -13.1788, 1.33", "-22.9294, -66.0573, -10.8322, 0.33", "-23.2629, -66.4671, -10.4458, 1.33", "-24.8505, -68.2484, -9.04004, 0.33", "-25.0094, -68.4538, -8.90527, 0.67", "-25.5123, -69.2979, -8.54919, 0.33", "-25.7711, -69.8822, -8.44012, 0.67", "-26.2969, -71.6585, -8.36832, 0.33", "-26.5975, -72.8989, -8.25483, 1.33", "-27.0984, -75.421, -7.97927, 0.33", "-27.3349, -77.1637, -7.53463, 0.67", "-27.4602, -78.6194, -6.99306, 0.33", "-27.5096, -79.3653, -6.66879, 1.33", "-27.6515, -82.5589, -4.93495, 0.33", "-27.6629, -82.8002, -4.7731, 2.0", "-27.6885, -85.878, -2.03519, 0.33", "-27.6811, -86.077, -1.81977, 1.33" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-130.324, -83.9967, -18.0859, 0.33", "-130.697, -86.1927, -18.6581, 0.33", "-130.928, -87.0873, -18.9169, 0.67", "-131.788, -89.9315, -19.7469, 0.33", "-131.955, -90.359, -19.9523, 0.67", "-132.558, -91.8227, -20.7385, 0.33", "-132.895, -92.6248, -21.1478, 0.67", "-133.471, -93.8286, -21.7865, 0.33", "-133.865, -94.5283, -22.2599, 2.0", "-136.418, -98.9827, -25.3872, 0.33", "-136.822, -99.6768, -25.8224, 1.33", "-138.248, -102.113, -27.2419, 0.33", "-139.069, -103.456, -27.9307, 1.33", "-142.231, -108.601, -30.1098, 0.33", "-143.561, -110.689, -30.9088, 2.0", "-145.955, -114.281, -31.8977, 0.33", "-146.336, -114.832, -32.039, 1.33", "-148.0, -117.134, -32.5134, 0.33", "-148.745, -118.199, -32.5433, 2.0" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-130.324, -83.9967, -18.0859, 0.33", "-131.296, -85.3836, -18.0179, 0.33", "-131.452, -85.6066, -18.007, 0.67", "-132.824, -87.5657, -17.9111, 0.33", "-133.048, -87.8858, -17.8954, 0.67", "-134.305, -89.682, -17.8074, 0.33", "-134.651, -90.1756, -17.7832, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "144.179, 27.6268, -182.124, 0.33", "143.983, 29.3441, -184.106, 0.33", "143.901, 29.7938, -184.644, 1.33", "143.728, 30.8461, -185.918, 0.33", "143.622, 32.3285, -187.946, 1.33", "143.743, 35.8263, -192.945, 0.33", "143.78, 36.1101, -193.366, 0.67", "144.227, 38.2187, -196.724, 0.33", "144.512, 39.3081, -198.512, 1.33", "145.578, 42.5027, -203.349, 0.33", "146.254, 44.1985, -205.731, 1.33", "147.594, 47.1494, -209.529, 0.33", "148.185, 48.4264, -211.086, 1.33", "150.959, 54.203, -217.689, 0.33", "152.662, 57.8674, -221.563, 0.33", "153.263, 59.2285, -222.844, 0.67", "153.794, 60.474, -223.93, 0.33", "154.243, 61.5775, -224.811, 0.67", "154.969, 63.6796, -226.367, 0.33", "155.444, 65.6908, -227.748, 0.67", "155.789, 68.5907, -230.022, 0.33", "155.829, 69.4037, -230.674, 0.67", "155.769, 71.0239, -232.169, 0.33", "155.593, 73.2907, -234.456, 0.33", "155.426, 74.8576, -236.163, 0.33", "155.322, 75.9146, -237.387, 0.67", "155.152, 77.9197, -239.752, 0.67", "155.018, 81.3551, -243.85, 0.67", "155.199, 83.7311, -246.569, 0.33", "155.489, 85.4292, -248.483, 0.33", "155.57, 85.8472, -248.918, 0.67", "156.141, 88.2357, -251.262, 0.33", "156.397, 89.0009, -251.978, 0.67", "157.947, 92.8512, -255.281, 0.33", "158.393, 93.8551, -256.149, 0.67", "159.882, 96.6494, -258.627, 0.33", "161.351, 99.1016, -260.914, 1.33", "163.172, 101.952, -263.745, 0.33", "163.744, 102.864, -264.706, 0.67", "165.413, 105.633, -267.953, 0.33", "166.505, 107.508, -270.463, 0.33", "167.118, 108.567, -272.107, 0.67", "167.732, 109.907, -274.49, 0.33", "168.28, 111.359, -277.295, 1.33", "168.734, 112.81, -280.336, 1.33", "168.995, 114.285, -283.657, 0.33", "169.005, 114.53, -284.224, 1.33", "169.197, 116.963, -290.142, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "144.179, 27.6268, -182.124, 0.33", "143.668, 26.6575, -185.365, 0.33", "142.793, 24.7494, -191.4, 1.33", "142.326, 23.768, -194.823, 0.67", "141.774, 22.5422, -199.146, 1.33", "141.238, 21.4809, -203.514, 0.33", "140.972, 21.0087, -205.775, 0.33", "140.767, 20.6566, -207.949, 2.0", "139.931, 20.0352, -213.541, 0.67", "139.685, 19.9395, -214.847, 0.67", "138.882, 19.8239, -218.005, 0.67", "138.265, 19.8498, -220.316, 1.33", "137.572, 20.0075, -222.45, 0.67", "136.017, 20.3106, -226.23, 0.33", "136.017, 20.3106, -226.23, 0.67", "134.955, 20.4034, -228.484, 0.33", "134.423, 20.4151, -229.647, 0.33", "134.109, 20.4449, -230.368, 0.67", "133.122, 20.5928, -232.95, 1.33", "132.198, 20.6428, -235.962, 1.33", "130.688, 20.6084, -241.085, 0.33", "130.568, 20.5997, -241.553, 1.33", "129.258, 20.44, -247.21, 0.33", "128.897, 20.3677, -249.128, 0.67", "127.786, 19.9715, -255.533, 0.33", "127.604, 19.8123, -256.892, 0.67", "127.286, 19.239, -260.173, 0.33", "127.166, 18.9254, -261.838, 1.33", "126.772, 16.8348, -270.999, 0.67", "126.713, 16.1998, -273.519, 0.33", "126.716, 15.2492, -277.038, 0.33", "126.764, 14.8607, -278.342, 1.33", "126.945, 13.5423, -282.213, 0.33", "127.157, 12.4473, -285.284, 1.33", "127.54, 11.0038, -289.151, 0.67", "127.984, 9.5856, -293.418, 0.67", "128.096, 9.01304, -295.196, 0.67", "128.419, 7.55809, -299.213, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.268, 63.329, -7.80824, 0.67", "19.2762, 64.455, -7.65917, 0.67", "17.1249, 65.2384, -7.80516, 0.33", "16.2248, 65.6747, -7.98808, 0.67", "14.0319, 66.9864, -8.56119, 0.33", "13.4195, 67.4365, -8.78806, 0.67", "11.9917, 68.5977, -9.3665, 0.33", "10.2224, 70.4143, -10.2761, 0.67", "7.85092, 73.3095, -11.6665, 0.33", "6.87433, 74.8092, -12.3279, 3.33", "5.11735, 78.3254, -13.8805, 0.33", "4.45891, 79.7883, -14.6251, 1.33", "3.28187, 82.6596, -16.147, 0.33", "2.43368, 84.8157, -17.2623, 1.33", "1.01984, 88.538, -19.2722, 0.33", "-0.603054, 92.8535, -21.6504, 2.66", "-3.62373, 100.599, -25.8703, 0.33", "-3.88789, 101.248, -26.2497, 0.67", "-4.84508, 103.398, -27.5575, 0.33", "-5.00705, 103.723, -27.7538, 0.67", "-5.58281, 104.713, -28.3121, 0.33", "-6.80566, 106.737, -29.2585, 2.0", "-8.78818, 110.376, -30.5143, 0.33", "-9.52644, 111.765, -30.845, 2.0", "-10.9016, 114.393, -31.2608, 0.33", "-11.2152, 115.015, -31.31, 0.67", "-12.3796, 117.539, -31.3115, 0.33", "-13.4015, 119.873, -31.1739, 2.66", "-15.3992, 124.256, -30.5631, 0.33", "-15.6221, 124.763, -30.4932, 0.67", "-16.205, 126.033, -30.3241, 0.33", "-17.1267, 127.912, -30.1698, 0.67", "-18.3422, 130.289, -30.1811, 0.33", "-19.3806, 132.258, -30.3205, 2.66", "-20.8627, 135.188, -30.5745, 0.33", "-23.6333, 140.445, -30.9849, 0.33", "-25.0557, 143.01, -31.1469, 2.0", "-30.2397, 151.705, -31.5378, 0.33", "-31.3207, 153.44, -31.5815, 2.0", "-33.9841, 157.327, -31.8078, 0.33", "-36.6173, 160.837, -32.1079, 0.33", "-37.4355, 161.812, -32.2885, 2.0", "-39.7639, 164.381, -32.99, 0.33", "-40.3145, 164.914, -33.2253, 2.0", "-44.9556, 169.306, -35.7979, 0.33", "-45.8296, 170.113, -36.3089, 2.0", "-50.0657, 174.342, -38.8697, 0.33", "-51.6755, 175.993, -39.8725, 0.33", "-53.3247, 177.726, -40.771, 0.33", "-54.6065, 179.092, -41.3886, 1.33", "-57.7623, 182.623, -42.2195, 0.33", "-57.9989, 182.883, -42.2332, 0.67", "-60.1599, 185.176, -41.2886, 0.33", "-63.3746, 187.892, -39.6077, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "22.268, 63.329, -7.80824, 0.33", "21.8242, 65.98, -11.7879, 0.33", "21.6297, 67.1419, -13.5321, 1.33", "21.2406, 69.4658, -17.0205, 0.67", "21.155, 69.9772, -17.7883, 0.33", "21.0581, 70.5559, -18.657, 2.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "28.7775, 58.7666, -38.8752, 0.33", "27.8141, 64.0981, -42.8729, 0.33", "27.6368, 65.0831, -43.5322, 1.33", "27.0945, 68.0415, -45.3645, 0.33", "26.7705, 69.5301, -46.2762, 2.0", "25.6725, 74.4534, -49.271, 0.33", "24.9221, 77.414, -50.9811, 1.33", "23.6094, 82.1618, -53.429, 0.33", "23.1881, 83.4815, -54.0175, 2.0", "21.6269, 87.637, -55.5053, 0.33", "21.3357, 88.1835, -55.7119, 0.67", "19.4555, 90.7458, -56.6242, 0.33", "19.0774, 91.1532, -56.8087, 1.33", "17.1255, 93.0214, -57.6081, 0.33", "16.5836, 93.5688, -57.8907, 2.0", "12.2937, 98.0031, -60.3119, 0.33", "11.2936, 99.0197, -61.1899, 2.0", "8.57099, 101.826, -63.955, 0.33", "7.88477, 102.528, -64.6889, 0.67", "4.30637, 106.049, -68.4065, 0.33", "3.2916, 107.047, -69.3911, 2.0", "-3.92923, 114.6, -75.9941, 0.33", "-5.68398, 116.418, -77.629, 0.67", "-6.31058, 117.016, -78.2048, 0.67", "-8.94472, 119.318, -80.5373, 0.33", "-10.3955, 120.377, -81.579, 0.67", "-12.4069, 122.016, -83.0849, 0.33", "-14.7499, 124.1, -79.481, 1.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "28.7775, 58.7666, -38.8752, 2.66", "29.5765, 60.1549, -42.9123, 2.66", "29.9892, 61.2993, -46.2948, 0.33", "30.1626, 62.593, -50.4433, 1.33", "30.2874, 64.5282, -56.714, 0.33", "30.4438, 66.5084, -63.2924, 2.0", "30.915, 70.7653, -77.4416, 0.33", "30.97, 71.5315, -80.0776, 1.33", "31.1105, 75.3899, -94.0905, 0.33", "31.1707, 76.0764, -96.7002, 2.0", "31.3006, 76.6252, -98.9747, 0.67", "31.6729, 77.206, -101.495, 0.33", "32.2399, 77.5263, -103.048, 2.0", "35.3079, 78.4665, -108.921, 0.33", "36.6137, 78.5529, -110.721, 1.33", "38.0916, 78.5171, -113.06, 0.33", "38.6992, 78.4634, -114.106, 0.67", "40.9319, 78.0456, -117.857, 0.33", "41.4448, 77.8989, -118.66, 2.0", "44.8881, 76.4381, -123.822, 0.33", "46.9814, 75.4122, -126.913, 0.67", "48.1165, 74.8458, -128.72, 0.33", "49.3568, 74.1926, -131.082, 2.0", "50.5725, 73.5139, -133.818, 0.33", "51.6473, 72.8313, -136.691, 1.33", "52.2888, 72.3148, -138.625, 0.67", "53.8372, 70.6576, -144.062, 2.0", "55.5698, 67.9292, -152.006, 1.33", "56.2951, 66.3843, -156.168, 0.33", "56.8439, 65.1548, -159.463, 2.66", "57.6981, 63.2015, -164.314, 0.33", "58.2171, 61.8892, -167.075, 1.33", "59.0442, 59.7876, -170.416, 0.33", "59.2676, 59.1916, -171.125, 2.0", "60.4316, 55.9115, -174.453, 0.33", "60.8509, 54.865, -175.393, 0.67", "61.5324, 52.9868, -176.817, 0.33", "61.9322, 51.922, -177.504, 0.67", "63.1856, 48.8974, -179.124, 0.33", "63.3343, 48.5083, -179.323, 2.0", "63.8228, 47.2956, -179.973, 1.33", "66.7647, 41.4921, -183.516, 0.33", "67.3728, 40.4247, -184.217, 0.67", "68.5438, 38.3604, -185.751, 0.33", "69.4916, 36.8221, -186.978, 0.67", "71.2371, 34.0247, -189.341, 0.33", "71.8739, 33.0174, -190.288, 0.67", "73.3604, 31.0128, -192.491, 0.33", "74.5502, 28.9275, -194.946, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-29.7521, -110.435, -58.6218, 0.33", "-29.6779, -114.801, -59.2692, 0.33", "-29.7015, -115.859, -59.3625, 0.33", "-29.8122, -118.646, -59.5399, 2.0", "-30.1207, -123.159, -59.9169, 0.33", "-30.4266, -126.848, -60.1112, 0.33", "-30.5838, -128.845, -60.1812, 3.33", "-31.0069, -132.804, -60.3115, 0.33", "-31.0995, -133.507, -60.3335, 0.67", "-31.8182, -138.066, -60.4365, 0.33", "-32.401, -141.166, -60.7829, 2.0", "-33.0997, -145.109, -61.4832, 0.33", "-33.6093, -148.022, -62.1454, 2.66", "-34.0438, -150.843, -62.8849, 0.33", "-34.1289, -151.517, -63.0961, 0.67", "-34.7619, -157.654, -65.2888, 0.33", "-34.8507, -158.613, -65.6769, 0.67", "-35.0056, -160.677, -66.4592, 0.33", "-35.1251, -162.778, -67.2667, 2.66", "-35.3947, -169.245, -69.8369, 0.33", "-35.4176, -169.899, -70.1188, 0.67", "-35.485, -171.536, -70.8216, 0.33", "-35.6317, -174.358, -71.9587, 2.66", "-35.9901, -179.644, -73.9745, 0.33", "-36.1447, -181.801, -74.6333, 1.33", "-36.3538, -185.526, -75.4922, 0.67", "-36.4188, -187.548, -75.8952, 2.0", "-36.6456, -196.422, -77.39, 0.33", "-36.6951, -198.143, -77.6181, 2.66", "-36.7662, -203.138, -78.0509, 0.33", "-36.8008, -205.205, -78.2137, 1.33", "-36.8966, -212.218, -78.8495, 0.33", "-36.9328, -214.442, -79.2255, 0.33", "-36.9832, -215.984, -79.6132, 1.33", "-37.1983, -219.923, -80.8021, 0.33", "-37.5431, -223.644, -81.9888, 0.33", "-38.0821, -226.605, -82.927, 2.66", "-39.1769, -230.988, -84.2735, 0.33", "-39.549, -232.347, -84.6589, 1.33", "-40.55, -235.76, -85.503, 0.33", "-41.551, -238.984, -86.1746, 2.0", "-44.4175, -248.285, -87.8148, 0.33", "-44.8567, -249.671, -88.075, 1.33", "-46.3877, -254.307, -89.1631, 0.33", "-46.9287, -255.785, -89.6897, 2.0", "-48.7985, -260.424, -92.0117, 0.33", "-49.2106, -261.295, -92.6162, 2.0", "-51.5177, -265.325, -96.2546, 0.33", "-52.6148, -267.03, -98.2405, 1.33", "-54.467, -269.578, -101.961, 0.33", "-54.619, -269.779, -102.227, 1.33", "-56.3668, -272.097, -104.848, 0.33", "-56.8439, -272.979, -105.406, 1.33", "-59.3449, -279.255, -107.287, 0.33", "-59.5787, -279.962, -107.392, 2.0", "-62.0729, -288.381, -107.814, 0.33", "-63.2412, -292.228, -107.809, 2.0", "-65.6385, -300.094, -107.298, 0.33", "-66.0972, -301.436, -107.147, 1.33", "-66.9003, -303.522, -106.754, 0.33", "-67.3923, -304.695, -106.568, 1.33", "-68.955, -308.224, -106.199, 0.33", "-69.1271, -308.539, -106.191, 1.33", "-70.737, -310.535, -106.027, 0.33", "-70.8796, -310.699, -106.01, 0.67", "-72.5283, -312.496, -105.751, 0.33", "-73.1868, -313.214, -105.617, 0.67" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-29.7521, -110.435, -58.6218, 0.67", "-30.0525, -112.826, -59.8466, 0.67", "-30.6349, -116.627, -61.9677, 0.33", "-30.9148, -118.346, -62.9527, 2.66", "-31.8325, -123.863, -66.0732, 0.33", "-32.2813, -126.297, -67.535, 0.33", "-32.7713, -129.281, -69.5565, 0.33", "-33.1399, -131.504, -71.4727, 2.0", "-33.2782, -132.133, -72.2357, 2.0", "-33.6126, -133.071, -74.0255, 0.33", "-34.1793, -134.296, -77.5479, 2.0", "-34.81, -135.289, -81.6076, 0.67", "-35.407, -136.327, -86.2859, 0.33", "-35.7668, -137.239, -89.8376, 2.0", "-36.4084, -139.211, -96.9134, 0.33", "-36.5064, -139.575, -98.0772, 2.66", "-37.0889, -142.89, -106.841, 0.33", "-37.2917, -144.541, -110.198, 2.0", "-37.2435, -148.165, -115.998, 0.33", "-37.246, -148.581, -116.516, 2.0", "-37.2044, -150.672, -118.683, 0.33", "-37.2566, -152.061, -120.023, 2.0", "-37.3709, -154.041, -121.803, 0.33", "-37.3883, -155.184, -122.89, 0.67", "-37.1063, -164.902, -132.063, 0.33", "-36.9796, -166.501, -133.619, 2.66", "-36.3063, -171.424, -138.602, 0.33", "-36.1351, -172.201, -139.494, 2.0", "-34.7922, -175.759, -143.987, 0.33", "-34.6699, -175.939, -144.237, 0.67", "-33.4529, -176.809, -145.624, 0.33", "-32.5705, -177.295, -146.531, 2.0", "-27.8349, -179.186, -150.581, 0.33", "-26.2686, -179.778, -151.927, 2.0", "-22.1016, -181.212, -155.53, 0.33", "-20.8226, -181.665, -156.618, 1.33", "-18.5781, -182.521, -158.473, 0.33", "-17.2784, -183.039, -159.446, 1.33" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-27.6811, -86.077, -1.81977, 0.33", "-28.659, -87.8975, 2.06437, 0.33", "-28.7263, -88.0267, 2.3149, 0.67", "-29.1461, -88.8899, 3.90056, 0.33", "-30.4142, -91.1291, 7.77461, 2.66", "-32.2043, -94.065, 12.5893, 0.33", "-32.2983, -94.216, 12.8152, 1.33", "-32.9427, -95.1707, 14.1109, 0.33", "-33.2011, -95.5285, 14.5727, 1.33", "-35.0512, -97.8458, 17.2573, 0.33", "-35.3798, -98.281, 17.5954, 0.67", "-36.867, -100.326, 18.6335, 0.33", "-37.607, -101.279, 19.1354, 0.67" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-27.6811, -86.077, -1.81977, 0.33", "-27.8452, -96.5597, 3.34618, 0.33", "-28.2716, -100.985, 5.24704, 3.33", "-28.8672, -105.461, 7.05004, 0.33", "-29.3264, -107.776, 8.05921, 1.33", "-30.9198, -114.359, 10.9953, 0.33", "-31.5029, -116.657, 12.0255, 3.33", "-32.6609, -119.897, 14.0653, 0.33", "-33.1911, -121.228, 14.8945, 1.33", "-34.2964, -123.706, 16.6676, 0.33", "-34.5304, -124.272, 17.0569, 0.67", "-35.0078, -125.557, 17.9035, 0.33", "-36.2242, -129.216, 20.5934, 2.0", "-37.1837, -132.508, 23.1115, 0.67", "-37.422, -133.534, 23.853, 1.33", "-37.7115, -135.136, 24.9064, 0.67", "-38.3007, -138.195, 26.8316, 2.0", "-38.8991, -140.702, 28.4239, 0.33", "-39.0406, -141.258, 28.7567, 2.0", "-39.6984, -143.673, 30.4292, 0.33", "-39.9054, -144.381, 30.9761, 0.33", "-40.5322, -146.141, 32.5071, 0.67", "-41.6975, -148.978, 34.8721, 0.33", "-42.2717, -150.158, 35.882, 1.33", "-42.8768, -151.363, 36.9109, 0.33", "-44.1486, -153.773, 38.8994, 0.67", "-45.1993, -155.933, 40.5726, 1.33", "-46.0885, -157.904, 41.8898, 0.33", "-46.6127, -158.971, 42.4869, 0.33", "-47.1549, -159.905, 42.9505, 0.67", "-48.1634, -161.59, 43.5593, 0.33", "-48.5044, -162.206, 43.7228, 0.67", "-49.1623, -163.46, 44.0293, 0.33", "-50.7206, -166.141, 44.9255, 0.67", "-51.8542, -167.792, 45.4438, 0.33", "-53.0015, -169.184, 45.8291, 1.33" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.0581, 70.5559, -18.657, 0.33", "17.8358, 72.002, -20.19, 0.33", "16.7676, 72.5478, -21.0678, 1.33", "12.8862, 74.8647, -25.5213, 0.33", "9.95167, 76.804, -28.5616, 2.66", "5.7732, 79.9663, -32.6904, 0.33", "4.75609, 80.8422, -33.6749, 0.67", "0.722037, 86.0668, -38.0646, 0.33", "0.12757, 88.3123, -38.5349, 2.0", "0.529155, 101.343, -36.306, 0.33", "0.957161, 104.66, -35.5247, 2.66", "1.14682, 105.871, -35.1693, 2.66", "1.71732, 111.617, -33.0826, 0.67", "1.75724, 113.364, -32.335, 0.33", "1.68586, 115.069, -31.8724, 0.33", "1.59521, 115.838, -31.9272, 1.33", "0.975402, 118.453, -31.984, 0.33", "0.0561395, 120.951, -32.1559, 0.33", "-0.614533, 122.167, -32.4125, 0.67", "-1.56968, 123.648, -32.7539, 0.33", "-2.41357, 124.743, -33.023, 0.67", "-4.01863, 126.673, -33.4905, 0.33", "-4.70762, 127.523, -33.6822, 1.33", "-6.46171, 129.724, -34.1775, 0.33", "-8.25638, 131.769, -34.651, 3.33", "-10.8977, 134.531, -35.2872, 0.33", "-11.8028, 135.405, -35.572, 1.33", "-13.3691, 136.893, -36.1761, 0.33", "-14.4357, 137.969, -36.6439, 0.33", "-14.6599, 138.222, -36.7504, 0.67", "-15.6271, 139.543, -37.438, 0.33", "-17.4493, 142.873, -39.0144, 1.33", "-18.1903, 144.316, -39.7961, 0.33", "-19.3605, 146.584, -41.0594, 1.33", "-20.4319, 148.767, -42.2047, 0.33", "-21.9445, 151.737, -43.8342, 2.66", "-23.5963, 155.072, -45.6297, 0.33", "-25.1952, 158.279, -47.2264, 0.67", "-26.4881, 160.717, -48.4961, 0.33", "-27.7069, 162.847, -49.6191, 2.0", "-29.7864, 166.467, -51.6508, 0.33", "-30.9111, 168.379, -52.8063, 0.67", "-31.754, 169.965, -53.8284, 0.33", "-32.0227, 170.621, -54.1817, 0.67", "-32.5399, 172.406, -55.0613, 0.33", "-33.5963, 176.781, -56.9514, 2.0", "-34.3636, 180.537, -58.3094, 0.33", "-34.9334, 183.654, -59.3618, 0.33", "-35.4248, 186.967, -60.5372, 2.66", "-35.9534, 191.004, -61.9353, 0.67", "-36.2656, 193.566, -62.8803, 0.33", "-36.3737, 194.23, -63.1104, 0.67", "-36.7105, 195.975, -63.7521, 0.33", "-37.5528, 199.656, -65.5679, 2.0", "-38.1144, 202.098, -66.912, 0.33", "-38.6734, 204.957, -68.686, 2.0", "-39.3014, 209.359, -71.5064, 0.33", "-39.5658, 211.453, -72.8102, 2.0", "-40.0638, 216.324, -75.6325, 0.33", "-40.1877, 218.486, -76.7815, 1.33", "-40.2743, 222.919, -79.1413, 0.33", "-40.2413, 224.385, -79.744, 0.67", "-40.1242, 226.447, -80.4557, 0.33", "-39.9036, 229.287, -81.0109, 2.66", "-39.451, 234.302, -81.6719, 0.33", "-39.2501, 236.62, -81.9211, 2.0", "-38.7442, 242.881, -82.233, 0.33", "-38.6765, 243.666, -82.2682, 0.67", "-37.4688, 255.056, -82.6653, 0.33", "-37.0987, 258.157, -82.6753, 1.33" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "21.0581, 70.5559, -18.657, 1.33", "21.9971, 71.1946, -18.4962, 1.33", "23.0892, 71.9562, -18.3874, 0.33", "25.631, 73.5922, -17.8774, 1.33", "31.0097, 76.9926, -16.5756, 0.33", "32.629, 78.0102, -16.16, 2.0", "36.0596, 80.1851, -15.258, 0.33", "37.1533, 80.836, -14.8995, 2.0", "40.5525, 82.8242, -13.5305, 0.33", "41.0216, 83.099, -13.2562, 0.67", "41.7458, 83.5351, -12.7815, 0.33", "42.1584, 83.8061, -12.4348, 0.67", "44.876, 85.786, -9.64428, 0.33", "45.796, 86.5811, -8.62124, 2.0", "49.1208, 89.855, -4.80374, 0.33", "49.6476, 90.3946, -4.19219, 1.33", "51.8764, 92.7905, -1.56486, 0.33", "53.5549, 94.733, 0.373638, 2.66", "55.3951, 97.1671, 2.42389, 0.33", "55.8495, 97.8573, 2.89244, 0.67", "56.3492, 98.7401, 3.28149, 0.33", "56.53, 99.0545, 3.3819, 0.67", "57.6087, 100.871, 3.56211, 0.33", "58.2226, 101.867, 3.50334, 2.0", "59.6068, 104.142, 3.20061, 0.33", "60.3227, 105.348, 3.04544, 0.33", "60.6653, 105.998, 2.97155, 0.67", "61.4007, 107.499, 2.81786, 0.33", "62.0027, 108.842, 2.75539, 2.0", "62.7424, 110.692, 2.75419, 0.33", "62.9227, 111.239, 2.77716, 0.67", "63.5841, 114.02, 2.97796, 0.33", "63.8383, 115.384, 3.09268, 2.0", "64.1404, 117.317, 3.26864, 0.33", "64.315, 118.33, 3.34734, 0.67", "64.6275, 119.613, 3.32931, 0.33", "65.0518, 120.839, 3.18913, 1.33", "66.0953, 123.143, 2.70195, 0.33", "66.6129, 124.08, 2.42507, 2.0", "68.0049, 126.18, 1.62815, 0.33", "69.9319, 128.558, 0.581392, 2.0", "71.6079, 130.41, -0.322904, 0.33", "71.7841, 130.585, -0.41865, 0.67", "72.7808, 131.47, -0.9732, 0.33", "73.4196, 132.006, -1.3282, 2.0", "75.5231, 133.565, -2.40695, 0.33" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_40", "dend_25", "dend_0", "apic_2", "apic_1", "dend_52", "dend_41", "dend_33", "dend_26", "dend_10", "dend_1", "apic_4", "apic_3", "dend_49", "dend_42", "dend_35", "dend_34", "dend_28", "dend_27", "dend_22", "dend_11", "dend_5", "dend_2", "apic_10", "apic_5", "dend_51", "dend_50", "dend_44", "dend_43", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_23", "dend_21", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_12", "apic_11", "apic_7", "apic_6", "dend_48", "dend_45", "dend_39", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_9", "dend_8", "apic_16", "apic_13", "apic_9", "apic_8", "dend_47", "dend_46", "dend_20", "dend_17", "dend_15", "dend_14", "apic_18", "apic_17", "apic_15", "apic_14", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_40", "dend_25", "dend_0", "apic_2", "apic_1", "dend_52", "dend_41", "dend_33", "dend_26", "dend_10", "dend_1", "apic_4", "apic_3", "dend_49", "dend_42", "dend_35", "dend_34", "dend_28", "dend_27", "dend_22", "dend_11", "dend_5", "dend_2", "apic_10", "apic_5", "dend_51", "dend_50", "dend_44", "dend_43", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_23", "dend_21", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_12", "apic_11", "apic_7", "apic_6", "dend_48", "dend_45", "dend_39", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_9", "dend_8", "apic_16", "apic_13", "apic_9", "apic_8", "dend_47", "dend_46", "dend_20", "dend_17", "dend_15", "dend_14", "apic_18", "apic_17", "apic_15", "apic_14", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_0", "axon_0", "axon_0", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_10", "apic_10", "apic_10", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L4_LBC_28153c03c4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_52, id: dend_52, parent: dend_40
create dend_52
public dend_52
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_49, id: dend_49, parent: dend_41
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_10, id: apic_10, parent: apic_4
create apic_10
public apic_10
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_16, id: apic_16, parent: apic_12
create apic_16
public apic_16
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_40, dend_25, dend_0, apic_2, apic_1, dend_52, dend_41, dend_33, dend_26, dend_10, dend_1, apic_4, apic_3, dend_49, dend_42, dend_35, dend_34, dend_28, dend_27, dend_22, dend_11, dend_5, dend_2, apic_10, apic_5, dend_51, dend_50, dend_44, dend_43, dend_37, dend_36, dend_30, dend_29, dend_24, dend_23, dend_21, dend_12, dend_7, dend_6, dend_4, dend_3, apic_12, apic_11, apic_7, apic_6, dend_48, dend_45, dend_39, dend_38, dend_32, dend_31, dend_16, dend_13, dend_9, dend_8, apic_16, apic_13, apic_9, apic_8, dend_47, dend_46, dend_20, dend_17, dend_15, dend_14, apic_18, apic_17, apic_15, apic_14, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_40, dend_25, dend_0, apic_2, apic_1, dend_52, dend_41, dend_33, dend_26, dend_10, dend_1, apic_4, apic_3, dend_49, dend_42, dend_35, dend_34, dend_28, dend_27, dend_22, dend_11, dend_5, dend_2, apic_10, apic_5, dend_51, dend_50, dend_44, dend_43, dend_37, dend_36, dend_30, dend_29, dend_24, dend_23, dend_21, dend_12, dend_7, dend_6, dend_4, dend_3, apic_12, apic_11, apic_7, apic_6, dend_48, dend_45, dend_39, dend_38, dend_32, dend_31, dend_16, dend_13, dend_9, dend_8, apic_16, apic_13, apic_9, apic_8, dend_47, dend_46, dend_20, dend_17, dend_15, dend_14, apic_18, apic_17, apic_15, apic_14, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_0, axon_0, axon_0, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.45000000473126)
    connect dend_40(0), soma_0(0.45000000473126)
    connect dend_25(0), soma_0(0.45000000473126)
    connect dend_0(0), soma_0(0.45000000473126)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_52(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_49(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_10(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_16(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.19791, -16.6038, 0.189339, 3.82975 ) }
    soma_0 { pt3dadd( -0.984226, -15.1158, 0.189878, 6.3833 ) }
    soma_0 { pt3dadd( -0.770543, -13.6278, 0.190418, 9.41895 ) }
    soma_0 { pt3dadd( -0.55686, -12.1399, 0.190957, 11.7366 ) }
    soma_0 { pt3dadd( -0.343177, -10.6519, 0.191496, 14.054 ) }
    soma_0 { pt3dadd( -0.129494, -9.1639, 0.192035, 15.9877 ) }
    soma_0 { pt3dadd( 0.0841893, -7.67592, 0.192575, 17.5231 ) }
    soma_0 { pt3dadd( 0.297872, -6.18794, 0.193114, 18.7961 ) }
    soma_0 { pt3dadd( 0.511555, -4.69996, 0.193653, 19.9686 ) }
    soma_0 { pt3dadd( 0.725238, -3.21198, 0.194193, 20.6404 ) }
    soma_0 { pt3dadd( 0.938921, -1.724, 0.194732, 20.873 ) }
    soma_0 { pt3dadd( 1.1526, -0.236014, 0.195271, 20.8992 ) }
    soma_0 { pt3dadd( 1.36629, 1.25197, 0.195811, 20.8518 ) }
    soma_0 { pt3dadd( 1.57997, 2.73995, 0.19635, 20.0831 ) }
    soma_0 { pt3dadd( 1.79365, 4.22793, 0.196889, 19.1754 ) }
    soma_0 { pt3dadd( 2.00734, 5.71591, 0.197429, 18.1735 ) }
    soma_0 { pt3dadd( 2.22102, 7.20389, 0.197968, 16.5272 ) }
    soma_0 { pt3dadd( 2.4347, 8.69188, 0.198507, 13.398 ) }
    soma_0 { pt3dadd( 2.64839, 10.1799, 0.199047, 10.9927 ) }
    soma_0 { pt3dadd( 2.86207, 11.6678, 0.199586, 8.47792 ) }
    soma_0 { pt3dadd( 3.07575, 13.1558, 0.200125, 4.9216 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -4.0135, -15.3809, -5.58826, 3.33 ) }
    apic_0 { pt3dadd( -5.26696, -16.1609, -6.21559, 2.66 ) }
    apic_0 { pt3dadd( -7.338, -17.4497, -7.25211, 3.99 ) }
    apic_0 { pt3dadd( -7.88353, -17.7892, -7.52514, 4.66 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.316498, -14.7634, -16.2782, 2.0 ) }
    dend_40 { pt3dadd( 1.42027, -14.4074, -19.5517, 2.0 ) }
    dend_40 { pt3dadd( 2.85689, -13.944, -23.8124, 2.0 ) }
    dend_40 { pt3dadd( 5.81273, -12.9905, -32.5786, 1.33 ) }
    dend_40 { pt3dadd( 7.49266, -12.4487, -37.5609, 2.0 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.3735, 8.36916, -12.0882, 2.66 ) }
    dend_25 { pt3dadd( -7.24844, 9.91798, -12.5373, 2.66 ) }
    dend_25 { pt3dadd( -10.8272, 11.846, -13.0963, 2.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 33/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.856499, 13.2521, 4.81174, 5.99 ) }
    dend_0 { pt3dadd( 1.82559, 14.6906, 4.81174, 5.99 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 35/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.07575, 13.1558, 0.200125, 1.16244 ) }
    axon_0 { pt3dadd( 5.20797, 28.0035, 0.200125, 1.16244 ) }
    axon_0 { pt3dadd( 7.34019, 42.8512, 0.200125, 1.16244 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 38/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -7.88353, -17.7892, -7.52514, 3.99 ) }
    apic_2 { pt3dadd( -9.85254, -19.1282, -7.53524, 3.99 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 40/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -7.88353, -17.7892, -7.52514, 0.67 ) }
    apic_1 { pt3dadd( -10.556, -16.3701, -10.5117, 0.67 ) }
    apic_1 { pt3dadd( -12.3479, -15.5988, -11.791, 0.67 ) }
    apic_1 { pt3dadd( -14.3314, -14.8034, -12.9255, 0.67 ) }
    apic_1 { pt3dadd( -16.9841, -13.8465, -13.9793, 1.33 ) }
    apic_1 { pt3dadd( -22.6845, -11.9071, -15.78, 0.33 ) }
    apic_1 { pt3dadd( -24.8283, -11.2663, -16.5511, 1.33 ) }
    apic_1 { pt3dadd( -31.0818, -9.67608, -18.9389, 0.33 ) }
    apic_1 { pt3dadd( -31.7833, -9.50742, -19.1064, 1.33 ) }
    apic_1 { pt3dadd( -36.0553, -8.52577, -19.6132, 0.33 ) }
    apic_1 { pt3dadd( -36.7069, -8.38555, -19.6301, 1.33 ) }
    apic_1 { pt3dadd( -43.7061, -7.14245, -19.3755, 0.33 ) }
    apic_1 { pt3dadd( -44.4358, -7.01368, -19.3771, 2.66 ) }
    apic_1 { pt3dadd( -52.1494, -5.59535, -20.0197, 0.33 ) }
    apic_1 { pt3dadd( -53.1946, -5.41151, -20.1196, 1.33 ) }
    apic_1 { pt3dadd( -55.4418, -5.00322, -20.3594, 0.33 ) }
    apic_1 { pt3dadd( -56.7522, -4.76142, -20.4186, 0.67 ) }
    apic_1 { pt3dadd( -58.0658, -4.48864, -20.4898, 0.33 ) }
    apic_1 { pt3dadd( -60.6532, -3.94146, -20.9019, 2.66 ) }
    apic_1 { pt3dadd( -64.6639, -2.96402, -22.2681, 0.33 ) }
    apic_1 { pt3dadd( -65.0994, -2.84412, -22.4241, 0.67 ) }
    apic_1 { pt3dadd( -68.7465, -1.66329, -24.1146, 0.33 ) }
    apic_1 { pt3dadd( -73.1886, -0.0683467, -26.3941, 0.33 ) }
    apic_1 { pt3dadd( -74.3506, 0.378972, -27.0488, 2.0 ) }
    apic_1 { pt3dadd( -79.3116, 2.38258, -30.0106, 0.67 ) }
    apic_1 { pt3dadd( -80.7589, 2.95886, -30.831, 2.66 ) }
    apic_1 { pt3dadd( -86.7053, 5.13431, -34.3693, 0.33 ) }
    apic_1 { pt3dadd( -88.9124, 5.81598, -35.7962, 3.33 ) }
    apic_1 { pt3dadd( -93.5489, 6.98452, -38.7383, 0.33 ) }
    apic_1 { pt3dadd( -94.9654, 7.27433, -39.6372, 0.67 ) }
    apic_1 { pt3dadd( -100.708, 8.15032, -43.1994, 0.33 ) }
    apic_1 { pt3dadd( -106.017, 8.76583, -46.3646, 2.66 ) }
    apic_1 { pt3dadd( -112.052, 9.20978, -49.7401, 0.33 ) }
    apic_1 { pt3dadd( -113.232, 9.31776, -50.4488, 1.33 ) }
    apic_1 { pt3dadd( -116.1, 9.67058, -52.203, 0.33 ) }
    apic_1 { pt3dadd( -116.898, 9.81339, -52.6843, 1.33 ) }
    apic_1 { pt3dadd( -119.255, 10.4098, -54.0389, 0.33 ) }
    apic_1 { pt3dadd( -120.689, 10.8715, -54.6909, 2.0 ) }
    apic_1 { pt3dadd( -128.152, 13.5472, -57.734, 0.33 ) }
    apic_1 { pt3dadd( -129.507, 13.9716, -58.2048, 2.66 ) }
    apic_1 { pt3dadd( -134.163, 15.246, -59.6134, 0.33 ) }
    apic_1 { pt3dadd( -136.129, 15.7117, -60.2133, 1.33 ) }
    apic_1 { pt3dadd( -140.581, 16.5775, -61.3942, 0.33 ) }
    apic_1 { pt3dadd( -142.942, 16.9234, -61.8484, 2.0 ) }
    apic_1 { pt3dadd( -148.495, 17.3683, -62.5166, 0.33 ) }
    apic_1 { pt3dadd( -149.25, 17.4325, -62.6265, 0.67 ) }
    apic_1 { pt3dadd( -153.251, 17.8602, -63.4487, 0.33 ) }
    apic_1 { pt3dadd( -156.691, 18.2933, -64.2225, 2.0 ) }
    apic_1 { pt3dadd( -161.213, 18.9747, -65.3325, 0.33 ) }
    apic_1 { pt3dadd( -162.83, 19.2375, -65.7993, 1.33 ) }
    apic_1 { pt3dadd( -171.377, 20.7032, -68.558, 0.33 ) }
    apic_1 { pt3dadd( -174.789, 21.2033, -69.5122, 2.0 ) }
    apic_1 { pt3dadd( -182.34, 22.1177, -71.3598, 0.33 ) }
    apic_1 { pt3dadd( -183.644, 22.2399, -71.6801, 2.66 ) }
    apic_1 { pt3dadd( -189.116, 22.604, -72.8901, 0.33 ) }
    apic_1 { pt3dadd( -190.771, 22.6246, -73.2603, 1.33 ) }
    apic_1 { pt3dadd( -197.181, 22.2498, -74.6047, 0.33 ) }
    apic_1 { pt3dadd( -198.165, 22.1191, -74.8093, 2.0 ) }
    apic_1 { pt3dadd( -200.769, 21.5647, -75.4857, 0.33 ) }
    apic_1 { pt3dadd( -202.015, 21.2555, -75.808, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_1 { pt3dadd( -207.719, 19.5028, -77.2834, 0.33 ) }
    apic_1 { pt3dadd( -208.799, 19.0964, -77.6556, 2.0 ) }
    apic_1 { pt3dadd( -211.045, 17.9429, -78.8865, 0.33 ) }
    apic_1 { pt3dadd( -211.407, 17.7333, -79.0938, 0.67 ) }
    // Section: dend_52, id: dend_52, parent: dend_40 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 7.49266, -12.4487, -37.5609, 0.67 ) }
    dend_52 { pt3dadd( 4.96191, -15.4332, -50.4747, 0.67 ) }
    dend_52 { pt3dadd( 4.34496, -16.1099, -53.9011, 0.67 ) }
    dend_52 { pt3dadd( 4.09436, -16.3551, -55.2702, 2.0 ) }
    dend_52 { pt3dadd( 2.92369, -17.4617, -62.0311, 0.33 ) }
    dend_52 { pt3dadd( 2.76268, -17.576, -62.8945, 2.0 ) }
    dend_52 { pt3dadd( 0.879866, -18.6051, -72.5793, 0.33 ) }
    dend_52 { pt3dadd( 0.186415, -18.7847, -75.9566, 1.33 ) }
    dend_52 { pt3dadd( -0.621288, -18.6504, -80.4106, 0.33 ) }
    dend_52 { pt3dadd( -1.25188, -18.2853, -84.0968, 1.33 ) }
    dend_52 { pt3dadd( -2.89708, -16.7102, -93.8247, 0.33 ) }
    dend_52 { pt3dadd( -3.16622, -16.4007, -95.3598, 0.33 ) }
    dend_52 { pt3dadd( -3.67949, -15.8149, -97.8455, 1.33 ) }
    dend_52 { pt3dadd( -5.70409, -13.6614, -106.506, 1.33 ) }
    dend_52 { pt3dadd( -8.29581, -11.3119, -116.483, 1.33 ) }
    dend_52 { pt3dadd( -10.9171, -9.29006, -125.599, 0.67 ) }
    dend_52 { pt3dadd( -11.9385, -8.73485, -128.678, 2.0 ) }
    dend_52 { pt3dadd( -14.7284, -7.82481, -136.049, 0.33 ) }
    dend_52 { pt3dadd( -16.0478, -7.68494, -138.919, 2.0 ) }
    dend_52 { pt3dadd( -19.6998, -8.17841, -145.011, 0.33 ) }
    dend_52 { pt3dadd( -20.1224, -8.29362, -145.563, 1.33 ) }
    dend_52 { pt3dadd( -24.1645, -10.0579, -149.879, 0.33 ) }
    dend_52 { pt3dadd( -25.6423, -10.905, -151.314, 1.33 ) }
    dend_52 { pt3dadd( -28.6037, -13.1159, -153.493, 0.33 ) }
    dend_52 { pt3dadd( -29.7294, -13.9968, -154.068, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 29/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.49266, -12.4487, -37.5609, 0.67 ) }
    dend_41 { pt3dadd( 13.112, -14.194, -44.6191, 0.67 ) }
    dend_41 { pt3dadd( 14.178, -14.4831, -45.8544, 3.33 ) }
    dend_41 { pt3dadd( 18.5471, -15.5638, -50.4409, 0.33 ) }
    dend_41 { pt3dadd( 20.1712, -15.9655, -52.1458, 3.33 ) }
    dend_41 { pt3dadd( 21.9324, -16.4011, -53.9947, 0.33 ) }
    dend_41 { pt3dadd( 22.4954, -16.5403, -54.5856, 0.67 ) }
    dend_41 { pt3dadd( 24.9571, -16.9213, -56.1517, 0.33 ) }
    dend_41 { pt3dadd( 26.3077, -17.0516, -56.9812, 3.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.8272, 11.846, -13.0963, 1.33 ) }
    dend_33 { pt3dadd( -18.2872, 8.56045, -11.1486, 1.33 ) }
    dend_33 { pt3dadd( -20.9157, 7.4028, -10.4623, 0.67 ) }
    dend_33 { pt3dadd( -24.4306, 5.85475, -9.54459, 1.33 ) }
    dend_33 { pt3dadd( -27.3189, 4.58269, -8.79049, 0.67 ) }
    dend_33 { pt3dadd( -31.9027, 2.56388, -7.5937, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.8272, 11.846, -13.0963, 0.67 ) }
    dend_26 { pt3dadd( -13.9512, 11.467, -14.6542, 0.67 ) }
    dend_26 { pt3dadd( -16.2725, 11.1855, -15.8118, 0.67 ) }
    dend_26 { pt3dadd( -19.2533, 10.8239, -17.2983, 0.67 ) }
    dend_26 { pt3dadd( -23.5633, 10.3012, -19.4476, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.82559, 14.6906, 4.81174, 3.99 ) }
    dend_10 { pt3dadd( 5.15261, 18.4328, 4.36097, 3.99 ) }
    dend_10 { pt3dadd( 7.43039, 20.9947, 4.05235, 3.99 ) }
    dend_10 { pt3dadd( 7.43039, 20.9947, 4.05235, 3.99 ) }
    dend_10 { pt3dadd( 10.891, 24.887, 3.58348, 2.0 ) }
    dend_10 { pt3dadd( 13.0024, 27.2619, 3.2974, 2.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 55/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.82559, 14.6906, 4.81174, 0.67 ) }
    dend_1 { pt3dadd( -2.84868, 17.2304, 12.0008, 0.67 ) }
    dend_1 { pt3dadd( -5.66377, 18.9532, 15.9587, 1.33 ) }
    dend_1 { pt3dadd( -8.17307, 20.8016, 19.2515, 1.33 ) }
    dend_1 { pt3dadd( -10.7187, 22.6767, 22.5922, 2.0 ) }
    dend_1 { pt3dadd( -15.5669, 26.248, 28.9544, 1.33 ) }
    dend_1 { pt3dadd( -17.2669, 27.5001, 31.1852, 1.33 ) }
    dend_1 { pt3dadd( -20.0702, 29.3751, 34.1476, 1.33 ) }
    dend_1 { pt3dadd( -26.0434, 33.2063, 39.6413, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.34019, 42.8512, 0.200125, 0.862796 ) }
    axon_1 { pt3dadd( 9.47241, 57.6988, 0.200125, 0.862796 ) }
    axon_1 { pt3dadd( 11.6046, 72.5465, 0.200125, 0.862796 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -9.85254, -19.1282, -7.53524, 1.33 ) }
    apic_4 { pt3dadd( -11.902, -22.9633, -12.785, 1.33 ) }
    apic_4 { pt3dadd( -12.8529, -24.7426, -15.2206, 2.66 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 70/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -9.85254, -19.1282, -7.53524, 0.67 ) }
    apic_3 { pt3dadd( -12.7561, -18.8679, -9.23357, 0.67 ) }
    apic_3 { pt3dadd( -14.443, -18.6384, -10.0792, 0.33 ) }
    apic_3 { pt3dadd( -15.0452, -18.5458, -10.3102, 0.67 ) }
    apic_3 { pt3dadd( -19.4869, -17.8527, -11.7842, 0.33 ) }
    apic_3 { pt3dadd( -20.7464, -17.6634, -12.1653, 0.67 ) }
    apic_3 { pt3dadd( -25.4409, -16.9383, -13.4864, 0.33 ) }
    apic_3 { pt3dadd( -27.1126, -16.6665, -13.891, 0.67 ) }
    apic_3 { pt3dadd( -33.7779, -15.4805, -15.3789, 0.33 ) }
    apic_3 { pt3dadd( -35.3313, -15.1978, -15.7123, 0.67 ) }
    apic_3 { pt3dadd( -36.3079, -15.0141, -15.8947, 0.33 ) }
    apic_3 { pt3dadd( -37.4443, -14.8232, -16.0801, 1.33 ) }
    apic_3 { pt3dadd( -42.2168, -14.1398, -16.7486, 0.33 ) }
    apic_3 { pt3dadd( -42.9282, -14.0502, -16.8358, 2.0 ) }
    apic_3 { pt3dadd( -48.8966, -13.3292, -17.4103, 0.33 ) }
    apic_3 { pt3dadd( -50.5361, -13.1419, -17.5297, 2.0 ) }
    apic_3 { pt3dadd( -54.9052, -12.6612, -17.7286, 0.33 ) }
    apic_3 { pt3dadd( -55.3472, -12.6058, -17.7682, 1.33 ) }
    apic_3 { pt3dadd( -57.2739, -12.3147, -17.9437, 0.33 ) }
    apic_3 { pt3dadd( -57.9682, -12.207, -18.1083, 0.67 ) }
    apic_3 { pt3dadd( -59.7863, -11.9263, -18.7087, 0.33 ) }
    apic_3 { pt3dadd( -60.1958, -11.8816, -18.8833, 1.33 ) }
    apic_3 { pt3dadd( -67.1105, -11.2138, -22.2724, 0.33 ) }
    apic_3 { pt3dadd( -68.553, -11.1148, -23.0559, 2.0 ) }
    apic_3 { pt3dadd( -76.1733, -10.6752, -27.6786, 0.33 ) }
    apic_3 { pt3dadd( -76.7102, -10.6552, -28.0444, 0.67 ) }
    apic_3 { pt3dadd( -81.8728, -10.5752, -31.7916, 0.33 ) }
    apic_3 { pt3dadd( -83.3054, -10.5848, -32.9197, 2.66 ) }
    apic_3 { pt3dadd( -90.1978, -10.8156, -38.8578, 0.33 ) }
    apic_3 { pt3dadd( -93.0152, -10.9002, -41.5747, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_3 { pt3dadd( -98.3529, -10.9557, -47.0557, 0.33 ) }
    apic_3 { pt3dadd( -99.1334, -10.9347, -47.9149, 2.0 ) }
    apic_3 { pt3dadd( -102.682, -10.6664, -52.1364, 0.33 ) }
    apic_3 { pt3dadd( -104.339, -10.4733, -54.2254, 2.0 ) }
    apic_3 { pt3dadd( -109.645, -9.38683, -61.3741, 0.33 ) }
    apic_3 { pt3dadd( -110.666, -9.00479, -62.6888, 2.66 ) }
    apic_3 { pt3dadd( -113.171, -7.6395, -65.7647, 0.33 ) }
    apic_3 { pt3dadd( -113.574, -7.36957, -66.177, 0.67 ) }
    apic_3 { pt3dadd( -115.959, -5.57493, -68.1015, 0.33 ) }
    apic_3 { pt3dadd( -117.565, -4.29361, -69.2008, 2.66 ) }
    apic_3 { pt3dadd( -125.005, 1.83042, -73.4953, 0.33 ) }
    apic_3 { pt3dadd( -125.967, 2.60877, -74.0242, 2.0 ) }
    apic_3 { pt3dadd( -133.504, 8.54503, -77.6631, 0.33 ) }
    apic_3 { pt3dadd( -135.809, 10.3192, -78.6839, 0.67 ) }
    apic_3 { pt3dadd( -138.236, 12.1451, -79.5654, 0.33 ) }
    apic_3 { pt3dadd( -138.794, 12.5528, -79.7286, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_41 (entry count 16/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 26.3077, -17.0516, -56.9812, 0.33 ) }
    dend_49 { pt3dadd( 27.1862, -16.9334, -58.7356, 0.33 ) }
    dend_49 { pt3dadd( 27.6624, -16.9274, -59.7017, 3.33 ) }
    dend_49 { pt3dadd( 28.1591, -16.9358, -60.7072, 0.33 ) }
    dend_49 { pt3dadd( 28.8272, -16.9753, -61.9865, 2.66 ) }
    dend_49 { pt3dadd( 37.4304, -17.994, -77.5091, 0.33 ) }
    dend_49 { pt3dadd( 37.9269, -18.0834, -78.3867, 0.67 ) }
    dend_49 { pt3dadd( 40.4616, -18.6758, -82.8923, 0.33 ) }
    dend_49 { pt3dadd( 42.7762, -19.4013, -87.2166, 2.0 ) }
    dend_49 { pt3dadd( 45.5675, -20.4108, -92.6999, 0.33 ) }
    dend_49 { pt3dadd( 46.7712, -20.957, -95.1527, 1.33 ) }
    dend_49 { pt3dadd( 49.1887, -22.2737, -99.6891, 0.67 ) }
    dend_49 { pt3dadd( 51.6709, -23.6245, -104.199, 2.0 ) }
    dend_49 { pt3dadd( 55.6611, -25.845, -111.39, 0.33 ) }
    dend_49 { pt3dadd( 59.1513, -27.8994, -117.914, 2.0 ) }
    dend_49 { pt3dadd( 61.8893, -29.4151, -123.697, 0.33 ) }
    dend_49 { pt3dadd( 68.8347, -31.8213, -141.328, 0.67 ) }
    dend_49 { pt3dadd( 69.0714, -31.8694, -142.158, 3.33 ) }
    dend_49 { pt3dadd( 69.2562, -31.8347, -143.759, 0.67 ) }
    dend_49 { pt3dadd( 69.1485, -31.5256, -147.787, 0.67 ) }
    dend_49 { pt3dadd( 69.2034, -31.7216, -145.213, 2.66 ) }
    dend_49 { pt3dadd( 68.887, -32.3563, -136.091, 0.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 26.3077, -17.0516, -56.9812, 0.33 ) }
    dend_42 { pt3dadd( 28.4538, -16.9592, -58.7762, 0.33 ) }
    dend_42 { pt3dadd( 31.5595, -16.7965, -61.2525, 0.33 ) }
    dend_42 { pt3dadd( 33.6596, -16.6851, -62.8624, 0.33 ) }
    dend_42 { pt3dadd( 34.4415, -16.6444, -63.4581, 3.99 ) }
    dend_42 { pt3dadd( 39.0586, -16.4114, -67.2419, 0.33 ) }
    dend_42 { pt3dadd( 39.2228, -16.401, -67.3825, 0.67 ) }
    dend_42 { pt3dadd( 40.0687, -16.3129, -68.2065, 0.33 ) }
    dend_42 { pt3dadd( 40.3787, -16.2783, -68.5166, 0.67 ) }
    dend_42 { pt3dadd( 41.9693, -16.1824, -70.2293, 0.33 ) }
    dend_42 { pt3dadd( 44.0444, -16.0704, -72.4214, 2.66 ) }
    dend_42 { pt3dadd( 46.2471, -15.9325, -74.6046, 0.33 ) }
    dend_42 { pt3dadd( 48.2579, -15.7721, -76.5269, 2.0 ) }
    dend_42 { pt3dadd( 50.0223, -15.6246, -78.1438, 0.33 ) }
    dend_42 { pt3dadd( 52.0376, -15.4469, -79.8655, 2.0 ) }
    dend_42 { pt3dadd( 54.6725, -15.2178, -81.8675, 0.33 ) }
    dend_42 { pt3dadd( 55.9291, -15.1427, -82.6682, 2.66 ) }
    dend_42 { pt3dadd( 59.7228, -15.0001, -84.7982, 0.33 ) }
    dend_42 { pt3dadd( 60.5278, -14.9772, -85.1423, 2.0 ) }
    dend_42 { pt3dadd( 62.7669, -14.9147, -85.9182, 0.33 ) }
    dend_42 { pt3dadd( 63.6427, -14.9007, -86.1105, 2.0 ) }
    dend_42 { pt3dadd( 68.516, -14.8967, -86.7875, 0.33 ) }
    dend_42 { pt3dadd( 69.6755, -14.8916, -86.9284, 2.66 ) }
    dend_42 { pt3dadd( 73.4773, -14.7949, -86.9823, 0.33 ) }
    dend_42 { pt3dadd( 74.5016, -14.6725, -86.9701, 2.0 ) }
    dend_42 { pt3dadd( 77.1688, -14.1656, -86.8358, 0.33 ) }
    dend_42 { pt3dadd( 77.5162, -14.057, -86.8308, 0.67 ) }
    dend_42 { pt3dadd( 80.228, -12.8099, -86.8569, 0.33 ) }
    dend_42 { pt3dadd( 82.445, -11.6796, -87.1653, 2.0 ) }
    dend_42 { pt3dadd( 86.6902, -9.34493, -88.2356, 0.33 ) }
    dend_42 { pt3dadd( 86.9464, -9.2062, -88.31, 0.67 ) }
    dend_42 { pt3dadd( 89.935, -7.63355, -89.307, 0.33 ) }
    dend_42 { pt3dadd( 91.1349, -7.08332, -89.7739, 2.66 ) }
    dend_42 { pt3dadd( 94.6982, -5.68253, -91.3268, 0.33 ) }
    dend_42 { pt3dadd( 95.0661, -5.56259, -91.5146, 0.67 ) }
    dend_42 { pt3dadd( 96.2119, -5.29619, -92.2225, 0.33 ) }
    dend_42 { pt3dadd( 97.7656, -4.97313, -93.1858, 2.0 ) }
    dend_42 { pt3dadd( 100.94, -4.49238, -95.1976, 0.33 ) }
    dend_42 { pt3dadd( 101.579, -4.39601, -95.64, 0.33 ) }
    dend_42 { pt3dadd( 102.313, -4.27102, -96.1842, 2.0 ) }
    dend_42 { pt3dadd( 106.036, -3.58945, -99.1401, 0.33 ) }
    dend_42 { pt3dadd( 107.597, -3.28652, -100.517, 2.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 80/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -31.9027, 2.56388, -7.5937, 0.67 ) }
    dend_35 { pt3dadd( -38.2611, 3.04297, -6.83971, 0.67 ) }
    dend_35 { pt3dadd( -40.2867, 2.97185, -6.52484, 0.67 ) }
    dend_35 { pt3dadd( -42.6692, 2.60393, -6.25227, 1.33 ) }
    dend_35 { pt3dadd( -46.025, 1.9805, -5.95107, 0.33 ) }
    dend_35 { pt3dadd( -47.2623, 1.75064, -5.84002, 2.0 ) }
    dend_35 { pt3dadd( -50.4405, 1.16019, -5.55475, 0.33 ) }
    dend_35 { pt3dadd( -53.6394, 0.397896, -5.57831, 2.66 ) }
    dend_35 { pt3dadd( -57.4762, -0.921427, -5.53404, 0.33 ) }
    dend_35 { pt3dadd( -59.7483, -1.97961, -5.4134, 2.0 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -31.9027, 2.56388, -7.5937, 0.67 ) }
    dend_34 { pt3dadd( -34.832, 7.29881, -13.9194, 0.67 ) }
    dend_34 { pt3dadd( -35.4715, 8.17574, -15.4627, 0.33 ) }
    dend_34 { pt3dadd( -36.1312, 8.72302, -17.5204, 0.67 ) }
    dend_34 { pt3dadd( -36.6955, 9.00785, -19.259, 0.33 ) }
    dend_34 { pt3dadd( -37.4123, 9.15822, -21.5213, 0.67 ) }
    dend_34 { pt3dadd( -38.7916, 9.25617, -25.5021, 0.33 ) }
    dend_34 { pt3dadd( -40.1186, 8.9299, -29.3182, 2.0 ) }
    dend_34 { pt3dadd( -43.1762, 7.75656, -38.7614, 0.33 ) }
    dend_34 { pt3dadd( -43.8193, 7.48587, -40.8327, 2.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -45.3158, 6.89813, -45.5756, 0.33 ) }
    dend_34 { pt3dadd( -46.0785, 6.66595, -48.0457, 0.33 ) }
    dend_34 { pt3dadd( -47.4267, 6.42611, -52.661, 0.33 ) }
    dend_34 { pt3dadd( -49.4952, 6.31119, -60.4364, 2.66 ) }
    dend_34 { pt3dadd( -51.6563, 6.44483, -68.9026, 0.33 ) }
    dend_34 { pt3dadd( -52.3177, 6.49457, -71.735, 2.0 ) }
    dend_34 { pt3dadd( -53.9386, 6.58751, -78.9164, 0.33 ) }
    dend_34 { pt3dadd( -54.7166, 6.55067, -82.5354, 2.0 ) }
    dend_34 { pt3dadd( -57.787, 6.0676, -96.921, 0.33 ) }
    dend_34 { pt3dadd( -58.3054, 5.87875, -99.3714, 2.66 ) }
    dend_34 { pt3dadd( -60.6099, 4.51492, -110.352, 0.33 ) }
    dend_34 { pt3dadd( -60.8699, 4.29046, -111.659, 1.33 ) }
    dend_34 { pt3dadd( -61.9809, 2.94909, -117.366, 0.33 ) }
    dend_34 { pt3dadd( -62.9829, 1.47761, -122.393, 2.0 ) }
    dend_34 { pt3dadd( -64.0603, -0.25859, -127.113, 0.33 ) }
    dend_34 { pt3dadd( -64.3769, -0.771862, -128.351, 2.0 ) }
    dend_34 { pt3dadd( -65.7789, -2.81151, -132.459, 0.67 ) }
    dend_34 { pt3dadd( -68.1386, -5.89402, -138.222, 0.33 ) }
    dend_34 { pt3dadd( -69.233, -7.1456, -140.297, 2.0 ) }
    dend_34 { pt3dadd( -72.9444, -10.9382, -146.102, 0.33 ) }
    dend_34 { pt3dadd( -73.615, -11.5795, -147.038, 1.33 ) }
    dend_34 { pt3dadd( -75.744, -13.5276, -149.742, 0.33 ) }
    dend_34 { pt3dadd( -76.143, -13.8744, -150.245, 1.33 ) }
    dend_34 { pt3dadd( -79.0083, -16.4524, -154.072, 0.33 ) }
    dend_34 { pt3dadd( -79.9396, -17.3351, -155.224, 2.0 ) }
    dend_34 { pt3dadd( -82.2708, -19.6405, -157.882, 0.33 ) }
    dend_34 { pt3dadd( -82.909, -20.2798, -158.58, 0.67 ) }
    dend_34 { pt3dadd( -89.9317, -27.5407, -166.399, 0.33 ) }
    dend_34 { pt3dadd( -90.8436, -28.49, -167.362, 1.33 ) }
    dend_34 { pt3dadd( -96.1654, -33.9644, -172.314, 0.33 ) }
    dend_34 { pt3dadd( -96.3854, -34.1849, -172.5, 1.33 ) }
    dend_34 { pt3dadd( -98.3733, -36.0582, -173.971, 0.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 32/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.5633, 10.3012, -19.4476, 0.67 ) }
    dend_28 { pt3dadd( -22.8321, 11.7613, -20.9594, 0.67 ) }
    dend_28 { pt3dadd( -22.4398, 12.5446, -21.7704, 2.0 ) }
    dend_28 { pt3dadd( -20.3789, 16.6599, -26.0314, 0.33 ) }
    dend_28 { pt3dadd( -19.1842, 19.0454, -28.5013, 1.33 ) }
    dend_28 { pt3dadd( -15.8217, 25.7598, -35.4534, 0.33 ) }
    dend_28 { pt3dadd( -15.188, 27.0252, -36.7636, 2.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -23.5633, 10.3012, -19.4476, 0.33 ) }
    dend_27 { pt3dadd( -29.0921, 5.42735, -30.5823, 0.33 ) }
    dend_27 { pt3dadd( -29.0921, 5.42735, -30.5823, 0.67 ) }
    dend_27 { pt3dadd( -31.4934, 2.80881, -35.6924, 0.33 ) }
    dend_27 { pt3dadd( -32.4848, 1.41769, -38.3664, 2.0 ) }
    dend_27 { pt3dadd( -36.2113, -4.28995, -49.7249, 0.33 ) }
    dend_27 { pt3dadd( -36.8518, -5.27435, -51.7575, 2.0 ) }
    dend_27 { pt3dadd( -40.2854, -10.8282, -63.0987, 0.33 ) }
    dend_27 { pt3dadd( -41.114, -12.1121, -65.8805, 2.66 ) }
    dend_27 { pt3dadd( -45.6236, -18.7717, -81.2003, 0.33 ) }
    dend_27 { pt3dadd( -47.641, -21.3345, -87.7478, 2.66 ) }
    dend_27 { pt3dadd( -50.6874, -24.3856, -96.8265, 0.33 ) }
    dend_27 { pt3dadd( -51.1469, -24.7001, -98.0089, 2.0 ) }
    dend_27 { pt3dadd( -53.2063, -25.447, -102.258, 0.33 ) }
    dend_27 { pt3dadd( -54.3991, -25.5937, -104.144, 1.33 ) }
    dend_27 { pt3dadd( -59.367, -24.9723, -108.801, 0.33 ) }
    dend_27 { pt3dadd( -62.1778, -24.5202, -110.507, 2.0 ) }
    dend_27 { pt3dadd( -69.0324, -23.3281, -113.188, 0.33 ) }
    dend_27 { pt3dadd( -69.3895, -23.2836, -113.274, 1.33 ) }
    dend_27 { pt3dadd( -76.9727, -22.6779, -113.906, 0.33 ) }
    dend_27 { pt3dadd( -78.5952, -22.6345, -113.914, 2.66 ) }
    dend_27 { pt3dadd( -87.2785, -22.8328, -113.099, 0.33 ) }
    dend_27 { pt3dadd( -88.6905, -22.9299, -112.918, 2.0 ) }
    dend_27 { pt3dadd( -93.6955, -23.6587, -112.187, 0.33 ) }
    dend_27 { pt3dadd( -94.4252, -23.768, -112.125, 1.33 ) }
    dend_27 { pt3dadd( -99.121, -24.5759, -112.131, 0.33 ) }
    dend_27 { pt3dadd( -99.7295, -24.6085, -112.22, 2.0 ) }
    dend_27 { pt3dadd( -101.883, -24.2535, -113.038, 0.33 ) }
    dend_27 { pt3dadd( -102.31, -24.124, -113.308, 0.67 ) }
    dend_27 { pt3dadd( -105.806, -22.7619, -115.822, 0.33 ) }
    dend_27 { pt3dadd( -107.059, -22.235, -116.824, 2.0 ) }
    dend_27 { pt3dadd( -111.071, -20.4561, -120.116, 0.33 ) }
    dend_27 { pt3dadd( -112.02, -20.0526, -120.958, 1.33 ) }
    dend_27 { pt3dadd( -120.638, -16.4543, -128.929, 0.33 ) }
    dend_27 { pt3dadd( -122.098, -15.8383, -130.395, 2.66 ) }
    dend_27 { pt3dadd( -130.149, -12.4714, -139.112, 0.33 ) }
    dend_27 { pt3dadd( -130.924, -12.1343, -139.947, 2.0 ) }
    dend_27 { pt3dadd( -134.178, -10.6635, -143.362, 0.33 ) }
    dend_27 { pt3dadd( -135.175, -10.2442, -144.353, 2.0 ) }
    dend_27 { pt3dadd( -140.642, -8.07913, -149.34, 0.33 ) }
    dend_27 { pt3dadd( -141.087, -7.90566, -149.735, 0.67 ) }
    dend_27 { pt3dadd( -146.493, -5.7404, -153.916, 0.33 ) }
    dend_27 { pt3dadd( -146.777, -5.62639, -154.122, 1.33 ) }
    dend_27 { pt3dadd( -151.629, -3.66524, -157.118, 0.33 ) }
    dend_27 { pt3dadd( -152.311, -3.42359, -157.503, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.0024, 27.2619, 3.2974, 0.67 ) }
    dend_22 { pt3dadd( 17.3849, 27.4199, 1.55683, 0.67 ) }
    dend_22 { pt3dadd( 19.8283, 27.5079, 0.586433, 0.33 ) }
    dend_22 { pt3dadd( 22.27, 27.5959, -0.383331, 0.67 ) }
    dend_22 { pt3dadd( 24.3491, 27.6709, -1.20904, 0.33 ) }
    dend_22 { pt3dadd( 27.5387, 27.7858, -2.47583, 1.33 ) }
    dend_22 { pt3dadd( 30.5422, 27.8941, -3.6687, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 13.0024, 27.2619, 3.2974, 0.67 ) }
    dend_11 { pt3dadd( 12.3446, 29.4607, 13.4914, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 93/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -26.0434, 33.2063, 39.6413, 0.67 ) }
    dend_5 { pt3dadd( -29.3191, 37.1435, 43.666, 0.67 ) }
    dend_5 { pt3dadd( -32.1032, 40.4897, 47.0866, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -26.0434, 33.2063, 39.6413, 0.33 ) }
    dend_2 { pt3dadd( -35.9154, 41.8283, 28.7449, 0.33 ) }
    dend_2 { pt3dadd( -37.7448, 43.1321, 26.8742, 1.33 ) }
    dend_2 { pt3dadd( -40.2028, 44.7087, 24.5263, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( -41.5632, 45.5467, 23.2889, 1.33 ) }
    dend_2 { pt3dadd( -43.2462, 46.5118, 21.8601, 0.33 ) }
    dend_2 { pt3dadd( -46.6786, 48.3777, 19.138, 1.33 ) }
    dend_2 { pt3dadd( -51.1396, 50.2369, 16.8309, 0.67 ) }
    dend_2 { pt3dadd( -52.2857, 50.649, 16.2353, 0.67 ) }
    dend_2 { pt3dadd( -56.8832, 52.2358, 13.883, 0.33 ) }
    dend_2 { pt3dadd( -58.8771, 52.953, 12.902, 0.33 ) }
    dend_2 { pt3dadd( -60.261, 53.4199, 12.3701, 0.67 ) }
    dend_2 { pt3dadd( -63.0431, 54.3791, 11.6392, 0.33 ) }
    dend_2 { pt3dadd( -64.0313, 54.7204, 11.4553, 2.0 ) }
    dend_2 { pt3dadd( -68.6323, 56.2299, 10.6509, 0.33 ) }
    dend_2 { pt3dadd( -70.8919, 56.9228, 10.3154, 2.0 ) }
    dend_2 { pt3dadd( -79.1263, 59.5533, 8.94832, 0.33 ) }
    dend_2 { pt3dadd( -81.5012, 60.2996, 8.51159, 2.66 ) }
    dend_2 { pt3dadd( -83.0336, 60.7633, 8.20862, 2.0 ) }
    // Section: apic_10, id: apic_10, parent: apic_4 (entry count 15/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -12.8529, -24.7426, -15.2206, 1.33 ) }
    apic_10 { pt3dadd( -12.8444, -29.3122, -11.5389, 1.33 ) }
    apic_10 { pt3dadd( -12.8407, -31.3053, -9.93317, 1.33 ) }
    apic_10 { pt3dadd( -12.8301, -36.9881, -5.3546, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 19/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -12.8529, -24.7426, -15.2206, 0.33 ) }
    apic_5 { pt3dadd( -15.2703, -26.4103, -10.6701, 0.33 ) }
    apic_5 { pt3dadd( -15.541, -26.5605, -10.3421, 1.33 ) }
    apic_5 { pt3dadd( -21.6626, -30.1335, -3.96101, 0.67 ) }
    apic_5 { pt3dadd( -22.4816, -30.6561, -3.16871, 0.67 ) }
    apic_5 { pt3dadd( -25.7235, -32.9302, -0.196073, 0.33 ) }
    apic_5 { pt3dadd( -30.3051, -36.1927, 4.03563, 2.66 ) }
    apic_5 { pt3dadd( -37.2417, -41.1685, 9.88867, 0.33 ) }
    apic_5 { pt3dadd( -38.9894, -42.4191, 11.2355, 0.33 ) }
    apic_5 { pt3dadd( -40.5169, -43.4914, 12.1845, 1.33 ) }
    apic_5 { pt3dadd( -43.9745, -46.1514, 14.5546, 0.33 ) }
    apic_5 { pt3dadd( -46.8402, -48.6707, 16.8344, 2.66 ) }
    apic_5 { pt3dadd( -47.4691, -49.2198, 17.5294, 2.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 32/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 68.887, -32.3563, -136.091, 1.33 ) }
    dend_51 { pt3dadd( 70.4039, -32.4484, -139.887, 1.33 ) }
    dend_51 { pt3dadd( 73.0617, -32.3932, -146.504, 0.67 ) }
    dend_51 { pt3dadd( 75.1688, -32.1587, -151.445, 2.0 ) }
    dend_51 { pt3dadd( 76.8462, -31.9018, -155.173, 2.0 ) }
    dend_51 { pt3dadd( 80.2574, -31.2598, -162.434, 0.67 ) }
    dend_51 { pt3dadd( 81.3684, -31.024, -164.711, 0.33 ) }
    dend_51 { pt3dadd( 82.2451, -30.8083, -166.511, 2.0 ) }
    dend_51 { pt3dadd( 85.3112, -29.9019, -172.519, 0.33 ) }
    dend_51 { pt3dadd( 86.1231, -29.6771, -174.142, 1.33 ) }
    dend_51 { pt3dadd( 87.4915, -29.2887, -177.068, 0.33 ) }
    dend_51 { pt3dadd( 88.4444, -29.0444, -179.084, 1.33 ) }
    dend_51 { pt3dadd( 92.0677, -28.0124, -187.442, 0.33 ) }
    dend_51 { pt3dadd( 92.568, -27.8493, -188.694, 2.0 ) }
    dend_51 { pt3dadd( 95.0619, -26.8694, -195.444, 0.33 ) }
    dend_51 { pt3dadd( 95.9394, -26.4702, -197.867, 0.33 ) }
    dend_51 { pt3dadd( 96.8603, -26.0061, -200.498, 1.33 ) }
    dend_51 { pt3dadd( 98.9621, -24.7403, -206.589, 0.33 ) }
    dend_51 { pt3dadd( 99.2178, -24.5291, -207.284, 0.67 ) }
    dend_51 { pt3dadd( 99.8736, -23.9023, -209.079, 0.33 ) }
    dend_51 { pt3dadd( 100.117, -23.5986, -209.65, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 53/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 68.887, -32.3563, -136.091, 0.33 ) }
    dend_50 { pt3dadd( 69.0229, -31.9643, -138.054, 0.33 ) }
    dend_50 { pt3dadd( 69.0542, -31.4638, -141.351, 0.67 ) }
    dend_50 { pt3dadd( 69.0747, -30.8299, -147.3, 2.0 ) }
    dend_50 { pt3dadd( 69.1103, -30.1949, -154.861, 0.67 ) }
    dend_50 { pt3dadd( 69.0643, -30.0078, -157.819, 3.33 ) }
    dend_50 { pt3dadd( 68.8683, -29.6908, -165.757, 1.33 ) }
    dend_50 { pt3dadd( 68.6232, -29.7317, -170.893, 0.67 ) }
    dend_50 { pt3dadd( 68.1551, -30.0515, -176.661, 0.33 ) }
    dend_50 { pt3dadd( 68.0955, -30.1206, -177.186, 1.33 ) }
    dend_50 { pt3dadd( 67.217, -31.6246, -184.049, 0.67 ) }
    dend_50 { pt3dadd( 67.03, -32.2066, -185.9, 0.67 ) }
    dend_50 { pt3dadd( 66.9744, -33.0027, -187.877, 0.33 ) }
    dend_50 { pt3dadd( 67.0162, -33.4034, -188.84, 0.67 ) }
    dend_50 { pt3dadd( 67.2926, -34.7891, -191.988, 0.33 ) }
    dend_50 { pt3dadd( 67.5036, -35.4956, -193.612, 0.67 ) }
    dend_50 { pt3dadd( 68.4132, -37.8366, -199.181, 0.33 ) }
    dend_50 { pt3dadd( 69.2284, -39.7689, -204.245, 0.33 ) }
    dend_50 { pt3dadd( 69.9411, -41.4415, -208.776, 0.67 ) }
    dend_50 { pt3dadd( 70.1567, -42.0197, -210.4, 0.33 ) }
    dend_50 { pt3dadd( 70.5374, -43.2565, -213.977, 0.67 ) }
    dend_50 { pt3dadd( 70.8742, -45.0287, -218.795, 0.33 ) }
    dend_50 { pt3dadd( 70.934, -45.606, -220.218, 0.67 ) }
    dend_50 { pt3dadd( 70.9106, -47.6163, -224.682, 0.33 ) }
    dend_50 { pt3dadd( 70.8234, -48.3541, -226.233, 1.33 ) }
    dend_50 { pt3dadd( 70.655, -49.442, -228.602, 0.33 ) }
    dend_50 { pt3dadd( 70.5944, -49.8691, -229.425, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 107.597, -3.28652, -100.517, 0.33 ) }
    dend_44 { pt3dadd( 109.179, -2.73514, -102.105, 0.33 ) }
    dend_44 { pt3dadd( 109.402, -2.66495, -102.286, 0.67 ) }
    dend_44 { pt3dadd( 109.918, -2.51241, -102.658, 0.67 ) }
    dend_44 { pt3dadd( 113.05, -1.61581, -104.89, 0.33 ) }
    dend_44 { pt3dadd( 113.737, -1.43331, -105.358, 2.0 ) }
    dend_44 { pt3dadd( 118.033, -0.337965, -108.308, 0.33 ) }
    dend_44 { pt3dadd( 120.513, 0.237127, -110.061, 0.33 ) }
    dend_44 { pt3dadd( 121.068, 0.360359, -110.446, 0.67 ) }
    dend_44 { pt3dadd( 123.967, 1.02612, -112.524, 0.33 ) }
    dend_44 { pt3dadd( 124.954, 1.24976, -113.207, 0.33 ) }
    dend_44 { pt3dadd( 126.278, 1.54841, -114.147, 2.0 ) }
    dend_44 { pt3dadd( 130.148, 2.37086, -116.852, 0.33 ) }
    dend_44 { pt3dadd( 130.148, 2.37086, -116.852, 0.67 ) }
    dend_44 { pt3dadd( 132.933, 3.03518, -119.188, 0.33 ) }
    dend_44 { pt3dadd( 133.537, 3.18754, -119.69, 2.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 96/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 107.597, -3.28652, -100.517, 0.33 ) }
    dend_43 { pt3dadd( 108.494, -2.67174, -101.217, 0.33 ) }
    dend_43 { pt3dadd( 108.944, -2.35108, -101.553, 0.67 ) }
    dend_43 { pt3dadd( 113.762, 1.16511, -105.198, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 114.156, 1.46014, -105.496, 0.67 ) }
    dend_43 { pt3dadd( 117.607, 4.09184, -108.072, 0.33 ) }
    dend_43 { pt3dadd( 118.212, 4.5503, -108.477, 1.33 ) }
    dend_43 { pt3dadd( 120.569, 6.39811, -109.902, 0.33 ) }
    dend_43 { pt3dadd( 121.202, 6.85759, -110.173, 0.67 ) }
    dend_43 { pt3dadd( 123.025, 8.07468, -110.539, 0.33 ) }
    dend_43 { pt3dadd( 123.567, 8.3928, -110.645, 1.33 ) }
    dend_43 { pt3dadd( 126.81, 10.069, -111.231, 0.33 ) }
    dend_43 { pt3dadd( 127.167, 10.2442, -111.275, 0.67 ) }
    dend_43 { pt3dadd( 130.725, 11.9276, -111.584, 0.33 ) }
    dend_43 { pt3dadd( 131.879, 12.4639, -111.653, 2.0 ) }
    dend_43 { pt3dadd( 138.612, 15.4881, -111.96, 0.33 ) }
    dend_43 { pt3dadd( 139.73, 15.991, -112.007, 1.33 ) }
    dend_43 { pt3dadd( 141.742, 16.9136, -112.202, 0.33 ) }
    dend_43 { pt3dadd( 143.043, 17.5524, -112.377, 0.67 ) }
    dend_43 { pt3dadd( 145.532, 18.893, -112.741, 0.33 ) }
    dend_43 { pt3dadd( 146.029, 19.173, -112.793, 0.67 ) }
    dend_43 { pt3dadd( 148.51, 20.62, -112.903, 0.33 ) }
    dend_43 { pt3dadd( 151.673, 22.4306, -113.225, 2.0 ) }
    dend_43 { pt3dadd( 153.919, 23.6478, -113.545, 0.33 ) }
    dend_43 { pt3dadd( 155.664, 24.5178, -113.72, 0.67 ) }
    dend_43 { pt3dadd( 159.005, 26.0149, -113.981, 0.33 ) }
    dend_43 { pt3dadd( 160.551, 26.5786, -113.988, 1.33 ) }
    dend_43 { pt3dadd( 162.926, 27.2585, -113.831, 0.33 ) }
    dend_43 { pt3dadd( 164.442, 27.6157, -113.621, 1.33 ) }
    dend_43 { pt3dadd( 167.318, 28.1089, -113.255, 0.33 ) }
    dend_43 { pt3dadd( 168.425, 28.2487, -113.141, 0.67 ) }
    dend_43 { pt3dadd( 172.167, 28.4479, -112.44, 0.33 ) }
    dend_43 { pt3dadd( 172.571, 28.4562, -112.317, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -59.7483, -1.97961, -5.4134, 0.33 ) }
    dend_37 { pt3dadd( -62.2583, -3.09758, -5.19415, 0.33 ) }
    dend_37 { pt3dadd( -62.6278, -3.21785, -5.11669, 0.67 ) }
    dend_37 { pt3dadd( -65.2328, -3.86, -4.44911, 0.33 ) }
    dend_37 { pt3dadd( -65.8194, -3.97233, -4.27303, 1.33 ) }
    dend_37 { pt3dadd( -67.9306, -4.31316, -3.62047, 0.33 ) }
    dend_37 { pt3dadd( -70.8191, -4.71054, -2.52357, 2.0 ) }
    dend_37 { pt3dadd( -73.1732, -4.87824, -1.50682, 0.33 ) }
    dend_37 { pt3dadd( -74.1737, -4.91562, -1.03388, 0.33 ) }
    dend_37 { pt3dadd( -75.3908, -4.89416, -0.371494, 1.33 ) }
    dend_37 { pt3dadd( -76.9076, -4.84906, 0.516018, 0.33 ) }
    dend_37 { pt3dadd( -80.6924, -4.7088, 2.99304, 2.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 41/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -59.7483, -1.97961, -5.4134, 0.33 ) }
    dend_36 { pt3dadd( -65.6104, -2.48514, -4.37868, 0.33 ) }
    dend_36 { pt3dadd( -66.9333, -2.42683, -4.03274, 0.67 ) }
    dend_36 { pt3dadd( -71.177, -1.76356, -2.44182, 0.33 ) }
    dend_36 { pt3dadd( -72.8251, -1.37429, -1.53849, 1.33 ) }
    dend_36 { pt3dadd( -76.1011, -0.311908, 0.559671, 0.33 ) }
    dend_36 { pt3dadd( -78.407, 0.669634, 2.37351, 1.33 ) }
    dend_36 { pt3dadd( -81.5131, 2.62226, 5.26152, 0.33 ) }
    dend_36 { pt3dadd( -84.3034, 5.08348, 8.41463, 2.0 ) }
    dend_36 { pt3dadd( -87.024, 8.28933, 12.03, 0.33 ) }
    dend_36 { pt3dadd( -88.4949, 10.3475, 14.2658, 2.0 ) }
    dend_36 { pt3dadd( -91.0923, 14.4317, 18.5859, 0.33 ) }
    dend_36 { pt3dadd( -92.3264, 16.4771, 20.6503, 2.0 ) }
    dend_36 { pt3dadd( -95.4707, 21.8373, 25.7997, 0.33 ) }
    dend_36 { pt3dadd( -96.5516, 23.6197, 27.4195, 2.0 ) }
    dend_36 { pt3dadd( -99.0883, 27.7705, 30.827, 0.67 ) }
    dend_36 { pt3dadd( -100.163, 29.5331, 32.1721, 0.33 ) }
    dend_36 { pt3dadd( -102.444, 33.1361, 34.7854, 2.66 ) }
    dend_36 { pt3dadd( -105.053, 37.2424, 37.6674, 0.67 ) }
    dend_36 { pt3dadd( -106.107, 38.9301, 38.7103, 0.33 ) }
    dend_36 { pt3dadd( -107.845, 41.9469, 40.3075, 0.67 ) }
    dend_36 { pt3dadd( -109.739, 45.5436, 41.9843, 0.67 ) }
    dend_36 { pt3dadd( -111.531, 49.294, 43.6765, 3.33 ) }
    dend_36 { pt3dadd( -114.797, 55.9767, 47.008, 0.67 ) }
    dend_36 { pt3dadd( -116.726, 59.555, 48.9058, 0.67 ) }
    dend_36 { pt3dadd( -118.137, 61.8048, 50.2178, 2.66 ) }
    dend_36 { pt3dadd( -120.465, 64.8074, 52.2295, 2.66 ) }
    dend_36 { pt3dadd( -123.377, 67.788, 54.4342, 0.67 ) }
    dend_36 { pt3dadd( -127.199, 70.3974, 57.0372, 0.67 ) }
    dend_36 { pt3dadd( -129.308, 70.95, 58.3898, 2.0 ) }
    dend_36 { pt3dadd( -133.063, 71.2573, 60.7979, 0.33 ) }
    dend_36 { pt3dadd( -134.189, 71.2436, 61.5026, 2.0 ) }
    dend_36 { pt3dadd( -136.799, 71.0577, 63.0133, 1.33 ) }
    dend_36 { pt3dadd( -143.34, 70.4517, 66.6027, 0.33 ) }
    dend_36 { pt3dadd( -145.875, 70.3706, 67.9619, 1.33 ) }
    dend_36 { pt3dadd( -148.584, 70.4633, 69.5078, 0.33 ) }
    dend_36 { pt3dadd( -149.917, 70.6219, 70.2918, 0.33 ) }
    dend_36 { pt3dadd( -151.297, 70.8001, 70.9936, 1.33 ) }
    dend_36 { pt3dadd( -153.317, 71.1896, 71.7539, 0.67 ) }
    dend_36 { pt3dadd( -154.995, 71.6419, 72.1117, 1.33 ) }
    dend_36 { pt3dadd( -157.095, 72.1824, 72.4578, 0.33 ) }
    dend_36 { pt3dadd( -158.436, 72.4258, 72.6032, 0.67 ) }
    dend_36 { pt3dadd( -162.606, 73.0117, 73.0185, 0.33 ) }
    dend_36 { pt3dadd( -165.856, 73.3379, 73.3129, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -15.188, 27.0252, -36.7636, 0.33 ) }
    dend_30 { pt3dadd( -17.9675, 30.9151, -38.1001, 0.33 ) }
    dend_30 { pt3dadd( -18.9802, 32.4959, -38.5505, 2.0 ) }
    dend_30 { pt3dadd( -20.938, 36.0328, -39.403, 0.33 ) }
    dend_30 { pt3dadd( -21.1901, 37.1453, -39.8998, 1.33 ) }
    dend_30 { pt3dadd( -21.6653, 42.3552, -42.4988, 0.33 ) }
    dend_30 { pt3dadd( -21.7677, 44.7696, -44.156, 1.33 ) }
    dend_30 { pt3dadd( -21.7057, 46.4258, -45.4909, 0.33 ) }
    dend_30 { pt3dadd( -21.6053, 47.7564, -46.654, 2.0 ) }
    dend_30 { pt3dadd( -20.5726, 57.2621, -55.5688, 0.33 ) }
    dend_30 { pt3dadd( -20.4304, 58.2723, -56.5936, 1.33 ) }
    dend_30 { pt3dadd( -19.2696, 65.1523, -63.8264, 0.33 ) }
    dend_30 { pt3dadd( -19.1299, 65.9923, -64.7443, 2.0 ) }
    dend_30 { pt3dadd( -18.3402, 71.3536, -70.501, 0.33 ) }
    dend_30 { pt3dadd( -18.154, 72.8659, -72.1824, 2.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -17.4917, 79.272, -79.3559, 0.33 ) }
    dend_30 { pt3dadd( -17.4316, 80.0584, -80.3519, 1.33 ) }
    dend_30 { pt3dadd( -17.2199, 84.1002, -85.9261, 0.33 ) }
    dend_30 { pt3dadd( -17.2353, 85.7322, -88.4424, 1.33 ) }
    dend_30 { pt3dadd( -17.5463, 90.0084, -95.9114, 0.33 ) }
    dend_30 { pt3dadd( -17.6086, 90.5831, -96.888, 1.33 ) }
    dend_30 { pt3dadd( -18.633, 96.2796, -105.643, 0.33 ) }
    dend_30 { pt3dadd( -18.9482, 98.2471, -108.558, 2.0 ) }
    dend_30 { pt3dadd( -19.148, 99.1897, -109.903, 0.67 ) }
    dend_30 { pt3dadd( -19.7007, 101.816, -113.523, 2.0 ) }
    dend_30 { pt3dadd( -20.3568, 105.282, -117.654, 0.33 ) }
    dend_30 { pt3dadd( -21.4665, 110.941, -123.937, 0.33 ) }
    dend_30 { pt3dadd( -22.3373, 115.494, -128.881, 2.0 ) }
    dend_30 { pt3dadd( -23.5315, 121.23, -135.412, 0.33 ) }
    dend_30 { pt3dadd( -23.8862, 122.806, -137.361, 0.67 ) }
    dend_30 { pt3dadd( -25.125, 127.847, -144.465, 0.33 ) }
    dend_30 { pt3dadd( -25.3512, 128.723, -145.912, 2.0 ) }
    dend_30 { pt3dadd( -26.4761, 133.436, -154.863, 0.33 ) }
    dend_30 { pt3dadd( -26.5541, 133.832, -155.671, 1.33 ) }
    dend_30 { pt3dadd( -26.8017, 135.837, -160.3, 1.33 ) }
    dend_30 { pt3dadd( -27.2424, 138.767, -167.774, 0.33 ) }
    dend_30 { pt3dadd( -27.3637, 139.469, -170.016, 0.67 ) }
    dend_30 { pt3dadd( -27.5475, 140.461, -173.348, 0.33 ) }
    dend_30 { pt3dadd( -27.7645, 141.084, -175.256, 1.33 ) }
    dend_30 { pt3dadd( -28.4235, 142.697, -179.658, 0.33 ) }
    dend_30 { pt3dadd( -28.646, 143.055, -180.458, 0.67 ) }
    dend_30 { pt3dadd( -29.2446, 143.828, -181.977, 0.33 ) }
    dend_30 { pt3dadd( -29.8274, 144.591, -183.292, 0.67 ) }
    dend_30 { pt3dadd( -31.9254, 147.286, -187.655, 0.33 ) }
    dend_30 { pt3dadd( -33.8041, 149.785, -191.569, 1.33 ) }
    dend_30 { pt3dadd( -36.0718, 153.38, -197.337, 0.33 ) }
    dend_30 { pt3dadd( -37.0557, 154.999, -199.889, 2.0 ) }
    dend_30 { pt3dadd( -38.3972, 157.308, -203.386, 0.33 ) }
    dend_30 { pt3dadd( -38.97, 158.319, -204.898, 0.67 ) }
    dend_30 { pt3dadd( -40.274, 160.708, -208.698, 0.33 ) }
    dend_30 { pt3dadd( -42.3909, 165.168, -215.606, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 36/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -15.188, 27.0252, -36.7636, 0.33 ) }
    dend_29 { pt3dadd( -13.657, 28.577, -38.7456, 0.33 ) }
    dend_29 { pt3dadd( -12.8132, 29.4357, -39.775, 1.33 ) }
    dend_29 { pt3dadd( -6.17119, 36.0086, -47.7014, 0.33 ) }
    dend_29 { pt3dadd( -4.95804, 37.1853, -49.1293, 1.33 ) }
    dend_29 { pt3dadd( 0.604901, 42.5048, -55.4744, 0.33 ) }
    dend_29 { pt3dadd( 1.63627, 43.4842, -56.585, 0.67 ) }
    dend_29 { pt3dadd( 3.23132, 44.9203, -58.2154, 0.33 ) }
    dend_29 { pt3dadd( 6.01684, 47.4587, -60.8126, 1.33 ) }
    dend_29 { pt3dadd( 8.32762, 49.5476, -62.4079, 0.33 ) }
    dend_29 { pt3dadd( 9.26276, 50.4268, -62.954, 1.33 ) }
    dend_29 { pt3dadd( 11.446, 52.3144, -63.3694, 0.33 ) }
    dend_29 { pt3dadd( 11.6662, 52.5222, -63.4318, 0.67 ) }
    dend_29 { pt3dadd( 13.567, 54.3587, -64.2328, 0.33 ) }
    dend_29 { pt3dadd( 13.567, 54.3587, -64.2328, 0.67 ) }
    dend_29 { pt3dadd( 14.918, 55.7524, -64.9904, 0.33 ) }
    dend_29 { pt3dadd( 16.1392, 56.9875, -65.7453, 1.33 ) }
    dend_29 { pt3dadd( 20.2866, 61.356, -68.4957, 0.67 ) }
    dend_29 { pt3dadd( 23.8126, 65.1061, -71.0071, 0.33 ) }
    dend_29 { pt3dadd( 24.4825, 65.8173, -71.5368, 2.0 ) }
    dend_29 { pt3dadd( 26.9827, 68.435, -73.5484, 0.33 ) }
    dend_29 { pt3dadd( 27.7433, 69.2215, -74.1519, 0.67 ) }
    dend_29 { pt3dadd( 29.6269, 71.2675, -75.6816, 0.33 ) }
    dend_29 { pt3dadd( 32.2476, 74.1925, -77.7925, 2.0 ) }
    dend_29 { pt3dadd( 34.9896, 77.3655, -80.2018, 0.33 ) }
    dend_29 { pt3dadd( 35.1645, 77.5545, -80.3742, 0.67 ) }
    dend_29 { pt3dadd( 36.0362, 78.4433, -81.3095, 0.33 ) }
    dend_29 { pt3dadd( 37.9599, 80.4089, -83.5128, 0.67 ) }
    dend_29 { pt3dadd( 41.3531, 83.7328, -87.432, 0.33 ) }
    dend_29 { pt3dadd( 41.796, 84.2226, -88.0075, 2.0 ) }
    dend_29 { pt3dadd( 43.9648, 86.8198, -91.0546, 0.33 ) }
    dend_29 { pt3dadd( 44.1452, 87.0568, -91.3666, 0.67 ) }
    dend_29 { pt3dadd( 45.7555, 89.2467, -94.5779, 0.33 ) }
    dend_29 { pt3dadd( 46.0444, 89.6072, -95.1, 0.67 ) }
    dend_29 { pt3dadd( 48.3932, 92.5392, -99.1032, 0.33 ) }
    dend_29 { pt3dadd( 49.604, 94.0796, -101.127, 0.67 ) }
    dend_29 { pt3dadd( 54.9495, 101.035, -110.221, 0.33 ) }
    dend_29 { pt3dadd( 58.0876, 104.911, -115.558, 0.67 ) }
    dend_29 { pt3dadd( 61.1923, 108.491, -120.678, 0.33 ) }
    dend_29 { pt3dadd( 61.7948, 109.194, -121.726, 1.33 ) }
    dend_29 { pt3dadd( 63.9447, 111.67, -125.527, 1.33 ) }
    dend_29 { pt3dadd( 66.1624, 114.133, -129.357, 0.67 ) }
    dend_29 { pt3dadd( 67.3167, 115.365, -131.174, 0.33 ) }
    dend_29 { pt3dadd( 67.9631, 115.967, -132.1, 0.67 ) }
    dend_29 { pt3dadd( 70.588, 118.055, -135.737, 0.33 ) }
    dend_29 { pt3dadd( 70.7934, 118.173, -135.934, 0.67 ) }
    dend_29 { pt3dadd( 75.6924, 120.2, -138.559, 0.33 ) }
    dend_29 { pt3dadd( 77.1774, 120.739, -139.117, 0.67 ) }
    dend_29 { pt3dadd( 82.0952, 122.548, -140.788, 0.33 ) }
    dend_29 { pt3dadd( 82.3812, 122.647, -140.886, 0.67 ) }
    dend_29 { pt3dadd( 85.3886, 123.646, -141.823, 0.33 ) }
    dend_29 { pt3dadd( 85.6312, 123.758, -141.978, 0.67 ) }
    dend_29 { pt3dadd( 86.964, 124.464, -143.136, 0.33 ) }
    dend_29 { pt3dadd( 87.6116, 124.801, -143.715, 0.67 ) }
    dend_29 { pt3dadd( 89.1091, 125.607, -145.064, 0.33 ) }
    dend_29 { pt3dadd( 89.4252, 125.766, -145.351, 1.33 ) }
    dend_29 { pt3dadd( 97.7587, 129.516, -152.756, 0.33 ) }
    dend_29 { pt3dadd( 98.8683, 130.01, -153.829, 0.67 ) }
    dend_29 { pt3dadd( 99.5832, 130.366, -154.619, 0.33 ) }
    dend_29 { pt3dadd( 100.309, 130.766, -155.499, 0.67 ) }
    dend_29 { pt3dadd( 102.572, 132.285, -158.658, 0.33 ) }
    dend_29 { pt3dadd( 104.462, 133.767, -161.669, 0.67 ) }
    dend_29 { pt3dadd( 107.246, 136.642, -167.024, 1.33 ) }
    dend_29 { pt3dadd( 109.585, 139.678, -172.324, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 109.968, 140.297, -173.342, 0.67 ) }
    dend_29 { pt3dadd( 111.119, 142.489, -176.931, 0.33 ) }
    dend_29 { pt3dadd( 111.46, 143.316, -178.217, 1.33 ) }
    dend_29 { pt3dadd( 112.205, 145.704, -181.821, 0.67 ) }
    dend_29 { pt3dadd( 112.667, 147.468, -184.402, 0.33 ) }
    dend_29 { pt3dadd( 112.92, 148.336, -185.725, 0.67 ) }
    dend_29 { pt3dadd( 114.782, 153.088, -193.532, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 7/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 30.5422, 27.8941, -3.6687, 0.33 ) }
    dend_24 { pt3dadd( 32.0443, 30.0423, -0.652516, 0.33 ) }
    dend_24 { pt3dadd( 32.3518, 30.4718, -0.0380659, 1.33 ) }
    dend_24 { pt3dadd( 34.2431, 33.0486, 3.75957, 0.67 ) }
    dend_24 { pt3dadd( 35.079, 34.1674, 5.44507, 0.33 ) }
    dend_24 { pt3dadd( 36.0331, 35.2814, 7.23021, 2.66 ) }
    dend_24 { pt3dadd( 38.1798, 37.5765, 11.1648, 0.33 ) }
    dend_24 { pt3dadd( 38.4432, 37.8281, 11.6443, 2.0 ) }
    dend_24 { pt3dadd( 41.1119, 40.0606, 16.1508, 0.33 ) }
    dend_24 { pt3dadd( 41.2561, 40.1567, 16.3586, 0.67 ) }
    dend_24 { pt3dadd( 44.0215, 41.6927, 19.7321, 0.33 ) }
    dend_24 { pt3dadd( 45.693, 42.5392, 21.6536, 2.66 ) }
    dend_24 { pt3dadd( 48.8672, 44.0331, 25.0227, 0.33 ) }
    dend_24 { pt3dadd( 49.6196, 44.3594, 25.7876, 2.0 ) }
    dend_24 { pt3dadd( 52.8342, 45.5619, 28.6585, 0.33 ) }
    dend_24 { pt3dadd( 54.9054, 46.3738, 30.4218, 2.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 30.5422, 27.8941, -3.6687, 0.67 ) }
    dend_23 { pt3dadd( 32.0869, 27.224, -4.84964, 0.67 ) }
    dend_23 { pt3dadd( 33.8122, 26.2772, -6.88756, 0.33 ) }
    dend_23 { pt3dadd( 34.9423, 25.6373, -8.30816, 0.33 ) }
    dend_23 { pt3dadd( 37.1929, 24.3699, -11.2571, 2.0 ) }
    dend_23 { pt3dadd( 39.7227, 22.9969, -14.5536, 0.33 ) }
    dend_23 { pt3dadd( 40.4448, 22.6396, -15.455, 2.0 ) }
    dend_23 { pt3dadd( 48.2272, 19.0169, -25.4143, 0.33 ) }
    dend_23 { pt3dadd( 48.5486, 18.872, -25.8198, 1.33 ) }
    dend_23 { pt3dadd( 51.1234, 17.7895, -28.9178, 0.33 ) }
    dend_23 { pt3dadd( 52.3565, 17.2906, -30.2809, 2.66 ) }
    dend_23 { pt3dadd( 54.1756, 16.602, -32.0896, 0.33 ) }
    dend_23 { pt3dadd( 54.7545, 16.4001, -32.5383, 1.33 ) }
    dend_23 { pt3dadd( 56.4253, 15.8315, -33.2464, 0.33 ) }
    dend_23 { pt3dadd( 58.3847, 14.9337, -34.0124, 2.0 ) }
    dend_23 { pt3dadd( 61.8191, 13.0377, -35.1896, 0.33 ) }
    dend_23 { pt3dadd( 62.5511, 12.5169, -35.4521, 2.0 ) }
    dend_23 { pt3dadd( 66.3323, 9.25245, -36.8808, 0.33 ) }
    dend_23 { pt3dadd( 66.9398, 8.57025, -37.1503, 2.0 ) }
    dend_23 { pt3dadd( 71.2343, 2.64915, -39.3626, 0.33 ) }
    dend_23 { pt3dadd( 71.7811, 1.65774, -39.6869, 2.66 ) }
    dend_23 { pt3dadd( 73.0686, -1.86339, -40.6651, 0.33 ) }
    dend_23 { pt3dadd( 73.2458, -2.7569, -40.8981, 2.0 ) }
    dend_23 { pt3dadd( 73.1935, -8.68467, -42.2058, 0.33 ) }
    dend_23 { pt3dadd( 73.1494, -9.03667, -42.2732, 0.67 ) }
    dend_23 { pt3dadd( 72.6653, -10.8516, -42.5208, 0.33 ) }
    dend_23 { pt3dadd( 72.3868, -12.1485, -42.6507, 1.33 ) }
    dend_23 { pt3dadd( 72.1848, -13.7787, -42.6928, 0.33 ) }
    dend_23 { pt3dadd( 72.1675, -14.033, -42.6688, 0.67 ) }
    dend_23 { pt3dadd( 72.0541, -18.3421, -41.7552, 0.33 ) }
    dend_23 { pt3dadd( 72.1098, -19.0395, -41.575, 1.33 ) }
    dend_23 { pt3dadd( 72.4832, -21.1402, -40.9544, 0.33 ) }
    dend_23 { pt3dadd( 72.8652, -22.516, -40.3932, 2.0 ) }
    dend_23 { pt3dadd( 74.2082, -26.2138, -38.4152, 0.33 ) }
    dend_23 { pt3dadd( 74.2924, -26.417, -38.2839, 0.67 ) }
    dend_23 { pt3dadd( 76.0447, -30.0928, -35.4635, 0.33 ) }
    dend_23 { pt3dadd( 76.5785, -31.1551, -34.6123, 1.33 ) }
    dend_23 { pt3dadd( 78.2225, -34.3099, -31.9805, 0.33 ) }
    dend_23 { pt3dadd( 78.7636, -35.3431, -31.1112, 1.33 ) }
    dend_23 { pt3dadd( 80.2464, -38.123, -28.7206, 0.33 ) }
    dend_23 { pt3dadd( 80.697, -39.0444, -27.937, 0.67 ) }
    dend_23 { pt3dadd( 81.3996, -40.8765, -26.4318, 0.33 ) }
    dend_23 { pt3dadd( 81.6626, -41.7369, -25.8108, 0.67 ) }
    dend_23 { pt3dadd( 82.3349, -44.9903, -24.1153, 0.33 ) }
    dend_23 { pt3dadd( 82.3775, -45.2178, -24.0082, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.3446, 29.4607, 13.4914, 0.67 ) }
    dend_21 { pt3dadd( 12.6943, 29.5861, 15.1039, 0.67 ) }
    dend_21 { pt3dadd( 15.0547, 30.7508, 25.5579, 0.67 ) }
    dend_21 { pt3dadd( 15.2829, 30.9267, 26.4063, 0.67 ) }
    dend_21 { pt3dadd( 15.8686, 31.4687, 28.2964, 0.33 ) }
    dend_21 { pt3dadd( 15.9751, 31.5583, 28.5574, 0.67 ) }
    dend_21 { pt3dadd( 16.9643, 32.2608, 30.7684, 0.33 ) }
    dend_21 { pt3dadd( 18.247, 32.9039, 32.9655, 1.33 ) }
    dend_21 { pt3dadd( 22.1119, 34.4466, 37.4837, 0.33 ) }
    dend_21 { pt3dadd( 22.9952, 34.6611, 38.3767, 1.33 ) }
    dend_21 { pt3dadd( 25.693, 34.9381, 40.6684, 0.33 ) }
    dend_21 { pt3dadd( 28.0873, 35.0191, 42.3901, 2.66 ) }
    dend_21 { pt3dadd( 29.7967, 34.9442, 43.3269, 0.33 ) }
    dend_21 { pt3dadd( 31.3608, 34.7747, 43.9928, 0.67 ) }
    dend_21 { pt3dadd( 33.3012, 34.5186, 44.4196, 0.67 ) }
    dend_21 { pt3dadd( 35.0578, 34.3361, 44.7232, 0.33 ) }
    dend_21 { pt3dadd( 36.7918, 34.2594, 44.8651, 0.67 ) }
    dend_21 { pt3dadd( 39.6376, 34.4467, 44.8227, 0.33 ) }
    dend_21 { pt3dadd( 42.1506, 34.9009, 44.8486, 0.67 ) }
    dend_21 { pt3dadd( 43.9065, 35.378, 44.8777, 0.33 ) }
    dend_21 { pt3dadd( 44.508, 35.5823, 44.8899, 1.33 ) }
    dend_21 { pt3dadd( 46.9176, 36.5566, 44.9651, 0.33 ) }
    dend_21 { pt3dadd( 49.3567, 37.6253, 45.0144, 2.66 ) }
    dend_21 { pt3dadd( 52.2156, 38.9608, 44.9624, 0.33 ) }
    dend_21 { pt3dadd( 54.5092, 40.0048, 44.8039, 0.67 ) }
    dend_21 { pt3dadd( 55.8875, 40.6325, 44.7232, 0.33 ) }
    dend_21 { pt3dadd( 57.4107, 41.3817, 44.6573, 2.0 ) }
    dend_21 { pt3dadd( 59.9714, 42.8511, 44.6365, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.3446, 29.4607, 13.4914, 0.67 ) }
    dend_12 { pt3dadd( 11.7014, 32.8825, 8.35191, 0.67 ) }
    dend_12 { pt3dadd( 12.046, 34.214, 6.05177, 1.33 ) }
    dend_12 { pt3dadd( 12.5914, 35.2071, 4.19719, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 13.4872, 36.598, 2.09751, 0.67 ) }
    dend_12 { pt3dadd( 13.8917, 37.2949, 1.11251, 1.33 ) }
    dend_12 { pt3dadd( 15.3336, 39.9108, -2.42186, 0.67 ) }
    dend_12 { pt3dadd( 16.1489, 41.1131, -3.92217, 1.33 ) }
    dend_12 { pt3dadd( 16.592, 41.6864, -4.68097, 0.67 ) }
    dend_12 { pt3dadd( 18.2051, 43.6946, -7.36737, 2.0 ) }
    dend_12 { pt3dadd( 20.5214, 46.9437, -11.3566, 0.67 ) }
    dend_12 { pt3dadd( 21.7243, 49.0151, -13.7932, 0.67 ) }
    dend_12 { pt3dadd( 22.325, 50.6584, -15.4416, 2.0 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 9/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -32.1032, 40.4897, 47.0866, 0.67 ) }
    dend_7 { pt3dadd( -36.0599, 40.4171, 47.8105, 0.67 ) }
    dend_7 { pt3dadd( -38.5335, 40.6296, 48.3357, 0.67 ) }
    dend_7 { pt3dadd( -41.9502, 41.107, 49.0622, 0.67 ) }
    dend_7 { pt3dadd( -46.3025, 41.7194, 49.9613, 0.67 ) }
    dend_7 { pt3dadd( -49.5455, 42.2212, 50.467, 0.67 ) }
    dend_7 { pt3dadd( -54.2069, 42.9887, 50.7797, 0.67 ) }
    dend_7 { pt3dadd( -63.4805, 44.4964, 50.9011, 0.67 ) }
    dend_7 { pt3dadd( -67.4323, 45.2165, 50.7732, 1.33 ) }
    dend_7 { pt3dadd( -69.5761, 45.5803, 50.6185, 0.67 ) }
    dend_7 { pt3dadd( -77.6974, 46.7941, 49.8751, 0.67 ) }
    dend_7 { pt3dadd( -85.8668, 48.0621, 49.0712, 0.67 ) }
    dend_7 { pt3dadd( -88.0581, 48.3856, 48.8249, 1.33 ) }
    dend_7 { pt3dadd( -92.498, 48.8505, 48.37, 0.67 ) }
    dend_7 { pt3dadd( -96.2216, 49.2338, 48.1303, 1.33 ) }
    dend_7 { pt3dadd( -101.277, 49.7861, 48.0843, 0.67 ) }
    dend_7 { pt3dadd( -107.781, 50.5599, 48.3948, 0.67 ) }
    dend_7 { pt3dadd( -110.904, 51.0087, 48.6782, 1.33 ) }
    dend_7 { pt3dadd( -113.61, 51.5572, 48.8154, 0.33 ) }
    dend_7 { pt3dadd( -115.56, 52.0922, 48.8641, 1.33 ) }
    dend_7 { pt3dadd( -118.381, 53.2753, 48.6329, 0.33 ) }
    dend_7 { pt3dadd( -121.965, 55.4111, 47.7623, 2.0 ) }
    dend_7 { pt3dadd( -124.548, 57.4868, 46.61, 0.67 ) }
    dend_7 { pt3dadd( -127.114, 59.6655, 44.9396, 0.67 ) }
    dend_7 { pt3dadd( -128.567, 60.9966, 43.7943, 1.33 ) }
    dend_7 { pt3dadd( -131.713, 63.9397, 40.8669, 0.67 ) }
    dend_7 { pt3dadd( -132.768, 65.0212, 39.8395, 0.67 ) }
    dend_7 { pt3dadd( -135.109, 67.4274, 37.092, 2.0 ) }
    dend_7 { pt3dadd( -138.22, 70.5763, 32.7835, 0.33 ) }
    dend_7 { pt3dadd( -138.884, 71.2131, 31.8705, 0.67 ) }
    dend_7 { pt3dadd( -141.167, 73.3724, 28.5862, 2.0 ) }
    dend_7 { pt3dadd( -143.381, 75.3554, 25.3913, 0.33 ) }
    dend_7 { pt3dadd( -148.814, 80.3314, 16.9906, 2.0 ) }
    dend_7 { pt3dadd( -151.608, 83.0761, 12.2865, 0.67 ) }
    dend_7 { pt3dadd( -153.058, 84.6742, 9.6685, 2.0 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -32.1032, 40.4897, 47.0866, 0.33 ) }
    dend_6 { pt3dadd( -32.6898, 42.9853, 48.7648, 0.33 ) }
    dend_6 { pt3dadd( -32.9367, 43.6207, 49.7188, 0.67 ) }
    dend_6 { pt3dadd( -33.1425, 44.5767, 51.0403, 0.33 ) }
    dend_6 { pt3dadd( -33.2856, 45.2956, 52.144, 1.33 ) }
    dend_6 { pt3dadd( -33.7448, 47.0544, 55.0917, 0.67 ) }
    dend_6 { pt3dadd( -34.8361, 51.2342, 62.097, 0.33 ) }
    dend_6 { pt3dadd( -34.9475, 51.5635, 62.834, 0.67 ) }
    dend_6 { pt3dadd( -35.2784, 52.3337, 64.8442, 0.33 ) }
    dend_6 { pt3dadd( -35.6174, 53.0343, 67.2668, 0.33 ) }
    dend_6 { pt3dadd( -35.9109, 53.5543, 69.6539, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -83.0336, 60.7633, 8.20862, 0.67 ) }
    dend_4 { pt3dadd( -86.014, 61.1347, 9.60518, 0.67 ) }
    dend_4 { pt3dadd( -87.4859, 61.3718, 10.2967, 1.33 ) }
    dend_4 { pt3dadd( -93.9065, 62.597, 13.3579, 0.33 ) }
    dend_4 { pt3dadd( -94.3105, 62.6865, 13.5496, 2.0 ) }
    dend_4 { pt3dadd( -99.664, 63.9261, 16.2159, 0.33 ) }
    dend_4 { pt3dadd( -100.3, 64.0898, 16.5244, 2.66 ) }
    dend_4 { pt3dadd( -102.718, 64.8215, 17.6882, 0.33 ) }
    dend_4 { pt3dadd( -103.342, 65.0387, 17.9624, 0.67 ) }
    dend_4 { pt3dadd( -104.946, 65.7596, 18.6226, 0.33 ) }
    dend_4 { pt3dadd( -106.663, 66.5616, 19.3617, 0.67 ) }
    dend_4 { pt3dadd( -109.452, 68.0854, 20.7302, 0.33 ) }
    dend_4 { pt3dadd( -109.823, 68.279, 20.9006, 2.0 ) }
    dend_4 { pt3dadd( -110.837, 68.7491, 21.2658, 2.0 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -83.0336, 60.7633, 8.20862, 0.33 ) }
    dend_3 { pt3dadd( -88.3211, 62.1611, 2.14223, 0.33 ) }
    dend_3 { pt3dadd( -89.5839, 62.5208, 0.676807, 2.66 ) }
    dend_3 { pt3dadd( -91.4066, 63.0678, -1.37169, 0.33 ) }
    dend_3 { pt3dadd( -93.2243, 63.5911, -3.36477, 2.0 ) }
    dend_3 { pt3dadd( -95.5094, 64.227, -5.75929, 0.33 ) }
    dend_3 { pt3dadd( -96.364, 64.4774, -6.63336, 2.0 ) }
    dend_3 { pt3dadd( -99.5352, 65.618, -9.65038, 0.33 ) }
    dend_3 { pt3dadd( -100.561, 66.0224, -10.6763, 2.0 ) }
    dend_3 { pt3dadd( -103.255, 67.1732, -13.6772, 0.33 ) }
    dend_3 { pt3dadd( -104.225, 67.6549, -14.7568, 0.67 ) }
    dend_3 { pt3dadd( -105.4, 68.3274, -16.1052, 0.33 ) }
    dend_3 { pt3dadd( -106.509, 69.0208, -17.3886, 2.0 ) }
    dend_3 { pt3dadd( -108.677, 70.5182, -19.9414, 0.33 ) }
    dend_3 { pt3dadd( -111.251, 72.3463, -22.8849, 2.0 ) }
    dend_3 { pt3dadd( -113.453, 73.69, -25.0117, 0.33 ) }
    dend_3 { pt3dadd( -113.892, 73.9104, -25.3849, 1.33 ) }
    dend_3 { pt3dadd( -118.127, 75.5821, -28.3932, 0.33 ) }
    dend_3 { pt3dadd( -118.342, 75.6548, -28.528, 0.67 ) }
    dend_3 { pt3dadd( -120.357, 76.2403, -29.6497, 2.0 ) }
    dend_3 { pt3dadd( -126.744, 77.8974, -32.8649, 0.33 ) }
    dend_3 { pt3dadd( -127.925, 78.1636, -33.4226, 2.66 ) }
    dend_3 { pt3dadd( -135.157, 79.6567, -36.5275, 0.33 ) }
    dend_3 { pt3dadd( -136.709, 79.9335, -37.1208, 2.0 ) }
    dend_3 { pt3dadd( -139.631, 80.428, -38.4127, 0.33 ) }
    dend_3 { pt3dadd( -140.512, 80.5666, -38.851, 1.33 ) }
    dend_3 { pt3dadd( -143.447, 81.0198, -40.0594, 0.33 ) }
    dend_3 { pt3dadd( -144.198, 81.1233, -40.3004, 1.33 ) }
    dend_3 { pt3dadd( -147.411, 81.328, -40.6927, 0.33 ) }
    dend_3 { pt3dadd( -154.111, 81.5856, -41.3015, 0.33 ) }
    dend_3 { pt3dadd( -154.943, 81.608, -41.3596, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -162.159, 81.7897, -41.8383, 0.33 ) }
    dend_3 { pt3dadd( -163.494, 81.826, -41.8693, 2.0 ) }
    dend_3 { pt3dadd( -168.371, 81.9271, -41.504, 0.33 ) }
    dend_3 { pt3dadd( -171.992, 81.9514, -40.4227, 0.67 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 4/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -12.8301, -36.9881, -5.3546, 0.67 ) }
    apic_12 { pt3dadd( -13.4898, -40.8128, -8.39969, 0.67 ) }
    apic_12 { pt3dadd( -14.0261, -43.8925, -10.5275, 2.0 ) }
    apic_12 { pt3dadd( -14.7188, -47.8706, -13.2762, 0.67 ) }
    apic_12 { pt3dadd( -15.0639, -49.852, -14.6453, 2.0 ) }
    apic_12 { pt3dadd( -15.7525, -53.8064, -17.3776, 0.67 ) }
    apic_12 { pt3dadd( -15.9958, -55.2034, -18.3428, 1.33 ) }
    apic_12 { pt3dadd( -16.5784, -57.3573, -20.1038, 2.0 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 12/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -12.8301, -36.9881, -5.3546, 0.67 ) }
    apic_11 { pt3dadd( -14.3377, -38.7266, -7.09313, 0.67 ) }
    apic_11 { pt3dadd( -15.9468, -40.5507, -8.51663, 0.33 ) }
    apic_11 { pt3dadd( -17.1884, -41.8401, -9.41978, 0.67 ) }
    apic_11 { pt3dadd( -18.3, -42.9297, -10.1625, 0.33 ) }
    apic_11 { pt3dadd( -18.9556, -43.5121, -10.6565, 0.67 ) }
    apic_11 { pt3dadd( -22.2063, -46.2306, -13.0199, 0.33 ) }
    apic_11 { pt3dadd( -23.5442, -47.3231, -14.0536, 0.33 ) }
    apic_11 { pt3dadd( -24.4249, -47.9745, -14.7213, 0.67 ) }
    apic_11 { pt3dadd( -26.3219, -49.2305, -16.1812, 1.33 ) }
    apic_11 { pt3dadd( -29.6427, -51.2529, -18.4691, 0.33 ) }
    apic_11 { pt3dadd( -31.1147, -52.0886, -19.4024, 2.66 ) }
    apic_11 { pt3dadd( -35.1873, -54.1593, -21.7209, 0.33 ) }
    apic_11 { pt3dadd( -38.3265, -55.8334, -23.3777, 0.33 ) }
    apic_11 { pt3dadd( -39.6815, -56.5353, -23.893, 2.0 ) }
    apic_11 { pt3dadd( -43.8107, -58.6474, -24.8673, 0.33 ) }
    apic_11 { pt3dadd( -44.3886, -58.9399, -24.9304, 0.67 ) }
    apic_11 { pt3dadd( -46.4655, -59.9675, -25.0516, 0.33 ) }
    apic_11 { pt3dadd( -47.9181, -60.6535, -25.1125, 3.33 ) }
    apic_11 { pt3dadd( -52.1355, -62.7501, -25.5228, 0.33 ) }
    apic_11 { pt3dadd( -53.322, -63.3198, -25.7019, 0.67 ) }
    apic_11 { pt3dadd( -56.5268, -64.8199, -26.3438, 0.33 ) }
    apic_11 { pt3dadd( -58.3694, -65.6746, -26.7343, 2.0 ) }
    apic_11 { pt3dadd( -63.41, -68.0814, -27.8589, 0.33 ) }
    apic_11 { pt3dadd( -65.794, -69.2717, -28.4244, 2.66 ) }
    apic_11 { pt3dadd( -68.6115, -70.8865, -29.321, 0.67 ) }
    apic_11 { pt3dadd( -71.543, -72.8103, -30.3617, 0.33 ) }
    apic_11 { pt3dadd( -72.0846, -73.2394, -30.574, 0.67 ) }
    apic_11 { pt3dadd( -73.5828, -74.8031, -31.3097, 0.33 ) }
    apic_11 { pt3dadd( -74.2862, -75.8128, -31.739, 2.66 ) }
    apic_11 { pt3dadd( -76.3162, -79.6488, -33.8297, 0.67 ) }
    apic_11 { pt3dadd( -77.291, -81.9851, -35.2786, 0.33 ) }
    apic_11 { pt3dadd( -77.5107, -82.5425, -35.6433, 1.33 ) }
    apic_11 { pt3dadd( -78.9511, -86.0515, -37.9819, 0.33 ) }
    apic_11 { pt3dadd( -79.5616, -87.5389, -38.8846, 3.33 ) }
    apic_11 { pt3dadd( -81.3853, -92.0567, -41.3469, 0.33 ) }
    apic_11 { pt3dadd( -81.6183, -92.6626, -41.6215, 0.67 ) }
    apic_11 { pt3dadd( -82.731, -95.7949, -42.9383, 0.33 ) }
    apic_11 { pt3dadd( -83.0273, -96.6838, -43.2574, 2.0 ) }
    apic_11 { pt3dadd( -85.0081, -102.921, -44.9342, 0.33 ) }
    apic_11 { pt3dadd( -85.4878, -104.691, -45.3088, 2.66 ) }
    apic_11 { pt3dadd( -85.9309, -106.662, -45.5586, 0.33 ) }
    apic_11 { pt3dadd( -85.9977, -106.962, -45.594, 0.67 ) }
    apic_11 { pt3dadd( -86.2676, -108.207, -45.7263, 0.33 ) }
    apic_11 { pt3dadd( -86.5774, -109.437, -45.9197, 2.66 ) }
    apic_11 { pt3dadd( -87.7539, -113.42, -46.6975, 0.33 ) }
    apic_11 { pt3dadd( -88.0654, -114.476, -46.961, 1.33 ) }
    apic_11 { pt3dadd( -89.4808, -119.278, -48.2982, 0.33 ) }
    apic_11 { pt3dadd( -89.8806, -120.75, -48.7526, 1.33 ) }
    apic_11 { pt3dadd( -90.9464, -125.03, -50.1627, 0.33 ) }
    apic_11 { pt3dadd( -91.147, -125.902, -50.4637, 2.0 ) }
    apic_11 { pt3dadd( -92.057, -130.38, -52.0783, 0.33 ) }
    apic_11 { pt3dadd( -92.2921, -131.618, -52.5469, 2.66 ) }
    apic_11 { pt3dadd( -92.6981, -134.283, -53.5885, 0.33 ) }
    apic_11 { pt3dadd( -92.8026, -134.88, -53.8292, 0.67 ) }
    apic_11 { pt3dadd( -93.4963, -138.201, -55.262, 0.33 ) }
    apic_11 { pt3dadd( -93.8264, -139.549, -55.9558, 1.33 ) }
    apic_11 { pt3dadd( -94.2534, -141.072, -56.8943, 0.33 ) }
    apic_11 { pt3dadd( -94.452, -141.877, -57.461, 0.67 ) }
    apic_11 { pt3dadd( -95.0255, -144.358, -59.2838, 0.33 ) }
    apic_11 { pt3dadd( -95.4705, -146.576, -61.0309, 2.66 ) }
    apic_11 { pt3dadd( -96.0803, -149.902, -63.772, 0.33 ) }
    apic_11 { pt3dadd( -96.3475, -151.5, -65.0527, 1.33 ) }
    apic_11 { pt3dadd( -96.8969, -155.429, -68.0927, 0.33 ) }
    apic_11 { pt3dadd( -97.0268, -156.419, -68.8687, 1.33 ) }
    apic_11 { pt3dadd( -97.5893, -160.703, -72.0974, 0.33 ) }
    apic_11 { pt3dadd( -97.6644, -161.082, -72.3949, 1.33 ) }
    apic_11 { pt3dadd( -98.0693, -162.561, -73.589, 0.33 ) }
    apic_11 { pt3dadd( -98.2186, -163.039, -73.9774, 2.0 ) }
    apic_11 { pt3dadd( -99.7411, -167.1, -77.456, 0.33 ) }
    apic_11 { pt3dadd( -99.93, -167.564, -77.873, 2.0 ) }
    apic_11 { pt3dadd( -103.001, -174.265, -84.0482, 0.33 ) }
    apic_11 { pt3dadd( -103.631, -175.599, -85.3359, 1.33 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 85/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -47.4691, -49.2198, 17.5294, 0.33 ) }
    apic_7 { pt3dadd( -50.2543, -50.1006, 16.524, 0.33 ) }
    apic_7 { pt3dadd( -51.0658, -50.2831, 16.2131, 0.67 ) }
    apic_7 { pt3dadd( -53.9161, -50.8162, 15.1469, 0.33 ) }
    apic_7 { pt3dadd( -55.4974, -51.0843, 14.5607, 0.67 ) }
    apic_7 { pt3dadd( -59.6847, -51.6856, 12.9391, 0.33 ) }
    apic_7 { pt3dadd( -60.9836, -51.8279, 12.4756, 0.67 ) }
    apic_7 { pt3dadd( -64.8283, -51.9674, 11.1109, 0.33 ) }
    apic_7 { pt3dadd( -65.5477, -51.9727, 10.8469, 0.67 ) }
    apic_7 { pt3dadd( -68.8518, -51.9201, 9.69479, 0.33 ) }
    apic_7 { pt3dadd( -71.4858, -51.8719, 8.82417, 2.66 ) }
    apic_7 { pt3dadd( -74.813, -51.7771, 7.87291, 0.33 ) }
    apic_7 { pt3dadd( -75.5591, -51.7582, 7.66209, 0.67 ) }
    apic_7 { pt3dadd( -79.0122, -51.7321, 6.63579, 0.33 ) }
    apic_7 { pt3dadd( -81.3582, -51.7542, 5.97422, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_7 { pt3dadd( -85.5733, -51.9448, 4.87331, 0.33 ) }
    apic_7 { pt3dadd( -86.1012, -51.9914, 4.71692, 0.67 ) }
    apic_7 { pt3dadd( -88.1434, -52.2466, 4.02398, 0.33 ) }
    apic_7 { pt3dadd( -90.8282, -52.6336, 2.98425, 2.66 ) }
    apic_7 { pt3dadd( -93.9816, -53.1577, 1.61696, 0.33 ) }
    apic_7 { pt3dadd( -95.3711, -53.443, 0.950932, 2.0 ) }
    apic_7 { pt3dadd( -100.864, -54.949, -1.77704, 0.33 ) }
    apic_7 { pt3dadd( -101.179, -55.0451, -1.96551, 1.33 ) }
    apic_7 { pt3dadd( -104.084, -56.0443, -3.89921, 0.33 ) }
    apic_7 { pt3dadd( -105.926, -56.9236, -5.11951, 2.66 ) }
    apic_7 { pt3dadd( -111.021, -59.9679, -8.54773, 0.33 ) }
    apic_7 { pt3dadd( -112.893, -61.4076, -9.76045, 2.66 ) }
    apic_7 { pt3dadd( -117.21, -65.6937, -12.1942, 0.33 ) }
    apic_7 { pt3dadd( -118.282, -66.822, -12.7756, 2.66 ) }
    apic_7 { pt3dadd( -123.245, -72.6448, -15.2682, 0.33 ) }
    apic_7 { pt3dadd( -124.122, -73.8085, -15.692, 2.0 ) }
    apic_7 { pt3dadd( -128.081, -80.1953, -17.4062, 0.33 ) }
    apic_7 { pt3dadd( -130.324, -83.9967, -18.0859, 2.0 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 18/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -47.4691, -49.2198, 17.5294, 0.33 ) }
    apic_6 { pt3dadd( -51.6797, -49.5344, 18.958, 0.33 ) }
    apic_6 { pt3dadd( -53.7627, -49.7642, 19.7164, 0.67 ) }
    apic_6 { pt3dadd( -55.6588, -50.0136, 20.4239, 0.33 ) }
    apic_6 { pt3dadd( -56.5521, -50.1686, 20.8061, 2.0 ) }
    apic_6 { pt3dadd( -59.8081, -50.896, 22.1264, 0.33 ) }
    apic_6 { pt3dadd( -62.3844, -51.6542, 23.1903, 0.67 ) }
    apic_6 { pt3dadd( -63.2188, -52.0114, 23.5299, 0.33 ) }
    apic_6 { pt3dadd( -63.6614, -52.2403, 23.7128, 1.33 ) }
    apic_6 { pt3dadd( -66.7527, -54.0385, 25.0952, 0.33 ) }
    apic_6 { pt3dadd( -68.5228, -55.1396, 25.8526, 2.0 ) }
    apic_6 { pt3dadd( -71.4676, -57.0703, 27.021, 0.33 ) }
    apic_6 { pt3dadd( -72.6256, -57.8552, 27.4341, 1.33 ) }
    apic_6 { pt3dadd( -74.7034, -59.2154, 28.1494, 0.33 ) }
    apic_6 { pt3dadd( -75.3728, -59.6492, 28.349, 2.0 ) }
    apic_6 { pt3dadd( -77.5729, -60.988, 28.8329, 0.33 ) }
    apic_6 { pt3dadd( -78.4198, -61.4541, 28.995, 2.66 ) }
    apic_6 { pt3dadd( -80.9685, -62.72, 29.326, 0.33 ) }
    apic_6 { pt3dadd( -82.6603, -63.5227, 29.52, 0.33 ) }
    apic_6 { pt3dadd( -83.9336, -64.1305, 29.6189, 0.67 ) }
    apic_6 { pt3dadd( -85.8195, -65.0691, 29.7524, 0.33 ) }
    apic_6 { pt3dadd( -86.5623, -65.4781, 29.7757, 2.0 ) }
    apic_6 { pt3dadd( -88.968, -66.8973, 29.7864, 0.33 ) }
    apic_6 { pt3dadd( -89.9173, -67.5239, 29.7629, 1.33 ) }
    apic_6 { pt3dadd( -91.7468, -68.8738, 29.7694, 0.33 ) }
    apic_6 { pt3dadd( -91.9198, -69.018, 29.7765, 0.67 ) }
    apic_6 { pt3dadd( -93.2839, -70.4229, 29.8237, 0.33 ) }
    apic_6 { pt3dadd( -94.267, -71.7035, 29.8401, 2.0 ) }
    apic_6 { pt3dadd( -95.3489, -73.6489, 29.7082, 0.33 ) }
    apic_6 { pt3dadd( -95.4818, -73.9369, 29.6887, 0.67 ) }
    apic_6 { pt3dadd( -96.0007, -75.2411, 29.6099, 0.33 ) }
    apic_6 { pt3dadd( -96.5383, -76.7076, 29.5344, 0.67 ) }
    apic_6 { pt3dadd( -97.1696, -78.486, 29.4465, 2.66 ) }
    apic_6 { pt3dadd( -98.3172, -81.6115, 29.2473, 0.33 ) }
    apic_6 { pt3dadd( -98.703, -82.5153, 29.1231, 2.0 ) }
    apic_6 { pt3dadd( -99.5001, -84.005, 28.9501, 0.33 ) }
    apic_6 { pt3dadd( -99.6282, -84.1866, 28.9248, 1.33 ) }
    apic_6 { pt3dadd( -101.671, -86.5635, 28.5774, 0.33 ) }
    apic_6 { pt3dadd( -102.569, -87.4682, 28.4384, 1.33 ) }
    apic_6 { pt3dadd( -104.741, -89.3966, 28.1971, 0.33 ) }
    apic_6 { pt3dadd( -107.344, -91.5591, 27.9023, 2.66 ) }
    apic_6 { pt3dadd( -109.641, -93.2953, 27.6484, 0.33 ) }
    apic_6 { pt3dadd( -109.865, -93.4509, 27.628, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 61/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 133.537, 3.18754, -119.69, 0.33 ) }
    dend_48 { pt3dadd( 134.865, 7.05803, -119.204, 0.33 ) }
    dend_48 { pt3dadd( 135.251, 7.98883, -119.354, 1.33 ) }
    dend_48 { pt3dadd( 137.479, 12.5583, -120.784, 0.33 ) }
    dend_48 { pt3dadd( 137.97, 13.5068, -121.223, 1.33 ) }
    dend_48 { pt3dadd( 139.728, 16.7504, -122.865, 0.33 ) }
    dend_48 { pt3dadd( 140.169, 17.5398, -123.292, 1.33 ) }
    dend_48 { pt3dadd( 143.16, 22.5832, -126.416, 0.33 ) }
    dend_48 { pt3dadd( 144.597, 24.8626, -128.007, 2.0 ) }
    dend_48 { pt3dadd( 147.925, 29.7367, -131.845, 0.33 ) }
    dend_48 { pt3dadd( 148.365, 30.3595, -132.338, 0.67 ) }
    dend_48 { pt3dadd( 150.526, 33.3001, -134.661, 0.33 ) }
    dend_48 { pt3dadd( 151.58, 34.6445, -135.702, 2.0 ) }
    dend_48 { pt3dadd( 154.17, 37.5962, -137.858, 0.33 ) }
    dend_48 { pt3dadd( 154.619, 38.0537, -138.189, 0.67 ) }
    dend_48 { pt3dadd( 156.123, 39.2904, -139.08, 0.33 ) }
    dend_48 { pt3dadd( 157.747, 40.4687, -139.923, 1.33 ) }
    dend_48 { pt3dadd( 159.745, 41.6605, -140.771, 0.33 ) }
    dend_48 { pt3dadd( 160.695, 42.2095, -141.099, 0.67 ) }
    dend_48 { pt3dadd( 161.528, 42.7144, -141.344, 0.33 ) }
    dend_48 { pt3dadd( 162.32, 43.3101, -141.626, 1.33 ) }
    dend_48 { pt3dadd( 164.344, 45.0383, -142.429, 0.33 ) }
    dend_48 { pt3dadd( 165.324, 45.9662, -142.847, 2.0 ) }
    dend_48 { pt3dadd( 168.342, 49.1595, -144.332, 0.33 ) }
    dend_48 { pt3dadd( 169.637, 50.6581, -145.015, 2.0 ) }
    dend_48 { pt3dadd( 172.036, 53.8207, -146.628, 0.33 ) }
    dend_48 { pt3dadd( 172.201, 54.0522, -146.769, 0.67 ) }
    dend_48 { pt3dadd( 173.302, 55.634, -147.872, 0.33 ) }
    dend_48 { pt3dadd( 173.339, 55.6882, -147.912, 0.67 ) }
    dend_48 { pt3dadd( 174.478, 57.2649, -149.212, 0.33 ) }
    dend_48 { pt3dadd( 177.518, 61.1121, -152.662, 1.33 ) }
    dend_48 { pt3dadd( 180.489, 64.53, -155.96, 0.33 ) }
    dend_48 { pt3dadd( 181.564, 65.7414, -157.162, 0.67 ) }
    dend_48 { pt3dadd( 183.222, 67.5494, -159.021, 0.33 ) }
    dend_48 { pt3dadd( 184.393, 68.7884, -160.33, 0.67 ) }
    dend_48 { pt3dadd( 185.614, 69.98, -161.68, 0.33 ) }
    dend_48 { pt3dadd( 186.039, 70.3092, -162.047, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 98/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 133.537, 3.18754, -119.69, 0.33 ) }
    dend_45 { pt3dadd( 140.158, 4.43006, -124.308, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 141.244, 4.7398, -125.23, 0.67 ) }
    dend_45 { pt3dadd( 146.99, 7.434, -132.384, 0.33 ) }
    dend_45 { pt3dadd( 147.833, 7.92163, -133.595, 0.67 ) }
    dend_45 { pt3dadd( 151.206, 10.5705, -139.796, 0.67 ) }
    dend_45 { pt3dadd( 152.718, 11.9691, -143.018, 1.33 ) }
    dend_45 { pt3dadd( 153.865, 13.8336, -147.24, 0.67 ) }
    dend_45 { pt3dadd( 155.286, 18.4934, -157.724, 0.33 ) }
    dend_45 { pt3dadd( 155.247, 18.8891, -158.616, 1.33 ) }
    dend_45 { pt3dadd( 153.911, 22.2247, -166.269, 0.33 ) }
    dend_45 { pt3dadd( 153.719, 22.4735, -166.888, 1.33 ) }
    dend_45 { pt3dadd( 151.799, 24.4253, -171.923, 0.33 ) }
    dend_45 { pt3dadd( 150.649, 25.298, -174.311, 1.33 ) }
    dend_45 { pt3dadd( 148.634, 26.2296, -177.056, 0.33 ) }
    dend_45 { pt3dadd( 147.401, 26.7118, -178.643, 0.67 ) }
    dend_45 { pt3dadd( 144.179, 27.6268, -182.124, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 15/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -80.6924, -4.7088, 2.99304, 0.33 ) }
    dend_39 { pt3dadd( -82.8127, -4.20648, 2.84724, 0.33 ) }
    dend_39 { pt3dadd( -82.8127, -4.20648, 2.84724, 0.67 ) }
    dend_39 { pt3dadd( -84.1759, -3.89901, 3.2527, 0.33 ) }
    dend_39 { pt3dadd( -84.7129, -3.75722, 3.41257, 0.67 ) }
    dend_39 { pt3dadd( -85.5768, -3.5208, 3.65853, 0.33 ) }
    dend_39 { pt3dadd( -86.5746, -3.2575, 3.91349, 1.33 ) }
    dend_39 { pt3dadd( -89.5115, -2.5247, 4.84588, 0.33 ) }
    dend_39 { pt3dadd( -90.037, -2.38146, 5.03934, 0.67 ) }
    dend_39 { pt3dadd( -91.1847, -2.02952, 5.48778, 0.33 ) }
    dend_39 { pt3dadd( -91.8777, -1.8306, 5.78115, 0.67 ) }
    dend_39 { pt3dadd( -93.2439, -1.42543, 6.37016, 0.33 ) }
    dend_39 { pt3dadd( -94.8238, -0.941026, 6.94696, 1.33 ) }
    dend_39 { pt3dadd( -98.0854, 0.169775, 7.84, 0.33 ) }
    dend_39 { pt3dadd( -98.9433, 0.469336, 8.02613, 1.33 ) }
    dend_39 { pt3dadd( -100.85, 1.18324, 8.3425, 0.33 ) }
    dend_39 { pt3dadd( -102.019, 1.68777, 8.51765, 2.66 ) }
    dend_39 { pt3dadd( -104.184, 2.77257, 8.75782, 0.33 ) }
    dend_39 { pt3dadd( -105.749, 3.66353, 8.81083, 0.33 ) }
    dend_39 { pt3dadd( -106.701, 4.28614, 8.80016, 1.33 ) }
    dend_39 { pt3dadd( -107.375, 4.73003, 8.7902, 1.33 ) }
    dend_39 { pt3dadd( -109.843, 6.45392, 8.72387, 0.33 ) }
    dend_39 { pt3dadd( -110.617, 6.94341, 8.72358, 2.0 ) }
    dend_39 { pt3dadd( -112.01, 7.78428, 8.76213, 0.33 ) }
    dend_39 { pt3dadd( -113.029, 8.32538, 8.73732, 1.33 ) }
    dend_39 { pt3dadd( -115.149, 9.37959, 8.57855, 0.33 ) }
    dend_39 { pt3dadd( -116.197, 9.82591, 8.43389, 2.0 ) }
    dend_39 { pt3dadd( -120.106, 11.2604, 7.68756, 0.33 ) }
    dend_39 { pt3dadd( -120.344, 11.3419, 7.64192, 0.67 ) }
    dend_39 { pt3dadd( -123.229, 12.2981, 7.08234, 0.33 ) }
    dend_39 { pt3dadd( -124.982, 12.8787, 6.74255, 2.66 ) }
    dend_39 { pt3dadd( -128.136, 13.9454, 6.27436, 0.33 ) }
    dend_39 { pt3dadd( -129.132, 14.2889, 6.16833, 0.67 ) }
    dend_39 { pt3dadd( -131.724, 15.2586, 5.98896, 0.33 ) }
    dend_39 { pt3dadd( -132.579, 15.6075, 5.96029, 0.67 ) }
    dend_39 { pt3dadd( -133.83, 16.1848, 5.97376, 0.33 ) }
    dend_39 { pt3dadd( -136.554, 17.5389, 6.04814, 2.0 ) }
    dend_39 { pt3dadd( -139.477, 19.1091, 6.14447, 0.33 ) }
    dend_39 { pt3dadd( -139.7, 19.2315, 6.15904, 0.67 ) }
    dend_39 { pt3dadd( -142.325, 20.6221, 6.38463, 0.33 ) }
    dend_39 { pt3dadd( -143.262, 21.0801, 6.47706, 0.67 ) }
    dend_39 { pt3dadd( -145.165, 21.9704, 6.6712, 0.33 ) }
    dend_39 { pt3dadd( -146.596, 22.5635, 6.8464, 2.66 ) }
    dend_39 { pt3dadd( -150.108, 23.846, 7.51144, 0.67 ) }
    dend_39 { pt3dadd( -151.555, 24.2658, 7.93667, 0.67 ) }
    dend_39 { pt3dadd( -153.541, 24.6728, 8.71996, 0.33 ) }
    dend_39 { pt3dadd( -154.067, 24.7457, 8.95888, 1.33 ) }
    dend_39 { pt3dadd( -156.712, 24.9941, 10.3236, 0.33 ) }
    dend_39 { pt3dadd( -157.664, 25.0418, 10.8275, 2.66 ) }
    dend_39 { pt3dadd( -161.003, 25.1184, 12.4408, 0.33 ) }
    dend_39 { pt3dadd( -161.535, 25.1451, 12.6714, 0.67 ) }
    dend_39 { pt3dadd( -162.747, 25.2497, 13.0986, 0.33 ) }
    dend_39 { pt3dadd( -163.641, 25.3456, 13.3475, 0.67 ) }
    dend_39 { pt3dadd( -165.437, 25.6098, 13.6491, 0.33 ) }
    dend_39 { pt3dadd( -167.935, 26.0222, 13.9425, 2.0 ) }
    dend_39 { pt3dadd( -170.633, 26.4985, 14.199, 0.67 ) }
    dend_39 { pt3dadd( -172.165, 26.7757, 14.3936, 0.33 ) }
    dend_39 { pt3dadd( -172.415, 26.8214, 14.4295, 1.33 ) }
    dend_39 { pt3dadd( -174.941, 27.2474, 14.8441, 0.33 ) }
    dend_39 { pt3dadd( -176.364, 27.4733, 15.1224, 1.33 ) }
    dend_39 { pt3dadd( -178.508, 27.7693, 15.5912, 0.33 ) }
    dend_39 { pt3dadd( -179.753, 27.9638, 15.8676, 1.33 ) }
    dend_39 { pt3dadd( -182.115, 28.3182, 16.4552, 0.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -80.6924, -4.7088, 2.99304, 0.33 ) }
    dend_38 { pt3dadd( -82.0703, -8.09779, 3.03109, 0.33 ) }
    dend_38 { pt3dadd( -82.729, -9.55614, 3.0208, 2.66 ) }
    dend_38 { pt3dadd( -83.8729, -12.0243, 2.99201, 0.33 ) }
    dend_38 { pt3dadd( -84.5016, -13.4225, 2.89034, 0.67 ) }
    dend_38 { pt3dadd( -85.6691, -15.9935, 2.72314, 0.33 ) }
    dend_38 { pt3dadd( -86.2691, -17.292, 2.58835, 0.67 ) }
    dend_38 { pt3dadd( -87.1002, -19.0732, 2.33068, 0.33 ) }
    dend_38 { pt3dadd( -87.4156, -19.6817, 2.19437, 2.0 ) }
    dend_38 { pt3dadd( -89.0782, -22.6311, 1.45513, 0.33 ) }
    dend_38 { pt3dadd( -89.9339, -24.0999, 1.15506, 1.33 ) }
    dend_38 { pt3dadd( -91.4892, -26.7496, 0.672823, 0.33 ) }
    dend_38 { pt3dadd( -92.4339, -28.3609, 0.47485, 2.0 ) }
    dend_38 { pt3dadd( -94.2462, -31.4241, 0.189077, 0.33 ) }
    dend_38 { pt3dadd( -94.8358, -32.3785, 0.140159, 2.0 ) }
    dend_38 { pt3dadd( -96.749, -35.3773, 0.152044, 0.33 ) }
    dend_38 { pt3dadd( -97.1452, -36.0044, 0.147767, 0.67 ) }
    dend_38 { pt3dadd( -97.9766, -37.3303, 0.196923, 0.33 ) }
    dend_38 { pt3dadd( -98.5071, -38.1699, 0.225746, 2.0 ) }
    dend_38 { pt3dadd( -100.114, -40.6516, 0.187024, 0.33 ) }
    dend_38 { pt3dadd( -100.249, -40.855, 0.184858, 1.33 ) }
    dend_38 { pt3dadd( -101.607, -42.8533, 0.207313, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_38 { pt3dadd( -101.738, -43.0541, 0.217898, 0.67 ) }
    dend_38 { pt3dadd( -103.051, -45.1531, 0.406862, 0.33 ) }
    dend_38 { pt3dadd( -103.89, -46.4633, 0.677422, 2.66 ) }
    dend_38 { pt3dadd( -105.339, -48.6572, 1.40814, 0.33 ) }
    dend_38 { pt3dadd( -105.466, -48.838, 1.4846, 0.67 ) }
    dend_38 { pt3dadd( -106.789, -50.6322, 2.35162, 0.33 ) }
    dend_38 { pt3dadd( -106.982, -50.864, 2.48846, 0.67 ) }
    dend_38 { pt3dadd( -108.702, -52.7493, 3.82925, 0.33 ) }
    dend_38 { pt3dadd( -108.852, -52.8944, 3.94121, 0.67 ) }
    dend_38 { pt3dadd( -110.381, -54.2943, 5.04305, 0.33 ) }
    dend_38 { pt3dadd( -111.303, -55.0896, 5.70259, 1.33 ) }
    dend_38 { pt3dadd( -113.869, -57.1028, 7.52457, 0.33 ) }
    dend_38 { pt3dadd( -114.097, -57.2904, 7.68124, 0.67 ) }
    dend_38 { pt3dadd( -115.119, -58.2298, 8.29847, 0.33 ) }
    dend_38 { pt3dadd( -115.761, -58.8138, 8.7473, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 15/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -42.3909, 165.168, -215.606, 0.33 ) }
    dend_32 { pt3dadd( -42.5662, 166.516, -216.894, 0.33 ) }
    dend_32 { pt3dadd( -42.7017, 167.294, -217.62, 1.33 ) }
    dend_32 { pt3dadd( -43.6899, 172.963, -222.914, 0.33 ) }
    dend_32 { pt3dadd( -43.8087, 173.644, -223.551, 1.33 ) }
    dend_32 { pt3dadd( -44.4643, 177.405, -227.062, 0.33 ) }
    dend_32 { pt3dadd( -44.5484, 177.888, -227.513, 0.67 ) }
    dend_32 { pt3dadd( -44.6761, 178.531, -228.16, 0.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 23/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -42.3909, 165.168, -215.606, 0.33 ) }
    dend_31 { pt3dadd( -41.2591, 165.267, -213.167, 0.33 ) }
    dend_31 { pt3dadd( -40.1519, 165.347, -211.104, 0.67 ) }
    dend_31 { pt3dadd( -36.0493, 165.388, -204.402, 0.33 ) }
    dend_31 { pt3dadd( -35.6003, 165.38, -203.743, 1.33 ) }
    dend_31 { pt3dadd( -32.7857, 165.414, -199.63, 0.33 ) }
    dend_31 { pt3dadd( -32.0514, 165.426, -198.481, 0.67 ) }
    dend_31 { pt3dadd( -30.2434, 165.372, -195.549, 0.33 ) }
    dend_31 { pt3dadd( -29.1109, 165.356, -193.703, 0.67 ) }
    dend_31 { pt3dadd( -27.3352, 165.358, -191.264, 0.33 ) }
    dend_31 { pt3dadd( -25.1678, 165.343, -188.215, 1.33 ) }
    dend_31 { pt3dadd( -22.2306, 165.369, -184.115, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 35/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 22.325, 50.6584, -15.4416, 1.33 ) }
    dend_16 { pt3dadd( 22.3045, 55.2205, -12.6932, 1.33 ) }
    dend_16 { pt3dadd( 22.2922, 57.9433, -11.0529, 0.67 ) }
    dend_16 { pt3dadd( 22.268, 63.329, -7.80824, 2.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 39/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.325, 50.6584, -15.4416, 0.33 ) }
    dend_13 { pt3dadd( 23.4846, 52.1156, -19.6529, 0.33 ) }
    dend_13 { pt3dadd( 25.5553, 54.7176, -27.173, 2.66 ) }
    dend_13 { pt3dadd( 26.2587, 55.6015, -29.7276, 0.33 ) }
    dend_13 { pt3dadd( 27.0391, 56.5821, -32.5618, 2.0 ) }
    dend_13 { pt3dadd( 28.3632, 58.2459, -37.3703, 0.33 ) }
    dend_13 { pt3dadd( 28.7775, 58.7666, -38.8752, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -153.058, 84.6742, 9.6685, 0.33 ) }
    dend_9 { pt3dadd( -154.94, 85.3062, 8.94178, 0.33 ) }
    dend_9 { pt3dadd( -155.731, 85.5708, 8.69716, 2.0 ) }
    dend_9 { pt3dadd( -158.103, 86.5019, 7.70883, 0.33 ) }
    dend_9 { pt3dadd( -158.355, 86.6169, 7.60462, 0.67 ) }
    dend_9 { pt3dadd( -159.404, 87.1599, 7.15822, 0.33 ) }
    dend_9 { pt3dadd( -160.116, 87.5349, 6.8561, 1.33 ) }
    dend_9 { pt3dadd( -161.201, 88.1373, 6.38052, 0.33 ) }
    dend_9 { pt3dadd( -163.788, 89.5668, 5.30296, 2.66 ) }
    dend_9 { pt3dadd( -165.432, 90.4689, 4.66657, 0.33 ) }
    dend_9 { pt3dadd( -166.751, 91.2082, 4.1277, 2.0 ) }
    dend_9 { pt3dadd( -168.756, 92.3917, 3.24117, 0.33 ) }
    dend_9 { pt3dadd( -169.285, 92.713, 2.99909, 0.33 ) }
    dend_9 { pt3dadd( -169.623, 92.9089, 2.84908, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 60/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -153.058, 84.6742, 9.6685, 0.33 ) }
    dend_8 { pt3dadd( -155.231, 86.0966, 8.58144, 0.33 ) }
    dend_8 { pt3dadd( -155.502, 86.2767, 8.45816, 0.67 ) }
    dend_8 { pt3dadd( -161.801, 90.4165, 5.94298, 0.33 ) }
    dend_8 { pt3dadd( -162.072, 90.6011, 5.82653, 1.33 ) }
    dend_8 { pt3dadd( -164.872, 92.4029, 4.6987, 0.33 ) }
    dend_8 { pt3dadd( -165.901, 93.0129, 4.30113, 0.33 ) }
    dend_8 { pt3dadd( -166.742, 93.4983, 3.91152, 0.67 ) }
    dend_8 { pt3dadd( -168.198, 94.3097, 3.27064, 0.33 ) }
    dend_8 { pt3dadd( -170.343, 95.486, 2.18522, 0.67 ) }
    dend_8 { pt3dadd( -173.33, 97.1912, 0.448019, 0.33 ) }
    dend_8 { pt3dadd( -174.78, 98.0504, -0.563316, 2.0 ) }
    dend_8 { pt3dadd( -178.505, 100.397, -3.57419, 0.33 ) }
    dend_8 { pt3dadd( -181.167, 102.17, -5.98099, 0.33 ) }
    dend_8 { pt3dadd( -184.033, 104.271, -9.0034, 2.0 ) }
    dend_8 { pt3dadd( -185.936, 105.782, -11.4045, 0.33 ) }
    dend_8 { pt3dadd( -187.383, 107.216, -13.9413, 1.33 ) }
    dend_8 { pt3dadd( -188.989, 109.304, -17.8498, 0.33 ) }
    dend_8 { pt3dadd( -189.602, 110.329, -19.8058, 2.0 ) }
    dend_8 { pt3dadd( -190.664, 112.518, -24.0286, 0.33 ) }
    dend_8 { pt3dadd( -191.511, 114.609, -27.9969, 2.0 ) }
    dend_8 { pt3dadd( -192.896, 118.699, -35.5799, 0.67 ) }
    dend_8 { pt3dadd( -194.267, 122.741, -42.7052, 1.33 ) }
    dend_8 { pt3dadd( -195.603, 126.722, -49.4783, 0.33 ) }
    dend_8 { pt3dadd( -195.688, 126.991, -49.9223, 0.67 ) }
    dend_8 { pt3dadd( -196.274, 128.946, -52.9382, 0.33 ) }
    dend_8 { pt3dadd( -196.471, 129.584, -53.8229, 0.67 ) }
    dend_8 { pt3dadd( -197.29, 131.812, -56.5816, 0.33 ) }
    dend_8 { pt3dadd( -197.904, 133.016, -57.7941, 0.67 ) }
    // Section: apic_16, id: apic_16, parent: apic_12 (entry count 89/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -16.5784, -57.3573, -20.1038, 0.67 ) }
    apic_16 { pt3dadd( -17.8119, -59.7705, -22.8373, 0.67 ) }
    apic_16 { pt3dadd( -18.34, -60.7396, -23.6252, 1.33 ) }
    apic_16 { pt3dadd( -19.2365, -62.2063, -24.8569, 0.67 ) }
    apic_16 { pt3dadd( -22.4505, -68.3174, -29.4197, 0.67 ) }
    apic_16 { pt3dadd( -23.456, -70.4567, -31.0044, 0.67 ) }
    apic_16 { pt3dadd( -25.3272, -74.4953, -33.8107, 2.0 ) }
    apic_16 { pt3dadd( -26.5243, -77.554, -36.0987, 0.67 ) }
    apic_16 { pt3dadd( -28.1843, -82.317, -39.7943, 3.33 ) }
    apic_16 { pt3dadd( -29.3701, -86.6658, -42.8968, 3.33 ) }
    apic_16 { pt3dadd( -30.3711, -91.7194, -45.9361, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_16 { pt3dadd( -30.809, -94.858, -47.9591, 0.67 ) }
    apic_16 { pt3dadd( -31.0487, -100.615, -51.9339, 0.67 ) }
    apic_16 { pt3dadd( -30.9644, -103.138, -53.7451, 3.33 ) }
    apic_16 { pt3dadd( -30.3857, -107.311, -56.3627, 3.99 ) }
    apic_16 { pt3dadd( -29.7521, -110.435, -58.6218, 3.33 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 5/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -16.5784, -57.3573, -20.1038, 0.67 ) }
    apic_13 { pt3dadd( -18.3915, -60.2345, -17.0377, 0.67 ) }
    apic_13 { pt3dadd( -19.3019, -61.513, -15.6463, 0.67 ) }
    apic_13 { pt3dadd( -20.1694, -62.6499, -14.3959, 0.33 ) }
    apic_13 { pt3dadd( -21.0755, -63.7863, -13.1788, 1.33 ) }
    apic_13 { pt3dadd( -22.9294, -66.0573, -10.8322, 0.33 ) }
    apic_13 { pt3dadd( -23.2629, -66.4671, -10.4458, 1.33 ) }
    apic_13 { pt3dadd( -24.8505, -68.2484, -9.04004, 0.33 ) }
    apic_13 { pt3dadd( -25.0094, -68.4538, -8.90527, 0.67 ) }
    apic_13 { pt3dadd( -25.5123, -69.2979, -8.54919, 0.33 ) }
    apic_13 { pt3dadd( -25.7711, -69.8822, -8.44012, 0.67 ) }
    apic_13 { pt3dadd( -26.2969, -71.6585, -8.36832, 0.33 ) }
    apic_13 { pt3dadd( -26.5975, -72.8989, -8.25483, 1.33 ) }
    apic_13 { pt3dadd( -27.0984, -75.421, -7.97927, 0.33 ) }
    apic_13 { pt3dadd( -27.3349, -77.1637, -7.53463, 0.67 ) }
    apic_13 { pt3dadd( -27.4602, -78.6194, -6.99306, 0.33 ) }
    apic_13 { pt3dadd( -27.5096, -79.3653, -6.66879, 1.33 ) }
    apic_13 { pt3dadd( -27.6515, -82.5589, -4.93495, 0.33 ) }
    apic_13 { pt3dadd( -27.6629, -82.8002, -4.7731, 2.0 ) }
    apic_13 { pt3dadd( -27.6885, -85.878, -2.03519, 0.33 ) }
    apic_13 { pt3dadd( -27.6811, -86.077, -1.81977, 1.33 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 26/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -130.324, -83.9967, -18.0859, 0.33 ) }
    apic_9 { pt3dadd( -130.697, -86.1927, -18.6581, 0.33 ) }
    apic_9 { pt3dadd( -130.928, -87.0873, -18.9169, 0.67 ) }
    apic_9 { pt3dadd( -131.788, -89.9315, -19.7469, 0.33 ) }
    apic_9 { pt3dadd( -131.955, -90.359, -19.9523, 0.67 ) }
    apic_9 { pt3dadd( -132.558, -91.8227, -20.7385, 0.33 ) }
    apic_9 { pt3dadd( -132.895, -92.6248, -21.1478, 0.67 ) }
    apic_9 { pt3dadd( -133.471, -93.8286, -21.7865, 0.33 ) }
    apic_9 { pt3dadd( -133.865, -94.5283, -22.2599, 2.0 ) }
    apic_9 { pt3dadd( -136.418, -98.9827, -25.3872, 0.33 ) }
    apic_9 { pt3dadd( -136.822, -99.6768, -25.8224, 1.33 ) }
    apic_9 { pt3dadd( -138.248, -102.113, -27.2419, 0.33 ) }
    apic_9 { pt3dadd( -139.069, -103.456, -27.9307, 1.33 ) }
    apic_9 { pt3dadd( -142.231, -108.601, -30.1098, 0.33 ) }
    apic_9 { pt3dadd( -143.561, -110.689, -30.9088, 2.0 ) }
    apic_9 { pt3dadd( -145.955, -114.281, -31.8977, 0.33 ) }
    apic_9 { pt3dadd( -146.336, -114.832, -32.039, 1.33 ) }
    apic_9 { pt3dadd( -148.0, -117.134, -32.5134, 0.33 ) }
    apic_9 { pt3dadd( -148.745, -118.199, -32.5433, 2.0 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 45/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -130.324, -83.9967, -18.0859, 0.33 ) }
    apic_8 { pt3dadd( -131.296, -85.3836, -18.0179, 0.33 ) }
    apic_8 { pt3dadd( -131.452, -85.6066, -18.007, 0.67 ) }
    apic_8 { pt3dadd( -132.824, -87.5657, -17.9111, 0.33 ) }
    apic_8 { pt3dadd( -133.048, -87.8858, -17.8954, 0.67 ) }
    apic_8 { pt3dadd( -134.305, -89.682, -17.8074, 0.33 ) }
    apic_8 { pt3dadd( -134.651, -90.1756, -17.7832, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 144.179, 27.6268, -182.124, 0.33 ) }
    dend_47 { pt3dadd( 143.983, 29.3441, -184.106, 0.33 ) }
    dend_47 { pt3dadd( 143.901, 29.7938, -184.644, 1.33 ) }
    dend_47 { pt3dadd( 143.728, 30.8461, -185.918, 0.33 ) }
    dend_47 { pt3dadd( 143.622, 32.3285, -187.946, 1.33 ) }
    dend_47 { pt3dadd( 143.743, 35.8263, -192.945, 0.33 ) }
    dend_47 { pt3dadd( 143.78, 36.1101, -193.366, 0.67 ) }
    dend_47 { pt3dadd( 144.227, 38.2187, -196.724, 0.33 ) }
    dend_47 { pt3dadd( 144.512, 39.3081, -198.512, 1.33 ) }
    dend_47 { pt3dadd( 145.578, 42.5027, -203.349, 0.33 ) }
    dend_47 { pt3dadd( 146.254, 44.1985, -205.731, 1.33 ) }
    dend_47 { pt3dadd( 147.594, 47.1494, -209.529, 0.33 ) }
    dend_47 { pt3dadd( 148.185, 48.4264, -211.086, 1.33 ) }
    dend_47 { pt3dadd( 150.959, 54.203, -217.689, 0.33 ) }
    dend_47 { pt3dadd( 152.662, 57.8674, -221.563, 0.33 ) }
    dend_47 { pt3dadd( 153.263, 59.2285, -222.844, 0.67 ) }
    dend_47 { pt3dadd( 153.794, 60.474, -223.93, 0.33 ) }
    dend_47 { pt3dadd( 154.243, 61.5775, -224.811, 0.67 ) }
    dend_47 { pt3dadd( 154.969, 63.6796, -226.367, 0.33 ) }
    dend_47 { pt3dadd( 155.444, 65.6908, -227.748, 0.67 ) }
    dend_47 { pt3dadd( 155.789, 68.5907, -230.022, 0.33 ) }
    dend_47 { pt3dadd( 155.829, 69.4037, -230.674, 0.67 ) }
    dend_47 { pt3dadd( 155.769, 71.0239, -232.169, 0.33 ) }
    dend_47 { pt3dadd( 155.593, 73.2907, -234.456, 0.33 ) }
    dend_47 { pt3dadd( 155.426, 74.8576, -236.163, 0.33 ) }
    dend_47 { pt3dadd( 155.322, 75.9146, -237.387, 0.67 ) }
    dend_47 { pt3dadd( 155.152, 77.9197, -239.752, 0.67 ) }
    dend_47 { pt3dadd( 155.018, 81.3551, -243.85, 0.67 ) }
    dend_47 { pt3dadd( 155.199, 83.7311, -246.569, 0.33 ) }
    dend_47 { pt3dadd( 155.489, 85.4292, -248.483, 0.33 ) }
    dend_47 { pt3dadd( 155.57, 85.8472, -248.918, 0.67 ) }
    dend_47 { pt3dadd( 156.141, 88.2357, -251.262, 0.33 ) }
    dend_47 { pt3dadd( 156.397, 89.0009, -251.978, 0.67 ) }
    dend_47 { pt3dadd( 157.947, 92.8512, -255.281, 0.33 ) }
    dend_47 { pt3dadd( 158.393, 93.8551, -256.149, 0.67 ) }
    dend_47 { pt3dadd( 159.882, 96.6494, -258.627, 0.33 ) }
    dend_47 { pt3dadd( 161.351, 99.1016, -260.914, 1.33 ) }
    dend_47 { pt3dadd( 163.172, 101.952, -263.745, 0.33 ) }
    dend_47 { pt3dadd( 163.744, 102.864, -264.706, 0.67 ) }
    dend_47 { pt3dadd( 165.413, 105.633, -267.953, 0.33 ) }
    dend_47 { pt3dadd( 166.505, 107.508, -270.463, 0.33 ) }
    dend_47 { pt3dadd( 167.118, 108.567, -272.107, 0.67 ) }
    dend_47 { pt3dadd( 167.732, 109.907, -274.49, 0.33 ) }
    dend_47 { pt3dadd( 168.28, 111.359, -277.295, 1.33 ) }
    dend_47 { pt3dadd( 168.734, 112.81, -280.336, 1.33 ) }
    dend_47 { pt3dadd( 168.995, 114.285, -283.657, 0.33 ) }
    dend_47 { pt3dadd( 169.005, 114.53, -284.224, 1.33 ) }
    dend_47 { pt3dadd( 169.197, 116.963, -290.142, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 144.179, 27.6268, -182.124, 0.33 ) }
    dend_46 { pt3dadd( 143.668, 26.6575, -185.365, 0.33 ) }
    dend_46 { pt3dadd( 142.793, 24.7494, -191.4, 1.33 ) }
    dend_46 { pt3dadd( 142.326, 23.768, -194.823, 0.67 ) }
    dend_46 { pt3dadd( 141.774, 22.5422, -199.146, 1.33 ) }
    dend_46 { pt3dadd( 141.238, 21.4809, -203.514, 0.33 ) }
    dend_46 { pt3dadd( 140.972, 21.0087, -205.775, 0.33 ) }
    dend_46 { pt3dadd( 140.767, 20.6566, -207.949, 2.0 ) }
    dend_46 { pt3dadd( 139.931, 20.0352, -213.541, 0.67 ) }
    dend_46 { pt3dadd( 139.685, 19.9395, -214.847, 0.67 ) }
    dend_46 { pt3dadd( 138.882, 19.8239, -218.005, 0.67 ) }
    dend_46 { pt3dadd( 138.265, 19.8498, -220.316, 1.33 ) }
    dend_46 { pt3dadd( 137.572, 20.0075, -222.45, 0.67 ) }
    dend_46 { pt3dadd( 136.017, 20.3106, -226.23, 0.33 ) }
    dend_46 { pt3dadd( 136.017, 20.3106, -226.23, 0.67 ) }
    dend_46 { pt3dadd( 134.955, 20.4034, -228.484, 0.33 ) }
    dend_46 { pt3dadd( 134.423, 20.4151, -229.647, 0.33 ) }
    dend_46 { pt3dadd( 134.109, 20.4449, -230.368, 0.67 ) }
    dend_46 { pt3dadd( 133.122, 20.5928, -232.95, 1.33 ) }
    dend_46 { pt3dadd( 132.198, 20.6428, -235.962, 1.33 ) }
    dend_46 { pt3dadd( 130.688, 20.6084, -241.085, 0.33 ) }
    dend_46 { pt3dadd( 130.568, 20.5997, -241.553, 1.33 ) }
    dend_46 { pt3dadd( 129.258, 20.44, -247.21, 0.33 ) }
    dend_46 { pt3dadd( 128.897, 20.3677, -249.128, 0.67 ) }
    dend_46 { pt3dadd( 127.786, 19.9715, -255.533, 0.33 ) }
    dend_46 { pt3dadd( 127.604, 19.8123, -256.892, 0.67 ) }
    dend_46 { pt3dadd( 127.286, 19.239, -260.173, 0.33 ) }
    dend_46 { pt3dadd( 127.166, 18.9254, -261.838, 1.33 ) }
    dend_46 { pt3dadd( 126.772, 16.8348, -270.999, 0.67 ) }
    dend_46 { pt3dadd( 126.713, 16.1998, -273.519, 0.33 ) }
    dend_46 { pt3dadd( 126.716, 15.2492, -277.038, 0.33 ) }
    dend_46 { pt3dadd( 126.764, 14.8607, -278.342, 1.33 ) }
    dend_46 { pt3dadd( 126.945, 13.5423, -282.213, 0.33 ) }
    dend_46 { pt3dadd( 127.157, 12.4473, -285.284, 1.33 ) }
    dend_46 { pt3dadd( 127.54, 11.0038, -289.151, 0.67 ) }
    dend_46 { pt3dadd( 127.984, 9.5856, -293.418, 0.67 ) }
    dend_46 { pt3dadd( 128.096, 9.01304, -295.196, 0.67 ) }
    dend_46 { pt3dadd( 128.419, 7.55809, -299.213, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 38/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.268, 63.329, -7.80824, 0.67 ) }
    dend_20 { pt3dadd( 19.2762, 64.455, -7.65917, 0.67 ) }
    dend_20 { pt3dadd( 17.1249, 65.2384, -7.80516, 0.33 ) }
    dend_20 { pt3dadd( 16.2248, 65.6747, -7.98808, 0.67 ) }
    dend_20 { pt3dadd( 14.0319, 66.9864, -8.56119, 0.33 ) }
    dend_20 { pt3dadd( 13.4195, 67.4365, -8.78806, 0.67 ) }
    dend_20 { pt3dadd( 11.9917, 68.5977, -9.3665, 0.33 ) }
    dend_20 { pt3dadd( 10.2224, 70.4143, -10.2761, 0.67 ) }
    dend_20 { pt3dadd( 7.85092, 73.3095, -11.6665, 0.33 ) }
    dend_20 { pt3dadd( 6.87433, 74.8092, -12.3279, 3.33 ) }
    dend_20 { pt3dadd( 5.11735, 78.3254, -13.8805, 0.33 ) }
    dend_20 { pt3dadd( 4.45891, 79.7883, -14.6251, 1.33 ) }
    dend_20 { pt3dadd( 3.28187, 82.6596, -16.147, 0.33 ) }
    dend_20 { pt3dadd( 2.43368, 84.8157, -17.2623, 1.33 ) }
    dend_20 { pt3dadd( 1.01984, 88.538, -19.2722, 0.33 ) }
    dend_20 { pt3dadd( -0.603054, 92.8535, -21.6504, 2.66 ) }
    dend_20 { pt3dadd( -3.62373, 100.599, -25.8703, 0.33 ) }
    dend_20 { pt3dadd( -3.88789, 101.248, -26.2497, 0.67 ) }
    dend_20 { pt3dadd( -4.84508, 103.398, -27.5575, 0.33 ) }
    dend_20 { pt3dadd( -5.00705, 103.723, -27.7538, 0.67 ) }
    dend_20 { pt3dadd( -5.58281, 104.713, -28.3121, 0.33 ) }
    dend_20 { pt3dadd( -6.80566, 106.737, -29.2585, 2.0 ) }
    dend_20 { pt3dadd( -8.78818, 110.376, -30.5143, 0.33 ) }
    dend_20 { pt3dadd( -9.52644, 111.765, -30.845, 2.0 ) }
    dend_20 { pt3dadd( -10.9016, 114.393, -31.2608, 0.33 ) }
    dend_20 { pt3dadd( -11.2152, 115.015, -31.31, 0.67 ) }
    dend_20 { pt3dadd( -12.3796, 117.539, -31.3115, 0.33 ) }
    dend_20 { pt3dadd( -13.4015, 119.873, -31.1739, 2.66 ) }
    dend_20 { pt3dadd( -15.3992, 124.256, -30.5631, 0.33 ) }
    dend_20 { pt3dadd( -15.6221, 124.763, -30.4932, 0.67 ) }
    dend_20 { pt3dadd( -16.205, 126.033, -30.3241, 0.33 ) }
    dend_20 { pt3dadd( -17.1267, 127.912, -30.1698, 0.67 ) }
    dend_20 { pt3dadd( -18.3422, 130.289, -30.1811, 0.33 ) }
    dend_20 { pt3dadd( -19.3806, 132.258, -30.3205, 2.66 ) }
    dend_20 { pt3dadd( -20.8627, 135.188, -30.5745, 0.33 ) }
    dend_20 { pt3dadd( -23.6333, 140.445, -30.9849, 0.33 ) }
    dend_20 { pt3dadd( -25.0557, 143.01, -31.1469, 2.0 ) }
    dend_20 { pt3dadd( -30.2397, 151.705, -31.5378, 0.33 ) }
    dend_20 { pt3dadd( -31.3207, 153.44, -31.5815, 2.0 ) }
    dend_20 { pt3dadd( -33.9841, 157.327, -31.8078, 0.33 ) }
    dend_20 { pt3dadd( -36.6173, 160.837, -32.1079, 0.33 ) }
    dend_20 { pt3dadd( -37.4355, 161.812, -32.2885, 2.0 ) }
    dend_20 { pt3dadd( -39.7639, 164.381, -32.99, 0.33 ) }
    dend_20 { pt3dadd( -40.3145, 164.914, -33.2253, 2.0 ) }
    dend_20 { pt3dadd( -44.9556, 169.306, -35.7979, 0.33 ) }
    dend_20 { pt3dadd( -45.8296, 170.113, -36.3089, 2.0 ) }
    dend_20 { pt3dadd( -50.0657, 174.342, -38.8697, 0.33 ) }
    dend_20 { pt3dadd( -51.6755, 175.993, -39.8725, 0.33 ) }
    dend_20 { pt3dadd( -53.3247, 177.726, -40.771, 0.33 ) }
    dend_20 { pt3dadd( -54.6065, 179.092, -41.3886, 1.33 ) }
    dend_20 { pt3dadd( -57.7623, 182.623, -42.2195, 0.33 ) }
    dend_20 { pt3dadd( -57.9989, 182.883, -42.2332, 0.67 ) }
    dend_20 { pt3dadd( -60.1599, 185.176, -41.2886, 0.33 ) }
    dend_20 { pt3dadd( -63.3746, 187.892, -39.6077, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 22.268, 63.329, -7.80824, 0.33 ) }
    dend_17 { pt3dadd( 21.8242, 65.98, -11.7879, 0.33 ) }
    dend_17 { pt3dadd( 21.6297, 67.1419, -13.5321, 1.33 ) }
    dend_17 { pt3dadd( 21.2406, 69.4658, -17.0205, 0.67 ) }
    dend_17 { pt3dadd( 21.155, 69.9772, -17.7883, 0.33 ) }
    dend_17 { pt3dadd( 21.0581, 70.5559, -18.657, 2.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 98/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 28.7775, 58.7666, -38.8752, 0.33 ) }
    dend_15 { pt3dadd( 27.8141, 64.0981, -42.8729, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( 27.6368, 65.0831, -43.5322, 1.33 ) }
    dend_15 { pt3dadd( 27.0945, 68.0415, -45.3645, 0.33 ) }
    dend_15 { pt3dadd( 26.7705, 69.5301, -46.2762, 2.0 ) }
    dend_15 { pt3dadd( 25.6725, 74.4534, -49.271, 0.33 ) }
    dend_15 { pt3dadd( 24.9221, 77.414, -50.9811, 1.33 ) }
    dend_15 { pt3dadd( 23.6094, 82.1618, -53.429, 0.33 ) }
    dend_15 { pt3dadd( 23.1881, 83.4815, -54.0175, 2.0 ) }
    dend_15 { pt3dadd( 21.6269, 87.637, -55.5053, 0.33 ) }
    dend_15 { pt3dadd( 21.3357, 88.1835, -55.7119, 0.67 ) }
    dend_15 { pt3dadd( 19.4555, 90.7458, -56.6242, 0.33 ) }
    dend_15 { pt3dadd( 19.0774, 91.1532, -56.8087, 1.33 ) }
    dend_15 { pt3dadd( 17.1255, 93.0214, -57.6081, 0.33 ) }
    dend_15 { pt3dadd( 16.5836, 93.5688, -57.8907, 2.0 ) }
    dend_15 { pt3dadd( 12.2937, 98.0031, -60.3119, 0.33 ) }
    dend_15 { pt3dadd( 11.2936, 99.0197, -61.1899, 2.0 ) }
    dend_15 { pt3dadd( 8.57099, 101.826, -63.955, 0.33 ) }
    dend_15 { pt3dadd( 7.88477, 102.528, -64.6889, 0.67 ) }
    dend_15 { pt3dadd( 4.30637, 106.049, -68.4065, 0.33 ) }
    dend_15 { pt3dadd( 3.2916, 107.047, -69.3911, 2.0 ) }
    dend_15 { pt3dadd( -3.92923, 114.6, -75.9941, 0.33 ) }
    dend_15 { pt3dadd( -5.68398, 116.418, -77.629, 0.67 ) }
    dend_15 { pt3dadd( -6.31058, 117.016, -78.2048, 0.67 ) }
    dend_15 { pt3dadd( -8.94472, 119.318, -80.5373, 0.33 ) }
    dend_15 { pt3dadd( -10.3955, 120.377, -81.579, 0.67 ) }
    dend_15 { pt3dadd( -12.4069, 122.016, -83.0849, 0.33 ) }
    dend_15 { pt3dadd( -14.7499, 124.1, -79.481, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 26/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 28.7775, 58.7666, -38.8752, 2.66 ) }
    dend_14 { pt3dadd( 29.5765, 60.1549, -42.9123, 2.66 ) }
    dend_14 { pt3dadd( 29.9892, 61.2993, -46.2948, 0.33 ) }
    dend_14 { pt3dadd( 30.1626, 62.593, -50.4433, 1.33 ) }
    dend_14 { pt3dadd( 30.2874, 64.5282, -56.714, 0.33 ) }
    dend_14 { pt3dadd( 30.4438, 66.5084, -63.2924, 2.0 ) }
    dend_14 { pt3dadd( 30.915, 70.7653, -77.4416, 0.33 ) }
    dend_14 { pt3dadd( 30.97, 71.5315, -80.0776, 1.33 ) }
    dend_14 { pt3dadd( 31.1105, 75.3899, -94.0905, 0.33 ) }
    dend_14 { pt3dadd( 31.1707, 76.0764, -96.7002, 2.0 ) }
    dend_14 { pt3dadd( 31.3006, 76.6252, -98.9747, 0.67 ) }
    dend_14 { pt3dadd( 31.6729, 77.206, -101.495, 0.33 ) }
    dend_14 { pt3dadd( 32.2399, 77.5263, -103.048, 2.0 ) }
    dend_14 { pt3dadd( 35.3079, 78.4665, -108.921, 0.33 ) }
    dend_14 { pt3dadd( 36.6137, 78.5529, -110.721, 1.33 ) }
    dend_14 { pt3dadd( 38.0916, 78.5171, -113.06, 0.33 ) }
    dend_14 { pt3dadd( 38.6992, 78.4634, -114.106, 0.67 ) }
    dend_14 { pt3dadd( 40.9319, 78.0456, -117.857, 0.33 ) }
    dend_14 { pt3dadd( 41.4448, 77.8989, -118.66, 2.0 ) }
    dend_14 { pt3dadd( 44.8881, 76.4381, -123.822, 0.33 ) }
    dend_14 { pt3dadd( 46.9814, 75.4122, -126.913, 0.67 ) }
    dend_14 { pt3dadd( 48.1165, 74.8458, -128.72, 0.33 ) }
    dend_14 { pt3dadd( 49.3568, 74.1926, -131.082, 2.0 ) }
    dend_14 { pt3dadd( 50.5725, 73.5139, -133.818, 0.33 ) }
    dend_14 { pt3dadd( 51.6473, 72.8313, -136.691, 1.33 ) }
    dend_14 { pt3dadd( 52.2888, 72.3148, -138.625, 0.67 ) }
    dend_14 { pt3dadd( 53.8372, 70.6576, -144.062, 2.0 ) }
    dend_14 { pt3dadd( 55.5698, 67.9292, -152.006, 1.33 ) }
    dend_14 { pt3dadd( 56.2951, 66.3843, -156.168, 0.33 ) }
    dend_14 { pt3dadd( 56.8439, 65.1548, -159.463, 2.66 ) }
    dend_14 { pt3dadd( 57.6981, 63.2015, -164.314, 0.33 ) }
    dend_14 { pt3dadd( 58.2171, 61.8892, -167.075, 1.33 ) }
    dend_14 { pt3dadd( 59.0442, 59.7876, -170.416, 0.33 ) }
    dend_14 { pt3dadd( 59.2676, 59.1916, -171.125, 2.0 ) }
    dend_14 { pt3dadd( 60.4316, 55.9115, -174.453, 0.33 ) }
    dend_14 { pt3dadd( 60.8509, 54.865, -175.393, 0.67 ) }
    dend_14 { pt3dadd( 61.5324, 52.9868, -176.817, 0.33 ) }
    dend_14 { pt3dadd( 61.9322, 51.922, -177.504, 0.67 ) }
    dend_14 { pt3dadd( 63.1856, 48.8974, -179.124, 0.33 ) }
    dend_14 { pt3dadd( 63.3343, 48.5083, -179.323, 2.0 ) }
    dend_14 { pt3dadd( 63.8228, 47.2956, -179.973, 1.33 ) }
    dend_14 { pt3dadd( 66.7647, 41.4921, -183.516, 0.33 ) }
    dend_14 { pt3dadd( 67.3728, 40.4247, -184.217, 0.67 ) }
    dend_14 { pt3dadd( 68.5438, 38.3604, -185.751, 0.33 ) }
    dend_14 { pt3dadd( 69.4916, 36.8221, -186.978, 0.67 ) }
    dend_14 { pt3dadd( 71.2371, 34.0247, -189.341, 0.33 ) }
    dend_14 { pt3dadd( 71.8739, 33.0174, -190.288, 0.67 ) }
    dend_14 { pt3dadd( 73.3604, 31.0128, -192.491, 0.33 ) }
    dend_14 { pt3dadd( 74.5502, 28.9275, -194.946, 0.67 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 75/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -29.7521, -110.435, -58.6218, 0.33 ) }
    apic_18 { pt3dadd( -29.6779, -114.801, -59.2692, 0.33 ) }
    apic_18 { pt3dadd( -29.7015, -115.859, -59.3625, 0.33 ) }
    apic_18 { pt3dadd( -29.8122, -118.646, -59.5399, 2.0 ) }
    apic_18 { pt3dadd( -30.1207, -123.159, -59.9169, 0.33 ) }
    apic_18 { pt3dadd( -30.4266, -126.848, -60.1112, 0.33 ) }
    apic_18 { pt3dadd( -30.5838, -128.845, -60.1812, 3.33 ) }
    apic_18 { pt3dadd( -31.0069, -132.804, -60.3115, 0.33 ) }
    apic_18 { pt3dadd( -31.0995, -133.507, -60.3335, 0.67 ) }
    apic_18 { pt3dadd( -31.8182, -138.066, -60.4365, 0.33 ) }
    apic_18 { pt3dadd( -32.401, -141.166, -60.7829, 2.0 ) }
    apic_18 { pt3dadd( -33.0997, -145.109, -61.4832, 0.33 ) }
    apic_18 { pt3dadd( -33.6093, -148.022, -62.1454, 2.66 ) }
    apic_18 { pt3dadd( -34.0438, -150.843, -62.8849, 0.33 ) }
    apic_18 { pt3dadd( -34.1289, -151.517, -63.0961, 0.67 ) }
    apic_18 { pt3dadd( -34.7619, -157.654, -65.2888, 0.33 ) }
    apic_18 { pt3dadd( -34.8507, -158.613, -65.6769, 0.67 ) }
    apic_18 { pt3dadd( -35.0056, -160.677, -66.4592, 0.33 ) }
    apic_18 { pt3dadd( -35.1251, -162.778, -67.2667, 2.66 ) }
    apic_18 { pt3dadd( -35.3947, -169.245, -69.8369, 0.33 ) }
    apic_18 { pt3dadd( -35.4176, -169.899, -70.1188, 0.67 ) }
    apic_18 { pt3dadd( -35.485, -171.536, -70.8216, 0.33 ) }
    apic_18 { pt3dadd( -35.6317, -174.358, -71.9587, 2.66 ) }
    apic_18 { pt3dadd( -35.9901, -179.644, -73.9745, 0.33 ) }
    apic_18 { pt3dadd( -36.1447, -181.801, -74.6333, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_18 { pt3dadd( -36.3538, -185.526, -75.4922, 0.67 ) }
    apic_18 { pt3dadd( -36.4188, -187.548, -75.8952, 2.0 ) }
    apic_18 { pt3dadd( -36.6456, -196.422, -77.39, 0.33 ) }
    apic_18 { pt3dadd( -36.6951, -198.143, -77.6181, 2.66 ) }
    apic_18 { pt3dadd( -36.7662, -203.138, -78.0509, 0.33 ) }
    apic_18 { pt3dadd( -36.8008, -205.205, -78.2137, 1.33 ) }
    apic_18 { pt3dadd( -36.8966, -212.218, -78.8495, 0.33 ) }
    apic_18 { pt3dadd( -36.9328, -214.442, -79.2255, 0.33 ) }
    apic_18 { pt3dadd( -36.9832, -215.984, -79.6132, 1.33 ) }
    apic_18 { pt3dadd( -37.1983, -219.923, -80.8021, 0.33 ) }
    apic_18 { pt3dadd( -37.5431, -223.644, -81.9888, 0.33 ) }
    apic_18 { pt3dadd( -38.0821, -226.605, -82.927, 2.66 ) }
    apic_18 { pt3dadd( -39.1769, -230.988, -84.2735, 0.33 ) }
    apic_18 { pt3dadd( -39.549, -232.347, -84.6589, 1.33 ) }
    apic_18 { pt3dadd( -40.55, -235.76, -85.503, 0.33 ) }
    apic_18 { pt3dadd( -41.551, -238.984, -86.1746, 2.0 ) }
    apic_18 { pt3dadd( -44.4175, -248.285, -87.8148, 0.33 ) }
    apic_18 { pt3dadd( -44.8567, -249.671, -88.075, 1.33 ) }
    apic_18 { pt3dadd( -46.3877, -254.307, -89.1631, 0.33 ) }
    apic_18 { pt3dadd( -46.9287, -255.785, -89.6897, 2.0 ) }
    apic_18 { pt3dadd( -48.7985, -260.424, -92.0117, 0.33 ) }
    apic_18 { pt3dadd( -49.2106, -261.295, -92.6162, 2.0 ) }
    apic_18 { pt3dadd( -51.5177, -265.325, -96.2546, 0.33 ) }
    apic_18 { pt3dadd( -52.6148, -267.03, -98.2405, 1.33 ) }
    apic_18 { pt3dadd( -54.467, -269.578, -101.961, 0.33 ) }
    apic_18 { pt3dadd( -54.619, -269.779, -102.227, 1.33 ) }
    apic_18 { pt3dadd( -56.3668, -272.097, -104.848, 0.33 ) }
    apic_18 { pt3dadd( -56.8439, -272.979, -105.406, 1.33 ) }
    apic_18 { pt3dadd( -59.3449, -279.255, -107.287, 0.33 ) }
    apic_18 { pt3dadd( -59.5787, -279.962, -107.392, 2.0 ) }
    apic_18 { pt3dadd( -62.0729, -288.381, -107.814, 0.33 ) }
    apic_18 { pt3dadd( -63.2412, -292.228, -107.809, 2.0 ) }
    apic_18 { pt3dadd( -65.6385, -300.094, -107.298, 0.33 ) }
    apic_18 { pt3dadd( -66.0972, -301.436, -107.147, 1.33 ) }
    apic_18 { pt3dadd( -66.9003, -303.522, -106.754, 0.33 ) }
    apic_18 { pt3dadd( -67.3923, -304.695, -106.568, 1.33 ) }
    apic_18 { pt3dadd( -68.955, -308.224, -106.199, 0.33 ) }
    apic_18 { pt3dadd( -69.1271, -308.539, -106.191, 1.33 ) }
    apic_18 { pt3dadd( -70.737, -310.535, -106.027, 0.33 ) }
    apic_18 { pt3dadd( -70.8796, -310.699, -106.01, 0.67 ) }
    apic_18 { pt3dadd( -72.5283, -312.496, -105.751, 0.33 ) }
    apic_18 { pt3dadd( -73.1868, -313.214, -105.617, 0.67 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 42/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -29.7521, -110.435, -58.6218, 0.67 ) }
    apic_17 { pt3dadd( -30.0525, -112.826, -59.8466, 0.67 ) }
    apic_17 { pt3dadd( -30.6349, -116.627, -61.9677, 0.33 ) }
    apic_17 { pt3dadd( -30.9148, -118.346, -62.9527, 2.66 ) }
    apic_17 { pt3dadd( -31.8325, -123.863, -66.0732, 0.33 ) }
    apic_17 { pt3dadd( -32.2813, -126.297, -67.535, 0.33 ) }
    apic_17 { pt3dadd( -32.7713, -129.281, -69.5565, 0.33 ) }
    apic_17 { pt3dadd( -33.1399, -131.504, -71.4727, 2.0 ) }
    apic_17 { pt3dadd( -33.2782, -132.133, -72.2357, 2.0 ) }
    apic_17 { pt3dadd( -33.6126, -133.071, -74.0255, 0.33 ) }
    apic_17 { pt3dadd( -34.1793, -134.296, -77.5479, 2.0 ) }
    apic_17 { pt3dadd( -34.81, -135.289, -81.6076, 0.67 ) }
    apic_17 { pt3dadd( -35.407, -136.327, -86.2859, 0.33 ) }
    apic_17 { pt3dadd( -35.7668, -137.239, -89.8376, 2.0 ) }
    apic_17 { pt3dadd( -36.4084, -139.211, -96.9134, 0.33 ) }
    apic_17 { pt3dadd( -36.5064, -139.575, -98.0772, 2.66 ) }
    apic_17 { pt3dadd( -37.0889, -142.89, -106.841, 0.33 ) }
    apic_17 { pt3dadd( -37.2917, -144.541, -110.198, 2.0 ) }
    apic_17 { pt3dadd( -37.2435, -148.165, -115.998, 0.33 ) }
    apic_17 { pt3dadd( -37.246, -148.581, -116.516, 2.0 ) }
    apic_17 { pt3dadd( -37.2044, -150.672, -118.683, 0.33 ) }
    apic_17 { pt3dadd( -37.2566, -152.061, -120.023, 2.0 ) }
    apic_17 { pt3dadd( -37.3709, -154.041, -121.803, 0.33 ) }
    apic_17 { pt3dadd( -37.3883, -155.184, -122.89, 0.67 ) }
    apic_17 { pt3dadd( -37.1063, -164.902, -132.063, 0.33 ) }
    apic_17 { pt3dadd( -36.9796, -166.501, -133.619, 2.66 ) }
    apic_17 { pt3dadd( -36.3063, -171.424, -138.602, 0.33 ) }
    apic_17 { pt3dadd( -36.1351, -172.201, -139.494, 2.0 ) }
    apic_17 { pt3dadd( -34.7922, -175.759, -143.987, 0.33 ) }
    apic_17 { pt3dadd( -34.6699, -175.939, -144.237, 0.67 ) }
    apic_17 { pt3dadd( -33.4529, -176.809, -145.624, 0.33 ) }
    apic_17 { pt3dadd( -32.5705, -177.295, -146.531, 2.0 ) }
    apic_17 { pt3dadd( -27.8349, -179.186, -150.581, 0.33 ) }
    apic_17 { pt3dadd( -26.2686, -179.778, -151.927, 2.0 ) }
    apic_17 { pt3dadd( -22.1016, -181.212, -155.53, 0.33 ) }
    apic_17 { pt3dadd( -20.8226, -181.665, -156.618, 1.33 ) }
    apic_17 { pt3dadd( -18.5781, -182.521, -158.473, 0.33 ) }
    apic_17 { pt3dadd( -17.2784, -183.039, -159.446, 1.33 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 80/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -27.6811, -86.077, -1.81977, 0.33 ) }
    apic_15 { pt3dadd( -28.659, -87.8975, 2.06437, 0.33 ) }
    apic_15 { pt3dadd( -28.7263, -88.0267, 2.3149, 0.67 ) }
    apic_15 { pt3dadd( -29.1461, -88.8899, 3.90056, 0.33 ) }
    apic_15 { pt3dadd( -30.4142, -91.1291, 7.77461, 2.66 ) }
    apic_15 { pt3dadd( -32.2043, -94.065, 12.5893, 0.33 ) }
    apic_15 { pt3dadd( -32.2983, -94.216, 12.8152, 1.33 ) }
    apic_15 { pt3dadd( -32.9427, -95.1707, 14.1109, 0.33 ) }
    apic_15 { pt3dadd( -33.2011, -95.5285, 14.5727, 1.33 ) }
    apic_15 { pt3dadd( -35.0512, -97.8458, 17.2573, 0.33 ) }
    apic_15 { pt3dadd( -35.3798, -98.281, 17.5954, 0.67 ) }
    apic_15 { pt3dadd( -36.867, -100.326, 18.6335, 0.33 ) }
    apic_15 { pt3dadd( -37.607, -101.279, 19.1354, 0.67 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 93/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -27.6811, -86.077, -1.81977, 0.33 ) }
    apic_14 { pt3dadd( -27.8452, -96.5597, 3.34618, 0.33 ) }
    apic_14 { pt3dadd( -28.2716, -100.985, 5.24704, 3.33 ) }
    apic_14 { pt3dadd( -28.8672, -105.461, 7.05004, 0.33 ) }
    apic_14 { pt3dadd( -29.3264, -107.776, 8.05921, 1.33 ) }
    apic_14 { pt3dadd( -30.9198, -114.359, 10.9953, 0.33 ) }
    apic_14 { pt3dadd( -31.5029, -116.657, 12.0255, 3.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_14 { pt3dadd( -32.6609, -119.897, 14.0653, 0.33 ) }
    apic_14 { pt3dadd( -33.1911, -121.228, 14.8945, 1.33 ) }
    apic_14 { pt3dadd( -34.2964, -123.706, 16.6676, 0.33 ) }
    apic_14 { pt3dadd( -34.5304, -124.272, 17.0569, 0.67 ) }
    apic_14 { pt3dadd( -35.0078, -125.557, 17.9035, 0.33 ) }
    apic_14 { pt3dadd( -36.2242, -129.216, 20.5934, 2.0 ) }
    apic_14 { pt3dadd( -37.1837, -132.508, 23.1115, 0.67 ) }
    apic_14 { pt3dadd( -37.422, -133.534, 23.853, 1.33 ) }
    apic_14 { pt3dadd( -37.7115, -135.136, 24.9064, 0.67 ) }
    apic_14 { pt3dadd( -38.3007, -138.195, 26.8316, 2.0 ) }
    apic_14 { pt3dadd( -38.8991, -140.702, 28.4239, 0.33 ) }
    apic_14 { pt3dadd( -39.0406, -141.258, 28.7567, 2.0 ) }
    apic_14 { pt3dadd( -39.6984, -143.673, 30.4292, 0.33 ) }
    apic_14 { pt3dadd( -39.9054, -144.381, 30.9761, 0.33 ) }
    apic_14 { pt3dadd( -40.5322, -146.141, 32.5071, 0.67 ) }
    apic_14 { pt3dadd( -41.6975, -148.978, 34.8721, 0.33 ) }
    apic_14 { pt3dadd( -42.2717, -150.158, 35.882, 1.33 ) }
    apic_14 { pt3dadd( -42.8768, -151.363, 36.9109, 0.33 ) }
    apic_14 { pt3dadd( -44.1486, -153.773, 38.8994, 0.67 ) }
    apic_14 { pt3dadd( -45.1993, -155.933, 40.5726, 1.33 ) }
    apic_14 { pt3dadd( -46.0885, -157.904, 41.8898, 0.33 ) }
    apic_14 { pt3dadd( -46.6127, -158.971, 42.4869, 0.33 ) }
    apic_14 { pt3dadd( -47.1549, -159.905, 42.9505, 0.67 ) }
    apic_14 { pt3dadd( -48.1634, -161.59, 43.5593, 0.33 ) }
    apic_14 { pt3dadd( -48.5044, -162.206, 43.7228, 0.67 ) }
    apic_14 { pt3dadd( -49.1623, -163.46, 44.0293, 0.33 ) }
    apic_14 { pt3dadd( -50.7206, -166.141, 44.9255, 0.67 ) }
    apic_14 { pt3dadd( -51.8542, -167.792, 45.4438, 0.33 ) }
    apic_14 { pt3dadd( -53.0015, -169.184, 45.8291, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.0581, 70.5559, -18.657, 0.33 ) }
    dend_19 { pt3dadd( 17.8358, 72.002, -20.19, 0.33 ) }
    dend_19 { pt3dadd( 16.7676, 72.5478, -21.0678, 1.33 ) }
    dend_19 { pt3dadd( 12.8862, 74.8647, -25.5213, 0.33 ) }
    dend_19 { pt3dadd( 9.95167, 76.804, -28.5616, 2.66 ) }
    dend_19 { pt3dadd( 5.7732, 79.9663, -32.6904, 0.33 ) }
    dend_19 { pt3dadd( 4.75609, 80.8422, -33.6749, 0.67 ) }
    dend_19 { pt3dadd( 0.722037, 86.0668, -38.0646, 0.33 ) }
    dend_19 { pt3dadd( 0.12757, 88.3123, -38.5349, 2.0 ) }
    dend_19 { pt3dadd( 0.529155, 101.343, -36.306, 0.33 ) }
    dend_19 { pt3dadd( 0.957161, 104.66, -35.5247, 2.66 ) }
    dend_19 { pt3dadd( 1.14682, 105.871, -35.1693, 2.66 ) }
    dend_19 { pt3dadd( 1.71732, 111.617, -33.0826, 0.67 ) }
    dend_19 { pt3dadd( 1.75724, 113.364, -32.335, 0.33 ) }
    dend_19 { pt3dadd( 1.68586, 115.069, -31.8724, 0.33 ) }
    dend_19 { pt3dadd( 1.59521, 115.838, -31.9272, 1.33 ) }
    dend_19 { pt3dadd( 0.975402, 118.453, -31.984, 0.33 ) }
    dend_19 { pt3dadd( 0.0561395, 120.951, -32.1559, 0.33 ) }
    dend_19 { pt3dadd( -0.614533, 122.167, -32.4125, 0.67 ) }
    dend_19 { pt3dadd( -1.56968, 123.648, -32.7539, 0.33 ) }
    dend_19 { pt3dadd( -2.41357, 124.743, -33.023, 0.67 ) }
    dend_19 { pt3dadd( -4.01863, 126.673, -33.4905, 0.33 ) }
    dend_19 { pt3dadd( -4.70762, 127.523, -33.6822, 1.33 ) }
    dend_19 { pt3dadd( -6.46171, 129.724, -34.1775, 0.33 ) }
    dend_19 { pt3dadd( -8.25638, 131.769, -34.651, 3.33 ) }
    dend_19 { pt3dadd( -10.8977, 134.531, -35.2872, 0.33 ) }
    dend_19 { pt3dadd( -11.8028, 135.405, -35.572, 1.33 ) }
    dend_19 { pt3dadd( -13.3691, 136.893, -36.1761, 0.33 ) }
    dend_19 { pt3dadd( -14.4357, 137.969, -36.6439, 0.33 ) }
    dend_19 { pt3dadd( -14.6599, 138.222, -36.7504, 0.67 ) }
    dend_19 { pt3dadd( -15.6271, 139.543, -37.438, 0.33 ) }
    dend_19 { pt3dadd( -17.4493, 142.873, -39.0144, 1.33 ) }
    dend_19 { pt3dadd( -18.1903, 144.316, -39.7961, 0.33 ) }
    dend_19 { pt3dadd( -19.3605, 146.584, -41.0594, 1.33 ) }
    dend_19 { pt3dadd( -20.4319, 148.767, -42.2047, 0.33 ) }
    dend_19 { pt3dadd( -21.9445, 151.737, -43.8342, 2.66 ) }
    dend_19 { pt3dadd( -23.5963, 155.072, -45.6297, 0.33 ) }
    dend_19 { pt3dadd( -25.1952, 158.279, -47.2264, 0.67 ) }
    dend_19 { pt3dadd( -26.4881, 160.717, -48.4961, 0.33 ) }
    dend_19 { pt3dadd( -27.7069, 162.847, -49.6191, 2.0 ) }
    dend_19 { pt3dadd( -29.7864, 166.467, -51.6508, 0.33 ) }
    dend_19 { pt3dadd( -30.9111, 168.379, -52.8063, 0.67 ) }
    dend_19 { pt3dadd( -31.754, 169.965, -53.8284, 0.33 ) }
    dend_19 { pt3dadd( -32.0227, 170.621, -54.1817, 0.67 ) }
    dend_19 { pt3dadd( -32.5399, 172.406, -55.0613, 0.33 ) }
    dend_19 { pt3dadd( -33.5963, 176.781, -56.9514, 2.0 ) }
    dend_19 { pt3dadd( -34.3636, 180.537, -58.3094, 0.33 ) }
    dend_19 { pt3dadd( -34.9334, 183.654, -59.3618, 0.33 ) }
    dend_19 { pt3dadd( -35.4248, 186.967, -60.5372, 2.66 ) }
    dend_19 { pt3dadd( -35.9534, 191.004, -61.9353, 0.67 ) }
    dend_19 { pt3dadd( -36.2656, 193.566, -62.8803, 0.33 ) }
    dend_19 { pt3dadd( -36.3737, 194.23, -63.1104, 0.67 ) }
    dend_19 { pt3dadd( -36.7105, 195.975, -63.7521, 0.33 ) }
    dend_19 { pt3dadd( -37.5528, 199.656, -65.5679, 2.0 ) }
    dend_19 { pt3dadd( -38.1144, 202.098, -66.912, 0.33 ) }
    dend_19 { pt3dadd( -38.6734, 204.957, -68.686, 2.0 ) }
    dend_19 { pt3dadd( -39.3014, 209.359, -71.5064, 0.33 ) }
    dend_19 { pt3dadd( -39.5658, 211.453, -72.8102, 2.0 ) }
    dend_19 { pt3dadd( -40.0638, 216.324, -75.6325, 0.33 ) }
    dend_19 { pt3dadd( -40.1877, 218.486, -76.7815, 1.33 ) }
    dend_19 { pt3dadd( -40.2743, 222.919, -79.1413, 0.33 ) }
    dend_19 { pt3dadd( -40.2413, 224.385, -79.744, 0.67 ) }
    dend_19 { pt3dadd( -40.1242, 226.447, -80.4557, 0.33 ) }
    dend_19 { pt3dadd( -39.9036, 229.287, -81.0109, 2.66 ) }
    dend_19 { pt3dadd( -39.451, 234.302, -81.6719, 0.33 ) }
    dend_19 { pt3dadd( -39.2501, 236.62, -81.9211, 2.0 ) }
    dend_19 { pt3dadd( -38.7442, 242.881, -82.233, 0.33 ) }
    dend_19 { pt3dadd( -38.6765, 243.666, -82.2682, 0.67 ) }
    dend_19 { pt3dadd( -37.4688, 255.056, -82.6653, 0.33 ) }
    dend_19 { pt3dadd( -37.0987, 258.157, -82.6753, 1.33 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 21.0581, 70.5559, -18.657, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 21.9971, 71.1946, -18.4962, 1.33 ) }
    dend_18 { pt3dadd( 23.0892, 71.9562, -18.3874, 0.33 ) }
    dend_18 { pt3dadd( 25.631, 73.5922, -17.8774, 1.33 ) }
    dend_18 { pt3dadd( 31.0097, 76.9926, -16.5756, 0.33 ) }
    dend_18 { pt3dadd( 32.629, 78.0102, -16.16, 2.0 ) }
    dend_18 { pt3dadd( 36.0596, 80.1851, -15.258, 0.33 ) }
    dend_18 { pt3dadd( 37.1533, 80.836, -14.8995, 2.0 ) }
    dend_18 { pt3dadd( 40.5525, 82.8242, -13.5305, 0.33 ) }
    dend_18 { pt3dadd( 41.0216, 83.099, -13.2562, 0.67 ) }
    dend_18 { pt3dadd( 41.7458, 83.5351, -12.7815, 0.33 ) }
    dend_18 { pt3dadd( 42.1584, 83.8061, -12.4348, 0.67 ) }
    dend_18 { pt3dadd( 44.876, 85.786, -9.64428, 0.33 ) }
    dend_18 { pt3dadd( 45.796, 86.5811, -8.62124, 2.0 ) }
    dend_18 { pt3dadd( 49.1208, 89.855, -4.80374, 0.33 ) }
    dend_18 { pt3dadd( 49.6476, 90.3946, -4.19219, 1.33 ) }
    dend_18 { pt3dadd( 51.8764, 92.7905, -1.56486, 0.33 ) }
    dend_18 { pt3dadd( 53.5549, 94.733, 0.373638, 2.66 ) }
    dend_18 { pt3dadd( 55.3951, 97.1671, 2.42389, 0.33 ) }
    dend_18 { pt3dadd( 55.8495, 97.8573, 2.89244, 0.67 ) }
    dend_18 { pt3dadd( 56.3492, 98.7401, 3.28149, 0.33 ) }
    dend_18 { pt3dadd( 56.53, 99.0545, 3.3819, 0.67 ) }
    dend_18 { pt3dadd( 57.6087, 100.871, 3.56211, 0.33 ) }
    dend_18 { pt3dadd( 58.2226, 101.867, 3.50334, 2.0 ) }
    dend_18 { pt3dadd( 59.6068, 104.142, 3.20061, 0.33 ) }
    dend_18 { pt3dadd( 60.3227, 105.348, 3.04544, 0.33 ) }
    dend_18 { pt3dadd( 60.6653, 105.998, 2.97155, 0.67 ) }
    dend_18 { pt3dadd( 61.4007, 107.499, 2.81786, 0.33 ) }
    dend_18 { pt3dadd( 62.0027, 108.842, 2.75539, 2.0 ) }
    dend_18 { pt3dadd( 62.7424, 110.692, 2.75419, 0.33 ) }
    dend_18 { pt3dadd( 62.9227, 111.239, 2.77716, 0.67 ) }
    dend_18 { pt3dadd( 63.5841, 114.02, 2.97796, 0.33 ) }
    dend_18 { pt3dadd( 63.8383, 115.384, 3.09268, 2.0 ) }
    dend_18 { pt3dadd( 64.1404, 117.317, 3.26864, 0.33 ) }
    dend_18 { pt3dadd( 64.315, 118.33, 3.34734, 0.67 ) }
    dend_18 { pt3dadd( 64.6275, 119.613, 3.32931, 0.33 ) }
    dend_18 { pt3dadd( 65.0518, 120.839, 3.18913, 1.33 ) }
    dend_18 { pt3dadd( 66.0953, 123.143, 2.70195, 0.33 ) }
    dend_18 { pt3dadd( 66.6129, 124.08, 2.42507, 2.0 ) }
    dend_18 { pt3dadd( 68.0049, 126.18, 1.62815, 0.33 ) }
    dend_18 { pt3dadd( 69.9319, 128.558, 0.581392, 2.0 ) }
    dend_18 { pt3dadd( 71.6079, 130.41, -0.322904, 0.33 ) }
    dend_18 { pt3dadd( 71.7841, 130.585, -0.41865, 0.67 ) }
    dend_18 { pt3dadd( 72.7808, 131.47, -0.9732, 0.33 ) }
    dend_18 { pt3dadd( 73.4196, 132.006, -1.3282, 2.0 ) }
    dend_18 { pt3dadd( 75.5231, 133.565, -2.40695, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_40, dend_25, dend_0, apic_2, apic_1, dend_52, dend_41, dend_33, dend_26, dend_10, dend_1, apic_4, apic_3, dend_49, dend_42, dend_35, dend_34, dend_28, dend_27, dend_22, dend_11, dend_5, dend_2, apic_10, apic_5, dend_51, dend_50, dend_44, dend_43, dend_37, dend_36, dend_30, dend_29, dend_24, dend_23, dend_21, dend_12, dend_7, dend_6, dend_4, dend_3, apic_12, apic_11, apic_7, apic_6, dend_48, dend_45, dend_39, dend_38, dend_32, dend_31, dend_16, dend_13, dend_9, dend_8, apic_16, apic_13, apic_9, apic_8, dend_47, dend_46, dend_20, dend_17, dend_15, dend_14, apic_18, apic_17, apic_15, apic_14, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_40, dend_25, dend_0, apic_2, apic_1, dend_52, dend_41, dend_33, dend_26, dend_10, dend_1, apic_4, apic_3, dend_49, dend_42, dend_35, dend_34, dend_28, dend_27, dend_22, dend_11, dend_5, dend_2, apic_10, apic_5, dend_51, dend_50, dend_44, dend_43, dend_37, dend_36, dend_30, dend_29, dend_24, dend_23, dend_21, dend_12, dend_7, dend_6, dend_4, dend_3, apic_12, apic_11, apic_7, apic_6, dend_48, dend_45, dend_39, dend_38, dend_32, dend_31, dend_16, dend_13, dend_9, dend_8, apic_16, apic_13, apic_9, apic_8, dend_47, dend_46, dend_20, dend_17, dend_15, dend_14, apic_18, apic_17, apic_15, apic_14, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_52 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_49 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    apic_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_43 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_24 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_48 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_45 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_39 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_38 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_8 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_16 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    apic_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_47 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_46 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_20 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_14 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_18 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_17 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_73 = new SectionList()
    apic_14 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_19 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_18 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    apic_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_25 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_10 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    apic_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_35 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_16 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_13 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_17 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_61 = new SectionList()
    apic_13 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_72 = new SectionList()
    apic_15 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_44 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_63 = new SectionList()
    apic_8 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_9 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_31 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_0, axon_0, axon_0, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_5 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_1 nseg = 11
    dend_52 nseg = 7
    dend_1 nseg = 3
    apic_3 nseg = 9
    dend_49 nseg = 5
    dend_42 nseg = 5
    dend_34 nseg = 9
    dend_27 nseg = 11
    dend_2 nseg = 3
    apic_5 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_43 nseg = 3
    dend_36 nseg = 9
    dend_30 nseg = 11
    dend_29 nseg = 13
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_21 nseg = 3
    dend_7 nseg = 7
    dend_3 nseg = 5
    apic_11 nseg = 9
    apic_7 nseg = 5
    apic_6 nseg = 5
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_8 nseg = 5
    apic_16 nseg = 3
    apic_9 nseg = 3
    dend_47 nseg = 7
    dend_46 nseg = 7
    dend_20 nseg = 9
    dend_15 nseg = 5
    dend_14 nseg = 9
    apic_18 nseg = 11
    apic_17 nseg = 7
    apic_14 nseg = 5
    dend_19 nseg = 11
    dend_18 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L4_LBC_28153c03c4_0_0


