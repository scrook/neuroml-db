// Cell: cNAC187_L6_BP_368ba2d07d_0_0
/*
{
  "id" : "cNAC187_L6_BP_368ba2d07d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.461, 8.66468, 2.92194, 0.83", "-6.83041, 11.2763, 3.43009, 1.11", "-8.81703, 12.815, 3.69442, 0.83", "-10.7471, 14.297, 3.93126, 0.83", "-11.8899, 15.1421, 4.06104, 1.11", "-15.4685, 17.7828, 4.47699, 1.11", "-21.8691, 22.3038, 5.21227, 0.83", "-24.175, 23.8705, 5.45507, 0.83", "-26.0011, 25.0743, 5.60589, 0.83", "-27.7817, 26.2673, 5.73643, 0.83", "-29.2313, 27.2506, 5.80687, 0.55", "-30.3208, 27.9163, 5.87836, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.52217, 6.2068, -6.20117, 0.55", "7.08023, 6.76016, -6.77243, 0.55", "8.56458, 6.89985, -7.52833, 0.83", "10.9138, 7.04851, -8.93247, 0.55", "12.0478, 7.12027, -9.61027, 1.38", "14.8362, 7.29671, -11.2768, 0.55", "16.0237, 7.23696, -12.072, 0.83", "22.1669, 6.14122, -16.5399, 0.55", "22.7612, 5.99387, -17.0314, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.683872, -10.465, 3.22463, 1.11", "-0.73173, -14.6875, 4.73837, 1.11", "-0.75122, -16.4071, 5.35486, 0.83", "-0.777113, -18.6918, 6.17391, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.900844, 11.0748, -1.42455, 1.11", "0.963997, 14.1363, -1.3992, 1.11", "1.03394, 19.1315, -1.17808, 1.38", "1.04207, 19.4098, -1.16028, 1.38", "1.34488, 22.8575, -0.882799, 0.83", "1.79047, 26.5063, -0.379997, 0.83", "2.58789, 30.6338, 0.720018, 0.83", "3.06102, 32.2033, 1.34891, 0.83", "3.5417, 33.343, 1.93394, 1.11", "4.97986, 36.1249, 3.46516, 0.55", "6.65576, 39.0326, 5.29102, 0.83", "8.90034, 42.0343, 7.39965, 0.55", "10.0628, 43.2859, 8.37044, 0.83", "11.6747, 44.9824, 9.86542, 0.55", "13.6545, 47.1391, 11.8698, 0.55", "16.39, 50.3803, 14.9038, 0.55", "19.4009, 54.0823, 18.2526, 0.55", "21.2617, 56.484, 20.717, 0.55", "23.496, 59.5196, 24.1585, 0.55", "23.9544, 60.1289, 24.9347, 0.83", "25.1512, 61.7391, 27.1152, 0.55", "26.1728, 62.9961, 28.835, 0.83", "28.5015, 66.4195, 32.9032, 0.55", "29.4132, 67.67, 34.1139, 0.83", "30.3022, 68.5956, 34.9615, 0.55", "31.2046, 69.395, 35.6334, 0.83", "33.2363, 70.8883, 36.8899, 0.83", "35.9491, 72.9191, 38.2912, 0.83", "37.6313, 74.2585, 38.9569, 0.55", "38.9104, 75.4139, 39.4716, 0.55", "42.2697, 78.4001, 40.7672, 0.83", "44.4491, 80.3153, 41.5109, 0.55", "47.7745, 83.1232, 42.4977, 0.55", "50.8389, 85.4825, 43.2742, 0.55", "53.59, 87.4841, 43.892, 0.55", "57.0867, 89.8341, 44.5089, 0.55", "59.2369, 90.994, 44.815, 0.55", "60.7245, 91.651, 44.8444, 0.55", "62.7249, 92.1588, 44.7164, 0.55", "65.7443, 92.4324, 44.2841, 0.55", "67.639, 92.3676, 43.9439, 0.55", "70.391, 92.1998, 43.6365, 0.55", "75.5853, 92.0449, 43.5101, 0.55", "79.6294, 92.1109, 43.6976, 0.55", "83.8865, 92.3855, 44.1509, 0.55", "86.5932, 92.6561, 44.6578, 0.55", "93.566, 94.0068, 46.4417, 0.55", "97.6539, 95.1321, 47.8136, 0.55", "100.686, 96.1844, 49.138, 0.55", "102.515, 97.1442, 50.0164, 0.55", "104.628, 98.5586, 51.0227, 0.55", "108.23, 101.334, 52.3878, 0.55", "109.067, 102.001, 52.581, 0.55", "111.486, 103.788, 52.9716, 0.55", "113.705, 105.685, 53.3211, 0.83", "114.917, 106.736, 53.492, 0.55", "116.735, 108.535, 53.6732, 0.83", "126.055, 118.145, 57.2173, 0.83", "134.166, 129.109, 59.6141, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-30.3208, 27.9163, 5.87836, 0.55", "-31.7907, 28.5332, 5.24315, 0.55", "-33.3892, 29.2041, 4.55243, 0.55", "-35.3181, 30.0136, 3.71887, 0.55", "-36.9109, 30.6821, 3.03058, 0.83", "-38.2457, 31.2422, 2.4538, 0.55", "-40.7232, 32.282, 1.3832, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-30.3208, 27.9163, 5.87836, 0.55", "-33.2502, 28.3303, 5.88568, 0.55", "-36.3193, 28.7242, 6.20813, 0.55", "-39.787, 29.1787, 6.65794, 0.55", "-44.7401, 29.8564, 7.77193, 0.55", "-48.8362, 30.3495, 9.01769, 0.55", "-53.102, 30.8291, 10.5207, 0.55", "-57.146, 31.0787, 12.4721, 0.55", "-60.5596, 30.9946, 14.559, 0.55", "-64.7276, 30.6488, 17.6945, 0.55", "-66.4929, 30.3974, 19.3552, 0.55", "-68.3852, 30.1177, 21.2444, 0.55", "-71.7353, 29.3104, 24.4513, 0.55", "-73.5647, 28.8362, 25.8425, 0.55", "-75.4799, 28.2728, 27.2974, 0.55", "-77.7959, 27.5938, 28.7705, 0.55", "-80.3263, 26.9006, 30.2885, 0.55", "-83.9497, 25.8882, 32.3723, 0.55", "-88.8728, 24.8083, 34.6388, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.7612, 5.99387, -17.0314, 0.55", "28.7102, 7.21186, -18.2881, 0.55", "32.1127, 7.77933, -19.5126, 0.55", "35.4577, 8.1968, -20.7891, 0.55", "37.7358, 8.39139, -21.6726, 0.55", "41.0595, 8.59555, -22.9485, 0.55", "47.939, 8.91467, -25.8283, 0.55", "55.7282, 9.29647, -29.6231, 0.55", "59.4803, 9.28016, -31.7573, 0.55", "61.4828, 9.23923, -33.0404, 0.55", "63.6775, 9.21714, -34.5362, 0.55", "67.5852, 9.0649, -37.2046, 0.55", "68.9963, 8.93137, -38.233, 0.55", "74.9726, 8.5811, -43.0389, 0.55", "79.2014, 8.44488, -46.7521, 0.55", "81.6386, 8.42392, -48.9521, 0.55", "84.0677, 8.38089, -51.1473, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.7612, 5.99387, -17.0314, 0.83", "24.5688, 7.18899, -17.0814, 0.83", "25.6027, 7.86958, -17.1585, 0.55", "27.1249, 8.9015, -17.406, 0.83", "28.1479, 9.62117, -17.6051, 0.55", "29.5571, 10.6531, -17.8596, 0.83", "31.2499, 11.9302, -18.1023, 0.55", "32.1033, 12.5092, -18.1861, 0.55", "34.0747, 13.5723, -18.2274, 0.83", "35.8689, 14.3247, -18.0193, 0.55", "36.8709, 14.7378, -17.8044, 0.83", "38.3712, 15.3968, -17.3213, 0.55", "40.5213, 16.3921, -16.3459, 0.55", "43.5102, 17.6215, -14.8284, 0.55", "46.3611, 18.6956, -13.1755, 0.55", "48.62, 19.5232, -11.8234, 0.55", "52.3431, 20.906, -9.57485, 0.55", "55.0635, 22.0, -7.8708, 0.55", "56.7001, 22.804, -6.78441, 0.55", "59.7023, 24.6038, -4.76517, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.777113, -18.6918, 6.17391, 0.83", "-0.929478, -20.6748, 6.09214, 0.83", "-1.07793, -22.6068, 6.01248, 0.83", "-1.24366, -24.7639, 5.92353, 0.83", "-1.33021, -25.8903, 5.87709, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.777113, -18.6918, 6.17391, 0.55", "-0.343141, -20.1102, 7.27697, 0.55", "-4.05888E-4, -21.8578, 8.67471, 0.55", "0.0808255, -24.1697, 10.5394, 0.55", "0.0454197, -25.0722, 11.2779, 0.83", "-0.299351, -27.3877, 13.3893, 0.55", "-0.578272, -28.5894, 14.4859, 0.55", "-1.18595, -30.9292, 16.7081, 0.83", "-1.75422, -32.6724, 18.4503, 0.55", "-2.34469, -34.1182, 19.8446, 0.55", "-3.51497, -36.8601, 22.4264, 0.55", "-4.44131, -39.0454, 24.4596, 0.55", "-5.15333, -40.7951, 26.1193, 0.55", "-5.79973, -42.6468, 27.841, 0.28", "-6.00058, -43.4142, 28.5397, 0.55", "-6.32193, -44.8297, 29.7572, 0.28", "-6.4702, -47.0217, 31.369, 0.55", "-8.77308, -54.4209, 36.8302, 0.55", "-11.3936, -61.2754, 42.8322, 0.55", "-13.8636, -66.9003, 50.0527, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-40.7232, 32.282, 1.3832, 0.55", "-43.7539, 32.8406, 3.6769, 0.55", "-44.9924, 33.0305, 4.82597, 0.83", "-46.3959, 33.21, 6.39971, 0.55", "-47.4486, 33.3673, 7.7168, 0.83", "-50.2196, 33.8917, 11.1192, 0.55", "-51.2682, 34.1129, 12.4136, 0.28", "-52.9853, 34.5364, 14.7417, 0.55", "-55.2926, 35.1188, 17.8498, 0.55", "-57.0628, 35.5441, 20.1132, 0.55", "-59.4444, 36.0954, 23.0473, 0.28", "-60.0801, 36.2281, 23.7208, 0.55", "-61.4078, 36.5106, 25.0546, 0.28", "-62.3291, 36.7119, 25.8595, 0.55", "-64.2432, 37.0749, 27.3238, 0.28", "-65.375, 37.2078, 28.1313, 0.55", "-67.3591, 37.2853, 29.6015, 0.28", "-68.7008, 37.3183, 30.5396, 0.55", "-76.0895, 37.5207, 40.3184, 0.55", "-82.5371, 36.7084, 50.7121, 0.55", "-88.6148, 34.7624, 61.178, 0.55", "-94.6748, 31.3349, 71.2669, 0.55", "-99.2071, 28.6573, 82.3371, 0.55", "-104.732, 26.3133, 93.025, 0.55", "-110.428, 25.9982, 103.874, 0.55", "-116.067, 24.7009, 114.681, 0.55", "-121.464, 24.2685, 125.678, 0.55", "-126.239, 23.7362, 136.956, 0.55", "-129.707, 21.9353, 148.574, 0.55", "-133.306, 21.2842, 160.274, 0.55", "-137.066, 19.3647, 171.782, 0.55", "-139.322, 17.0543, 183.607, 0.55", "-139.481, 15.7487, 195.794, 0.55", "-139.587, 12.1123, 207.5, 0.55", "-137.947, 8.31027, 219.037, 0.55", "-136.938, 5.02456, 230.804, 0.55", "-137.233, 2.59893, 242.816, 0.55", "-140.157, 1.94389, 254.702, 0.55", "-141.965, -0.0100064, 266.667, 0.55", "-141.473, 0.243418, 278.913, 0.55", "-142.997, 1.28581, 291.031, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.7232, 32.282, 1.3832, 0.55", "-42.2056, 32.6404, -0.119677, 0.55", "-43.4012, 33.0498, -1.83621, 0.55", "-44.5451, 33.6047, -3.6783, 0.55", "-45.2613, 33.9522, -4.83179, 0.55", "-46.5679, 34.586, -6.93589, 0.83", "-47.5238, 35.0498, -8.47528, 0.55", "-48.6672, 35.6691, -10.753, 0.83", "-49.1362, 36.1304, -12.0617, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-88.8728, 24.8083, 34.6388, 0.28", "-89.7923, 23.3992, 34.2504, 0.28", "-90.2314, 22.8014, 34.0327, 0.28", "-90.8106, 21.9579, 33.6887, 0.55", "-91.2916, 21.2142, 33.3912, 0.28", "-92.0029, 20.0787, 32.9516, 0.55", "-93.9916, 16.7302, 31.7106, 0.28", "-94.655, 15.5654, 31.1738, 0.55", "-95.6679, 13.7783, 30.2818, 0.28", "-96.2579, 12.7143, 29.6955, 0.55", "-96.6668, 11.9832, 29.2726, 0.28", "-97.1328, 11.1432, 28.7944, 0.55", "-98.5601, 8.32585, 27.2638, 0.28", "-99.0086, 7.47792, 26.7696, 0.55", "-99.787, 6.20144, 25.8759, 0.28", "-100.409, 5.39838, 25.234, 0.28", "-100.948, 4.87037, 24.7909, 0.55", "-102.78, 3.39901, 23.6143, 0.28", "-103.62, 2.80664, 23.1585, 0.55", "-105.671, 1.47507, 22.0321, 0.28", "-107.706, 0.31123, 21.0149, 0.28", "-109.905, -0.778799, 19.9921, 0.28", "-110.901, -1.18057, 19.6119, 0.55", "-115.922, -6.12074, 16.6205, 0.55", "-121.346, -11.284, 15.0446, 0.55", "-126.739, -16.0206, 12.3897, 0.55", "-132.282, -20.2028, 9.17218, 0.55", "-137.908, -23.7588, 5.39532, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-88.8728, 24.8083, 34.6388, 0.55", "-89.707, 24.7353, 34.9859, 0.55", "-91.9977, 24.6675, 36.2563, 0.55", "-92.8452, 24.6407, 36.7884, 0.55", "-94.8214, 24.5304, 38.0967, 0.55", "-97.8977, 24.3238, 39.9469, 0.55", "-99.5107, 24.2534, 40.8586, 0.28", "-102.022, 24.0662, 42.2525, 0.55", "-103.895, 23.858, 43.238, 0.55", "-104.684, 23.7656, 43.658, 0.28", "-109.422, 23.2059, 46.1725, 0.55", "-111.649, 22.7801, 47.2584, 0.28", "-114.686, 22.1145, 48.5556, 0.28", "-117.344, 21.5099, 49.5093, 0.55", "-127.494, 21.6228, 54.7464, 0.55", "-137.005, 21.987, 61.06, 0.55", "-145.532, 21.7878, 68.6573, 0.55", "-153.89, 23.7023, 76.2029, 0.55", "-160.446, 26.1334, 85.2347, 0.55", "-165.213, 29.8361, 94.9315, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "84.0677, 8.38089, -51.1473, 0.55", "88.5183, 9.97001, -54.0546, 0.55", "89.9057, 10.4746, -55.0739, 0.55", "91.6216, 11.0527, -56.3624, 0.55", "94.7297, 12.1813, -58.8618, 0.55", "97.9278, 13.3029, -61.6046, 0.55", "99.4451, 13.7341, -62.9793, 0.83", "100.664, 14.0755, -64.2375, 0.55", "101.549, 14.3241, -65.3005, 0.83", "103.567, 14.7647, -68.1667, 0.55", "105.164, 14.9981, -70.6327, 0.55", "106.993, 15.1944, -73.3875, 0.55", "109.056, 15.4948, -76.4585, 0.55", "110.426, 15.6893, -78.5726, 0.55", "111.971, 15.9374, -81.0095, 0.55", "113.33, 16.258, -83.1775, 0.55", "114.221, 16.6056, -84.6029, 0.55", "115.35, 17.5802, -87.3054, 0.55", "115.943, 18.1798, -89.0055, 0.55", "116.396, 19.0, -91.2577, 0.55", "116.944, 20.3546, -95.092, 0.55", "117.039, 20.6397, -95.9709, 0.28", "118.27, 23.973, -106.744, 0.28", "118.727, 24.9383, -109.912, 0.83", "120.537, 28.117, -121.307, 0.83", "121.43, 29.3875, -126.735, 0.83", "121.863, 29.8001, -128.999, 0.55", "122.395, 30.1562, -131.233, 0.55", "124.028, 30.5104, -135.557, 0.55", "125.846, 30.657, -139.453, 0.28", "126.432, 30.3542, -139.873, 0.55", "127.749, 29.4553, -140.268, 0.28", "128.587, 28.8732, -140.357, 0.55", "129.453, 28.207, -140.383, 0.28", "130.515, 27.4231, -140.336, 0.55", "132.144, 26.4349, -140.378, 0.28", "133.436, 25.6337, -140.475, 0.55", "134.909, 24.9035, -140.634, 0.28", "136.919, 24.027, -141.01, 0.55", "139.198, 23.1724, -141.526, 0.55", "141.215, 22.5223, -142.086, 0.28", "144.021, 21.7377, -142.987, 0.55", "148.94, 20.8053, -144.931, 0.55", "151.163, 20.6425, -145.96, 0.55", "152.137, 20.6643, -146.469, 0.83", "154.001, 20.8136, -147.576, 0.55", "155.316, 21.0047, -148.385, 0.83", "158.89, 21.6135, -150.545, 0.55", "161.018, 21.9015, -151.99, 0.28", "161.891, 21.9217, -152.543, 0.55", "164.19, 21.6435, -153.95, 0.28", "164.964, 21.4517, -154.437, 0.55", "166.511, 20.8141, -155.269, 0.28", "168.013, 19.8505, -155.947, 0.55", "170.957, 17.3874, -156.879, 0.28", "172.283, 16.092, -157.197, 0.55", "174.197, 13.9777, -157.635, 0.28", "176.617, 11.2516, -158.085, 0.55", "178.379, 9.28403, -158.364, 0.55", "181.475, 5.93575, -158.724, 0.28", "182.777, 4.69638, -158.945, 0.55", "185.088, 2.85917, -159.5, 0.28", "187.477, 1.30582, -160.103, 0.55", "188.857, 0.710227, -160.521, 0.28", "190.176, 0.379075, -160.89, 0.55", "193.996, -0.164686, -162.121, 0.28", "196.797, -0.376532, -162.934, 0.28", "199.3, -0.402359, -163.577, 0.55", "202.094, -0.294935, -164.362, 0.28", "202.813, -0.24769, -164.517, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "84.0677, 8.38089, -51.1473, 0.55", "84.1148, 7.43872, -52.5814, 0.55", "84.0515, 6.62586, -53.71, 0.28", "83.9921, 5.84222, -54.66, 0.55", "83.9813, 4.16814, -56.7041, 0.28", "83.9768, 4.07216, -56.8509, 0.55", "83.974, 3.59184, -57.6782, 0.28", "83.916, 3.24752, -58.4475, 0.55", "83.8194, 2.92684, -59.3149, 0.28", "83.6622, 2.51196, -60.5332, 0.55", "83.2659, 1.45241, -63.5536, 0.55", "82.8818, 0.506579, -66.3374, 0.55", "82.5591, -0.245374, -68.563, 0.55", "82.213, -0.99112, -70.7219, 0.55", "82.1222, -1.19106, -71.2635, 0.28", "82.0374, -1.42272, -71.8097, 0.55", "81.9757, -1.77867, -72.52, 0.28", "81.9736, -2.48082, -73.7123, 0.55", "82.1432, -4.00084, -75.7102, 0.55", "82.2437, -4.86303, -76.6938, 0.28", "82.2813, -5.70554, -77.7329, 0.55", "82.2198, -6.83744, -79.2319, 0.28", "82.0896, -7.72225, -80.4614, 0.55", "81.8147, -9.02779, -82.2955, 0.28", "81.5442, -10.4076, -84.1383, 0.55", "81.114, -12.3928, -86.8335, 0.28", "80.8518, -13.4425, -88.2716, 0.55", "80.5587, -14.4954, -89.7742, 0.28", "80.2867, -15.3831, -91.1745, 0.28", "80.005, -16.4417, -93.0685, 0.55", "79.8528, -17.4617, -94.7981, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "59.7023, 24.6038, -4.76517, 0.55", "62.4323, 24.2466, -4.33599, 0.55", "64.4132, 23.9294, -4.21842, 0.55", "68.7383, 23.2079, -4.19163, 0.55", "70.6744, 22.8607, -4.3566, 0.55", "72.7815, 22.5378, -4.63951, 0.55", "75.5999, 22.1747, -5.21548, 0.55", "78.5578, 21.7408, -6.11587, 0.55", "80.1007, 21.5107, -6.77042, 0.55", "83.2123, 21.0862, -8.53767, 0.55", "84.6427, 20.9077, -9.3972, 0.55", "87.9895, 20.4321, -11.5078, 0.55", "90.2574, 20.0131, -12.928, 0.55", "91.9309, 19.6859, -13.8957, 0.83", "94.6065, 19.0567, -15.4214, 0.55", "97.2329, 18.2969, -16.8245, 0.83", "99.466, 17.5377, -17.9443, 0.55", "101.46, 16.8811, -18.8305, 0.55", "102.598, 16.5525, -19.2648, 0.83", "105.262, 15.7791, -20.1345, 0.28", "106.591, 15.4419, -20.4752, 0.28", "107.874, 15.0392, -20.8814, 0.28", "109.26, 14.6425, -21.3227, 0.28", "111.476, 14.0552, -22.0711, 0.28", "112.369, 13.8274, -22.344, 0.55", "114.517, 13.2833, -22.7811, 0.55", "118.395, 12.2461, -23.3748, 0.55", "119.471, 11.9254, -23.4946, 0.55", "120.435, 11.603, -23.5635, 0.83", "122.538, 10.9506, -23.5364, 0.55", "124.368, 10.3842, -23.4832, 0.55", "126.097, 9.85547, -23.424, 0.55", "127.434, 9.42644, -23.4186, 0.55", "129.547, 8.60789, -23.5302, 0.55", "132.028, 7.43569, -23.8246, 0.55", "135.863, 5.20138, -24.604, 0.55", "137.958, 3.67183, -25.2031, 0.55", "139.765, 2.03621, -25.8516, 0.28", "140.301, 1.42914, -26.091, 0.55", "141.477, -0.279736, -26.7262, 0.28", "142.479, -2.2072, -27.3804, 0.55", "143.419, -4.63893, -27.9827, 0.55", "144.06, -6.24452, -28.3027, 0.28", "144.296, -6.81433, -28.3883, 0.55", "144.912, -8.23109, -28.583, 0.28", "145.756, -10.0777, -28.794, 0.55", "147.967, -14.5342, -29.2013, 0.55", "149.123, -16.7838, -29.3617, 0.55", "150.199, -18.8469, -29.4911, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "59.7023, 24.6038, -4.76517, 0.55", "61.4323, 24.7247, -3.50842, 0.55", "61.9865, 24.7651, -3.13539, 0.55", "64.0532, 24.8299, -1.84576, 0.55", "66.3597, 24.9422, -0.366567, 0.55", "69.3177, 25.0703, 1.60518, 0.55", "70.1346, 25.1072, 2.14459, 0.55", "71.6021, 25.1204, 3.09067, 0.55", "73.2081, 25.1783, 4.07346, 0.55", "75.0715, 25.3068, 5.1411, 0.55", "76.8266, 25.4515, 6.15671, 0.55", "77.7868, 25.5791, 6.67608, 0.55", "78.9128, 25.7611, 7.28842, 0.55", "80.3036, 26.0287, 8.02681, 0.83", "82.5764, 26.4918, 9.00094, 0.55", "84.0821, 26.749, 9.56648, 0.83", "86.1746, 27.0208, 10.2676, 0.55", "86.8184, 27.071, 10.469, 0.55", "88.8186, 27.1349, 11.0392, 0.55", "92.4026, 27.0554, 11.8892, 0.55", "95.0313, 26.8622, 12.4326, 0.55", "97.117, 26.6088, 12.8973, 0.55", "99.2495, 26.2326, 13.4268, 0.55", "99.6987, 26.1415, 13.5387, 0.28", "100.611, 25.9216, 13.7585, 0.83", "104.358, 24.963, 14.6751, 0.55", "106.979, 24.3016, 15.2671, 0.55", "109.128, 23.8049, 15.8133, 0.55", "110.413, 23.5028, 16.1511, 0.83", "111.424, 23.279, 16.4208, 0.28", "112.341, 23.0786, 16.6573, 0.55", "119.445, 23.0776, 19.7451, 0.55", "126.967, 22.1023, 21.3157, 0.55", "134.433, 22.0057, 23.3783, 0.55", "141.195, 20.6022, 26.8878, 0.55", "147.538, 18.1201, 30.5771, 0.55", "154.422, 14.851, 31.9654, 0.55", "161.171, 11.05, 31.9653, 0.55", "168.537, 8.66758, 31.6928, 0.55", "175.842, 6.09907, 31.9151, 0.55", "183.404, 4.42695, 31.768, 0.55", "190.957, 2.95523, 32.6557, 0.55", "198.085, 0.130867, 33.7567, 0.55", "205.385, -1.45575, 35.806, 0.55", "212.373, -2.07577, 39.0909, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.33021, -25.8903, 5.87709, 1.38", "1.86519, -28.961, 5.56048, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.33021, -25.8903, 5.87709, 0.55", "-2.32754, -27.1114, 5.8604, 0.55", "-3.42898, -28.6768, 5.84343, 0.55", "-4.28807, -29.7132, 5.83937, 0.55", "-5.00667, -30.5801, 5.71929, 0.55", "-6.568, -32.3763, 5.30305, 0.55", "-7.66193, -33.576, 4.97921, 0.55", "-8.63275, -34.6518, 4.65289, 0.55", "-11.128, -37.2704, 3.81647, 0.55", "-14.1282, -40.3024, 2.83599, 0.55", "-16.45, -42.599, 2.03441, 0.55", "-17.9306, -44.1071, 1.50054, 0.55", "-19.629, -45.9165, 0.893633, 0.55", "-21.7829, -48.5112, 0.154274, 0.55", "-23.0424, -50.3517, -0.249456, 0.55", "-24.6002, -52.9985, -0.603718, 0.55", "-25.8426, -55.4785, -0.833804, 0.55", "-27.0961, -58.5735, -1.04215, 0.55", "-28.2766, -62.2072, -1.18347, 0.55", "-28.9104, -64.9846, -1.21142, 0.55", "-29.1363, -66.3664, -1.13048, 0.55", "-29.4812, -69.6125, -0.753931, 0.55", "-29.7538, -72.6494, -0.319591, 0.55", "-29.8822, -75.7075, 0.351843, 0.55", "-29.9787, -77.4615, 0.83176, 0.55", "-30.2538, -82.8833, 2.51633, 0.55", "-30.2771, -83.2825, 2.64723, 0.55", "-30.3763, -85.7268, 3.5111, 0.55", "-30.7625, -90.0972, 5.14846, 0.55", "-30.896, -91.5592, 5.60877, 0.55", "-31.1422, -93.8467, 5.93403, 0.55", "-31.2025, -94.6977, 5.8618, 0.55", "-31.2533, -97.5809, 5.08438, 0.55", "-31.1637, -99.4508, 4.19383, 0.55", "-30.9109, -102.433, 2.17724, 0.55", "-30.4413, -106.083, -0.563002, 0.28", "-30.3053, -106.986, -1.36088, 0.55", "-30.0889, -108.356, -2.69011, 0.28", "-30.0577, -108.562, -2.90139, 0.55", "-29.8983, -109.692, -3.96259, 0.28", "-29.8745, -110.075, -4.23648, 0.55", "-29.8137, -112.065, -5.28008, 0.28", "-29.8195, -112.742, -5.62794, 0.55", "-29.866, -114.7, -6.52429, 0.28", "-29.8781, -115.316, -6.80408, 0.55", "-29.9386, -117.442, -7.73589, 0.28", "-29.961, -118.42, -8.16925, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.8636, -66.9003, 50.0527, 0.55", "-18.8865, -75.4901, 56.6618, 0.55", "-25.249, -83.2383, 63.1563, 0.55", "-31.0333, -91.7078, 69.2804, 0.55", "-36.9485, -100.252, 75.1712, 0.55", "-41.2467, -109.921, 80.7149, 0.55", "-45.6655, -119.19, 86.8182, 0.55", "-47.8472, -130.087, 91.198, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.8636, -66.9003, 50.0527, 0.55", "-14.0288, -73.0717, 56.3229, 0.55", "-13.4399, -80.1682, 61.492, 0.55", "-14.2007, -87.4979, 66.3009, 0.55", "-15.2071, -95.3115, 70.2206, 0.55", "-15.9076, -103.048, 74.3529, 0.55", "-16.711, -110.463, 79.0229, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-49.1362, 36.1304, -12.0617, 0.83", "-49.0735, 37.4267, -13.9984, 0.83", "-48.9894, 40.6013, -18.3654, 0.55", "-48.9364, 41.9938, -20.1134, 0.83", "-48.8605, 43.5043, -21.865, 0.55", "-48.7558, 45.1019, -23.4122, 0.55", "-48.6837, 45.9247, -24.0744, 0.28", "-48.6573, 46.4933, -24.3583, 0.55", "-48.4624, 48.4677, -24.8902, 0.28", "-48.3531, 49.3208, -25.0778, 0.55", "-47.9962, 52.3046, -25.6052, 0.28", "-47.765, 54.6789, -25.9363, 0.55", "-47.5661, 58.3957, -26.317, 0.28", "-47.4968, 61.6663, -26.5751, 0.28", "-47.558, 63.4964, -26.6708, 0.55", "-47.7611, 65.6582, -26.7657, 0.28", "-47.9232, 66.6878, -26.7878, 0.55", "-48.4473, 69.0829, -26.9296, 0.28", "-48.9119, 70.6582, -27.0929, 0.28", "-49.407, 72.1952, -27.2962, 0.28", "-49.6374, 73.0089, -27.4111, 0.55", "-50.4004, 76.3008, -27.9781, 0.28", "-51.1818, 80.1976, -28.7399, 0.55", "-51.4323, 81.5441, -29.011, 0.55", "-51.7019, 82.8973, -29.2505, 0.55", "-52.4334, 85.7526, -29.7857, 0.55", "-53.0407, 87.6107, -30.1617, 0.28", "-53.355, 88.3058, -30.3024, 0.55", "-54.3384, 90.1838, -30.6236, 0.28", "-55.4796, 92.1624, -31.0364, 0.55", "-57.4112, 94.9648, -31.7085, 0.28", "-58.357, 96.1164, -32.0111, 0.28", "-59.9145, 97.6702, -32.5755, 0.55", "-61.6686, 99.2627, -33.2425, 0.28", "-61.9881, 99.5066, -33.3557, 0.55", "-63.1384, 100.267, -33.7364, 0.28", "-67.0957, 102.678, -34.942, 0.55", "-72.6201, 105.539, -36.733, 0.28", "-73.6474, 105.997, -37.1101, 0.55", "-76.4727, 107.146, -38.1722, 0.28", "-77.6627, 107.608, -38.6451, 0.28", "-78.7028, 107.978, -39.0973, 0.55", "-81.7713, 108.687, -40.5777, 0.28", "-83.9259, 108.998, -41.5106, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-49.1362, 36.1304, -12.0617, 0.55", "-49.4502, 37.4941, -12.2813, 0.55", "-49.6532, 38.3004, -12.3333, 0.28", "-49.909, 38.8719, -12.2216, 0.55", "-50.4964, 40.1844, -11.9651, 0.28", "-50.909, 41.1063, -11.7849, 0.55", "-51.6696, 42.8058, -11.4528, 0.28", "-52.1647, 43.7144, -11.1075, 0.55", "-53.9725, 45.8465, -9.46363, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-137.908, -23.7588, 5.39532, 0.55", "-145.009, -31.1929, 1.35485, 0.55", "-150.474, -39.3916, -3.63745, 0.55", "-155.138, -46.4853, -10.7038, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-137.908, -23.7588, 5.39532, 0.55", "-146.372, -31.7068, -0.0690136, 0.55", "-153.595, -39.7747, -6.95361, 0.55", "-160.32, -48.0417, -14.1009, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-165.213, 29.8361, 94.9315, 0.55", "-172.36, 33.0087, 101.618, 0.55", "-180.575, 36.0787, 106.999, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-165.213, 29.8361, 94.9315, 0.55", "-174.092, 30.318, 102.403, 0.55", "-183.795, 31.9507, 108.575, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "79.8528, -17.4617, -94.7981, 0.28", "86.491, -18.8184, -109.917, 0.28", "87.1368, -19.0612, -111.304, 0.55", "88.227, -19.471, -113.644, 0.28", "89.145, -19.8162, -115.615, 0.28", "90.3601, -20.273, -118.224, 0.55", "91.9622, -20.8753, -121.664, 0.55", "94.0332, -22.953, -124.05, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "79.8528, -17.4617, -94.7981, 0.55", "80.2502, -18.1914, -96.6892, 0.55", "80.3202, -18.4849, -97.5248, 0.28", "80.3887, -18.9597, -98.973, 0.55", "80.5394, -20.0057, -102.164, 0.28", "80.6439, -20.7306, -104.375, 0.55", "80.8208, -21.9587, -108.121, 0.28", "80.9689, -23.3053, -112.928, 0.28", "80.9765, -23.8888, -115.162, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "150.199, -18.8469, -29.4911, 0.28", "151.898, -20.581, -28.5122, 0.28", "154.064, -22.8125, -26.9859, 0.28", "155.441, -24.2421, -25.9212, 0.55", "156.268, -25.0104, -25.2878, 0.28", "156.708, -25.423, -24.9413, 0.28", "158.887, -27.4717, -23.2722, 0.55", "159.391, -27.9023, -22.825, 0.28", "160.6, -29.0173, -21.5351, 0.55", "161.631, -30.0056, -20.469, 0.28", "162.524, -30.8104, -19.6263, 0.55", "163.569, -31.8001, -18.6993, 0.55", "165.221, -33.453, -17.4894, 0.55", "165.618, -33.865, -17.2107, 0.55", "167.047, -35.4152, -16.1884, 0.28", "167.602, -36.0577, -15.7899, 0.55", "168.37, -36.8737, -15.2874, 0.28", "169.453, -38.0526, -14.6382, 0.55", "171.226, -40.0031, -13.9413, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "150.199, -18.8469, -29.4911, 0.55", "147.544, -18.951, -29.396, 0.55", "145.388, -19.0355, -29.3187, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.86519, -28.961, 5.56048, 0.83", "1.9712, -29.1624, 5.55407, 0.83", "3.16931, -30.9331, 5.63347, 0.83", "4.22845, -32.4847, 5.59674, 0.55", "5.07343, -33.7225, 5.56744, 0.55", "6.86945, -36.3536, 5.50515, 0.83", "9.0479, -39.5449, 5.42961, 0.55", "10.2305, -41.2133, 5.42812, 0.83", "12.3032, -43.859, 5.56555, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.86519, -28.961, 5.56048, 0.55", "0.35902, -30.5259, 1.39028, 0.55", "-1.25768, -32.2057, -3.08593, 0.55", "-3.16619, -34.1887, -8.37012, 0.55", "-5.48375, -36.5966, -14.7868, 0.55", "-6.79889, -37.9631, -18.4281, 0.55", "-7.06308, -38.2376, -19.1596, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.711, -110.463, 79.0229, 0.55", "-16.9374, -116.359, 83.4598, 0.55", "-15.9495, -122.477, 87.4702, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-16.711, -110.463, 79.0229, 0.55", "-17.4815, -119.613, 84.3264, 0.55", "-18.8136, -128.602, 89.7925, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-53.9725, 45.8465, -9.46363, 0.28", "-54.6237, 46.9616, -8.57357, 0.28", "-54.8593, 47.3933, -8.19267, 0.55", "-55.5247, 48.6493, -7.06873, 0.28", "-55.8683, 49.26, -6.56733, 0.55", "-56.8217, 50.9018, -5.26003, 0.28", "-57.7907, 52.5705, -3.93134, 0.55", "-59.3839, 55.2092, -1.68417, 0.28", "-59.7231, 55.7754, -1.20604, 0.55", "-60.481, 57.0823, -0.20888, 0.28", "-60.7768, 57.6206, 0.17697, 0.55", "-64.2834, 61.3022, 3.88613, 0.55", "-68.5279, 65.3399, 6.1861, 0.55", "-71.9858, 69.7225, 9.09195, 0.55", "-74.7073, 74.8386, 11.5469, 0.55", "-78.1347, 79.6179, 13.7872, 0.55", "-81.8995, 83.5783, 16.9097, 0.55", "-85.0628, 87.2684, 20.9078, 0.55", "-87.4609, 90.536, 25.7223, 0.55", "-89.9282, 94.1112, 30.2764, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.9725, 45.8465, -9.46363, 0.55", "-57.3345, 44.173, -8.31061, 0.55", "-59.074, 43.2431, -7.71864, 0.28", "-60.3685, 42.5512, -7.27813, 0.55", "-61.4474, 41.9744, -6.91098, 0.28", "-62.2031, 41.5705, -6.65381, 0.55", "-64.2869, 40.4566, -5.94469, 0.28", "-65.6488, 39.6058, -5.66461, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-155.138, -46.4853, -10.7038, 0.55", "-160.026, -55.44, -13.4951, 0.55", "-164.598, -64.8227, -15.2111, 0.55", "-168.581, -73.9221, -18.8455, 0.55", "-173.461, -83.0619, -20.9727, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-155.138, -46.4853, -10.7038, 0.55", "-161.539, -48.8857, -19.0083, 0.55", "-167.551, -49.6205, -27.8966, 0.55", "-174.296, -51.8786, -35.9657, 0.55", "-182.889, -52.8492, -42.3614, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-160.32, -48.0417, -14.1009, 0.55", "-166.21, -52.1556, -22.3287, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-160.32, -48.0417, -14.1009, 0.55", "-165.213, -57.8052, -14.853, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "94.0332, -22.953, -124.05, 0.28", "96.9191, -24.3268, -126.551, 0.28", "98.2596, -24.9649, -127.712, 0.55", "100.816, -26.1819, -129.927, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "94.0332, -22.953, -124.05, 0.55", "93.125, -23.5289, -126.206, 0.55", "91.3083, -24.6811, -130.52, 0.28", "90.7165, -25.0564, -131.925, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "80.9765, -23.8888, -115.162, 0.28", "81.2613, -25.8129, -120.289, 0.28", "81.4024, -26.7656, -122.827, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "80.9765, -23.8888, -115.162, 0.55", "79.1596, -25.0093, -114.108, 0.55", "74.0928, -28.134, -111.167, 0.28", "72.8892, -28.8762, -110.469, 0.55", "69.5966, -30.9068, -108.558, 0.28", "67.4742, -32.2157, -107.326, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.3032, -43.859, 5.56555, 0.83", "12.3426, -44.145, 5.54202, 0.83", "12.9206, -47.8795, 5.33464, 0.83", "13.1205, -50.6754, 5.37111, 0.83", "13.1391, -53.3651, 5.69574, 0.83", "13.0512, -56.9329, 6.40604, 0.83", "12.8436, -61.0382, 7.38365, 0.83", "12.6446, -65.6071, 8.71665, 0.83", "12.4636, -70.0331, 10.2189, 0.83", "11.8746, -75.4854, 11.9552, 0.83", "11.4566, -78.003, 12.6164, 0.83", "11.1283, -79.9037, 12.9937, 0.83", "10.4164, -83.5573, 13.6441, 0.83", "9.84626, -86.8381, 14.041, 0.83", "8.96895, -93.8696, 14.0846, 0.83", "8.50681, -97.7435, 13.6063, 0.83", "8.06478, -101.328, 12.9079, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.3032, -43.859, 5.56555, 0.55", "11.6057, -45.6389, 5.48056, 0.55", "11.0604, -46.9321, 5.50799, 0.55", "10.7147, -47.758, 5.61014, 0.55", "10.2052, -49.0479, 5.90429, 0.55", "9.22421, -51.5988, 6.65969, 0.55", "8.41976, -53.5307, 7.433, 0.55", "7.74024, -55.0793, 8.21263, 0.55", "6.99302, -56.6454, 9.09873, 0.55", "6.34808, -57.9448, 9.89666, 0.28", "5.77253, -59.0074, 10.6951, 0.55", "4.62308, -60.9432, 12.3999, 0.55", "3.82818, -62.133, 13.5544, 0.55", "3.37722, -62.7998, 14.1931, 0.55", "2.8161, -63.5883, 14.8981, 0.83", "1.16608, -65.9271, 16.8339, 0.28", "0.625321, -66.7012, 17.4545, 0.55", "-0.299234, -68.0965, 18.5404, 0.28", "-0.590676, -68.5265, 18.9054, 0.55", "-1.21651, -69.5339, 19.7556, 0.28", "-1.5595, -70.1065, 20.1992, 0.55", "-2.67789, -71.9756, 21.1326, 0.55", "-4.90441, -76.9539, 25.8216, 0.55", "-6.87319, -81.6847, 30.8685, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.06308, -38.2376, -19.1596, 0.55", "-10.204, -39.7516, -22.3926, 0.55", "-11.1397, -40.1232, -23.2976, 0.55", "-13.4887, -41.0621, -25.4794, 0.55", "-18.6468, -42.9727, -30.0268, 0.28", "-19.4161, -43.242, -30.6543, 0.55", "-22.6124, -44.4614, -33.1504, 0.55", "-26.9811, -46.1574, -36.1476, 0.55", "-28.6582, -46.7567, -37.2515, 0.28", "-30.1379, -47.1886, -38.131, 0.28", "-32.6607, -47.8958, -39.2993, 0.55", "-35.7608, -48.6138, -40.8291, 0.28", "-38.6574, -49.0405, -42.2925, 0.55", "-40.9178, -49.1983, -43.3742, 0.55", "-42.4921, -49.1832, -44.1594, 0.55", "-47.1486, -48.9399, -46.5857, 0.55", "-52.0862, -48.384, -49.0385, 0.55", "-54.1374, -48.0546, -50.0002, 0.28", "-56.0843, -47.7679, -50.9481, 0.55", "-60.0039, -47.4193, -52.8457, 0.28", "-61.3182, -47.3371, -53.4738, 0.83", "-63.7701, -47.166, -54.4911, 0.28", "-65.512, -47.176, -55.0173, 0.55", "-68.029, -47.2752, -55.7376, 0.28", "-69.0315, -47.3045, -55.9928, 0.55", "-70.8803, -47.3963, -56.3732, 0.55", "-73.7005, -47.2788, -56.8338, 0.55", "-75.5497, -47.1016, -57.0324, 0.28", "-77.0538, -46.7945, -57.0733, 0.55", "-78.8512, -46.2335, -57.1191, 0.28", "-79.1503, -46.1195, -57.1348, 0.55", "-81.9528, -44.9909, -57.7068, 0.28", "-84.0067, -44.1263, -58.3123, 0.55", "-86.7612, -42.8137, -59.4321, 0.83", "-89.0526, -41.6768, -60.5729, 0.28", "-89.6478, -41.3841, -60.918, 0.55", "-94.222, -39.185, -63.7856, 0.28", "-95.0258, -38.8079, -64.3556, 0.55", "-97.4226, -37.553, -66.1586, 0.28", "-98.0414, -37.2302, -66.6279, 0.55", "-99.6252, -36.3933, -67.7391, 0.28", "-100.744, -35.7928, -68.465, 0.55", "-103.225, -34.4693, -69.7633, 0.28", "-104.686, -33.7754, -70.4893, 0.55", "-107.777, -32.4717, -71.9008, 0.28", "-108.692, -32.1282, -72.3104, 0.55", "-110.115, -31.6899, -72.9108, 0.28", "-111.316, -31.3243, -73.3667, 0.55", "-113.799, -30.6024, -74.1799, 0.28", "-114.544, -30.4013, -74.4033, 0.55", "-120.07, -28.822, -75.8241, 0.28", "-122.008, -28.1525, -76.1623, 0.55", "-125.464, -26.8186, -76.5564, 0.28", "-127.023, -26.1639, -76.6876, 0.55", "-130.577, -24.6954, -76.8029, 0.28", "-131.871, -24.2116, -76.7955, 0.55", "-136.487, -22.858, -76.5541, 0.28", "-138.387, -22.5191, -76.4472, 0.55", "-141.052, -22.4573, -76.2838, 0.55", "-142.677, -22.5211, -76.1499, 0.55", "-145.948, -22.746, -75.6313, 0.28", "-149.133, -23.0078, -74.9218, 0.28", "-151.776, -23.2194, -74.2528, 0.55", "-154.973, -23.2121, -73.0669, 0.28", "-156.534, -23.0161, -72.2556, 0.55", "-160.223, -21.9447, -69.9159, 0.28", "-162.042, -21.0157, -68.2275, 0.55", "-163.157, -20.2204, -66.8512, 0.28", "-164.297, -19.3288, -64.9615, 0.55", "-165.655, -18.1496, -62.3775, 0.28", "-166.172, -17.7432, -61.4072, 0.55", "-168.989, -16.0014, -56.8202, 0.28", "-169.943, -15.4665, -55.288, 0.55", "-172.171, -14.3169, -51.5764, 0.28", "-173.381, -13.7132, -49.5616, 0.55", "-174.378, -13.2195, -47.9078, 0.55", "-175.586, -12.6425, -45.973, 0.28", "-176.273, -12.3518, -45.1, 0.55", "-178.656, -11.2796, -42.3362, 0.28", "-179.904, -10.5395, -40.852, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.06308, -38.2376, -19.1596, 0.55", "-6.70727, -38.2806, -20.3803, 0.55", "-6.32842, -38.1834, -21.5909, 0.55", "-5.79206, -37.9478, -23.0674, 0.55", "-5.31496, -37.6517, -24.2434, 0.55", "-1.72747, -34.8283, -31.6268, 0.55", "-0.953104, -33.9944, -33.2941, 0.55", "0.132585, -32.5789, -35.7785, 0.55", "0.886306, -31.5163, -37.5403, 0.55", "1.63903, -30.3751, -39.2234, 0.28", "2.87982, -28.4573, -41.7134, 0.55", "4.87823, -25.4657, -45.2592, 0.28", "4.99954, -25.2793, -45.6365, 0.55", "5.23765, -24.6257, -48.3972, 0.28", "5.1001, -24.3424, -50.3015, 0.55", "4.7777, -24.2074, -52.3653, 0.55", "4.1712, -24.1597, -56.0799, 0.55", "3.00751, -24.1141, -63.3759, 0.55", "2.31875, -24.1212, -68.2912, 0.55", "2.12778, -24.1318, -69.9942, 0.55", "1.12313, -24.0745, -81.2056, 0.55", "0.972059, -23.9964, -84.2476, 0.55", "1.01443, -23.9337, -85.9595, 0.55", "1.47115, -23.8331, -89.9448, 0.55", "3.18705, -23.9835, -99.4709, 0.55", "3.7723, -24.1103, -102.024, 0.28", "4.22333, -24.2301, -103.457, 0.55", "4.94367, -24.4879, -105.574, 0.28", "5.3162, -24.6711, -106.428, 0.55", "7.07115, -25.5237, -108.665, 0.28", "9.02929, -26.8119, -109.411, 0.55", "10.2475, -27.7571, -109.79, 0.28", "11.4263, -28.8278, -110.015, 0.55", "12.5135, -30.0233, -110.138, 0.28", "12.9927, -30.6489, -110.209, 0.55", "14.149, -32.3041, -110.302, 0.28", "14.435, -32.802, -110.405, 0.55", "16.0199, -35.655, -111.161, 0.28", "16.7476, -36.9651, -111.702, 0.55", "18.3264, -39.7399, -113.223, 0.28", "18.9232, -40.7521, -113.919, 0.55", "20.97, -44.0485, -116.461, 0.28", "21.4639, -44.8482, -117.118, 0.55", "22.9245, -47.3904, -119.283, 0.28", "23.2413, -47.9931, -119.73, 0.55", "24.0251, -49.5952, -120.881, 0.28", "24.4646, -50.5212, -121.65, 0.55", "24.9104, -51.4233, -122.492, 0.55", "25.8047, -53.2234, -124.158, 0.28", "26.4355, -54.3161, -125.36, 0.55", "28.4312, -56.9353, -129.218, 0.28", "29.1887, -57.7519, -130.766, 0.55", "29.7251, -58.258, -131.82, 0.28", "30.2812, -58.7048, -132.877, 0.55", "32.0412, -59.9117, -136.088, 0.28", "33.4094, -60.8541, -138.472, 0.55", "35.9048, -62.7032, -142.307, 0.28", "36.6938, -63.2762, -143.509, 0.55", "38.3009, -64.3119, -145.65, 0.28", "38.8646, -64.6491, -146.311, 0.55", "39.8755, -65.1838, -147.195, 0.28", "40.8037, -65.6273, -147.892, 0.55", "43.4284, -66.6887, -149.513, 0.28", "46.4528, -67.7775, -151.318, 0.28", "48.023, -68.2569, -152.122, 0.28", "49.5662, -68.6888, -153.023, 0.55", "51.811, -69.2103, -154.346, 0.28", "52.8171, -69.4266, -154.912, 0.83", "55.4242, -70.0144, -156.261, 0.28", "56.5325, -70.2954, -156.908, 0.55", "61.3253, -71.7234, -159.987, 0.28", "63.6433, -72.4668, -161.722, 0.28", "65.2795, -73.0066, -163.097, 0.55", "66.1831, -73.3439, -164.013, 0.55", "68.4847, -74.2791, -166.655, 0.28", "70.5941, -75.2768, -169.23, 0.55", "72.5188, -76.2625, -171.577, 0.28", "74.2081, -77.1871, -173.808, 0.55", "75.6085, -77.9289, -175.642, 0.28", "76.787, -78.4262, -177.066, 0.55", "79.6972, -79.4169, -180.342, 0.28", "81.2073, -79.9157, -181.934, 0.55", "83.5225, -80.6721, -184.231, 0.28", "85.4376, -81.2244, -186.06, 0.55", "89.9039, -82.2808, -190.342, 0.28", "91.6502, -82.5873, -192.215, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.9495, -122.477, 87.4702, 0.55", "-15.0924, -131.137, 92.7798, 0.55", "-11.9319, -139.902, 96.9161, 0.55", "-10.1323, -148.683, 101.771, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-15.9495, -122.477, 87.4702, 0.55", "-15.8228, -125.889, 90.539, 0.55", "-16.6803, -129.044, 93.7619, 0.55", "-18.0646, -131.513, 97.376, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.8136, -128.602, 89.7925, 0.55", "-18.5117, -139.224, 96.9123, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-18.8136, -128.602, 89.7925, 0.55", "-20.5308, -137.899, 95.0701, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.06478, -101.328, 12.9079, 0.83", "9.00801, -104.571, 13.2934, 0.83", "10.0022, -107.288, 13.7498, 0.83", "10.9904, -109.988, 14.2035, 0.83", "11.929, -112.552, 14.6344, 0.83", "13.3753, -116.504, 15.2984, 0.83", "14.8112, -120.428, 15.9576, 0.83", "16.0945, -122.997, 16.6134, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.06478, -101.328, 12.9079, 0.55", "9.18935, -102.955, 12.6279, 0.55", "9.97575, -104.242, 12.2105, 0.55", "10.4843, -105.201, 11.8308, 0.55", "10.8753, -106.337, 11.3161, 0.83", "11.1883, -107.638, 10.6194, 0.55", "11.4944, -108.911, 9.93788, 0.83", "11.7125, -110.301, 9.11099, 0.55", "11.8121, -111.113, 8.56502, 0.83", "11.9667, -113.757, 6.65437, 0.55", "11.8931, -115.841, 5.09774, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.87319, -81.6847, 30.8685, 0.55", "-10.8054, -89.8584, 36.7408, 0.55", "-16.046, -96.886, 43.0577, 0.55", "-21.8589, -102.866, 49.9282, 0.55", "-28.4237, -107.53, 57.1326, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.87319, -81.6847, 30.8685, 0.55", "-10.5801, -90.846, 38.5634, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.0945, -122.997, 16.6134, 0.55", "16.6424, -125.418, 17.3299, 0.55", "17.4593, -128.504, 18.2594, 0.55", "18.2218, -131.419, 19.1228, 0.55", "18.7247, -133.494, 19.7244, 0.55", "19.5532, -137.2, 20.7748, 0.55", "21.8567, -147.657, 23.4109, 0.55", "22.6196, -151.228, 24.1276, 0.55", "23.0906, -153.76, 24.5225, 0.55", "23.5116, -156.677, 24.7689, 0.55", "23.6889, -158.953, 24.8185, 0.55", "24.1041, -164.3, 24.6652, 0.55", "24.3017, -168.353, 24.6265, 0.55", "24.5349, -171.01, 24.6226, 0.55", "25.3248, -177.862, 24.911, 0.55", "25.9513, -182.446, 25.2872, 0.55", "26.9778, -188.323, 26.0258, 0.55", "28.5176, -194.941, 27.2321, 0.55", "29.8737, -199.34, 28.1435, 0.55", "30.7691, -201.935, 28.7017, 0.55", "31.5535, -204.326, 29.2375, 0.55", "32.5035, -207.371, 29.7667, 0.55", "34.4238, -214.761, 30.6856, 0.55", "35.1833, -217.636, 30.8966, 0.55", "35.9536, -220.837, 31.1592, 0.55", "37.0632, -225.644, 31.5568, 0.55", "37.7964, -229.329, 31.9934, 0.55", "38.2998, -232.825, 32.492, 0.55", "38.6581, -236.152, 33.0563, 0.55", "38.9901, -239.391, 33.6788, 0.55", "39.2243, -241.7, 34.0946, 0.55", "39.549, -245.491, 34.6535, 0.55", "39.6808, -250.078, 35.0783, 0.55", "39.6932, -252.325, 35.1137, 0.55", "39.6343, -254.315, 35.0112, 0.55", "39.5325, -258.098, 34.5382, 0.55", "39.4101, -260.502, 34.1991, 0.55", "39.3502, -263.456, 33.8511, 0.55", "39.3179, -265.516, 33.7526, 0.55", "39.2776, -270.847, 33.7215, 0.55", "39.3345, -274.805, 33.9873, 0.55", "39.6337, -280.875, 34.8685, 0.55", "40.1151, -284.758, 35.691, 0.55", "40.6736, -288.819, 36.6835, 0.28", "40.9045, -290.442, 37.1627, 0.28", "41.6645, -294.344, 38.6374, 0.28", "42.512, -297.916, 40.2625, 0.28", "44.3037, -302.604, 42.5593, 0.28", "47.8605, -313.504, 44.5515, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "16.0945, -122.997, 16.6134, 0.55", "17.2894, -123.359, 16.8398, 0.55", "19.7517, -124.287, 17.4911, 0.55", "21.8804, -125.203, 18.1486, 0.28", "24.1656, -126.245, 18.924, 0.55", "25.5453, -126.896, 19.5718, 0.28", "27.9364, -128.054, 20.9095, 0.55", "28.9309, -128.657, 21.7535, 0.28", "29.2878, -128.87, 22.123, 0.28", "29.9036, -129.161, 22.7629, 0.55", "32.3248, -130.09, 25.0407, 0.28", "33.3609, -130.448, 25.963, 0.55", "36.5422, -131.507, 28.3693, 0.28", "38.2859, -132.027, 29.5415, 0.28", "40.4753, -132.713, 30.8733, 0.55", "43.7654, -133.815, 32.5723, 0.28", "44.2152, -133.964, 32.7542, 0.55", "46.4405, -134.708, 33.5013, 0.28", "46.6437, -134.779, 33.5476, 0.55", "48.4379, -135.639, 34.0311, 0.28", "49.2903, -136.109, 34.3175, 0.55", "56.2929, -139.544, 36.696, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-28.4237, -107.53, 57.1326, 0.55", "-31.6926, -110.514, 62.787, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-28.4237, -107.53, 57.1326, 0.55", "-33.2371, -113.389, 61.177, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BP_368ba2d07d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.461, 8.66468, 2.92194, 0.83 ) }
    dend_43 { pt3dadd( -6.83041, 11.2763, 3.43009, 1.11 ) }
    dend_43 { pt3dadd( -8.81703, 12.815, 3.69442, 0.83 ) }
    dend_43 { pt3dadd( -10.7471, 14.297, 3.93126, 0.83 ) }
    dend_43 { pt3dadd( -11.8899, 15.1421, 4.06104, 1.11 ) }
    dend_43 { pt3dadd( -15.4685, 17.7828, 4.47699, 1.11 ) }
    dend_43 { pt3dadd( -21.8691, 22.3038, 5.21227, 0.83 ) }
    dend_43 { pt3dadd( -24.175, 23.8705, 5.45507, 0.83 ) }
    dend_43 { pt3dadd( -26.0011, 25.0743, 5.60589, 0.83 ) }
    dend_43 { pt3dadd( -27.7817, 26.2673, 5.73643, 0.83 ) }
    dend_43 { pt3dadd( -29.2313, 27.2506, 5.80687, 0.55 ) }
    dend_43 { pt3dadd( -30.3208, 27.9163, 5.87836, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.52217, 6.2068, -6.20117, 0.55 ) }
    dend_28 { pt3dadd( 7.08023, 6.76016, -6.77243, 0.55 ) }
    dend_28 { pt3dadd( 8.56458, 6.89985, -7.52833, 0.83 ) }
    dend_28 { pt3dadd( 10.9138, 7.04851, -8.93247, 0.55 ) }
    dend_28 { pt3dadd( 12.0478, 7.12027, -9.61027, 1.38 ) }
    dend_28 { pt3dadd( 14.8362, 7.29671, -11.2768, 0.55 ) }
    dend_28 { pt3dadd( 16.0237, 7.23696, -12.072, 0.83 ) }
    dend_28 { pt3dadd( 22.1669, 6.14122, -16.5399, 0.55 ) }
    dend_28 { pt3dadd( 22.7612, 5.99387, -17.0314, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.683872, -10.465, 3.22463, 1.11 ) }
    dend_1 { pt3dadd( -0.73173, -14.6875, 4.73837, 1.11 ) }
    dend_1 { pt3dadd( -0.75122, -16.4071, 5.35486, 0.83 ) }
    dend_1 { pt3dadd( -0.777113, -18.6918, 6.17391, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.900844, 11.0748, -1.42455, 1.11 ) }
    dend_0 { pt3dadd( 0.963997, 14.1363, -1.3992, 1.11 ) }
    dend_0 { pt3dadd( 1.03394, 19.1315, -1.17808, 1.38 ) }
    dend_0 { pt3dadd( 1.04207, 19.4098, -1.16028, 1.38 ) }
    dend_0 { pt3dadd( 1.34488, 22.8575, -0.882799, 0.83 ) }
    dend_0 { pt3dadd( 1.79047, 26.5063, -0.379997, 0.83 ) }
    dend_0 { pt3dadd( 2.58789, 30.6338, 0.720018, 0.83 ) }
    dend_0 { pt3dadd( 3.06102, 32.2033, 1.34891, 0.83 ) }
    dend_0 { pt3dadd( 3.5417, 33.343, 1.93394, 1.11 ) }
    dend_0 { pt3dadd( 4.97986, 36.1249, 3.46516, 0.55 ) }
    dend_0 { pt3dadd( 6.65576, 39.0326, 5.29102, 0.83 ) }
    dend_0 { pt3dadd( 8.90034, 42.0343, 7.39965, 0.55 ) }
    dend_0 { pt3dadd( 10.0628, 43.2859, 8.37044, 0.83 ) }
    dend_0 { pt3dadd( 11.6747, 44.9824, 9.86542, 0.55 ) }
    dend_0 { pt3dadd( 13.6545, 47.1391, 11.8698, 0.55 ) }
    dend_0 { pt3dadd( 16.39, 50.3803, 14.9038, 0.55 ) }
    dend_0 { pt3dadd( 19.4009, 54.0823, 18.2526, 0.55 ) }
    dend_0 { pt3dadd( 21.2617, 56.484, 20.717, 0.55 ) }
    dend_0 { pt3dadd( 23.496, 59.5196, 24.1585, 0.55 ) }
    dend_0 { pt3dadd( 23.9544, 60.1289, 24.9347, 0.83 ) }
    dend_0 { pt3dadd( 25.1512, 61.7391, 27.1152, 0.55 ) }
    dend_0 { pt3dadd( 26.1728, 62.9961, 28.835, 0.83 ) }
    dend_0 { pt3dadd( 28.5015, 66.4195, 32.9032, 0.55 ) }
    dend_0 { pt3dadd( 29.4132, 67.67, 34.1139, 0.83 ) }
    dend_0 { pt3dadd( 30.3022, 68.5956, 34.9615, 0.55 ) }
    dend_0 { pt3dadd( 31.2046, 69.395, 35.6334, 0.83 ) }
    dend_0 { pt3dadd( 33.2363, 70.8883, 36.8899, 0.83 ) }
    dend_0 { pt3dadd( 35.9491, 72.9191, 38.2912, 0.83 ) }
    dend_0 { pt3dadd( 37.6313, 74.2585, 38.9569, 0.55 ) }
    dend_0 { pt3dadd( 38.9104, 75.4139, 39.4716, 0.55 ) }
    dend_0 { pt3dadd( 42.2697, 78.4001, 40.7672, 0.83 ) }
    dend_0 { pt3dadd( 44.4491, 80.3153, 41.5109, 0.55 ) }
    dend_0 { pt3dadd( 47.7745, 83.1232, 42.4977, 0.55 ) }
    dend_0 { pt3dadd( 50.8389, 85.4825, 43.2742, 0.55 ) }
    dend_0 { pt3dadd( 53.59, 87.4841, 43.892, 0.55 ) }
    dend_0 { pt3dadd( 57.0867, 89.8341, 44.5089, 0.55 ) }
    dend_0 { pt3dadd( 59.2369, 90.994, 44.815, 0.55 ) }
    dend_0 { pt3dadd( 60.7245, 91.651, 44.8444, 0.55 ) }
    dend_0 { pt3dadd( 62.7249, 92.1588, 44.7164, 0.55 ) }
    dend_0 { pt3dadd( 65.7443, 92.4324, 44.2841, 0.55 ) }
    dend_0 { pt3dadd( 67.639, 92.3676, 43.9439, 0.55 ) }
    dend_0 { pt3dadd( 70.391, 92.1998, 43.6365, 0.55 ) }
    dend_0 { pt3dadd( 75.5853, 92.0449, 43.5101, 0.55 ) }
    dend_0 { pt3dadd( 79.6294, 92.1109, 43.6976, 0.55 ) }
    dend_0 { pt3dadd( 83.8865, 92.3855, 44.1509, 0.55 ) }
    dend_0 { pt3dadd( 86.5932, 92.6561, 44.6578, 0.55 ) }
    dend_0 { pt3dadd( 93.566, 94.0068, 46.4417, 0.55 ) }
    dend_0 { pt3dadd( 97.6539, 95.1321, 47.8136, 0.55 ) }
    dend_0 { pt3dadd( 100.686, 96.1844, 49.138, 0.55 ) }
    dend_0 { pt3dadd( 102.515, 97.1442, 50.0164, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 104.628, 98.5586, 51.0227, 0.55 ) }
    dend_0 { pt3dadd( 108.23, 101.334, 52.3878, 0.55 ) }
    dend_0 { pt3dadd( 109.067, 102.001, 52.581, 0.55 ) }
    dend_0 { pt3dadd( 111.486, 103.788, 52.9716, 0.55 ) }
    dend_0 { pt3dadd( 113.705, 105.685, 53.3211, 0.83 ) }
    dend_0 { pt3dadd( 114.917, 106.736, 53.492, 0.55 ) }
    dend_0 { pt3dadd( 116.735, 108.535, 53.6732, 0.83 ) }
    dend_0 { pt3dadd( 126.055, 118.145, 57.2173, 0.83 ) }
    dend_0 { pt3dadd( 134.166, 129.109, 59.6141, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -30.3208, 27.9163, 5.87836, 0.55 ) }
    dend_55 { pt3dadd( -31.7907, 28.5332, 5.24315, 0.55 ) }
    dend_55 { pt3dadd( -33.3892, 29.2041, 4.55243, 0.55 ) }
    dend_55 { pt3dadd( -35.3181, 30.0136, 3.71887, 0.55 ) }
    dend_55 { pt3dadd( -36.9109, 30.6821, 3.03058, 0.83 ) }
    dend_55 { pt3dadd( -38.2457, 31.2422, 2.4538, 0.55 ) }
    dend_55 { pt3dadd( -40.7232, 32.282, 1.3832, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -30.3208, 27.9163, 5.87836, 0.55 ) }
    dend_44 { pt3dadd( -33.2502, 28.3303, 5.88568, 0.55 ) }
    dend_44 { pt3dadd( -36.3193, 28.7242, 6.20813, 0.55 ) }
    dend_44 { pt3dadd( -39.787, 29.1787, 6.65794, 0.55 ) }
    dend_44 { pt3dadd( -44.7401, 29.8564, 7.77193, 0.55 ) }
    dend_44 { pt3dadd( -48.8362, 30.3495, 9.01769, 0.55 ) }
    dend_44 { pt3dadd( -53.102, 30.8291, 10.5207, 0.55 ) }
    dend_44 { pt3dadd( -57.146, 31.0787, 12.4721, 0.55 ) }
    dend_44 { pt3dadd( -60.5596, 30.9946, 14.559, 0.55 ) }
    dend_44 { pt3dadd( -64.7276, 30.6488, 17.6945, 0.55 ) }
    dend_44 { pt3dadd( -66.4929, 30.3974, 19.3552, 0.55 ) }
    dend_44 { pt3dadd( -68.3852, 30.1177, 21.2444, 0.55 ) }
    dend_44 { pt3dadd( -71.7353, 29.3104, 24.4513, 0.55 ) }
    dend_44 { pt3dadd( -73.5647, 28.8362, 25.8425, 0.55 ) }
    dend_44 { pt3dadd( -75.4799, 28.2728, 27.2974, 0.55 ) }
    dend_44 { pt3dadd( -77.7959, 27.5938, 28.7705, 0.55 ) }
    dend_44 { pt3dadd( -80.3263, 26.9006, 30.2885, 0.55 ) }
    dend_44 { pt3dadd( -83.9497, 25.8882, 32.3723, 0.55 ) }
    dend_44 { pt3dadd( -88.8728, 24.8083, 34.6388, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.7612, 5.99387, -17.0314, 0.55 ) }
    dend_34 { pt3dadd( 28.7102, 7.21186, -18.2881, 0.55 ) }
    dend_34 { pt3dadd( 32.1127, 7.77933, -19.5126, 0.55 ) }
    dend_34 { pt3dadd( 35.4577, 8.1968, -20.7891, 0.55 ) }
    dend_34 { pt3dadd( 37.7358, 8.39139, -21.6726, 0.55 ) }
    dend_34 { pt3dadd( 41.0595, 8.59555, -22.9485, 0.55 ) }
    dend_34 { pt3dadd( 47.939, 8.91467, -25.8283, 0.55 ) }
    dend_34 { pt3dadd( 55.7282, 9.29647, -29.6231, 0.55 ) }
    dend_34 { pt3dadd( 59.4803, 9.28016, -31.7573, 0.55 ) }
    dend_34 { pt3dadd( 61.4828, 9.23923, -33.0404, 0.55 ) }
    dend_34 { pt3dadd( 63.6775, 9.21714, -34.5362, 0.55 ) }
    dend_34 { pt3dadd( 67.5852, 9.0649, -37.2046, 0.55 ) }
    dend_34 { pt3dadd( 68.9963, 8.93137, -38.233, 0.55 ) }
    dend_34 { pt3dadd( 74.9726, 8.5811, -43.0389, 0.55 ) }
    dend_34 { pt3dadd( 79.2014, 8.44488, -46.7521, 0.55 ) }
    dend_34 { pt3dadd( 81.6386, 8.42392, -48.9521, 0.55 ) }
    dend_34 { pt3dadd( 84.0677, 8.38089, -51.1473, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.7612, 5.99387, -17.0314, 0.83 ) }
    dend_29 { pt3dadd( 24.5688, 7.18899, -17.0814, 0.83 ) }
    dend_29 { pt3dadd( 25.6027, 7.86958, -17.1585, 0.55 ) }
    dend_29 { pt3dadd( 27.1249, 8.9015, -17.406, 0.83 ) }
    dend_29 { pt3dadd( 28.1479, 9.62117, -17.6051, 0.55 ) }
    dend_29 { pt3dadd( 29.5571, 10.6531, -17.8596, 0.83 ) }
    dend_29 { pt3dadd( 31.2499, 11.9302, -18.1023, 0.55 ) }
    dend_29 { pt3dadd( 32.1033, 12.5092, -18.1861, 0.55 ) }
    dend_29 { pt3dadd( 34.0747, 13.5723, -18.2274, 0.83 ) }
    dend_29 { pt3dadd( 35.8689, 14.3247, -18.0193, 0.55 ) }
    dend_29 { pt3dadd( 36.8709, 14.7378, -17.8044, 0.83 ) }
    dend_29 { pt3dadd( 38.3712, 15.3968, -17.3213, 0.55 ) }
    dend_29 { pt3dadd( 40.5213, 16.3921, -16.3459, 0.55 ) }
    dend_29 { pt3dadd( 43.5102, 17.6215, -14.8284, 0.55 ) }
    dend_29 { pt3dadd( 46.3611, 18.6956, -13.1755, 0.55 ) }
    dend_29 { pt3dadd( 48.62, 19.5232, -11.8234, 0.55 ) }
    dend_29 { pt3dadd( 52.3431, 20.906, -9.57485, 0.55 ) }
    dend_29 { pt3dadd( 55.0635, 22.0, -7.8708, 0.55 ) }
    dend_29 { pt3dadd( 56.7001, 22.804, -6.78441, 0.55 ) }
    dend_29 { pt3dadd( 59.7023, 24.6038, -4.76517, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.777113, -18.6918, 6.17391, 0.83 ) }
    dend_11 { pt3dadd( -0.929478, -20.6748, 6.09214, 0.83 ) }
    dend_11 { pt3dadd( -1.07793, -22.6068, 6.01248, 0.83 ) }
    dend_11 { pt3dadd( -1.24366, -24.7639, 5.92353, 0.83 ) }
    dend_11 { pt3dadd( -1.33021, -25.8903, 5.87709, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.777113, -18.6918, 6.17391, 0.55 ) }
    dend_2 { pt3dadd( -0.343141, -20.1102, 7.27697, 0.55 ) }
    dend_2 { pt3dadd( -4.05888E-4, -21.8578, 8.67471, 0.55 ) }
    dend_2 { pt3dadd( 0.0808255, -24.1697, 10.5394, 0.55 ) }
    dend_2 { pt3dadd( 0.0454197, -25.0722, 11.2779, 0.83 ) }
    dend_2 { pt3dadd( -0.299351, -27.3877, 13.3893, 0.55 ) }
    dend_2 { pt3dadd( -0.578272, -28.5894, 14.4859, 0.55 ) }
    dend_2 { pt3dadd( -1.18595, -30.9292, 16.7081, 0.83 ) }
    dend_2 { pt3dadd( -1.75422, -32.6724, 18.4503, 0.55 ) }
    dend_2 { pt3dadd( -2.34469, -34.1182, 19.8446, 0.55 ) }
    dend_2 { pt3dadd( -3.51497, -36.8601, 22.4264, 0.55 ) }
    dend_2 { pt3dadd( -4.44131, -39.0454, 24.4596, 0.55 ) }
    dend_2 { pt3dadd( -5.15333, -40.7951, 26.1193, 0.55 ) }
    dend_2 { pt3dadd( -5.79973, -42.6468, 27.841, 0.28 ) }
    dend_2 { pt3dadd( -6.00058, -43.4142, 28.5397, 0.55 ) }
    dend_2 { pt3dadd( -6.32193, -44.8297, 29.7572, 0.28 ) }
    dend_2 { pt3dadd( -6.4702, -47.0217, 31.369, 0.55 ) }
    dend_2 { pt3dadd( -8.77308, -54.4209, 36.8302, 0.55 ) }
    dend_2 { pt3dadd( -11.3936, -61.2754, 42.8322, 0.55 ) }
    dend_2 { pt3dadd( -13.8636, -66.9003, 50.0527, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -40.7232, 32.282, 1.3832, 0.55 ) }
    dend_61 { pt3dadd( -43.7539, 32.8406, 3.6769, 0.55 ) }
    dend_61 { pt3dadd( -44.9924, 33.0305, 4.82597, 0.83 ) }
    dend_61 { pt3dadd( -46.3959, 33.21, 6.39971, 0.55 ) }
    dend_61 { pt3dadd( -47.4486, 33.3673, 7.7168, 0.83 ) }
    dend_61 { pt3dadd( -50.2196, 33.8917, 11.1192, 0.55 ) }
    dend_61 { pt3dadd( -51.2682, 34.1129, 12.4136, 0.28 ) }
    dend_61 { pt3dadd( -52.9853, 34.5364, 14.7417, 0.55 ) }
    dend_61 { pt3dadd( -55.2926, 35.1188, 17.8498, 0.55 ) }
    dend_61 { pt3dadd( -57.0628, 35.5441, 20.1132, 0.55 ) }
    dend_61 { pt3dadd( -59.4444, 36.0954, 23.0473, 0.28 ) }
    dend_61 { pt3dadd( -60.0801, 36.2281, 23.7208, 0.55 ) }
    dend_61 { pt3dadd( -61.4078, 36.5106, 25.0546, 0.28 ) }
    dend_61 { pt3dadd( -62.3291, 36.7119, 25.8595, 0.55 ) }
    dend_61 { pt3dadd( -64.2432, 37.0749, 27.3238, 0.28 ) }
    dend_61 { pt3dadd( -65.375, 37.2078, 28.1313, 0.55 ) }
    dend_61 { pt3dadd( -67.3591, 37.2853, 29.6015, 0.28 ) }
    dend_61 { pt3dadd( -68.7008, 37.3183, 30.5396, 0.55 ) }
    dend_61 { pt3dadd( -76.0895, 37.5207, 40.3184, 0.55 ) }
    dend_61 { pt3dadd( -82.5371, 36.7084, 50.7121, 0.55 ) }
    dend_61 { pt3dadd( -88.6148, 34.7624, 61.178, 0.55 ) }
    dend_61 { pt3dadd( -94.6748, 31.3349, 71.2669, 0.55 ) }
    dend_61 { pt3dadd( -99.2071, 28.6573, 82.3371, 0.55 ) }
    dend_61 { pt3dadd( -104.732, 26.3133, 93.025, 0.55 ) }
    dend_61 { pt3dadd( -110.428, 25.9982, 103.874, 0.55 ) }
    dend_61 { pt3dadd( -116.067, 24.7009, 114.681, 0.55 ) }
    dend_61 { pt3dadd( -121.464, 24.2685, 125.678, 0.55 ) }
    dend_61 { pt3dadd( -126.239, 23.7362, 136.956, 0.55 ) }
    dend_61 { pt3dadd( -129.707, 21.9353, 148.574, 0.55 ) }
    dend_61 { pt3dadd( -133.306, 21.2842, 160.274, 0.55 ) }
    dend_61 { pt3dadd( -137.066, 19.3647, 171.782, 0.55 ) }
    dend_61 { pt3dadd( -139.322, 17.0543, 183.607, 0.55 ) }
    dend_61 { pt3dadd( -139.481, 15.7487, 195.794, 0.55 ) }
    dend_61 { pt3dadd( -139.587, 12.1123, 207.5, 0.55 ) }
    dend_61 { pt3dadd( -137.947, 8.31027, 219.037, 0.55 ) }
    dend_61 { pt3dadd( -136.938, 5.02456, 230.804, 0.55 ) }
    dend_61 { pt3dadd( -137.233, 2.59893, 242.816, 0.55 ) }
    dend_61 { pt3dadd( -140.157, 1.94389, 254.702, 0.55 ) }
    dend_61 { pt3dadd( -141.965, -0.0100064, 266.667, 0.55 ) }
    dend_61 { pt3dadd( -141.473, 0.243418, 278.913, 0.55 ) }
    dend_61 { pt3dadd( -142.997, 1.28581, 291.031, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.7232, 32.282, 1.3832, 0.55 ) }
    dend_56 { pt3dadd( -42.2056, 32.6404, -0.119677, 0.55 ) }
    dend_56 { pt3dadd( -43.4012, 33.0498, -1.83621, 0.55 ) }
    dend_56 { pt3dadd( -44.5451, 33.6047, -3.6783, 0.55 ) }
    dend_56 { pt3dadd( -45.2613, 33.9522, -4.83179, 0.55 ) }
    dend_56 { pt3dadd( -46.5679, 34.586, -6.93589, 0.83 ) }
    dend_56 { pt3dadd( -47.5238, 35.0498, -8.47528, 0.55 ) }
    dend_56 { pt3dadd( -48.6672, 35.6691, -10.753, 0.83 ) }
    dend_56 { pt3dadd( -49.1362, 36.1304, -12.0617, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -88.8728, 24.8083, 34.6388, 0.28 ) }
    dend_48 { pt3dadd( -89.7923, 23.3992, 34.2504, 0.28 ) }
    dend_48 { pt3dadd( -90.2314, 22.8014, 34.0327, 0.28 ) }
    dend_48 { pt3dadd( -90.8106, 21.9579, 33.6887, 0.55 ) }
    dend_48 { pt3dadd( -91.2916, 21.2142, 33.3912, 0.28 ) }
    dend_48 { pt3dadd( -92.0029, 20.0787, 32.9516, 0.55 ) }
    dend_48 { pt3dadd( -93.9916, 16.7302, 31.7106, 0.28 ) }
    dend_48 { pt3dadd( -94.655, 15.5654, 31.1738, 0.55 ) }
    dend_48 { pt3dadd( -95.6679, 13.7783, 30.2818, 0.28 ) }
    dend_48 { pt3dadd( -96.2579, 12.7143, 29.6955, 0.55 ) }
    dend_48 { pt3dadd( -96.6668, 11.9832, 29.2726, 0.28 ) }
    dend_48 { pt3dadd( -97.1328, 11.1432, 28.7944, 0.55 ) }
    dend_48 { pt3dadd( -98.5601, 8.32585, 27.2638, 0.28 ) }
    dend_48 { pt3dadd( -99.0086, 7.47792, 26.7696, 0.55 ) }
    dend_48 { pt3dadd( -99.787, 6.20144, 25.8759, 0.28 ) }
    dend_48 { pt3dadd( -100.409, 5.39838, 25.234, 0.28 ) }
    dend_48 { pt3dadd( -100.948, 4.87037, 24.7909, 0.55 ) }
    dend_48 { pt3dadd( -102.78, 3.39901, 23.6143, 0.28 ) }
    dend_48 { pt3dadd( -103.62, 2.80664, 23.1585, 0.55 ) }
    dend_48 { pt3dadd( -105.671, 1.47507, 22.0321, 0.28 ) }
    dend_48 { pt3dadd( -107.706, 0.31123, 21.0149, 0.28 ) }
    dend_48 { pt3dadd( -109.905, -0.778799, 19.9921, 0.28 ) }
    dend_48 { pt3dadd( -110.901, -1.18057, 19.6119, 0.55 ) }
    dend_48 { pt3dadd( -115.922, -6.12074, 16.6205, 0.55 ) }
    dend_48 { pt3dadd( -121.346, -11.284, 15.0446, 0.55 ) }
    dend_48 { pt3dadd( -126.739, -16.0206, 12.3897, 0.55 ) }
    dend_48 { pt3dadd( -132.282, -20.2028, 9.17218, 0.55 ) }
    dend_48 { pt3dadd( -137.908, -23.7588, 5.39532, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -88.8728, 24.8083, 34.6388, 0.55 ) }
    dend_45 { pt3dadd( -89.707, 24.7353, 34.9859, 0.55 ) }
    dend_45 { pt3dadd( -91.9977, 24.6675, 36.2563, 0.55 ) }
    dend_45 { pt3dadd( -92.8452, 24.6407, 36.7884, 0.55 ) }
    dend_45 { pt3dadd( -94.8214, 24.5304, 38.0967, 0.55 ) }
    dend_45 { pt3dadd( -97.8977, 24.3238, 39.9469, 0.55 ) }
    dend_45 { pt3dadd( -99.5107, 24.2534, 40.8586, 0.28 ) }
    dend_45 { pt3dadd( -102.022, 24.0662, 42.2525, 0.55 ) }
    dend_45 { pt3dadd( -103.895, 23.858, 43.238, 0.55 ) }
    dend_45 { pt3dadd( -104.684, 23.7656, 43.658, 0.28 ) }
    dend_45 { pt3dadd( -109.422, 23.2059, 46.1725, 0.55 ) }
    dend_45 { pt3dadd( -111.649, 22.7801, 47.2584, 0.28 ) }
    dend_45 { pt3dadd( -114.686, 22.1145, 48.5556, 0.28 ) }
    dend_45 { pt3dadd( -117.344, 21.5099, 49.5093, 0.55 ) }
    dend_45 { pt3dadd( -127.494, 21.6228, 54.7464, 0.55 ) }
    dend_45 { pt3dadd( -137.005, 21.987, 61.06, 0.55 ) }
    dend_45 { pt3dadd( -145.532, 21.7878, 68.6573, 0.55 ) }
    dend_45 { pt3dadd( -153.89, 23.7023, 76.2029, 0.55 ) }
    dend_45 { pt3dadd( -160.446, 26.1334, 85.2347, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -165.213, 29.8361, 94.9315, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 84.0677, 8.38089, -51.1473, 0.55 ) }
    dend_42 { pt3dadd( 88.5183, 9.97001, -54.0546, 0.55 ) }
    dend_42 { pt3dadd( 89.9057, 10.4746, -55.0739, 0.55 ) }
    dend_42 { pt3dadd( 91.6216, 11.0527, -56.3624, 0.55 ) }
    dend_42 { pt3dadd( 94.7297, 12.1813, -58.8618, 0.55 ) }
    dend_42 { pt3dadd( 97.9278, 13.3029, -61.6046, 0.55 ) }
    dend_42 { pt3dadd( 99.4451, 13.7341, -62.9793, 0.83 ) }
    dend_42 { pt3dadd( 100.664, 14.0755, -64.2375, 0.55 ) }
    dend_42 { pt3dadd( 101.549, 14.3241, -65.3005, 0.83 ) }
    dend_42 { pt3dadd( 103.567, 14.7647, -68.1667, 0.55 ) }
    dend_42 { pt3dadd( 105.164, 14.9981, -70.6327, 0.55 ) }
    dend_42 { pt3dadd( 106.993, 15.1944, -73.3875, 0.55 ) }
    dend_42 { pt3dadd( 109.056, 15.4948, -76.4585, 0.55 ) }
    dend_42 { pt3dadd( 110.426, 15.6893, -78.5726, 0.55 ) }
    dend_42 { pt3dadd( 111.971, 15.9374, -81.0095, 0.55 ) }
    dend_42 { pt3dadd( 113.33, 16.258, -83.1775, 0.55 ) }
    dend_42 { pt3dadd( 114.221, 16.6056, -84.6029, 0.55 ) }
    dend_42 { pt3dadd( 115.35, 17.5802, -87.3054, 0.55 ) }
    dend_42 { pt3dadd( 115.943, 18.1798, -89.0055, 0.55 ) }
    dend_42 { pt3dadd( 116.396, 19.0, -91.2577, 0.55 ) }
    dend_42 { pt3dadd( 116.944, 20.3546, -95.092, 0.55 ) }
    dend_42 { pt3dadd( 117.039, 20.6397, -95.9709, 0.28 ) }
    dend_42 { pt3dadd( 118.27, 23.973, -106.744, 0.28 ) }
    dend_42 { pt3dadd( 118.727, 24.9383, -109.912, 0.83 ) }
    dend_42 { pt3dadd( 120.537, 28.117, -121.307, 0.83 ) }
    dend_42 { pt3dadd( 121.43, 29.3875, -126.735, 0.83 ) }
    dend_42 { pt3dadd( 121.863, 29.8001, -128.999, 0.55 ) }
    dend_42 { pt3dadd( 122.395, 30.1562, -131.233, 0.55 ) }
    dend_42 { pt3dadd( 124.028, 30.5104, -135.557, 0.55 ) }
    dend_42 { pt3dadd( 125.846, 30.657, -139.453, 0.28 ) }
    dend_42 { pt3dadd( 126.432, 30.3542, -139.873, 0.55 ) }
    dend_42 { pt3dadd( 127.749, 29.4553, -140.268, 0.28 ) }
    dend_42 { pt3dadd( 128.587, 28.8732, -140.357, 0.55 ) }
    dend_42 { pt3dadd( 129.453, 28.207, -140.383, 0.28 ) }
    dend_42 { pt3dadd( 130.515, 27.4231, -140.336, 0.55 ) }
    dend_42 { pt3dadd( 132.144, 26.4349, -140.378, 0.28 ) }
    dend_42 { pt3dadd( 133.436, 25.6337, -140.475, 0.55 ) }
    dend_42 { pt3dadd( 134.909, 24.9035, -140.634, 0.28 ) }
    dend_42 { pt3dadd( 136.919, 24.027, -141.01, 0.55 ) }
    dend_42 { pt3dadd( 139.198, 23.1724, -141.526, 0.55 ) }
    dend_42 { pt3dadd( 141.215, 22.5223, -142.086, 0.28 ) }
    dend_42 { pt3dadd( 144.021, 21.7377, -142.987, 0.55 ) }
    dend_42 { pt3dadd( 148.94, 20.8053, -144.931, 0.55 ) }
    dend_42 { pt3dadd( 151.163, 20.6425, -145.96, 0.55 ) }
    dend_42 { pt3dadd( 152.137, 20.6643, -146.469, 0.83 ) }
    dend_42 { pt3dadd( 154.001, 20.8136, -147.576, 0.55 ) }
    dend_42 { pt3dadd( 155.316, 21.0047, -148.385, 0.83 ) }
    dend_42 { pt3dadd( 158.89, 21.6135, -150.545, 0.55 ) }
    dend_42 { pt3dadd( 161.018, 21.9015, -151.99, 0.28 ) }
    dend_42 { pt3dadd( 161.891, 21.9217, -152.543, 0.55 ) }
    dend_42 { pt3dadd( 164.19, 21.6435, -153.95, 0.28 ) }
    dend_42 { pt3dadd( 164.964, 21.4517, -154.437, 0.55 ) }
    dend_42 { pt3dadd( 166.511, 20.8141, -155.269, 0.28 ) }
    dend_42 { pt3dadd( 168.013, 19.8505, -155.947, 0.55 ) }
    dend_42 { pt3dadd( 170.957, 17.3874, -156.879, 0.28 ) }
    dend_42 { pt3dadd( 172.283, 16.092, -157.197, 0.55 ) }
    dend_42 { pt3dadd( 174.197, 13.9777, -157.635, 0.28 ) }
    dend_42 { pt3dadd( 176.617, 11.2516, -158.085, 0.55 ) }
    dend_42 { pt3dadd( 178.379, 9.28403, -158.364, 0.55 ) }
    dend_42 { pt3dadd( 181.475, 5.93575, -158.724, 0.28 ) }
    dend_42 { pt3dadd( 182.777, 4.69638, -158.945, 0.55 ) }
    dend_42 { pt3dadd( 185.088, 2.85917, -159.5, 0.28 ) }
    dend_42 { pt3dadd( 187.477, 1.30582, -160.103, 0.55 ) }
    dend_42 { pt3dadd( 188.857, 0.710227, -160.521, 0.28 ) }
    dend_42 { pt3dadd( 190.176, 0.379075, -160.89, 0.55 ) }
    dend_42 { pt3dadd( 193.996, -0.164686, -162.121, 0.28 ) }
    dend_42 { pt3dadd( 196.797, -0.376532, -162.934, 0.28 ) }
    dend_42 { pt3dadd( 199.3, -0.402359, -163.577, 0.55 ) }
    dend_42 { pt3dadd( 202.094, -0.294935, -164.362, 0.28 ) }
    dend_42 { pt3dadd( 202.813, -0.24769, -164.517, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 84.0677, 8.38089, -51.1473, 0.55 ) }
    dend_35 { pt3dadd( 84.1148, 7.43872, -52.5814, 0.55 ) }
    dend_35 { pt3dadd( 84.0515, 6.62586, -53.71, 0.28 ) }
    dend_35 { pt3dadd( 83.9921, 5.84222, -54.66, 0.55 ) }
    dend_35 { pt3dadd( 83.9813, 4.16814, -56.7041, 0.28 ) }
    dend_35 { pt3dadd( 83.9768, 4.07216, -56.8509, 0.55 ) }
    dend_35 { pt3dadd( 83.974, 3.59184, -57.6782, 0.28 ) }
    dend_35 { pt3dadd( 83.916, 3.24752, -58.4475, 0.55 ) }
    dend_35 { pt3dadd( 83.8194, 2.92684, -59.3149, 0.28 ) }
    dend_35 { pt3dadd( 83.6622, 2.51196, -60.5332, 0.55 ) }
    dend_35 { pt3dadd( 83.2659, 1.45241, -63.5536, 0.55 ) }
    dend_35 { pt3dadd( 82.8818, 0.506579, -66.3374, 0.55 ) }
    dend_35 { pt3dadd( 82.5591, -0.245374, -68.563, 0.55 ) }
    dend_35 { pt3dadd( 82.213, -0.99112, -70.7219, 0.55 ) }
    dend_35 { pt3dadd( 82.1222, -1.19106, -71.2635, 0.28 ) }
    dend_35 { pt3dadd( 82.0374, -1.42272, -71.8097, 0.55 ) }
    dend_35 { pt3dadd( 81.9757, -1.77867, -72.52, 0.28 ) }
    dend_35 { pt3dadd( 81.9736, -2.48082, -73.7123, 0.55 ) }
    dend_35 { pt3dadd( 82.1432, -4.00084, -75.7102, 0.55 ) }
    dend_35 { pt3dadd( 82.2437, -4.86303, -76.6938, 0.28 ) }
    dend_35 { pt3dadd( 82.2813, -5.70554, -77.7329, 0.55 ) }
    dend_35 { pt3dadd( 82.2198, -6.83744, -79.2319, 0.28 ) }
    dend_35 { pt3dadd( 82.0896, -7.72225, -80.4614, 0.55 ) }
    dend_35 { pt3dadd( 81.8147, -9.02779, -82.2955, 0.28 ) }
    dend_35 { pt3dadd( 81.5442, -10.4076, -84.1383, 0.55 ) }
    dend_35 { pt3dadd( 81.114, -12.3928, -86.8335, 0.28 ) }
    dend_35 { pt3dadd( 80.8518, -13.4425, -88.2716, 0.55 ) }
    dend_35 { pt3dadd( 80.5587, -14.4954, -89.7742, 0.28 ) }
    dend_35 { pt3dadd( 80.2867, -15.3831, -91.1745, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 80.005, -16.4417, -93.0685, 0.55 ) }
    dend_35 { pt3dadd( 79.8528, -17.4617, -94.7981, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 59.7023, 24.6038, -4.76517, 0.55 ) }
    dend_31 { pt3dadd( 62.4323, 24.2466, -4.33599, 0.55 ) }
    dend_31 { pt3dadd( 64.4132, 23.9294, -4.21842, 0.55 ) }
    dend_31 { pt3dadd( 68.7383, 23.2079, -4.19163, 0.55 ) }
    dend_31 { pt3dadd( 70.6744, 22.8607, -4.3566, 0.55 ) }
    dend_31 { pt3dadd( 72.7815, 22.5378, -4.63951, 0.55 ) }
    dend_31 { pt3dadd( 75.5999, 22.1747, -5.21548, 0.55 ) }
    dend_31 { pt3dadd( 78.5578, 21.7408, -6.11587, 0.55 ) }
    dend_31 { pt3dadd( 80.1007, 21.5107, -6.77042, 0.55 ) }
    dend_31 { pt3dadd( 83.2123, 21.0862, -8.53767, 0.55 ) }
    dend_31 { pt3dadd( 84.6427, 20.9077, -9.3972, 0.55 ) }
    dend_31 { pt3dadd( 87.9895, 20.4321, -11.5078, 0.55 ) }
    dend_31 { pt3dadd( 90.2574, 20.0131, -12.928, 0.55 ) }
    dend_31 { pt3dadd( 91.9309, 19.6859, -13.8957, 0.83 ) }
    dend_31 { pt3dadd( 94.6065, 19.0567, -15.4214, 0.55 ) }
    dend_31 { pt3dadd( 97.2329, 18.2969, -16.8245, 0.83 ) }
    dend_31 { pt3dadd( 99.466, 17.5377, -17.9443, 0.55 ) }
    dend_31 { pt3dadd( 101.46, 16.8811, -18.8305, 0.55 ) }
    dend_31 { pt3dadd( 102.598, 16.5525, -19.2648, 0.83 ) }
    dend_31 { pt3dadd( 105.262, 15.7791, -20.1345, 0.28 ) }
    dend_31 { pt3dadd( 106.591, 15.4419, -20.4752, 0.28 ) }
    dend_31 { pt3dadd( 107.874, 15.0392, -20.8814, 0.28 ) }
    dend_31 { pt3dadd( 109.26, 14.6425, -21.3227, 0.28 ) }
    dend_31 { pt3dadd( 111.476, 14.0552, -22.0711, 0.28 ) }
    dend_31 { pt3dadd( 112.369, 13.8274, -22.344, 0.55 ) }
    dend_31 { pt3dadd( 114.517, 13.2833, -22.7811, 0.55 ) }
    dend_31 { pt3dadd( 118.395, 12.2461, -23.3748, 0.55 ) }
    dend_31 { pt3dadd( 119.471, 11.9254, -23.4946, 0.55 ) }
    dend_31 { pt3dadd( 120.435, 11.603, -23.5635, 0.83 ) }
    dend_31 { pt3dadd( 122.538, 10.9506, -23.5364, 0.55 ) }
    dend_31 { pt3dadd( 124.368, 10.3842, -23.4832, 0.55 ) }
    dend_31 { pt3dadd( 126.097, 9.85547, -23.424, 0.55 ) }
    dend_31 { pt3dadd( 127.434, 9.42644, -23.4186, 0.55 ) }
    dend_31 { pt3dadd( 129.547, 8.60789, -23.5302, 0.55 ) }
    dend_31 { pt3dadd( 132.028, 7.43569, -23.8246, 0.55 ) }
    dend_31 { pt3dadd( 135.863, 5.20138, -24.604, 0.55 ) }
    dend_31 { pt3dadd( 137.958, 3.67183, -25.2031, 0.55 ) }
    dend_31 { pt3dadd( 139.765, 2.03621, -25.8516, 0.28 ) }
    dend_31 { pt3dadd( 140.301, 1.42914, -26.091, 0.55 ) }
    dend_31 { pt3dadd( 141.477, -0.279736, -26.7262, 0.28 ) }
    dend_31 { pt3dadd( 142.479, -2.2072, -27.3804, 0.55 ) }
    dend_31 { pt3dadd( 143.419, -4.63893, -27.9827, 0.55 ) }
    dend_31 { pt3dadd( 144.06, -6.24452, -28.3027, 0.28 ) }
    dend_31 { pt3dadd( 144.296, -6.81433, -28.3883, 0.55 ) }
    dend_31 { pt3dadd( 144.912, -8.23109, -28.583, 0.28 ) }
    dend_31 { pt3dadd( 145.756, -10.0777, -28.794, 0.55 ) }
    dend_31 { pt3dadd( 147.967, -14.5342, -29.2013, 0.55 ) }
    dend_31 { pt3dadd( 149.123, -16.7838, -29.3617, 0.55 ) }
    dend_31 { pt3dadd( 150.199, -18.8469, -29.4911, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 59.7023, 24.6038, -4.76517, 0.55 ) }
    dend_30 { pt3dadd( 61.4323, 24.7247, -3.50842, 0.55 ) }
    dend_30 { pt3dadd( 61.9865, 24.7651, -3.13539, 0.55 ) }
    dend_30 { pt3dadd( 64.0532, 24.8299, -1.84576, 0.55 ) }
    dend_30 { pt3dadd( 66.3597, 24.9422, -0.366567, 0.55 ) }
    dend_30 { pt3dadd( 69.3177, 25.0703, 1.60518, 0.55 ) }
    dend_30 { pt3dadd( 70.1346, 25.1072, 2.14459, 0.55 ) }
    dend_30 { pt3dadd( 71.6021, 25.1204, 3.09067, 0.55 ) }
    dend_30 { pt3dadd( 73.2081, 25.1783, 4.07346, 0.55 ) }
    dend_30 { pt3dadd( 75.0715, 25.3068, 5.1411, 0.55 ) }
    dend_30 { pt3dadd( 76.8266, 25.4515, 6.15671, 0.55 ) }
    dend_30 { pt3dadd( 77.7868, 25.5791, 6.67608, 0.55 ) }
    dend_30 { pt3dadd( 78.9128, 25.7611, 7.28842, 0.55 ) }
    dend_30 { pt3dadd( 80.3036, 26.0287, 8.02681, 0.83 ) }
    dend_30 { pt3dadd( 82.5764, 26.4918, 9.00094, 0.55 ) }
    dend_30 { pt3dadd( 84.0821, 26.749, 9.56648, 0.83 ) }
    dend_30 { pt3dadd( 86.1746, 27.0208, 10.2676, 0.55 ) }
    dend_30 { pt3dadd( 86.8184, 27.071, 10.469, 0.55 ) }
    dend_30 { pt3dadd( 88.8186, 27.1349, 11.0392, 0.55 ) }
    dend_30 { pt3dadd( 92.4026, 27.0554, 11.8892, 0.55 ) }
    dend_30 { pt3dadd( 95.0313, 26.8622, 12.4326, 0.55 ) }
    dend_30 { pt3dadd( 97.117, 26.6088, 12.8973, 0.55 ) }
    dend_30 { pt3dadd( 99.2495, 26.2326, 13.4268, 0.55 ) }
    dend_30 { pt3dadd( 99.6987, 26.1415, 13.5387, 0.28 ) }
    dend_30 { pt3dadd( 100.611, 25.9216, 13.7585, 0.83 ) }
    dend_30 { pt3dadd( 104.358, 24.963, 14.6751, 0.55 ) }
    dend_30 { pt3dadd( 106.979, 24.3016, 15.2671, 0.55 ) }
    dend_30 { pt3dadd( 109.128, 23.8049, 15.8133, 0.55 ) }
    dend_30 { pt3dadd( 110.413, 23.5028, 16.1511, 0.83 ) }
    dend_30 { pt3dadd( 111.424, 23.279, 16.4208, 0.28 ) }
    dend_30 { pt3dadd( 112.341, 23.0786, 16.6573, 0.55 ) }
    dend_30 { pt3dadd( 119.445, 23.0776, 19.7451, 0.55 ) }
    dend_30 { pt3dadd( 126.967, 22.1023, 21.3157, 0.55 ) }
    dend_30 { pt3dadd( 134.433, 22.0057, 23.3783, 0.55 ) }
    dend_30 { pt3dadd( 141.195, 20.6022, 26.8878, 0.55 ) }
    dend_30 { pt3dadd( 147.538, 18.1201, 30.5771, 0.55 ) }
    dend_30 { pt3dadd( 154.422, 14.851, 31.9654, 0.55 ) }
    dend_30 { pt3dadd( 161.171, 11.05, 31.9653, 0.55 ) }
    dend_30 { pt3dadd( 168.537, 8.66758, 31.6928, 0.55 ) }
    dend_30 { pt3dadd( 175.842, 6.09907, 31.9151, 0.55 ) }
    dend_30 { pt3dadd( 183.404, 4.42695, 31.768, 0.55 ) }
    dend_30 { pt3dadd( 190.957, 2.95523, 32.6557, 0.55 ) }
    dend_30 { pt3dadd( 198.085, 0.130867, 33.7567, 0.55 ) }
    dend_30 { pt3dadd( 205.385, -1.45575, 35.806, 0.55 ) }
    dend_30 { pt3dadd( 212.373, -2.07577, 39.0909, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.33021, -25.8903, 5.87709, 1.38 ) }
    dend_13 { pt3dadd( 1.86519, -28.961, 5.56048, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.33021, -25.8903, 5.87709, 0.55 ) }
    dend_12 { pt3dadd( -2.32754, -27.1114, 5.8604, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.42898, -28.6768, 5.84343, 0.55 ) }
    dend_12 { pt3dadd( -4.28807, -29.7132, 5.83937, 0.55 ) }
    dend_12 { pt3dadd( -5.00667, -30.5801, 5.71929, 0.55 ) }
    dend_12 { pt3dadd( -6.568, -32.3763, 5.30305, 0.55 ) }
    dend_12 { pt3dadd( -7.66193, -33.576, 4.97921, 0.55 ) }
    dend_12 { pt3dadd( -8.63275, -34.6518, 4.65289, 0.55 ) }
    dend_12 { pt3dadd( -11.128, -37.2704, 3.81647, 0.55 ) }
    dend_12 { pt3dadd( -14.1282, -40.3024, 2.83599, 0.55 ) }
    dend_12 { pt3dadd( -16.45, -42.599, 2.03441, 0.55 ) }
    dend_12 { pt3dadd( -17.9306, -44.1071, 1.50054, 0.55 ) }
    dend_12 { pt3dadd( -19.629, -45.9165, 0.893633, 0.55 ) }
    dend_12 { pt3dadd( -21.7829, -48.5112, 0.154274, 0.55 ) }
    dend_12 { pt3dadd( -23.0424, -50.3517, -0.249456, 0.55 ) }
    dend_12 { pt3dadd( -24.6002, -52.9985, -0.603718, 0.55 ) }
    dend_12 { pt3dadd( -25.8426, -55.4785, -0.833804, 0.55 ) }
    dend_12 { pt3dadd( -27.0961, -58.5735, -1.04215, 0.55 ) }
    dend_12 { pt3dadd( -28.2766, -62.2072, -1.18347, 0.55 ) }
    dend_12 { pt3dadd( -28.9104, -64.9846, -1.21142, 0.55 ) }
    dend_12 { pt3dadd( -29.1363, -66.3664, -1.13048, 0.55 ) }
    dend_12 { pt3dadd( -29.4812, -69.6125, -0.753931, 0.55 ) }
    dend_12 { pt3dadd( -29.7538, -72.6494, -0.319591, 0.55 ) }
    dend_12 { pt3dadd( -29.8822, -75.7075, 0.351843, 0.55 ) }
    dend_12 { pt3dadd( -29.9787, -77.4615, 0.83176, 0.55 ) }
    dend_12 { pt3dadd( -30.2538, -82.8833, 2.51633, 0.55 ) }
    dend_12 { pt3dadd( -30.2771, -83.2825, 2.64723, 0.55 ) }
    dend_12 { pt3dadd( -30.3763, -85.7268, 3.5111, 0.55 ) }
    dend_12 { pt3dadd( -30.7625, -90.0972, 5.14846, 0.55 ) }
    dend_12 { pt3dadd( -30.896, -91.5592, 5.60877, 0.55 ) }
    dend_12 { pt3dadd( -31.1422, -93.8467, 5.93403, 0.55 ) }
    dend_12 { pt3dadd( -31.2025, -94.6977, 5.8618, 0.55 ) }
    dend_12 { pt3dadd( -31.2533, -97.5809, 5.08438, 0.55 ) }
    dend_12 { pt3dadd( -31.1637, -99.4508, 4.19383, 0.55 ) }
    dend_12 { pt3dadd( -30.9109, -102.433, 2.17724, 0.55 ) }
    dend_12 { pt3dadd( -30.4413, -106.083, -0.563002, 0.28 ) }
    dend_12 { pt3dadd( -30.3053, -106.986, -1.36088, 0.55 ) }
    dend_12 { pt3dadd( -30.0889, -108.356, -2.69011, 0.28 ) }
    dend_12 { pt3dadd( -30.0577, -108.562, -2.90139, 0.55 ) }
    dend_12 { pt3dadd( -29.8983, -109.692, -3.96259, 0.28 ) }
    dend_12 { pt3dadd( -29.8745, -110.075, -4.23648, 0.55 ) }
    dend_12 { pt3dadd( -29.8137, -112.065, -5.28008, 0.28 ) }
    dend_12 { pt3dadd( -29.8195, -112.742, -5.62794, 0.55 ) }
    dend_12 { pt3dadd( -29.866, -114.7, -6.52429, 0.28 ) }
    dend_12 { pt3dadd( -29.8781, -115.316, -6.80408, 0.55 ) }
    dend_12 { pt3dadd( -29.9386, -117.442, -7.73589, 0.28 ) }
    dend_12 { pt3dadd( -29.961, -118.42, -8.16925, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.8636, -66.9003, 50.0527, 0.55 ) }
    dend_10 { pt3dadd( -18.8865, -75.4901, 56.6618, 0.55 ) }
    dend_10 { pt3dadd( -25.249, -83.2383, 63.1563, 0.55 ) }
    dend_10 { pt3dadd( -31.0333, -91.7078, 69.2804, 0.55 ) }
    dend_10 { pt3dadd( -36.9485, -100.252, 75.1712, 0.55 ) }
    dend_10 { pt3dadd( -41.2467, -109.921, 80.7149, 0.55 ) }
    dend_10 { pt3dadd( -45.6655, -119.19, 86.8182, 0.55 ) }
    dend_10 { pt3dadd( -47.8472, -130.087, 91.198, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.8636, -66.9003, 50.0527, 0.55 ) }
    dend_3 { pt3dadd( -14.0288, -73.0717, 56.3229, 0.55 ) }
    dend_3 { pt3dadd( -13.4399, -80.1682, 61.492, 0.55 ) }
    dend_3 { pt3dadd( -14.2007, -87.4979, 66.3009, 0.55 ) }
    dend_3 { pt3dadd( -15.2071, -95.3115, 70.2206, 0.55 ) }
    dend_3 { pt3dadd( -15.9076, -103.048, 74.3529, 0.55 ) }
    dend_3 { pt3dadd( -16.711, -110.463, 79.0229, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -49.1362, 36.1304, -12.0617, 0.83 ) }
    dend_60 { pt3dadd( -49.0735, 37.4267, -13.9984, 0.83 ) }
    dend_60 { pt3dadd( -48.9894, 40.6013, -18.3654, 0.55 ) }
    dend_60 { pt3dadd( -48.9364, 41.9938, -20.1134, 0.83 ) }
    dend_60 { pt3dadd( -48.8605, 43.5043, -21.865, 0.55 ) }
    dend_60 { pt3dadd( -48.7558, 45.1019, -23.4122, 0.55 ) }
    dend_60 { pt3dadd( -48.6837, 45.9247, -24.0744, 0.28 ) }
    dend_60 { pt3dadd( -48.6573, 46.4933, -24.3583, 0.55 ) }
    dend_60 { pt3dadd( -48.4624, 48.4677, -24.8902, 0.28 ) }
    dend_60 { pt3dadd( -48.3531, 49.3208, -25.0778, 0.55 ) }
    dend_60 { pt3dadd( -47.9962, 52.3046, -25.6052, 0.28 ) }
    dend_60 { pt3dadd( -47.765, 54.6789, -25.9363, 0.55 ) }
    dend_60 { pt3dadd( -47.5661, 58.3957, -26.317, 0.28 ) }
    dend_60 { pt3dadd( -47.4968, 61.6663, -26.5751, 0.28 ) }
    dend_60 { pt3dadd( -47.558, 63.4964, -26.6708, 0.55 ) }
    dend_60 { pt3dadd( -47.7611, 65.6582, -26.7657, 0.28 ) }
    dend_60 { pt3dadd( -47.9232, 66.6878, -26.7878, 0.55 ) }
    dend_60 { pt3dadd( -48.4473, 69.0829, -26.9296, 0.28 ) }
    dend_60 { pt3dadd( -48.9119, 70.6582, -27.0929, 0.28 ) }
    dend_60 { pt3dadd( -49.407, 72.1952, -27.2962, 0.28 ) }
    dend_60 { pt3dadd( -49.6374, 73.0089, -27.4111, 0.55 ) }
    dend_60 { pt3dadd( -50.4004, 76.3008, -27.9781, 0.28 ) }
    dend_60 { pt3dadd( -51.1818, 80.1976, -28.7399, 0.55 ) }
    dend_60 { pt3dadd( -51.4323, 81.5441, -29.011, 0.55 ) }
    dend_60 { pt3dadd( -51.7019, 82.8973, -29.2505, 0.55 ) }
    dend_60 { pt3dadd( -52.4334, 85.7526, -29.7857, 0.55 ) }
    dend_60 { pt3dadd( -53.0407, 87.6107, -30.1617, 0.28 ) }
    dend_60 { pt3dadd( -53.355, 88.3058, -30.3024, 0.55 ) }
    dend_60 { pt3dadd( -54.3384, 90.1838, -30.6236, 0.28 ) }
    dend_60 { pt3dadd( -55.4796, 92.1624, -31.0364, 0.55 ) }
    dend_60 { pt3dadd( -57.4112, 94.9648, -31.7085, 0.28 ) }
    dend_60 { pt3dadd( -58.357, 96.1164, -32.0111, 0.28 ) }
    dend_60 { pt3dadd( -59.9145, 97.6702, -32.5755, 0.55 ) }
    dend_60 { pt3dadd( -61.6686, 99.2627, -33.2425, 0.28 ) }
    dend_60 { pt3dadd( -61.9881, 99.5066, -33.3557, 0.55 ) }
    dend_60 { pt3dadd( -63.1384, 100.267, -33.7364, 0.28 ) }
    dend_60 { pt3dadd( -67.0957, 102.678, -34.942, 0.55 ) }
    dend_60 { pt3dadd( -72.6201, 105.539, -36.733, 0.28 ) }
    dend_60 { pt3dadd( -73.6474, 105.997, -37.1101, 0.55 ) }
    dend_60 { pt3dadd( -76.4727, 107.146, -38.1722, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -77.6627, 107.608, -38.6451, 0.28 ) }
    dend_60 { pt3dadd( -78.7028, 107.978, -39.0973, 0.55 ) }
    dend_60 { pt3dadd( -81.7713, 108.687, -40.5777, 0.28 ) }
    dend_60 { pt3dadd( -83.9259, 108.998, -41.5106, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -49.1362, 36.1304, -12.0617, 0.55 ) }
    dend_57 { pt3dadd( -49.4502, 37.4941, -12.2813, 0.55 ) }
    dend_57 { pt3dadd( -49.6532, 38.3004, -12.3333, 0.28 ) }
    dend_57 { pt3dadd( -49.909, 38.8719, -12.2216, 0.55 ) }
    dend_57 { pt3dadd( -50.4964, 40.1844, -11.9651, 0.28 ) }
    dend_57 { pt3dadd( -50.909, 41.1063, -11.7849, 0.55 ) }
    dend_57 { pt3dadd( -51.6696, 42.8058, -11.4528, 0.28 ) }
    dend_57 { pt3dadd( -52.1647, 43.7144, -11.1075, 0.55 ) }
    dend_57 { pt3dadd( -53.9725, 45.8465, -9.46363, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -137.908, -23.7588, 5.39532, 0.55 ) }
    dend_52 { pt3dadd( -145.009, -31.1929, 1.35485, 0.55 ) }
    dend_52 { pt3dadd( -150.474, -39.3916, -3.63745, 0.55 ) }
    dend_52 { pt3dadd( -155.138, -46.4853, -10.7038, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -137.908, -23.7588, 5.39532, 0.55 ) }
    dend_49 { pt3dadd( -146.372, -31.7068, -0.0690136, 0.55 ) }
    dend_49 { pt3dadd( -153.595, -39.7747, -6.95361, 0.55 ) }
    dend_49 { pt3dadd( -160.32, -48.0417, -14.1009, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -165.213, 29.8361, 94.9315, 0.55 ) }
    dend_47 { pt3dadd( -172.36, 33.0087, 101.618, 0.55 ) }
    dend_47 { pt3dadd( -180.575, 36.0787, 106.999, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -165.213, 29.8361, 94.9315, 0.55 ) }
    dend_46 { pt3dadd( -174.092, 30.318, 102.403, 0.55 ) }
    dend_46 { pt3dadd( -183.795, 31.9507, 108.575, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 79.8528, -17.4617, -94.7981, 0.28 ) }
    dend_39 { pt3dadd( 86.491, -18.8184, -109.917, 0.28 ) }
    dend_39 { pt3dadd( 87.1368, -19.0612, -111.304, 0.55 ) }
    dend_39 { pt3dadd( 88.227, -19.471, -113.644, 0.28 ) }
    dend_39 { pt3dadd( 89.145, -19.8162, -115.615, 0.28 ) }
    dend_39 { pt3dadd( 90.3601, -20.273, -118.224, 0.55 ) }
    dend_39 { pt3dadd( 91.9622, -20.8753, -121.664, 0.55 ) }
    dend_39 { pt3dadd( 94.0332, -22.953, -124.05, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 79.8528, -17.4617, -94.7981, 0.55 ) }
    dend_36 { pt3dadd( 80.2502, -18.1914, -96.6892, 0.55 ) }
    dend_36 { pt3dadd( 80.3202, -18.4849, -97.5248, 0.28 ) }
    dend_36 { pt3dadd( 80.3887, -18.9597, -98.973, 0.55 ) }
    dend_36 { pt3dadd( 80.5394, -20.0057, -102.164, 0.28 ) }
    dend_36 { pt3dadd( 80.6439, -20.7306, -104.375, 0.55 ) }
    dend_36 { pt3dadd( 80.8208, -21.9587, -108.121, 0.28 ) }
    dend_36 { pt3dadd( 80.9689, -23.3053, -112.928, 0.28 ) }
    dend_36 { pt3dadd( 80.9765, -23.8888, -115.162, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 150.199, -18.8469, -29.4911, 0.28 ) }
    dend_33 { pt3dadd( 151.898, -20.581, -28.5122, 0.28 ) }
    dend_33 { pt3dadd( 154.064, -22.8125, -26.9859, 0.28 ) }
    dend_33 { pt3dadd( 155.441, -24.2421, -25.9212, 0.55 ) }
    dend_33 { pt3dadd( 156.268, -25.0104, -25.2878, 0.28 ) }
    dend_33 { pt3dadd( 156.708, -25.423, -24.9413, 0.28 ) }
    dend_33 { pt3dadd( 158.887, -27.4717, -23.2722, 0.55 ) }
    dend_33 { pt3dadd( 159.391, -27.9023, -22.825, 0.28 ) }
    dend_33 { pt3dadd( 160.6, -29.0173, -21.5351, 0.55 ) }
    dend_33 { pt3dadd( 161.631, -30.0056, -20.469, 0.28 ) }
    dend_33 { pt3dadd( 162.524, -30.8104, -19.6263, 0.55 ) }
    dend_33 { pt3dadd( 163.569, -31.8001, -18.6993, 0.55 ) }
    dend_33 { pt3dadd( 165.221, -33.453, -17.4894, 0.55 ) }
    dend_33 { pt3dadd( 165.618, -33.865, -17.2107, 0.55 ) }
    dend_33 { pt3dadd( 167.047, -35.4152, -16.1884, 0.28 ) }
    dend_33 { pt3dadd( 167.602, -36.0577, -15.7899, 0.55 ) }
    dend_33 { pt3dadd( 168.37, -36.8737, -15.2874, 0.28 ) }
    dend_33 { pt3dadd( 169.453, -38.0526, -14.6382, 0.55 ) }
    dend_33 { pt3dadd( 171.226, -40.0031, -13.9413, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 150.199, -18.8469, -29.4911, 0.55 ) }
    dend_32 { pt3dadd( 147.544, -18.951, -29.396, 0.55 ) }
    dend_32 { pt3dadd( 145.388, -19.0355, -29.3187, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.86519, -28.961, 5.56048, 0.83 ) }
    dend_17 { pt3dadd( 1.9712, -29.1624, 5.55407, 0.83 ) }
    dend_17 { pt3dadd( 3.16931, -30.9331, 5.63347, 0.83 ) }
    dend_17 { pt3dadd( 4.22845, -32.4847, 5.59674, 0.55 ) }
    dend_17 { pt3dadd( 5.07343, -33.7225, 5.56744, 0.55 ) }
    dend_17 { pt3dadd( 6.86945, -36.3536, 5.50515, 0.83 ) }
    dend_17 { pt3dadd( 9.0479, -39.5449, 5.42961, 0.55 ) }
    dend_17 { pt3dadd( 10.2305, -41.2133, 5.42812, 0.83 ) }
    dend_17 { pt3dadd( 12.3032, -43.859, 5.56555, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.86519, -28.961, 5.56048, 0.55 ) }
    dend_14 { pt3dadd( 0.35902, -30.5259, 1.39028, 0.55 ) }
    dend_14 { pt3dadd( -1.25768, -32.2057, -3.08593, 0.55 ) }
    dend_14 { pt3dadd( -3.16619, -34.1887, -8.37012, 0.55 ) }
    dend_14 { pt3dadd( -5.48375, -36.5966, -14.7868, 0.55 ) }
    dend_14 { pt3dadd( -6.79889, -37.9631, -18.4281, 0.55 ) }
    dend_14 { pt3dadd( -7.06308, -38.2376, -19.1596, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.711, -110.463, 79.0229, 0.55 ) }
    dend_7 { pt3dadd( -16.9374, -116.359, 83.4598, 0.55 ) }
    dend_7 { pt3dadd( -15.9495, -122.477, 87.4702, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -16.711, -110.463, 79.0229, 0.55 ) }
    dend_4 { pt3dadd( -17.4815, -119.613, 84.3264, 0.55 ) }
    dend_4 { pt3dadd( -18.8136, -128.602, 89.7925, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -53.9725, 45.8465, -9.46363, 0.28 ) }
    dend_59 { pt3dadd( -54.6237, 46.9616, -8.57357, 0.28 ) }
    dend_59 { pt3dadd( -54.8593, 47.3933, -8.19267, 0.55 ) }
    dend_59 { pt3dadd( -55.5247, 48.6493, -7.06873, 0.28 ) }
    dend_59 { pt3dadd( -55.8683, 49.26, -6.56733, 0.55 ) }
    dend_59 { pt3dadd( -56.8217, 50.9018, -5.26003, 0.28 ) }
    dend_59 { pt3dadd( -57.7907, 52.5705, -3.93134, 0.55 ) }
    dend_59 { pt3dadd( -59.3839, 55.2092, -1.68417, 0.28 ) }
    dend_59 { pt3dadd( -59.7231, 55.7754, -1.20604, 0.55 ) }
    dend_59 { pt3dadd( -60.481, 57.0823, -0.20888, 0.28 ) }
    dend_59 { pt3dadd( -60.7768, 57.6206, 0.17697, 0.55 ) }
    dend_59 { pt3dadd( -64.2834, 61.3022, 3.88613, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -68.5279, 65.3399, 6.1861, 0.55 ) }
    dend_59 { pt3dadd( -71.9858, 69.7225, 9.09195, 0.55 ) }
    dend_59 { pt3dadd( -74.7073, 74.8386, 11.5469, 0.55 ) }
    dend_59 { pt3dadd( -78.1347, 79.6179, 13.7872, 0.55 ) }
    dend_59 { pt3dadd( -81.8995, 83.5783, 16.9097, 0.55 ) }
    dend_59 { pt3dadd( -85.0628, 87.2684, 20.9078, 0.55 ) }
    dend_59 { pt3dadd( -87.4609, 90.536, 25.7223, 0.55 ) }
    dend_59 { pt3dadd( -89.9282, 94.1112, 30.2764, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.9725, 45.8465, -9.46363, 0.55 ) }
    dend_58 { pt3dadd( -57.3345, 44.173, -8.31061, 0.55 ) }
    dend_58 { pt3dadd( -59.074, 43.2431, -7.71864, 0.28 ) }
    dend_58 { pt3dadd( -60.3685, 42.5512, -7.27813, 0.55 ) }
    dend_58 { pt3dadd( -61.4474, 41.9744, -6.91098, 0.28 ) }
    dend_58 { pt3dadd( -62.2031, 41.5705, -6.65381, 0.55 ) }
    dend_58 { pt3dadd( -64.2869, 40.4566, -5.94469, 0.28 ) }
    dend_58 { pt3dadd( -65.6488, 39.6058, -5.66461, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -155.138, -46.4853, -10.7038, 0.55 ) }
    dend_54 { pt3dadd( -160.026, -55.44, -13.4951, 0.55 ) }
    dend_54 { pt3dadd( -164.598, -64.8227, -15.2111, 0.55 ) }
    dend_54 { pt3dadd( -168.581, -73.9221, -18.8455, 0.55 ) }
    dend_54 { pt3dadd( -173.461, -83.0619, -20.9727, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -155.138, -46.4853, -10.7038, 0.55 ) }
    dend_53 { pt3dadd( -161.539, -48.8857, -19.0083, 0.55 ) }
    dend_53 { pt3dadd( -167.551, -49.6205, -27.8966, 0.55 ) }
    dend_53 { pt3dadd( -174.296, -51.8786, -35.9657, 0.55 ) }
    dend_53 { pt3dadd( -182.889, -52.8492, -42.3614, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -160.32, -48.0417, -14.1009, 0.55 ) }
    dend_51 { pt3dadd( -166.21, -52.1556, -22.3287, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -160.32, -48.0417, -14.1009, 0.55 ) }
    dend_50 { pt3dadd( -165.213, -57.8052, -14.853, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 94.0332, -22.953, -124.05, 0.28 ) }
    dend_41 { pt3dadd( 96.9191, -24.3268, -126.551, 0.28 ) }
    dend_41 { pt3dadd( 98.2596, -24.9649, -127.712, 0.55 ) }
    dend_41 { pt3dadd( 100.816, -26.1819, -129.927, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 94.0332, -22.953, -124.05, 0.55 ) }
    dend_40 { pt3dadd( 93.125, -23.5289, -126.206, 0.55 ) }
    dend_40 { pt3dadd( 91.3083, -24.6811, -130.52, 0.28 ) }
    dend_40 { pt3dadd( 90.7165, -25.0564, -131.925, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 80.9765, -23.8888, -115.162, 0.28 ) }
    dend_38 { pt3dadd( 81.2613, -25.8129, -120.289, 0.28 ) }
    dend_38 { pt3dadd( 81.4024, -26.7656, -122.827, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 80.9765, -23.8888, -115.162, 0.55 ) }
    dend_37 { pt3dadd( 79.1596, -25.0093, -114.108, 0.55 ) }
    dend_37 { pt3dadd( 74.0928, -28.134, -111.167, 0.28 ) }
    dend_37 { pt3dadd( 72.8892, -28.8762, -110.469, 0.55 ) }
    dend_37 { pt3dadd( 69.5966, -30.9068, -108.558, 0.28 ) }
    dend_37 { pt3dadd( 67.4742, -32.2157, -107.326, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.3032, -43.859, 5.56555, 0.83 ) }
    dend_23 { pt3dadd( 12.3426, -44.145, 5.54202, 0.83 ) }
    dend_23 { pt3dadd( 12.9206, -47.8795, 5.33464, 0.83 ) }
    dend_23 { pt3dadd( 13.1205, -50.6754, 5.37111, 0.83 ) }
    dend_23 { pt3dadd( 13.1391, -53.3651, 5.69574, 0.83 ) }
    dend_23 { pt3dadd( 13.0512, -56.9329, 6.40604, 0.83 ) }
    dend_23 { pt3dadd( 12.8436, -61.0382, 7.38365, 0.83 ) }
    dend_23 { pt3dadd( 12.6446, -65.6071, 8.71665, 0.83 ) }
    dend_23 { pt3dadd( 12.4636, -70.0331, 10.2189, 0.83 ) }
    dend_23 { pt3dadd( 11.8746, -75.4854, 11.9552, 0.83 ) }
    dend_23 { pt3dadd( 11.4566, -78.003, 12.6164, 0.83 ) }
    dend_23 { pt3dadd( 11.1283, -79.9037, 12.9937, 0.83 ) }
    dend_23 { pt3dadd( 10.4164, -83.5573, 13.6441, 0.83 ) }
    dend_23 { pt3dadd( 9.84626, -86.8381, 14.041, 0.83 ) }
    dend_23 { pt3dadd( 8.96895, -93.8696, 14.0846, 0.83 ) }
    dend_23 { pt3dadd( 8.50681, -97.7435, 13.6063, 0.83 ) }
    dend_23 { pt3dadd( 8.06478, -101.328, 12.9079, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.3032, -43.859, 5.56555, 0.55 ) }
    dend_18 { pt3dadd( 11.6057, -45.6389, 5.48056, 0.55 ) }
    dend_18 { pt3dadd( 11.0604, -46.9321, 5.50799, 0.55 ) }
    dend_18 { pt3dadd( 10.7147, -47.758, 5.61014, 0.55 ) }
    dend_18 { pt3dadd( 10.2052, -49.0479, 5.90429, 0.55 ) }
    dend_18 { pt3dadd( 9.22421, -51.5988, 6.65969, 0.55 ) }
    dend_18 { pt3dadd( 8.41976, -53.5307, 7.433, 0.55 ) }
    dend_18 { pt3dadd( 7.74024, -55.0793, 8.21263, 0.55 ) }
    dend_18 { pt3dadd( 6.99302, -56.6454, 9.09873, 0.55 ) }
    dend_18 { pt3dadd( 6.34808, -57.9448, 9.89666, 0.28 ) }
    dend_18 { pt3dadd( 5.77253, -59.0074, 10.6951, 0.55 ) }
    dend_18 { pt3dadd( 4.62308, -60.9432, 12.3999, 0.55 ) }
    dend_18 { pt3dadd( 3.82818, -62.133, 13.5544, 0.55 ) }
    dend_18 { pt3dadd( 3.37722, -62.7998, 14.1931, 0.55 ) }
    dend_18 { pt3dadd( 2.8161, -63.5883, 14.8981, 0.83 ) }
    dend_18 { pt3dadd( 1.16608, -65.9271, 16.8339, 0.28 ) }
    dend_18 { pt3dadd( 0.625321, -66.7012, 17.4545, 0.55 ) }
    dend_18 { pt3dadd( -0.299234, -68.0965, 18.5404, 0.28 ) }
    dend_18 { pt3dadd( -0.590676, -68.5265, 18.9054, 0.55 ) }
    dend_18 { pt3dadd( -1.21651, -69.5339, 19.7556, 0.28 ) }
    dend_18 { pt3dadd( -1.5595, -70.1065, 20.1992, 0.55 ) }
    dend_18 { pt3dadd( -2.67789, -71.9756, 21.1326, 0.55 ) }
    dend_18 { pt3dadd( -4.90441, -76.9539, 25.8216, 0.55 ) }
    dend_18 { pt3dadd( -6.87319, -81.6847, 30.8685, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.06308, -38.2376, -19.1596, 0.55 ) }
    dend_16 { pt3dadd( -10.204, -39.7516, -22.3926, 0.55 ) }
    dend_16 { pt3dadd( -11.1397, -40.1232, -23.2976, 0.55 ) }
    dend_16 { pt3dadd( -13.4887, -41.0621, -25.4794, 0.55 ) }
    dend_16 { pt3dadd( -18.6468, -42.9727, -30.0268, 0.28 ) }
    dend_16 { pt3dadd( -19.4161, -43.242, -30.6543, 0.55 ) }
    dend_16 { pt3dadd( -22.6124, -44.4614, -33.1504, 0.55 ) }
    dend_16 { pt3dadd( -26.9811, -46.1574, -36.1476, 0.55 ) }
    dend_16 { pt3dadd( -28.6582, -46.7567, -37.2515, 0.28 ) }
    dend_16 { pt3dadd( -30.1379, -47.1886, -38.131, 0.28 ) }
    dend_16 { pt3dadd( -32.6607, -47.8958, -39.2993, 0.55 ) }
    dend_16 { pt3dadd( -35.7608, -48.6138, -40.8291, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -38.6574, -49.0405, -42.2925, 0.55 ) }
    dend_16 { pt3dadd( -40.9178, -49.1983, -43.3742, 0.55 ) }
    dend_16 { pt3dadd( -42.4921, -49.1832, -44.1594, 0.55 ) }
    dend_16 { pt3dadd( -47.1486, -48.9399, -46.5857, 0.55 ) }
    dend_16 { pt3dadd( -52.0862, -48.384, -49.0385, 0.55 ) }
    dend_16 { pt3dadd( -54.1374, -48.0546, -50.0002, 0.28 ) }
    dend_16 { pt3dadd( -56.0843, -47.7679, -50.9481, 0.55 ) }
    dend_16 { pt3dadd( -60.0039, -47.4193, -52.8457, 0.28 ) }
    dend_16 { pt3dadd( -61.3182, -47.3371, -53.4738, 0.83 ) }
    dend_16 { pt3dadd( -63.7701, -47.166, -54.4911, 0.28 ) }
    dend_16 { pt3dadd( -65.512, -47.176, -55.0173, 0.55 ) }
    dend_16 { pt3dadd( -68.029, -47.2752, -55.7376, 0.28 ) }
    dend_16 { pt3dadd( -69.0315, -47.3045, -55.9928, 0.55 ) }
    dend_16 { pt3dadd( -70.8803, -47.3963, -56.3732, 0.55 ) }
    dend_16 { pt3dadd( -73.7005, -47.2788, -56.8338, 0.55 ) }
    dend_16 { pt3dadd( -75.5497, -47.1016, -57.0324, 0.28 ) }
    dend_16 { pt3dadd( -77.0538, -46.7945, -57.0733, 0.55 ) }
    dend_16 { pt3dadd( -78.8512, -46.2335, -57.1191, 0.28 ) }
    dend_16 { pt3dadd( -79.1503, -46.1195, -57.1348, 0.55 ) }
    dend_16 { pt3dadd( -81.9528, -44.9909, -57.7068, 0.28 ) }
    dend_16 { pt3dadd( -84.0067, -44.1263, -58.3123, 0.55 ) }
    dend_16 { pt3dadd( -86.7612, -42.8137, -59.4321, 0.83 ) }
    dend_16 { pt3dadd( -89.0526, -41.6768, -60.5729, 0.28 ) }
    dend_16 { pt3dadd( -89.6478, -41.3841, -60.918, 0.55 ) }
    dend_16 { pt3dadd( -94.222, -39.185, -63.7856, 0.28 ) }
    dend_16 { pt3dadd( -95.0258, -38.8079, -64.3556, 0.55 ) }
    dend_16 { pt3dadd( -97.4226, -37.553, -66.1586, 0.28 ) }
    dend_16 { pt3dadd( -98.0414, -37.2302, -66.6279, 0.55 ) }
    dend_16 { pt3dadd( -99.6252, -36.3933, -67.7391, 0.28 ) }
    dend_16 { pt3dadd( -100.744, -35.7928, -68.465, 0.55 ) }
    dend_16 { pt3dadd( -103.225, -34.4693, -69.7633, 0.28 ) }
    dend_16 { pt3dadd( -104.686, -33.7754, -70.4893, 0.55 ) }
    dend_16 { pt3dadd( -107.777, -32.4717, -71.9008, 0.28 ) }
    dend_16 { pt3dadd( -108.692, -32.1282, -72.3104, 0.55 ) }
    dend_16 { pt3dadd( -110.115, -31.6899, -72.9108, 0.28 ) }
    dend_16 { pt3dadd( -111.316, -31.3243, -73.3667, 0.55 ) }
    dend_16 { pt3dadd( -113.799, -30.6024, -74.1799, 0.28 ) }
    dend_16 { pt3dadd( -114.544, -30.4013, -74.4033, 0.55 ) }
    dend_16 { pt3dadd( -120.07, -28.822, -75.8241, 0.28 ) }
    dend_16 { pt3dadd( -122.008, -28.1525, -76.1623, 0.55 ) }
    dend_16 { pt3dadd( -125.464, -26.8186, -76.5564, 0.28 ) }
    dend_16 { pt3dadd( -127.023, -26.1639, -76.6876, 0.55 ) }
    dend_16 { pt3dadd( -130.577, -24.6954, -76.8029, 0.28 ) }
    dend_16 { pt3dadd( -131.871, -24.2116, -76.7955, 0.55 ) }
    dend_16 { pt3dadd( -136.487, -22.858, -76.5541, 0.28 ) }
    dend_16 { pt3dadd( -138.387, -22.5191, -76.4472, 0.55 ) }
    dend_16 { pt3dadd( -141.052, -22.4573, -76.2838, 0.55 ) }
    dend_16 { pt3dadd( -142.677, -22.5211, -76.1499, 0.55 ) }
    dend_16 { pt3dadd( -145.948, -22.746, -75.6313, 0.28 ) }
    dend_16 { pt3dadd( -149.133, -23.0078, -74.9218, 0.28 ) }
    dend_16 { pt3dadd( -151.776, -23.2194, -74.2528, 0.55 ) }
    dend_16 { pt3dadd( -154.973, -23.2121, -73.0669, 0.28 ) }
    dend_16 { pt3dadd( -156.534, -23.0161, -72.2556, 0.55 ) }
    dend_16 { pt3dadd( -160.223, -21.9447, -69.9159, 0.28 ) }
    dend_16 { pt3dadd( -162.042, -21.0157, -68.2275, 0.55 ) }
    dend_16 { pt3dadd( -163.157, -20.2204, -66.8512, 0.28 ) }
    dend_16 { pt3dadd( -164.297, -19.3288, -64.9615, 0.55 ) }
    dend_16 { pt3dadd( -165.655, -18.1496, -62.3775, 0.28 ) }
    dend_16 { pt3dadd( -166.172, -17.7432, -61.4072, 0.55 ) }
    dend_16 { pt3dadd( -168.989, -16.0014, -56.8202, 0.28 ) }
    dend_16 { pt3dadd( -169.943, -15.4665, -55.288, 0.55 ) }
    dend_16 { pt3dadd( -172.171, -14.3169, -51.5764, 0.28 ) }
    dend_16 { pt3dadd( -173.381, -13.7132, -49.5616, 0.55 ) }
    dend_16 { pt3dadd( -174.378, -13.2195, -47.9078, 0.55 ) }
    dend_16 { pt3dadd( -175.586, -12.6425, -45.973, 0.28 ) }
    dend_16 { pt3dadd( -176.273, -12.3518, -45.1, 0.55 ) }
    dend_16 { pt3dadd( -178.656, -11.2796, -42.3362, 0.28 ) }
    dend_16 { pt3dadd( -179.904, -10.5395, -40.852, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.06308, -38.2376, -19.1596, 0.55 ) }
    dend_15 { pt3dadd( -6.70727, -38.2806, -20.3803, 0.55 ) }
    dend_15 { pt3dadd( -6.32842, -38.1834, -21.5909, 0.55 ) }
    dend_15 { pt3dadd( -5.79206, -37.9478, -23.0674, 0.55 ) }
    dend_15 { pt3dadd( -5.31496, -37.6517, -24.2434, 0.55 ) }
    dend_15 { pt3dadd( -1.72747, -34.8283, -31.6268, 0.55 ) }
    dend_15 { pt3dadd( -0.953104, -33.9944, -33.2941, 0.55 ) }
    dend_15 { pt3dadd( 0.132585, -32.5789, -35.7785, 0.55 ) }
    dend_15 { pt3dadd( 0.886306, -31.5163, -37.5403, 0.55 ) }
    dend_15 { pt3dadd( 1.63903, -30.3751, -39.2234, 0.28 ) }
    dend_15 { pt3dadd( 2.87982, -28.4573, -41.7134, 0.55 ) }
    dend_15 { pt3dadd( 4.87823, -25.4657, -45.2592, 0.28 ) }
    dend_15 { pt3dadd( 4.99954, -25.2793, -45.6365, 0.55 ) }
    dend_15 { pt3dadd( 5.23765, -24.6257, -48.3972, 0.28 ) }
    dend_15 { pt3dadd( 5.1001, -24.3424, -50.3015, 0.55 ) }
    dend_15 { pt3dadd( 4.7777, -24.2074, -52.3653, 0.55 ) }
    dend_15 { pt3dadd( 4.1712, -24.1597, -56.0799, 0.55 ) }
    dend_15 { pt3dadd( 3.00751, -24.1141, -63.3759, 0.55 ) }
    dend_15 { pt3dadd( 2.31875, -24.1212, -68.2912, 0.55 ) }
    dend_15 { pt3dadd( 2.12778, -24.1318, -69.9942, 0.55 ) }
    dend_15 { pt3dadd( 1.12313, -24.0745, -81.2056, 0.55 ) }
    dend_15 { pt3dadd( 0.972059, -23.9964, -84.2476, 0.55 ) }
    dend_15 { pt3dadd( 1.01443, -23.9337, -85.9595, 0.55 ) }
    dend_15 { pt3dadd( 1.47115, -23.8331, -89.9448, 0.55 ) }
    dend_15 { pt3dadd( 3.18705, -23.9835, -99.4709, 0.55 ) }
    dend_15 { pt3dadd( 3.7723, -24.1103, -102.024, 0.28 ) }
    dend_15 { pt3dadd( 4.22333, -24.2301, -103.457, 0.55 ) }
    dend_15 { pt3dadd( 4.94367, -24.4879, -105.574, 0.28 ) }
    dend_15 { pt3dadd( 5.3162, -24.6711, -106.428, 0.55 ) }
    dend_15 { pt3dadd( 7.07115, -25.5237, -108.665, 0.28 ) }
    dend_15 { pt3dadd( 9.02929, -26.8119, -109.411, 0.55 ) }
    dend_15 { pt3dadd( 10.2475, -27.7571, -109.79, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 11.4263, -28.8278, -110.015, 0.55 ) }
    dend_15 { pt3dadd( 12.5135, -30.0233, -110.138, 0.28 ) }
    dend_15 { pt3dadd( 12.9927, -30.6489, -110.209, 0.55 ) }
    dend_15 { pt3dadd( 14.149, -32.3041, -110.302, 0.28 ) }
    dend_15 { pt3dadd( 14.435, -32.802, -110.405, 0.55 ) }
    dend_15 { pt3dadd( 16.0199, -35.655, -111.161, 0.28 ) }
    dend_15 { pt3dadd( 16.7476, -36.9651, -111.702, 0.55 ) }
    dend_15 { pt3dadd( 18.3264, -39.7399, -113.223, 0.28 ) }
    dend_15 { pt3dadd( 18.9232, -40.7521, -113.919, 0.55 ) }
    dend_15 { pt3dadd( 20.97, -44.0485, -116.461, 0.28 ) }
    dend_15 { pt3dadd( 21.4639, -44.8482, -117.118, 0.55 ) }
    dend_15 { pt3dadd( 22.9245, -47.3904, -119.283, 0.28 ) }
    dend_15 { pt3dadd( 23.2413, -47.9931, -119.73, 0.55 ) }
    dend_15 { pt3dadd( 24.0251, -49.5952, -120.881, 0.28 ) }
    dend_15 { pt3dadd( 24.4646, -50.5212, -121.65, 0.55 ) }
    dend_15 { pt3dadd( 24.9104, -51.4233, -122.492, 0.55 ) }
    dend_15 { pt3dadd( 25.8047, -53.2234, -124.158, 0.28 ) }
    dend_15 { pt3dadd( 26.4355, -54.3161, -125.36, 0.55 ) }
    dend_15 { pt3dadd( 28.4312, -56.9353, -129.218, 0.28 ) }
    dend_15 { pt3dadd( 29.1887, -57.7519, -130.766, 0.55 ) }
    dend_15 { pt3dadd( 29.7251, -58.258, -131.82, 0.28 ) }
    dend_15 { pt3dadd( 30.2812, -58.7048, -132.877, 0.55 ) }
    dend_15 { pt3dadd( 32.0412, -59.9117, -136.088, 0.28 ) }
    dend_15 { pt3dadd( 33.4094, -60.8541, -138.472, 0.55 ) }
    dend_15 { pt3dadd( 35.9048, -62.7032, -142.307, 0.28 ) }
    dend_15 { pt3dadd( 36.6938, -63.2762, -143.509, 0.55 ) }
    dend_15 { pt3dadd( 38.3009, -64.3119, -145.65, 0.28 ) }
    dend_15 { pt3dadd( 38.8646, -64.6491, -146.311, 0.55 ) }
    dend_15 { pt3dadd( 39.8755, -65.1838, -147.195, 0.28 ) }
    dend_15 { pt3dadd( 40.8037, -65.6273, -147.892, 0.55 ) }
    dend_15 { pt3dadd( 43.4284, -66.6887, -149.513, 0.28 ) }
    dend_15 { pt3dadd( 46.4528, -67.7775, -151.318, 0.28 ) }
    dend_15 { pt3dadd( 48.023, -68.2569, -152.122, 0.28 ) }
    dend_15 { pt3dadd( 49.5662, -68.6888, -153.023, 0.55 ) }
    dend_15 { pt3dadd( 51.811, -69.2103, -154.346, 0.28 ) }
    dend_15 { pt3dadd( 52.8171, -69.4266, -154.912, 0.83 ) }
    dend_15 { pt3dadd( 55.4242, -70.0144, -156.261, 0.28 ) }
    dend_15 { pt3dadd( 56.5325, -70.2954, -156.908, 0.55 ) }
    dend_15 { pt3dadd( 61.3253, -71.7234, -159.987, 0.28 ) }
    dend_15 { pt3dadd( 63.6433, -72.4668, -161.722, 0.28 ) }
    dend_15 { pt3dadd( 65.2795, -73.0066, -163.097, 0.55 ) }
    dend_15 { pt3dadd( 66.1831, -73.3439, -164.013, 0.55 ) }
    dend_15 { pt3dadd( 68.4847, -74.2791, -166.655, 0.28 ) }
    dend_15 { pt3dadd( 70.5941, -75.2768, -169.23, 0.55 ) }
    dend_15 { pt3dadd( 72.5188, -76.2625, -171.577, 0.28 ) }
    dend_15 { pt3dadd( 74.2081, -77.1871, -173.808, 0.55 ) }
    dend_15 { pt3dadd( 75.6085, -77.9289, -175.642, 0.28 ) }
    dend_15 { pt3dadd( 76.787, -78.4262, -177.066, 0.55 ) }
    dend_15 { pt3dadd( 79.6972, -79.4169, -180.342, 0.28 ) }
    dend_15 { pt3dadd( 81.2073, -79.9157, -181.934, 0.55 ) }
    dend_15 { pt3dadd( 83.5225, -80.6721, -184.231, 0.28 ) }
    dend_15 { pt3dadd( 85.4376, -81.2244, -186.06, 0.55 ) }
    dend_15 { pt3dadd( 89.9039, -82.2808, -190.342, 0.28 ) }
    dend_15 { pt3dadd( 91.6502, -82.5873, -192.215, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.9495, -122.477, 87.4702, 0.55 ) }
    dend_9 { pt3dadd( -15.0924, -131.137, 92.7798, 0.55 ) }
    dend_9 { pt3dadd( -11.9319, -139.902, 96.9161, 0.55 ) }
    dend_9 { pt3dadd( -10.1323, -148.683, 101.771, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -15.9495, -122.477, 87.4702, 0.55 ) }
    dend_8 { pt3dadd( -15.8228, -125.889, 90.539, 0.55 ) }
    dend_8 { pt3dadd( -16.6803, -129.044, 93.7619, 0.55 ) }
    dend_8 { pt3dadd( -18.0646, -131.513, 97.376, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.8136, -128.602, 89.7925, 0.55 ) }
    dend_6 { pt3dadd( -18.5117, -139.224, 96.9123, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -18.8136, -128.602, 89.7925, 0.55 ) }
    dend_5 { pt3dadd( -20.5308, -137.899, 95.0701, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.06478, -101.328, 12.9079, 0.83 ) }
    dend_25 { pt3dadd( 9.00801, -104.571, 13.2934, 0.83 ) }
    dend_25 { pt3dadd( 10.0022, -107.288, 13.7498, 0.83 ) }
    dend_25 { pt3dadd( 10.9904, -109.988, 14.2035, 0.83 ) }
    dend_25 { pt3dadd( 11.929, -112.552, 14.6344, 0.83 ) }
    dend_25 { pt3dadd( 13.3753, -116.504, 15.2984, 0.83 ) }
    dend_25 { pt3dadd( 14.8112, -120.428, 15.9576, 0.83 ) }
    dend_25 { pt3dadd( 16.0945, -122.997, 16.6134, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.06478, -101.328, 12.9079, 0.55 ) }
    dend_24 { pt3dadd( 9.18935, -102.955, 12.6279, 0.55 ) }
    dend_24 { pt3dadd( 9.97575, -104.242, 12.2105, 0.55 ) }
    dend_24 { pt3dadd( 10.4843, -105.201, 11.8308, 0.55 ) }
    dend_24 { pt3dadd( 10.8753, -106.337, 11.3161, 0.83 ) }
    dend_24 { pt3dadd( 11.1883, -107.638, 10.6194, 0.55 ) }
    dend_24 { pt3dadd( 11.4944, -108.911, 9.93788, 0.83 ) }
    dend_24 { pt3dadd( 11.7125, -110.301, 9.11099, 0.55 ) }
    dend_24 { pt3dadd( 11.8121, -111.113, 8.56502, 0.83 ) }
    dend_24 { pt3dadd( 11.9667, -113.757, 6.65437, 0.55 ) }
    dend_24 { pt3dadd( 11.8931, -115.841, 5.09774, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.87319, -81.6847, 30.8685, 0.55 ) }
    dend_20 { pt3dadd( -10.8054, -89.8584, 36.7408, 0.55 ) }
    dend_20 { pt3dadd( -16.046, -96.886, 43.0577, 0.55 ) }
    dend_20 { pt3dadd( -21.8589, -102.866, 49.9282, 0.55 ) }
    dend_20 { pt3dadd( -28.4237, -107.53, 57.1326, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.87319, -81.6847, 30.8685, 0.55 ) }
    dend_19 { pt3dadd( -10.5801, -90.846, 38.5634, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.0945, -122.997, 16.6134, 0.55 ) }
    dend_27 { pt3dadd( 16.6424, -125.418, 17.3299, 0.55 ) }
    dend_27 { pt3dadd( 17.4593, -128.504, 18.2594, 0.55 ) }
    dend_27 { pt3dadd( 18.2218, -131.419, 19.1228, 0.55 ) }
    dend_27 { pt3dadd( 18.7247, -133.494, 19.7244, 0.55 ) }
    dend_27 { pt3dadd( 19.5532, -137.2, 20.7748, 0.55 ) }
    dend_27 { pt3dadd( 21.8567, -147.657, 23.4109, 0.55 ) }
    dend_27 { pt3dadd( 22.6196, -151.228, 24.1276, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 23.0906, -153.76, 24.5225, 0.55 ) }
    dend_27 { pt3dadd( 23.5116, -156.677, 24.7689, 0.55 ) }
    dend_27 { pt3dadd( 23.6889, -158.953, 24.8185, 0.55 ) }
    dend_27 { pt3dadd( 24.1041, -164.3, 24.6652, 0.55 ) }
    dend_27 { pt3dadd( 24.3017, -168.353, 24.6265, 0.55 ) }
    dend_27 { pt3dadd( 24.5349, -171.01, 24.6226, 0.55 ) }
    dend_27 { pt3dadd( 25.3248, -177.862, 24.911, 0.55 ) }
    dend_27 { pt3dadd( 25.9513, -182.446, 25.2872, 0.55 ) }
    dend_27 { pt3dadd( 26.9778, -188.323, 26.0258, 0.55 ) }
    dend_27 { pt3dadd( 28.5176, -194.941, 27.2321, 0.55 ) }
    dend_27 { pt3dadd( 29.8737, -199.34, 28.1435, 0.55 ) }
    dend_27 { pt3dadd( 30.7691, -201.935, 28.7017, 0.55 ) }
    dend_27 { pt3dadd( 31.5535, -204.326, 29.2375, 0.55 ) }
    dend_27 { pt3dadd( 32.5035, -207.371, 29.7667, 0.55 ) }
    dend_27 { pt3dadd( 34.4238, -214.761, 30.6856, 0.55 ) }
    dend_27 { pt3dadd( 35.1833, -217.636, 30.8966, 0.55 ) }
    dend_27 { pt3dadd( 35.9536, -220.837, 31.1592, 0.55 ) }
    dend_27 { pt3dadd( 37.0632, -225.644, 31.5568, 0.55 ) }
    dend_27 { pt3dadd( 37.7964, -229.329, 31.9934, 0.55 ) }
    dend_27 { pt3dadd( 38.2998, -232.825, 32.492, 0.55 ) }
    dend_27 { pt3dadd( 38.6581, -236.152, 33.0563, 0.55 ) }
    dend_27 { pt3dadd( 38.9901, -239.391, 33.6788, 0.55 ) }
    dend_27 { pt3dadd( 39.2243, -241.7, 34.0946, 0.55 ) }
    dend_27 { pt3dadd( 39.549, -245.491, 34.6535, 0.55 ) }
    dend_27 { pt3dadd( 39.6808, -250.078, 35.0783, 0.55 ) }
    dend_27 { pt3dadd( 39.6932, -252.325, 35.1137, 0.55 ) }
    dend_27 { pt3dadd( 39.6343, -254.315, 35.0112, 0.55 ) }
    dend_27 { pt3dadd( 39.5325, -258.098, 34.5382, 0.55 ) }
    dend_27 { pt3dadd( 39.4101, -260.502, 34.1991, 0.55 ) }
    dend_27 { pt3dadd( 39.3502, -263.456, 33.8511, 0.55 ) }
    dend_27 { pt3dadd( 39.3179, -265.516, 33.7526, 0.55 ) }
    dend_27 { pt3dadd( 39.2776, -270.847, 33.7215, 0.55 ) }
    dend_27 { pt3dadd( 39.3345, -274.805, 33.9873, 0.55 ) }
    dend_27 { pt3dadd( 39.6337, -280.875, 34.8685, 0.55 ) }
    dend_27 { pt3dadd( 40.1151, -284.758, 35.691, 0.55 ) }
    dend_27 { pt3dadd( 40.6736, -288.819, 36.6835, 0.28 ) }
    dend_27 { pt3dadd( 40.9045, -290.442, 37.1627, 0.28 ) }
    dend_27 { pt3dadd( 41.6645, -294.344, 38.6374, 0.28 ) }
    dend_27 { pt3dadd( 42.512, -297.916, 40.2625, 0.28 ) }
    dend_27 { pt3dadd( 44.3037, -302.604, 42.5593, 0.28 ) }
    dend_27 { pt3dadd( 47.8605, -313.504, 44.5515, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 16.0945, -122.997, 16.6134, 0.55 ) }
    dend_26 { pt3dadd( 17.2894, -123.359, 16.8398, 0.55 ) }
    dend_26 { pt3dadd( 19.7517, -124.287, 17.4911, 0.55 ) }
    dend_26 { pt3dadd( 21.8804, -125.203, 18.1486, 0.28 ) }
    dend_26 { pt3dadd( 24.1656, -126.245, 18.924, 0.55 ) }
    dend_26 { pt3dadd( 25.5453, -126.896, 19.5718, 0.28 ) }
    dend_26 { pt3dadd( 27.9364, -128.054, 20.9095, 0.55 ) }
    dend_26 { pt3dadd( 28.9309, -128.657, 21.7535, 0.28 ) }
    dend_26 { pt3dadd( 29.2878, -128.87, 22.123, 0.28 ) }
    dend_26 { pt3dadd( 29.9036, -129.161, 22.7629, 0.55 ) }
    dend_26 { pt3dadd( 32.3248, -130.09, 25.0407, 0.28 ) }
    dend_26 { pt3dadd( 33.3609, -130.448, 25.963, 0.55 ) }
    dend_26 { pt3dadd( 36.5422, -131.507, 28.3693, 0.28 ) }
    dend_26 { pt3dadd( 38.2859, -132.027, 29.5415, 0.28 ) }
    dend_26 { pt3dadd( 40.4753, -132.713, 30.8733, 0.55 ) }
    dend_26 { pt3dadd( 43.7654, -133.815, 32.5723, 0.28 ) }
    dend_26 { pt3dadd( 44.2152, -133.964, 32.7542, 0.55 ) }
    dend_26 { pt3dadd( 46.4405, -134.708, 33.5013, 0.28 ) }
    dend_26 { pt3dadd( 46.6437, -134.779, 33.5476, 0.55 ) }
    dend_26 { pt3dadd( 48.4379, -135.639, 34.0311, 0.28 ) }
    dend_26 { pt3dadd( 49.2903, -136.109, 34.3175, 0.55 ) }
    dend_26 { pt3dadd( 56.2929, -139.544, 36.696, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -28.4237, -107.53, 57.1326, 0.55 ) }
    dend_22 { pt3dadd( -31.6926, -110.514, 62.787, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -28.4237, -107.53, 57.1326, 0.55 ) }
    dend_21 { pt3dadd( -33.2371, -113.389, 61.177, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 11
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 17
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BP_368ba2d07d_0_0


