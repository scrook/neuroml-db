// Cell: Cell_473872986
/*
{
  "id" : "Cell_473872986",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "316.007, 353.153, 28.56, 12.2858", "322.15, 353.153, 28.56, 12.2858", "328.293, 353.153, 28.56, 12.2858" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "322.15, 353.153, 28.56, 1.0", "327.991, 366.969, 28.56, 1.0", "333.833, 380.785, 28.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "318.304, 349.168, 36.2594, 0.4068", "317.203, 349.415, 36.2594, 0.3304", "316.27, 350.079, 36.2594, 0.305", "315.339, 350.742, 36.2594, 0.3304", "314.776, 351.71, 36.5176, 0.3814", "314.283, 352.735, 36.8239, 0.3304", "313.79, 353.76, 37.1305, 0.2796", "313.298, 354.785, 37.4368, 0.2288", "312.988, 355.837, 37.3766, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "328.139, 354.961, 26.3189, 0.4322", "328.21, 355.858, 24.78, 0.4322", "328.219, 356.984, 24.7408, 0.4322", "328.716, 357.879, 24.6649, 0.4576", "329.719, 358.173, 23.6673, 0.483", "330.741, 358.112, 22.461, 0.4576", "331.798, 357.958, 21.5566, 0.4322", "332.921, 357.96, 21.28, 0.483", "334.057, 358.072, 21.2682, 0.5592", "334.84, 358.574, 20.1421, 0.6102", "335.922, 358.644, 19.4835, 0.5592", "337.04, 358.663, 19.04, 0.5084", "338.177, 358.765, 19.112, 0.4576", "338.972, 359.306, 19.7098, 0.5084", "339.647, 360.188, 19.88, 0.5848", "340.559, 360.731, 19.203, 0.6864", "341.271, 361.493, 18.76, 0.7626", "342.094, 362.193, 18.76, 0.8136", "342.742, 362.973, 18.76, 0.8136", "343.48, 363.61, 18.76, 0.7626", "344.517, 364.028, 18.7323, 0.661", "345.252, 364.697, 18.2, 0.5592", "346.336, 364.936, 17.92, 0.4322", "347.469, 365.025, 17.92, 0.3814", "348.577, 365.279, 17.92, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "328.175, 352.521, 28.3472, 0.5338", "329.188, 352.902, 29.1382, 0.6356", "330.283, 353.086, 28.7162, 0.6864", "331.124, 352.798, 30.3954, 0.7118", "332.222, 352.535, 30.8003, 0.7118", "333.231, 351.997, 30.8104, 0.7118", "334.103, 351.256, 30.8448, 0.661", "334.895, 350.432, 30.9823, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "322.611, 359.367, 34.0536, 0.8136", "323.104, 360.392, 34.1029, 0.9406", "323.544, 361.442, 33.8251, 0.9406", "323.892, 362.492, 33.1078, 0.7626", "324.156, 363.604, 32.9893, 0.5592", "324.784, 364.556, 32.7995, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "316.02, 350.526, 24.4524, 1.2712", "315.273, 348.42, 23.2677, 1.144", "314.951, 347.33, 22.9636, 1.0168", "314.356, 346.353, 22.9603, 0.8898", "313.557, 345.536, 22.9611, 0.9406", "312.635, 344.859, 22.9656, 0.9914", "311.637, 344.299, 22.9894, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "315.667, 353.355, 31.6907, 0.7118", "314.802, 353.7, 32.9756, 0.9152", "313.678, 353.644, 32.4719, 1.0678", "311.558, 354.211, 31.1634, 1.2966", "309.524, 355.238, 30.8, 1.1694", "308.497, 355.741, 30.8, 1.1186", "307.428, 356.149, 30.8, 1.0932", "306.477, 356.779, 30.8, 0.9914", "305.616, 357.532, 30.8011, 0.8644", "304.728, 358.254, 30.807, 0.7372", "303.645, 358.614, 30.8445, 0.788", "302.508, 358.67, 31.066, 0.8136", "301.421, 358.831, 31.8441, 0.8898", "300.336, 359.179, 32.0342, 0.8136", "299.27, 359.517, 32.6385, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "325.048, 348.016, 30.1529, 0.6102", "324.905, 347.149, 31.9432, 0.788", "324.913, 346.259, 33.7002, 0.966", "324.999, 345.187, 34.6396, 1.144", "325.382, 344.151, 35.3478, 1.1694", "326.294, 342.098, 36.398, 1.0424", "326.643, 341.009, 36.4, 0.9914", "326.842, 339.882, 36.4, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999767
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "333.833, 380.785, 28.56, 1.0", "339.674, 394.601, 28.56, 1.0", "345.515, 408.417, 28.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "312.988, 355.837, 37.3766, 0.2288", "312.275, 356.602, 37.3262, 0.5592", "311.78, 357.62, 37.3876, 0.6356", "311.35, 358.376, 38.8889, 0.6864", "310.585, 359.049, 39.6878, 0.6864", "309.76, 359.837, 39.7611, 0.7372", "309.429, 360.885, 39.7676, 0.8136", "309.602, 361.999, 39.8068, 0.9152", "310.002, 363.063, 40.0492, 0.8898", "310.197, 364.151, 40.6647, 0.8136", "310.104, 365.277, 40.8671, 0.7118", "309.629, 366.301, 40.8738, 0.6864", "309.307, 367.39, 40.8397, 0.7626", "309.022, 368.494, 40.6445, 0.8644", "309.069, 369.587, 39.9871, 1.0168", "309.46, 370.646, 39.7751, 0.9914", "309.713, 371.757, 39.7614, 0.8898", "309.529, 372.871, 39.7684, 0.661", "308.969, 373.858, 39.8034, 0.5592", "308.389, 374.841, 39.9963, 0.4576", "307.655, 375.645, 40.7767, 0.4068", "307.089, 376.634, 40.9702, 0.3304" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "312.988, 355.837, 37.3766, 0.2288", "312.187, 355.863, 39.3554, 0.5084", "311.367, 355.596, 41.188, 0.356" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "334.895, 350.432, 30.9823, 0.661", "334.961, 349.326, 30.574, 0.3304", "334.954, 348.275, 29.6601, 0.2796", "334.916, 347.462, 27.7172, 0.2542", "334.688, 346.807, 25.5657, 0.2288", "334.002, 346.208, 23.9613, 0.2288", "333.126, 345.759, 22.6019, 0.2542", "332.338, 345.334, 20.8961, 0.2796", "331.428, 344.906, 19.6627, 0.3304", "330.472, 344.559, 18.5273, 0.3304", "329.639, 343.904, 17.8511, 0.3304", "328.721, 343.257, 18.3151, 0.2796", "328.124, 342.544, 19.4253, 0.2542", "328.556, 342.033, 21.2475, 0.2288", "329.496, 342.054, 22.7209, 0.2542", "330.526, 342.223, 23.8641, 0.2796", "330.903, 341.474, 25.2081, 0.305", "331.38, 340.706, 26.7739, 0.2796", "332.113, 340.581, 28.6051, 0.2796", "332.654, 341.311, 29.8032, 0.2796", "333.414, 342.029, 30.4962, 0.305", "334.441, 342.118, 29.8421, 0.3304", "335.318, 341.84, 28.2316, 0.3814", "335.964, 341.978, 26.031, 0.4322", "336.33, 341.891, 23.4192, 0.4068", "336.466, 340.928, 22.1357, 0.3304", "337.01, 339.948, 22.4535, 0.2796", "337.728, 339.352, 24.0537, 0.2796", "338.258, 338.489, 25.2053, 0.305", "338.309, 337.365, 25.3887, 0.2796", "338.828, 336.391, 25.59, 0.2542", "339.49, 335.678, 24.1326, 0.2288", "340.068, 335.007, 22.4815, 0.2288", "340.215, 333.979, 21.6138, 0.2288", "339.897, 332.951, 21.0848, 0.2288", "339.561, 332.192, 19.213, 0.2288", "338.891, 331.639, 17.8203, 0.2542", "337.899, 331.158, 18.097, 0.305", "337.265, 330.375, 18.7169, 0.356", "336.878, 329.352, 19.4132, 0.356", "336.235, 328.835, 21.0174, 0.305", "335.272, 329.107, 21.7759, 0.2542", "334.188, 329.005, 21.8859, 0.2288", "333.148, 328.577, 22.3152, 0.2288", "332.105, 328.476, 23.315, 0.2288", "331.174, 328.727, 22.3132, 0.2288", "330.105, 329.025, 21.9993, 0.2542", "329.16, 328.548, 22.9127, 0.3304", "329.014, 327.527, 24.08, 0.483" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "334.895, 350.432, 30.9823, 0.661", "335.64, 349.49, 31.9388, 0.6864", "336.463, 349.221, 33.6622, 0.788", "337.527, 349.549, 34.1415, 0.788", "338.634, 349.837, 34.1326, 0.7626", "339.753, 349.627, 33.9819, 0.661", "340.866, 349.65, 33.3441, 0.5338" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "324.784, 364.556, 32.7995, 0.4322", "324.967, 365.326, 32.8132, 0.6356", "325.289, 366.357, 32.0289, 0.6102", "325.573, 367.39, 31.0509, 0.5592", "326.034, 368.417, 30.8106, 0.5592", "326.577, 369.424, 30.8003, 0.5848", "327.049, 370.45, 30.52, 0.6102", "327.465, 371.508, 30.52, 0.5592", "327.823, 372.585, 30.52, 0.5338", "328.44, 373.509, 30.52, 0.483", "328.759, 374.598, 30.52, 0.5084", "329.082, 375.686, 30.6863, 0.483", "329.336, 376.797, 30.8, 0.4576", "329.72, 377.866, 30.8, 0.3814", "329.646, 378.975, 30.8, 0.305", "328.937, 379.848, 31.0814, 0.2796", "328.533, 380.894, 31.6296, 0.2796", "328.116, 381.943, 31.92, 0.305", "327.772, 383.016, 31.92, 0.305", "327.642, 384.15, 31.92, 0.305", "327.642, 385.293, 31.92, 0.305", "327.587, 386.417, 32.3518, 0.2796", "327.135, 387.38, 32.6309, 0.2542", "326.436, 388.143, 33.6725, 0.2288", "325.624, 388.897, 33.88, 0.2288", "325.357, 389.992, 34.0782, 0.2796", "324.875, 390.997, 34.16, 0.356", "324.667, 392.074, 34.44, 0.4576", "324.667, 393.218, 34.44, 0.4576", "324.782, 394.353, 34.4305, 0.4322", "324.854, 395.484, 34.1737, 0.4068", "325.157, 396.574, 34.16, 0.4322", "325.697, 397.522, 34.16, 0.4322", "325.665, 398.66, 34.16, 0.356", "325.085, 399.513, 34.7802, 0.3304", "324.382, 400.398, 35.0952, 0.356", "324.095, 401.463, 35.5342, 0.4576", "324.302, 402.561, 35.56, 0.483", "324.721, 403.615, 35.56, 0.4576", "325.304, 404.552, 35.56, 0.3814", "325.697, 405.526, 35.84, 0.3304", "325.697, 406.67, 35.9212, 0.305", "325.697, 407.81, 36.12, 0.305", "325.697, 408.954, 36.12, 0.2796", "325.664, 410.095, 36.12, 0.2542", "325.279, 411.148, 36.12, 0.2288", "325.275, 412.267, 36.12, 0.2542", "325.181, 413.4, 36.12, 0.2796", "324.602, 414.358, 36.1939, 0.3304", "323.775, 415.112, 36.4, 0.3304", "323.633, 416.193, 36.7324, 0.3304", "323.189, 417.093, 37.9176, 0.3304", "322.722, 418.06, 38.0993, 0.356", "322.722, 419.201, 38.311, 0.3814", "322.503, 420.315, 38.36, 0.3304", "322.379, 421.437, 38.36, 0.305", "321.807, 422.262, 39.2, 0.305", "321.804, 423.376, 39.737, 0.305", "321.041, 424.05, 39.76, 0.305", "319.96, 424.312, 39.76, 0.356", "319.301, 425.141, 40.04, 0.4068", "319.008, 426.205, 40.04, 0.4576", "318.13, 426.825, 40.04, 0.4576", "317.636, 427.854, 40.04, 0.4322", "316.68, 428.462, 40.04, 0.4576", "316.023, 429.325, 40.5219, 0.483", "315.441, 430.286, 40.88, 0.5338", "314.96, 431.299, 40.88, 0.483", "314.703, 432.41, 40.88, 0.3814", "313.642, 432.546, 41.1639, 0.2796", "312.723, 432.83, 42.2573, 0.2288", "312.06, 433.745, 42.4654, 0.2796", "312.018, 434.854, 42.56, 0.4068", "312.477, 435.867, 42.9411, 0.5592", "313.05, 436.656, 43.9426, 0.6102", "313.456, 437.58, 43.96, 0.5084" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "324.784, 364.556, 32.7995, 0.4322", "325.24, 365.155, 32.314, 0.5592", "326.199, 365.722, 32.655, 0.5848", "326.988, 366.524, 33.0996, 0.661", "327.25, 367.608, 33.6025, 0.7372", "327.618, 368.669, 34.1407, 0.7626", "328.255, 369.616, 34.16, 0.8136", "328.972, 370.507, 34.16, 0.8898", "329.757, 371.34, 34.16, 0.9406", "330.442, 372.255, 34.16, 0.9152", "331.069, 373.213, 34.16, 0.8898", "331.484, 374.278, 34.1594, 0.9152", "331.972, 375.312, 34.1569, 0.9406", "332.496, 376.329, 34.1435, 0.839", "332.925, 377.39, 34.0665, 0.6356" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "311.637, 344.299, 22.9894, 0.9152", "309.759, 344.541, 22.9603, 0.788", "308.684, 344.931, 22.9575, 0.9152", "307.714, 345.537, 22.9477, 0.9406", "306.728, 346.117, 22.8973, 1.0424", "305.716, 346.639, 22.6416, 1.0678", "304.765, 347.143, 21.6958, 1.0424" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "311.637, 344.299, 22.9894, 0.9152", "310.321, 343.075, 23.2935, 0.7118", "309.492, 342.395, 23.9512, 0.5338", "308.412, 342.099, 24.3001, 0.4322", "307.376, 341.741, 24.8158, 0.4068", "306.599, 340.961, 25.1476, 0.483", "305.979, 340.001, 25.0838, 0.5848", "305.235, 339.191, 24.5431, 0.6102", "304.455, 338.487, 23.4704, 0.6102", "303.966, 337.533, 23.0168, 0.5592", "303.841, 336.414, 23.2624, 0.6102", "303.795, 335.281, 23.6272, 0.6102", "303.495, 334.232, 23.1529, 0.6356", "303.115, 333.179, 22.6444, 0.6102", "302.737, 332.126, 22.0662, 0.6102", "302.206, 331.129, 21.8123, 0.6356", "301.453, 330.28, 21.6572, 0.661", "300.545, 329.639, 21.1008, 0.6864", "299.584, 329.038, 20.8163, 0.661", "298.764, 328.26, 21.0151, 0.6356", "297.907, 327.553, 21.623, 0.5592", "296.954, 326.94, 21.9078, 0.5084", "296.001, 326.352, 22.4412, 0.4576", "295.001, 325.842, 22.2001, 0.5084", "293.951, 325.405, 21.9106, 0.5848", "292.912, 324.934, 21.9976, 0.6864", "291.889, 324.501, 22.6355, 0.7372", "291.002, 323.818, 23.1078, 0.7372", "290.204, 323.054, 23.8274, 0.661", "289.369, 322.283, 24.0593, 0.5592", "288.408, 321.668, 24.0744, 0.483", "287.313, 321.377, 24.0338, 0.5084", "286.322, 320.835, 23.7964, 0.6102", "285.572, 320.035, 23.0824, 0.7372", "285.014, 319.039, 22.9309, 0.788", "284.39, 318.086, 22.7746, 0.7626", "283.674, 317.224, 22.223, 0.7118", "282.835, 316.48, 21.8226, 0.6864", "281.83, 315.936, 21.7336, 0.6864", "280.854, 315.366, 21.3654, 0.661", "279.936, 314.74, 20.851, 0.6356", "278.983, 314.138, 21.1918, 0.6102", "278.167, 313.385, 21.7865, 0.5848", "277.336, 312.604, 21.8414, 0.5338", "276.425, 311.914, 21.8462, 0.4576", "275.58, 311.143, 21.8655, 0.4576", "274.796, 310.312, 21.9369, 0.483", "274.09, 309.426, 22.1791, 0.5592", "273.51, 308.461, 22.381, 0.5338", "272.833, 307.568, 21.9803, 0.5592", "271.971, 306.835, 22.164, 0.5592", "270.992, 306.293, 22.7069, 0.6864", "270.021, 305.731, 22.9606, 0.6864", "269.264, 304.882, 22.9628, 0.661", "268.767, 303.868, 22.9774, 0.483", "268.568, 302.746, 23.0779, 0.4322", "268.279, 301.707, 23.5287, 0.4322", "267.471, 300.983, 24.1464, 0.5084", "266.47, 300.452, 24.4832, 0.5084", "265.5, 299.893, 24.549, 0.4576", "264.621, 299.201, 24.1223, 0.4068", "263.931, 298.303, 23.9434, 0.3814", "263.603, 297.243, 23.6785, 0.3814", "263.578, 296.106, 23.6328, 0.4322", "263.443, 295.023, 23.3086, 0.5338", "263.146, 293.985, 22.3838, 0.661", "262.753, 292.942, 21.9055, 0.7372", "262.294, 291.895, 21.8394, 0.7372", "262.024, 290.796, 21.8364, 0.661", "261.951, 289.655, 21.8151, 0.5848", "261.8, 288.528, 21.6941, 0.5084", "261.508, 287.443, 21.2372, 0.5084", "261.169, 286.374, 21.0832, 0.5338", "260.759, 285.328, 21.5715, 0.6102", "260.022, 284.53, 21.84, 0.661", "259.046, 283.934, 21.8397, 0.661", "258.045, 283.38, 21.8392, 0.6102", "257.193, 282.632, 21.8358, 0.5338", "256.519, 281.712, 21.8198, 0.4322", "255.989, 280.701, 21.7277, 0.356", "255.602, 279.638, 21.371, 0.356", "255.252, 278.565, 20.9112, 0.4322", "254.692, 277.584, 20.6074, 0.483", "253.953, 276.754, 19.9923, 0.4576", "253.467, 275.741, 19.7464, 0.3814", "253.054, 274.695, 20.1796, 0.3304", "252.275, 273.914, 19.7828, 0.3304", "251.26, 273.408, 19.8386, 0.4068", "250.617, 272.516, 20.4019, 0.5084", "250.359, 271.449, 19.7498, 0.5592", "249.872, 270.42, 19.6092, 0.5084", "249.279, 269.443, 19.6162, 0.4068", "248.5, 268.608, 19.7336, 0.305", "247.79, 267.81, 20.72, 0.2542" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "299.27, 359.517, 32.6385, 0.6864", "298.366, 360.251, 34.1183, 0.788", "297.694, 361.177, 34.1606, 0.7372", "297.011, 362.095, 34.1625, 0.661", "296.084, 362.744, 34.176, 0.661", "295.067, 363.266, 34.2504, 0.7118", "294.031, 363.708, 34.7029, 0.839", "292.968, 364.072, 35.226, 0.9406", "291.856, 364.326, 35.3702, 0.9406", "290.776, 364.639, 35.8602, 0.9152", "289.686, 364.919, 36.3504, 0.8644", "288.567, 364.744, 36.402, 0.8644", "287.429, 364.811, 36.4134, 0.8136", "286.495, 365.452, 36.4622, 0.788", "285.635, 366.201, 36.6475, 0.7626", "284.681, 366.756, 37.3478, 0.7372", "283.658, 367.262, 37.5122, 0.7372", "282.629, 367.759, 37.5211, 0.7626", "281.59, 368.238, 37.525, 0.839", "280.501, 368.589, 37.5519, 0.8644", "279.385, 368.378, 37.7238, 0.839", "278.286, 368.337, 38.4742, 0.7372", "277.22, 368.739, 38.64, 0.7118", "276.204, 369.265, 38.6448, 0.661" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "299.27, 359.517, 32.6385, 0.6864", "298.448, 359.592, 32.9969, 0.788", "297.31, 359.689, 33.0089, 0.8136", "296.216, 359.512, 32.8938, 0.8136", "295.166, 359.127, 32.4111, 0.7372", "294.088, 358.815, 31.9771, 0.6356", "292.966, 358.636, 31.9371, 0.5338", "291.826, 358.543, 32.002, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "326.842, 339.882, 36.4, 0.6864", "326.726, 338.615, 36.7455, 0.6864", "326.702, 337.522, 37.5455, 0.7372", "326.593, 336.45, 38.4846, 0.7118", "326.111, 335.494, 39.3621, 0.6356", "325.184, 334.99, 40.2164, 0.5848", "324.118, 335.2, 40.8075, 0.6356", "323.122, 335.75, 40.8663, 0.7118", "322.244, 336.484, 40.8201, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "326.842, 339.882, 36.4, 0.6864", "327.234, 338.512, 36.4, 0.788", "327.524, 337.405, 36.4, 0.8898", "327.641, 336.267, 36.4, 1.0168", "327.66, 335.123, 36.4, 1.0678", "327.748, 333.983, 36.4, 1.0678", "328.063, 332.883, 36.3992, 0.966", "328.122, 331.742, 36.3944, 0.8898", "328.271, 330.608, 36.3616, 0.8644", "328.585, 329.511, 36.1726, 0.8136", "328.849, 328.442, 35.4096, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "307.089, 376.634, 40.9702, 0.3304", "306.86, 376.94, 38.36, 0.356", "306.375, 377.959, 38.36, 0.3814", "306.363, 379.103, 38.36, 0.483", "306.363, 380.247, 38.36, 0.5084", "306.438, 381.382, 38.36, 0.483", "306.875, 382.432, 38.36, 0.3814", "307.551, 383.329, 38.1934, 0.3304", "308.194, 384.116, 38.08, 0.305", "308.194, 385.26, 38.08, 0.2796", "308.183, 386.403, 38.08, 0.2542", "307.997, 387.532, 38.08, 0.2796", "307.652, 388.601, 37.9123, 0.356", "307.642, 389.737, 37.8, 0.483", "308.157, 390.717, 37.8, 0.5338", "308.792, 391.655, 37.8, 0.5848", "309.105, 392.717, 37.8, 0.5848", "309.433, 393.78, 37.6051, 0.6102", "309.883, 394.769, 36.8718, 0.5848", "310.207, 395.846, 36.5683, 0.5592", "310.313, 396.967, 36.2998, 0.5592", "310.71, 397.905, 35.2993, 0.5592", "311.048, 398.918, 34.72, 0.5592", "311.397, 399.962, 34.2731, 0.5338", "311.397, 401.09, 33.8349, 0.5848", "311.607, 402.149, 33.6, 0.661", "311.84, 403.245, 33.472, 0.7372", "312.242, 404.274, 33.32, 0.7626", "313.193, 404.803, 33.04, 0.6864", "314.115, 405.422, 33.04, 0.5848", "314.628, 406.409, 32.7835, 0.4322", "314.893, 407.489, 32.48, 0.356", "315.286, 408.481, 32.48, 0.305", "315.204, 409.592, 31.9141, 0.3304", "315.401, 410.618, 31.36, 0.356", "316.086, 411.373, 30.5712, 0.356", "316.087, 412.514, 30.4836, 0.3304", "316.087, 413.651, 30.2498, 0.3304", "316.087, 414.766, 29.7419, 0.4068", "316.311, 415.868, 29.68, 0.5084", "317.1, 416.677, 29.6864, 0.5848", "317.787, 417.538, 30.2915, 0.6102", "318.032, 418.623, 30.6544, 0.5848", "318.041, 419.751, 31.0554, 0.5592", "318.379, 420.819, 31.36, 0.483", "318.945, 421.762, 31.8674, 0.4322", "319.373, 422.802, 31.92, 0.3814", "319.519, 423.934, 31.92, 0.4322", "319.528, 425.078, 31.92, 0.483", "319.841, 426.168, 31.92, 0.5338", "320.206, 427.249, 31.9124, 0.5084", "320.437, 428.359, 31.64, 0.483", "320.663, 429.458, 31.64, 0.483" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "307.089, 376.634, 40.9702, 0.3304", "306.217, 376.943, 40.973, 0.5592", "305.164, 377.21, 40.1632, 0.6356", "304.206, 377.793, 39.7802, 0.6864", "303.269, 378.448, 39.688, 0.661", "302.358, 379.13, 39.4114, 0.6356", "301.358, 379.68, 39.2549, 0.5848", "300.365, 380.211, 39.7163, 0.5592", "299.434, 380.868, 39.8745, 0.5592", "298.517, 381.523, 40.348, 0.6102", "297.521, 382.047, 40.85, 0.661", "296.524, 382.603, 40.9114, 0.6864", "295.619, 383.301, 41.0278, 0.6864", "294.725, 383.976, 41.5993, 0.661", "293.91, 384.759, 41.9922, 0.6102", "293.319, 385.737, 42.0409, 0.5338", "292.559, 386.585, 42.252, 0.483", "291.961, 387.52, 42.9285, 0.4576", "291.471, 388.548, 42.7064, 0.4576", "291.148, 389.62, 42.1501, 0.4576", "290.597, 390.606, 42.5793, 0.483", "290.226, 391.683, 42.7924, 0.5338", "289.9, 392.749, 42.1806, 0.5848", "289.552, 393.836, 42.3032, 0.5848", "289.068, 394.858, 42.0395, 0.5338", "288.238, 395.638, 42.1859, 0.4576", "287.268, 396.188, 42.768, 0.4322", "286.198, 396.532, 43.1808, 0.4576", "285.3, 397.224, 43.4227, 0.5592", "284.608, 398.085, 44.1134, 0.5848", "284.016, 399.061, 44.2526, 0.5848", "283.327, 399.938, 44.3181, 0.483", "282.26, 400.295, 44.6482, 0.4322", "281.185, 400.403, 45.5308, 0.3304", "280.152, 400.642, 46.5296, 0.2796", "279.534, 401.447, 46.76, 0.2288", "278.853, 402.346, 46.76, 0.2288", "277.951, 403.043, 46.76, 0.2288", "276.988, 403.661, 46.76, 0.2288", "276.102, 404.371, 46.76, 0.2542", "275.168, 404.995, 47.04, 0.2796", "274.335, 405.579, 47.3894, 0.305", "273.429, 406.228, 47.6, 0.2796", "272.455, 406.827, 47.6, 0.2542", "271.358, 407.122, 47.6, 0.2288", "270.534, 407.745, 48.16, 0.2288", "269.699, 408.5, 48.16, 0.2288", "268.707, 409.039, 48.16, 0.2288", "267.806, 409.73, 48.16, 0.2288", "266.768, 410.161, 48.16, 0.2288", "265.652, 410.405, 48.16, 0.2288", "264.51, 410.467, 48.16, 0.2796", "263.807, 411.251, 48.193, 0.3304", "263.129, 412.142, 48.2692, 0.4576", "262.091, 412.512, 49.0274, 0.483", "261.032, 412.776, 49.7437, 0.5338", "259.916, 412.773, 50.3549, 0.4322", "258.799, 412.771, 50.9662, 0.3814", "257.742, 412.573, 51.4058, 0.2796", "256.836, 411.875, 51.4058, 0.2542", "255.895, 411.346, 51.4604, 0.2288", "254.79, 411.613, 51.7737, 0.2796", "253.685, 411.882, 52.0867, 0.3304", "252.588, 412.149, 52.4986, 0.3814", "251.515, 412.415, 53.2165, 0.356", "250.441, 412.681, 53.9344, 0.3304", "249.368, 412.946, 54.6526, 0.305", "248.295, 413.212, 55.3706, 0.305", "247.571, 414.013, 55.5366, 0.305", "247.408, 415.13, 55.5366, 0.305", "247.387, 416.272, 55.5366, 0.356", "247.429, 417.415, 55.5366, 0.4322" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "311.367, 355.596, 41.188, 0.356", "311.353, 355.529, 42.0854, 0.305", "311.995, 356.013, 43.4456, 0.3304", "312.827, 356.69, 44.4181, 0.4068", "313.659, 357.368, 45.3905, 0.483", "314.449, 358.189, 45.439, 0.5338", "315.237, 359.018, 45.439, 0.5084", "315.941, 359.914, 45.439, 0.483", "316.561, 360.876, 45.4406, 0.4068", "317.351, 361.677, 45.9332, 0.356", "318.142, 362.479, 46.4254, 0.305", "318.934, 363.281, 46.9179, 0.305", "319.78, 363.977, 47.5283, 0.2796", "320.775, 364.396, 48.4509, 0.3304", "321.772, 364.816, 49.3732, 0.4322", "322.767, 365.235, 50.2956, 0.5848", "323.762, 365.653, 51.2179, 0.6102", "324.728, 366.232, 51.5612, 0.5338", "325.686, 366.852, 51.7566, 0.4068", "326.645, 367.471, 51.9518, 0.305", "327.604, 368.09, 52.1469, 0.2542", "328.562, 368.71, 52.3424, 0.2542", "329.521, 369.329, 52.5375, 0.3304", "330.48, 369.948, 52.733, 0.4576", "331.282, 370.751, 52.7828, 0.5338", "332.187, 371.259, 52.7828, 0.5084", "333.33, 371.222, 52.7828, 0.3814", "334.225, 370.643, 52.7828, 0.3304", "335.002, 369.804, 52.7828, 0.3304", "336.064, 369.599, 52.7828, 0.4322", "337.208, 369.575, 52.7828, 0.4322", "338.346, 369.597, 52.9295, 0.4576", "339.472, 369.704, 53.3397, 0.3814", "340.599, 369.811, 53.7496, 0.3814", "341.725, 369.918, 54.1596, 0.3304" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "311.367, 355.596, 41.188, 0.356", "311.7, 354.568, 43.2911, 0.4068", "311.87, 353.684, 44.7152, 0.5848", "311.3, 352.88, 45.9822, 0.661", "310.414, 352.203, 46.277, 0.5848", "309.415, 351.701, 45.7825, 0.4322", "308.397, 351.732, 45.3844, 0.3304", "307.652, 352.524, 45.5042, 0.305", "307.099, 353.488, 46.006, 0.305", "306.184, 353.81, 46.3042, 0.3814", "305.1, 353.523, 45.8993, 0.5338", "304.191, 352.948, 46.2266, 0.6864", "303.484, 352.16, 47.2511, 0.7372", "302.988, 351.578, 49.3251, 0.6356" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "340.866, 349.65, 33.3441, 0.5338", "342.345, 349.835, 34.16, 0.839", "343.489, 349.835, 34.16, 0.839", "344.624, 349.95, 34.16, 0.6864", "345.768, 349.95, 34.16, 0.5084", "346.842, 349.807, 34.16, 0.4576", "347.56, 348.933, 34.16, 0.5592", "348.655, 348.691, 34.16, 0.7118", "349.794, 348.691, 34.365, 0.8136", "350.913, 348.85, 34.44, 0.7372", "351.961, 349.28, 34.6825, 0.6102", "352.915, 349.896, 34.72, 0.4576", "353.944, 350.31, 34.72, 0.4068", "355.023, 350.61, 34.72, 0.3814", "356.167, 350.636, 34.72, 0.3814", "357.267, 350.636, 35.28, 0.3814", "358.411, 350.636, 35.28, 0.4068", "359.546, 350.522, 35.28, 0.4576", "360.671, 350.602, 35.6028, 0.5592", "361.756, 350.763, 36.3059, 0.5848", "362.861, 351.051, 36.4, 0.5338", "364.001, 351.094, 36.4, 0.4068", "365.145, 351.094, 36.4, 0.3304", "366.19, 350.709, 36.4, 0.3304", "367.326, 350.636, 36.4, 0.3814", "367.826, 350.178, 37.8, 0.5592", "368.824, 350.622, 37.8, 0.5592", "369.4, 351.602, 37.8, 0.5084", "370.441, 351.894, 37.8148, 0.4576", "371.503, 351.894, 38.8578, 0.4576", "372.592, 351.969, 39.48, 0.4068", "373.694, 352.228, 39.48, 0.3304", "374.707, 352.501, 39.76, 0.2796", "375.749, 352.924, 40.04, 0.305", "376.742, 353.34, 40.04, 0.3814", "377.553, 354.14, 40.04, 0.4068", "378.42, 354.857, 40.04, 0.4068", "379.371, 354.983, 41.3297, 0.356", "380.259, 354.983, 43.0797, 0.3304", "381.285, 355.273, 43.9435, 0.2796", "382.358, 355.626, 43.96, 0.2796", "383.462, 355.91, 43.96, 0.2796", "384.516, 356.168, 43.4, 0.305", "385.653, 356.242, 43.4, 0.2796", "386.775, 356.175, 43.8424, 0.2796", "387.901, 356.127, 43.8284, 0.3304", "388.901, 356.356, 43.12, 0.4068", "390.044, 356.356, 43.12, 0.4576", "391.187, 356.356, 43.2104, 0.4068", "392.249, 356.74, 43.4, 0.356", "393.33, 357.025, 42.9024, 0.2796", "394.47, 357.042, 42.84, 0.2542", "395.605, 357.042, 43.0774, 0.2288", "396.729, 357.206, 43.0217, 0.2288", "397.821, 357.497, 42.84, 0.2288", "398.94, 357.689, 42.84, 0.2288", "400.067, 357.843, 42.84, 0.2288", "401.107, 358.205, 42.56, 0.2288", "402.063, 358.832, 42.56, 0.2288", "402.906, 359.581, 42.6863, 0.2288", "403.727, 360.347, 42.84, 0.2288", "404.778, 360.791, 42.84, 0.2542", "405.734, 361.391, 42.84, 0.2796", "406.634, 362.091, 42.84, 0.305", "407.511, 362.728, 42.84, 0.2796", "408.514, 363.249, 42.5502, 0.2542", "409.392, 363.952, 42.28, 0.2288", "410.214, 364.712, 42.56, 0.2288", "410.631, 365.668, 42.56, 0.2288", "410.925, 366.772, 42.5597, 0.2288", "410.879, 367.904, 42.3245, 0.2288", "410.379, 368.786, 41.44, 0.2796", "409.552, 369.283, 41.72, 0.356" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "340.866, 349.65, 33.3441, 0.5338", "341.453, 350.013, 33.7896, 0.4576", "341.819, 350.906, 35.1369, 0.5084", "341.947, 352.004, 35.7703, 0.5338", "342.389, 353.037, 35.3458, 0.5084", "343.088, 353.94, 35.4096, 0.483", "343.876, 354.726, 36.0346, 0.483", "344.716, 355.491, 36.3496, 0.5338", "345.672, 356.115, 36.2037, 0.5848", "346.637, 356.665, 35.5342, 0.6102", "347.554, 357.34, 35.2836, 0.6102", "348.303, 358.202, 35.2817, 0.6102", "348.679, 359.282, 35.2912, 0.6356", "348.811, 360.418, 35.3517, 0.6864", "349.198, 361.485, 35.7151, 0.7118", "349.587, 362.476, 36.7262, 0.661", "350.098, 363.473, 37.217, 0.5592", "350.821, 364.294, 36.4647, 0.5084", "351.823, 364.841, 36.3989, 0.5338", "352.925, 365.147, 36.3913, 0.5848", "354.019, 365.48, 36.3457, 0.5848", "355.082, 365.89, 36.1281, 0.5592", "356.052, 366.444, 35.6149, 0.5338", "356.976, 367.094, 36.043, 0.5338", "357.831, 367.82, 36.5686, 0.5338", "358.512, 368.7, 36.9846, 0.5848", "358.871, 369.772, 36.6346, 0.6356", "359.202, 370.857, 36.9163, 0.661", "359.616, 371.893, 37.4718, 0.5592", "360.09, 372.923, 37.5094, 0.4576", "360.35, 374.027, 37.4525, 0.4068", "360.94, 374.986, 37.1613, 0.483", "361.732, 375.768, 36.6078, 0.5592", "362.579, 376.52, 36.836, 0.5848", "363.41, 377.249, 37.4338, 0.5084", "364.126, 378.138, 37.52, 0.4322", "364.97, 378.904, 37.52, 0.3814", "365.912, 379.555, 37.5206, 0.3814", "366.885, 380.151, 37.5239, 0.356", "367.865, 380.72, 37.5399, 0.3304", "368.584, 381.586, 37.6233, 0.3304", "369.021, 382.626, 37.9994, 0.3814", "369.551, 383.58, 38.6912, 0.4322", "370.362, 384.359, 39.1516, 0.4576", "371.19, 385.083, 39.3638, 0.4322", "371.898, 385.936, 38.754, 0.3814", "372.56, 386.866, 38.64, 0.305", "373.16, 387.84, 38.6674, 0.2542", "373.898, 388.706, 38.5874, 0.2542", "374.795, 389.384, 38.36, 0.2796", "375.477, 390.284, 38.36, 0.3304", "376.14, 391.171, 38.36, 0.356", "376.806, 391.937, 38.36, 0.3814", "377.469, 392.849, 38.08, 0.4068", "378.209, 393.715, 38.08, 0.4322", "379.249, 394.11, 38.08, 0.483", "380.026, 394.838, 38.08, 0.483", "380.695, 395.757, 38.2323, 0.4576", "381.554, 396.466, 38.64, 0.3814", "381.962, 397.498, 38.64, 0.305", "381.971, 398.638, 38.7089, 0.2542", "381.873, 399.772, 38.9175, 0.2288", "381.867, 400.911, 38.8046, 0.2288", "381.867, 402.05, 38.64, 0.2288", "381.926, 403.185, 38.4356, 0.2542", "382.096, 404.3, 38.08, 0.305", "382.216, 405.431, 38.08, 0.3814", "382.741, 406.439, 38.08, 0.4068", "383.385, 407.338, 37.52, 0.3814", "383.714, 408.411, 37.52, 0.305", "384.418, 409.31, 37.52, 0.2542", "385.173, 410.03, 37.52, 0.2542", "385.188, 411.173, 37.52, 0.2796", "385.439, 412.286, 37.52, 0.305", "385.458, 413.405, 37.2568, 0.2796", "384.996, 414.425, 36.96, 0.2542", "384.517, 415.464, 36.96, 0.2288", "384.27, 416.564, 36.96, 0.305", "383.926, 417.446, 36.96, 0.4068" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "332.925, 377.39, 34.0665, 0.6356", "333.084, 378.265, 31.6845, 0.305", "333.185, 379.003, 29.8337, 0.3304", "334.2, 379.53, 29.8337, 0.3814", "334.934, 379.007, 29.8337, 0.356", "335.667, 378.248, 29.8337, 0.3814", "336.81, 378.185, 29.8337, 0.4576", "337.859, 378.321, 29.6878, 0.5338", "338.575, 379.17, 29.0136, 0.5084", "339.291, 380.018, 28.3394, 0.3814", "340.006, 380.867, 27.6651, 0.3304", "340.722, 381.716, 26.9909, 0.3304", "340.863, 382.612, 26.2914, 0.4068", "340.306, 383.566, 25.5612, 0.3814", "339.75, 384.52, 24.831, 0.4068", "340.309, 385.472, 24.785, 0.4068", "341.38, 385.692, 24.785, 0.5084", "342.395, 386.076, 24.785, 0.5084", "343.237, 386.85, 24.785, 0.483", "343.881, 387.718, 24.12, 0.4068", "344.415, 388.635, 23.0796, 0.4322", "344.735, 389.651, 22.4902, 0.483", "344.762, 390.793, 22.3675, 0.483", "344.775, 391.932, 22.1164, 0.4322", "344.788, 393.072, 21.8655, 0.4068", "344.801, 394.211, 21.6143, 0.483", "344.813, 395.349, 21.3634, 0.5592", "344.827, 396.489, 21.112, 0.6102", "345.235, 397.55, 20.8124, 0.6102", "345.644, 398.612, 20.5128, 0.5592", "346.051, 399.674, 20.2132, 0.483", "345.415, 400.585, 20.195, 0.356", "345.351, 401.607, 19.8831, 0.305", "345.642, 402.695, 19.3978, 0.2796", "345.934, 403.783, 18.9123, 0.305", "346.078, 404.912, 18.8182, 0.2796", "346.185, 406.051, 18.8182, 0.2542", "346.263, 407.192, 18.8182, 0.2288", "346.601, 408.184, 18.2739, 0.2288", "347.242, 409.013, 17.1511, 0.2796", "348.305, 409.24, 16.9823, 0.3304" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "332.925, 377.39, 34.0665, 0.6356", "333.573, 377.892, 34.5019, 0.3814", "334.4, 378.618, 35.2601, 0.3304", "335.229, 379.344, 36.0186, 0.305", "336.253, 379.752, 36.2594, 0.305", "337.367, 380.01, 36.2594, 0.356", "338.23, 380.635, 36.2594, 0.3814", "338.873, 381.581, 36.2594, 0.4068", "339.63, 382.434, 36.2594, 0.4576", "340.435, 383.247, 36.2594, 0.5338", "341.486, 383.69, 36.2594, 0.5848", "342.547, 384.119, 36.2594, 0.6102", "343.607, 384.546, 36.2594, 0.5848", "344.668, 384.975, 36.2594, 0.5592", "345.728, 385.404, 36.2594, 0.5084", "346.793, 385.822, 36.2594, 0.4576", "347.865, 386.22, 36.2594, 0.356", "348.938, 386.618, 36.2594, 0.2796", "349.86, 387.199, 36.3364, 0.2288", "350.46, 388.167, 36.577, 0.2796", "351.06, 389.136, 36.8178, 0.3304", "351.661, 390.105, 37.0583, 0.3814", "352.432, 390.915, 37.1773, 0.3304", "353.371, 391.567, 37.1773, 0.2796", "354.312, 392.22, 37.1773, 0.2288", "355.266, 392.849, 37.1773, 0.2288", "356.287, 393.363, 37.1773, 0.2288", "357.308, 393.879, 37.1773, 0.2288", "358.327, 394.399, 37.1815, 0.2288", "359.234, 395.091, 37.3635, 0.2288", "360.142, 395.784, 37.5458, 0.2542", "361.05, 396.476, 37.7278, 0.2796", "361.957, 397.169, 37.91, 0.305", "362.864, 397.862, 38.092, 0.2796", "363.948, 398.226, 38.0954, 0.2542", "365.033, 398.586, 38.0954, 0.2288", "366.12, 398.944, 38.0954, 0.2288", "367.206, 399.303, 38.0954, 0.2542", "368.293, 399.662, 38.0954, 0.2796", "369.392, 399.914, 38.0954, 0.305", "370.527, 399.839, 38.0954, 0.305", "371.262, 400.716, 38.0954, 0.305", "372.123, 401.43, 38.1248, 0.305", "373.158, 401.915, 38.1956, 0.2796", "374.194, 402.399, 38.2662, 0.2542", "375.23, 402.884, 38.337, 0.2288", "376.265, 403.369, 38.4076, 0.2288", "377.302, 403.854, 38.4784, 0.2288", "378.337, 404.338, 38.549, 0.2288", "379.339, 404.874, 38.8576, 0.2288", "380.339, 405.415, 39.1854, 0.2288", "381.337, 405.955, 39.5133, 0.2288", "382.337, 406.496, 39.8412, 0.2288", "383.336, 407.038, 40.1694, 0.2288", "384.335, 407.578, 40.4972, 0.2542", "385.335, 408.119, 40.8251, 0.305", "386.333, 408.659, 41.153, 0.356", "387.397, 409.03, 41.4095, 0.356", "388.517, 409.249, 41.6024, 0.305", "389.637, 409.469, 41.795, 0.2542", "390.757, 409.688, 41.9877, 0.2288", "391.877, 409.907, 42.1803, 0.2288", "392.997, 410.126, 42.3732, 0.2288", "394.117, 410.345, 42.5659, 0.2288", "395.147, 410.752, 42.8299, 0.2288", "396.029, 411.462, 43.2099, 0.2542", "396.912, 412.174, 43.5898, 0.305", "397.795, 412.884, 43.9698, 0.4068", "398.677, 413.596, 44.3498, 0.4576", "399.7, 413.899, 44.6704, 0.4576", "400.838, 413.867, 44.9417, 0.356", "401.976, 413.835, 45.2133, 0.2796", "403.115, 413.803, 45.4849, 0.2288", "404.253, 413.771, 45.7565, 0.2288", "405.231, 413.365, 45.8982, 0.2288", "406.13, 412.759, 45.8982, 0.2288", "407.272, 412.682, 45.8982, 0.2288", "407.917, 413.465, 46.214, 0.2542", "408.432, 414.474, 46.6127, 0.2796", "408.948, 415.481, 47.0114, 0.3304", "409.463, 416.489, 47.4102, 0.356", "410.003, 417.486, 47.7338, 0.3814", "410.647, 418.431, 47.7338, 0.3814", "410.993, 419.477, 48.2003, 0.4068", "411.214, 420.568, 48.8628, 0.483", "411.875, 421.39, 49.2895, 0.5338", "412.799, 422.055, 49.5754, 0.5084", "413.723, 422.719, 49.861, 0.3814", "414.647, 423.383, 50.1466, 0.2796", "415.572, 424.048, 50.4325, 0.2288", "416.495, 424.711, 50.7181, 0.2288", "417.419, 425.376, 51.0037, 0.2542", "418.344, 426.039, 51.2893, 0.2796", "419.305, 426.654, 51.4058, 0.305", "420.291, 427.234, 51.4058, 0.3304", "421.277, 427.814, 51.4058, 0.356" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "332.925, 377.39, 34.0665, 0.6356", "332.736, 377.862, 33.866, 0.5338", "332.505, 378.776, 32.7088, 0.5848", "333.373, 379.235, 31.7775, 0.5848", "333.962, 379.998, 32.8325, 0.5848", "334.268, 380.92, 34.2936, 0.5338", "334.842, 381.826, 35.1744, 0.5338", "335.1, 382.924, 35.2794, 0.483", "335.807, 383.798, 35.2828, 0.5084", "336.613, 384.611, 35.2918, 0.5084", "337.287, 385.534, 35.3371, 0.5592", "337.894, 386.49, 35.7109, 0.6102", "338.587, 387.361, 36.3423, 0.661", "339.371, 388.191, 36.398, 0.6864", "340.215, 388.962, 36.3955, 0.661", "341.174, 389.585, 36.3762, 0.661", "342.132, 390.209, 36.2706, 0.661", "342.817, 391.09, 35.7053, 0.6864", "343.374, 392.073, 35.2582, 0.661", "344.071, 392.977, 35.1156, 0.661", "344.723, 393.879, 34.477, 0.6864", "345.407, 394.75, 33.7702, 0.7372", "346.038, 395.658, 33.056, 0.7118", "346.649, 396.625, 33.04, 0.6356" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "304.765, 347.143, 21.6958, 1.0424", "303.127, 347.175, 21.8403, 0.7372", "302.0, 347.004, 21.8408, 0.839", "300.896, 346.707, 21.8453, 0.839", "299.792, 346.407, 21.875, 0.8644", "298.662, 346.363, 22.0497, 0.8136", "297.601, 346.632, 22.7374, 0.7626" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "304.765, 347.143, 21.6958, 1.0424", "303.536, 348.021, 20.778, 0.5848", "302.784, 348.878, 20.8071, 0.5592", "302.297, 349.889, 21.2279, 0.6102", "301.771, 350.747, 22.4403, 0.6102", "301.262, 351.735, 22.4806, 0.5848", "300.792, 352.717, 21.6322, 0.5338", "300.267, 353.681, 21.0095, 0.6102", "299.493, 354.47, 21.2332, 0.7372", "298.517, 355.024, 21.6863, 0.839", "297.495, 355.529, 21.6723, 0.8136", "296.465, 355.98, 21.2139, 0.7118", "295.495, 356.525, 20.8846, 0.6102", "294.618, 357.224, 21.3058, 0.5592", "293.769, 357.915, 22.118, 0.483", "292.83, 358.493, 22.7542, 0.4322", "291.822, 359.017, 22.9897, 0.4322", "290.93, 359.715, 23.091, 0.483", "290.194, 360.558, 23.5637, 0.6102", "289.45, 361.337, 24.4591, 0.6864", "288.628, 362.068, 25.1642, 0.788", "287.888, 362.904, 25.6964, 0.788", "287.175, 363.778, 26.1223, 0.7372", "286.343, 364.552, 26.1173, 0.6864", "285.343, 364.991, 25.6091, 0.661", "284.241, 365.225, 25.3767, 0.7372", "283.139, 365.452, 25.802, 0.788", "282.043, 365.658, 25.681, 0.839", "280.945, 365.922, 25.2927, 0.8136", "279.857, 366.271, 25.1994, 0.7626", "278.843, 366.787, 25.1969, 0.6864", "277.87, 367.388, 25.1843, 0.5848", "276.9, 367.994, 25.1149, 0.4576", "276.079, 368.757, 24.7503, 0.3814", "275.336, 369.602, 24.2561, 0.3814", "274.436, 370.283, 24.066, 0.4322", "273.48, 370.909, 23.9616, 0.4322", "272.66, 371.331, 23.4324, 0.4068", "272.082, 372.269, 22.979, 0.4068", "271.225, 372.999, 22.7626, 0.4322", "270.234, 373.501, 22.68, 0.4322", "269.618, 374.444, 22.96, 0.4068", "268.729, 375.142, 22.96, 0.356", "267.651, 375.48, 22.96, 0.3304", "266.63, 375.902, 22.96, 0.305", "265.862, 376.727, 22.96, 0.3304", "265.361, 377.744, 22.96, 0.356", "265.247, 378.876, 22.96, 0.3814", "265.081, 380.005, 22.96, 0.3814", "264.884, 381.039, 22.4179, 0.4068", "264.706, 381.937, 22.7609, 0.4068", "264.287, 382.884, 23.8669, 0.3814", "263.253, 383.372, 23.8669, 0.3304", "262.27, 383.907, 23.4312, 0.305", "261.325, 384.474, 22.6814, 0.305", "260.508, 385.118, 22.031, 0.2796", "260.477, 386.251, 21.8616, 0.2542", "260.301, 387.352, 21.2341, 0.2288", "260.118, 388.453, 20.6363, 0.2542", "259.841, 389.56, 20.3997, 0.2796", "259.566, 390.665, 20.1628, 0.356", "259.289, 391.771, 19.9262, 0.3814", "259.013, 392.877, 19.6893, 0.4068", "258.736, 393.983, 19.4527, 0.356", "258.502, 395.098, 19.2772, 0.3304", "259.103, 395.92, 19.2772, 0.3304", "259.018, 396.901, 18.9706, 0.3304", "258.641, 397.969, 18.5752, 0.3304", "258.264, 399.036, 18.1796, 0.2796", "257.752, 400.02, 17.9001, 0.2542", "257.1, 400.916, 17.9001, 0.2288", "257.089, 401.997, 17.3835, 0.305", "257.286, 403.068, 16.5234, 0.4322" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "276.204, 369.265, 38.6448, 0.661", "276.577, 370.765, 39.0505, 0.3814", "276.767, 371.884, 39.4153, 0.2796", "276.559, 372.993, 39.4724, 0.305", "276.635, 374.073, 39.4724, 0.3304", "277.052, 375.134, 39.5276, 0.356", "277.308, 376.243, 39.818, 0.4322", "277.796, 377.255, 39.9314, 0.4322", "278.435, 378.204, 39.9314, 0.4576", "278.957, 379.206, 40.0495, 0.4322", "279.305, 380.29, 40.3477, 0.483", "279.137, 381.399, 40.3903, 0.5084", "279.551, 382.276, 40.7464, 0.5084", "280.369, 383.015, 41.3081, 0.4576", "280.448, 384.155, 41.3081, 0.3814", "280.158, 385.195, 41.704, 0.3304", "279.618, 386.166, 42.3671, 0.305", "279.412, 387.196, 43.1337, 0.356", "279.513, 388.279, 43.9967, 0.4068", "279.362, 389.333, 44.5211, 0.4576", "278.817, 390.339, 44.5211, 0.4068", "278.27, 391.343, 44.5211, 0.3304", "278.471, 392.379, 45.0386, 0.2542", "278.859, 393.423, 45.6854, 0.2288", "279.247, 394.466, 46.3322, 0.2288", "279.06, 395.563, 46.9118, 0.2288", "278.85, 396.663, 47.4886, 0.2288", "278.641, 397.762, 48.0654, 0.2288", "278.672, 398.893, 48.193, 0.2288", "278.974, 399.924, 48.953, 0.2288", "279.354, 400.915, 50.0041, 0.2542", "279.734, 401.904, 51.0555, 0.2796", "280.115, 402.894, 52.1066, 0.305", "280.495, 403.884, 53.1577, 0.2796", "280.925, 404.784, 54.5216, 0.2542", "281.327, 405.704, 55.8544, 0.2288", "281.639, 406.693, 57.0301, 0.2288", "281.792, 407.537, 58.6079, 0.2542", "281.606, 408.069, 61.0445, 0.2796" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "276.204, 369.265, 38.6448, 0.661", "275.322, 369.737, 38.6635, 0.305", "274.327, 370.3, 38.7677, 0.356", "273.306, 370.729, 39.4346, 0.3814", "272.539, 371.452, 40.4656, 0.4068", "272.042, 372.325, 41.7906, 0.5338", "271.134, 372.986, 42.1431, 0.6864" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "291.826, 358.543, 32.002, 0.4576", "291.556, 358.54, 30.52, 0.6356", "290.458, 358.849, 30.52, 0.483", "289.403, 359.269, 30.52, 0.4068", "288.463, 359.894, 30.52, 0.4068", "287.343, 360.061, 30.52, 0.4576", "286.239, 360.358, 30.52, 0.5084", "285.099, 360.36, 30.4027, 0.5084", "283.991, 360.266, 29.96, 0.5592", "283.099, 359.677, 29.7032, 0.6102", "281.955, 359.674, 29.68, 0.661", "280.811, 359.674, 29.68, 0.661", "279.668, 359.674, 29.6332, 0.5592", "278.597, 359.851, 29.0144, 0.4068", "277.701, 360.547, 28.84, 0.305", "276.649, 360.88, 28.56, 0.2796", "275.508, 360.932, 28.56, 0.305", "274.366, 360.994, 28.56, 0.305", "273.225, 361.046, 28.56, 0.3304", "272.081, 361.046, 28.56, 0.3814", "270.937, 361.046, 28.56, 0.483", "269.799, 361.118, 28.56, 0.5338", "268.688, 361.275, 28.3111, 0.5848", "267.567, 361.363, 27.8071, 0.5338", "266.573, 361.792, 27.0054, 0.5084", "265.886, 362.651, 26.4205, 0.4322", "265.389, 363.47, 25.4579, 0.3814", "264.322, 363.563, 24.64, 0.3304", "263.384, 364.061, 24.64, 0.3304", "262.296, 364.25, 24.64, 0.3814", "261.16, 364.174, 24.64, 0.4576", "260.114, 363.792, 24.64, 0.4576", "259.055, 363.801, 24.0568, 0.4068", "258.693, 364.753, 23.2352, 0.305", "257.988, 365.522, 23.2033, 0.2542", "257.191, 365.976, 22.031, 0.2288", "256.168, 365.466, 22.031, 0.2288", "255.596, 366.008, 20.6542, 0.2288", "255.276, 367.094, 20.6542, 0.2288", "254.416, 366.802, 20.6542, 0.2542", "253.959, 365.873, 20.1653, 0.2796", "253.359, 365.14, 19.7361, 0.305", "252.366, 365.35, 19.6353, 0.305", "251.973, 366.226, 18.116, 0.3304", "251.328, 365.566, 17.9001, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "291.826, 358.543, 32.002, 0.4576", "290.805, 358.134, 32.4204, 0.4576", "289.895, 357.477, 32.972, 0.5848", "289.078, 356.677, 33.0229, 0.6864", "288.286, 355.853, 32.9742, 0.7372" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "322.244, 336.484, 40.8201, 0.6864", "322.12, 337.173, 41.3571, 0.4068", "321.909, 338.272, 41.7673, 0.4576", "321.707, 339.275, 41.7673, 0.5848", "320.717, 338.702, 41.7673, 0.6864", "319.788, 338.095, 42.3548, 0.6864", "318.879, 337.478, 43.1323, 0.5848", "317.812, 337.56, 44.0622, 0.5338", "317.256, 338.56, 44.0622, 0.6102", "316.896, 339.598, 44.6088, 0.7118", "316.654, 340.661, 45.439, 0.7626", "316.578, 341.802, 45.439, 0.8136", "315.969, 342.546, 46.6516, 0.8644", "315.316, 343.329, 47.8607, 0.9152", "314.711, 344.206, 48.8824, 0.8644", "314.106, 345.114, 49.5698, 0.788", "313.502, 346.085, 49.5698, 0.6356", "313.019, 347.096, 50.0223, 0.483", "312.81, 348.117, 50.4879, 0.3304", "313.441, 348.954, 50.5882, 0.305", "314.547, 348.845, 51.2515, 0.3814", "315.652, 348.735, 51.9148, 0.483", "316.759, 348.625, 52.5784, 0.5084", "317.865, 348.515, 53.2417, 0.4576" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "322.244, 336.484, 40.8201, 0.6864", "321.533, 336.871, 40.651, 0.4576", "320.499, 336.836, 39.8994, 0.4576", "319.483, 336.463, 39.0107, 0.4576", "318.641, 335.741, 39.0544, 0.4068", "317.915, 334.885, 39.5766, 0.4576", "317.017, 334.197, 39.7286, 0.5848", "316.057, 333.574, 39.6603, 0.7118", "315.059, 333.06, 39.188, 0.7626", "314.013, 332.639, 38.7181, 0.7626", "312.908, 332.359, 38.6358, 0.7626", "311.81, 332.043, 38.6151, 0.7372", "310.723, 331.691, 38.479, 0.6864", "309.65, 331.402, 37.8476, 0.6356", "308.609, 330.956, 37.5623, 0.5848", "307.524, 330.597, 37.5914, 0.5848", "306.449, 330.246, 37.9884, 0.5848", "305.375, 329.902, 38.4465, 0.6102", "304.272, 329.755, 37.9389, 0.5592", "303.167, 329.48, 37.767, 0.5084", "302.068, 329.443, 38.4602, 0.483", "301.055, 328.944, 38.6316, 0.5848", "300.027, 328.442, 38.64, 0.6864", "298.936, 328.098, 38.64, 0.7626", "297.955, 327.516, 38.6406, 0.7118", "297.107, 326.748, 38.6425, 0.6356", "296.277, 325.961, 38.6504, 0.5592", "295.38, 325.253, 38.6865, 0.5592", "294.252, 325.152, 38.9085, 0.6102", "293.166, 324.99, 39.6866, 0.6102", "292.16, 324.449, 39.821, 0.5592", "291.038, 324.285, 40.1772, 0.483", "289.925, 324.07, 39.8502, 0.483", "288.923, 323.521, 39.818, 0.5338", "288.015, 322.833, 40.021, 0.5592", "287.026, 322.356, 40.8094, 0.5848", "286.037, 321.872, 41.5464, 0.5338", "285.156, 321.169, 42.0017, 0.5084", "284.361, 320.349, 42.1333, 0.4322", "283.633, 319.481, 42.5382, 0.4576", "282.887, 318.654, 43.0791, 0.5084", "281.888, 318.104, 43.1595, 0.6102", "281.089, 317.309, 43.344, 0.661", "280.686, 316.27, 43.9684, 0.6864", "280.177, 315.254, 44.2417, 0.661", "279.586, 314.275, 44.2481, 0.6356", "278.913, 313.355, 44.2826, 0.6356", "278.436, 312.327, 44.5116, 0.661", "277.844, 311.401, 45.2808, 0.6864", "277.306, 310.414, 45.771, 0.661", "276.798, 309.426, 46.3966, 0.661", "276.268, 308.415, 46.48, 0.6356", "275.943, 307.329, 46.4811, 0.5848", "275.91, 306.185, 46.4873, 0.5084", "275.786, 305.055, 46.5265, 0.483", "275.425, 304.051, 47.0417, 0.5592", "274.92, 303.162, 47.6, 0.6356", "274.154, 302.345, 47.6, 0.661", "273.158, 301.834, 47.6, 0.6356", "272.287, 301.181, 48.1216, 0.5848", "271.354, 300.627, 48.221, 0.5848", "270.792, 299.682, 48.7169, 0.5592", "270.383, 298.639, 48.9549, 0.5338", "269.977, 297.673, 49.9436, 0.4576", "269.629, 296.595, 50.1494, 0.4068", "268.889, 295.748, 50.6013, 0.3814", "268.251, 294.839, 50.7212, 0.3814", "268.128, 293.729, 51.1582, 0.3814", "267.207, 293.207, 51.52, 0.4068", "266.24, 292.97, 52.36, 0.4576", "265.471, 292.15, 52.36, 0.483", "265.065, 291.14, 52.36, 0.483", "265.065, 290.044, 53.0356, 0.4322", "265.028, 288.926, 53.4764, 0.4576", "264.413, 288.03, 54.04, 0.4576", "263.65, 287.2, 54.0658, 0.483", "263.01, 286.334, 54.32, 0.4068", "263.006, 285.19, 54.32, 0.3814", "263.207, 284.141, 54.4992, 0.3814", "263.008, 283.094, 55.3725, 0.4576", "262.817, 282.014, 56.1649, 0.5084", "262.45, 280.957, 56.4547, 0.483", "262.34, 279.874, 56.7991, 0.4576", "262.479, 278.764, 57.3818, 0.4322", "262.402, 277.722, 57.8315, 0.4576", "261.593, 276.913, 57.8315, 0.4322", "261.149, 275.945, 58.6555, 0.4322", "260.789, 274.942, 59.6674, 0.483" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "328.849, 328.442, 35.4096, 0.6864", "329.27, 327.324, 36.3818, 0.7626", "329.86, 326.345, 36.3975, 0.7372", "330.665, 325.534, 36.3888, 0.7372", "331.642, 324.94, 36.3443, 0.7626", "332.651, 324.409, 36.1231, 0.8644", "333.6, 323.855, 35.3394, 0.9152", "334.506, 323.17, 35.0098, 0.8898" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "328.849, 328.442, 35.4096, 0.6864", "328.99, 327.151, 35.343, 0.7372", "328.859, 326.029, 35.5729, 0.7118", "328.371, 325.061, 35.6902, 0.6356", "327.738, 324.458, 33.9626, 0.5592", "326.908, 324.183, 32.3372, 0.5592", "325.82, 323.874, 31.9138, 0.6102" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "341.725, 369.918, 54.1596, 0.3304", "342.393, 370.124, 55.7211, 0.305", "343.31, 370.396, 57.2572, 0.305", "344.186, 370.684, 58.7927, 0.2796", "343.672, 371.499, 60.3025, 0.2542", "343.159, 372.314, 61.8122, 0.2288", "342.645, 373.129, 63.3223, 0.2288", "342.551, 374.23, 64.0346, 0.2288", "342.495, 375.318, 64.7161, 0.2288", "343.472, 375.914, 64.7161, 0.2542", "343.91, 376.414, 66.9718, 0.3304", "344.342, 376.913, 69.2611, 0.4068", "344.773, 377.41, 71.5501, 0.4322", "345.312, 378.122, 73.2978, 0.356", "345.853, 378.838, 75.033, 0.2796", "346.354, 379.703, 76.3039, 0.2288", "346.828, 380.668, 77.2618, 0.2288", "347.3, 381.634, 78.2194, 0.2288", "347.316, 382.654, 79.2694, 0.2288", "347.157, 383.697, 80.355, 0.2288", "346.998, 384.739, 81.4402, 0.2288", "346.839, 385.782, 82.5258, 0.2288", "347.568, 386.6, 82.9002, 0.2288", "348.378, 387.398, 83.2096, 0.2288", "349.188, 388.196, 83.519, 0.2288", "349.998, 388.994, 83.8286, 0.2288", "350.808, 389.792, 84.138, 0.2288", "351.618, 390.59, 84.4474, 0.2288", "352.539, 391.186, 85.2284, 0.2288", "353.463, 391.78, 86.0171, 0.2288", "354.386, 392.374, 86.8056, 0.2288", "355.309, 392.966, 87.5944, 0.2288", "356.232, 393.56, 88.3828, 0.2288", "357.157, 394.153, 89.1716, 0.2288", "358.08, 394.746, 89.9601, 0.2796" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "341.725, 369.918, 54.1596, 0.3304", "342.872, 369.177, 54.1596, 0.5084", "343.833, 368.556, 54.1596, 0.5592", "344.866, 368.097, 54.1596, 0.5592", "345.969, 367.791, 54.1596, 0.5592", "347.071, 367.487, 54.1596, 0.5848", "348.165, 367.451, 54.3936, 0.5592", "349.25, 367.747, 54.9178, 0.4576", "350.333, 368.043, 55.442, 0.3304", "351.417, 368.339, 55.9661, 0.2796", "352.504, 368.603, 56.4746, 0.3304", "353.625, 368.414, 56.7683, 0.4576", "354.747, 368.226, 57.0618, 0.5338", "355.87, 368.039, 57.3555, 0.5338", "356.992, 367.85, 57.6492, 0.4322", "358.114, 367.785, 57.9936, 0.356", "359.237, 367.92, 58.422, 0.2796", "360.359, 368.055, 58.8501, 0.2542", "361.481, 368.188, 59.2785, 0.2542", "362.603, 368.323, 59.7066, 0.2796", "363.713, 368.477, 60.1264, 0.305", "364.828, 368.346, 60.4243, 0.2796", "365.955, 368.194, 60.7275, 0.2542", "367.082, 368.042, 61.0308, 0.2288", "368.148, 368.422, 61.3147, 0.2288", "369.212, 368.828, 61.5975, 0.2288", "370.276, 369.233, 61.8806, 0.2288", "371.339, 369.638, 62.1634, 0.2288", "372.403, 370.039, 62.4708, 0.2288", "373.465, 370.397, 63.028, 0.2288", "374.527, 370.755, 63.5849, 0.2288", "375.59, 371.114, 64.1418, 0.2288", "376.7, 371.066, 64.3658, 0.2288", "377.837, 370.95, 64.5142, 0.2288", "378.973, 370.835, 64.6624, 0.2288", "380.077, 370.563, 64.7161, 0.2288", "381.164, 370.204, 64.7161, 0.2288", "382.133, 369.63, 64.7688, 0.2288", "383.024, 368.914, 64.8561, 0.2288", "383.916, 368.199, 64.9432, 0.2288", "384.807, 367.483, 65.0303, 0.2288", "385.7, 366.767, 65.1176, 0.2288", "386.663, 366.193, 65.1753, 0.2288", "387.768, 365.896, 65.1753, 0.2288", "388.873, 365.599, 65.1753, 0.2288", "389.978, 365.303, 65.1753, 0.2288", "391.01, 364.822, 65.1753, 0.2288", "392.021, 364.287, 65.1753, 0.2288", "393.034, 363.753, 65.1753, 0.2288", "394.045, 363.218, 65.1753, 0.2288", "394.989, 362.576, 65.1753, 0.2288", "395.917, 361.907, 65.1753, 0.2288", "396.846, 361.237, 65.1753, 0.2288", "397.773, 360.569, 65.1753, 0.2288", "398.52, 359.709, 65.1753, 0.2288", "399.238, 358.818, 65.1753, 0.2288", "399.955, 357.927, 65.1753, 0.2288", "400.672, 357.035, 65.1753, 0.2542", "401.39, 356.144, 65.1753, 0.2796" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "302.988, 351.578, 49.3251, 0.6356", "303.255, 352.092, 49.6196, 0.3304", "303.573, 352.813, 51.6494, 0.2796", "303.89, 353.535, 53.6791, 0.2542", "304.208, 354.256, 55.7088, 0.2288", "304.414, 355.046, 57.3726, 0.2288", "304.12, 356.151, 57.3726, 0.2288", "304.293, 357.107, 57.3726, 0.2288", "305.176, 357.833, 57.3726, 0.2288", "304.342, 358.181, 58.8204, 0.2288", "303.437, 358.512, 60.3282, 0.2288", "302.532, 358.845, 61.836, 0.2288", "302.183, 359.471, 63.9604, 0.2288", "301.886, 360.123, 66.141, 0.2288", "301.703, 360.994, 67.865, 0.2542", "301.545, 361.914, 69.4831, 0.2796", "301.388, 362.835, 71.101, 0.305", "301.14, 363.627, 72.7322, 0.2796", "300.246, 363.514, 74.4568, 0.2542", "299.352, 363.401, 76.1816, 0.2288", "298.458, 363.288, 77.9061, 0.2288", "297.564, 363.174, 79.6309, 0.2288", "296.669, 363.062, 81.3554, 0.2288", "295.776, 362.947, 83.0754, 0.2288", "295.09, 362.03, 83.0754, 0.2288", "294.03, 361.972, 83.0754, 0.2288", "292.892, 362.089, 83.0754, 0.2288", "291.753, 362.206, 83.0754, 0.2288", "291.79, 362.502, 85.631, 0.2288", "291.887, 362.806, 88.3198, 0.2288", "291.985, 363.109, 91.0084, 0.2542", "292.083, 363.413, 93.6972, 0.2796", "292.18, 363.718, 96.3858, 0.305" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "302.988, 351.578, 49.3251, 0.6356", "302.063, 352.097, 49.7294, 0.305", "301.005, 352.424, 50.4294, 0.305", "299.947, 352.75, 51.1294, 0.305", "298.888, 353.077, 51.8294, 0.2796", "297.754, 353.195, 51.8647, 0.305", "297.039, 352.379, 51.8647, 0.3304", "296.376, 351.447, 51.8647, 0.4068", "295.686, 350.557, 51.9148, 0.3814", "294.625, 350.285, 52.7156, 0.3814", "293.562, 350.013, 53.5164, 0.356", "292.623, 349.966, 54.4468, 0.3814", "292.18, 350.836, 55.9051, 0.3814", "291.101, 351.065, 55.9955, 0.356", "289.967, 350.911, 55.9955, 0.3814", "289.263, 350.108, 55.9955, 0.4322", "288.677, 349.125, 55.9955, 0.5084", "287.833, 348.411, 56.5093, 0.5084", "286.929, 347.76, 57.143, 0.4576", "286.024, 347.108, 57.7763, 0.4068", "285.091, 346.507, 58.3736, 0.3814", "284.027, 346.126, 58.8154, 0.3814", "282.964, 345.745, 59.2572, 0.3814", "281.9, 345.364, 59.6994, 0.356", "280.837, 344.982, 60.1412, 0.305", "279.773, 344.601, 60.583, 0.2542", "278.709, 344.22, 61.0249, 0.2288", "277.684, 343.853, 61.8789, 0.2288", "276.661, 343.487, 62.7525, 0.2288", "275.638, 343.121, 63.6261, 0.2288", "274.615, 342.755, 64.4994, 0.2288", "273.591, 342.389, 65.373, 0.2288", "272.568, 342.023, 66.2466, 0.2288", "271.544, 341.657, 67.1199, 0.2288", "270.521, 341.291, 67.9935, 0.2542", "269.498, 340.925, 68.8668, 0.2796", "268.443, 340.576, 69.4803, 0.305", "267.358, 340.243, 69.8303, 0.2796", "266.273, 339.911, 70.1803, 0.2542", "265.187, 339.578, 70.5303, 0.2288", "264.103, 339.246, 70.8806, 0.2288", "263.017, 338.913, 71.2306, 0.2288", "261.931, 338.582, 71.5806, 0.2288", "261.063, 337.874, 72.0737, 0.2288", "260.207, 337.142, 72.5757, 0.2288", "259.352, 336.41, 73.0775, 0.2288", "258.496, 335.679, 73.5795, 0.2288", "257.589, 335.01, 73.8959, 0.2288", "256.594, 334.446, 73.8959, 0.2288", "256.273, 333.445, 74.7712, 0.2796", "256.019, 332.401, 75.7319, 0.3304" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "302.988, 351.578, 49.3251, 0.6356", "302.37, 350.984, 49.5323, 0.3814", "301.69, 350.108, 49.0272, 0.3814", "301.134, 349.207, 49.9125, 0.3814", "300.695, 348.57, 51.9439, 0.4322", "300.045, 348.028, 53.8227, 0.483", "299.398, 347.124, 54.4124, 0.4576", "298.401, 346.64, 55.053, 0.4322", "297.682, 345.793, 55.6604, 0.356", "297.2, 344.83, 56.1823, 0.356", "297.016, 343.712, 56.5793, 0.356", "296.831, 342.596, 56.9761, 0.4068", "296.647, 341.478, 57.3728, 0.4068", "296.463, 340.361, 57.7696, 0.4576", "295.61, 339.686, 57.8315, 0.4322", "294.657, 339.082, 58.0745, 0.4576", "293.771, 338.451, 58.9467, 0.3814", "292.885, 337.822, 59.8189, 0.356", "291.924, 337.241, 60.1264, 0.2796", "290.924, 336.687, 60.1264, 0.2796", "290.37, 335.838, 60.7869, 0.305", "290.077, 334.819, 61.8338, 0.3814", "289.785, 333.799, 62.8804, 0.4322", "289.469, 333.634, 63.1319, 0.4322", "288.492, 333.128, 63.9058, 0.4322", "287.516, 332.623, 64.6794, 0.4576", "286.54, 332.117, 65.4534, 0.5084", "285.563, 331.611, 66.227, 0.483", "284.904, 330.835, 67.1504, 0.3814", "284.474, 329.862, 68.1822, 0.2796", "284.044, 328.89, 69.214, 0.2288", "283.612, 327.917, 70.2458, 0.2288", "283.182, 326.945, 71.2779, 0.2288", "282.752, 325.971, 72.3097, 0.2288", "282.322, 324.999, 73.3415, 0.2288", "281.892, 324.027, 74.3733, 0.2288", "281.461, 323.054, 75.4051, 0.2288", "281.03, 322.082, 76.4369, 0.2542", "280.6, 321.109, 77.4687, 0.2796", "280.17, 320.137, 78.5005, 0.305", "279.605, 319.203, 79.2453, 0.2796", "278.938, 318.3, 79.7734, 0.2542", "278.27, 317.395, 80.3012, 0.2288", "277.603, 316.491, 80.8293, 0.2542", "276.936, 315.587, 81.3571, 0.2796", "276.269, 314.684, 81.8849, 0.3304", "275.602, 313.78, 82.413, 0.3304", "275.345, 312.739, 82.922, 0.3304", "275.346, 311.613, 83.4193, 0.2796", "275.347, 310.487, 83.9168, 0.2542", "275.347, 309.362, 84.4141, 0.2288", "275.348, 308.236, 84.9114, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "346.649, 396.625, 33.04, 0.6356", "346.828, 397.466, 33.04, 0.3814", "346.983, 398.598, 33.0397, 0.3814", "347.194, 399.723, 33.0383, 0.356", "347.307, 400.855, 33.028, 0.4068", "347.243, 401.996, 32.9585, 0.4322", "347.013, 403.093, 32.5828, 0.483", "346.666, 404.16, 32.0824, 0.483", "346.48, 405.276, 31.9379, 0.4576", "346.587, 406.405, 32.0328, 0.3814", "346.645, 407.51, 32.4439, 0.356", "346.456, 408.611, 32.5142, 0.356", "346.272, 409.729, 32.221, 0.356", "346.058, 410.82, 32.6626, 0.3304", "345.53, 411.64, 32.48, 0.305", "345.12, 412.655, 33.0047, 0.3304", "344.78, 413.745, 33.04, 0.4068", "344.687, 414.88, 33.04, 0.5338", "345.085, 415.888, 33.04, 0.6102", "345.613, 416.893, 33.2245, 0.6102", "345.717, 418.027, 33.32, 0.5592", "345.602, 419.16, 33.3959, 0.5338", "345.662, 420.295, 33.6, 0.5084", "345.826, 421.415, 33.6, 0.4322", "346.269, 422.46, 33.6, 0.3814", "346.632, 423.509, 33.6, 0.356" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "346.649, 396.625, 33.04, 0.6356", "347.479, 397.097, 33.0397, 0.4068", "348.607, 397.28, 33.0344, 0.4322", "349.539, 397.941, 33.0128, 0.4576", "350.345, 398.753, 32.9207, 0.4322", "351.107, 399.579, 32.4402, 0.4322", "352.109, 400.111, 32.151, 0.4322", "353.042, 400.704, 32.8199, 0.483", "353.776, 401.575, 33.0414, 0.483", "354.658, 402.302, 33.0476, 0.483", "355.551, 403.019, 33.075, 0.4576", "356.38, 403.801, 33.2142, 0.4322", "357.191, 404.569, 33.8164, 0.4068", "357.944, 405.415, 34.16, 0.356", "358.759, 406.218, 34.16, 0.3304", "359.598, 406.996, 34.16, 0.2796", "360.485, 407.715, 34.16, 0.2796", "361.025, 408.719, 34.16, 0.305", "361.502, 409.758, 34.1592, 0.3814", "361.927, 410.82, 34.155, 0.4322", "362.432, 411.846, 34.1303, 0.4576", "363.149, 412.729, 34.0348, 0.483", "363.829, 413.622, 33.5451, 0.5338", "364.32, 414.318, 32.76, 0.5848", "365.095, 415.128, 32.76, 0.5848", "365.405, 416.186, 32.76, 0.5338", "366.073, 417.1, 32.76, 0.5084", "367.07, 417.659, 32.76, 0.5338", "368.028, 418.26, 33.04, 0.5592", "368.918, 418.973, 33.04, 0.5592", "369.841, 419.632, 33.04, 0.5084", "370.643, 420.437, 33.04, 0.5084", "371.509, 421.153, 32.7832, 0.4576", "372.268, 421.995, 32.76, 0.4068", "373.329, 422.328, 32.76, 0.305", "374.421, 422.669, 32.76, 0.305", "375.494, 423.06, 32.76, 0.356", "376.565, 423.448, 32.76, 0.4322", "377.663, 423.632, 32.76, 0.4576", "378.778, 423.852, 32.76, 0.483" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "297.601, 346.632, 22.7374, 0.7626", "296.547, 346.026, 22.12, 0.661", "295.684, 345.327, 22.12, 0.661", "295.12, 344.338, 22.12, 0.6864", "294.611, 343.364, 21.56, 0.7118", "293.736, 342.746, 21.0, 0.6864", "293.093, 342.087, 20.72, 0.6102", "292.684, 341.042, 20.44, 0.5848", "291.647, 340.798, 19.9494, 0.5848", "290.504, 340.798, 19.88, 0.5848", "289.599, 340.4, 19.6162, 0.5592", "288.913, 339.52, 19.3676, 0.5084", "288.545, 338.451, 19.32, 0.5084", "288.402, 337.322, 19.2368, 0.5338", "287.758, 336.441, 18.8059, 0.5848", "286.829, 335.834, 18.76, 0.6102", "285.691, 335.764, 18.76, 0.6102", "284.57, 335.818, 18.76, 0.6356", "284.205, 334.786, 18.76, 0.6102", "283.513, 334.162, 18.2652, 0.5338", "282.448, 334.162, 17.36, 0.4068", "281.472, 333.792, 17.36, 0.3304", "280.525, 333.262, 17.64, 0.305", "279.59, 332.668, 17.3916, 0.2796", "279.262, 331.595, 17.36, 0.2542", "279.25, 330.574, 18.2879, 0.2796", "279.25, 329.472, 18.76, 0.3814" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "297.601, 346.632, 22.7374, 0.7626", "296.836, 347.101, 22.9118, 0.5592", "295.804, 347.592, 22.9485, 0.6864", "294.74, 348.009, 22.8816, 0.7372", "293.725, 348.473, 22.3236, 0.6864", "292.627, 348.745, 22.0338, 0.5848", "291.551, 348.845, 22.8222, 0.5338", "290.526, 349.211, 23.6452, 0.4576", "289.598, 349.644, 22.5646, 0.483", "288.75, 350.357, 21.8985, 0.5084", "287.868, 351.082, 21.9755, 0.6102", "286.789, 351.325, 22.6327, 0.6864", "285.682, 351.573, 22.9359, 0.6864", "284.547, 351.689, 23.0538, 0.6864", "283.449, 351.502, 23.567, 0.6356", "282.378, 351.77, 24.0204, 0.6356", "281.354, 352.272, 24.0848, 0.5848", "280.228, 352.303, 24.1097, 0.5084", "279.224, 351.781, 24.2371, 0.483", "278.189, 351.465, 24.9645, 0.5338", "277.175, 351.664, 25.9599, 0.6864", "276.322, 352.4, 26.2942, 0.788", "275.604, 353.289, 26.2136, 0.8136", "274.773, 354.043, 25.8902, 0.7626", "273.759, 354.507, 25.4528, 0.6356", "272.683, 354.659, 25.8628, 0.5084", "271.615, 354.321, 26.3147, 0.4068", "270.53, 354.367, 26.4118, 0.4322", "269.658, 355.052, 26.7644, 0.483", "269.009, 355.953, 27.4366, 0.5592", "268.276, 356.8, 27.7491, 0.5848", "267.366, 357.384, 27.1586, 0.6102", "266.333, 357.684, 26.364, 0.5592", "265.258, 358.04, 26.1568, 0.4576", "264.297, 358.633, 26.2046, 0.3304", "263.698, 359.477, 26.9346, 0.2542", "263.087, 359.742, 27.4397, 0.2542", "262.06, 359.294, 27.4386, 0.3304", "260.921, 359.406, 27.4308, 0.4322", "259.79, 359.561, 27.3801, 0.483", "258.65, 359.571, 27.1664, 0.483", "257.528, 359.635, 26.9178, 0.4576", "256.43, 359.861, 27.426, 0.4576", "255.345, 360.199, 27.6192, 0.4576", "254.37, 360.736, 28.1512, 0.4576", "253.499, 361.449, 28.5345, 0.483", "252.486, 361.959, 28.392, 0.5338", "251.404, 362.263, 27.9336, 0.6102", "250.316, 362.53, 27.4994, 0.661", "249.225, 362.847, 27.6777, 0.6102", "248.119, 363.096, 27.8743, 0.5338", "246.992, 363.159, 27.9894, 0.4576", "245.887, 362.97, 28.4707, 0.483", "244.847, 362.916, 28.0476, 0.4576", "243.853, 363.093, 26.7355, 0.4068", "242.807, 362.987, 25.9655, 0.305", "241.708, 363.034, 26.0403, 0.305", "240.684, 363.509, 25.9795, 0.3814", "239.685, 363.231, 26.6316, 0.5338", "238.897, 362.431, 26.6479, 0.6356", "238.0, 361.734, 26.3474, 0.661", "237.023, 361.14, 26.32, 0.5848", "236.023, 360.584, 26.3194, 0.4576", "235.035, 360.01, 26.3169, 0.3304", "234.017, 359.488, 26.3021, 0.2542", "233.101, 358.804, 26.2363, 0.2542", "232.065, 358.366, 25.7908, 0.305", "230.999, 358.542, 24.9376, 0.3814", "230.092, 359.126, 24.0139, 0.4322", "229.088, 359.621, 23.4237, 0.483", "228.066, 360.095, 22.96, 0.5084", "226.973, 360.43, 22.9589, 0.5338", "225.83, 360.379, 22.953, 0.5084", "224.712, 360.19, 22.911, 0.4576", "223.699, 360.708, 22.6736, 0.3814", "222.733, 361.178, 21.9192, 0.3304", "221.608, 360.982, 21.9696, 0.305", "220.475, 360.933, 22.3297, 0.305", "219.333, 360.939, 22.5257, 0.3304", "218.203, 360.981, 22.6702, 0.3814", "217.147, 361.221, 21.9909, 0.483", "216.283, 361.969, 21.8341, 0.5592", "215.343, 362.614, 21.8042, 0.6356", "214.301, 363.067, 21.6208, 0.6356", "213.227, 363.385, 21.1812, 0.5848", "212.172, 363.825, 21.3226, 0.483", "211.106, 364.191, 21.1464, 0.4068", "210.068, 364.522, 20.5733, 0.4322", "209.262, 365.287, 20.1163, 0.5338", "208.676, 366.238, 19.616, 0.6864", "207.993, 367.126, 19.6414, 0.7626", "207.069, 367.796, 19.8078, 0.7626", "206.154, 368.452, 20.2787, 0.6356", "205.293, 369.154, 20.8975, 0.5338", "204.441, 369.841, 21.546, 0.4576", "203.484, 370.282, 21.6082, 0.483", "202.542, 370.784, 20.8365, 0.483", "201.852, 371.159, 20.9728, 0.4322", "201.17, 372.045, 20.3748, 0.356", "200.184, 372.485, 20.195, 0.305", "199.093, 372.753, 20.195, 0.356", "199.095, 373.897, 20.195, 0.3814", "198.412, 374.544, 20.195, 0.4576", "197.342, 374.746, 20.7374, 0.4576", "196.292, 374.79, 21.8375, 0.483", "195.264, 374.376, 22.031, 0.5084", "194.241, 373.864, 22.031, 0.5592" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "271.134, 372.986, 42.1431, 0.6864", "270.939, 373.996, 43.685, 0.2796", "270.674, 374.983, 44.9294, 0.305", "270.343, 375.994, 45.9578, 0.3304", "270.85, 376.651, 46.6802, 0.3814", "271.888, 377.081, 47.2086, 0.3814", "272.923, 377.514, 47.7338, 0.3814", "273.606, 378.432, 47.7338, 0.4322", "273.969, 379.443, 48.1104, 0.4322", "274.02, 380.545, 48.8536, 0.4322", "274.07, 381.646, 49.597, 0.356", "274.498, 382.546, 50.1925, 0.356", "275.448, 383.163, 50.5826, 0.356", "276.397, 383.781, 50.9729, 0.356", "277.347, 384.399, 51.3629, 0.356", "277.865, 385.396, 51.4058, 0.4068", "278.331, 386.442, 51.4058, 0.483", "278.798, 387.45, 51.9694, 0.483", "279.266, 388.446, 52.7386, 0.3814", "279.734, 389.442, 53.508, 0.305", "280.63, 390.049, 53.7006, 0.2796", "281.005, 391.11, 54.0994, 0.3304", "281.367, 392.183, 54.507, 0.3304", "281.727, 393.255, 54.9144, 0.356", "282.089, 394.328, 55.3218, 0.3304", "282.435, 395.404, 55.7424, 0.3304", "282.768, 396.484, 56.1778, 0.2796", "283.1, 397.564, 56.6132, 0.2542", "283.433, 398.644, 57.0486, 0.2288", "283.719, 399.734, 57.4921, 0.2288", "283.871, 400.852, 57.9597, 0.2288", "284.023, 401.97, 58.4273, 0.2288", "284.202, 403.087, 58.7496, 0.2542", "284.437, 404.207, 58.7496, 0.2796", "284.672, 405.326, 58.7496, 0.305", "284.676, 406.417, 59.4527, 0.2796", "284.619, 407.501, 60.3406, 0.2542", "284.667, 408.545, 61.327, 0.2288", "285.112, 409.439, 62.692, 0.2288", "285.688, 410.301, 63.817, 0.2288", "286.379, 411.133, 64.7256, 0.2796", "287.07, 411.966, 65.6342, 0.3304" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "271.134, 372.986, 42.1431, 0.6864", "269.954, 372.229, 42.2122, 0.3814", "268.871, 371.976, 42.7946, 0.3814", "267.765, 371.901, 43.4711, 0.3304", "266.645, 371.822, 43.7777, 0.3814", "265.609, 371.44, 43.5324, 0.4068", "264.82, 370.651, 43.6204, 0.483", "264.063, 369.835, 44.0723, 0.483", "263.091, 369.273, 44.2347, 0.483", "262.005, 368.924, 44.207, 0.4576", "260.945, 368.503, 44.0269, 0.4576", "259.85, 368.258, 43.8393, 0.4322", "258.727, 368.228, 44.2708, 0.4068", "257.637, 368.092, 44.9924, 0.3814", "256.567, 367.746, 45.3508, 0.4322", "255.48, 367.421, 45.36, 0.483", "254.342, 367.322, 45.36, 0.5338", "253.206, 367.221, 45.36, 0.483", "252.094, 366.961, 45.36, 0.4322", "250.999, 366.628, 45.3611, 0.3814", "249.89, 366.363, 45.3664, 0.3814", "248.757, 366.327, 45.4068, 0.356", "247.644, 366.476, 45.7968, 0.3304", "246.666, 366.909, 46.4094, 0.305", "245.792, 367.612, 46.949, 0.305", "244.799, 368.111, 47.3808, 0.2796", "243.693, 368.383, 47.4037, 0.2542", "242.694, 368.863, 47.483, 0.2288", "241.762, 369.271, 47.4312, 0.2542", "240.717, 369.707, 47.8341, 0.305", "239.663, 370.121, 48.193, 0.356", "238.545, 370.356, 48.193, 0.356", "237.759, 371.085, 48.193, 0.305", "237.123, 372.037, 48.193, 0.2542", "236.214, 372.565, 48.4193, 0.2288", "235.102, 372.78, 48.8135, 0.2288", "233.99, 372.997, 49.2075, 0.2288", "232.883, 373.229, 49.5698, 0.2288", "231.82, 373.653, 49.5698, 0.2288", "230.758, 374.079, 49.5698, 0.2288", "229.645, 374.113, 49.7314, 0.2288", "228.513, 373.987, 49.9593, 0.2288", "227.379, 373.863, 50.1875, 0.2288", "226.245, 373.737, 50.4154, 0.2288", "225.193, 374.056, 50.4879, 0.2288", "224.177, 374.581, 50.4879, 0.2288", "223.133, 374.922, 50.6372, 0.2288", "222.016, 374.794, 51.1647, 0.2288", "220.901, 374.666, 51.6919, 0.2288", "219.786, 374.443, 51.8647, 0.2288", "218.674, 374.174, 51.8647, 0.2288", "217.564, 374.135, 52.0694, 0.2288", "216.454, 374.349, 52.4997, 0.2288", "215.344, 374.564, 52.9301, 0.2542", "214.235, 374.778, 53.3602, 0.2796", "213.119, 374.951, 53.7684, 0.305", "211.982, 374.968, 54.0921, 0.305", "210.846, 374.985, 54.4158, 0.356", "209.71, 375.002, 54.7394, 0.4068", "208.574, 375.019, 55.0631, 0.4322", "207.525, 375.465, 55.0777, 0.356", "206.481, 375.932, 55.0777, 0.2796", "205.436, 376.399, 55.0777, 0.2288", "204.404, 376.886, 55.1272, 0.2288", "203.444, 377.494, 55.4655, 0.2288", "202.485, 378.101, 55.8034, 0.2288", "201.526, 378.709, 56.1414, 0.2542", "200.566, 379.316, 56.4796, 0.3304", "199.606, 379.923, 56.8176, 0.4068", "198.568, 380.383, 56.9136, 0.4322", "197.496, 380.786, 56.9136, 0.3814", "196.425, 381.188, 56.9136, 0.3814", "195.324, 381.288, 57.1099, 0.4068", "194.2, 381.138, 57.4686, 0.4322", "193.075, 380.99, 57.8276, 0.3814", "191.951, 380.84, 58.1862, 0.3814", "190.826, 380.69, 58.5449, 0.4322", "189.755, 380.366, 58.7496, 0.483", "188.755, 379.809, 58.7496, 0.4322", "187.757, 379.252, 58.7496, 0.3304", "186.757, 378.695, 58.7496, 0.2542", "185.758, 378.138, 58.7496, 0.2542" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "288.286, 355.853, 32.9742, 0.7372", "287.654, 355.617, 32.1404, 0.2288", "286.587, 355.326, 31.92, 0.2542", "285.489, 355.129, 31.92, 0.305", "284.643, 354.365, 31.9278, 0.4322", "283.578, 353.965, 32.2, 0.5592", "282.453, 353.763, 32.2, 0.6864", "281.418, 353.32, 32.4089, 0.6864", "280.365, 352.9, 32.48, 0.661", "279.377, 352.369, 32.48, 0.6102", "278.463, 351.73, 32.48, 0.6356", "277.562, 351.058, 32.5304, 0.6356", "276.626, 350.638, 32.79, 0.661", "275.627, 350.181, 32.0502, 0.6102", "274.519, 349.968, 31.7694, 0.5848", "273.397, 349.942, 32.2468, 0.4576", "272.263, 349.895, 32.0328, 0.4322", "271.168, 349.583, 31.8811, 0.4322", "270.309, 348.846, 31.6977, 0.5592", "269.68, 347.948, 30.9397, 0.6102", "268.933, 347.086, 30.8988, 0.6102", "268.116, 346.308, 31.3541, 0.5338", "267.172, 345.703, 31.9018, 0.483", "266.151, 345.191, 31.92, 0.483", "265.095, 344.75, 31.92, 0.483", "264.184, 344.06, 31.92, 0.483", "263.406, 343.222, 31.9256, 0.4576", "262.474, 342.563, 31.9488, 0.483", "261.466, 342.025, 32.0827, 0.5338", "260.497, 341.473, 32.6847, 0.5592", "259.604, 340.768, 32.9577, 0.5848", "258.692, 340.086, 32.7396, 0.5592", "257.576, 339.881, 32.5318, 0.5592", "256.452, 339.855, 33.0327, 0.5084", "255.321, 339.678, 33.04, 0.5084", "254.197, 339.471, 33.04, 0.5338" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "288.286, 355.853, 32.9742, 0.7372", "287.544, 354.978, 32.7779, 0.6356", "287.071, 353.972, 32.2134, 0.6356", "286.519, 352.988, 32.4114, 0.5848", "285.948, 352.021, 32.8964, 0.6102", "285.593, 350.961, 33.0439, 0.6356", "285.493, 349.822, 33.0663, 0.6864", "285.304, 348.702, 33.1926, 0.661", "285.104, 347.611, 33.7148, 0.6356", "285.06, 346.49, 34.1398, 0.6102", "284.91, 345.362, 34.3132, 0.6102", "284.807, 344.242, 34.7382, 0.5848", "284.973, 343.181, 34.2684, 0.5592", "285.076, 342.099, 33.4421, 0.483", "285.072, 341.005, 33.8125, 0.4068", "285.017, 339.973, 34.988, 0.356", "284.741, 338.913, 35.5664, 0.4068", "284.314, 337.963, 34.627, 0.5592", "283.418, 337.344, 34.2006, 0.661", "282.372, 336.883, 34.16, 0.6864", "281.51, 336.15, 34.1594, 0.6102", "281.034, 335.126, 34.1575, 0.5338", "280.937, 333.993, 34.1429, 0.483", "280.741, 332.868, 34.06, 0.4322", "280.416, 331.775, 33.9016, 0.4576", "279.997, 330.716, 34.1351, 0.5084", "279.42, 329.73, 34.193, 0.6102", "278.614, 328.925, 34.2994, 0.661", "277.68, 328.301, 34.7864, 0.661", "276.676, 327.763, 34.638, 0.5848", "275.702, 327.19, 35.028, 0.483", "274.827, 326.461, 35.2682, 0.3814", "273.938, 325.743, 35.2856, 0.3814", "272.985, 325.109, 35.3077, 0.4068", "271.997, 324.533, 35.4337, 0.483", "271.021, 324.071, 36.3314, 0.5084", "270.445, 323.352, 37.9784, 0.5592", "269.499, 322.775, 38.6543, 0.5592", "268.604, 322.062, 38.7024, 0.5338", "267.745, 321.312, 38.8993, 0.4322", "266.775, 320.787, 39.6337, 0.3814", "265.687, 320.449, 39.76, 0.3304", "264.67, 320.86, 39.76, 0.3304", "263.854, 321.104, 39.991, 0.2796", "262.781, 321.002, 40.8862, 0.2542", "261.768, 320.724, 41.9028, 0.2542", "260.651, 320.492, 42.0888, 0.2796", "259.551, 320.268, 42.443, 0.3304", "258.505, 319.984, 43.108, 0.3304", "257.465, 320.257, 43.6456, 0.3304", "256.575, 320.708, 44.7132, 0.2796", "255.709, 320.329, 45.8592, 0.305", "254.884, 319.677, 46.6735, 0.3304", "253.938, 319.875, 46.9286, 0.4068", "253.141, 320.69, 46.7748, 0.3814", "252.395, 321.497, 47.2592, 0.356", "251.744, 322.311, 48.3952, 0.2796", "251.092, 322.145, 49.656, 0.2542", "250.105, 321.805, 50.029, 0.2288", "249.383, 322.455, 50.029, 0.2288", "248.436, 323.003, 50.6036, 0.2288", "247.403, 323.063, 50.9468, 0.2288", "246.335, 322.653, 50.9468, 0.2288", "245.3, 322.689, 51.1938, 0.2288", "244.298, 323.202, 51.704, 0.2288", "243.297, 323.715, 52.2141, 0.2288", "242.189, 323.727, 52.3239, 0.2288", "241.059, 323.595, 52.3614, 0.2288", "240.222, 323.237, 54.0562, 0.2288", "239.384, 322.88, 55.7514, 0.2288", "238.396, 322.925, 56.4547, 0.2288", "237.3, 323.254, 56.4547, 0.2542", "236.205, 323.585, 56.4547, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "317.865, 348.515, 53.2417, 0.4576", "318.5, 347.582, 55.1292, 0.305", "318.802, 347.527, 57.2043, 0.2288", "318.957, 347.929, 59.7976, 0.2288", "319.113, 348.331, 62.391, 0.2288", "319.269, 348.733, 64.9844, 0.2288", "319.424, 349.136, 67.578, 0.2288", "319.58, 349.538, 70.1714, 0.2542", "320.021, 349.792, 72.6009, 0.305", "320.632, 349.955, 74.933, 0.356", "321.08, 350.118, 77.3808, 0.356", "321.066, 350.28, 80.1525, 0.305", "321.052, 350.441, 82.9242, 0.305", "320.796, 350.396, 85.2426, 0.3304", "319.928, 349.824, 86.4128, 0.3814", "319.024, 349.259, 87.3692, 0.3304", "318.042, 348.708, 87.8749, 0.2796", "317.061, 348.158, 88.3809, 0.2288", "316.079, 347.608, 88.8868, 0.2288", "315.015, 347.41, 89.5588, 0.2288", "313.913, 347.368, 90.3048, 0.2288", "312.811, 347.326, 91.0504, 0.2288", "311.709, 347.284, 91.796, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "317.865, 348.515, 53.2417, 0.4576", "317.555, 348.736, 53.6099, 0.2288", "316.548, 349.132, 54.5216, 0.2288", "315.542, 349.527, 55.4336, 0.2542", "314.535, 349.924, 56.3455, 0.305", "313.506, 349.538, 56.4547, 0.3814", "312.473, 349.046, 56.4547, 0.4068", "311.44, 348.553, 56.4547, 0.3814", "310.606, 347.802, 56.4547, 0.3304", "309.737, 347.108, 56.6076, 0.3304", "308.702, 346.642, 56.9601, 0.356", "307.666, 346.177, 57.3124, 0.356", "306.631, 345.712, 57.6649, 0.305", "305.597, 345.247, 58.0174, 0.2542", "304.54, 344.847, 58.2904, 0.2288", "303.408, 344.673, 58.2904, 0.2542", "302.278, 344.501, 58.2904, 0.3304", "301.172, 344.516, 58.7913, 0.4322", "300.08, 344.636, 59.5742, 0.5084", "298.978, 344.746, 60.2473, 0.5338", "297.848, 344.826, 60.6575, 0.5338", "296.72, 344.905, 61.0677, 0.5084", "295.591, 344.985, 61.4779, 0.4576", "294.462, 345.065, 61.8881, 0.4068", "293.324, 345.016, 61.9623, 0.3814", "292.183, 344.933, 61.9808, 0.3814", "291.051, 344.796, 62.2132, 0.356", "289.919, 344.66, 62.4453, 0.3304", "288.787, 344.524, 62.6777, 0.2796", "287.655, 344.388, 62.9101, 0.2796", "286.524, 344.251, 63.1425, 0.2796", "285.391, 344.122, 63.3844, 0.305", "284.258, 344.032, 63.6798, 0.2796", "283.123, 343.943, 63.9752, 0.2542", "281.989, 343.852, 64.2706, 0.2796", "280.855, 343.763, 64.566, 0.3304", "279.785, 343.951, 65.0482, 0.3814", "278.781, 344.426, 65.7233, 0.3304", "277.778, 344.901, 66.3984, 0.2796", "276.775, 345.376, 67.0734, 0.2288", "275.772, 345.852, 67.7485, 0.2288", "274.761, 346.309, 68.388, 0.2288", "273.628, 346.461, 68.388, 0.2542", "272.499, 346.432, 68.388, 0.305", "271.507, 345.886, 68.469, 0.4068", "270.405, 345.653, 68.9556, 0.4576", "269.302, 345.419, 69.4425, 0.4576", "268.201, 345.186, 69.9292, 0.356", "267.098, 344.953, 70.4161, 0.2796", "265.996, 344.719, 70.903, 0.2288", "264.948, 344.851, 71.5002, 0.2542", "263.952, 345.334, 72.2039, 0.305", "262.955, 345.818, 72.9078, 0.356", "261.959, 346.3, 73.6114, 0.356", "260.894, 346.563, 74.247, 0.3304", "259.781, 346.678, 74.8364, 0.305", "258.669, 346.792, 75.4261, 0.305", "257.556, 346.905, 76.0155, 0.2796", "256.65, 347.115, 75.9382, 0.2542", "255.531, 347.29, 76.3328, 0.2288", "254.411, 347.469, 76.6497, 0.2288", "253.283, 347.665, 76.6497, 0.2288", "252.181, 347.609, 76.6497, 0.2288", "251.114, 347.197, 76.6497, 0.2288", "250.046, 346.784, 76.6497, 0.2288", "248.936, 346.791, 76.9849, 0.2288", "247.813, 346.918, 77.4164, 0.2288", "246.69, 347.045, 77.8478, 0.2288", "245.564, 347.214, 78.0268, 0.2288", "244.437, 347.412, 78.0268, 0.2288", "243.333, 347.274, 78.4622, 0.2288", "242.234, 347.048, 79.0093, 0.2288", "241.136, 346.822, 79.5564, 0.2288", "240.046, 346.744, 80.2589, 0.2288", "238.968, 346.853, 81.1588, 0.2288", "237.89, 346.96, 82.0585, 0.2288", "236.811, 347.069, 82.9581, 0.2288", "235.832, 347.376, 83.9541, 0.2288", "235.027, 348.033, 85.1214, 0.2288", "234.221, 348.691, 86.2884, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "317.865, 348.515, 53.2417, 0.4576", "317.976, 349.376, 53.7242, 0.2796", "318.086, 350.488, 54.3183, 0.3304", "318.196, 351.602, 54.9125, 0.3814", "318.047, 352.696, 55.5181, 0.3304", "317.797, 353.784, 56.1285, 0.2796", "317.547, 354.872, 56.7386, 0.2288", "317.298, 355.961, 57.3488, 0.2288", "317.06, 357.057, 57.8315, 0.2288", "316.864, 358.184, 57.8315, 0.2288", "316.669, 359.312, 57.8315, 0.2288", "316.474, 360.439, 57.8315, 0.2288", "316.409, 361.564, 57.6055, 0.2796", "316.498, 362.687, 57.1108, 0.356", "316.587, 363.809, 56.6163, 0.483", "316.676, 364.931, 56.1215, 0.5084", "316.64, 365.874, 56.359, 0.5084", "316.415, 366.974, 56.915, 0.4068", "316.192, 368.072, 57.4714, 0.356", "315.848, 369.133, 57.8315, 0.3304", "315.281, 370.128, 57.8315, 0.3814", "314.827, 371.129, 57.9751, 0.4576", "315.038, 372.177, 58.9652, 0.4576", "315.114, 373.245, 59.6674, 0.4322", "314.855, 374.359, 59.6674, 0.4068", "314.597, 375.473, 59.6674, 0.4322", "314.45, 376.6, 59.8419, 0.4322", "314.384, 377.736, 60.1378, 0.356", "314.316, 378.872, 60.4338, 0.2796", "314.249, 380.007, 60.7298, 0.2288", "314.182, 381.143, 61.0257, 0.2796", "314.434, 382.255, 61.0445, 0.3304", "314.693, 383.368, 61.0445, 0.3814", "314.711, 384.512, 61.0445, 0.3304", "314.728, 385.656, 61.0445, 0.2796", "314.746, 386.8, 61.0445, 0.2288", "314.434, 387.835, 61.7602, 0.2542", "314.037, 388.843, 62.662, 0.2796", "313.72, 389.878, 63.4785, 0.305", "313.647, 390.996, 64.0371, 0.2796", "313.574, 392.115, 64.5957, 0.2542", "313.501, 393.234, 65.1543, 0.2288", "313.445, 394.35, 65.7325, 0.2288", "313.495, 395.458, 66.43, 0.2288", "313.545, 396.564, 67.1278, 0.2288", "313.596, 397.672, 67.8252, 0.2288", "313.549, 398.765, 68.458, 0.2288", "313.096, 399.805, 68.8198, 0.2288", "312.644, 400.846, 69.1818, 0.2288", "312.192, 401.886, 69.5436, 0.2288", "311.74, 402.927, 69.9056, 0.2288", "311.288, 403.967, 70.2674, 0.2542", "310.836, 405.008, 70.6292, 0.2796", "310.384, 406.048, 70.9912, 0.305", "310.054, 407.126, 71.3978, 0.2796", "309.812, 408.229, 71.836, 0.2542", "309.57, 409.332, 72.2744, 0.2288", "309.327, 410.436, 72.7126, 0.2288", "309.085, 411.54, 73.1511, 0.2288", "308.843, 412.644, 73.5893, 0.2542", "308.601, 413.747, 74.0278, 0.305", "308.26, 414.809, 74.4666, 0.356", "307.63, 415.747, 74.907, 0.356", "306.999, 416.684, 75.3474, 0.305", "306.37, 417.622, 75.7876, 0.2542", "305.74, 418.56, 76.228, 0.2288", "305.109, 419.497, 76.6682, 0.2288", "304.479, 420.435, 77.1086, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "317.865, 348.515, 53.2417, 0.4576", "318.025, 349.091, 53.79, 0.2288", "318.406, 350.061, 54.7467, 0.2288", "319.292, 350.705, 55.5559, 0.2542", "320.178, 351.349, 56.3654, 0.2796", "321.064, 351.993, 57.1746, 0.305", "321.869, 352.771, 57.6761, 0.2796", "322.649, 353.592, 58.0779, 0.2542", "323.428, 354.412, 58.4797, 0.2288", "324.208, 355.234, 58.8815, 0.2542", "324.987, 356.054, 59.2833, 0.3304", "325.775, 356.864, 59.703, 0.4576", "326.702, 357.447, 60.5088, 0.5338", "327.629, 358.031, 61.315, 0.5084", "327.766, 359.035, 61.556, 0.3814", "327.505, 360.077, 62.5145, 0.2796", "327.351, 361.118, 63.3394, 0.2288", "327.849, 362.148, 63.3394, 0.2288", "328.401, 363.137, 63.5443, 0.2288", "329.05, 364.049, 64.1127, 0.2288", "329.698, 364.964, 64.6811, 0.2288", "330.324, 365.887, 65.1753, 0.2288", "330.428, 367.026, 65.1753, 0.2796", "330.817, 368.069, 65.1753, 0.3304", "331.455, 368.983, 65.4013, 0.4068", "332.243, 369.63, 66.6725, 0.4068", "332.926, 370.409, 67.6662, 0.4322", "333.432, 371.412, 68.1926, 0.4322", "333.938, 372.415, 68.719, 0.4322", "333.976, 373.506, 69.2345, 0.3814", "333.863, 374.626, 69.746, 0.3304", "333.749, 375.745, 70.2579, 0.305", "333.754, 376.723, 71.0746, 0.305", "334.267, 377.153, 73.0948, 0.2796", "334.471, 378.245, 73.7598, 0.2796", "334.676, 379.337, 74.4251, 0.2796", "335.125, 380.251, 75.318, 0.305", "335.915, 380.912, 76.5302, 0.2796", "336.681, 381.642, 77.5631, 0.2542", "337.426, 382.435, 78.4322, 0.2288", "338.17, 383.227, 79.3013, 0.2288", "338.865, 384.084, 80.0372, 0.2288", "339.554, 384.95, 80.7554, 0.2288", "340.243, 385.815, 81.4736, 0.2288", "341.048, 386.571, 82.1458, 0.2288", "341.908, 387.277, 82.7974, 0.2288", "342.768, 387.983, 83.449, 0.2288", "343.652, 388.704, 83.5344, 0.2288", "344.582, 389.347, 83.7239, 0.2288", "345.584, 389.862, 84.2206, 0.2542", "346.585, 390.376, 84.7171, 0.2796", "347.586, 390.891, 85.2138, 0.305", "348.381, 391.642, 85.8424, 0.2796", "349.082, 392.501, 86.5323, 0.2542", "349.783, 393.36, 87.222, 0.2288", "350.574, 394.132, 87.8041, 0.2288", "351.526, 394.745, 88.1927, 0.2288", "352.479, 395.358, 88.5811, 0.2288", "353.432, 395.972, 88.9697, 0.2288", "354.384, 396.585, 89.3584, 0.2288", "355.337, 397.198, 89.747, 0.2288", "356.089, 397.988, 90.1796, 0.2288", "356.597, 398.993, 90.666, 0.2288", "357.107, 399.999, 91.1523, 0.2288", "357.614, 401.004, 91.639, 0.2288", "358.124, 402.01, 92.1253, 0.2288", "358.202, 402.905, 93.6096, 0.2288", "358.125, 403.762, 95.4568, 0.2796", "358.048, 404.618, 97.3039, 0.3304" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "334.506, 323.17, 35.0098, 0.8898", "334.895, 322.472, 35.1585, 0.7626", "335.103, 321.402, 34.4806, 0.7626", "335.628, 320.409, 34.1869, 0.788", "336.253, 319.452, 34.16, 0.839", "336.977, 318.567, 34.1606, 0.9406", "337.639, 317.636, 34.1625, 1.0168", "338.409, 316.792, 34.1706, 1.0424", "339.251, 316.016, 34.2056, 1.0168", "340.203, 315.391, 34.3809, 0.9914", "341.143, 314.809, 35.072, 0.9152", "341.954, 314.026, 35.4693, 0.788", "342.205, 312.955, 36.0363, 0.661", "341.913, 311.937, 35.0846, 0.6864", "341.473, 310.936, 34.2703, 0.788", "341.12, 309.85, 34.1631, 0.8898", "340.794, 308.753, 34.1631, 0.9152", "340.491, 307.65, 34.1807, 0.9406", "340.482, 306.509, 34.2964, 0.966", "340.648, 305.411, 34.9706, 0.9152", "341.013, 304.335, 35.2794, 0.788", "341.443, 303.274, 35.28, 0.6102" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "334.506, 323.17, 35.0098, 0.8898", "335.284, 322.989, 34.3815, 0.305", "336.418, 323.051, 34.1776, 0.3304", "337.48, 323.467, 34.207, 0.356", "338.384, 324.162, 34.3874, 0.4322", "339.104, 324.999, 35.0974, 0.5084", "340.203, 325.285, 35.0669, 0.6356", "341.268, 325.555, 34.2972, 0.7118", "342.285, 326.056, 33.9175, 0.7626" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "325.82, 323.874, 31.9138, 0.6102", "325.165, 324.562, 30.3828, 0.5592", "325.461, 324.933, 28.5578, 0.4322", "325.73, 325.794, 27.9978, 0.3814", "325.148, 326.699, 27.2241, 0.4322", "324.594, 327.579, 26.0588, 0.4576", "323.945, 328.468, 25.5912, 0.4576", "323.466, 329.433, 24.6523, 0.3814", "323.021, 330.423, 23.8669, 0.3304", "322.268, 330.955, 23.8669, 0.305", "321.365, 330.522, 23.2677, 0.305", "320.623, 329.755, 22.2594, 0.3304", "319.575, 329.483, 22.031, 0.356", "318.437, 329.368, 22.031, 0.3814", "318.178, 329.995, 20.2717, 0.356", "318.117, 330.87, 18.8182, 0.3304", "318.062, 332.007, 18.8182, 0.2796", "317.601, 333.028, 18.8182, 0.2542", "316.96, 333.976, 18.8182, 0.2542", "316.148, 334.651, 18.8182, 0.2796", "315.031, 334.499, 18.8182, 0.305", "314.155, 335.102, 19.4981, 0.3304", "313.394, 335.806, 20.3361, 0.356", "313.615, 336.539, 22.031, 0.3814", "312.879, 337.072, 22.031, 0.3814", "312.588, 338.103, 22.269, 0.3814", "312.21, 338.927, 23.1456, 0.3814", "311.254, 339.127, 21.6863, 0.3304", "311.401, 340.174, 21.572, 0.3304", "311.025, 341.238, 21.1131, 0.3814" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "325.82, 323.874, 31.9138, 0.6102", "324.827, 323.576, 31.8805, 0.7118", "323.947, 322.862, 31.7246, 0.7118", "323.333, 321.959, 30.931, 0.6356", "323.617, 320.877, 30.7045, 0.5848", "324.436, 320.114, 30.1851, 0.5848" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "254.197, 339.471, 33.04, 0.5338", "253.596, 339.524, 32.5875, 0.356", "252.452, 339.536, 32.5875, 0.3304", "251.308, 339.547, 32.5875, 0.305", "250.164, 339.559, 32.5875, 0.305", "249.02, 339.571, 32.608, 0.2796", "247.888, 339.596, 33.0011, 0.2542", "246.756, 339.62, 33.3942, 0.2288", "245.737, 340.057, 33.5056, 0.2288", "244.763, 340.658, 33.5056, 0.2288", "243.79, 341.259, 33.5056, 0.2288", "242.767, 341.013, 33.5056, 0.2288", "241.732, 340.526, 33.5056, 0.2542", "240.697, 340.04, 33.5056, 0.2796", "239.599, 339.743, 33.6134, 0.305", "238.482, 339.506, 33.7568, 0.305", "237.363, 339.269, 33.8999, 0.305", "236.245, 339.034, 34.0432, 0.3304", "235.128, 338.797, 34.1863, 0.3304", "234.01, 338.56, 34.3297, 0.3304", "232.954, 338.18, 34.4235, 0.2796", "232.015, 337.528, 34.4235, 0.2542", "231.075, 336.875, 34.4235, 0.2288", "230.135, 336.222, 34.4235, 0.2288", "229.097, 335.818, 34.4658, 0.2288", "227.967, 335.647, 34.5478, 0.2288", "226.836, 335.476, 34.6296, 0.2542", "225.706, 335.305, 34.7116, 0.2796", "224.575, 335.135, 34.7936, 0.3304", "223.444, 334.963, 34.8757, 0.3304", "222.362, 334.598, 34.8824, 0.3304", "221.284, 334.214, 34.8824, 0.2796", "220.206, 333.831, 34.8824, 0.2542", "219.082, 333.749, 34.8824, 0.2288", "217.939, 333.788, 34.8824, 0.2796", "216.795, 333.828, 34.8824, 0.356", "215.652, 333.867, 34.8824, 0.483", "214.511, 333.919, 34.7931, 0.5592", "213.375, 333.996, 34.5106, 0.6102", "212.24, 334.073, 34.228, 0.6102", "211.105, 334.151, 33.9455, 0.5592", "209.969, 334.228, 33.663, 0.5338", "208.844, 334.393, 33.5056, 0.5084", "207.734, 334.672, 33.5056, 0.5338", "206.638, 334.536, 33.2301, 0.483", "205.548, 334.23, 32.839, 0.4068", "204.458, 333.923, 32.4481, 0.356", "203.38, 333.769, 32.1286, 0.3814", "202.364, 334.294, 32.1286, 0.4068", "201.456, 334.956, 32.1286, 0.3814", "200.708, 335.822, 32.1286, 0.305", "199.961, 336.688, 32.1286, 0.2542" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "254.197, 339.471, 33.04, 0.5338", "253.386, 338.536, 33.0467, 0.2796", "252.568, 337.737, 33.0467, 0.305", "251.63, 337.183, 33.0467, 0.2796", "250.496, 337.033, 33.0467, 0.2542", "249.445, 336.727, 33.1478, 0.2288", "248.669, 335.906, 33.5835, 0.2288", "247.895, 335.083, 34.0192, 0.2288", "247.15, 334.241, 34.4235, 0.2288", "246.807, 333.15, 34.4235, 0.2288", "246.462, 332.06, 34.4235, 0.2288", "245.362, 331.871, 34.4235, 0.2288", "244.31, 331.626, 35.065, 0.2542", "243.335, 331.296, 36.279, 0.2796", "242.36, 331.56, 36.7184, 0.305", "241.331, 331.735, 36.7184, 0.2796", "240.235, 331.406, 36.7184, 0.2796", "239.139, 331.077, 36.7184, 0.2796", "238.045, 330.79, 36.7545, 0.3304", "236.962, 331.086, 37.2935, 0.3304", "235.879, 331.383, 37.8322, 0.3304", "234.828, 331.285, 38.3586, 0.2796", "233.807, 330.814, 38.8724, 0.2542", "232.786, 330.343, 39.3865, 0.2542", "231.765, 329.871, 39.9006, 0.2796", "230.747, 329.392, 40.3903, 0.305", "229.788, 328.767, 40.3903, 0.2796", "228.83, 328.144, 40.3903, 0.2542", "227.883, 327.513, 40.4914, 0.2288", "227.013, 326.846, 41.2927, 0.2288", "226.143, 326.18, 42.0938, 0.2288", "225.211, 325.611, 42.6852, 0.2288", "224.105, 325.317, 42.6852, 0.2288", "223.0, 325.024, 42.6852, 0.2288", "221.894, 324.731, 42.6852, 0.2288", "220.846, 324.329, 42.9926, 0.2288", "219.86, 323.81, 43.6296, 0.2288", "218.874, 323.292, 44.2663, 0.2288", "217.889, 322.773, 44.9033, 0.2288", "216.899, 322.252, 45.3824, 0.2288", "215.896, 321.723, 45.0265, 0.2288", "214.892, 321.194, 44.6706, 0.2288", "213.889, 320.664, 44.3148, 0.2288", "212.885, 320.135, 43.9589, 0.2288", "211.881, 319.605, 43.603, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "341.443, 303.274, 35.28, 0.6102", "341.044, 302.329, 36.8309, 0.4322", "340.933, 301.348, 37.6127, 0.3814", "341.07, 300.461, 38.5692, 0.356", "341.134, 299.329, 38.64, 0.4322", "340.48, 298.463, 38.8192, 0.483", "340.111, 297.422, 38.92, 0.5084", "339.698, 296.557, 39.7998, 0.4322", "338.611, 296.33, 40.1139, 0.3304", "337.721, 295.678, 40.32, 0.2542", "337.594, 294.633, 41.0838, 0.2288", "337.475, 293.502, 41.16, 0.2288", "337.366, 292.378, 41.2012, 0.2542", "336.81, 292.063, 43.02, 0.2796", "335.734, 292.063, 43.8452, 0.305", "335.421, 291.137, 43.96, 0.305", "335.796, 290.073, 43.96, 0.305", "336.376, 289.088, 43.96, 0.305", "336.565, 288.095, 44.8745, 0.2796", "336.565, 287.062, 45.92, 0.305", "336.565, 285.919, 45.9796, 0.3304", "336.309, 285.051, 47.04, 0.4322", "335.306, 284.627, 47.04, 0.483" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "341.443, 303.274, 35.28, 0.6102", "341.982, 301.815, 35.28, 0.7626", "342.358, 300.735, 35.2789, 0.7626", "342.676, 299.638, 35.2727, 0.7118", "342.803, 298.502, 35.233, 0.6864", "343.062, 297.394, 35.0193, 0.661", "343.499, 296.369, 34.545, 0.6864", "343.773, 295.288, 34.9689, 0.7118", "344.146, 294.24, 34.58, 0.788", "344.649, 293.228, 34.9182, 0.7626", "345.018, 292.159, 35.2677, 0.7118", "345.422, 291.09, 35.1977, 0.661", "345.909, 290.069, 34.7962, 0.6864", "346.401, 289.06, 34.2546, 0.7626", "346.884, 288.026, 34.2367, 0.8136", "347.26, 286.953, 34.5296, 0.8136", "347.322, 285.824, 34.2073, 0.788", "347.355, 284.681, 34.1463, 0.7626", "347.572, 283.56, 34.0584, 0.788", "347.895, 282.486, 33.5202, 0.8136", "348.286, 281.411, 33.4667, 0.8136", "348.704, 280.379, 34.0934, 0.7626", "349.228, 279.364, 34.1566, 0.7118", "349.866, 278.414, 34.148, 0.6864", "350.43, 277.419, 34.0967, 0.661", "350.939, 276.403, 33.7775, 0.6356", "351.473, 275.428, 33.1148, 0.6102", "352.245, 274.584, 33.0666, 0.6356", "353.138, 273.872, 33.1769, 0.661", "353.912, 273.07, 33.8047, 0.6864", "354.607, 272.176, 34.1827, 0.661", "355.141, 271.166, 34.2882, 0.6356", "355.672, 270.174, 34.7858, 0.6102", "356.316, 269.248, 35.2528, 0.6356", "356.994, 268.33, 35.2836, 0.6356", "357.883, 267.611, 35.2979, 0.6356", "358.764, 266.882, 35.3612, 0.5592", "359.559, 266.07, 35.6342, 0.5592", "360.251, 265.247, 36.5688, 0.5592", "360.755, 264.265, 37.2943, 0.661", "361.308, 263.27, 37.52, 0.6864", "361.829, 262.253, 37.52, 0.7372", "362.173, 261.169, 37.5206, 0.6864", "362.878, 260.271, 37.5239, 0.661", "363.657, 259.45, 37.5427, 0.5848", "364.126, 258.411, 37.6522, 0.6102", "364.731, 257.455, 38.0498, 0.6864", "365.311, 256.507, 38.6708, 0.788", "366.035, 255.641, 39.058, 0.788", "366.726, 254.789, 39.849, 0.6864", "367.392, 253.921, 40.5308, 0.5848", "367.898, 253.053, 41.7474, 0.5848", "368.586, 252.158, 41.7273, 0.6864", "369.413, 251.408, 41.1488, 0.788", "370.113, 250.52, 40.7484, 0.8136", "370.722, 249.559, 40.4846, 0.7626", "371.238, 248.547, 40.451, 0.6864", "371.706, 247.519, 40.8055, 0.661", "372.116, 246.453, 40.8192, 0.5848", "372.539, 245.422, 41.2899, 0.5592", "373.072, 244.461, 41.9384, 0.483", "373.576, 243.435, 41.998, 0.5084", "374.085, 242.41, 41.9891, 0.483", "374.627, 241.403, 41.9415, 0.5084", "375.019, 240.374, 41.6744, 0.5084", "374.952, 239.258, 41.4697, 0.5338", "374.882, 238.154, 41.3991, 0.5592", "375.226, 237.151, 40.5194, 0.6102", "375.691, 236.174, 39.8395, 0.7118", "376.013, 235.078, 39.7603, 0.7626", "376.251, 233.961, 39.762, 0.8136", "376.569, 232.873, 39.7723, 0.7626", "376.993, 231.811, 39.8345, 0.7626", "377.391, 230.755, 40.1937, 0.661", "377.779, 229.702, 40.6983, 0.6356", "377.968, 228.589, 40.8982, 0.5084", "378.009, 227.448, 41.0306, 0.5338", "378.18, 226.327, 41.09, 0.5338", "378.627, 225.287, 40.9472, 0.661", "379.292, 224.362, 40.8531, 0.661", "379.94, 223.426, 40.7529, 0.661", "380.163, 222.356, 40.502, 0.5592", "380.22, 221.063, 40.9606, 0.5084", "380.717, 220.306, 40.9052, 0.5848", "381.371, 219.375, 40.9385, 0.6356", "382.059, 218.465, 41.1331, 0.7118", "382.331, 217.395, 41.7816, 0.788", "382.662, 216.313, 41.9952, 0.9152", "383.223, 215.325, 42.0, 1.0168", "383.964, 214.459, 42.0, 1.0678", "384.748, 213.625, 42.0, 1.0424", "385.433, 212.712, 42.0003, 1.0168", "385.973, 211.706, 42.0014, 0.966", "386.402, 210.647, 42.0076, 0.9406", "386.765, 209.562, 42.0454, 0.9406", "386.968, 208.447, 42.331, 0.9406", "387.322, 207.395, 42.912, 0.966", "387.934, 206.443, 43.1074, 0.966", "388.688, 205.585, 43.12, 0.9914", "389.422, 204.707, 43.12, 0.966", "390.001, 203.726, 43.12, 0.8898", "390.544, 202.719, 43.12, 0.8136", "391.206, 201.789, 43.12, 0.7626", "391.982, 200.949, 43.12, 0.7118", "392.78, 200.13, 43.1203, 0.6356", "393.55, 199.284, 43.1214, 0.5592", "394.094, 198.287, 43.1273, 0.5848", "394.217, 197.165, 43.1676, 0.661", "394.229, 196.029, 43.472, 0.7626", "394.268, 194.915, 44.0832, 0.839", "394.519, 193.809, 44.2282, 0.8898", "394.873, 192.722, 44.2008, 0.9152", "395.359, 191.69, 44.0339, 0.9406", "395.901, 190.722, 43.3888, 1.0168", "396.545, 189.79, 43.0634, 1.0678", "397.111, 188.862, 43.7643, 1.0932", "397.42, 187.782, 44.24, 1.0424", "397.644, 186.669, 44.24, 0.966", "398.19, 185.664, 44.2394, 0.8644", "398.773, 184.68, 44.238, 0.788", "399.216, 183.642, 44.2232, 0.839", "399.27, 182.5, 44.1619, 0.8898", "399.376, 181.378, 43.7097, 0.9152", "399.798, 180.345, 43.1992, 0.839", "400.48, 179.434, 43.1217, 0.8136", "401.26, 178.599, 43.1248, 0.788", "402.009, 177.733, 43.1407, 0.7626", "402.424, 176.679, 43.2418, 0.661", "402.54, 175.577, 43.8542, 0.661", "402.872, 174.497, 44.2072, 0.661", "403.342, 173.456, 44.2456, 0.7372", "404.069, 172.577, 44.2646, 0.6864", "404.752, 171.661, 44.3666, 0.6864", "405.355, 170.736, 45.0808, 0.6864", "405.649, 169.651, 45.4994, 0.788", "405.686, 168.547, 46.2118, 0.8898", "405.808, 167.421, 46.5895, 0.9152", "406.279, 166.407, 47.1512, 0.839", "406.883, 165.438, 47.2021, 0.7118", "407.247, 164.388, 46.5548, 0.661", "407.519, 163.277, 46.5094, 0.6864", "407.726, 162.155, 46.6715, 0.7372", "408.203, 161.154, 47.3539, 0.7626", "408.731, 160.143, 47.5742, 0.7626", "409.291, 159.146, 47.4594, 0.788", "409.882, 158.197, 46.8731, 0.8136", "410.407, 157.191, 46.513, 0.788", "410.927, 156.174, 46.4327, 0.7118", "411.457, 155.163, 46.2434, 0.661", "412.004, 154.2, 45.5624, 0.6864", "412.645, 153.26, 45.3659, 0.7372", "413.383, 152.385, 45.3586, 0.7118", "414.286, 151.685, 45.3538, 0.661", "415.148, 150.934, 45.3303, 0.6102", "415.746, 149.962, 45.185, 0.661", "416.136, 148.953, 44.2865, 0.7118", "416.115, 147.829, 43.7808, 0.7626" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "342.285, 326.056, 33.9175, 0.7626", "342.904, 327.042, 35.0384, 0.4576", "343.55, 327.915, 35.8005, 0.4068", "344.369, 328.714, 35.8005, 0.3304", "345.189, 329.511, 35.8005, 0.305", "346.142, 330.093, 36.0968, 0.305", "347.173, 330.552, 36.5649, 0.2796", "348.204, 331.009, 37.0331, 0.2542", "349.235, 331.467, 37.501, 0.2288", "350.265, 331.926, 37.9691, 0.2288", "351.296, 332.384, 38.4373, 0.2288", "352.033, 333.085, 39.5422, 0.2288", "352.67, 333.867, 40.8598, 0.2542", "352.99, 334.331, 42.5678, 0.2796", "352.609, 334.086, 45.1391, 0.305", "352.163, 333.573, 46.3571, 0.2796", "353.096, 333.141, 46.8255, 0.305", "354.134, 333.185, 47.9984, 0.3304", "355.122, 333.336, 49.315, 0.3814", "356.045, 333.622, 50.8122, 0.3304", "356.968, 333.908, 52.3093, 0.2796", "357.593, 334.817, 53.0312, 0.2288", "358.246, 335.662, 53.7006, 0.2288", "359.37, 335.468, 53.7006, 0.2288", "360.416, 335.879, 53.7491, 0.2288", "360.831, 336.871, 54.7008, 0.2288", "361.273, 337.855, 55.62, 0.2288", "361.895, 338.774, 56.3038, 0.2288", "362.518, 339.693, 56.9873, 0.2542", "363.139, 340.611, 57.671, 0.305", "363.862, 341.334, 58.8602, 0.356", "364.615, 341.998, 60.2042, 0.356", "365.382, 342.764, 61.0117, 0.305", "366.153, 343.573, 61.607, 0.2796", "366.925, 344.382, 62.202, 0.2796", "367.698, 345.189, 62.7973, 0.305", "368.47, 345.998, 63.3926, 0.305", "369.016, 346.913, 63.7983, 0.305", "369.076, 348.055, 63.8053, 0.305", "369.223, 349.168, 64.3398, 0.2796", "369.37, 350.281, 64.874, 0.2796", "369.517, 351.396, 65.4083, 0.2796", "369.664, 352.509, 65.9425, 0.356", "369.811, 353.622, 66.477, 0.4576", "369.958, 354.735, 67.0113, 0.6102" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "342.285, 326.056, 33.9175, 0.7626", "343.026, 326.384, 33.5334, 0.7118", "344.055, 326.819, 33.658, 0.7118", "345.059, 327.333, 33.9097, 0.661", "346.018, 327.918, 33.4961, 0.6356", "346.846, 328.647, 33.0719, 0.661", "347.545, 329.551, 33.04, 0.6864", "348.29, 330.42, 33.0394, 0.6356", "348.866, 331.383, 33.0366, 0.5592", "348.967, 332.489, 33.0168, 0.483", "349.111, 333.555, 32.898, 0.483", "349.834, 334.365, 32.3649, 0.5592", "350.681, 335.025, 31.4138, 0.5848", "351.318, 335.896, 30.8342, 0.5338", "351.764, 336.945, 30.7992, 0.4322", "352.462, 337.815, 30.7952, 0.4322", "353.432, 338.419, 30.7742, 0.5084", "354.329, 339.124, 30.6835, 0.5592", "355.155, 339.882, 30.2784, 0.5084", "356.107, 340.334, 29.4781, 0.4068", "357.212, 340.504, 29.0626, 0.3304", "358.113, 341.101, 29.1486, 0.356", "358.801, 341.955, 28.8142, 0.4322", "359.528, 342.753, 27.9325, 0.5084", "360.334, 343.525, 27.7444, 0.5338", "361.35, 343.939, 28.1481, 0.5848", "362.458, 344.047, 28.0367, 0.661", "363.53, 344.248, 27.2591, 0.7372", "364.564, 344.605, 26.4407, 0.7372", "365.562, 345.045, 25.6096, 0.7118", "366.535, 345.595, 25.2095, 0.661", "367.437, 346.291, 25.1997, 0.6356", "368.27, 347.076, 25.1986, 0.5592", "369.129, 347.83, 25.1938, 0.5084", "370.03, 348.533, 25.1709, 0.4068", "370.887, 349.286, 25.0709, 0.356", "371.655, 350.102, 24.5972, 0.2796", "372.234, 351.048, 24.4362, 0.2542", "372.311, 352.106, 25.0838, 0.2542", "372.232, 353.182, 25.991, 0.3304", "372.666, 354.162, 26.3385, 0.4322", "373.422, 355.014, 26.4256, 0.483", "374.183, 355.833, 26.9486, 0.4576", "374.755, 356.748, 27.8102, 0.3814", "374.924, 357.824, 27.7421, 0.356", "374.681, 358.923, 27.4974, 0.356", "374.267, 359.987, 27.5282, 0.3814", "374.015, 361.076, 28.014, 0.356", "374.223, 362.14, 28.7328, 0.3304", "374.418, 363.225, 29.4638, 0.3304", "374.867, 364.255, 29.6688, 0.3814", "375.385, 365.275, 29.685, 0.4068", "375.511, 366.393, 29.715, 0.3814", "375.337, 367.518, 29.8908, 0.3304", "375.526, 368.592, 30.5656, 0.305", "375.855, 369.679, 30.7824, 0.3304", "376.194, 370.772, 30.7978, 0.356", "376.535, 371.863, 30.7852, 0.4322", "376.707, 372.991, 30.6967, 0.4576", "377.088, 374.041, 30.1801, 0.483", "377.582, 375.056, 29.7357, 0.4322", "378.079, 376.084, 29.68, 0.4322", "378.449, 377.165, 29.68, 0.4576", "378.814, 378.25, 29.68, 0.483", "379.411, 379.221, 29.68, 0.4576", "380.182, 380.064, 29.68, 0.3814", "380.918, 380.755, 30.24, 0.3304", "381.76, 381.44, 30.52, 0.305", "382.856, 381.524, 31.066, 0.2796", "383.981, 381.561, 31.36, 0.2796", "384.905, 382.21, 31.36, 0.2796", "385.951, 382.577, 31.36, 0.305", "387.007, 382.927, 31.6397, 0.2796", "388.118, 383.042, 31.92, 0.2542", "389.255, 383.126, 31.92, 0.2288", "389.904, 383.876, 32.2218, 0.2288", "390.637, 384.741, 32.48, 0.2288", "391.576, 385.376, 32.6432, 0.2288", "392.47, 385.844, 33.77, 0.2542", "393.078, 386.786, 33.88, 0.2796" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "324.436, 320.114, 30.1851, 0.5848", "324.334, 319.462, 26.6036, 0.6102", "323.765, 319.106, 24.4871, 0.5848", "323.163, 318.352, 23.2375, 0.5084", "322.855, 317.339, 22.2275, 0.4322", "322.552, 316.255, 21.8296, 0.4322", "322.415, 315.145, 21.3032, 0.3814", "323.19, 314.397, 21.5841, 0.4068", "323.922, 313.527, 21.8179, 0.4576", "324.79, 312.783, 21.8238, 0.6102", "325.624, 312.001, 21.7563, 0.7118", "326.192, 311.03, 21.3301, 0.7118", "326.716, 310.194, 19.9335, 0.6864", "327.443, 309.602, 18.3386, 0.661" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "324.436, 320.114, 30.1851, 0.5848", "325.289, 319.674, 30.2386, 0.5848", "326.276, 319.129, 29.8049, 0.6356", "327.02, 318.42, 28.621, 0.661", "326.71, 317.441, 27.6002, 0.6356", "326.256, 316.396, 27.4436, 0.6102", "325.609, 315.453, 27.4378, 0.6356", "324.83, 314.616, 27.4313, 0.661", "324.076, 313.756, 27.4025, 0.6864", "323.413, 312.826, 27.2362, 0.7118", "322.631, 312.071, 26.3777, 0.7118", "321.698, 311.492, 25.5878, 0.7372" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "416.115, 147.829, 43.7808, 0.7626", "416.89, 146.271, 44.5183, 0.661", "417.638, 145.497, 45.4342, 0.7372", "418.161, 144.613, 46.6239, 0.7626", "418.65, 143.602, 46.9347, 0.839", "419.306, 142.681, 46.5396, 0.8898", "420.004, 141.775, 46.5688, 0.8644", "420.677, 140.868, 46.9039, 0.8136", "421.339, 140.003, 47.7487, 0.7118", "421.99, 139.094, 48.2905, 0.6102", "422.725, 138.225, 48.2502, 0.5084", "423.496, 137.433, 48.0698, 0.483", "424.44, 136.881, 48.8662, 0.5592", "425.211, 136.136, 49.6224, 0.6356", "425.655, 135.098, 49.8453, 0.6864", "425.859, 133.974, 49.8761, 0.6356", "426.119, 132.883, 50.0391, 0.5848", "426.618, 131.93, 50.7758, 0.5084", "427.078, 131.082, 52.2553, 0.5338", "427.523, 130.169, 53.2042, 0.5592", "427.627, 129.048, 53.5802, 0.6102", "427.627, 127.928, 54.1327, 0.5592", "427.627, 126.792, 54.4524, 0.5084", "427.628, 125.651, 54.6977, 0.483", "427.634, 124.52, 54.6188, 0.5592", "427.676, 123.39, 54.2682, 0.6356", "427.878, 122.282, 53.9851, 0.6864", "428.253, 121.223, 53.4708, 0.661", "428.693, 120.178, 53.223, 0.5848", "429.181, 119.144, 53.3277, 0.5084", "429.638, 118.119, 53.7799, 0.4322", "430.193, 117.16, 54.3514, 0.4322", "430.776, 116.207, 54.8377, 0.3814", "430.96, 115.143, 54.9377, 0.4068", "430.999, 114.019, 54.686, 0.4576", "431.219, 112.969, 55.3736, 0.5592", "431.476, 111.948, 56.4385, 0.5592", "431.671, 110.849, 56.9293, 0.483", "431.672, 109.723, 56.723, 0.483", "431.529, 108.806, 57.7528, 0.5848", "431.898, 107.946, 58.996, 0.6864", "432.279, 106.924, 59.7167, 0.6864", "432.288, 105.803, 59.9726, 0.6102", "432.298, 104.675, 60.359, 0.5338", "432.6, 103.605, 60.8952, 0.4322", "432.725, 102.808, 59.92, 0.356", "433.43, 101.925, 59.92, 0.356", "433.796, 100.871, 60.2, 0.4068", "433.988, 99.7562, 60.2297, 0.483", "434.19, 98.7208, 61.2282, 0.4576", "434.976, 97.9302, 61.465, 0.483", "435.292, 97.0806, 62.909, 0.4322", "435.302, 95.939, 63.0, 0.4576", "435.493, 94.8544, 63.5267, 0.4576", "435.521, 93.7149, 63.6135, 0.5848", "435.521, 92.6122, 64.3521, 0.6864", "435.552, 91.5977, 65.5614, 0.6864", "435.771, 90.5184, 66.0514, 0.5338", "436.029, 89.4208, 66.36, 0.3814", "436.465, 88.4391, 67.0788, 0.305", "437.198, 87.5866, 67.2, 0.305", "437.812, 86.7199, 67.6458, 0.305", "438.198, 85.8251, 68.8604, 0.356", "438.381, 84.7206, 69.1146, 0.4068", "438.756, 83.7421, 69.4386, 0.4322", "439.108, 82.7673, 70.28, 0.3814", "439.979, 82.085, 70.28, 0.356", "440.409, 81.0466, 70.28, 0.4068", "440.874, 80.0152, 70.28, 0.4576", "441.806, 79.3804, 70.28, 0.4576", "442.611, 78.5967, 70.28, 0.356", "443.077, 77.5568, 70.28, 0.305", "443.898, 76.7726, 70.28, 0.2796", "444.471, 75.8372, 70.709, 0.305", "444.848, 74.8006, 71.12, 0.2796", "445.264, 73.7384, 71.1519, 0.2542", "445.762, 72.7377, 71.68, 0.2288", "446.618, 72.1641, 71.68, 0.2288", "446.961, 71.2898, 71.68, 0.2288", "447.049, 70.151, 71.68, 0.2542", "447.194, 69.0207, 71.68, 0.305", "447.396, 67.9088, 71.68, 0.356", "447.881, 66.8754, 71.68, 0.356", "448.497, 66.02, 71.68, 0.305", "449.522, 65.5815, 71.68, 0.2542", "450.466, 64.9465, 71.68, 0.2288", "451.164, 64.0433, 71.68, 0.2288", "451.835, 63.1185, 71.68, 0.2288", "452.589, 62.2582, 71.68, 0.2542", "453.503, 61.5808, 71.68, 0.2796", "454.416, 60.895, 71.68, 0.305", "455.243, 60.1125, 71.68, 0.2796", "456.035, 59.3129, 71.68, 0.2542", "456.747, 58.465, 71.68, 0.2288", "457.602, 57.8021, 72.0966, 0.2288", "458.277, 56.9385, 72.8, 0.2542", "458.544, 55.8391, 72.8, 0.2796", "459.022, 54.8116, 72.8, 0.305", "459.419, 53.768, 72.9151, 0.2796", "459.87, 52.8756, 73.64, 0.2542", "460.356, 52.3657, 75.035, 0.2288", "460.594, 51.4944, 76.1233, 0.2288", "460.78, 50.3997, 76.5668, 0.2288", "461.023, 49.3048, 76.6259, 0.2288", "461.833, 48.8488, 75.88, 0.2542" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "416.115, 147.829, 43.7808, 0.7626", "415.704, 147.876, 41.6192, 0.305", "416.111, 147.847, 39.4926, 0.4576", "416.946, 147.279, 38.593, 0.5848", "417.617, 146.396, 37.9812, 0.7118", "418.225, 145.442, 37.5917, 0.6864", "419.044, 144.661, 37.515, 0.661", "420.072, 144.183, 37.4912, 0.5848", "421.196, 144.15, 37.3086, 0.5848", "422.26, 144.017, 36.4476, 0.6356", "422.891, 143.212, 35.5312, 0.7626", "423.394, 142.197, 35.2624, 0.839", "423.865, 141.157, 35.0848, 0.839", "424.274, 140.126, 34.4313, 0.7372", "424.85, 139.149, 34.1816, 0.6356", "425.634, 138.323, 34.1522, 0.5592", "426.574, 137.675, 34.1197, 0.5848", "427.608, 137.199, 33.9377, 0.6864", "428.497, 136.66, 32.7678, 0.788", "429.339, 136.149, 31.3466, 0.8136", "430.189, 135.429, 30.7905, 0.7372", "430.941, 134.581, 30.4394, 0.661", "431.874, 133.933, 30.4584, 0.5592", "432.959, 133.62, 30.7597, 0.5338", "434.085, 133.764, 30.7507, 0.5338", "434.951, 133.079, 30.4805, 0.6864", "435.366, 132.099, 29.484, 0.788", "435.962, 131.18, 28.6734, 0.8644", "436.771, 130.374, 28.5603, 0.788", "437.701, 129.708, 28.56, 0.7626", "438.643, 129.057, 28.56, 0.7372", "439.655, 128.524, 28.56, 0.7626", "440.705, 128.072, 28.56, 0.7626", "441.802, 127.753, 28.56, 0.7118", "442.526, 126.867, 28.56, 0.661", "443.128, 125.896, 28.56, 0.5848", "443.93, 125.08, 28.5606, 0.5592", "444.868, 124.426, 28.562, 0.5084", "445.748, 123.695, 28.569, 0.5084", "446.681, 123.035, 28.6031, 0.5084", "447.742, 122.618, 28.7804, 0.5592", "448.739, 122.099, 29.2452, 0.5338", "449.698, 121.525, 28.6698, 0.483", "450.612, 120.842, 28.6079, 0.3814", "451.309, 119.952, 28.7554, 0.356", "451.557, 118.85, 28.3774, 0.4068", "452.008, 117.866, 27.5716, 0.483", "452.78, 117.024, 27.4747, 0.5338", "453.547, 116.179, 27.5968, 0.5084", "454.175, 115.242, 28.0134, 0.5084", "454.621, 114.209, 28.3105, 0.5338", "455.098, 113.206, 27.6926, 0.6356", "455.369, 112.158, 26.8724, 0.6864", "455.741, 111.23, 25.5844, 0.7372", "456.03, 110.141, 25.1992, 0.7372", "456.26, 109.032, 25.193, 0.7372", "456.787, 108.016, 25.1742, 0.7118", "457.277, 106.985, 25.0513, 0.661", "457.358, 105.886, 24.3981, 0.661", "457.312, 104.749, 24.1702, 0.6102", "457.276, 103.621, 24.5865, 0.5848", "457.273, 102.497, 25.1101, 0.5592", "457.777, 101.551, 24.1506, 0.6102", "458.466, 100.645, 24.0811, 0.6102", "458.751, 99.543, 24.0834, 0.6102", "458.87, 98.4056, 24.1027, 0.5592", "459.308, 97.3529, 24.2152, 0.6102", "459.836, 96.3655, 24.7792, 0.6102", "460.506, 95.4425, 24.6151, 0.661", "461.328, 94.676, 24.1016, 0.6356", "461.939, 93.7102, 24.0786, 0.6102", "462.251, 92.6103, 24.0699, 0.5592", "462.216, 91.4716, 24.012, 0.5592", "461.555, 90.5804, 23.8, 0.5592", "461.261, 89.5457, 23.8, 0.5592", "461.261, 88.4018, 23.8146, 0.5084", "461.247, 87.2711, 24.1262, 0.483", "460.926, 86.1946, 24.36, 0.4068", "461.105, 85.0885, 24.3426, 0.3304", "461.621, 84.126, 23.8311, 0.2542", "462.487, 83.3887, 23.7784, 0.2288", "463.473, 82.8838, 23.2876, 0.2288", "464.285, 82.0831, 23.24, 0.2288", "464.983, 81.179, 23.24, 0.2288", "465.911, 80.5463, 23.24, 0.2288", "466.568, 79.6683, 23.0073, 0.2288", "467.105, 78.6629, 22.96, 0.2288", "467.467, 77.5873, 22.96, 0.2288", "467.513, 76.4555, 22.7231, 0.2288", "467.577, 75.3419, 22.4, 0.2542", "467.901, 74.2939, 22.8752, 0.3304", "468.021, 73.2042, 23.56, 0.4068", "468.349, 72.1686, 24.2603, 0.4322", "468.707, 71.113, 24.1371, 0.356", "468.85, 70.0142, 24.08, 0.356", "468.354, 69.0976, 24.08, 0.4576" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "321.698, 311.492, 25.5878, 0.7372", "320.351, 310.951, 24.9651, 0.7118", "319.358, 310.455, 24.3194, 0.6864", "318.303, 310.024, 24.127, 0.6102", "317.258, 309.574, 24.3359, 0.5848", "316.201, 309.217, 24.7237, 0.6102", "315.09, 309.041, 24.6842, 0.661", "314.067, 308.589, 24.9813, 0.661", "313.099, 308.03, 24.4454, 0.6102", "312.161, 307.411, 24.1713, 0.5592", "311.149, 306.928, 24.5538, 0.5338", "310.194, 306.369, 25.1661, 0.5848", "309.147, 305.918, 25.3221, 0.661", "308.11, 305.479, 25.7242, 0.7372", "307.133, 304.945, 26.3012, 0.7118", "306.036, 304.694, 26.5143, 0.661", "304.931, 304.712, 27.1578, 0.5848", "303.843, 305.009, 27.3815, 0.5848", "302.78, 305.418, 27.1746, 0.5592", "301.69, 305.628, 27.6651, 0.5592", "300.738, 306.014, 28.828, 0.5338", "299.892, 306.738, 29.2096, 0.5592", "299.047, 307.352, 28.1781, 0.5592", "298.062, 307.86, 27.531, 0.5592", "297.033, 308.35, 27.5069, 0.5338", "295.966, 308.731, 27.8709, 0.5848", "294.872, 308.946, 28.4827, 0.6356", "293.739, 308.84, 28.5578, 0.6356", "292.68, 308.414, 28.5536, 0.5592", "291.559, 308.196, 28.5188, 0.483", "290.487, 307.811, 28.266, 0.5084", "289.59, 307.441, 26.8106, 0.5592", "288.486, 307.353, 26.1363, 0.5848", "287.397, 307.123, 25.492, 0.5084", "286.31, 307.135, 26.3469, 0.4068", "285.287, 307.166, 26.9536, 0.3304", "284.367, 306.65, 25.9386, 0.3304", "283.5, 306.689, 24.2357, 0.356", "282.523, 306.455, 23.3878, 0.356", "281.624, 306.156, 24.5997, 0.305", "281.207, 305.53, 26.5969, 0.305", "280.504, 304.726, 26.3522, 0.356", "279.416, 304.43, 26.1962, 0.4322", "278.388, 304.046, 26.9699, 0.4322" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "321.698, 311.492, 25.5878, 0.7372", "321.932, 310.046, 23.3554, 0.4068", "322.345, 309.022, 22.9583, 0.4576", "322.095, 307.981, 22.8903, 0.5338", "321.359, 307.141, 22.4879, 0.6102", "320.726, 306.209, 22.0956, 0.661", "320.042, 305.359, 22.7592, 0.7118", "319.53, 304.425, 23.7513, 0.7372", "318.903, 303.487, 24.0517, 0.7372", "318.128, 302.647, 24.0682, 0.661", "317.105, 302.165, 24.0047, 0.5592", "316.104, 301.634, 23.6508, 0.5084", "315.013, 301.387, 23.1577, 0.5338", "314.029, 300.904, 23.7894, 0.661", "313.193, 300.134, 23.8252, 0.7372", "312.58, 299.194, 23.3349, 0.788", "312.002, 298.23, 23.3979, 0.7118", "311.56, 297.187, 23.52, 0.6356", "311.071, 296.155, 23.52, 0.5848", "310.678, 295.082, 23.52, 0.5848", "310.068, 294.126, 23.52, 0.661", "309.104, 293.581, 23.52, 0.6356", "308.08, 293.12, 23.52, 0.5592", "307.117, 293.403, 24.08, 0.3814", "306.448, 294.245, 24.08, 0.3304", "305.647, 295.0, 24.0125, 0.356", "304.529, 295.03, 23.5516, 0.483", "303.964, 294.191, 23.1843, 0.5084", "303.485, 293.174, 22.9093, 0.483", "302.797, 292.452, 22.68, 0.356", "301.677, 292.526, 22.5322, 0.2796", "300.647, 292.856, 21.691, 0.2288", "299.743, 293.351, 20.6032, 0.2542", "298.95, 294.066, 19.6792, 0.2796", "298.02, 294.724, 19.6, 0.3304", "297.049, 295.316, 19.6, 0.3814", "295.943, 295.482, 19.9452, 0.4576", "294.873, 295.211, 20.44, 0.5338", "293.824, 294.768, 20.44, 0.5848", "292.713, 294.518, 20.44, 0.6102", "291.66, 294.149, 19.9175, 0.5848", "290.622, 293.894, 19.6, 0.5084", "289.679, 294.478, 19.6, 0.4576", "288.599, 294.768, 19.9573, 0.4068", "287.469, 294.809, 20.1676, 0.4576", "286.334, 294.809, 20.44, 0.483", "285.367, 294.357, 20.44, 0.5592", "284.365, 294.008, 20.19, 0.5338", "283.268, 294.168, 19.6302, 0.4576", "282.415, 294.921, 19.6, 0.3304", "281.845, 295.913, 19.6, 0.2796", "280.791, 296.278, 19.6, 0.3304", "279.699, 296.035, 19.6, 0.4322", "278.622, 295.754, 19.6, 0.5592", "277.579, 295.495, 19.6, 0.6102", "276.541, 295.066, 19.4197, 0.6356", "275.455, 294.861, 19.32, 0.5338", "274.768, 293.963, 19.32, 0.4576", "273.712, 293.588, 19.3701, 0.3814", "272.731, 293.097, 19.6, 0.4322", "271.594, 293.017, 19.6, 0.4576", "270.454, 292.984, 19.5614, 0.5084", "269.412, 293.322, 19.32, 0.5084" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_440",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_441",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_28", "dend_20", "dend_13", "dend_0", "apic_0", "dend_43", "dend_35", "dend_32", "dend_29", "dend_27", "dend_21", "dend_15", "dend_14", "dend_8", "dend_1", "apic_18", "apic_1", "dend_45", "dend_44", "dend_40", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_22", "dend_17", "dend_16", "dend_12", "dend_9", "dend_7", "dend_2", "apic_20", "apic_19", "apic_9", "apic_2", "dend_42", "dend_41", "dend_39", "dend_38", "dend_37", "dend_24", "dend_23", "dend_19", "dend_18", "dend_11", "dend_10", "dend_4", "dend_3", "apic_24", "apic_23", "apic_22", "apic_21", "apic_13", "apic_10", "apic_8", "apic_3", "dend_6", "dend_5", "apic_17", "apic_14", "apic_12", "apic_11", "apic_7", "apic_4", "apic_16", "apic_15", "apic_6", "apic_5" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_28", "dend_20", "dend_13", "dend_0", "dend_43", "dend_35", "dend_32", "dend_29", "dend_27", "dend_21", "dend_15", "dend_14", "dend_8", "dend_1", "dend_45", "dend_44", "dend_40", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_22", "dend_17", "dend_16", "dend_12", "dend_9", "dend_7", "dend_2", "dend_42", "dend_41", "dend_39", "dend_38", "dend_37", "dend_24", "dend_23", "dend_19", "dend_18", "dend_11", "dend_10", "dend_4", "dend_3", "dend_6", "dend_5" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_20", "apic_19", "apic_9", "apic_2", "apic_24", "apic_23", "apic_22", "apic_21", "apic_13", "apic_10", "apic_8", "apic_3", "apic_17", "apic_14", "apic_12", "apic_11", "apic_7", "apic_4", "apic_16", "apic_15", "apic_6", "apic_5" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20889",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.73"
  }, {
    "group" : "dend",
    "value" : "2.73"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "121.95"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0982495",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.5910537E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.1212604",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.39592105",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.020172771",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.00634387",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.8329412E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.0066409E-4",
    "erev" : "-96.20659"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.9499384E-4",
    "erev" : "-96.20659"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.406278E-7",
    "erev" : "-96.20659"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.1653258E-6",
    "erev" : "-96.20659"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.0691092E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.4458964E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473872986

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_34
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_20
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_35
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_21
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_9, id: apic_9, parent: apic_1
create apic_9
public apic_9
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_36
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_24, id: apic_24, parent: apic_20
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_20
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_17, id: apic_17, parent: apic_13
create apic_17
public apic_17
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_7, id: apic_7, parent: apic_3
create apic_7
public apic_7
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_440, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_440
// Group: {name=ModelViewParmSubset_441, groups=[], sections=[dend_34, dend_33, dend_28, dend_20, dend_13, dend_0, apic_0, dend_43, dend_35, dend_32, dend_29, dend_27, dend_21, dend_15, dend_14, dend_8, dend_1, apic_18, apic_1, dend_45, dend_44, dend_40, dend_36, dend_31, dend_30, dend_26, dend_25, dend_22, dend_17, dend_16, dend_12, dend_9, dend_7, dend_2, apic_20, apic_19, apic_9, apic_2, dend_42, dend_41, dend_39, dend_38, dend_37, dend_24, dend_23, dend_19, dend_18, dend_11, dend_10, dend_4, dend_3, apic_24, apic_23, apic_22, apic_21, apic_13, apic_10, apic_8, apic_3, dend_6, dend_5, apic_17, apic_14, apic_12, apic_11, apic_7, apic_4, apic_16, apic_15, apic_6, apic_5]}
objref ModelViewParmSubset_441
// Group: {name=dend, groups=[], sections=[dend_34, dend_33, dend_28, dend_20, dend_13, dend_0, dend_43, dend_35, dend_32, dend_29, dend_27, dend_21, dend_15, dend_14, dend_8, dend_1, dend_45, dend_44, dend_40, dend_36, dend_31, dend_30, dend_26, dend_25, dend_22, dend_17, dend_16, dend_12, dend_9, dend_7, dend_2, dend_42, dend_41, dend_39, dend_38, dend_37, dend_24, dend_23, dend_19, dend_18, dend_11, dend_10, dend_4, dend_3, dend_6, dend_5]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_9, apic_2, apic_24, apic_23, apic_22, apic_21, apic_13, apic_10, apic_8, apic_3, apic_17, apic_14, apic_12, apic_11, apic_7, apic_4, apic_16, apic_15, apic_6, apic_5]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_20889, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_20889
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49999999999999767)
    connect dend_34(0), soma_0(0.49999999999999767)
    connect dend_33(0), soma_0(0.49999999999999767)
    connect dend_28(0), soma_0(0.49999999999999767)
    connect dend_20(0), soma_0(0.49999999999999767)
    connect dend_13(0), soma_0(0.49999999999999767)
    connect dend_0(0), soma_0(0.49999999999999767)
    connect apic_0(0), soma_0(0.49999999999999767)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_21(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_9(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_36(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_24(0), apic_20(1.0)
    connect apic_23(0), apic_20(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_17(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_7(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 316.007, 353.153, 28.56, 12.2858 ) }
    soma_0 { pt3dadd( 322.15, 353.153, 28.56, 12.2858 ) }
    soma_0 { pt3dadd( 328.293, 353.153, 28.56, 12.2858 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 322.15, 353.153, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 327.991, 366.969, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 333.833, 380.785, 28.56, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 318.304, 349.168, 36.2594, 0.4068 ) }
    dend_34 { pt3dadd( 317.203, 349.415, 36.2594, 0.3304 ) }
    dend_34 { pt3dadd( 316.27, 350.079, 36.2594, 0.305 ) }
    dend_34 { pt3dadd( 315.339, 350.742, 36.2594, 0.3304 ) }
    dend_34 { pt3dadd( 314.776, 351.71, 36.5176, 0.3814 ) }
    dend_34 { pt3dadd( 314.283, 352.735, 36.8239, 0.3304 ) }
    dend_34 { pt3dadd( 313.79, 353.76, 37.1305, 0.2796 ) }
    dend_34 { pt3dadd( 313.298, 354.785, 37.4368, 0.2288 ) }
    dend_34 { pt3dadd( 312.988, 355.837, 37.3766, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 15/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 328.139, 354.961, 26.3189, 0.4322 ) }
    dend_33 { pt3dadd( 328.21, 355.858, 24.78, 0.4322 ) }
    dend_33 { pt3dadd( 328.219, 356.984, 24.7408, 0.4322 ) }
    dend_33 { pt3dadd( 328.716, 357.879, 24.6649, 0.4576 ) }
    dend_33 { pt3dadd( 329.719, 358.173, 23.6673, 0.483 ) }
    dend_33 { pt3dadd( 330.741, 358.112, 22.461, 0.4576 ) }
    dend_33 { pt3dadd( 331.798, 357.958, 21.5566, 0.4322 ) }
    dend_33 { pt3dadd( 332.921, 357.96, 21.28, 0.483 ) }
    dend_33 { pt3dadd( 334.057, 358.072, 21.2682, 0.5592 ) }
    dend_33 { pt3dadd( 334.84, 358.574, 20.1421, 0.6102 ) }
    dend_33 { pt3dadd( 335.922, 358.644, 19.4835, 0.5592 ) }
    dend_33 { pt3dadd( 337.04, 358.663, 19.04, 0.5084 ) }
    dend_33 { pt3dadd( 338.177, 358.765, 19.112, 0.4576 ) }
    dend_33 { pt3dadd( 338.972, 359.306, 19.7098, 0.5084 ) }
    dend_33 { pt3dadd( 339.647, 360.188, 19.88, 0.5848 ) }
    dend_33 { pt3dadd( 340.559, 360.731, 19.203, 0.6864 ) }
    dend_33 { pt3dadd( 341.271, 361.493, 18.76, 0.7626 ) }
    dend_33 { pt3dadd( 342.094, 362.193, 18.76, 0.8136 ) }
    dend_33 { pt3dadd( 342.742, 362.973, 18.76, 0.8136 ) }
    dend_33 { pt3dadd( 343.48, 363.61, 18.76, 0.7626 ) }
    dend_33 { pt3dadd( 344.517, 364.028, 18.7323, 0.661 ) }
    dend_33 { pt3dadd( 345.252, 364.697, 18.2, 0.5592 ) }
    dend_33 { pt3dadd( 346.336, 364.936, 17.92, 0.4322 ) }
    dend_33 { pt3dadd( 347.469, 365.025, 17.92, 0.3814 ) }
    dend_33 { pt3dadd( 348.577, 365.279, 17.92, 0.3304 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 40/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 328.175, 352.521, 28.3472, 0.5338 ) }
    dend_28 { pt3dadd( 329.188, 352.902, 29.1382, 0.6356 ) }
    dend_28 { pt3dadd( 330.283, 353.086, 28.7162, 0.6864 ) }
    dend_28 { pt3dadd( 331.124, 352.798, 30.3954, 0.7118 ) }
    dend_28 { pt3dadd( 332.222, 352.535, 30.8003, 0.7118 ) }
    dend_28 { pt3dadd( 333.231, 351.997, 30.8104, 0.7118 ) }
    dend_28 { pt3dadd( 334.103, 351.256, 30.8448, 0.661 ) }
    dend_28 { pt3dadd( 334.895, 350.432, 30.9823, 0.661 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 322.611, 359.367, 34.0536, 0.8136 ) }
    dend_20 { pt3dadd( 323.104, 360.392, 34.1029, 0.9406 ) }
    dend_20 { pt3dadd( 323.544, 361.442, 33.8251, 0.9406 ) }
    dend_20 { pt3dadd( 323.892, 362.492, 33.1078, 0.7626 ) }
    dend_20 { pt3dadd( 324.156, 363.604, 32.9893, 0.5592 ) }
    dend_20 { pt3dadd( 324.784, 364.556, 32.7995, 0.4322 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 316.02, 350.526, 24.4524, 1.2712 ) }
    dend_13 { pt3dadd( 315.273, 348.42, 23.2677, 1.144 ) }
    dend_13 { pt3dadd( 314.951, 347.33, 22.9636, 1.0168 ) }
    dend_13 { pt3dadd( 314.356, 346.353, 22.9603, 0.8898 ) }
    dend_13 { pt3dadd( 313.557, 345.536, 22.9611, 0.9406 ) }
    dend_13 { pt3dadd( 312.635, 344.859, 22.9656, 0.9914 ) }
    dend_13 { pt3dadd( 311.637, 344.299, 22.9894, 0.9152 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 315.667, 353.355, 31.6907, 0.7118 ) }
    dend_0 { pt3dadd( 314.802, 353.7, 32.9756, 0.9152 ) }
    dend_0 { pt3dadd( 313.678, 353.644, 32.4719, 1.0678 ) }
    dend_0 { pt3dadd( 311.558, 354.211, 31.1634, 1.2966 ) }
    dend_0 { pt3dadd( 309.524, 355.238, 30.8, 1.1694 ) }
    dend_0 { pt3dadd( 308.497, 355.741, 30.8, 1.1186 ) }
    dend_0 { pt3dadd( 307.428, 356.149, 30.8, 1.0932 ) }
    dend_0 { pt3dadd( 306.477, 356.779, 30.8, 0.9914 ) }
    dend_0 { pt3dadd( 305.616, 357.532, 30.8011, 0.8644 ) }
    dend_0 { pt3dadd( 304.728, 358.254, 30.807, 0.7372 ) }
    dend_0 { pt3dadd( 303.645, 358.614, 30.8445, 0.788 ) }
    dend_0 { pt3dadd( 302.508, 358.67, 31.066, 0.8136 ) }
    dend_0 { pt3dadd( 301.421, 358.831, 31.8441, 0.8898 ) }
    dend_0 { pt3dadd( 300.336, 359.179, 32.0342, 0.8136 ) }
    dend_0 { pt3dadd( 299.27, 359.517, 32.6385, 0.6864 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 76/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 325.048, 348.016, 30.1529, 0.6102 ) }
    apic_0 { pt3dadd( 324.905, 347.149, 31.9432, 0.788 ) }
    apic_0 { pt3dadd( 324.913, 346.259, 33.7002, 0.966 ) }
    apic_0 { pt3dadd( 324.999, 345.187, 34.6396, 1.144 ) }
    apic_0 { pt3dadd( 325.382, 344.151, 35.3478, 1.1694 ) }
    apic_0 { pt3dadd( 326.294, 342.098, 36.398, 1.0424 ) }
    apic_0 { pt3dadd( 326.643, 341.009, 36.4, 0.9914 ) }
    apic_0 { pt3dadd( 326.842, 339.882, 36.4, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 84/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 333.833, 380.785, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 339.674, 394.601, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 345.515, 408.417, 28.56, 1.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_34 (entry count 87/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 312.988, 355.837, 37.3766, 0.2288 ) }
    dend_43 { pt3dadd( 312.275, 356.602, 37.3262, 0.5592 ) }
    dend_43 { pt3dadd( 311.78, 357.62, 37.3876, 0.6356 ) }
    dend_43 { pt3dadd( 311.35, 358.376, 38.8889, 0.6864 ) }
    dend_43 { pt3dadd( 310.585, 359.049, 39.6878, 0.6864 ) }
    dend_43 { pt3dadd( 309.76, 359.837, 39.7611, 0.7372 ) }
    dend_43 { pt3dadd( 309.429, 360.885, 39.7676, 0.8136 ) }
    dend_43 { pt3dadd( 309.602, 361.999, 39.8068, 0.9152 ) }
    dend_43 { pt3dadd( 310.002, 363.063, 40.0492, 0.8898 ) }
    dend_43 { pt3dadd( 310.197, 364.151, 40.6647, 0.8136 ) }
    dend_43 { pt3dadd( 310.104, 365.277, 40.8671, 0.7118 ) }
    dend_43 { pt3dadd( 309.629, 366.301, 40.8738, 0.6864 ) }
    dend_43 { pt3dadd( 309.307, 367.39, 40.8397, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 309.022, 368.494, 40.6445, 0.8644 ) }
    dend_43 { pt3dadd( 309.069, 369.587, 39.9871, 1.0168 ) }
    dend_43 { pt3dadd( 309.46, 370.646, 39.7751, 0.9914 ) }
    dend_43 { pt3dadd( 309.713, 371.757, 39.7614, 0.8898 ) }
    dend_43 { pt3dadd( 309.529, 372.871, 39.7684, 0.661 ) }
    dend_43 { pt3dadd( 308.969, 373.858, 39.8034, 0.5592 ) }
    dend_43 { pt3dadd( 308.389, 374.841, 39.9963, 0.4576 ) }
    dend_43 { pt3dadd( 307.655, 375.645, 40.7767, 0.4068 ) }
    dend_43 { pt3dadd( 307.089, 376.634, 40.9702, 0.3304 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 312.988, 355.837, 37.3766, 0.2288 ) }
    dend_35 { pt3dadd( 312.187, 355.863, 39.3554, 0.5084 ) }
    dend_35 { pt3dadd( 311.367, 355.596, 41.188, 0.356 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 12/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 334.895, 350.432, 30.9823, 0.661 ) }
    dend_32 { pt3dadd( 334.961, 349.326, 30.574, 0.3304 ) }
    dend_32 { pt3dadd( 334.954, 348.275, 29.6601, 0.2796 ) }
    dend_32 { pt3dadd( 334.916, 347.462, 27.7172, 0.2542 ) }
    dend_32 { pt3dadd( 334.688, 346.807, 25.5657, 0.2288 ) }
    dend_32 { pt3dadd( 334.002, 346.208, 23.9613, 0.2288 ) }
    dend_32 { pt3dadd( 333.126, 345.759, 22.6019, 0.2542 ) }
    dend_32 { pt3dadd( 332.338, 345.334, 20.8961, 0.2796 ) }
    dend_32 { pt3dadd( 331.428, 344.906, 19.6627, 0.3304 ) }
    dend_32 { pt3dadd( 330.472, 344.559, 18.5273, 0.3304 ) }
    dend_32 { pt3dadd( 329.639, 343.904, 17.8511, 0.3304 ) }
    dend_32 { pt3dadd( 328.721, 343.257, 18.3151, 0.2796 ) }
    dend_32 { pt3dadd( 328.124, 342.544, 19.4253, 0.2542 ) }
    dend_32 { pt3dadd( 328.556, 342.033, 21.2475, 0.2288 ) }
    dend_32 { pt3dadd( 329.496, 342.054, 22.7209, 0.2542 ) }
    dend_32 { pt3dadd( 330.526, 342.223, 23.8641, 0.2796 ) }
    dend_32 { pt3dadd( 330.903, 341.474, 25.2081, 0.305 ) }
    dend_32 { pt3dadd( 331.38, 340.706, 26.7739, 0.2796 ) }
    dend_32 { pt3dadd( 332.113, 340.581, 28.6051, 0.2796 ) }
    dend_32 { pt3dadd( 332.654, 341.311, 29.8032, 0.2796 ) }
    dend_32 { pt3dadd( 333.414, 342.029, 30.4962, 0.305 ) }
    dend_32 { pt3dadd( 334.441, 342.118, 29.8421, 0.3304 ) }
    dend_32 { pt3dadd( 335.318, 341.84, 28.2316, 0.3814 ) }
    dend_32 { pt3dadd( 335.964, 341.978, 26.031, 0.4322 ) }
    dend_32 { pt3dadd( 336.33, 341.891, 23.4192, 0.4068 ) }
    dend_32 { pt3dadd( 336.466, 340.928, 22.1357, 0.3304 ) }
    dend_32 { pt3dadd( 337.01, 339.948, 22.4535, 0.2796 ) }
    dend_32 { pt3dadd( 337.728, 339.352, 24.0537, 0.2796 ) }
    dend_32 { pt3dadd( 338.258, 338.489, 25.2053, 0.305 ) }
    dend_32 { pt3dadd( 338.309, 337.365, 25.3887, 0.2796 ) }
    dend_32 { pt3dadd( 338.828, 336.391, 25.59, 0.2542 ) }
    dend_32 { pt3dadd( 339.49, 335.678, 24.1326, 0.2288 ) }
    dend_32 { pt3dadd( 340.068, 335.007, 22.4815, 0.2288 ) }
    dend_32 { pt3dadd( 340.215, 333.979, 21.6138, 0.2288 ) }
    dend_32 { pt3dadd( 339.897, 332.951, 21.0848, 0.2288 ) }
    dend_32 { pt3dadd( 339.561, 332.192, 19.213, 0.2288 ) }
    dend_32 { pt3dadd( 338.891, 331.639, 17.8203, 0.2542 ) }
    dend_32 { pt3dadd( 337.899, 331.158, 18.097, 0.305 ) }
    dend_32 { pt3dadd( 337.265, 330.375, 18.7169, 0.356 ) }
    dend_32 { pt3dadd( 336.878, 329.352, 19.4132, 0.356 ) }
    dend_32 { pt3dadd( 336.235, 328.835, 21.0174, 0.305 ) }
    dend_32 { pt3dadd( 335.272, 329.107, 21.7759, 0.2542 ) }
    dend_32 { pt3dadd( 334.188, 329.005, 21.8859, 0.2288 ) }
    dend_32 { pt3dadd( 333.148, 328.577, 22.3152, 0.2288 ) }
    dend_32 { pt3dadd( 332.105, 328.476, 23.315, 0.2288 ) }
    dend_32 { pt3dadd( 331.174, 328.727, 22.3132, 0.2288 ) }
    dend_32 { pt3dadd( 330.105, 329.025, 21.9993, 0.2542 ) }
    dend_32 { pt3dadd( 329.16, 328.548, 22.9127, 0.3304 ) }
    dend_32 { pt3dadd( 329.014, 327.527, 24.08, 0.483 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 61/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 334.895, 350.432, 30.9823, 0.661 ) }
    dend_29 { pt3dadd( 335.64, 349.49, 31.9388, 0.6864 ) }
    dend_29 { pt3dadd( 336.463, 349.221, 33.6622, 0.788 ) }
    dend_29 { pt3dadd( 337.527, 349.549, 34.1415, 0.788 ) }
    dend_29 { pt3dadd( 338.634, 349.837, 34.1326, 0.7626 ) }
    dend_29 { pt3dadd( 339.753, 349.627, 33.9819, 0.661 ) }
    dend_29 { pt3dadd( 340.866, 349.65, 33.3441, 0.5338 ) }
    // Section: dend_27, id: dend_27, parent: dend_20 (entry count 68/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 324.784, 364.556, 32.7995, 0.4322 ) }
    dend_27 { pt3dadd( 324.967, 365.326, 32.8132, 0.6356 ) }
    dend_27 { pt3dadd( 325.289, 366.357, 32.0289, 0.6102 ) }
    dend_27 { pt3dadd( 325.573, 367.39, 31.0509, 0.5592 ) }
    dend_27 { pt3dadd( 326.034, 368.417, 30.8106, 0.5592 ) }
    dend_27 { pt3dadd( 326.577, 369.424, 30.8003, 0.5848 ) }
    dend_27 { pt3dadd( 327.049, 370.45, 30.52, 0.6102 ) }
    dend_27 { pt3dadd( 327.465, 371.508, 30.52, 0.5592 ) }
    dend_27 { pt3dadd( 327.823, 372.585, 30.52, 0.5338 ) }
    dend_27 { pt3dadd( 328.44, 373.509, 30.52, 0.483 ) }
    dend_27 { pt3dadd( 328.759, 374.598, 30.52, 0.5084 ) }
    dend_27 { pt3dadd( 329.082, 375.686, 30.6863, 0.483 ) }
    dend_27 { pt3dadd( 329.336, 376.797, 30.8, 0.4576 ) }
    dend_27 { pt3dadd( 329.72, 377.866, 30.8, 0.3814 ) }
    dend_27 { pt3dadd( 329.646, 378.975, 30.8, 0.305 ) }
    dend_27 { pt3dadd( 328.937, 379.848, 31.0814, 0.2796 ) }
    dend_27 { pt3dadd( 328.533, 380.894, 31.6296, 0.2796 ) }
    dend_27 { pt3dadd( 328.116, 381.943, 31.92, 0.305 ) }
    dend_27 { pt3dadd( 327.772, 383.016, 31.92, 0.305 ) }
    dend_27 { pt3dadd( 327.642, 384.15, 31.92, 0.305 ) }
    dend_27 { pt3dadd( 327.642, 385.293, 31.92, 0.305 ) }
    dend_27 { pt3dadd( 327.587, 386.417, 32.3518, 0.2796 ) }
    dend_27 { pt3dadd( 327.135, 387.38, 32.6309, 0.2542 ) }
    dend_27 { pt3dadd( 326.436, 388.143, 33.6725, 0.2288 ) }
    dend_27 { pt3dadd( 325.624, 388.897, 33.88, 0.2288 ) }
    dend_27 { pt3dadd( 325.357, 389.992, 34.0782, 0.2796 ) }
    dend_27 { pt3dadd( 324.875, 390.997, 34.16, 0.356 ) }
    dend_27 { pt3dadd( 324.667, 392.074, 34.44, 0.4576 ) }
    dend_27 { pt3dadd( 324.667, 393.218, 34.44, 0.4576 ) }
    dend_27 { pt3dadd( 324.782, 394.353, 34.4305, 0.4322 ) }
    dend_27 { pt3dadd( 324.854, 395.484, 34.1737, 0.4068 ) }
    dend_27 { pt3dadd( 325.157, 396.574, 34.16, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 325.697, 397.522, 34.16, 0.4322 ) }
    dend_27 { pt3dadd( 325.665, 398.66, 34.16, 0.356 ) }
    dend_27 { pt3dadd( 325.085, 399.513, 34.7802, 0.3304 ) }
    dend_27 { pt3dadd( 324.382, 400.398, 35.0952, 0.356 ) }
    dend_27 { pt3dadd( 324.095, 401.463, 35.5342, 0.4576 ) }
    dend_27 { pt3dadd( 324.302, 402.561, 35.56, 0.483 ) }
    dend_27 { pt3dadd( 324.721, 403.615, 35.56, 0.4576 ) }
    dend_27 { pt3dadd( 325.304, 404.552, 35.56, 0.3814 ) }
    dend_27 { pt3dadd( 325.697, 405.526, 35.84, 0.3304 ) }
    dend_27 { pt3dadd( 325.697, 406.67, 35.9212, 0.305 ) }
    dend_27 { pt3dadd( 325.697, 407.81, 36.12, 0.305 ) }
    dend_27 { pt3dadd( 325.697, 408.954, 36.12, 0.2796 ) }
    dend_27 { pt3dadd( 325.664, 410.095, 36.12, 0.2542 ) }
    dend_27 { pt3dadd( 325.279, 411.148, 36.12, 0.2288 ) }
    dend_27 { pt3dadd( 325.275, 412.267, 36.12, 0.2542 ) }
    dend_27 { pt3dadd( 325.181, 413.4, 36.12, 0.2796 ) }
    dend_27 { pt3dadd( 324.602, 414.358, 36.1939, 0.3304 ) }
    dend_27 { pt3dadd( 323.775, 415.112, 36.4, 0.3304 ) }
    dend_27 { pt3dadd( 323.633, 416.193, 36.7324, 0.3304 ) }
    dend_27 { pt3dadd( 323.189, 417.093, 37.9176, 0.3304 ) }
    dend_27 { pt3dadd( 322.722, 418.06, 38.0993, 0.356 ) }
    dend_27 { pt3dadd( 322.722, 419.201, 38.311, 0.3814 ) }
    dend_27 { pt3dadd( 322.503, 420.315, 38.36, 0.3304 ) }
    dend_27 { pt3dadd( 322.379, 421.437, 38.36, 0.305 ) }
    dend_27 { pt3dadd( 321.807, 422.262, 39.2, 0.305 ) }
    dend_27 { pt3dadd( 321.804, 423.376, 39.737, 0.305 ) }
    dend_27 { pt3dadd( 321.041, 424.05, 39.76, 0.305 ) }
    dend_27 { pt3dadd( 319.96, 424.312, 39.76, 0.356 ) }
    dend_27 { pt3dadd( 319.301, 425.141, 40.04, 0.4068 ) }
    dend_27 { pt3dadd( 319.008, 426.205, 40.04, 0.4576 ) }
    dend_27 { pt3dadd( 318.13, 426.825, 40.04, 0.4576 ) }
    dend_27 { pt3dadd( 317.636, 427.854, 40.04, 0.4322 ) }
    dend_27 { pt3dadd( 316.68, 428.462, 40.04, 0.4576 ) }
    dend_27 { pt3dadd( 316.023, 429.325, 40.5219, 0.483 ) }
    dend_27 { pt3dadd( 315.441, 430.286, 40.88, 0.5338 ) }
    dend_27 { pt3dadd( 314.96, 431.299, 40.88, 0.483 ) }
    dend_27 { pt3dadd( 314.703, 432.41, 40.88, 0.3814 ) }
    dend_27 { pt3dadd( 313.642, 432.546, 41.1639, 0.2796 ) }
    dend_27 { pt3dadd( 312.723, 432.83, 42.2573, 0.2288 ) }
    dend_27 { pt3dadd( 312.06, 433.745, 42.4654, 0.2796 ) }
    dend_27 { pt3dadd( 312.018, 434.854, 42.56, 0.4068 ) }
    dend_27 { pt3dadd( 312.477, 435.867, 42.9411, 0.5592 ) }
    dend_27 { pt3dadd( 313.05, 436.656, 43.9426, 0.6102 ) }
    dend_27 { pt3dadd( 313.456, 437.58, 43.96, 0.5084 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 44/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 324.784, 364.556, 32.7995, 0.4322 ) }
    dend_21 { pt3dadd( 325.24, 365.155, 32.314, 0.5592 ) }
    dend_21 { pt3dadd( 326.199, 365.722, 32.655, 0.5848 ) }
    dend_21 { pt3dadd( 326.988, 366.524, 33.0996, 0.661 ) }
    dend_21 { pt3dadd( 327.25, 367.608, 33.6025, 0.7372 ) }
    dend_21 { pt3dadd( 327.618, 368.669, 34.1407, 0.7626 ) }
    dend_21 { pt3dadd( 328.255, 369.616, 34.16, 0.8136 ) }
    dend_21 { pt3dadd( 328.972, 370.507, 34.16, 0.8898 ) }
    dend_21 { pt3dadd( 329.757, 371.34, 34.16, 0.9406 ) }
    dend_21 { pt3dadd( 330.442, 372.255, 34.16, 0.9152 ) }
    dend_21 { pt3dadd( 331.069, 373.213, 34.16, 0.8898 ) }
    dend_21 { pt3dadd( 331.484, 374.278, 34.1594, 0.9152 ) }
    dend_21 { pt3dadd( 331.972, 375.312, 34.1569, 0.9406 ) }
    dend_21 { pt3dadd( 332.496, 376.329, 34.1435, 0.839 ) }
    dend_21 { pt3dadd( 332.925, 377.39, 34.0665, 0.6356 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 59/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 311.637, 344.299, 22.9894, 0.9152 ) }
    dend_15 { pt3dadd( 309.759, 344.541, 22.9603, 0.788 ) }
    dend_15 { pt3dadd( 308.684, 344.931, 22.9575, 0.9152 ) }
    dend_15 { pt3dadd( 307.714, 345.537, 22.9477, 0.9406 ) }
    dend_15 { pt3dadd( 306.728, 346.117, 22.8973, 1.0424 ) }
    dend_15 { pt3dadd( 305.716, 346.639, 22.6416, 1.0678 ) }
    dend_15 { pt3dadd( 304.765, 347.143, 21.6958, 1.0424 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 311.637, 344.299, 22.9894, 0.9152 ) }
    dend_14 { pt3dadd( 310.321, 343.075, 23.2935, 0.7118 ) }
    dend_14 { pt3dadd( 309.492, 342.395, 23.9512, 0.5338 ) }
    dend_14 { pt3dadd( 308.412, 342.099, 24.3001, 0.4322 ) }
    dend_14 { pt3dadd( 307.376, 341.741, 24.8158, 0.4068 ) }
    dend_14 { pt3dadd( 306.599, 340.961, 25.1476, 0.483 ) }
    dend_14 { pt3dadd( 305.979, 340.001, 25.0838, 0.5848 ) }
    dend_14 { pt3dadd( 305.235, 339.191, 24.5431, 0.6102 ) }
    dend_14 { pt3dadd( 304.455, 338.487, 23.4704, 0.6102 ) }
    dend_14 { pt3dadd( 303.966, 337.533, 23.0168, 0.5592 ) }
    dend_14 { pt3dadd( 303.841, 336.414, 23.2624, 0.6102 ) }
    dend_14 { pt3dadd( 303.795, 335.281, 23.6272, 0.6102 ) }
    dend_14 { pt3dadd( 303.495, 334.232, 23.1529, 0.6356 ) }
    dend_14 { pt3dadd( 303.115, 333.179, 22.6444, 0.6102 ) }
    dend_14 { pt3dadd( 302.737, 332.126, 22.0662, 0.6102 ) }
    dend_14 { pt3dadd( 302.206, 331.129, 21.8123, 0.6356 ) }
    dend_14 { pt3dadd( 301.453, 330.28, 21.6572, 0.661 ) }
    dend_14 { pt3dadd( 300.545, 329.639, 21.1008, 0.6864 ) }
    dend_14 { pt3dadd( 299.584, 329.038, 20.8163, 0.661 ) }
    dend_14 { pt3dadd( 298.764, 328.26, 21.0151, 0.6356 ) }
    dend_14 { pt3dadd( 297.907, 327.553, 21.623, 0.5592 ) }
    dend_14 { pt3dadd( 296.954, 326.94, 21.9078, 0.5084 ) }
    dend_14 { pt3dadd( 296.001, 326.352, 22.4412, 0.4576 ) }
    dend_14 { pt3dadd( 295.001, 325.842, 22.2001, 0.5084 ) }
    dend_14 { pt3dadd( 293.951, 325.405, 21.9106, 0.5848 ) }
    dend_14 { pt3dadd( 292.912, 324.934, 21.9976, 0.6864 ) }
    dend_14 { pt3dadd( 291.889, 324.501, 22.6355, 0.7372 ) }
    dend_14 { pt3dadd( 291.002, 323.818, 23.1078, 0.7372 ) }
    dend_14 { pt3dadd( 290.204, 323.054, 23.8274, 0.661 ) }
    dend_14 { pt3dadd( 289.369, 322.283, 24.0593, 0.5592 ) }
    dend_14 { pt3dadd( 288.408, 321.668, 24.0744, 0.483 ) }
    dend_14 { pt3dadd( 287.313, 321.377, 24.0338, 0.5084 ) }
    dend_14 { pt3dadd( 286.322, 320.835, 23.7964, 0.6102 ) }
    dend_14 { pt3dadd( 285.572, 320.035, 23.0824, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( 285.014, 319.039, 22.9309, 0.788 ) }
    dend_14 { pt3dadd( 284.39, 318.086, 22.7746, 0.7626 ) }
    dend_14 { pt3dadd( 283.674, 317.224, 22.223, 0.7118 ) }
    dend_14 { pt3dadd( 282.835, 316.48, 21.8226, 0.6864 ) }
    dend_14 { pt3dadd( 281.83, 315.936, 21.7336, 0.6864 ) }
    dend_14 { pt3dadd( 280.854, 315.366, 21.3654, 0.661 ) }
    dend_14 { pt3dadd( 279.936, 314.74, 20.851, 0.6356 ) }
    dend_14 { pt3dadd( 278.983, 314.138, 21.1918, 0.6102 ) }
    dend_14 { pt3dadd( 278.167, 313.385, 21.7865, 0.5848 ) }
    dend_14 { pt3dadd( 277.336, 312.604, 21.8414, 0.5338 ) }
    dend_14 { pt3dadd( 276.425, 311.914, 21.8462, 0.4576 ) }
    dend_14 { pt3dadd( 275.58, 311.143, 21.8655, 0.4576 ) }
    dend_14 { pt3dadd( 274.796, 310.312, 21.9369, 0.483 ) }
    dend_14 { pt3dadd( 274.09, 309.426, 22.1791, 0.5592 ) }
    dend_14 { pt3dadd( 273.51, 308.461, 22.381, 0.5338 ) }
    dend_14 { pt3dadd( 272.833, 307.568, 21.9803, 0.5592 ) }
    dend_14 { pt3dadd( 271.971, 306.835, 22.164, 0.5592 ) }
    dend_14 { pt3dadd( 270.992, 306.293, 22.7069, 0.6864 ) }
    dend_14 { pt3dadd( 270.021, 305.731, 22.9606, 0.6864 ) }
    dend_14 { pt3dadd( 269.264, 304.882, 22.9628, 0.661 ) }
    dend_14 { pt3dadd( 268.767, 303.868, 22.9774, 0.483 ) }
    dend_14 { pt3dadd( 268.568, 302.746, 23.0779, 0.4322 ) }
    dend_14 { pt3dadd( 268.279, 301.707, 23.5287, 0.4322 ) }
    dend_14 { pt3dadd( 267.471, 300.983, 24.1464, 0.5084 ) }
    dend_14 { pt3dadd( 266.47, 300.452, 24.4832, 0.5084 ) }
    dend_14 { pt3dadd( 265.5, 299.893, 24.549, 0.4576 ) }
    dend_14 { pt3dadd( 264.621, 299.201, 24.1223, 0.4068 ) }
    dend_14 { pt3dadd( 263.931, 298.303, 23.9434, 0.3814 ) }
    dend_14 { pt3dadd( 263.603, 297.243, 23.6785, 0.3814 ) }
    dend_14 { pt3dadd( 263.578, 296.106, 23.6328, 0.4322 ) }
    dend_14 { pt3dadd( 263.443, 295.023, 23.3086, 0.5338 ) }
    dend_14 { pt3dadd( 263.146, 293.985, 22.3838, 0.661 ) }
    dend_14 { pt3dadd( 262.753, 292.942, 21.9055, 0.7372 ) }
    dend_14 { pt3dadd( 262.294, 291.895, 21.8394, 0.7372 ) }
    dend_14 { pt3dadd( 262.024, 290.796, 21.8364, 0.661 ) }
    dend_14 { pt3dadd( 261.951, 289.655, 21.8151, 0.5848 ) }
    dend_14 { pt3dadd( 261.8, 288.528, 21.6941, 0.5084 ) }
    dend_14 { pt3dadd( 261.508, 287.443, 21.2372, 0.5084 ) }
    dend_14 { pt3dadd( 261.169, 286.374, 21.0832, 0.5338 ) }
    dend_14 { pt3dadd( 260.759, 285.328, 21.5715, 0.6102 ) }
    dend_14 { pt3dadd( 260.022, 284.53, 21.84, 0.661 ) }
    dend_14 { pt3dadd( 259.046, 283.934, 21.8397, 0.661 ) }
    dend_14 { pt3dadd( 258.045, 283.38, 21.8392, 0.6102 ) }
    dend_14 { pt3dadd( 257.193, 282.632, 21.8358, 0.5338 ) }
    dend_14 { pt3dadd( 256.519, 281.712, 21.8198, 0.4322 ) }
    dend_14 { pt3dadd( 255.989, 280.701, 21.7277, 0.356 ) }
    dend_14 { pt3dadd( 255.602, 279.638, 21.371, 0.356 ) }
    dend_14 { pt3dadd( 255.252, 278.565, 20.9112, 0.4322 ) }
    dend_14 { pt3dadd( 254.692, 277.584, 20.6074, 0.483 ) }
    dend_14 { pt3dadd( 253.953, 276.754, 19.9923, 0.4576 ) }
    dend_14 { pt3dadd( 253.467, 275.741, 19.7464, 0.3814 ) }
    dend_14 { pt3dadd( 253.054, 274.695, 20.1796, 0.3304 ) }
    dend_14 { pt3dadd( 252.275, 273.914, 19.7828, 0.3304 ) }
    dend_14 { pt3dadd( 251.26, 273.408, 19.8386, 0.4068 ) }
    dend_14 { pt3dadd( 250.617, 272.516, 20.4019, 0.5084 ) }
    dend_14 { pt3dadd( 250.359, 271.449, 19.7498, 0.5592 ) }
    dend_14 { pt3dadd( 249.872, 270.42, 19.6092, 0.5084 ) }
    dend_14 { pt3dadd( 249.279, 269.443, 19.6162, 0.4068 ) }
    dend_14 { pt3dadd( 248.5, 268.608, 19.7336, 0.305 ) }
    dend_14 { pt3dadd( 247.79, 267.81, 20.72, 0.2542 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 60/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 299.27, 359.517, 32.6385, 0.6864 ) }
    dend_8 { pt3dadd( 298.366, 360.251, 34.1183, 0.788 ) }
    dend_8 { pt3dadd( 297.694, 361.177, 34.1606, 0.7372 ) }
    dend_8 { pt3dadd( 297.011, 362.095, 34.1625, 0.661 ) }
    dend_8 { pt3dadd( 296.084, 362.744, 34.176, 0.661 ) }
    dend_8 { pt3dadd( 295.067, 363.266, 34.2504, 0.7118 ) }
    dend_8 { pt3dadd( 294.031, 363.708, 34.7029, 0.839 ) }
    dend_8 { pt3dadd( 292.968, 364.072, 35.226, 0.9406 ) }
    dend_8 { pt3dadd( 291.856, 364.326, 35.3702, 0.9406 ) }
    dend_8 { pt3dadd( 290.776, 364.639, 35.8602, 0.9152 ) }
    dend_8 { pt3dadd( 289.686, 364.919, 36.3504, 0.8644 ) }
    dend_8 { pt3dadd( 288.567, 364.744, 36.402, 0.8644 ) }
    dend_8 { pt3dadd( 287.429, 364.811, 36.4134, 0.8136 ) }
    dend_8 { pt3dadd( 286.495, 365.452, 36.4622, 0.788 ) }
    dend_8 { pt3dadd( 285.635, 366.201, 36.6475, 0.7626 ) }
    dend_8 { pt3dadd( 284.681, 366.756, 37.3478, 0.7372 ) }
    dend_8 { pt3dadd( 283.658, 367.262, 37.5122, 0.7372 ) }
    dend_8 { pt3dadd( 282.629, 367.759, 37.5211, 0.7626 ) }
    dend_8 { pt3dadd( 281.59, 368.238, 37.525, 0.839 ) }
    dend_8 { pt3dadd( 280.501, 368.589, 37.5519, 0.8644 ) }
    dend_8 { pt3dadd( 279.385, 368.378, 37.7238, 0.839 ) }
    dend_8 { pt3dadd( 278.286, 368.337, 38.4742, 0.7372 ) }
    dend_8 { pt3dadd( 277.22, 368.739, 38.64, 0.7118 ) }
    dend_8 { pt3dadd( 276.204, 369.265, 38.6448, 0.661 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 299.27, 359.517, 32.6385, 0.6864 ) }
    dend_1 { pt3dadd( 298.448, 359.592, 32.9969, 0.788 ) }
    dend_1 { pt3dadd( 297.31, 359.689, 33.0089, 0.8136 ) }
    dend_1 { pt3dadd( 296.216, 359.512, 32.8938, 0.8136 ) }
    dend_1 { pt3dadd( 295.166, 359.127, 32.4111, 0.7372 ) }
    dend_1 { pt3dadd( 294.088, 358.815, 31.9771, 0.6356 ) }
    dend_1 { pt3dadd( 292.966, 358.636, 31.9371, 0.5338 ) }
    dend_1 { pt3dadd( 291.826, 358.543, 32.002, 0.4576 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 92/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 326.842, 339.882, 36.4, 0.6864 ) }
    apic_18 { pt3dadd( 326.726, 338.615, 36.7455, 0.6864 ) }
    apic_18 { pt3dadd( 326.702, 337.522, 37.5455, 0.7372 ) }
    apic_18 { pt3dadd( 326.593, 336.45, 38.4846, 0.7118 ) }
    apic_18 { pt3dadd( 326.111, 335.494, 39.3621, 0.6356 ) }
    apic_18 { pt3dadd( 325.184, 334.99, 40.2164, 0.5848 ) }
    apic_18 { pt3dadd( 324.118, 335.2, 40.8075, 0.6356 ) }
    apic_18 { pt3dadd( 323.122, 335.75, 40.8663, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_18 { pt3dadd( 322.244, 336.484, 40.8201, 0.6864 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 1/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 326.842, 339.882, 36.4, 0.6864 ) }
    apic_1 { pt3dadd( 327.234, 338.512, 36.4, 0.788 ) }
    apic_1 { pt3dadd( 327.524, 337.405, 36.4, 0.8898 ) }
    apic_1 { pt3dadd( 327.641, 336.267, 36.4, 1.0168 ) }
    apic_1 { pt3dadd( 327.66, 335.123, 36.4, 1.0678 ) }
    apic_1 { pt3dadd( 327.748, 333.983, 36.4, 1.0678 ) }
    apic_1 { pt3dadd( 328.063, 332.883, 36.3992, 0.966 ) }
    apic_1 { pt3dadd( 328.122, 331.742, 36.3944, 0.8898 ) }
    apic_1 { pt3dadd( 328.271, 330.608, 36.3616, 0.8644 ) }
    apic_1 { pt3dadd( 328.585, 329.511, 36.1726, 0.8136 ) }
    apic_1 { pt3dadd( 328.849, 328.442, 35.4096, 0.6864 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 12/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 307.089, 376.634, 40.9702, 0.3304 ) }
    dend_45 { pt3dadd( 306.86, 376.94, 38.36, 0.356 ) }
    dend_45 { pt3dadd( 306.375, 377.959, 38.36, 0.3814 ) }
    dend_45 { pt3dadd( 306.363, 379.103, 38.36, 0.483 ) }
    dend_45 { pt3dadd( 306.363, 380.247, 38.36, 0.5084 ) }
    dend_45 { pt3dadd( 306.438, 381.382, 38.36, 0.483 ) }
    dend_45 { pt3dadd( 306.875, 382.432, 38.36, 0.3814 ) }
    dend_45 { pt3dadd( 307.551, 383.329, 38.1934, 0.3304 ) }
    dend_45 { pt3dadd( 308.194, 384.116, 38.08, 0.305 ) }
    dend_45 { pt3dadd( 308.194, 385.26, 38.08, 0.2796 ) }
    dend_45 { pt3dadd( 308.183, 386.403, 38.08, 0.2542 ) }
    dend_45 { pt3dadd( 307.997, 387.532, 38.08, 0.2796 ) }
    dend_45 { pt3dadd( 307.652, 388.601, 37.9123, 0.356 ) }
    dend_45 { pt3dadd( 307.642, 389.737, 37.8, 0.483 ) }
    dend_45 { pt3dadd( 308.157, 390.717, 37.8, 0.5338 ) }
    dend_45 { pt3dadd( 308.792, 391.655, 37.8, 0.5848 ) }
    dend_45 { pt3dadd( 309.105, 392.717, 37.8, 0.5848 ) }
    dend_45 { pt3dadd( 309.433, 393.78, 37.6051, 0.6102 ) }
    dend_45 { pt3dadd( 309.883, 394.769, 36.8718, 0.5848 ) }
    dend_45 { pt3dadd( 310.207, 395.846, 36.5683, 0.5592 ) }
    dend_45 { pt3dadd( 310.313, 396.967, 36.2998, 0.5592 ) }
    dend_45 { pt3dadd( 310.71, 397.905, 35.2993, 0.5592 ) }
    dend_45 { pt3dadd( 311.048, 398.918, 34.72, 0.5592 ) }
    dend_45 { pt3dadd( 311.397, 399.962, 34.2731, 0.5338 ) }
    dend_45 { pt3dadd( 311.397, 401.09, 33.8349, 0.5848 ) }
    dend_45 { pt3dadd( 311.607, 402.149, 33.6, 0.661 ) }
    dend_45 { pt3dadd( 311.84, 403.245, 33.472, 0.7372 ) }
    dend_45 { pt3dadd( 312.242, 404.274, 33.32, 0.7626 ) }
    dend_45 { pt3dadd( 313.193, 404.803, 33.04, 0.6864 ) }
    dend_45 { pt3dadd( 314.115, 405.422, 33.04, 0.5848 ) }
    dend_45 { pt3dadd( 314.628, 406.409, 32.7835, 0.4322 ) }
    dend_45 { pt3dadd( 314.893, 407.489, 32.48, 0.356 ) }
    dend_45 { pt3dadd( 315.286, 408.481, 32.48, 0.305 ) }
    dend_45 { pt3dadd( 315.204, 409.592, 31.9141, 0.3304 ) }
    dend_45 { pt3dadd( 315.401, 410.618, 31.36, 0.356 ) }
    dend_45 { pt3dadd( 316.086, 411.373, 30.5712, 0.356 ) }
    dend_45 { pt3dadd( 316.087, 412.514, 30.4836, 0.3304 ) }
    dend_45 { pt3dadd( 316.087, 413.651, 30.2498, 0.3304 ) }
    dend_45 { pt3dadd( 316.087, 414.766, 29.7419, 0.4068 ) }
    dend_45 { pt3dadd( 316.311, 415.868, 29.68, 0.5084 ) }
    dend_45 { pt3dadd( 317.1, 416.677, 29.6864, 0.5848 ) }
    dend_45 { pt3dadd( 317.787, 417.538, 30.2915, 0.6102 ) }
    dend_45 { pt3dadd( 318.032, 418.623, 30.6544, 0.5848 ) }
    dend_45 { pt3dadd( 318.041, 419.751, 31.0554, 0.5592 ) }
    dend_45 { pt3dadd( 318.379, 420.819, 31.36, 0.483 ) }
    dend_45 { pt3dadd( 318.945, 421.762, 31.8674, 0.4322 ) }
    dend_45 { pt3dadd( 319.373, 422.802, 31.92, 0.3814 ) }
    dend_45 { pt3dadd( 319.519, 423.934, 31.92, 0.4322 ) }
    dend_45 { pt3dadd( 319.528, 425.078, 31.92, 0.483 ) }
    dend_45 { pt3dadd( 319.841, 426.168, 31.92, 0.5338 ) }
    dend_45 { pt3dadd( 320.206, 427.249, 31.9124, 0.5084 ) }
    dend_45 { pt3dadd( 320.437, 428.359, 31.64, 0.483 ) }
    dend_45 { pt3dadd( 320.663, 429.458, 31.64, 0.483 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 307.089, 376.634, 40.9702, 0.3304 ) }
    dend_44 { pt3dadd( 306.217, 376.943, 40.973, 0.5592 ) }
    dend_44 { pt3dadd( 305.164, 377.21, 40.1632, 0.6356 ) }
    dend_44 { pt3dadd( 304.206, 377.793, 39.7802, 0.6864 ) }
    dend_44 { pt3dadd( 303.269, 378.448, 39.688, 0.661 ) }
    dend_44 { pt3dadd( 302.358, 379.13, 39.4114, 0.6356 ) }
    dend_44 { pt3dadd( 301.358, 379.68, 39.2549, 0.5848 ) }
    dend_44 { pt3dadd( 300.365, 380.211, 39.7163, 0.5592 ) }
    dend_44 { pt3dadd( 299.434, 380.868, 39.8745, 0.5592 ) }
    dend_44 { pt3dadd( 298.517, 381.523, 40.348, 0.6102 ) }
    dend_44 { pt3dadd( 297.521, 382.047, 40.85, 0.661 ) }
    dend_44 { pt3dadd( 296.524, 382.603, 40.9114, 0.6864 ) }
    dend_44 { pt3dadd( 295.619, 383.301, 41.0278, 0.6864 ) }
    dend_44 { pt3dadd( 294.725, 383.976, 41.5993, 0.661 ) }
    dend_44 { pt3dadd( 293.91, 384.759, 41.9922, 0.6102 ) }
    dend_44 { pt3dadd( 293.319, 385.737, 42.0409, 0.5338 ) }
    dend_44 { pt3dadd( 292.559, 386.585, 42.252, 0.483 ) }
    dend_44 { pt3dadd( 291.961, 387.52, 42.9285, 0.4576 ) }
    dend_44 { pt3dadd( 291.471, 388.548, 42.7064, 0.4576 ) }
    dend_44 { pt3dadd( 291.148, 389.62, 42.1501, 0.4576 ) }
    dend_44 { pt3dadd( 290.597, 390.606, 42.5793, 0.483 ) }
    dend_44 { pt3dadd( 290.226, 391.683, 42.7924, 0.5338 ) }
    dend_44 { pt3dadd( 289.9, 392.749, 42.1806, 0.5848 ) }
    dend_44 { pt3dadd( 289.552, 393.836, 42.3032, 0.5848 ) }
    dend_44 { pt3dadd( 289.068, 394.858, 42.0395, 0.5338 ) }
    dend_44 { pt3dadd( 288.238, 395.638, 42.1859, 0.4576 ) }
    dend_44 { pt3dadd( 287.268, 396.188, 42.768, 0.4322 ) }
    dend_44 { pt3dadd( 286.198, 396.532, 43.1808, 0.4576 ) }
    dend_44 { pt3dadd( 285.3, 397.224, 43.4227, 0.5592 ) }
    dend_44 { pt3dadd( 284.608, 398.085, 44.1134, 0.5848 ) }
    dend_44 { pt3dadd( 284.016, 399.061, 44.2526, 0.5848 ) }
    dend_44 { pt3dadd( 283.327, 399.938, 44.3181, 0.483 ) }
    dend_44 { pt3dadd( 282.26, 400.295, 44.6482, 0.4322 ) }
    dend_44 { pt3dadd( 281.185, 400.403, 45.5308, 0.3304 ) }
    dend_44 { pt3dadd( 280.152, 400.642, 46.5296, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 279.534, 401.447, 46.76, 0.2288 ) }
    dend_44 { pt3dadd( 278.853, 402.346, 46.76, 0.2288 ) }
    dend_44 { pt3dadd( 277.951, 403.043, 46.76, 0.2288 ) }
    dend_44 { pt3dadd( 276.988, 403.661, 46.76, 0.2288 ) }
    dend_44 { pt3dadd( 276.102, 404.371, 46.76, 0.2542 ) }
    dend_44 { pt3dadd( 275.168, 404.995, 47.04, 0.2796 ) }
    dend_44 { pt3dadd( 274.335, 405.579, 47.3894, 0.305 ) }
    dend_44 { pt3dadd( 273.429, 406.228, 47.6, 0.2796 ) }
    dend_44 { pt3dadd( 272.455, 406.827, 47.6, 0.2542 ) }
    dend_44 { pt3dadd( 271.358, 407.122, 47.6, 0.2288 ) }
    dend_44 { pt3dadd( 270.534, 407.745, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 269.699, 408.5, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 268.707, 409.039, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 267.806, 409.73, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 266.768, 410.161, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 265.652, 410.405, 48.16, 0.2288 ) }
    dend_44 { pt3dadd( 264.51, 410.467, 48.16, 0.2796 ) }
    dend_44 { pt3dadd( 263.807, 411.251, 48.193, 0.3304 ) }
    dend_44 { pt3dadd( 263.129, 412.142, 48.2692, 0.4576 ) }
    dend_44 { pt3dadd( 262.091, 412.512, 49.0274, 0.483 ) }
    dend_44 { pt3dadd( 261.032, 412.776, 49.7437, 0.5338 ) }
    dend_44 { pt3dadd( 259.916, 412.773, 50.3549, 0.4322 ) }
    dend_44 { pt3dadd( 258.799, 412.771, 50.9662, 0.3814 ) }
    dend_44 { pt3dadd( 257.742, 412.573, 51.4058, 0.2796 ) }
    dend_44 { pt3dadd( 256.836, 411.875, 51.4058, 0.2542 ) }
    dend_44 { pt3dadd( 255.895, 411.346, 51.4604, 0.2288 ) }
    dend_44 { pt3dadd( 254.79, 411.613, 51.7737, 0.2796 ) }
    dend_44 { pt3dadd( 253.685, 411.882, 52.0867, 0.3304 ) }
    dend_44 { pt3dadd( 252.588, 412.149, 52.4986, 0.3814 ) }
    dend_44 { pt3dadd( 251.515, 412.415, 53.2165, 0.356 ) }
    dend_44 { pt3dadd( 250.441, 412.681, 53.9344, 0.3304 ) }
    dend_44 { pt3dadd( 249.368, 412.946, 54.6526, 0.305 ) }
    dend_44 { pt3dadd( 248.295, 413.212, 55.3706, 0.305 ) }
    dend_44 { pt3dadd( 247.571, 414.013, 55.5366, 0.305 ) }
    dend_44 { pt3dadd( 247.408, 415.13, 55.5366, 0.305 ) }
    dend_44 { pt3dadd( 247.387, 416.272, 55.5366, 0.356 ) }
    dend_44 { pt3dadd( 247.429, 417.415, 55.5366, 0.4322 ) }
    // Section: dend_40, id: dend_40, parent: dend_35 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 311.367, 355.596, 41.188, 0.356 ) }
    dend_40 { pt3dadd( 311.353, 355.529, 42.0854, 0.305 ) }
    dend_40 { pt3dadd( 311.995, 356.013, 43.4456, 0.3304 ) }
    dend_40 { pt3dadd( 312.827, 356.69, 44.4181, 0.4068 ) }
    dend_40 { pt3dadd( 313.659, 357.368, 45.3905, 0.483 ) }
    dend_40 { pt3dadd( 314.449, 358.189, 45.439, 0.5338 ) }
    dend_40 { pt3dadd( 315.237, 359.018, 45.439, 0.5084 ) }
    dend_40 { pt3dadd( 315.941, 359.914, 45.439, 0.483 ) }
    dend_40 { pt3dadd( 316.561, 360.876, 45.4406, 0.4068 ) }
    dend_40 { pt3dadd( 317.351, 361.677, 45.9332, 0.356 ) }
    dend_40 { pt3dadd( 318.142, 362.479, 46.4254, 0.305 ) }
    dend_40 { pt3dadd( 318.934, 363.281, 46.9179, 0.305 ) }
    dend_40 { pt3dadd( 319.78, 363.977, 47.5283, 0.2796 ) }
    dend_40 { pt3dadd( 320.775, 364.396, 48.4509, 0.3304 ) }
    dend_40 { pt3dadd( 321.772, 364.816, 49.3732, 0.4322 ) }
    dend_40 { pt3dadd( 322.767, 365.235, 50.2956, 0.5848 ) }
    dend_40 { pt3dadd( 323.762, 365.653, 51.2179, 0.6102 ) }
    dend_40 { pt3dadd( 324.728, 366.232, 51.5612, 0.5338 ) }
    dend_40 { pt3dadd( 325.686, 366.852, 51.7566, 0.4068 ) }
    dend_40 { pt3dadd( 326.645, 367.471, 51.9518, 0.305 ) }
    dend_40 { pt3dadd( 327.604, 368.09, 52.1469, 0.2542 ) }
    dend_40 { pt3dadd( 328.562, 368.71, 52.3424, 0.2542 ) }
    dend_40 { pt3dadd( 329.521, 369.329, 52.5375, 0.3304 ) }
    dend_40 { pt3dadd( 330.48, 369.948, 52.733, 0.4576 ) }
    dend_40 { pt3dadd( 331.282, 370.751, 52.7828, 0.5338 ) }
    dend_40 { pt3dadd( 332.187, 371.259, 52.7828, 0.5084 ) }
    dend_40 { pt3dadd( 333.33, 371.222, 52.7828, 0.3814 ) }
    dend_40 { pt3dadd( 334.225, 370.643, 52.7828, 0.3304 ) }
    dend_40 { pt3dadd( 335.002, 369.804, 52.7828, 0.3304 ) }
    dend_40 { pt3dadd( 336.064, 369.599, 52.7828, 0.4322 ) }
    dend_40 { pt3dadd( 337.208, 369.575, 52.7828, 0.4322 ) }
    dend_40 { pt3dadd( 338.346, 369.597, 52.9295, 0.4576 ) }
    dend_40 { pt3dadd( 339.472, 369.704, 53.3397, 0.3814 ) }
    dend_40 { pt3dadd( 340.599, 369.811, 53.7496, 0.3814 ) }
    dend_40 { pt3dadd( 341.725, 369.918, 54.1596, 0.3304 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 311.367, 355.596, 41.188, 0.356 ) }
    dend_36 { pt3dadd( 311.7, 354.568, 43.2911, 0.4068 ) }
    dend_36 { pt3dadd( 311.87, 353.684, 44.7152, 0.5848 ) }
    dend_36 { pt3dadd( 311.3, 352.88, 45.9822, 0.661 ) }
    dend_36 { pt3dadd( 310.414, 352.203, 46.277, 0.5848 ) }
    dend_36 { pt3dadd( 309.415, 351.701, 45.7825, 0.4322 ) }
    dend_36 { pt3dadd( 308.397, 351.732, 45.3844, 0.3304 ) }
    dend_36 { pt3dadd( 307.652, 352.524, 45.5042, 0.305 ) }
    dend_36 { pt3dadd( 307.099, 353.488, 46.006, 0.305 ) }
    dend_36 { pt3dadd( 306.184, 353.81, 46.3042, 0.3814 ) }
    dend_36 { pt3dadd( 305.1, 353.523, 45.8993, 0.5338 ) }
    dend_36 { pt3dadd( 304.191, 352.948, 46.2266, 0.6864 ) }
    dend_36 { pt3dadd( 303.484, 352.16, 47.2511, 0.7372 ) }
    dend_36 { pt3dadd( 302.988, 351.578, 49.3251, 0.6356 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 340.866, 349.65, 33.3441, 0.5338 ) }
    dend_31 { pt3dadd( 342.345, 349.835, 34.16, 0.839 ) }
    dend_31 { pt3dadd( 343.489, 349.835, 34.16, 0.839 ) }
    dend_31 { pt3dadd( 344.624, 349.95, 34.16, 0.6864 ) }
    dend_31 { pt3dadd( 345.768, 349.95, 34.16, 0.5084 ) }
    dend_31 { pt3dadd( 346.842, 349.807, 34.16, 0.4576 ) }
    dend_31 { pt3dadd( 347.56, 348.933, 34.16, 0.5592 ) }
    dend_31 { pt3dadd( 348.655, 348.691, 34.16, 0.7118 ) }
    dend_31 { pt3dadd( 349.794, 348.691, 34.365, 0.8136 ) }
    dend_31 { pt3dadd( 350.913, 348.85, 34.44, 0.7372 ) }
    dend_31 { pt3dadd( 351.961, 349.28, 34.6825, 0.6102 ) }
    dend_31 { pt3dadd( 352.915, 349.896, 34.72, 0.4576 ) }
    dend_31 { pt3dadd( 353.944, 350.31, 34.72, 0.4068 ) }
    dend_31 { pt3dadd( 355.023, 350.61, 34.72, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( 356.167, 350.636, 34.72, 0.3814 ) }
    dend_31 { pt3dadd( 357.267, 350.636, 35.28, 0.3814 ) }
    dend_31 { pt3dadd( 358.411, 350.636, 35.28, 0.4068 ) }
    dend_31 { pt3dadd( 359.546, 350.522, 35.28, 0.4576 ) }
    dend_31 { pt3dadd( 360.671, 350.602, 35.6028, 0.5592 ) }
    dend_31 { pt3dadd( 361.756, 350.763, 36.3059, 0.5848 ) }
    dend_31 { pt3dadd( 362.861, 351.051, 36.4, 0.5338 ) }
    dend_31 { pt3dadd( 364.001, 351.094, 36.4, 0.4068 ) }
    dend_31 { pt3dadd( 365.145, 351.094, 36.4, 0.3304 ) }
    dend_31 { pt3dadd( 366.19, 350.709, 36.4, 0.3304 ) }
    dend_31 { pt3dadd( 367.326, 350.636, 36.4, 0.3814 ) }
    dend_31 { pt3dadd( 367.826, 350.178, 37.8, 0.5592 ) }
    dend_31 { pt3dadd( 368.824, 350.622, 37.8, 0.5592 ) }
    dend_31 { pt3dadd( 369.4, 351.602, 37.8, 0.5084 ) }
    dend_31 { pt3dadd( 370.441, 351.894, 37.8148, 0.4576 ) }
    dend_31 { pt3dadd( 371.503, 351.894, 38.8578, 0.4576 ) }
    dend_31 { pt3dadd( 372.592, 351.969, 39.48, 0.4068 ) }
    dend_31 { pt3dadd( 373.694, 352.228, 39.48, 0.3304 ) }
    dend_31 { pt3dadd( 374.707, 352.501, 39.76, 0.2796 ) }
    dend_31 { pt3dadd( 375.749, 352.924, 40.04, 0.305 ) }
    dend_31 { pt3dadd( 376.742, 353.34, 40.04, 0.3814 ) }
    dend_31 { pt3dadd( 377.553, 354.14, 40.04, 0.4068 ) }
    dend_31 { pt3dadd( 378.42, 354.857, 40.04, 0.4068 ) }
    dend_31 { pt3dadd( 379.371, 354.983, 41.3297, 0.356 ) }
    dend_31 { pt3dadd( 380.259, 354.983, 43.0797, 0.3304 ) }
    dend_31 { pt3dadd( 381.285, 355.273, 43.9435, 0.2796 ) }
    dend_31 { pt3dadd( 382.358, 355.626, 43.96, 0.2796 ) }
    dend_31 { pt3dadd( 383.462, 355.91, 43.96, 0.2796 ) }
    dend_31 { pt3dadd( 384.516, 356.168, 43.4, 0.305 ) }
    dend_31 { pt3dadd( 385.653, 356.242, 43.4, 0.2796 ) }
    dend_31 { pt3dadd( 386.775, 356.175, 43.8424, 0.2796 ) }
    dend_31 { pt3dadd( 387.901, 356.127, 43.8284, 0.3304 ) }
    dend_31 { pt3dadd( 388.901, 356.356, 43.12, 0.4068 ) }
    dend_31 { pt3dadd( 390.044, 356.356, 43.12, 0.4576 ) }
    dend_31 { pt3dadd( 391.187, 356.356, 43.2104, 0.4068 ) }
    dend_31 { pt3dadd( 392.249, 356.74, 43.4, 0.356 ) }
    dend_31 { pt3dadd( 393.33, 357.025, 42.9024, 0.2796 ) }
    dend_31 { pt3dadd( 394.47, 357.042, 42.84, 0.2542 ) }
    dend_31 { pt3dadd( 395.605, 357.042, 43.0774, 0.2288 ) }
    dend_31 { pt3dadd( 396.729, 357.206, 43.0217, 0.2288 ) }
    dend_31 { pt3dadd( 397.821, 357.497, 42.84, 0.2288 ) }
    dend_31 { pt3dadd( 398.94, 357.689, 42.84, 0.2288 ) }
    dend_31 { pt3dadd( 400.067, 357.843, 42.84, 0.2288 ) }
    dend_31 { pt3dadd( 401.107, 358.205, 42.56, 0.2288 ) }
    dend_31 { pt3dadd( 402.063, 358.832, 42.56, 0.2288 ) }
    dend_31 { pt3dadd( 402.906, 359.581, 42.6863, 0.2288 ) }
    dend_31 { pt3dadd( 403.727, 360.347, 42.84, 0.2288 ) }
    dend_31 { pt3dadd( 404.778, 360.791, 42.84, 0.2542 ) }
    dend_31 { pt3dadd( 405.734, 361.391, 42.84, 0.2796 ) }
    dend_31 { pt3dadd( 406.634, 362.091, 42.84, 0.305 ) }
    dend_31 { pt3dadd( 407.511, 362.728, 42.84, 0.2796 ) }
    dend_31 { pt3dadd( 408.514, 363.249, 42.5502, 0.2542 ) }
    dend_31 { pt3dadd( 409.392, 363.952, 42.28, 0.2288 ) }
    dend_31 { pt3dadd( 410.214, 364.712, 42.56, 0.2288 ) }
    dend_31 { pt3dadd( 410.631, 365.668, 42.56, 0.2288 ) }
    dend_31 { pt3dadd( 410.925, 366.772, 42.5597, 0.2288 ) }
    dend_31 { pt3dadd( 410.879, 367.904, 42.3245, 0.2288 ) }
    dend_31 { pt3dadd( 410.379, 368.786, 41.44, 0.2796 ) }
    dend_31 { pt3dadd( 409.552, 369.283, 41.72, 0.356 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 59/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 340.866, 349.65, 33.3441, 0.5338 ) }
    dend_30 { pt3dadd( 341.453, 350.013, 33.7896, 0.4576 ) }
    dend_30 { pt3dadd( 341.819, 350.906, 35.1369, 0.5084 ) }
    dend_30 { pt3dadd( 341.947, 352.004, 35.7703, 0.5338 ) }
    dend_30 { pt3dadd( 342.389, 353.037, 35.3458, 0.5084 ) }
    dend_30 { pt3dadd( 343.088, 353.94, 35.4096, 0.483 ) }
    dend_30 { pt3dadd( 343.876, 354.726, 36.0346, 0.483 ) }
    dend_30 { pt3dadd( 344.716, 355.491, 36.3496, 0.5338 ) }
    dend_30 { pt3dadd( 345.672, 356.115, 36.2037, 0.5848 ) }
    dend_30 { pt3dadd( 346.637, 356.665, 35.5342, 0.6102 ) }
    dend_30 { pt3dadd( 347.554, 357.34, 35.2836, 0.6102 ) }
    dend_30 { pt3dadd( 348.303, 358.202, 35.2817, 0.6102 ) }
    dend_30 { pt3dadd( 348.679, 359.282, 35.2912, 0.6356 ) }
    dend_30 { pt3dadd( 348.811, 360.418, 35.3517, 0.6864 ) }
    dend_30 { pt3dadd( 349.198, 361.485, 35.7151, 0.7118 ) }
    dend_30 { pt3dadd( 349.587, 362.476, 36.7262, 0.661 ) }
    dend_30 { pt3dadd( 350.098, 363.473, 37.217, 0.5592 ) }
    dend_30 { pt3dadd( 350.821, 364.294, 36.4647, 0.5084 ) }
    dend_30 { pt3dadd( 351.823, 364.841, 36.3989, 0.5338 ) }
    dend_30 { pt3dadd( 352.925, 365.147, 36.3913, 0.5848 ) }
    dend_30 { pt3dadd( 354.019, 365.48, 36.3457, 0.5848 ) }
    dend_30 { pt3dadd( 355.082, 365.89, 36.1281, 0.5592 ) }
    dend_30 { pt3dadd( 356.052, 366.444, 35.6149, 0.5338 ) }
    dend_30 { pt3dadd( 356.976, 367.094, 36.043, 0.5338 ) }
    dend_30 { pt3dadd( 357.831, 367.82, 36.5686, 0.5338 ) }
    dend_30 { pt3dadd( 358.512, 368.7, 36.9846, 0.5848 ) }
    dend_30 { pt3dadd( 358.871, 369.772, 36.6346, 0.6356 ) }
    dend_30 { pt3dadd( 359.202, 370.857, 36.9163, 0.661 ) }
    dend_30 { pt3dadd( 359.616, 371.893, 37.4718, 0.5592 ) }
    dend_30 { pt3dadd( 360.09, 372.923, 37.5094, 0.4576 ) }
    dend_30 { pt3dadd( 360.35, 374.027, 37.4525, 0.4068 ) }
    dend_30 { pt3dadd( 360.94, 374.986, 37.1613, 0.483 ) }
    dend_30 { pt3dadd( 361.732, 375.768, 36.6078, 0.5592 ) }
    dend_30 { pt3dadd( 362.579, 376.52, 36.836, 0.5848 ) }
    dend_30 { pt3dadd( 363.41, 377.249, 37.4338, 0.5084 ) }
    dend_30 { pt3dadd( 364.126, 378.138, 37.52, 0.4322 ) }
    dend_30 { pt3dadd( 364.97, 378.904, 37.52, 0.3814 ) }
    dend_30 { pt3dadd( 365.912, 379.555, 37.5206, 0.3814 ) }
    dend_30 { pt3dadd( 366.885, 380.151, 37.5239, 0.356 ) }
    dend_30 { pt3dadd( 367.865, 380.72, 37.5399, 0.3304 ) }
    dend_30 { pt3dadd( 368.584, 381.586, 37.6233, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( 369.021, 382.626, 37.9994, 0.3814 ) }
    dend_30 { pt3dadd( 369.551, 383.58, 38.6912, 0.4322 ) }
    dend_30 { pt3dadd( 370.362, 384.359, 39.1516, 0.4576 ) }
    dend_30 { pt3dadd( 371.19, 385.083, 39.3638, 0.4322 ) }
    dend_30 { pt3dadd( 371.898, 385.936, 38.754, 0.3814 ) }
    dend_30 { pt3dadd( 372.56, 386.866, 38.64, 0.305 ) }
    dend_30 { pt3dadd( 373.16, 387.84, 38.6674, 0.2542 ) }
    dend_30 { pt3dadd( 373.898, 388.706, 38.5874, 0.2542 ) }
    dend_30 { pt3dadd( 374.795, 389.384, 38.36, 0.2796 ) }
    dend_30 { pt3dadd( 375.477, 390.284, 38.36, 0.3304 ) }
    dend_30 { pt3dadd( 376.14, 391.171, 38.36, 0.356 ) }
    dend_30 { pt3dadd( 376.806, 391.937, 38.36, 0.3814 ) }
    dend_30 { pt3dadd( 377.469, 392.849, 38.08, 0.4068 ) }
    dend_30 { pt3dadd( 378.209, 393.715, 38.08, 0.4322 ) }
    dend_30 { pt3dadd( 379.249, 394.11, 38.08, 0.483 ) }
    dend_30 { pt3dadd( 380.026, 394.838, 38.08, 0.483 ) }
    dend_30 { pt3dadd( 380.695, 395.757, 38.2323, 0.4576 ) }
    dend_30 { pt3dadd( 381.554, 396.466, 38.64, 0.3814 ) }
    dend_30 { pt3dadd( 381.962, 397.498, 38.64, 0.305 ) }
    dend_30 { pt3dadd( 381.971, 398.638, 38.7089, 0.2542 ) }
    dend_30 { pt3dadd( 381.873, 399.772, 38.9175, 0.2288 ) }
    dend_30 { pt3dadd( 381.867, 400.911, 38.8046, 0.2288 ) }
    dend_30 { pt3dadd( 381.867, 402.05, 38.64, 0.2288 ) }
    dend_30 { pt3dadd( 381.926, 403.185, 38.4356, 0.2542 ) }
    dend_30 { pt3dadd( 382.096, 404.3, 38.08, 0.305 ) }
    dend_30 { pt3dadd( 382.216, 405.431, 38.08, 0.3814 ) }
    dend_30 { pt3dadd( 382.741, 406.439, 38.08, 0.4068 ) }
    dend_30 { pt3dadd( 383.385, 407.338, 37.52, 0.3814 ) }
    dend_30 { pt3dadd( 383.714, 408.411, 37.52, 0.305 ) }
    dend_30 { pt3dadd( 384.418, 409.31, 37.52, 0.2542 ) }
    dend_30 { pt3dadd( 385.173, 410.03, 37.52, 0.2542 ) }
    dend_30 { pt3dadd( 385.188, 411.173, 37.52, 0.2796 ) }
    dend_30 { pt3dadd( 385.439, 412.286, 37.52, 0.305 ) }
    dend_30 { pt3dadd( 385.458, 413.405, 37.2568, 0.2796 ) }
    dend_30 { pt3dadd( 384.996, 414.425, 36.96, 0.2542 ) }
    dend_30 { pt3dadd( 384.517, 415.464, 36.96, 0.2288 ) }
    dend_30 { pt3dadd( 384.27, 416.564, 36.96, 0.305 ) }
    dend_30 { pt3dadd( 383.926, 417.446, 36.96, 0.4068 ) }
    // Section: dend_26, id: dend_26, parent: dend_21 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 332.925, 377.39, 34.0665, 0.6356 ) }
    dend_26 { pt3dadd( 333.084, 378.265, 31.6845, 0.305 ) }
    dend_26 { pt3dadd( 333.185, 379.003, 29.8337, 0.3304 ) }
    dend_26 { pt3dadd( 334.2, 379.53, 29.8337, 0.3814 ) }
    dend_26 { pt3dadd( 334.934, 379.007, 29.8337, 0.356 ) }
    dend_26 { pt3dadd( 335.667, 378.248, 29.8337, 0.3814 ) }
    dend_26 { pt3dadd( 336.81, 378.185, 29.8337, 0.4576 ) }
    dend_26 { pt3dadd( 337.859, 378.321, 29.6878, 0.5338 ) }
    dend_26 { pt3dadd( 338.575, 379.17, 29.0136, 0.5084 ) }
    dend_26 { pt3dadd( 339.291, 380.018, 28.3394, 0.3814 ) }
    dend_26 { pt3dadd( 340.006, 380.867, 27.6651, 0.3304 ) }
    dend_26 { pt3dadd( 340.722, 381.716, 26.9909, 0.3304 ) }
    dend_26 { pt3dadd( 340.863, 382.612, 26.2914, 0.4068 ) }
    dend_26 { pt3dadd( 340.306, 383.566, 25.5612, 0.3814 ) }
    dend_26 { pt3dadd( 339.75, 384.52, 24.831, 0.4068 ) }
    dend_26 { pt3dadd( 340.309, 385.472, 24.785, 0.4068 ) }
    dend_26 { pt3dadd( 341.38, 385.692, 24.785, 0.5084 ) }
    dend_26 { pt3dadd( 342.395, 386.076, 24.785, 0.5084 ) }
    dend_26 { pt3dadd( 343.237, 386.85, 24.785, 0.483 ) }
    dend_26 { pt3dadd( 343.881, 387.718, 24.12, 0.4068 ) }
    dend_26 { pt3dadd( 344.415, 388.635, 23.0796, 0.4322 ) }
    dend_26 { pt3dadd( 344.735, 389.651, 22.4902, 0.483 ) }
    dend_26 { pt3dadd( 344.762, 390.793, 22.3675, 0.483 ) }
    dend_26 { pt3dadd( 344.775, 391.932, 22.1164, 0.4322 ) }
    dend_26 { pt3dadd( 344.788, 393.072, 21.8655, 0.4068 ) }
    dend_26 { pt3dadd( 344.801, 394.211, 21.6143, 0.483 ) }
    dend_26 { pt3dadd( 344.813, 395.349, 21.3634, 0.5592 ) }
    dend_26 { pt3dadd( 344.827, 396.489, 21.112, 0.6102 ) }
    dend_26 { pt3dadd( 345.235, 397.55, 20.8124, 0.6102 ) }
    dend_26 { pt3dadd( 345.644, 398.612, 20.5128, 0.5592 ) }
    dend_26 { pt3dadd( 346.051, 399.674, 20.2132, 0.483 ) }
    dend_26 { pt3dadd( 345.415, 400.585, 20.195, 0.356 ) }
    dend_26 { pt3dadd( 345.351, 401.607, 19.8831, 0.305 ) }
    dend_26 { pt3dadd( 345.642, 402.695, 19.3978, 0.2796 ) }
    dend_26 { pt3dadd( 345.934, 403.783, 18.9123, 0.305 ) }
    dend_26 { pt3dadd( 346.078, 404.912, 18.8182, 0.2796 ) }
    dend_26 { pt3dadd( 346.185, 406.051, 18.8182, 0.2542 ) }
    dend_26 { pt3dadd( 346.263, 407.192, 18.8182, 0.2288 ) }
    dend_26 { pt3dadd( 346.601, 408.184, 18.2739, 0.2288 ) }
    dend_26 { pt3dadd( 347.242, 409.013, 17.1511, 0.2796 ) }
    dend_26 { pt3dadd( 348.305, 409.24, 16.9823, 0.3304 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 332.925, 377.39, 34.0665, 0.6356 ) }
    dend_25 { pt3dadd( 333.573, 377.892, 34.5019, 0.3814 ) }
    dend_25 { pt3dadd( 334.4, 378.618, 35.2601, 0.3304 ) }
    dend_25 { pt3dadd( 335.229, 379.344, 36.0186, 0.305 ) }
    dend_25 { pt3dadd( 336.253, 379.752, 36.2594, 0.305 ) }
    dend_25 { pt3dadd( 337.367, 380.01, 36.2594, 0.356 ) }
    dend_25 { pt3dadd( 338.23, 380.635, 36.2594, 0.3814 ) }
    dend_25 { pt3dadd( 338.873, 381.581, 36.2594, 0.4068 ) }
    dend_25 { pt3dadd( 339.63, 382.434, 36.2594, 0.4576 ) }
    dend_25 { pt3dadd( 340.435, 383.247, 36.2594, 0.5338 ) }
    dend_25 { pt3dadd( 341.486, 383.69, 36.2594, 0.5848 ) }
    dend_25 { pt3dadd( 342.547, 384.119, 36.2594, 0.6102 ) }
    dend_25 { pt3dadd( 343.607, 384.546, 36.2594, 0.5848 ) }
    dend_25 { pt3dadd( 344.668, 384.975, 36.2594, 0.5592 ) }
    dend_25 { pt3dadd( 345.728, 385.404, 36.2594, 0.5084 ) }
    dend_25 { pt3dadd( 346.793, 385.822, 36.2594, 0.4576 ) }
    dend_25 { pt3dadd( 347.865, 386.22, 36.2594, 0.356 ) }
    dend_25 { pt3dadd( 348.938, 386.618, 36.2594, 0.2796 ) }
    dend_25 { pt3dadd( 349.86, 387.199, 36.3364, 0.2288 ) }
    dend_25 { pt3dadd( 350.46, 388.167, 36.577, 0.2796 ) }
    dend_25 { pt3dadd( 351.06, 389.136, 36.8178, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 351.661, 390.105, 37.0583, 0.3814 ) }
    dend_25 { pt3dadd( 352.432, 390.915, 37.1773, 0.3304 ) }
    dend_25 { pt3dadd( 353.371, 391.567, 37.1773, 0.2796 ) }
    dend_25 { pt3dadd( 354.312, 392.22, 37.1773, 0.2288 ) }
    dend_25 { pt3dadd( 355.266, 392.849, 37.1773, 0.2288 ) }
    dend_25 { pt3dadd( 356.287, 393.363, 37.1773, 0.2288 ) }
    dend_25 { pt3dadd( 357.308, 393.879, 37.1773, 0.2288 ) }
    dend_25 { pt3dadd( 358.327, 394.399, 37.1815, 0.2288 ) }
    dend_25 { pt3dadd( 359.234, 395.091, 37.3635, 0.2288 ) }
    dend_25 { pt3dadd( 360.142, 395.784, 37.5458, 0.2542 ) }
    dend_25 { pt3dadd( 361.05, 396.476, 37.7278, 0.2796 ) }
    dend_25 { pt3dadd( 361.957, 397.169, 37.91, 0.305 ) }
    dend_25 { pt3dadd( 362.864, 397.862, 38.092, 0.2796 ) }
    dend_25 { pt3dadd( 363.948, 398.226, 38.0954, 0.2542 ) }
    dend_25 { pt3dadd( 365.033, 398.586, 38.0954, 0.2288 ) }
    dend_25 { pt3dadd( 366.12, 398.944, 38.0954, 0.2288 ) }
    dend_25 { pt3dadd( 367.206, 399.303, 38.0954, 0.2542 ) }
    dend_25 { pt3dadd( 368.293, 399.662, 38.0954, 0.2796 ) }
    dend_25 { pt3dadd( 369.392, 399.914, 38.0954, 0.305 ) }
    dend_25 { pt3dadd( 370.527, 399.839, 38.0954, 0.305 ) }
    dend_25 { pt3dadd( 371.262, 400.716, 38.0954, 0.305 ) }
    dend_25 { pt3dadd( 372.123, 401.43, 38.1248, 0.305 ) }
    dend_25 { pt3dadd( 373.158, 401.915, 38.1956, 0.2796 ) }
    dend_25 { pt3dadd( 374.194, 402.399, 38.2662, 0.2542 ) }
    dend_25 { pt3dadd( 375.23, 402.884, 38.337, 0.2288 ) }
    dend_25 { pt3dadd( 376.265, 403.369, 38.4076, 0.2288 ) }
    dend_25 { pt3dadd( 377.302, 403.854, 38.4784, 0.2288 ) }
    dend_25 { pt3dadd( 378.337, 404.338, 38.549, 0.2288 ) }
    dend_25 { pt3dadd( 379.339, 404.874, 38.8576, 0.2288 ) }
    dend_25 { pt3dadd( 380.339, 405.415, 39.1854, 0.2288 ) }
    dend_25 { pt3dadd( 381.337, 405.955, 39.5133, 0.2288 ) }
    dend_25 { pt3dadd( 382.337, 406.496, 39.8412, 0.2288 ) }
    dend_25 { pt3dadd( 383.336, 407.038, 40.1694, 0.2288 ) }
    dend_25 { pt3dadd( 384.335, 407.578, 40.4972, 0.2542 ) }
    dend_25 { pt3dadd( 385.335, 408.119, 40.8251, 0.305 ) }
    dend_25 { pt3dadd( 386.333, 408.659, 41.153, 0.356 ) }
    dend_25 { pt3dadd( 387.397, 409.03, 41.4095, 0.356 ) }
    dend_25 { pt3dadd( 388.517, 409.249, 41.6024, 0.305 ) }
    dend_25 { pt3dadd( 389.637, 409.469, 41.795, 0.2542 ) }
    dend_25 { pt3dadd( 390.757, 409.688, 41.9877, 0.2288 ) }
    dend_25 { pt3dadd( 391.877, 409.907, 42.1803, 0.2288 ) }
    dend_25 { pt3dadd( 392.997, 410.126, 42.3732, 0.2288 ) }
    dend_25 { pt3dadd( 394.117, 410.345, 42.5659, 0.2288 ) }
    dend_25 { pt3dadd( 395.147, 410.752, 42.8299, 0.2288 ) }
    dend_25 { pt3dadd( 396.029, 411.462, 43.2099, 0.2542 ) }
    dend_25 { pt3dadd( 396.912, 412.174, 43.5898, 0.305 ) }
    dend_25 { pt3dadd( 397.795, 412.884, 43.9698, 0.4068 ) }
    dend_25 { pt3dadd( 398.677, 413.596, 44.3498, 0.4576 ) }
    dend_25 { pt3dadd( 399.7, 413.899, 44.6704, 0.4576 ) }
    dend_25 { pt3dadd( 400.838, 413.867, 44.9417, 0.356 ) }
    dend_25 { pt3dadd( 401.976, 413.835, 45.2133, 0.2796 ) }
    dend_25 { pt3dadd( 403.115, 413.803, 45.4849, 0.2288 ) }
    dend_25 { pt3dadd( 404.253, 413.771, 45.7565, 0.2288 ) }
    dend_25 { pt3dadd( 405.231, 413.365, 45.8982, 0.2288 ) }
    dend_25 { pt3dadd( 406.13, 412.759, 45.8982, 0.2288 ) }
    dend_25 { pt3dadd( 407.272, 412.682, 45.8982, 0.2288 ) }
    dend_25 { pt3dadd( 407.917, 413.465, 46.214, 0.2542 ) }
    dend_25 { pt3dadd( 408.432, 414.474, 46.6127, 0.2796 ) }
    dend_25 { pt3dadd( 408.948, 415.481, 47.0114, 0.3304 ) }
    dend_25 { pt3dadd( 409.463, 416.489, 47.4102, 0.356 ) }
    dend_25 { pt3dadd( 410.003, 417.486, 47.7338, 0.3814 ) }
    dend_25 { pt3dadd( 410.647, 418.431, 47.7338, 0.3814 ) }
    dend_25 { pt3dadd( 410.993, 419.477, 48.2003, 0.4068 ) }
    dend_25 { pt3dadd( 411.214, 420.568, 48.8628, 0.483 ) }
    dend_25 { pt3dadd( 411.875, 421.39, 49.2895, 0.5338 ) }
    dend_25 { pt3dadd( 412.799, 422.055, 49.5754, 0.5084 ) }
    dend_25 { pt3dadd( 413.723, 422.719, 49.861, 0.3814 ) }
    dend_25 { pt3dadd( 414.647, 423.383, 50.1466, 0.2796 ) }
    dend_25 { pt3dadd( 415.572, 424.048, 50.4325, 0.2288 ) }
    dend_25 { pt3dadd( 416.495, 424.711, 50.7181, 0.2288 ) }
    dend_25 { pt3dadd( 417.419, 425.376, 51.0037, 0.2542 ) }
    dend_25 { pt3dadd( 418.344, 426.039, 51.2893, 0.2796 ) }
    dend_25 { pt3dadd( 419.305, 426.654, 51.4058, 0.305 ) }
    dend_25 { pt3dadd( 420.291, 427.234, 51.4058, 0.3304 ) }
    dend_25 { pt3dadd( 421.277, 427.814, 51.4058, 0.356 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 75/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 332.925, 377.39, 34.0665, 0.6356 ) }
    dend_22 { pt3dadd( 332.736, 377.862, 33.866, 0.5338 ) }
    dend_22 { pt3dadd( 332.505, 378.776, 32.7088, 0.5848 ) }
    dend_22 { pt3dadd( 333.373, 379.235, 31.7775, 0.5848 ) }
    dend_22 { pt3dadd( 333.962, 379.998, 32.8325, 0.5848 ) }
    dend_22 { pt3dadd( 334.268, 380.92, 34.2936, 0.5338 ) }
    dend_22 { pt3dadd( 334.842, 381.826, 35.1744, 0.5338 ) }
    dend_22 { pt3dadd( 335.1, 382.924, 35.2794, 0.483 ) }
    dend_22 { pt3dadd( 335.807, 383.798, 35.2828, 0.5084 ) }
    dend_22 { pt3dadd( 336.613, 384.611, 35.2918, 0.5084 ) }
    dend_22 { pt3dadd( 337.287, 385.534, 35.3371, 0.5592 ) }
    dend_22 { pt3dadd( 337.894, 386.49, 35.7109, 0.6102 ) }
    dend_22 { pt3dadd( 338.587, 387.361, 36.3423, 0.661 ) }
    dend_22 { pt3dadd( 339.371, 388.191, 36.398, 0.6864 ) }
    dend_22 { pt3dadd( 340.215, 388.962, 36.3955, 0.661 ) }
    dend_22 { pt3dadd( 341.174, 389.585, 36.3762, 0.661 ) }
    dend_22 { pt3dadd( 342.132, 390.209, 36.2706, 0.661 ) }
    dend_22 { pt3dadd( 342.817, 391.09, 35.7053, 0.6864 ) }
    dend_22 { pt3dadd( 343.374, 392.073, 35.2582, 0.661 ) }
    dend_22 { pt3dadd( 344.071, 392.977, 35.1156, 0.661 ) }
    dend_22 { pt3dadd( 344.723, 393.879, 34.477, 0.6864 ) }
    dend_22 { pt3dadd( 345.407, 394.75, 33.7702, 0.7372 ) }
    dend_22 { pt3dadd( 346.038, 395.658, 33.056, 0.7118 ) }
    dend_22 { pt3dadd( 346.649, 396.625, 33.04, 0.6356 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 304.765, 347.143, 21.6958, 1.0424 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( 303.127, 347.175, 21.8403, 0.7372 ) }
    dend_17 { pt3dadd( 302.0, 347.004, 21.8408, 0.839 ) }
    dend_17 { pt3dadd( 300.896, 346.707, 21.8453, 0.839 ) }
    dend_17 { pt3dadd( 299.792, 346.407, 21.875, 0.8644 ) }
    dend_17 { pt3dadd( 298.662, 346.363, 22.0497, 0.8136 ) }
    dend_17 { pt3dadd( 297.601, 346.632, 22.7374, 0.7626 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 6/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 304.765, 347.143, 21.6958, 1.0424 ) }
    dend_16 { pt3dadd( 303.536, 348.021, 20.778, 0.5848 ) }
    dend_16 { pt3dadd( 302.784, 348.878, 20.8071, 0.5592 ) }
    dend_16 { pt3dadd( 302.297, 349.889, 21.2279, 0.6102 ) }
    dend_16 { pt3dadd( 301.771, 350.747, 22.4403, 0.6102 ) }
    dend_16 { pt3dadd( 301.262, 351.735, 22.4806, 0.5848 ) }
    dend_16 { pt3dadd( 300.792, 352.717, 21.6322, 0.5338 ) }
    dend_16 { pt3dadd( 300.267, 353.681, 21.0095, 0.6102 ) }
    dend_16 { pt3dadd( 299.493, 354.47, 21.2332, 0.7372 ) }
    dend_16 { pt3dadd( 298.517, 355.024, 21.6863, 0.839 ) }
    dend_16 { pt3dadd( 297.495, 355.529, 21.6723, 0.8136 ) }
    dend_16 { pt3dadd( 296.465, 355.98, 21.2139, 0.7118 ) }
    dend_16 { pt3dadd( 295.495, 356.525, 20.8846, 0.6102 ) }
    dend_16 { pt3dadd( 294.618, 357.224, 21.3058, 0.5592 ) }
    dend_16 { pt3dadd( 293.769, 357.915, 22.118, 0.483 ) }
    dend_16 { pt3dadd( 292.83, 358.493, 22.7542, 0.4322 ) }
    dend_16 { pt3dadd( 291.822, 359.017, 22.9897, 0.4322 ) }
    dend_16 { pt3dadd( 290.93, 359.715, 23.091, 0.483 ) }
    dend_16 { pt3dadd( 290.194, 360.558, 23.5637, 0.6102 ) }
    dend_16 { pt3dadd( 289.45, 361.337, 24.4591, 0.6864 ) }
    dend_16 { pt3dadd( 288.628, 362.068, 25.1642, 0.788 ) }
    dend_16 { pt3dadd( 287.888, 362.904, 25.6964, 0.788 ) }
    dend_16 { pt3dadd( 287.175, 363.778, 26.1223, 0.7372 ) }
    dend_16 { pt3dadd( 286.343, 364.552, 26.1173, 0.6864 ) }
    dend_16 { pt3dadd( 285.343, 364.991, 25.6091, 0.661 ) }
    dend_16 { pt3dadd( 284.241, 365.225, 25.3767, 0.7372 ) }
    dend_16 { pt3dadd( 283.139, 365.452, 25.802, 0.788 ) }
    dend_16 { pt3dadd( 282.043, 365.658, 25.681, 0.839 ) }
    dend_16 { pt3dadd( 280.945, 365.922, 25.2927, 0.8136 ) }
    dend_16 { pt3dadd( 279.857, 366.271, 25.1994, 0.7626 ) }
    dend_16 { pt3dadd( 278.843, 366.787, 25.1969, 0.6864 ) }
    dend_16 { pt3dadd( 277.87, 367.388, 25.1843, 0.5848 ) }
    dend_16 { pt3dadd( 276.9, 367.994, 25.1149, 0.4576 ) }
    dend_16 { pt3dadd( 276.079, 368.757, 24.7503, 0.3814 ) }
    dend_16 { pt3dadd( 275.336, 369.602, 24.2561, 0.3814 ) }
    dend_16 { pt3dadd( 274.436, 370.283, 24.066, 0.4322 ) }
    dend_16 { pt3dadd( 273.48, 370.909, 23.9616, 0.4322 ) }
    dend_16 { pt3dadd( 272.66, 371.331, 23.4324, 0.4068 ) }
    dend_16 { pt3dadd( 272.082, 372.269, 22.979, 0.4068 ) }
    dend_16 { pt3dadd( 271.225, 372.999, 22.7626, 0.4322 ) }
    dend_16 { pt3dadd( 270.234, 373.501, 22.68, 0.4322 ) }
    dend_16 { pt3dadd( 269.618, 374.444, 22.96, 0.4068 ) }
    dend_16 { pt3dadd( 268.729, 375.142, 22.96, 0.356 ) }
    dend_16 { pt3dadd( 267.651, 375.48, 22.96, 0.3304 ) }
    dend_16 { pt3dadd( 266.63, 375.902, 22.96, 0.305 ) }
    dend_16 { pt3dadd( 265.862, 376.727, 22.96, 0.3304 ) }
    dend_16 { pt3dadd( 265.361, 377.744, 22.96, 0.356 ) }
    dend_16 { pt3dadd( 265.247, 378.876, 22.96, 0.3814 ) }
    dend_16 { pt3dadd( 265.081, 380.005, 22.96, 0.3814 ) }
    dend_16 { pt3dadd( 264.884, 381.039, 22.4179, 0.4068 ) }
    dend_16 { pt3dadd( 264.706, 381.937, 22.7609, 0.4068 ) }
    dend_16 { pt3dadd( 264.287, 382.884, 23.8669, 0.3814 ) }
    dend_16 { pt3dadd( 263.253, 383.372, 23.8669, 0.3304 ) }
    dend_16 { pt3dadd( 262.27, 383.907, 23.4312, 0.305 ) }
    dend_16 { pt3dadd( 261.325, 384.474, 22.6814, 0.305 ) }
    dend_16 { pt3dadd( 260.508, 385.118, 22.031, 0.2796 ) }
    dend_16 { pt3dadd( 260.477, 386.251, 21.8616, 0.2542 ) }
    dend_16 { pt3dadd( 260.301, 387.352, 21.2341, 0.2288 ) }
    dend_16 { pt3dadd( 260.118, 388.453, 20.6363, 0.2542 ) }
    dend_16 { pt3dadd( 259.841, 389.56, 20.3997, 0.2796 ) }
    dend_16 { pt3dadd( 259.566, 390.665, 20.1628, 0.356 ) }
    dend_16 { pt3dadd( 259.289, 391.771, 19.9262, 0.3814 ) }
    dend_16 { pt3dadd( 259.013, 392.877, 19.6893, 0.4068 ) }
    dend_16 { pt3dadd( 258.736, 393.983, 19.4527, 0.356 ) }
    dend_16 { pt3dadd( 258.502, 395.098, 19.2772, 0.3304 ) }
    dend_16 { pt3dadd( 259.103, 395.92, 19.2772, 0.3304 ) }
    dend_16 { pt3dadd( 259.018, 396.901, 18.9706, 0.3304 ) }
    dend_16 { pt3dadd( 258.641, 397.969, 18.5752, 0.3304 ) }
    dend_16 { pt3dadd( 258.264, 399.036, 18.1796, 0.2796 ) }
    dend_16 { pt3dadd( 257.752, 400.02, 17.9001, 0.2542 ) }
    dend_16 { pt3dadd( 257.1, 400.916, 17.9001, 0.2288 ) }
    dend_16 { pt3dadd( 257.089, 401.997, 17.3835, 0.305 ) }
    dend_16 { pt3dadd( 257.286, 403.068, 16.5234, 0.4322 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 276.204, 369.265, 38.6448, 0.661 ) }
    dend_12 { pt3dadd( 276.577, 370.765, 39.0505, 0.3814 ) }
    dend_12 { pt3dadd( 276.767, 371.884, 39.4153, 0.2796 ) }
    dend_12 { pt3dadd( 276.559, 372.993, 39.4724, 0.305 ) }
    dend_12 { pt3dadd( 276.635, 374.073, 39.4724, 0.3304 ) }
    dend_12 { pt3dadd( 277.052, 375.134, 39.5276, 0.356 ) }
    dend_12 { pt3dadd( 277.308, 376.243, 39.818, 0.4322 ) }
    dend_12 { pt3dadd( 277.796, 377.255, 39.9314, 0.4322 ) }
    dend_12 { pt3dadd( 278.435, 378.204, 39.9314, 0.4576 ) }
    dend_12 { pt3dadd( 278.957, 379.206, 40.0495, 0.4322 ) }
    dend_12 { pt3dadd( 279.305, 380.29, 40.3477, 0.483 ) }
    dend_12 { pt3dadd( 279.137, 381.399, 40.3903, 0.5084 ) }
    dend_12 { pt3dadd( 279.551, 382.276, 40.7464, 0.5084 ) }
    dend_12 { pt3dadd( 280.369, 383.015, 41.3081, 0.4576 ) }
    dend_12 { pt3dadd( 280.448, 384.155, 41.3081, 0.3814 ) }
    dend_12 { pt3dadd( 280.158, 385.195, 41.704, 0.3304 ) }
    dend_12 { pt3dadd( 279.618, 386.166, 42.3671, 0.305 ) }
    dend_12 { pt3dadd( 279.412, 387.196, 43.1337, 0.356 ) }
    dend_12 { pt3dadd( 279.513, 388.279, 43.9967, 0.4068 ) }
    dend_12 { pt3dadd( 279.362, 389.333, 44.5211, 0.4576 ) }
    dend_12 { pt3dadd( 278.817, 390.339, 44.5211, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 278.27, 391.343, 44.5211, 0.3304 ) }
    dend_12 { pt3dadd( 278.471, 392.379, 45.0386, 0.2542 ) }
    dend_12 { pt3dadd( 278.859, 393.423, 45.6854, 0.2288 ) }
    dend_12 { pt3dadd( 279.247, 394.466, 46.3322, 0.2288 ) }
    dend_12 { pt3dadd( 279.06, 395.563, 46.9118, 0.2288 ) }
    dend_12 { pt3dadd( 278.85, 396.663, 47.4886, 0.2288 ) }
    dend_12 { pt3dadd( 278.641, 397.762, 48.0654, 0.2288 ) }
    dend_12 { pt3dadd( 278.672, 398.893, 48.193, 0.2288 ) }
    dend_12 { pt3dadd( 278.974, 399.924, 48.953, 0.2288 ) }
    dend_12 { pt3dadd( 279.354, 400.915, 50.0041, 0.2542 ) }
    dend_12 { pt3dadd( 279.734, 401.904, 51.0555, 0.2796 ) }
    dend_12 { pt3dadd( 280.115, 402.894, 52.1066, 0.305 ) }
    dend_12 { pt3dadd( 280.495, 403.884, 53.1577, 0.2796 ) }
    dend_12 { pt3dadd( 280.925, 404.784, 54.5216, 0.2542 ) }
    dend_12 { pt3dadd( 281.327, 405.704, 55.8544, 0.2288 ) }
    dend_12 { pt3dadd( 281.639, 406.693, 57.0301, 0.2288 ) }
    dend_12 { pt3dadd( 281.792, 407.537, 58.6079, 0.2542 ) }
    dend_12 { pt3dadd( 281.606, 408.069, 61.0445, 0.2796 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 276.204, 369.265, 38.6448, 0.661 ) }
    dend_9 { pt3dadd( 275.322, 369.737, 38.6635, 0.305 ) }
    dend_9 { pt3dadd( 274.327, 370.3, 38.7677, 0.356 ) }
    dend_9 { pt3dadd( 273.306, 370.729, 39.4346, 0.3814 ) }
    dend_9 { pt3dadd( 272.539, 371.452, 40.4656, 0.4068 ) }
    dend_9 { pt3dadd( 272.042, 372.325, 41.7906, 0.5338 ) }
    dend_9 { pt3dadd( 271.134, 372.986, 42.1431, 0.6864 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 25/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 291.826, 358.543, 32.002, 0.4576 ) }
    dend_7 { pt3dadd( 291.556, 358.54, 30.52, 0.6356 ) }
    dend_7 { pt3dadd( 290.458, 358.849, 30.52, 0.483 ) }
    dend_7 { pt3dadd( 289.403, 359.269, 30.52, 0.4068 ) }
    dend_7 { pt3dadd( 288.463, 359.894, 30.52, 0.4068 ) }
    dend_7 { pt3dadd( 287.343, 360.061, 30.52, 0.4576 ) }
    dend_7 { pt3dadd( 286.239, 360.358, 30.52, 0.5084 ) }
    dend_7 { pt3dadd( 285.099, 360.36, 30.4027, 0.5084 ) }
    dend_7 { pt3dadd( 283.991, 360.266, 29.96, 0.5592 ) }
    dend_7 { pt3dadd( 283.099, 359.677, 29.7032, 0.6102 ) }
    dend_7 { pt3dadd( 281.955, 359.674, 29.68, 0.661 ) }
    dend_7 { pt3dadd( 280.811, 359.674, 29.68, 0.661 ) }
    dend_7 { pt3dadd( 279.668, 359.674, 29.6332, 0.5592 ) }
    dend_7 { pt3dadd( 278.597, 359.851, 29.0144, 0.4068 ) }
    dend_7 { pt3dadd( 277.701, 360.547, 28.84, 0.305 ) }
    dend_7 { pt3dadd( 276.649, 360.88, 28.56, 0.2796 ) }
    dend_7 { pt3dadd( 275.508, 360.932, 28.56, 0.305 ) }
    dend_7 { pt3dadd( 274.366, 360.994, 28.56, 0.305 ) }
    dend_7 { pt3dadd( 273.225, 361.046, 28.56, 0.3304 ) }
    dend_7 { pt3dadd( 272.081, 361.046, 28.56, 0.3814 ) }
    dend_7 { pt3dadd( 270.937, 361.046, 28.56, 0.483 ) }
    dend_7 { pt3dadd( 269.799, 361.118, 28.56, 0.5338 ) }
    dend_7 { pt3dadd( 268.688, 361.275, 28.3111, 0.5848 ) }
    dend_7 { pt3dadd( 267.567, 361.363, 27.8071, 0.5338 ) }
    dend_7 { pt3dadd( 266.573, 361.792, 27.0054, 0.5084 ) }
    dend_7 { pt3dadd( 265.886, 362.651, 26.4205, 0.4322 ) }
    dend_7 { pt3dadd( 265.389, 363.47, 25.4579, 0.3814 ) }
    dend_7 { pt3dadd( 264.322, 363.563, 24.64, 0.3304 ) }
    dend_7 { pt3dadd( 263.384, 364.061, 24.64, 0.3304 ) }
    dend_7 { pt3dadd( 262.296, 364.25, 24.64, 0.3814 ) }
    dend_7 { pt3dadd( 261.16, 364.174, 24.64, 0.4576 ) }
    dend_7 { pt3dadd( 260.114, 363.792, 24.64, 0.4576 ) }
    dend_7 { pt3dadd( 259.055, 363.801, 24.0568, 0.4068 ) }
    dend_7 { pt3dadd( 258.693, 364.753, 23.2352, 0.305 ) }
    dend_7 { pt3dadd( 257.988, 365.522, 23.2033, 0.2542 ) }
    dend_7 { pt3dadd( 257.191, 365.976, 22.031, 0.2288 ) }
    dend_7 { pt3dadd( 256.168, 365.466, 22.031, 0.2288 ) }
    dend_7 { pt3dadd( 255.596, 366.008, 20.6542, 0.2288 ) }
    dend_7 { pt3dadd( 255.276, 367.094, 20.6542, 0.2288 ) }
    dend_7 { pt3dadd( 254.416, 366.802, 20.6542, 0.2542 ) }
    dend_7 { pt3dadd( 253.959, 365.873, 20.1653, 0.2796 ) }
    dend_7 { pt3dadd( 253.359, 365.14, 19.7361, 0.305 ) }
    dend_7 { pt3dadd( 252.366, 365.35, 19.6353, 0.305 ) }
    dend_7 { pt3dadd( 251.973, 366.226, 18.116, 0.3304 ) }
    dend_7 { pt3dadd( 251.328, 365.566, 17.9001, 0.356 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 291.826, 358.543, 32.002, 0.4576 ) }
    dend_2 { pt3dadd( 290.805, 358.134, 32.4204, 0.4576 ) }
    dend_2 { pt3dadd( 289.895, 357.477, 32.972, 0.5848 ) }
    dend_2 { pt3dadd( 289.078, 356.677, 33.0229, 0.6864 ) }
    dend_2 { pt3dadd( 288.286, 355.853, 32.9742, 0.7372 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 75/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 322.244, 336.484, 40.8201, 0.6864 ) }
    apic_20 { pt3dadd( 322.12, 337.173, 41.3571, 0.4068 ) }
    apic_20 { pt3dadd( 321.909, 338.272, 41.7673, 0.4576 ) }
    apic_20 { pt3dadd( 321.707, 339.275, 41.7673, 0.5848 ) }
    apic_20 { pt3dadd( 320.717, 338.702, 41.7673, 0.6864 ) }
    apic_20 { pt3dadd( 319.788, 338.095, 42.3548, 0.6864 ) }
    apic_20 { pt3dadd( 318.879, 337.478, 43.1323, 0.5848 ) }
    apic_20 { pt3dadd( 317.812, 337.56, 44.0622, 0.5338 ) }
    apic_20 { pt3dadd( 317.256, 338.56, 44.0622, 0.6102 ) }
    apic_20 { pt3dadd( 316.896, 339.598, 44.6088, 0.7118 ) }
    apic_20 { pt3dadd( 316.654, 340.661, 45.439, 0.7626 ) }
    apic_20 { pt3dadd( 316.578, 341.802, 45.439, 0.8136 ) }
    apic_20 { pt3dadd( 315.969, 342.546, 46.6516, 0.8644 ) }
    apic_20 { pt3dadd( 315.316, 343.329, 47.8607, 0.9152 ) }
    apic_20 { pt3dadd( 314.711, 344.206, 48.8824, 0.8644 ) }
    apic_20 { pt3dadd( 314.106, 345.114, 49.5698, 0.788 ) }
    apic_20 { pt3dadd( 313.502, 346.085, 49.5698, 0.6356 ) }
    apic_20 { pt3dadd( 313.019, 347.096, 50.0223, 0.483 ) }
    apic_20 { pt3dadd( 312.81, 348.117, 50.4879, 0.3304 ) }
    apic_20 { pt3dadd( 313.441, 348.954, 50.5882, 0.305 ) }
    apic_20 { pt3dadd( 314.547, 348.845, 51.2515, 0.3814 ) }
    apic_20 { pt3dadd( 315.652, 348.735, 51.9148, 0.483 ) }
    apic_20 { pt3dadd( 316.759, 348.625, 52.5784, 0.5084 ) }
    apic_20 { pt3dadd( 317.865, 348.515, 53.2417, 0.4576 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 99/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 322.244, 336.484, 40.8201, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_19 { pt3dadd( 321.533, 336.871, 40.651, 0.4576 ) }
    apic_19 { pt3dadd( 320.499, 336.836, 39.8994, 0.4576 ) }
    apic_19 { pt3dadd( 319.483, 336.463, 39.0107, 0.4576 ) }
    apic_19 { pt3dadd( 318.641, 335.741, 39.0544, 0.4068 ) }
    apic_19 { pt3dadd( 317.915, 334.885, 39.5766, 0.4576 ) }
    apic_19 { pt3dadd( 317.017, 334.197, 39.7286, 0.5848 ) }
    apic_19 { pt3dadd( 316.057, 333.574, 39.6603, 0.7118 ) }
    apic_19 { pt3dadd( 315.059, 333.06, 39.188, 0.7626 ) }
    apic_19 { pt3dadd( 314.013, 332.639, 38.7181, 0.7626 ) }
    apic_19 { pt3dadd( 312.908, 332.359, 38.6358, 0.7626 ) }
    apic_19 { pt3dadd( 311.81, 332.043, 38.6151, 0.7372 ) }
    apic_19 { pt3dadd( 310.723, 331.691, 38.479, 0.6864 ) }
    apic_19 { pt3dadd( 309.65, 331.402, 37.8476, 0.6356 ) }
    apic_19 { pt3dadd( 308.609, 330.956, 37.5623, 0.5848 ) }
    apic_19 { pt3dadd( 307.524, 330.597, 37.5914, 0.5848 ) }
    apic_19 { pt3dadd( 306.449, 330.246, 37.9884, 0.5848 ) }
    apic_19 { pt3dadd( 305.375, 329.902, 38.4465, 0.6102 ) }
    apic_19 { pt3dadd( 304.272, 329.755, 37.9389, 0.5592 ) }
    apic_19 { pt3dadd( 303.167, 329.48, 37.767, 0.5084 ) }
    apic_19 { pt3dadd( 302.068, 329.443, 38.4602, 0.483 ) }
    apic_19 { pt3dadd( 301.055, 328.944, 38.6316, 0.5848 ) }
    apic_19 { pt3dadd( 300.027, 328.442, 38.64, 0.6864 ) }
    apic_19 { pt3dadd( 298.936, 328.098, 38.64, 0.7626 ) }
    apic_19 { pt3dadd( 297.955, 327.516, 38.6406, 0.7118 ) }
    apic_19 { pt3dadd( 297.107, 326.748, 38.6425, 0.6356 ) }
    apic_19 { pt3dadd( 296.277, 325.961, 38.6504, 0.5592 ) }
    apic_19 { pt3dadd( 295.38, 325.253, 38.6865, 0.5592 ) }
    apic_19 { pt3dadd( 294.252, 325.152, 38.9085, 0.6102 ) }
    apic_19 { pt3dadd( 293.166, 324.99, 39.6866, 0.6102 ) }
    apic_19 { pt3dadd( 292.16, 324.449, 39.821, 0.5592 ) }
    apic_19 { pt3dadd( 291.038, 324.285, 40.1772, 0.483 ) }
    apic_19 { pt3dadd( 289.925, 324.07, 39.8502, 0.483 ) }
    apic_19 { pt3dadd( 288.923, 323.521, 39.818, 0.5338 ) }
    apic_19 { pt3dadd( 288.015, 322.833, 40.021, 0.5592 ) }
    apic_19 { pt3dadd( 287.026, 322.356, 40.8094, 0.5848 ) }
    apic_19 { pt3dadd( 286.037, 321.872, 41.5464, 0.5338 ) }
    apic_19 { pt3dadd( 285.156, 321.169, 42.0017, 0.5084 ) }
    apic_19 { pt3dadd( 284.361, 320.349, 42.1333, 0.4322 ) }
    apic_19 { pt3dadd( 283.633, 319.481, 42.5382, 0.4576 ) }
    apic_19 { pt3dadd( 282.887, 318.654, 43.0791, 0.5084 ) }
    apic_19 { pt3dadd( 281.888, 318.104, 43.1595, 0.6102 ) }
    apic_19 { pt3dadd( 281.089, 317.309, 43.344, 0.661 ) }
    apic_19 { pt3dadd( 280.686, 316.27, 43.9684, 0.6864 ) }
    apic_19 { pt3dadd( 280.177, 315.254, 44.2417, 0.661 ) }
    apic_19 { pt3dadd( 279.586, 314.275, 44.2481, 0.6356 ) }
    apic_19 { pt3dadd( 278.913, 313.355, 44.2826, 0.6356 ) }
    apic_19 { pt3dadd( 278.436, 312.327, 44.5116, 0.661 ) }
    apic_19 { pt3dadd( 277.844, 311.401, 45.2808, 0.6864 ) }
    apic_19 { pt3dadd( 277.306, 310.414, 45.771, 0.661 ) }
    apic_19 { pt3dadd( 276.798, 309.426, 46.3966, 0.661 ) }
    apic_19 { pt3dadd( 276.268, 308.415, 46.48, 0.6356 ) }
    apic_19 { pt3dadd( 275.943, 307.329, 46.4811, 0.5848 ) }
    apic_19 { pt3dadd( 275.91, 306.185, 46.4873, 0.5084 ) }
    apic_19 { pt3dadd( 275.786, 305.055, 46.5265, 0.483 ) }
    apic_19 { pt3dadd( 275.425, 304.051, 47.0417, 0.5592 ) }
    apic_19 { pt3dadd( 274.92, 303.162, 47.6, 0.6356 ) }
    apic_19 { pt3dadd( 274.154, 302.345, 47.6, 0.661 ) }
    apic_19 { pt3dadd( 273.158, 301.834, 47.6, 0.6356 ) }
    apic_19 { pt3dadd( 272.287, 301.181, 48.1216, 0.5848 ) }
    apic_19 { pt3dadd( 271.354, 300.627, 48.221, 0.5848 ) }
    apic_19 { pt3dadd( 270.792, 299.682, 48.7169, 0.5592 ) }
    apic_19 { pt3dadd( 270.383, 298.639, 48.9549, 0.5338 ) }
    apic_19 { pt3dadd( 269.977, 297.673, 49.9436, 0.4576 ) }
    apic_19 { pt3dadd( 269.629, 296.595, 50.1494, 0.4068 ) }
    apic_19 { pt3dadd( 268.889, 295.748, 50.6013, 0.3814 ) }
    apic_19 { pt3dadd( 268.251, 294.839, 50.7212, 0.3814 ) }
    apic_19 { pt3dadd( 268.128, 293.729, 51.1582, 0.3814 ) }
    apic_19 { pt3dadd( 267.207, 293.207, 51.52, 0.4068 ) }
    apic_19 { pt3dadd( 266.24, 292.97, 52.36, 0.4576 ) }
    apic_19 { pt3dadd( 265.471, 292.15, 52.36, 0.483 ) }
    apic_19 { pt3dadd( 265.065, 291.14, 52.36, 0.483 ) }
    apic_19 { pt3dadd( 265.065, 290.044, 53.0356, 0.4322 ) }
    apic_19 { pt3dadd( 265.028, 288.926, 53.4764, 0.4576 ) }
    apic_19 { pt3dadd( 264.413, 288.03, 54.04, 0.4576 ) }
    apic_19 { pt3dadd( 263.65, 287.2, 54.0658, 0.483 ) }
    apic_19 { pt3dadd( 263.01, 286.334, 54.32, 0.4068 ) }
    apic_19 { pt3dadd( 263.006, 285.19, 54.32, 0.3814 ) }
    apic_19 { pt3dadd( 263.207, 284.141, 54.4992, 0.3814 ) }
    apic_19 { pt3dadd( 263.008, 283.094, 55.3725, 0.4576 ) }
    apic_19 { pt3dadd( 262.817, 282.014, 56.1649, 0.5084 ) }
    apic_19 { pt3dadd( 262.45, 280.957, 56.4547, 0.483 ) }
    apic_19 { pt3dadd( 262.34, 279.874, 56.7991, 0.4576 ) }
    apic_19 { pt3dadd( 262.479, 278.764, 57.3818, 0.4322 ) }
    apic_19 { pt3dadd( 262.402, 277.722, 57.8315, 0.4576 ) }
    apic_19 { pt3dadd( 261.593, 276.913, 57.8315, 0.4322 ) }
    apic_19 { pt3dadd( 261.149, 275.945, 58.6555, 0.4322 ) }
    apic_19 { pt3dadd( 260.789, 274.942, 59.6674, 0.483 ) }
    // Section: apic_9, id: apic_9, parent: apic_1 (entry count 87/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 328.849, 328.442, 35.4096, 0.6864 ) }
    apic_9 { pt3dadd( 329.27, 327.324, 36.3818, 0.7626 ) }
    apic_9 { pt3dadd( 329.86, 326.345, 36.3975, 0.7372 ) }
    apic_9 { pt3dadd( 330.665, 325.534, 36.3888, 0.7372 ) }
    apic_9 { pt3dadd( 331.642, 324.94, 36.3443, 0.7626 ) }
    apic_9 { pt3dadd( 332.651, 324.409, 36.1231, 0.8644 ) }
    apic_9 { pt3dadd( 333.6, 323.855, 35.3394, 0.9152 ) }
    apic_9 { pt3dadd( 334.506, 323.17, 35.0098, 0.8898 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 95/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 328.849, 328.442, 35.4096, 0.6864 ) }
    apic_2 { pt3dadd( 328.99, 327.151, 35.343, 0.7372 ) }
    apic_2 { pt3dadd( 328.859, 326.029, 35.5729, 0.7118 ) }
    apic_2 { pt3dadd( 328.371, 325.061, 35.6902, 0.6356 ) }
    apic_2 { pt3dadd( 327.738, 324.458, 33.9626, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_2 { pt3dadd( 326.908, 324.183, 32.3372, 0.5592 ) }
    apic_2 { pt3dadd( 325.82, 323.874, 31.9138, 0.6102 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 341.725, 369.918, 54.1596, 0.3304 ) }
    dend_42 { pt3dadd( 342.393, 370.124, 55.7211, 0.305 ) }
    dend_42 { pt3dadd( 343.31, 370.396, 57.2572, 0.305 ) }
    dend_42 { pt3dadd( 344.186, 370.684, 58.7927, 0.2796 ) }
    dend_42 { pt3dadd( 343.672, 371.499, 60.3025, 0.2542 ) }
    dend_42 { pt3dadd( 343.159, 372.314, 61.8122, 0.2288 ) }
    dend_42 { pt3dadd( 342.645, 373.129, 63.3223, 0.2288 ) }
    dend_42 { pt3dadd( 342.551, 374.23, 64.0346, 0.2288 ) }
    dend_42 { pt3dadd( 342.495, 375.318, 64.7161, 0.2288 ) }
    dend_42 { pt3dadd( 343.472, 375.914, 64.7161, 0.2542 ) }
    dend_42 { pt3dadd( 343.91, 376.414, 66.9718, 0.3304 ) }
    dend_42 { pt3dadd( 344.342, 376.913, 69.2611, 0.4068 ) }
    dend_42 { pt3dadd( 344.773, 377.41, 71.5501, 0.4322 ) }
    dend_42 { pt3dadd( 345.312, 378.122, 73.2978, 0.356 ) }
    dend_42 { pt3dadd( 345.853, 378.838, 75.033, 0.2796 ) }
    dend_42 { pt3dadd( 346.354, 379.703, 76.3039, 0.2288 ) }
    dend_42 { pt3dadd( 346.828, 380.668, 77.2618, 0.2288 ) }
    dend_42 { pt3dadd( 347.3, 381.634, 78.2194, 0.2288 ) }
    dend_42 { pt3dadd( 347.316, 382.654, 79.2694, 0.2288 ) }
    dend_42 { pt3dadd( 347.157, 383.697, 80.355, 0.2288 ) }
    dend_42 { pt3dadd( 346.998, 384.739, 81.4402, 0.2288 ) }
    dend_42 { pt3dadd( 346.839, 385.782, 82.5258, 0.2288 ) }
    dend_42 { pt3dadd( 347.568, 386.6, 82.9002, 0.2288 ) }
    dend_42 { pt3dadd( 348.378, 387.398, 83.2096, 0.2288 ) }
    dend_42 { pt3dadd( 349.188, 388.196, 83.519, 0.2288 ) }
    dend_42 { pt3dadd( 349.998, 388.994, 83.8286, 0.2288 ) }
    dend_42 { pt3dadd( 350.808, 389.792, 84.138, 0.2288 ) }
    dend_42 { pt3dadd( 351.618, 390.59, 84.4474, 0.2288 ) }
    dend_42 { pt3dadd( 352.539, 391.186, 85.2284, 0.2288 ) }
    dend_42 { pt3dadd( 353.463, 391.78, 86.0171, 0.2288 ) }
    dend_42 { pt3dadd( 354.386, 392.374, 86.8056, 0.2288 ) }
    dend_42 { pt3dadd( 355.309, 392.966, 87.5944, 0.2288 ) }
    dend_42 { pt3dadd( 356.232, 393.56, 88.3828, 0.2288 ) }
    dend_42 { pt3dadd( 357.157, 394.153, 89.1716, 0.2288 ) }
    dend_42 { pt3dadd( 358.08, 394.746, 89.9601, 0.2796 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 37/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 341.725, 369.918, 54.1596, 0.3304 ) }
    dend_41 { pt3dadd( 342.872, 369.177, 54.1596, 0.5084 ) }
    dend_41 { pt3dadd( 343.833, 368.556, 54.1596, 0.5592 ) }
    dend_41 { pt3dadd( 344.866, 368.097, 54.1596, 0.5592 ) }
    dend_41 { pt3dadd( 345.969, 367.791, 54.1596, 0.5592 ) }
    dend_41 { pt3dadd( 347.071, 367.487, 54.1596, 0.5848 ) }
    dend_41 { pt3dadd( 348.165, 367.451, 54.3936, 0.5592 ) }
    dend_41 { pt3dadd( 349.25, 367.747, 54.9178, 0.4576 ) }
    dend_41 { pt3dadd( 350.333, 368.043, 55.442, 0.3304 ) }
    dend_41 { pt3dadd( 351.417, 368.339, 55.9661, 0.2796 ) }
    dend_41 { pt3dadd( 352.504, 368.603, 56.4746, 0.3304 ) }
    dend_41 { pt3dadd( 353.625, 368.414, 56.7683, 0.4576 ) }
    dend_41 { pt3dadd( 354.747, 368.226, 57.0618, 0.5338 ) }
    dend_41 { pt3dadd( 355.87, 368.039, 57.3555, 0.5338 ) }
    dend_41 { pt3dadd( 356.992, 367.85, 57.6492, 0.4322 ) }
    dend_41 { pt3dadd( 358.114, 367.785, 57.9936, 0.356 ) }
    dend_41 { pt3dadd( 359.237, 367.92, 58.422, 0.2796 ) }
    dend_41 { pt3dadd( 360.359, 368.055, 58.8501, 0.2542 ) }
    dend_41 { pt3dadd( 361.481, 368.188, 59.2785, 0.2542 ) }
    dend_41 { pt3dadd( 362.603, 368.323, 59.7066, 0.2796 ) }
    dend_41 { pt3dadd( 363.713, 368.477, 60.1264, 0.305 ) }
    dend_41 { pt3dadd( 364.828, 368.346, 60.4243, 0.2796 ) }
    dend_41 { pt3dadd( 365.955, 368.194, 60.7275, 0.2542 ) }
    dend_41 { pt3dadd( 367.082, 368.042, 61.0308, 0.2288 ) }
    dend_41 { pt3dadd( 368.148, 368.422, 61.3147, 0.2288 ) }
    dend_41 { pt3dadd( 369.212, 368.828, 61.5975, 0.2288 ) }
    dend_41 { pt3dadd( 370.276, 369.233, 61.8806, 0.2288 ) }
    dend_41 { pt3dadd( 371.339, 369.638, 62.1634, 0.2288 ) }
    dend_41 { pt3dadd( 372.403, 370.039, 62.4708, 0.2288 ) }
    dend_41 { pt3dadd( 373.465, 370.397, 63.028, 0.2288 ) }
    dend_41 { pt3dadd( 374.527, 370.755, 63.5849, 0.2288 ) }
    dend_41 { pt3dadd( 375.59, 371.114, 64.1418, 0.2288 ) }
    dend_41 { pt3dadd( 376.7, 371.066, 64.3658, 0.2288 ) }
    dend_41 { pt3dadd( 377.837, 370.95, 64.5142, 0.2288 ) }
    dend_41 { pt3dadd( 378.973, 370.835, 64.6624, 0.2288 ) }
    dend_41 { pt3dadd( 380.077, 370.563, 64.7161, 0.2288 ) }
    dend_41 { pt3dadd( 381.164, 370.204, 64.7161, 0.2288 ) }
    dend_41 { pt3dadd( 382.133, 369.63, 64.7688, 0.2288 ) }
    dend_41 { pt3dadd( 383.024, 368.914, 64.8561, 0.2288 ) }
    dend_41 { pt3dadd( 383.916, 368.199, 64.9432, 0.2288 ) }
    dend_41 { pt3dadd( 384.807, 367.483, 65.0303, 0.2288 ) }
    dend_41 { pt3dadd( 385.7, 366.767, 65.1176, 0.2288 ) }
    dend_41 { pt3dadd( 386.663, 366.193, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 387.768, 365.896, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 388.873, 365.599, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 389.978, 365.303, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 391.01, 364.822, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 392.021, 364.287, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 393.034, 363.753, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 394.045, 363.218, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 394.989, 362.576, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 395.917, 361.907, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 396.846, 361.237, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 397.773, 360.569, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 398.52, 359.709, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 399.238, 358.818, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 399.955, 357.927, 65.1753, 0.2288 ) }
    dend_41 { pt3dadd( 400.672, 357.035, 65.1753, 0.2542 ) }
    dend_41 { pt3dadd( 401.39, 356.144, 65.1753, 0.2796 ) }
    // Section: dend_39, id: dend_39, parent: dend_36 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 302.988, 351.578, 49.3251, 0.6356 ) }
    dend_39 { pt3dadd( 303.255, 352.092, 49.6196, 0.3304 ) }
    dend_39 { pt3dadd( 303.573, 352.813, 51.6494, 0.2796 ) }
    dend_39 { pt3dadd( 303.89, 353.535, 53.6791, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_39 { pt3dadd( 304.208, 354.256, 55.7088, 0.2288 ) }
    dend_39 { pt3dadd( 304.414, 355.046, 57.3726, 0.2288 ) }
    dend_39 { pt3dadd( 304.12, 356.151, 57.3726, 0.2288 ) }
    dend_39 { pt3dadd( 304.293, 357.107, 57.3726, 0.2288 ) }
    dend_39 { pt3dadd( 305.176, 357.833, 57.3726, 0.2288 ) }
    dend_39 { pt3dadd( 304.342, 358.181, 58.8204, 0.2288 ) }
    dend_39 { pt3dadd( 303.437, 358.512, 60.3282, 0.2288 ) }
    dend_39 { pt3dadd( 302.532, 358.845, 61.836, 0.2288 ) }
    dend_39 { pt3dadd( 302.183, 359.471, 63.9604, 0.2288 ) }
    dend_39 { pt3dadd( 301.886, 360.123, 66.141, 0.2288 ) }
    dend_39 { pt3dadd( 301.703, 360.994, 67.865, 0.2542 ) }
    dend_39 { pt3dadd( 301.545, 361.914, 69.4831, 0.2796 ) }
    dend_39 { pt3dadd( 301.388, 362.835, 71.101, 0.305 ) }
    dend_39 { pt3dadd( 301.14, 363.627, 72.7322, 0.2796 ) }
    dend_39 { pt3dadd( 300.246, 363.514, 74.4568, 0.2542 ) }
    dend_39 { pt3dadd( 299.352, 363.401, 76.1816, 0.2288 ) }
    dend_39 { pt3dadd( 298.458, 363.288, 77.9061, 0.2288 ) }
    dend_39 { pt3dadd( 297.564, 363.174, 79.6309, 0.2288 ) }
    dend_39 { pt3dadd( 296.669, 363.062, 81.3554, 0.2288 ) }
    dend_39 { pt3dadd( 295.776, 362.947, 83.0754, 0.2288 ) }
    dend_39 { pt3dadd( 295.09, 362.03, 83.0754, 0.2288 ) }
    dend_39 { pt3dadd( 294.03, 361.972, 83.0754, 0.2288 ) }
    dend_39 { pt3dadd( 292.892, 362.089, 83.0754, 0.2288 ) }
    dend_39 { pt3dadd( 291.753, 362.206, 83.0754, 0.2288 ) }
    dend_39 { pt3dadd( 291.79, 362.502, 85.631, 0.2288 ) }
    dend_39 { pt3dadd( 291.887, 362.806, 88.3198, 0.2288 ) }
    dend_39 { pt3dadd( 291.985, 363.109, 91.0084, 0.2542 ) }
    dend_39 { pt3dadd( 292.083, 363.413, 93.6972, 0.2796 ) }
    dend_39 { pt3dadd( 292.18, 363.718, 96.3858, 0.305 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 302.988, 351.578, 49.3251, 0.6356 ) }
    dend_38 { pt3dadd( 302.063, 352.097, 49.7294, 0.305 ) }
    dend_38 { pt3dadd( 301.005, 352.424, 50.4294, 0.305 ) }
    dend_38 { pt3dadd( 299.947, 352.75, 51.1294, 0.305 ) }
    dend_38 { pt3dadd( 298.888, 353.077, 51.8294, 0.2796 ) }
    dend_38 { pt3dadd( 297.754, 353.195, 51.8647, 0.305 ) }
    dend_38 { pt3dadd( 297.039, 352.379, 51.8647, 0.3304 ) }
    dend_38 { pt3dadd( 296.376, 351.447, 51.8647, 0.4068 ) }
    dend_38 { pt3dadd( 295.686, 350.557, 51.9148, 0.3814 ) }
    dend_38 { pt3dadd( 294.625, 350.285, 52.7156, 0.3814 ) }
    dend_38 { pt3dadd( 293.562, 350.013, 53.5164, 0.356 ) }
    dend_38 { pt3dadd( 292.623, 349.966, 54.4468, 0.3814 ) }
    dend_38 { pt3dadd( 292.18, 350.836, 55.9051, 0.3814 ) }
    dend_38 { pt3dadd( 291.101, 351.065, 55.9955, 0.356 ) }
    dend_38 { pt3dadd( 289.967, 350.911, 55.9955, 0.3814 ) }
    dend_38 { pt3dadd( 289.263, 350.108, 55.9955, 0.4322 ) }
    dend_38 { pt3dadd( 288.677, 349.125, 55.9955, 0.5084 ) }
    dend_38 { pt3dadd( 287.833, 348.411, 56.5093, 0.5084 ) }
    dend_38 { pt3dadd( 286.929, 347.76, 57.143, 0.4576 ) }
    dend_38 { pt3dadd( 286.024, 347.108, 57.7763, 0.4068 ) }
    dend_38 { pt3dadd( 285.091, 346.507, 58.3736, 0.3814 ) }
    dend_38 { pt3dadd( 284.027, 346.126, 58.8154, 0.3814 ) }
    dend_38 { pt3dadd( 282.964, 345.745, 59.2572, 0.3814 ) }
    dend_38 { pt3dadd( 281.9, 345.364, 59.6994, 0.356 ) }
    dend_38 { pt3dadd( 280.837, 344.982, 60.1412, 0.305 ) }
    dend_38 { pt3dadd( 279.773, 344.601, 60.583, 0.2542 ) }
    dend_38 { pt3dadd( 278.709, 344.22, 61.0249, 0.2288 ) }
    dend_38 { pt3dadd( 277.684, 343.853, 61.8789, 0.2288 ) }
    dend_38 { pt3dadd( 276.661, 343.487, 62.7525, 0.2288 ) }
    dend_38 { pt3dadd( 275.638, 343.121, 63.6261, 0.2288 ) }
    dend_38 { pt3dadd( 274.615, 342.755, 64.4994, 0.2288 ) }
    dend_38 { pt3dadd( 273.591, 342.389, 65.373, 0.2288 ) }
    dend_38 { pt3dadd( 272.568, 342.023, 66.2466, 0.2288 ) }
    dend_38 { pt3dadd( 271.544, 341.657, 67.1199, 0.2288 ) }
    dend_38 { pt3dadd( 270.521, 341.291, 67.9935, 0.2542 ) }
    dend_38 { pt3dadd( 269.498, 340.925, 68.8668, 0.2796 ) }
    dend_38 { pt3dadd( 268.443, 340.576, 69.4803, 0.305 ) }
    dend_38 { pt3dadd( 267.358, 340.243, 69.8303, 0.2796 ) }
    dend_38 { pt3dadd( 266.273, 339.911, 70.1803, 0.2542 ) }
    dend_38 { pt3dadd( 265.187, 339.578, 70.5303, 0.2288 ) }
    dend_38 { pt3dadd( 264.103, 339.246, 70.8806, 0.2288 ) }
    dend_38 { pt3dadd( 263.017, 338.913, 71.2306, 0.2288 ) }
    dend_38 { pt3dadd( 261.931, 338.582, 71.5806, 0.2288 ) }
    dend_38 { pt3dadd( 261.063, 337.874, 72.0737, 0.2288 ) }
    dend_38 { pt3dadd( 260.207, 337.142, 72.5757, 0.2288 ) }
    dend_38 { pt3dadd( 259.352, 336.41, 73.0775, 0.2288 ) }
    dend_38 { pt3dadd( 258.496, 335.679, 73.5795, 0.2288 ) }
    dend_38 { pt3dadd( 257.589, 335.01, 73.8959, 0.2288 ) }
    dend_38 { pt3dadd( 256.594, 334.446, 73.8959, 0.2288 ) }
    dend_38 { pt3dadd( 256.273, 333.445, 74.7712, 0.2796 ) }
    dend_38 { pt3dadd( 256.019, 332.401, 75.7319, 0.3304 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 302.988, 351.578, 49.3251, 0.6356 ) }
    dend_37 { pt3dadd( 302.37, 350.984, 49.5323, 0.3814 ) }
    dend_37 { pt3dadd( 301.69, 350.108, 49.0272, 0.3814 ) }
    dend_37 { pt3dadd( 301.134, 349.207, 49.9125, 0.3814 ) }
    dend_37 { pt3dadd( 300.695, 348.57, 51.9439, 0.4322 ) }
    dend_37 { pt3dadd( 300.045, 348.028, 53.8227, 0.483 ) }
    dend_37 { pt3dadd( 299.398, 347.124, 54.4124, 0.4576 ) }
    dend_37 { pt3dadd( 298.401, 346.64, 55.053, 0.4322 ) }
    dend_37 { pt3dadd( 297.682, 345.793, 55.6604, 0.356 ) }
    dend_37 { pt3dadd( 297.2, 344.83, 56.1823, 0.356 ) }
    dend_37 { pt3dadd( 297.016, 343.712, 56.5793, 0.356 ) }
    dend_37 { pt3dadd( 296.831, 342.596, 56.9761, 0.4068 ) }
    dend_37 { pt3dadd( 296.647, 341.478, 57.3728, 0.4068 ) }
    dend_37 { pt3dadd( 296.463, 340.361, 57.7696, 0.4576 ) }
    dend_37 { pt3dadd( 295.61, 339.686, 57.8315, 0.4322 ) }
    dend_37 { pt3dadd( 294.657, 339.082, 58.0745, 0.4576 ) }
    dend_37 { pt3dadd( 293.771, 338.451, 58.9467, 0.3814 ) }
    dend_37 { pt3dadd( 292.885, 337.822, 59.8189, 0.356 ) }
    dend_37 { pt3dadd( 291.924, 337.241, 60.1264, 0.2796 ) }
    dend_37 { pt3dadd( 290.924, 336.687, 60.1264, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_37 { pt3dadd( 290.37, 335.838, 60.7869, 0.305 ) }
    dend_37 { pt3dadd( 290.077, 334.819, 61.8338, 0.3814 ) }
    dend_37 { pt3dadd( 289.785, 333.799, 62.8804, 0.4322 ) }
    dend_37 { pt3dadd( 289.469, 333.634, 63.1319, 0.4322 ) }
    dend_37 { pt3dadd( 288.492, 333.128, 63.9058, 0.4322 ) }
    dend_37 { pt3dadd( 287.516, 332.623, 64.6794, 0.4576 ) }
    dend_37 { pt3dadd( 286.54, 332.117, 65.4534, 0.5084 ) }
    dend_37 { pt3dadd( 285.563, 331.611, 66.227, 0.483 ) }
    dend_37 { pt3dadd( 284.904, 330.835, 67.1504, 0.3814 ) }
    dend_37 { pt3dadd( 284.474, 329.862, 68.1822, 0.2796 ) }
    dend_37 { pt3dadd( 284.044, 328.89, 69.214, 0.2288 ) }
    dend_37 { pt3dadd( 283.612, 327.917, 70.2458, 0.2288 ) }
    dend_37 { pt3dadd( 283.182, 326.945, 71.2779, 0.2288 ) }
    dend_37 { pt3dadd( 282.752, 325.971, 72.3097, 0.2288 ) }
    dend_37 { pt3dadd( 282.322, 324.999, 73.3415, 0.2288 ) }
    dend_37 { pt3dadd( 281.892, 324.027, 74.3733, 0.2288 ) }
    dend_37 { pt3dadd( 281.461, 323.054, 75.4051, 0.2288 ) }
    dend_37 { pt3dadd( 281.03, 322.082, 76.4369, 0.2542 ) }
    dend_37 { pt3dadd( 280.6, 321.109, 77.4687, 0.2796 ) }
    dend_37 { pt3dadd( 280.17, 320.137, 78.5005, 0.305 ) }
    dend_37 { pt3dadd( 279.605, 319.203, 79.2453, 0.2796 ) }
    dend_37 { pt3dadd( 278.938, 318.3, 79.7734, 0.2542 ) }
    dend_37 { pt3dadd( 278.27, 317.395, 80.3012, 0.2288 ) }
    dend_37 { pt3dadd( 277.603, 316.491, 80.8293, 0.2542 ) }
    dend_37 { pt3dadd( 276.936, 315.587, 81.3571, 0.2796 ) }
    dend_37 { pt3dadd( 276.269, 314.684, 81.8849, 0.3304 ) }
    dend_37 { pt3dadd( 275.602, 313.78, 82.413, 0.3304 ) }
    dend_37 { pt3dadd( 275.345, 312.739, 82.922, 0.3304 ) }
    dend_37 { pt3dadd( 275.346, 311.613, 83.4193, 0.2796 ) }
    dend_37 { pt3dadd( 275.347, 310.487, 83.9168, 0.2542 ) }
    dend_37 { pt3dadd( 275.347, 309.362, 84.4141, 0.2288 ) }
    dend_37 { pt3dadd( 275.348, 308.236, 84.9114, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 346.649, 396.625, 33.04, 0.6356 ) }
    dend_24 { pt3dadd( 346.828, 397.466, 33.04, 0.3814 ) }
    dend_24 { pt3dadd( 346.983, 398.598, 33.0397, 0.3814 ) }
    dend_24 { pt3dadd( 347.194, 399.723, 33.0383, 0.356 ) }
    dend_24 { pt3dadd( 347.307, 400.855, 33.028, 0.4068 ) }
    dend_24 { pt3dadd( 347.243, 401.996, 32.9585, 0.4322 ) }
    dend_24 { pt3dadd( 347.013, 403.093, 32.5828, 0.483 ) }
    dend_24 { pt3dadd( 346.666, 404.16, 32.0824, 0.483 ) }
    dend_24 { pt3dadd( 346.48, 405.276, 31.9379, 0.4576 ) }
    dend_24 { pt3dadd( 346.587, 406.405, 32.0328, 0.3814 ) }
    dend_24 { pt3dadd( 346.645, 407.51, 32.4439, 0.356 ) }
    dend_24 { pt3dadd( 346.456, 408.611, 32.5142, 0.356 ) }
    dend_24 { pt3dadd( 346.272, 409.729, 32.221, 0.356 ) }
    dend_24 { pt3dadd( 346.058, 410.82, 32.6626, 0.3304 ) }
    dend_24 { pt3dadd( 345.53, 411.64, 32.48, 0.305 ) }
    dend_24 { pt3dadd( 345.12, 412.655, 33.0047, 0.3304 ) }
    dend_24 { pt3dadd( 344.78, 413.745, 33.04, 0.4068 ) }
    dend_24 { pt3dadd( 344.687, 414.88, 33.04, 0.5338 ) }
    dend_24 { pt3dadd( 345.085, 415.888, 33.04, 0.6102 ) }
    dend_24 { pt3dadd( 345.613, 416.893, 33.2245, 0.6102 ) }
    dend_24 { pt3dadd( 345.717, 418.027, 33.32, 0.5592 ) }
    dend_24 { pt3dadd( 345.602, 419.16, 33.3959, 0.5338 ) }
    dend_24 { pt3dadd( 345.662, 420.295, 33.6, 0.5084 ) }
    dend_24 { pt3dadd( 345.826, 421.415, 33.6, 0.4322 ) }
    dend_24 { pt3dadd( 346.269, 422.46, 33.6, 0.3814 ) }
    dend_24 { pt3dadd( 346.632, 423.509, 33.6, 0.356 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 58/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 346.649, 396.625, 33.04, 0.6356 ) }
    dend_23 { pt3dadd( 347.479, 397.097, 33.0397, 0.4068 ) }
    dend_23 { pt3dadd( 348.607, 397.28, 33.0344, 0.4322 ) }
    dend_23 { pt3dadd( 349.539, 397.941, 33.0128, 0.4576 ) }
    dend_23 { pt3dadd( 350.345, 398.753, 32.9207, 0.4322 ) }
    dend_23 { pt3dadd( 351.107, 399.579, 32.4402, 0.4322 ) }
    dend_23 { pt3dadd( 352.109, 400.111, 32.151, 0.4322 ) }
    dend_23 { pt3dadd( 353.042, 400.704, 32.8199, 0.483 ) }
    dend_23 { pt3dadd( 353.776, 401.575, 33.0414, 0.483 ) }
    dend_23 { pt3dadd( 354.658, 402.302, 33.0476, 0.483 ) }
    dend_23 { pt3dadd( 355.551, 403.019, 33.075, 0.4576 ) }
    dend_23 { pt3dadd( 356.38, 403.801, 33.2142, 0.4322 ) }
    dend_23 { pt3dadd( 357.191, 404.569, 33.8164, 0.4068 ) }
    dend_23 { pt3dadd( 357.944, 405.415, 34.16, 0.356 ) }
    dend_23 { pt3dadd( 358.759, 406.218, 34.16, 0.3304 ) }
    dend_23 { pt3dadd( 359.598, 406.996, 34.16, 0.2796 ) }
    dend_23 { pt3dadd( 360.485, 407.715, 34.16, 0.2796 ) }
    dend_23 { pt3dadd( 361.025, 408.719, 34.16, 0.305 ) }
    dend_23 { pt3dadd( 361.502, 409.758, 34.1592, 0.3814 ) }
    dend_23 { pt3dadd( 361.927, 410.82, 34.155, 0.4322 ) }
    dend_23 { pt3dadd( 362.432, 411.846, 34.1303, 0.4576 ) }
    dend_23 { pt3dadd( 363.149, 412.729, 34.0348, 0.483 ) }
    dend_23 { pt3dadd( 363.829, 413.622, 33.5451, 0.5338 ) }
    dend_23 { pt3dadd( 364.32, 414.318, 32.76, 0.5848 ) }
    dend_23 { pt3dadd( 365.095, 415.128, 32.76, 0.5848 ) }
    dend_23 { pt3dadd( 365.405, 416.186, 32.76, 0.5338 ) }
    dend_23 { pt3dadd( 366.073, 417.1, 32.76, 0.5084 ) }
    dend_23 { pt3dadd( 367.07, 417.659, 32.76, 0.5338 ) }
    dend_23 { pt3dadd( 368.028, 418.26, 33.04, 0.5592 ) }
    dend_23 { pt3dadd( 368.918, 418.973, 33.04, 0.5592 ) }
    dend_23 { pt3dadd( 369.841, 419.632, 33.04, 0.5084 ) }
    dend_23 { pt3dadd( 370.643, 420.437, 33.04, 0.5084 ) }
    dend_23 { pt3dadd( 371.509, 421.153, 32.7832, 0.4576 ) }
    dend_23 { pt3dadd( 372.268, 421.995, 32.76, 0.4068 ) }
    dend_23 { pt3dadd( 373.329, 422.328, 32.76, 0.305 ) }
    dend_23 { pt3dadd( 374.421, 422.669, 32.76, 0.305 ) }
    dend_23 { pt3dadd( 375.494, 423.06, 32.76, 0.356 ) }
    dend_23 { pt3dadd( 376.565, 423.448, 32.76, 0.4322 ) }
    dend_23 { pt3dadd( 377.663, 423.632, 32.76, 0.4576 ) }
    dend_23 { pt3dadd( 378.778, 423.852, 32.76, 0.483 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 297.601, 346.632, 22.7374, 0.7626 ) }
    dend_19 { pt3dadd( 296.547, 346.026, 22.12, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 295.684, 345.327, 22.12, 0.661 ) }
    dend_19 { pt3dadd( 295.12, 344.338, 22.12, 0.6864 ) }
    dend_19 { pt3dadd( 294.611, 343.364, 21.56, 0.7118 ) }
    dend_19 { pt3dadd( 293.736, 342.746, 21.0, 0.6864 ) }
    dend_19 { pt3dadd( 293.093, 342.087, 20.72, 0.6102 ) }
    dend_19 { pt3dadd( 292.684, 341.042, 20.44, 0.5848 ) }
    dend_19 { pt3dadd( 291.647, 340.798, 19.9494, 0.5848 ) }
    dend_19 { pt3dadd( 290.504, 340.798, 19.88, 0.5848 ) }
    dend_19 { pt3dadd( 289.599, 340.4, 19.6162, 0.5592 ) }
    dend_19 { pt3dadd( 288.913, 339.52, 19.3676, 0.5084 ) }
    dend_19 { pt3dadd( 288.545, 338.451, 19.32, 0.5084 ) }
    dend_19 { pt3dadd( 288.402, 337.322, 19.2368, 0.5338 ) }
    dend_19 { pt3dadd( 287.758, 336.441, 18.8059, 0.5848 ) }
    dend_19 { pt3dadd( 286.829, 335.834, 18.76, 0.6102 ) }
    dend_19 { pt3dadd( 285.691, 335.764, 18.76, 0.6102 ) }
    dend_19 { pt3dadd( 284.57, 335.818, 18.76, 0.6356 ) }
    dend_19 { pt3dadd( 284.205, 334.786, 18.76, 0.6102 ) }
    dend_19 { pt3dadd( 283.513, 334.162, 18.2652, 0.5338 ) }
    dend_19 { pt3dadd( 282.448, 334.162, 17.36, 0.4068 ) }
    dend_19 { pt3dadd( 281.472, 333.792, 17.36, 0.3304 ) }
    dend_19 { pt3dadd( 280.525, 333.262, 17.64, 0.305 ) }
    dend_19 { pt3dadd( 279.59, 332.668, 17.3916, 0.2796 ) }
    dend_19 { pt3dadd( 279.262, 331.595, 17.36, 0.2542 ) }
    dend_19 { pt3dadd( 279.25, 330.574, 18.2879, 0.2796 ) }
    dend_19 { pt3dadd( 279.25, 329.472, 18.76, 0.3814 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 297.601, 346.632, 22.7374, 0.7626 ) }
    dend_18 { pt3dadd( 296.836, 347.101, 22.9118, 0.5592 ) }
    dend_18 { pt3dadd( 295.804, 347.592, 22.9485, 0.6864 ) }
    dend_18 { pt3dadd( 294.74, 348.009, 22.8816, 0.7372 ) }
    dend_18 { pt3dadd( 293.725, 348.473, 22.3236, 0.6864 ) }
    dend_18 { pt3dadd( 292.627, 348.745, 22.0338, 0.5848 ) }
    dend_18 { pt3dadd( 291.551, 348.845, 22.8222, 0.5338 ) }
    dend_18 { pt3dadd( 290.526, 349.211, 23.6452, 0.4576 ) }
    dend_18 { pt3dadd( 289.598, 349.644, 22.5646, 0.483 ) }
    dend_18 { pt3dadd( 288.75, 350.357, 21.8985, 0.5084 ) }
    dend_18 { pt3dadd( 287.868, 351.082, 21.9755, 0.6102 ) }
    dend_18 { pt3dadd( 286.789, 351.325, 22.6327, 0.6864 ) }
    dend_18 { pt3dadd( 285.682, 351.573, 22.9359, 0.6864 ) }
    dend_18 { pt3dadd( 284.547, 351.689, 23.0538, 0.6864 ) }
    dend_18 { pt3dadd( 283.449, 351.502, 23.567, 0.6356 ) }
    dend_18 { pt3dadd( 282.378, 351.77, 24.0204, 0.6356 ) }
    dend_18 { pt3dadd( 281.354, 352.272, 24.0848, 0.5848 ) }
    dend_18 { pt3dadd( 280.228, 352.303, 24.1097, 0.5084 ) }
    dend_18 { pt3dadd( 279.224, 351.781, 24.2371, 0.483 ) }
    dend_18 { pt3dadd( 278.189, 351.465, 24.9645, 0.5338 ) }
    dend_18 { pt3dadd( 277.175, 351.664, 25.9599, 0.6864 ) }
    dend_18 { pt3dadd( 276.322, 352.4, 26.2942, 0.788 ) }
    dend_18 { pt3dadd( 275.604, 353.289, 26.2136, 0.8136 ) }
    dend_18 { pt3dadd( 274.773, 354.043, 25.8902, 0.7626 ) }
    dend_18 { pt3dadd( 273.759, 354.507, 25.4528, 0.6356 ) }
    dend_18 { pt3dadd( 272.683, 354.659, 25.8628, 0.5084 ) }
    dend_18 { pt3dadd( 271.615, 354.321, 26.3147, 0.4068 ) }
    dend_18 { pt3dadd( 270.53, 354.367, 26.4118, 0.4322 ) }
    dend_18 { pt3dadd( 269.658, 355.052, 26.7644, 0.483 ) }
    dend_18 { pt3dadd( 269.009, 355.953, 27.4366, 0.5592 ) }
    dend_18 { pt3dadd( 268.276, 356.8, 27.7491, 0.5848 ) }
    dend_18 { pt3dadd( 267.366, 357.384, 27.1586, 0.6102 ) }
    dend_18 { pt3dadd( 266.333, 357.684, 26.364, 0.5592 ) }
    dend_18 { pt3dadd( 265.258, 358.04, 26.1568, 0.4576 ) }
    dend_18 { pt3dadd( 264.297, 358.633, 26.2046, 0.3304 ) }
    dend_18 { pt3dadd( 263.698, 359.477, 26.9346, 0.2542 ) }
    dend_18 { pt3dadd( 263.087, 359.742, 27.4397, 0.2542 ) }
    dend_18 { pt3dadd( 262.06, 359.294, 27.4386, 0.3304 ) }
    dend_18 { pt3dadd( 260.921, 359.406, 27.4308, 0.4322 ) }
    dend_18 { pt3dadd( 259.79, 359.561, 27.3801, 0.483 ) }
    dend_18 { pt3dadd( 258.65, 359.571, 27.1664, 0.483 ) }
    dend_18 { pt3dadd( 257.528, 359.635, 26.9178, 0.4576 ) }
    dend_18 { pt3dadd( 256.43, 359.861, 27.426, 0.4576 ) }
    dend_18 { pt3dadd( 255.345, 360.199, 27.6192, 0.4576 ) }
    dend_18 { pt3dadd( 254.37, 360.736, 28.1512, 0.4576 ) }
    dend_18 { pt3dadd( 253.499, 361.449, 28.5345, 0.483 ) }
    dend_18 { pt3dadd( 252.486, 361.959, 28.392, 0.5338 ) }
    dend_18 { pt3dadd( 251.404, 362.263, 27.9336, 0.6102 ) }
    dend_18 { pt3dadd( 250.316, 362.53, 27.4994, 0.661 ) }
    dend_18 { pt3dadd( 249.225, 362.847, 27.6777, 0.6102 ) }
    dend_18 { pt3dadd( 248.119, 363.096, 27.8743, 0.5338 ) }
    dend_18 { pt3dadd( 246.992, 363.159, 27.9894, 0.4576 ) }
    dend_18 { pt3dadd( 245.887, 362.97, 28.4707, 0.483 ) }
    dend_18 { pt3dadd( 244.847, 362.916, 28.0476, 0.4576 ) }
    dend_18 { pt3dadd( 243.853, 363.093, 26.7355, 0.4068 ) }
    dend_18 { pt3dadd( 242.807, 362.987, 25.9655, 0.305 ) }
    dend_18 { pt3dadd( 241.708, 363.034, 26.0403, 0.305 ) }
    dend_18 { pt3dadd( 240.684, 363.509, 25.9795, 0.3814 ) }
    dend_18 { pt3dadd( 239.685, 363.231, 26.6316, 0.5338 ) }
    dend_18 { pt3dadd( 238.897, 362.431, 26.6479, 0.6356 ) }
    dend_18 { pt3dadd( 238.0, 361.734, 26.3474, 0.661 ) }
    dend_18 { pt3dadd( 237.023, 361.14, 26.32, 0.5848 ) }
    dend_18 { pt3dadd( 236.023, 360.584, 26.3194, 0.4576 ) }
    dend_18 { pt3dadd( 235.035, 360.01, 26.3169, 0.3304 ) }
    dend_18 { pt3dadd( 234.017, 359.488, 26.3021, 0.2542 ) }
    dend_18 { pt3dadd( 233.101, 358.804, 26.2363, 0.2542 ) }
    dend_18 { pt3dadd( 232.065, 358.366, 25.7908, 0.305 ) }
    dend_18 { pt3dadd( 230.999, 358.542, 24.9376, 0.3814 ) }
    dend_18 { pt3dadd( 230.092, 359.126, 24.0139, 0.4322 ) }
    dend_18 { pt3dadd( 229.088, 359.621, 23.4237, 0.483 ) }
    dend_18 { pt3dadd( 228.066, 360.095, 22.96, 0.5084 ) }
    dend_18 { pt3dadd( 226.973, 360.43, 22.9589, 0.5338 ) }
    dend_18 { pt3dadd( 225.83, 360.379, 22.953, 0.5084 ) }
    dend_18 { pt3dadd( 224.712, 360.19, 22.911, 0.4576 ) }
    dend_18 { pt3dadd( 223.699, 360.708, 22.6736, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( 222.733, 361.178, 21.9192, 0.3304 ) }
    dend_18 { pt3dadd( 221.608, 360.982, 21.9696, 0.305 ) }
    dend_18 { pt3dadd( 220.475, 360.933, 22.3297, 0.305 ) }
    dend_18 { pt3dadd( 219.333, 360.939, 22.5257, 0.3304 ) }
    dend_18 { pt3dadd( 218.203, 360.981, 22.6702, 0.3814 ) }
    dend_18 { pt3dadd( 217.147, 361.221, 21.9909, 0.483 ) }
    dend_18 { pt3dadd( 216.283, 361.969, 21.8341, 0.5592 ) }
    dend_18 { pt3dadd( 215.343, 362.614, 21.8042, 0.6356 ) }
    dend_18 { pt3dadd( 214.301, 363.067, 21.6208, 0.6356 ) }
    dend_18 { pt3dadd( 213.227, 363.385, 21.1812, 0.5848 ) }
    dend_18 { pt3dadd( 212.172, 363.825, 21.3226, 0.483 ) }
    dend_18 { pt3dadd( 211.106, 364.191, 21.1464, 0.4068 ) }
    dend_18 { pt3dadd( 210.068, 364.522, 20.5733, 0.4322 ) }
    dend_18 { pt3dadd( 209.262, 365.287, 20.1163, 0.5338 ) }
    dend_18 { pt3dadd( 208.676, 366.238, 19.616, 0.6864 ) }
    dend_18 { pt3dadd( 207.993, 367.126, 19.6414, 0.7626 ) }
    dend_18 { pt3dadd( 207.069, 367.796, 19.8078, 0.7626 ) }
    dend_18 { pt3dadd( 206.154, 368.452, 20.2787, 0.6356 ) }
    dend_18 { pt3dadd( 205.293, 369.154, 20.8975, 0.5338 ) }
    dend_18 { pt3dadd( 204.441, 369.841, 21.546, 0.4576 ) }
    dend_18 { pt3dadd( 203.484, 370.282, 21.6082, 0.483 ) }
    dend_18 { pt3dadd( 202.542, 370.784, 20.8365, 0.483 ) }
    dend_18 { pt3dadd( 201.852, 371.159, 20.9728, 0.4322 ) }
    dend_18 { pt3dadd( 201.17, 372.045, 20.3748, 0.356 ) }
    dend_18 { pt3dadd( 200.184, 372.485, 20.195, 0.305 ) }
    dend_18 { pt3dadd( 199.093, 372.753, 20.195, 0.356 ) }
    dend_18 { pt3dadd( 199.095, 373.897, 20.195, 0.3814 ) }
    dend_18 { pt3dadd( 198.412, 374.544, 20.195, 0.4576 ) }
    dend_18 { pt3dadd( 197.342, 374.746, 20.7374, 0.4576 ) }
    dend_18 { pt3dadd( 196.292, 374.79, 21.8375, 0.483 ) }
    dend_18 { pt3dadd( 195.264, 374.376, 22.031, 0.5084 ) }
    dend_18 { pt3dadd( 194.241, 373.864, 22.031, 0.5592 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 32/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 271.134, 372.986, 42.1431, 0.6864 ) }
    dend_11 { pt3dadd( 270.939, 373.996, 43.685, 0.2796 ) }
    dend_11 { pt3dadd( 270.674, 374.983, 44.9294, 0.305 ) }
    dend_11 { pt3dadd( 270.343, 375.994, 45.9578, 0.3304 ) }
    dend_11 { pt3dadd( 270.85, 376.651, 46.6802, 0.3814 ) }
    dend_11 { pt3dadd( 271.888, 377.081, 47.2086, 0.3814 ) }
    dend_11 { pt3dadd( 272.923, 377.514, 47.7338, 0.3814 ) }
    dend_11 { pt3dadd( 273.606, 378.432, 47.7338, 0.4322 ) }
    dend_11 { pt3dadd( 273.969, 379.443, 48.1104, 0.4322 ) }
    dend_11 { pt3dadd( 274.02, 380.545, 48.8536, 0.4322 ) }
    dend_11 { pt3dadd( 274.07, 381.646, 49.597, 0.356 ) }
    dend_11 { pt3dadd( 274.498, 382.546, 50.1925, 0.356 ) }
    dend_11 { pt3dadd( 275.448, 383.163, 50.5826, 0.356 ) }
    dend_11 { pt3dadd( 276.397, 383.781, 50.9729, 0.356 ) }
    dend_11 { pt3dadd( 277.347, 384.399, 51.3629, 0.356 ) }
    dend_11 { pt3dadd( 277.865, 385.396, 51.4058, 0.4068 ) }
    dend_11 { pt3dadd( 278.331, 386.442, 51.4058, 0.483 ) }
    dend_11 { pt3dadd( 278.798, 387.45, 51.9694, 0.483 ) }
    dend_11 { pt3dadd( 279.266, 388.446, 52.7386, 0.3814 ) }
    dend_11 { pt3dadd( 279.734, 389.442, 53.508, 0.305 ) }
    dend_11 { pt3dadd( 280.63, 390.049, 53.7006, 0.2796 ) }
    dend_11 { pt3dadd( 281.005, 391.11, 54.0994, 0.3304 ) }
    dend_11 { pt3dadd( 281.367, 392.183, 54.507, 0.3304 ) }
    dend_11 { pt3dadd( 281.727, 393.255, 54.9144, 0.356 ) }
    dend_11 { pt3dadd( 282.089, 394.328, 55.3218, 0.3304 ) }
    dend_11 { pt3dadd( 282.435, 395.404, 55.7424, 0.3304 ) }
    dend_11 { pt3dadd( 282.768, 396.484, 56.1778, 0.2796 ) }
    dend_11 { pt3dadd( 283.1, 397.564, 56.6132, 0.2542 ) }
    dend_11 { pt3dadd( 283.433, 398.644, 57.0486, 0.2288 ) }
    dend_11 { pt3dadd( 283.719, 399.734, 57.4921, 0.2288 ) }
    dend_11 { pt3dadd( 283.871, 400.852, 57.9597, 0.2288 ) }
    dend_11 { pt3dadd( 284.023, 401.97, 58.4273, 0.2288 ) }
    dend_11 { pt3dadd( 284.202, 403.087, 58.7496, 0.2542 ) }
    dend_11 { pt3dadd( 284.437, 404.207, 58.7496, 0.2796 ) }
    dend_11 { pt3dadd( 284.672, 405.326, 58.7496, 0.305 ) }
    dend_11 { pt3dadd( 284.676, 406.417, 59.4527, 0.2796 ) }
    dend_11 { pt3dadd( 284.619, 407.501, 60.3406, 0.2542 ) }
    dend_11 { pt3dadd( 284.667, 408.545, 61.327, 0.2288 ) }
    dend_11 { pt3dadd( 285.112, 409.439, 62.692, 0.2288 ) }
    dend_11 { pt3dadd( 285.688, 410.301, 63.817, 0.2288 ) }
    dend_11 { pt3dadd( 286.379, 411.133, 64.7256, 0.2796 ) }
    dend_11 { pt3dadd( 287.07, 411.966, 65.6342, 0.3304 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 271.134, 372.986, 42.1431, 0.6864 ) }
    dend_10 { pt3dadd( 269.954, 372.229, 42.2122, 0.3814 ) }
    dend_10 { pt3dadd( 268.871, 371.976, 42.7946, 0.3814 ) }
    dend_10 { pt3dadd( 267.765, 371.901, 43.4711, 0.3304 ) }
    dend_10 { pt3dadd( 266.645, 371.822, 43.7777, 0.3814 ) }
    dend_10 { pt3dadd( 265.609, 371.44, 43.5324, 0.4068 ) }
    dend_10 { pt3dadd( 264.82, 370.651, 43.6204, 0.483 ) }
    dend_10 { pt3dadd( 264.063, 369.835, 44.0723, 0.483 ) }
    dend_10 { pt3dadd( 263.091, 369.273, 44.2347, 0.483 ) }
    dend_10 { pt3dadd( 262.005, 368.924, 44.207, 0.4576 ) }
    dend_10 { pt3dadd( 260.945, 368.503, 44.0269, 0.4576 ) }
    dend_10 { pt3dadd( 259.85, 368.258, 43.8393, 0.4322 ) }
    dend_10 { pt3dadd( 258.727, 368.228, 44.2708, 0.4068 ) }
    dend_10 { pt3dadd( 257.637, 368.092, 44.9924, 0.3814 ) }
    dend_10 { pt3dadd( 256.567, 367.746, 45.3508, 0.4322 ) }
    dend_10 { pt3dadd( 255.48, 367.421, 45.36, 0.483 ) }
    dend_10 { pt3dadd( 254.342, 367.322, 45.36, 0.5338 ) }
    dend_10 { pt3dadd( 253.206, 367.221, 45.36, 0.483 ) }
    dend_10 { pt3dadd( 252.094, 366.961, 45.36, 0.4322 ) }
    dend_10 { pt3dadd( 250.999, 366.628, 45.3611, 0.3814 ) }
    dend_10 { pt3dadd( 249.89, 366.363, 45.3664, 0.3814 ) }
    dend_10 { pt3dadd( 248.757, 366.327, 45.4068, 0.356 ) }
    dend_10 { pt3dadd( 247.644, 366.476, 45.7968, 0.3304 ) }
    dend_10 { pt3dadd( 246.666, 366.909, 46.4094, 0.305 ) }
    dend_10 { pt3dadd( 245.792, 367.612, 46.949, 0.305 ) }
    dend_10 { pt3dadd( 244.799, 368.111, 47.3808, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 243.693, 368.383, 47.4037, 0.2542 ) }
    dend_10 { pt3dadd( 242.694, 368.863, 47.483, 0.2288 ) }
    dend_10 { pt3dadd( 241.762, 369.271, 47.4312, 0.2542 ) }
    dend_10 { pt3dadd( 240.717, 369.707, 47.8341, 0.305 ) }
    dend_10 { pt3dadd( 239.663, 370.121, 48.193, 0.356 ) }
    dend_10 { pt3dadd( 238.545, 370.356, 48.193, 0.356 ) }
    dend_10 { pt3dadd( 237.759, 371.085, 48.193, 0.305 ) }
    dend_10 { pt3dadd( 237.123, 372.037, 48.193, 0.2542 ) }
    dend_10 { pt3dadd( 236.214, 372.565, 48.4193, 0.2288 ) }
    dend_10 { pt3dadd( 235.102, 372.78, 48.8135, 0.2288 ) }
    dend_10 { pt3dadd( 233.99, 372.997, 49.2075, 0.2288 ) }
    dend_10 { pt3dadd( 232.883, 373.229, 49.5698, 0.2288 ) }
    dend_10 { pt3dadd( 231.82, 373.653, 49.5698, 0.2288 ) }
    dend_10 { pt3dadd( 230.758, 374.079, 49.5698, 0.2288 ) }
    dend_10 { pt3dadd( 229.645, 374.113, 49.7314, 0.2288 ) }
    dend_10 { pt3dadd( 228.513, 373.987, 49.9593, 0.2288 ) }
    dend_10 { pt3dadd( 227.379, 373.863, 50.1875, 0.2288 ) }
    dend_10 { pt3dadd( 226.245, 373.737, 50.4154, 0.2288 ) }
    dend_10 { pt3dadd( 225.193, 374.056, 50.4879, 0.2288 ) }
    dend_10 { pt3dadd( 224.177, 374.581, 50.4879, 0.2288 ) }
    dend_10 { pt3dadd( 223.133, 374.922, 50.6372, 0.2288 ) }
    dend_10 { pt3dadd( 222.016, 374.794, 51.1647, 0.2288 ) }
    dend_10 { pt3dadd( 220.901, 374.666, 51.6919, 0.2288 ) }
    dend_10 { pt3dadd( 219.786, 374.443, 51.8647, 0.2288 ) }
    dend_10 { pt3dadd( 218.674, 374.174, 51.8647, 0.2288 ) }
    dend_10 { pt3dadd( 217.564, 374.135, 52.0694, 0.2288 ) }
    dend_10 { pt3dadd( 216.454, 374.349, 52.4997, 0.2288 ) }
    dend_10 { pt3dadd( 215.344, 374.564, 52.9301, 0.2542 ) }
    dend_10 { pt3dadd( 214.235, 374.778, 53.3602, 0.2796 ) }
    dend_10 { pt3dadd( 213.119, 374.951, 53.7684, 0.305 ) }
    dend_10 { pt3dadd( 211.982, 374.968, 54.0921, 0.305 ) }
    dend_10 { pt3dadd( 210.846, 374.985, 54.4158, 0.356 ) }
    dend_10 { pt3dadd( 209.71, 375.002, 54.7394, 0.4068 ) }
    dend_10 { pt3dadd( 208.574, 375.019, 55.0631, 0.4322 ) }
    dend_10 { pt3dadd( 207.525, 375.465, 55.0777, 0.356 ) }
    dend_10 { pt3dadd( 206.481, 375.932, 55.0777, 0.2796 ) }
    dend_10 { pt3dadd( 205.436, 376.399, 55.0777, 0.2288 ) }
    dend_10 { pt3dadd( 204.404, 376.886, 55.1272, 0.2288 ) }
    dend_10 { pt3dadd( 203.444, 377.494, 55.4655, 0.2288 ) }
    dend_10 { pt3dadd( 202.485, 378.101, 55.8034, 0.2288 ) }
    dend_10 { pt3dadd( 201.526, 378.709, 56.1414, 0.2542 ) }
    dend_10 { pt3dadd( 200.566, 379.316, 56.4796, 0.3304 ) }
    dend_10 { pt3dadd( 199.606, 379.923, 56.8176, 0.4068 ) }
    dend_10 { pt3dadd( 198.568, 380.383, 56.9136, 0.4322 ) }
    dend_10 { pt3dadd( 197.496, 380.786, 56.9136, 0.3814 ) }
    dend_10 { pt3dadd( 196.425, 381.188, 56.9136, 0.3814 ) }
    dend_10 { pt3dadd( 195.324, 381.288, 57.1099, 0.4068 ) }
    dend_10 { pt3dadd( 194.2, 381.138, 57.4686, 0.4322 ) }
    dend_10 { pt3dadd( 193.075, 380.99, 57.8276, 0.3814 ) }
    dend_10 { pt3dadd( 191.951, 380.84, 58.1862, 0.3814 ) }
    dend_10 { pt3dadd( 190.826, 380.69, 58.5449, 0.4322 ) }
    dend_10 { pt3dadd( 189.755, 380.366, 58.7496, 0.483 ) }
    dend_10 { pt3dadd( 188.755, 379.809, 58.7496, 0.4322 ) }
    dend_10 { pt3dadd( 187.757, 379.252, 58.7496, 0.3304 ) }
    dend_10 { pt3dadd( 186.757, 378.695, 58.7496, 0.2542 ) }
    dend_10 { pt3dadd( 185.758, 378.138, 58.7496, 0.2542 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 288.286, 355.853, 32.9742, 0.7372 ) }
    dend_4 { pt3dadd( 287.654, 355.617, 32.1404, 0.2288 ) }
    dend_4 { pt3dadd( 286.587, 355.326, 31.92, 0.2542 ) }
    dend_4 { pt3dadd( 285.489, 355.129, 31.92, 0.305 ) }
    dend_4 { pt3dadd( 284.643, 354.365, 31.9278, 0.4322 ) }
    dend_4 { pt3dadd( 283.578, 353.965, 32.2, 0.5592 ) }
    dend_4 { pt3dadd( 282.453, 353.763, 32.2, 0.6864 ) }
    dend_4 { pt3dadd( 281.418, 353.32, 32.4089, 0.6864 ) }
    dend_4 { pt3dadd( 280.365, 352.9, 32.48, 0.661 ) }
    dend_4 { pt3dadd( 279.377, 352.369, 32.48, 0.6102 ) }
    dend_4 { pt3dadd( 278.463, 351.73, 32.48, 0.6356 ) }
    dend_4 { pt3dadd( 277.562, 351.058, 32.5304, 0.6356 ) }
    dend_4 { pt3dadd( 276.626, 350.638, 32.79, 0.661 ) }
    dend_4 { pt3dadd( 275.627, 350.181, 32.0502, 0.6102 ) }
    dend_4 { pt3dadd( 274.519, 349.968, 31.7694, 0.5848 ) }
    dend_4 { pt3dadd( 273.397, 349.942, 32.2468, 0.4576 ) }
    dend_4 { pt3dadd( 272.263, 349.895, 32.0328, 0.4322 ) }
    dend_4 { pt3dadd( 271.168, 349.583, 31.8811, 0.4322 ) }
    dend_4 { pt3dadd( 270.309, 348.846, 31.6977, 0.5592 ) }
    dend_4 { pt3dadd( 269.68, 347.948, 30.9397, 0.6102 ) }
    dend_4 { pt3dadd( 268.933, 347.086, 30.8988, 0.6102 ) }
    dend_4 { pt3dadd( 268.116, 346.308, 31.3541, 0.5338 ) }
    dend_4 { pt3dadd( 267.172, 345.703, 31.9018, 0.483 ) }
    dend_4 { pt3dadd( 266.151, 345.191, 31.92, 0.483 ) }
    dend_4 { pt3dadd( 265.095, 344.75, 31.92, 0.483 ) }
    dend_4 { pt3dadd( 264.184, 344.06, 31.92, 0.483 ) }
    dend_4 { pt3dadd( 263.406, 343.222, 31.9256, 0.4576 ) }
    dend_4 { pt3dadd( 262.474, 342.563, 31.9488, 0.483 ) }
    dend_4 { pt3dadd( 261.466, 342.025, 32.0827, 0.5338 ) }
    dend_4 { pt3dadd( 260.497, 341.473, 32.6847, 0.5592 ) }
    dend_4 { pt3dadd( 259.604, 340.768, 32.9577, 0.5848 ) }
    dend_4 { pt3dadd( 258.692, 340.086, 32.7396, 0.5592 ) }
    dend_4 { pt3dadd( 257.576, 339.881, 32.5318, 0.5592 ) }
    dend_4 { pt3dadd( 256.452, 339.855, 33.0327, 0.5084 ) }
    dend_4 { pt3dadd( 255.321, 339.678, 33.04, 0.5084 ) }
    dend_4 { pt3dadd( 254.197, 339.471, 33.04, 0.5338 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 288.286, 355.853, 32.9742, 0.7372 ) }
    dend_3 { pt3dadd( 287.544, 354.978, 32.7779, 0.6356 ) }
    dend_3 { pt3dadd( 287.071, 353.972, 32.2134, 0.6356 ) }
    dend_3 { pt3dadd( 286.519, 352.988, 32.4114, 0.5848 ) }
    dend_3 { pt3dadd( 285.948, 352.021, 32.8964, 0.6102 ) }
    dend_3 { pt3dadd( 285.593, 350.961, 33.0439, 0.6356 ) }
    dend_3 { pt3dadd( 285.493, 349.822, 33.0663, 0.6864 ) }
    dend_3 { pt3dadd( 285.304, 348.702, 33.1926, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( 285.104, 347.611, 33.7148, 0.6356 ) }
    dend_3 { pt3dadd( 285.06, 346.49, 34.1398, 0.6102 ) }
    dend_3 { pt3dadd( 284.91, 345.362, 34.3132, 0.6102 ) }
    dend_3 { pt3dadd( 284.807, 344.242, 34.7382, 0.5848 ) }
    dend_3 { pt3dadd( 284.973, 343.181, 34.2684, 0.5592 ) }
    dend_3 { pt3dadd( 285.076, 342.099, 33.4421, 0.483 ) }
    dend_3 { pt3dadd( 285.072, 341.005, 33.8125, 0.4068 ) }
    dend_3 { pt3dadd( 285.017, 339.973, 34.988, 0.356 ) }
    dend_3 { pt3dadd( 284.741, 338.913, 35.5664, 0.4068 ) }
    dend_3 { pt3dadd( 284.314, 337.963, 34.627, 0.5592 ) }
    dend_3 { pt3dadd( 283.418, 337.344, 34.2006, 0.661 ) }
    dend_3 { pt3dadd( 282.372, 336.883, 34.16, 0.6864 ) }
    dend_3 { pt3dadd( 281.51, 336.15, 34.1594, 0.6102 ) }
    dend_3 { pt3dadd( 281.034, 335.126, 34.1575, 0.5338 ) }
    dend_3 { pt3dadd( 280.937, 333.993, 34.1429, 0.483 ) }
    dend_3 { pt3dadd( 280.741, 332.868, 34.06, 0.4322 ) }
    dend_3 { pt3dadd( 280.416, 331.775, 33.9016, 0.4576 ) }
    dend_3 { pt3dadd( 279.997, 330.716, 34.1351, 0.5084 ) }
    dend_3 { pt3dadd( 279.42, 329.73, 34.193, 0.6102 ) }
    dend_3 { pt3dadd( 278.614, 328.925, 34.2994, 0.661 ) }
    dend_3 { pt3dadd( 277.68, 328.301, 34.7864, 0.661 ) }
    dend_3 { pt3dadd( 276.676, 327.763, 34.638, 0.5848 ) }
    dend_3 { pt3dadd( 275.702, 327.19, 35.028, 0.483 ) }
    dend_3 { pt3dadd( 274.827, 326.461, 35.2682, 0.3814 ) }
    dend_3 { pt3dadd( 273.938, 325.743, 35.2856, 0.3814 ) }
    dend_3 { pt3dadd( 272.985, 325.109, 35.3077, 0.4068 ) }
    dend_3 { pt3dadd( 271.997, 324.533, 35.4337, 0.483 ) }
    dend_3 { pt3dadd( 271.021, 324.071, 36.3314, 0.5084 ) }
    dend_3 { pt3dadd( 270.445, 323.352, 37.9784, 0.5592 ) }
    dend_3 { pt3dadd( 269.499, 322.775, 38.6543, 0.5592 ) }
    dend_3 { pt3dadd( 268.604, 322.062, 38.7024, 0.5338 ) }
    dend_3 { pt3dadd( 267.745, 321.312, 38.8993, 0.4322 ) }
    dend_3 { pt3dadd( 266.775, 320.787, 39.6337, 0.3814 ) }
    dend_3 { pt3dadd( 265.687, 320.449, 39.76, 0.3304 ) }
    dend_3 { pt3dadd( 264.67, 320.86, 39.76, 0.3304 ) }
    dend_3 { pt3dadd( 263.854, 321.104, 39.991, 0.2796 ) }
    dend_3 { pt3dadd( 262.781, 321.002, 40.8862, 0.2542 ) }
    dend_3 { pt3dadd( 261.768, 320.724, 41.9028, 0.2542 ) }
    dend_3 { pt3dadd( 260.651, 320.492, 42.0888, 0.2796 ) }
    dend_3 { pt3dadd( 259.551, 320.268, 42.443, 0.3304 ) }
    dend_3 { pt3dadd( 258.505, 319.984, 43.108, 0.3304 ) }
    dend_3 { pt3dadd( 257.465, 320.257, 43.6456, 0.3304 ) }
    dend_3 { pt3dadd( 256.575, 320.708, 44.7132, 0.2796 ) }
    dend_3 { pt3dadd( 255.709, 320.329, 45.8592, 0.305 ) }
    dend_3 { pt3dadd( 254.884, 319.677, 46.6735, 0.3304 ) }
    dend_3 { pt3dadd( 253.938, 319.875, 46.9286, 0.4068 ) }
    dend_3 { pt3dadd( 253.141, 320.69, 46.7748, 0.3814 ) }
    dend_3 { pt3dadd( 252.395, 321.497, 47.2592, 0.356 ) }
    dend_3 { pt3dadd( 251.744, 322.311, 48.3952, 0.2796 ) }
    dend_3 { pt3dadd( 251.092, 322.145, 49.656, 0.2542 ) }
    dend_3 { pt3dadd( 250.105, 321.805, 50.029, 0.2288 ) }
    dend_3 { pt3dadd( 249.383, 322.455, 50.029, 0.2288 ) }
    dend_3 { pt3dadd( 248.436, 323.003, 50.6036, 0.2288 ) }
    dend_3 { pt3dadd( 247.403, 323.063, 50.9468, 0.2288 ) }
    dend_3 { pt3dadd( 246.335, 322.653, 50.9468, 0.2288 ) }
    dend_3 { pt3dadd( 245.3, 322.689, 51.1938, 0.2288 ) }
    dend_3 { pt3dadd( 244.298, 323.202, 51.704, 0.2288 ) }
    dend_3 { pt3dadd( 243.297, 323.715, 52.2141, 0.2288 ) }
    dend_3 { pt3dadd( 242.189, 323.727, 52.3239, 0.2288 ) }
    dend_3 { pt3dadd( 241.059, 323.595, 52.3614, 0.2288 ) }
    dend_3 { pt3dadd( 240.222, 323.237, 54.0562, 0.2288 ) }
    dend_3 { pt3dadd( 239.384, 322.88, 55.7514, 0.2288 ) }
    dend_3 { pt3dadd( 238.396, 322.925, 56.4547, 0.2288 ) }
    dend_3 { pt3dadd( 237.3, 323.254, 56.4547, 0.2542 ) }
    dend_3 { pt3dadd( 236.205, 323.585, 56.4547, 0.3304 ) }
    // Section: apic_24, id: apic_24, parent: apic_20 (entry count 65/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 317.865, 348.515, 53.2417, 0.4576 ) }
    apic_24 { pt3dadd( 318.5, 347.582, 55.1292, 0.305 ) }
    apic_24 { pt3dadd( 318.802, 347.527, 57.2043, 0.2288 ) }
    apic_24 { pt3dadd( 318.957, 347.929, 59.7976, 0.2288 ) }
    apic_24 { pt3dadd( 319.113, 348.331, 62.391, 0.2288 ) }
    apic_24 { pt3dadd( 319.269, 348.733, 64.9844, 0.2288 ) }
    apic_24 { pt3dadd( 319.424, 349.136, 67.578, 0.2288 ) }
    apic_24 { pt3dadd( 319.58, 349.538, 70.1714, 0.2542 ) }
    apic_24 { pt3dadd( 320.021, 349.792, 72.6009, 0.305 ) }
    apic_24 { pt3dadd( 320.632, 349.955, 74.933, 0.356 ) }
    apic_24 { pt3dadd( 321.08, 350.118, 77.3808, 0.356 ) }
    apic_24 { pt3dadd( 321.066, 350.28, 80.1525, 0.305 ) }
    apic_24 { pt3dadd( 321.052, 350.441, 82.9242, 0.305 ) }
    apic_24 { pt3dadd( 320.796, 350.396, 85.2426, 0.3304 ) }
    apic_24 { pt3dadd( 319.928, 349.824, 86.4128, 0.3814 ) }
    apic_24 { pt3dadd( 319.024, 349.259, 87.3692, 0.3304 ) }
    apic_24 { pt3dadd( 318.042, 348.708, 87.8749, 0.2796 ) }
    apic_24 { pt3dadd( 317.061, 348.158, 88.3809, 0.2288 ) }
    apic_24 { pt3dadd( 316.079, 347.608, 88.8868, 0.2288 ) }
    apic_24 { pt3dadd( 315.015, 347.41, 89.5588, 0.2288 ) }
    apic_24 { pt3dadd( 313.913, 347.368, 90.3048, 0.2288 ) }
    apic_24 { pt3dadd( 312.811, 347.326, 91.0504, 0.2288 ) }
    apic_24 { pt3dadd( 311.709, 347.284, 91.796, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_20 (entry count 88/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 317.865, 348.515, 53.2417, 0.4576 ) }
    apic_23 { pt3dadd( 317.555, 348.736, 53.6099, 0.2288 ) }
    apic_23 { pt3dadd( 316.548, 349.132, 54.5216, 0.2288 ) }
    apic_23 { pt3dadd( 315.542, 349.527, 55.4336, 0.2542 ) }
    apic_23 { pt3dadd( 314.535, 349.924, 56.3455, 0.305 ) }
    apic_23 { pt3dadd( 313.506, 349.538, 56.4547, 0.3814 ) }
    apic_23 { pt3dadd( 312.473, 349.046, 56.4547, 0.4068 ) }
    apic_23 { pt3dadd( 311.44, 348.553, 56.4547, 0.3814 ) }
    apic_23 { pt3dadd( 310.606, 347.802, 56.4547, 0.3304 ) }
    apic_23 { pt3dadd( 309.737, 347.108, 56.6076, 0.3304 ) }
    apic_23 { pt3dadd( 308.702, 346.642, 56.9601, 0.356 ) }
    apic_23 { pt3dadd( 307.666, 346.177, 57.3124, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_23 { pt3dadd( 306.631, 345.712, 57.6649, 0.305 ) }
    apic_23 { pt3dadd( 305.597, 345.247, 58.0174, 0.2542 ) }
    apic_23 { pt3dadd( 304.54, 344.847, 58.2904, 0.2288 ) }
    apic_23 { pt3dadd( 303.408, 344.673, 58.2904, 0.2542 ) }
    apic_23 { pt3dadd( 302.278, 344.501, 58.2904, 0.3304 ) }
    apic_23 { pt3dadd( 301.172, 344.516, 58.7913, 0.4322 ) }
    apic_23 { pt3dadd( 300.08, 344.636, 59.5742, 0.5084 ) }
    apic_23 { pt3dadd( 298.978, 344.746, 60.2473, 0.5338 ) }
    apic_23 { pt3dadd( 297.848, 344.826, 60.6575, 0.5338 ) }
    apic_23 { pt3dadd( 296.72, 344.905, 61.0677, 0.5084 ) }
    apic_23 { pt3dadd( 295.591, 344.985, 61.4779, 0.4576 ) }
    apic_23 { pt3dadd( 294.462, 345.065, 61.8881, 0.4068 ) }
    apic_23 { pt3dadd( 293.324, 345.016, 61.9623, 0.3814 ) }
    apic_23 { pt3dadd( 292.183, 344.933, 61.9808, 0.3814 ) }
    apic_23 { pt3dadd( 291.051, 344.796, 62.2132, 0.356 ) }
    apic_23 { pt3dadd( 289.919, 344.66, 62.4453, 0.3304 ) }
    apic_23 { pt3dadd( 288.787, 344.524, 62.6777, 0.2796 ) }
    apic_23 { pt3dadd( 287.655, 344.388, 62.9101, 0.2796 ) }
    apic_23 { pt3dadd( 286.524, 344.251, 63.1425, 0.2796 ) }
    apic_23 { pt3dadd( 285.391, 344.122, 63.3844, 0.305 ) }
    apic_23 { pt3dadd( 284.258, 344.032, 63.6798, 0.2796 ) }
    apic_23 { pt3dadd( 283.123, 343.943, 63.9752, 0.2542 ) }
    apic_23 { pt3dadd( 281.989, 343.852, 64.2706, 0.2796 ) }
    apic_23 { pt3dadd( 280.855, 343.763, 64.566, 0.3304 ) }
    apic_23 { pt3dadd( 279.785, 343.951, 65.0482, 0.3814 ) }
    apic_23 { pt3dadd( 278.781, 344.426, 65.7233, 0.3304 ) }
    apic_23 { pt3dadd( 277.778, 344.901, 66.3984, 0.2796 ) }
    apic_23 { pt3dadd( 276.775, 345.376, 67.0734, 0.2288 ) }
    apic_23 { pt3dadd( 275.772, 345.852, 67.7485, 0.2288 ) }
    apic_23 { pt3dadd( 274.761, 346.309, 68.388, 0.2288 ) }
    apic_23 { pt3dadd( 273.628, 346.461, 68.388, 0.2542 ) }
    apic_23 { pt3dadd( 272.499, 346.432, 68.388, 0.305 ) }
    apic_23 { pt3dadd( 271.507, 345.886, 68.469, 0.4068 ) }
    apic_23 { pt3dadd( 270.405, 345.653, 68.9556, 0.4576 ) }
    apic_23 { pt3dadd( 269.302, 345.419, 69.4425, 0.4576 ) }
    apic_23 { pt3dadd( 268.201, 345.186, 69.9292, 0.356 ) }
    apic_23 { pt3dadd( 267.098, 344.953, 70.4161, 0.2796 ) }
    apic_23 { pt3dadd( 265.996, 344.719, 70.903, 0.2288 ) }
    apic_23 { pt3dadd( 264.948, 344.851, 71.5002, 0.2542 ) }
    apic_23 { pt3dadd( 263.952, 345.334, 72.2039, 0.305 ) }
    apic_23 { pt3dadd( 262.955, 345.818, 72.9078, 0.356 ) }
    apic_23 { pt3dadd( 261.959, 346.3, 73.6114, 0.356 ) }
    apic_23 { pt3dadd( 260.894, 346.563, 74.247, 0.3304 ) }
    apic_23 { pt3dadd( 259.781, 346.678, 74.8364, 0.305 ) }
    apic_23 { pt3dadd( 258.669, 346.792, 75.4261, 0.305 ) }
    apic_23 { pt3dadd( 257.556, 346.905, 76.0155, 0.2796 ) }
    apic_23 { pt3dadd( 256.65, 347.115, 75.9382, 0.2542 ) }
    apic_23 { pt3dadd( 255.531, 347.29, 76.3328, 0.2288 ) }
    apic_23 { pt3dadd( 254.411, 347.469, 76.6497, 0.2288 ) }
    apic_23 { pt3dadd( 253.283, 347.665, 76.6497, 0.2288 ) }
    apic_23 { pt3dadd( 252.181, 347.609, 76.6497, 0.2288 ) }
    apic_23 { pt3dadd( 251.114, 347.197, 76.6497, 0.2288 ) }
    apic_23 { pt3dadd( 250.046, 346.784, 76.6497, 0.2288 ) }
    apic_23 { pt3dadd( 248.936, 346.791, 76.9849, 0.2288 ) }
    apic_23 { pt3dadd( 247.813, 346.918, 77.4164, 0.2288 ) }
    apic_23 { pt3dadd( 246.69, 347.045, 77.8478, 0.2288 ) }
    apic_23 { pt3dadd( 245.564, 347.214, 78.0268, 0.2288 ) }
    apic_23 { pt3dadd( 244.437, 347.412, 78.0268, 0.2288 ) }
    apic_23 { pt3dadd( 243.333, 347.274, 78.4622, 0.2288 ) }
    apic_23 { pt3dadd( 242.234, 347.048, 79.0093, 0.2288 ) }
    apic_23 { pt3dadd( 241.136, 346.822, 79.5564, 0.2288 ) }
    apic_23 { pt3dadd( 240.046, 346.744, 80.2589, 0.2288 ) }
    apic_23 { pt3dadd( 238.968, 346.853, 81.1588, 0.2288 ) }
    apic_23 { pt3dadd( 237.89, 346.96, 82.0585, 0.2288 ) }
    apic_23 { pt3dadd( 236.811, 347.069, 82.9581, 0.2288 ) }
    apic_23 { pt3dadd( 235.832, 347.376, 83.9541, 0.2288 ) }
    apic_23 { pt3dadd( 235.027, 348.033, 85.1214, 0.2288 ) }
    apic_23 { pt3dadd( 234.221, 348.691, 86.2884, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 68/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 317.865, 348.515, 53.2417, 0.4576 ) }
    apic_22 { pt3dadd( 317.976, 349.376, 53.7242, 0.2796 ) }
    apic_22 { pt3dadd( 318.086, 350.488, 54.3183, 0.3304 ) }
    apic_22 { pt3dadd( 318.196, 351.602, 54.9125, 0.3814 ) }
    apic_22 { pt3dadd( 318.047, 352.696, 55.5181, 0.3304 ) }
    apic_22 { pt3dadd( 317.797, 353.784, 56.1285, 0.2796 ) }
    apic_22 { pt3dadd( 317.547, 354.872, 56.7386, 0.2288 ) }
    apic_22 { pt3dadd( 317.298, 355.961, 57.3488, 0.2288 ) }
    apic_22 { pt3dadd( 317.06, 357.057, 57.8315, 0.2288 ) }
    apic_22 { pt3dadd( 316.864, 358.184, 57.8315, 0.2288 ) }
    apic_22 { pt3dadd( 316.669, 359.312, 57.8315, 0.2288 ) }
    apic_22 { pt3dadd( 316.474, 360.439, 57.8315, 0.2288 ) }
    apic_22 { pt3dadd( 316.409, 361.564, 57.6055, 0.2796 ) }
    apic_22 { pt3dadd( 316.498, 362.687, 57.1108, 0.356 ) }
    apic_22 { pt3dadd( 316.587, 363.809, 56.6163, 0.483 ) }
    apic_22 { pt3dadd( 316.676, 364.931, 56.1215, 0.5084 ) }
    apic_22 { pt3dadd( 316.64, 365.874, 56.359, 0.5084 ) }
    apic_22 { pt3dadd( 316.415, 366.974, 56.915, 0.4068 ) }
    apic_22 { pt3dadd( 316.192, 368.072, 57.4714, 0.356 ) }
    apic_22 { pt3dadd( 315.848, 369.133, 57.8315, 0.3304 ) }
    apic_22 { pt3dadd( 315.281, 370.128, 57.8315, 0.3814 ) }
    apic_22 { pt3dadd( 314.827, 371.129, 57.9751, 0.4576 ) }
    apic_22 { pt3dadd( 315.038, 372.177, 58.9652, 0.4576 ) }
    apic_22 { pt3dadd( 315.114, 373.245, 59.6674, 0.4322 ) }
    apic_22 { pt3dadd( 314.855, 374.359, 59.6674, 0.4068 ) }
    apic_22 { pt3dadd( 314.597, 375.473, 59.6674, 0.4322 ) }
    apic_22 { pt3dadd( 314.45, 376.6, 59.8419, 0.4322 ) }
    apic_22 { pt3dadd( 314.384, 377.736, 60.1378, 0.356 ) }
    apic_22 { pt3dadd( 314.316, 378.872, 60.4338, 0.2796 ) }
    apic_22 { pt3dadd( 314.249, 380.007, 60.7298, 0.2288 ) }
    apic_22 { pt3dadd( 314.182, 381.143, 61.0257, 0.2796 ) }
    apic_22 { pt3dadd( 314.434, 382.255, 61.0445, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_22 { pt3dadd( 314.693, 383.368, 61.0445, 0.3814 ) }
    apic_22 { pt3dadd( 314.711, 384.512, 61.0445, 0.3304 ) }
    apic_22 { pt3dadd( 314.728, 385.656, 61.0445, 0.2796 ) }
    apic_22 { pt3dadd( 314.746, 386.8, 61.0445, 0.2288 ) }
    apic_22 { pt3dadd( 314.434, 387.835, 61.7602, 0.2542 ) }
    apic_22 { pt3dadd( 314.037, 388.843, 62.662, 0.2796 ) }
    apic_22 { pt3dadd( 313.72, 389.878, 63.4785, 0.305 ) }
    apic_22 { pt3dadd( 313.647, 390.996, 64.0371, 0.2796 ) }
    apic_22 { pt3dadd( 313.574, 392.115, 64.5957, 0.2542 ) }
    apic_22 { pt3dadd( 313.501, 393.234, 65.1543, 0.2288 ) }
    apic_22 { pt3dadd( 313.445, 394.35, 65.7325, 0.2288 ) }
    apic_22 { pt3dadd( 313.495, 395.458, 66.43, 0.2288 ) }
    apic_22 { pt3dadd( 313.545, 396.564, 67.1278, 0.2288 ) }
    apic_22 { pt3dadd( 313.596, 397.672, 67.8252, 0.2288 ) }
    apic_22 { pt3dadd( 313.549, 398.765, 68.458, 0.2288 ) }
    apic_22 { pt3dadd( 313.096, 399.805, 68.8198, 0.2288 ) }
    apic_22 { pt3dadd( 312.644, 400.846, 69.1818, 0.2288 ) }
    apic_22 { pt3dadd( 312.192, 401.886, 69.5436, 0.2288 ) }
    apic_22 { pt3dadd( 311.74, 402.927, 69.9056, 0.2288 ) }
    apic_22 { pt3dadd( 311.288, 403.967, 70.2674, 0.2542 ) }
    apic_22 { pt3dadd( 310.836, 405.008, 70.6292, 0.2796 ) }
    apic_22 { pt3dadd( 310.384, 406.048, 70.9912, 0.305 ) }
    apic_22 { pt3dadd( 310.054, 407.126, 71.3978, 0.2796 ) }
    apic_22 { pt3dadd( 309.812, 408.229, 71.836, 0.2542 ) }
    apic_22 { pt3dadd( 309.57, 409.332, 72.2744, 0.2288 ) }
    apic_22 { pt3dadd( 309.327, 410.436, 72.7126, 0.2288 ) }
    apic_22 { pt3dadd( 309.085, 411.54, 73.1511, 0.2288 ) }
    apic_22 { pt3dadd( 308.843, 412.644, 73.5893, 0.2542 ) }
    apic_22 { pt3dadd( 308.601, 413.747, 74.0278, 0.305 ) }
    apic_22 { pt3dadd( 308.26, 414.809, 74.4666, 0.356 ) }
    apic_22 { pt3dadd( 307.63, 415.747, 74.907, 0.356 ) }
    apic_22 { pt3dadd( 306.999, 416.684, 75.3474, 0.305 ) }
    apic_22 { pt3dadd( 306.37, 417.622, 75.7876, 0.2542 ) }
    apic_22 { pt3dadd( 305.74, 418.56, 76.228, 0.2288 ) }
    apic_22 { pt3dadd( 305.109, 419.497, 76.6682, 0.2288 ) }
    apic_22 { pt3dadd( 304.479, 420.435, 77.1086, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 36/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 317.865, 348.515, 53.2417, 0.4576 ) }
    apic_21 { pt3dadd( 318.025, 349.091, 53.79, 0.2288 ) }
    apic_21 { pt3dadd( 318.406, 350.061, 54.7467, 0.2288 ) }
    apic_21 { pt3dadd( 319.292, 350.705, 55.5559, 0.2542 ) }
    apic_21 { pt3dadd( 320.178, 351.349, 56.3654, 0.2796 ) }
    apic_21 { pt3dadd( 321.064, 351.993, 57.1746, 0.305 ) }
    apic_21 { pt3dadd( 321.869, 352.771, 57.6761, 0.2796 ) }
    apic_21 { pt3dadd( 322.649, 353.592, 58.0779, 0.2542 ) }
    apic_21 { pt3dadd( 323.428, 354.412, 58.4797, 0.2288 ) }
    apic_21 { pt3dadd( 324.208, 355.234, 58.8815, 0.2542 ) }
    apic_21 { pt3dadd( 324.987, 356.054, 59.2833, 0.3304 ) }
    apic_21 { pt3dadd( 325.775, 356.864, 59.703, 0.4576 ) }
    apic_21 { pt3dadd( 326.702, 357.447, 60.5088, 0.5338 ) }
    apic_21 { pt3dadd( 327.629, 358.031, 61.315, 0.5084 ) }
    apic_21 { pt3dadd( 327.766, 359.035, 61.556, 0.3814 ) }
    apic_21 { pt3dadd( 327.505, 360.077, 62.5145, 0.2796 ) }
    apic_21 { pt3dadd( 327.351, 361.118, 63.3394, 0.2288 ) }
    apic_21 { pt3dadd( 327.849, 362.148, 63.3394, 0.2288 ) }
    apic_21 { pt3dadd( 328.401, 363.137, 63.5443, 0.2288 ) }
    apic_21 { pt3dadd( 329.05, 364.049, 64.1127, 0.2288 ) }
    apic_21 { pt3dadd( 329.698, 364.964, 64.6811, 0.2288 ) }
    apic_21 { pt3dadd( 330.324, 365.887, 65.1753, 0.2288 ) }
    apic_21 { pt3dadd( 330.428, 367.026, 65.1753, 0.2796 ) }
    apic_21 { pt3dadd( 330.817, 368.069, 65.1753, 0.3304 ) }
    apic_21 { pt3dadd( 331.455, 368.983, 65.4013, 0.4068 ) }
    apic_21 { pt3dadd( 332.243, 369.63, 66.6725, 0.4068 ) }
    apic_21 { pt3dadd( 332.926, 370.409, 67.6662, 0.4322 ) }
    apic_21 { pt3dadd( 333.432, 371.412, 68.1926, 0.4322 ) }
    apic_21 { pt3dadd( 333.938, 372.415, 68.719, 0.4322 ) }
    apic_21 { pt3dadd( 333.976, 373.506, 69.2345, 0.3814 ) }
    apic_21 { pt3dadd( 333.863, 374.626, 69.746, 0.3304 ) }
    apic_21 { pt3dadd( 333.749, 375.745, 70.2579, 0.305 ) }
    apic_21 { pt3dadd( 333.754, 376.723, 71.0746, 0.305 ) }
    apic_21 { pt3dadd( 334.267, 377.153, 73.0948, 0.2796 ) }
    apic_21 { pt3dadd( 334.471, 378.245, 73.7598, 0.2796 ) }
    apic_21 { pt3dadd( 334.676, 379.337, 74.4251, 0.2796 ) }
    apic_21 { pt3dadd( 335.125, 380.251, 75.318, 0.305 ) }
    apic_21 { pt3dadd( 335.915, 380.912, 76.5302, 0.2796 ) }
    apic_21 { pt3dadd( 336.681, 381.642, 77.5631, 0.2542 ) }
    apic_21 { pt3dadd( 337.426, 382.435, 78.4322, 0.2288 ) }
    apic_21 { pt3dadd( 338.17, 383.227, 79.3013, 0.2288 ) }
    apic_21 { pt3dadd( 338.865, 384.084, 80.0372, 0.2288 ) }
    apic_21 { pt3dadd( 339.554, 384.95, 80.7554, 0.2288 ) }
    apic_21 { pt3dadd( 340.243, 385.815, 81.4736, 0.2288 ) }
    apic_21 { pt3dadd( 341.048, 386.571, 82.1458, 0.2288 ) }
    apic_21 { pt3dadd( 341.908, 387.277, 82.7974, 0.2288 ) }
    apic_21 { pt3dadd( 342.768, 387.983, 83.449, 0.2288 ) }
    apic_21 { pt3dadd( 343.652, 388.704, 83.5344, 0.2288 ) }
    apic_21 { pt3dadd( 344.582, 389.347, 83.7239, 0.2288 ) }
    apic_21 { pt3dadd( 345.584, 389.862, 84.2206, 0.2542 ) }
    apic_21 { pt3dadd( 346.585, 390.376, 84.7171, 0.2796 ) }
    apic_21 { pt3dadd( 347.586, 390.891, 85.2138, 0.305 ) }
    apic_21 { pt3dadd( 348.381, 391.642, 85.8424, 0.2796 ) }
    apic_21 { pt3dadd( 349.082, 392.501, 86.5323, 0.2542 ) }
    apic_21 { pt3dadd( 349.783, 393.36, 87.222, 0.2288 ) }
    apic_21 { pt3dadd( 350.574, 394.132, 87.8041, 0.2288 ) }
    apic_21 { pt3dadd( 351.526, 394.745, 88.1927, 0.2288 ) }
    apic_21 { pt3dadd( 352.479, 395.358, 88.5811, 0.2288 ) }
    apic_21 { pt3dadd( 353.432, 395.972, 88.9697, 0.2288 ) }
    apic_21 { pt3dadd( 354.384, 396.585, 89.3584, 0.2288 ) }
    apic_21 { pt3dadd( 355.337, 397.198, 89.747, 0.2288 ) }
    apic_21 { pt3dadd( 356.089, 397.988, 90.1796, 0.2288 ) }
    apic_21 { pt3dadd( 356.597, 398.993, 90.666, 0.2288 ) }
    apic_21 { pt3dadd( 357.107, 399.999, 91.1523, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_21 { pt3dadd( 357.614, 401.004, 91.639, 0.2288 ) }
    apic_21 { pt3dadd( 358.124, 402.01, 92.1253, 0.2288 ) }
    apic_21 { pt3dadd( 358.202, 402.905, 93.6096, 0.2288 ) }
    apic_21 { pt3dadd( 358.125, 403.762, 95.4568, 0.2796 ) }
    apic_21 { pt3dadd( 358.048, 404.618, 97.3039, 0.3304 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 5/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 334.506, 323.17, 35.0098, 0.8898 ) }
    apic_13 { pt3dadd( 334.895, 322.472, 35.1585, 0.7626 ) }
    apic_13 { pt3dadd( 335.103, 321.402, 34.4806, 0.7626 ) }
    apic_13 { pt3dadd( 335.628, 320.409, 34.1869, 0.788 ) }
    apic_13 { pt3dadd( 336.253, 319.452, 34.16, 0.839 ) }
    apic_13 { pt3dadd( 336.977, 318.567, 34.1606, 0.9406 ) }
    apic_13 { pt3dadd( 337.639, 317.636, 34.1625, 1.0168 ) }
    apic_13 { pt3dadd( 338.409, 316.792, 34.1706, 1.0424 ) }
    apic_13 { pt3dadd( 339.251, 316.016, 34.2056, 1.0168 ) }
    apic_13 { pt3dadd( 340.203, 315.391, 34.3809, 0.9914 ) }
    apic_13 { pt3dadd( 341.143, 314.809, 35.072, 0.9152 ) }
    apic_13 { pt3dadd( 341.954, 314.026, 35.4693, 0.788 ) }
    apic_13 { pt3dadd( 342.205, 312.955, 36.0363, 0.661 ) }
    apic_13 { pt3dadd( 341.913, 311.937, 35.0846, 0.6864 ) }
    apic_13 { pt3dadd( 341.473, 310.936, 34.2703, 0.788 ) }
    apic_13 { pt3dadd( 341.12, 309.85, 34.1631, 0.8898 ) }
    apic_13 { pt3dadd( 340.794, 308.753, 34.1631, 0.9152 ) }
    apic_13 { pt3dadd( 340.491, 307.65, 34.1807, 0.9406 ) }
    apic_13 { pt3dadd( 340.482, 306.509, 34.2964, 0.966 ) }
    apic_13 { pt3dadd( 340.648, 305.411, 34.9706, 0.9152 ) }
    apic_13 { pt3dadd( 341.013, 304.335, 35.2794, 0.788 ) }
    apic_13 { pt3dadd( 341.443, 303.274, 35.28, 0.6102 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 27/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 334.506, 323.17, 35.0098, 0.8898 ) }
    apic_10 { pt3dadd( 335.284, 322.989, 34.3815, 0.305 ) }
    apic_10 { pt3dadd( 336.418, 323.051, 34.1776, 0.3304 ) }
    apic_10 { pt3dadd( 337.48, 323.467, 34.207, 0.356 ) }
    apic_10 { pt3dadd( 338.384, 324.162, 34.3874, 0.4322 ) }
    apic_10 { pt3dadd( 339.104, 324.999, 35.0974, 0.5084 ) }
    apic_10 { pt3dadd( 340.203, 325.285, 35.0669, 0.6356 ) }
    apic_10 { pt3dadd( 341.268, 325.555, 34.2972, 0.7118 ) }
    apic_10 { pt3dadd( 342.285, 326.056, 33.9175, 0.7626 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 36/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 325.82, 323.874, 31.9138, 0.6102 ) }
    apic_8 { pt3dadd( 325.165, 324.562, 30.3828, 0.5592 ) }
    apic_8 { pt3dadd( 325.461, 324.933, 28.5578, 0.4322 ) }
    apic_8 { pt3dadd( 325.73, 325.794, 27.9978, 0.3814 ) }
    apic_8 { pt3dadd( 325.148, 326.699, 27.2241, 0.4322 ) }
    apic_8 { pt3dadd( 324.594, 327.579, 26.0588, 0.4576 ) }
    apic_8 { pt3dadd( 323.945, 328.468, 25.5912, 0.4576 ) }
    apic_8 { pt3dadd( 323.466, 329.433, 24.6523, 0.3814 ) }
    apic_8 { pt3dadd( 323.021, 330.423, 23.8669, 0.3304 ) }
    apic_8 { pt3dadd( 322.268, 330.955, 23.8669, 0.305 ) }
    apic_8 { pt3dadd( 321.365, 330.522, 23.2677, 0.305 ) }
    apic_8 { pt3dadd( 320.623, 329.755, 22.2594, 0.3304 ) }
    apic_8 { pt3dadd( 319.575, 329.483, 22.031, 0.356 ) }
    apic_8 { pt3dadd( 318.437, 329.368, 22.031, 0.3814 ) }
    apic_8 { pt3dadd( 318.178, 329.995, 20.2717, 0.356 ) }
    apic_8 { pt3dadd( 318.117, 330.87, 18.8182, 0.3304 ) }
    apic_8 { pt3dadd( 318.062, 332.007, 18.8182, 0.2796 ) }
    apic_8 { pt3dadd( 317.601, 333.028, 18.8182, 0.2542 ) }
    apic_8 { pt3dadd( 316.96, 333.976, 18.8182, 0.2542 ) }
    apic_8 { pt3dadd( 316.148, 334.651, 18.8182, 0.2796 ) }
    apic_8 { pt3dadd( 315.031, 334.499, 18.8182, 0.305 ) }
    apic_8 { pt3dadd( 314.155, 335.102, 19.4981, 0.3304 ) }
    apic_8 { pt3dadd( 313.394, 335.806, 20.3361, 0.356 ) }
    apic_8 { pt3dadd( 313.615, 336.539, 22.031, 0.3814 ) }
    apic_8 { pt3dadd( 312.879, 337.072, 22.031, 0.3814 ) }
    apic_8 { pt3dadd( 312.588, 338.103, 22.269, 0.3814 ) }
    apic_8 { pt3dadd( 312.21, 338.927, 23.1456, 0.3814 ) }
    apic_8 { pt3dadd( 311.254, 339.127, 21.6863, 0.3304 ) }
    apic_8 { pt3dadd( 311.401, 340.174, 21.572, 0.3304 ) }
    apic_8 { pt3dadd( 311.025, 341.238, 21.1131, 0.3814 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 66/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 325.82, 323.874, 31.9138, 0.6102 ) }
    apic_3 { pt3dadd( 324.827, 323.576, 31.8805, 0.7118 ) }
    apic_3 { pt3dadd( 323.947, 322.862, 31.7246, 0.7118 ) }
    apic_3 { pt3dadd( 323.333, 321.959, 30.931, 0.6356 ) }
    apic_3 { pt3dadd( 323.617, 320.877, 30.7045, 0.5848 ) }
    apic_3 { pt3dadd( 324.436, 320.114, 30.1851, 0.5848 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 254.197, 339.471, 33.04, 0.5338 ) }
    dend_6 { pt3dadd( 253.596, 339.524, 32.5875, 0.356 ) }
    dend_6 { pt3dadd( 252.452, 339.536, 32.5875, 0.3304 ) }
    dend_6 { pt3dadd( 251.308, 339.547, 32.5875, 0.305 ) }
    dend_6 { pt3dadd( 250.164, 339.559, 32.5875, 0.305 ) }
    dend_6 { pt3dadd( 249.02, 339.571, 32.608, 0.2796 ) }
    dend_6 { pt3dadd( 247.888, 339.596, 33.0011, 0.2542 ) }
    dend_6 { pt3dadd( 246.756, 339.62, 33.3942, 0.2288 ) }
    dend_6 { pt3dadd( 245.737, 340.057, 33.5056, 0.2288 ) }
    dend_6 { pt3dadd( 244.763, 340.658, 33.5056, 0.2288 ) }
    dend_6 { pt3dadd( 243.79, 341.259, 33.5056, 0.2288 ) }
    dend_6 { pt3dadd( 242.767, 341.013, 33.5056, 0.2288 ) }
    dend_6 { pt3dadd( 241.732, 340.526, 33.5056, 0.2542 ) }
    dend_6 { pt3dadd( 240.697, 340.04, 33.5056, 0.2796 ) }
    dend_6 { pt3dadd( 239.599, 339.743, 33.6134, 0.305 ) }
    dend_6 { pt3dadd( 238.482, 339.506, 33.7568, 0.305 ) }
    dend_6 { pt3dadd( 237.363, 339.269, 33.8999, 0.305 ) }
    dend_6 { pt3dadd( 236.245, 339.034, 34.0432, 0.3304 ) }
    dend_6 { pt3dadd( 235.128, 338.797, 34.1863, 0.3304 ) }
    dend_6 { pt3dadd( 234.01, 338.56, 34.3297, 0.3304 ) }
    dend_6 { pt3dadd( 232.954, 338.18, 34.4235, 0.2796 ) }
    dend_6 { pt3dadd( 232.015, 337.528, 34.4235, 0.2542 ) }
    dend_6 { pt3dadd( 231.075, 336.875, 34.4235, 0.2288 ) }
    dend_6 { pt3dadd( 230.135, 336.222, 34.4235, 0.2288 ) }
    dend_6 { pt3dadd( 229.097, 335.818, 34.4658, 0.2288 ) }
    dend_6 { pt3dadd( 227.967, 335.647, 34.5478, 0.2288 ) }
    dend_6 { pt3dadd( 226.836, 335.476, 34.6296, 0.2542 ) }
    dend_6 { pt3dadd( 225.706, 335.305, 34.7116, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 224.575, 335.135, 34.7936, 0.3304 ) }
    dend_6 { pt3dadd( 223.444, 334.963, 34.8757, 0.3304 ) }
    dend_6 { pt3dadd( 222.362, 334.598, 34.8824, 0.3304 ) }
    dend_6 { pt3dadd( 221.284, 334.214, 34.8824, 0.2796 ) }
    dend_6 { pt3dadd( 220.206, 333.831, 34.8824, 0.2542 ) }
    dend_6 { pt3dadd( 219.082, 333.749, 34.8824, 0.2288 ) }
    dend_6 { pt3dadd( 217.939, 333.788, 34.8824, 0.2796 ) }
    dend_6 { pt3dadd( 216.795, 333.828, 34.8824, 0.356 ) }
    dend_6 { pt3dadd( 215.652, 333.867, 34.8824, 0.483 ) }
    dend_6 { pt3dadd( 214.511, 333.919, 34.7931, 0.5592 ) }
    dend_6 { pt3dadd( 213.375, 333.996, 34.5106, 0.6102 ) }
    dend_6 { pt3dadd( 212.24, 334.073, 34.228, 0.6102 ) }
    dend_6 { pt3dadd( 211.105, 334.151, 33.9455, 0.5592 ) }
    dend_6 { pt3dadd( 209.969, 334.228, 33.663, 0.5338 ) }
    dend_6 { pt3dadd( 208.844, 334.393, 33.5056, 0.5084 ) }
    dend_6 { pt3dadd( 207.734, 334.672, 33.5056, 0.5338 ) }
    dend_6 { pt3dadd( 206.638, 334.536, 33.2301, 0.483 ) }
    dend_6 { pt3dadd( 205.548, 334.23, 32.839, 0.4068 ) }
    dend_6 { pt3dadd( 204.458, 333.923, 32.4481, 0.356 ) }
    dend_6 { pt3dadd( 203.38, 333.769, 32.1286, 0.3814 ) }
    dend_6 { pt3dadd( 202.364, 334.294, 32.1286, 0.4068 ) }
    dend_6 { pt3dadd( 201.456, 334.956, 32.1286, 0.3814 ) }
    dend_6 { pt3dadd( 200.708, 335.822, 32.1286, 0.305 ) }
    dend_6 { pt3dadd( 199.961, 336.688, 32.1286, 0.2542 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 24/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 254.197, 339.471, 33.04, 0.5338 ) }
    dend_5 { pt3dadd( 253.386, 338.536, 33.0467, 0.2796 ) }
    dend_5 { pt3dadd( 252.568, 337.737, 33.0467, 0.305 ) }
    dend_5 { pt3dadd( 251.63, 337.183, 33.0467, 0.2796 ) }
    dend_5 { pt3dadd( 250.496, 337.033, 33.0467, 0.2542 ) }
    dend_5 { pt3dadd( 249.445, 336.727, 33.1478, 0.2288 ) }
    dend_5 { pt3dadd( 248.669, 335.906, 33.5835, 0.2288 ) }
    dend_5 { pt3dadd( 247.895, 335.083, 34.0192, 0.2288 ) }
    dend_5 { pt3dadd( 247.15, 334.241, 34.4235, 0.2288 ) }
    dend_5 { pt3dadd( 246.807, 333.15, 34.4235, 0.2288 ) }
    dend_5 { pt3dadd( 246.462, 332.06, 34.4235, 0.2288 ) }
    dend_5 { pt3dadd( 245.362, 331.871, 34.4235, 0.2288 ) }
    dend_5 { pt3dadd( 244.31, 331.626, 35.065, 0.2542 ) }
    dend_5 { pt3dadd( 243.335, 331.296, 36.279, 0.2796 ) }
    dend_5 { pt3dadd( 242.36, 331.56, 36.7184, 0.305 ) }
    dend_5 { pt3dadd( 241.331, 331.735, 36.7184, 0.2796 ) }
    dend_5 { pt3dadd( 240.235, 331.406, 36.7184, 0.2796 ) }
    dend_5 { pt3dadd( 239.139, 331.077, 36.7184, 0.2796 ) }
    dend_5 { pt3dadd( 238.045, 330.79, 36.7545, 0.3304 ) }
    dend_5 { pt3dadd( 236.962, 331.086, 37.2935, 0.3304 ) }
    dend_5 { pt3dadd( 235.879, 331.383, 37.8322, 0.3304 ) }
    dend_5 { pt3dadd( 234.828, 331.285, 38.3586, 0.2796 ) }
    dend_5 { pt3dadd( 233.807, 330.814, 38.8724, 0.2542 ) }
    dend_5 { pt3dadd( 232.786, 330.343, 39.3865, 0.2542 ) }
    dend_5 { pt3dadd( 231.765, 329.871, 39.9006, 0.2796 ) }
    dend_5 { pt3dadd( 230.747, 329.392, 40.3903, 0.305 ) }
    dend_5 { pt3dadd( 229.788, 328.767, 40.3903, 0.2796 ) }
    dend_5 { pt3dadd( 228.83, 328.144, 40.3903, 0.2542 ) }
    dend_5 { pt3dadd( 227.883, 327.513, 40.4914, 0.2288 ) }
    dend_5 { pt3dadd( 227.013, 326.846, 41.2927, 0.2288 ) }
    dend_5 { pt3dadd( 226.143, 326.18, 42.0938, 0.2288 ) }
    dend_5 { pt3dadd( 225.211, 325.611, 42.6852, 0.2288 ) }
    dend_5 { pt3dadd( 224.105, 325.317, 42.6852, 0.2288 ) }
    dend_5 { pt3dadd( 223.0, 325.024, 42.6852, 0.2288 ) }
    dend_5 { pt3dadd( 221.894, 324.731, 42.6852, 0.2288 ) }
    dend_5 { pt3dadd( 220.846, 324.329, 42.9926, 0.2288 ) }
    dend_5 { pt3dadd( 219.86, 323.81, 43.6296, 0.2288 ) }
    dend_5 { pt3dadd( 218.874, 323.292, 44.2663, 0.2288 ) }
    dend_5 { pt3dadd( 217.889, 322.773, 44.9033, 0.2288 ) }
    dend_5 { pt3dadd( 216.899, 322.252, 45.3824, 0.2288 ) }
    dend_5 { pt3dadd( 215.896, 321.723, 45.0265, 0.2288 ) }
    dend_5 { pt3dadd( 214.892, 321.194, 44.6706, 0.2288 ) }
    dend_5 { pt3dadd( 213.889, 320.664, 44.3148, 0.2288 ) }
    dend_5 { pt3dadd( 212.885, 320.135, 43.9589, 0.2288 ) }
    dend_5 { pt3dadd( 211.881, 319.605, 43.603, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_13 (entry count 69/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 341.443, 303.274, 35.28, 0.6102 ) }
    apic_17 { pt3dadd( 341.044, 302.329, 36.8309, 0.4322 ) }
    apic_17 { pt3dadd( 340.933, 301.348, 37.6127, 0.3814 ) }
    apic_17 { pt3dadd( 341.07, 300.461, 38.5692, 0.356 ) }
    apic_17 { pt3dadd( 341.134, 299.329, 38.64, 0.4322 ) }
    apic_17 { pt3dadd( 340.48, 298.463, 38.8192, 0.483 ) }
    apic_17 { pt3dadd( 340.111, 297.422, 38.92, 0.5084 ) }
    apic_17 { pt3dadd( 339.698, 296.557, 39.7998, 0.4322 ) }
    apic_17 { pt3dadd( 338.611, 296.33, 40.1139, 0.3304 ) }
    apic_17 { pt3dadd( 337.721, 295.678, 40.32, 0.2542 ) }
    apic_17 { pt3dadd( 337.594, 294.633, 41.0838, 0.2288 ) }
    apic_17 { pt3dadd( 337.475, 293.502, 41.16, 0.2288 ) }
    apic_17 { pt3dadd( 337.366, 292.378, 41.2012, 0.2542 ) }
    apic_17 { pt3dadd( 336.81, 292.063, 43.02, 0.2796 ) }
    apic_17 { pt3dadd( 335.734, 292.063, 43.8452, 0.305 ) }
    apic_17 { pt3dadd( 335.421, 291.137, 43.96, 0.305 ) }
    apic_17 { pt3dadd( 335.796, 290.073, 43.96, 0.305 ) }
    apic_17 { pt3dadd( 336.376, 289.088, 43.96, 0.305 ) }
    apic_17 { pt3dadd( 336.565, 288.095, 44.8745, 0.2796 ) }
    apic_17 { pt3dadd( 336.565, 287.062, 45.92, 0.305 ) }
    apic_17 { pt3dadd( 336.565, 285.919, 45.9796, 0.3304 ) }
    apic_17 { pt3dadd( 336.309, 285.051, 47.04, 0.4322 ) }
    apic_17 { pt3dadd( 335.306, 284.627, 47.04, 0.483 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 92/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 341.443, 303.274, 35.28, 0.6102 ) }
    apic_14 { pt3dadd( 341.982, 301.815, 35.28, 0.7626 ) }
    apic_14 { pt3dadd( 342.358, 300.735, 35.2789, 0.7626 ) }
    apic_14 { pt3dadd( 342.676, 299.638, 35.2727, 0.7118 ) }
    apic_14 { pt3dadd( 342.803, 298.502, 35.233, 0.6864 ) }
    apic_14 { pt3dadd( 343.062, 297.394, 35.0193, 0.661 ) }
    apic_14 { pt3dadd( 343.499, 296.369, 34.545, 0.6864 ) }
    apic_14 { pt3dadd( 343.773, 295.288, 34.9689, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_14 { pt3dadd( 344.146, 294.24, 34.58, 0.788 ) }
    apic_14 { pt3dadd( 344.649, 293.228, 34.9182, 0.7626 ) }
    apic_14 { pt3dadd( 345.018, 292.159, 35.2677, 0.7118 ) }
    apic_14 { pt3dadd( 345.422, 291.09, 35.1977, 0.661 ) }
    apic_14 { pt3dadd( 345.909, 290.069, 34.7962, 0.6864 ) }
    apic_14 { pt3dadd( 346.401, 289.06, 34.2546, 0.7626 ) }
    apic_14 { pt3dadd( 346.884, 288.026, 34.2367, 0.8136 ) }
    apic_14 { pt3dadd( 347.26, 286.953, 34.5296, 0.8136 ) }
    apic_14 { pt3dadd( 347.322, 285.824, 34.2073, 0.788 ) }
    apic_14 { pt3dadd( 347.355, 284.681, 34.1463, 0.7626 ) }
    apic_14 { pt3dadd( 347.572, 283.56, 34.0584, 0.788 ) }
    apic_14 { pt3dadd( 347.895, 282.486, 33.5202, 0.8136 ) }
    apic_14 { pt3dadd( 348.286, 281.411, 33.4667, 0.8136 ) }
    apic_14 { pt3dadd( 348.704, 280.379, 34.0934, 0.7626 ) }
    apic_14 { pt3dadd( 349.228, 279.364, 34.1566, 0.7118 ) }
    apic_14 { pt3dadd( 349.866, 278.414, 34.148, 0.6864 ) }
    apic_14 { pt3dadd( 350.43, 277.419, 34.0967, 0.661 ) }
    apic_14 { pt3dadd( 350.939, 276.403, 33.7775, 0.6356 ) }
    apic_14 { pt3dadd( 351.473, 275.428, 33.1148, 0.6102 ) }
    apic_14 { pt3dadd( 352.245, 274.584, 33.0666, 0.6356 ) }
    apic_14 { pt3dadd( 353.138, 273.872, 33.1769, 0.661 ) }
    apic_14 { pt3dadd( 353.912, 273.07, 33.8047, 0.6864 ) }
    apic_14 { pt3dadd( 354.607, 272.176, 34.1827, 0.661 ) }
    apic_14 { pt3dadd( 355.141, 271.166, 34.2882, 0.6356 ) }
    apic_14 { pt3dadd( 355.672, 270.174, 34.7858, 0.6102 ) }
    apic_14 { pt3dadd( 356.316, 269.248, 35.2528, 0.6356 ) }
    apic_14 { pt3dadd( 356.994, 268.33, 35.2836, 0.6356 ) }
    apic_14 { pt3dadd( 357.883, 267.611, 35.2979, 0.6356 ) }
    apic_14 { pt3dadd( 358.764, 266.882, 35.3612, 0.5592 ) }
    apic_14 { pt3dadd( 359.559, 266.07, 35.6342, 0.5592 ) }
    apic_14 { pt3dadd( 360.251, 265.247, 36.5688, 0.5592 ) }
    apic_14 { pt3dadd( 360.755, 264.265, 37.2943, 0.661 ) }
    apic_14 { pt3dadd( 361.308, 263.27, 37.52, 0.6864 ) }
    apic_14 { pt3dadd( 361.829, 262.253, 37.52, 0.7372 ) }
    apic_14 { pt3dadd( 362.173, 261.169, 37.5206, 0.6864 ) }
    apic_14 { pt3dadd( 362.878, 260.271, 37.5239, 0.661 ) }
    apic_14 { pt3dadd( 363.657, 259.45, 37.5427, 0.5848 ) }
    apic_14 { pt3dadd( 364.126, 258.411, 37.6522, 0.6102 ) }
    apic_14 { pt3dadd( 364.731, 257.455, 38.0498, 0.6864 ) }
    apic_14 { pt3dadd( 365.311, 256.507, 38.6708, 0.788 ) }
    apic_14 { pt3dadd( 366.035, 255.641, 39.058, 0.788 ) }
    apic_14 { pt3dadd( 366.726, 254.789, 39.849, 0.6864 ) }
    apic_14 { pt3dadd( 367.392, 253.921, 40.5308, 0.5848 ) }
    apic_14 { pt3dadd( 367.898, 253.053, 41.7474, 0.5848 ) }
    apic_14 { pt3dadd( 368.586, 252.158, 41.7273, 0.6864 ) }
    apic_14 { pt3dadd( 369.413, 251.408, 41.1488, 0.788 ) }
    apic_14 { pt3dadd( 370.113, 250.52, 40.7484, 0.8136 ) }
    apic_14 { pt3dadd( 370.722, 249.559, 40.4846, 0.7626 ) }
    apic_14 { pt3dadd( 371.238, 248.547, 40.451, 0.6864 ) }
    apic_14 { pt3dadd( 371.706, 247.519, 40.8055, 0.661 ) }
    apic_14 { pt3dadd( 372.116, 246.453, 40.8192, 0.5848 ) }
    apic_14 { pt3dadd( 372.539, 245.422, 41.2899, 0.5592 ) }
    apic_14 { pt3dadd( 373.072, 244.461, 41.9384, 0.483 ) }
    apic_14 { pt3dadd( 373.576, 243.435, 41.998, 0.5084 ) }
    apic_14 { pt3dadd( 374.085, 242.41, 41.9891, 0.483 ) }
    apic_14 { pt3dadd( 374.627, 241.403, 41.9415, 0.5084 ) }
    apic_14 { pt3dadd( 375.019, 240.374, 41.6744, 0.5084 ) }
    apic_14 { pt3dadd( 374.952, 239.258, 41.4697, 0.5338 ) }
    apic_14 { pt3dadd( 374.882, 238.154, 41.3991, 0.5592 ) }
    apic_14 { pt3dadd( 375.226, 237.151, 40.5194, 0.6102 ) }
    apic_14 { pt3dadd( 375.691, 236.174, 39.8395, 0.7118 ) }
    apic_14 { pt3dadd( 376.013, 235.078, 39.7603, 0.7626 ) }
    apic_14 { pt3dadd( 376.251, 233.961, 39.762, 0.8136 ) }
    apic_14 { pt3dadd( 376.569, 232.873, 39.7723, 0.7626 ) }
    apic_14 { pt3dadd( 376.993, 231.811, 39.8345, 0.7626 ) }
    apic_14 { pt3dadd( 377.391, 230.755, 40.1937, 0.661 ) }
    apic_14 { pt3dadd( 377.779, 229.702, 40.6983, 0.6356 ) }
    apic_14 { pt3dadd( 377.968, 228.589, 40.8982, 0.5084 ) }
    apic_14 { pt3dadd( 378.009, 227.448, 41.0306, 0.5338 ) }
    apic_14 { pt3dadd( 378.18, 226.327, 41.09, 0.5338 ) }
    apic_14 { pt3dadd( 378.627, 225.287, 40.9472, 0.661 ) }
    apic_14 { pt3dadd( 379.292, 224.362, 40.8531, 0.661 ) }
    apic_14 { pt3dadd( 379.94, 223.426, 40.7529, 0.661 ) }
    apic_14 { pt3dadd( 380.163, 222.356, 40.502, 0.5592 ) }
    apic_14 { pt3dadd( 380.22, 221.063, 40.9606, 0.5084 ) }
    apic_14 { pt3dadd( 380.717, 220.306, 40.9052, 0.5848 ) }
    apic_14 { pt3dadd( 381.371, 219.375, 40.9385, 0.6356 ) }
    apic_14 { pt3dadd( 382.059, 218.465, 41.1331, 0.7118 ) }
    apic_14 { pt3dadd( 382.331, 217.395, 41.7816, 0.788 ) }
    apic_14 { pt3dadd( 382.662, 216.313, 41.9952, 0.9152 ) }
    apic_14 { pt3dadd( 383.223, 215.325, 42.0, 1.0168 ) }
    apic_14 { pt3dadd( 383.964, 214.459, 42.0, 1.0678 ) }
    apic_14 { pt3dadd( 384.748, 213.625, 42.0, 1.0424 ) }
    apic_14 { pt3dadd( 385.433, 212.712, 42.0003, 1.0168 ) }
    apic_14 { pt3dadd( 385.973, 211.706, 42.0014, 0.966 ) }
    apic_14 { pt3dadd( 386.402, 210.647, 42.0076, 0.9406 ) }
    apic_14 { pt3dadd( 386.765, 209.562, 42.0454, 0.9406 ) }
    apic_14 { pt3dadd( 386.968, 208.447, 42.331, 0.9406 ) }
    apic_14 { pt3dadd( 387.322, 207.395, 42.912, 0.966 ) }
    apic_14 { pt3dadd( 387.934, 206.443, 43.1074, 0.966 ) }
    apic_14 { pt3dadd( 388.688, 205.585, 43.12, 0.9914 ) }
    apic_14 { pt3dadd( 389.422, 204.707, 43.12, 0.966 ) }
    apic_14 { pt3dadd( 390.001, 203.726, 43.12, 0.8898 ) }
    apic_14 { pt3dadd( 390.544, 202.719, 43.12, 0.8136 ) }
    apic_14 { pt3dadd( 391.206, 201.789, 43.12, 0.7626 ) }
    apic_14 { pt3dadd( 391.982, 200.949, 43.12, 0.7118 ) }
    apic_14 { pt3dadd( 392.78, 200.13, 43.1203, 0.6356 ) }
    apic_14 { pt3dadd( 393.55, 199.284, 43.1214, 0.5592 ) }
    apic_14 { pt3dadd( 394.094, 198.287, 43.1273, 0.5848 ) }
    apic_14 { pt3dadd( 394.217, 197.165, 43.1676, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_14 { pt3dadd( 394.229, 196.029, 43.472, 0.7626 ) }
    apic_14 { pt3dadd( 394.268, 194.915, 44.0832, 0.839 ) }
    apic_14 { pt3dadd( 394.519, 193.809, 44.2282, 0.8898 ) }
    apic_14 { pt3dadd( 394.873, 192.722, 44.2008, 0.9152 ) }
    apic_14 { pt3dadd( 395.359, 191.69, 44.0339, 0.9406 ) }
    apic_14 { pt3dadd( 395.901, 190.722, 43.3888, 1.0168 ) }
    apic_14 { pt3dadd( 396.545, 189.79, 43.0634, 1.0678 ) }
    apic_14 { pt3dadd( 397.111, 188.862, 43.7643, 1.0932 ) }
    apic_14 { pt3dadd( 397.42, 187.782, 44.24, 1.0424 ) }
    apic_14 { pt3dadd( 397.644, 186.669, 44.24, 0.966 ) }
    apic_14 { pt3dadd( 398.19, 185.664, 44.2394, 0.8644 ) }
    apic_14 { pt3dadd( 398.773, 184.68, 44.238, 0.788 ) }
    apic_14 { pt3dadd( 399.216, 183.642, 44.2232, 0.839 ) }
    apic_14 { pt3dadd( 399.27, 182.5, 44.1619, 0.8898 ) }
    apic_14 { pt3dadd( 399.376, 181.378, 43.7097, 0.9152 ) }
    apic_14 { pt3dadd( 399.798, 180.345, 43.1992, 0.839 ) }
    apic_14 { pt3dadd( 400.48, 179.434, 43.1217, 0.8136 ) }
    apic_14 { pt3dadd( 401.26, 178.599, 43.1248, 0.788 ) }
    apic_14 { pt3dadd( 402.009, 177.733, 43.1407, 0.7626 ) }
    apic_14 { pt3dadd( 402.424, 176.679, 43.2418, 0.661 ) }
    apic_14 { pt3dadd( 402.54, 175.577, 43.8542, 0.661 ) }
    apic_14 { pt3dadd( 402.872, 174.497, 44.2072, 0.661 ) }
    apic_14 { pt3dadd( 403.342, 173.456, 44.2456, 0.7372 ) }
    apic_14 { pt3dadd( 404.069, 172.577, 44.2646, 0.6864 ) }
    apic_14 { pt3dadd( 404.752, 171.661, 44.3666, 0.6864 ) }
    apic_14 { pt3dadd( 405.355, 170.736, 45.0808, 0.6864 ) }
    apic_14 { pt3dadd( 405.649, 169.651, 45.4994, 0.788 ) }
    apic_14 { pt3dadd( 405.686, 168.547, 46.2118, 0.8898 ) }
    apic_14 { pt3dadd( 405.808, 167.421, 46.5895, 0.9152 ) }
    apic_14 { pt3dadd( 406.279, 166.407, 47.1512, 0.839 ) }
    apic_14 { pt3dadd( 406.883, 165.438, 47.2021, 0.7118 ) }
    apic_14 { pt3dadd( 407.247, 164.388, 46.5548, 0.661 ) }
    apic_14 { pt3dadd( 407.519, 163.277, 46.5094, 0.6864 ) }
    apic_14 { pt3dadd( 407.726, 162.155, 46.6715, 0.7372 ) }
    apic_14 { pt3dadd( 408.203, 161.154, 47.3539, 0.7626 ) }
    apic_14 { pt3dadd( 408.731, 160.143, 47.5742, 0.7626 ) }
    apic_14 { pt3dadd( 409.291, 159.146, 47.4594, 0.788 ) }
    apic_14 { pt3dadd( 409.882, 158.197, 46.8731, 0.8136 ) }
    apic_14 { pt3dadd( 410.407, 157.191, 46.513, 0.788 ) }
    apic_14 { pt3dadd( 410.927, 156.174, 46.4327, 0.7118 ) }
    apic_14 { pt3dadd( 411.457, 155.163, 46.2434, 0.661 ) }
    apic_14 { pt3dadd( 412.004, 154.2, 45.5624, 0.6864 ) }
    apic_14 { pt3dadd( 412.645, 153.26, 45.3659, 0.7372 ) }
    apic_14 { pt3dadd( 413.383, 152.385, 45.3586, 0.7118 ) }
    apic_14 { pt3dadd( 414.286, 151.685, 45.3538, 0.661 ) }
    apic_14 { pt3dadd( 415.148, 150.934, 45.3303, 0.6102 ) }
    apic_14 { pt3dadd( 415.746, 149.962, 45.185, 0.661 ) }
    apic_14 { pt3dadd( 416.136, 148.953, 44.2865, 0.7118 ) }
    apic_14 { pt3dadd( 416.115, 147.829, 43.7808, 0.7626 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 49/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 342.285, 326.056, 33.9175, 0.7626 ) }
    apic_12 { pt3dadd( 342.904, 327.042, 35.0384, 0.4576 ) }
    apic_12 { pt3dadd( 343.55, 327.915, 35.8005, 0.4068 ) }
    apic_12 { pt3dadd( 344.369, 328.714, 35.8005, 0.3304 ) }
    apic_12 { pt3dadd( 345.189, 329.511, 35.8005, 0.305 ) }
    apic_12 { pt3dadd( 346.142, 330.093, 36.0968, 0.305 ) }
    apic_12 { pt3dadd( 347.173, 330.552, 36.5649, 0.2796 ) }
    apic_12 { pt3dadd( 348.204, 331.009, 37.0331, 0.2542 ) }
    apic_12 { pt3dadd( 349.235, 331.467, 37.501, 0.2288 ) }
    apic_12 { pt3dadd( 350.265, 331.926, 37.9691, 0.2288 ) }
    apic_12 { pt3dadd( 351.296, 332.384, 38.4373, 0.2288 ) }
    apic_12 { pt3dadd( 352.033, 333.085, 39.5422, 0.2288 ) }
    apic_12 { pt3dadd( 352.67, 333.867, 40.8598, 0.2542 ) }
    apic_12 { pt3dadd( 352.99, 334.331, 42.5678, 0.2796 ) }
    apic_12 { pt3dadd( 352.609, 334.086, 45.1391, 0.305 ) }
    apic_12 { pt3dadd( 352.163, 333.573, 46.3571, 0.2796 ) }
    apic_12 { pt3dadd( 353.096, 333.141, 46.8255, 0.305 ) }
    apic_12 { pt3dadd( 354.134, 333.185, 47.9984, 0.3304 ) }
    apic_12 { pt3dadd( 355.122, 333.336, 49.315, 0.3814 ) }
    apic_12 { pt3dadd( 356.045, 333.622, 50.8122, 0.3304 ) }
    apic_12 { pt3dadd( 356.968, 333.908, 52.3093, 0.2796 ) }
    apic_12 { pt3dadd( 357.593, 334.817, 53.0312, 0.2288 ) }
    apic_12 { pt3dadd( 358.246, 335.662, 53.7006, 0.2288 ) }
    apic_12 { pt3dadd( 359.37, 335.468, 53.7006, 0.2288 ) }
    apic_12 { pt3dadd( 360.416, 335.879, 53.7491, 0.2288 ) }
    apic_12 { pt3dadd( 360.831, 336.871, 54.7008, 0.2288 ) }
    apic_12 { pt3dadd( 361.273, 337.855, 55.62, 0.2288 ) }
    apic_12 { pt3dadd( 361.895, 338.774, 56.3038, 0.2288 ) }
    apic_12 { pt3dadd( 362.518, 339.693, 56.9873, 0.2542 ) }
    apic_12 { pt3dadd( 363.139, 340.611, 57.671, 0.305 ) }
    apic_12 { pt3dadd( 363.862, 341.334, 58.8602, 0.356 ) }
    apic_12 { pt3dadd( 364.615, 341.998, 60.2042, 0.356 ) }
    apic_12 { pt3dadd( 365.382, 342.764, 61.0117, 0.305 ) }
    apic_12 { pt3dadd( 366.153, 343.573, 61.607, 0.2796 ) }
    apic_12 { pt3dadd( 366.925, 344.382, 62.202, 0.2796 ) }
    apic_12 { pt3dadd( 367.698, 345.189, 62.7973, 0.305 ) }
    apic_12 { pt3dadd( 368.47, 345.998, 63.3926, 0.305 ) }
    apic_12 { pt3dadd( 369.016, 346.913, 63.7983, 0.305 ) }
    apic_12 { pt3dadd( 369.076, 348.055, 63.8053, 0.305 ) }
    apic_12 { pt3dadd( 369.223, 349.168, 64.3398, 0.2796 ) }
    apic_12 { pt3dadd( 369.37, 350.281, 64.874, 0.2796 ) }
    apic_12 { pt3dadd( 369.517, 351.396, 65.4083, 0.2796 ) }
    apic_12 { pt3dadd( 369.664, 352.509, 65.9425, 0.356 ) }
    apic_12 { pt3dadd( 369.811, 353.622, 66.477, 0.4576 ) }
    apic_12 { pt3dadd( 369.958, 354.735, 67.0113, 0.6102 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 94/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 342.285, 326.056, 33.9175, 0.7626 ) }
    apic_11 { pt3dadd( 343.026, 326.384, 33.5334, 0.7118 ) }
    apic_11 { pt3dadd( 344.055, 326.819, 33.658, 0.7118 ) }
    apic_11 { pt3dadd( 345.059, 327.333, 33.9097, 0.661 ) }
    apic_11 { pt3dadd( 346.018, 327.918, 33.4961, 0.6356 ) }
    apic_11 { pt3dadd( 346.846, 328.647, 33.0719, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_11 { pt3dadd( 347.545, 329.551, 33.04, 0.6864 ) }
    apic_11 { pt3dadd( 348.29, 330.42, 33.0394, 0.6356 ) }
    apic_11 { pt3dadd( 348.866, 331.383, 33.0366, 0.5592 ) }
    apic_11 { pt3dadd( 348.967, 332.489, 33.0168, 0.483 ) }
    apic_11 { pt3dadd( 349.111, 333.555, 32.898, 0.483 ) }
    apic_11 { pt3dadd( 349.834, 334.365, 32.3649, 0.5592 ) }
    apic_11 { pt3dadd( 350.681, 335.025, 31.4138, 0.5848 ) }
    apic_11 { pt3dadd( 351.318, 335.896, 30.8342, 0.5338 ) }
    apic_11 { pt3dadd( 351.764, 336.945, 30.7992, 0.4322 ) }
    apic_11 { pt3dadd( 352.462, 337.815, 30.7952, 0.4322 ) }
    apic_11 { pt3dadd( 353.432, 338.419, 30.7742, 0.5084 ) }
    apic_11 { pt3dadd( 354.329, 339.124, 30.6835, 0.5592 ) }
    apic_11 { pt3dadd( 355.155, 339.882, 30.2784, 0.5084 ) }
    apic_11 { pt3dadd( 356.107, 340.334, 29.4781, 0.4068 ) }
    apic_11 { pt3dadd( 357.212, 340.504, 29.0626, 0.3304 ) }
    apic_11 { pt3dadd( 358.113, 341.101, 29.1486, 0.356 ) }
    apic_11 { pt3dadd( 358.801, 341.955, 28.8142, 0.4322 ) }
    apic_11 { pt3dadd( 359.528, 342.753, 27.9325, 0.5084 ) }
    apic_11 { pt3dadd( 360.334, 343.525, 27.7444, 0.5338 ) }
    apic_11 { pt3dadd( 361.35, 343.939, 28.1481, 0.5848 ) }
    apic_11 { pt3dadd( 362.458, 344.047, 28.0367, 0.661 ) }
    apic_11 { pt3dadd( 363.53, 344.248, 27.2591, 0.7372 ) }
    apic_11 { pt3dadd( 364.564, 344.605, 26.4407, 0.7372 ) }
    apic_11 { pt3dadd( 365.562, 345.045, 25.6096, 0.7118 ) }
    apic_11 { pt3dadd( 366.535, 345.595, 25.2095, 0.661 ) }
    apic_11 { pt3dadd( 367.437, 346.291, 25.1997, 0.6356 ) }
    apic_11 { pt3dadd( 368.27, 347.076, 25.1986, 0.5592 ) }
    apic_11 { pt3dadd( 369.129, 347.83, 25.1938, 0.5084 ) }
    apic_11 { pt3dadd( 370.03, 348.533, 25.1709, 0.4068 ) }
    apic_11 { pt3dadd( 370.887, 349.286, 25.0709, 0.356 ) }
    apic_11 { pt3dadd( 371.655, 350.102, 24.5972, 0.2796 ) }
    apic_11 { pt3dadd( 372.234, 351.048, 24.4362, 0.2542 ) }
    apic_11 { pt3dadd( 372.311, 352.106, 25.0838, 0.2542 ) }
    apic_11 { pt3dadd( 372.232, 353.182, 25.991, 0.3304 ) }
    apic_11 { pt3dadd( 372.666, 354.162, 26.3385, 0.4322 ) }
    apic_11 { pt3dadd( 373.422, 355.014, 26.4256, 0.483 ) }
    apic_11 { pt3dadd( 374.183, 355.833, 26.9486, 0.4576 ) }
    apic_11 { pt3dadd( 374.755, 356.748, 27.8102, 0.3814 ) }
    apic_11 { pt3dadd( 374.924, 357.824, 27.7421, 0.356 ) }
    apic_11 { pt3dadd( 374.681, 358.923, 27.4974, 0.356 ) }
    apic_11 { pt3dadd( 374.267, 359.987, 27.5282, 0.3814 ) }
    apic_11 { pt3dadd( 374.015, 361.076, 28.014, 0.356 ) }
    apic_11 { pt3dadd( 374.223, 362.14, 28.7328, 0.3304 ) }
    apic_11 { pt3dadd( 374.418, 363.225, 29.4638, 0.3304 ) }
    apic_11 { pt3dadd( 374.867, 364.255, 29.6688, 0.3814 ) }
    apic_11 { pt3dadd( 375.385, 365.275, 29.685, 0.4068 ) }
    apic_11 { pt3dadd( 375.511, 366.393, 29.715, 0.3814 ) }
    apic_11 { pt3dadd( 375.337, 367.518, 29.8908, 0.3304 ) }
    apic_11 { pt3dadd( 375.526, 368.592, 30.5656, 0.305 ) }
    apic_11 { pt3dadd( 375.855, 369.679, 30.7824, 0.3304 ) }
    apic_11 { pt3dadd( 376.194, 370.772, 30.7978, 0.356 ) }
    apic_11 { pt3dadd( 376.535, 371.863, 30.7852, 0.4322 ) }
    apic_11 { pt3dadd( 376.707, 372.991, 30.6967, 0.4576 ) }
    apic_11 { pt3dadd( 377.088, 374.041, 30.1801, 0.483 ) }
    apic_11 { pt3dadd( 377.582, 375.056, 29.7357, 0.4322 ) }
    apic_11 { pt3dadd( 378.079, 376.084, 29.68, 0.4322 ) }
    apic_11 { pt3dadd( 378.449, 377.165, 29.68, 0.4576 ) }
    apic_11 { pt3dadd( 378.814, 378.25, 29.68, 0.483 ) }
    apic_11 { pt3dadd( 379.411, 379.221, 29.68, 0.4576 ) }
    apic_11 { pt3dadd( 380.182, 380.064, 29.68, 0.3814 ) }
    apic_11 { pt3dadd( 380.918, 380.755, 30.24, 0.3304 ) }
    apic_11 { pt3dadd( 381.76, 381.44, 30.52, 0.305 ) }
    apic_11 { pt3dadd( 382.856, 381.524, 31.066, 0.2796 ) }
    apic_11 { pt3dadd( 383.981, 381.561, 31.36, 0.2796 ) }
    apic_11 { pt3dadd( 384.905, 382.21, 31.36, 0.2796 ) }
    apic_11 { pt3dadd( 385.951, 382.577, 31.36, 0.305 ) }
    apic_11 { pt3dadd( 387.007, 382.927, 31.6397, 0.2796 ) }
    apic_11 { pt3dadd( 388.118, 383.042, 31.92, 0.2542 ) }
    apic_11 { pt3dadd( 389.255, 383.126, 31.92, 0.2288 ) }
    apic_11 { pt3dadd( 389.904, 383.876, 32.2218, 0.2288 ) }
    apic_11 { pt3dadd( 390.637, 384.741, 32.48, 0.2288 ) }
    apic_11 { pt3dadd( 391.576, 385.376, 32.6432, 0.2288 ) }
    apic_11 { pt3dadd( 392.47, 385.844, 33.77, 0.2542 ) }
    apic_11 { pt3dadd( 393.078, 386.786, 33.88, 0.2796 ) }
    // Section: apic_7, id: apic_7, parent: apic_3 (entry count 74/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 324.436, 320.114, 30.1851, 0.5848 ) }
    apic_7 { pt3dadd( 324.334, 319.462, 26.6036, 0.6102 ) }
    apic_7 { pt3dadd( 323.765, 319.106, 24.4871, 0.5848 ) }
    apic_7 { pt3dadd( 323.163, 318.352, 23.2375, 0.5084 ) }
    apic_7 { pt3dadd( 322.855, 317.339, 22.2275, 0.4322 ) }
    apic_7 { pt3dadd( 322.552, 316.255, 21.8296, 0.4322 ) }
    apic_7 { pt3dadd( 322.415, 315.145, 21.3032, 0.3814 ) }
    apic_7 { pt3dadd( 323.19, 314.397, 21.5841, 0.4068 ) }
    apic_7 { pt3dadd( 323.922, 313.527, 21.8179, 0.4576 ) }
    apic_7 { pt3dadd( 324.79, 312.783, 21.8238, 0.6102 ) }
    apic_7 { pt3dadd( 325.624, 312.001, 21.7563, 0.7118 ) }
    apic_7 { pt3dadd( 326.192, 311.03, 21.3301, 0.7118 ) }
    apic_7 { pt3dadd( 326.716, 310.194, 19.9335, 0.6864 ) }
    apic_7 { pt3dadd( 327.443, 309.602, 18.3386, 0.661 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 88/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 324.436, 320.114, 30.1851, 0.5848 ) }
    apic_4 { pt3dadd( 325.289, 319.674, 30.2386, 0.5848 ) }
    apic_4 { pt3dadd( 326.276, 319.129, 29.8049, 0.6356 ) }
    apic_4 { pt3dadd( 327.02, 318.42, 28.621, 0.661 ) }
    apic_4 { pt3dadd( 326.71, 317.441, 27.6002, 0.6356 ) }
    apic_4 { pt3dadd( 326.256, 316.396, 27.4436, 0.6102 ) }
    apic_4 { pt3dadd( 325.609, 315.453, 27.4378, 0.6356 ) }
    apic_4 { pt3dadd( 324.83, 314.616, 27.4313, 0.661 ) }
    apic_4 { pt3dadd( 324.076, 313.756, 27.4025, 0.6864 ) }
    apic_4 { pt3dadd( 323.413, 312.826, 27.2362, 0.7118 ) }
    apic_4 { pt3dadd( 322.631, 312.071, 26.3777, 0.7118 ) }
    apic_4 { pt3dadd( 321.698, 311.492, 25.5878, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 0/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 416.115, 147.829, 43.7808, 0.7626 ) }
    apic_16 { pt3dadd( 416.89, 146.271, 44.5183, 0.661 ) }
    apic_16 { pt3dadd( 417.638, 145.497, 45.4342, 0.7372 ) }
    apic_16 { pt3dadd( 418.161, 144.613, 46.6239, 0.7626 ) }
    apic_16 { pt3dadd( 418.65, 143.602, 46.9347, 0.839 ) }
    apic_16 { pt3dadd( 419.306, 142.681, 46.5396, 0.8898 ) }
    apic_16 { pt3dadd( 420.004, 141.775, 46.5688, 0.8644 ) }
    apic_16 { pt3dadd( 420.677, 140.868, 46.9039, 0.8136 ) }
    apic_16 { pt3dadd( 421.339, 140.003, 47.7487, 0.7118 ) }
    apic_16 { pt3dadd( 421.99, 139.094, 48.2905, 0.6102 ) }
    apic_16 { pt3dadd( 422.725, 138.225, 48.2502, 0.5084 ) }
    apic_16 { pt3dadd( 423.496, 137.433, 48.0698, 0.483 ) }
    apic_16 { pt3dadd( 424.44, 136.881, 48.8662, 0.5592 ) }
    apic_16 { pt3dadd( 425.211, 136.136, 49.6224, 0.6356 ) }
    apic_16 { pt3dadd( 425.655, 135.098, 49.8453, 0.6864 ) }
    apic_16 { pt3dadd( 425.859, 133.974, 49.8761, 0.6356 ) }
    apic_16 { pt3dadd( 426.119, 132.883, 50.0391, 0.5848 ) }
    apic_16 { pt3dadd( 426.618, 131.93, 50.7758, 0.5084 ) }
    apic_16 { pt3dadd( 427.078, 131.082, 52.2553, 0.5338 ) }
    apic_16 { pt3dadd( 427.523, 130.169, 53.2042, 0.5592 ) }
    apic_16 { pt3dadd( 427.627, 129.048, 53.5802, 0.6102 ) }
    apic_16 { pt3dadd( 427.627, 127.928, 54.1327, 0.5592 ) }
    apic_16 { pt3dadd( 427.627, 126.792, 54.4524, 0.5084 ) }
    apic_16 { pt3dadd( 427.628, 125.651, 54.6977, 0.483 ) }
    apic_16 { pt3dadd( 427.634, 124.52, 54.6188, 0.5592 ) }
    apic_16 { pt3dadd( 427.676, 123.39, 54.2682, 0.6356 ) }
    apic_16 { pt3dadd( 427.878, 122.282, 53.9851, 0.6864 ) }
    apic_16 { pt3dadd( 428.253, 121.223, 53.4708, 0.661 ) }
    apic_16 { pt3dadd( 428.693, 120.178, 53.223, 0.5848 ) }
    apic_16 { pt3dadd( 429.181, 119.144, 53.3277, 0.5084 ) }
    apic_16 { pt3dadd( 429.638, 118.119, 53.7799, 0.4322 ) }
    apic_16 { pt3dadd( 430.193, 117.16, 54.3514, 0.4322 ) }
    apic_16 { pt3dadd( 430.776, 116.207, 54.8377, 0.3814 ) }
    apic_16 { pt3dadd( 430.96, 115.143, 54.9377, 0.4068 ) }
    apic_16 { pt3dadd( 430.999, 114.019, 54.686, 0.4576 ) }
    apic_16 { pt3dadd( 431.219, 112.969, 55.3736, 0.5592 ) }
    apic_16 { pt3dadd( 431.476, 111.948, 56.4385, 0.5592 ) }
    apic_16 { pt3dadd( 431.671, 110.849, 56.9293, 0.483 ) }
    apic_16 { pt3dadd( 431.672, 109.723, 56.723, 0.483 ) }
    apic_16 { pt3dadd( 431.529, 108.806, 57.7528, 0.5848 ) }
    apic_16 { pt3dadd( 431.898, 107.946, 58.996, 0.6864 ) }
    apic_16 { pt3dadd( 432.279, 106.924, 59.7167, 0.6864 ) }
    apic_16 { pt3dadd( 432.288, 105.803, 59.9726, 0.6102 ) }
    apic_16 { pt3dadd( 432.298, 104.675, 60.359, 0.5338 ) }
    apic_16 { pt3dadd( 432.6, 103.605, 60.8952, 0.4322 ) }
    apic_16 { pt3dadd( 432.725, 102.808, 59.92, 0.356 ) }
    apic_16 { pt3dadd( 433.43, 101.925, 59.92, 0.356 ) }
    apic_16 { pt3dadd( 433.796, 100.871, 60.2, 0.4068 ) }
    apic_16 { pt3dadd( 433.988, 99.7562, 60.2297, 0.483 ) }
    apic_16 { pt3dadd( 434.19, 98.7208, 61.2282, 0.4576 ) }
    apic_16 { pt3dadd( 434.976, 97.9302, 61.465, 0.483 ) }
    apic_16 { pt3dadd( 435.292, 97.0806, 62.909, 0.4322 ) }
    apic_16 { pt3dadd( 435.302, 95.939, 63.0, 0.4576 ) }
    apic_16 { pt3dadd( 435.493, 94.8544, 63.5267, 0.4576 ) }
    apic_16 { pt3dadd( 435.521, 93.7149, 63.6135, 0.5848 ) }
    apic_16 { pt3dadd( 435.521, 92.6122, 64.3521, 0.6864 ) }
    apic_16 { pt3dadd( 435.552, 91.5977, 65.5614, 0.6864 ) }
    apic_16 { pt3dadd( 435.771, 90.5184, 66.0514, 0.5338 ) }
    apic_16 { pt3dadd( 436.029, 89.4208, 66.36, 0.3814 ) }
    apic_16 { pt3dadd( 436.465, 88.4391, 67.0788, 0.305 ) }
    apic_16 { pt3dadd( 437.198, 87.5866, 67.2, 0.305 ) }
    apic_16 { pt3dadd( 437.812, 86.7199, 67.6458, 0.305 ) }
    apic_16 { pt3dadd( 438.198, 85.8251, 68.8604, 0.356 ) }
    apic_16 { pt3dadd( 438.381, 84.7206, 69.1146, 0.4068 ) }
    apic_16 { pt3dadd( 438.756, 83.7421, 69.4386, 0.4322 ) }
    apic_16 { pt3dadd( 439.108, 82.7673, 70.28, 0.3814 ) }
    apic_16 { pt3dadd( 439.979, 82.085, 70.28, 0.356 ) }
    apic_16 { pt3dadd( 440.409, 81.0466, 70.28, 0.4068 ) }
    apic_16 { pt3dadd( 440.874, 80.0152, 70.28, 0.4576 ) }
    apic_16 { pt3dadd( 441.806, 79.3804, 70.28, 0.4576 ) }
    apic_16 { pt3dadd( 442.611, 78.5967, 70.28, 0.356 ) }
    apic_16 { pt3dadd( 443.077, 77.5568, 70.28, 0.305 ) }
    apic_16 { pt3dadd( 443.898, 76.7726, 70.28, 0.2796 ) }
    apic_16 { pt3dadd( 444.471, 75.8372, 70.709, 0.305 ) }
    apic_16 { pt3dadd( 444.848, 74.8006, 71.12, 0.2796 ) }
    apic_16 { pt3dadd( 445.264, 73.7384, 71.1519, 0.2542 ) }
    apic_16 { pt3dadd( 445.762, 72.7377, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 446.618, 72.1641, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 446.961, 71.2898, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 447.049, 70.151, 71.68, 0.2542 ) }
    apic_16 { pt3dadd( 447.194, 69.0207, 71.68, 0.305 ) }
    apic_16 { pt3dadd( 447.396, 67.9088, 71.68, 0.356 ) }
    apic_16 { pt3dadd( 447.881, 66.8754, 71.68, 0.356 ) }
    apic_16 { pt3dadd( 448.497, 66.02, 71.68, 0.305 ) }
    apic_16 { pt3dadd( 449.522, 65.5815, 71.68, 0.2542 ) }
    apic_16 { pt3dadd( 450.466, 64.9465, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 451.164, 64.0433, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 451.835, 63.1185, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 452.589, 62.2582, 71.68, 0.2542 ) }
    apic_16 { pt3dadd( 453.503, 61.5808, 71.68, 0.2796 ) }
    apic_16 { pt3dadd( 454.416, 60.895, 71.68, 0.305 ) }
    apic_16 { pt3dadd( 455.243, 60.1125, 71.68, 0.2796 ) }
    apic_16 { pt3dadd( 456.035, 59.3129, 71.68, 0.2542 ) }
    apic_16 { pt3dadd( 456.747, 58.465, 71.68, 0.2288 ) }
    apic_16 { pt3dadd( 457.602, 57.8021, 72.0966, 0.2288 ) }
    apic_16 { pt3dadd( 458.277, 56.9385, 72.8, 0.2542 ) }
    apic_16 { pt3dadd( 458.544, 55.8391, 72.8, 0.2796 ) }
    apic_16 { pt3dadd( 459.022, 54.8116, 72.8, 0.305 ) }
    apic_16 { pt3dadd( 459.419, 53.768, 72.9151, 0.2796 ) }
    apic_16 { pt3dadd( 459.87, 52.8756, 73.64, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_16 { pt3dadd( 460.356, 52.3657, 75.035, 0.2288 ) }
    apic_16 { pt3dadd( 460.594, 51.4944, 76.1233, 0.2288 ) }
    apic_16 { pt3dadd( 460.78, 50.3997, 76.5668, 0.2288 ) }
    apic_16 { pt3dadd( 461.023, 49.3048, 76.6259, 0.2288 ) }
    apic_16 { pt3dadd( 461.833, 48.8488, 75.88, 0.2542 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 5/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 416.115, 147.829, 43.7808, 0.7626 ) }
    apic_15 { pt3dadd( 415.704, 147.876, 41.6192, 0.305 ) }
    apic_15 { pt3dadd( 416.111, 147.847, 39.4926, 0.4576 ) }
    apic_15 { pt3dadd( 416.946, 147.279, 38.593, 0.5848 ) }
    apic_15 { pt3dadd( 417.617, 146.396, 37.9812, 0.7118 ) }
    apic_15 { pt3dadd( 418.225, 145.442, 37.5917, 0.6864 ) }
    apic_15 { pt3dadd( 419.044, 144.661, 37.515, 0.661 ) }
    apic_15 { pt3dadd( 420.072, 144.183, 37.4912, 0.5848 ) }
    apic_15 { pt3dadd( 421.196, 144.15, 37.3086, 0.5848 ) }
    apic_15 { pt3dadd( 422.26, 144.017, 36.4476, 0.6356 ) }
    apic_15 { pt3dadd( 422.891, 143.212, 35.5312, 0.7626 ) }
    apic_15 { pt3dadd( 423.394, 142.197, 35.2624, 0.839 ) }
    apic_15 { pt3dadd( 423.865, 141.157, 35.0848, 0.839 ) }
    apic_15 { pt3dadd( 424.274, 140.126, 34.4313, 0.7372 ) }
    apic_15 { pt3dadd( 424.85, 139.149, 34.1816, 0.6356 ) }
    apic_15 { pt3dadd( 425.634, 138.323, 34.1522, 0.5592 ) }
    apic_15 { pt3dadd( 426.574, 137.675, 34.1197, 0.5848 ) }
    apic_15 { pt3dadd( 427.608, 137.199, 33.9377, 0.6864 ) }
    apic_15 { pt3dadd( 428.497, 136.66, 32.7678, 0.788 ) }
    apic_15 { pt3dadd( 429.339, 136.149, 31.3466, 0.8136 ) }
    apic_15 { pt3dadd( 430.189, 135.429, 30.7905, 0.7372 ) }
    apic_15 { pt3dadd( 430.941, 134.581, 30.4394, 0.661 ) }
    apic_15 { pt3dadd( 431.874, 133.933, 30.4584, 0.5592 ) }
    apic_15 { pt3dadd( 432.959, 133.62, 30.7597, 0.5338 ) }
    apic_15 { pt3dadd( 434.085, 133.764, 30.7507, 0.5338 ) }
    apic_15 { pt3dadd( 434.951, 133.079, 30.4805, 0.6864 ) }
    apic_15 { pt3dadd( 435.366, 132.099, 29.484, 0.788 ) }
    apic_15 { pt3dadd( 435.962, 131.18, 28.6734, 0.8644 ) }
    apic_15 { pt3dadd( 436.771, 130.374, 28.5603, 0.788 ) }
    apic_15 { pt3dadd( 437.701, 129.708, 28.56, 0.7626 ) }
    apic_15 { pt3dadd( 438.643, 129.057, 28.56, 0.7372 ) }
    apic_15 { pt3dadd( 439.655, 128.524, 28.56, 0.7626 ) }
    apic_15 { pt3dadd( 440.705, 128.072, 28.56, 0.7626 ) }
    apic_15 { pt3dadd( 441.802, 127.753, 28.56, 0.7118 ) }
    apic_15 { pt3dadd( 442.526, 126.867, 28.56, 0.661 ) }
    apic_15 { pt3dadd( 443.128, 125.896, 28.56, 0.5848 ) }
    apic_15 { pt3dadd( 443.93, 125.08, 28.5606, 0.5592 ) }
    apic_15 { pt3dadd( 444.868, 124.426, 28.562, 0.5084 ) }
    apic_15 { pt3dadd( 445.748, 123.695, 28.569, 0.5084 ) }
    apic_15 { pt3dadd( 446.681, 123.035, 28.6031, 0.5084 ) }
    apic_15 { pt3dadd( 447.742, 122.618, 28.7804, 0.5592 ) }
    apic_15 { pt3dadd( 448.739, 122.099, 29.2452, 0.5338 ) }
    apic_15 { pt3dadd( 449.698, 121.525, 28.6698, 0.483 ) }
    apic_15 { pt3dadd( 450.612, 120.842, 28.6079, 0.3814 ) }
    apic_15 { pt3dadd( 451.309, 119.952, 28.7554, 0.356 ) }
    apic_15 { pt3dadd( 451.557, 118.85, 28.3774, 0.4068 ) }
    apic_15 { pt3dadd( 452.008, 117.866, 27.5716, 0.483 ) }
    apic_15 { pt3dadd( 452.78, 117.024, 27.4747, 0.5338 ) }
    apic_15 { pt3dadd( 453.547, 116.179, 27.5968, 0.5084 ) }
    apic_15 { pt3dadd( 454.175, 115.242, 28.0134, 0.5084 ) }
    apic_15 { pt3dadd( 454.621, 114.209, 28.3105, 0.5338 ) }
    apic_15 { pt3dadd( 455.098, 113.206, 27.6926, 0.6356 ) }
    apic_15 { pt3dadd( 455.369, 112.158, 26.8724, 0.6864 ) }
    apic_15 { pt3dadd( 455.741, 111.23, 25.5844, 0.7372 ) }
    apic_15 { pt3dadd( 456.03, 110.141, 25.1992, 0.7372 ) }
    apic_15 { pt3dadd( 456.26, 109.032, 25.193, 0.7372 ) }
    apic_15 { pt3dadd( 456.787, 108.016, 25.1742, 0.7118 ) }
    apic_15 { pt3dadd( 457.277, 106.985, 25.0513, 0.661 ) }
    apic_15 { pt3dadd( 457.358, 105.886, 24.3981, 0.661 ) }
    apic_15 { pt3dadd( 457.312, 104.749, 24.1702, 0.6102 ) }
    apic_15 { pt3dadd( 457.276, 103.621, 24.5865, 0.5848 ) }
    apic_15 { pt3dadd( 457.273, 102.497, 25.1101, 0.5592 ) }
    apic_15 { pt3dadd( 457.777, 101.551, 24.1506, 0.6102 ) }
    apic_15 { pt3dadd( 458.466, 100.645, 24.0811, 0.6102 ) }
    apic_15 { pt3dadd( 458.751, 99.543, 24.0834, 0.6102 ) }
    apic_15 { pt3dadd( 458.87, 98.4056, 24.1027, 0.5592 ) }
    apic_15 { pt3dadd( 459.308, 97.3529, 24.2152, 0.6102 ) }
    apic_15 { pt3dadd( 459.836, 96.3655, 24.7792, 0.6102 ) }
    apic_15 { pt3dadd( 460.506, 95.4425, 24.6151, 0.661 ) }
    apic_15 { pt3dadd( 461.328, 94.676, 24.1016, 0.6356 ) }
    apic_15 { pt3dadd( 461.939, 93.7102, 24.0786, 0.6102 ) }
    apic_15 { pt3dadd( 462.251, 92.6103, 24.0699, 0.5592 ) }
    apic_15 { pt3dadd( 462.216, 91.4716, 24.012, 0.5592 ) }
    apic_15 { pt3dadd( 461.555, 90.5804, 23.8, 0.5592 ) }
    apic_15 { pt3dadd( 461.261, 89.5457, 23.8, 0.5592 ) }
    apic_15 { pt3dadd( 461.261, 88.4018, 23.8146, 0.5084 ) }
    apic_15 { pt3dadd( 461.247, 87.2711, 24.1262, 0.483 ) }
    apic_15 { pt3dadd( 460.926, 86.1946, 24.36, 0.4068 ) }
    apic_15 { pt3dadd( 461.105, 85.0885, 24.3426, 0.3304 ) }
    apic_15 { pt3dadd( 461.621, 84.126, 23.8311, 0.2542 ) }
    apic_15 { pt3dadd( 462.487, 83.3887, 23.7784, 0.2288 ) }
    apic_15 { pt3dadd( 463.473, 82.8838, 23.2876, 0.2288 ) }
    apic_15 { pt3dadd( 464.285, 82.0831, 23.24, 0.2288 ) }
    apic_15 { pt3dadd( 464.983, 81.179, 23.24, 0.2288 ) }
    apic_15 { pt3dadd( 465.911, 80.5463, 23.24, 0.2288 ) }
    apic_15 { pt3dadd( 466.568, 79.6683, 23.0073, 0.2288 ) }
    apic_15 { pt3dadd( 467.105, 78.6629, 22.96, 0.2288 ) }
    apic_15 { pt3dadd( 467.467, 77.5873, 22.96, 0.2288 ) }
    apic_15 { pt3dadd( 467.513, 76.4555, 22.7231, 0.2288 ) }
    apic_15 { pt3dadd( 467.577, 75.3419, 22.4, 0.2542 ) }
    apic_15 { pt3dadd( 467.901, 74.2939, 22.8752, 0.3304 ) }
    apic_15 { pt3dadd( 468.021, 73.2042, 23.56, 0.4068 ) }
    apic_15 { pt3dadd( 468.349, 72.1686, 24.2603, 0.4322 ) }
    apic_15 { pt3dadd( 468.707, 71.113, 24.1371, 0.356 ) }
    apic_15 { pt3dadd( 468.85, 70.0142, 24.08, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_15 { pt3dadd( 468.354, 69.0976, 24.08, 0.4576 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 1/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 321.698, 311.492, 25.5878, 0.7372 ) }
    apic_6 { pt3dadd( 320.351, 310.951, 24.9651, 0.7118 ) }
    apic_6 { pt3dadd( 319.358, 310.455, 24.3194, 0.6864 ) }
    apic_6 { pt3dadd( 318.303, 310.024, 24.127, 0.6102 ) }
    apic_6 { pt3dadd( 317.258, 309.574, 24.3359, 0.5848 ) }
    apic_6 { pt3dadd( 316.201, 309.217, 24.7237, 0.6102 ) }
    apic_6 { pt3dadd( 315.09, 309.041, 24.6842, 0.661 ) }
    apic_6 { pt3dadd( 314.067, 308.589, 24.9813, 0.661 ) }
    apic_6 { pt3dadd( 313.099, 308.03, 24.4454, 0.6102 ) }
    apic_6 { pt3dadd( 312.161, 307.411, 24.1713, 0.5592 ) }
    apic_6 { pt3dadd( 311.149, 306.928, 24.5538, 0.5338 ) }
    apic_6 { pt3dadd( 310.194, 306.369, 25.1661, 0.5848 ) }
    apic_6 { pt3dadd( 309.147, 305.918, 25.3221, 0.661 ) }
    apic_6 { pt3dadd( 308.11, 305.479, 25.7242, 0.7372 ) }
    apic_6 { pt3dadd( 307.133, 304.945, 26.3012, 0.7118 ) }
    apic_6 { pt3dadd( 306.036, 304.694, 26.5143, 0.661 ) }
    apic_6 { pt3dadd( 304.931, 304.712, 27.1578, 0.5848 ) }
    apic_6 { pt3dadd( 303.843, 305.009, 27.3815, 0.5848 ) }
    apic_6 { pt3dadd( 302.78, 305.418, 27.1746, 0.5592 ) }
    apic_6 { pt3dadd( 301.69, 305.628, 27.6651, 0.5592 ) }
    apic_6 { pt3dadd( 300.738, 306.014, 28.828, 0.5338 ) }
    apic_6 { pt3dadd( 299.892, 306.738, 29.2096, 0.5592 ) }
    apic_6 { pt3dadd( 299.047, 307.352, 28.1781, 0.5592 ) }
    apic_6 { pt3dadd( 298.062, 307.86, 27.531, 0.5592 ) }
    apic_6 { pt3dadd( 297.033, 308.35, 27.5069, 0.5338 ) }
    apic_6 { pt3dadd( 295.966, 308.731, 27.8709, 0.5848 ) }
    apic_6 { pt3dadd( 294.872, 308.946, 28.4827, 0.6356 ) }
    apic_6 { pt3dadd( 293.739, 308.84, 28.5578, 0.6356 ) }
    apic_6 { pt3dadd( 292.68, 308.414, 28.5536, 0.5592 ) }
    apic_6 { pt3dadd( 291.559, 308.196, 28.5188, 0.483 ) }
    apic_6 { pt3dadd( 290.487, 307.811, 28.266, 0.5084 ) }
    apic_6 { pt3dadd( 289.59, 307.441, 26.8106, 0.5592 ) }
    apic_6 { pt3dadd( 288.486, 307.353, 26.1363, 0.5848 ) }
    apic_6 { pt3dadd( 287.397, 307.123, 25.492, 0.5084 ) }
    apic_6 { pt3dadd( 286.31, 307.135, 26.3469, 0.4068 ) }
    apic_6 { pt3dadd( 285.287, 307.166, 26.9536, 0.3304 ) }
    apic_6 { pt3dadd( 284.367, 306.65, 25.9386, 0.3304 ) }
    apic_6 { pt3dadd( 283.5, 306.689, 24.2357, 0.356 ) }
    apic_6 { pt3dadd( 282.523, 306.455, 23.3878, 0.356 ) }
    apic_6 { pt3dadd( 281.624, 306.156, 24.5997, 0.305 ) }
    apic_6 { pt3dadd( 281.207, 305.53, 26.5969, 0.305 ) }
    apic_6 { pt3dadd( 280.504, 304.726, 26.3522, 0.356 ) }
    apic_6 { pt3dadd( 279.416, 304.43, 26.1962, 0.4322 ) }
    apic_6 { pt3dadd( 278.388, 304.046, 26.9699, 0.4322 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 45/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 321.698, 311.492, 25.5878, 0.7372 ) }
    apic_5 { pt3dadd( 321.932, 310.046, 23.3554, 0.4068 ) }
    apic_5 { pt3dadd( 322.345, 309.022, 22.9583, 0.4576 ) }
    apic_5 { pt3dadd( 322.095, 307.981, 22.8903, 0.5338 ) }
    apic_5 { pt3dadd( 321.359, 307.141, 22.4879, 0.6102 ) }
    apic_5 { pt3dadd( 320.726, 306.209, 22.0956, 0.661 ) }
    apic_5 { pt3dadd( 320.042, 305.359, 22.7592, 0.7118 ) }
    apic_5 { pt3dadd( 319.53, 304.425, 23.7513, 0.7372 ) }
    apic_5 { pt3dadd( 318.903, 303.487, 24.0517, 0.7372 ) }
    apic_5 { pt3dadd( 318.128, 302.647, 24.0682, 0.661 ) }
    apic_5 { pt3dadd( 317.105, 302.165, 24.0047, 0.5592 ) }
    apic_5 { pt3dadd( 316.104, 301.634, 23.6508, 0.5084 ) }
    apic_5 { pt3dadd( 315.013, 301.387, 23.1577, 0.5338 ) }
    apic_5 { pt3dadd( 314.029, 300.904, 23.7894, 0.661 ) }
    apic_5 { pt3dadd( 313.193, 300.134, 23.8252, 0.7372 ) }
    apic_5 { pt3dadd( 312.58, 299.194, 23.3349, 0.788 ) }
    apic_5 { pt3dadd( 312.002, 298.23, 23.3979, 0.7118 ) }
    apic_5 { pt3dadd( 311.56, 297.187, 23.52, 0.6356 ) }
    apic_5 { pt3dadd( 311.071, 296.155, 23.52, 0.5848 ) }
    apic_5 { pt3dadd( 310.678, 295.082, 23.52, 0.5848 ) }
    apic_5 { pt3dadd( 310.068, 294.126, 23.52, 0.661 ) }
    apic_5 { pt3dadd( 309.104, 293.581, 23.52, 0.6356 ) }
    apic_5 { pt3dadd( 308.08, 293.12, 23.52, 0.5592 ) }
    apic_5 { pt3dadd( 307.117, 293.403, 24.08, 0.3814 ) }
    apic_5 { pt3dadd( 306.448, 294.245, 24.08, 0.3304 ) }
    apic_5 { pt3dadd( 305.647, 295.0, 24.0125, 0.356 ) }
    apic_5 { pt3dadd( 304.529, 295.03, 23.5516, 0.483 ) }
    apic_5 { pt3dadd( 303.964, 294.191, 23.1843, 0.5084 ) }
    apic_5 { pt3dadd( 303.485, 293.174, 22.9093, 0.483 ) }
    apic_5 { pt3dadd( 302.797, 292.452, 22.68, 0.356 ) }
    apic_5 { pt3dadd( 301.677, 292.526, 22.5322, 0.2796 ) }
    apic_5 { pt3dadd( 300.647, 292.856, 21.691, 0.2288 ) }
    apic_5 { pt3dadd( 299.743, 293.351, 20.6032, 0.2542 ) }
    apic_5 { pt3dadd( 298.95, 294.066, 19.6792, 0.2796 ) }
    apic_5 { pt3dadd( 298.02, 294.724, 19.6, 0.3304 ) }
    apic_5 { pt3dadd( 297.049, 295.316, 19.6, 0.3814 ) }
    apic_5 { pt3dadd( 295.943, 295.482, 19.9452, 0.4576 ) }
    apic_5 { pt3dadd( 294.873, 295.211, 20.44, 0.5338 ) }
    apic_5 { pt3dadd( 293.824, 294.768, 20.44, 0.5848 ) }
    apic_5 { pt3dadd( 292.713, 294.518, 20.44, 0.6102 ) }
    apic_5 { pt3dadd( 291.66, 294.149, 19.9175, 0.5848 ) }
    apic_5 { pt3dadd( 290.622, 293.894, 19.6, 0.5084 ) }
    apic_5 { pt3dadd( 289.679, 294.478, 19.6, 0.4576 ) }
    apic_5 { pt3dadd( 288.599, 294.768, 19.9573, 0.4068 ) }
    apic_5 { pt3dadd( 287.469, 294.809, 20.1676, 0.4576 ) }
    apic_5 { pt3dadd( 286.334, 294.809, 20.44, 0.483 ) }
    apic_5 { pt3dadd( 285.367, 294.357, 20.44, 0.5592 ) }
    apic_5 { pt3dadd( 284.365, 294.008, 20.19, 0.5338 ) }
    apic_5 { pt3dadd( 283.268, 294.168, 19.6302, 0.4576 ) }
    apic_5 { pt3dadd( 282.415, 294.921, 19.6, 0.3304 ) }
    apic_5 { pt3dadd( 281.845, 295.913, 19.6, 0.2796 ) }
    apic_5 { pt3dadd( 280.791, 296.278, 19.6, 0.3304 ) }
    apic_5 { pt3dadd( 279.699, 296.035, 19.6, 0.4322 ) }
    apic_5 { pt3dadd( 278.622, 295.754, 19.6, 0.5592 ) }
    apic_5 { pt3dadd( 277.579, 295.495, 19.6, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_5 { pt3dadd( 276.541, 295.066, 19.4197, 0.6356 ) }
    apic_5 { pt3dadd( 275.455, 294.861, 19.32, 0.5338 ) }
    apic_5 { pt3dadd( 274.768, 293.963, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 273.712, 293.588, 19.3701, 0.3814 ) }
    apic_5 { pt3dadd( 272.731, 293.097, 19.6, 0.4322 ) }
    apic_5 { pt3dadd( 271.594, 293.017, 19.6, 0.4576 ) }
    apic_5 { pt3dadd( 270.454, 292.984, 19.5614, 0.5084 ) }
    apic_5 { pt3dadd( 269.412, 293.322, 19.32, 0.5084 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_440, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_440 = new SectionList()
    soma_0 ModelViewParmSubset_440.append()
    axon_0 ModelViewParmSubset_440.append()
    axon_1 ModelViewParmSubset_440.append()

    // Group: {name=ModelViewParmSubset_441, groups=[], sections=[dend_34, dend_33, dend_28, dend_20, dend_13, dend_0, apic_0, dend_43, dend_35, dend_32, dend_29, dend_27, dend_21, dend_15, dend_14, dend_8, dend_1, apic_18, apic_1, dend_45, dend_44, dend_40, dend_36, dend_31, dend_30, dend_26, dend_25, dend_22, dend_17, dend_16, dend_12, dend_9, dend_7, dend_2, apic_20, apic_19, apic_9, apic_2, dend_42, dend_41, dend_39, dend_38, dend_37, dend_24, dend_23, dend_19, dend_18, dend_11, dend_10, dend_4, dend_3, apic_24, apic_23, apic_22, apic_21, apic_13, apic_10, apic_8, apic_3, dend_6, dend_5, apic_17, apic_14, apic_12, apic_11, apic_7, apic_4, apic_16, apic_15, apic_6, apic_5]}
    ModelViewParmSubset_441 = new SectionList()
    dend_34 ModelViewParmSubset_441.append()
    dend_33 ModelViewParmSubset_441.append()
    dend_28 ModelViewParmSubset_441.append()
    dend_20 ModelViewParmSubset_441.append()
    dend_13 ModelViewParmSubset_441.append()
    dend_0 ModelViewParmSubset_441.append()
    apic_0 ModelViewParmSubset_441.append()
    dend_43 ModelViewParmSubset_441.append()
    dend_35 ModelViewParmSubset_441.append()
    dend_32 ModelViewParmSubset_441.append()
    dend_29 ModelViewParmSubset_441.append()
    dend_27 ModelViewParmSubset_441.append()
    dend_21 ModelViewParmSubset_441.append()
    dend_15 ModelViewParmSubset_441.append()
    dend_14 ModelViewParmSubset_441.append()
    dend_8 ModelViewParmSubset_441.append()
    dend_1 ModelViewParmSubset_441.append()
    apic_18 ModelViewParmSubset_441.append()
    apic_1 ModelViewParmSubset_441.append()
    dend_45 ModelViewParmSubset_441.append()
    dend_44 ModelViewParmSubset_441.append()
    dend_40 ModelViewParmSubset_441.append()
    dend_36 ModelViewParmSubset_441.append()
    dend_31 ModelViewParmSubset_441.append()
    dend_30 ModelViewParmSubset_441.append()
    dend_26 ModelViewParmSubset_441.append()
    dend_25 ModelViewParmSubset_441.append()
    dend_22 ModelViewParmSubset_441.append()
    dend_17 ModelViewParmSubset_441.append()
    dend_16 ModelViewParmSubset_441.append()
    dend_12 ModelViewParmSubset_441.append()
    dend_9 ModelViewParmSubset_441.append()
    dend_7 ModelViewParmSubset_441.append()
    dend_2 ModelViewParmSubset_441.append()
    apic_20 ModelViewParmSubset_441.append()
    apic_19 ModelViewParmSubset_441.append()
    apic_9 ModelViewParmSubset_441.append()
    apic_2 ModelViewParmSubset_441.append()
    dend_42 ModelViewParmSubset_441.append()
    dend_41 ModelViewParmSubset_441.append()
    dend_39 ModelViewParmSubset_441.append()
    dend_38 ModelViewParmSubset_441.append()
    dend_37 ModelViewParmSubset_441.append()
    dend_24 ModelViewParmSubset_441.append()
    dend_23 ModelViewParmSubset_441.append()
    dend_19 ModelViewParmSubset_441.append()
    dend_18 ModelViewParmSubset_441.append()
    dend_11 ModelViewParmSubset_441.append()
    dend_10 ModelViewParmSubset_441.append()
    dend_4 ModelViewParmSubset_441.append()
    dend_3 ModelViewParmSubset_441.append()
    apic_24 ModelViewParmSubset_441.append()
    apic_23 ModelViewParmSubset_441.append()
    apic_22 ModelViewParmSubset_441.append()
    apic_21 ModelViewParmSubset_441.append()
    apic_13 ModelViewParmSubset_441.append()
    apic_10 ModelViewParmSubset_441.append()
    apic_8 ModelViewParmSubset_441.append()
    apic_3 ModelViewParmSubset_441.append()
    dend_6 ModelViewParmSubset_441.append()
    dend_5 ModelViewParmSubset_441.append()
    apic_17 ModelViewParmSubset_441.append()
    apic_14 ModelViewParmSubset_441.append()
    apic_12 ModelViewParmSubset_441.append()
    apic_11 ModelViewParmSubset_441.append()
    apic_7 ModelViewParmSubset_441.append()
    apic_4 ModelViewParmSubset_441.append()
    apic_16 ModelViewParmSubset_441.append()
    apic_15 ModelViewParmSubset_441.append()
    apic_6 ModelViewParmSubset_441.append()
    apic_5 ModelViewParmSubset_441.append()

    // Group: {name=dend, groups=[], sections=[dend_34, dend_33, dend_28, dend_20, dend_13, dend_0, dend_43, dend_35, dend_32, dend_29, dend_27, dend_21, dend_15, dend_14, dend_8, dend_1, dend_45, dend_44, dend_40, dend_36, dend_31, dend_30, dend_26, dend_25, dend_22, dend_17, dend_16, dend_12, dend_9, dend_7, dend_2, dend_42, dend_41, dend_39, dend_38, dend_37, dend_24, dend_23, dend_19, dend_18, dend_11, dend_10, dend_4, dend_3, dend_6, dend_5]}
    dend = new SectionList()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_20 dend.append()
    dend_13 dend.append()
    dend_0 dend.append()
    dend_43 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_40 dend.append()
    dend_36 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_9, apic_2, apic_24, apic_23, apic_22, apic_21, apic_13, apic_10, apic_8, apic_3, apic_17, apic_14, apic_12, apic_11, apic_7, apic_4, apic_16, apic_15, apic_6, apic_5]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_18 apic.append()
    apic_1 apic.append()
    apic_20 apic.append()
    apic_19 apic.append()
    apic_9 apic.append()
    apic_2 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_13 apic.append()
    apic_10 apic.append()
    apic_8 apic.append()
    apic_3 apic.append()
    apic_17 apic.append()
    apic_14 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()
    apic_7 apic.append()
    apic_4 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_20889, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_20889 = new SectionList()
    soma_0 OneSecGrp_SectionRef_20889.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.73  // units: uF/cm2
    forsec dend cm = 2.73  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 121.95  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 0.0  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.0982495  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.5910537E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.1212604  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.39592105  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.020172771  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.00634387  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.8329412E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.0066409E-4  // units: S cm-2
        e_pas_nml2 = -96.20659  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.9499384E-4  // units: S cm-2
        e_pas_nml2 = -96.20659  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.406278E-7  // units: S cm-2
        e_pas_nml2 = -96.20659  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.1653258E-6  // units: S cm-2
        e_pas_nml2 = -96.20659  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.0691092E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 3.4458964E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_27 nseg = 5
    dend_14 nseg = 5
    dend_45 nseg = 3
    dend_44 nseg = 5
    dend_40 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_26 nseg = 3
    dend_25 nseg = 5
    dend_16 nseg = 5
    dend_12 nseg = 3
    dend_7 nseg = 3
    apic_19 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 5
    apic_24 nseg = 3
    apic_23 nseg = 5
    apic_22 nseg = 5
    apic_21 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 3
    apic_14 nseg = 9
    apic_12 nseg = 3
    apic_11 nseg = 5
    apic_16 nseg = 7
    apic_15 nseg = 5
    apic_6 nseg = 3
    apic_5 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473872986


