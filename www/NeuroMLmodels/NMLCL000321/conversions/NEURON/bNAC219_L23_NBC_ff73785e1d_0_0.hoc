// Cell: bNAC219_L23_NBC_ff73785e1d_0_0
/*
{
  "id" : "bNAC219_L23_NBC_ff73785e1d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33004, 6.9136, -1.72338, 3.35756", "-1.30767, 6.0419, -1.50091, 5.92196", "-1.2853, 5.17019, -1.27844, 10.136", "-1.26293, 4.29848, -1.05596, 12.0381", "-1.24056, 3.42677, -0.833493, 14.7633", "-1.21819, 2.55506, -0.61102, 15.4638", "-1.19582, 1.68335, -0.388548, 15.4684", "-1.17345, 0.811646, -0.166076, 15.4327", "-1.15108, -0.0600623, 0.0563968, 14.9176", "-1.12871, -0.931771, 0.278869, 14.1939", "-1.10634, -1.80348, 0.501341, 13.4702", "-1.08397, -2.67519, 0.723814, 12.7466", "-1.0616, -3.5469, 0.946286, 12.3598", "-1.03923, -4.4186, 1.16876, 12.0665", "-1.01686, -5.29031, 1.39123, 11.6276", "-0.994493, -6.16202, 1.6137, 11.1336", "-0.972123, -7.03373, 1.83618, 10.6396", "-0.949754, -7.90544, 2.05865, 9.89654", "-0.927384, -8.77715, 2.28112, 8.0678", "-0.905015, -9.64885, 2.50359, 6.12489", "-0.882645, -10.5206, 2.72606, 3.55851" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.38069, 1.59658, -14.2729, 1.39", "-6.31768, 1.34167, -14.9344, 1.39", "-6.20235, 0.87502, -16.1453, 1.11", "-6.08991, 0.420104, -17.3257, 1.11", "-5.64489, -1.38046, -21.9979, 1.11", "-5.46736, -2.09875, -23.8618, 1.11", "-5.36393, -2.51724, -24.9478, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.84069, 6.05233, -3.83293, 1.11", "-9.20686, 8.00468, -4.33222, 0.83", "-11.32, 9.31856, -4.36647, 0.83", "-13.0273, 10.5499, -4.52839, 0.83", "-16.7038, 13.4483, -5.04274, 0.83", "-19.5213, 15.6857, -5.50067, 0.83", "-21.9676, 17.5479, -5.92584, 0.83", "-24.7687, 19.3223, -6.20737, 0.83", "-28.7828, 21.6344, -6.72299, 0.83", "-30.0961, 22.3787, -6.94189, 0.56", "-31.2028, 23.0192, -7.25431, 0.83", "-32.608, 23.7496, -7.74039, 0.83", "-34.4936, 24.5293, -8.46159, 0.83", "-36.8536, 25.2206, -9.00149, 0.28", "-38.9349, 26.0116, -9.33949, 0.83", "-42.096, 27.3876, -9.9805, 0.56", "-43.2423, 27.9768, -10.2618, 0.56", "-45.7872, 29.328, -10.9799, 0.56", "-50.6349, 31.8739, -12.5432, 0.56", "-55.3993, 34.2458, -14.2753, 0.56", "-59.5948, 36.2024, -15.9685, 0.56", "-62.8862, 37.7235, -17.3506, 0.56", "-65.0394, 38.6335, -18.3556, 0.56", "-67.1819, 39.4515, -19.4643, 0.56", "-69.2134, 40.1626, -20.6913, 0.56", "-71.083, 40.6832, -21.7923, 0.56", "-72.2031, 41.0096, -22.4851, 0.56", "-74.8621, 41.8041, -24.2105, 0.56", "-77.6254, 42.7291, -26.0251, 0.56", "-80.1254, 43.6324, -27.7612, 0.56", "-81.757, 44.2358, -28.9477, 0.56", "-83.3397, 44.8445, -30.1136, 0.28", "-85.7687, 45.7615, -31.9337, 0.56", "-87.0664, 46.2361, -32.8763, 0.56", "-88.7654, 46.8021, -34.079, 0.56", "-90.9796, 47.5526, -35.5537, 0.28", "-92.6074, 48.1384, -36.5719, 0.28", "-94.3314, 48.8432, -37.5726, 0.56", "-96.1336, 49.6769, -38.6202, 0.56", "-98.1314, 50.7314, -39.7638, 0.28", "-98.8886, 51.144, -40.1732, 0.56", "-100.848, 52.2895, -41.2507, 0.28", "-101.584, 52.7211, -41.6639, 0.83", "-104.561, 54.5018, -43.2773, 0.28", "-107.092, 56.1995, -44.7534, 0.28", "-108.606, 57.2397, -45.6282, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.16931, 5.51607, 2.45707, 5.56", "1.48952, 6.80274, 2.45707, 5.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.99931, 4.80433, -11.5829, 1.39", "3.45981, 5.74313, -12.5539, 1.11", "4.47369, 8.61622, -15.8749, 1.11", "4.87212, 10.4712, -18.9768, 1.11", "4.9985, 11.728, -22.3455, 1.11", "5.08776, 12.6007, -25.4596, 1.11", "5.23283, 13.2444, -27.9526, 1.11", "5.41398, 13.8056, -31.8856, 1.11", "5.5862, 13.8978, -38.3541, 1.11", "5.48612, 13.4808, -43.4284, 0.83", "5.42661, 13.2349, -45.1253, 0.83", "5.33181, 12.7156, -48.4526, 0.83", "5.28549, 12.0607, -52.1034, 0.83", "5.29429, 11.689, -54.9349, 0.83", "5.36437, 11.022, -61.3042, 0.83", "5.4118, 10.4318, -67.0821, 0.83", "5.36647, 10.0088, -70.7816, 0.83", "5.33419, 9.6769, -73.4831, 0.83", "5.36573, 8.4827, -85.109, 0.56", "5.43141, 8.20074, -88.271, 0.56", "5.53436, 7.98375, -90.8292, 1.39", "5.88548, 7.26084, -98.6619, 0.56", "6.08279, 6.87352, -101.921, 0.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.60931, 3.29307, -6.83293, 2.78", "7.10277, 4.05355, -7.36034, 2.78", "7.90774, 5.29413, -8.2207, 2.22", "8.96345, 6.92113, -9.34904, 3.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.46931, -9.96692, 3.82707, 1.94", "2.95052, -12.1857, 3.77922, 1.39", "3.36289, -14.0871, 3.73823, 2.22", "3.76741, -15.9523, 3.69801, 2.5", "4.68973, -20.2049, 3.60631, 1.39", "5.04754, -21.8547, 3.57073, 1.39", "6.0121, -26.3022, 3.47483, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.07069, -9.85968, -1.42293, 2.78", "-5.79996, -10.9942, -2.07801, 2.22", "-6.80251, -12.554, -2.97857, 2.22", "-8.12318, -14.6086, -4.16488, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.882645, -10.5206, 2.72606, 0.644148", "-0.497843, -25.5157, 2.72606, 0.644148", "-0.11304, -40.5107, 2.72606, 0.644148" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.36393, -2.51724, -24.9478, 1.11", "-7.07104, -2.45882, -25.1057, 1.11", "-8.89108, -2.46993, -25.9908, 1.11", "-11.5896, -2.4864, -27.3031, 1.11", "-14.7076, -2.50543, -28.8195, 1.11", "-16.2571, -2.51488, -29.5731, 0.83", "-18.9661, -2.53141, -30.8905, 1.11", "-24.7109, -2.91881, -34.3654, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.36393, -2.51724, -24.9478, 0.83", "-5.24702, -6.43517, -25.3169, 0.83", "-5.1061, -8.98251, -25.4574, 0.28", "-5.00175, -10.5114, -25.5105, 0.56", "-4.70418, -14.0163, -25.5995, 0.28", "-4.48003, -16.0864, -25.661, 0.56", "-4.17055, -18.4681, -25.7375, 0.28", "-3.60979, -21.9032, -25.82, 0.83", "-2.97377, -25.1665, -25.8655, 0.28", "-2.43721, -27.6543, -25.9093, 0.83", "-1.83809, -30.0188, -25.9619, 0.28", "-1.36005, -31.6911, -26.0554, 0.83", "-0.870396, -33.2158, -26.1026, 0.83", "-0.047377, -35.6283, -26.1415, 0.28", "0.217572, -36.4822, -26.144, 0.83", "1.32236, -40.5714, -26.115, 0.28", "1.44393, -41.1565, -26.1124, 0.56", "1.86043, -44.149, -26.1256, 0.28", "2.0043, -45.7642, -26.1437, 0.83", "2.17586, -51.122, -26.4387, 0.28", "2.11683, -52.9956, -26.598, 0.56", "1.62146, -56.8529, -26.9938, 0.28", "0.963339, -60.0971, -27.3719, 0.28", "0.673975, -61.2434, -27.5377, 0.83", "-0.246578, -64.3229, -27.9871, 0.28", "-0.92442, -66.0638, -28.2837, 0.56", "-2.27148, -68.9079, -28.7978, 0.28", "-3.35259, -70.697, -29.1271, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.48952, 6.80274, 2.45707, 0.56", "-2.84062, 9.8018, -0.551158, 0.56", "-4.88377, 11.3735, -1.71195, 0.56", "-6.98397, 13.0055, -2.62174, 0.56", "-8.71993, 14.4093, -3.19607, 0.83", "-10.6306, 16.0755, -3.79106, 0.56", "-11.3974, 16.8212, -4.03277, 0.83", "-13.7826, 19.638, -4.60727, 0.56", "-15.6316, 22.2981, -4.94071, 0.56", "-16.7194, 23.9843, -5.11922, 0.56", "-18.3995, 26.5789, -5.34024, 0.56", "-19.9859, 28.9428, -5.63528, 0.56", "-21.4553, 30.9299, -6.02082, 0.56", "-22.9065, 32.6893, -6.5702, 0.56", "-24.773, 34.6195, -7.31562, 0.56", "-25.8652, 35.596, -7.73829, 0.83", "-27.4974, 36.7406, -8.27251, 0.56", "-29.5262, 37.7604, -8.93311, 0.83", "-31.8746, 38.5628, -9.78137, 0.28", "-33.8774, 38.9595, -10.5885, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.48952, 6.80274, 2.45707, 5.56", "1.44229, 7.04868, 3.1997, 5.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.96345, 6.92113, -9.34904, 0.83", "13.6784, 7.694, -16.9178, 0.83", "15.0757, 7.99846, -19.3694, 0.56", "16.459, 8.29148, -21.8258, 0.56", "18.34, 8.5967, -25.6116, 0.56", "19.8891, 8.86711, -28.9074, 0.56", "21.4652, 9.19927, -32.2415, 0.56", "22.3877, 9.44913, -34.2305, 0.56", "23.0473, 9.6389, -35.6384, 0.83", "26.3861, 10.8008, -42.4067, 0.56", "27.4167, 11.2244, -44.2948, 0.83", "28.4204, 11.6235, -45.9944, 0.56", "29.954, 12.2383, -48.4649, 0.83", "32.4032, 13.2697, -52.3081, 0.56", "34.6618, 14.2278, -55.9055, 0.28", "35.7131, 14.6143, -57.5582, 0.56", "38.3326, 15.3819, -62.2436, 0.28", "39.7141, 15.6237, -64.9557, 1.11", "40.7617, 15.6917, -67.1844, 0.56", "42.3602, 15.5071, -71.1082, 0.56", "43.2095, 15.2798, -73.2512, 0.56", "45.0997, 14.5875, -78.3075, 0.56", "47.8787, 13.372, -85.6615, 0.28", "48.8786, 12.8743, -88.2796, 0.83", "52.3701, 11.1824, -97.2004, 0.28", "52.8353, 10.9531, -98.3731, 0.83", "56.4576, 9.1754, -107.385, 0.28", "57.5241, 8.59066, -109.985, 0.56", "59.2588, 7.589, -114.358, 0.28", "60.7215, 6.85182, -117.744, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "8.96345, 6.92113, -9.34904, 2.5", "11.0133, 7.91929, -11.3811, 2.5", "13.3148, 9.03994, -13.6625, 1.94", "15.8674, 10.2829, -16.1929, 1.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.0121, -26.3022, 3.47483, 0.83", "7.41715, -28.0273, 2.99443, 0.83", "8.44874, -29.2938, 2.64171, 0.83", "10.4977, -31.8095, 1.94113, 0.83", "11.981, -33.6307, 1.43395, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.0121, -26.3022, 3.47483, 0.83", "5.30442, -32.5171, 7.99154, 0.83", "5.16069, -33.7793, 8.90886, 0.83", "4.86758, -36.3533, 10.7796, 1.39", "4.49479, -39.6272, 13.1589, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.12318, -14.6086, -4.16488, 1.11", "-7.94532, -16.1354, -6.32602, 1.11", "-8.13266, -17.3771, -9.14459, 1.11", "-8.59672, -18.1428, -11.5146, 1.11", "-9.02055, -18.8421, -13.6792, 1.11", "-9.34313, -19.3743, -15.3267, 1.11", "-9.83042, -20.1783, -17.8153, 1.11", "-11.1099, -20.7415, -21.0156, 1.11", "-11.9723, -20.7319, -22.4651, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.12318, -14.6086, -4.16488, 1.11", "-7.96247, -18.0944, -5.09339, 1.11", "-7.93087, -21.5146, -6.14268, 1.11", "-7.93131, -25.2921, -7.45078, 1.11", "-7.8976, -26.8455, -8.04595, 1.11", "-7.87146, -28.0501, -8.50748, 1.11", "-7.84923, -29.0743, -8.8999, 1.11", "-7.91201, -30.5844, -9.51312, 1.11", "-8.2138, -33.1762, -10.892, 1.11", "-8.2763, -35.1258, -12.1369, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.11304, -40.5107, 2.72606, 0.56", "0.271762, -55.5058, 2.72606, 0.56", "0.656564, -70.5009, 2.72606, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-24.7109, -2.91881, -34.3654, 0.83", "-26.3115, -1.6124, -34.8206, 0.83", "-27.6316, -0.35075, -35.0471, 0.28", "-28.2662, 0.335836, -35.1526, 0.28", "-28.9518, 1.10319, -35.2663, 0.28", "-30.4099, 2.7187, -35.5792, 1.11", "-31.7625, 4.21929, -35.9481, 0.28", "-33.2483, 5.8929, -36.4225, 0.56", "-34.9088, 7.79358, -37.0927, 0.28", "-35.5773, 8.54039, -37.3925, 0.83", "-37.2305, 10.3083, -38.2416, 0.56", "-38.1623, 11.2425, -38.7469, 0.28", "-39.9189, 12.8783, -39.7937, 0.56", "-41.507, 14.2741, -40.7995, 0.28", "-43.9101, 16.2431, -42.2394, 1.11", "-45.7579, 17.6803, -43.3267, 0.28", "-47.1609, 18.6161, -44.0702, 0.83", "-48.9975, 19.668, -44.9372, 0.28", "-49.9901, 20.1524, -45.3653, 0.56", "-51.7669, 20.862, -46.0607, 0.28", "-53.8064, 21.4907, -46.7806, 0.56", "-57.3461, 22.4236, -47.9692, 0.28", "-59.5466, 22.9664, -48.7138, 0.28", "-60.4081, 23.1903, -49.0072, 0.56", "-61.9123, 23.6035, -49.5436, 0.28", "-64.89, 24.4633, -50.6562, 0.56", "-67.6851, 25.3252, -51.675, 0.28", "-68.3827, 25.5768, -51.9405, 0.56", "-71.2748, 26.6643, -53.0272, 0.56", "-72.1137, 26.9963, -53.3409, 0.28", "-75.1211, 28.2625, -54.4197, 0.28", "-77.2786, 29.2224, -55.2029, 0.83", "-79.2011, 30.0546, -55.7982, 0.28", "-80.0367, 30.4067, -56.0486, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-24.7109, -2.91881, -34.3654, 0.56", "-25.6956, -1.95501, -35.7603, 0.56", "-26.0429, -1.60152, -36.2769, 0.56", "-27.7186, 0.354936, -39.8738, 0.28", "-28.7859, 1.50355, -42.9702, 0.83", "-31.1487, 3.86371, -50.2931, 0.28", "-31.5221, 4.21865, -51.4728, 0.28", "-31.8051, 4.44949, -52.4403, 0.83", "-33.5821, 5.75058, -58.8849, 0.83", "-35.752, 6.93029, -66.2932, 0.28", "-36.0938, 7.09841, -67.3246, 0.28", "-36.242, 7.15194, -67.6544, 0.83", "-37.8762, 7.63968, -70.5521, 0.28", "-38.5039, 7.79578, -71.5244, 1.11", "-43.8069, 9.00779, -78.5911, 0.28", "-45.7494, 9.41755, -81.0207, 1.39", "-51.4814, 10.4894, -88.0416, 0.28", "-53.9897, 10.8766, -91.1287, 1.11", "-58.3059, 11.3645, -96.3255, 0.28", "-59.0276, 11.4365, -97.2185, 0.56", "-61.2223, 11.6589, -99.9103, 0.28", "-63.8366, 12.0879, -103.203, 0.56", "-65.7899, 12.682, -105.554, 0.28", "-66.7156, 13.0531, -106.756, 0.83", "-70.0465, 14.8534, -110.889, 0.28", "-71.07, 15.5365, -112.248, 0.83", "-72.4048, 16.8172, -114.129, 0.28", "-74.1276, 19.1026, -116.456, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.44229, 7.04868, 3.1997, 0.56", "-0.209363, 10.5741, 2.14994, 0.56", "-1.62057, 13.6487, 1.50987, 0.56", "-2.91461, 16.4296, 1.10463, 0.56", "-3.54607, 17.8377, 0.912675, 0.56", "-4.82652, 20.5945, 0.549211, 0.56", "-6.27789, 23.4896, 0.165228, 0.56", "-6.92404, 24.5502, 0.020287, 0.56", "-8.28854, 26.5398, -0.131692, 0.28", "-9.26871, 27.9457, -0.194048, 0.56", "-10.6653, 29.8437, -0.36495, 0.56", "-11.8578, 31.2789, -0.622932, 0.56", "-14.2549, 34.109, -1.06032, 0.56", "-15.5947, 35.5363, -1.20221, 0.56", "-17.7328, 37.6642, -1.27621, 0.56", "-19.8343, 39.6824, -1.17778, 0.56", "-22.6326, 42.379, -0.933192, 0.56", "-26.7324, 46.2192, -0.445549, 0.56", "-29.0294, 48.3199, -0.111064, 0.56", "-31.1263, 50.1286, 0.151756, 0.56", "-33.483, 52.0128, 0.485612, 0.56", "-35.3984, 53.5899, 0.925944, 0.56", "-37.5844, 55.5198, 1.48041, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.44229, 7.04868, 3.1997, 2.22", "2.2471, 9.11501, 4.05114, 2.22", "2.846, 10.6527, 4.68474, 1.11", "3.62912, 12.6633, 5.51322, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.8674, 10.2829, -16.1929, 0.83", "18.3988, 9.9438, -17.9766, 0.83", "20.8712, 9.744, -19.4745, 0.83", "22.8187, 9.699, -20.5443, 0.83", "28.2825, 9.8738, -23.481, 0.83", "30.9908, 10.0822, -24.9548, 0.83", "37.7047, 10.6962, -28.9628, 0.83", "40.1825, 10.9864, -30.4194, 0.83", "42.3897, 11.2909, -31.6651, 0.83", "44.4874, 11.6207, -32.8041, 0.83", "50.0262, 12.6634, -35.4487, 0.83", "53.9853, 13.4661, -37.6387, 0.83", "56.589, 14.1241, -39.7162, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "15.8674, 10.2829, -16.1929, 1.11", "18.952, 9.5738, -14.5712, 1.11", "20.7985, 9.14931, -13.6005, 1.11", "23.1541, 8.60779, -12.3621, 1.11", "24.4316, 8.31412, -11.6905, 1.11", "25.7119, 8.01978, -11.0174, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.981, -33.6307, 1.43395, 0.83", "13.7945, -36.5464, 3.05413, 0.83", "15.3392, -38.7379, 4.30699, 0.56", "15.8293, -39.4017, 4.63674, 0.56", "17.1989, -41.2568, 5.55826, 0.28", "17.8777, -42.1763, 6.015, 0.83", "18.9974, -43.693, 6.7684, 0.56", "19.8303, -44.742, 7.16889, 0.56", "21.3275, -46.6182, 8.04317, 0.56" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.981, -33.6307, 1.43395, 0.83", "14.0879, -34.7146, 1.7592, 0.83", "17.0793, -36.2137, 2.09925, 0.83", "18.132, -36.7319, 2.17159, 0.83", "19.2447, -37.3303, 2.18066, 1.11", "23.066, -39.3852, 2.21184, 0.83", "25.6358, -40.7671, 2.2328, 0.83", "27.1139, -41.5535, 2.23319, 0.83", "29.4095, -42.7754, 2.18868, 0.83", "32.0235, -44.1135, 2.12652, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.49479, -39.6272, 13.1589, 0.56", "1.46851, -40.6009, 14.0953, 0.56", "-0.0775435, -41.0983, 14.5737, 0.83", "-1.46066, -41.5432, 15.0016, 0.28", "-2.02516, -41.7249, 15.1763, 0.83", "-9.74342, -45.3063, 18.7582, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.49479, -39.6272, 13.1589, 0.56", "6.91135, -39.1357, 12.1609, 0.56", "8.32128, -39.036, 11.5321, 0.56", "11.7048, -38.9383, 9.96854, 0.56", "15.1029, -39.0556, 8.36745, 0.56", "17.7755, -39.1477, 7.10826, 0.56", "22.1158, -39.2975, 5.06324, 0.28", "27.779, -39.7977, 2.35993, 0.28", "30.2554, -40.1086, 1.1435, 0.28", "33.1996, -40.646, -0.39658, 0.28", "43.9621, -39.3913, -3.2495, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.9723, -20.7319, -22.4651, 0.83", "-11.2657, -22.1313, -23.1313, 0.83", "-9.75582, -26.3741, -24.04, 0.28", "-9.53794, -27.1912, -24.0977, 0.56", "-9.19318, -28.6507, -24.0275, 0.56", "-8.88895, -30.1449, -23.889, 0.56", "-8.52556, -31.9297, -23.7236, 0.28", "-8.05551, -34.6225, -23.2468, 0.28", "-7.96651, -35.6161, -22.8885, 0.83", "-7.80705, -38.2829, -21.8742, 0.28", "-7.79901, -38.982, -21.5891, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.9723, -20.7319, -22.4651, 0.83", "-12.3196, -19.5564, -23.0673, 0.83", "-12.9708, -17.6755, -23.9647, 0.28", "-13.3133, -16.7881, -24.3727, 0.28", "-14.092, -14.7225, -25.3805, 0.83", "-15.087, -12.1664, -26.6399, 0.28", "-15.3927, -11.3221, -27.1781, 0.28", "-15.7044, -10.3656, -27.8687, 0.28", "-15.8222, -9.85621, -28.276, 0.56", "-16.0592, -8.43858, -29.4429, 0.28", "-16.1604, -7.7371, -30.0394, 0.56", "-16.5573, -4.35478, -33.0507, 0.56", "-16.7236, -3.03547, -34.1488, 0.83", "-17.0805, -0.759371, -35.9022, 0.28", "-17.4906, 1.14925, -37.2782, 0.56", "-17.7271, 2.01426, -37.8265, 0.28", "-17.9297, 2.64734, -38.1873, 0.56", "-18.6215, 4.32803, -38.9608, 0.28", "-19.1601, 5.4342, -39.5005, 0.56", "-19.679, 6.38822, -39.9667, 0.83", "-20.3401, 7.60126, -40.6152, 0.83", "-21.3654, 9.4963, -41.6638, 0.28", "-21.6465, 10.0191, -41.9565, 0.56", "-21.963, 10.6225, -42.2948, 0.28", "-22.6907, 11.9074, -43.0085, 0.56", "-23.1344, 12.6875, -43.4217, 0.28", "-23.4397, 13.1484, -43.6757, 0.56", "-24.4001, 14.5053, -44.3714, 0.28", "-24.5148, 14.6687, -44.4568, 0.56", "-25.2033, 15.6138, -44.963, 0.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.2763, -35.1258, -12.1369, 0.28", "-10.6709, -38.8154, -10.8067, 0.28", "-12.1846, -41.3302, -9.9337, 0.56", "-13.2687, -43.1949, -9.2906, 0.56", "-14.9314, -46.0952, -8.31612, 0.56", "-17.0651, -50.06, -6.99066, 0.28", "-18.8311, -53.5036, -5.86762, 0.28", "-20.0215, -55.9977, -5.14951, 0.83", "-20.7951, -57.7454, -4.6137, 0.28", "-21.2302, -58.7264, -4.31035, 0.83", "-22.4766, -61.6227, -3.40768, 0.28", "-23.0321, -62.8787, -3.07732, 0.28", "-23.5355, -63.8604, -2.91586, 0.56", "-24.3894, -65.3428, -2.75932, 0.28", "-25.331, -66.9913, -2.80882, 0.56", "-27.2288, -70.3107, -3.20384, 0.28", "-27.955, -71.5755, -3.45794, 0.83", "-30.3569, -75.3268, -4.62955, 0.28", "-31.7132, -77.2723, -5.40172, 0.56", "-34.042, -80.456, -7.0034, 0.28", "-34.4272, -80.9603, -7.29926, 0.83", "-35.4072, -82.2029, -8.13609, 0.83", "-39.7624, -87.4244, -11.8318, 0.28", "-40.5322, -88.2592, -12.4531, 0.56", "-42.366, -89.9801, -13.8252, 0.28", "-42.9354, -90.427, -14.1746, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.2763, -35.1258, -12.1369, 0.56", "-6.26988, -37.2261, -15.5972, 0.56", "-5.16104, -38.4693, -17.1074, 0.56", "-3.80378, -40.1321, -18.6518, 0.56", "-2.86382, -41.4507, -19.6739, 1.11", "-1.32334, -43.8867, -21.3219, 1.11", "-0.15977, -45.9593, -22.7163, 0.56", "0.901543, -48.3544, -23.929, 0.56", "1.60058, -50.1471, -24.75, 0.28", "1.96484, -51.5504, -25.2756, 0.56", "2.12599, -52.3994, -25.6115, 0.28", "2.50996, -54.9589, -26.4862, 0.56", "2.8571, -57.0029, -27.1729, 0.28", "2.9578, -57.6227, -27.3739, 0.83", "3.46434, -60.4373, -28.2293, 0.83", "3.82376, -62.1327, -28.7116, 0.56", "4.57704, -65.2888, -29.5119, 0.56", "5.35606, -68.3897, -30.1591, 1.39", "6.31377, -71.9606, -30.8047, 0.28", "6.45659, -72.5068, -30.8879, 0.83", "6.9799, -74.67, -31.1352, 0.28", "7.37665, -76.6362, -31.2437, 0.28", "7.52869, -77.5291, -31.2644, 0.83", "7.8746, -80.3572, -31.2361, 0.28", "8.05758, -82.0852, -31.2232, 0.28", "8.16327, -83.2583, -31.2786, 0.83", "8.33069, -86.327, -31.5132, 0.28", "8.34252, -87.2188, -31.6119, 0.83", "8.36884, -89.2389, -31.8841, 1.39", "8.32586, -91.4167, -32.1773, 1.39", "8.22078, -96.9252, -32.8631, 0.28", "8.20638, -98.0883, -32.9951, 0.83", "8.10127, -102.345, -33.5015, 0.28", "8.03724, -105.025, -33.748, 0.28", "8.10901, -108.168, -33.8796, 0.83", "8.20634, -110.099, -33.8633, 0.28", "8.33501, -111.713, -33.7939, 0.83", "8.72238, -114.788, -33.5473, 0.28", "9.0523, -116.836, -33.3241, 0.83", "10.2723, -124.166, -32.405, 0.28", "10.4948, -125.414, -32.2404, 0.83", "10.7799, -127.738, -32.0388, 0.83", "11.0492, -132.52, -31.8338, 0.28", "11.0547, -133.079, -31.8557, 0.56", "10.9563, -135.061, -32.1192, 0.28", "10.8454, -136.766, -32.5141, 1.39", "10.6442, -143.563, -34.4447, 0.28", "10.7369, -145.866, -35.2594, 1.11", "11.2293, -150.414, -37.1669, 0.28", "11.418, -151.186, -37.4862, 0.83", "13.443, -156.515, -39.645, 0.28", "13.9638, -157.512, -40.0241, 0.83", "16.1377, -160.655, -40.9449, 0.28", "16.6888, -161.368, -41.1107, 0.56", "20.9768, -166.582, -41.8712, 0.28", "21.5909, -167.316, -41.9388, 0.83", "22.3622, -168.271, -41.9268, 0.83", "24.4751, -171.057, -41.7427, 0.28", "24.7478, -171.442, -41.6902, 0.56", "25.5394, -172.618, -41.4965, 0.28", "25.9718, -173.331, -41.3284, 0.83", "28.1598, -176.981, -40.5283, 0.28", "28.6364, -177.737, -40.3787, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-37.5844, 55.5198, 1.48041, 0.56", "-40.7339, 55.293, 1.72768, 0.56", "-44.7238, 55.0056, 2.04093, 0.56", "-56.0891, 54.6291, 4.17719, 0.56", "-67.5476, 53.0756, 4.26677, 0.56", "-78.6101, 49.7877, 4.11766, 0.56", "-90.0332, 49.0987, 2.41026, 0.56", "-101.248, 48.6705, -0.409039, 0.56", "-112.424, 48.3006, -3.38817, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.5844, 55.5198, 1.48041, 0.56", "-39.4479, 55.0261, 1.83078, 0.56", "-40.3762, 54.7801, 2.0053, 0.56", "-41.2757, 54.5418, 2.17442, 0.56", "-44.0463, 53.8077, 2.69533, 0.56", "-46.1549, 53.249, 3.09177, 0.56", "-50.8742, 51.9985, 3.97905, 0.28", "-57.018, 49.9131, 6.03989, 0.28", "-62.6913, 46.7045, 7.91726, 0.28", "-68.5992, 43.8371, 9.65166, 0.28", "-74.2538, 40.5713, 11.4813, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.62912, 12.6633, 5.51322, 0.56", "0.0343286, 12.6535, 7.33206, 0.56", "-1.84477, 12.9268, 8.05648, 0.56", "-4.12261, 13.4746, 8.83513, 0.56", "-6.39287, 14.0972, 9.48546, 0.83", "-9.8234, 15.0038, 10.2343, 0.56", "-10.8396, 15.3054, 10.4085, 0.83", "-13.9346, 16.5722, 10.4159, 0.28", "-14.644, 17.1166, 10.4281, 0.83", "-15.5787, 18.6443, 10.4801, 0.83", "-16.3506, 20.9103, 10.6314, 0.56", "-16.6592, 22.8614, 10.8439, 0.56", "-16.9955, 26.6205, 11.3139, 0.56", "-17.0425, 33.2585, 12.3109, 0.56", "-16.9024, 36.6145, 12.8767, 0.56", "-16.7576, 37.9915, 13.1394, 0.56", "-16.0904, 42.0163, 14.043, 0.56", "-22.4252, 49.93, 14.927, 0.56", "-28.5645, 58.025, 15.3296, 0.56", "-35.3018, 65.605, 14.359, 0.56", "-40.9964, 73.8331, 12.596, 0.56", "-46.7799, 81.9287, 10.5079, 0.56", "-51.1035, 90.6753, 7.75924, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "3.62912, 12.6633, 5.51322, 0.56", "6.9661, 12.8483, 5.96094, 0.56", "9.6191, 13.1117, 6.49683, 0.56", "14.0229, 13.5489, 7.38637, 0.56", "17.68, 13.912, 8.12509, 0.56", "19.9813, 14.1405, 8.58993, 0.56", "22.8769, 14.428, 9.17484, 0.56", "25.187, 14.625, 9.89065, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "56.589, 14.1241, -39.7162, 0.56", "59.5252, 15.927, -41.5994, 0.56", "60.9565, 16.8058, -42.5172, 0.56", "62.6186, 17.8264, -43.5832, 0.28", "63.8558, 18.586, -44.3767, 0.28", "65.7316, 19.7378, -45.5796, 0.56" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "56.589, 14.1241, -39.7162, 0.83", "57.6681, 13.1755, -42.1467, 0.83", "58.5187, 12.5809, -43.9253, 0.83", "59.4675, 12.2816, -45.5489, 0.83", "60.3724, 12.1473, -46.897, 0.56", "61.3709, 12.0016, -48.1497, 0.56", "62.4749, 11.863, -49.3652, 0.28", "63.2034, 11.8621, -49.9841, 0.83", "65.6667, 11.9936, -51.7017, 0.83", "67.0894, 12.0772, -52.6021, 0.83", "69.1376, 12.2281, -54.0487, 0.56", "70.0179, 12.2563, -54.7355, 0.56", "70.8506, 12.279, -55.469, 0.56", "72.6718, 12.3803, -57.396, 0.56", "73.6788, 12.5271, -58.6644, 0.83", "75.7921, 13.1494, -61.6223, 0.56", "76.2852, 13.3802, -62.3986, 0.28", "77.0098, 13.7991, -63.5652, 1.11", "79.3143, 15.3018, -67.1282, 0.56", "80.3604, 16.1135, -68.5457, 0.56", "81.3344, 16.909, -69.7332, 1.39", "84.2908, 19.3727, -73.1026, 0.28", "85.9115, 20.7409, -74.8705, 0.28", "87.84, 22.3807, -76.8787, 1.39", "92.5508, 26.4594, -81.4968, 0.28", "93.8242, 27.5194, -82.7029, 0.83", "95.3194, 28.7316, -84.0688, 0.28", "95.6064, 28.9528, -84.3188, 0.56", "97.4559, 30.2954, -85.9453, 0.28", "98.2663, 30.827, -86.6457, 1.11", "101.56, 32.5951, -89.4244, 0.28", "102.774, 33.147, -90.3975, 0.83", "105.52, 34.1235, -92.4108, 0.28", "105.691, 34.1642, -92.5423, 0.56", "106.919, 34.3039, -93.5046, 0.28", "108.151, 34.3084, -94.5509, 0.56", "109.005, 34.2015, -95.3471, 0.28", "110.096, 34.0265, -96.4461, 0.83", "112.624, 33.6343, -99.0541, 0.28", "112.777, 33.6158, -99.2188, 0.56", "114.226, 33.5107, -100.883, 0.28", "114.683, 33.5016, -101.412, 0.56", "116.456, 33.584, -103.498, 0.28", "117.222, 33.645, -104.412, 0.83", "117.354, 33.6854, -104.591, 0.83", "119.023, 34.3663, -107.177, 0.28", "119.25, 34.4897, -107.538, 0.28", "119.512, 34.6512, -107.965, 0.83", "119.627, 34.7241, -108.146, 0.83", "124.395, 37.9365, -115.847, 0.28", "125.259, 38.5445, -117.242, 0.83", "128.016, 40.6115, -121.712, 0.28", "128.17, 40.7271, -121.961, 0.28", "128.85, 41.2537, -123.05, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.7119, 8.01978, -11.0174, 0.56", "27.4404, 8.33151, -11.3775, 0.56", "29.5475, 8.51864, -11.6009, 0.56", "30.6288, 8.51024, -11.6579, 0.56", "32.3222, 8.38116, -11.7174, 0.56", "33.7429, 8.20929, -11.7066, 0.56", "36.7457, 7.6605, -11.5167, 0.56", "38.2282, 7.1858, -11.2602, 0.56", "39.4461, 6.65968, -10.9453, 0.56", "40.2726, 6.24118, -10.647, 0.56", "41.6016, 5.4402, -10.0335, 0.83", "43.0076, 4.41274, -9.28821, 0.56", "43.9352, 3.63728, -8.74625, 0.56", "45.1012, 2.73261, -8.01658, 0.56", "46.0485, 2.08514, -7.41497, 0.56", "46.6928, 1.71131, -7.0325, 0.56", "47.3143, 1.38069, -6.73247, 0.83", "48.2393, 1.00644, -6.39498, 0.56", "48.9007, 0.785429, -6.18716, 0.56", "49.9893, 0.443253, -5.89082, 0.83", "52.1947, -0.179006, -5.33967, 0.83", "54.9787, -0.881458, -4.82751, 0.56", "56.6759, -1.31173, -4.6222, 0.56", "57.6618, -1.54639, -4.56666, 0.56", "58.6438, -1.7496, -4.61529, 0.56", "59.6954, -1.91413, -4.79004, 0.56", "61.7663, -2.02582, -5.51514, 0.83", "63.1638, -1.96676, -6.059, 0.56", "64.1602, -1.95336, -6.45434, 0.83", "66.1137, -1.87607, -7.18395, 0.56", "67.0158, -1.80915, -7.49182, 0.56", "68.2178, -1.69109, -7.8338, 0.56", "70.8108, -1.41532, -8.32389, 0.28", "73.5333, -1.19957, -8.74983, 0.28", "74.7725, -1.18235, -8.90407, 0.28", "76.1526, -1.20267, -9.00961, 0.28", "77.2861, -1.218, -9.11033, 0.28", "78.2182, -1.25357, -9.21601, 0.56", "80.6527, -1.40235, -9.70726, 0.28", "81.6468, -1.51581, -9.81953, 0.28", "82.6658, -1.76689, -9.928, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.7119, 8.01978, -11.0174, 0.56", "29.2741, 5.36028, -10.798, 0.56", "31.3153, 3.83629, -10.6723, 0.83", "33.1003, 2.5036, -10.5624, 0.83", "35.106, 1.00614, -10.4389, 0.56", "38.1894, -1.29595, -10.249, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "21.3275, -46.6182, 8.04317, 0.56", "20.206, -47.9472, 8.70953, 0.56", "19.0647, -49.2997, 9.38764, 0.56", "14.6584, -56.4738, 13.278, 0.56", "9.09905, -63.3038, 16.2481, 0.56", "3.71608, -70.5454, 18.4265, 0.56", "-0.171832, -78.582, 20.8363, 0.56", "-3.47736, -86.4388, 24.4225, 0.56", "-4.86172, -94.5936, 28.5222, 0.56", "-5.22936, -103.404, 31.1847, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "21.3275, -46.6182, 8.04317, 0.56", "22.9212, -46.7187, 7.09521, 0.56", "26.3291, -46.9133, 5.01705, 0.56", "28.3481, -47.0286, 3.7859, 0.56", "30.4177, -47.1468, 2.52383, 0.56", "33.2407, -47.308, 0.802341, 0.56", "36.5688, -47.498, -1.22716, 0.56", "38.7775, -47.726, -2.64247, 0.56", "46.5832, -50.3712, -9.23407, 0.56", "55.3316, -50.8988, -15.1095, 0.56", "63.7645, -51.2569, -21.4381, 0.56", "72.1898, -50.9314, -27.7689, 0.56", "81.489, -50.0218, -32.65, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "32.0235, -44.1135, 2.12652, 0.56", "33.8589, -46.2029, 1.39421, 0.56", "34.9151, -47.4486, 0.997498, 0.28", "36.4284, -49.4955, 0.411343, 0.56", "38.4729, -52.3126, -0.39977, 0.28", "38.7018, -52.6282, -0.488701, 0.56", "39.509, -53.7744, -0.787312, 0.28", "39.8813, -54.2902, -0.924282, 0.83", "41.6669, -56.742, -1.59672, 0.28", "42.3804, -57.6591, -1.86499, 0.56", "43.429, -58.912, -2.25775, 0.28", "44.187, -59.7882, -2.54669, 0.83", "46.0022, -61.7006, -3.26912, 0.83", "47.9146, -63.5117, -4.02535, 0.28", "49.0944, -64.4332, -4.46193, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "32.0235, -44.1135, 2.12652, 0.56", "35.0441, -44.0939, 3.16768, 0.56", "36.543, -44.0182, 3.55735, 0.56", "38.9084, -43.8384, 4.00508, 0.56", "41.4039, -43.5241, 4.38048, 0.56", "44.1627, -43.1811, 4.53087, 0.83", "47.0099, -42.8371, 4.64232, 0.56", "48.6916, -42.6356, 4.5218, 0.56", "50.1782, -42.5473, 4.33908, 0.56", "51.7451, -42.4335, 4.13052, 0.56", "54.824, -41.9224, 3.63257, 0.56", "56.9414, -41.4356, 3.37655, 0.56", "58.69, -41.0096, 3.25701, 0.56", "60.9921, -40.5004, 3.15088, 0.56", "64.1787, -39.7446, 3.08516, 0.56", "65.8218, -39.3246, 3.09772, 0.56", "67.8792, -38.6063, 3.23907, 0.56", "70.4938, -37.5418, 3.26388, 0.28", "80.0776, -34.6949, 3.72187, 0.28", "89.1092, -30.4788, 3.20583, 0.28", "97.4285, -25.6436, 0.64037, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "25.187, 14.625, 9.89065, 0.56", "29.3723, 15.9559, 5.85066, 0.56", "31.5557, 16.7719, 4.06045, 0.56", "32.037, 16.9649, 3.67579, 0.56", "33.1961, 17.4172, 2.7398, 0.28", "34.9372, 18.1189, 1.36004, 0.28", "36.1629, 18.6517, 0.39915, 0.83", "38.5247, 19.7946, -1.17771, 0.28", "39.8083, 20.6186, -2.1264, 0.56", "41.5038, 21.8822, -3.45844, 0.28", "42.5528, 22.7393, -4.36008, 0.83", "43.3419, 23.494, -5.08794, 0.28", "44.7355, 24.9531, -6.42259, 0.28", "46.4986, 26.9127, -8.0254, 0.28", "47.8726, 28.6802, -9.19255, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "25.187, 14.625, 9.89065, 0.56", "26.5397, 14.803, 11.5714, 0.56", "27.5716, 14.9388, 12.8536, 1.11", "29.3364, 15.171, 15.0464, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "38.1894, -1.29595, -10.249, 0.56", "40.7912, -5.82259, -11.0319, 0.56", "42.1354, -7.62448, -11.2794, 0.56", "42.6693, -8.34013, -11.3778, 0.56", "43.8586, -9.93446, -11.5968, 0.28", "45.714, -12.4216, -11.9385, 0.56", "47.2236, -14.4453, -12.2166, 0.28", "48.4837, -15.6155, -12.1999, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "38.1894, -1.29595, -10.249, 0.56", "43.3429, -3.4069, -6.0223, 0.56", "44.6763, -3.95309, -4.92868, 0.56", "45.5031, -4.29173, -4.25063, 0.56", "47.6889, -5.18708, -2.45788, 0.56", "49.4721, -5.9175, -0.995392, 0.56", "57.6639, -11.2436, 4.44646, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "29.3364, 15.171, 15.0464, 0.56", "30.4575, 16.6089, 15.209, 0.56", "31.9403, 18.4523, 15.417, 0.56", "34.292, 21.376, 15.747, 0.28", "37.3172, 25.1371, 16.1715, 0.28", "38.4849, 26.5887, 16.3354, 0.28", "39.6722, 28.0648, 16.502, 0.28", "40.4932, 29.0536, 16.617, 0.56", "45.2781, 35.5634, 17.7288, 0.56", "49.2365, 42.2868, 20.0229, 0.56", "54.1313, 48.1551, 22.8952, 0.56", "60.1068, 52.6912, 26.2208, 0.56", "65.92, 57.2137, 29.8346, 0.56" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "29.3364, 15.171, 15.0464, 0.83", "29.8607, 12.6316, 15.7238, 0.83", "30.1767, 11.1008, 16.1321, 0.83", "33.7723, 1.0974, 19.8426, 0.83", "37.2002, -9.1629, 22.9151, 0.83", "39.6819, -19.9283, 24.8742, 0.83", "40.7272, -30.8813, 27.0418, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "48.4837, -15.6155, -12.1999, 0.56", "49.9628, -15.0594, -13.4466, 0.56", "51.7898, -14.3726, -14.9863, 0.28", "52.6804, -14.0378, -15.7369, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "48.4837, -15.6155, -12.1999, 0.28", "51.302, -18.5839, -9.9244, 0.28", "53.5182, -20.0057, -8.64471, 0.56", "55.1132, -20.7549, -8.19705, 0.56", "57.9465, -21.7574, -7.92169, 0.56", "59.1465, -22.1619, -7.95331, 0.56", "62.8635, -23.3145, -8.27381, 0.83", "67.7552, -24.3999, -9.36317, 0.83", "73.1696, -25.2662, -10.8779, 0.56", "74.8017, -25.5076, -11.4213, 0.56", "78.1599, -25.8806, -12.8181, 0.56", "80.757, -26.1839, -14.083, 0.28", "82.5765, -26.4725, -15.0869, 0.28", "84.0871, -26.7637, -15.929, 0.56", "86.8563, -27.2295, -17.2794, 0.28", "90.2596, -27.731, -19.0954, 0.28", "91.3572, -27.8172, -19.7619, 0.56", "93.5531, -28.0289, -21.3546, 0.83", "94.7967, -28.1583, -22.3488, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "40.7272, -30.8813, 27.0418, 0.56", "44.2542, -42.844, 28.4763, 0.56", "50.1941, -53.728, 30.7479, 0.56", "53.8131, -65.4736, 33.3502, 0.56", "55.092, -77.6718, 35.9534, 0.56", "56.596, -90.1006, 36.4657, 0.56", "60.3124, -101.921, 38.5191, 0.56", "65.4391, -112.989, 41.6602, 0.56", "68.8055, -124.125, 46.4683, 0.56", "70.6432, -134.7, 53.088, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "40.7272, -30.8813, 27.0418, 0.56", "42.1735, -35.8231, 27.9837, 0.56", "42.8149, -40.8416, 29.3628, 0.56", "44.4525, -45.333, 31.5688, 0.56", "46.6381, -49.8055, 33.2552, 0.56", "49.031, -54.4044, 34.0061, 0.56", "50.8256, -59.302, 34.3232, 0.56", "51.7286, -64.4293, 34.0011, 0.56", "52.0308, -69.6421, 34.1742, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_NBC_ff73785e1d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_18
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.4999989408307432)
    connect dend_47(0), soma_0(0.4999989408307432)
    connect dend_32(0), soma_0(0.4999989408307432)
    connect dend_31(0), soma_0(0.4999989408307432)
    connect dend_18(0), soma_0(0.4999989408307432)
    connect dend_7(0), soma_0(0.4999989408307432)
    connect dend_0(0), soma_0(0.4999989408307432)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33004, 6.9136, -1.72338, 3.35756 ) }
    soma_0 { pt3dadd( -1.30767, 6.0419, -1.50091, 5.92196 ) }
    soma_0 { pt3dadd( -1.2853, 5.17019, -1.27844, 10.136 ) }
    soma_0 { pt3dadd( -1.26293, 4.29848, -1.05596, 12.0381 ) }
    soma_0 { pt3dadd( -1.24056, 3.42677, -0.833493, 14.7633 ) }
    soma_0 { pt3dadd( -1.21819, 2.55506, -0.61102, 15.4638 ) }
    soma_0 { pt3dadd( -1.19582, 1.68335, -0.388548, 15.4684 ) }
    soma_0 { pt3dadd( -1.17345, 0.811646, -0.166076, 15.4327 ) }
    soma_0 { pt3dadd( -1.15108, -0.0600623, 0.0563968, 14.9176 ) }
    soma_0 { pt3dadd( -1.12871, -0.931771, 0.278869, 14.1939 ) }
    soma_0 { pt3dadd( -1.10634, -1.80348, 0.501341, 13.4702 ) }
    soma_0 { pt3dadd( -1.08397, -2.67519, 0.723814, 12.7466 ) }
    soma_0 { pt3dadd( -1.0616, -3.5469, 0.946286, 12.3598 ) }
    soma_0 { pt3dadd( -1.03923, -4.4186, 1.16876, 12.0665 ) }
    soma_0 { pt3dadd( -1.01686, -5.29031, 1.39123, 11.6276 ) }
    soma_0 { pt3dadd( -0.994493, -6.16202, 1.6137, 11.1336 ) }
    soma_0 { pt3dadd( -0.972123, -7.03373, 1.83618, 10.6396 ) }
    soma_0 { pt3dadd( -0.949754, -7.90544, 2.05865, 9.89654 ) }
    soma_0 { pt3dadd( -0.927384, -8.77715, 2.28112, 8.0678 ) }
    soma_0 { pt3dadd( -0.905015, -9.64885, 2.50359, 6.12489 ) }
    soma_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 3.55851 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.38069, 1.59658, -14.2729, 1.39 ) }
    dend_48 { pt3dadd( -6.31768, 1.34167, -14.9344, 1.39 ) }
    dend_48 { pt3dadd( -6.20235, 0.87502, -16.1453, 1.11 ) }
    dend_48 { pt3dadd( -6.08991, 0.420104, -17.3257, 1.11 ) }
    dend_48 { pt3dadd( -5.64489, -1.38046, -21.9979, 1.11 ) }
    dend_48 { pt3dadd( -5.46736, -2.09875, -23.8618, 1.11 ) }
    dend_48 { pt3dadd( -5.36393, -2.51724, -24.9478, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 28/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.84069, 6.05233, -3.83293, 1.11 ) }
    dend_47 { pt3dadd( -9.20686, 8.00468, -4.33222, 0.83 ) }
    dend_47 { pt3dadd( -11.32, 9.31856, -4.36647, 0.83 ) }
    dend_47 { pt3dadd( -13.0273, 10.5499, -4.52839, 0.83 ) }
    dend_47 { pt3dadd( -16.7038, 13.4483, -5.04274, 0.83 ) }
    dend_47 { pt3dadd( -19.5213, 15.6857, -5.50067, 0.83 ) }
    dend_47 { pt3dadd( -21.9676, 17.5479, -5.92584, 0.83 ) }
    dend_47 { pt3dadd( -24.7687, 19.3223, -6.20737, 0.83 ) }
    dend_47 { pt3dadd( -28.7828, 21.6344, -6.72299, 0.83 ) }
    dend_47 { pt3dadd( -30.0961, 22.3787, -6.94189, 0.56 ) }
    dend_47 { pt3dadd( -31.2028, 23.0192, -7.25431, 0.83 ) }
    dend_47 { pt3dadd( -32.608, 23.7496, -7.74039, 0.83 ) }
    dend_47 { pt3dadd( -34.4936, 24.5293, -8.46159, 0.83 ) }
    dend_47 { pt3dadd( -36.8536, 25.2206, -9.00149, 0.28 ) }
    dend_47 { pt3dadd( -38.9349, 26.0116, -9.33949, 0.83 ) }
    dend_47 { pt3dadd( -42.096, 27.3876, -9.9805, 0.56 ) }
    dend_47 { pt3dadd( -43.2423, 27.9768, -10.2618, 0.56 ) }
    dend_47 { pt3dadd( -45.7872, 29.328, -10.9799, 0.56 ) }
    dend_47 { pt3dadd( -50.6349, 31.8739, -12.5432, 0.56 ) }
    dend_47 { pt3dadd( -55.3993, 34.2458, -14.2753, 0.56 ) }
    dend_47 { pt3dadd( -59.5948, 36.2024, -15.9685, 0.56 ) }
    dend_47 { pt3dadd( -62.8862, 37.7235, -17.3506, 0.56 ) }
    dend_47 { pt3dadd( -65.0394, 38.6335, -18.3556, 0.56 ) }
    dend_47 { pt3dadd( -67.1819, 39.4515, -19.4643, 0.56 ) }
    dend_47 { pt3dadd( -69.2134, 40.1626, -20.6913, 0.56 ) }
    dend_47 { pt3dadd( -71.083, 40.6832, -21.7923, 0.56 ) }
    dend_47 { pt3dadd( -72.2031, 41.0096, -22.4851, 0.56 ) }
    dend_47 { pt3dadd( -74.8621, 41.8041, -24.2105, 0.56 ) }
    dend_47 { pt3dadd( -77.6254, 42.7291, -26.0251, 0.56 ) }
    dend_47 { pt3dadd( -80.1254, 43.6324, -27.7612, 0.56 ) }
    dend_47 { pt3dadd( -81.757, 44.2358, -28.9477, 0.56 ) }
    dend_47 { pt3dadd( -83.3397, 44.8445, -30.1136, 0.28 ) }
    dend_47 { pt3dadd( -85.7687, 45.7615, -31.9337, 0.56 ) }
    dend_47 { pt3dadd( -87.0664, 46.2361, -32.8763, 0.56 ) }
    dend_47 { pt3dadd( -88.7654, 46.8021, -34.079, 0.56 ) }
    dend_47 { pt3dadd( -90.9796, 47.5526, -35.5537, 0.28 ) }
    dend_47 { pt3dadd( -92.6074, 48.1384, -36.5719, 0.28 ) }
    dend_47 { pt3dadd( -94.3314, 48.8432, -37.5726, 0.56 ) }
    dend_47 { pt3dadd( -96.1336, 49.6769, -38.6202, 0.56 ) }
    dend_47 { pt3dadd( -98.1314, 50.7314, -39.7638, 0.28 ) }
    dend_47 { pt3dadd( -98.8886, 51.144, -40.1732, 0.56 ) }
    dend_47 { pt3dadd( -100.848, 52.2895, -41.2507, 0.28 ) }
    dend_47 { pt3dadd( -101.584, 52.7211, -41.6639, 0.83 ) }
    dend_47 { pt3dadd( -104.561, 54.5018, -43.2773, 0.28 ) }
    dend_47 { pt3dadd( -107.092, 56.1995, -44.7534, 0.28 ) }
    dend_47 { pt3dadd( -108.606, 57.2397, -45.6282, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 74/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.16931, 5.51607, 2.45707, 5.56 ) }
    dend_32 { pt3dadd( 1.48952, 6.80274, 2.45707, 5.56 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.99931, 4.80433, -11.5829, 1.39 ) }
    dend_31 { pt3dadd( 3.45981, 5.74313, -12.5539, 1.11 ) }
    dend_31 { pt3dadd( 4.47369, 8.61622, -15.8749, 1.11 ) }
    dend_31 { pt3dadd( 4.87212, 10.4712, -18.9768, 1.11 ) }
    dend_31 { pt3dadd( 4.9985, 11.728, -22.3455, 1.11 ) }
    dend_31 { pt3dadd( 5.08776, 12.6007, -25.4596, 1.11 ) }
    dend_31 { pt3dadd( 5.23283, 13.2444, -27.9526, 1.11 ) }
    dend_31 { pt3dadd( 5.41398, 13.8056, -31.8856, 1.11 ) }
    dend_31 { pt3dadd( 5.5862, 13.8978, -38.3541, 1.11 ) }
    dend_31 { pt3dadd( 5.48612, 13.4808, -43.4284, 0.83 ) }
    dend_31 { pt3dadd( 5.42661, 13.2349, -45.1253, 0.83 ) }
    dend_31 { pt3dadd( 5.33181, 12.7156, -48.4526, 0.83 ) }
    dend_31 { pt3dadd( 5.28549, 12.0607, -52.1034, 0.83 ) }
    dend_31 { pt3dadd( 5.29429, 11.689, -54.9349, 0.83 ) }
    dend_31 { pt3dadd( 5.36437, 11.022, -61.3042, 0.83 ) }
    dend_31 { pt3dadd( 5.4118, 10.4318, -67.0821, 0.83 ) }
    dend_31 { pt3dadd( 5.36647, 10.0088, -70.7816, 0.83 ) }
    dend_31 { pt3dadd( 5.33419, 9.6769, -73.4831, 0.83 ) }
    dend_31 { pt3dadd( 5.36573, 8.4827, -85.109, 0.56 ) }
    dend_31 { pt3dadd( 5.43141, 8.20074, -88.271, 0.56 ) }
    dend_31 { pt3dadd( 5.53436, 7.98375, -90.8292, 1.39 ) }
    dend_31 { pt3dadd( 5.88548, 7.26084, -98.6619, 0.56 ) }
    dend_31 { pt3dadd( 6.08279, 6.87352, -101.921, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.60931, 3.29307, -6.83293, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 7.10277, 4.05355, -7.36034, 2.78 ) }
    dend_18 { pt3dadd( 7.90774, 5.29413, -8.2207, 2.22 ) }
    dend_18 { pt3dadd( 8.96345, 6.92113, -9.34904, 3.06 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.46931, -9.96692, 3.82707, 1.94 ) }
    dend_7 { pt3dadd( 2.95052, -12.1857, 3.77922, 1.39 ) }
    dend_7 { pt3dadd( 3.36289, -14.0871, 3.73823, 2.22 ) }
    dend_7 { pt3dadd( 3.76741, -15.9523, 3.69801, 2.5 ) }
    dend_7 { pt3dadd( 4.68973, -20.2049, 3.60631, 1.39 ) }
    dend_7 { pt3dadd( 5.04754, -21.8547, 3.57073, 1.39 ) }
    dend_7 { pt3dadd( 6.0121, -26.3022, 3.47483, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.07069, -9.85968, -1.42293, 2.78 ) }
    dend_0 { pt3dadd( -5.79996, -10.9942, -2.07801, 2.22 ) }
    dend_0 { pt3dadd( -6.80251, -12.554, -2.97857, 2.22 ) }
    dend_0 { pt3dadd( -8.12318, -14.6086, -4.16488, 2.78 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 0.644148 ) }
    axon_0 { pt3dadd( -0.497843, -25.5157, 2.72606, 0.644148 ) }
    axon_0 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.644148 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 17/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.36393, -2.51724, -24.9478, 1.11 ) }
    dend_50 { pt3dadd( -7.07104, -2.45882, -25.1057, 1.11 ) }
    dend_50 { pt3dadd( -8.89108, -2.46993, -25.9908, 1.11 ) }
    dend_50 { pt3dadd( -11.5896, -2.4864, -27.3031, 1.11 ) }
    dend_50 { pt3dadd( -14.7076, -2.50543, -28.8195, 1.11 ) }
    dend_50 { pt3dadd( -16.2571, -2.51488, -29.5731, 0.83 ) }
    dend_50 { pt3dadd( -18.9661, -2.53141, -30.8905, 1.11 ) }
    dend_50 { pt3dadd( -24.7109, -2.91881, -34.3654, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.36393, -2.51724, -24.9478, 0.83 ) }
    dend_49 { pt3dadd( -5.24702, -6.43517, -25.3169, 0.83 ) }
    dend_49 { pt3dadd( -5.1061, -8.98251, -25.4574, 0.28 ) }
    dend_49 { pt3dadd( -5.00175, -10.5114, -25.5105, 0.56 ) }
    dend_49 { pt3dadd( -4.70418, -14.0163, -25.5995, 0.28 ) }
    dend_49 { pt3dadd( -4.48003, -16.0864, -25.661, 0.56 ) }
    dend_49 { pt3dadd( -4.17055, -18.4681, -25.7375, 0.28 ) }
    dend_49 { pt3dadd( -3.60979, -21.9032, -25.82, 0.83 ) }
    dend_49 { pt3dadd( -2.97377, -25.1665, -25.8655, 0.28 ) }
    dend_49 { pt3dadd( -2.43721, -27.6543, -25.9093, 0.83 ) }
    dend_49 { pt3dadd( -1.83809, -30.0188, -25.9619, 0.28 ) }
    dend_49 { pt3dadd( -1.36005, -31.6911, -26.0554, 0.83 ) }
    dend_49 { pt3dadd( -0.870396, -33.2158, -26.1026, 0.83 ) }
    dend_49 { pt3dadd( -0.047377, -35.6283, -26.1415, 0.28 ) }
    dend_49 { pt3dadd( 0.217572, -36.4822, -26.144, 0.83 ) }
    dend_49 { pt3dadd( 1.32236, -40.5714, -26.115, 0.28 ) }
    dend_49 { pt3dadd( 1.44393, -41.1565, -26.1124, 0.56 ) }
    dend_49 { pt3dadd( 1.86043, -44.149, -26.1256, 0.28 ) }
    dend_49 { pt3dadd( 2.0043, -45.7642, -26.1437, 0.83 ) }
    dend_49 { pt3dadd( 2.17586, -51.122, -26.4387, 0.28 ) }
    dend_49 { pt3dadd( 2.11683, -52.9956, -26.598, 0.56 ) }
    dend_49 { pt3dadd( 1.62146, -56.8529, -26.9938, 0.28 ) }
    dend_49 { pt3dadd( 0.963339, -60.0971, -27.3719, 0.28 ) }
    dend_49 { pt3dadd( 0.673975, -61.2434, -27.5377, 0.83 ) }
    dend_49 { pt3dadd( -0.246578, -64.3229, -27.9871, 0.28 ) }
    dend_49 { pt3dadd( -0.92442, -66.0638, -28.2837, 0.56 ) }
    dend_49 { pt3dadd( -2.27148, -68.9079, -28.7978, 0.28 ) }
    dend_49 { pt3dadd( -3.35259, -70.697, -29.1271, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.48952, 6.80274, 2.45707, 0.56 ) }
    dend_46 { pt3dadd( -2.84062, 9.8018, -0.551158, 0.56 ) }
    dend_46 { pt3dadd( -4.88377, 11.3735, -1.71195, 0.56 ) }
    dend_46 { pt3dadd( -6.98397, 13.0055, -2.62174, 0.56 ) }
    dend_46 { pt3dadd( -8.71993, 14.4093, -3.19607, 0.83 ) }
    dend_46 { pt3dadd( -10.6306, 16.0755, -3.79106, 0.56 ) }
    dend_46 { pt3dadd( -11.3974, 16.8212, -4.03277, 0.83 ) }
    dend_46 { pt3dadd( -13.7826, 19.638, -4.60727, 0.56 ) }
    dend_46 { pt3dadd( -15.6316, 22.2981, -4.94071, 0.56 ) }
    dend_46 { pt3dadd( -16.7194, 23.9843, -5.11922, 0.56 ) }
    dend_46 { pt3dadd( -18.3995, 26.5789, -5.34024, 0.56 ) }
    dend_46 { pt3dadd( -19.9859, 28.9428, -5.63528, 0.56 ) }
    dend_46 { pt3dadd( -21.4553, 30.9299, -6.02082, 0.56 ) }
    dend_46 { pt3dadd( -22.9065, 32.6893, -6.5702, 0.56 ) }
    dend_46 { pt3dadd( -24.773, 34.6195, -7.31562, 0.56 ) }
    dend_46 { pt3dadd( -25.8652, 35.596, -7.73829, 0.83 ) }
    dend_46 { pt3dadd( -27.4974, 36.7406, -8.27251, 0.56 ) }
    dend_46 { pt3dadd( -29.5262, 37.7604, -8.93311, 0.83 ) }
    dend_46 { pt3dadd( -31.8746, 38.5628, -9.78137, 0.28 ) }
    dend_46 { pt3dadd( -33.8774, 38.9595, -10.5885, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.48952, 6.80274, 2.45707, 5.56 ) }
    dend_33 { pt3dadd( 1.44229, 7.04868, 3.1997, 5.56 ) }
    // Section: dend_30, id: dend_30, parent: dend_18 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.96345, 6.92113, -9.34904, 0.83 ) }
    dend_30 { pt3dadd( 13.6784, 7.694, -16.9178, 0.83 ) }
    dend_30 { pt3dadd( 15.0757, 7.99846, -19.3694, 0.56 ) }
    dend_30 { pt3dadd( 16.459, 8.29148, -21.8258, 0.56 ) }
    dend_30 { pt3dadd( 18.34, 8.5967, -25.6116, 0.56 ) }
    dend_30 { pt3dadd( 19.8891, 8.86711, -28.9074, 0.56 ) }
    dend_30 { pt3dadd( 21.4652, 9.19927, -32.2415, 0.56 ) }
    dend_30 { pt3dadd( 22.3877, 9.44913, -34.2305, 0.56 ) }
    dend_30 { pt3dadd( 23.0473, 9.6389, -35.6384, 0.83 ) }
    dend_30 { pt3dadd( 26.3861, 10.8008, -42.4067, 0.56 ) }
    dend_30 { pt3dadd( 27.4167, 11.2244, -44.2948, 0.83 ) }
    dend_30 { pt3dadd( 28.4204, 11.6235, -45.9944, 0.56 ) }
    dend_30 { pt3dadd( 29.954, 12.2383, -48.4649, 0.83 ) }
    dend_30 { pt3dadd( 32.4032, 13.2697, -52.3081, 0.56 ) }
    dend_30 { pt3dadd( 34.6618, 14.2278, -55.9055, 0.28 ) }
    dend_30 { pt3dadd( 35.7131, 14.6143, -57.5582, 0.56 ) }
    dend_30 { pt3dadd( 38.3326, 15.3819, -62.2436, 0.28 ) }
    dend_30 { pt3dadd( 39.7141, 15.6237, -64.9557, 1.11 ) }
    dend_30 { pt3dadd( 40.7617, 15.6917, -67.1844, 0.56 ) }
    dend_30 { pt3dadd( 42.3602, 15.5071, -71.1082, 0.56 ) }
    dend_30 { pt3dadd( 43.2095, 15.2798, -73.2512, 0.56 ) }
    dend_30 { pt3dadd( 45.0997, 14.5875, -78.3075, 0.56 ) }
    dend_30 { pt3dadd( 47.8787, 13.372, -85.6615, 0.28 ) }
    dend_30 { pt3dadd( 48.8786, 12.8743, -88.2796, 0.83 ) }
    dend_30 { pt3dadd( 52.3701, 11.1824, -97.2004, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 52.8353, 10.9531, -98.3731, 0.83 ) }
    dend_30 { pt3dadd( 56.4576, 9.1754, -107.385, 0.28 ) }
    dend_30 { pt3dadd( 57.5241, 8.59066, -109.985, 0.56 ) }
    dend_30 { pt3dadd( 59.2588, 7.589, -114.358, 0.28 ) }
    dend_30 { pt3dadd( 60.7215, 6.85182, -117.744, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 8.96345, 6.92113, -9.34904, 2.5 ) }
    dend_19 { pt3dadd( 11.0133, 7.91929, -11.3811, 2.5 ) }
    dend_19 { pt3dadd( 13.3148, 9.03994, -13.6625, 1.94 ) }
    dend_19 { pt3dadd( 15.8674, 10.2829, -16.1929, 1.94 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 9/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.0121, -26.3022, 3.47483, 0.83 ) }
    dend_11 { pt3dadd( 7.41715, -28.0273, 2.99443, 0.83 ) }
    dend_11 { pt3dadd( 8.44874, -29.2938, 2.64171, 0.83 ) }
    dend_11 { pt3dadd( 10.4977, -31.8095, 1.94113, 0.83 ) }
    dend_11 { pt3dadd( 11.981, -33.6307, 1.43395, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.0121, -26.3022, 3.47483, 0.83 ) }
    dend_8 { pt3dadd( 5.30442, -32.5171, 7.99154, 0.83 ) }
    dend_8 { pt3dadd( 5.16069, -33.7793, 8.90886, 0.83 ) }
    dend_8 { pt3dadd( 4.86758, -36.3533, 10.7796, 1.39 ) }
    dend_8 { pt3dadd( 4.49479, -39.6272, 13.1589, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.12318, -14.6086, -4.16488, 1.11 ) }
    dend_4 { pt3dadd( -7.94532, -16.1354, -6.32602, 1.11 ) }
    dend_4 { pt3dadd( -8.13266, -17.3771, -9.14459, 1.11 ) }
    dend_4 { pt3dadd( -8.59672, -18.1428, -11.5146, 1.11 ) }
    dend_4 { pt3dadd( -9.02055, -18.8421, -13.6792, 1.11 ) }
    dend_4 { pt3dadd( -9.34313, -19.3743, -15.3267, 1.11 ) }
    dend_4 { pt3dadd( -9.83042, -20.1783, -17.8153, 1.11 ) }
    dend_4 { pt3dadd( -11.1099, -20.7415, -21.0156, 1.11 ) }
    dend_4 { pt3dadd( -11.9723, -20.7319, -22.4651, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.12318, -14.6086, -4.16488, 1.11 ) }
    dend_1 { pt3dadd( -7.96247, -18.0944, -5.09339, 1.11 ) }
    dend_1 { pt3dadd( -7.93087, -21.5146, -6.14268, 1.11 ) }
    dend_1 { pt3dadd( -7.93131, -25.2921, -7.45078, 1.11 ) }
    dend_1 { pt3dadd( -7.8976, -26.8455, -8.04595, 1.11 ) }
    dend_1 { pt3dadd( -7.87146, -28.0501, -8.50748, 1.11 ) }
    dend_1 { pt3dadd( -7.84923, -29.0743, -8.8999, 1.11 ) }
    dend_1 { pt3dadd( -7.91201, -30.5844, -9.51312, 1.11 ) }
    dend_1 { pt3dadd( -8.2138, -33.1762, -10.892, 1.11 ) }
    dend_1 { pt3dadd( -8.2763, -35.1258, -12.1369, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 38/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.271762, -55.5058, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.656564, -70.5009, 2.72606, 0.56 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -24.7109, -2.91881, -34.3654, 0.83 ) }
    dend_52 { pt3dadd( -26.3115, -1.6124, -34.8206, 0.83 ) }
    dend_52 { pt3dadd( -27.6316, -0.35075, -35.0471, 0.28 ) }
    dend_52 { pt3dadd( -28.2662, 0.335836, -35.1526, 0.28 ) }
    dend_52 { pt3dadd( -28.9518, 1.10319, -35.2663, 0.28 ) }
    dend_52 { pt3dadd( -30.4099, 2.7187, -35.5792, 1.11 ) }
    dend_52 { pt3dadd( -31.7625, 4.21929, -35.9481, 0.28 ) }
    dend_52 { pt3dadd( -33.2483, 5.8929, -36.4225, 0.56 ) }
    dend_52 { pt3dadd( -34.9088, 7.79358, -37.0927, 0.28 ) }
    dend_52 { pt3dadd( -35.5773, 8.54039, -37.3925, 0.83 ) }
    dend_52 { pt3dadd( -37.2305, 10.3083, -38.2416, 0.56 ) }
    dend_52 { pt3dadd( -38.1623, 11.2425, -38.7469, 0.28 ) }
    dend_52 { pt3dadd( -39.9189, 12.8783, -39.7937, 0.56 ) }
    dend_52 { pt3dadd( -41.507, 14.2741, -40.7995, 0.28 ) }
    dend_52 { pt3dadd( -43.9101, 16.2431, -42.2394, 1.11 ) }
    dend_52 { pt3dadd( -45.7579, 17.6803, -43.3267, 0.28 ) }
    dend_52 { pt3dadd( -47.1609, 18.6161, -44.0702, 0.83 ) }
    dend_52 { pt3dadd( -48.9975, 19.668, -44.9372, 0.28 ) }
    dend_52 { pt3dadd( -49.9901, 20.1524, -45.3653, 0.56 ) }
    dend_52 { pt3dadd( -51.7669, 20.862, -46.0607, 0.28 ) }
    dend_52 { pt3dadd( -53.8064, 21.4907, -46.7806, 0.56 ) }
    dend_52 { pt3dadd( -57.3461, 22.4236, -47.9692, 0.28 ) }
    dend_52 { pt3dadd( -59.5466, 22.9664, -48.7138, 0.28 ) }
    dend_52 { pt3dadd( -60.4081, 23.1903, -49.0072, 0.56 ) }
    dend_52 { pt3dadd( -61.9123, 23.6035, -49.5436, 0.28 ) }
    dend_52 { pt3dadd( -64.89, 24.4633, -50.6562, 0.56 ) }
    dend_52 { pt3dadd( -67.6851, 25.3252, -51.675, 0.28 ) }
    dend_52 { pt3dadd( -68.3827, 25.5768, -51.9405, 0.56 ) }
    dend_52 { pt3dadd( -71.2748, 26.6643, -53.0272, 0.56 ) }
    dend_52 { pt3dadd( -72.1137, 26.9963, -53.3409, 0.28 ) }
    dend_52 { pt3dadd( -75.1211, 28.2625, -54.4197, 0.28 ) }
    dend_52 { pt3dadd( -77.2786, 29.2224, -55.2029, 0.83 ) }
    dend_52 { pt3dadd( -79.2011, 30.0546, -55.7982, 0.28 ) }
    dend_52 { pt3dadd( -80.0367, 30.4067, -56.0486, 0.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -24.7109, -2.91881, -34.3654, 0.56 ) }
    dend_51 { pt3dadd( -25.6956, -1.95501, -35.7603, 0.56 ) }
    dend_51 { pt3dadd( -26.0429, -1.60152, -36.2769, 0.56 ) }
    dend_51 { pt3dadd( -27.7186, 0.354936, -39.8738, 0.28 ) }
    dend_51 { pt3dadd( -28.7859, 1.50355, -42.9702, 0.83 ) }
    dend_51 { pt3dadd( -31.1487, 3.86371, -50.2931, 0.28 ) }
    dend_51 { pt3dadd( -31.5221, 4.21865, -51.4728, 0.28 ) }
    dend_51 { pt3dadd( -31.8051, 4.44949, -52.4403, 0.83 ) }
    dend_51 { pt3dadd( -33.5821, 5.75058, -58.8849, 0.83 ) }
    dend_51 { pt3dadd( -35.752, 6.93029, -66.2932, 0.28 ) }
    dend_51 { pt3dadd( -36.0938, 7.09841, -67.3246, 0.28 ) }
    dend_51 { pt3dadd( -36.242, 7.15194, -67.6544, 0.83 ) }
    dend_51 { pt3dadd( -37.8762, 7.63968, -70.5521, 0.28 ) }
    dend_51 { pt3dadd( -38.5039, 7.79578, -71.5244, 1.11 ) }
    dend_51 { pt3dadd( -43.8069, 9.00779, -78.5911, 0.28 ) }
    dend_51 { pt3dadd( -45.7494, 9.41755, -81.0207, 1.39 ) }
    dend_51 { pt3dadd( -51.4814, 10.4894, -88.0416, 0.28 ) }
    dend_51 { pt3dadd( -53.9897, 10.8766, -91.1287, 1.11 ) }
    dend_51 { pt3dadd( -58.3059, 11.3645, -96.3255, 0.28 ) }
    dend_51 { pt3dadd( -59.0276, 11.4365, -97.2185, 0.56 ) }
    dend_51 { pt3dadd( -61.2223, 11.6589, -99.9103, 0.28 ) }
    dend_51 { pt3dadd( -63.8366, 12.0879, -103.203, 0.56 ) }
    dend_51 { pt3dadd( -65.7899, 12.682, -105.554, 0.28 ) }
    dend_51 { pt3dadd( -66.7156, 13.0531, -106.756, 0.83 ) }
    dend_51 { pt3dadd( -70.0465, 14.8534, -110.889, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -71.07, 15.5365, -112.248, 0.83 ) }
    dend_51 { pt3dadd( -72.4048, 16.8172, -114.129, 0.28 ) }
    dend_51 { pt3dadd( -74.1276, 19.1026, -116.456, 0.56 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.44229, 7.04868, 3.1997, 0.56 ) }
    dend_43 { pt3dadd( -0.209363, 10.5741, 2.14994, 0.56 ) }
    dend_43 { pt3dadd( -1.62057, 13.6487, 1.50987, 0.56 ) }
    dend_43 { pt3dadd( -2.91461, 16.4296, 1.10463, 0.56 ) }
    dend_43 { pt3dadd( -3.54607, 17.8377, 0.912675, 0.56 ) }
    dend_43 { pt3dadd( -4.82652, 20.5945, 0.549211, 0.56 ) }
    dend_43 { pt3dadd( -6.27789, 23.4896, 0.165228, 0.56 ) }
    dend_43 { pt3dadd( -6.92404, 24.5502, 0.020287, 0.56 ) }
    dend_43 { pt3dadd( -8.28854, 26.5398, -0.131692, 0.28 ) }
    dend_43 { pt3dadd( -9.26871, 27.9457, -0.194048, 0.56 ) }
    dend_43 { pt3dadd( -10.6653, 29.8437, -0.36495, 0.56 ) }
    dend_43 { pt3dadd( -11.8578, 31.2789, -0.622932, 0.56 ) }
    dend_43 { pt3dadd( -14.2549, 34.109, -1.06032, 0.56 ) }
    dend_43 { pt3dadd( -15.5947, 35.5363, -1.20221, 0.56 ) }
    dend_43 { pt3dadd( -17.7328, 37.6642, -1.27621, 0.56 ) }
    dend_43 { pt3dadd( -19.8343, 39.6824, -1.17778, 0.56 ) }
    dend_43 { pt3dadd( -22.6326, 42.379, -0.933192, 0.56 ) }
    dend_43 { pt3dadd( -26.7324, 46.2192, -0.445549, 0.56 ) }
    dend_43 { pt3dadd( -29.0294, 48.3199, -0.111064, 0.56 ) }
    dend_43 { pt3dadd( -31.1263, 50.1286, 0.151756, 0.56 ) }
    dend_43 { pt3dadd( -33.483, 52.0128, 0.485612, 0.56 ) }
    dend_43 { pt3dadd( -35.3984, 53.5899, 0.925944, 0.56 ) }
    dend_43 { pt3dadd( -37.5844, 55.5198, 1.48041, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.44229, 7.04868, 3.1997, 2.22 ) }
    dend_34 { pt3dadd( 2.2471, 9.11501, 4.05114, 2.22 ) }
    dend_34 { pt3dadd( 2.846, 10.6527, 4.68474, 1.11 ) }
    dend_34 { pt3dadd( 3.62912, 12.6633, 5.51322, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.8674, 10.2829, -16.1929, 0.83 ) }
    dend_27 { pt3dadd( 18.3988, 9.9438, -17.9766, 0.83 ) }
    dend_27 { pt3dadd( 20.8712, 9.744, -19.4745, 0.83 ) }
    dend_27 { pt3dadd( 22.8187, 9.699, -20.5443, 0.83 ) }
    dend_27 { pt3dadd( 28.2825, 9.8738, -23.481, 0.83 ) }
    dend_27 { pt3dadd( 30.9908, 10.0822, -24.9548, 0.83 ) }
    dend_27 { pt3dadd( 37.7047, 10.6962, -28.9628, 0.83 ) }
    dend_27 { pt3dadd( 40.1825, 10.9864, -30.4194, 0.83 ) }
    dend_27 { pt3dadd( 42.3897, 11.2909, -31.6651, 0.83 ) }
    dend_27 { pt3dadd( 44.4874, 11.6207, -32.8041, 0.83 ) }
    dend_27 { pt3dadd( 50.0262, 12.6634, -35.4487, 0.83 ) }
    dend_27 { pt3dadd( 53.9853, 13.4661, -37.6387, 0.83 ) }
    dend_27 { pt3dadd( 56.589, 14.1241, -39.7162, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 15.8674, 10.2829, -16.1929, 1.11 ) }
    dend_20 { pt3dadd( 18.952, 9.5738, -14.5712, 1.11 ) }
    dend_20 { pt3dadd( 20.7985, 9.14931, -13.6005, 1.11 ) }
    dend_20 { pt3dadd( 23.1541, 8.60779, -12.3621, 1.11 ) }
    dend_20 { pt3dadd( 24.4316, 8.31412, -11.6905, 1.11 ) }
    dend_20 { pt3dadd( 25.7119, 8.01978, -11.0174, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.981, -33.6307, 1.43395, 0.83 ) }
    dend_15 { pt3dadd( 13.7945, -36.5464, 3.05413, 0.83 ) }
    dend_15 { pt3dadd( 15.3392, -38.7379, 4.30699, 0.56 ) }
    dend_15 { pt3dadd( 15.8293, -39.4017, 4.63674, 0.56 ) }
    dend_15 { pt3dadd( 17.1989, -41.2568, 5.55826, 0.28 ) }
    dend_15 { pt3dadd( 17.8777, -42.1763, 6.015, 0.83 ) }
    dend_15 { pt3dadd( 18.9974, -43.693, 6.7684, 0.56 ) }
    dend_15 { pt3dadd( 19.8303, -44.742, 7.16889, 0.56 ) }
    dend_15 { pt3dadd( 21.3275, -46.6182, 8.04317, 0.56 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 58/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.981, -33.6307, 1.43395, 0.83 ) }
    dend_12 { pt3dadd( 14.0879, -34.7146, 1.7592, 0.83 ) }
    dend_12 { pt3dadd( 17.0793, -36.2137, 2.09925, 0.83 ) }
    dend_12 { pt3dadd( 18.132, -36.7319, 2.17159, 0.83 ) }
    dend_12 { pt3dadd( 19.2447, -37.3303, 2.18066, 1.11 ) }
    dend_12 { pt3dadd( 23.066, -39.3852, 2.21184, 0.83 ) }
    dend_12 { pt3dadd( 25.6358, -40.7671, 2.2328, 0.83 ) }
    dend_12 { pt3dadd( 27.1139, -41.5535, 2.23319, 0.83 ) }
    dend_12 { pt3dadd( 29.4095, -42.7754, 2.18868, 0.83 ) }
    dend_12 { pt3dadd( 32.0235, -44.1135, 2.12652, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.49479, -39.6272, 13.1589, 0.56 ) }
    dend_10 { pt3dadd( 1.46851, -40.6009, 14.0953, 0.56 ) }
    dend_10 { pt3dadd( -0.0775435, -41.0983, 14.5737, 0.83 ) }
    dend_10 { pt3dadd( -1.46066, -41.5432, 15.0016, 0.28 ) }
    dend_10 { pt3dadd( -2.02516, -41.7249, 15.1763, 0.83 ) }
    dend_10 { pt3dadd( -9.74342, -45.3063, 18.7582, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 74/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.49479, -39.6272, 13.1589, 0.56 ) }
    dend_9 { pt3dadd( 6.91135, -39.1357, 12.1609, 0.56 ) }
    dend_9 { pt3dadd( 8.32128, -39.036, 11.5321, 0.56 ) }
    dend_9 { pt3dadd( 11.7048, -38.9383, 9.96854, 0.56 ) }
    dend_9 { pt3dadd( 15.1029, -39.0556, 8.36745, 0.56 ) }
    dend_9 { pt3dadd( 17.7755, -39.1477, 7.10826, 0.56 ) }
    dend_9 { pt3dadd( 22.1158, -39.2975, 5.06324, 0.28 ) }
    dend_9 { pt3dadd( 27.779, -39.7977, 2.35993, 0.28 ) }
    dend_9 { pt3dadd( 30.2554, -40.1086, 1.1435, 0.28 ) }
    dend_9 { pt3dadd( 33.1996, -40.646, -0.39658, 0.28 ) }
    dend_9 { pt3dadd( 43.9621, -39.3913, -3.2495, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.9723, -20.7319, -22.4651, 0.83 ) }
    dend_6 { pt3dadd( -11.2657, -22.1313, -23.1313, 0.83 ) }
    dend_6 { pt3dadd( -9.75582, -26.3741, -24.04, 0.28 ) }
    dend_6 { pt3dadd( -9.53794, -27.1912, -24.0977, 0.56 ) }
    dend_6 { pt3dadd( -9.19318, -28.6507, -24.0275, 0.56 ) }
    dend_6 { pt3dadd( -8.88895, -30.1449, -23.889, 0.56 ) }
    dend_6 { pt3dadd( -8.52556, -31.9297, -23.7236, 0.28 ) }
    dend_6 { pt3dadd( -8.05551, -34.6225, -23.2468, 0.28 ) }
    dend_6 { pt3dadd( -7.96651, -35.6161, -22.8885, 0.83 ) }
    dend_6 { pt3dadd( -7.80705, -38.2829, -21.8742, 0.28 ) }
    dend_6 { pt3dadd( -7.79901, -38.982, -21.5891, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.9723, -20.7319, -22.4651, 0.83 ) }
    dend_5 { pt3dadd( -12.3196, -19.5564, -23.0673, 0.83 ) }
    dend_5 { pt3dadd( -12.9708, -17.6755, -23.9647, 0.28 ) }
    dend_5 { pt3dadd( -13.3133, -16.7881, -24.3727, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( -14.092, -14.7225, -25.3805, 0.83 ) }
    dend_5 { pt3dadd( -15.087, -12.1664, -26.6399, 0.28 ) }
    dend_5 { pt3dadd( -15.3927, -11.3221, -27.1781, 0.28 ) }
    dend_5 { pt3dadd( -15.7044, -10.3656, -27.8687, 0.28 ) }
    dend_5 { pt3dadd( -15.8222, -9.85621, -28.276, 0.56 ) }
    dend_5 { pt3dadd( -16.0592, -8.43858, -29.4429, 0.28 ) }
    dend_5 { pt3dadd( -16.1604, -7.7371, -30.0394, 0.56 ) }
    dend_5 { pt3dadd( -16.5573, -4.35478, -33.0507, 0.56 ) }
    dend_5 { pt3dadd( -16.7236, -3.03547, -34.1488, 0.83 ) }
    dend_5 { pt3dadd( -17.0805, -0.759371, -35.9022, 0.28 ) }
    dend_5 { pt3dadd( -17.4906, 1.14925, -37.2782, 0.56 ) }
    dend_5 { pt3dadd( -17.7271, 2.01426, -37.8265, 0.28 ) }
    dend_5 { pt3dadd( -17.9297, 2.64734, -38.1873, 0.56 ) }
    dend_5 { pt3dadd( -18.6215, 4.32803, -38.9608, 0.28 ) }
    dend_5 { pt3dadd( -19.1601, 5.4342, -39.5005, 0.56 ) }
    dend_5 { pt3dadd( -19.679, 6.38822, -39.9667, 0.83 ) }
    dend_5 { pt3dadd( -20.3401, 7.60126, -40.6152, 0.83 ) }
    dend_5 { pt3dadd( -21.3654, 9.4963, -41.6638, 0.28 ) }
    dend_5 { pt3dadd( -21.6465, 10.0191, -41.9565, 0.56 ) }
    dend_5 { pt3dadd( -21.963, 10.6225, -42.2948, 0.28 ) }
    dend_5 { pt3dadd( -22.6907, 11.9074, -43.0085, 0.56 ) }
    dend_5 { pt3dadd( -23.1344, 12.6875, -43.4217, 0.28 ) }
    dend_5 { pt3dadd( -23.4397, 13.1484, -43.6757, 0.56 ) }
    dend_5 { pt3dadd( -24.4001, 14.5053, -44.3714, 0.28 ) }
    dend_5 { pt3dadd( -24.5148, 14.6687, -44.4568, 0.56 ) }
    dend_5 { pt3dadd( -25.2033, 15.6138, -44.963, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.2763, -35.1258, -12.1369, 0.28 ) }
    dend_3 { pt3dadd( -10.6709, -38.8154, -10.8067, 0.28 ) }
    dend_3 { pt3dadd( -12.1846, -41.3302, -9.9337, 0.56 ) }
    dend_3 { pt3dadd( -13.2687, -43.1949, -9.2906, 0.56 ) }
    dend_3 { pt3dadd( -14.9314, -46.0952, -8.31612, 0.56 ) }
    dend_3 { pt3dadd( -17.0651, -50.06, -6.99066, 0.28 ) }
    dend_3 { pt3dadd( -18.8311, -53.5036, -5.86762, 0.28 ) }
    dend_3 { pt3dadd( -20.0215, -55.9977, -5.14951, 0.83 ) }
    dend_3 { pt3dadd( -20.7951, -57.7454, -4.6137, 0.28 ) }
    dend_3 { pt3dadd( -21.2302, -58.7264, -4.31035, 0.83 ) }
    dend_3 { pt3dadd( -22.4766, -61.6227, -3.40768, 0.28 ) }
    dend_3 { pt3dadd( -23.0321, -62.8787, -3.07732, 0.28 ) }
    dend_3 { pt3dadd( -23.5355, -63.8604, -2.91586, 0.56 ) }
    dend_3 { pt3dadd( -24.3894, -65.3428, -2.75932, 0.28 ) }
    dend_3 { pt3dadd( -25.331, -66.9913, -2.80882, 0.56 ) }
    dend_3 { pt3dadd( -27.2288, -70.3107, -3.20384, 0.28 ) }
    dend_3 { pt3dadd( -27.955, -71.5755, -3.45794, 0.83 ) }
    dend_3 { pt3dadd( -30.3569, -75.3268, -4.62955, 0.28 ) }
    dend_3 { pt3dadd( -31.7132, -77.2723, -5.40172, 0.56 ) }
    dend_3 { pt3dadd( -34.042, -80.456, -7.0034, 0.28 ) }
    dend_3 { pt3dadd( -34.4272, -80.9603, -7.29926, 0.83 ) }
    dend_3 { pt3dadd( -35.4072, -82.2029, -8.13609, 0.83 ) }
    dend_3 { pt3dadd( -39.7624, -87.4244, -11.8318, 0.28 ) }
    dend_3 { pt3dadd( -40.5322, -88.2592, -12.4531, 0.56 ) }
    dend_3 { pt3dadd( -42.366, -89.9801, -13.8252, 0.28 ) }
    dend_3 { pt3dadd( -42.9354, -90.427, -14.1746, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.2763, -35.1258, -12.1369, 0.56 ) }
    dend_2 { pt3dadd( -6.26988, -37.2261, -15.5972, 0.56 ) }
    dend_2 { pt3dadd( -5.16104, -38.4693, -17.1074, 0.56 ) }
    dend_2 { pt3dadd( -3.80378, -40.1321, -18.6518, 0.56 ) }
    dend_2 { pt3dadd( -2.86382, -41.4507, -19.6739, 1.11 ) }
    dend_2 { pt3dadd( -1.32334, -43.8867, -21.3219, 1.11 ) }
    dend_2 { pt3dadd( -0.15977, -45.9593, -22.7163, 0.56 ) }
    dend_2 { pt3dadd( 0.901543, -48.3544, -23.929, 0.56 ) }
    dend_2 { pt3dadd( 1.60058, -50.1471, -24.75, 0.28 ) }
    dend_2 { pt3dadd( 1.96484, -51.5504, -25.2756, 0.56 ) }
    dend_2 { pt3dadd( 2.12599, -52.3994, -25.6115, 0.28 ) }
    dend_2 { pt3dadd( 2.50996, -54.9589, -26.4862, 0.56 ) }
    dend_2 { pt3dadd( 2.8571, -57.0029, -27.1729, 0.28 ) }
    dend_2 { pt3dadd( 2.9578, -57.6227, -27.3739, 0.83 ) }
    dend_2 { pt3dadd( 3.46434, -60.4373, -28.2293, 0.83 ) }
    dend_2 { pt3dadd( 3.82376, -62.1327, -28.7116, 0.56 ) }
    dend_2 { pt3dadd( 4.57704, -65.2888, -29.5119, 0.56 ) }
    dend_2 { pt3dadd( 5.35606, -68.3897, -30.1591, 1.39 ) }
    dend_2 { pt3dadd( 6.31377, -71.9606, -30.8047, 0.28 ) }
    dend_2 { pt3dadd( 6.45659, -72.5068, -30.8879, 0.83 ) }
    dend_2 { pt3dadd( 6.9799, -74.67, -31.1352, 0.28 ) }
    dend_2 { pt3dadd( 7.37665, -76.6362, -31.2437, 0.28 ) }
    dend_2 { pt3dadd( 7.52869, -77.5291, -31.2644, 0.83 ) }
    dend_2 { pt3dadd( 7.8746, -80.3572, -31.2361, 0.28 ) }
    dend_2 { pt3dadd( 8.05758, -82.0852, -31.2232, 0.28 ) }
    dend_2 { pt3dadd( 8.16327, -83.2583, -31.2786, 0.83 ) }
    dend_2 { pt3dadd( 8.33069, -86.327, -31.5132, 0.28 ) }
    dend_2 { pt3dadd( 8.34252, -87.2188, -31.6119, 0.83 ) }
    dend_2 { pt3dadd( 8.36884, -89.2389, -31.8841, 1.39 ) }
    dend_2 { pt3dadd( 8.32586, -91.4167, -32.1773, 1.39 ) }
    dend_2 { pt3dadd( 8.22078, -96.9252, -32.8631, 0.28 ) }
    dend_2 { pt3dadd( 8.20638, -98.0883, -32.9951, 0.83 ) }
    dend_2 { pt3dadd( 8.10127, -102.345, -33.5015, 0.28 ) }
    dend_2 { pt3dadd( 8.03724, -105.025, -33.748, 0.28 ) }
    dend_2 { pt3dadd( 8.10901, -108.168, -33.8796, 0.83 ) }
    dend_2 { pt3dadd( 8.20634, -110.099, -33.8633, 0.28 ) }
    dend_2 { pt3dadd( 8.33501, -111.713, -33.7939, 0.83 ) }
    dend_2 { pt3dadd( 8.72238, -114.788, -33.5473, 0.28 ) }
    dend_2 { pt3dadd( 9.0523, -116.836, -33.3241, 0.83 ) }
    dend_2 { pt3dadd( 10.2723, -124.166, -32.405, 0.28 ) }
    dend_2 { pt3dadd( 10.4948, -125.414, -32.2404, 0.83 ) }
    dend_2 { pt3dadd( 10.7799, -127.738, -32.0388, 0.83 ) }
    dend_2 { pt3dadd( 11.0492, -132.52, -31.8338, 0.28 ) }
    dend_2 { pt3dadd( 11.0547, -133.079, -31.8557, 0.56 ) }
    dend_2 { pt3dadd( 10.9563, -135.061, -32.1192, 0.28 ) }
    dend_2 { pt3dadd( 10.8454, -136.766, -32.5141, 1.39 ) }
    dend_2 { pt3dadd( 10.6442, -143.563, -34.4447, 0.28 ) }
    dend_2 { pt3dadd( 10.7369, -145.866, -35.2594, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 11.2293, -150.414, -37.1669, 0.28 ) }
    dend_2 { pt3dadd( 11.418, -151.186, -37.4862, 0.83 ) }
    dend_2 { pt3dadd( 13.443, -156.515, -39.645, 0.28 ) }
    dend_2 { pt3dadd( 13.9638, -157.512, -40.0241, 0.83 ) }
    dend_2 { pt3dadd( 16.1377, -160.655, -40.9449, 0.28 ) }
    dend_2 { pt3dadd( 16.6888, -161.368, -41.1107, 0.56 ) }
    dend_2 { pt3dadd( 20.9768, -166.582, -41.8712, 0.28 ) }
    dend_2 { pt3dadd( 21.5909, -167.316, -41.9388, 0.83 ) }
    dend_2 { pt3dadd( 22.3622, -168.271, -41.9268, 0.83 ) }
    dend_2 { pt3dadd( 24.4751, -171.057, -41.7427, 0.28 ) }
    dend_2 { pt3dadd( 24.7478, -171.442, -41.6902, 0.56 ) }
    dend_2 { pt3dadd( 25.5394, -172.618, -41.4965, 0.28 ) }
    dend_2 { pt3dadd( 25.9718, -173.331, -41.3284, 0.83 ) }
    dend_2 { pt3dadd( 28.1598, -176.981, -40.5283, 0.28 ) }
    dend_2 { pt3dadd( 28.6364, -177.737, -40.3787, 0.56 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 15/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -37.5844, 55.5198, 1.48041, 0.56 ) }
    dend_45 { pt3dadd( -40.7339, 55.293, 1.72768, 0.56 ) }
    dend_45 { pt3dadd( -44.7238, 55.0056, 2.04093, 0.56 ) }
    dend_45 { pt3dadd( -56.0891, 54.6291, 4.17719, 0.56 ) }
    dend_45 { pt3dadd( -67.5476, 53.0756, 4.26677, 0.56 ) }
    dend_45 { pt3dadd( -78.6101, 49.7877, 4.11766, 0.56 ) }
    dend_45 { pt3dadd( -90.0332, 49.0987, 2.41026, 0.56 ) }
    dend_45 { pt3dadd( -101.248, 48.6705, -0.409039, 0.56 ) }
    dend_45 { pt3dadd( -112.424, 48.3006, -3.38817, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.5844, 55.5198, 1.48041, 0.56 ) }
    dend_44 { pt3dadd( -39.4479, 55.0261, 1.83078, 0.56 ) }
    dend_44 { pt3dadd( -40.3762, 54.7801, 2.0053, 0.56 ) }
    dend_44 { pt3dadd( -41.2757, 54.5418, 2.17442, 0.56 ) }
    dend_44 { pt3dadd( -44.0463, 53.8077, 2.69533, 0.56 ) }
    dend_44 { pt3dadd( -46.1549, 53.249, 3.09177, 0.56 ) }
    dend_44 { pt3dadd( -50.8742, 51.9985, 3.97905, 0.28 ) }
    dend_44 { pt3dadd( -57.018, 49.9131, 6.03989, 0.28 ) }
    dend_44 { pt3dadd( -62.6913, 46.7045, 7.91726, 0.28 ) }
    dend_44 { pt3dadd( -68.5992, 43.8371, 9.65166, 0.28 ) }
    dend_44 { pt3dadd( -74.2538, 40.5713, 11.4813, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 35/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.62912, 12.6633, 5.51322, 0.56 ) }
    dend_42 { pt3dadd( 0.0343286, 12.6535, 7.33206, 0.56 ) }
    dend_42 { pt3dadd( -1.84477, 12.9268, 8.05648, 0.56 ) }
    dend_42 { pt3dadd( -4.12261, 13.4746, 8.83513, 0.56 ) }
    dend_42 { pt3dadd( -6.39287, 14.0972, 9.48546, 0.83 ) }
    dend_42 { pt3dadd( -9.8234, 15.0038, 10.2343, 0.56 ) }
    dend_42 { pt3dadd( -10.8396, 15.3054, 10.4085, 0.83 ) }
    dend_42 { pt3dadd( -13.9346, 16.5722, 10.4159, 0.28 ) }
    dend_42 { pt3dadd( -14.644, 17.1166, 10.4281, 0.83 ) }
    dend_42 { pt3dadd( -15.5787, 18.6443, 10.4801, 0.83 ) }
    dend_42 { pt3dadd( -16.3506, 20.9103, 10.6314, 0.56 ) }
    dend_42 { pt3dadd( -16.6592, 22.8614, 10.8439, 0.56 ) }
    dend_42 { pt3dadd( -16.9955, 26.6205, 11.3139, 0.56 ) }
    dend_42 { pt3dadd( -17.0425, 33.2585, 12.3109, 0.56 ) }
    dend_42 { pt3dadd( -16.9024, 36.6145, 12.8767, 0.56 ) }
    dend_42 { pt3dadd( -16.7576, 37.9915, 13.1394, 0.56 ) }
    dend_42 { pt3dadd( -16.0904, 42.0163, 14.043, 0.56 ) }
    dend_42 { pt3dadd( -22.4252, 49.93, 14.927, 0.56 ) }
    dend_42 { pt3dadd( -28.5645, 58.025, 15.3296, 0.56 ) }
    dend_42 { pt3dadd( -35.3018, 65.605, 14.359, 0.56 ) }
    dend_42 { pt3dadd( -40.9964, 73.8331, 12.596, 0.56 ) }
    dend_42 { pt3dadd( -46.7799, 81.9287, 10.5079, 0.56 ) }
    dend_42 { pt3dadd( -51.1035, 90.6753, 7.75924, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 3.62912, 12.6633, 5.51322, 0.56 ) }
    dend_35 { pt3dadd( 6.9661, 12.8483, 5.96094, 0.56 ) }
    dend_35 { pt3dadd( 9.6191, 13.1117, 6.49683, 0.56 ) }
    dend_35 { pt3dadd( 14.0229, 13.5489, 7.38637, 0.56 ) }
    dend_35 { pt3dadd( 17.68, 13.912, 8.12509, 0.56 ) }
    dend_35 { pt3dadd( 19.9813, 14.1405, 8.58993, 0.56 ) }
    dend_35 { pt3dadd( 22.8769, 14.428, 9.17484, 0.56 ) }
    dend_35 { pt3dadd( 25.187, 14.625, 9.89065, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 56.589, 14.1241, -39.7162, 0.56 ) }
    dend_29 { pt3dadd( 59.5252, 15.927, -41.5994, 0.56 ) }
    dend_29 { pt3dadd( 60.9565, 16.8058, -42.5172, 0.56 ) }
    dend_29 { pt3dadd( 62.6186, 17.8264, -43.5832, 0.28 ) }
    dend_29 { pt3dadd( 63.8558, 18.586, -44.3767, 0.28 ) }
    dend_29 { pt3dadd( 65.7316, 19.7378, -45.5796, 0.56 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 72/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 56.589, 14.1241, -39.7162, 0.83 ) }
    dend_28 { pt3dadd( 57.6681, 13.1755, -42.1467, 0.83 ) }
    dend_28 { pt3dadd( 58.5187, 12.5809, -43.9253, 0.83 ) }
    dend_28 { pt3dadd( 59.4675, 12.2816, -45.5489, 0.83 ) }
    dend_28 { pt3dadd( 60.3724, 12.1473, -46.897, 0.56 ) }
    dend_28 { pt3dadd( 61.3709, 12.0016, -48.1497, 0.56 ) }
    dend_28 { pt3dadd( 62.4749, 11.863, -49.3652, 0.28 ) }
    dend_28 { pt3dadd( 63.2034, 11.8621, -49.9841, 0.83 ) }
    dend_28 { pt3dadd( 65.6667, 11.9936, -51.7017, 0.83 ) }
    dend_28 { pt3dadd( 67.0894, 12.0772, -52.6021, 0.83 ) }
    dend_28 { pt3dadd( 69.1376, 12.2281, -54.0487, 0.56 ) }
    dend_28 { pt3dadd( 70.0179, 12.2563, -54.7355, 0.56 ) }
    dend_28 { pt3dadd( 70.8506, 12.279, -55.469, 0.56 ) }
    dend_28 { pt3dadd( 72.6718, 12.3803, -57.396, 0.56 ) }
    dend_28 { pt3dadd( 73.6788, 12.5271, -58.6644, 0.83 ) }
    dend_28 { pt3dadd( 75.7921, 13.1494, -61.6223, 0.56 ) }
    dend_28 { pt3dadd( 76.2852, 13.3802, -62.3986, 0.28 ) }
    dend_28 { pt3dadd( 77.0098, 13.7991, -63.5652, 1.11 ) }
    dend_28 { pt3dadd( 79.3143, 15.3018, -67.1282, 0.56 ) }
    dend_28 { pt3dadd( 80.3604, 16.1135, -68.5457, 0.56 ) }
    dend_28 { pt3dadd( 81.3344, 16.909, -69.7332, 1.39 ) }
    dend_28 { pt3dadd( 84.2908, 19.3727, -73.1026, 0.28 ) }
    dend_28 { pt3dadd( 85.9115, 20.7409, -74.8705, 0.28 ) }
    dend_28 { pt3dadd( 87.84, 22.3807, -76.8787, 1.39 ) }
    dend_28 { pt3dadd( 92.5508, 26.4594, -81.4968, 0.28 ) }
    dend_28 { pt3dadd( 93.8242, 27.5194, -82.7029, 0.83 ) }
    dend_28 { pt3dadd( 95.3194, 28.7316, -84.0688, 0.28 ) }
    dend_28 { pt3dadd( 95.6064, 28.9528, -84.3188, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 97.4559, 30.2954, -85.9453, 0.28 ) }
    dend_28 { pt3dadd( 98.2663, 30.827, -86.6457, 1.11 ) }
    dend_28 { pt3dadd( 101.56, 32.5951, -89.4244, 0.28 ) }
    dend_28 { pt3dadd( 102.774, 33.147, -90.3975, 0.83 ) }
    dend_28 { pt3dadd( 105.52, 34.1235, -92.4108, 0.28 ) }
    dend_28 { pt3dadd( 105.691, 34.1642, -92.5423, 0.56 ) }
    dend_28 { pt3dadd( 106.919, 34.3039, -93.5046, 0.28 ) }
    dend_28 { pt3dadd( 108.151, 34.3084, -94.5509, 0.56 ) }
    dend_28 { pt3dadd( 109.005, 34.2015, -95.3471, 0.28 ) }
    dend_28 { pt3dadd( 110.096, 34.0265, -96.4461, 0.83 ) }
    dend_28 { pt3dadd( 112.624, 33.6343, -99.0541, 0.28 ) }
    dend_28 { pt3dadd( 112.777, 33.6158, -99.2188, 0.56 ) }
    dend_28 { pt3dadd( 114.226, 33.5107, -100.883, 0.28 ) }
    dend_28 { pt3dadd( 114.683, 33.5016, -101.412, 0.56 ) }
    dend_28 { pt3dadd( 116.456, 33.584, -103.498, 0.28 ) }
    dend_28 { pt3dadd( 117.222, 33.645, -104.412, 0.83 ) }
    dend_28 { pt3dadd( 117.354, 33.6854, -104.591, 0.83 ) }
    dend_28 { pt3dadd( 119.023, 34.3663, -107.177, 0.28 ) }
    dend_28 { pt3dadd( 119.25, 34.4897, -107.538, 0.28 ) }
    dend_28 { pt3dadd( 119.512, 34.6512, -107.965, 0.83 ) }
    dend_28 { pt3dadd( 119.627, 34.7241, -108.146, 0.83 ) }
    dend_28 { pt3dadd( 124.395, 37.9365, -115.847, 0.28 ) }
    dend_28 { pt3dadd( 125.259, 38.5445, -117.242, 0.83 ) }
    dend_28 { pt3dadd( 128.016, 40.6115, -121.712, 0.28 ) }
    dend_28 { pt3dadd( 128.17, 40.7271, -121.961, 0.28 ) }
    dend_28 { pt3dadd( 128.85, 41.2537, -123.05, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.7119, 8.01978, -11.0174, 0.56 ) }
    dend_26 { pt3dadd( 27.4404, 8.33151, -11.3775, 0.56 ) }
    dend_26 { pt3dadd( 29.5475, 8.51864, -11.6009, 0.56 ) }
    dend_26 { pt3dadd( 30.6288, 8.51024, -11.6579, 0.56 ) }
    dend_26 { pt3dadd( 32.3222, 8.38116, -11.7174, 0.56 ) }
    dend_26 { pt3dadd( 33.7429, 8.20929, -11.7066, 0.56 ) }
    dend_26 { pt3dadd( 36.7457, 7.6605, -11.5167, 0.56 ) }
    dend_26 { pt3dadd( 38.2282, 7.1858, -11.2602, 0.56 ) }
    dend_26 { pt3dadd( 39.4461, 6.65968, -10.9453, 0.56 ) }
    dend_26 { pt3dadd( 40.2726, 6.24118, -10.647, 0.56 ) }
    dend_26 { pt3dadd( 41.6016, 5.4402, -10.0335, 0.83 ) }
    dend_26 { pt3dadd( 43.0076, 4.41274, -9.28821, 0.56 ) }
    dend_26 { pt3dadd( 43.9352, 3.63728, -8.74625, 0.56 ) }
    dend_26 { pt3dadd( 45.1012, 2.73261, -8.01658, 0.56 ) }
    dend_26 { pt3dadd( 46.0485, 2.08514, -7.41497, 0.56 ) }
    dend_26 { pt3dadd( 46.6928, 1.71131, -7.0325, 0.56 ) }
    dend_26 { pt3dadd( 47.3143, 1.38069, -6.73247, 0.83 ) }
    dend_26 { pt3dadd( 48.2393, 1.00644, -6.39498, 0.56 ) }
    dend_26 { pt3dadd( 48.9007, 0.785429, -6.18716, 0.56 ) }
    dend_26 { pt3dadd( 49.9893, 0.443253, -5.89082, 0.83 ) }
    dend_26 { pt3dadd( 52.1947, -0.179006, -5.33967, 0.83 ) }
    dend_26 { pt3dadd( 54.9787, -0.881458, -4.82751, 0.56 ) }
    dend_26 { pt3dadd( 56.6759, -1.31173, -4.6222, 0.56 ) }
    dend_26 { pt3dadd( 57.6618, -1.54639, -4.56666, 0.56 ) }
    dend_26 { pt3dadd( 58.6438, -1.7496, -4.61529, 0.56 ) }
    dend_26 { pt3dadd( 59.6954, -1.91413, -4.79004, 0.56 ) }
    dend_26 { pt3dadd( 61.7663, -2.02582, -5.51514, 0.83 ) }
    dend_26 { pt3dadd( 63.1638, -1.96676, -6.059, 0.56 ) }
    dend_26 { pt3dadd( 64.1602, -1.95336, -6.45434, 0.83 ) }
    dend_26 { pt3dadd( 66.1137, -1.87607, -7.18395, 0.56 ) }
    dend_26 { pt3dadd( 67.0158, -1.80915, -7.49182, 0.56 ) }
    dend_26 { pt3dadd( 68.2178, -1.69109, -7.8338, 0.56 ) }
    dend_26 { pt3dadd( 70.8108, -1.41532, -8.32389, 0.28 ) }
    dend_26 { pt3dadd( 73.5333, -1.19957, -8.74983, 0.28 ) }
    dend_26 { pt3dadd( 74.7725, -1.18235, -8.90407, 0.28 ) }
    dend_26 { pt3dadd( 76.1526, -1.20267, -9.00961, 0.28 ) }
    dend_26 { pt3dadd( 77.2861, -1.218, -9.11033, 0.28 ) }
    dend_26 { pt3dadd( 78.2182, -1.25357, -9.21601, 0.56 ) }
    dend_26 { pt3dadd( 80.6527, -1.40235, -9.70726, 0.28 ) }
    dend_26 { pt3dadd( 81.6468, -1.51581, -9.81953, 0.28 ) }
    dend_26 { pt3dadd( 82.6658, -1.76689, -9.928, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.7119, 8.01978, -11.0174, 0.56 ) }
    dend_21 { pt3dadd( 29.2741, 5.36028, -10.798, 0.56 ) }
    dend_21 { pt3dadd( 31.3153, 3.83629, -10.6723, 0.83 ) }
    dend_21 { pt3dadd( 33.1003, 2.5036, -10.5624, 0.83 ) }
    dend_21 { pt3dadd( 35.106, 1.00614, -10.4389, 0.56 ) }
    dend_21 { pt3dadd( 38.1894, -1.29595, -10.249, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 21.3275, -46.6182, 8.04317, 0.56 ) }
    dend_17 { pt3dadd( 20.206, -47.9472, 8.70953, 0.56 ) }
    dend_17 { pt3dadd( 19.0647, -49.2997, 9.38764, 0.56 ) }
    dend_17 { pt3dadd( 14.6584, -56.4738, 13.278, 0.56 ) }
    dend_17 { pt3dadd( 9.09905, -63.3038, 16.2481, 0.56 ) }
    dend_17 { pt3dadd( 3.71608, -70.5454, 18.4265, 0.56 ) }
    dend_17 { pt3dadd( -0.171832, -78.582, 20.8363, 0.56 ) }
    dend_17 { pt3dadd( -3.47736, -86.4388, 24.4225, 0.56 ) }
    dend_17 { pt3dadd( -4.86172, -94.5936, 28.5222, 0.56 ) }
    dend_17 { pt3dadd( -5.22936, -103.404, 31.1847, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 83/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 21.3275, -46.6182, 8.04317, 0.56 ) }
    dend_16 { pt3dadd( 22.9212, -46.7187, 7.09521, 0.56 ) }
    dend_16 { pt3dadd( 26.3291, -46.9133, 5.01705, 0.56 ) }
    dend_16 { pt3dadd( 28.3481, -47.0286, 3.7859, 0.56 ) }
    dend_16 { pt3dadd( 30.4177, -47.1468, 2.52383, 0.56 ) }
    dend_16 { pt3dadd( 33.2407, -47.308, 0.802341, 0.56 ) }
    dend_16 { pt3dadd( 36.5688, -47.498, -1.22716, 0.56 ) }
    dend_16 { pt3dadd( 38.7775, -47.726, -2.64247, 0.56 ) }
    dend_16 { pt3dadd( 46.5832, -50.3712, -9.23407, 0.56 ) }
    dend_16 { pt3dadd( 55.3316, -50.8988, -15.1095, 0.56 ) }
    dend_16 { pt3dadd( 63.7645, -51.2569, -21.4381, 0.56 ) }
    dend_16 { pt3dadd( 72.1898, -50.9314, -27.7689, 0.56 ) }
    dend_16 { pt3dadd( 81.489, -50.0218, -32.65, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 32.0235, -44.1135, 2.12652, 0.56 ) }
    dend_14 { pt3dadd( 33.8589, -46.2029, 1.39421, 0.56 ) }
    dend_14 { pt3dadd( 34.9151, -47.4486, 0.997498, 0.28 ) }
    dend_14 { pt3dadd( 36.4284, -49.4955, 0.411343, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 38.4729, -52.3126, -0.39977, 0.28 ) }
    dend_14 { pt3dadd( 38.7018, -52.6282, -0.488701, 0.56 ) }
    dend_14 { pt3dadd( 39.509, -53.7744, -0.787312, 0.28 ) }
    dend_14 { pt3dadd( 39.8813, -54.2902, -0.924282, 0.83 ) }
    dend_14 { pt3dadd( 41.6669, -56.742, -1.59672, 0.28 ) }
    dend_14 { pt3dadd( 42.3804, -57.6591, -1.86499, 0.56 ) }
    dend_14 { pt3dadd( 43.429, -58.912, -2.25775, 0.28 ) }
    dend_14 { pt3dadd( 44.187, -59.7882, -2.54669, 0.83 ) }
    dend_14 { pt3dadd( 46.0022, -61.7006, -3.26912, 0.83 ) }
    dend_14 { pt3dadd( 47.9146, -63.5117, -4.02535, 0.28 ) }
    dend_14 { pt3dadd( 49.0944, -64.4332, -4.46193, 0.56 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 32.0235, -44.1135, 2.12652, 0.56 ) }
    dend_13 { pt3dadd( 35.0441, -44.0939, 3.16768, 0.56 ) }
    dend_13 { pt3dadd( 36.543, -44.0182, 3.55735, 0.56 ) }
    dend_13 { pt3dadd( 38.9084, -43.8384, 4.00508, 0.56 ) }
    dend_13 { pt3dadd( 41.4039, -43.5241, 4.38048, 0.56 ) }
    dend_13 { pt3dadd( 44.1627, -43.1811, 4.53087, 0.83 ) }
    dend_13 { pt3dadd( 47.0099, -42.8371, 4.64232, 0.56 ) }
    dend_13 { pt3dadd( 48.6916, -42.6356, 4.5218, 0.56 ) }
    dend_13 { pt3dadd( 50.1782, -42.5473, 4.33908, 0.56 ) }
    dend_13 { pt3dadd( 51.7451, -42.4335, 4.13052, 0.56 ) }
    dend_13 { pt3dadd( 54.824, -41.9224, 3.63257, 0.56 ) }
    dend_13 { pt3dadd( 56.9414, -41.4356, 3.37655, 0.56 ) }
    dend_13 { pt3dadd( 58.69, -41.0096, 3.25701, 0.56 ) }
    dend_13 { pt3dadd( 60.9921, -40.5004, 3.15088, 0.56 ) }
    dend_13 { pt3dadd( 64.1787, -39.7446, 3.08516, 0.56 ) }
    dend_13 { pt3dadd( 65.8218, -39.3246, 3.09772, 0.56 ) }
    dend_13 { pt3dadd( 67.8792, -38.6063, 3.23907, 0.56 ) }
    dend_13 { pt3dadd( 70.4938, -37.5418, 3.26388, 0.28 ) }
    dend_13 { pt3dadd( 80.0776, -34.6949, 3.72187, 0.28 ) }
    dend_13 { pt3dadd( 89.1092, -30.4788, 3.20583, 0.28 ) }
    dend_13 { pt3dadd( 97.4285, -25.6436, 0.64037, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 25.187, 14.625, 9.89065, 0.56 ) }
    dend_41 { pt3dadd( 29.3723, 15.9559, 5.85066, 0.56 ) }
    dend_41 { pt3dadd( 31.5557, 16.7719, 4.06045, 0.56 ) }
    dend_41 { pt3dadd( 32.037, 16.9649, 3.67579, 0.56 ) }
    dend_41 { pt3dadd( 33.1961, 17.4172, 2.7398, 0.28 ) }
    dend_41 { pt3dadd( 34.9372, 18.1189, 1.36004, 0.28 ) }
    dend_41 { pt3dadd( 36.1629, 18.6517, 0.39915, 0.83 ) }
    dend_41 { pt3dadd( 38.5247, 19.7946, -1.17771, 0.28 ) }
    dend_41 { pt3dadd( 39.8083, 20.6186, -2.1264, 0.56 ) }
    dend_41 { pt3dadd( 41.5038, 21.8822, -3.45844, 0.28 ) }
    dend_41 { pt3dadd( 42.5528, 22.7393, -4.36008, 0.83 ) }
    dend_41 { pt3dadd( 43.3419, 23.494, -5.08794, 0.28 ) }
    dend_41 { pt3dadd( 44.7355, 24.9531, -6.42259, 0.28 ) }
    dend_41 { pt3dadd( 46.4986, 26.9127, -8.0254, 0.28 ) }
    dend_41 { pt3dadd( 47.8726, 28.6802, -9.19255, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 47/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 25.187, 14.625, 9.89065, 0.56 ) }
    dend_36 { pt3dadd( 26.5397, 14.803, 11.5714, 0.56 ) }
    dend_36 { pt3dadd( 27.5716, 14.9388, 12.8536, 1.11 ) }
    dend_36 { pt3dadd( 29.3364, 15.171, 15.0464, 0.56 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 51/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 38.1894, -1.29595, -10.249, 0.56 ) }
    dend_23 { pt3dadd( 40.7912, -5.82259, -11.0319, 0.56 ) }
    dend_23 { pt3dadd( 42.1354, -7.62448, -11.2794, 0.56 ) }
    dend_23 { pt3dadd( 42.6693, -8.34013, -11.3778, 0.56 ) }
    dend_23 { pt3dadd( 43.8586, -9.93446, -11.5968, 0.28 ) }
    dend_23 { pt3dadd( 45.714, -12.4216, -11.9385, 0.56 ) }
    dend_23 { pt3dadd( 47.2236, -14.4453, -12.2166, 0.28 ) }
    dend_23 { pt3dadd( 48.4837, -15.6155, -12.1999, 0.56 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 59/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 38.1894, -1.29595, -10.249, 0.56 ) }
    dend_22 { pt3dadd( 43.3429, -3.4069, -6.0223, 0.56 ) }
    dend_22 { pt3dadd( 44.6763, -3.95309, -4.92868, 0.56 ) }
    dend_22 { pt3dadd( 45.5031, -4.29173, -4.25063, 0.56 ) }
    dend_22 { pt3dadd( 47.6889, -5.18708, -2.45788, 0.56 ) }
    dend_22 { pt3dadd( 49.4721, -5.9175, -0.995392, 0.56 ) }
    dend_22 { pt3dadd( 57.6639, -11.2436, 4.44646, 0.56 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 29.3364, 15.171, 15.0464, 0.56 ) }
    dend_40 { pt3dadd( 30.4575, 16.6089, 15.209, 0.56 ) }
    dend_40 { pt3dadd( 31.9403, 18.4523, 15.417, 0.56 ) }
    dend_40 { pt3dadd( 34.292, 21.376, 15.747, 0.28 ) }
    dend_40 { pt3dadd( 37.3172, 25.1371, 16.1715, 0.28 ) }
    dend_40 { pt3dadd( 38.4849, 26.5887, 16.3354, 0.28 ) }
    dend_40 { pt3dadd( 39.6722, 28.0648, 16.502, 0.28 ) }
    dend_40 { pt3dadd( 40.4932, 29.0536, 16.617, 0.56 ) }
    dend_40 { pt3dadd( 45.2781, 35.5634, 17.7288, 0.56 ) }
    dend_40 { pt3dadd( 49.2365, 42.2868, 20.0229, 0.56 ) }
    dend_40 { pt3dadd( 54.1313, 48.1551, 22.8952, 0.56 ) }
    dend_40 { pt3dadd( 60.1068, 52.6912, 26.2208, 0.56 ) }
    dend_40 { pt3dadd( 65.92, 57.2137, 29.8346, 0.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 79/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 29.3364, 15.171, 15.0464, 0.83 ) }
    dend_37 { pt3dadd( 29.8607, 12.6316, 15.7238, 0.83 ) }
    dend_37 { pt3dadd( 30.1767, 11.1008, 16.1321, 0.83 ) }
    dend_37 { pt3dadd( 33.7723, 1.0974, 19.8426, 0.83 ) }
    dend_37 { pt3dadd( 37.2002, -9.1629, 22.9151, 0.83 ) }
    dend_37 { pt3dadd( 39.6819, -19.9283, 24.8742, 0.83 ) }
    dend_37 { pt3dadd( 40.7272, -30.8813, 27.0418, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 48.4837, -15.6155, -12.1999, 0.56 ) }
    dend_25 { pt3dadd( 49.9628, -15.0594, -13.4466, 0.56 ) }
    dend_25 { pt3dadd( 51.7898, -14.3726, -14.9863, 0.28 ) }
    dend_25 { pt3dadd( 52.6804, -14.0378, -15.7369, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 48.4837, -15.6155, -12.1999, 0.28 ) }
    dend_24 { pt3dadd( 51.302, -18.5839, -9.9244, 0.28 ) }
    dend_24 { pt3dadd( 53.5182, -20.0057, -8.64471, 0.56 ) }
    dend_24 { pt3dadd( 55.1132, -20.7549, -8.19705, 0.56 ) }
    dend_24 { pt3dadd( 57.9465, -21.7574, -7.92169, 0.56 ) }
    dend_24 { pt3dadd( 59.1465, -22.1619, -7.95331, 0.56 ) }
    dend_24 { pt3dadd( 62.8635, -23.3145, -8.27381, 0.83 ) }
    dend_24 { pt3dadd( 67.7552, -24.3999, -9.36317, 0.83 ) }
    dend_24 { pt3dadd( 73.1696, -25.2662, -10.8779, 0.56 ) }
    dend_24 { pt3dadd( 74.8017, -25.5076, -11.4213, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( 78.1599, -25.8806, -12.8181, 0.56 ) }
    dend_24 { pt3dadd( 80.757, -26.1839, -14.083, 0.28 ) }
    dend_24 { pt3dadd( 82.5765, -26.4725, -15.0869, 0.28 ) }
    dend_24 { pt3dadd( 84.0871, -26.7637, -15.929, 0.56 ) }
    dend_24 { pt3dadd( 86.8563, -27.2295, -17.2794, 0.28 ) }
    dend_24 { pt3dadd( 90.2596, -27.731, -19.0954, 0.28 ) }
    dend_24 { pt3dadd( 91.3572, -27.8172, -19.7619, 0.56 ) }
    dend_24 { pt3dadd( 93.5531, -28.0289, -21.3546, 0.83 ) }
    dend_24 { pt3dadd( 94.7967, -28.1583, -22.3488, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 40.7272, -30.8813, 27.0418, 0.56 ) }
    dend_39 { pt3dadd( 44.2542, -42.844, 28.4763, 0.56 ) }
    dend_39 { pt3dadd( 50.1941, -53.728, 30.7479, 0.56 ) }
    dend_39 { pt3dadd( 53.8131, -65.4736, 33.3502, 0.56 ) }
    dend_39 { pt3dadd( 55.092, -77.6718, 35.9534, 0.56 ) }
    dend_39 { pt3dadd( 56.596, -90.1006, 36.4657, 0.56 ) }
    dend_39 { pt3dadd( 60.3124, -101.921, 38.5191, 0.56 ) }
    dend_39 { pt3dadd( 65.4391, -112.989, 41.6602, 0.56 ) }
    dend_39 { pt3dadd( 68.8055, -124.125, 46.4683, 0.56 ) }
    dend_39 { pt3dadd( 70.6432, -134.7, 53.088, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 19/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 40.7272, -30.8813, 27.0418, 0.56 ) }
    dend_38 { pt3dadd( 42.1735, -35.8231, 27.9837, 0.56 ) }
    dend_38 { pt3dadd( 42.8149, -40.8416, 29.3628, 0.56 ) }
    dend_38 { pt3dadd( 44.4525, -45.333, 31.5688, 0.56 ) }
    dend_38 { pt3dadd( 46.6381, -49.8055, 33.2552, 0.56 ) }
    dend_38 { pt3dadd( 49.031, -54.4044, 34.0061, 0.56 ) }
    dend_38 { pt3dadd( 50.8256, -59.302, 34.3232, 0.56 ) }
    dend_38 { pt3dadd( 51.7286, -64.4293, 34.0011, 0.56 ) }
    dend_38 { pt3dadd( 52.0308, -69.6421, 34.1742, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_47 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_52 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_51 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_43 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_45 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_37 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_38 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_19 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_11 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_8 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 7
    dend_31 nseg = 5
    dend_49 nseg = 3
    dend_46 nseg = 3
    dend_30 nseg = 7
    dend_52 nseg = 3
    dend_51 nseg = 5
    dend_43 nseg = 3
    dend_27 nseg = 3
    dend_9 nseg = 3
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_42 nseg = 5
    dend_28 nseg = 5
    dend_26 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_40 nseg = 3
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_NBC_ff73785e1d_0_0


