// Cell: bNAC219_L4_DBC_beb47bee0e_0_0
/*
{
  "id" : "bNAC219_L4_DBC_beb47bee0e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.6449, -2.34, 2.22", "-0.991259, -15.1119, -0.946047, 2.22", "-1.33716, -18.6495, 0.363728, 2.49", "-1.85632, -24.7946, 2.4483, 2.49", "-2.16009, -30.7327, 4.16272, 2.49", "-2.24544, -33.4274, 4.8483, 1.94", "-2.28366, -36.3318, 5.50737, 1.38", "-2.2009, -39.8646, 6.20675, 1.11", "-2.09222, -42.2474, 6.56907, 0.83", "-1.79551, -48.225, 7.11397, 1.11", "-1.70038, -50.6369, 7.1453, 1.11", "-1.58143, -53.5234, 7.1088, 1.38", "-1.4471, -56.2858, 7.02884, 0.83", "-1.30553, -58.6367, 6.97353, 1.66", "-1.13877, -60.8615, 6.93867, 1.11", "-0.736925, -65.6786, 6.81678, 1.66", "-0.495133, -68.3186, 6.74372, 1.38", "-0.14849, -71.7142, 6.64101, 1.94", "0.305689, -75.2945, 6.52457, 1.38", "0.930918, -79.0149, 6.39844, 1.38", "1.88204, -83.6039, 6.24314, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.47005, -0.86, 2.22", "-0.8248, 15.7085, -0.824311, 1.94", "-0.388095, 20.5866, -0.670243, 1.94", "0.0543298, 27.8883, -0.209115, 1.94", "0.171389, 30.5508, -0.00726959, 1.38", "0.532942, 36.5689, 0.426775, 2.22", "0.887798, 42.4755, 0.852779, 1.94", "1.34955, 50.463, 1.46095, 1.94", "1.61516, 56.2178, 2.02241, 1.94", "1.72241, 61.7875, 2.74284, 1.94", "1.80297, 69.3323, 3.72827, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.88204, -83.6039, 6.24314, 0.55", "2.50054, -84.7217, 6.50735, 0.55", "3.12938, -85.6781, 6.86329, 0.55", "4.06543, -86.978, 7.53277, 0.28", "5.14938, -88.2195, 8.23728, 0.55", "6.45278, -89.5758, 9.00556, 0.28", "7.55784, -90.6321, 9.69627, 1.11", "9.33121, -92.2162, 10.8742, 0.28", "10.5019, -93.1672, 11.8021, 0.83", "12.2501, -94.4679, 13.2926, 0.83", "13.298, -95.2217, 14.2286, 0.83", "15.0682, -96.5155, 15.8339, 0.83", "15.9898, -97.1825, 16.676, 1.11", "18.7977, -99.3648, 19.094, 0.28", "19.4134, -99.8895, 19.564, 0.28", "19.9429, -100.369, 19.9293, 0.55", "20.7172, -101.064, 20.3446, 0.55", "22.3175, -102.478, 20.8975, 0.55", "23.8125, -103.711, 21.2275, 0.55", "25.4264, -105.031, 21.3629, 0.83", "26.9428, -106.161, 21.4698, 1.11", "28.2684, -107.123, 21.5665, 0.55", "28.991, -107.66, 21.6282, 1.38", "29.9362, -108.356, 21.7224, 0.55", "31.0081, -109.015, 21.8226, 1.11", "33.3013, -110.307, 21.9791, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.88204, -83.6039, 6.24314, 1.38", "1.71893, -84.6762, 6.05991, 1.38", "1.15584, -87.8235, 5.77986, 1.38", "0.804929, -89.7848, 5.60533, 1.11", "0.042267, -94.0476, 5.22602, 1.66", "-0.443744, -96.764, 4.98431, 2.22", "-0.69157, -98.1492, 4.86105, 2.22", "-1.30254, -102.124, 4.42728, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.80297, 69.3323, 3.72827, 1.38", "1.67115, 72.7255, 3.76266, 1.38", "1.65886, 75.0266, 3.75107, 1.38", "1.69416, 78.3903, 3.70114, 1.11", "1.85305, 83.5657, 3.6691, 1.38", "1.92158, 86.1508, 3.64854, 1.38", "1.94641, 90.6649, 3.65277, 1.38", "1.91161, 96.377, 3.6733, 1.38", "1.7869, 100.539, 3.7102, 1.38", "1.63243, 104.412, 3.76015, 1.38", "1.37937, 108.028, 3.83869, 1.38", "0.68291, 114.062, 4.03905, 1.66", "0.139022, 117.526, 4.19157, 1.38", "-0.573598, 121.467, 4.27093, 1.38", "-1.42555, 125.993, 4.22797, 1.38", "-2.05815, 129.606, 4.07664, 1.38", "-2.32606, 131.524, 3.96213, 1.38", "-2.64339, 134.493, 3.74148, 1.11", "-3.02768, 138.985, 3.40813, 1.11", "-3.22143, 143.719, 3.03949, 1.11", "-3.31203, 148.499, 2.7042, 1.38", "-3.30819, 151.711, 2.55251, 1.11", "-3.30593, 154.794, 2.49628, 1.38", "-3.29339, 156.78, 2.56102, 1.38", "-3.21642, 159.954, 2.91444, 1.38", "-3.13853, 164.499, 3.57538, 1.94", "-3.07342, 166.902, 3.95995, 1.66", "-3.03968, 167.912, 4.11407, 1.66", "-2.94297, 171.063, 4.551, 1.66", "-2.80623, 176.034, 5.19459, 1.66", "-2.79767, 178.627, 5.51161, 1.38", "-2.85121, 182.72, 5.95127, 1.66", "-2.89368, 186.328, 6.23515, 1.11", "-2.93012, 190.327, 6.49628, 1.11", "-2.97343, 192.554, 6.59543, 1.11", "-3.00199, 195.013, 6.67043, 1.11", "-2.97316, 196.854, 6.73487, 1.11", "-2.78522, 200.764, 6.88147, 1.38", "-2.56319, 203.744, 6.99446, 1.11", "-2.38067, 205.977, 7.07008, 1.38", "-2.17748, 208.513, 7.14343, 1.38", "-2.00186, 211.404, 7.21497, 0.83", "-1.88805, 214.905, 7.29106, 1.38", "-1.90147, 217.698, 7.3403, 0.83", "-1.98477, 220.535, 7.36366, 1.38", "-2.13062, 222.77, 7.39814, 1.38", "-2.46772, 226.437, 7.44428, 1.38", "-2.60403, 228.054, 7.45177, 1.38", "-2.75759, 230.566, 7.43789, 1.11", "-2.8312, 233.689, 7.38411, 1.11", "-2.78707, 238.203, 7.25749, 1.66", "-2.63295, 241.106, 7.13869, 1.11", "-2.52843, 242.255, 7.14864, 1.11", "-2.37945, 244.248, 7.26877, 1.38", "-2.21306, 246.769, 7.53664, 1.38", "-2.08983, 249.61, 7.95956, 1.94", "-2.06594, 252.552, 8.50692, 1.94", "-2.23533, 257.35, 9.48162, 1.11", "-2.46131, 260.022, 10.0138, 1.11", "-2.78862, 262.553, 10.5047, 1.38", "-3.3013, 265.598, 11.0472, 1.38", "-3.76334, 268.144, 11.4228, 1.11", "-4.22661, 270.944, 11.7009, 0.83", "-4.70816, 274.147, 11.8245, 0.83", "-4.9687, 275.995, 11.8903, 0.83", "-5.42885, 279.206, 12.0018, 1.11", "-5.77447, 282.025, 12.0614, 1.11", "-6.1315, 284.927, 12.0991, 1.38", "-6.68928, 289.342, 12.1386, 1.38", "-6.99973, 292.046, 12.1467, 1.11", "-7.35246, 295.253, 12.1457, 1.38", "-7.68116, 297.885, 12.1117, 0.83", "-8.19732, 301.4, 12.0572, 0.83", "-8.59545, 304.188, 11.9783, 1.38", "-8.71014, 305.443, 11.9181, 1.38", "-8.89355, 307.742, 11.7857, 1.11", "-9.20826, 311.543, 11.5475, 1.38", "-9.37394, 313.857, 11.3907, 1.11", "-9.45052, 316.131, 11.1963, 1.11", "-9.50317, 318.407, 10.9953, 1.11", "-9.57521, 321.246, 10.745, 1.11", "-9.67481, 326.13, 10.2877, 1.11", "-9.69003, 328.995, 10.0181, 1.11", "-9.72196, 332.159, 9.79732, 1.38", "-9.7887, 335.406, 9.67365, 1.38", "-9.8823, 338.444, 9.64077, 0.83", "-9.92424, 340.779, 9.68055, 1.38", "-9.92773, 342.984, 9.78717, 1.38", "-9.92989, 345.979, 10.0135, 1.11", "-9.90533, 347.969, 10.2014, 0.55", "-9.77573, 349.951, 10.3779, 1.11", "-9.63634, 351.826, 10.5373, 1.11", "-9.48385, 353.83, 10.6691, 0.83", "-9.32484, 355.948, 10.728, 0.83", "-9.19735, 357.873, 10.707, 0.83", "-9.06987, 361.378, 10.6897, 1.11", "-8.99091, 363.665, 10.639, 1.66", "-9.00017, 365.866, 10.5804, 1.66", "-9.13645, 368.716, 10.5156, 0.83", "-9.27275, 371.004, 10.4507, 0.83", "-9.43054, 374.234, 10.3398, 1.11", "-9.67352, 378.079, 10.2078, 0.83", "-9.91585, 382.373, 10.0578, 0.83", "-10.0528, 384.83, 9.97029, 0.83", "-10.3541, 389.909, 9.79752, 1.38", "-10.7034, 394.984, 9.6535, 1.38", "-10.8712, 397.245, 9.60645, 1.11", "-11.2386, 400.75, 9.59841, 1.11", "-11.4976, 402.976, 9.59705, 0.83", "-11.7494, 404.54, 9.61372, 0.83", "-12.2992, 407.156, 9.79962, 1.38", "-12.5687, 408.517, 9.99871, 1.38", "-12.9967, 411.706, 10.5732, 0.83", "-13.1605, 413.886, 11.0194, 0.83", "-13.3295, 417.368, 11.5768, 0.83", "-13.3746, 420.624, 12.1068, 0.83", "-13.2861, 424.805, 12.8076, 1.38", "-13.1772, 427.644, 13.2986, 1.38", "-12.9635, 429.621, 13.6347, 1.38", "-12.1789, 434.204, 14.3153, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.80297, 69.3323, 3.72827, 1.11", "2.17112, 73.3884, -0.407086, 1.11", "2.30304, 74.6415, -1.51212, 1.11", "2.46541, 76.7997, -3.4556, 1.11", "2.8174, 82.987, -8.82097, 1.11", "2.91071, 85.2803, -10.5835, 1.11", "2.98115, 88.501, -12.8424, 0.83", "2.95544, 90.427, -13.9888, 0.83", "2.89899, 95.9308, -16.9174, 1.11", "2.87585, 98.4479, -18.0035, 1.11", "2.66437, 102.404, -19.143, 1.11", "2.30415, 106.028, -19.8768, 1.11", "1.99447, 108.554, -20.1366, 1.38", "1.80872, 110.325, -20.089, 1.38", "1.65317, 112.379, -19.8303, 1.11", "1.37453, 116.293, -19.315, 1.11", "1.13188, 120.43, -18.874, 0.83", "1.10553, 121.085, -18.7866, 0.83", "1.01097, 125.077, -18.3801, 1.66", "0.908784, 128.499, -18.2309, 0.83", "0.887622, 129.157, -18.2454, 0.83", "0.835124, 131.946, -18.4775, 1.66", "0.783409, 133.701, -18.7013, 1.66", "0.699425, 135.921, -18.9138, 1.11", "0.534891, 138.537, -19.1246, 1.11", "0.338178, 141.344, -19.2458, 1.11", "0.135513, 144.693, -19.4174, 1.66", "-0.0369962, 147.858, -19.5387, 1.66", "-0.243851, 151.164, -19.7344, 0.83", "-0.424312, 154.074, -20.0239, 0.83", "-0.51694, 156.128, -20.3217, 0.83", "-0.578604, 159.077, -20.8204, 1.66", "-0.601492, 161.899, -21.3494, 0.55", "-0.616259, 164.652, -21.8576, 0.55", "-0.564774, 167.727, -22.3648, 1.38", "-0.450391, 170.289, -22.6756, 1.94", "-0.305947, 173.381, -22.9393, 0.83", "-0.242396, 175.101, -23.0184, 0.83", "-0.184482, 178.006, -23.0908, 1.94", "-0.144221, 181.66, -23.0208, 1.94", "-0.164914, 184.04, -22.9433, 1.11", "-0.17701, 186.834, -22.6908, 1.11", "-0.202105, 189.365, -22.3743, 1.11", "-0.214214, 190.823, -22.1458, 1.11", "-0.239861, 192.315, -21.9066, 1.11", "-0.434439, 197.864, -21.0075, 2.22", "-0.609042, 204.213, -20.0142, 0.83", "-0.629274, 206.065, -19.7603, 0.83", "-0.592409, 208.568, -19.4784, 1.11", "-0.536201, 211.686, -19.2365, 0.55", "-0.572218, 214.113, -19.1613, 2.22", "-0.64442, 215.629, -19.245, 1.94", "-0.757502, 217.829, -19.5726, 0.83", "-0.826276, 220.171, -19.9127, 0.83", "-0.851683, 222.526, -20.2216, 0.83", "-0.912646, 225.013, -20.4696, 1.66", "-1.00132, 227.748, -20.7182, 0.83", "-1.05689, 229.314, -20.8285, 0.83", "-1.10678, 230.641, -20.9241, 1.11", "-1.21173, 232.692, -21.0885, 0.83", "-1.35152, 236.279, -21.415, 0.83", "-1.38044, 236.927, -21.4739, 0.83", "-1.63429, 240.506, -21.7668, 1.94", "-1.82913, 243.175, -21.9886, 0.55", "-2.03124, 246.19, -22.3071, 0.55", "-2.07356, 246.733, -22.3882, 0.55", "-2.4536, 251.026, -23.1541, 2.22", "-2.67865, 254.304, -23.7699, 0.83", "-2.73989, 255.79, -24.038, 0.83", "-2.79339, 259.306, -24.6129, 1.38", "-2.72783, 262.405, -25.0866, 0.55", "-2.62425, 265.157, -25.4438, 0.55", "-2.37874, 268.981, -25.9584, 0.83", "-1.90397, 274.359, -26.3781, 0.83", "-1.74748, 275.872, -26.4162, 2.49", "-1.41689, 278.792, -26.321, 2.49", "-0.907852, 283.333, -26.0033, 0.83", "-0.633239, 285.891, -25.793, 0.83", "-0.336455, 290.965, -25.3379, 0.83", "-0.278361, 292.468, -25.1963, 0.83", "-0.285918, 295.734, -24.9168, 1.66", "-0.346667, 299.035, -24.676, 0.83", "-0.407343, 301.448, -24.5341, 0.83", "-0.515615, 305.054, -24.386, 0.83", "-0.581235, 307.84, -24.3889, 1.94", "-0.583721, 312.448, -24.3911, 0.83", "-0.514048, 317.2, -24.3915, 0.83", "-0.461982, 319.332, -24.3912, 0.83", "-0.405148, 322.017, -24.391, 1.11", "-0.36669, 324.097, -24.391, 2.49", "-0.389587, 327.66, -24.3932, 0.83", "-0.442056, 328.886, -24.3951, 0.83", "-0.591855, 330.957, -24.3998, 0.83", "-0.845007, 334.391, -24.4078, 0.83", "-1.0538, 337.743, -24.4851, 0.83", "-1.31905, 341.669, -24.6442, 1.11", "-1.50745, 345.104, -24.8688, 1.66", "-1.61318, 348.395, -25.1221, 0.83", "-1.65986, 351.086, -25.3728, 0.83", "-1.5768, 354.182, -25.7049, 0.83", "-1.45557, 356.456, -25.9735, 0.83", "-1.33422, 358.962, -26.2919, 0.83", "-1.14152, 362.878, -26.7849, 1.66", "-1.00296, 365.988, -27.1652, 0.83", "-0.936899, 367.635, -27.3435, 0.83", "-0.826531, 371.632, -27.6588, 1.38", "-0.660535, 375.383, -27.9388, 0.83", "-0.586154, 377.464, -28.0784, 0.83", "-0.54431, 378.711, -28.1767, 1.66", "-0.496471, 381.236, -28.3487, 1.66", "-0.562811, 383.783, -28.5182, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "33.3013, -110.307, 21.9791, 0.83", "34.6232, -110.238, 23.3207, 0.83", "35.4853, -110.172, 24.2865, 0.28", "37.5603, -110.013, 26.611, 0.55", "38.3783, -109.951, 27.5274, 0.55", "39.5581, -109.86, 28.849, 0.55", "43.3509, -109.57, 33.098, 0.28", "43.8257, -109.579, 33.7353, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "33.3013, -110.307, 21.9791, 0.55", "34.9836, -111.899, 23.6081, 0.55", "35.4429, -112.16, 24.0474, 0.83", "36.5705, -112.877, 25.2031, 0.28", "37.0322, -113.189, 25.7448, 0.83", "37.9436, -113.785, 26.7937, 0.83", "40.1427, -115.206, 29.2655, 0.83", "43.0395, -116.869, 32.226, 0.83", "44.1491, -117.406, 33.443, 0.83", "46.9605, -118.331, 36.5793, 1.11", "47.8421, -118.485, 37.7214, 0.83", "48.1349, -118.474, 38.1635, 0.83", "49.0041, -118.053, 39.8231, 0.83", "50.2993, -116.507, 43.1582, 0.83", "51.1366, -115.097, 45.4517, 0.83", "51.9756, -112.872, 48.2157, 0.83", "52.2877, -111.73, 49.6203, 1.11", "52.6314, -109.962, 51.7528, 0.28", "52.654, -109.618, 52.1625, 0.55", "52.699, -108.043, 53.6589, 0.28", "52.4541, -107.191, 54.6156, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.30254, -102.124, 4.42728, 1.11", "-2.23567, -103.294, 5.20458, 1.11", "-3.29294, -104.906, 6.17207, 1.11", "-5.71852, -109.434, 8.48644, 1.38", "-6.96039, -112.134, 9.90028, 1.38", "-7.87526, -114.123, 10.9418, 1.66", "-9.32614, -117.278, 12.5936, 1.11", "-10.0407, -119.105, 13.5347, 1.11", "-10.8778, -121.951, 14.8938, 1.38", "-11.8185, -126.822, 16.8643, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.30254, -102.124, 4.42728, 1.38", "-1.3105, -104.859, 4.44087, 1.38", "-1.26424, -107.071, 4.50056, 1.94", "-1.20567, -108.676, 4.41649, 1.38", "-1.04237, -111.334, 3.90766, 1.94", "-0.834643, -113.396, 3.33763, 0.83", "-0.664363, -114.642, 2.91143, 0.83", "-0.345515, -116.238, 2.26756, 1.38", "0.331042, -118.631, 1.03609, 1.94", "1.27705, -121.165, -0.612026, 0.83", "1.62836, -121.94, -1.23016, 0.83", "2.56766, -123.824, -3.05754, 1.11", "3.13649, -124.902, -4.15635, 0.55", "3.41553, -125.468, -4.76917, 0.55", "3.93337, -126.634, -6.02174, 0.55", "4.15015, -127.239, -6.7313, 0.83", "4.57537, -128.593, -8.44041, 0.55", "4.95955, -129.925, -10.2836, 1.66", "5.46636, -132.026, -13.2619, 0.55", "5.62405, -132.937, -14.5269, 1.66", "5.84129, -134.907, -17.1323, 0.55", "5.94618, -135.77, -18.2935, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-12.1789, 434.204, 14.3153, 0.83", "-12.7761, 435.874, 13.1905, 0.83", "-13.509, 437.717, 12.0, 0.83", "-14.3448, 440.13, 10.6019, 0.55", "-15.0442, 442.524, 9.25805, 0.83", "-15.6601, 444.946, 7.99988, 0.28", "-15.9189, 446.071, 7.46634, 0.55", "-16.1317, 446.84, 7.13802, 0.55", "-16.6544, 449.093, 6.27336, 1.11", "-16.9571, 451.023, 5.67361, 0.55", "-17.1601, 452.684, 5.23187, 1.11", "-17.2931, 454.121, 4.92377, 1.11", "-17.4571, 456.287, 4.54892, 0.28", "-17.7849, 459.098, 4.03785, 0.55", "-18.298, 462.39, 3.45177, 0.55", "-18.5239, 464.076, 3.18788, 0.55", "-18.6625, 465.313, 3.0078, 0.28", "-18.7439, 467.12, 2.83913, 0.83", "-18.6888, 470.663, 2.76199, 1.38", "-18.6549, 472.353, 2.83487, 1.38", "-18.4303, 476.222, 3.13173, 0.83", "-18.3069, 478.068, 3.32603, 0.83", "-17.8624, 483.185, 4.03691, 0.83", "-17.6978, 484.946, 4.32593, 0.83", "-17.3381, 487.764, 4.91464, 0.83", "-17.2513, 488.481, 5.07656, 0.83", "-16.9658, 490.938, 5.61641, 1.38", "-16.7634, 492.661, 5.92738, 0.55", "-16.5877, 494.741, 6.16731, 0.55", "-16.4567, 495.887, 6.20389, 0.55", "-16.3449, 496.725, 6.17464, 0.28", "-16.0363, 499.046, 5.96328, 0.83", "-15.7984, 500.835, 5.65177, 0.55", "-15.5312, 502.758, 5.20389, 0.83", "-15.1635, 505.52, 4.51027, 0.55", "-14.9736, 507.124, 4.10494, 1.66", "-14.7099, 509.632, 3.47801, 1.66", "-14.4758, 512.376, 2.83466, 0.83", "-14.3305, 514.583, 2.36444, 0.83", "-14.2517, 516.396, 2.03769, 0.83", "-14.2367, 517.481, 1.8948, 0.28", "-14.2405, 519.316, 1.75542, 1.11", "-14.345, 522.074, 1.72015, 0.55", "-14.4334, 523.662, 1.76793, 0.55", "-14.5567, 525.32, 1.81179, 0.55", "-14.6717, 526.416, 1.83663, 0.55", "-14.9238, 527.998, 1.89411, 1.11", "-15.279, 529.738, 1.97389, 0.28", "-15.4588, 530.553, 2.01046, 0.55", "-15.7817, 532.494, 2.03402, 0.55", "-16.1425, 535.588, 1.98676, 0.55", "-16.2065, 536.68, 1.94584, 0.83", "-16.2642, 538.41, 1.82431, 0.83", "-16.2641, 540.891, 1.64685, 0.83", "-16.1516, 543.246, 1.49089, 0.83", "-15.9562, 545.057, 1.34012, 0.83", "-15.234, 549.037, 0.871273, 1.11", "-14.776, 551.074, 0.585876, 0.28", "-14.4487, 552.282, 0.365671, 0.55", "-13.9924, 553.595, 0.22227, 0.55", "-13.5259, 554.709, 0.186699, 0.55", "-13.1128, 555.463, 0.197103, 0.55", "-11.5439, 557.76, 0.207344, 0.55", "-10.455, 559.39, 0.21848, 0.83", "-7.94505, 563.507, -0.0539842, 0.55", "-7.53963, 564.213, -0.0979936, 0.83", "-6.80786, 565.614, -0.175998, 0.83", "-5.99729, 567.37, -0.291962, 0.55", "-5.37343, 568.976, -0.44709, 0.83", "-4.60273, 571.582, -0.796585, 0.83", "-4.07466, 573.873, -1.16311, 0.55", "-3.88829, 574.717, -1.22914, 0.55", "-3.47375, 576.612, -1.26052, 0.55", "-3.27397, 577.529, -1.22407, 0.83", "-2.892, 579.146, -1.12372, 0.83", "-2.33271, 582.012, -0.902513, 0.55", "-2.09525, 583.405, -0.84657, 0.55", "-1.74691, 585.499, -0.739467, 0.55", "-1.4905, 587.22, -0.643802, 0.55", "-0.993739, 590.421, -0.494457, 0.55", "-0.670517, 592.685, -0.444607, 0.83", "-0.537073, 593.857, -0.472145, 1.11", "-0.34145, 596.185, -0.472301, 0.55", "-0.169901, 599.519, -0.322393, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.1789, 434.204, 14.3153, 0.55", "-13.6025, 437.212, 14.5008, 0.55", "-14.5207, 439.373, 14.6612, 0.55", "-15.1968, 441.209, 14.7959, 0.55", "-15.7505, 442.868, 14.9114, 0.55", "-16.8392, 446.267, 15.1601, 0.55", "-17.4672, 448.24, 15.308, 0.83", "-18.2377, 450.721, 15.5848, 0.83", "-19.005, 453.301, 15.8506, 0.83", "-19.5405, 455.462, 16.0198, 0.55", "-19.9166, 457.277, 16.129, 0.55", "-20.4312, 459.771, 16.3107, 0.83", "-20.8404, 461.777, 16.4728, 0.83", "-21.5366, 464.924, 16.7641, 0.83", "-21.9998, 466.983, 16.9718, 0.83", "-22.3317, 468.586, 17.1391, 0.55", "-22.6919, 470.657, 17.3461, 0.83", "-22.9956, 472.96, 17.5926, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.562811, 383.783, -28.5182, 0.55", "-0.609087, 385.791, -28.5237, 0.55", "-0.676023, 388.696, -28.5316, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.562811, 383.783, -28.5182, 0.55", "-3.3289, 384.042, -28.2385, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "43.8257, -109.579, 33.7353, 0.28", "44.0707, -112.455, 32.0979, 0.28", "44.1158, -112.985, 31.7961, 1.11", "44.3302, -115.503, 30.3632, 0.28", "44.3517, -115.756, 30.2191, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "43.8257, -109.579, 33.7353, 1.66", "43.8446, -108.77, 34.7027, 1.66", "43.6978, -106.533, 36.8512, 0.83", "43.5131, -104.294, 38.8775, 0.28", "43.4006, -103.534, 39.5073, 0.55", "42.8703, -100.905, 41.4496, 0.28", "42.5368, -99.3289, 42.5716, 0.83", "42.0184, -97.2873, 44.0162, 0.83", "41.6341, -95.9971, 44.8184, 0.28", "41.0399, -94.1244, 45.8613, 0.55", "40.3199, -92.4325, 46.6627, 0.55", "39.2238, -90.3812, 47.4645, 0.28", "38.8347, -89.7722, 47.6845, 0.83", "37.7085, -88.0697, 48.2736, 0.28", "36.3159, -86.0883, 48.8764, 0.55", "34.5487, -83.6985, 49.5584, 0.28", "33.2005, -82.0556, 49.9581, 1.11", "32.0866, -80.836, 50.1348, 0.28", "30.634, -79.2817, 50.3023, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-11.8185, -126.822, 16.8643, 0.83", "-10.8646, -131.189, 17.3445, 0.83", "-10.3162, -133.325, 17.5753, 0.83", "-9.43003, -137.116, 17.9496, 0.83", "-8.9459, -139.922, 18.4013, 0.55", "-8.67478, -142.521, 18.9917, 0.83", "-8.56693, -145.017, 19.7287, 0.83", "-8.60811, -146.87, 20.5351, 0.83", "-8.90662, -149.904, 22.1209, 0.83", "-9.51437, -153.559, 24.2644, 0.83", "-10.0716, -155.945, 25.7, 0.83", "-11.1757, -159.741, 28.0932, 1.11", "-12.1021, -162.585, 29.921, 0.55", "-12.7182, -164.628, 31.153, 0.55", "-13.3956, -167.185, 32.5155, 0.83", "-13.7801, -168.851, 33.1939, 0.83", "-14.0565, -170.301, 33.6812, 0.28", "-14.3358, -171.824, 34.118, 0.55", "-14.8947, -175.045, 34.9241, 1.11", "-15.2151, -177.315, 35.4266, 0.28", "-15.3896, -178.595, 35.6761, 0.55", "-15.9814, -182.245, 36.3077, 0.28", "-16.0985, -182.944, 36.4378, 0.83", "-16.5117, -185.746, 37.0046, 0.83", "-16.927, -188.655, 37.6079, 0.28", "-16.9682, -189.091, 37.6888, 1.11", "-17.0953, -191.047, 37.9669, 1.11", "-17.3239, -193.951, 38.2406, 0.55", "-17.4815, -196.202, 38.511, 1.11", "-17.5859, -198.078, 38.8105, 1.11", "-17.6691, -199.387, 39.1142, 1.11", "-17.7941, -201.121, 39.5221, 0.28", "-17.8254, -202.195, 39.8589, 0.55", "-17.821, -203.857, 40.4543, 0.28", "-17.8027, -204.685, 40.8893, 0.83", "-17.7646, -206.299, 41.8687, 0.28", "-17.7392, -207.155, 42.3921, 0.83", "-17.5362, -210.366, 44.3074, 0.28", "-17.4885, -211.355, 44.8162, 0.83", "-17.4244, -214.144, 45.9866, 0.55", "-17.4285, -216.024, 46.6537, 1.11", "-17.4765, -218.064, 47.2108, 0.28", "-17.5112, -219.163, 47.4269, 0.83", "-17.6886, -222.135, 47.7208, 0.83", "-17.7622, -223.734, 47.949, 0.28", "-17.7661, -224.718, 48.1092, 0.28", "-17.7187, -225.817, 48.4022, 0.83", "-17.5852, -227.144, 48.8727, 0.83", "-17.3176, -228.919, 49.6166, 0.55", "-16.6755, -232.142, 51.105, 0.28", "-16.5316, -233.04, 51.5315, 1.11", "-16.3572, -234.361, 52.1086, 0.83", "-16.0674, -237.056, 53.134, 0.28", "-16.0179, -237.473, 53.2576, 0.55", "-15.7452, -239.312, 53.6166, 0.55", "-15.3486, -241.309, 53.7836, 0.55", "-14.9983, -242.945, 53.8563, 0.55", "-14.7088, -244.336, 53.8739, 0.55", "-14.3562, -246.141, 53.8963, 0.55", "-13.8328, -248.425, 53.9136, 0.55", "-13.26, -250.636, 53.9205, 0.55", "-12.6629, -252.797, 53.9153, 0.55", "-12.2691, -254.349, 53.9473, 0.28", "-11.8451, -256.235, 53.9929, 0.83", "-11.4032, -258.881, 54.061, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.8185, -126.822, 16.8643, 1.38", "-14.608, -127.547, 16.7608, 1.38", "-17.9645, -128.42, 16.6363, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "5.94618, -135.77, -18.2935, 0.55", "6.37844, -141.103, -18.9051, 0.55", "6.49254, -143.751, -19.2988, 0.55", "6.63099, -146.918, -19.829, 2.49", "6.71384, -149.471, -20.3571, 0.55", "6.76627, -151.938, -20.9132, 0.55", "6.83262, -155.06, -21.6171, 0.83", "6.67966, -157.774, -22.2689, 0.28", "6.63045, -159.04, -22.6371, 0.55", "6.56496, -161.064, -23.3382, 0.28", "6.52664, -162.329, -23.8124, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.94618, -135.77, -18.2935, 0.83", "8.31489, -135.978, -19.394, 0.83", "10.4334, -135.991, -20.2084, 0.83", "12.7184, -135.915, -21.0852, 0.55", "15.5583, -135.854, -22.1599, 0.55", "16.5166, -135.904, -22.5734, 0.83", "18.4698, -136.22, -23.4093, 0.55", "20.2267, -136.691, -24.1198, 1.11", "22.0638, -137.487, -24.8414, 0.28", "23.355, -138.259, -25.3331, 0.83", "25.841, -140.184, -26.4039, 0.28", "28.1287, -142.251, -27.5284, 1.38", "29.4867, -143.576, -28.0992, 0.55", "30.5553, -144.691, -28.4276, 0.55", "32.1548, -146.401, -28.5919, 0.83", "33.3552, -147.705, -28.5196, 0.28", "34.9972, -149.441, -28.2702, 0.55", "38.39, -152.826, -27.4067, 0.28", "40.0349, -154.325, -26.8864, 0.83", "42.6867, -156.459, -25.9553, 0.55", "43.6309, -157.118, -25.5921, 0.55", "46.486, -158.912, -24.4974, 1.94", "49.8782, -161.0, -23.3495, 0.55", "51.4365, -161.893, -22.9169, 0.55", "52.8109, -162.617, -22.5316, 0.55", "55.5548, -164.195, -21.808, 0.28", "56.5004, -164.854, -21.5563, 1.38", "58.3587, -166.455, -21.0308, 1.38", "60.7077, -169.127, -20.6714, 0.55", "61.8222, -170.581, -20.1643, 0.55", "63.9663, -173.539, -18.8358, 1.11", "65.7099, -176.122, -17.6315, 0.28", "66.0329, -176.624, -17.3749, 0.83", "67.756, -179.369, -15.761, 0.28", "73.1156, -188.386, -9.94802, 0.83", "73.9479, -189.632, -8.70492, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-22.9956, 472.96, 17.5926, 0.55", "-23.0577, 474.505, 17.7032, 0.55", "-23.0589, 476.007, 18.0387, 0.28", "-23.1347, 477.349, 18.4502, 0.55", "-23.2906, 478.295, 18.8238, 0.28", "-23.6109, 479.671, 19.3537, 0.83", "-23.9491, 481.073, 19.8455, 0.83", "-24.4267, 483.234, 21.0401, 0.55", "-24.66, 484.467, 21.885, 0.55", "-25.0489, 486.797, 23.6847, 0.83", "-25.278, 488.085, 24.7534, 0.83", "-25.4949, 489.548, 26.0898, 0.83", "-26.3589, 494.187, 30.2458, 0.55", "-26.509, 495.133, 31.0265, 0.55", "-26.5524, 495.575, 31.3702, 0.83", "-26.5982, 496.585, 32.1019, 0.55", "-26.6831, 499.714, 34.0236, 1.11", "-26.7633, 502.457, 35.3042, 0.83", "-26.8254, 504.395, 35.8685, 0.55", "-26.8228, 505.844, 36.2531, 1.11", "-26.7758, 507.454, 36.685, 0.55", "-26.5956, 510.108, 37.3824, 1.11", "-26.4681, 512.149, 37.8897, 0.55", "-26.336, 513.974, 38.4191, 0.55", "-26.3259, 514.966, 38.7341, 0.28", "-26.3555, 516.736, 39.3189, 0.83", "-26.4466, 518.531, 39.8654, 0.55", "-26.5858, 520.14, 40.3018, 0.83", "-26.7793, 521.668, 40.671, 0.83", "-27.1598, 523.868, 41.1794, 0.55", "-27.5943, 526.059, 41.626, 0.55", "-28.2366, 528.882, 42.1239, 0.83", "-28.926, 531.676, 42.5978, 0.83", "-29.576, 534.284, 43.0262, 0.83", "-29.9959, 535.908, 43.2813, 0.83", "-30.5374, 538.075, 43.5804, 0.83", "-31.0309, 539.973, 43.8544, 0.83", "-31.476, 542.037, 44.2049, 0.83", "-31.708, 543.249, 44.4295, 0.83", "-31.9613, 544.931, 44.7805, 0.55", "-32.1957, 546.362, 45.0348, 0.83", "-32.5013, 548.114, 45.3707, 0.83", "-32.9871, 550.958, 45.9321, 0.55", "-33.4994, 553.697, 46.5172, 0.83", "-34.1069, 556.619, 47.1815, 0.55", "-34.9298, 559.753, 47.9546, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-22.9956, 472.96, 17.5926, 0.55", "-23.2852, 474.525, 18.7563, 0.55", "-23.6532, 475.773, 19.5489, 0.28", "-23.8665, 476.345, 19.8886, 0.83", "-24.2055, 477.138, 20.3504, 0.28", "-24.382, 477.535, 20.5727, 0.28", "-24.6837, 478.174, 20.922, 0.83", "-25.3203, 479.468, 21.4934, 0.83", "-25.6747, 480.144, 21.7399, 0.28", "-26.1663, 481.156, 22.1035, 0.83", "-26.4183, 481.673, 22.2919, 0.55", "-26.8795, 482.68, 22.6747, 1.11", "-27.2999, 483.661, 23.0366, 0.55", "-27.6219, 484.494, 23.3189, 1.11", "-27.9538, 485.441, 23.6145, 0.55", "-28.3792, 486.771, 23.9976, 1.11", "-28.628, 487.57, 24.2336, 0.28", "-28.8118, 488.205, 24.4262, 0.55", "-29.031, 488.932, 24.6785, 0.28", "-29.1775, 489.448, 24.8668, 0.83", "-29.3555, 490.134, 25.056, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.676023, 388.696, -28.5316, 0.83", "0.176054, 392.126, -28.818, 0.83", "0.589728, 393.993, -29.0048, 0.83", "1.18775, 396.778, -29.2816, 2.22", "1.75216, 399.599, -29.5899, 1.66", "2.43008, 403.036, -29.8312, 0.83", "2.64115, 404.17, -29.8841, 0.83", "3.01595, 406.698, -29.9832, 0.83", "3.44642, 410.185, -30.0325, 1.66", "3.64167, 412.896, -30.0278, 0.55", "3.67378, 415.624, -30.0828, 0.55", "3.63133, 417.325, -30.1685, 1.11", "3.52431, 420.242, -30.457, 0.55", "3.28447, 425.017, -31.1958, 1.66", "3.24784, 427.445, -31.637, 0.83", "3.32592, 431.409, -32.4118, 0.83", "3.4143, 433.33, -32.826, 0.83", "3.61814, 435.471, -33.2353, 1.66", "4.02926, 438.381, -33.6992, 0.83", "4.81549, 442.849, -34.2085, 0.83", "5.50016, 446.194, -34.4054, 0.83", "5.79253, 447.464, -34.3917, 0.83", "6.43085, 450.316, -34.2945, 0.83", "6.82004, 452.197, -34.2366, 1.38", "7.39927, 455.129, -34.1352, 0.55", "7.80844, 457.073, -34.0651, 1.38", "8.6323, 460.789, -33.9197, 1.38", "9.297, 463.972, -33.8039, 0.83", "9.97132, 467.427, -33.6803, 0.83", "10.7409, 471.204, -33.5276, 1.11", "11.3591, 474.305, -33.394, 0.55", "11.7942, 476.799, -33.2893, 0.55", "12.1283, 478.774, -33.2717, 0.55", "12.9174, 483.151, -33.332, 2.22", "13.2833, 485.11, -33.4057, 0.55", "13.677, 487.07, -33.5101, 0.55", "13.8658, 488.038, -33.571, 1.11", "14.7804, 492.635, -33.8591, 0.55", "15.231, 495.174, -34.0241, 0.55", "15.3695, 496.17, -34.0918, 0.55", "15.6366, 499.278, -34.2816, 1.11", "15.7761, 502.266, -34.5015, 1.11", "15.8268, 504.722, -34.6596, 0.83", "15.7372, 507.286, -34.7762, 0.83", "15.646, 508.905, -34.8735, 0.83", "15.3501, 512.137, -35.1323, 0.83", "14.8299, 515.793, -35.5456, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.676023, 388.696, -28.5316, 0.55", "-3.20643, 388.641, -28.5184, 0.55", "-5.85302, 388.584, -28.5047, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-17.9645, -128.42, 16.6363, 1.11", "-17.9675, -129.071, 16.6072, 1.11", "-17.9725, -130.172, 16.5581, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-17.9645, -128.42, 16.6363, 1.11", "-20.8387, -126.76, 14.1115, 1.11", "-21.8032, -126.071, 13.3478, 0.28", "-22.4975, -125.62, 13.0414, 0.83", "-25.1779, -123.96, 12.2853, 0.55", "-26.4269, -123.257, 12.0282, 0.55", "-27.6306, -122.602, 11.7446, 0.55", "-29.3118, -121.786, 11.3956, 0.55", "-33.4622, -119.989, 10.402, 1.11", "-35.9038, -118.961, 9.79022, 0.55", "-37.493, -118.308, 9.40265, 0.55", "-41.1242, -117.05, 8.42635, 0.83", "-43.3158, -116.398, 7.81177, 0.55", "-45.4547, -115.859, 7.18883, 1.11", "-48.8928, -115.132, 6.0718, 0.83", "-50.1115, -114.939, 5.71673, 0.83", "-51.8295, -114.701, 5.32252, 0.83", "-54.5432, -114.462, 4.91961, 0.83", "-57.9761, -114.292, 4.46169, 1.11", "-59.5695, -114.294, 4.19675, 0.83", "-61.8435, -114.397, 3.73639, 0.83", "-65.1771, -114.628, 2.95714, 0.83", "-67.3396, -114.862, 2.33446, 0.55", "-68.9364, -115.174, 1.79791, 1.38", "-71.2047, -115.662, 0.867964, 0.55", "-73.2483, -116.014, -0.0646327, 0.55", "-74.4819, -116.245, -0.70313, 0.55", "-76.2918, -116.596, -1.78623, 0.55", "-77.2628, -116.74, -2.42779, 0.83", "-80.4861, -116.96, -4.71043, 0.55", "-81.611, -116.999, -5.54451, 0.55", "-82.8852, -116.971, -6.50634, 0.55", "-85.3805, -116.815, -8.16509, 0.55", "-88.0306, -116.578, -9.6879, 1.11", "-90.7498, -116.335, -11.0788, 0.55", "-91.4906, -116.3, -11.3893, 0.55", "-94.0179, -116.3, -12.2444, 0.55", "-96.961, -116.345, -12.9173, 1.94", "-99.1106, -116.506, -13.0805, 0.83", "-99.8923, -116.602, -13.0991, 0.28", "-101.267, -116.873, -13.1235, 0.55", "-103.239, -117.355, -13.1854, 0.55", "-104.943, -117.854, -13.2675, 0.28", "-107.951, -118.779, -13.358, 1.11", "-110.2, -119.532, -13.3102, 0.28", "-112.673, -120.241, -13.1804, 0.83", "-114.6, -120.693, -12.9948, 0.28", "-115.437, -120.831, -12.8714, 0.28", "-117.531, -121.016, -12.4318, 0.28", "-118.675, -121.004, -12.1127, 0.55", "-120.961, -120.725, -11.4028, 0.55", "-121.902, -120.447, -11.1859, 0.83", "-123.418, -119.879, -10.9718, 0.28", "-123.79, -119.742, -10.9436, 0.83", "-126.16, -118.879, -10.9139, 0.83", "-128.093, -118.181, -10.9166, 0.83", "-130.301, -117.501, -10.9448, 0.55", "-131.42, -117.201, -10.9701, 0.55", "-133.514, -116.766, -11.0099, 1.38", "-135.754, -116.417, -11.0379, 1.38", "-137.62, -116.231, -11.0457, 0.28", "-139.126, -116.249, -11.0731, 0.83", "-140.314, -116.401, -11.1042, 0.28", "-141.439, -116.672, -11.1528, 1.38", "-143.133, -117.231, -11.2624, 0.28", "-143.719, -117.512, -11.3148, 0.83", "-145.321, -118.481, -11.4983, 0.55", "-146.17, -119.029, -11.6219, 0.55", "-147.653, -119.972, -11.8836, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "6.52664, -162.329, -23.8124, 0.83", "6.59999, -163.735, -23.8957, 0.83", "6.57844, -165.075, -24.1087, 1.94", "6.545, -166.422, -24.3782, 1.94", "6.37285, -169.099, -24.9906, 0.83", "6.22962, -170.965, -25.4209, 1.38", "5.72114, -175.813, -26.6279, 0.28", "5.67065, -176.239, -26.749, 0.83", "5.48925, -177.461, -27.1607, 0.55", "5.13606, -179.153, -27.8346, 0.28", "4.65571, -180.757, -28.597, 0.55", "3.9656, -182.922, -29.5784, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "6.52664, -162.329, -23.8124, 0.28", "6.69067, -161.203, -19.5588, 0.28", "6.71408, -161.042, -18.9517, 1.38", "6.88218, -159.889, -14.5927, 0.55", "6.97837, -159.229, -12.0984, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "73.9479, -189.632, -8.70492, 1.38", "74.6474, -192.804, -8.76953, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "73.9479, -189.632, -8.70492, 0.55", "74.5527, -188.746, -9.86934, 0.55", "74.9422, -188.176, -10.6193, 0.55", "75.9694, -186.671, -12.5971, 0.28", "76.3022, -186.183, -13.238, 1.11", "77.3216, -184.69, -15.2007, 0.28", "78.1751, -183.439, -16.8441, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-34.9298, 559.753, 47.9546, 1.38", "-34.6619, 561.355, 48.2909, 1.38", "-34.5249, 562.791, 48.6904, 0.55", "-34.4726, 563.995, 49.2676, 0.55", "-34.4271, 565.043, 49.7698, 0.55", "-34.3743, 566.26, 50.3529, 1.11", "-34.2685, 568.696, 51.5205, 0.55", "-34.2825, 570.431, 52.5469, 1.11", "-34.3637, 572.946, 54.3104, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-34.9298, 559.753, 47.9546, 0.55", "-35.6229, 562.567, 47.6693, 0.55", "-36.0449, 563.741, 47.6453, 0.28", "-36.5978, 564.856, 47.5801, 0.83", "-37.6718, 566.818, 47.4464, 0.28", "-38.6862, 568.494, 47.3572, 0.55", "-39.679, 570.053, 47.3, 0.55", "-41.7083, 572.741, 47.2404, 1.11", "-43.5935, 574.947, 47.2876, 0.55", "-44.3334, 575.766, 47.2799, 0.55", "-46.0083, 577.586, 47.2528, 0.83", "-47.1774, 578.825, 47.1894, 0.83", "-48.899, 580.662, 46.9149, 0.83", "-49.8084, 581.644, 46.6995, 0.83", "-51.9493, 584.244, 46.0346, 0.55", "-53.5399, 586.437, 45.2566, 0.83", "-54.5059, 587.858, 44.5896, 0.83", "-56.1276, 590.365, 43.281, 0.55", "-57.4055, 592.507, 42.1253, 0.55", "-58.187, 593.833, 41.3898, 0.83", "-60.0761, 596.882, 39.7537, 0.83", "-61.2295, 598.752, 38.7203, 0.83", "-62.0635, 600.092, 37.9721, 0.28", "-62.705, 601.094, 37.3432, 0.55", "-63.8791, 602.809, 35.7302, 0.55", "-64.5641, 603.74, 34.7025, 0.55", "-65.1543, 604.496, 33.7491, 0.55", "-66.675, 606.338, 31.1796, 0.55", "-68.3167, 608.057, 28.3581, 0.83", "-71.1022, 610.542, 23.7904, 0.28", "-72.0278, 611.207, 22.275, 0.28", "-72.5533, 611.536, 21.3701, 0.55", "-73.225, 611.921, 20.1045, 0.28", "-73.6318, 612.16, 19.255, 0.83", "-74.2334, 612.587, 17.9173, 0.83", "-76.0634, 614.144, 13.3012, 0.83", "-77.3643, 615.296, 9.69876, 0.28", "-78.5916, 616.35, 6.17846, 1.11", "-80.3885, 617.86, 0.962761, 0.55", "-80.893, 618.242, -0.396331, 0.55", "-81.8826, 618.847, -2.82414, 0.55", "-82.6621, 619.211, -4.41484, 0.55", "-83.631, 619.529, -6.08895, 0.83", "-85.542, 620.002, -8.94861, 0.55", "-86.997, 620.314, -10.9963, 1.11", "-91.5742, 621.292, -17.2714, 0.28", "-92.1165, 621.439, -18.0558, 0.55", "-93.9697, 622.075, -20.7923, 0.28", "-95.3315, 622.594, -22.8883, 1.11", "-97.4389, 623.444, -26.3271, 0.55", "-98.3131, 623.879, -27.9986, 1.11", "-100.177, 625.006, -32.0886, 0.55", "-100.625, 625.338, -33.2383, 0.55", "-101.642, 626.23, -36.2431, 1.11", "-102.09, 626.706, -37.8042, 1.11", "-103.442, 628.467, -43.4036, 0.28", "-103.804, 628.988, -45.058, 0.83", "-104.756, 630.214, -49.0369, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-29.3555, 490.134, 25.056, 0.55", "-29.3802, 491.187, 25.5624, 0.55", "-29.4615, 492.493, 26.1815, 0.28", "-29.6564, 494.337, 27.044, 1.38", "-30.0538, 496.981, 28.2923, 0.28", "-30.4646, 499.209, 29.3486, 0.55", "-30.704, 500.413, 29.9043, 0.55", "-30.9318, 501.43, 30.3621, 0.83", "-31.3175, 502.895, 31.0147, 0.28", "-31.7073, 504.084, 31.4996, 0.83", "-32.023, 504.946, 31.7817, 0.28", "-32.3031, 505.806, 32.0511, 0.28", "-32.7309, 507.128, 32.4656, 0.83", "-33.2257, 508.701, 32.9442, 0.28", "-33.4666, 509.492, 33.1744, 0.55", "-34.0212, 511.319, 33.6965, 0.55", "-34.4357, 512.681, 34.0955, 0.28", "-34.6508, 513.361, 34.3056, 0.28", "-35.0241, 514.584, 34.6708, 1.11", "-35.5111, 516.148, 35.0162, 0.28", "-35.8875, 517.229, 35.1781, 0.83", "-36.3338, 518.42, 35.2425, 0.28", "-36.8246, 519.819, 35.1631, 0.83", "-37.1041, 520.685, 35.0634, 0.83", "-37.7971, 522.97, 34.6973, 0.55", "-38.2309, 524.512, 34.4287, 0.55", "-38.496, 525.498, 34.2757, 0.55", "-38.9529, 527.288, 34.0445, 0.83", "-39.3016, 528.801, 33.9065, 0.55", "-39.7808, 531.021, 33.8288, 1.11", "-40.0798, 532.567, 33.8489, 0.55", "-40.3576, 534.019, 33.8964, 0.55", "-40.564, 534.941, 33.9163, 0.83", "-40.7627, 535.646, 33.8932, 0.55", "-41.4973, 538.1, 33.649, 0.83", "-41.8691, 539.095, 33.4235, 0.28", "-41.9594, 539.296, 33.3583, 0.28", "-42.3779, 540.157, 33.0153, 0.55", "-43.4915, 542.357, 32.0589, 0.28", "-43.6906, 542.772, 31.8943, 0.55", "-44.6703, 544.923, 31.0918, 0.28", "-45.0187, 545.801, 30.8191, 0.83", "-45.5942, 547.326, 30.4796, 0.83", "-45.8083, 547.971, 30.3907, 0.28", "-46.2875, 549.914, 30.2062, 0.55", "-46.5456, 551.18, 30.1283, 0.28", "-46.6956, 552.835, 30.1789, 0.83", "-46.763, 555.026, 30.3185, 0.28", "-46.7117, 555.978, 30.4179, 0.28", "-46.553, 557.308, 30.6096, 0.55", "-46.297, 559.345, 30.9202, 0.83", "-45.9739, 562.04, 31.394, 0.28", "-45.858, 563.177, 31.5489, 0.83", "-45.7734, 565.056, 31.6819, 0.28", "-45.8778, 567.517, 31.5749, 1.38", "-46.1285, 569.705, 31.2964, 0.28", "-46.4188, 571.614, 30.8874, 0.83", "-46.7795, 573.446, 30.3636, 0.83", "-47.3699, 576.322, 29.4672, 0.55", "-48.0621, 579.258, 28.5566, 0.55", "-48.4867, 581.331, 27.9887, 0.83", "-48.6782, 582.934, 27.7258, 0.83", "-48.7945, 585.019, 27.5888, 0.55", "-48.7209, 586.406, 27.7389, 0.55", "-48.3684, 588.452, 28.2369, 1.38", "-47.8056, 590.986, 29.1287, 0.83", "-46.9804, 593.904, 30.3565, 1.11", "-46.4855, 595.342, 31.0733, 1.11", "-45.1957, 598.258, 32.7468, 0.83", "-44.8535, 598.89, 33.1235, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-29.3555, 490.134, 25.056, 0.28", "-27.2509, 489.967, 25.334, 0.28", "-26.7151, 489.925, 25.4048, 0.83", "-25.0638, 489.794, 25.623, 0.28", "-24.8218, 489.775, 25.655, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "14.8299, 515.793, -35.5456, 0.55", "15.8675, 518.669, -35.4044, 0.55", "16.9837, 521.877, -35.3288, 0.55", "17.5811, 523.725, -35.3194, 0.55", "18.4566, 526.13, -35.2994, 0.28", "19.3676, 528.331, -35.274, 0.83", "20.79, 531.68, -35.2332, 0.28", "21.3443, 533.024, -35.2332, 0.83", "22.1214, 535.092, -35.2601, 0.55", "23.2346, 538.002, -35.3523, 0.55", "23.8696, 539.729, -35.4358, 0.83", "24.5537, 541.916, -35.569, 0.28", "25.0594, 543.705, -35.6317, 0.83", "25.5848, 545.741, -35.7278, 0.83", "25.9427, 547.238, -35.9066, 0.28", "26.2663, 549.394, -36.2817, 0.83", "26.4095, 551.196, -36.7252, 0.83", "26.4587, 553.437, -37.7051, 0.83", "26.3361, 555.939, -39.1966, 1.11", "26.0746, 558.813, -41.6547, 0.55", "25.6205, 560.877, -43.8843, 0.55", "25.0117, 562.739, -46.2558, 1.11", "23.7402, 565.838, -50.9351, 0.28", "23.3943, 566.632, -52.2767, 0.28", "22.2803, 569.087, -56.6751, 0.83", "21.6843, 570.5, -59.3662, 0.55", "21.5276, 570.977, -60.3624, 0.55", "21.1066, 572.54, -63.5007, 0.55", "20.8045, 573.732, -65.7986, 0.83", "20.2155, 575.913, -70.2324, 0.55", "19.0467, 579.806, -78.2797, 1.94", "18.1667, 583.094, -85.6551, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "14.8299, 515.793, -35.5456, 0.55", "14.3744, 517.487, -35.9808, 0.55", "13.9911, 519.056, -36.4147, 0.83", "13.8367, 519.821, -36.6696, 0.55", "13.6367, 521.528, -37.2249, 0.83", "13.4569, 523.996, -38.0332, 0.55", "13.3642, 525.066, -38.4409, 0.55", "13.3217, 526.069, -38.941, 1.11", "13.3518, 527.477, -39.7202, 0.83", "13.439, 529.228, -40.8048, 0.83", "13.5431, 531.261, -42.2216, 0.83", "13.5141, 532.946, -43.5484, 0.55", "13.4059, 534.834, -45.0817, 0.28", "13.3381, 536.647, -47.0461, 0.83", "13.2873, 538.001, -48.7311, 0.55", "13.226, 539.531, -50.8316, 1.38", "13.2247, 540.958, -52.8529, 0.55", "13.2476, 541.822, -54.0309, 0.55", "13.3958, 547.566, -61.5454, 0.83", "13.4064, 548.418, -62.6767, 0.55", "13.4176, 548.626, -62.9334, 0.55", "13.5096, 549.944, -64.3875, 1.38", "13.5922, 550.991, -65.2933, 1.38", "13.5646, 553.139, -66.3712, 0.28", "13.4053, 554.089, -66.3445, 0.55", "13.1712, 555.719, -66.1542, 0.28", "12.8925, 557.473, -65.8842, 0.55", "12.2969, 560.546, -65.2124, 0.55", "11.8998, 562.426, -64.7384, 0.55", "11.4069, 564.654, -64.0921, 0.55", "11.0622, 566.484, -63.4504, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-17.9725, -130.172, 16.5581, 0.55", "-19.0221, -130.76, 17.9149, 0.55", "-19.8565, -131.231, 19.0152, 0.28", "-20.6216, -131.663, 20.0241, 1.11", "-23.4192, -133.242, 23.7132, 0.28", "-23.7838, -133.448, 24.194, 1.11", "-25.6724, -134.514, 26.6845, 0.28", "-26.1162, -134.781, 27.4162, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-17.9725, -130.172, 16.5581, 0.83", "-18.9393, -131.443, 17.6747, 0.83", "-19.8725, -132.485, 18.7459, 0.83", "-20.6888, -133.187, 19.7906, 0.83", "-22.1193, -134.317, 21.6317, 0.83", "-23.0209, -135.197, 23.1605, 0.83", "-24.0896, -136.494, 25.3843, 0.83", "-24.6116, -137.26, 26.6888, 0.83", "-25.5932, -139.325, 29.8174, 1.11", "-25.7327, -139.869, 30.5625, 1.11", "-25.9856, -142.652, 33.8517, 1.11", "-26.0017, -144.591, 35.8425, 1.11", "-25.9227, -146.381, 37.4322, 1.11", "-25.7615, -148.044, 38.7619, 1.38", "-25.4111, -150.726, 40.5906, 0.55", "-25.2858, -151.86, 41.3153, 0.83", "-25.2478, -152.972, 41.9134, 0.83", "-25.1744, -153.922, 42.4267, 0.83", "-25.1186, -154.826, 42.9615, 0.83", "-25.05, -156.573, 43.8109, 0.55", "-25.1215, -157.759, 44.1711, 0.55", "-25.2128, -158.418, 44.3093, 1.11", "-25.4393, -159.642, 44.4569, 0.28", "-25.593, -160.302, 44.5089, 1.11", "-26.0649, -161.745, 44.5212, 0.55", "-26.6398, -163.14, 44.3388, 0.55", "-27.4457, -164.689, 44.0554, 0.28", "-27.7352, -165.179, 43.927, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-147.653, -119.972, -11.8836, 1.11", "-149.781, -119.748, -11.8897, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-147.653, -119.972, -11.8836, 0.28", "-148.198, -121.725, -12.3218, 0.28", "-148.301, -122.058, -12.4049, 0.83", "-148.81, -123.696, -12.8143, 0.28", "-148.953, -124.158, -12.9297, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.9656, -182.922, -29.5784, 0.55", "2.97912, -184.182, -28.3157, 0.55", "2.24313, -185.058, -27.5096, 0.55", "0.980977, -186.619, -25.7302, 0.28", "0.631127, -187.11, -25.2101, 0.55", "0.091665, -187.866, -24.4093, 1.11", "-0.60056, -188.861, -23.3888, 0.28", "-1.16545, -189.597, -22.5757, 0.55", "-2.85269, -191.62, -20.4001, 0.28", "-4.31461, -193.3, -18.6629, 0.83", "-5.75448, -195.015, -16.8658, 0.28", "-6.15311, -195.512, -16.3424, 0.83", "-7.16791, -196.766, -15.0085, 0.83", "-8.27839, -198.01, -13.7077, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.9656, -182.922, -29.5784, 0.28", "5.05733, -187.407, -29.6923, 0.28", "5.52123, -188.969, -29.7278, 0.55", "6.36726, -191.584, -29.7979, 0.28", "7.42223, -194.722, -29.8987, 1.11", "8.70116, -198.449, -30.0468, 0.28", "9.04525, -199.437, -30.1094, 0.55", "9.7077, -200.951, -30.1444, 0.28", "10.157, -201.89, -30.167, 0.55", "10.7637, -203.086, -30.1322, 0.28", "11.0735, -203.754, -30.1059, 0.55", "11.8017, -206.003, -30.0955, 0.28", "12.3489, -208.007, -30.1244, 1.11", "13.6876, -212.212, -30.041, 0.28", "14.5305, -214.633, -29.9845, 1.11", "15.2089, -216.561, -29.9265, 1.11", "16.4732, -220.14, -29.7966, 0.28", "17.2768, -222.407, -29.7087, 0.83", "18.9806, -227.219, -29.7541, 0.55", "19.7952, -229.904, -29.9314, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "74.6474, -192.804, -8.76953, 0.28", "77.355, -194.427, -8.27643, 0.28", "78.3056, -194.982, -8.10748, 0.83", "79.7989, -195.866, -7.86402, 0.28", "81.888, -197.127, -7.55246, 0.83", "83.9681, -198.457, -7.27125, 0.28", "85.5137, -199.428, -7.07857, 0.55", "86.3464, -199.901, -6.97585, 0.28", "88.1801, -200.836, -6.78372, 0.55", "89.3961, -201.426, -6.67845, 0.28", "90.7655, -202.055, -6.56691, 0.55", "92.5469, -202.772, -6.44175, 0.55", "94.3429, -203.439, -6.41579, 0.55", "96.773, -204.36, -6.48663, 0.83", "98.2408, -204.924, -6.67813, 0.28", "99.6159, -205.532, -6.96612, 0.83", "100.997, -206.23, -7.07476, 1.38", "103.997, -207.989, -6.99259, 0.28", "105.623, -209.08, -6.9319, 0.83", "108.127, -210.841, -6.79879, 0.28", "109.705, -211.97, -6.6515, 1.11", "115.664, -216.368, -5.65137, 0.28", "116.421, -216.939, -5.47102, 0.55", "120.204, -219.803, -4.373, 0.28", "122.731, -221.776, -3.64936, 0.28", "123.812, -222.711, -3.35123, 0.55", "125.529, -224.197, -3.06788, 0.28", "126.526, -225.135, -3.16435, 0.28", "127.773, -226.389, -3.23699, 0.55", "129.191, -227.996, -2.999, 0.55", "130.005, -229.354, -2.99502, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "74.6474, -192.804, -8.76953, 0.55", "71.9906, -194.472, -8.15067, 0.55", "70.8895, -195.163, -7.89417, 0.55", "69.5322, -196.016, -7.57801, 0.28", "67.7368, -197.143, -7.1598, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-34.3637, 572.946, 54.3104, 0.83", "-34.2065, 574.798, 55.0429, 0.83", "-33.9347, 577.659, 56.1419, 0.83", "-33.7264, 579.614, 56.8969, 0.83", "-33.4243, 583.662, 58.4805, 0.83", "-33.4056, 584.13, 58.6342, 1.11", "-33.401, 585.348, 58.9769, 0.55", "-33.4383, 586.069, 59.155, 0.83", "-34.1097, 586.638, 57.9611, 0.28", "-34.6778, 587.193, 56.6278, 0.55", "-36.1908, 589.006, 52.3582, 0.28", "-36.6013, 589.603, 51.1254, 0.83", "-36.8871, 590.1, 50.1746, 0.83", "-38.4057, 593.513, 44.3259, 0.55", "-38.7189, 594.546, 42.7528, 0.55", "-38.7967, 595.593, 41.606, 1.11", "-38.3961, 599.35, 39.7812, 0.55", "-38.3011, 599.883, 39.6638, 0.83", "-38.0965, 600.742, 39.7356, 0.28", "-37.9845, 601.2, 39.8807, 0.55", "-37.9132, 601.932, 40.0548, 0.28", "-37.924, 602.945, 40.1476, 0.83", "-37.9359, 604.009, 40.0615, 0.28", "-37.9566, 604.714, 39.9969, 0.83", "-38.1117, 606.977, 39.5958, 0.55", "-38.2946, 609.029, 39.1045, 0.55", "-38.4613, 610.545, 38.6898, 0.55", "-38.6968, 612.661, 38.0966, 0.55", "-38.8839, 614.08, 37.6666, 0.55", "-39.3111, 617.152, 36.7724, 0.55", "-39.4334, 618.107, 36.4832, 0.28", "-39.5424, 618.953, 36.199, 0.55", "-39.7264, 620.125, 35.8061, 0.28", "-40.1169, 621.938, 35.1842, 0.55", "-40.2738, 622.688, 34.9457, 0.55", "-40.5163, 624.113, 34.55, 0.28", "-40.729, 625.458, 34.0816, 0.28", "-40.7885, 626.15, 33.8011, 0.55", "-40.8749, 627.687, 32.767, 0.28", "-40.8552, 628.484, 31.993, 0.83", "-40.822, 629.327, 31.1017, 0.83", "-40.715, 630.804, 29.3913, 0.55", "-40.5991, 631.882, 27.9895, 0.55", "-40.1896, 635.006, 23.5393, 0.28", "-39.8468, 636.937, 20.4914, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.3637, 572.946, 54.3104, 0.55", "-35.6514, 575.284, 55.2587, 0.55", "-37.3461, 578.362, 56.5067, 0.55", "-38.5382, 580.527, 57.3846, 0.55", "-39.5731, 582.407, 58.1468, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-44.8535, 598.89, 33.1235, 0.28", "-46.294, 599.364, 32.1044, 0.28", "-46.6947, 599.496, 31.821, 0.55", "-50.6358, 600.793, 29.0331, 0.28", "-51.0831, 600.94, 28.7167, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-44.8535, 598.89, 33.1235, 0.28", "-46.2948, 601.672, 35.5855, 0.28", "-47.1857, 603.392, 37.1074, 0.83", "-47.8519, 604.678, 38.2453, 0.83", "-48.2734, 605.492, 38.9653, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.1667, 583.094, -85.6551, 0.55", "16.1305, 583.869, -86.4585, 0.55", "13.7662, 584.812, -87.5776, 0.55", "12.0009, 585.517, -88.4132, 0.55", "9.95097, 586.335, -89.3835, 0.28", "8.09692, 587.076, -90.2611, 0.83", "6.66813, 587.646, -90.9374, 0.83", "5.20067, 588.347, -91.8062, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.1667, 583.094, -85.6551, 0.55", "17.4246, 586.12, -86.9917, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-149.781, -119.748, -11.8897, 0.28", "-152.686, -119.6, -11.4299, 0.28", "-155.578, -119.319, -10.9002, 0.55", "-158.798, -118.968, -10.2669, 0.28", "-160.588, -118.812, -9.86588, 1.11", "-163.31, -118.591, -9.18054, 0.28", "-164.016, -118.517, -9.02621, 0.55", "-168.011, -118.074, -8.27413, 0.28", "-169.154, -117.924, -8.06197, 1.11", "-171.744, -117.63, -7.60465, 0.28", "-173.274, -117.469, -7.32317, 1.11", "-176.882, -117.145, -6.536, 1.11", "-179.404, -116.959, -6.12528, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-149.781, -119.748, -11.8897, 0.83", "-151.063, -121.083, -12.506, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-8.27839, -198.01, -13.7077, 0.83", "-8.94834, -198.752, -14.1067, 0.83", "-10.0701, -199.994, -14.7749, 0.28", "-11.0111, -201.036, -15.3353, 1.11", "-13.6699, -203.981, -16.919, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-8.27839, -198.01, -13.7077, 1.11", "-9.4113, -196.816, -13.016, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-48.2734, 605.492, 38.9653, 0.55", "-49.7626, 606.345, 37.6988, 0.55", "-51.0449, 607.15, 36.3861, 0.28", "-51.4932, 607.328, 36.0363, 0.55", "-54.6573, 608.583, 33.5669, 0.28", "-56.1411, 609.172, 32.4089, 0.55", "-58.1584, 609.972, 30.8345, 0.28", "-59.8525, 610.523, 29.7678, 0.55", "-65.5075, 612.158, 26.7195, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-48.2734, 605.492, 38.9653, 0.28", "-48.5522, 605.686, 40.0476, 0.28", "-48.9825, 605.986, 41.7178, 0.55", "-49.3477, 606.241, 43.1353, 0.55", "-49.733, 606.509, 44.6308, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.20067, 588.347, -91.8062, 0.55", "4.56736, 589.407, -91.9906, 0.55", "3.95521, 590.432, -92.1689, 0.55", "3.39878, 591.363, -92.3309, 0.83", "2.72352, 592.494, -92.5276, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.20067, 588.347, -91.8062, 0.28", "3.1228, 589.518, -94.1835, 0.28", "2.5526, 589.839, -94.8358, 0.28", "1.39958, 590.489, -96.155, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.6699, -203.981, -16.919, 1.11", "-13.1508, -206.098, -15.4758, 1.11", "-12.6337, -208.259, -13.8865, 0.28", "-12.3193, -209.758, -12.7548, 1.11", "-11.5384, -213.89, -9.32236, 0.28", "-11.3687, -214.917, -8.44485, 1.94", "-10.956, -217.919, -6.01711, 1.11", "-10.8953, -218.584, -5.47118, 0.28", "-10.8606, -219.351, -4.84172, 0.83", "-10.8917, -221.412, -3.35836, 0.28", "-10.9995, -222.382, -2.87953, 1.11", "-11.348, -224.976, -1.83195, 0.28", "-11.721, -227.053, -1.19168, 0.28", "-11.8906, -228.145, -0.883855, 1.11", "-11.8906, -228.145, -0.883855, 1.11", "-12.1077, -229.512, -0.659994, 0.55", "-12.2075, -230.11, -0.542344, 1.38", "-12.6533, -232.379, 0.10383, 0.28", "-12.693, -232.622, 0.190797, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-13.6699, -203.981, -16.919, 0.55", "-14.5481, -203.893, -16.2988, 0.55", "-15.0922, -203.838, -15.9145, 0.55", "-15.5584, -203.791, -15.5853, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-49.733, 606.509, 44.6308, 0.55", "-49.653, 607.596, 45.0611, 0.55", "-49.434, 609.593, 45.7085, 0.55", "-49.3036, 610.927, 46.0206, 0.55", "-49.1986, 612.573, 46.3634, 0.55", "-49.0553, 614.094, 46.6544, 0.28", "-49.0261, 614.786, 46.7738, 0.83", "-49.027, 616.75, 47.0192, 0.83", "-49.0517, 618.435, 47.1175, 0.83", "-49.1006, 619.295, 47.1487, 0.55", "-49.2888, 621.476, 47.0784, 0.83", "-49.663, 623.926, 46.8334, 0.28", "-49.9483, 625.087, 46.7142, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-49.733, 606.509, 44.6308, 0.55", "-49.9872, 605.429, 47.4764, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_DBC_beb47bee0e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.6449, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -0.991259, -15.1119, -0.946047, 2.22 ) }
    dend_29 { pt3dadd( -1.33716, -18.6495, 0.363728, 2.49 ) }
    dend_29 { pt3dadd( -1.85632, -24.7946, 2.4483, 2.49 ) }
    dend_29 { pt3dadd( -2.16009, -30.7327, 4.16272, 2.49 ) }
    dend_29 { pt3dadd( -2.24544, -33.4274, 4.8483, 1.94 ) }
    dend_29 { pt3dadd( -2.28366, -36.3318, 5.50737, 1.38 ) }
    dend_29 { pt3dadd( -2.2009, -39.8646, 6.20675, 1.11 ) }
    dend_29 { pt3dadd( -2.09222, -42.2474, 6.56907, 0.83 ) }
    dend_29 { pt3dadd( -1.79551, -48.225, 7.11397, 1.11 ) }
    dend_29 { pt3dadd( -1.70038, -50.6369, 7.1453, 1.11 ) }
    dend_29 { pt3dadd( -1.58143, -53.5234, 7.1088, 1.38 ) }
    dend_29 { pt3dadd( -1.4471, -56.2858, 7.02884, 0.83 ) }
    dend_29 { pt3dadd( -1.30553, -58.6367, 6.97353, 1.66 ) }
    dend_29 { pt3dadd( -1.13877, -60.8615, 6.93867, 1.11 ) }
    dend_29 { pt3dadd( -0.736925, -65.6786, 6.81678, 1.66 ) }
    dend_29 { pt3dadd( -0.495133, -68.3186, 6.74372, 1.38 ) }
    dend_29 { pt3dadd( -0.14849, -71.7142, 6.64101, 1.94 ) }
    dend_29 { pt3dadd( 0.305689, -75.2945, 6.52457, 1.38 ) }
    dend_29 { pt3dadd( 0.930918, -79.0149, 6.39844, 1.38 ) }
    dend_29 { pt3dadd( 1.88204, -83.6039, 6.24314, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.47005, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -0.8248, 15.7085, -0.824311, 1.94 ) }
    dend_0 { pt3dadd( -0.388095, 20.5866, -0.670243, 1.94 ) }
    dend_0 { pt3dadd( 0.0543298, 27.8883, -0.209115, 1.94 ) }
    dend_0 { pt3dadd( 0.171389, 30.5508, -0.00726959, 1.38 ) }
    dend_0 { pt3dadd( 0.532942, 36.5689, 0.426775, 2.22 ) }
    dend_0 { pt3dadd( 0.887798, 42.4755, 0.852779, 1.94 ) }
    dend_0 { pt3dadd( 1.34955, 50.463, 1.46095, 1.94 ) }
    dend_0 { pt3dadd( 1.61516, 56.2178, 2.02241, 1.94 ) }
    dend_0 { pt3dadd( 1.72241, 61.7875, 2.74284, 1.94 ) }
    dend_0 { pt3dadd( 1.80297, 69.3323, 3.72827, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.88204, -83.6039, 6.24314, 0.55 ) }
    dend_57 { pt3dadd( 2.50054, -84.7217, 6.50735, 0.55 ) }
    dend_57 { pt3dadd( 3.12938, -85.6781, 6.86329, 0.55 ) }
    dend_57 { pt3dadd( 4.06543, -86.978, 7.53277, 0.28 ) }
    dend_57 { pt3dadd( 5.14938, -88.2195, 8.23728, 0.55 ) }
    dend_57 { pt3dadd( 6.45278, -89.5758, 9.00556, 0.28 ) }
    dend_57 { pt3dadd( 7.55784, -90.6321, 9.69627, 1.11 ) }
    dend_57 { pt3dadd( 9.33121, -92.2162, 10.8742, 0.28 ) }
    dend_57 { pt3dadd( 10.5019, -93.1672, 11.8021, 0.83 ) }
    dend_57 { pt3dadd( 12.2501, -94.4679, 13.2926, 0.83 ) }
    dend_57 { pt3dadd( 13.298, -95.2217, 14.2286, 0.83 ) }
    dend_57 { pt3dadd( 15.0682, -96.5155, 15.8339, 0.83 ) }
    dend_57 { pt3dadd( 15.9898, -97.1825, 16.676, 1.11 ) }
    dend_57 { pt3dadd( 18.7977, -99.3648, 19.094, 0.28 ) }
    dend_57 { pt3dadd( 19.4134, -99.8895, 19.564, 0.28 ) }
    dend_57 { pt3dadd( 19.9429, -100.369, 19.9293, 0.55 ) }
    dend_57 { pt3dadd( 20.7172, -101.064, 20.3446, 0.55 ) }
    dend_57 { pt3dadd( 22.3175, -102.478, 20.8975, 0.55 ) }
    dend_57 { pt3dadd( 23.8125, -103.711, 21.2275, 0.55 ) }
    dend_57 { pt3dadd( 25.4264, -105.031, 21.3629, 0.83 ) }
    dend_57 { pt3dadd( 26.9428, -106.161, 21.4698, 1.11 ) }
    dend_57 { pt3dadd( 28.2684, -107.123, 21.5665, 0.55 ) }
    dend_57 { pt3dadd( 28.991, -107.66, 21.6282, 1.38 ) }
    dend_57 { pt3dadd( 29.9362, -108.356, 21.7224, 0.55 ) }
    dend_57 { pt3dadd( 31.0081, -109.015, 21.8226, 1.11 ) }
    dend_57 { pt3dadd( 33.3013, -110.307, 21.9791, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.88204, -83.6039, 6.24314, 1.38 ) }
    dend_30 { pt3dadd( 1.71893, -84.6762, 6.05991, 1.38 ) }
    dend_30 { pt3dadd( 1.15584, -87.8235, 5.77986, 1.38 ) }
    dend_30 { pt3dadd( 0.804929, -89.7848, 5.60533, 1.11 ) }
    dend_30 { pt3dadd( 0.042267, -94.0476, 5.22602, 1.66 ) }
    dend_30 { pt3dadd( -0.443744, -96.764, 4.98431, 2.22 ) }
    dend_30 { pt3dadd( -0.69157, -98.1492, 4.86105, 2.22 ) }
    dend_30 { pt3dadd( -1.30254, -102.124, 4.42728, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.80297, 69.3323, 3.72827, 1.38 ) }
    dend_12 { pt3dadd( 1.67115, 72.7255, 3.76266, 1.38 ) }
    dend_12 { pt3dadd( 1.65886, 75.0266, 3.75107, 1.38 ) }
    dend_12 { pt3dadd( 1.69416, 78.3903, 3.70114, 1.11 ) }
    dend_12 { pt3dadd( 1.85305, 83.5657, 3.6691, 1.38 ) }
    dend_12 { pt3dadd( 1.92158, 86.1508, 3.64854, 1.38 ) }
    dend_12 { pt3dadd( 1.94641, 90.6649, 3.65277, 1.38 ) }
    dend_12 { pt3dadd( 1.91161, 96.377, 3.6733, 1.38 ) }
    dend_12 { pt3dadd( 1.7869, 100.539, 3.7102, 1.38 ) }
    dend_12 { pt3dadd( 1.63243, 104.412, 3.76015, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 1.37937, 108.028, 3.83869, 1.38 ) }
    dend_12 { pt3dadd( 0.68291, 114.062, 4.03905, 1.66 ) }
    dend_12 { pt3dadd( 0.139022, 117.526, 4.19157, 1.38 ) }
    dend_12 { pt3dadd( -0.573598, 121.467, 4.27093, 1.38 ) }
    dend_12 { pt3dadd( -1.42555, 125.993, 4.22797, 1.38 ) }
    dend_12 { pt3dadd( -2.05815, 129.606, 4.07664, 1.38 ) }
    dend_12 { pt3dadd( -2.32606, 131.524, 3.96213, 1.38 ) }
    dend_12 { pt3dadd( -2.64339, 134.493, 3.74148, 1.11 ) }
    dend_12 { pt3dadd( -3.02768, 138.985, 3.40813, 1.11 ) }
    dend_12 { pt3dadd( -3.22143, 143.719, 3.03949, 1.11 ) }
    dend_12 { pt3dadd( -3.31203, 148.499, 2.7042, 1.38 ) }
    dend_12 { pt3dadd( -3.30819, 151.711, 2.55251, 1.11 ) }
    dend_12 { pt3dadd( -3.30593, 154.794, 2.49628, 1.38 ) }
    dend_12 { pt3dadd( -3.29339, 156.78, 2.56102, 1.38 ) }
    dend_12 { pt3dadd( -3.21642, 159.954, 2.91444, 1.38 ) }
    dend_12 { pt3dadd( -3.13853, 164.499, 3.57538, 1.94 ) }
    dend_12 { pt3dadd( -3.07342, 166.902, 3.95995, 1.66 ) }
    dend_12 { pt3dadd( -3.03968, 167.912, 4.11407, 1.66 ) }
    dend_12 { pt3dadd( -2.94297, 171.063, 4.551, 1.66 ) }
    dend_12 { pt3dadd( -2.80623, 176.034, 5.19459, 1.66 ) }
    dend_12 { pt3dadd( -2.79767, 178.627, 5.51161, 1.38 ) }
    dend_12 { pt3dadd( -2.85121, 182.72, 5.95127, 1.66 ) }
    dend_12 { pt3dadd( -2.89368, 186.328, 6.23515, 1.11 ) }
    dend_12 { pt3dadd( -2.93012, 190.327, 6.49628, 1.11 ) }
    dend_12 { pt3dadd( -2.97343, 192.554, 6.59543, 1.11 ) }
    dend_12 { pt3dadd( -3.00199, 195.013, 6.67043, 1.11 ) }
    dend_12 { pt3dadd( -2.97316, 196.854, 6.73487, 1.11 ) }
    dend_12 { pt3dadd( -2.78522, 200.764, 6.88147, 1.38 ) }
    dend_12 { pt3dadd( -2.56319, 203.744, 6.99446, 1.11 ) }
    dend_12 { pt3dadd( -2.38067, 205.977, 7.07008, 1.38 ) }
    dend_12 { pt3dadd( -2.17748, 208.513, 7.14343, 1.38 ) }
    dend_12 { pt3dadd( -2.00186, 211.404, 7.21497, 0.83 ) }
    dend_12 { pt3dadd( -1.88805, 214.905, 7.29106, 1.38 ) }
    dend_12 { pt3dadd( -1.90147, 217.698, 7.3403, 0.83 ) }
    dend_12 { pt3dadd( -1.98477, 220.535, 7.36366, 1.38 ) }
    dend_12 { pt3dadd( -2.13062, 222.77, 7.39814, 1.38 ) }
    dend_12 { pt3dadd( -2.46772, 226.437, 7.44428, 1.38 ) }
    dend_12 { pt3dadd( -2.60403, 228.054, 7.45177, 1.38 ) }
    dend_12 { pt3dadd( -2.75759, 230.566, 7.43789, 1.11 ) }
    dend_12 { pt3dadd( -2.8312, 233.689, 7.38411, 1.11 ) }
    dend_12 { pt3dadd( -2.78707, 238.203, 7.25749, 1.66 ) }
    dend_12 { pt3dadd( -2.63295, 241.106, 7.13869, 1.11 ) }
    dend_12 { pt3dadd( -2.52843, 242.255, 7.14864, 1.11 ) }
    dend_12 { pt3dadd( -2.37945, 244.248, 7.26877, 1.38 ) }
    dend_12 { pt3dadd( -2.21306, 246.769, 7.53664, 1.38 ) }
    dend_12 { pt3dadd( -2.08983, 249.61, 7.95956, 1.94 ) }
    dend_12 { pt3dadd( -2.06594, 252.552, 8.50692, 1.94 ) }
    dend_12 { pt3dadd( -2.23533, 257.35, 9.48162, 1.11 ) }
    dend_12 { pt3dadd( -2.46131, 260.022, 10.0138, 1.11 ) }
    dend_12 { pt3dadd( -2.78862, 262.553, 10.5047, 1.38 ) }
    dend_12 { pt3dadd( -3.3013, 265.598, 11.0472, 1.38 ) }
    dend_12 { pt3dadd( -3.76334, 268.144, 11.4228, 1.11 ) }
    dend_12 { pt3dadd( -4.22661, 270.944, 11.7009, 0.83 ) }
    dend_12 { pt3dadd( -4.70816, 274.147, 11.8245, 0.83 ) }
    dend_12 { pt3dadd( -4.9687, 275.995, 11.8903, 0.83 ) }
    dend_12 { pt3dadd( -5.42885, 279.206, 12.0018, 1.11 ) }
    dend_12 { pt3dadd( -5.77447, 282.025, 12.0614, 1.11 ) }
    dend_12 { pt3dadd( -6.1315, 284.927, 12.0991, 1.38 ) }
    dend_12 { pt3dadd( -6.68928, 289.342, 12.1386, 1.38 ) }
    dend_12 { pt3dadd( -6.99973, 292.046, 12.1467, 1.11 ) }
    dend_12 { pt3dadd( -7.35246, 295.253, 12.1457, 1.38 ) }
    dend_12 { pt3dadd( -7.68116, 297.885, 12.1117, 0.83 ) }
    dend_12 { pt3dadd( -8.19732, 301.4, 12.0572, 0.83 ) }
    dend_12 { pt3dadd( -8.59545, 304.188, 11.9783, 1.38 ) }
    dend_12 { pt3dadd( -8.71014, 305.443, 11.9181, 1.38 ) }
    dend_12 { pt3dadd( -8.89355, 307.742, 11.7857, 1.11 ) }
    dend_12 { pt3dadd( -9.20826, 311.543, 11.5475, 1.38 ) }
    dend_12 { pt3dadd( -9.37394, 313.857, 11.3907, 1.11 ) }
    dend_12 { pt3dadd( -9.45052, 316.131, 11.1963, 1.11 ) }
    dend_12 { pt3dadd( -9.50317, 318.407, 10.9953, 1.11 ) }
    dend_12 { pt3dadd( -9.57521, 321.246, 10.745, 1.11 ) }
    dend_12 { pt3dadd( -9.67481, 326.13, 10.2877, 1.11 ) }
    dend_12 { pt3dadd( -9.69003, 328.995, 10.0181, 1.11 ) }
    dend_12 { pt3dadd( -9.72196, 332.159, 9.79732, 1.38 ) }
    dend_12 { pt3dadd( -9.7887, 335.406, 9.67365, 1.38 ) }
    dend_12 { pt3dadd( -9.8823, 338.444, 9.64077, 0.83 ) }
    dend_12 { pt3dadd( -9.92424, 340.779, 9.68055, 1.38 ) }
    dend_12 { pt3dadd( -9.92773, 342.984, 9.78717, 1.38 ) }
    dend_12 { pt3dadd( -9.92989, 345.979, 10.0135, 1.11 ) }
    dend_12 { pt3dadd( -9.90533, 347.969, 10.2014, 0.55 ) }
    dend_12 { pt3dadd( -9.77573, 349.951, 10.3779, 1.11 ) }
    dend_12 { pt3dadd( -9.63634, 351.826, 10.5373, 1.11 ) }
    dend_12 { pt3dadd( -9.48385, 353.83, 10.6691, 0.83 ) }
    dend_12 { pt3dadd( -9.32484, 355.948, 10.728, 0.83 ) }
    dend_12 { pt3dadd( -9.19735, 357.873, 10.707, 0.83 ) }
    dend_12 { pt3dadd( -9.06987, 361.378, 10.6897, 1.11 ) }
    dend_12 { pt3dadd( -8.99091, 363.665, 10.639, 1.66 ) }
    dend_12 { pt3dadd( -9.00017, 365.866, 10.5804, 1.66 ) }
    dend_12 { pt3dadd( -9.13645, 368.716, 10.5156, 0.83 ) }
    dend_12 { pt3dadd( -9.27275, 371.004, 10.4507, 0.83 ) }
    dend_12 { pt3dadd( -9.43054, 374.234, 10.3398, 1.11 ) }
    dend_12 { pt3dadd( -9.67352, 378.079, 10.2078, 0.83 ) }
    dend_12 { pt3dadd( -9.91585, 382.373, 10.0578, 0.83 ) }
    dend_12 { pt3dadd( -10.0528, 384.83, 9.97029, 0.83 ) }
    dend_12 { pt3dadd( -10.3541, 389.909, 9.79752, 1.38 ) }
    dend_12 { pt3dadd( -10.7034, 394.984, 9.6535, 1.38 ) }
    dend_12 { pt3dadd( -10.8712, 397.245, 9.60645, 1.11 ) }
    dend_12 { pt3dadd( -11.2386, 400.75, 9.59841, 1.11 ) }
    dend_12 { pt3dadd( -11.4976, 402.976, 9.59705, 0.83 ) }
    dend_12 { pt3dadd( -11.7494, 404.54, 9.61372, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -12.2992, 407.156, 9.79962, 1.38 ) }
    dend_12 { pt3dadd( -12.5687, 408.517, 9.99871, 1.38 ) }
    dend_12 { pt3dadd( -12.9967, 411.706, 10.5732, 0.83 ) }
    dend_12 { pt3dadd( -13.1605, 413.886, 11.0194, 0.83 ) }
    dend_12 { pt3dadd( -13.3295, 417.368, 11.5768, 0.83 ) }
    dend_12 { pt3dadd( -13.3746, 420.624, 12.1068, 0.83 ) }
    dend_12 { pt3dadd( -13.2861, 424.805, 12.8076, 1.38 ) }
    dend_12 { pt3dadd( -13.1772, 427.644, 13.2986, 1.38 ) }
    dend_12 { pt3dadd( -12.9635, 429.621, 13.6347, 1.38 ) }
    dend_12 { pt3dadd( -12.1789, 434.204, 14.3153, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.80297, 69.3323, 3.72827, 1.11 ) }
    dend_1 { pt3dadd( 2.17112, 73.3884, -0.407086, 1.11 ) }
    dend_1 { pt3dadd( 2.30304, 74.6415, -1.51212, 1.11 ) }
    dend_1 { pt3dadd( 2.46541, 76.7997, -3.4556, 1.11 ) }
    dend_1 { pt3dadd( 2.8174, 82.987, -8.82097, 1.11 ) }
    dend_1 { pt3dadd( 2.91071, 85.2803, -10.5835, 1.11 ) }
    dend_1 { pt3dadd( 2.98115, 88.501, -12.8424, 0.83 ) }
    dend_1 { pt3dadd( 2.95544, 90.427, -13.9888, 0.83 ) }
    dend_1 { pt3dadd( 2.89899, 95.9308, -16.9174, 1.11 ) }
    dend_1 { pt3dadd( 2.87585, 98.4479, -18.0035, 1.11 ) }
    dend_1 { pt3dadd( 2.66437, 102.404, -19.143, 1.11 ) }
    dend_1 { pt3dadd( 2.30415, 106.028, -19.8768, 1.11 ) }
    dend_1 { pt3dadd( 1.99447, 108.554, -20.1366, 1.38 ) }
    dend_1 { pt3dadd( 1.80872, 110.325, -20.089, 1.38 ) }
    dend_1 { pt3dadd( 1.65317, 112.379, -19.8303, 1.11 ) }
    dend_1 { pt3dadd( 1.37453, 116.293, -19.315, 1.11 ) }
    dend_1 { pt3dadd( 1.13188, 120.43, -18.874, 0.83 ) }
    dend_1 { pt3dadd( 1.10553, 121.085, -18.7866, 0.83 ) }
    dend_1 { pt3dadd( 1.01097, 125.077, -18.3801, 1.66 ) }
    dend_1 { pt3dadd( 0.908784, 128.499, -18.2309, 0.83 ) }
    dend_1 { pt3dadd( 0.887622, 129.157, -18.2454, 0.83 ) }
    dend_1 { pt3dadd( 0.835124, 131.946, -18.4775, 1.66 ) }
    dend_1 { pt3dadd( 0.783409, 133.701, -18.7013, 1.66 ) }
    dend_1 { pt3dadd( 0.699425, 135.921, -18.9138, 1.11 ) }
    dend_1 { pt3dadd( 0.534891, 138.537, -19.1246, 1.11 ) }
    dend_1 { pt3dadd( 0.338178, 141.344, -19.2458, 1.11 ) }
    dend_1 { pt3dadd( 0.135513, 144.693, -19.4174, 1.66 ) }
    dend_1 { pt3dadd( -0.0369962, 147.858, -19.5387, 1.66 ) }
    dend_1 { pt3dadd( -0.243851, 151.164, -19.7344, 0.83 ) }
    dend_1 { pt3dadd( -0.424312, 154.074, -20.0239, 0.83 ) }
    dend_1 { pt3dadd( -0.51694, 156.128, -20.3217, 0.83 ) }
    dend_1 { pt3dadd( -0.578604, 159.077, -20.8204, 1.66 ) }
    dend_1 { pt3dadd( -0.601492, 161.899, -21.3494, 0.55 ) }
    dend_1 { pt3dadd( -0.616259, 164.652, -21.8576, 0.55 ) }
    dend_1 { pt3dadd( -0.564774, 167.727, -22.3648, 1.38 ) }
    dend_1 { pt3dadd( -0.450391, 170.289, -22.6756, 1.94 ) }
    dend_1 { pt3dadd( -0.305947, 173.381, -22.9393, 0.83 ) }
    dend_1 { pt3dadd( -0.242396, 175.101, -23.0184, 0.83 ) }
    dend_1 { pt3dadd( -0.184482, 178.006, -23.0908, 1.94 ) }
    dend_1 { pt3dadd( -0.144221, 181.66, -23.0208, 1.94 ) }
    dend_1 { pt3dadd( -0.164914, 184.04, -22.9433, 1.11 ) }
    dend_1 { pt3dadd( -0.17701, 186.834, -22.6908, 1.11 ) }
    dend_1 { pt3dadd( -0.202105, 189.365, -22.3743, 1.11 ) }
    dend_1 { pt3dadd( -0.214214, 190.823, -22.1458, 1.11 ) }
    dend_1 { pt3dadd( -0.239861, 192.315, -21.9066, 1.11 ) }
    dend_1 { pt3dadd( -0.434439, 197.864, -21.0075, 2.22 ) }
    dend_1 { pt3dadd( -0.609042, 204.213, -20.0142, 0.83 ) }
    dend_1 { pt3dadd( -0.629274, 206.065, -19.7603, 0.83 ) }
    dend_1 { pt3dadd( -0.592409, 208.568, -19.4784, 1.11 ) }
    dend_1 { pt3dadd( -0.536201, 211.686, -19.2365, 0.55 ) }
    dend_1 { pt3dadd( -0.572218, 214.113, -19.1613, 2.22 ) }
    dend_1 { pt3dadd( -0.64442, 215.629, -19.245, 1.94 ) }
    dend_1 { pt3dadd( -0.757502, 217.829, -19.5726, 0.83 ) }
    dend_1 { pt3dadd( -0.826276, 220.171, -19.9127, 0.83 ) }
    dend_1 { pt3dadd( -0.851683, 222.526, -20.2216, 0.83 ) }
    dend_1 { pt3dadd( -0.912646, 225.013, -20.4696, 1.66 ) }
    dend_1 { pt3dadd( -1.00132, 227.748, -20.7182, 0.83 ) }
    dend_1 { pt3dadd( -1.05689, 229.314, -20.8285, 0.83 ) }
    dend_1 { pt3dadd( -1.10678, 230.641, -20.9241, 1.11 ) }
    dend_1 { pt3dadd( -1.21173, 232.692, -21.0885, 0.83 ) }
    dend_1 { pt3dadd( -1.35152, 236.279, -21.415, 0.83 ) }
    dend_1 { pt3dadd( -1.38044, 236.927, -21.4739, 0.83 ) }
    dend_1 { pt3dadd( -1.63429, 240.506, -21.7668, 1.94 ) }
    dend_1 { pt3dadd( -1.82913, 243.175, -21.9886, 0.55 ) }
    dend_1 { pt3dadd( -2.03124, 246.19, -22.3071, 0.55 ) }
    dend_1 { pt3dadd( -2.07356, 246.733, -22.3882, 0.55 ) }
    dend_1 { pt3dadd( -2.4536, 251.026, -23.1541, 2.22 ) }
    dend_1 { pt3dadd( -2.67865, 254.304, -23.7699, 0.83 ) }
    dend_1 { pt3dadd( -2.73989, 255.79, -24.038, 0.83 ) }
    dend_1 { pt3dadd( -2.79339, 259.306, -24.6129, 1.38 ) }
    dend_1 { pt3dadd( -2.72783, 262.405, -25.0866, 0.55 ) }
    dend_1 { pt3dadd( -2.62425, 265.157, -25.4438, 0.55 ) }
    dend_1 { pt3dadd( -2.37874, 268.981, -25.9584, 0.83 ) }
    dend_1 { pt3dadd( -1.90397, 274.359, -26.3781, 0.83 ) }
    dend_1 { pt3dadd( -1.74748, 275.872, -26.4162, 2.49 ) }
    dend_1 { pt3dadd( -1.41689, 278.792, -26.321, 2.49 ) }
    dend_1 { pt3dadd( -0.907852, 283.333, -26.0033, 0.83 ) }
    dend_1 { pt3dadd( -0.633239, 285.891, -25.793, 0.83 ) }
    dend_1 { pt3dadd( -0.336455, 290.965, -25.3379, 0.83 ) }
    dend_1 { pt3dadd( -0.278361, 292.468, -25.1963, 0.83 ) }
    dend_1 { pt3dadd( -0.285918, 295.734, -24.9168, 1.66 ) }
    dend_1 { pt3dadd( -0.346667, 299.035, -24.676, 0.83 ) }
    dend_1 { pt3dadd( -0.407343, 301.448, -24.5341, 0.83 ) }
    dend_1 { pt3dadd( -0.515615, 305.054, -24.386, 0.83 ) }
    dend_1 { pt3dadd( -0.581235, 307.84, -24.3889, 1.94 ) }
    dend_1 { pt3dadd( -0.583721, 312.448, -24.3911, 0.83 ) }
    dend_1 { pt3dadd( -0.514048, 317.2, -24.3915, 0.83 ) }
    dend_1 { pt3dadd( -0.461982, 319.332, -24.3912, 0.83 ) }
    dend_1 { pt3dadd( -0.405148, 322.017, -24.391, 1.11 ) }
    dend_1 { pt3dadd( -0.36669, 324.097, -24.391, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -0.389587, 327.66, -24.3932, 0.83 ) }
    dend_1 { pt3dadd( -0.442056, 328.886, -24.3951, 0.83 ) }
    dend_1 { pt3dadd( -0.591855, 330.957, -24.3998, 0.83 ) }
    dend_1 { pt3dadd( -0.845007, 334.391, -24.4078, 0.83 ) }
    dend_1 { pt3dadd( -1.0538, 337.743, -24.4851, 0.83 ) }
    dend_1 { pt3dadd( -1.31905, 341.669, -24.6442, 1.11 ) }
    dend_1 { pt3dadd( -1.50745, 345.104, -24.8688, 1.66 ) }
    dend_1 { pt3dadd( -1.61318, 348.395, -25.1221, 0.83 ) }
    dend_1 { pt3dadd( -1.65986, 351.086, -25.3728, 0.83 ) }
    dend_1 { pt3dadd( -1.5768, 354.182, -25.7049, 0.83 ) }
    dend_1 { pt3dadd( -1.45557, 356.456, -25.9735, 0.83 ) }
    dend_1 { pt3dadd( -1.33422, 358.962, -26.2919, 0.83 ) }
    dend_1 { pt3dadd( -1.14152, 362.878, -26.7849, 1.66 ) }
    dend_1 { pt3dadd( -1.00296, 365.988, -27.1652, 0.83 ) }
    dend_1 { pt3dadd( -0.936899, 367.635, -27.3435, 0.83 ) }
    dend_1 { pt3dadd( -0.826531, 371.632, -27.6588, 1.38 ) }
    dend_1 { pt3dadd( -0.660535, 375.383, -27.9388, 0.83 ) }
    dend_1 { pt3dadd( -0.586154, 377.464, -28.0784, 0.83 ) }
    dend_1 { pt3dadd( -0.54431, 378.711, -28.1767, 1.66 ) }
    dend_1 { pt3dadd( -0.496471, 381.236, -28.3487, 1.66 ) }
    dend_1 { pt3dadd( -0.562811, 383.783, -28.5182, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 33.3013, -110.307, 21.9791, 0.83 ) }
    dend_59 { pt3dadd( 34.6232, -110.238, 23.3207, 0.83 ) }
    dend_59 { pt3dadd( 35.4853, -110.172, 24.2865, 0.28 ) }
    dend_59 { pt3dadd( 37.5603, -110.013, 26.611, 0.55 ) }
    dend_59 { pt3dadd( 38.3783, -109.951, 27.5274, 0.55 ) }
    dend_59 { pt3dadd( 39.5581, -109.86, 28.849, 0.55 ) }
    dend_59 { pt3dadd( 43.3509, -109.57, 33.098, 0.28 ) }
    dend_59 { pt3dadd( 43.8257, -109.579, 33.7353, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 33.3013, -110.307, 21.9791, 0.55 ) }
    dend_58 { pt3dadd( 34.9836, -111.899, 23.6081, 0.55 ) }
    dend_58 { pt3dadd( 35.4429, -112.16, 24.0474, 0.83 ) }
    dend_58 { pt3dadd( 36.5705, -112.877, 25.2031, 0.28 ) }
    dend_58 { pt3dadd( 37.0322, -113.189, 25.7448, 0.83 ) }
    dend_58 { pt3dadd( 37.9436, -113.785, 26.7937, 0.83 ) }
    dend_58 { pt3dadd( 40.1427, -115.206, 29.2655, 0.83 ) }
    dend_58 { pt3dadd( 43.0395, -116.869, 32.226, 0.83 ) }
    dend_58 { pt3dadd( 44.1491, -117.406, 33.443, 0.83 ) }
    dend_58 { pt3dadd( 46.9605, -118.331, 36.5793, 1.11 ) }
    dend_58 { pt3dadd( 47.8421, -118.485, 37.7214, 0.83 ) }
    dend_58 { pt3dadd( 48.1349, -118.474, 38.1635, 0.83 ) }
    dend_58 { pt3dadd( 49.0041, -118.053, 39.8231, 0.83 ) }
    dend_58 { pt3dadd( 50.2993, -116.507, 43.1582, 0.83 ) }
    dend_58 { pt3dadd( 51.1366, -115.097, 45.4517, 0.83 ) }
    dend_58 { pt3dadd( 51.9756, -112.872, 48.2157, 0.83 ) }
    dend_58 { pt3dadd( 52.2877, -111.73, 49.6203, 1.11 ) }
    dend_58 { pt3dadd( 52.6314, -109.962, 51.7528, 0.28 ) }
    dend_58 { pt3dadd( 52.654, -109.618, 52.1625, 0.55 ) }
    dend_58 { pt3dadd( 52.699, -108.043, 53.6589, 0.28 ) }
    dend_58 { pt3dadd( 52.4541, -107.191, 54.6156, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.30254, -102.124, 4.42728, 1.11 ) }
    dend_46 { pt3dadd( -2.23567, -103.294, 5.20458, 1.11 ) }
    dend_46 { pt3dadd( -3.29294, -104.906, 6.17207, 1.11 ) }
    dend_46 { pt3dadd( -5.71852, -109.434, 8.48644, 1.38 ) }
    dend_46 { pt3dadd( -6.96039, -112.134, 9.90028, 1.38 ) }
    dend_46 { pt3dadd( -7.87526, -114.123, 10.9418, 1.66 ) }
    dend_46 { pt3dadd( -9.32614, -117.278, 12.5936, 1.11 ) }
    dend_46 { pt3dadd( -10.0407, -119.105, 13.5347, 1.11 ) }
    dend_46 { pt3dadd( -10.8778, -121.951, 14.8938, 1.38 ) }
    dend_46 { pt3dadd( -11.8185, -126.822, 16.8643, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.30254, -102.124, 4.42728, 1.38 ) }
    dend_31 { pt3dadd( -1.3105, -104.859, 4.44087, 1.38 ) }
    dend_31 { pt3dadd( -1.26424, -107.071, 4.50056, 1.94 ) }
    dend_31 { pt3dadd( -1.20567, -108.676, 4.41649, 1.38 ) }
    dend_31 { pt3dadd( -1.04237, -111.334, 3.90766, 1.94 ) }
    dend_31 { pt3dadd( -0.834643, -113.396, 3.33763, 0.83 ) }
    dend_31 { pt3dadd( -0.664363, -114.642, 2.91143, 0.83 ) }
    dend_31 { pt3dadd( -0.345515, -116.238, 2.26756, 1.38 ) }
    dend_31 { pt3dadd( 0.331042, -118.631, 1.03609, 1.94 ) }
    dend_31 { pt3dadd( 1.27705, -121.165, -0.612026, 0.83 ) }
    dend_31 { pt3dadd( 1.62836, -121.94, -1.23016, 0.83 ) }
    dend_31 { pt3dadd( 2.56766, -123.824, -3.05754, 1.11 ) }
    dend_31 { pt3dadd( 3.13649, -124.902, -4.15635, 0.55 ) }
    dend_31 { pt3dadd( 3.41553, -125.468, -4.76917, 0.55 ) }
    dend_31 { pt3dadd( 3.93337, -126.634, -6.02174, 0.55 ) }
    dend_31 { pt3dadd( 4.15015, -127.239, -6.7313, 0.83 ) }
    dend_31 { pt3dadd( 4.57537, -128.593, -8.44041, 0.55 ) }
    dend_31 { pt3dadd( 4.95955, -129.925, -10.2836, 1.66 ) }
    dend_31 { pt3dadd( 5.46636, -132.026, -13.2619, 0.55 ) }
    dend_31 { pt3dadd( 5.62405, -132.937, -14.5269, 1.66 ) }
    dend_31 { pt3dadd( 5.84129, -134.907, -17.1323, 0.55 ) }
    dend_31 { pt3dadd( 5.94618, -135.77, -18.2935, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -12.1789, 434.204, 14.3153, 0.83 ) }
    dend_28 { pt3dadd( -12.7761, 435.874, 13.1905, 0.83 ) }
    dend_28 { pt3dadd( -13.509, 437.717, 12.0, 0.83 ) }
    dend_28 { pt3dadd( -14.3448, 440.13, 10.6019, 0.55 ) }
    dend_28 { pt3dadd( -15.0442, 442.524, 9.25805, 0.83 ) }
    dend_28 { pt3dadd( -15.6601, 444.946, 7.99988, 0.28 ) }
    dend_28 { pt3dadd( -15.9189, 446.071, 7.46634, 0.55 ) }
    dend_28 { pt3dadd( -16.1317, 446.84, 7.13802, 0.55 ) }
    dend_28 { pt3dadd( -16.6544, 449.093, 6.27336, 1.11 ) }
    dend_28 { pt3dadd( -16.9571, 451.023, 5.67361, 0.55 ) }
    dend_28 { pt3dadd( -17.1601, 452.684, 5.23187, 1.11 ) }
    dend_28 { pt3dadd( -17.2931, 454.121, 4.92377, 1.11 ) }
    dend_28 { pt3dadd( -17.4571, 456.287, 4.54892, 0.28 ) }
    dend_28 { pt3dadd( -17.7849, 459.098, 4.03785, 0.55 ) }
    dend_28 { pt3dadd( -18.298, 462.39, 3.45177, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -18.5239, 464.076, 3.18788, 0.55 ) }
    dend_28 { pt3dadd( -18.6625, 465.313, 3.0078, 0.28 ) }
    dend_28 { pt3dadd( -18.7439, 467.12, 2.83913, 0.83 ) }
    dend_28 { pt3dadd( -18.6888, 470.663, 2.76199, 1.38 ) }
    dend_28 { pt3dadd( -18.6549, 472.353, 2.83487, 1.38 ) }
    dend_28 { pt3dadd( -18.4303, 476.222, 3.13173, 0.83 ) }
    dend_28 { pt3dadd( -18.3069, 478.068, 3.32603, 0.83 ) }
    dend_28 { pt3dadd( -17.8624, 483.185, 4.03691, 0.83 ) }
    dend_28 { pt3dadd( -17.6978, 484.946, 4.32593, 0.83 ) }
    dend_28 { pt3dadd( -17.3381, 487.764, 4.91464, 0.83 ) }
    dend_28 { pt3dadd( -17.2513, 488.481, 5.07656, 0.83 ) }
    dend_28 { pt3dadd( -16.9658, 490.938, 5.61641, 1.38 ) }
    dend_28 { pt3dadd( -16.7634, 492.661, 5.92738, 0.55 ) }
    dend_28 { pt3dadd( -16.5877, 494.741, 6.16731, 0.55 ) }
    dend_28 { pt3dadd( -16.4567, 495.887, 6.20389, 0.55 ) }
    dend_28 { pt3dadd( -16.3449, 496.725, 6.17464, 0.28 ) }
    dend_28 { pt3dadd( -16.0363, 499.046, 5.96328, 0.83 ) }
    dend_28 { pt3dadd( -15.7984, 500.835, 5.65177, 0.55 ) }
    dend_28 { pt3dadd( -15.5312, 502.758, 5.20389, 0.83 ) }
    dend_28 { pt3dadd( -15.1635, 505.52, 4.51027, 0.55 ) }
    dend_28 { pt3dadd( -14.9736, 507.124, 4.10494, 1.66 ) }
    dend_28 { pt3dadd( -14.7099, 509.632, 3.47801, 1.66 ) }
    dend_28 { pt3dadd( -14.4758, 512.376, 2.83466, 0.83 ) }
    dend_28 { pt3dadd( -14.3305, 514.583, 2.36444, 0.83 ) }
    dend_28 { pt3dadd( -14.2517, 516.396, 2.03769, 0.83 ) }
    dend_28 { pt3dadd( -14.2367, 517.481, 1.8948, 0.28 ) }
    dend_28 { pt3dadd( -14.2405, 519.316, 1.75542, 1.11 ) }
    dend_28 { pt3dadd( -14.345, 522.074, 1.72015, 0.55 ) }
    dend_28 { pt3dadd( -14.4334, 523.662, 1.76793, 0.55 ) }
    dend_28 { pt3dadd( -14.5567, 525.32, 1.81179, 0.55 ) }
    dend_28 { pt3dadd( -14.6717, 526.416, 1.83663, 0.55 ) }
    dend_28 { pt3dadd( -14.9238, 527.998, 1.89411, 1.11 ) }
    dend_28 { pt3dadd( -15.279, 529.738, 1.97389, 0.28 ) }
    dend_28 { pt3dadd( -15.4588, 530.553, 2.01046, 0.55 ) }
    dend_28 { pt3dadd( -15.7817, 532.494, 2.03402, 0.55 ) }
    dend_28 { pt3dadd( -16.1425, 535.588, 1.98676, 0.55 ) }
    dend_28 { pt3dadd( -16.2065, 536.68, 1.94584, 0.83 ) }
    dend_28 { pt3dadd( -16.2642, 538.41, 1.82431, 0.83 ) }
    dend_28 { pt3dadd( -16.2641, 540.891, 1.64685, 0.83 ) }
    dend_28 { pt3dadd( -16.1516, 543.246, 1.49089, 0.83 ) }
    dend_28 { pt3dadd( -15.9562, 545.057, 1.34012, 0.83 ) }
    dend_28 { pt3dadd( -15.234, 549.037, 0.871273, 1.11 ) }
    dend_28 { pt3dadd( -14.776, 551.074, 0.585876, 0.28 ) }
    dend_28 { pt3dadd( -14.4487, 552.282, 0.365671, 0.55 ) }
    dend_28 { pt3dadd( -13.9924, 553.595, 0.22227, 0.55 ) }
    dend_28 { pt3dadd( -13.5259, 554.709, 0.186699, 0.55 ) }
    dend_28 { pt3dadd( -13.1128, 555.463, 0.197103, 0.55 ) }
    dend_28 { pt3dadd( -11.5439, 557.76, 0.207344, 0.55 ) }
    dend_28 { pt3dadd( -10.455, 559.39, 0.21848, 0.83 ) }
    dend_28 { pt3dadd( -7.94505, 563.507, -0.0539842, 0.55 ) }
    dend_28 { pt3dadd( -7.53963, 564.213, -0.0979936, 0.83 ) }
    dend_28 { pt3dadd( -6.80786, 565.614, -0.175998, 0.83 ) }
    dend_28 { pt3dadd( -5.99729, 567.37, -0.291962, 0.55 ) }
    dend_28 { pt3dadd( -5.37343, 568.976, -0.44709, 0.83 ) }
    dend_28 { pt3dadd( -4.60273, 571.582, -0.796585, 0.83 ) }
    dend_28 { pt3dadd( -4.07466, 573.873, -1.16311, 0.55 ) }
    dend_28 { pt3dadd( -3.88829, 574.717, -1.22914, 0.55 ) }
    dend_28 { pt3dadd( -3.47375, 576.612, -1.26052, 0.55 ) }
    dend_28 { pt3dadd( -3.27397, 577.529, -1.22407, 0.83 ) }
    dend_28 { pt3dadd( -2.892, 579.146, -1.12372, 0.83 ) }
    dend_28 { pt3dadd( -2.33271, 582.012, -0.902513, 0.55 ) }
    dend_28 { pt3dadd( -2.09525, 583.405, -0.84657, 0.55 ) }
    dend_28 { pt3dadd( -1.74691, 585.499, -0.739467, 0.55 ) }
    dend_28 { pt3dadd( -1.4905, 587.22, -0.643802, 0.55 ) }
    dend_28 { pt3dadd( -0.993739, 590.421, -0.494457, 0.55 ) }
    dend_28 { pt3dadd( -0.670517, 592.685, -0.444607, 0.83 ) }
    dend_28 { pt3dadd( -0.537073, 593.857, -0.472145, 1.11 ) }
    dend_28 { pt3dadd( -0.34145, 596.185, -0.472301, 0.55 ) }
    dend_28 { pt3dadd( -0.169901, 599.519, -0.322393, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.1789, 434.204, 14.3153, 0.55 ) }
    dend_13 { pt3dadd( -13.6025, 437.212, 14.5008, 0.55 ) }
    dend_13 { pt3dadd( -14.5207, 439.373, 14.6612, 0.55 ) }
    dend_13 { pt3dadd( -15.1968, 441.209, 14.7959, 0.55 ) }
    dend_13 { pt3dadd( -15.7505, 442.868, 14.9114, 0.55 ) }
    dend_13 { pt3dadd( -16.8392, 446.267, 15.1601, 0.55 ) }
    dend_13 { pt3dadd( -17.4672, 448.24, 15.308, 0.83 ) }
    dend_13 { pt3dadd( -18.2377, 450.721, 15.5848, 0.83 ) }
    dend_13 { pt3dadd( -19.005, 453.301, 15.8506, 0.83 ) }
    dend_13 { pt3dadd( -19.5405, 455.462, 16.0198, 0.55 ) }
    dend_13 { pt3dadd( -19.9166, 457.277, 16.129, 0.55 ) }
    dend_13 { pt3dadd( -20.4312, 459.771, 16.3107, 0.83 ) }
    dend_13 { pt3dadd( -20.8404, 461.777, 16.4728, 0.83 ) }
    dend_13 { pt3dadd( -21.5366, 464.924, 16.7641, 0.83 ) }
    dend_13 { pt3dadd( -21.9998, 466.983, 16.9718, 0.83 ) }
    dend_13 { pt3dadd( -22.3317, 468.586, 17.1391, 0.55 ) }
    dend_13 { pt3dadd( -22.6919, 470.657, 17.3461, 0.83 ) }
    dend_13 { pt3dadd( -22.9956, 472.96, 17.5926, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.562811, 383.783, -28.5182, 0.55 ) }
    dend_3 { pt3dadd( -0.609087, 385.791, -28.5237, 0.55 ) }
    dend_3 { pt3dadd( -0.676023, 388.696, -28.5316, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.562811, 383.783, -28.5182, 0.55 ) }
    dend_2 { pt3dadd( -3.3289, 384.042, -28.2385, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 43.8257, -109.579, 33.7353, 0.28 ) }
    dend_61 { pt3dadd( 44.0707, -112.455, 32.0979, 0.28 ) }
    dend_61 { pt3dadd( 44.1158, -112.985, 31.7961, 1.11 ) }
    dend_61 { pt3dadd( 44.3302, -115.503, 30.3632, 0.28 ) }
    dend_61 { pt3dadd( 44.3517, -115.756, 30.2191, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 43.8257, -109.579, 33.7353, 1.66 ) }
    dend_60 { pt3dadd( 43.8446, -108.77, 34.7027, 1.66 ) }
    dend_60 { pt3dadd( 43.6978, -106.533, 36.8512, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 43.5131, -104.294, 38.8775, 0.28 ) }
    dend_60 { pt3dadd( 43.4006, -103.534, 39.5073, 0.55 ) }
    dend_60 { pt3dadd( 42.8703, -100.905, 41.4496, 0.28 ) }
    dend_60 { pt3dadd( 42.5368, -99.3289, 42.5716, 0.83 ) }
    dend_60 { pt3dadd( 42.0184, -97.2873, 44.0162, 0.83 ) }
    dend_60 { pt3dadd( 41.6341, -95.9971, 44.8184, 0.28 ) }
    dend_60 { pt3dadd( 41.0399, -94.1244, 45.8613, 0.55 ) }
    dend_60 { pt3dadd( 40.3199, -92.4325, 46.6627, 0.55 ) }
    dend_60 { pt3dadd( 39.2238, -90.3812, 47.4645, 0.28 ) }
    dend_60 { pt3dadd( 38.8347, -89.7722, 47.6845, 0.83 ) }
    dend_60 { pt3dadd( 37.7085, -88.0697, 48.2736, 0.28 ) }
    dend_60 { pt3dadd( 36.3159, -86.0883, 48.8764, 0.55 ) }
    dend_60 { pt3dadd( 34.5487, -83.6985, 49.5584, 0.28 ) }
    dend_60 { pt3dadd( 33.2005, -82.0556, 49.9581, 1.11 ) }
    dend_60 { pt3dadd( 32.0866, -80.836, 50.1348, 0.28 ) }
    dend_60 { pt3dadd( 30.634, -79.2817, 50.3023, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -11.8185, -126.822, 16.8643, 0.83 ) }
    dend_56 { pt3dadd( -10.8646, -131.189, 17.3445, 0.83 ) }
    dend_56 { pt3dadd( -10.3162, -133.325, 17.5753, 0.83 ) }
    dend_56 { pt3dadd( -9.43003, -137.116, 17.9496, 0.83 ) }
    dend_56 { pt3dadd( -8.9459, -139.922, 18.4013, 0.55 ) }
    dend_56 { pt3dadd( -8.67478, -142.521, 18.9917, 0.83 ) }
    dend_56 { pt3dadd( -8.56693, -145.017, 19.7287, 0.83 ) }
    dend_56 { pt3dadd( -8.60811, -146.87, 20.5351, 0.83 ) }
    dend_56 { pt3dadd( -8.90662, -149.904, 22.1209, 0.83 ) }
    dend_56 { pt3dadd( -9.51437, -153.559, 24.2644, 0.83 ) }
    dend_56 { pt3dadd( -10.0716, -155.945, 25.7, 0.83 ) }
    dend_56 { pt3dadd( -11.1757, -159.741, 28.0932, 1.11 ) }
    dend_56 { pt3dadd( -12.1021, -162.585, 29.921, 0.55 ) }
    dend_56 { pt3dadd( -12.7182, -164.628, 31.153, 0.55 ) }
    dend_56 { pt3dadd( -13.3956, -167.185, 32.5155, 0.83 ) }
    dend_56 { pt3dadd( -13.7801, -168.851, 33.1939, 0.83 ) }
    dend_56 { pt3dadd( -14.0565, -170.301, 33.6812, 0.28 ) }
    dend_56 { pt3dadd( -14.3358, -171.824, 34.118, 0.55 ) }
    dend_56 { pt3dadd( -14.8947, -175.045, 34.9241, 1.11 ) }
    dend_56 { pt3dadd( -15.2151, -177.315, 35.4266, 0.28 ) }
    dend_56 { pt3dadd( -15.3896, -178.595, 35.6761, 0.55 ) }
    dend_56 { pt3dadd( -15.9814, -182.245, 36.3077, 0.28 ) }
    dend_56 { pt3dadd( -16.0985, -182.944, 36.4378, 0.83 ) }
    dend_56 { pt3dadd( -16.5117, -185.746, 37.0046, 0.83 ) }
    dend_56 { pt3dadd( -16.927, -188.655, 37.6079, 0.28 ) }
    dend_56 { pt3dadd( -16.9682, -189.091, 37.6888, 1.11 ) }
    dend_56 { pt3dadd( -17.0953, -191.047, 37.9669, 1.11 ) }
    dend_56 { pt3dadd( -17.3239, -193.951, 38.2406, 0.55 ) }
    dend_56 { pt3dadd( -17.4815, -196.202, 38.511, 1.11 ) }
    dend_56 { pt3dadd( -17.5859, -198.078, 38.8105, 1.11 ) }
    dend_56 { pt3dadd( -17.6691, -199.387, 39.1142, 1.11 ) }
    dend_56 { pt3dadd( -17.7941, -201.121, 39.5221, 0.28 ) }
    dend_56 { pt3dadd( -17.8254, -202.195, 39.8589, 0.55 ) }
    dend_56 { pt3dadd( -17.821, -203.857, 40.4543, 0.28 ) }
    dend_56 { pt3dadd( -17.8027, -204.685, 40.8893, 0.83 ) }
    dend_56 { pt3dadd( -17.7646, -206.299, 41.8687, 0.28 ) }
    dend_56 { pt3dadd( -17.7392, -207.155, 42.3921, 0.83 ) }
    dend_56 { pt3dadd( -17.5362, -210.366, 44.3074, 0.28 ) }
    dend_56 { pt3dadd( -17.4885, -211.355, 44.8162, 0.83 ) }
    dend_56 { pt3dadd( -17.4244, -214.144, 45.9866, 0.55 ) }
    dend_56 { pt3dadd( -17.4285, -216.024, 46.6537, 1.11 ) }
    dend_56 { pt3dadd( -17.4765, -218.064, 47.2108, 0.28 ) }
    dend_56 { pt3dadd( -17.5112, -219.163, 47.4269, 0.83 ) }
    dend_56 { pt3dadd( -17.6886, -222.135, 47.7208, 0.83 ) }
    dend_56 { pt3dadd( -17.7622, -223.734, 47.949, 0.28 ) }
    dend_56 { pt3dadd( -17.7661, -224.718, 48.1092, 0.28 ) }
    dend_56 { pt3dadd( -17.7187, -225.817, 48.4022, 0.83 ) }
    dend_56 { pt3dadd( -17.5852, -227.144, 48.8727, 0.83 ) }
    dend_56 { pt3dadd( -17.3176, -228.919, 49.6166, 0.55 ) }
    dend_56 { pt3dadd( -16.6755, -232.142, 51.105, 0.28 ) }
    dend_56 { pt3dadd( -16.5316, -233.04, 51.5315, 1.11 ) }
    dend_56 { pt3dadd( -16.3572, -234.361, 52.1086, 0.83 ) }
    dend_56 { pt3dadd( -16.0674, -237.056, 53.134, 0.28 ) }
    dend_56 { pt3dadd( -16.0179, -237.473, 53.2576, 0.55 ) }
    dend_56 { pt3dadd( -15.7452, -239.312, 53.6166, 0.55 ) }
    dend_56 { pt3dadd( -15.3486, -241.309, 53.7836, 0.55 ) }
    dend_56 { pt3dadd( -14.9983, -242.945, 53.8563, 0.55 ) }
    dend_56 { pt3dadd( -14.7088, -244.336, 53.8739, 0.55 ) }
    dend_56 { pt3dadd( -14.3562, -246.141, 53.8963, 0.55 ) }
    dend_56 { pt3dadd( -13.8328, -248.425, 53.9136, 0.55 ) }
    dend_56 { pt3dadd( -13.26, -250.636, 53.9205, 0.55 ) }
    dend_56 { pt3dadd( -12.6629, -252.797, 53.9153, 0.55 ) }
    dend_56 { pt3dadd( -12.2691, -254.349, 53.9473, 0.28 ) }
    dend_56 { pt3dadd( -11.8451, -256.235, 53.9929, 0.83 ) }
    dend_56 { pt3dadd( -11.4032, -258.881, 54.061, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.8185, -126.822, 16.8643, 1.38 ) }
    dend_47 { pt3dadd( -14.608, -127.547, 16.7608, 1.38 ) }
    dend_47 { pt3dadd( -17.9645, -128.42, 16.6363, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 5.94618, -135.77, -18.2935, 0.55 ) }
    dend_37 { pt3dadd( 6.37844, -141.103, -18.9051, 0.55 ) }
    dend_37 { pt3dadd( 6.49254, -143.751, -19.2988, 0.55 ) }
    dend_37 { pt3dadd( 6.63099, -146.918, -19.829, 2.49 ) }
    dend_37 { pt3dadd( 6.71384, -149.471, -20.3571, 0.55 ) }
    dend_37 { pt3dadd( 6.76627, -151.938, -20.9132, 0.55 ) }
    dend_37 { pt3dadd( 6.83262, -155.06, -21.6171, 0.83 ) }
    dend_37 { pt3dadd( 6.67966, -157.774, -22.2689, 0.28 ) }
    dend_37 { pt3dadd( 6.63045, -159.04, -22.6371, 0.55 ) }
    dend_37 { pt3dadd( 6.56496, -161.064, -23.3382, 0.28 ) }
    dend_37 { pt3dadd( 6.52664, -162.329, -23.8124, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.94618, -135.77, -18.2935, 0.83 ) }
    dend_32 { pt3dadd( 8.31489, -135.978, -19.394, 0.83 ) }
    dend_32 { pt3dadd( 10.4334, -135.991, -20.2084, 0.83 ) }
    dend_32 { pt3dadd( 12.7184, -135.915, -21.0852, 0.55 ) }
    dend_32 { pt3dadd( 15.5583, -135.854, -22.1599, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 16.5166, -135.904, -22.5734, 0.83 ) }
    dend_32 { pt3dadd( 18.4698, -136.22, -23.4093, 0.55 ) }
    dend_32 { pt3dadd( 20.2267, -136.691, -24.1198, 1.11 ) }
    dend_32 { pt3dadd( 22.0638, -137.487, -24.8414, 0.28 ) }
    dend_32 { pt3dadd( 23.355, -138.259, -25.3331, 0.83 ) }
    dend_32 { pt3dadd( 25.841, -140.184, -26.4039, 0.28 ) }
    dend_32 { pt3dadd( 28.1287, -142.251, -27.5284, 1.38 ) }
    dend_32 { pt3dadd( 29.4867, -143.576, -28.0992, 0.55 ) }
    dend_32 { pt3dadd( 30.5553, -144.691, -28.4276, 0.55 ) }
    dend_32 { pt3dadd( 32.1548, -146.401, -28.5919, 0.83 ) }
    dend_32 { pt3dadd( 33.3552, -147.705, -28.5196, 0.28 ) }
    dend_32 { pt3dadd( 34.9972, -149.441, -28.2702, 0.55 ) }
    dend_32 { pt3dadd( 38.39, -152.826, -27.4067, 0.28 ) }
    dend_32 { pt3dadd( 40.0349, -154.325, -26.8864, 0.83 ) }
    dend_32 { pt3dadd( 42.6867, -156.459, -25.9553, 0.55 ) }
    dend_32 { pt3dadd( 43.6309, -157.118, -25.5921, 0.55 ) }
    dend_32 { pt3dadd( 46.486, -158.912, -24.4974, 1.94 ) }
    dend_32 { pt3dadd( 49.8782, -161.0, -23.3495, 0.55 ) }
    dend_32 { pt3dadd( 51.4365, -161.893, -22.9169, 0.55 ) }
    dend_32 { pt3dadd( 52.8109, -162.617, -22.5316, 0.55 ) }
    dend_32 { pt3dadd( 55.5548, -164.195, -21.808, 0.28 ) }
    dend_32 { pt3dadd( 56.5004, -164.854, -21.5563, 1.38 ) }
    dend_32 { pt3dadd( 58.3587, -166.455, -21.0308, 1.38 ) }
    dend_32 { pt3dadd( 60.7077, -169.127, -20.6714, 0.55 ) }
    dend_32 { pt3dadd( 61.8222, -170.581, -20.1643, 0.55 ) }
    dend_32 { pt3dadd( 63.9663, -173.539, -18.8358, 1.11 ) }
    dend_32 { pt3dadd( 65.7099, -176.122, -17.6315, 0.28 ) }
    dend_32 { pt3dadd( 66.0329, -176.624, -17.3749, 0.83 ) }
    dend_32 { pt3dadd( 67.756, -179.369, -15.761, 0.28 ) }
    dend_32 { pt3dadd( 73.1156, -188.386, -9.94802, 0.83 ) }
    dend_32 { pt3dadd( 73.9479, -189.632, -8.70492, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -22.9956, 472.96, 17.5926, 0.55 ) }
    dend_23 { pt3dadd( -23.0577, 474.505, 17.7032, 0.55 ) }
    dend_23 { pt3dadd( -23.0589, 476.007, 18.0387, 0.28 ) }
    dend_23 { pt3dadd( -23.1347, 477.349, 18.4502, 0.55 ) }
    dend_23 { pt3dadd( -23.2906, 478.295, 18.8238, 0.28 ) }
    dend_23 { pt3dadd( -23.6109, 479.671, 19.3537, 0.83 ) }
    dend_23 { pt3dadd( -23.9491, 481.073, 19.8455, 0.83 ) }
    dend_23 { pt3dadd( -24.4267, 483.234, 21.0401, 0.55 ) }
    dend_23 { pt3dadd( -24.66, 484.467, 21.885, 0.55 ) }
    dend_23 { pt3dadd( -25.0489, 486.797, 23.6847, 0.83 ) }
    dend_23 { pt3dadd( -25.278, 488.085, 24.7534, 0.83 ) }
    dend_23 { pt3dadd( -25.4949, 489.548, 26.0898, 0.83 ) }
    dend_23 { pt3dadd( -26.3589, 494.187, 30.2458, 0.55 ) }
    dend_23 { pt3dadd( -26.509, 495.133, 31.0265, 0.55 ) }
    dend_23 { pt3dadd( -26.5524, 495.575, 31.3702, 0.83 ) }
    dend_23 { pt3dadd( -26.5982, 496.585, 32.1019, 0.55 ) }
    dend_23 { pt3dadd( -26.6831, 499.714, 34.0236, 1.11 ) }
    dend_23 { pt3dadd( -26.7633, 502.457, 35.3042, 0.83 ) }
    dend_23 { pt3dadd( -26.8254, 504.395, 35.8685, 0.55 ) }
    dend_23 { pt3dadd( -26.8228, 505.844, 36.2531, 1.11 ) }
    dend_23 { pt3dadd( -26.7758, 507.454, 36.685, 0.55 ) }
    dend_23 { pt3dadd( -26.5956, 510.108, 37.3824, 1.11 ) }
    dend_23 { pt3dadd( -26.4681, 512.149, 37.8897, 0.55 ) }
    dend_23 { pt3dadd( -26.336, 513.974, 38.4191, 0.55 ) }
    dend_23 { pt3dadd( -26.3259, 514.966, 38.7341, 0.28 ) }
    dend_23 { pt3dadd( -26.3555, 516.736, 39.3189, 0.83 ) }
    dend_23 { pt3dadd( -26.4466, 518.531, 39.8654, 0.55 ) }
    dend_23 { pt3dadd( -26.5858, 520.14, 40.3018, 0.83 ) }
    dend_23 { pt3dadd( -26.7793, 521.668, 40.671, 0.83 ) }
    dend_23 { pt3dadd( -27.1598, 523.868, 41.1794, 0.55 ) }
    dend_23 { pt3dadd( -27.5943, 526.059, 41.626, 0.55 ) }
    dend_23 { pt3dadd( -28.2366, 528.882, 42.1239, 0.83 ) }
    dend_23 { pt3dadd( -28.926, 531.676, 42.5978, 0.83 ) }
    dend_23 { pt3dadd( -29.576, 534.284, 43.0262, 0.83 ) }
    dend_23 { pt3dadd( -29.9959, 535.908, 43.2813, 0.83 ) }
    dend_23 { pt3dadd( -30.5374, 538.075, 43.5804, 0.83 ) }
    dend_23 { pt3dadd( -31.0309, 539.973, 43.8544, 0.83 ) }
    dend_23 { pt3dadd( -31.476, 542.037, 44.2049, 0.83 ) }
    dend_23 { pt3dadd( -31.708, 543.249, 44.4295, 0.83 ) }
    dend_23 { pt3dadd( -31.9613, 544.931, 44.7805, 0.55 ) }
    dend_23 { pt3dadd( -32.1957, 546.362, 45.0348, 0.83 ) }
    dend_23 { pt3dadd( -32.5013, 548.114, 45.3707, 0.83 ) }
    dend_23 { pt3dadd( -32.9871, 550.958, 45.9321, 0.55 ) }
    dend_23 { pt3dadd( -33.4994, 553.697, 46.5172, 0.83 ) }
    dend_23 { pt3dadd( -34.1069, 556.619, 47.1815, 0.55 ) }
    dend_23 { pt3dadd( -34.9298, 559.753, 47.9546, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -22.9956, 472.96, 17.5926, 0.55 ) }
    dend_14 { pt3dadd( -23.2852, 474.525, 18.7563, 0.55 ) }
    dend_14 { pt3dadd( -23.6532, 475.773, 19.5489, 0.28 ) }
    dend_14 { pt3dadd( -23.8665, 476.345, 19.8886, 0.83 ) }
    dend_14 { pt3dadd( -24.2055, 477.138, 20.3504, 0.28 ) }
    dend_14 { pt3dadd( -24.382, 477.535, 20.5727, 0.28 ) }
    dend_14 { pt3dadd( -24.6837, 478.174, 20.922, 0.83 ) }
    dend_14 { pt3dadd( -25.3203, 479.468, 21.4934, 0.83 ) }
    dend_14 { pt3dadd( -25.6747, 480.144, 21.7399, 0.28 ) }
    dend_14 { pt3dadd( -26.1663, 481.156, 22.1035, 0.83 ) }
    dend_14 { pt3dadd( -26.4183, 481.673, 22.2919, 0.55 ) }
    dend_14 { pt3dadd( -26.8795, 482.68, 22.6747, 1.11 ) }
    dend_14 { pt3dadd( -27.2999, 483.661, 23.0366, 0.55 ) }
    dend_14 { pt3dadd( -27.6219, 484.494, 23.3189, 1.11 ) }
    dend_14 { pt3dadd( -27.9538, 485.441, 23.6145, 0.55 ) }
    dend_14 { pt3dadd( -28.3792, 486.771, 23.9976, 1.11 ) }
    dend_14 { pt3dadd( -28.628, 487.57, 24.2336, 0.28 ) }
    dend_14 { pt3dadd( -28.8118, 488.205, 24.4262, 0.55 ) }
    dend_14 { pt3dadd( -29.031, 488.932, 24.6785, 0.28 ) }
    dend_14 { pt3dadd( -29.1775, 489.448, 24.8668, 0.83 ) }
    dend_14 { pt3dadd( -29.3555, 490.134, 25.056, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.676023, 388.696, -28.5316, 0.83 ) }
    dend_5 { pt3dadd( 0.176054, 392.126, -28.818, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 0.589728, 393.993, -29.0048, 0.83 ) }
    dend_5 { pt3dadd( 1.18775, 396.778, -29.2816, 2.22 ) }
    dend_5 { pt3dadd( 1.75216, 399.599, -29.5899, 1.66 ) }
    dend_5 { pt3dadd( 2.43008, 403.036, -29.8312, 0.83 ) }
    dend_5 { pt3dadd( 2.64115, 404.17, -29.8841, 0.83 ) }
    dend_5 { pt3dadd( 3.01595, 406.698, -29.9832, 0.83 ) }
    dend_5 { pt3dadd( 3.44642, 410.185, -30.0325, 1.66 ) }
    dend_5 { pt3dadd( 3.64167, 412.896, -30.0278, 0.55 ) }
    dend_5 { pt3dadd( 3.67378, 415.624, -30.0828, 0.55 ) }
    dend_5 { pt3dadd( 3.63133, 417.325, -30.1685, 1.11 ) }
    dend_5 { pt3dadd( 3.52431, 420.242, -30.457, 0.55 ) }
    dend_5 { pt3dadd( 3.28447, 425.017, -31.1958, 1.66 ) }
    dend_5 { pt3dadd( 3.24784, 427.445, -31.637, 0.83 ) }
    dend_5 { pt3dadd( 3.32592, 431.409, -32.4118, 0.83 ) }
    dend_5 { pt3dadd( 3.4143, 433.33, -32.826, 0.83 ) }
    dend_5 { pt3dadd( 3.61814, 435.471, -33.2353, 1.66 ) }
    dend_5 { pt3dadd( 4.02926, 438.381, -33.6992, 0.83 ) }
    dend_5 { pt3dadd( 4.81549, 442.849, -34.2085, 0.83 ) }
    dend_5 { pt3dadd( 5.50016, 446.194, -34.4054, 0.83 ) }
    dend_5 { pt3dadd( 5.79253, 447.464, -34.3917, 0.83 ) }
    dend_5 { pt3dadd( 6.43085, 450.316, -34.2945, 0.83 ) }
    dend_5 { pt3dadd( 6.82004, 452.197, -34.2366, 1.38 ) }
    dend_5 { pt3dadd( 7.39927, 455.129, -34.1352, 0.55 ) }
    dend_5 { pt3dadd( 7.80844, 457.073, -34.0651, 1.38 ) }
    dend_5 { pt3dadd( 8.6323, 460.789, -33.9197, 1.38 ) }
    dend_5 { pt3dadd( 9.297, 463.972, -33.8039, 0.83 ) }
    dend_5 { pt3dadd( 9.97132, 467.427, -33.6803, 0.83 ) }
    dend_5 { pt3dadd( 10.7409, 471.204, -33.5276, 1.11 ) }
    dend_5 { pt3dadd( 11.3591, 474.305, -33.394, 0.55 ) }
    dend_5 { pt3dadd( 11.7942, 476.799, -33.2893, 0.55 ) }
    dend_5 { pt3dadd( 12.1283, 478.774, -33.2717, 0.55 ) }
    dend_5 { pt3dadd( 12.9174, 483.151, -33.332, 2.22 ) }
    dend_5 { pt3dadd( 13.2833, 485.11, -33.4057, 0.55 ) }
    dend_5 { pt3dadd( 13.677, 487.07, -33.5101, 0.55 ) }
    dend_5 { pt3dadd( 13.8658, 488.038, -33.571, 1.11 ) }
    dend_5 { pt3dadd( 14.7804, 492.635, -33.8591, 0.55 ) }
    dend_5 { pt3dadd( 15.231, 495.174, -34.0241, 0.55 ) }
    dend_5 { pt3dadd( 15.3695, 496.17, -34.0918, 0.55 ) }
    dend_5 { pt3dadd( 15.6366, 499.278, -34.2816, 1.11 ) }
    dend_5 { pt3dadd( 15.7761, 502.266, -34.5015, 1.11 ) }
    dend_5 { pt3dadd( 15.8268, 504.722, -34.6596, 0.83 ) }
    dend_5 { pt3dadd( 15.7372, 507.286, -34.7762, 0.83 ) }
    dend_5 { pt3dadd( 15.646, 508.905, -34.8735, 0.83 ) }
    dend_5 { pt3dadd( 15.3501, 512.137, -35.1323, 0.83 ) }
    dend_5 { pt3dadd( 14.8299, 515.793, -35.5456, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.676023, 388.696, -28.5316, 0.55 ) }
    dend_4 { pt3dadd( -3.20643, 388.641, -28.5184, 0.55 ) }
    dend_4 { pt3dadd( -5.85302, 388.584, -28.5047, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -17.9645, -128.42, 16.6363, 1.11 ) }
    dend_53 { pt3dadd( -17.9675, -129.071, 16.6072, 1.11 ) }
    dend_53 { pt3dadd( -17.9725, -130.172, 16.5581, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -17.9645, -128.42, 16.6363, 1.11 ) }
    dend_48 { pt3dadd( -20.8387, -126.76, 14.1115, 1.11 ) }
    dend_48 { pt3dadd( -21.8032, -126.071, 13.3478, 0.28 ) }
    dend_48 { pt3dadd( -22.4975, -125.62, 13.0414, 0.83 ) }
    dend_48 { pt3dadd( -25.1779, -123.96, 12.2853, 0.55 ) }
    dend_48 { pt3dadd( -26.4269, -123.257, 12.0282, 0.55 ) }
    dend_48 { pt3dadd( -27.6306, -122.602, 11.7446, 0.55 ) }
    dend_48 { pt3dadd( -29.3118, -121.786, 11.3956, 0.55 ) }
    dend_48 { pt3dadd( -33.4622, -119.989, 10.402, 1.11 ) }
    dend_48 { pt3dadd( -35.9038, -118.961, 9.79022, 0.55 ) }
    dend_48 { pt3dadd( -37.493, -118.308, 9.40265, 0.55 ) }
    dend_48 { pt3dadd( -41.1242, -117.05, 8.42635, 0.83 ) }
    dend_48 { pt3dadd( -43.3158, -116.398, 7.81177, 0.55 ) }
    dend_48 { pt3dadd( -45.4547, -115.859, 7.18883, 1.11 ) }
    dend_48 { pt3dadd( -48.8928, -115.132, 6.0718, 0.83 ) }
    dend_48 { pt3dadd( -50.1115, -114.939, 5.71673, 0.83 ) }
    dend_48 { pt3dadd( -51.8295, -114.701, 5.32252, 0.83 ) }
    dend_48 { pt3dadd( -54.5432, -114.462, 4.91961, 0.83 ) }
    dend_48 { pt3dadd( -57.9761, -114.292, 4.46169, 1.11 ) }
    dend_48 { pt3dadd( -59.5695, -114.294, 4.19675, 0.83 ) }
    dend_48 { pt3dadd( -61.8435, -114.397, 3.73639, 0.83 ) }
    dend_48 { pt3dadd( -65.1771, -114.628, 2.95714, 0.83 ) }
    dend_48 { pt3dadd( -67.3396, -114.862, 2.33446, 0.55 ) }
    dend_48 { pt3dadd( -68.9364, -115.174, 1.79791, 1.38 ) }
    dend_48 { pt3dadd( -71.2047, -115.662, 0.867964, 0.55 ) }
    dend_48 { pt3dadd( -73.2483, -116.014, -0.0646327, 0.55 ) }
    dend_48 { pt3dadd( -74.4819, -116.245, -0.70313, 0.55 ) }
    dend_48 { pt3dadd( -76.2918, -116.596, -1.78623, 0.55 ) }
    dend_48 { pt3dadd( -77.2628, -116.74, -2.42779, 0.83 ) }
    dend_48 { pt3dadd( -80.4861, -116.96, -4.71043, 0.55 ) }
    dend_48 { pt3dadd( -81.611, -116.999, -5.54451, 0.55 ) }
    dend_48 { pt3dadd( -82.8852, -116.971, -6.50634, 0.55 ) }
    dend_48 { pt3dadd( -85.3805, -116.815, -8.16509, 0.55 ) }
    dend_48 { pt3dadd( -88.0306, -116.578, -9.6879, 1.11 ) }
    dend_48 { pt3dadd( -90.7498, -116.335, -11.0788, 0.55 ) }
    dend_48 { pt3dadd( -91.4906, -116.3, -11.3893, 0.55 ) }
    dend_48 { pt3dadd( -94.0179, -116.3, -12.2444, 0.55 ) }
    dend_48 { pt3dadd( -96.961, -116.345, -12.9173, 1.94 ) }
    dend_48 { pt3dadd( -99.1106, -116.506, -13.0805, 0.83 ) }
    dend_48 { pt3dadd( -99.8923, -116.602, -13.0991, 0.28 ) }
    dend_48 { pt3dadd( -101.267, -116.873, -13.1235, 0.55 ) }
    dend_48 { pt3dadd( -103.239, -117.355, -13.1854, 0.55 ) }
    dend_48 { pt3dadd( -104.943, -117.854, -13.2675, 0.28 ) }
    dend_48 { pt3dadd( -107.951, -118.779, -13.358, 1.11 ) }
    dend_48 { pt3dadd( -110.2, -119.532, -13.3102, 0.28 ) }
    dend_48 { pt3dadd( -112.673, -120.241, -13.1804, 0.83 ) }
    dend_48 { pt3dadd( -114.6, -120.693, -12.9948, 0.28 ) }
    dend_48 { pt3dadd( -115.437, -120.831, -12.8714, 0.28 ) }
    dend_48 { pt3dadd( -117.531, -121.016, -12.4318, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -118.675, -121.004, -12.1127, 0.55 ) }
    dend_48 { pt3dadd( -120.961, -120.725, -11.4028, 0.55 ) }
    dend_48 { pt3dadd( -121.902, -120.447, -11.1859, 0.83 ) }
    dend_48 { pt3dadd( -123.418, -119.879, -10.9718, 0.28 ) }
    dend_48 { pt3dadd( -123.79, -119.742, -10.9436, 0.83 ) }
    dend_48 { pt3dadd( -126.16, -118.879, -10.9139, 0.83 ) }
    dend_48 { pt3dadd( -128.093, -118.181, -10.9166, 0.83 ) }
    dend_48 { pt3dadd( -130.301, -117.501, -10.9448, 0.55 ) }
    dend_48 { pt3dadd( -131.42, -117.201, -10.9701, 0.55 ) }
    dend_48 { pt3dadd( -133.514, -116.766, -11.0099, 1.38 ) }
    dend_48 { pt3dadd( -135.754, -116.417, -11.0379, 1.38 ) }
    dend_48 { pt3dadd( -137.62, -116.231, -11.0457, 0.28 ) }
    dend_48 { pt3dadd( -139.126, -116.249, -11.0731, 0.83 ) }
    dend_48 { pt3dadd( -140.314, -116.401, -11.1042, 0.28 ) }
    dend_48 { pt3dadd( -141.439, -116.672, -11.1528, 1.38 ) }
    dend_48 { pt3dadd( -143.133, -117.231, -11.2624, 0.28 ) }
    dend_48 { pt3dadd( -143.719, -117.512, -11.3148, 0.83 ) }
    dend_48 { pt3dadd( -145.321, -118.481, -11.4983, 0.55 ) }
    dend_48 { pt3dadd( -146.17, -119.029, -11.6219, 0.55 ) }
    dend_48 { pt3dadd( -147.653, -119.972, -11.8836, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 6.52664, -162.329, -23.8124, 0.83 ) }
    dend_39 { pt3dadd( 6.59999, -163.735, -23.8957, 0.83 ) }
    dend_39 { pt3dadd( 6.57844, -165.075, -24.1087, 1.94 ) }
    dend_39 { pt3dadd( 6.545, -166.422, -24.3782, 1.94 ) }
    dend_39 { pt3dadd( 6.37285, -169.099, -24.9906, 0.83 ) }
    dend_39 { pt3dadd( 6.22962, -170.965, -25.4209, 1.38 ) }
    dend_39 { pt3dadd( 5.72114, -175.813, -26.6279, 0.28 ) }
    dend_39 { pt3dadd( 5.67065, -176.239, -26.749, 0.83 ) }
    dend_39 { pt3dadd( 5.48925, -177.461, -27.1607, 0.55 ) }
    dend_39 { pt3dadd( 5.13606, -179.153, -27.8346, 0.28 ) }
    dend_39 { pt3dadd( 4.65571, -180.757, -28.597, 0.55 ) }
    dend_39 { pt3dadd( 3.9656, -182.922, -29.5784, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 6.52664, -162.329, -23.8124, 0.28 ) }
    dend_38 { pt3dadd( 6.69067, -161.203, -19.5588, 0.28 ) }
    dend_38 { pt3dadd( 6.71408, -161.042, -18.9517, 1.38 ) }
    dend_38 { pt3dadd( 6.88218, -159.889, -14.5927, 0.55 ) }
    dend_38 { pt3dadd( 6.97837, -159.229, -12.0984, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 73.9479, -189.632, -8.70492, 1.38 ) }
    dend_34 { pt3dadd( 74.6474, -192.804, -8.76953, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 73.9479, -189.632, -8.70492, 0.55 ) }
    dend_33 { pt3dadd( 74.5527, -188.746, -9.86934, 0.55 ) }
    dend_33 { pt3dadd( 74.9422, -188.176, -10.6193, 0.55 ) }
    dend_33 { pt3dadd( 75.9694, -186.671, -12.5971, 0.28 ) }
    dend_33 { pt3dadd( 76.3022, -186.183, -13.238, 1.11 ) }
    dend_33 { pt3dadd( 77.3216, -184.69, -15.2007, 0.28 ) }
    dend_33 { pt3dadd( 78.1751, -183.439, -16.8441, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -34.9298, 559.753, 47.9546, 1.38 ) }
    dend_25 { pt3dadd( -34.6619, 561.355, 48.2909, 1.38 ) }
    dend_25 { pt3dadd( -34.5249, 562.791, 48.6904, 0.55 ) }
    dend_25 { pt3dadd( -34.4726, 563.995, 49.2676, 0.55 ) }
    dend_25 { pt3dadd( -34.4271, 565.043, 49.7698, 0.55 ) }
    dend_25 { pt3dadd( -34.3743, 566.26, 50.3529, 1.11 ) }
    dend_25 { pt3dadd( -34.2685, 568.696, 51.5205, 0.55 ) }
    dend_25 { pt3dadd( -34.2825, 570.431, 52.5469, 1.11 ) }
    dend_25 { pt3dadd( -34.3637, 572.946, 54.3104, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -34.9298, 559.753, 47.9546, 0.55 ) }
    dend_24 { pt3dadd( -35.6229, 562.567, 47.6693, 0.55 ) }
    dend_24 { pt3dadd( -36.0449, 563.741, 47.6453, 0.28 ) }
    dend_24 { pt3dadd( -36.5978, 564.856, 47.5801, 0.83 ) }
    dend_24 { pt3dadd( -37.6718, 566.818, 47.4464, 0.28 ) }
    dend_24 { pt3dadd( -38.6862, 568.494, 47.3572, 0.55 ) }
    dend_24 { pt3dadd( -39.679, 570.053, 47.3, 0.55 ) }
    dend_24 { pt3dadd( -41.7083, 572.741, 47.2404, 1.11 ) }
    dend_24 { pt3dadd( -43.5935, 574.947, 47.2876, 0.55 ) }
    dend_24 { pt3dadd( -44.3334, 575.766, 47.2799, 0.55 ) }
    dend_24 { pt3dadd( -46.0083, 577.586, 47.2528, 0.83 ) }
    dend_24 { pt3dadd( -47.1774, 578.825, 47.1894, 0.83 ) }
    dend_24 { pt3dadd( -48.899, 580.662, 46.9149, 0.83 ) }
    dend_24 { pt3dadd( -49.8084, 581.644, 46.6995, 0.83 ) }
    dend_24 { pt3dadd( -51.9493, 584.244, 46.0346, 0.55 ) }
    dend_24 { pt3dadd( -53.5399, 586.437, 45.2566, 0.83 ) }
    dend_24 { pt3dadd( -54.5059, 587.858, 44.5896, 0.83 ) }
    dend_24 { pt3dadd( -56.1276, 590.365, 43.281, 0.55 ) }
    dend_24 { pt3dadd( -57.4055, 592.507, 42.1253, 0.55 ) }
    dend_24 { pt3dadd( -58.187, 593.833, 41.3898, 0.83 ) }
    dend_24 { pt3dadd( -60.0761, 596.882, 39.7537, 0.83 ) }
    dend_24 { pt3dadd( -61.2295, 598.752, 38.7203, 0.83 ) }
    dend_24 { pt3dadd( -62.0635, 600.092, 37.9721, 0.28 ) }
    dend_24 { pt3dadd( -62.705, 601.094, 37.3432, 0.55 ) }
    dend_24 { pt3dadd( -63.8791, 602.809, 35.7302, 0.55 ) }
    dend_24 { pt3dadd( -64.5641, 603.74, 34.7025, 0.55 ) }
    dend_24 { pt3dadd( -65.1543, 604.496, 33.7491, 0.55 ) }
    dend_24 { pt3dadd( -66.675, 606.338, 31.1796, 0.55 ) }
    dend_24 { pt3dadd( -68.3167, 608.057, 28.3581, 0.83 ) }
    dend_24 { pt3dadd( -71.1022, 610.542, 23.7904, 0.28 ) }
    dend_24 { pt3dadd( -72.0278, 611.207, 22.275, 0.28 ) }
    dend_24 { pt3dadd( -72.5533, 611.536, 21.3701, 0.55 ) }
    dend_24 { pt3dadd( -73.225, 611.921, 20.1045, 0.28 ) }
    dend_24 { pt3dadd( -73.6318, 612.16, 19.255, 0.83 ) }
    dend_24 { pt3dadd( -74.2334, 612.587, 17.9173, 0.83 ) }
    dend_24 { pt3dadd( -76.0634, 614.144, 13.3012, 0.83 ) }
    dend_24 { pt3dadd( -77.3643, 615.296, 9.69876, 0.28 ) }
    dend_24 { pt3dadd( -78.5916, 616.35, 6.17846, 1.11 ) }
    dend_24 { pt3dadd( -80.3885, 617.86, 0.962761, 0.55 ) }
    dend_24 { pt3dadd( -80.893, 618.242, -0.396331, 0.55 ) }
    dend_24 { pt3dadd( -81.8826, 618.847, -2.82414, 0.55 ) }
    dend_24 { pt3dadd( -82.6621, 619.211, -4.41484, 0.55 ) }
    dend_24 { pt3dadd( -83.631, 619.529, -6.08895, 0.83 ) }
    dend_24 { pt3dadd( -85.542, 620.002, -8.94861, 0.55 ) }
    dend_24 { pt3dadd( -86.997, 620.314, -10.9963, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -91.5742, 621.292, -17.2714, 0.28 ) }
    dend_24 { pt3dadd( -92.1165, 621.439, -18.0558, 0.55 ) }
    dend_24 { pt3dadd( -93.9697, 622.075, -20.7923, 0.28 ) }
    dend_24 { pt3dadd( -95.3315, 622.594, -22.8883, 1.11 ) }
    dend_24 { pt3dadd( -97.4389, 623.444, -26.3271, 0.55 ) }
    dend_24 { pt3dadd( -98.3131, 623.879, -27.9986, 1.11 ) }
    dend_24 { pt3dadd( -100.177, 625.006, -32.0886, 0.55 ) }
    dend_24 { pt3dadd( -100.625, 625.338, -33.2383, 0.55 ) }
    dend_24 { pt3dadd( -101.642, 626.23, -36.2431, 1.11 ) }
    dend_24 { pt3dadd( -102.09, 626.706, -37.8042, 1.11 ) }
    dend_24 { pt3dadd( -103.442, 628.467, -43.4036, 0.28 ) }
    dend_24 { pt3dadd( -103.804, 628.988, -45.058, 0.83 ) }
    dend_24 { pt3dadd( -104.756, 630.214, -49.0369, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -29.3555, 490.134, 25.056, 0.55 ) }
    dend_16 { pt3dadd( -29.3802, 491.187, 25.5624, 0.55 ) }
    dend_16 { pt3dadd( -29.4615, 492.493, 26.1815, 0.28 ) }
    dend_16 { pt3dadd( -29.6564, 494.337, 27.044, 1.38 ) }
    dend_16 { pt3dadd( -30.0538, 496.981, 28.2923, 0.28 ) }
    dend_16 { pt3dadd( -30.4646, 499.209, 29.3486, 0.55 ) }
    dend_16 { pt3dadd( -30.704, 500.413, 29.9043, 0.55 ) }
    dend_16 { pt3dadd( -30.9318, 501.43, 30.3621, 0.83 ) }
    dend_16 { pt3dadd( -31.3175, 502.895, 31.0147, 0.28 ) }
    dend_16 { pt3dadd( -31.7073, 504.084, 31.4996, 0.83 ) }
    dend_16 { pt3dadd( -32.023, 504.946, 31.7817, 0.28 ) }
    dend_16 { pt3dadd( -32.3031, 505.806, 32.0511, 0.28 ) }
    dend_16 { pt3dadd( -32.7309, 507.128, 32.4656, 0.83 ) }
    dend_16 { pt3dadd( -33.2257, 508.701, 32.9442, 0.28 ) }
    dend_16 { pt3dadd( -33.4666, 509.492, 33.1744, 0.55 ) }
    dend_16 { pt3dadd( -34.0212, 511.319, 33.6965, 0.55 ) }
    dend_16 { pt3dadd( -34.4357, 512.681, 34.0955, 0.28 ) }
    dend_16 { pt3dadd( -34.6508, 513.361, 34.3056, 0.28 ) }
    dend_16 { pt3dadd( -35.0241, 514.584, 34.6708, 1.11 ) }
    dend_16 { pt3dadd( -35.5111, 516.148, 35.0162, 0.28 ) }
    dend_16 { pt3dadd( -35.8875, 517.229, 35.1781, 0.83 ) }
    dend_16 { pt3dadd( -36.3338, 518.42, 35.2425, 0.28 ) }
    dend_16 { pt3dadd( -36.8246, 519.819, 35.1631, 0.83 ) }
    dend_16 { pt3dadd( -37.1041, 520.685, 35.0634, 0.83 ) }
    dend_16 { pt3dadd( -37.7971, 522.97, 34.6973, 0.55 ) }
    dend_16 { pt3dadd( -38.2309, 524.512, 34.4287, 0.55 ) }
    dend_16 { pt3dadd( -38.496, 525.498, 34.2757, 0.55 ) }
    dend_16 { pt3dadd( -38.9529, 527.288, 34.0445, 0.83 ) }
    dend_16 { pt3dadd( -39.3016, 528.801, 33.9065, 0.55 ) }
    dend_16 { pt3dadd( -39.7808, 531.021, 33.8288, 1.11 ) }
    dend_16 { pt3dadd( -40.0798, 532.567, 33.8489, 0.55 ) }
    dend_16 { pt3dadd( -40.3576, 534.019, 33.8964, 0.55 ) }
    dend_16 { pt3dadd( -40.564, 534.941, 33.9163, 0.83 ) }
    dend_16 { pt3dadd( -40.7627, 535.646, 33.8932, 0.55 ) }
    dend_16 { pt3dadd( -41.4973, 538.1, 33.649, 0.83 ) }
    dend_16 { pt3dadd( -41.8691, 539.095, 33.4235, 0.28 ) }
    dend_16 { pt3dadd( -41.9594, 539.296, 33.3583, 0.28 ) }
    dend_16 { pt3dadd( -42.3779, 540.157, 33.0153, 0.55 ) }
    dend_16 { pt3dadd( -43.4915, 542.357, 32.0589, 0.28 ) }
    dend_16 { pt3dadd( -43.6906, 542.772, 31.8943, 0.55 ) }
    dend_16 { pt3dadd( -44.6703, 544.923, 31.0918, 0.28 ) }
    dend_16 { pt3dadd( -45.0187, 545.801, 30.8191, 0.83 ) }
    dend_16 { pt3dadd( -45.5942, 547.326, 30.4796, 0.83 ) }
    dend_16 { pt3dadd( -45.8083, 547.971, 30.3907, 0.28 ) }
    dend_16 { pt3dadd( -46.2875, 549.914, 30.2062, 0.55 ) }
    dend_16 { pt3dadd( -46.5456, 551.18, 30.1283, 0.28 ) }
    dend_16 { pt3dadd( -46.6956, 552.835, 30.1789, 0.83 ) }
    dend_16 { pt3dadd( -46.763, 555.026, 30.3185, 0.28 ) }
    dend_16 { pt3dadd( -46.7117, 555.978, 30.4179, 0.28 ) }
    dend_16 { pt3dadd( -46.553, 557.308, 30.6096, 0.55 ) }
    dend_16 { pt3dadd( -46.297, 559.345, 30.9202, 0.83 ) }
    dend_16 { pt3dadd( -45.9739, 562.04, 31.394, 0.28 ) }
    dend_16 { pt3dadd( -45.858, 563.177, 31.5489, 0.83 ) }
    dend_16 { pt3dadd( -45.7734, 565.056, 31.6819, 0.28 ) }
    dend_16 { pt3dadd( -45.8778, 567.517, 31.5749, 1.38 ) }
    dend_16 { pt3dadd( -46.1285, 569.705, 31.2964, 0.28 ) }
    dend_16 { pt3dadd( -46.4188, 571.614, 30.8874, 0.83 ) }
    dend_16 { pt3dadd( -46.7795, 573.446, 30.3636, 0.83 ) }
    dend_16 { pt3dadd( -47.3699, 576.322, 29.4672, 0.55 ) }
    dend_16 { pt3dadd( -48.0621, 579.258, 28.5566, 0.55 ) }
    dend_16 { pt3dadd( -48.4867, 581.331, 27.9887, 0.83 ) }
    dend_16 { pt3dadd( -48.6782, 582.934, 27.7258, 0.83 ) }
    dend_16 { pt3dadd( -48.7945, 585.019, 27.5888, 0.55 ) }
    dend_16 { pt3dadd( -48.7209, 586.406, 27.7389, 0.55 ) }
    dend_16 { pt3dadd( -48.3684, 588.452, 28.2369, 1.38 ) }
    dend_16 { pt3dadd( -47.8056, 590.986, 29.1287, 0.83 ) }
    dend_16 { pt3dadd( -46.9804, 593.904, 30.3565, 1.11 ) }
    dend_16 { pt3dadd( -46.4855, 595.342, 31.0733, 1.11 ) }
    dend_16 { pt3dadd( -45.1957, 598.258, 32.7468, 0.83 ) }
    dend_16 { pt3dadd( -44.8535, 598.89, 33.1235, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -29.3555, 490.134, 25.056, 0.28 ) }
    dend_15 { pt3dadd( -27.2509, 489.967, 25.334, 0.28 ) }
    dend_15 { pt3dadd( -26.7151, 489.925, 25.4048, 0.83 ) }
    dend_15 { pt3dadd( -25.0638, 489.794, 25.623, 0.28 ) }
    dend_15 { pt3dadd( -24.8218, 489.775, 25.655, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 14.8299, 515.793, -35.5456, 0.55 ) }
    dend_7 { pt3dadd( 15.8675, 518.669, -35.4044, 0.55 ) }
    dend_7 { pt3dadd( 16.9837, 521.877, -35.3288, 0.55 ) }
    dend_7 { pt3dadd( 17.5811, 523.725, -35.3194, 0.55 ) }
    dend_7 { pt3dadd( 18.4566, 526.13, -35.2994, 0.28 ) }
    dend_7 { pt3dadd( 19.3676, 528.331, -35.274, 0.83 ) }
    dend_7 { pt3dadd( 20.79, 531.68, -35.2332, 0.28 ) }
    dend_7 { pt3dadd( 21.3443, 533.024, -35.2332, 0.83 ) }
    dend_7 { pt3dadd( 22.1214, 535.092, -35.2601, 0.55 ) }
    dend_7 { pt3dadd( 23.2346, 538.002, -35.3523, 0.55 ) }
    dend_7 { pt3dadd( 23.8696, 539.729, -35.4358, 0.83 ) }
    dend_7 { pt3dadd( 24.5537, 541.916, -35.569, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 25.0594, 543.705, -35.6317, 0.83 ) }
    dend_7 { pt3dadd( 25.5848, 545.741, -35.7278, 0.83 ) }
    dend_7 { pt3dadd( 25.9427, 547.238, -35.9066, 0.28 ) }
    dend_7 { pt3dadd( 26.2663, 549.394, -36.2817, 0.83 ) }
    dend_7 { pt3dadd( 26.4095, 551.196, -36.7252, 0.83 ) }
    dend_7 { pt3dadd( 26.4587, 553.437, -37.7051, 0.83 ) }
    dend_7 { pt3dadd( 26.3361, 555.939, -39.1966, 1.11 ) }
    dend_7 { pt3dadd( 26.0746, 558.813, -41.6547, 0.55 ) }
    dend_7 { pt3dadd( 25.6205, 560.877, -43.8843, 0.55 ) }
    dend_7 { pt3dadd( 25.0117, 562.739, -46.2558, 1.11 ) }
    dend_7 { pt3dadd( 23.7402, 565.838, -50.9351, 0.28 ) }
    dend_7 { pt3dadd( 23.3943, 566.632, -52.2767, 0.28 ) }
    dend_7 { pt3dadd( 22.2803, 569.087, -56.6751, 0.83 ) }
    dend_7 { pt3dadd( 21.6843, 570.5, -59.3662, 0.55 ) }
    dend_7 { pt3dadd( 21.5276, 570.977, -60.3624, 0.55 ) }
    dend_7 { pt3dadd( 21.1066, 572.54, -63.5007, 0.55 ) }
    dend_7 { pt3dadd( 20.8045, 573.732, -65.7986, 0.83 ) }
    dend_7 { pt3dadd( 20.2155, 575.913, -70.2324, 0.55 ) }
    dend_7 { pt3dadd( 19.0467, 579.806, -78.2797, 1.94 ) }
    dend_7 { pt3dadd( 18.1667, 583.094, -85.6551, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 14.8299, 515.793, -35.5456, 0.55 ) }
    dend_6 { pt3dadd( 14.3744, 517.487, -35.9808, 0.55 ) }
    dend_6 { pt3dadd( 13.9911, 519.056, -36.4147, 0.83 ) }
    dend_6 { pt3dadd( 13.8367, 519.821, -36.6696, 0.55 ) }
    dend_6 { pt3dadd( 13.6367, 521.528, -37.2249, 0.83 ) }
    dend_6 { pt3dadd( 13.4569, 523.996, -38.0332, 0.55 ) }
    dend_6 { pt3dadd( 13.3642, 525.066, -38.4409, 0.55 ) }
    dend_6 { pt3dadd( 13.3217, 526.069, -38.941, 1.11 ) }
    dend_6 { pt3dadd( 13.3518, 527.477, -39.7202, 0.83 ) }
    dend_6 { pt3dadd( 13.439, 529.228, -40.8048, 0.83 ) }
    dend_6 { pt3dadd( 13.5431, 531.261, -42.2216, 0.83 ) }
    dend_6 { pt3dadd( 13.5141, 532.946, -43.5484, 0.55 ) }
    dend_6 { pt3dadd( 13.4059, 534.834, -45.0817, 0.28 ) }
    dend_6 { pt3dadd( 13.3381, 536.647, -47.0461, 0.83 ) }
    dend_6 { pt3dadd( 13.2873, 538.001, -48.7311, 0.55 ) }
    dend_6 { pt3dadd( 13.226, 539.531, -50.8316, 1.38 ) }
    dend_6 { pt3dadd( 13.2247, 540.958, -52.8529, 0.55 ) }
    dend_6 { pt3dadd( 13.2476, 541.822, -54.0309, 0.55 ) }
    dend_6 { pt3dadd( 13.3958, 547.566, -61.5454, 0.83 ) }
    dend_6 { pt3dadd( 13.4064, 548.418, -62.6767, 0.55 ) }
    dend_6 { pt3dadd( 13.4176, 548.626, -62.9334, 0.55 ) }
    dend_6 { pt3dadd( 13.5096, 549.944, -64.3875, 1.38 ) }
    dend_6 { pt3dadd( 13.5922, 550.991, -65.2933, 1.38 ) }
    dend_6 { pt3dadd( 13.5646, 553.139, -66.3712, 0.28 ) }
    dend_6 { pt3dadd( 13.4053, 554.089, -66.3445, 0.55 ) }
    dend_6 { pt3dadd( 13.1712, 555.719, -66.1542, 0.28 ) }
    dend_6 { pt3dadd( 12.8925, 557.473, -65.8842, 0.55 ) }
    dend_6 { pt3dadd( 12.2969, 560.546, -65.2124, 0.55 ) }
    dend_6 { pt3dadd( 11.8998, 562.426, -64.7384, 0.55 ) }
    dend_6 { pt3dadd( 11.4069, 564.654, -64.0921, 0.55 ) }
    dend_6 { pt3dadd( 11.0622, 566.484, -63.4504, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -17.9725, -130.172, 16.5581, 0.55 ) }
    dend_55 { pt3dadd( -19.0221, -130.76, 17.9149, 0.55 ) }
    dend_55 { pt3dadd( -19.8565, -131.231, 19.0152, 0.28 ) }
    dend_55 { pt3dadd( -20.6216, -131.663, 20.0241, 1.11 ) }
    dend_55 { pt3dadd( -23.4192, -133.242, 23.7132, 0.28 ) }
    dend_55 { pt3dadd( -23.7838, -133.448, 24.194, 1.11 ) }
    dend_55 { pt3dadd( -25.6724, -134.514, 26.6845, 0.28 ) }
    dend_55 { pt3dadd( -26.1162, -134.781, 27.4162, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -17.9725, -130.172, 16.5581, 0.83 ) }
    dend_54 { pt3dadd( -18.9393, -131.443, 17.6747, 0.83 ) }
    dend_54 { pt3dadd( -19.8725, -132.485, 18.7459, 0.83 ) }
    dend_54 { pt3dadd( -20.6888, -133.187, 19.7906, 0.83 ) }
    dend_54 { pt3dadd( -22.1193, -134.317, 21.6317, 0.83 ) }
    dend_54 { pt3dadd( -23.0209, -135.197, 23.1605, 0.83 ) }
    dend_54 { pt3dadd( -24.0896, -136.494, 25.3843, 0.83 ) }
    dend_54 { pt3dadd( -24.6116, -137.26, 26.6888, 0.83 ) }
    dend_54 { pt3dadd( -25.5932, -139.325, 29.8174, 1.11 ) }
    dend_54 { pt3dadd( -25.7327, -139.869, 30.5625, 1.11 ) }
    dend_54 { pt3dadd( -25.9856, -142.652, 33.8517, 1.11 ) }
    dend_54 { pt3dadd( -26.0017, -144.591, 35.8425, 1.11 ) }
    dend_54 { pt3dadd( -25.9227, -146.381, 37.4322, 1.11 ) }
    dend_54 { pt3dadd( -25.7615, -148.044, 38.7619, 1.38 ) }
    dend_54 { pt3dadd( -25.4111, -150.726, 40.5906, 0.55 ) }
    dend_54 { pt3dadd( -25.2858, -151.86, 41.3153, 0.83 ) }
    dend_54 { pt3dadd( -25.2478, -152.972, 41.9134, 0.83 ) }
    dend_54 { pt3dadd( -25.1744, -153.922, 42.4267, 0.83 ) }
    dend_54 { pt3dadd( -25.1186, -154.826, 42.9615, 0.83 ) }
    dend_54 { pt3dadd( -25.05, -156.573, 43.8109, 0.55 ) }
    dend_54 { pt3dadd( -25.1215, -157.759, 44.1711, 0.55 ) }
    dend_54 { pt3dadd( -25.2128, -158.418, 44.3093, 1.11 ) }
    dend_54 { pt3dadd( -25.4393, -159.642, 44.4569, 0.28 ) }
    dend_54 { pt3dadd( -25.593, -160.302, 44.5089, 1.11 ) }
    dend_54 { pt3dadd( -26.0649, -161.745, 44.5212, 0.55 ) }
    dend_54 { pt3dadd( -26.6398, -163.14, 44.3388, 0.55 ) }
    dend_54 { pt3dadd( -27.4457, -164.689, 44.0554, 0.28 ) }
    dend_54 { pt3dadd( -27.7352, -165.179, 43.927, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -147.653, -119.972, -11.8836, 1.11 ) }
    dend_50 { pt3dadd( -149.781, -119.748, -11.8897, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -147.653, -119.972, -11.8836, 0.28 ) }
    dend_49 { pt3dadd( -148.198, -121.725, -12.3218, 0.28 ) }
    dend_49 { pt3dadd( -148.301, -122.058, -12.4049, 0.83 ) }
    dend_49 { pt3dadd( -148.81, -123.696, -12.8143, 0.28 ) }
    dend_49 { pt3dadd( -148.953, -124.158, -12.9297, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.9656, -182.922, -29.5784, 0.55 ) }
    dend_41 { pt3dadd( 2.97912, -184.182, -28.3157, 0.55 ) }
    dend_41 { pt3dadd( 2.24313, -185.058, -27.5096, 0.55 ) }
    dend_41 { pt3dadd( 0.980977, -186.619, -25.7302, 0.28 ) }
    dend_41 { pt3dadd( 0.631127, -187.11, -25.2101, 0.55 ) }
    dend_41 { pt3dadd( 0.091665, -187.866, -24.4093, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -0.60056, -188.861, -23.3888, 0.28 ) }
    dend_41 { pt3dadd( -1.16545, -189.597, -22.5757, 0.55 ) }
    dend_41 { pt3dadd( -2.85269, -191.62, -20.4001, 0.28 ) }
    dend_41 { pt3dadd( -4.31461, -193.3, -18.6629, 0.83 ) }
    dend_41 { pt3dadd( -5.75448, -195.015, -16.8658, 0.28 ) }
    dend_41 { pt3dadd( -6.15311, -195.512, -16.3424, 0.83 ) }
    dend_41 { pt3dadd( -7.16791, -196.766, -15.0085, 0.83 ) }
    dend_41 { pt3dadd( -8.27839, -198.01, -13.7077, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.9656, -182.922, -29.5784, 0.28 ) }
    dend_40 { pt3dadd( 5.05733, -187.407, -29.6923, 0.28 ) }
    dend_40 { pt3dadd( 5.52123, -188.969, -29.7278, 0.55 ) }
    dend_40 { pt3dadd( 6.36726, -191.584, -29.7979, 0.28 ) }
    dend_40 { pt3dadd( 7.42223, -194.722, -29.8987, 1.11 ) }
    dend_40 { pt3dadd( 8.70116, -198.449, -30.0468, 0.28 ) }
    dend_40 { pt3dadd( 9.04525, -199.437, -30.1094, 0.55 ) }
    dend_40 { pt3dadd( 9.7077, -200.951, -30.1444, 0.28 ) }
    dend_40 { pt3dadd( 10.157, -201.89, -30.167, 0.55 ) }
    dend_40 { pt3dadd( 10.7637, -203.086, -30.1322, 0.28 ) }
    dend_40 { pt3dadd( 11.0735, -203.754, -30.1059, 0.55 ) }
    dend_40 { pt3dadd( 11.8017, -206.003, -30.0955, 0.28 ) }
    dend_40 { pt3dadd( 12.3489, -208.007, -30.1244, 1.11 ) }
    dend_40 { pt3dadd( 13.6876, -212.212, -30.041, 0.28 ) }
    dend_40 { pt3dadd( 14.5305, -214.633, -29.9845, 1.11 ) }
    dend_40 { pt3dadd( 15.2089, -216.561, -29.9265, 1.11 ) }
    dend_40 { pt3dadd( 16.4732, -220.14, -29.7966, 0.28 ) }
    dend_40 { pt3dadd( 17.2768, -222.407, -29.7087, 0.83 ) }
    dend_40 { pt3dadd( 18.9806, -227.219, -29.7541, 0.55 ) }
    dend_40 { pt3dadd( 19.7952, -229.904, -29.9314, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 74.6474, -192.804, -8.76953, 0.28 ) }
    dend_36 { pt3dadd( 77.355, -194.427, -8.27643, 0.28 ) }
    dend_36 { pt3dadd( 78.3056, -194.982, -8.10748, 0.83 ) }
    dend_36 { pt3dadd( 79.7989, -195.866, -7.86402, 0.28 ) }
    dend_36 { pt3dadd( 81.888, -197.127, -7.55246, 0.83 ) }
    dend_36 { pt3dadd( 83.9681, -198.457, -7.27125, 0.28 ) }
    dend_36 { pt3dadd( 85.5137, -199.428, -7.07857, 0.55 ) }
    dend_36 { pt3dadd( 86.3464, -199.901, -6.97585, 0.28 ) }
    dend_36 { pt3dadd( 88.1801, -200.836, -6.78372, 0.55 ) }
    dend_36 { pt3dadd( 89.3961, -201.426, -6.67845, 0.28 ) }
    dend_36 { pt3dadd( 90.7655, -202.055, -6.56691, 0.55 ) }
    dend_36 { pt3dadd( 92.5469, -202.772, -6.44175, 0.55 ) }
    dend_36 { pt3dadd( 94.3429, -203.439, -6.41579, 0.55 ) }
    dend_36 { pt3dadd( 96.773, -204.36, -6.48663, 0.83 ) }
    dend_36 { pt3dadd( 98.2408, -204.924, -6.67813, 0.28 ) }
    dend_36 { pt3dadd( 99.6159, -205.532, -6.96612, 0.83 ) }
    dend_36 { pt3dadd( 100.997, -206.23, -7.07476, 1.38 ) }
    dend_36 { pt3dadd( 103.997, -207.989, -6.99259, 0.28 ) }
    dend_36 { pt3dadd( 105.623, -209.08, -6.9319, 0.83 ) }
    dend_36 { pt3dadd( 108.127, -210.841, -6.79879, 0.28 ) }
    dend_36 { pt3dadd( 109.705, -211.97, -6.6515, 1.11 ) }
    dend_36 { pt3dadd( 115.664, -216.368, -5.65137, 0.28 ) }
    dend_36 { pt3dadd( 116.421, -216.939, -5.47102, 0.55 ) }
    dend_36 { pt3dadd( 120.204, -219.803, -4.373, 0.28 ) }
    dend_36 { pt3dadd( 122.731, -221.776, -3.64936, 0.28 ) }
    dend_36 { pt3dadd( 123.812, -222.711, -3.35123, 0.55 ) }
    dend_36 { pt3dadd( 125.529, -224.197, -3.06788, 0.28 ) }
    dend_36 { pt3dadd( 126.526, -225.135, -3.16435, 0.28 ) }
    dend_36 { pt3dadd( 127.773, -226.389, -3.23699, 0.55 ) }
    dend_36 { pt3dadd( 129.191, -227.996, -2.999, 0.55 ) }
    dend_36 { pt3dadd( 130.005, -229.354, -2.99502, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 74.6474, -192.804, -8.76953, 0.55 ) }
    dend_35 { pt3dadd( 71.9906, -194.472, -8.15067, 0.55 ) }
    dend_35 { pt3dadd( 70.8895, -195.163, -7.89417, 0.55 ) }
    dend_35 { pt3dadd( 69.5322, -196.016, -7.57801, 0.28 ) }
    dend_35 { pt3dadd( 67.7368, -197.143, -7.1598, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -34.3637, 572.946, 54.3104, 0.83 ) }
    dend_27 { pt3dadd( -34.2065, 574.798, 55.0429, 0.83 ) }
    dend_27 { pt3dadd( -33.9347, 577.659, 56.1419, 0.83 ) }
    dend_27 { pt3dadd( -33.7264, 579.614, 56.8969, 0.83 ) }
    dend_27 { pt3dadd( -33.4243, 583.662, 58.4805, 0.83 ) }
    dend_27 { pt3dadd( -33.4056, 584.13, 58.6342, 1.11 ) }
    dend_27 { pt3dadd( -33.401, 585.348, 58.9769, 0.55 ) }
    dend_27 { pt3dadd( -33.4383, 586.069, 59.155, 0.83 ) }
    dend_27 { pt3dadd( -34.1097, 586.638, 57.9611, 0.28 ) }
    dend_27 { pt3dadd( -34.6778, 587.193, 56.6278, 0.55 ) }
    dend_27 { pt3dadd( -36.1908, 589.006, 52.3582, 0.28 ) }
    dend_27 { pt3dadd( -36.6013, 589.603, 51.1254, 0.83 ) }
    dend_27 { pt3dadd( -36.8871, 590.1, 50.1746, 0.83 ) }
    dend_27 { pt3dadd( -38.4057, 593.513, 44.3259, 0.55 ) }
    dend_27 { pt3dadd( -38.7189, 594.546, 42.7528, 0.55 ) }
    dend_27 { pt3dadd( -38.7967, 595.593, 41.606, 1.11 ) }
    dend_27 { pt3dadd( -38.3961, 599.35, 39.7812, 0.55 ) }
    dend_27 { pt3dadd( -38.3011, 599.883, 39.6638, 0.83 ) }
    dend_27 { pt3dadd( -38.0965, 600.742, 39.7356, 0.28 ) }
    dend_27 { pt3dadd( -37.9845, 601.2, 39.8807, 0.55 ) }
    dend_27 { pt3dadd( -37.9132, 601.932, 40.0548, 0.28 ) }
    dend_27 { pt3dadd( -37.924, 602.945, 40.1476, 0.83 ) }
    dend_27 { pt3dadd( -37.9359, 604.009, 40.0615, 0.28 ) }
    dend_27 { pt3dadd( -37.9566, 604.714, 39.9969, 0.83 ) }
    dend_27 { pt3dadd( -38.1117, 606.977, 39.5958, 0.55 ) }
    dend_27 { pt3dadd( -38.2946, 609.029, 39.1045, 0.55 ) }
    dend_27 { pt3dadd( -38.4613, 610.545, 38.6898, 0.55 ) }
    dend_27 { pt3dadd( -38.6968, 612.661, 38.0966, 0.55 ) }
    dend_27 { pt3dadd( -38.8839, 614.08, 37.6666, 0.55 ) }
    dend_27 { pt3dadd( -39.3111, 617.152, 36.7724, 0.55 ) }
    dend_27 { pt3dadd( -39.4334, 618.107, 36.4832, 0.28 ) }
    dend_27 { pt3dadd( -39.5424, 618.953, 36.199, 0.55 ) }
    dend_27 { pt3dadd( -39.7264, 620.125, 35.8061, 0.28 ) }
    dend_27 { pt3dadd( -40.1169, 621.938, 35.1842, 0.55 ) }
    dend_27 { pt3dadd( -40.2738, 622.688, 34.9457, 0.55 ) }
    dend_27 { pt3dadd( -40.5163, 624.113, 34.55, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -40.729, 625.458, 34.0816, 0.28 ) }
    dend_27 { pt3dadd( -40.7885, 626.15, 33.8011, 0.55 ) }
    dend_27 { pt3dadd( -40.8749, 627.687, 32.767, 0.28 ) }
    dend_27 { pt3dadd( -40.8552, 628.484, 31.993, 0.83 ) }
    dend_27 { pt3dadd( -40.822, 629.327, 31.1017, 0.83 ) }
    dend_27 { pt3dadd( -40.715, 630.804, 29.3913, 0.55 ) }
    dend_27 { pt3dadd( -40.5991, 631.882, 27.9895, 0.55 ) }
    dend_27 { pt3dadd( -40.1896, 635.006, 23.5393, 0.28 ) }
    dend_27 { pt3dadd( -39.8468, 636.937, 20.4914, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.3637, 572.946, 54.3104, 0.55 ) }
    dend_26 { pt3dadd( -35.6514, 575.284, 55.2587, 0.55 ) }
    dend_26 { pt3dadd( -37.3461, 578.362, 56.5067, 0.55 ) }
    dend_26 { pt3dadd( -38.5382, 580.527, 57.3846, 0.55 ) }
    dend_26 { pt3dadd( -39.5731, 582.407, 58.1468, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -44.8535, 598.89, 33.1235, 0.28 ) }
    dend_22 { pt3dadd( -46.294, 599.364, 32.1044, 0.28 ) }
    dend_22 { pt3dadd( -46.6947, 599.496, 31.821, 0.55 ) }
    dend_22 { pt3dadd( -50.6358, 600.793, 29.0331, 0.28 ) }
    dend_22 { pt3dadd( -51.0831, 600.94, 28.7167, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -44.8535, 598.89, 33.1235, 0.28 ) }
    dend_17 { pt3dadd( -46.2948, 601.672, 35.5855, 0.28 ) }
    dend_17 { pt3dadd( -47.1857, 603.392, 37.1074, 0.83 ) }
    dend_17 { pt3dadd( -47.8519, 604.678, 38.2453, 0.83 ) }
    dend_17 { pt3dadd( -48.2734, 605.492, 38.9653, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.1667, 583.094, -85.6551, 0.55 ) }
    dend_9 { pt3dadd( 16.1305, 583.869, -86.4585, 0.55 ) }
    dend_9 { pt3dadd( 13.7662, 584.812, -87.5776, 0.55 ) }
    dend_9 { pt3dadd( 12.0009, 585.517, -88.4132, 0.55 ) }
    dend_9 { pt3dadd( 9.95097, 586.335, -89.3835, 0.28 ) }
    dend_9 { pt3dadd( 8.09692, 587.076, -90.2611, 0.83 ) }
    dend_9 { pt3dadd( 6.66813, 587.646, -90.9374, 0.83 ) }
    dend_9 { pt3dadd( 5.20067, 588.347, -91.8062, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.1667, 583.094, -85.6551, 0.55 ) }
    dend_8 { pt3dadd( 17.4246, 586.12, -86.9917, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -149.781, -119.748, -11.8897, 0.28 ) }
    dend_52 { pt3dadd( -152.686, -119.6, -11.4299, 0.28 ) }
    dend_52 { pt3dadd( -155.578, -119.319, -10.9002, 0.55 ) }
    dend_52 { pt3dadd( -158.798, -118.968, -10.2669, 0.28 ) }
    dend_52 { pt3dadd( -160.588, -118.812, -9.86588, 1.11 ) }
    dend_52 { pt3dadd( -163.31, -118.591, -9.18054, 0.28 ) }
    dend_52 { pt3dadd( -164.016, -118.517, -9.02621, 0.55 ) }
    dend_52 { pt3dadd( -168.011, -118.074, -8.27413, 0.28 ) }
    dend_52 { pt3dadd( -169.154, -117.924, -8.06197, 1.11 ) }
    dend_52 { pt3dadd( -171.744, -117.63, -7.60465, 0.28 ) }
    dend_52 { pt3dadd( -173.274, -117.469, -7.32317, 1.11 ) }
    dend_52 { pt3dadd( -176.882, -117.145, -6.536, 1.11 ) }
    dend_52 { pt3dadd( -179.404, -116.959, -6.12528, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -149.781, -119.748, -11.8897, 0.83 ) }
    dend_51 { pt3dadd( -151.063, -121.083, -12.506, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -8.27839, -198.01, -13.7077, 0.83 ) }
    dend_43 { pt3dadd( -8.94834, -198.752, -14.1067, 0.83 ) }
    dend_43 { pt3dadd( -10.0701, -199.994, -14.7749, 0.28 ) }
    dend_43 { pt3dadd( -11.0111, -201.036, -15.3353, 1.11 ) }
    dend_43 { pt3dadd( -13.6699, -203.981, -16.919, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -8.27839, -198.01, -13.7077, 1.11 ) }
    dend_42 { pt3dadd( -9.4113, -196.816, -13.016, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -48.2734, 605.492, 38.9653, 0.55 ) }
    dend_21 { pt3dadd( -49.7626, 606.345, 37.6988, 0.55 ) }
    dend_21 { pt3dadd( -51.0449, 607.15, 36.3861, 0.28 ) }
    dend_21 { pt3dadd( -51.4932, 607.328, 36.0363, 0.55 ) }
    dend_21 { pt3dadd( -54.6573, 608.583, 33.5669, 0.28 ) }
    dend_21 { pt3dadd( -56.1411, 609.172, 32.4089, 0.55 ) }
    dend_21 { pt3dadd( -58.1584, 609.972, 30.8345, 0.28 ) }
    dend_21 { pt3dadd( -59.8525, 610.523, 29.7678, 0.55 ) }
    dend_21 { pt3dadd( -65.5075, 612.158, 26.7195, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -48.2734, 605.492, 38.9653, 0.28 ) }
    dend_18 { pt3dadd( -48.5522, 605.686, 40.0476, 0.28 ) }
    dend_18 { pt3dadd( -48.9825, 605.986, 41.7178, 0.55 ) }
    dend_18 { pt3dadd( -49.3477, 606.241, 43.1353, 0.55 ) }
    dend_18 { pt3dadd( -49.733, 606.509, 44.6308, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.20067, 588.347, -91.8062, 0.55 ) }
    dend_11 { pt3dadd( 4.56736, 589.407, -91.9906, 0.55 ) }
    dend_11 { pt3dadd( 3.95521, 590.432, -92.1689, 0.55 ) }
    dend_11 { pt3dadd( 3.39878, 591.363, -92.3309, 0.83 ) }
    dend_11 { pt3dadd( 2.72352, 592.494, -92.5276, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.20067, 588.347, -91.8062, 0.28 ) }
    dend_10 { pt3dadd( 3.1228, 589.518, -94.1835, 0.28 ) }
    dend_10 { pt3dadd( 2.5526, 589.839, -94.8358, 0.28 ) }
    dend_10 { pt3dadd( 1.39958, 590.489, -96.155, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.6699, -203.981, -16.919, 1.11 ) }
    dend_45 { pt3dadd( -13.1508, -206.098, -15.4758, 1.11 ) }
    dend_45 { pt3dadd( -12.6337, -208.259, -13.8865, 0.28 ) }
    dend_45 { pt3dadd( -12.3193, -209.758, -12.7548, 1.11 ) }
    dend_45 { pt3dadd( -11.5384, -213.89, -9.32236, 0.28 ) }
    dend_45 { pt3dadd( -11.3687, -214.917, -8.44485, 1.94 ) }
    dend_45 { pt3dadd( -10.956, -217.919, -6.01711, 1.11 ) }
    dend_45 { pt3dadd( -10.8953, -218.584, -5.47118, 0.28 ) }
    dend_45 { pt3dadd( -10.8606, -219.351, -4.84172, 0.83 ) }
    dend_45 { pt3dadd( -10.8917, -221.412, -3.35836, 0.28 ) }
    dend_45 { pt3dadd( -10.9995, -222.382, -2.87953, 1.11 ) }
    dend_45 { pt3dadd( -11.348, -224.976, -1.83195, 0.28 ) }
    dend_45 { pt3dadd( -11.721, -227.053, -1.19168, 0.28 ) }
    dend_45 { pt3dadd( -11.8906, -228.145, -0.883855, 1.11 ) }
    dend_45 { pt3dadd( -11.8906, -228.145, -0.883855, 1.11 ) }
    dend_45 { pt3dadd( -12.1077, -229.512, -0.659994, 0.55 ) }
    dend_45 { pt3dadd( -12.2075, -230.11, -0.542344, 1.38 ) }
    dend_45 { pt3dadd( -12.6533, -232.379, 0.10383, 0.28 ) }
    dend_45 { pt3dadd( -12.693, -232.622, 0.190797, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -13.6699, -203.981, -16.919, 0.55 ) }
    dend_44 { pt3dadd( -14.5481, -203.893, -16.2988, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -15.0922, -203.838, -15.9145, 0.55 ) }
    dend_44 { pt3dadd( -15.5584, -203.791, -15.5853, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -49.733, 606.509, 44.6308, 0.55 ) }
    dend_20 { pt3dadd( -49.653, 607.596, 45.0611, 0.55 ) }
    dend_20 { pt3dadd( -49.434, 609.593, 45.7085, 0.55 ) }
    dend_20 { pt3dadd( -49.3036, 610.927, 46.0206, 0.55 ) }
    dend_20 { pt3dadd( -49.1986, 612.573, 46.3634, 0.55 ) }
    dend_20 { pt3dadd( -49.0553, 614.094, 46.6544, 0.28 ) }
    dend_20 { pt3dadd( -49.0261, 614.786, 46.7738, 0.83 ) }
    dend_20 { pt3dadd( -49.027, 616.75, 47.0192, 0.83 ) }
    dend_20 { pt3dadd( -49.0517, 618.435, 47.1175, 0.83 ) }
    dend_20 { pt3dadd( -49.1006, 619.295, 47.1487, 0.55 ) }
    dend_20 { pt3dadd( -49.2888, 621.476, 47.0784, 0.83 ) }
    dend_20 { pt3dadd( -49.663, 623.926, 46.8334, 0.28 ) }
    dend_20 { pt3dadd( -49.9483, 625.087, 46.7142, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -49.733, 606.509, 44.6308, 0.55 ) }
    dend_19 { pt3dadd( -49.9872, 605.429, 47.4764, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 19
    dend_1 nseg = 17
    dend_58 nseg = 3
    dend_31 nseg = 3
    dend_28 nseg = 9
    dend_13 nseg = 3
    dend_56 nseg = 7
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_5 nseg = 7
    dend_48 nseg = 7
    dend_24 nseg = 7
    dend_16 nseg = 5
    dend_7 nseg = 5
    dend_6 nseg = 3
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_DBC_beb47bee0e_0_0


