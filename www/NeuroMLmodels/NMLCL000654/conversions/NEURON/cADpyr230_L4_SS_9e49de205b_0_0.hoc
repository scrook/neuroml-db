// Cell: cADpyr230_L4_SS_9e49de205b_0_0
/*
{
  "id" : "cADpyr230_L4_SS_9e49de205b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.984759, -9.9799, -6.80323, 1.93637", "0.950247, -9.05028, -6.21218, 2.81477", "0.915735, -8.12066, -5.62113, 4.57156", "0.881223, -7.19104, -5.03008, 6.17758", "0.846711, -6.26142, -4.43903, 7.6644", "0.812198, -5.3318, -3.84798, 9.12262", "0.777686, -4.40218, -3.25693, 11.196", "0.743174, -3.47256, -2.66588, 13.4803", "0.708662, -2.54294, -2.07483, 13.9561", "0.674149, -1.61332, -1.48378, 14.1583", "0.639637, -0.683698, -0.892734, 13.7907", "0.605125, 0.245922, -0.301684, 12.8718", "0.570613, 1.17554, 0.289365, 11.9528", "0.5361, 2.10516, 0.880415, 11.5126", "0.501588, 3.03478, 1.47146, 11.1452", "0.467076, 3.9644, 2.06251, 10.5903", "0.432564, 4.89402, 2.65356, 9.88317", "0.398051, 5.82364, 3.24461, 9.18042", "0.363539, 6.75327, 3.83566, 8.47766", "0.329027, 7.68289, 4.42671, 6.39115", "0.294515, 8.61251, 5.01776, 3.6597" ]
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "2.97119, 6.71687, 4.4499, 1.11", "3.7054, 8.53385, 5.64977, 1.11", "4.28296, 10.0292, 5.75232, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.13723, 0.102813, -6.88472, 2.22", "7.0232, 0.202103, -7.82845, 2.22", "8.28842, 3.2469, -12.3236, 1.94", "9.83839, 6.97697, -17.8304, 1.66", "10.3739, 8.26584, -19.7333, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.920203, 7.69931, 3.77249, 1.11", "-0.946605, 7.93148, 3.88863, 1.11", "-2.25615, 10.9836, 4.35218, 1.11", "-3.78053, 14.3145, 4.94726, 1.11", "-5.63258, 17.791, 5.80027, 1.11", "-7.67282, 21.6208, 6.73995, 1.11", "-9.98287, 25.9569, 7.8039, 0.83", "-10.8767, 27.5286, 8.23691, 0.83", "-12.1314, 29.6008, 8.9141, 1.11", "-14.2197, 33.1, 10.0128, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.71774, -9.09179, -3.03191, 3.32", "-3.21316, -10.6308, -3.51325, 3.32", "-3.37124, -13.8572, -3.65292, 2.22", "-3.55706, -17.6499, -3.8171, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.25136, -5.64287, -4.57593, 1.11", "-5.19421, -4.79008, -3.8672, 1.11", "-8.48328, -5.41641, -3.76771, 1.11", "-11.2973, -5.65656, -3.67949, 1.11", "-13.7826, -5.86866, -3.60158, 1.11", "-17.9817, -6.22702, -3.46993, 1.11", "-21.2687, -6.50753, -3.36688, 0.83", "-24.8039, -6.54205, -3.25851, 0.83", "-27.4204, -6.24418, -3.19167, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.294515, 8.61251, 5.01776, 0.67", "-0.261977, 23.6022, 5.01776, 0.67", "-0.818469, 38.5919, 5.01776, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.28296, 10.0292, 5.75232, 1.11", "5.51613, 11.2012, 7.4899, 0.83", "6.15018, 11.7867, 8.34881, 0.83", "7.7416, 13.1402, 10.4115, 0.83", "9.48163, 14.5539, 12.6711, 0.83", "10.1003, 15.012, 13.4419, 0.55", "10.953, 15.6435, 14.5042, 0.83", "12.2782, 16.5869, 16.0668, 0.83", "12.8708, 16.9716, 16.789, 0.55", "14.3566, 17.7764, 18.5242, 0.55", "15.1729, 18.1666, 19.3646, 0.55", "17.4257, 20.7919, 23.7209, 0.55", "19.4808, 23.8234, 27.9318, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "4.28296, 10.0292, 5.75232, 1.11", "5.24787, 12.1588, 6.40375, 0.55", "5.81757, 13.8775, 6.62962, 0.55", "6.83772, 16.5651, 6.79235, 0.28", "7.28632, 17.6727, 6.87785, 0.55", "8.0532, 19.3849, 7.07487, 0.28", "8.99449, 21.5247, 7.40275, 0.55", "10.0363, 24.0245, 7.87277, 0.55", "11.2418, 26.8934, 8.28818, 0.55", "12.1101, 29.0384, 8.4303, 0.55", "13.5201, 32.4514, 8.52448, 0.55", "14.4177, 34.5984, 8.52572, 0.28", "15.1661, 36.2755, 8.46342, 0.55", "16.4738, 39.248, 8.47565, 0.55", "17.4202, 41.6141, 8.5406, 0.55", "19.2626, 45.9902, 8.81538, 0.55", "19.9537, 47.4916, 8.99257, 0.55", "21.9638, 51.0765, 9.72411, 0.55", "25.0425, 55.952, 11.1359, 0.83", "26.6741, 58.1676, 11.9489, 0.55", "29.1127, 60.9891, 13.0841, 0.83", "31.2217, 63.0966, 13.9663, 0.83", "34.3046, 65.8051, 15.0597, 0.83", "36.6468, 67.6775, 15.7809, 0.83", "39.6519, 69.7909, 16.4684, 0.83", "42.296, 71.5784, 17.082, 0.83", "44.4693, 73.0503, 17.6061, 0.83", "47.3957, 75.0306, 18.3003, 0.83", "51.8893, 78.1583, 19.492, 0.55", "54.8907, 80.1865, 20.2688, 0.55", "56.0764, 81.0214, 20.5857, 0.55", "58.1078, 82.4005, 20.9638, 0.55", "59.7922, 83.5565, 21.0869, 0.28", "61.9023, 85.0105, 20.875, 0.55", "65.0228, 87.078, 19.9728, 0.55", "66.5116, 88.0819, 19.3259, 0.55", "69.4867, 89.9292, 17.7845, 0.83", "70.7668, 90.7344, 16.9204, 0.55", "71.6689, 91.3512, 16.2017, 0.83", "79.292, 99.9234, 19.0958, 0.83", "86.6557, 108.81, 21.7968, 0.83", "95.0294, 115.638, 26.34, 0.83", "104.105, 121.536, 30.7135, 0.83" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "10.3739, 8.26584, -19.7333, 1.66", "12.9645, 6.74028, -21.5819, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.3739, 8.26584, -19.7333, 1.66", "10.1528, 10.2043, -21.3605, 1.11", "9.83611, 12.9813, -23.6916, 1.11", "9.67159, 14.4237, -24.9024, 1.11" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-14.2197, 33.1, 10.0128, 0.83", "-14.0588, 36.1634, 11.5432, 0.83", "-13.9395, 38.4875, 12.6496, 0.83", "-13.6283, 41.7721, 14.034, 0.83", "-13.2696, 46.0333, 15.779, 0.83", "-13.1451, 48.7938, 16.8435, 0.55", "-13.0662, 50.6202, 17.4899, 0.83", "-12.9503, 52.6477, 18.1724, 0.83", "-12.6465, 56.9041, 19.5647, 0.83", "-12.4039, 61.2711, 20.9515, 0.83", "-12.1964, 65.3079, 22.0016, 0.83", "-12.0025, 68.1018, 22.6756, 0.83", "-11.7607, 72.106, 23.6763, 0.83", "-11.6416, 74.3292, 24.2644, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-14.2197, 33.1, 10.0128, 0.83", "-15.8962, 33.6716, 9.75691, 0.55", "-17.1189, 34.0068, 9.53151, 0.55", "-18.2038, 34.2567, 9.3229, 0.28", "-19.313, 34.4258, 9.13182, 0.55", "-21.9191, 34.657, 8.73254, 0.55", "-23.4927, 34.6904, 8.49629, 0.28", "-23.8069, 34.6549, 8.44912, 0.55", "-24.7179, 34.489, 8.37114, 0.55", "-26.9605, 34.0511, 8.34479, 0.55", "-28.9806, 33.6466, 8.40713, 0.55", "-30.1252, 33.4368, 8.56633, 0.55", "-31.4096, 33.3079, 8.84016, 0.55", "-33.4982, 33.1906, 9.34189, 0.28", "-35.5806, 33.0707, 9.87631, 0.55", "-38.0393, 32.9097, 10.4881, 0.55", "-40.9653, 32.7596, 11.2143, 0.28", "-42.381, 32.7006, 11.5224, 0.55", "-43.9576, 32.6607, 11.8227, 0.55", "-46.8634, 32.5778, 12.342, 0.55", "-49.8056, 32.4524, 12.8366, 0.55", "-52.5894, 32.4013, 13.318, 0.28", "-54.0908, 32.3329, 13.5445, 0.28", "-55.7263, 32.1995, 13.8351, 0.55", "-57.9646, 32.0215, 14.2611, 0.55", "-59.8537, 31.8741, 14.6349, 0.55", "-62.6162, 31.5852, 15.143, 0.55", "-65.3456, 31.0866, 15.5449, 0.55", "-68.0374, 30.5789, 15.9685, 0.55", "-69.865, 30.1888, 16.2142, 0.55", "-70.9656, 29.9425, 16.3465, 0.55", "-73.21, 29.4061, 16.5879, 0.55", "-75.8805, 28.6501, 16.7704, 0.55", "-78.278, 27.9199, 16.8962, 0.55", "-81.2125, 26.8673, 17.0219, 0.55", "-83.9125, 25.7292, 17.1399, 0.55", "-85.254, 25.0161, 17.2003, 0.28", "-86.3562, 24.3496, 17.2684, 0.55", "-87.9896, 23.2485, 17.3649, 0.55", "-88.7632, 22.6307, 17.4037, 0.28", "-90.0459, 21.6224, 17.5098, 0.28", "-92.5485, 19.8004, 17.7551, 0.55", "-95.218, 17.9289, 18.0792, 0.28", "-96.7058, 16.9176, 18.2236, 0.28", "-97.4872, 16.3563, 18.3114, 0.55", "-100.853, 13.9353, 18.7395, 0.55", "-101.576, 13.3758, 18.8368, 0.55", "-103.347, 11.8055, 19.1239, 0.55", "-104.856, 10.2063, 19.4149, 0.55", "-106.5, 8.28672, 19.7494, 0.55", "-107.916, 6.43956, 20.0694, 0.55", "-108.845, 5.03972, 20.2613, 0.55", "-110.749, 2.51336, 20.4185, 0.55", "-111.499, 1.61128, 20.4037, 0.55", "-112.372, 0.680472, 20.3007, 0.28", "-113.77, -0.619575, 20.0176, 0.55", "-115.687, -2.25373, 19.5241, 0.55", "-118.353, -4.15445, 18.7578, 0.55", "-120.227, -5.26757, 18.1771, 0.55", "-122.031, -6.3225, 17.6188, 0.28", "-122.857, -6.77629, 17.3969, 0.55", "-123.924, -7.36737, 17.197, 0.28", "-124.76, -7.87762, 17.153, 0.55", "-125.777, -8.6183, 17.2377, 0.28", "-126.766, -9.35076, 17.3698, 0.55", "-129.225, -11.3563, 17.862, 0.55", "-131.291, -13.1361, 18.3782, 0.28", "-131.958, -13.7749, 18.5966, 0.55", "-132.907, -14.7569, 18.9858, 0.28", "-134.056, -16.0171, 19.5722, 0.55", "-141.482, -18.8512, 21.69, 0.55", "-148.695, -22.3932, 23.5585, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.55706, -17.6499, -3.8171, 2.49", "-4.28599, -18.8406, -3.97253, 1.38" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.55706, -17.6499, -3.8171, 2.49", "-1.752, -18.1213, -6.15, 1.38", "-0.321082, -18.31, -7.86088, 1.38", "1.98771, -18.5872, -10.5578, 0.83", "2.8009, -18.6696, -11.5188, 0.83", "5.50153, -18.6102, -15.0192, 0.55", "7.03412, -18.5161, -17.0321, 0.83", "8.86644, -18.2554, -19.5081, 0.55", "10.0624, -18.0035, -20.9981, 0.55", "11.4576, -17.6347, -22.6196, 0.55", "14.8285, -16.8607, -26.4301, 0.55", "16.6365, -16.556, -28.4309, 0.28", "17.4309, -16.4976, -29.2808, 0.55", "19.1527, -16.4404, -31.1383, 0.55", "20.4077, -16.5123, -32.5149, 0.28", "21.7517, -16.7395, -33.965, 0.55", "24.4471, -17.3374, -36.8456, 0.55", "26.1252, -17.6449, -38.8685, 0.55", "28.7052, -18.1133, -42.2164, 0.55", "30.5265, -18.4998, -44.6714, 0.55", "31.2877, -18.6759, -45.659, 0.55", "32.957, -19.1432, -47.9873, 0.55", "34.7183, -19.7906, -50.5328, 0.55", "36.5274, -20.5168, -53.2806, 0.55", "37.4325, -20.9382, -54.6, 0.55", "38.5609, -21.4316, -56.2357, 0.55", "40.4695, -22.3154, -59.0513, 0.28", "41.4574, -22.7527, -60.3012, 0.55", "42.0565, -22.8696, -60.9492, 0.55", "43.0444, -22.7996, -61.985, 0.55", "44.5834, -22.4846, -63.5244, 0.55", "47.1714, -21.876, -66.1826, 0.55", "49.2697, -21.2576, -68.349, 0.83", "51.7017, -20.536, -70.9654, 0.55", "54.0574, -19.9508, -73.7894, 0.55", "55.3531, -19.7071, -75.4981, 0.55", "57.7229, -19.5097, -78.8951, 0.55", "59.2487, -19.5897, -81.4569, 0.83", "59.9388, -19.7527, -82.7111, 0.55", "61.3673, -20.309, -85.4082, 0.83", "61.9857, -20.5903, -86.6604, 0.55", "63.2465, -21.1815, -89.2157, 0.83", "64.5638, -21.8362, -91.8196, 0.55", "65.4722, -22.3739, -93.6924, 0.55", "67.3816, -23.6066, -97.9286, 0.28", "68.3569, -24.2855, -100.079, 0.55", "69.0341, -24.8394, -101.568, 0.55", "70.3442, -26.1236, -104.295, 0.28", "71.0917, -26.9912, -105.718, 0.55", "71.9622, -28.1179, -107.056, 0.28", "73.493, -30.0878, -108.553, 0.55", "74.6044, -31.5335, -109.486, 0.55", "75.8733, -33.2027, -110.394, 0.55", "77.6957, -35.386, -111.229, 0.55", "80.8465, -38.7293, -112.15, 0.28", "82.4572, -40.2784, -112.369, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-27.4204, -6.24418, -3.19167, 0.83", "-31.1298, -4.98206, -2.15925, 0.83", "-32.7366, -4.2815, -1.52657, 0.83", "-35.5913, -2.84396, -0.311855, 0.83", "-37.8278, -1.62424, 0.65061, 0.83", "-39.217, -0.82182, 1.23135, 0.83", "-43.8224, 1.83833, 3.1566, 0.83", "-46.9174, 3.71254, 4.60759, 0.83", "-49.3235, 5.29127, 5.87874, 0.55", "-50.0327, 5.78209, 6.30574, 0.83", "-51.919, 7.35686, 7.4969, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-27.4204, -6.24418, -3.19167, 0.83", "-30.4077, -6.59658, -4.05011, 0.55", "-31.4866, -6.82037, -4.36664, 0.28", "-32.1425, -6.971, -4.58799, 0.55", "-33.7411, -7.43008, -5.27964, 0.28", "-35.9879, -8.3342, -6.33276, 0.55", "-38.7102, -9.57373, -7.56055, 0.55", "-40.2276, -10.2818, -8.21417, 0.83", "-42.3279, -11.2975, -9.02178, 0.55", "-44.9544, -12.47, -9.99057, 0.55", "-48.1814, -13.7337, -11.0767, 0.55", "-51.4147, -14.8851, -12.028, 0.55", "-54.0827, -15.5742, -12.7246, 0.55", "-57.7693, -16.1275, -13.5684, 0.55", "-60.3849, -16.2325, -14.1202, 0.28", "-62.5798, -16.1462, -14.5586, 0.55", "-64.4101, -15.9424, -14.9869, 0.55", "-67.1621, -15.5475, -15.7143, 0.55", "-68.804, -15.3763, -16.181, 0.55", "-71.7778, -15.1025, -17.0683, 0.28", "-75.3072, -14.9651, -18.1261, 0.55", "-77.9684, -14.9183, -18.9981, 0.55", "-80.6932, -14.9394, -19.9107, 0.28", "-83.2454, -15.0413, -20.7729, 0.55", "-84.5151, -15.0912, -21.1937, 0.28", "-85.6298, -15.1382, -21.5324, 0.55", "-86.2409, -15.1193, -21.7081, 0.28", "-87.4934, -15.147, -22.0771, 0.55", "-89.2179, -15.1894, -22.621, 0.28", "-91.3863, -15.2216, -23.3844, 0.55", "-93.7595, -15.269, -24.063, 0.28", "-96.6237, -15.3941, -24.8998, 0.28", "-99.3546, -15.5223, -25.6852, 0.55", "-101.112, -15.5815, -26.2254, 0.28", "-103.884, -15.6584, -27.0968, 0.55", "-107.219, -15.7793, -28.3321, 0.55", "-111.054, -15.7309, -29.7973, 0.28", "-112.605, -15.7975, -30.5095, 0.55", "-113.879, -15.8677, -31.1242, 0.28", "-115.362, -15.9958, -31.8363, 0.55", "-117.578, -16.2746, -32.8946, 0.55", "-120.155, -16.7458, -34.1809, 0.55", "-123.878, -17.4252, -35.7228, 0.28", "-124.457, -17.5535, -35.9707, 0.55", "-129.167, -18.7215, -37.812, 0.55", "-130.999, -19.1493, -38.5332, 0.28", "-132.35, -19.4637, -39.0427, 0.55", "-134.518, -20.0454, -39.954, 0.55", "-137.218, -20.7615, -41.1012, 0.28", "-140.334, -21.6489, -42.5641, 0.55", "-143.499, -22.6697, -44.3157, 0.28", "-144.466, -22.9583, -44.8829, 0.83", "-147.315, -23.8251, -46.6271, 0.28", "-148.049, -24.0784, -47.1046, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.818469, 38.5919, 5.01776, 0.67", "-1.37496, 53.5815, 5.01776, 0.67", "-1.93145, 68.5712, 5.01776, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "19.4808, 23.8234, 27.9318, 0.55", "20.7588, 27.7685, 36.4664, 0.55", "20.8947, 30.206, 45.5889, 0.55", "19.283, 32.3314, 54.6394, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "19.4808, 23.8234, 27.9318, 0.55", "25.7224, 28.2429, 32.7914, 0.55", "31.6177, 32.9274, 37.8557, 0.55", "36.7416, 37.8412, 43.5307, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.9645, 6.74028, -21.5819, 1.38", "14.6388, 5.70735, -30.7085, 0.83", "14.8468, 5.579, -31.8426, 0.83", "15.3129, 5.29143, -34.3834, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.9645, 6.74028, -21.5819, 1.38", "15.8403, 8.27676, -21.4625, 0.55", "19.1726, 9.86784, -21.2281, 0.55", "21.715, 10.975, -20.9868, 0.55", "25.7356, 12.7836, -20.5092, 0.55", "28.2417, 14.0573, -20.1187, 0.55", "30.7623, 15.5474, -19.6847, 0.55", "32.9857, 17.1537, -19.2391, 0.55", "34.239, 18.3401, -18.9124, 0.55", "36.2681, 20.8323, -18.2945, 0.55", "38.1777, 23.7737, -17.6336, 0.28", "40.0957, 27.1619, -16.7886, 0.55", "41.7632, 30.6113, -15.9864, 0.55", "43.7049, 35.0815, -14.8308, 0.55", "44.3667, 36.7116, -14.3881, 0.55", "45.0637, 38.3973, -13.8664, 0.55", "46.8968, 42.6832, -12.3754, 0.55", "47.5669, 43.9483, -11.8905, 0.55", "49.0485, 46.392, -10.9421, 0.83", "49.8732, 47.5848, -10.5149, 0.28", "51.6404, 49.9555, -9.71525, 0.55", "52.8536, 51.3938, -9.34302, 0.55", "57.6639, 56.7688, -8.57022, 0.55", "60.061, 59.264, -8.45433, 0.55", "61.6251, 60.8767, -8.49267, 0.55", "63.6013, 62.794, -8.62649, 0.55", "66.2947, 65.4046, -8.82076, 0.55", "68.2979, 67.2782, -8.89809, 0.83", "70.9188, 69.7576, -8.75148, 0.55", "73.8331, 72.0595, -8.24621, 0.55", "75.7812, 73.3962, -7.6276, 0.55", "78.8389, 75.0656, -6.26327, 0.55", "80.047, 75.5628, -5.59455, 0.55", "83.5128, 76.3458, -3.56603, 0.55", "86.8226, 76.6022, -1.45903, 0.55", "88.517, 76.5299, -0.426394, 0.55", "91.4143, 76.1768, 1.33931, 0.55", "93.1566, 75.8671, 2.28213, 0.55", "94.6646, 75.5661, 3.10845, 0.55", "96.8806, 75.1104, 4.30346, 0.55", "99.2582, 74.8153, 5.6332, 0.55", "101.27, 74.5914, 6.85855, 0.55", "103.858, 74.341, 8.513, 0.55", "106.001, 74.2618, 9.90831, 0.55", "107.661, 74.2574, 10.9931, 0.28", "109.486, 74.2163, 12.1501, 0.55", "111.328, 74.0968, 13.3859, 0.55", "119.831, 77.2388, 17.4052, 0.55", "128.888, 80.5624, 19.7113, 0.55", "136.944, 85.4012, 22.9956, 0.55", "144.977, 90.4715, 25.9959, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.67159, 14.4237, -24.9024, 1.11", "7.34051, 17.3881, -30.0217, 0.83", "4.90165, 20.4896, -35.3777, 0.83", "0.278325, 26.3691, -45.5311, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.67159, 14.4237, -24.9024, 1.11", "10.564, 16.1705, -25.8625, 0.83", "12.3635, 18.808, -26.7889, 0.83", "15.0591, 22.1009, -27.6017, 0.83", "16.1353, 23.2996, -27.783, 0.83", "18.9978, 26.6033, -28.1129, 0.83", "21.8469, 29.8916, -28.4413, 0.83", "24.5399, 32.6989, -28.5852, 0.83", "26.8118, 34.8436, -28.5295, 0.83", "29.9889, 37.8092, -28.0824, 0.83", "32.2573, 40.0231, -27.6648, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.6416, 74.3292, 24.2644, 0.83", "-11.3916, 76.0672, 23.0955, 0.55", "-11.1396, 78.0703, 21.7149, 0.83", "-10.786, 81.0849, 19.3601, 0.55", "-10.4678, 83.968, 16.8233, 0.55", "-10.2365, 85.9152, 15.0359, 0.55", "-10.0997, 87.0693, 13.9402, 0.28", "-9.95195, 88.3299, 12.5845, 0.55", "-9.78966, 90.1007, 10.4433, 0.28", "-9.77452, 90.9891, 9.34467, 0.55", "-9.91844, 92.73, 7.38276, 0.83", "-10.0294, 93.7167, 6.37863, 0.55", "-10.2291, 95.2066, 4.94945, 0.83", "-10.5149, 97.9087, 2.63628, 0.55", "-10.6647, 99.4364, 1.43101, 0.55", "-10.9303, 101.34, -0.106607, 0.55", "-11.2953, 103.393, -1.88784, 0.83", "-11.7593, 106.15, -4.3341, 0.55", "-12.1059, 108.067, -6.0661, 0.55", "-12.5261, 110.103, -8.03447, 0.55", "-12.8468, 111.86, -9.65602, 0.55", "-13.2449, 113.702, -11.1709, 0.83", "-13.6442, 115.388, -12.3744, 0.55", "-13.9627, 116.645, -13.1964, 0.55", "-14.5998, 118.925, -14.6119, 0.83", "-15.2867, 121.632, -16.137, 0.55", "-15.8103, 123.884, -17.3509, 0.55", "-16.7074, 127.671, -19.4849, 0.55", "-16.9494, 128.711, -20.0799, 0.28", "-17.1577, 129.7, -20.6879, 0.55", "-17.4179, 130.955, -21.4892, 0.28", "-17.6844, 132.474, -22.4927, 0.55", "-18.035, 135.348, -24.3846, 0.55", "-18.1581, 137.413, -25.6647, 0.55", "-18.1896, 139.731, -27.2067, 0.28", "-18.1929, 140.804, -27.9735, 0.28", "-18.2223, 142.987, -29.6349, 0.55", "-18.2089, 145.269, -31.6255, 0.28", "-18.2038, 147.905, -34.1545, 0.55", "-18.1597, 150.321, -37.0365, 0.28", "-18.1608, 151.881, -39.2894, 0.55", "-18.1842, 152.36, -40.0874, 0.55", "-18.4465, 154.095, -43.8447, 0.28", "-18.5796, 154.552, -45.1422, 0.55", "-19.4286, 155.959, -50.786, 0.28", "-19.795, 156.436, -53.0368, 0.55", "-20.0246, 156.706, -54.4846, 0.55", "-20.959, 157.663, -59.9979, 0.28", "-21.6531, 158.045, -63.1405, 0.55", "-22.0709, 158.158, -64.9327, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-11.6416, 74.3292, 24.2644, 0.83", "-10.3081, 77.2145, 23.842, 0.55", "-8.50894, 81.4939, 23.4077, 0.55", "-7.16487, 85.2287, 23.1669, 0.55", "-5.87146, 89.095, 22.917, 0.55", "-4.79513, 92.2298, 22.8126, 0.55", "-3.31781, 96.3384, 22.8201, 0.83", "-1.79826, 100.256, 22.958, 0.55", "0.175783, 104.88, 23.318, 0.55", "1.59564, 108.19, 23.8509, 0.55", "3.31966, 112.125, 24.8156, 0.83", "4.7812, 115.357, 25.7382, 0.55", "6.07272, 118.043, 26.5314, 0.55", "7.11503, 119.961, 27.2158, 0.55", "9.52557, 124.257, 29.0913, 0.55", "10.4976, 126.011, 30.0148, 0.55", "11.5795, 128.092, 31.1388, 0.55", "12.6254, 130.323, 32.4418, 0.55", "14.4325, 134.561, 35.1771, 0.28", "15.9269, 137.843, 37.4467, 0.55", "17.1565, 140.427, 39.3446, 0.28", "17.9461, 142.2, 40.7687, 0.55", "18.9281, 144.673, 42.932, 0.28", "19.8409, 146.907, 45.0933, 0.55", "23.9524, 159.266, 49.8244, 0.55", "29.7291, 170.278, 55.7118, 0.55", "34.9845, 180.769, 62.8221, 0.55", "41.3747, 189.47, 71.1001, 0.55", "49.853, 197.637, 77.8581, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-148.695, -22.3932, 23.5585, 0.55", "-155.726, -27.0703, 27.2735, 0.55", "-160.97, -32.9662, 32.1542, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-148.695, -22.3932, 23.5585, 0.55", "-157.655, -25.4347, 23.2261, 0.55", "-166.517, -28.7416, 23.7552, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.28599, -18.8406, -3.97253, 1.38", "-3.50338, -20.6017, -5.91172, 0.83", "-2.66474, -22.3056, -7.97238, 0.83", "-1.96232, -23.7664, -9.67956, 0.55", "-1.22667, -25.2765, -11.4623, 0.55", "-0.635503, -26.5995, -12.9885, 0.83", "-0.0848401, -28.1245, -14.6584, 0.55", "0.5635, -30.67, -17.1222, 0.55", "0.77779, -31.5384, -17.8763, 1.11", "1.3648, -33.7513, -19.5364, 0.55", "1.61468, -34.768, -20.2075, 0.83", "2.41687, -38.1241, -22.1547, 0.55", "3.33729, -41.4606, -23.9888, 0.55", "3.94142, -43.437, -25.0774, 0.28", "4.33119, -44.5147, -25.7079, 0.55", "4.94695, -46.0217, -26.5872, 0.28", "5.66921, -47.4535, -27.5132, 0.55", "6.91016, -49.5378, -28.9582, 0.55", "7.90562, -51.1349, -30.1423, 0.55", "8.82346, -52.5954, -31.1272, 0.55", "10.0733, -54.543, -32.3747, 0.83", "11.1774, -56.2968, -33.4416, 0.55", "11.6411, -57.1059, -33.9191, 0.55", "12.1995, -58.1889, -34.4835, 0.55", "12.9312, -59.807, -35.326, 0.55", "13.4859, -61.0726, -36.0002, 0.55", "14.5037, -63.6497, -37.4424, 0.55", "14.9551, -64.9971, -38.2013, 0.55", "15.0949, -65.4614, -38.4837, 0.83", "15.54, -67.1986, -39.6118, 0.55", "15.8182, -68.6244, -40.5765, 0.83", "16.1335, -70.1015, -41.5572, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.28599, -18.8406, -3.97253, 1.38", "-5.33819, -23.3133, -5.2306, 1.38", "-6.52988, -28.3791, -6.65546, 1.38", "-7.26988, -31.5247, -7.54025, 1.38", "-7.94156, -34.3799, -8.34334, 1.38" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "82.4572, -40.2784, -112.369, 0.55", "82.9547, -41.8277, -114.271, 0.55", "83.4058, -43.2328, -115.995, 0.28", "83.9177, -44.8274, -117.952, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "82.4572, -40.2784, -112.369, 0.55", "84.1262, -39.1318, -113.627, 0.55", "86.3333, -37.4522, -115.605, 0.55", "87.1569, -36.8237, -116.379, 0.55", "89.242, -35.0288, -118.471, 0.55", "90.588, -33.8927, -119.772, 0.28", "92.4126, -32.3891, -121.547, 0.55", "93.7381, -31.3307, -122.919, 0.28", "94.3246, -30.8665, -123.567, 0.28", "96.6174, -29.2212, -125.892, 0.55", "98.747, -27.9063, -127.796, 0.55", "100.464, -26.9524, -129.134, 0.55", "101.729, -26.3575, -129.978, 0.28", "102.762, -25.9373, -130.573, 0.55", "104.634, -25.2291, -131.508, 0.28", "105.964, -24.8272, -132.016, 0.55", "108.984, -23.931, -132.906, 0.55", "111.16, -23.3389, -133.2, 0.28", "113.026, -22.9147, -133.272, 0.55", "116.546, -22.2441, -133.218, 0.55", "118.878, -21.8567, -133.076, 0.28", "120.799, -21.6145, -132.897, 0.55", "125.113, -21.267, -132.435, 0.55", "127.503, -21.0551, -132.004, 0.55", "129.071, -20.8707, -131.614, 0.55", "130.481, -20.6239, -131.25, 0.28", "131.719, -20.2786, -130.968, 0.55", "134.158, -19.4953, -130.569, 0.28", "137.279, -18.2094, -130.236, 0.55", "139.799, -16.9417, -129.905, 0.28", "142.131, -15.6707, -129.587, 0.55", "144.429, -14.318, -129.295, 0.55", "147.482, -12.3491, -128.966, 0.55", "150.926, -10.0745, -128.703, 0.55", "152.782, -8.85805, -128.725, 0.28", "153.563, -8.35492, -128.773, 0.55", "154.968, -7.53134, -128.945, 0.55", "157.661, -5.92186, -129.356, 0.28", "159.133, -5.02926, -129.645, 0.55", "161.588, -3.83305, -130.375, 0.28", "163.579, -3.02211, -131.092, 0.55", "166.021, -2.11411, -132.082, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-51.919, 7.35686, 7.4969, 0.55", "-54.9876, 8.06066, 6.37068, 0.55", "-57.1888, 8.54748, 5.56666, 0.83", "-60.2532, 9.25091, 4.14818, 0.55", "-63.0088, 9.89244, 2.76537, 0.55", "-66.4951, 10.7342, 0.75765, 0.55", "-72.5425, 12.2649, -3.05828, 0.55", "-76.9613, 13.4745, -6.33313, 0.55", "-80.9824, 14.7034, -9.74996, 0.28", "-81.7859, 14.9867, -10.5754, 0.55", "-85.3285, 16.3204, -14.76, 0.55", "-87.5691, 17.2518, -17.7998, 0.55", "-90.2803, 18.5563, -22.0707, 0.28", "-90.9662, 18.901, -23.1822, 0.55", "-92.6937, 19.6954, -25.7482, 0.28", "-94.3846, 20.55, -28.3222, 0.55", "-95.2511, 21.0735, -29.6586, 0.55", "-98.5974, 23.331, -34.5582, 0.55", "-101.241, 25.2567, -38.2979, 0.55", "-102.876, 26.5514, -40.7025, 0.28", "-104.575, 28.0616, -43.4279, 0.55", "-105.909, 29.3658, -45.8391, 0.55", "-107.931, 31.1968, -49.5937, 0.55", "-109.865, 32.8522, -53.2022, 0.28", "-110.346, 33.242, -54.2075, 0.55", "-111.835, 34.3977, -57.8899, 0.28", "-113.044, 35.1749, -61.1439, 0.55", "-114.654, 36.1564, -66.5553, 0.55", "-115.068, 36.4749, -68.3941, 0.55", "-115.963, 37.1066, -72.6017, 0.28", "-116.466, 37.4095, -74.7045, 0.55", "-117.055, 37.6472, -76.9956, 0.55", "-118.36, 38.1226, -81.9734, 0.55", "-119.609, 38.6191, -86.316, 1.11", "-122.125, 39.3429, -94.1543, 0.28", "-123.164, 39.6148, -96.9992, 0.55", "-125.171, 39.9172, -102.835, 0.55", "-125.954, 40.0411, -105.138, 0.28", "-127.237, 40.292, -108.774, 0.55", "-129.499, 40.9148, -115.463, 0.28", "-129.967, 41.1326, -116.965, 0.55", "-132.551, 42.915, -127.963, 0.28", "-134.208, 44.7214, -137.544, 0.28", "-134.327, 44.9006, -138.604, 0.83", "-134.625, 45.6048, -142.929, 0.28", "-134.676, 45.9684, -144.747, 0.83", "-134.74, 47.3743, -151.582, 0.28", "-134.778, 48.0847, -154.53, 0.83", "-134.976, 49.4078, -159.74, 0.28", "-135.201, 50.0185, -162.329, 0.55", "-135.688, 50.7507, -165.288, 0.28", "-136.363, 51.4845, -168.006, 0.83", "-137.093, 52.1665, -170.367, 0.28", "-138.038, 52.9031, -172.998, 0.55", "-142.814, 55.8931, -184.64, 0.28", "-144.102, 56.5171, -187.506, 0.28", "-145.548, 56.9786, -190.498, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-51.919, 7.35686, 7.4969, 0.55", "-53.8461, 7.54918, 9.04467, 0.83", "-55.1092, 7.77818, 10.2048, 0.28", "-56.1211, 8.10198, 11.177, 0.83", "-56.8534, 8.39972, 11.8437, 0.55", "-61.053, 10.1978, 15.5319, 0.83", "-63.6988, 11.2178, 17.8876, 0.55", "-65.9623, 11.8596, 19.7801, 0.55", "-67.1133, 12.1756, 20.9041, 0.28", "-68.065, 12.4878, 21.9475, 0.55", "-68.8963, 12.7948, 22.971, 0.55", "-71.2313, 13.7932, 25.9448, 0.28", "-71.8191, 14.0174, 26.7602, 0.83", "-74.9891, 15.0874, 31.0153, 0.28", "-75.3924, 15.2081, 31.5883, 0.55", "-78.0031, 16.0565, 35.655, 0.28", "-78.5845, 16.2958, 36.6247, 0.83", "-84.6188, 16.9009, 46.4465, 0.83", "-89.9258, 16.2515, 56.6621, 0.83", "-96.1117, 14.3814, 66.2078, 0.83", "-103.167, 12.9745, 75.2138, 0.83", "-109.548, 9.27455, 84.1012, 0.83", "-114.318, 7.47582, 94.4392, 0.83", "-119.635, 7.02847, 104.663, 0.83", "-126.321, 7.349, 114.059, 0.83", "-131.922, 5.71994, 124.001, 0.83", "-136.107, 2.18696, 134.159, 0.83", "-140.524, -3.03912, 143.502, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "19.283, 32.3314, 54.6394, 0.55", "18.2947, 37.2501, 65.0195, 0.55", "15.8784, 42.1333, 75.1749, 0.55", "12.2258, 46.4976, 85.174, 0.55", "8.41064, 48.7039, 95.7509, 0.55", "4.20854, 49.936, 106.331, 0.55", "0.877118, 51.2602, 117.205, 0.55", "-0.983223, 53.5712, 128.276, 0.55", "-4.74562, 55.8905, 138.849, 0.55", "-7.92592, 58.3494, 149.584, 0.55", "-9.98787, 61.909, 160.307, 0.55", "-14.1704, 63.4006, 170.862, 0.55", "-17.7138, 65.7634, 181.502, 0.55", "-23.6594, 67.3112, 191.166, 0.55", "-29.193, 70.8451, 200.583, 0.55", "-33.6236, 75.7506, 210.02, 0.55", "-36.7512, 79.7761, 220.324, 0.55" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "19.283, 32.3314, 54.6394, 0.55", "20.5544, 33.9154, 65.5655, 0.55", "20.125, 33.5986, 76.6561, 0.55", "20.6019, 34.9488, 87.6743, 0.55", "19.1104, 35.9365, 98.6371, 0.55", "18.6014, 36.8315, 109.696, 0.55", "18.3917, 37.8333, 120.757, 0.55" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "36.7416, 37.8412, 43.5307, 0.55", "42.8837, 44.3308, 48.3478, 0.55", "49.3343, 50.5129, 53.1272, 0.55", "56.904, 55.5589, 57.4495, 0.55", "65.8211, 59.0556, 60.357, 0.55", "74.4789, 62.7287, 63.8025, 0.55", "83.7564, 65.3403, 66.4166, 0.55", "93.0786, 65.4729, 69.9248, 0.55", "101.516, 65.2392, 75.217, 0.55", "110.758, 66.0011, 78.8563, 0.55", "119.702, 66.1998, 83.2379, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "36.7416, 37.8412, 43.5307, 0.55", "42.8735, 41.0028, 50.4573, 0.55", "49.4962, 42.0669, 57.5095, 0.55", "55.8657, 42.002, 64.8598, 0.55", "62.7961, 40.6588, 71.5608, 0.55", "69.2947, 39.8588, 78.7564, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "15.3129, 5.29143, -34.3834, 1.11", "17.9605, 5.00503, -33.3611, 0.55", "19.683, 4.63934, -32.7421, 0.83", "21.6684, 4.16075, -32.1169, 0.55", "23.6301, 3.61002, -31.6398, 0.55", "26.3678, 2.90297, -31.0723, 0.55", "29.7359, 2.0908, -30.4772, 0.55", "32.1413, 1.57615, -30.123, 0.55", "34.4363, 1.12298, -29.8018, 0.55", "38.8496, 0.224228, -29.1975, 0.55", "42.8247, -0.52006, -28.7358, 0.55", "45.9978, -1.01052, -28.3901, 0.55", "49.956, -1.43323, -28.0218, 0.55", "52.7037, -1.63462, -27.755, 0.55", "54.543, -1.73367, -27.5807, 0.83", "56.3929, -1.74604, -27.4143, 0.55", "58.3599, -1.69832, -27.2755, 0.55", "59.9394, -1.58954, -27.1768, 0.83", "62.8666, -1.10251, -26.999, 0.55", "65.3163, -0.529243, -26.8225, 0.55", "67.1477, -0.0673627, -26.5805, 0.55", "69.4746, 0.528263, -26.2105, 0.55", "71.8022, 1.10921, -25.8824, 0.55", "76.1054, 2.29343, -25.3675, 0.55", "79.2353, 3.16661, -25.0531, 0.55", "82.4525, 4.07932, -25.0286, 0.55", "83.9342, 4.47716, -25.1425, 0.28", "86.5329, 5.1734, -25.9536, 0.55", "88.2102, 5.54049, -27.0222, 0.28", "89.3722, 5.71839, -27.9648, 0.55", "92.5629, 6.25266, -31.1505, 0.28", "94.3513, 6.50873, -33.0939, 0.55", "98.5485, 7.01784, -37.6319, 0.55", "100.873, 7.23552, -40.1843, 0.55", "103.544, 7.39476, -43.0342, 0.28", "106.611, 7.50836, -45.7854, 0.55", "108.163, 7.52664, -46.039, 0.55", "110.642, 7.66703, -44.275, 0.28", "111.96, 7.69527, -43.201, 0.55", "114.736, 7.79539, -40.6701, 0.55", "125.416, 8.07028, -30.1875, 0.55", "125.882, 8.06856, -29.7176, 0.55", "126.502, 8.07186, -29.0884, 0.83", "128.56, 8.03847, -27.0545, 0.55", "129.581, 8.00698, -26.2299, 0.28", "130.185, 7.94623, -25.9906, 0.55", "133.372, 7.54812, -26.4617, 0.55", "135.211, 7.31236, -26.7398, 0.55", "137.541, 7.03197, -27.0954, 0.55", "139.864, 6.78565, -27.4434, 0.55", "141.947, 6.44709, -27.7303, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "15.3129, 5.29143, -34.3834, 1.11", "16.1373, 8.06435, -34.3149, 0.83", "16.5883, 9.58124, -34.2774, 0.83", "17.4631, 12.5236, -34.2047, 0.83", "17.9986, 14.3247, -34.1602, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.278325, 26.3691, -45.5311, 1.11", "-1.58528, 28.9978, -51.4474, 0.55", "-2.18679, 30.0184, -53.7349, 0.55", "-3.74604, 33.2131, -60.221, 0.55", "-5.41241, 36.455, -67.0003, 0.55", "-6.57851, 38.7725, -71.8863, 0.55", "-6.85201, 39.3379, -73.0455, 0.55", "-7.87134, 41.7929, -78.0057, 0.55", "-8.8788, 44.2628, -83.0329, 0.55", "-10.1303, 47.7719, -89.5441, 0.55", "-11.3668, 51.2049, -95.3502, 0.55", "-11.7791, 52.4541, -97.5094, 0.28", "-12.3759, 54.3582, -100.734, 0.55", "-12.6896, 55.4893, -102.632, 0.55", "-13.4734, 59.5777, -109.29, 0.55", "-13.944, 63.5753, -115.154, 0.55", "-14.4425, 68.0623, -121.794, 0.55", "-14.6357, 69.4892, -123.957, 0.55", "-15.1766, 72.7482, -128.841, 0.55", "-15.4475, 74.0461, -130.853, 0.28", "-15.9578, 75.4282, -133.3, 0.55", "-16.9264, 77.9935, -137.761, 0.55", "-17.5421, 79.3495, -139.936, 0.28", "-17.8807, 79.9214, -140.888, 0.55", "-18.6967, 81.056, -142.657, 0.28", "-19.9792, 82.839, -145.616, 0.55", "-20.6286, 83.9514, -147.348, 0.28", "-21.1948, 85.4586, -149.157, 0.83", "-21.4063, 86.5025, -150.336, 0.28", "-21.7436, 88.9933, -153.006, 0.55", "-22.0608, 91.2983, -155.4, 0.28", "-22.297, 92.4403, -156.588, 0.55", "-22.6139, 94.256, -158.413, 0.28", "-22.7463, 96.2705, -160.482, 0.55", "-22.6065, 98.5112, -162.919, 0.28", "-22.451, 99.7614, -164.17, 0.55", "-22.0728, 102.009, -166.636, 0.55", "-21.6172, 104.73, -169.862, 0.28", "-21.297, 106.524, -172.176, 0.83", "-20.7356, 109.93, -176.482, 0.28", "-20.4748, 111.532, -178.503, 0.55", "-20.1225, 115.087, -182.76, 0.55", "-20.0825, 116.698, -184.61, 0.28", "-20.2047, 118.023, -186.077, 0.55", "-20.4389, 119.376, -187.317, 0.55", "-20.8345, 120.768, -188.477, 0.28", "-21.598, 123.093, -190.442, 0.55", "-23.0207, 127.074, -193.549, 0.28", "-23.5558, 128.613, -194.856, 0.55", "-24.2197, 130.475, -196.365, 0.28", "-25.4982, 134.367, -199.617, 0.55", "-26.0514, 136.257, -201.207, 0.28", "-26.4713, 137.855, -202.628, 0.55", "-27.2491, 141.505, -205.821, 0.28", "-27.7869, 144.723, -208.627, 0.55", "-28.2174, 148.77, -212.116, 0.28", "-28.3017, 151.132, -213.959, 0.28", "-28.3609, 153.509, -215.726, 0.55", "-28.3143, 155.765, -217.482, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.278325, 26.3691, -45.5311, 1.11", "-1.19045, 27.4604, -45.3252, 1.11", "-4.62237, 30.1938, -44.9076, 0.55", "-5.66372, 31.1089, -44.8004, 0.55", "-8.22466, 33.3608, -44.4563, 0.55", "-10.2489, 35.2167, -44.1521, 0.55", "-13.5237, 38.3773, -43.6031, 0.83", "-14.8807, 39.8451, -43.2921, 0.55", "-17.0377, 42.3348, -42.5365, 0.83", "-18.8583, 44.4697, -41.7663, 0.55", "-19.8622, 45.6008, -41.3144, 0.55", "-21.6416, 47.5806, -40.2962, 0.83", "-23.5758, 49.777, -38.7719, 0.55", "-25.6591, 52.0666, -36.9303, 0.55", "-26.9455, 53.4896, -35.6191, 0.55", "-28.2581, 54.9482, -34.1763, 0.55", "-29.4487, 56.1546, -32.8421, 0.83", "-31.7892, 58.5905, -30.0513, 0.55", "-33.0221, 59.9203, -28.5174, 0.55", "-34.8603, 61.9335, -26.2628, 0.55", "-36.3281, 63.4559, -24.5087, 0.55", "-37.8326, 65.0315, -22.8219, 0.55", "-39.543, 66.8475, -21.1817, 0.55", "-41.391, 68.6652, -19.7902, 0.55", "-42.5448, 69.8356, -18.997, 0.55", "-43.7067, 71.1001, -18.3877, 0.55", "-45.7891, 73.4389, -17.5665, 0.55", "-47.3513, 75.1991, -17.0774, 0.55", "-48.822, 76.8837, -17.0042, 0.55", "-50.9919, 79.6574, -17.405, 0.55", "-52.9047, 82.4103, -18.071, 0.55", "-54.4111, 84.8368, -18.7809, 0.55", "-55.8596, 87.2858, -19.5937, 0.55", "-59.8394, 94.2662, -21.9551, 0.55", "-60.7727, 96.0699, -22.4964, 0.55", "-61.1987, 96.9603, -22.7143, 0.55", "-62.449, 99.7324, -22.9875, 0.55", "-63.4752, 102.436, -22.8862, 0.55", "-63.6949, 103.022, -22.7751, 0.55", "-64.9102, 106.119, -21.7208, 0.55", "-65.5777, 107.668, -21.1983, 0.28", "-66.5592, 109.782, -20.5469, 0.55", "-68.246, 112.997, -19.6127, 0.55", "-69.5629, 115.086, -19.0228, 0.55", "-70.4636, 116.283, -18.6911, 0.28", "-72.1221, 118.006, -18.1943, 0.55", "-73.7416, 119.457, -17.8292, 0.55", "-75.8152, 121.156, -17.4842, 0.55", "-77.7793, 122.586, -17.3531, 0.55", "-79.2282, 123.57, -17.3793, 0.55", "-81.2979, 124.993, -17.6083, 0.55", "-83.0364, 126.351, -17.9488, 0.83", "-84.4932, 127.614, -18.3406, 0.28", "-85.6471, 128.769, -18.775, 0.55", "-86.9985, 130.264, -19.3689, 0.55", "-88.327, 131.845, -19.9666, 0.28", "-89.5663, 133.425, -20.5723, 0.55", "-90.9387, 135.125, -21.1697, 0.28", "-92.1044, 136.595, -21.6008, 0.55", "-93.3478, 138.318, -21.9536, 0.55", "-94.0627, 139.456, -22.1278, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "32.2573, 40.0231, -27.6648, 0.83", "33.0616, 43.3781, -30.245, 0.83", "33.6029, 45.636, -31.9814, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "32.2573, 40.0231, -27.6648, 0.83", "35.4415, 41.5847, -27.8321, 0.55", "37.0825, 42.396, -28.0647, 0.55", "38.8255, 43.2578, -28.3118, 0.55", "42.1601, 44.9065, -28.7845, 0.55", "44.4915, 46.0592, -29.115, 0.83", "48.8379, 48.2081, -29.7312, 0.28", "52.4839, 50.4087, -29.8886, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.1335, -70.1015, -41.5572, 0.55", "15.3063, -69.4249, -41.5683, 0.55", "14.3257, -68.3495, -41.8159, 0.28", "13.7027, -67.6663, -41.9731, 0.55", "12.8992, -66.7851, -42.176, 0.28", "12.7091, -66.5766, -42.224, 0.55", "11.7951, -65.5743, -42.4547, 0.28", "11.3617, -64.8559, -42.5371, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "16.1335, -70.1015, -41.5572, 0.55", "16.6973, -71.6483, -40.743, 0.28", "17.2474, -73.1575, -39.9486, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.94156, -34.3799, -8.34334, 1.38", "-9.19431, -38.2008, -9.35482, 1.11", "-9.58402, -39.4556, -9.81176, 1.11", "-10.2473, -41.5913, -10.5894, 1.11", "-10.9083, -43.7196, -11.3645, 1.11", "-11.9244, -46.9917, -12.556, 1.11", "-13.117, -50.8317, -13.9543, 1.11", "-14.3574, -54.5804, -14.9959, 1.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.94156, -34.3799, -8.34334, 1.38", "-8.88486, -34.8845, -8.60142, 0.83", "-9.57677, -35.3128, -8.80881, 0.83", "-10.923, -36.2513, -9.22878, 0.83", "-12.811, -37.7046, -9.78976, 0.55", "-14.4274, -38.9747, -10.2491, 0.55", "-15.7178, -39.9773, -10.6183, 0.55", "-17.1721, -41.0331, -11.0456, 0.28", "-17.7388, -41.4279, -11.1818, 0.55", "-20.1587, -42.8851, -11.5481, 0.55", "-21.934, -43.7883, -11.7672, 0.55", "-24.5457, -44.9793, -12.083, 0.55", "-26.5951, -45.7859, -12.3235, 0.55", "-29.6358, -46.8832, -12.668, 0.55", "-32.7365, -47.9489, -13.1393, 0.55", "-35.5313, -48.8891, -13.6983, 0.55", "-37.0572, -49.4653, -14.0599, 0.55", "-39.3245, -50.4764, -14.6783, 0.55", "-41.8709, -51.8324, -15.4639, 0.55", "-45.0223, -53.7495, -16.6254, 0.55", "-46.4088, -54.7695, -17.1587, 0.55", "-47.6637, -55.732, -17.5911, 0.55", "-49.6815, -57.3351, -18.2979, 0.55", "-52.7049, -59.9388, -19.2915, 0.55", "-54.4377, -61.4788, -19.8119, 0.28", "-55.8779, -62.8061, -20.2054, 0.55", "-57.837, -64.4686, -20.7442, 0.55", "-59.2904, -65.565, -21.0499, 0.28", "-60.7049, -66.5134, -21.253, 0.83", "-61.9119, -67.1947, -21.3349, 0.55", "-63.3618, -67.8661, -21.3462, 0.83", "-66.004, -68.9745, -21.266, 0.55", "-69.3711, -70.4369, -20.7669, 0.55", "-70.8733, -71.0312, -20.4631, 0.55", "-71.9062, -71.4698, -20.1332, 0.55", "-73.76, -72.3004, -19.3299, 0.55", "-76.536, -73.6307, -17.9728, 0.83", "-79.6429, -75.2379, -16.322, 0.55", "-81.339, -76.172, -15.4668, 0.55", "-84.3591, -77.9895, -13.7354, 0.55", "-85.6456, -78.8042, -12.9217, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "18.3917, 37.8333, 120.757, 0.55", "22.3406, 35.5099, 130.958, 0.55", "28.1361, 32.5279, 140.078, 0.55", "33.906, 28.3345, 148.779, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "18.3917, 37.8333, 120.757, 0.55", "16.886, 40.1475, 127.934, 0.55", "14.4793, 42.7586, 134.764, 0.55", "12.3741, 44.3817, 141.963, 0.55", "9.11848, 47.5941, 148.178, 0.55", "5.27394, 51.8157, 153.429, 0.55", "2.4687, 55.4778, 159.637, 0.55", "-0.258755, 58.0553, 166.356, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "119.702, 66.1998, 83.2379, 0.55", "125.634, 66.6917, 87.8312, 0.55", "131.713, 67.0804, 92.239, 0.55", "137.613, 68.6598, 96.6457, 0.55", "144.097, 69.9398, 100.254, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "119.702, 66.1998, 83.2379, 0.55", "126.47, 75.3889, 81.8561, 0.55", "133.81, 83.9434, 79.8476, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "69.2947, 39.8588, 78.7564, 0.55", "75.7659, 40.57, 84.2618, 0.55", "83.0081, 40.8606, 88.7475, 0.55", "90.4927, 42.0729, 92.6514, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "69.2947, 39.8588, 78.7564, 0.55", "74.8911, 39.9546, 85.5054, 0.55", "79.4827, 39.9277, 92.9749, 0.55", "83.3666, 39.3336, 100.815, 0.55", "85.6201, 38.1206, 109.207, 0.55", "88.552, 36.1499, 117.252, 0.55", "91.106, 33.6677, 125.295, 0.55", "94.0033, 29.6848, 132.644, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "141.947, 6.44709, -27.7303, 0.55", "141.943, 7.62365, -29.4795, 0.55", "141.94, 8.51602, -30.8063, 0.83", "141.935, 10.2271, -33.3502, 0.28", "141.929, 11.9333, -35.887, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "141.947, 6.44709, -27.7303, 0.55", "142.861, 5.28879, -28.7918, 0.55", "144.777, 3.25416, -30.8194, 0.28", "146.091, 1.93954, -32.1001, 0.55", "148.065, 0.0120463, -33.9003, 0.55", "148.937, -0.793175, -34.6284, 0.83", "150.475, -2.25802, -35.9858, 0.55", "151.403, -3.13054, -36.7869, 0.55", "152.385, -4.02098, -37.5808, 0.28", "152.95, -4.52025, -38.0216, 0.55", "155.071, -6.41463, -39.8064, 0.55", "156.585, -7.80085, -41.2171, 0.28", "157.939, -9.1213, -42.7133, 0.55", "158.487, -9.66472, -43.4143, 0.28", "159.995, -11.1975, -45.459, 0.55", "162.215, -13.3106, -48.5413, 0.28", "163.194, -14.1966, -49.8811, 0.55", "165.638, -16.1298, -52.9507, 0.55", "167.186, -17.2631, -54.7045, 0.28", "168.446, -18.2206, -56.1182, 0.55", "170.425, -19.6969, -58.264, 0.28", "171.494, -20.3684, -59.1543, 0.55", "172.435, -20.9212, -59.8673, 0.55", "176.117, -22.5049, -61.367, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "17.9986, 14.3247, -34.1602, 0.83", "17.1128, 11.6658, -40.9204, 0.83", "16.4511, 10.3733, -47.5332, 0.55", "15.9666, 9.83884, -51.4002, 0.55", "15.5461, 9.48564, -54.1988, 0.55", "14.3388, 8.74836, -61.2623, 0.83", "12.0156, 7.71117, -72.5306, 1.11", "8.94833, 7.11598, -85.4754, 0.83", "7.6722, 7.19719, -89.9802, 0.83", "7.05543, 7.3162, -91.9002, 0.83", "4.94193, 7.90465, -97.915, 1.38", "3.37649, 8.40765, -101.69, 0.55", "-0.0590295, 9.48844, -108.429, 0.83", "-1.11937, 9.68804, -110.216, 0.83", "-5.23302, 10.5319, -117.01, 0.55", "-6.78483, 10.9341, -119.614, 0.83", "-7.75901, 11.2427, -121.427, 0.55", "-10.7641, 12.5279, -127.972, 0.83", "-12.6467, 13.5844, -132.493, 0.83", "-13.5555, 14.2559, -134.799, 0.83", "-14.843, 15.6584, -138.217, 0.83", "-17.981, 20.4003, -147.352, 0.55", "-19.3667, 23.3553, -151.827, 0.83", "-19.9509, 25.1325, -153.973, 0.83", "-20.7252, 27.9463, -156.926, 0.83", "-21.5983, 31.4467, -160.085, 0.83", "-22.311, 34.0377, -161.906, 0.83", "-22.9692, 36.2593, -163.051, 0.83", "-24.6825, 41.8899, -165.892, 0.83", "-25.8761, 45.4269, -167.8, 0.83", "-27.0543, 49.2857, -170.019, 0.83", "-27.799, 51.4735, -171.325, 0.55", "-28.9764, 54.335, -173.145, 0.83", "-30.256, 56.9432, -174.991, 0.83", "-30.9588, 58.4073, -176.134, 0.83", "-32.6051, 61.5843, -179.032, 0.83", "-33.746, 63.4371, -180.953, 0.83", "-34.876, 65.2333, -182.863, 0.83", "-37.0485, 68.7392, -186.605, 0.83", "-39.547, 72.9108, -190.94, 0.83", "-40.7643, 75.0958, -193.152, 0.83", "-43.1392, 79.4654, -197.363, 0.83", "-43.7587, 80.8201, -198.624, 0.83", "-45.0847, 84.1611, -201.538, 0.83", "-45.7518, 85.9393, -202.938, 0.83", "-46.7335, 88.3503, -204.787, 0.55", "-46.9991, 89.1976, -205.474, 0.55", "-47.6499, 93.0332, -208.311, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "17.9986, 14.3247, -34.1602, 0.83", "19.0077, 14.4886, -37.2596, 0.55", "20.6532, 14.6388, -44.0876, 0.83", "21.5275, 14.5317, -47.9586, 0.55", "23.1622, 14.226, -54.9292, 0.83", "24.0913, 14.0764, -59.2363, 0.55", "24.9475, 14.0093, -63.293, 0.83", "26.9213, 13.6274, -74.507, 0.83", "27.435, 13.4971, -77.5909, 0.55", "27.6671, 13.3846, -79.4142, 0.83", "28.7704, 12.2634, -90.7269, 0.28", "28.8808, 12.036, -92.5498, 0.55", "29.4722, 9.94974, -106.088, 0.55", "29.5201, 9.68244, -107.587, 0.55", "29.6485, 7.55259, -118.348, 0.28", "29.6379, 6.75721, -121.519, 0.55", "29.4797, 3.46462, -131.793, 0.28", "29.3876, 2.59022, -134.251, 0.55", "28.8001, -0.253229, -141.648, 0.83", "28.4409, -1.2677, -144.397, 0.28", "27.8872, -2.44378, -147.401, 0.55", "26.5993, -4.5541, -152.885, 0.28", "25.3779, -5.97987, -156.431, 0.83", "23.5932, -7.56847, -160.763, 0.55", "21.2004, -9.48562, -165.687, 0.28", "19.9662, -10.3462, -168.208, 0.55", "16.8756, -12.324, -174.21, 0.28", "15.8382, -12.9902, -176.281, 0.55", "13.5705, -14.6493, -181.153, 0.28", "12.8196, -15.2587, -182.995, 0.83", "9.99198, -17.7058, -190.566, 0.28", "8.88049, -18.6931, -193.721, 0.55", "6.70461, -20.7897, -200.358, 0.28", "6.27813, -21.2642, -201.975, 0.55", "3.62409, -24.585, -213.126, 0.28", "2.94322, -25.4348, -216.11, 0.55", "2.29017, -26.316, -219.19, 0.28", "1.38841, -27.6775, -224.204, 0.55", "-0.944053, -31.6841, -239.025, 0.28", "-1.30014, -32.3447, -241.62, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-94.0627, 139.456, -22.1278, 0.55", "-92.1113, 141.578, -24.097, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-94.0627, 139.456, -22.1278, 0.55", "-94.2741, 140.531, -21.6259, 0.55", "-94.3445, 141.654, -20.9185, 0.28", "-94.4067, 142.854, -20.1633, 0.55", "-94.4903, 143.581, -19.6754, 0.28", "-94.6177, 144.818, -18.7664, 0.55", "-94.8107, 146.375, -17.5232, 0.28", "-95.0298, 147.559, -16.3767, 0.55", "-95.2036, 148.171, -15.7163, 0.28", "-95.6165, 149.122, -14.6023, 0.55", "-96.5431, 150.755, -12.7927, 0.28", "-96.9251, 151.291, -12.237, 0.55", "-97.7216, 152.106, -11.4163, 0.55", "-98.3501, 152.605, -10.8793, 0.55", "-99.2543, 153.279, -10.0951, 0.28", "-99.9924, 153.739, -9.6742, 0.55", "-100.849, 158.212, -5.34223, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "33.6029, 45.636, -31.9814, 0.83", "34.641, 49.208, -33.6668, 0.55", "35.1596, 50.8657, -34.6782, 0.83", "35.7385, 52.6731, -35.6124, 0.83", "36.3119, 54.6842, -36.5343, 0.55", "36.6814, 55.8402, -37.0357, 0.83", "37.5687, 58.466, -38.0952, 0.55", "38.4295, 61.0402, -38.9817, 0.83", "39.9353, 65.9804, -40.5733, 0.83", "40.386, 67.6066, -41.0027, 0.83", "41.565, 71.6473, -41.795, 0.83", "42.1699, 73.7779, -42.0634, 0.83", "43.0745, 76.9461, -42.2038, 0.83", "43.8219, 79.787, -42.2571, 0.83", "44.6793, 83.45, -42.305, 0.83", "45.716, 87.9653, -42.313, 0.83", "46.4398, 91.5597, -42.2371, 0.83", "47.0902, 94.729, -42.1556, 0.83", "47.9937, 98.7986, -42.02, 0.83", "48.8021, 102.888, -41.9065, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "33.6029, 45.636, -31.9814, 0.83", "34.7846, 45.898, -31.7782, 0.28", "35.7355, 46.1164, -31.7314, 0.55", "37.2528, 46.4888, -31.8367, 0.28", "40.1649, 47.1499, -32.2075, 0.55", "42.5899, 47.5922, -32.5859, 0.55", "44.2177, 47.8014, -32.9092, 0.28", "46.4797, 47.9007, -33.4661, 0.55", "48.5991, 47.8103, -34.0679, 0.28", "49.7418, 47.6571, -34.4547, 0.55", "50.961, 47.3859, -34.9715, 0.28", "52.6429, 46.8242, -35.7084, 0.55", "55.2511, 45.7175, -36.7247, 0.28", "56.3969, 45.0967, -37.1377, 0.55", "57.6443, 44.3503, -37.587, 0.28", "59.1076, 43.4597, -38.1442, 0.55", "60.8399, 42.3903, -38.8322, 0.28", "63.3473, 40.6501, -39.8472, 0.28", "64.1518, 39.9439, -40.267, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "17.2474, -73.1575, -39.9486, 0.83", "18.1341, -74.3493, -39.7087, 0.55", "18.9245, -75.5523, -39.4491, 0.55", "19.9989, -77.2323, -39.056, 0.55", "20.7434, -78.3997, -38.8921, 0.55", "21.2963, -79.2079, -38.8696, 0.55", "22.0062, -80.2113, -38.9014, 0.55", "22.8439, -81.4179, -39.0374, 0.28", "23.2378, -81.9682, -39.1371, 0.55", "24.6529, -83.9398, -39.6865, 0.28", "25.7911, -85.4163, -40.2439, 0.28", "26.2691, -85.9778, -40.5009, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.2474, -73.1575, -39.9486, 0.83", "17.6443, -74.5868, -40.4281, 1.11", "17.9927, -75.5796, -40.9093, 0.28", "18.3488, -76.5698, -41.4584, 0.83", "18.9326, -78.0996, -42.2887, 0.83", "20.4413, -81.9246, -44.2356, 0.28", "20.6737, -82.3975, -44.455, 0.83", "22.1151, -84.7958, -45.5955, 0.28", "22.693, -85.6008, -46.0104, 0.55", "24.0593, -87.2963, -46.8788, 0.55", "24.8265, -88.192, -47.348, 0.55", "26.9571, -90.7506, -48.6782, 0.55", "27.6141, -91.6164, -49.1181, 0.55", "29.1579, -93.7731, -50.3398, 0.28", "29.7063, -94.6956, -51.0065, 0.55", "30.3727, -96.1121, -52.193, 0.55", "30.8684, -97.5734, -53.3871, 0.55", "31.1726, -99.349, -54.785, 0.55", "31.397, -101.411, -56.5825, 0.55", "31.5725, -103.517, -58.4359, 0.28", "31.7121, -104.895, -59.6956, 0.55", "31.9543, -106.824, -61.3888, 0.55", "32.0952, -108.177, -62.5958, 0.55", "32.6971, -113.196, -67.1087, 0.55", "32.8745, -114.416, -68.1336, 0.55", "33.1863, -116.116, -69.5753, 0.28", "33.3651, -117.234, -70.4858, 0.55", "33.7289, -119.028, -71.9821, 0.55", "34.2444, -121.403, -73.8682, 0.28", "34.3996, -122.121, -74.3937, 0.55", "34.715, -123.549, -75.4723, 0.28", "35.5058, -126.511, -77.7856, 0.55", "36.8004, -130.675, -81.2332, 0.28", "37.3037, -131.988, -82.3115, 0.55", "37.9529, -133.49, -83.5857, 0.28", "38.3625, -134.326, -84.2917, 0.55", "39.5146, -136.174, -85.7386, 0.28", "40.878, -137.648, -86.9444, 0.55", "42.2991, -138.902, -87.8271, 0.28", "43.0459, -139.434, -88.2297, 0.55", "44.4714, -140.298, -88.9715, 0.55", "46.6464, -141.407, -89.9893, 0.55", "49.5702, -142.722, -91.323, 0.55", "51.5049, -143.53, -92.2142, 0.28", "53.3592, -144.29, -93.2623, 0.55", "55.0543, -144.98, -94.3102, 0.28", "56.3867, -145.549, -95.2151, 0.55", "58.5403, -146.617, -96.9753, 0.28", "59.55, -147.25, -97.891, 0.55", "61.5712, -148.811, -100.16, 0.28", "62.0176, -149.267, -100.774, 0.28", "62.8039, -150.147, -101.952, 0.55", "64.9907, -152.828, -105.548, 0.28", "65.5221, -153.531, -106.462, 0.55", "67.7323, -156.676, -110.558, 0.28", "68.9161, -158.585, -112.885, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-14.3574, -54.5804, -14.9959, 1.66", "-16.7937, -57.6704, -20.0753, 1.38", "-18.8924, -60.3323, -24.4511, 1.38", "-20.9082, -62.8889, -28.6537, 1.11", "-22.1524, -64.4669, -31.2479, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.3574, -54.5804, -14.9959, 1.66", "-19.5705, -54.9786, -16.6597, 0.83", "-22.3963, -55.3159, -17.8303, 0.55", "-24.375, -55.6269, -18.6709, 0.55", "-30.06, -57.0219, -21.1435, 0.55", "-35.4964, -58.4734, -23.5503, 0.55", "-36.7196, -58.845, -24.0757, 0.55", "-40.8861, -60.3223, -26.0429, 0.55", "-43.6522, -61.3631, -27.2937, 0.55", "-49.6762, -63.8376, -29.6907, 0.55", "-53.316, -65.6212, -30.912, 0.55", "-56.1464, -67.0894, -31.7048, 0.55", "-59.2249, -68.6174, -32.3875, 0.55", "-63.2054, -70.3851, -32.7716, 0.55", "-64.9199, -71.0299, -32.7811, 0.28", "-65.5753, -71.2294, -32.7098, 0.55", "-68.9582, -72.2863, -32.1054, 0.55", "-72.6232, -73.341, -31.3261, 0.55", "-77.1133, -74.4786, -30.1837, 0.55", "-80.225, -75.256, -29.3642, 0.55", "-81.2779, -75.4734, -29.1105, 0.28", "-84.6218, -76.134, -28.4244, 0.55", "-86.728, -76.4535, -28.0624, 0.28", "-89.0308, -76.6927, -27.694, 0.28", "-92.8813, -77.004, -27.1923, 0.55", "-94.8189, -77.1842, -26.9335, 0.55", "-98.4162, -77.4268, -26.2162, 0.55", "-102.433, -77.5074, -25.2279, 0.28", "-105.038, -77.5367, -24.4838, 0.55", "-106.83, -77.5845, -23.9517, 0.28", "-109.247, -77.5802, -23.2258, 0.55", "-112.926, -77.656, -22.2579, 0.28", "-115.714, -77.6691, -21.7229, 0.55", "-117.261, -77.7285, -21.6568, 0.28", "-119.258, -77.8029, -21.8427, 0.83", "-122.179, -78.1525, -22.6294, 0.28", "-123.878, -78.4763, -23.269, 0.55", "-126.245, -79.1139, -24.3258, 0.28", "-127.321, -79.5291, -24.8332, 0.55", "-128.643, -80.1747, -25.4245, 0.28", "-130.938, -81.4824, -26.5396, 0.55", "-132.925, -82.7243, -27.5825, 0.28", "-133.412, -82.9889, -27.8526, 0.55", "-134.965, -83.8024, -28.8487, 0.28", "-136.641, -84.6071, -29.9972, 0.55", "-140.017, -86.1402, -32.4865, 0.28", "-141.411, -86.7646, -33.5372, 0.83", "-145.681, -88.5056, -36.946, 0.28", "-147.86, -89.2565, -38.6274, 0.55", "-148.187, -89.3474, -38.865, 1.11", "-149.708, -89.7234, -39.922, 0.28", "-151.842, -90.171, -41.2918, 0.55", "-154.579, -90.6761, -42.9278, 0.28", "-155.546, -90.8391, -43.4559, 0.55", "-160.219, -91.5151, -45.8008, 0.28", "-162.339, -91.7955, -46.8689, 0.55", "-164.796, -92.0742, -48.0855, 0.28", "-166.779, -92.3365, -49.1115, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-85.6456, -78.8042, -12.9217, 0.55", "-87.7497, -79.9814, -10.2942, 0.55", "-88.8341, -80.5695, -8.97784, 0.28", "-90.9001, -81.7214, -6.39201, 0.55", "-94.9882, -84.1579, -1.07825, 0.28", "-96.5614, -85.1432, 0.84497, 0.55", "-100.192, -87.4811, 5.06665, 0.28", "-101.035, -88.0495, 6.05494, 0.55", "-102.401, -88.9647, 7.65039, 0.55", "-104.46, -90.4365, 9.95171, 0.55", "-106.76, -92.1702, 12.0408, 0.28", "-107.634, -92.9023, 12.8681, 0.28", "-109.547, -94.8005, 14.0819, 0.55", "-116.462, -98.9958, 21.2282, 0.55", "-123.067, -103.076, 28.7206, 0.55", "-129.542, -104.818, 37.0668, 0.55", "-135.002, -107.869, 45.8099, 0.55", "-140.74, -111.559, 54.1501, 0.55", "-147.846, -116.145, 60.8816, 0.55", "-153.038, -121.993, 68.4461, 0.55", "-157.584, -128.146, 76.2087, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-85.6456, -78.8042, -12.9217, 0.55", "-87.4509, -78.372, -13.3425, 0.55", "-89.6932, -77.8354, -13.8651, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "144.097, 69.9398, 100.254, 0.55", "154.803, 71.8167, 106.551, 0.55", "163.955, 73.1179, 115.052, 0.55", "171.762, 74.9753, 124.725, 0.55", "177.78, 78.5394, 135.221, 0.55", "182.718, 82.6281, 146.107, 0.55", "187.839, 85.7889, 157.182, 0.55", "193.244, 91.4219, 167.186, 0.55", "198.081, 98.1896, 176.842, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "144.097, 69.9398, 100.254, 0.55", "151.339, 71.2054, 104.413, 0.55", "158.174, 72.2117, 109.269, 0.55", "164.772, 72.2528, 114.533, 0.55", "171.209, 71.74, 119.97, 0.55", "177.505, 71.6785, 125.591, 0.55", "184.029, 71.0736, 130.913, 0.55", "191.285, 69.7623, 135.046, 0.55", "198.377, 68.6395, 139.499, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-47.6499, 93.0332, -208.311, 0.83", "-49.978, 93.194, -212.836, 0.55", "-51.9185, 93.0856, -216.886, 0.28", "-54.0736, 92.7764, -221.576, 0.55", "-55.4094, 92.398, -225.058, 0.55", "-57.3607, 91.7352, -230.587, 0.55", "-58.2357, 91.4381, -233.066, 0.55", "-59.649, 90.6248, -237.683, 0.28", "-59.8976, 90.4032, -238.663, 0.55", "-61.1466, 88.812, -244.514, 0.55", "-61.9528, 87.3648, -249.9, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-47.6499, 93.0332, -208.311, 0.83", "-46.457, 96.1658, -209.664, 0.83", "-45.9251, 98.0754, -210.71, 0.55", "-45.5694, 99.9404, -211.733, 0.83", "-45.3396, 101.288, -212.464, 0.55", "-45.063, 103.097, -213.408, 0.83", "-44.793, 105.832, -214.842, 0.83", "-44.8531, 108.474, -216.338, 0.55", "-45.0047, 110.299, -217.266, 0.83", "-45.3638, 112.419, -218.326, 0.83", "-45.6736, 113.762, -219.005, 0.28", "-46.1442, 115.652, -219.852, 0.55", "-46.6659, 118.421, -220.992, 0.55", "-46.9579, 120.473, -221.675, 0.55", "-47.1035, 122.763, -222.436, 0.28", "-47.1004, 124.603, -223.081, 0.55", "-46.9382, 127.331, -224.081, 0.55", "-46.5565, 131.004, -225.508, 0.83", "-46.179, 134.012, -226.737, 0.83", "-45.8049, 136.838, -228.0, 0.83", "-45.3854, 139.862, -229.536, 0.55", "-45.1673, 141.759, -230.641, 0.83", "-45.0203, 143.742, -231.95, 0.28", "-44.9989, 144.594, -232.535, 0.55", "-45.0628, 145.941, -233.577, 0.28", "-45.4417, 148.753, -235.75, 0.55", "-45.592, 149.557, -236.359, 0.55", "-45.8632, 151.107, -237.439, 0.28", "-45.9954, 152.052, -238.105, 0.55", "-46.2698, 155.465, -240.498, 0.28", "-46.2952, 156.639, -241.312, 0.55", "-46.2769, 157.938, -242.198, 0.28", "-46.3598, 159.985, -243.765, 0.55", "-46.5574, 162.93, -246.149, 0.28", "-46.7837, 164.672, -247.621, 0.55", "-46.9824, 166.148, -248.917, 0.28", "-47.2502, 167.721, -250.478, 0.55", "-47.8132, 170.329, -253.162, 0.28", "-47.9815, 170.886, -253.762, 0.55", "-48.8543, 173.144, -256.04, 0.28", "-49.3913, 174.294, -257.284, 0.83", "-50.1013, 175.783, -258.927, 0.28", "-50.5211, 176.806, -260.138, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "48.8021, 102.888, -41.9065, 0.83", "49.6932, 105.264, -41.1807, 0.83", "50.4089, 107.456, -40.4111, 0.83", "51.245, 110.095, -39.4063, 0.83", "52.2009, 112.935, -38.2851, 0.83", "53.3654, 116.303, -36.9086, 0.83", "54.5897, 119.846, -35.4521, 0.83", "55.7371, 123.418, -33.8723, 0.83", "56.7043, 126.391, -32.6016, 0.83", "57.6592, 129.221, -31.513, 0.83", "58.2842, 130.907, -31.0137, 0.55", "58.7566, 132.117, -30.7942, 0.83", "59.4235, 133.76, -30.703, 0.55", "60.7709, 136.894, -31.0227, 0.83", "62.0527, 139.989, -31.7172, 0.83", "63.5239, 143.669, -32.7715, 0.83", "64.6525, 146.307, -33.5204, 0.83", "66.3052, 150.04, -34.4995, 0.83", "67.9936, 153.861, -35.459, 0.55", "69.1567, 156.496, -36.1719, 0.55", "70.6339, 159.897, -37.3348, 0.55", "72.197, 163.726, -38.7329, 0.55", "73.1348, 166.071, -39.5847, 0.55", "73.6877, 167.518, -40.1496, 0.55", "76.0325, 173.935, -42.8551, 0.55", "77.2039, 177.383, -44.6088, 0.55", "77.5904, 178.715, -45.4211, 0.28", "77.9166, 180.056, -46.309, 0.55", "78.6459, 182.98, -48.2029, 0.55", "79.0431, 184.541, -49.0585, 0.55", "79.3876, 185.991, -49.6134, 0.28", "79.7788, 187.501, -49.9653, 0.55", "80.5658, 190.573, -50.3699, 0.28", "80.994, 192.252, -50.2571, 0.55", "81.4032, 193.84, -49.7818, 0.28", "81.7228, 194.974, -49.152, 0.55", "82.3134, 197.077, -47.5258, 0.28", "82.5861, 198.043, -46.6255, 0.55", "82.8005, 198.921, -45.5984, 0.28", "82.9375, 199.554, -44.7605, 0.55", "83.4258, 201.675, -41.721, 0.28", "83.7117, 202.682, -40.1374, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "48.8021, 102.888, -41.9065, 0.83", "47.3547, 104.586, -41.8305, 0.55", "46.669, 105.39, -41.7945, 0.28", "45.9945, 106.182, -41.7591, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-22.1524, -64.4669, -31.2479, 1.11", "-22.4919, -69.0533, -29.7486, 0.83", "-22.8481, -73.4544, -28.5074, 0.83", "-23.5117, -78.1787, -27.5965, 0.55", "-23.7138, -79.495, -27.4071, 0.83", "-24.3658, -83.7459, -26.8174, 0.83", "-24.6278, -85.7781, -26.5413, 0.83", "-24.9278, -87.9072, -26.4055, 0.28", "-25.7123, -93.2214, -26.2637, 0.83", "-25.9279, -94.7088, -26.2852, 0.28", "-26.1191, -96.3456, -26.2304, 0.55", "-26.4691, -99.3872, -25.9545, 0.55", "-26.5667, -100.546, -25.8277, 0.55", "-26.6435, -102.278, -25.6137, 0.83", "-26.7795, -105.324, -25.1692, 0.55", "-27.053, -108.741, -24.7163, 0.55", "-27.193, -110.355, -24.5206, 0.55", "-27.4666, -114.339, -24.1379, 0.55", "-27.4926, -115.968, -24.0512, 0.28", "-27.4183, -119.225, -23.9902, 0.55", "-27.37, -120.546, -24.0738, 0.55", "-27.2534, -123.06, -24.3888, 0.55", "-26.8501, -129.369, -25.436, 0.55", "-26.6453, -131.626, -25.9619, 0.28", "-26.53, -132.61, -26.2222, 0.55", "-25.8245, -137.547, -27.6823, 0.83", "-25.5191, -139.745, -28.3649, 0.55", "-25.1324, -142.319, -29.2272, 0.55", "-24.747, -145.151, -30.1665, 0.28", "-24.6517, -146.117, -30.479, 0.55", "-24.3821, -148.24, -31.1865, 0.55", "-24.0887, -150.263, -31.8773, 0.55", "-23.8139, -152.93, -32.8564, 0.55", "-23.5937, -155.155, -33.6231, 0.83", "-23.5346, -157.467, -34.3167, 0.55", "-23.5551, -159.748, -34.922, 0.55", "-23.677, -161.823, -35.3733, 0.55", "-23.9565, -165.114, -35.9009, 0.55", "-24.2819, -167.884, -36.1133, 0.55", "-24.5632, -170.153, -36.1396, 0.83", "-24.9422, -172.759, -36.064, 0.55", "-25.4788, -176.066, -35.9195, 0.55", "-25.9179, -179.388, -35.6772, 0.55", "-26.2558, -182.463, -35.3574, 0.55", "-26.4546, -185.09, -35.0772, 0.28", "-26.4505, -186.501, -34.9741, 0.55", "-26.3857, -187.713, -34.9329, 0.28", "-26.054, -189.858, -34.9551, 0.55", "-25.6955, -191.714, -35.0274, 0.28", "-25.2721, -193.447, -35.1881, 0.83", "-24.3627, -196.86, -35.5005, 0.55", "-23.8335, -198.722, -35.6627, 0.55", "-22.8425, -202.039, -35.9888, 0.83", "-22.4231, -203.319, -36.1254, 0.28", "-21.7096, -205.428, -36.3815, 0.55", "-20.7564, -208.033, -36.6275, 0.28", "-20.0839, -209.676, -36.7765, 0.55", "-19.1786, -211.801, -36.9279, 0.28", "-18.6908, -213.068, -37.0209, 0.83", "-17.7939, -215.437, -37.1774, 0.55", "-17.1344, -217.186, -37.2475, 0.55", "-16.0542, -220.107, -37.3295, 0.83", "-15.024, -223.028, -37.3214, 0.28", "-14.1839, -225.486, -37.1221, 0.55", "-13.542, -227.244, -36.8749, 0.28", "-13.1805, -228.189, -36.6952, 0.55", "-12.3179, -230.575, -36.169, 0.28", "-11.9372, -231.551, -35.8768, 0.55", "-10.5931, -234.378, -34.9178, 0.28", "-9.84809, -235.647, -34.2584, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-22.1524, -64.4669, -31.2479, 1.11", "-23.3814, -64.7209, -32.439, 0.83", "-25.1886, -65.3627, -34.5041, 0.55", "-27.673, -65.9477, -37.3527, 0.55", "-30.0185, -66.0351, -39.9335, 0.55", "-33.8917, -65.7208, -43.9715, 0.55", "-36.5715, -65.5546, -46.6237, 0.83", "-39.0201, -65.7169, -49.5408, 0.83", "-40.5121, -66.1113, -51.9945, 0.83", "-42.1512, -66.6115, -54.9398, 0.83", "-44.2669, -67.0903, -58.9967, 0.83", "-46.4035, -67.4872, -62.9719, 0.83", "-49.5224, -68.1012, -69.3279, 0.83", "-51.7767, -69.4097, -74.8263, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-157.584, -128.146, 76.2087, 0.55", "-166.078, -128.145, 82.919, 0.55", "-174.95, -129.329, 89.0439, 0.55", "-183.974, -133.339, 93.727, 0.55", "-192.954, -137.007, 98.7391, 0.55", "-200.824, -141.531, 104.907, 0.55", "-207.953, -145.726, 112.118, 0.55", "-214.31, -151.46, 119.114, 0.55", "-219.435, -157.28, 127.025, 0.55", "-223.948, -162.957, 135.399, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-157.584, -128.146, 76.2087, 0.55", "-162.006, -139.266, 81.0, 0.55", "-164.794, -150.537, 86.5115, 0.55", "-166.143, -162.77, 90.4374, 0.55", "-165.536, -175.3, 93.5015, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-51.7767, -69.4097, -74.8263, 0.83", "-55.8034, -67.2294, -80.3419, 0.83", "-59.1274, -65.9083, -84.6221, 0.83", "-62.5242, -64.9349, -88.7203, 0.55", "-65.0463, -64.3623, -91.6082, 0.55", "-66.1113, -64.1637, -92.7111, 0.55", "-68.8727, -63.7477, -95.3962, 0.83", "-69.7291, -63.7439, -96.0797, 0.83", "-74.073, -64.2901, -99.2584, 0.83", "-76.1108, -64.7228, -100.698, 0.83", "-78.6523, -65.2408, -102.581, 0.83", "-81.8509, -65.6695, -105.31, 0.83", "-84.1169, -65.7592, -107.582, 1.11", "-85.8143, -65.8839, -109.612, 0.55", "-86.7429, -65.988, -110.905, 0.55", "-88.944, -66.1507, -114.294, 0.83", "-92.4493, -66.0652, -120.16, 0.83", "-94.8067, -65.8166, -124.226, 0.83", "-97.2776, -65.4502, -128.609, 0.55", "-98.7116, -65.2982, -131.318, 0.83", "-99.4257, -65.2214, -132.734, 0.55", "-100.382, -65.1494, -134.8, 0.55", "-102.586, -65.0447, -139.366, 0.55", "-103.564, -64.9844, -141.189, 1.11", "-107.176, -64.4212, -148.561, 0.83", "-108.461, -64.0845, -151.477, 0.55", "-109.888, -63.4333, -155.291, 0.55", "-110.787, -62.9319, -157.956, 0.83", "-112.739, -61.6273, -163.796, 0.55", "-114.702, -60.2397, -169.535, 0.83", "-115.767, -59.3988, -173.154, 0.83", "-117.288, -58.5792, -178.343, 0.55", "-119.119, -58.0065, -183.732, 0.55", "-120.16, -57.8064, -186.349, 0.55", "-121.056, -57.7533, -188.106, 0.55", "-126.369, -58.0947, -196.086, 0.55", "-128.625, -58.4232, -198.998, 0.55", "-131.267, -58.9528, -201.911, 0.55", "-134.905, -59.6614, -205.411, 0.55", "-136.189, -59.9903, -206.495, 0.28", "-137.691, -60.5844, -207.474, 0.55", "-140.052, -61.9584, -208.434, 0.28", "-141.638, -63.1558, -209.132, 0.55", "-143.526, -65.1516, -209.901, 0.28", "-144.874, -66.9339, -210.289, 0.83", "-145.841, -68.2688, -210.551, 0.83", "-147.306, -70.4816, -210.914, 0.28", "-148.519, -72.473, -211.156, 0.55", "-149.721, -74.4287, -211.367, 0.28", "-150.918, -76.442, -211.771, 0.55", "-151.912, -77.9451, -212.202, 0.28", "-152.403, -78.6345, -212.404, 0.55", "-153.437, -80.0788, -212.795, 0.28", "-153.8, -80.5829, -212.94, 0.55", "-155.697, -82.9708, -213.784, 0.28", "-156.758, -84.2702, -214.305, 0.83", "-157.667, -85.2658, -214.72, 0.28", "-158.348, -85.924, -214.989, 0.55", "-160.113, -87.5514, -215.645, 0.28", "-161.819, -89.0407, -216.217, 0.55", "-163.552, -90.4313, -216.652, 0.55", "-164.827, -91.3772, -217.015, 0.55", "-166.046, -92.2081, -217.39, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-51.7767, -69.4097, -74.8263, 0.83", "-51.5125, -72.3978, -74.1349, 0.55", "-51.358, -74.0007, -73.8416, 0.83", "-51.2222, -75.596, -73.7058, 0.55", "-51.1574, -77.9513, -73.6104, 0.83", "-51.092, -80.6337, -73.6158, 0.55", "-51.0986, -84.2553, -73.6693, 0.55", "-51.1456, -86.0446, -73.7867, 0.83", "-51.3698, -89.2905, -74.1135, 0.55", "-51.8153, -94.0603, -74.6869, 0.55", "-52.1384, -96.8649, -75.108, 0.55", "-52.6345, -100.846, -75.8322, 0.55", "-53.0605, -103.566, -76.3579, 0.28", "-53.6986, -107.274, -76.9464, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_60", "dend_35", "dend_28", "dend_5", "dend_0", "dend_62", "dend_61", "dend_49", "dend_36", "dend_32", "dend_29", "dend_9", "dend_6", "dend_2", "dend_1", "dend_72", "dend_63", "dend_51", "dend_50", "dend_44", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_23", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_76", "dend_73", "dend_67", "dend_64", "dend_57", "dend_52", "dend_48", "dend_45", "dend_39", "dend_38", "dend_27", "dend_24", "dend_16", "dend_11", "dend_75", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_59", "dend_58", "dend_54", "dend_53", "dend_47", "dend_46", "dend_41", "dend_40", "dend_26", "dend_25", "dend_18", "dend_17", "dend_13", "dend_12", "dend_71", "dend_70", "dend_56", "dend_55", "dend_43", "dend_42", "dend_22", "dend_19", "dend_15", "dend_14", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_60", "dend_35", "dend_28", "dend_5", "dend_0", "dend_62", "dend_61", "dend_49", "dend_36", "dend_32", "dend_29", "dend_9", "dend_6", "dend_2", "dend_1", "dend_72", "dend_63", "dend_51", "dend_50", "dend_44", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_23", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_76", "dend_73", "dend_67", "dend_64", "dend_57", "dend_52", "dend_48", "dend_45", "dend_39", "dend_38", "dend_27", "dend_24", "dend_16", "dend_11", "dend_75", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_59", "dend_58", "dend_54", "dend_53", "dend_47", "dend_46", "dend_41", "dend_40", "dend_26", "dend_25", "dend_18", "dend_17", "dend_13", "dend_12", "dend_71", "dend_70", "dend_56", "dend_55", "dend_43", "dend_42", "dend_22", "dend_19", "dend_15", "dend_14", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_60", "dend_60", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_49", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_72", "dend_72", "dend_72", "dend_63", "dend_63", "dend_63", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SS_9e49de205b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_35
create dend_49
public dend_49
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_72, id: dend_72, parent: dend_62
create dend_72
public dend_72
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_9
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_51
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_60(0), soma_0(0.4999999095343688)
    connect dend_35(0), soma_0(0.4999999095343688)
    connect dend_28(0), soma_0(0.4999999095343688)
    connect dend_5(0), soma_0(0.4999999095343688)
    connect dend_0(0), soma_0(0.4999999095343688)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_72(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.984759, -9.9799, -6.80323, 1.93637 ) }
    soma_0 { pt3dadd( 0.950247, -9.05028, -6.21218, 2.81477 ) }
    soma_0 { pt3dadd( 0.915735, -8.12066, -5.62113, 4.57156 ) }
    soma_0 { pt3dadd( 0.881223, -7.19104, -5.03008, 6.17758 ) }
    soma_0 { pt3dadd( 0.846711, -6.26142, -4.43903, 7.6644 ) }
    soma_0 { pt3dadd( 0.812198, -5.3318, -3.84798, 9.12262 ) }
    soma_0 { pt3dadd( 0.777686, -4.40218, -3.25693, 11.196 ) }
    soma_0 { pt3dadd( 0.743174, -3.47256, -2.66588, 13.4803 ) }
    soma_0 { pt3dadd( 0.708662, -2.54294, -2.07483, 13.9561 ) }
    soma_0 { pt3dadd( 0.674149, -1.61332, -1.48378, 14.1583 ) }
    soma_0 { pt3dadd( 0.639637, -0.683698, -0.892734, 13.7907 ) }
    soma_0 { pt3dadd( 0.605125, 0.245922, -0.301684, 12.8718 ) }
    soma_0 { pt3dadd( 0.570613, 1.17554, 0.289365, 11.9528 ) }
    soma_0 { pt3dadd( 0.5361, 2.10516, 0.880415, 11.5126 ) }
    soma_0 { pt3dadd( 0.501588, 3.03478, 1.47146, 11.1452 ) }
    soma_0 { pt3dadd( 0.467076, 3.9644, 2.06251, 10.5903 ) }
    soma_0 { pt3dadd( 0.432564, 4.89402, 2.65356, 9.88317 ) }
    soma_0 { pt3dadd( 0.398051, 5.82364, 3.24461, 9.18042 ) }
    soma_0 { pt3dadd( 0.363539, 6.75327, 3.83566, 8.47766 ) }
    soma_0 { pt3dadd( 0.329027, 7.68289, 4.42671, 6.39115 ) }
    soma_0 { pt3dadd( 0.294515, 8.61251, 5.01776, 3.6597 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 21/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 2.97119, 6.71687, 4.4499, 1.11 ) }
    dend_60 { pt3dadd( 3.7054, 8.53385, 5.64977, 1.11 ) }
    dend_60 { pt3dadd( 4.28296, 10.0292, 5.75232, 1.11 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.13723, 0.102813, -6.88472, 2.22 ) }
    dend_35 { pt3dadd( 7.0232, 0.202103, -7.82845, 2.22 ) }
    dend_35 { pt3dadd( 8.28842, 3.2469, -12.3236, 1.94 ) }
    dend_35 { pt3dadd( 9.83839, 6.97697, -17.8304, 1.66 ) }
    dend_35 { pt3dadd( 10.3739, 8.26584, -19.7333, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.920203, 7.69931, 3.77249, 1.11 ) }
    dend_28 { pt3dadd( -0.946605, 7.93148, 3.88863, 1.11 ) }
    dend_28 { pt3dadd( -2.25615, 10.9836, 4.35218, 1.11 ) }
    dend_28 { pt3dadd( -3.78053, 14.3145, 4.94726, 1.11 ) }
    dend_28 { pt3dadd( -5.63258, 17.791, 5.80027, 1.11 ) }
    dend_28 { pt3dadd( -7.67282, 21.6208, 6.73995, 1.11 ) }
    dend_28 { pt3dadd( -9.98287, 25.9569, 7.8039, 0.83 ) }
    dend_28 { pt3dadd( -10.8767, 27.5286, 8.23691, 0.83 ) }
    dend_28 { pt3dadd( -12.1314, 29.6008, 8.9141, 1.11 ) }
    dend_28 { pt3dadd( -14.2197, 33.1, 10.0128, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 39/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.71774, -9.09179, -3.03191, 3.32 ) }
    dend_5 { pt3dadd( -3.21316, -10.6308, -3.51325, 3.32 ) }
    dend_5 { pt3dadd( -3.37124, -13.8572, -3.65292, 2.22 ) }
    dend_5 { pt3dadd( -3.55706, -17.6499, -3.8171, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.25136, -5.64287, -4.57593, 1.11 ) }
    dend_0 { pt3dadd( -5.19421, -4.79008, -3.8672, 1.11 ) }
    dend_0 { pt3dadd( -8.48328, -5.41641, -3.76771, 1.11 ) }
    dend_0 { pt3dadd( -11.2973, -5.65656, -3.67949, 1.11 ) }
    dend_0 { pt3dadd( -13.7826, -5.86866, -3.60158, 1.11 ) }
    dend_0 { pt3dadd( -17.9817, -6.22702, -3.46993, 1.11 ) }
    dend_0 { pt3dadd( -21.2687, -6.50753, -3.36688, 0.83 ) }
    dend_0 { pt3dadd( -24.8039, -6.54205, -3.25851, 0.83 ) }
    dend_0 { pt3dadd( -27.4204, -6.24418, -3.19167, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.294515, 8.61251, 5.01776, 0.67 ) }
    axon_0 { pt3dadd( -0.261977, 23.6022, 5.01776, 0.67 ) }
    axon_0 { pt3dadd( -0.818469, 38.5919, 5.01776, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.28296, 10.0292, 5.75232, 1.11 ) }
    dend_62 { pt3dadd( 5.51613, 11.2012, 7.4899, 0.83 ) }
    dend_62 { pt3dadd( 6.15018, 11.7867, 8.34881, 0.83 ) }
    dend_62 { pt3dadd( 7.7416, 13.1402, 10.4115, 0.83 ) }
    dend_62 { pt3dadd( 9.48163, 14.5539, 12.6711, 0.83 ) }
    dend_62 { pt3dadd( 10.1003, 15.012, 13.4419, 0.55 ) }
    dend_62 { pt3dadd( 10.953, 15.6435, 14.5042, 0.83 ) }
    dend_62 { pt3dadd( 12.2782, 16.5869, 16.0668, 0.83 ) }
    dend_62 { pt3dadd( 12.8708, 16.9716, 16.789, 0.55 ) }
    dend_62 { pt3dadd( 14.3566, 17.7764, 18.5242, 0.55 ) }
    dend_62 { pt3dadd( 15.1729, 18.1666, 19.3646, 0.55 ) }
    dend_62 { pt3dadd( 17.4257, 20.7919, 23.7209, 0.55 ) }
    dend_62 { pt3dadd( 19.4808, 23.8234, 27.9318, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 4.28296, 10.0292, 5.75232, 1.11 ) }
    dend_61 { pt3dadd( 5.24787, 12.1588, 6.40375, 0.55 ) }
    dend_61 { pt3dadd( 5.81757, 13.8775, 6.62962, 0.55 ) }
    dend_61 { pt3dadd( 6.83772, 16.5651, 6.79235, 0.28 ) }
    dend_61 { pt3dadd( 7.28632, 17.6727, 6.87785, 0.55 ) }
    dend_61 { pt3dadd( 8.0532, 19.3849, 7.07487, 0.28 ) }
    dend_61 { pt3dadd( 8.99449, 21.5247, 7.40275, 0.55 ) }
    dend_61 { pt3dadd( 10.0363, 24.0245, 7.87277, 0.55 ) }
    dend_61 { pt3dadd( 11.2418, 26.8934, 8.28818, 0.55 ) }
    dend_61 { pt3dadd( 12.1101, 29.0384, 8.4303, 0.55 ) }
    dend_61 { pt3dadd( 13.5201, 32.4514, 8.52448, 0.55 ) }
    dend_61 { pt3dadd( 14.4177, 34.5984, 8.52572, 0.28 ) }
    dend_61 { pt3dadd( 15.1661, 36.2755, 8.46342, 0.55 ) }
    dend_61 { pt3dadd( 16.4738, 39.248, 8.47565, 0.55 ) }
    dend_61 { pt3dadd( 17.4202, 41.6141, 8.5406, 0.55 ) }
    dend_61 { pt3dadd( 19.2626, 45.9902, 8.81538, 0.55 ) }
    dend_61 { pt3dadd( 19.9537, 47.4916, 8.99257, 0.55 ) }
    dend_61 { pt3dadd( 21.9638, 51.0765, 9.72411, 0.55 ) }
    dend_61 { pt3dadd( 25.0425, 55.952, 11.1359, 0.83 ) }
    dend_61 { pt3dadd( 26.6741, 58.1676, 11.9489, 0.55 ) }
    dend_61 { pt3dadd( 29.1127, 60.9891, 13.0841, 0.83 ) }
    dend_61 { pt3dadd( 31.2217, 63.0966, 13.9663, 0.83 ) }
    dend_61 { pt3dadd( 34.3046, 65.8051, 15.0597, 0.83 ) }
    dend_61 { pt3dadd( 36.6468, 67.6775, 15.7809, 0.83 ) }
    dend_61 { pt3dadd( 39.6519, 69.7909, 16.4684, 0.83 ) }
    dend_61 { pt3dadd( 42.296, 71.5784, 17.082, 0.83 ) }
    dend_61 { pt3dadd( 44.4693, 73.0503, 17.6061, 0.83 ) }
    dend_61 { pt3dadd( 47.3957, 75.0306, 18.3003, 0.83 ) }
    dend_61 { pt3dadd( 51.8893, 78.1583, 19.492, 0.55 ) }
    dend_61 { pt3dadd( 54.8907, 80.1865, 20.2688, 0.55 ) }
    dend_61 { pt3dadd( 56.0764, 81.0214, 20.5857, 0.55 ) }
    dend_61 { pt3dadd( 58.1078, 82.4005, 20.9638, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_61 { pt3dadd( 59.7922, 83.5565, 21.0869, 0.28 ) }
    dend_61 { pt3dadd( 61.9023, 85.0105, 20.875, 0.55 ) }
    dend_61 { pt3dadd( 65.0228, 87.078, 19.9728, 0.55 ) }
    dend_61 { pt3dadd( 66.5116, 88.0819, 19.3259, 0.55 ) }
    dend_61 { pt3dadd( 69.4867, 89.9292, 17.7845, 0.83 ) }
    dend_61 { pt3dadd( 70.7668, 90.7344, 16.9204, 0.55 ) }
    dend_61 { pt3dadd( 71.6689, 91.3512, 16.2017, 0.83 ) }
    dend_61 { pt3dadd( 79.292, 99.9234, 19.0958, 0.83 ) }
    dend_61 { pt3dadd( 86.6557, 108.81, 21.7968, 0.83 ) }
    dend_61 { pt3dadd( 95.0294, 115.638, 26.34, 0.83 ) }
    dend_61 { pt3dadd( 104.105, 121.536, 30.7135, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: dend_35 (entry count 11/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 10.3739, 8.26584, -19.7333, 1.66 ) }
    dend_49 { pt3dadd( 12.9645, 6.74028, -21.5819, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.3739, 8.26584, -19.7333, 1.66 ) }
    dend_36 { pt3dadd( 10.1528, 10.2043, -21.3605, 1.11 ) }
    dend_36 { pt3dadd( 9.83611, 12.9813, -23.6916, 1.11 ) }
    dend_36 { pt3dadd( 9.67159, 14.4237, -24.9024, 1.11 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -14.2197, 33.1, 10.0128, 0.83 ) }
    dend_32 { pt3dadd( -14.0588, 36.1634, 11.5432, 0.83 ) }
    dend_32 { pt3dadd( -13.9395, 38.4875, 12.6496, 0.83 ) }
    dend_32 { pt3dadd( -13.6283, 41.7721, 14.034, 0.83 ) }
    dend_32 { pt3dadd( -13.2696, 46.0333, 15.779, 0.83 ) }
    dend_32 { pt3dadd( -13.1451, 48.7938, 16.8435, 0.55 ) }
    dend_32 { pt3dadd( -13.0662, 50.6202, 17.4899, 0.83 ) }
    dend_32 { pt3dadd( -12.9503, 52.6477, 18.1724, 0.83 ) }
    dend_32 { pt3dadd( -12.6465, 56.9041, 19.5647, 0.83 ) }
    dend_32 { pt3dadd( -12.4039, 61.2711, 20.9515, 0.83 ) }
    dend_32 { pt3dadd( -12.1964, 65.3079, 22.0016, 0.83 ) }
    dend_32 { pt3dadd( -12.0025, 68.1018, 22.6756, 0.83 ) }
    dend_32 { pt3dadd( -11.7607, 72.106, 23.6763, 0.83 ) }
    dend_32 { pt3dadd( -11.6416, 74.3292, 24.2644, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -14.2197, 33.1, 10.0128, 0.83 ) }
    dend_29 { pt3dadd( -15.8962, 33.6716, 9.75691, 0.55 ) }
    dend_29 { pt3dadd( -17.1189, 34.0068, 9.53151, 0.55 ) }
    dend_29 { pt3dadd( -18.2038, 34.2567, 9.3229, 0.28 ) }
    dend_29 { pt3dadd( -19.313, 34.4258, 9.13182, 0.55 ) }
    dend_29 { pt3dadd( -21.9191, 34.657, 8.73254, 0.55 ) }
    dend_29 { pt3dadd( -23.4927, 34.6904, 8.49629, 0.28 ) }
    dend_29 { pt3dadd( -23.8069, 34.6549, 8.44912, 0.55 ) }
    dend_29 { pt3dadd( -24.7179, 34.489, 8.37114, 0.55 ) }
    dend_29 { pt3dadd( -26.9605, 34.0511, 8.34479, 0.55 ) }
    dend_29 { pt3dadd( -28.9806, 33.6466, 8.40713, 0.55 ) }
    dend_29 { pt3dadd( -30.1252, 33.4368, 8.56633, 0.55 ) }
    dend_29 { pt3dadd( -31.4096, 33.3079, 8.84016, 0.55 ) }
    dend_29 { pt3dadd( -33.4982, 33.1906, 9.34189, 0.28 ) }
    dend_29 { pt3dadd( -35.5806, 33.0707, 9.87631, 0.55 ) }
    dend_29 { pt3dadd( -38.0393, 32.9097, 10.4881, 0.55 ) }
    dend_29 { pt3dadd( -40.9653, 32.7596, 11.2143, 0.28 ) }
    dend_29 { pt3dadd( -42.381, 32.7006, 11.5224, 0.55 ) }
    dend_29 { pt3dadd( -43.9576, 32.6607, 11.8227, 0.55 ) }
    dend_29 { pt3dadd( -46.8634, 32.5778, 12.342, 0.55 ) }
    dend_29 { pt3dadd( -49.8056, 32.4524, 12.8366, 0.55 ) }
    dend_29 { pt3dadd( -52.5894, 32.4013, 13.318, 0.28 ) }
    dend_29 { pt3dadd( -54.0908, 32.3329, 13.5445, 0.28 ) }
    dend_29 { pt3dadd( -55.7263, 32.1995, 13.8351, 0.55 ) }
    dend_29 { pt3dadd( -57.9646, 32.0215, 14.2611, 0.55 ) }
    dend_29 { pt3dadd( -59.8537, 31.8741, 14.6349, 0.55 ) }
    dend_29 { pt3dadd( -62.6162, 31.5852, 15.143, 0.55 ) }
    dend_29 { pt3dadd( -65.3456, 31.0866, 15.5449, 0.55 ) }
    dend_29 { pt3dadd( -68.0374, 30.5789, 15.9685, 0.55 ) }
    dend_29 { pt3dadd( -69.865, 30.1888, 16.2142, 0.55 ) }
    dend_29 { pt3dadd( -70.9656, 29.9425, 16.3465, 0.55 ) }
    dend_29 { pt3dadd( -73.21, 29.4061, 16.5879, 0.55 ) }
    dend_29 { pt3dadd( -75.8805, 28.6501, 16.7704, 0.55 ) }
    dend_29 { pt3dadd( -78.278, 27.9199, 16.8962, 0.55 ) }
    dend_29 { pt3dadd( -81.2125, 26.8673, 17.0219, 0.55 ) }
    dend_29 { pt3dadd( -83.9125, 25.7292, 17.1399, 0.55 ) }
    dend_29 { pt3dadd( -85.254, 25.0161, 17.2003, 0.28 ) }
    dend_29 { pt3dadd( -86.3562, 24.3496, 17.2684, 0.55 ) }
    dend_29 { pt3dadd( -87.9896, 23.2485, 17.3649, 0.55 ) }
    dend_29 { pt3dadd( -88.7632, 22.6307, 17.4037, 0.28 ) }
    dend_29 { pt3dadd( -90.0459, 21.6224, 17.5098, 0.28 ) }
    dend_29 { pt3dadd( -92.5485, 19.8004, 17.7551, 0.55 ) }
    dend_29 { pt3dadd( -95.218, 17.9289, 18.0792, 0.28 ) }
    dend_29 { pt3dadd( -96.7058, 16.9176, 18.2236, 0.28 ) }
    dend_29 { pt3dadd( -97.4872, 16.3563, 18.3114, 0.55 ) }
    dend_29 { pt3dadd( -100.853, 13.9353, 18.7395, 0.55 ) }
    dend_29 { pt3dadd( -101.576, 13.3758, 18.8368, 0.55 ) }
    dend_29 { pt3dadd( -103.347, 11.8055, 19.1239, 0.55 ) }
    dend_29 { pt3dadd( -104.856, 10.2063, 19.4149, 0.55 ) }
    dend_29 { pt3dadd( -106.5, 8.28672, 19.7494, 0.55 ) }
    dend_29 { pt3dadd( -107.916, 6.43956, 20.0694, 0.55 ) }
    dend_29 { pt3dadd( -108.845, 5.03972, 20.2613, 0.55 ) }
    dend_29 { pt3dadd( -110.749, 2.51336, 20.4185, 0.55 ) }
    dend_29 { pt3dadd( -111.499, 1.61128, 20.4037, 0.55 ) }
    dend_29 { pt3dadd( -112.372, 0.680472, 20.3007, 0.28 ) }
    dend_29 { pt3dadd( -113.77, -0.619575, 20.0176, 0.55 ) }
    dend_29 { pt3dadd( -115.687, -2.25373, 19.5241, 0.55 ) }
    dend_29 { pt3dadd( -118.353, -4.15445, 18.7578, 0.55 ) }
    dend_29 { pt3dadd( -120.227, -5.26757, 18.1771, 0.55 ) }
    dend_29 { pt3dadd( -122.031, -6.3225, 17.6188, 0.28 ) }
    dend_29 { pt3dadd( -122.857, -6.77629, 17.3969, 0.55 ) }
    dend_29 { pt3dadd( -123.924, -7.36737, 17.197, 0.28 ) }
    dend_29 { pt3dadd( -124.76, -7.87762, 17.153, 0.55 ) }
    dend_29 { pt3dadd( -125.777, -8.6183, 17.2377, 0.28 ) }
    dend_29 { pt3dadd( -126.766, -9.35076, 17.3698, 0.55 ) }
    dend_29 { pt3dadd( -129.225, -11.3563, 17.862, 0.55 ) }
    dend_29 { pt3dadd( -131.291, -13.1361, 18.3782, 0.28 ) }
    dend_29 { pt3dadd( -131.958, -13.7749, 18.5966, 0.55 ) }
    dend_29 { pt3dadd( -132.907, -14.7569, 18.9858, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( -134.056, -16.0171, 19.5722, 0.55 ) }
    dend_29 { pt3dadd( -141.482, -18.8512, 21.69, 0.55 ) }
    dend_29 { pt3dadd( -148.695, -22.3932, 23.5585, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 3/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.55706, -17.6499, -3.8171, 2.49 ) }
    dend_9 { pt3dadd( -4.28599, -18.8406, -3.97253, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.55706, -17.6499, -3.8171, 2.49 ) }
    dend_6 { pt3dadd( -1.752, -18.1213, -6.15, 1.38 ) }
    dend_6 { pt3dadd( -0.321082, -18.31, -7.86088, 1.38 ) }
    dend_6 { pt3dadd( 1.98771, -18.5872, -10.5578, 0.83 ) }
    dend_6 { pt3dadd( 2.8009, -18.6696, -11.5188, 0.83 ) }
    dend_6 { pt3dadd( 5.50153, -18.6102, -15.0192, 0.55 ) }
    dend_6 { pt3dadd( 7.03412, -18.5161, -17.0321, 0.83 ) }
    dend_6 { pt3dadd( 8.86644, -18.2554, -19.5081, 0.55 ) }
    dend_6 { pt3dadd( 10.0624, -18.0035, -20.9981, 0.55 ) }
    dend_6 { pt3dadd( 11.4576, -17.6347, -22.6196, 0.55 ) }
    dend_6 { pt3dadd( 14.8285, -16.8607, -26.4301, 0.55 ) }
    dend_6 { pt3dadd( 16.6365, -16.556, -28.4309, 0.28 ) }
    dend_6 { pt3dadd( 17.4309, -16.4976, -29.2808, 0.55 ) }
    dend_6 { pt3dadd( 19.1527, -16.4404, -31.1383, 0.55 ) }
    dend_6 { pt3dadd( 20.4077, -16.5123, -32.5149, 0.28 ) }
    dend_6 { pt3dadd( 21.7517, -16.7395, -33.965, 0.55 ) }
    dend_6 { pt3dadd( 24.4471, -17.3374, -36.8456, 0.55 ) }
    dend_6 { pt3dadd( 26.1252, -17.6449, -38.8685, 0.55 ) }
    dend_6 { pt3dadd( 28.7052, -18.1133, -42.2164, 0.55 ) }
    dend_6 { pt3dadd( 30.5265, -18.4998, -44.6714, 0.55 ) }
    dend_6 { pt3dadd( 31.2877, -18.6759, -45.659, 0.55 ) }
    dend_6 { pt3dadd( 32.957, -19.1432, -47.9873, 0.55 ) }
    dend_6 { pt3dadd( 34.7183, -19.7906, -50.5328, 0.55 ) }
    dend_6 { pt3dadd( 36.5274, -20.5168, -53.2806, 0.55 ) }
    dend_6 { pt3dadd( 37.4325, -20.9382, -54.6, 0.55 ) }
    dend_6 { pt3dadd( 38.5609, -21.4316, -56.2357, 0.55 ) }
    dend_6 { pt3dadd( 40.4695, -22.3154, -59.0513, 0.28 ) }
    dend_6 { pt3dadd( 41.4574, -22.7527, -60.3012, 0.55 ) }
    dend_6 { pt3dadd( 42.0565, -22.8696, -60.9492, 0.55 ) }
    dend_6 { pt3dadd( 43.0444, -22.7996, -61.985, 0.55 ) }
    dend_6 { pt3dadd( 44.5834, -22.4846, -63.5244, 0.55 ) }
    dend_6 { pt3dadd( 47.1714, -21.876, -66.1826, 0.55 ) }
    dend_6 { pt3dadd( 49.2697, -21.2576, -68.349, 0.83 ) }
    dend_6 { pt3dadd( 51.7017, -20.536, -70.9654, 0.55 ) }
    dend_6 { pt3dadd( 54.0574, -19.9508, -73.7894, 0.55 ) }
    dend_6 { pt3dadd( 55.3531, -19.7071, -75.4981, 0.55 ) }
    dend_6 { pt3dadd( 57.7229, -19.5097, -78.8951, 0.55 ) }
    dend_6 { pt3dadd( 59.2487, -19.5897, -81.4569, 0.83 ) }
    dend_6 { pt3dadd( 59.9388, -19.7527, -82.7111, 0.55 ) }
    dend_6 { pt3dadd( 61.3673, -20.309, -85.4082, 0.83 ) }
    dend_6 { pt3dadd( 61.9857, -20.5903, -86.6604, 0.55 ) }
    dend_6 { pt3dadd( 63.2465, -21.1815, -89.2157, 0.83 ) }
    dend_6 { pt3dadd( 64.5638, -21.8362, -91.8196, 0.55 ) }
    dend_6 { pt3dadd( 65.4722, -22.3739, -93.6924, 0.55 ) }
    dend_6 { pt3dadd( 67.3816, -23.6066, -97.9286, 0.28 ) }
    dend_6 { pt3dadd( 68.3569, -24.2855, -100.079, 0.55 ) }
    dend_6 { pt3dadd( 69.0341, -24.8394, -101.568, 0.55 ) }
    dend_6 { pt3dadd( 70.3442, -26.1236, -104.295, 0.28 ) }
    dend_6 { pt3dadd( 71.0917, -26.9912, -105.718, 0.55 ) }
    dend_6 { pt3dadd( 71.9622, -28.1179, -107.056, 0.28 ) }
    dend_6 { pt3dadd( 73.493, -30.0878, -108.553, 0.55 ) }
    dend_6 { pt3dadd( 74.6044, -31.5335, -109.486, 0.55 ) }
    dend_6 { pt3dadd( 75.8733, -33.2027, -110.394, 0.55 ) }
    dend_6 { pt3dadd( 77.6957, -35.386, -111.229, 0.55 ) }
    dend_6 { pt3dadd( 80.8465, -38.7293, -112.15, 0.28 ) }
    dend_6 { pt3dadd( 82.4572, -40.2784, -112.369, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -27.4204, -6.24418, -3.19167, 0.83 ) }
    dend_2 { pt3dadd( -31.1298, -4.98206, -2.15925, 0.83 ) }
    dend_2 { pt3dadd( -32.7366, -4.2815, -1.52657, 0.83 ) }
    dend_2 { pt3dadd( -35.5913, -2.84396, -0.311855, 0.83 ) }
    dend_2 { pt3dadd( -37.8278, -1.62424, 0.65061, 0.83 ) }
    dend_2 { pt3dadd( -39.217, -0.82182, 1.23135, 0.83 ) }
    dend_2 { pt3dadd( -43.8224, 1.83833, 3.1566, 0.83 ) }
    dend_2 { pt3dadd( -46.9174, 3.71254, 4.60759, 0.83 ) }
    dend_2 { pt3dadd( -49.3235, 5.29127, 5.87874, 0.55 ) }
    dend_2 { pt3dadd( -50.0327, 5.78209, 6.30574, 0.83 ) }
    dend_2 { pt3dadd( -51.919, 7.35686, 7.4969, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 72/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -27.4204, -6.24418, -3.19167, 0.83 ) }
    dend_1 { pt3dadd( -30.4077, -6.59658, -4.05011, 0.55 ) }
    dend_1 { pt3dadd( -31.4866, -6.82037, -4.36664, 0.28 ) }
    dend_1 { pt3dadd( -32.1425, -6.971, -4.58799, 0.55 ) }
    dend_1 { pt3dadd( -33.7411, -7.43008, -5.27964, 0.28 ) }
    dend_1 { pt3dadd( -35.9879, -8.3342, -6.33276, 0.55 ) }
    dend_1 { pt3dadd( -38.7102, -9.57373, -7.56055, 0.55 ) }
    dend_1 { pt3dadd( -40.2276, -10.2818, -8.21417, 0.83 ) }
    dend_1 { pt3dadd( -42.3279, -11.2975, -9.02178, 0.55 ) }
    dend_1 { pt3dadd( -44.9544, -12.47, -9.99057, 0.55 ) }
    dend_1 { pt3dadd( -48.1814, -13.7337, -11.0767, 0.55 ) }
    dend_1 { pt3dadd( -51.4147, -14.8851, -12.028, 0.55 ) }
    dend_1 { pt3dadd( -54.0827, -15.5742, -12.7246, 0.55 ) }
    dend_1 { pt3dadd( -57.7693, -16.1275, -13.5684, 0.55 ) }
    dend_1 { pt3dadd( -60.3849, -16.2325, -14.1202, 0.28 ) }
    dend_1 { pt3dadd( -62.5798, -16.1462, -14.5586, 0.55 ) }
    dend_1 { pt3dadd( -64.4101, -15.9424, -14.9869, 0.55 ) }
    dend_1 { pt3dadd( -67.1621, -15.5475, -15.7143, 0.55 ) }
    dend_1 { pt3dadd( -68.804, -15.3763, -16.181, 0.55 ) }
    dend_1 { pt3dadd( -71.7778, -15.1025, -17.0683, 0.28 ) }
    dend_1 { pt3dadd( -75.3072, -14.9651, -18.1261, 0.55 ) }
    dend_1 { pt3dadd( -77.9684, -14.9183, -18.9981, 0.55 ) }
    dend_1 { pt3dadd( -80.6932, -14.9394, -19.9107, 0.28 ) }
    dend_1 { pt3dadd( -83.2454, -15.0413, -20.7729, 0.55 ) }
    dend_1 { pt3dadd( -84.5151, -15.0912, -21.1937, 0.28 ) }
    dend_1 { pt3dadd( -85.6298, -15.1382, -21.5324, 0.55 ) }
    dend_1 { pt3dadd( -86.2409, -15.1193, -21.7081, 0.28 ) }
    dend_1 { pt3dadd( -87.4934, -15.147, -22.0771, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -89.2179, -15.1894, -22.621, 0.28 ) }
    dend_1 { pt3dadd( -91.3863, -15.2216, -23.3844, 0.55 ) }
    dend_1 { pt3dadd( -93.7595, -15.269, -24.063, 0.28 ) }
    dend_1 { pt3dadd( -96.6237, -15.3941, -24.8998, 0.28 ) }
    dend_1 { pt3dadd( -99.3546, -15.5223, -25.6852, 0.55 ) }
    dend_1 { pt3dadd( -101.112, -15.5815, -26.2254, 0.28 ) }
    dend_1 { pt3dadd( -103.884, -15.6584, -27.0968, 0.55 ) }
    dend_1 { pt3dadd( -107.219, -15.7793, -28.3321, 0.55 ) }
    dend_1 { pt3dadd( -111.054, -15.7309, -29.7973, 0.28 ) }
    dend_1 { pt3dadd( -112.605, -15.7975, -30.5095, 0.55 ) }
    dend_1 { pt3dadd( -113.879, -15.8677, -31.1242, 0.28 ) }
    dend_1 { pt3dadd( -115.362, -15.9958, -31.8363, 0.55 ) }
    dend_1 { pt3dadd( -117.578, -16.2746, -32.8946, 0.55 ) }
    dend_1 { pt3dadd( -120.155, -16.7458, -34.1809, 0.55 ) }
    dend_1 { pt3dadd( -123.878, -17.4252, -35.7228, 0.28 ) }
    dend_1 { pt3dadd( -124.457, -17.5535, -35.9707, 0.55 ) }
    dend_1 { pt3dadd( -129.167, -18.7215, -37.812, 0.55 ) }
    dend_1 { pt3dadd( -130.999, -19.1493, -38.5332, 0.28 ) }
    dend_1 { pt3dadd( -132.35, -19.4637, -39.0427, 0.55 ) }
    dend_1 { pt3dadd( -134.518, -20.0454, -39.954, 0.55 ) }
    dend_1 { pt3dadd( -137.218, -20.7615, -41.1012, 0.28 ) }
    dend_1 { pt3dadd( -140.334, -21.6489, -42.5641, 0.55 ) }
    dend_1 { pt3dadd( -143.499, -22.6697, -44.3157, 0.28 ) }
    dend_1 { pt3dadd( -144.466, -22.9583, -44.8829, 0.83 ) }
    dend_1 { pt3dadd( -147.315, -23.8251, -46.6271, 0.28 ) }
    dend_1 { pt3dadd( -148.049, -24.0784, -47.1046, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.818469, 38.5919, 5.01776, 0.67 ) }
    axon_1 { pt3dadd( -1.37496, 53.5815, 5.01776, 0.67 ) }
    axon_1 { pt3dadd( -1.93145, 68.5712, 5.01776, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_62 (entry count 29/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 19.4808, 23.8234, 27.9318, 0.55 ) }
    dend_72 { pt3dadd( 20.7588, 27.7685, 36.4664, 0.55 ) }
    dend_72 { pt3dadd( 20.8947, 30.206, 45.5889, 0.55 ) }
    dend_72 { pt3dadd( 19.283, 32.3314, 54.6394, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 19.4808, 23.8234, 27.9318, 0.55 ) }
    dend_63 { pt3dadd( 25.7224, 28.2429, 32.7914, 0.55 ) }
    dend_63 { pt3dadd( 31.6177, 32.9274, 37.8557, 0.55 ) }
    dend_63 { pt3dadd( 36.7416, 37.8412, 43.5307, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 37/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.9645, 6.74028, -21.5819, 1.38 ) }
    dend_51 { pt3dadd( 14.6388, 5.70735, -30.7085, 0.83 ) }
    dend_51 { pt3dadd( 14.8468, 5.579, -31.8426, 0.83 ) }
    dend_51 { pt3dadd( 15.3129, 5.29143, -34.3834, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 41/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.9645, 6.74028, -21.5819, 1.38 ) }
    dend_50 { pt3dadd( 15.8403, 8.27676, -21.4625, 0.55 ) }
    dend_50 { pt3dadd( 19.1726, 9.86784, -21.2281, 0.55 ) }
    dend_50 { pt3dadd( 21.715, 10.975, -20.9868, 0.55 ) }
    dend_50 { pt3dadd( 25.7356, 12.7836, -20.5092, 0.55 ) }
    dend_50 { pt3dadd( 28.2417, 14.0573, -20.1187, 0.55 ) }
    dend_50 { pt3dadd( 30.7623, 15.5474, -19.6847, 0.55 ) }
    dend_50 { pt3dadd( 32.9857, 17.1537, -19.2391, 0.55 ) }
    dend_50 { pt3dadd( 34.239, 18.3401, -18.9124, 0.55 ) }
    dend_50 { pt3dadd( 36.2681, 20.8323, -18.2945, 0.55 ) }
    dend_50 { pt3dadd( 38.1777, 23.7737, -17.6336, 0.28 ) }
    dend_50 { pt3dadd( 40.0957, 27.1619, -16.7886, 0.55 ) }
    dend_50 { pt3dadd( 41.7632, 30.6113, -15.9864, 0.55 ) }
    dend_50 { pt3dadd( 43.7049, 35.0815, -14.8308, 0.55 ) }
    dend_50 { pt3dadd( 44.3667, 36.7116, -14.3881, 0.55 ) }
    dend_50 { pt3dadd( 45.0637, 38.3973, -13.8664, 0.55 ) }
    dend_50 { pt3dadd( 46.8968, 42.6832, -12.3754, 0.55 ) }
    dend_50 { pt3dadd( 47.5669, 43.9483, -11.8905, 0.55 ) }
    dend_50 { pt3dadd( 49.0485, 46.392, -10.9421, 0.83 ) }
    dend_50 { pt3dadd( 49.8732, 47.5848, -10.5149, 0.28 ) }
    dend_50 { pt3dadd( 51.6404, 49.9555, -9.71525, 0.55 ) }
    dend_50 { pt3dadd( 52.8536, 51.3938, -9.34302, 0.55 ) }
    dend_50 { pt3dadd( 57.6639, 56.7688, -8.57022, 0.55 ) }
    dend_50 { pt3dadd( 60.061, 59.264, -8.45433, 0.55 ) }
    dend_50 { pt3dadd( 61.6251, 60.8767, -8.49267, 0.55 ) }
    dend_50 { pt3dadd( 63.6013, 62.794, -8.62649, 0.55 ) }
    dend_50 { pt3dadd( 66.2947, 65.4046, -8.82076, 0.55 ) }
    dend_50 { pt3dadd( 68.2979, 67.2782, -8.89809, 0.83 ) }
    dend_50 { pt3dadd( 70.9188, 69.7576, -8.75148, 0.55 ) }
    dend_50 { pt3dadd( 73.8331, 72.0595, -8.24621, 0.55 ) }
    dend_50 { pt3dadd( 75.7812, 73.3962, -7.6276, 0.55 ) }
    dend_50 { pt3dadd( 78.8389, 75.0656, -6.26327, 0.55 ) }
    dend_50 { pt3dadd( 80.047, 75.5628, -5.59455, 0.55 ) }
    dend_50 { pt3dadd( 83.5128, 76.3458, -3.56603, 0.55 ) }
    dend_50 { pt3dadd( 86.8226, 76.6022, -1.45903, 0.55 ) }
    dend_50 { pt3dadd( 88.517, 76.5299, -0.426394, 0.55 ) }
    dend_50 { pt3dadd( 91.4143, 76.1768, 1.33931, 0.55 ) }
    dend_50 { pt3dadd( 93.1566, 75.8671, 2.28213, 0.55 ) }
    dend_50 { pt3dadd( 94.6646, 75.5661, 3.10845, 0.55 ) }
    dend_50 { pt3dadd( 96.8806, 75.1104, 4.30346, 0.55 ) }
    dend_50 { pt3dadd( 99.2582, 74.8153, 5.6332, 0.55 ) }
    dend_50 { pt3dadd( 101.27, 74.5914, 6.85855, 0.55 ) }
    dend_50 { pt3dadd( 103.858, 74.341, 8.513, 0.55 ) }
    dend_50 { pt3dadd( 106.001, 74.2618, 9.90831, 0.55 ) }
    dend_50 { pt3dadd( 107.661, 74.2574, 10.9931, 0.28 ) }
    dend_50 { pt3dadd( 109.486, 74.2163, 12.1501, 0.55 ) }
    dend_50 { pt3dadd( 111.328, 74.0968, 13.3859, 0.55 ) }
    dend_50 { pt3dadd( 119.831, 77.2388, 17.4052, 0.55 ) }
    dend_50 { pt3dadd( 128.888, 80.5624, 19.7113, 0.55 ) }
    dend_50 { pt3dadd( 136.944, 85.4012, 22.9956, 0.55 ) }
    dend_50 { pt3dadd( 144.977, 90.4715, 25.9959, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.67159, 14.4237, -24.9024, 1.11 ) }
    dend_44 { pt3dadd( 7.34051, 17.3881, -30.0217, 0.83 ) }
    dend_44 { pt3dadd( 4.90165, 20.4896, -35.3777, 0.83 ) }
    dend_44 { pt3dadd( 0.278325, 26.3691, -45.5311, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 96/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.67159, 14.4237, -24.9024, 1.11 ) }
    dend_37 { pt3dadd( 10.564, 16.1705, -25.8625, 0.83 ) }
    dend_37 { pt3dadd( 12.3635, 18.808, -26.7889, 0.83 ) }
    dend_37 { pt3dadd( 15.0591, 22.1009, -27.6017, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( 16.1353, 23.2996, -27.783, 0.83 ) }
    dend_37 { pt3dadd( 18.9978, 26.6033, -28.1129, 0.83 ) }
    dend_37 { pt3dadd( 21.8469, 29.8916, -28.4413, 0.83 ) }
    dend_37 { pt3dadd( 24.5399, 32.6989, -28.5852, 0.83 ) }
    dend_37 { pt3dadd( 26.8118, 34.8436, -28.5295, 0.83 ) }
    dend_37 { pt3dadd( 29.9889, 37.8092, -28.0824, 0.83 ) }
    dend_37 { pt3dadd( 32.2573, 40.0231, -27.6648, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 7/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.6416, 74.3292, 24.2644, 0.83 ) }
    dend_34 { pt3dadd( -11.3916, 76.0672, 23.0955, 0.55 ) }
    dend_34 { pt3dadd( -11.1396, 78.0703, 21.7149, 0.83 ) }
    dend_34 { pt3dadd( -10.786, 81.0849, 19.3601, 0.55 ) }
    dend_34 { pt3dadd( -10.4678, 83.968, 16.8233, 0.55 ) }
    dend_34 { pt3dadd( -10.2365, 85.9152, 15.0359, 0.55 ) }
    dend_34 { pt3dadd( -10.0997, 87.0693, 13.9402, 0.28 ) }
    dend_34 { pt3dadd( -9.95195, 88.3299, 12.5845, 0.55 ) }
    dend_34 { pt3dadd( -9.78966, 90.1007, 10.4433, 0.28 ) }
    dend_34 { pt3dadd( -9.77452, 90.9891, 9.34467, 0.55 ) }
    dend_34 { pt3dadd( -9.91844, 92.73, 7.38276, 0.83 ) }
    dend_34 { pt3dadd( -10.0294, 93.7167, 6.37863, 0.55 ) }
    dend_34 { pt3dadd( -10.2291, 95.2066, 4.94945, 0.83 ) }
    dend_34 { pt3dadd( -10.5149, 97.9087, 2.63628, 0.55 ) }
    dend_34 { pt3dadd( -10.6647, 99.4364, 1.43101, 0.55 ) }
    dend_34 { pt3dadd( -10.9303, 101.34, -0.106607, 0.55 ) }
    dend_34 { pt3dadd( -11.2953, 103.393, -1.88784, 0.83 ) }
    dend_34 { pt3dadd( -11.7593, 106.15, -4.3341, 0.55 ) }
    dend_34 { pt3dadd( -12.1059, 108.067, -6.0661, 0.55 ) }
    dend_34 { pt3dadd( -12.5261, 110.103, -8.03447, 0.55 ) }
    dend_34 { pt3dadd( -12.8468, 111.86, -9.65602, 0.55 ) }
    dend_34 { pt3dadd( -13.2449, 113.702, -11.1709, 0.83 ) }
    dend_34 { pt3dadd( -13.6442, 115.388, -12.3744, 0.55 ) }
    dend_34 { pt3dadd( -13.9627, 116.645, -13.1964, 0.55 ) }
    dend_34 { pt3dadd( -14.5998, 118.925, -14.6119, 0.83 ) }
    dend_34 { pt3dadd( -15.2867, 121.632, -16.137, 0.55 ) }
    dend_34 { pt3dadd( -15.8103, 123.884, -17.3509, 0.55 ) }
    dend_34 { pt3dadd( -16.7074, 127.671, -19.4849, 0.55 ) }
    dend_34 { pt3dadd( -16.9494, 128.711, -20.0799, 0.28 ) }
    dend_34 { pt3dadd( -17.1577, 129.7, -20.6879, 0.55 ) }
    dend_34 { pt3dadd( -17.4179, 130.955, -21.4892, 0.28 ) }
    dend_34 { pt3dadd( -17.6844, 132.474, -22.4927, 0.55 ) }
    dend_34 { pt3dadd( -18.035, 135.348, -24.3846, 0.55 ) }
    dend_34 { pt3dadd( -18.1581, 137.413, -25.6647, 0.55 ) }
    dend_34 { pt3dadd( -18.1896, 139.731, -27.2067, 0.28 ) }
    dend_34 { pt3dadd( -18.1929, 140.804, -27.9735, 0.28 ) }
    dend_34 { pt3dadd( -18.2223, 142.987, -29.6349, 0.55 ) }
    dend_34 { pt3dadd( -18.2089, 145.269, -31.6255, 0.28 ) }
    dend_34 { pt3dadd( -18.2038, 147.905, -34.1545, 0.55 ) }
    dend_34 { pt3dadd( -18.1597, 150.321, -37.0365, 0.28 ) }
    dend_34 { pt3dadd( -18.1608, 151.881, -39.2894, 0.55 ) }
    dend_34 { pt3dadd( -18.1842, 152.36, -40.0874, 0.55 ) }
    dend_34 { pt3dadd( -18.4465, 154.095, -43.8447, 0.28 ) }
    dend_34 { pt3dadd( -18.5796, 154.552, -45.1422, 0.55 ) }
    dend_34 { pt3dadd( -19.4286, 155.959, -50.786, 0.28 ) }
    dend_34 { pt3dadd( -19.795, 156.436, -53.0368, 0.55 ) }
    dend_34 { pt3dadd( -20.0246, 156.706, -54.4846, 0.55 ) }
    dend_34 { pt3dadd( -20.959, 157.663, -59.9979, 0.28 ) }
    dend_34 { pt3dadd( -21.6531, 158.045, -63.1405, 0.55 ) }
    dend_34 { pt3dadd( -22.0709, 158.158, -64.9327, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -11.6416, 74.3292, 24.2644, 0.83 ) }
    dend_33 { pt3dadd( -10.3081, 77.2145, 23.842, 0.55 ) }
    dend_33 { pt3dadd( -8.50894, 81.4939, 23.4077, 0.55 ) }
    dend_33 { pt3dadd( -7.16487, 85.2287, 23.1669, 0.55 ) }
    dend_33 { pt3dadd( -5.87146, 89.095, 22.917, 0.55 ) }
    dend_33 { pt3dadd( -4.79513, 92.2298, 22.8126, 0.55 ) }
    dend_33 { pt3dadd( -3.31781, 96.3384, 22.8201, 0.83 ) }
    dend_33 { pt3dadd( -1.79826, 100.256, 22.958, 0.55 ) }
    dend_33 { pt3dadd( 0.175783, 104.88, 23.318, 0.55 ) }
    dend_33 { pt3dadd( 1.59564, 108.19, 23.8509, 0.55 ) }
    dend_33 { pt3dadd( 3.31966, 112.125, 24.8156, 0.83 ) }
    dend_33 { pt3dadd( 4.7812, 115.357, 25.7382, 0.55 ) }
    dend_33 { pt3dadd( 6.07272, 118.043, 26.5314, 0.55 ) }
    dend_33 { pt3dadd( 7.11503, 119.961, 27.2158, 0.55 ) }
    dend_33 { pt3dadd( 9.52557, 124.257, 29.0913, 0.55 ) }
    dend_33 { pt3dadd( 10.4976, 126.011, 30.0148, 0.55 ) }
    dend_33 { pt3dadd( 11.5795, 128.092, 31.1388, 0.55 ) }
    dend_33 { pt3dadd( 12.6254, 130.323, 32.4418, 0.55 ) }
    dend_33 { pt3dadd( 14.4325, 134.561, 35.1771, 0.28 ) }
    dend_33 { pt3dadd( 15.9269, 137.843, 37.4467, 0.55 ) }
    dend_33 { pt3dadd( 17.1565, 140.427, 39.3446, 0.28 ) }
    dend_33 { pt3dadd( 17.9461, 142.2, 40.7687, 0.55 ) }
    dend_33 { pt3dadd( 18.9281, 144.673, 42.932, 0.28 ) }
    dend_33 { pt3dadd( 19.8409, 146.907, 45.0933, 0.55 ) }
    dend_33 { pt3dadd( 23.9524, 159.266, 49.8244, 0.55 ) }
    dend_33 { pt3dadd( 29.7291, 170.278, 55.7118, 0.55 ) }
    dend_33 { pt3dadd( 34.9845, 180.769, 62.8221, 0.55 ) }
    dend_33 { pt3dadd( 41.3747, 189.47, 71.1001, 0.55 ) }
    dend_33 { pt3dadd( 49.853, 197.637, 77.8581, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -148.695, -22.3932, 23.5585, 0.55 ) }
    dend_31 { pt3dadd( -155.726, -27.0703, 27.2735, 0.55 ) }
    dend_31 { pt3dadd( -160.97, -32.9662, 32.1542, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -148.695, -22.3932, 23.5585, 0.55 ) }
    dend_30 { pt3dadd( -157.655, -25.4347, 23.2261, 0.55 ) }
    dend_30 { pt3dadd( -166.517, -28.7416, 23.7552, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_9 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.28599, -18.8406, -3.97253, 1.38 ) }
    dend_23 { pt3dadd( -3.50338, -20.6017, -5.91172, 0.83 ) }
    dend_23 { pt3dadd( -2.66474, -22.3056, -7.97238, 0.83 ) }
    dend_23 { pt3dadd( -1.96232, -23.7664, -9.67956, 0.55 ) }
    dend_23 { pt3dadd( -1.22667, -25.2765, -11.4623, 0.55 ) }
    dend_23 { pt3dadd( -0.635503, -26.5995, -12.9885, 0.83 ) }
    dend_23 { pt3dadd( -0.0848401, -28.1245, -14.6584, 0.55 ) }
    dend_23 { pt3dadd( 0.5635, -30.67, -17.1222, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 0.77779, -31.5384, -17.8763, 1.11 ) }
    dend_23 { pt3dadd( 1.3648, -33.7513, -19.5364, 0.55 ) }
    dend_23 { pt3dadd( 1.61468, -34.768, -20.2075, 0.83 ) }
    dend_23 { pt3dadd( 2.41687, -38.1241, -22.1547, 0.55 ) }
    dend_23 { pt3dadd( 3.33729, -41.4606, -23.9888, 0.55 ) }
    dend_23 { pt3dadd( 3.94142, -43.437, -25.0774, 0.28 ) }
    dend_23 { pt3dadd( 4.33119, -44.5147, -25.7079, 0.55 ) }
    dend_23 { pt3dadd( 4.94695, -46.0217, -26.5872, 0.28 ) }
    dend_23 { pt3dadd( 5.66921, -47.4535, -27.5132, 0.55 ) }
    dend_23 { pt3dadd( 6.91016, -49.5378, -28.9582, 0.55 ) }
    dend_23 { pt3dadd( 7.90562, -51.1349, -30.1423, 0.55 ) }
    dend_23 { pt3dadd( 8.82346, -52.5954, -31.1272, 0.55 ) }
    dend_23 { pt3dadd( 10.0733, -54.543, -32.3747, 0.83 ) }
    dend_23 { pt3dadd( 11.1774, -56.2968, -33.4416, 0.55 ) }
    dend_23 { pt3dadd( 11.6411, -57.1059, -33.9191, 0.55 ) }
    dend_23 { pt3dadd( 12.1995, -58.1889, -34.4835, 0.55 ) }
    dend_23 { pt3dadd( 12.9312, -59.807, -35.326, 0.55 ) }
    dend_23 { pt3dadd( 13.4859, -61.0726, -36.0002, 0.55 ) }
    dend_23 { pt3dadd( 14.5037, -63.6497, -37.4424, 0.55 ) }
    dend_23 { pt3dadd( 14.9551, -64.9971, -38.2013, 0.55 ) }
    dend_23 { pt3dadd( 15.0949, -65.4614, -38.4837, 0.83 ) }
    dend_23 { pt3dadd( 15.54, -67.1986, -39.6118, 0.55 ) }
    dend_23 { pt3dadd( 15.8182, -68.6244, -40.5765, 0.83 ) }
    dend_23 { pt3dadd( 16.1335, -70.1015, -41.5572, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.28599, -18.8406, -3.97253, 1.38 ) }
    dend_10 { pt3dadd( -5.33819, -23.3133, -5.2306, 1.38 ) }
    dend_10 { pt3dadd( -6.52988, -28.3791, -6.65546, 1.38 ) }
    dend_10 { pt3dadd( -7.26988, -31.5247, -7.54025, 1.38 ) }
    dend_10 { pt3dadd( -7.94156, -34.3799, -8.34334, 1.38 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 82.4572, -40.2784, -112.369, 0.55 ) }
    dend_8 { pt3dadd( 82.9547, -41.8277, -114.271, 0.55 ) }
    dend_8 { pt3dadd( 83.4058, -43.2328, -115.995, 0.28 ) }
    dend_8 { pt3dadd( 83.9177, -44.8274, -117.952, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 82.4572, -40.2784, -112.369, 0.55 ) }
    dend_7 { pt3dadd( 84.1262, -39.1318, -113.627, 0.55 ) }
    dend_7 { pt3dadd( 86.3333, -37.4522, -115.605, 0.55 ) }
    dend_7 { pt3dadd( 87.1569, -36.8237, -116.379, 0.55 ) }
    dend_7 { pt3dadd( 89.242, -35.0288, -118.471, 0.55 ) }
    dend_7 { pt3dadd( 90.588, -33.8927, -119.772, 0.28 ) }
    dend_7 { pt3dadd( 92.4126, -32.3891, -121.547, 0.55 ) }
    dend_7 { pt3dadd( 93.7381, -31.3307, -122.919, 0.28 ) }
    dend_7 { pt3dadd( 94.3246, -30.8665, -123.567, 0.28 ) }
    dend_7 { pt3dadd( 96.6174, -29.2212, -125.892, 0.55 ) }
    dend_7 { pt3dadd( 98.747, -27.9063, -127.796, 0.55 ) }
    dend_7 { pt3dadd( 100.464, -26.9524, -129.134, 0.55 ) }
    dend_7 { pt3dadd( 101.729, -26.3575, -129.978, 0.28 ) }
    dend_7 { pt3dadd( 102.762, -25.9373, -130.573, 0.55 ) }
    dend_7 { pt3dadd( 104.634, -25.2291, -131.508, 0.28 ) }
    dend_7 { pt3dadd( 105.964, -24.8272, -132.016, 0.55 ) }
    dend_7 { pt3dadd( 108.984, -23.931, -132.906, 0.55 ) }
    dend_7 { pt3dadd( 111.16, -23.3389, -133.2, 0.28 ) }
    dend_7 { pt3dadd( 113.026, -22.9147, -133.272, 0.55 ) }
    dend_7 { pt3dadd( 116.546, -22.2441, -133.218, 0.55 ) }
    dend_7 { pt3dadd( 118.878, -21.8567, -133.076, 0.28 ) }
    dend_7 { pt3dadd( 120.799, -21.6145, -132.897, 0.55 ) }
    dend_7 { pt3dadd( 125.113, -21.267, -132.435, 0.55 ) }
    dend_7 { pt3dadd( 127.503, -21.0551, -132.004, 0.55 ) }
    dend_7 { pt3dadd( 129.071, -20.8707, -131.614, 0.55 ) }
    dend_7 { pt3dadd( 130.481, -20.6239, -131.25, 0.28 ) }
    dend_7 { pt3dadd( 131.719, -20.2786, -130.968, 0.55 ) }
    dend_7 { pt3dadd( 134.158, -19.4953, -130.569, 0.28 ) }
    dend_7 { pt3dadd( 137.279, -18.2094, -130.236, 0.55 ) }
    dend_7 { pt3dadd( 139.799, -16.9417, -129.905, 0.28 ) }
    dend_7 { pt3dadd( 142.131, -15.6707, -129.587, 0.55 ) }
    dend_7 { pt3dadd( 144.429, -14.318, -129.295, 0.55 ) }
    dend_7 { pt3dadd( 147.482, -12.3491, -128.966, 0.55 ) }
    dend_7 { pt3dadd( 150.926, -10.0745, -128.703, 0.55 ) }
    dend_7 { pt3dadd( 152.782, -8.85805, -128.725, 0.28 ) }
    dend_7 { pt3dadd( 153.563, -8.35492, -128.773, 0.55 ) }
    dend_7 { pt3dadd( 154.968, -7.53134, -128.945, 0.55 ) }
    dend_7 { pt3dadd( 157.661, -5.92186, -129.356, 0.28 ) }
    dend_7 { pt3dadd( 159.133, -5.02926, -129.645, 0.55 ) }
    dend_7 { pt3dadd( 161.588, -3.83305, -130.375, 0.28 ) }
    dend_7 { pt3dadd( 163.579, -3.02211, -131.092, 0.55 ) }
    dend_7 { pt3dadd( 166.021, -2.11411, -132.082, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 75/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -51.919, 7.35686, 7.4969, 0.55 ) }
    dend_4 { pt3dadd( -54.9876, 8.06066, 6.37068, 0.55 ) }
    dend_4 { pt3dadd( -57.1888, 8.54748, 5.56666, 0.83 ) }
    dend_4 { pt3dadd( -60.2532, 9.25091, 4.14818, 0.55 ) }
    dend_4 { pt3dadd( -63.0088, 9.89244, 2.76537, 0.55 ) }
    dend_4 { pt3dadd( -66.4951, 10.7342, 0.75765, 0.55 ) }
    dend_4 { pt3dadd( -72.5425, 12.2649, -3.05828, 0.55 ) }
    dend_4 { pt3dadd( -76.9613, 13.4745, -6.33313, 0.55 ) }
    dend_4 { pt3dadd( -80.9824, 14.7034, -9.74996, 0.28 ) }
    dend_4 { pt3dadd( -81.7859, 14.9867, -10.5754, 0.55 ) }
    dend_4 { pt3dadd( -85.3285, 16.3204, -14.76, 0.55 ) }
    dend_4 { pt3dadd( -87.5691, 17.2518, -17.7998, 0.55 ) }
    dend_4 { pt3dadd( -90.2803, 18.5563, -22.0707, 0.28 ) }
    dend_4 { pt3dadd( -90.9662, 18.901, -23.1822, 0.55 ) }
    dend_4 { pt3dadd( -92.6937, 19.6954, -25.7482, 0.28 ) }
    dend_4 { pt3dadd( -94.3846, 20.55, -28.3222, 0.55 ) }
    dend_4 { pt3dadd( -95.2511, 21.0735, -29.6586, 0.55 ) }
    dend_4 { pt3dadd( -98.5974, 23.331, -34.5582, 0.55 ) }
    dend_4 { pt3dadd( -101.241, 25.2567, -38.2979, 0.55 ) }
    dend_4 { pt3dadd( -102.876, 26.5514, -40.7025, 0.28 ) }
    dend_4 { pt3dadd( -104.575, 28.0616, -43.4279, 0.55 ) }
    dend_4 { pt3dadd( -105.909, 29.3658, -45.8391, 0.55 ) }
    dend_4 { pt3dadd( -107.931, 31.1968, -49.5937, 0.55 ) }
    dend_4 { pt3dadd( -109.865, 32.8522, -53.2022, 0.28 ) }
    dend_4 { pt3dadd( -110.346, 33.242, -54.2075, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_4 { pt3dadd( -111.835, 34.3977, -57.8899, 0.28 ) }
    dend_4 { pt3dadd( -113.044, 35.1749, -61.1439, 0.55 ) }
    dend_4 { pt3dadd( -114.654, 36.1564, -66.5553, 0.55 ) }
    dend_4 { pt3dadd( -115.068, 36.4749, -68.3941, 0.55 ) }
    dend_4 { pt3dadd( -115.963, 37.1066, -72.6017, 0.28 ) }
    dend_4 { pt3dadd( -116.466, 37.4095, -74.7045, 0.55 ) }
    dend_4 { pt3dadd( -117.055, 37.6472, -76.9956, 0.55 ) }
    dend_4 { pt3dadd( -118.36, 38.1226, -81.9734, 0.55 ) }
    dend_4 { pt3dadd( -119.609, 38.6191, -86.316, 1.11 ) }
    dend_4 { pt3dadd( -122.125, 39.3429, -94.1543, 0.28 ) }
    dend_4 { pt3dadd( -123.164, 39.6148, -96.9992, 0.55 ) }
    dend_4 { pt3dadd( -125.171, 39.9172, -102.835, 0.55 ) }
    dend_4 { pt3dadd( -125.954, 40.0411, -105.138, 0.28 ) }
    dend_4 { pt3dadd( -127.237, 40.292, -108.774, 0.55 ) }
    dend_4 { pt3dadd( -129.499, 40.9148, -115.463, 0.28 ) }
    dend_4 { pt3dadd( -129.967, 41.1326, -116.965, 0.55 ) }
    dend_4 { pt3dadd( -132.551, 42.915, -127.963, 0.28 ) }
    dend_4 { pt3dadd( -134.208, 44.7214, -137.544, 0.28 ) }
    dend_4 { pt3dadd( -134.327, 44.9006, -138.604, 0.83 ) }
    dend_4 { pt3dadd( -134.625, 45.6048, -142.929, 0.28 ) }
    dend_4 { pt3dadd( -134.676, 45.9684, -144.747, 0.83 ) }
    dend_4 { pt3dadd( -134.74, 47.3743, -151.582, 0.28 ) }
    dend_4 { pt3dadd( -134.778, 48.0847, -154.53, 0.83 ) }
    dend_4 { pt3dadd( -134.976, 49.4078, -159.74, 0.28 ) }
    dend_4 { pt3dadd( -135.201, 50.0185, -162.329, 0.55 ) }
    dend_4 { pt3dadd( -135.688, 50.7507, -165.288, 0.28 ) }
    dend_4 { pt3dadd( -136.363, 51.4845, -168.006, 0.83 ) }
    dend_4 { pt3dadd( -137.093, 52.1665, -170.367, 0.28 ) }
    dend_4 { pt3dadd( -138.038, 52.9031, -172.998, 0.55 ) }
    dend_4 { pt3dadd( -142.814, 55.8931, -184.64, 0.28 ) }
    dend_4 { pt3dadd( -144.102, 56.5171, -187.506, 0.28 ) }
    dend_4 { pt3dadd( -145.548, 56.9786, -190.498, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -51.919, 7.35686, 7.4969, 0.55 ) }
    dend_3 { pt3dadd( -53.8461, 7.54918, 9.04467, 0.83 ) }
    dend_3 { pt3dadd( -55.1092, 7.77818, 10.2048, 0.28 ) }
    dend_3 { pt3dadd( -56.1211, 8.10198, 11.177, 0.83 ) }
    dend_3 { pt3dadd( -56.8534, 8.39972, 11.8437, 0.55 ) }
    dend_3 { pt3dadd( -61.053, 10.1978, 15.5319, 0.83 ) }
    dend_3 { pt3dadd( -63.6988, 11.2178, 17.8876, 0.55 ) }
    dend_3 { pt3dadd( -65.9623, 11.8596, 19.7801, 0.55 ) }
    dend_3 { pt3dadd( -67.1133, 12.1756, 20.9041, 0.28 ) }
    dend_3 { pt3dadd( -68.065, 12.4878, 21.9475, 0.55 ) }
    dend_3 { pt3dadd( -68.8963, 12.7948, 22.971, 0.55 ) }
    dend_3 { pt3dadd( -71.2313, 13.7932, 25.9448, 0.28 ) }
    dend_3 { pt3dadd( -71.8191, 14.0174, 26.7602, 0.83 ) }
    dend_3 { pt3dadd( -74.9891, 15.0874, 31.0153, 0.28 ) }
    dend_3 { pt3dadd( -75.3924, 15.2081, 31.5883, 0.55 ) }
    dend_3 { pt3dadd( -78.0031, 16.0565, 35.655, 0.28 ) }
    dend_3 { pt3dadd( -78.5845, 16.2958, 36.6247, 0.83 ) }
    dend_3 { pt3dadd( -84.6188, 16.9009, 46.4465, 0.83 ) }
    dend_3 { pt3dadd( -89.9258, 16.2515, 56.6621, 0.83 ) }
    dend_3 { pt3dadd( -96.1117, 14.3814, 66.2078, 0.83 ) }
    dend_3 { pt3dadd( -103.167, 12.9745, 75.2138, 0.83 ) }
    dend_3 { pt3dadd( -109.548, 9.27455, 84.1012, 0.83 ) }
    dend_3 { pt3dadd( -114.318, 7.47582, 94.4392, 0.83 ) }
    dend_3 { pt3dadd( -119.635, 7.02847, 104.663, 0.83 ) }
    dend_3 { pt3dadd( -126.321, 7.349, 114.059, 0.83 ) }
    dend_3 { pt3dadd( -131.922, 5.71994, 124.001, 0.83 ) }
    dend_3 { pt3dadd( -136.107, 2.18696, 134.159, 0.83 ) }
    dend_3 { pt3dadd( -140.524, -3.03912, 143.502, 0.83 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 60/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 19.283, 32.3314, 54.6394, 0.55 ) }
    dend_76 { pt3dadd( 18.2947, 37.2501, 65.0195, 0.55 ) }
    dend_76 { pt3dadd( 15.8784, 42.1333, 75.1749, 0.55 ) }
    dend_76 { pt3dadd( 12.2258, 46.4976, 85.174, 0.55 ) }
    dend_76 { pt3dadd( 8.41064, 48.7039, 95.7509, 0.55 ) }
    dend_76 { pt3dadd( 4.20854, 49.936, 106.331, 0.55 ) }
    dend_76 { pt3dadd( 0.877118, 51.2602, 117.205, 0.55 ) }
    dend_76 { pt3dadd( -0.983223, 53.5712, 128.276, 0.55 ) }
    dend_76 { pt3dadd( -4.74562, 55.8905, 138.849, 0.55 ) }
    dend_76 { pt3dadd( -7.92592, 58.3494, 149.584, 0.55 ) }
    dend_76 { pt3dadd( -9.98787, 61.909, 160.307, 0.55 ) }
    dend_76 { pt3dadd( -14.1704, 63.4006, 170.862, 0.55 ) }
    dend_76 { pt3dadd( -17.7138, 65.7634, 181.502, 0.55 ) }
    dend_76 { pt3dadd( -23.6594, 67.3112, 191.166, 0.55 ) }
    dend_76 { pt3dadd( -29.193, 70.8451, 200.583, 0.55 ) }
    dend_76 { pt3dadd( -33.6236, 75.7506, 210.02, 0.55 ) }
    dend_76 { pt3dadd( -36.7512, 79.7761, 220.324, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 77/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 19.283, 32.3314, 54.6394, 0.55 ) }
    dend_73 { pt3dadd( 20.5544, 33.9154, 65.5655, 0.55 ) }
    dend_73 { pt3dadd( 20.125, 33.5986, 76.6561, 0.55 ) }
    dend_73 { pt3dadd( 20.6019, 34.9488, 87.6743, 0.55 ) }
    dend_73 { pt3dadd( 19.1104, 35.9365, 98.6371, 0.55 ) }
    dend_73 { pt3dadd( 18.6014, 36.8315, 109.696, 0.55 ) }
    dend_73 { pt3dadd( 18.3917, 37.8333, 120.757, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 84/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 36.7416, 37.8412, 43.5307, 0.55 ) }
    dend_67 { pt3dadd( 42.8837, 44.3308, 48.3478, 0.55 ) }
    dend_67 { pt3dadd( 49.3343, 50.5129, 53.1272, 0.55 ) }
    dend_67 { pt3dadd( 56.904, 55.5589, 57.4495, 0.55 ) }
    dend_67 { pt3dadd( 65.8211, 59.0556, 60.357, 0.55 ) }
    dend_67 { pt3dadd( 74.4789, 62.7287, 63.8025, 0.55 ) }
    dend_67 { pt3dadd( 83.7564, 65.3403, 66.4166, 0.55 ) }
    dend_67 { pt3dadd( 93.0786, 65.4729, 69.9248, 0.55 ) }
    dend_67 { pt3dadd( 101.516, 65.2392, 75.217, 0.55 ) }
    dend_67 { pt3dadd( 110.758, 66.0011, 78.8563, 0.55 ) }
    dend_67 { pt3dadd( 119.702, 66.1998, 83.2379, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 36.7416, 37.8412, 43.5307, 0.55 ) }
    dend_64 { pt3dadd( 42.8735, 41.0028, 50.4573, 0.55 ) }
    dend_64 { pt3dadd( 49.4962, 42.0669, 57.5095, 0.55 ) }
    dend_64 { pt3dadd( 55.8657, 42.002, 64.8598, 0.55 ) }
    dend_64 { pt3dadd( 62.7961, 40.6588, 71.5608, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_64 { pt3dadd( 69.2947, 39.8588, 78.7564, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_51 (entry count 1/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 15.3129, 5.29143, -34.3834, 1.11 ) }
    dend_57 { pt3dadd( 17.9605, 5.00503, -33.3611, 0.55 ) }
    dend_57 { pt3dadd( 19.683, 4.63934, -32.7421, 0.83 ) }
    dend_57 { pt3dadd( 21.6684, 4.16075, -32.1169, 0.55 ) }
    dend_57 { pt3dadd( 23.6301, 3.61002, -31.6398, 0.55 ) }
    dend_57 { pt3dadd( 26.3678, 2.90297, -31.0723, 0.55 ) }
    dend_57 { pt3dadd( 29.7359, 2.0908, -30.4772, 0.55 ) }
    dend_57 { pt3dadd( 32.1413, 1.57615, -30.123, 0.55 ) }
    dend_57 { pt3dadd( 34.4363, 1.12298, -29.8018, 0.55 ) }
    dend_57 { pt3dadd( 38.8496, 0.224228, -29.1975, 0.55 ) }
    dend_57 { pt3dadd( 42.8247, -0.52006, -28.7358, 0.55 ) }
    dend_57 { pt3dadd( 45.9978, -1.01052, -28.3901, 0.55 ) }
    dend_57 { pt3dadd( 49.956, -1.43323, -28.0218, 0.55 ) }
    dend_57 { pt3dadd( 52.7037, -1.63462, -27.755, 0.55 ) }
    dend_57 { pt3dadd( 54.543, -1.73367, -27.5807, 0.83 ) }
    dend_57 { pt3dadd( 56.3929, -1.74604, -27.4143, 0.55 ) }
    dend_57 { pt3dadd( 58.3599, -1.69832, -27.2755, 0.55 ) }
    dend_57 { pt3dadd( 59.9394, -1.58954, -27.1768, 0.83 ) }
    dend_57 { pt3dadd( 62.8666, -1.10251, -26.999, 0.55 ) }
    dend_57 { pt3dadd( 65.3163, -0.529243, -26.8225, 0.55 ) }
    dend_57 { pt3dadd( 67.1477, -0.0673627, -26.5805, 0.55 ) }
    dend_57 { pt3dadd( 69.4746, 0.528263, -26.2105, 0.55 ) }
    dend_57 { pt3dadd( 71.8022, 1.10921, -25.8824, 0.55 ) }
    dend_57 { pt3dadd( 76.1054, 2.29343, -25.3675, 0.55 ) }
    dend_57 { pt3dadd( 79.2353, 3.16661, -25.0531, 0.55 ) }
    dend_57 { pt3dadd( 82.4525, 4.07932, -25.0286, 0.55 ) }
    dend_57 { pt3dadd( 83.9342, 4.47716, -25.1425, 0.28 ) }
    dend_57 { pt3dadd( 86.5329, 5.1734, -25.9536, 0.55 ) }
    dend_57 { pt3dadd( 88.2102, 5.54049, -27.0222, 0.28 ) }
    dend_57 { pt3dadd( 89.3722, 5.71839, -27.9648, 0.55 ) }
    dend_57 { pt3dadd( 92.5629, 6.25266, -31.1505, 0.28 ) }
    dend_57 { pt3dadd( 94.3513, 6.50873, -33.0939, 0.55 ) }
    dend_57 { pt3dadd( 98.5485, 7.01784, -37.6319, 0.55 ) }
    dend_57 { pt3dadd( 100.873, 7.23552, -40.1843, 0.55 ) }
    dend_57 { pt3dadd( 103.544, 7.39476, -43.0342, 0.28 ) }
    dend_57 { pt3dadd( 106.611, 7.50836, -45.7854, 0.55 ) }
    dend_57 { pt3dadd( 108.163, 7.52664, -46.039, 0.55 ) }
    dend_57 { pt3dadd( 110.642, 7.66703, -44.275, 0.28 ) }
    dend_57 { pt3dadd( 111.96, 7.69527, -43.201, 0.55 ) }
    dend_57 { pt3dadd( 114.736, 7.79539, -40.6701, 0.55 ) }
    dend_57 { pt3dadd( 125.416, 8.07028, -30.1875, 0.55 ) }
    dend_57 { pt3dadd( 125.882, 8.06856, -29.7176, 0.55 ) }
    dend_57 { pt3dadd( 126.502, 8.07186, -29.0884, 0.83 ) }
    dend_57 { pt3dadd( 128.56, 8.03847, -27.0545, 0.55 ) }
    dend_57 { pt3dadd( 129.581, 8.00698, -26.2299, 0.28 ) }
    dend_57 { pt3dadd( 130.185, 7.94623, -25.9906, 0.55 ) }
    dend_57 { pt3dadd( 133.372, 7.54812, -26.4617, 0.55 ) }
    dend_57 { pt3dadd( 135.211, 7.31236, -26.7398, 0.55 ) }
    dend_57 { pt3dadd( 137.541, 7.03197, -27.0954, 0.55 ) }
    dend_57 { pt3dadd( 139.864, 6.78565, -27.4434, 0.55 ) }
    dend_57 { pt3dadd( 141.947, 6.44709, -27.7303, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 52/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 15.3129, 5.29143, -34.3834, 1.11 ) }
    dend_52 { pt3dadd( 16.1373, 8.06435, -34.3149, 0.83 ) }
    dend_52 { pt3dadd( 16.5883, 9.58124, -34.2774, 0.83 ) }
    dend_52 { pt3dadd( 17.4631, 12.5236, -34.2047, 0.83 ) }
    dend_52 { pt3dadd( 17.9986, 14.3247, -34.1602, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.278325, 26.3691, -45.5311, 1.11 ) }
    dend_48 { pt3dadd( -1.58528, 28.9978, -51.4474, 0.55 ) }
    dend_48 { pt3dadd( -2.18679, 30.0184, -53.7349, 0.55 ) }
    dend_48 { pt3dadd( -3.74604, 33.2131, -60.221, 0.55 ) }
    dend_48 { pt3dadd( -5.41241, 36.455, -67.0003, 0.55 ) }
    dend_48 { pt3dadd( -6.57851, 38.7725, -71.8863, 0.55 ) }
    dend_48 { pt3dadd( -6.85201, 39.3379, -73.0455, 0.55 ) }
    dend_48 { pt3dadd( -7.87134, 41.7929, -78.0057, 0.55 ) }
    dend_48 { pt3dadd( -8.8788, 44.2628, -83.0329, 0.55 ) }
    dend_48 { pt3dadd( -10.1303, 47.7719, -89.5441, 0.55 ) }
    dend_48 { pt3dadd( -11.3668, 51.2049, -95.3502, 0.55 ) }
    dend_48 { pt3dadd( -11.7791, 52.4541, -97.5094, 0.28 ) }
    dend_48 { pt3dadd( -12.3759, 54.3582, -100.734, 0.55 ) }
    dend_48 { pt3dadd( -12.6896, 55.4893, -102.632, 0.55 ) }
    dend_48 { pt3dadd( -13.4734, 59.5777, -109.29, 0.55 ) }
    dend_48 { pt3dadd( -13.944, 63.5753, -115.154, 0.55 ) }
    dend_48 { pt3dadd( -14.4425, 68.0623, -121.794, 0.55 ) }
    dend_48 { pt3dadd( -14.6357, 69.4892, -123.957, 0.55 ) }
    dend_48 { pt3dadd( -15.1766, 72.7482, -128.841, 0.55 ) }
    dend_48 { pt3dadd( -15.4475, 74.0461, -130.853, 0.28 ) }
    dend_48 { pt3dadd( -15.9578, 75.4282, -133.3, 0.55 ) }
    dend_48 { pt3dadd( -16.9264, 77.9935, -137.761, 0.55 ) }
    dend_48 { pt3dadd( -17.5421, 79.3495, -139.936, 0.28 ) }
    dend_48 { pt3dadd( -17.8807, 79.9214, -140.888, 0.55 ) }
    dend_48 { pt3dadd( -18.6967, 81.056, -142.657, 0.28 ) }
    dend_48 { pt3dadd( -19.9792, 82.839, -145.616, 0.55 ) }
    dend_48 { pt3dadd( -20.6286, 83.9514, -147.348, 0.28 ) }
    dend_48 { pt3dadd( -21.1948, 85.4586, -149.157, 0.83 ) }
    dend_48 { pt3dadd( -21.4063, 86.5025, -150.336, 0.28 ) }
    dend_48 { pt3dadd( -21.7436, 88.9933, -153.006, 0.55 ) }
    dend_48 { pt3dadd( -22.0608, 91.2983, -155.4, 0.28 ) }
    dend_48 { pt3dadd( -22.297, 92.4403, -156.588, 0.55 ) }
    dend_48 { pt3dadd( -22.6139, 94.256, -158.413, 0.28 ) }
    dend_48 { pt3dadd( -22.7463, 96.2705, -160.482, 0.55 ) }
    dend_48 { pt3dadd( -22.6065, 98.5112, -162.919, 0.28 ) }
    dend_48 { pt3dadd( -22.451, 99.7614, -164.17, 0.55 ) }
    dend_48 { pt3dadd( -22.0728, 102.009, -166.636, 0.55 ) }
    dend_48 { pt3dadd( -21.6172, 104.73, -169.862, 0.28 ) }
    dend_48 { pt3dadd( -21.297, 106.524, -172.176, 0.83 ) }
    dend_48 { pt3dadd( -20.7356, 109.93, -176.482, 0.28 ) }
    dend_48 { pt3dadd( -20.4748, 111.532, -178.503, 0.55 ) }
    dend_48 { pt3dadd( -20.1225, 115.087, -182.76, 0.55 ) }
    dend_48 { pt3dadd( -20.0825, 116.698, -184.61, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -20.2047, 118.023, -186.077, 0.55 ) }
    dend_48 { pt3dadd( -20.4389, 119.376, -187.317, 0.55 ) }
    dend_48 { pt3dadd( -20.8345, 120.768, -188.477, 0.28 ) }
    dend_48 { pt3dadd( -21.598, 123.093, -190.442, 0.55 ) }
    dend_48 { pt3dadd( -23.0207, 127.074, -193.549, 0.28 ) }
    dend_48 { pt3dadd( -23.5558, 128.613, -194.856, 0.55 ) }
    dend_48 { pt3dadd( -24.2197, 130.475, -196.365, 0.28 ) }
    dend_48 { pt3dadd( -25.4982, 134.367, -199.617, 0.55 ) }
    dend_48 { pt3dadd( -26.0514, 136.257, -201.207, 0.28 ) }
    dend_48 { pt3dadd( -26.4713, 137.855, -202.628, 0.55 ) }
    dend_48 { pt3dadd( -27.2491, 141.505, -205.821, 0.28 ) }
    dend_48 { pt3dadd( -27.7869, 144.723, -208.627, 0.55 ) }
    dend_48 { pt3dadd( -28.2174, 148.77, -212.116, 0.28 ) }
    dend_48 { pt3dadd( -28.3017, 151.132, -213.959, 0.28 ) }
    dend_48 { pt3dadd( -28.3609, 153.509, -215.726, 0.55 ) }
    dend_48 { pt3dadd( -28.3143, 155.765, -217.482, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.278325, 26.3691, -45.5311, 1.11 ) }
    dend_45 { pt3dadd( -1.19045, 27.4604, -45.3252, 1.11 ) }
    dend_45 { pt3dadd( -4.62237, 30.1938, -44.9076, 0.55 ) }
    dend_45 { pt3dadd( -5.66372, 31.1089, -44.8004, 0.55 ) }
    dend_45 { pt3dadd( -8.22466, 33.3608, -44.4563, 0.55 ) }
    dend_45 { pt3dadd( -10.2489, 35.2167, -44.1521, 0.55 ) }
    dend_45 { pt3dadd( -13.5237, 38.3773, -43.6031, 0.83 ) }
    dend_45 { pt3dadd( -14.8807, 39.8451, -43.2921, 0.55 ) }
    dend_45 { pt3dadd( -17.0377, 42.3348, -42.5365, 0.83 ) }
    dend_45 { pt3dadd( -18.8583, 44.4697, -41.7663, 0.55 ) }
    dend_45 { pt3dadd( -19.8622, 45.6008, -41.3144, 0.55 ) }
    dend_45 { pt3dadd( -21.6416, 47.5806, -40.2962, 0.83 ) }
    dend_45 { pt3dadd( -23.5758, 49.777, -38.7719, 0.55 ) }
    dend_45 { pt3dadd( -25.6591, 52.0666, -36.9303, 0.55 ) }
    dend_45 { pt3dadd( -26.9455, 53.4896, -35.6191, 0.55 ) }
    dend_45 { pt3dadd( -28.2581, 54.9482, -34.1763, 0.55 ) }
    dend_45 { pt3dadd( -29.4487, 56.1546, -32.8421, 0.83 ) }
    dend_45 { pt3dadd( -31.7892, 58.5905, -30.0513, 0.55 ) }
    dend_45 { pt3dadd( -33.0221, 59.9203, -28.5174, 0.55 ) }
    dend_45 { pt3dadd( -34.8603, 61.9335, -26.2628, 0.55 ) }
    dend_45 { pt3dadd( -36.3281, 63.4559, -24.5087, 0.55 ) }
    dend_45 { pt3dadd( -37.8326, 65.0315, -22.8219, 0.55 ) }
    dend_45 { pt3dadd( -39.543, 66.8475, -21.1817, 0.55 ) }
    dend_45 { pt3dadd( -41.391, 68.6652, -19.7902, 0.55 ) }
    dend_45 { pt3dadd( -42.5448, 69.8356, -18.997, 0.55 ) }
    dend_45 { pt3dadd( -43.7067, 71.1001, -18.3877, 0.55 ) }
    dend_45 { pt3dadd( -45.7891, 73.4389, -17.5665, 0.55 ) }
    dend_45 { pt3dadd( -47.3513, 75.1991, -17.0774, 0.55 ) }
    dend_45 { pt3dadd( -48.822, 76.8837, -17.0042, 0.55 ) }
    dend_45 { pt3dadd( -50.9919, 79.6574, -17.405, 0.55 ) }
    dend_45 { pt3dadd( -52.9047, 82.4103, -18.071, 0.55 ) }
    dend_45 { pt3dadd( -54.4111, 84.8368, -18.7809, 0.55 ) }
    dend_45 { pt3dadd( -55.8596, 87.2858, -19.5937, 0.55 ) }
    dend_45 { pt3dadd( -59.8394, 94.2662, -21.9551, 0.55 ) }
    dend_45 { pt3dadd( -60.7727, 96.0699, -22.4964, 0.55 ) }
    dend_45 { pt3dadd( -61.1987, 96.9603, -22.7143, 0.55 ) }
    dend_45 { pt3dadd( -62.449, 99.7324, -22.9875, 0.55 ) }
    dend_45 { pt3dadd( -63.4752, 102.436, -22.8862, 0.55 ) }
    dend_45 { pt3dadd( -63.6949, 103.022, -22.7751, 0.55 ) }
    dend_45 { pt3dadd( -64.9102, 106.119, -21.7208, 0.55 ) }
    dend_45 { pt3dadd( -65.5777, 107.668, -21.1983, 0.28 ) }
    dend_45 { pt3dadd( -66.5592, 109.782, -20.5469, 0.55 ) }
    dend_45 { pt3dadd( -68.246, 112.997, -19.6127, 0.55 ) }
    dend_45 { pt3dadd( -69.5629, 115.086, -19.0228, 0.55 ) }
    dend_45 { pt3dadd( -70.4636, 116.283, -18.6911, 0.28 ) }
    dend_45 { pt3dadd( -72.1221, 118.006, -18.1943, 0.55 ) }
    dend_45 { pt3dadd( -73.7416, 119.457, -17.8292, 0.55 ) }
    dend_45 { pt3dadd( -75.8152, 121.156, -17.4842, 0.55 ) }
    dend_45 { pt3dadd( -77.7793, 122.586, -17.3531, 0.55 ) }
    dend_45 { pt3dadd( -79.2282, 123.57, -17.3793, 0.55 ) }
    dend_45 { pt3dadd( -81.2979, 124.993, -17.6083, 0.55 ) }
    dend_45 { pt3dadd( -83.0364, 126.351, -17.9488, 0.83 ) }
    dend_45 { pt3dadd( -84.4932, 127.614, -18.3406, 0.28 ) }
    dend_45 { pt3dadd( -85.6471, 128.769, -18.775, 0.55 ) }
    dend_45 { pt3dadd( -86.9985, 130.264, -19.3689, 0.55 ) }
    dend_45 { pt3dadd( -88.327, 131.845, -19.9666, 0.28 ) }
    dend_45 { pt3dadd( -89.5663, 133.425, -20.5723, 0.55 ) }
    dend_45 { pt3dadd( -90.9387, 135.125, -21.1697, 0.28 ) }
    dend_45 { pt3dadd( -92.1044, 136.595, -21.6008, 0.55 ) }
    dend_45 { pt3dadd( -93.3478, 138.318, -21.9536, 0.55 ) }
    dend_45 { pt3dadd( -94.0627, 139.456, -22.1278, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 77/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 32.2573, 40.0231, -27.6648, 0.83 ) }
    dend_39 { pt3dadd( 33.0616, 43.3781, -30.245, 0.83 ) }
    dend_39 { pt3dadd( 33.6029, 45.636, -31.9814, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 80/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 32.2573, 40.0231, -27.6648, 0.83 ) }
    dend_38 { pt3dadd( 35.4415, 41.5847, -27.8321, 0.55 ) }
    dend_38 { pt3dadd( 37.0825, 42.396, -28.0647, 0.55 ) }
    dend_38 { pt3dadd( 38.8255, 43.2578, -28.3118, 0.55 ) }
    dend_38 { pt3dadd( 42.1601, 44.9065, -28.7845, 0.55 ) }
    dend_38 { pt3dadd( 44.4915, 46.0592, -29.115, 0.83 ) }
    dend_38 { pt3dadd( 48.8379, 48.2081, -29.7312, 0.28 ) }
    dend_38 { pt3dadd( 52.4839, 50.4087, -29.8886, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.1335, -70.1015, -41.5572, 0.55 ) }
    dend_27 { pt3dadd( 15.3063, -69.4249, -41.5683, 0.55 ) }
    dend_27 { pt3dadd( 14.3257, -68.3495, -41.8159, 0.28 ) }
    dend_27 { pt3dadd( 13.7027, -67.6663, -41.9731, 0.55 ) }
    dend_27 { pt3dadd( 12.8992, -66.7851, -42.176, 0.28 ) }
    dend_27 { pt3dadd( 12.7091, -66.5766, -42.224, 0.55 ) }
    dend_27 { pt3dadd( 11.7951, -65.5743, -42.4547, 0.28 ) }
    dend_27 { pt3dadd( 11.3617, -64.8559, -42.5371, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 16.1335, -70.1015, -41.5572, 0.55 ) }
    dend_24 { pt3dadd( 16.6973, -71.6483, -40.743, 0.28 ) }
    dend_24 { pt3dadd( 17.2474, -73.1575, -39.9486, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.94156, -34.3799, -8.34334, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( -9.19431, -38.2008, -9.35482, 1.11 ) }
    dend_16 { pt3dadd( -9.58402, -39.4556, -9.81176, 1.11 ) }
    dend_16 { pt3dadd( -10.2473, -41.5913, -10.5894, 1.11 ) }
    dend_16 { pt3dadd( -10.9083, -43.7196, -11.3645, 1.11 ) }
    dend_16 { pt3dadd( -11.9244, -46.9917, -12.556, 1.11 ) }
    dend_16 { pt3dadd( -13.117, -50.8317, -13.9543, 1.11 ) }
    dend_16 { pt3dadd( -14.3574, -54.5804, -14.9959, 1.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.94156, -34.3799, -8.34334, 1.38 ) }
    dend_11 { pt3dadd( -8.88486, -34.8845, -8.60142, 0.83 ) }
    dend_11 { pt3dadd( -9.57677, -35.3128, -8.80881, 0.83 ) }
    dend_11 { pt3dadd( -10.923, -36.2513, -9.22878, 0.83 ) }
    dend_11 { pt3dadd( -12.811, -37.7046, -9.78976, 0.55 ) }
    dend_11 { pt3dadd( -14.4274, -38.9747, -10.2491, 0.55 ) }
    dend_11 { pt3dadd( -15.7178, -39.9773, -10.6183, 0.55 ) }
    dend_11 { pt3dadd( -17.1721, -41.0331, -11.0456, 0.28 ) }
    dend_11 { pt3dadd( -17.7388, -41.4279, -11.1818, 0.55 ) }
    dend_11 { pt3dadd( -20.1587, -42.8851, -11.5481, 0.55 ) }
    dend_11 { pt3dadd( -21.934, -43.7883, -11.7672, 0.55 ) }
    dend_11 { pt3dadd( -24.5457, -44.9793, -12.083, 0.55 ) }
    dend_11 { pt3dadd( -26.5951, -45.7859, -12.3235, 0.55 ) }
    dend_11 { pt3dadd( -29.6358, -46.8832, -12.668, 0.55 ) }
    dend_11 { pt3dadd( -32.7365, -47.9489, -13.1393, 0.55 ) }
    dend_11 { pt3dadd( -35.5313, -48.8891, -13.6983, 0.55 ) }
    dend_11 { pt3dadd( -37.0572, -49.4653, -14.0599, 0.55 ) }
    dend_11 { pt3dadd( -39.3245, -50.4764, -14.6783, 0.55 ) }
    dend_11 { pt3dadd( -41.8709, -51.8324, -15.4639, 0.55 ) }
    dend_11 { pt3dadd( -45.0223, -53.7495, -16.6254, 0.55 ) }
    dend_11 { pt3dadd( -46.4088, -54.7695, -17.1587, 0.55 ) }
    dend_11 { pt3dadd( -47.6637, -55.732, -17.5911, 0.55 ) }
    dend_11 { pt3dadd( -49.6815, -57.3351, -18.2979, 0.55 ) }
    dend_11 { pt3dadd( -52.7049, -59.9388, -19.2915, 0.55 ) }
    dend_11 { pt3dadd( -54.4377, -61.4788, -19.8119, 0.28 ) }
    dend_11 { pt3dadd( -55.8779, -62.8061, -20.2054, 0.55 ) }
    dend_11 { pt3dadd( -57.837, -64.4686, -20.7442, 0.55 ) }
    dend_11 { pt3dadd( -59.2904, -65.565, -21.0499, 0.28 ) }
    dend_11 { pt3dadd( -60.7049, -66.5134, -21.253, 0.83 ) }
    dend_11 { pt3dadd( -61.9119, -67.1947, -21.3349, 0.55 ) }
    dend_11 { pt3dadd( -63.3618, -67.8661, -21.3462, 0.83 ) }
    dend_11 { pt3dadd( -66.004, -68.9745, -21.266, 0.55 ) }
    dend_11 { pt3dadd( -69.3711, -70.4369, -20.7669, 0.55 ) }
    dend_11 { pt3dadd( -70.8733, -71.0312, -20.4631, 0.55 ) }
    dend_11 { pt3dadd( -71.9062, -71.4698, -20.1332, 0.55 ) }
    dend_11 { pt3dadd( -73.76, -72.3004, -19.3299, 0.55 ) }
    dend_11 { pt3dadd( -76.536, -73.6307, -17.9728, 0.83 ) }
    dend_11 { pt3dadd( -79.6429, -75.2379, -16.322, 0.55 ) }
    dend_11 { pt3dadd( -81.339, -76.172, -15.4668, 0.55 ) }
    dend_11 { pt3dadd( -84.3591, -77.9895, -13.7354, 0.55 ) }
    dend_11 { pt3dadd( -85.6456, -78.8042, -12.9217, 0.55 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 48/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 18.3917, 37.8333, 120.757, 0.55 ) }
    dend_75 { pt3dadd( 22.3406, 35.5099, 130.958, 0.55 ) }
    dend_75 { pt3dadd( 28.1361, 32.5279, 140.078, 0.55 ) }
    dend_75 { pt3dadd( 33.906, 28.3345, 148.779, 0.55 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 52/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 18.3917, 37.8333, 120.757, 0.55 ) }
    dend_74 { pt3dadd( 16.886, 40.1475, 127.934, 0.55 ) }
    dend_74 { pt3dadd( 14.4793, 42.7586, 134.764, 0.55 ) }
    dend_74 { pt3dadd( 12.3741, 44.3817, 141.963, 0.55 ) }
    dend_74 { pt3dadd( 9.11848, 47.5941, 148.178, 0.55 ) }
    dend_74 { pt3dadd( 5.27394, 51.8157, 153.429, 0.55 ) }
    dend_74 { pt3dadd( 2.4687, 55.4778, 159.637, 0.55 ) }
    dend_74 { pt3dadd( -0.258755, 58.0553, 166.356, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 60/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 119.702, 66.1998, 83.2379, 0.55 ) }
    dend_69 { pt3dadd( 125.634, 66.6917, 87.8312, 0.55 ) }
    dend_69 { pt3dadd( 131.713, 67.0804, 92.239, 0.55 ) }
    dend_69 { pt3dadd( 137.613, 68.6598, 96.6457, 0.55 ) }
    dend_69 { pt3dadd( 144.097, 69.9398, 100.254, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 65/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 119.702, 66.1998, 83.2379, 0.55 ) }
    dend_68 { pt3dadd( 126.47, 75.3889, 81.8561, 0.55 ) }
    dend_68 { pt3dadd( 133.81, 83.9434, 79.8476, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 68/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 69.2947, 39.8588, 78.7564, 0.55 ) }
    dend_66 { pt3dadd( 75.7659, 40.57, 84.2618, 0.55 ) }
    dend_66 { pt3dadd( 83.0081, 40.8606, 88.7475, 0.55 ) }
    dend_66 { pt3dadd( 90.4927, 42.0729, 92.6514, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 69.2947, 39.8588, 78.7564, 0.55 ) }
    dend_65 { pt3dadd( 74.8911, 39.9546, 85.5054, 0.55 ) }
    dend_65 { pt3dadd( 79.4827, 39.9277, 92.9749, 0.55 ) }
    dend_65 { pt3dadd( 83.3666, 39.3336, 100.815, 0.55 ) }
    dend_65 { pt3dadd( 85.6201, 38.1206, 109.207, 0.55 ) }
    dend_65 { pt3dadd( 88.552, 36.1499, 117.252, 0.55 ) }
    dend_65 { pt3dadd( 91.106, 33.6677, 125.295, 0.55 ) }
    dend_65 { pt3dadd( 94.0033, 29.6848, 132.644, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 141.947, 6.44709, -27.7303, 0.55 ) }
    dend_59 { pt3dadd( 141.943, 7.62365, -29.4795, 0.55 ) }
    dend_59 { pt3dadd( 141.94, 8.51602, -30.8063, 0.83 ) }
    dend_59 { pt3dadd( 141.935, 10.2271, -33.3502, 0.28 ) }
    dend_59 { pt3dadd( 141.929, 11.9333, -35.887, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 85/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 141.947, 6.44709, -27.7303, 0.55 ) }
    dend_58 { pt3dadd( 142.861, 5.28879, -28.7918, 0.55 ) }
    dend_58 { pt3dadd( 144.777, 3.25416, -30.8194, 0.28 ) }
    dend_58 { pt3dadd( 146.091, 1.93954, -32.1001, 0.55 ) }
    dend_58 { pt3dadd( 148.065, 0.0120463, -33.9003, 0.55 ) }
    dend_58 { pt3dadd( 148.937, -0.793175, -34.6284, 0.83 ) }
    dend_58 { pt3dadd( 150.475, -2.25802, -35.9858, 0.55 ) }
    dend_58 { pt3dadd( 151.403, -3.13054, -36.7869, 0.55 ) }
    dend_58 { pt3dadd( 152.385, -4.02098, -37.5808, 0.28 ) }
    dend_58 { pt3dadd( 152.95, -4.52025, -38.0216, 0.55 ) }
    dend_58 { pt3dadd( 155.071, -6.41463, -39.8064, 0.55 ) }
    dend_58 { pt3dadd( 156.585, -7.80085, -41.2171, 0.28 ) }
    dend_58 { pt3dadd( 157.939, -9.1213, -42.7133, 0.55 ) }
    dend_58 { pt3dadd( 158.487, -9.66472, -43.4143, 0.28 ) }
    dend_58 { pt3dadd( 159.995, -11.1975, -45.459, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( 162.215, -13.3106, -48.5413, 0.28 ) }
    dend_58 { pt3dadd( 163.194, -14.1966, -49.8811, 0.55 ) }
    dend_58 { pt3dadd( 165.638, -16.1298, -52.9507, 0.55 ) }
    dend_58 { pt3dadd( 167.186, -17.2631, -54.7045, 0.28 ) }
    dend_58 { pt3dadd( 168.446, -18.2206, -56.1182, 0.55 ) }
    dend_58 { pt3dadd( 170.425, -19.6969, -58.264, 0.28 ) }
    dend_58 { pt3dadd( 171.494, -20.3684, -59.1543, 0.55 ) }
    dend_58 { pt3dadd( 172.435, -20.9212, -59.8673, 0.55 ) }
    dend_58 { pt3dadd( 176.117, -22.5049, -61.367, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 9/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 17.9986, 14.3247, -34.1602, 0.83 ) }
    dend_54 { pt3dadd( 17.1128, 11.6658, -40.9204, 0.83 ) }
    dend_54 { pt3dadd( 16.4511, 10.3733, -47.5332, 0.55 ) }
    dend_54 { pt3dadd( 15.9666, 9.83884, -51.4002, 0.55 ) }
    dend_54 { pt3dadd( 15.5461, 9.48564, -54.1988, 0.55 ) }
    dend_54 { pt3dadd( 14.3388, 8.74836, -61.2623, 0.83 ) }
    dend_54 { pt3dadd( 12.0156, 7.71117, -72.5306, 1.11 ) }
    dend_54 { pt3dadd( 8.94833, 7.11598, -85.4754, 0.83 ) }
    dend_54 { pt3dadd( 7.6722, 7.19719, -89.9802, 0.83 ) }
    dend_54 { pt3dadd( 7.05543, 7.3162, -91.9002, 0.83 ) }
    dend_54 { pt3dadd( 4.94193, 7.90465, -97.915, 1.38 ) }
    dend_54 { pt3dadd( 3.37649, 8.40765, -101.69, 0.55 ) }
    dend_54 { pt3dadd( -0.0590295, 9.48844, -108.429, 0.83 ) }
    dend_54 { pt3dadd( -1.11937, 9.68804, -110.216, 0.83 ) }
    dend_54 { pt3dadd( -5.23302, 10.5319, -117.01, 0.55 ) }
    dend_54 { pt3dadd( -6.78483, 10.9341, -119.614, 0.83 ) }
    dend_54 { pt3dadd( -7.75901, 11.2427, -121.427, 0.55 ) }
    dend_54 { pt3dadd( -10.7641, 12.5279, -127.972, 0.83 ) }
    dend_54 { pt3dadd( -12.6467, 13.5844, -132.493, 0.83 ) }
    dend_54 { pt3dadd( -13.5555, 14.2559, -134.799, 0.83 ) }
    dend_54 { pt3dadd( -14.843, 15.6584, -138.217, 0.83 ) }
    dend_54 { pt3dadd( -17.981, 20.4003, -147.352, 0.55 ) }
    dend_54 { pt3dadd( -19.3667, 23.3553, -151.827, 0.83 ) }
    dend_54 { pt3dadd( -19.9509, 25.1325, -153.973, 0.83 ) }
    dend_54 { pt3dadd( -20.7252, 27.9463, -156.926, 0.83 ) }
    dend_54 { pt3dadd( -21.5983, 31.4467, -160.085, 0.83 ) }
    dend_54 { pt3dadd( -22.311, 34.0377, -161.906, 0.83 ) }
    dend_54 { pt3dadd( -22.9692, 36.2593, -163.051, 0.83 ) }
    dend_54 { pt3dadd( -24.6825, 41.8899, -165.892, 0.83 ) }
    dend_54 { pt3dadd( -25.8761, 45.4269, -167.8, 0.83 ) }
    dend_54 { pt3dadd( -27.0543, 49.2857, -170.019, 0.83 ) }
    dend_54 { pt3dadd( -27.799, 51.4735, -171.325, 0.55 ) }
    dend_54 { pt3dadd( -28.9764, 54.335, -173.145, 0.83 ) }
    dend_54 { pt3dadd( -30.256, 56.9432, -174.991, 0.83 ) }
    dend_54 { pt3dadd( -30.9588, 58.4073, -176.134, 0.83 ) }
    dend_54 { pt3dadd( -32.6051, 61.5843, -179.032, 0.83 ) }
    dend_54 { pt3dadd( -33.746, 63.4371, -180.953, 0.83 ) }
    dend_54 { pt3dadd( -34.876, 65.2333, -182.863, 0.83 ) }
    dend_54 { pt3dadd( -37.0485, 68.7392, -186.605, 0.83 ) }
    dend_54 { pt3dadd( -39.547, 72.9108, -190.94, 0.83 ) }
    dend_54 { pt3dadd( -40.7643, 75.0958, -193.152, 0.83 ) }
    dend_54 { pt3dadd( -43.1392, 79.4654, -197.363, 0.83 ) }
    dend_54 { pt3dadd( -43.7587, 80.8201, -198.624, 0.83 ) }
    dend_54 { pt3dadd( -45.0847, 84.1611, -201.538, 0.83 ) }
    dend_54 { pt3dadd( -45.7518, 85.9393, -202.938, 0.83 ) }
    dend_54 { pt3dadd( -46.7335, 88.3503, -204.787, 0.55 ) }
    dend_54 { pt3dadd( -46.9991, 89.1976, -205.474, 0.55 ) }
    dend_54 { pt3dadd( -47.6499, 93.0332, -208.311, 0.83 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 57/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 17.9986, 14.3247, -34.1602, 0.83 ) }
    dend_53 { pt3dadd( 19.0077, 14.4886, -37.2596, 0.55 ) }
    dend_53 { pt3dadd( 20.6532, 14.6388, -44.0876, 0.83 ) }
    dend_53 { pt3dadd( 21.5275, 14.5317, -47.9586, 0.55 ) }
    dend_53 { pt3dadd( 23.1622, 14.226, -54.9292, 0.83 ) }
    dend_53 { pt3dadd( 24.0913, 14.0764, -59.2363, 0.55 ) }
    dend_53 { pt3dadd( 24.9475, 14.0093, -63.293, 0.83 ) }
    dend_53 { pt3dadd( 26.9213, 13.6274, -74.507, 0.83 ) }
    dend_53 { pt3dadd( 27.435, 13.4971, -77.5909, 0.55 ) }
    dend_53 { pt3dadd( 27.6671, 13.3846, -79.4142, 0.83 ) }
    dend_53 { pt3dadd( 28.7704, 12.2634, -90.7269, 0.28 ) }
    dend_53 { pt3dadd( 28.8808, 12.036, -92.5498, 0.55 ) }
    dend_53 { pt3dadd( 29.4722, 9.94974, -106.088, 0.55 ) }
    dend_53 { pt3dadd( 29.5201, 9.68244, -107.587, 0.55 ) }
    dend_53 { pt3dadd( 29.6485, 7.55259, -118.348, 0.28 ) }
    dend_53 { pt3dadd( 29.6379, 6.75721, -121.519, 0.55 ) }
    dend_53 { pt3dadd( 29.4797, 3.46462, -131.793, 0.28 ) }
    dend_53 { pt3dadd( 29.3876, 2.59022, -134.251, 0.55 ) }
    dend_53 { pt3dadd( 28.8001, -0.253229, -141.648, 0.83 ) }
    dend_53 { pt3dadd( 28.4409, -1.2677, -144.397, 0.28 ) }
    dend_53 { pt3dadd( 27.8872, -2.44378, -147.401, 0.55 ) }
    dend_53 { pt3dadd( 26.5993, -4.5541, -152.885, 0.28 ) }
    dend_53 { pt3dadd( 25.3779, -5.97987, -156.431, 0.83 ) }
    dend_53 { pt3dadd( 23.5932, -7.56847, -160.763, 0.55 ) }
    dend_53 { pt3dadd( 21.2004, -9.48562, -165.687, 0.28 ) }
    dend_53 { pt3dadd( 19.9662, -10.3462, -168.208, 0.55 ) }
    dend_53 { pt3dadd( 16.8756, -12.324, -174.21, 0.28 ) }
    dend_53 { pt3dadd( 15.8382, -12.9902, -176.281, 0.55 ) }
    dend_53 { pt3dadd( 13.5705, -14.6493, -181.153, 0.28 ) }
    dend_53 { pt3dadd( 12.8196, -15.2587, -182.995, 0.83 ) }
    dend_53 { pt3dadd( 9.99198, -17.7058, -190.566, 0.28 ) }
    dend_53 { pt3dadd( 8.88049, -18.6931, -193.721, 0.55 ) }
    dend_53 { pt3dadd( 6.70461, -20.7897, -200.358, 0.28 ) }
    dend_53 { pt3dadd( 6.27813, -21.2642, -201.975, 0.55 ) }
    dend_53 { pt3dadd( 3.62409, -24.585, -213.126, 0.28 ) }
    dend_53 { pt3dadd( 2.94322, -25.4348, -216.11, 0.55 ) }
    dend_53 { pt3dadd( 2.29017, -26.316, -219.19, 0.28 ) }
    dend_53 { pt3dadd( 1.38841, -27.6775, -224.204, 0.55 ) }
    dend_53 { pt3dadd( -0.944053, -31.6841, -239.025, 0.28 ) }
    dend_53 { pt3dadd( -1.30014, -32.3447, -241.62, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 97/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -94.0627, 139.456, -22.1278, 0.55 ) }
    dend_47 { pt3dadd( -92.1113, 141.578, -24.097, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 99/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -94.0627, 139.456, -22.1278, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_46 { pt3dadd( -94.2741, 140.531, -21.6259, 0.55 ) }
    dend_46 { pt3dadd( -94.3445, 141.654, -20.9185, 0.28 ) }
    dend_46 { pt3dadd( -94.4067, 142.854, -20.1633, 0.55 ) }
    dend_46 { pt3dadd( -94.4903, 143.581, -19.6754, 0.28 ) }
    dend_46 { pt3dadd( -94.6177, 144.818, -18.7664, 0.55 ) }
    dend_46 { pt3dadd( -94.8107, 146.375, -17.5232, 0.28 ) }
    dend_46 { pt3dadd( -95.0298, 147.559, -16.3767, 0.55 ) }
    dend_46 { pt3dadd( -95.2036, 148.171, -15.7163, 0.28 ) }
    dend_46 { pt3dadd( -95.6165, 149.122, -14.6023, 0.55 ) }
    dend_46 { pt3dadd( -96.5431, 150.755, -12.7927, 0.28 ) }
    dend_46 { pt3dadd( -96.9251, 151.291, -12.237, 0.55 ) }
    dend_46 { pt3dadd( -97.7216, 152.106, -11.4163, 0.55 ) }
    dend_46 { pt3dadd( -98.3501, 152.605, -10.8793, 0.55 ) }
    dend_46 { pt3dadd( -99.2543, 153.279, -10.0951, 0.28 ) }
    dend_46 { pt3dadd( -99.9924, 153.739, -9.6742, 0.55 ) }
    dend_46 { pt3dadd( -100.849, 158.212, -5.34223, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 16/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 33.6029, 45.636, -31.9814, 0.83 ) }
    dend_41 { pt3dadd( 34.641, 49.208, -33.6668, 0.55 ) }
    dend_41 { pt3dadd( 35.1596, 50.8657, -34.6782, 0.83 ) }
    dend_41 { pt3dadd( 35.7385, 52.6731, -35.6124, 0.83 ) }
    dend_41 { pt3dadd( 36.3119, 54.6842, -36.5343, 0.55 ) }
    dend_41 { pt3dadd( 36.6814, 55.8402, -37.0357, 0.83 ) }
    dend_41 { pt3dadd( 37.5687, 58.466, -38.0952, 0.55 ) }
    dend_41 { pt3dadd( 38.4295, 61.0402, -38.9817, 0.83 ) }
    dend_41 { pt3dadd( 39.9353, 65.9804, -40.5733, 0.83 ) }
    dend_41 { pt3dadd( 40.386, 67.6066, -41.0027, 0.83 ) }
    dend_41 { pt3dadd( 41.565, 71.6473, -41.795, 0.83 ) }
    dend_41 { pt3dadd( 42.1699, 73.7779, -42.0634, 0.83 ) }
    dend_41 { pt3dadd( 43.0745, 76.9461, -42.2038, 0.83 ) }
    dend_41 { pt3dadd( 43.8219, 79.787, -42.2571, 0.83 ) }
    dend_41 { pt3dadd( 44.6793, 83.45, -42.305, 0.83 ) }
    dend_41 { pt3dadd( 45.716, 87.9653, -42.313, 0.83 ) }
    dend_41 { pt3dadd( 46.4398, 91.5597, -42.2371, 0.83 ) }
    dend_41 { pt3dadd( 47.0902, 94.729, -42.1556, 0.83 ) }
    dend_41 { pt3dadd( 47.9937, 98.7986, -42.02, 0.83 ) }
    dend_41 { pt3dadd( 48.8021, 102.888, -41.9065, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 36/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 33.6029, 45.636, -31.9814, 0.83 ) }
    dend_40 { pt3dadd( 34.7846, 45.898, -31.7782, 0.28 ) }
    dend_40 { pt3dadd( 35.7355, 46.1164, -31.7314, 0.55 ) }
    dend_40 { pt3dadd( 37.2528, 46.4888, -31.8367, 0.28 ) }
    dend_40 { pt3dadd( 40.1649, 47.1499, -32.2075, 0.55 ) }
    dend_40 { pt3dadd( 42.5899, 47.5922, -32.5859, 0.55 ) }
    dend_40 { pt3dadd( 44.2177, 47.8014, -32.9092, 0.28 ) }
    dend_40 { pt3dadd( 46.4797, 47.9007, -33.4661, 0.55 ) }
    dend_40 { pt3dadd( 48.5991, 47.8103, -34.0679, 0.28 ) }
    dend_40 { pt3dadd( 49.7418, 47.6571, -34.4547, 0.55 ) }
    dend_40 { pt3dadd( 50.961, 47.3859, -34.9715, 0.28 ) }
    dend_40 { pt3dadd( 52.6429, 46.8242, -35.7084, 0.55 ) }
    dend_40 { pt3dadd( 55.2511, 45.7175, -36.7247, 0.28 ) }
    dend_40 { pt3dadd( 56.3969, 45.0967, -37.1377, 0.55 ) }
    dend_40 { pt3dadd( 57.6443, 44.3503, -37.587, 0.28 ) }
    dend_40 { pt3dadd( 59.1076, 43.4597, -38.1442, 0.55 ) }
    dend_40 { pt3dadd( 60.8399, 42.3903, -38.8322, 0.28 ) }
    dend_40 { pt3dadd( 63.3473, 40.6501, -39.8472, 0.28 ) }
    dend_40 { pt3dadd( 64.1518, 39.9439, -40.267, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 55/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 17.2474, -73.1575, -39.9486, 0.83 ) }
    dend_26 { pt3dadd( 18.1341, -74.3493, -39.7087, 0.55 ) }
    dend_26 { pt3dadd( 18.9245, -75.5523, -39.4491, 0.55 ) }
    dend_26 { pt3dadd( 19.9989, -77.2323, -39.056, 0.55 ) }
    dend_26 { pt3dadd( 20.7434, -78.3997, -38.8921, 0.55 ) }
    dend_26 { pt3dadd( 21.2963, -79.2079, -38.8696, 0.55 ) }
    dend_26 { pt3dadd( 22.0062, -80.2113, -38.9014, 0.55 ) }
    dend_26 { pt3dadd( 22.8439, -81.4179, -39.0374, 0.28 ) }
    dend_26 { pt3dadd( 23.2378, -81.9682, -39.1371, 0.55 ) }
    dend_26 { pt3dadd( 24.6529, -83.9398, -39.6865, 0.28 ) }
    dend_26 { pt3dadd( 25.7911, -85.4163, -40.2439, 0.28 ) }
    dend_26 { pt3dadd( 26.2691, -85.9778, -40.5009, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 67/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.2474, -73.1575, -39.9486, 0.83 ) }
    dend_25 { pt3dadd( 17.6443, -74.5868, -40.4281, 1.11 ) }
    dend_25 { pt3dadd( 17.9927, -75.5796, -40.9093, 0.28 ) }
    dend_25 { pt3dadd( 18.3488, -76.5698, -41.4584, 0.83 ) }
    dend_25 { pt3dadd( 18.9326, -78.0996, -42.2887, 0.83 ) }
    dend_25 { pt3dadd( 20.4413, -81.9246, -44.2356, 0.28 ) }
    dend_25 { pt3dadd( 20.6737, -82.3975, -44.455, 0.83 ) }
    dend_25 { pt3dadd( 22.1151, -84.7958, -45.5955, 0.28 ) }
    dend_25 { pt3dadd( 22.693, -85.6008, -46.0104, 0.55 ) }
    dend_25 { pt3dadd( 24.0593, -87.2963, -46.8788, 0.55 ) }
    dend_25 { pt3dadd( 24.8265, -88.192, -47.348, 0.55 ) }
    dend_25 { pt3dadd( 26.9571, -90.7506, -48.6782, 0.55 ) }
    dend_25 { pt3dadd( 27.6141, -91.6164, -49.1181, 0.55 ) }
    dend_25 { pt3dadd( 29.1579, -93.7731, -50.3398, 0.28 ) }
    dend_25 { pt3dadd( 29.7063, -94.6956, -51.0065, 0.55 ) }
    dend_25 { pt3dadd( 30.3727, -96.1121, -52.193, 0.55 ) }
    dend_25 { pt3dadd( 30.8684, -97.5734, -53.3871, 0.55 ) }
    dend_25 { pt3dadd( 31.1726, -99.349, -54.785, 0.55 ) }
    dend_25 { pt3dadd( 31.397, -101.411, -56.5825, 0.55 ) }
    dend_25 { pt3dadd( 31.5725, -103.517, -58.4359, 0.28 ) }
    dend_25 { pt3dadd( 31.7121, -104.895, -59.6956, 0.55 ) }
    dend_25 { pt3dadd( 31.9543, -106.824, -61.3888, 0.55 ) }
    dend_25 { pt3dadd( 32.0952, -108.177, -62.5958, 0.55 ) }
    dend_25 { pt3dadd( 32.6971, -113.196, -67.1087, 0.55 ) }
    dend_25 { pt3dadd( 32.8745, -114.416, -68.1336, 0.55 ) }
    dend_25 { pt3dadd( 33.1863, -116.116, -69.5753, 0.28 ) }
    dend_25 { pt3dadd( 33.3651, -117.234, -70.4858, 0.55 ) }
    dend_25 { pt3dadd( 33.7289, -119.028, -71.9821, 0.55 ) }
    dend_25 { pt3dadd( 34.2444, -121.403, -73.8682, 0.28 ) }
    dend_25 { pt3dadd( 34.3996, -122.121, -74.3937, 0.55 ) }
    dend_25 { pt3dadd( 34.715, -123.549, -75.4723, 0.28 ) }
    dend_25 { pt3dadd( 35.5058, -126.511, -77.7856, 0.55 ) }
    dend_25 { pt3dadd( 36.8004, -130.675, -81.2332, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_25 { pt3dadd( 37.3037, -131.988, -82.3115, 0.55 ) }
    dend_25 { pt3dadd( 37.9529, -133.49, -83.5857, 0.28 ) }
    dend_25 { pt3dadd( 38.3625, -134.326, -84.2917, 0.55 ) }
    dend_25 { pt3dadd( 39.5146, -136.174, -85.7386, 0.28 ) }
    dend_25 { pt3dadd( 40.878, -137.648, -86.9444, 0.55 ) }
    dend_25 { pt3dadd( 42.2991, -138.902, -87.8271, 0.28 ) }
    dend_25 { pt3dadd( 43.0459, -139.434, -88.2297, 0.55 ) }
    dend_25 { pt3dadd( 44.4714, -140.298, -88.9715, 0.55 ) }
    dend_25 { pt3dadd( 46.6464, -141.407, -89.9893, 0.55 ) }
    dend_25 { pt3dadd( 49.5702, -142.722, -91.323, 0.55 ) }
    dend_25 { pt3dadd( 51.5049, -143.53, -92.2142, 0.28 ) }
    dend_25 { pt3dadd( 53.3592, -144.29, -93.2623, 0.55 ) }
    dend_25 { pt3dadd( 55.0543, -144.98, -94.3102, 0.28 ) }
    dend_25 { pt3dadd( 56.3867, -145.549, -95.2151, 0.55 ) }
    dend_25 { pt3dadd( 58.5403, -146.617, -96.9753, 0.28 ) }
    dend_25 { pt3dadd( 59.55, -147.25, -97.891, 0.55 ) }
    dend_25 { pt3dadd( 61.5712, -148.811, -100.16, 0.28 ) }
    dend_25 { pt3dadd( 62.0176, -149.267, -100.774, 0.28 ) }
    dend_25 { pt3dadd( 62.8039, -150.147, -101.952, 0.55 ) }
    dend_25 { pt3dadd( 64.9907, -152.828, -105.548, 0.28 ) }
    dend_25 { pt3dadd( 65.5221, -153.531, -106.462, 0.55 ) }
    dend_25 { pt3dadd( 67.7323, -156.676, -110.558, 0.28 ) }
    dend_25 { pt3dadd( 68.9161, -158.585, -112.885, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -14.3574, -54.5804, -14.9959, 1.66 ) }
    dend_18 { pt3dadd( -16.7937, -57.6704, -20.0753, 1.38 ) }
    dend_18 { pt3dadd( -18.8924, -60.3323, -24.4511, 1.38 ) }
    dend_18 { pt3dadd( -20.9082, -62.8889, -28.6537, 1.11 ) }
    dend_18 { pt3dadd( -22.1524, -64.4669, -31.2479, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 28/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.3574, -54.5804, -14.9959, 1.66 ) }
    dend_17 { pt3dadd( -19.5705, -54.9786, -16.6597, 0.83 ) }
    dend_17 { pt3dadd( -22.3963, -55.3159, -17.8303, 0.55 ) }
    dend_17 { pt3dadd( -24.375, -55.6269, -18.6709, 0.55 ) }
    dend_17 { pt3dadd( -30.06, -57.0219, -21.1435, 0.55 ) }
    dend_17 { pt3dadd( -35.4964, -58.4734, -23.5503, 0.55 ) }
    dend_17 { pt3dadd( -36.7196, -58.845, -24.0757, 0.55 ) }
    dend_17 { pt3dadd( -40.8861, -60.3223, -26.0429, 0.55 ) }
    dend_17 { pt3dadd( -43.6522, -61.3631, -27.2937, 0.55 ) }
    dend_17 { pt3dadd( -49.6762, -63.8376, -29.6907, 0.55 ) }
    dend_17 { pt3dadd( -53.316, -65.6212, -30.912, 0.55 ) }
    dend_17 { pt3dadd( -56.1464, -67.0894, -31.7048, 0.55 ) }
    dend_17 { pt3dadd( -59.2249, -68.6174, -32.3875, 0.55 ) }
    dend_17 { pt3dadd( -63.2054, -70.3851, -32.7716, 0.55 ) }
    dend_17 { pt3dadd( -64.9199, -71.0299, -32.7811, 0.28 ) }
    dend_17 { pt3dadd( -65.5753, -71.2294, -32.7098, 0.55 ) }
    dend_17 { pt3dadd( -68.9582, -72.2863, -32.1054, 0.55 ) }
    dend_17 { pt3dadd( -72.6232, -73.341, -31.3261, 0.55 ) }
    dend_17 { pt3dadd( -77.1133, -74.4786, -30.1837, 0.55 ) }
    dend_17 { pt3dadd( -80.225, -75.256, -29.3642, 0.55 ) }
    dend_17 { pt3dadd( -81.2779, -75.4734, -29.1105, 0.28 ) }
    dend_17 { pt3dadd( -84.6218, -76.134, -28.4244, 0.55 ) }
    dend_17 { pt3dadd( -86.728, -76.4535, -28.0624, 0.28 ) }
    dend_17 { pt3dadd( -89.0308, -76.6927, -27.694, 0.28 ) }
    dend_17 { pt3dadd( -92.8813, -77.004, -27.1923, 0.55 ) }
    dend_17 { pt3dadd( -94.8189, -77.1842, -26.9335, 0.55 ) }
    dend_17 { pt3dadd( -98.4162, -77.4268, -26.2162, 0.55 ) }
    dend_17 { pt3dadd( -102.433, -77.5074, -25.2279, 0.28 ) }
    dend_17 { pt3dadd( -105.038, -77.5367, -24.4838, 0.55 ) }
    dend_17 { pt3dadd( -106.83, -77.5845, -23.9517, 0.28 ) }
    dend_17 { pt3dadd( -109.247, -77.5802, -23.2258, 0.55 ) }
    dend_17 { pt3dadd( -112.926, -77.656, -22.2579, 0.28 ) }
    dend_17 { pt3dadd( -115.714, -77.6691, -21.7229, 0.55 ) }
    dend_17 { pt3dadd( -117.261, -77.7285, -21.6568, 0.28 ) }
    dend_17 { pt3dadd( -119.258, -77.8029, -21.8427, 0.83 ) }
    dend_17 { pt3dadd( -122.179, -78.1525, -22.6294, 0.28 ) }
    dend_17 { pt3dadd( -123.878, -78.4763, -23.269, 0.55 ) }
    dend_17 { pt3dadd( -126.245, -79.1139, -24.3258, 0.28 ) }
    dend_17 { pt3dadd( -127.321, -79.5291, -24.8332, 0.55 ) }
    dend_17 { pt3dadd( -128.643, -80.1747, -25.4245, 0.28 ) }
    dend_17 { pt3dadd( -130.938, -81.4824, -26.5396, 0.55 ) }
    dend_17 { pt3dadd( -132.925, -82.7243, -27.5825, 0.28 ) }
    dend_17 { pt3dadd( -133.412, -82.9889, -27.8526, 0.55 ) }
    dend_17 { pt3dadd( -134.965, -83.8024, -28.8487, 0.28 ) }
    dend_17 { pt3dadd( -136.641, -84.6071, -29.9972, 0.55 ) }
    dend_17 { pt3dadd( -140.017, -86.1402, -32.4865, 0.28 ) }
    dend_17 { pt3dadd( -141.411, -86.7646, -33.5372, 0.83 ) }
    dend_17 { pt3dadd( -145.681, -88.5056, -36.946, 0.28 ) }
    dend_17 { pt3dadd( -147.86, -89.2565, -38.6274, 0.55 ) }
    dend_17 { pt3dadd( -148.187, -89.3474, -38.865, 1.11 ) }
    dend_17 { pt3dadd( -149.708, -89.7234, -39.922, 0.28 ) }
    dend_17 { pt3dadd( -151.842, -90.171, -41.2918, 0.55 ) }
    dend_17 { pt3dadd( -154.579, -90.6761, -42.9278, 0.28 ) }
    dend_17 { pt3dadd( -155.546, -90.8391, -43.4559, 0.55 ) }
    dend_17 { pt3dadd( -160.219, -91.5151, -45.8008, 0.28 ) }
    dend_17 { pt3dadd( -162.339, -91.7955, -46.8689, 0.55 ) }
    dend_17 { pt3dadd( -164.796, -92.0742, -48.0855, 0.28 ) }
    dend_17 { pt3dadd( -166.779, -92.3365, -49.1115, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 86/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -85.6456, -78.8042, -12.9217, 0.55 ) }
    dend_13 { pt3dadd( -87.7497, -79.9814, -10.2942, 0.55 ) }
    dend_13 { pt3dadd( -88.8341, -80.5695, -8.97784, 0.28 ) }
    dend_13 { pt3dadd( -90.9001, -81.7214, -6.39201, 0.55 ) }
    dend_13 { pt3dadd( -94.9882, -84.1579, -1.07825, 0.28 ) }
    dend_13 { pt3dadd( -96.5614, -85.1432, 0.84497, 0.55 ) }
    dend_13 { pt3dadd( -100.192, -87.4811, 5.06665, 0.28 ) }
    dend_13 { pt3dadd( -101.035, -88.0495, 6.05494, 0.55 ) }
    dend_13 { pt3dadd( -102.401, -88.9647, 7.65039, 0.55 ) }
    dend_13 { pt3dadd( -104.46, -90.4365, 9.95171, 0.55 ) }
    dend_13 { pt3dadd( -106.76, -92.1702, 12.0408, 0.28 ) }
    dend_13 { pt3dadd( -107.634, -92.9023, 12.8681, 0.28 ) }
    dend_13 { pt3dadd( -109.547, -94.8005, 14.0819, 0.55 ) }
    dend_13 { pt3dadd( -116.462, -98.9958, 21.2282, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -123.067, -103.076, 28.7206, 0.55 ) }
    dend_13 { pt3dadd( -129.542, -104.818, 37.0668, 0.55 ) }
    dend_13 { pt3dadd( -135.002, -107.869, 45.8099, 0.55 ) }
    dend_13 { pt3dadd( -140.74, -111.559, 54.1501, 0.55 ) }
    dend_13 { pt3dadd( -147.846, -116.145, 60.8816, 0.55 ) }
    dend_13 { pt3dadd( -153.038, -121.993, 68.4461, 0.55 ) }
    dend_13 { pt3dadd( -157.584, -128.146, 76.2087, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -85.6456, -78.8042, -12.9217, 0.55 ) }
    dend_12 { pt3dadd( -87.4509, -78.372, -13.3425, 0.55 ) }
    dend_12 { pt3dadd( -89.6932, -77.8354, -13.8651, 0.83 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 10/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 144.097, 69.9398, 100.254, 0.55 ) }
    dend_71 { pt3dadd( 154.803, 71.8167, 106.551, 0.55 ) }
    dend_71 { pt3dadd( 163.955, 73.1179, 115.052, 0.55 ) }
    dend_71 { pt3dadd( 171.762, 74.9753, 124.725, 0.55 ) }
    dend_71 { pt3dadd( 177.78, 78.5394, 135.221, 0.55 ) }
    dend_71 { pt3dadd( 182.718, 82.6281, 146.107, 0.55 ) }
    dend_71 { pt3dadd( 187.839, 85.7889, 157.182, 0.55 ) }
    dend_71 { pt3dadd( 193.244, 91.4219, 167.186, 0.55 ) }
    dend_71 { pt3dadd( 198.081, 98.1896, 176.842, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 144.097, 69.9398, 100.254, 0.55 ) }
    dend_70 { pt3dadd( 151.339, 71.2054, 104.413, 0.55 ) }
    dend_70 { pt3dadd( 158.174, 72.2117, 109.269, 0.55 ) }
    dend_70 { pt3dadd( 164.772, 72.2528, 114.533, 0.55 ) }
    dend_70 { pt3dadd( 171.209, 71.74, 119.97, 0.55 ) }
    dend_70 { pt3dadd( 177.505, 71.6785, 125.591, 0.55 ) }
    dend_70 { pt3dadd( 184.029, 71.0736, 130.913, 0.55 ) }
    dend_70 { pt3dadd( 191.285, 69.7623, 135.046, 0.55 ) }
    dend_70 { pt3dadd( 198.377, 68.6395, 139.499, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 28/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -47.6499, 93.0332, -208.311, 0.83 ) }
    dend_56 { pt3dadd( -49.978, 93.194, -212.836, 0.55 ) }
    dend_56 { pt3dadd( -51.9185, 93.0856, -216.886, 0.28 ) }
    dend_56 { pt3dadd( -54.0736, 92.7764, -221.576, 0.55 ) }
    dend_56 { pt3dadd( -55.4094, 92.398, -225.058, 0.55 ) }
    dend_56 { pt3dadd( -57.3607, 91.7352, -230.587, 0.55 ) }
    dend_56 { pt3dadd( -58.2357, 91.4381, -233.066, 0.55 ) }
    dend_56 { pt3dadd( -59.649, 90.6248, -237.683, 0.28 ) }
    dend_56 { pt3dadd( -59.8976, 90.4032, -238.663, 0.55 ) }
    dend_56 { pt3dadd( -61.1466, 88.812, -244.514, 0.55 ) }
    dend_56 { pt3dadd( -61.9528, 87.3648, -249.9, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 39/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -47.6499, 93.0332, -208.311, 0.83 ) }
    dend_55 { pt3dadd( -46.457, 96.1658, -209.664, 0.83 ) }
    dend_55 { pt3dadd( -45.9251, 98.0754, -210.71, 0.55 ) }
    dend_55 { pt3dadd( -45.5694, 99.9404, -211.733, 0.83 ) }
    dend_55 { pt3dadd( -45.3396, 101.288, -212.464, 0.55 ) }
    dend_55 { pt3dadd( -45.063, 103.097, -213.408, 0.83 ) }
    dend_55 { pt3dadd( -44.793, 105.832, -214.842, 0.83 ) }
    dend_55 { pt3dadd( -44.8531, 108.474, -216.338, 0.55 ) }
    dend_55 { pt3dadd( -45.0047, 110.299, -217.266, 0.83 ) }
    dend_55 { pt3dadd( -45.3638, 112.419, -218.326, 0.83 ) }
    dend_55 { pt3dadd( -45.6736, 113.762, -219.005, 0.28 ) }
    dend_55 { pt3dadd( -46.1442, 115.652, -219.852, 0.55 ) }
    dend_55 { pt3dadd( -46.6659, 118.421, -220.992, 0.55 ) }
    dend_55 { pt3dadd( -46.9579, 120.473, -221.675, 0.55 ) }
    dend_55 { pt3dadd( -47.1035, 122.763, -222.436, 0.28 ) }
    dend_55 { pt3dadd( -47.1004, 124.603, -223.081, 0.55 ) }
    dend_55 { pt3dadd( -46.9382, 127.331, -224.081, 0.55 ) }
    dend_55 { pt3dadd( -46.5565, 131.004, -225.508, 0.83 ) }
    dend_55 { pt3dadd( -46.179, 134.012, -226.737, 0.83 ) }
    dend_55 { pt3dadd( -45.8049, 136.838, -228.0, 0.83 ) }
    dend_55 { pt3dadd( -45.3854, 139.862, -229.536, 0.55 ) }
    dend_55 { pt3dadd( -45.1673, 141.759, -230.641, 0.83 ) }
    dend_55 { pt3dadd( -45.0203, 143.742, -231.95, 0.28 ) }
    dend_55 { pt3dadd( -44.9989, 144.594, -232.535, 0.55 ) }
    dend_55 { pt3dadd( -45.0628, 145.941, -233.577, 0.28 ) }
    dend_55 { pt3dadd( -45.4417, 148.753, -235.75, 0.55 ) }
    dend_55 { pt3dadd( -45.592, 149.557, -236.359, 0.55 ) }
    dend_55 { pt3dadd( -45.8632, 151.107, -237.439, 0.28 ) }
    dend_55 { pt3dadd( -45.9954, 152.052, -238.105, 0.55 ) }
    dend_55 { pt3dadd( -46.2698, 155.465, -240.498, 0.28 ) }
    dend_55 { pt3dadd( -46.2952, 156.639, -241.312, 0.55 ) }
    dend_55 { pt3dadd( -46.2769, 157.938, -242.198, 0.28 ) }
    dend_55 { pt3dadd( -46.3598, 159.985, -243.765, 0.55 ) }
    dend_55 { pt3dadd( -46.5574, 162.93, -246.149, 0.28 ) }
    dend_55 { pt3dadd( -46.7837, 164.672, -247.621, 0.55 ) }
    dend_55 { pt3dadd( -46.9824, 166.148, -248.917, 0.28 ) }
    dend_55 { pt3dadd( -47.2502, 167.721, -250.478, 0.55 ) }
    dend_55 { pt3dadd( -47.8132, 170.329, -253.162, 0.28 ) }
    dend_55 { pt3dadd( -47.9815, 170.886, -253.762, 0.55 ) }
    dend_55 { pt3dadd( -48.8543, 173.144, -256.04, 0.28 ) }
    dend_55 { pt3dadd( -49.3913, 174.294, -257.284, 0.83 ) }
    dend_55 { pt3dadd( -50.1013, 175.783, -258.927, 0.28 ) }
    dend_55 { pt3dadd( -50.5211, 176.806, -260.138, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 48.8021, 102.888, -41.9065, 0.83 ) }
    dend_43 { pt3dadd( 49.6932, 105.264, -41.1807, 0.83 ) }
    dend_43 { pt3dadd( 50.4089, 107.456, -40.4111, 0.83 ) }
    dend_43 { pt3dadd( 51.245, 110.095, -39.4063, 0.83 ) }
    dend_43 { pt3dadd( 52.2009, 112.935, -38.2851, 0.83 ) }
    dend_43 { pt3dadd( 53.3654, 116.303, -36.9086, 0.83 ) }
    dend_43 { pt3dadd( 54.5897, 119.846, -35.4521, 0.83 ) }
    dend_43 { pt3dadd( 55.7371, 123.418, -33.8723, 0.83 ) }
    dend_43 { pt3dadd( 56.7043, 126.391, -32.6016, 0.83 ) }
    dend_43 { pt3dadd( 57.6592, 129.221, -31.513, 0.83 ) }
    dend_43 { pt3dadd( 58.2842, 130.907, -31.0137, 0.55 ) }
    dend_43 { pt3dadd( 58.7566, 132.117, -30.7942, 0.83 ) }
    dend_43 { pt3dadd( 59.4235, 133.76, -30.703, 0.55 ) }
    dend_43 { pt3dadd( 60.7709, 136.894, -31.0227, 0.83 ) }
    dend_43 { pt3dadd( 62.0527, 139.989, -31.7172, 0.83 ) }
    dend_43 { pt3dadd( 63.5239, 143.669, -32.7715, 0.83 ) }
    dend_43 { pt3dadd( 64.6525, 146.307, -33.5204, 0.83 ) }
    dend_43 { pt3dadd( 66.3052, 150.04, -34.4995, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 67.9936, 153.861, -35.459, 0.55 ) }
    dend_43 { pt3dadd( 69.1567, 156.496, -36.1719, 0.55 ) }
    dend_43 { pt3dadd( 70.6339, 159.897, -37.3348, 0.55 ) }
    dend_43 { pt3dadd( 72.197, 163.726, -38.7329, 0.55 ) }
    dend_43 { pt3dadd( 73.1348, 166.071, -39.5847, 0.55 ) }
    dend_43 { pt3dadd( 73.6877, 167.518, -40.1496, 0.55 ) }
    dend_43 { pt3dadd( 76.0325, 173.935, -42.8551, 0.55 ) }
    dend_43 { pt3dadd( 77.2039, 177.383, -44.6088, 0.55 ) }
    dend_43 { pt3dadd( 77.5904, 178.715, -45.4211, 0.28 ) }
    dend_43 { pt3dadd( 77.9166, 180.056, -46.309, 0.55 ) }
    dend_43 { pt3dadd( 78.6459, 182.98, -48.2029, 0.55 ) }
    dend_43 { pt3dadd( 79.0431, 184.541, -49.0585, 0.55 ) }
    dend_43 { pt3dadd( 79.3876, 185.991, -49.6134, 0.28 ) }
    dend_43 { pt3dadd( 79.7788, 187.501, -49.9653, 0.55 ) }
    dend_43 { pt3dadd( 80.5658, 190.573, -50.3699, 0.28 ) }
    dend_43 { pt3dadd( 80.994, 192.252, -50.2571, 0.55 ) }
    dend_43 { pt3dadd( 81.4032, 193.84, -49.7818, 0.28 ) }
    dend_43 { pt3dadd( 81.7228, 194.974, -49.152, 0.55 ) }
    dend_43 { pt3dadd( 82.3134, 197.077, -47.5258, 0.28 ) }
    dend_43 { pt3dadd( 82.5861, 198.043, -46.6255, 0.55 ) }
    dend_43 { pt3dadd( 82.8005, 198.921, -45.5984, 0.28 ) }
    dend_43 { pt3dadd( 82.9375, 199.554, -44.7605, 0.55 ) }
    dend_43 { pt3dadd( 83.4258, 201.675, -41.721, 0.28 ) }
    dend_43 { pt3dadd( 83.7117, 202.682, -40.1374, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 24/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 48.8021, 102.888, -41.9065, 0.83 ) }
    dend_42 { pt3dadd( 47.3547, 104.586, -41.8305, 0.55 ) }
    dend_42 { pt3dadd( 46.669, 105.39, -41.7945, 0.28 ) }
    dend_42 { pt3dadd( 45.9945, 106.182, -41.7591, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -22.1524, -64.4669, -31.2479, 1.11 ) }
    dend_22 { pt3dadd( -22.4919, -69.0533, -29.7486, 0.83 ) }
    dend_22 { pt3dadd( -22.8481, -73.4544, -28.5074, 0.83 ) }
    dend_22 { pt3dadd( -23.5117, -78.1787, -27.5965, 0.55 ) }
    dend_22 { pt3dadd( -23.7138, -79.495, -27.4071, 0.83 ) }
    dend_22 { pt3dadd( -24.3658, -83.7459, -26.8174, 0.83 ) }
    dend_22 { pt3dadd( -24.6278, -85.7781, -26.5413, 0.83 ) }
    dend_22 { pt3dadd( -24.9278, -87.9072, -26.4055, 0.28 ) }
    dend_22 { pt3dadd( -25.7123, -93.2214, -26.2637, 0.83 ) }
    dend_22 { pt3dadd( -25.9279, -94.7088, -26.2852, 0.28 ) }
    dend_22 { pt3dadd( -26.1191, -96.3456, -26.2304, 0.55 ) }
    dend_22 { pt3dadd( -26.4691, -99.3872, -25.9545, 0.55 ) }
    dend_22 { pt3dadd( -26.5667, -100.546, -25.8277, 0.55 ) }
    dend_22 { pt3dadd( -26.6435, -102.278, -25.6137, 0.83 ) }
    dend_22 { pt3dadd( -26.7795, -105.324, -25.1692, 0.55 ) }
    dend_22 { pt3dadd( -27.053, -108.741, -24.7163, 0.55 ) }
    dend_22 { pt3dadd( -27.193, -110.355, -24.5206, 0.55 ) }
    dend_22 { pt3dadd( -27.4666, -114.339, -24.1379, 0.55 ) }
    dend_22 { pt3dadd( -27.4926, -115.968, -24.0512, 0.28 ) }
    dend_22 { pt3dadd( -27.4183, -119.225, -23.9902, 0.55 ) }
    dend_22 { pt3dadd( -27.37, -120.546, -24.0738, 0.55 ) }
    dend_22 { pt3dadd( -27.2534, -123.06, -24.3888, 0.55 ) }
    dend_22 { pt3dadd( -26.8501, -129.369, -25.436, 0.55 ) }
    dend_22 { pt3dadd( -26.6453, -131.626, -25.9619, 0.28 ) }
    dend_22 { pt3dadd( -26.53, -132.61, -26.2222, 0.55 ) }
    dend_22 { pt3dadd( -25.8245, -137.547, -27.6823, 0.83 ) }
    dend_22 { pt3dadd( -25.5191, -139.745, -28.3649, 0.55 ) }
    dend_22 { pt3dadd( -25.1324, -142.319, -29.2272, 0.55 ) }
    dend_22 { pt3dadd( -24.747, -145.151, -30.1665, 0.28 ) }
    dend_22 { pt3dadd( -24.6517, -146.117, -30.479, 0.55 ) }
    dend_22 { pt3dadd( -24.3821, -148.24, -31.1865, 0.55 ) }
    dend_22 { pt3dadd( -24.0887, -150.263, -31.8773, 0.55 ) }
    dend_22 { pt3dadd( -23.8139, -152.93, -32.8564, 0.55 ) }
    dend_22 { pt3dadd( -23.5937, -155.155, -33.6231, 0.83 ) }
    dend_22 { pt3dadd( -23.5346, -157.467, -34.3167, 0.55 ) }
    dend_22 { pt3dadd( -23.5551, -159.748, -34.922, 0.55 ) }
    dend_22 { pt3dadd( -23.677, -161.823, -35.3733, 0.55 ) }
    dend_22 { pt3dadd( -23.9565, -165.114, -35.9009, 0.55 ) }
    dend_22 { pt3dadd( -24.2819, -167.884, -36.1133, 0.55 ) }
    dend_22 { pt3dadd( -24.5632, -170.153, -36.1396, 0.83 ) }
    dend_22 { pt3dadd( -24.9422, -172.759, -36.064, 0.55 ) }
    dend_22 { pt3dadd( -25.4788, -176.066, -35.9195, 0.55 ) }
    dend_22 { pt3dadd( -25.9179, -179.388, -35.6772, 0.55 ) }
    dend_22 { pt3dadd( -26.2558, -182.463, -35.3574, 0.55 ) }
    dend_22 { pt3dadd( -26.4546, -185.09, -35.0772, 0.28 ) }
    dend_22 { pt3dadd( -26.4505, -186.501, -34.9741, 0.55 ) }
    dend_22 { pt3dadd( -26.3857, -187.713, -34.9329, 0.28 ) }
    dend_22 { pt3dadd( -26.054, -189.858, -34.9551, 0.55 ) }
    dend_22 { pt3dadd( -25.6955, -191.714, -35.0274, 0.28 ) }
    dend_22 { pt3dadd( -25.2721, -193.447, -35.1881, 0.83 ) }
    dend_22 { pt3dadd( -24.3627, -196.86, -35.5005, 0.55 ) }
    dend_22 { pt3dadd( -23.8335, -198.722, -35.6627, 0.55 ) }
    dend_22 { pt3dadd( -22.8425, -202.039, -35.9888, 0.83 ) }
    dend_22 { pt3dadd( -22.4231, -203.319, -36.1254, 0.28 ) }
    dend_22 { pt3dadd( -21.7096, -205.428, -36.3815, 0.55 ) }
    dend_22 { pt3dadd( -20.7564, -208.033, -36.6275, 0.28 ) }
    dend_22 { pt3dadd( -20.0839, -209.676, -36.7765, 0.55 ) }
    dend_22 { pt3dadd( -19.1786, -211.801, -36.9279, 0.28 ) }
    dend_22 { pt3dadd( -18.6908, -213.068, -37.0209, 0.83 ) }
    dend_22 { pt3dadd( -17.7939, -215.437, -37.1774, 0.55 ) }
    dend_22 { pt3dadd( -17.1344, -217.186, -37.2475, 0.55 ) }
    dend_22 { pt3dadd( -16.0542, -220.107, -37.3295, 0.83 ) }
    dend_22 { pt3dadd( -15.024, -223.028, -37.3214, 0.28 ) }
    dend_22 { pt3dadd( -14.1839, -225.486, -37.1221, 0.55 ) }
    dend_22 { pt3dadd( -13.542, -227.244, -36.8749, 0.28 ) }
    dend_22 { pt3dadd( -13.1805, -228.189, -36.6952, 0.55 ) }
    dend_22 { pt3dadd( -12.3179, -230.575, -36.169, 0.28 ) }
    dend_22 { pt3dadd( -11.9372, -231.551, -35.8768, 0.55 ) }
    dend_22 { pt3dadd( -10.5931, -234.378, -34.9178, 0.28 ) }
    dend_22 { pt3dadd( -9.84809, -235.647, -34.2584, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -22.1524, -64.4669, -31.2479, 1.11 ) }
    dend_19 { pt3dadd( -23.3814, -64.7209, -32.439, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( -25.1886, -65.3627, -34.5041, 0.55 ) }
    dend_19 { pt3dadd( -27.673, -65.9477, -37.3527, 0.55 ) }
    dend_19 { pt3dadd( -30.0185, -66.0351, -39.9335, 0.55 ) }
    dend_19 { pt3dadd( -33.8917, -65.7208, -43.9715, 0.55 ) }
    dend_19 { pt3dadd( -36.5715, -65.5546, -46.6237, 0.83 ) }
    dend_19 { pt3dadd( -39.0201, -65.7169, -49.5408, 0.83 ) }
    dend_19 { pt3dadd( -40.5121, -66.1113, -51.9945, 0.83 ) }
    dend_19 { pt3dadd( -42.1512, -66.6115, -54.9398, 0.83 ) }
    dend_19 { pt3dadd( -44.2669, -67.0903, -58.9967, 0.83 ) }
    dend_19 { pt3dadd( -46.4035, -67.4872, -62.9719, 0.83 ) }
    dend_19 { pt3dadd( -49.5224, -68.1012, -69.3279, 0.83 ) }
    dend_19 { pt3dadd( -51.7767, -69.4097, -74.8263, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 12/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -157.584, -128.146, 76.2087, 0.55 ) }
    dend_15 { pt3dadd( -166.078, -128.145, 82.919, 0.55 ) }
    dend_15 { pt3dadd( -174.95, -129.329, 89.0439, 0.55 ) }
    dend_15 { pt3dadd( -183.974, -133.339, 93.727, 0.55 ) }
    dend_15 { pt3dadd( -192.954, -137.007, 98.7391, 0.55 ) }
    dend_15 { pt3dadd( -200.824, -141.531, 104.907, 0.55 ) }
    dend_15 { pt3dadd( -207.953, -145.726, 112.118, 0.55 ) }
    dend_15 { pt3dadd( -214.31, -151.46, 119.114, 0.55 ) }
    dend_15 { pt3dadd( -219.435, -157.28, 127.025, 0.55 ) }
    dend_15 { pt3dadd( -223.948, -162.957, 135.399, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -157.584, -128.146, 76.2087, 0.55 ) }
    dend_14 { pt3dadd( -162.006, -139.266, 81.0, 0.55 ) }
    dend_14 { pt3dadd( -164.794, -150.537, 86.5115, 0.55 ) }
    dend_14 { pt3dadd( -166.143, -162.77, 90.4374, 0.55 ) }
    dend_14 { pt3dadd( -165.536, -175.3, 93.5015, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 27/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -51.7767, -69.4097, -74.8263, 0.83 ) }
    dend_21 { pt3dadd( -55.8034, -67.2294, -80.3419, 0.83 ) }
    dend_21 { pt3dadd( -59.1274, -65.9083, -84.6221, 0.83 ) }
    dend_21 { pt3dadd( -62.5242, -64.9349, -88.7203, 0.55 ) }
    dend_21 { pt3dadd( -65.0463, -64.3623, -91.6082, 0.55 ) }
    dend_21 { pt3dadd( -66.1113, -64.1637, -92.7111, 0.55 ) }
    dend_21 { pt3dadd( -68.8727, -63.7477, -95.3962, 0.83 ) }
    dend_21 { pt3dadd( -69.7291, -63.7439, -96.0797, 0.83 ) }
    dend_21 { pt3dadd( -74.073, -64.2901, -99.2584, 0.83 ) }
    dend_21 { pt3dadd( -76.1108, -64.7228, -100.698, 0.83 ) }
    dend_21 { pt3dadd( -78.6523, -65.2408, -102.581, 0.83 ) }
    dend_21 { pt3dadd( -81.8509, -65.6695, -105.31, 0.83 ) }
    dend_21 { pt3dadd( -84.1169, -65.7592, -107.582, 1.11 ) }
    dend_21 { pt3dadd( -85.8143, -65.8839, -109.612, 0.55 ) }
    dend_21 { pt3dadd( -86.7429, -65.988, -110.905, 0.55 ) }
    dend_21 { pt3dadd( -88.944, -66.1507, -114.294, 0.83 ) }
    dend_21 { pt3dadd( -92.4493, -66.0652, -120.16, 0.83 ) }
    dend_21 { pt3dadd( -94.8067, -65.8166, -124.226, 0.83 ) }
    dend_21 { pt3dadd( -97.2776, -65.4502, -128.609, 0.55 ) }
    dend_21 { pt3dadd( -98.7116, -65.2982, -131.318, 0.83 ) }
    dend_21 { pt3dadd( -99.4257, -65.2214, -132.734, 0.55 ) }
    dend_21 { pt3dadd( -100.382, -65.1494, -134.8, 0.55 ) }
    dend_21 { pt3dadd( -102.586, -65.0447, -139.366, 0.55 ) }
    dend_21 { pt3dadd( -103.564, -64.9844, -141.189, 1.11 ) }
    dend_21 { pt3dadd( -107.176, -64.4212, -148.561, 0.83 ) }
    dend_21 { pt3dadd( -108.461, -64.0845, -151.477, 0.55 ) }
    dend_21 { pt3dadd( -109.888, -63.4333, -155.291, 0.55 ) }
    dend_21 { pt3dadd( -110.787, -62.9319, -157.956, 0.83 ) }
    dend_21 { pt3dadd( -112.739, -61.6273, -163.796, 0.55 ) }
    dend_21 { pt3dadd( -114.702, -60.2397, -169.535, 0.83 ) }
    dend_21 { pt3dadd( -115.767, -59.3988, -173.154, 0.83 ) }
    dend_21 { pt3dadd( -117.288, -58.5792, -178.343, 0.55 ) }
    dend_21 { pt3dadd( -119.119, -58.0065, -183.732, 0.55 ) }
    dend_21 { pt3dadd( -120.16, -57.8064, -186.349, 0.55 ) }
    dend_21 { pt3dadd( -121.056, -57.7533, -188.106, 0.55 ) }
    dend_21 { pt3dadd( -126.369, -58.0947, -196.086, 0.55 ) }
    dend_21 { pt3dadd( -128.625, -58.4232, -198.998, 0.55 ) }
    dend_21 { pt3dadd( -131.267, -58.9528, -201.911, 0.55 ) }
    dend_21 { pt3dadd( -134.905, -59.6614, -205.411, 0.55 ) }
    dend_21 { pt3dadd( -136.189, -59.9903, -206.495, 0.28 ) }
    dend_21 { pt3dadd( -137.691, -60.5844, -207.474, 0.55 ) }
    dend_21 { pt3dadd( -140.052, -61.9584, -208.434, 0.28 ) }
    dend_21 { pt3dadd( -141.638, -63.1558, -209.132, 0.55 ) }
    dend_21 { pt3dadd( -143.526, -65.1516, -209.901, 0.28 ) }
    dend_21 { pt3dadd( -144.874, -66.9339, -210.289, 0.83 ) }
    dend_21 { pt3dadd( -145.841, -68.2688, -210.551, 0.83 ) }
    dend_21 { pt3dadd( -147.306, -70.4816, -210.914, 0.28 ) }
    dend_21 { pt3dadd( -148.519, -72.473, -211.156, 0.55 ) }
    dend_21 { pt3dadd( -149.721, -74.4287, -211.367, 0.28 ) }
    dend_21 { pt3dadd( -150.918, -76.442, -211.771, 0.55 ) }
    dend_21 { pt3dadd( -151.912, -77.9451, -212.202, 0.28 ) }
    dend_21 { pt3dadd( -152.403, -78.6345, -212.404, 0.55 ) }
    dend_21 { pt3dadd( -153.437, -80.0788, -212.795, 0.28 ) }
    dend_21 { pt3dadd( -153.8, -80.5829, -212.94, 0.55 ) }
    dend_21 { pt3dadd( -155.697, -82.9708, -213.784, 0.28 ) }
    dend_21 { pt3dadd( -156.758, -84.2702, -214.305, 0.83 ) }
    dend_21 { pt3dadd( -157.667, -85.2658, -214.72, 0.28 ) }
    dend_21 { pt3dadd( -158.348, -85.924, -214.989, 0.55 ) }
    dend_21 { pt3dadd( -160.113, -87.5514, -215.645, 0.28 ) }
    dend_21 { pt3dadd( -161.819, -89.0407, -216.217, 0.55 ) }
    dend_21 { pt3dadd( -163.552, -90.4313, -216.652, 0.55 ) }
    dend_21 { pt3dadd( -164.827, -91.3772, -217.015, 0.55 ) }
    dend_21 { pt3dadd( -166.046, -92.2081, -217.39, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -51.7767, -69.4097, -74.8263, 0.83 ) }
    dend_20 { pt3dadd( -51.5125, -72.3978, -74.1349, 0.55 ) }
    dend_20 { pt3dadd( -51.358, -74.0007, -73.8416, 0.83 ) }
    dend_20 { pt3dadd( -51.2222, -75.596, -73.7058, 0.55 ) }
    dend_20 { pt3dadd( -51.1574, -77.9513, -73.6104, 0.83 ) }
    dend_20 { pt3dadd( -51.092, -80.6337, -73.6158, 0.55 ) }
    dend_20 { pt3dadd( -51.0986, -84.2553, -73.6693, 0.55 ) }
    dend_20 { pt3dadd( -51.1456, -86.0446, -73.7867, 0.83 ) }
    dend_20 { pt3dadd( -51.3698, -89.2905, -74.1135, 0.55 ) }
    dend_20 { pt3dadd( -51.8153, -94.0603, -74.6869, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( -52.1384, -96.8649, -75.108, 0.55 ) }
    dend_20 { pt3dadd( -52.6345, -100.846, -75.8322, 0.55 ) }
    dend_20 { pt3dadd( -53.0605, -103.566, -76.3579, 0.28 ) }
    dend_20 { pt3dadd( -53.6986, -107.274, -76.9464, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
    ModelViewParmSubset_5 = new SectionList()
    dend_60 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_63 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_49 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_61 nseg = 7
    dend_32 nseg = 3
    dend_29 nseg = 7
    dend_6 nseg = 7
    dend_1 nseg = 7
    dend_50 nseg = 9
    dend_34 nseg = 7
    dend_33 nseg = 7
    dend_23 nseg = 3
    dend_7 nseg = 5
    dend_4 nseg = 11
    dend_3 nseg = 9
    dend_76 nseg = 9
    dend_73 nseg = 3
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_57 nseg = 7
    dend_48 nseg = 11
    dend_45 nseg = 7
    dend_11 nseg = 5
    dend_74 nseg = 3
    dend_65 nseg = 3
    dend_58 nseg = 3
    dend_54 nseg = 11
    dend_53 nseg = 11
    dend_41 nseg = 3
    dend_25 nseg = 7
    dend_17 nseg = 9
    dend_13 nseg = 7
    dend_71 nseg = 5
    dend_70 nseg = 3
    dend_56 nseg = 3
    dend_55 nseg = 5
    dend_43 nseg = 5
    dend_22 nseg = 9
    dend_19 nseg = 3
    dend_15 nseg = 5
    dend_14 nseg = 3
    dend_21 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SS_9e49de205b_0_0


