// Cell: cACint209_L5_ChC_8eec342856_0_0
/*
{
  "id" : "cACint209_L5_ChC_8eec342856_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.1147, -3.45834, 0.37", "0.0742096, 12.4047, -3.55135, 0.37", "0.0145527, 12.7551, -3.61854, 0.74", "0.0529957, 13.0313, -3.72162, 0.74", "0.376565, 13.8793, -4.11373, 0.37", "0.694865, 14.5574, -4.40522, 0.66", "1.06689, 15.2572, -4.71658, 1.33", "1.41732, 15.779, -4.95942, 1.33", "2.00705, 16.6409, -5.36742, 0.74", "2.44757, 17.3299, -5.67468, 0.74", "3.11885, 18.4689, -6.18163, 1.25", "3.54188, 19.3846, -6.57186, 2.06", "3.75648, 20.0684, -6.83251, 2.06", "3.90431, 20.9943, -7.1546, 1.4", "3.84819, 22.0636, -7.5133, 0.74", "3.60082, 22.7649, -7.75073, 1.11", "3.17039, 23.3024, -7.93452, 1.11", "2.5498, 23.7618, -8.08005, 0.81", "1.73248, 24.1497, -8.28062, 0.81", "0.733745, 24.465, -8.54442, 0.81", "-0.239994, 24.6962, -8.82952, 0.96", "-1.04389, 24.8861, -9.07429, 1.11", "-1.76607, 25.0786, -9.33543, 1.11", "-3.33488, 25.5997, -10.0206, 1.11", "-3.79841, 25.8138, -10.2726, 1.11", "-4.54612, 26.3833, -10.7903, 0.59", "-4.98797, 26.9941, -11.1644, 0.96", "-5.2493, 27.5579, -11.4121, 1.25", "-5.43374, 28.0665, -11.5817, 1.55", "-5.54563, 28.3868, -11.6547, 1.55", "-5.94519, 29.3704, -11.8582, 0.74", "-6.57296, 30.56, -12.1005, 0.96", "-7.09286, 31.2812, -12.2754, 0.66", "-7.52433, 31.7349, -12.4117, 0.66", "-8.21723, 32.2987, -12.6278, 0.81", "-8.7923, 32.6691, -12.813, 0.96", "-9.54899, 33.0669, -13.0763, 1.47", "-10.2462, 33.4103, -13.3325, 1.62", "-10.9045, 33.7846, -13.5815, 1.47", "-11.5173, 34.2045, -13.8255, 1.11", "-12.2096, 34.782, -14.1211, 0.81", "-13.0246, 35.6416, -14.5215, 0.66", "-13.4626, 36.2348, -14.7647, 0.81", "-14.0259, 37.2359, -15.1285, 1.03", "-14.2436, 37.7576, -15.3123, 1.25", "-14.3986, 38.243, -15.4913, 1.25", "-14.6788, 39.2907, -15.916, 0.96", "-14.8876, 40.0993, -16.2907, 0.81", "-15.1787, 41.097, -16.8156, 0.59", "-15.4186, 41.7902, -17.2055, 0.59", "-15.7487, 42.6115, -17.6729, 0.59", "-16.1114, 43.4178, -18.1157, 0.59", "-16.4627, 44.1727, -18.4593, 0.44", "-16.7956, 44.9609, -18.7227, 0.66", "-17.0537, 45.803, -18.867, 0.74", "-17.1373, 46.3315, -18.8924, 0.96", "-17.1452, 46.9228, -18.8734, 0.96", "-17.016, 48.2353, -18.848, 0.52", "-16.8375, 49.2996, -18.8628, 0.59", "-16.601, 50.5066, -18.9267, 0.59", "-16.4792, 51.181, -18.9929, 0.96", "-16.3856, 51.9591, -19.1085, 0.96", "-16.3563, 53.3408, -19.4002, 0.66", "-16.5048, 54.2906, -19.7005, 0.66", "-16.8322, 55.0599, -20.013, 0.96", "-17.2109, 55.5264, -20.2207, 1.03", "-17.6942, 55.9031, -20.4178, 1.03", "-18.3368, 56.2458, -20.6548, 1.03", "-19.2028, 56.5677, -20.9984, 0.74", "-19.8843, 56.7659, -21.3373, 0.74", "-20.3389, 56.8724, -21.6131, 0.52", "-21.3448, 57.0635, -22.356, 0.52", "-22.1961, 57.1914, -23.0606, 0.52", "-23.0641, 57.2929, -23.8128, 1.11", "-23.5362, 57.3364, -24.2086, 1.4", "-24.0722, 57.3705, -24.6109, 1.4", "-24.9884, 57.3945, -25.1822, 0.81", "-25.5533, 57.4065, -25.4132, 0.59", "-26.404, 57.448, -25.5949, 0.44", "-27.2586, 57.5291, -25.6442, 0.44", "-28.1252, 57.6651, -25.6188, 0.74", "-28.9533, 57.892, -25.554, 1.33", "-29.9605, 58.3388, -25.4955, 0.88", "-30.4069, 58.6376, -25.558, 0.59", "-30.6835, 58.8997, -25.6711, 0.59", "-31.0726, 59.3634, -25.9557, 0.74", "-31.554, 60.0137, -26.4535, 0.96", "-32.1755, 60.8602, -27.2154, 0.59", "-32.8186, 61.6867, -28.0625, 0.59", "-33.1533, 62.1018, -28.4854, 0.81", "-33.5759, 62.5767, -28.9489, 0.96", "-33.981, 62.9619, -29.2959, 1.03", "-34.6671, 63.5478, -29.7355, 0.66", "-34.8773, 63.7334, -29.8446, 0.66", "-35.4417, 64.3175, -30.1164, 0.81", "-35.9397, 64.9498, -30.4096, 0.81", "-36.3183, 65.6025, -30.6977, 0.66", "-36.6268, 66.2974, -30.9918, 0.66", "-37.0108, 67.3785, -31.441, 0.52", "-37.2304, 68.0534, -31.7306, 0.81", "-37.3921, 68.5567, -31.9558, 0.74", "-37.7829, 69.6365, -32.4333, 0.59", "-38.0213, 70.1644, -32.6473, 0.74", "-38.34, 70.6867, -32.8324, 0.96", "-38.8321, 71.3142, -32.9789, 0.96", "-39.2628, 71.7987, -33.0496, 0.74", "-39.8589, 72.4282, -33.0984, 1.03", "-40.2892, 72.869, -33.0599, 1.25", "-40.591, 73.2028, -32.9982, 0.81", "-41.2314, 73.9907, -32.7996, 0.59", "-41.6216, 74.5255, -32.6353, 0.66", "-41.9455, 75.0101, -32.4707, 0.66", "-42.7853, 76.3518, -31.9808, 0.88", "-43.2111, 77.039, -31.7102, 1.11", "-43.5037, 77.5089, -31.5065, 1.03", "-43.8598, 78.0762, -31.2531, 1.25", "-43.9928, 78.2871, -31.1503, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.92519, -4.39834, 1.11", "5.10915, 10.8505, -4.97995, 1.11", "5.82739, 11.5894, -5.45923, 1.11", "6.97328, 12.8252, -6.22313, 1.11", "7.75926, 13.7153, -6.79821, 0.96", "9.0611, 15.037, -7.64799, 1.55", "10.1934, 16.0937, -8.33191, 1.62", "10.8602, 16.6488, -8.70532, 1.62", "11.8906, 17.4188, -9.15895, 1.25", "13.6182, 18.5766, -9.68928, 0.96", "16.2573, 20.1674, -10.1705, 0.88", "17.4962, 20.8139, -10.2457, 1.55", "18.8489, 21.4226, -10.213, 1.84", "20.8777, 22.24, -10.0541, 1.11", "21.9426, 22.6506, -9.91469, 1.03", "23.1344, 23.1574, -9.68259, 1.25", "24.2872, 23.7932, -9.44097, 0.88", "25.3502, 24.5206, -9.21908, 0.88", "26.3458, 25.315, -9.01417, 0.88", "27.5146, 26.3035, -8.76551, 0.88", "28.5141, 27.2037, -8.4436, 0.96", "29.5484, 28.2118, -8.05714, 0.96", "30.4921, 29.2325, -7.63632, 0.81", "31.881, 30.8268, -6.89476, 1.11", "32.7918, 31.8373, -6.31834, 1.4", "33.8411, 32.8509, -5.53868, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.55044, 2.16166, 1.62", "4.39336, 8.8998, 2.63464, 1.62", "5.11235, 9.31818, 3.28216, 1.25", "6.42036, 9.90215, 4.59535, 1.25", "7.11205, 10.1677, 5.33638, 1.25", "7.83376, 10.3562, 6.20204, 1.92", "8.13916, 10.408, 6.59097, 2.5", "8.8033, 10.4256, 7.51025, 2.5", "10.177, 10.2602, 9.55456, 1.77", "11.1298, 9.96977, 10.9694, 0.96", "12.4742, 9.4171, 12.9608, 0.88", "12.8585, 9.23801, 13.5391, 0.88", "13.1617, 9.10226, 13.9817, 1.4", "13.4614, 8.99071, 14.3685, 1.4", "14.5546, 8.75075, 15.4757, 0.66", "15.0183, 8.77754, 15.8456, 0.66", "16.1194, 9.20568, 16.4974, 0.88", "16.8113, 9.5857, 16.8509, 0.88", "17.6802, 10.1531, 17.195, 0.74", "18.3278, 10.6335, 17.3891, 1.4", "19.0733, 11.2339, 17.5248, 2.06", "19.8073, 11.8065, 17.5819, 1.84", "20.6876, 12.4615, 17.5318, 1.18", "21.6035, 13.0936, 17.5041, 1.18", "21.9754, 13.3178, 17.5567, 1.03", "22.5971, 13.6188, 17.8148, 1.03", "23.0084, 13.7819, 18.2296, 0.59", "23.3904, 13.9546, 18.8413, 0.59", "24.1388, 14.3543, 20.3655, 0.88", "25.0093, 14.8962, 22.3705, 1.62", "25.3834, 15.1618, 23.2423, 1.62", "26.2538, 15.8316, 25.2587, 0.88", "26.6593, 16.1427, 26.1375, 0.88", "27.0332, 16.4394, 26.8642, 1.47", "27.296, 16.6507, 27.2809, 1.47", "27.972, 17.1524, 28.0935, 0.81", "28.3491, 17.3827, 28.4574, 0.59", "28.7523, 17.5695, 28.7751, 0.59", "29.7361, 17.9749, 29.5591, 1.25", "31.2831, 18.634, 30.8491, 0.74", "31.7678, 18.8877, 31.3012, 0.29", "32.199, 19.1331, 31.7581, 0.29", "32.446, 19.274, 32.0562, 0.59", "33.0999, 19.6604, 32.8622, 1.11", "33.4303, 19.8318, 33.2575, 1.11", "34.1395, 20.4423, 34.1065, 1.11", "34.54, 20.9979, 34.7813, 0.59", "34.551, 19.4047, 34.8924, 0.59", "34.6882, 17.7619, 35.3056, 0.52", "34.7831, 16.6145, 35.5913, 0.59", "40.8795, 18.5193, 41.0253, 0.59", "47.273, 21.1545, 45.7506, 0.59", "52.557, 24.9687, 50.9743, 0.59", "57.792, 29.5542, 55.5555, 0.59", "63.8791, 34.4746, 58.3823, 0.59", "69.363, 39.6534, 61.8788, 0.59", "75.1492, 43.9198, 66.1078, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.27869, 1.60166, 1.69", "-3.56761, 6.27869, 1.60166, 1.69", "-4.13855, 6.5989, 1.93671, 1.69", "-4.84347, 6.91694, 2.38914, 1.4", "-5.35014, 7.11931, 2.81219, 1.03", "-6.0489, 7.41076, 3.46513, 0.88", "-6.53268, 7.63028, 3.94752, 0.88", "-7.14896, 7.88604, 4.64434, 0.59", "-7.71394, 8.11197, 5.34841, 0.44", "-8.76038, 8.52133, 6.73973, 0.37", "-9.12228, 8.66388, 7.23858, 0.37", "-9.71314, 8.90222, 8.07273, 0.37", "-11.1143, 9.49745, 10.1457, 1.03", "-11.434, 9.64898, 10.6354, 1.62", "-19.4156, 10.4023, 16.1502, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.17031, -14.5883, 0.74", "-4.66424, -1.68881, -14.583, 0.74", "-5.58944, -2.27461, -14.578, 1.03", "-6.39868, -2.77691, -14.5904, 1.25", "-7.04577, -3.18454, -14.6074, 1.62", "-7.57604, -3.51294, -14.6241, 1.84", "-8.27137, -3.91822, -14.6287, 1.84", "-8.88728, -4.23491, -14.6007, 1.99", "-9.53446, -4.52167, -14.5391, 2.21", "-10.2906, -4.79981, -14.4297, 2.65", "-10.827, -4.96474, -14.3438, 2.5", "-11.7333, -5.20848, -14.206, 1.77", "-12.6932, -5.45442, -14.0911, 1.33", "-13.3458, -5.62609, -14.0603, 1.18", "-14.1196, -5.83756, -14.1094, 1.11", "-14.6695, -6.00694, -14.2648, 1.11", "-15.236, -6.20596, -14.6109, 1.11", "-15.7772, -6.41209, -15.1418, 1.4", "-16.3159, -6.60588, -15.8281, 1.03", "-16.7696, -6.75053, -16.4931, 0.88", "-17.4447, -6.91638, -17.5826, 0.88", "-18.1742, -7.03159, -18.8692, 1.47", "-18.726, -7.08298, -19.8896, 1.77", "-19.3437, -7.09309, -21.0768, 1.84", "-19.5622, -7.0802, -21.5076, 2.06", "-19.9579, -7.03136, -22.3092, 1.77", "-20.5676, -6.90544, -23.5134, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.96006, 9.10166, 2.06", "-5.36761, -1.96006, 9.10166, 2.06", "-6.30384, -1.86883, 9.59687, 2.06", "-7.00771, -1.83274, 9.94079, 2.06", "-8.83409, -1.85983, 10.7901, 1.84", "-9.85087, -1.95129, 11.2492, 1.84", "-10.6287, -2.07835, 11.5967, 1.99", "-12.0284, -2.42127, 12.2203, 1.55", "-13.1672, -2.82872, 12.7147, 1.03", "-14.0878, -3.26518, 13.0838, 0.88", "-14.9817, -3.81158, 13.343, 1.18", "-15.704, -4.3094, 13.5008, 1.18", "-16.2577, -4.72626, 13.5924, 1.47", "-17.0796, -5.40749, 13.664, 1.25", "-17.8886, -6.10639, 13.7708, 1.03", "-18.6183, -6.7291, 13.9342, 1.62", "-19.3491, -7.33861, 14.2057, 1.69", "-19.9126, -7.78057, 14.4957, 1.33", "-20.9191, -8.50736, 15.1805, 1.03", "-22.1588, -9.25687, 16.259, 0.88", "-23.0256, -9.65522, 17.2194, 1.11", "-23.7766, -9.85395, 18.2056, 1.33", "-24.2449, -9.87412, 18.8988, 1.33", "-24.7066, -9.7572, 19.6148, 1.18", "-25.256, -9.44881, 20.4425, 0.88", "-26.0373, -8.87628, 21.4523, 1.18", "-26.5246, -8.53141, 22.0006, 1.33", "-26.954, -8.30558, 22.4284, 1.33", "-27.6946, -8.09505, 23.122, 0.59", "-28.7102, -8.14753, 23.9851, 0.52", "-29.2255, -8.45296, 24.3619, 0.59", "-29.944, -9.40446, 24.929, 0.59", "-30.6359, -10.7129, 25.6189, 0.59", "-30.9947, -11.493, 26.0218, 1.03", "-31.4054, -12.4671, 26.5712, 1.03", "-31.7449, -13.2774, 27.074, 1.03", "-32.385, -14.6311, 28.0996, 1.03", "-32.9918, -15.5241, 29.0707, 0.66", "-33.503, -15.9362, 29.8177, 0.66", "-34.4037, -16.2773, 31.0014, 0.74", "-35.0406, -16.3854, 31.7824, 0.81", "-35.633, -16.4255, 32.4818, 0.52", "-36.7066, -16.4407, 33.6498, 0.52", "-37.1665, -16.4733, 34.155, 0.44", "-37.8359, -16.7603, 35.0452, 0.37", "-38.1578, -17.2047, 35.5671, 0.37", "-38.4565, -17.8789, 36.1006, 1.11", "-38.7114, -18.5706, 36.5175, 1.4", "-38.9569, -19.4815, 36.9668, 1.4", "-39.2586, -20.8645, 37.5863, 0.81", "-39.4618, -21.9059, 38.0011, 0.29", "-39.6429, -22.5946, 38.2868, 0.29", "-39.8569, -23.1476, 38.531, 0.29", "-45.7466, -27.0235, 45.0809, 0.29", "-52.8743, -30.9962, 50.1785, 0.29", "-59.3953, -34.9603, 56.0385, 0.29", "-65.4468, -37.6969, 63.0308, 0.29", "-71.5128, -40.555, 69.9593, 0.29", "-78.4919, -44.7992, 75.0323, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.61631, 6.85166, 1.77", "-2.19761, -5.61631, 6.85166, 1.77", "-2.18294, -6.51833, 6.96632, 1.77", "-2.15961, -8.06477, 7.15462, 1.47", "-2.14675, -9.62109, 7.32501, 1.25", "-2.16872, -10.81, 7.44014, 1.62", "-2.21262, -11.8131, 7.52689, 1.92", "-2.2728, -12.6881, 7.60368, 2.14", "-2.38184, -13.7775, 7.69742, 2.14", "-2.60664, -15.2898, 7.82763, 1.55", "-2.89278, -16.712, 7.94157, 1.33", "-3.15192, -17.7896, 8.03751, 1.55", "-3.34438, -18.4702, 8.10039, 1.92", "-3.61785, -19.2957, 8.20568, 2.21", "-3.82268, -19.8398, 8.29106, 2.5", "-4.06217, -20.4819, 8.41363, 2.5", "-4.28233, -21.1902, 8.56001, 2.36", "-4.51917, -22.162, 8.76648, 1.69", "-4.74682, -23.4361, 9.02651, 1.25", "-4.86262, -24.6268, 9.26091, 1.4", "-4.86752, -25.6833, 9.44359, 1.62", "-4.74846, -26.9728, 9.63685, 2.06", "-4.60353, -27.7675, 9.74686, 2.36", "-4.45692, -28.2828, 9.80886, 2.36", "-4.09522, -29.2648, 9.90843, 2.14", "-3.50624, -30.6427, 10.0367, 1.62", "-2.98651, -31.8034, 10.1317, 1.25", "-2.45342, -33.0008, 10.2425, 1.03", "-1.8844, -34.3471, 10.3941, 1.03", "-1.46054, -35.4745, 10.5495, 1.03", "-0.999094, -36.9338, 10.8029, 1.03", "-0.797869, -37.8029, 10.9876, 0.96", "-0.736829, -38.4896, 11.157, 0.96", "-0.819672, -39.1016, 11.3263, 0.96", "-1.20061, -39.9077, 11.608, 0.96", "-1.57318, -40.3458, 11.7852, 0.88", "-1.96402, -40.6696, 11.924, 1.18", "-2.59496, -41.1191, 12.1011, 1.18", "-3.20615, -41.5298, 12.2579, 1.33", "-3.90987, -41.9958, 12.4535, 1.33", "-4.51491, -42.402, 12.643, 1.4", "-5.16351, -42.8653, 12.8773, 1.55", "-5.78479, -43.3559, 13.1531, 1.55", "-6.488, -44.0263, 13.5491, 1.84", "-6.91385, -44.5158, 13.83, 2.14", "-7.33094, -45.106, 14.1313, 1.99", "-7.91267, -46.1719, 14.6131, 0.88", "-8.30991, -47.1562, 14.9919, 0.88", "-8.64481, -48.319, 15.3697, 0.81", "-8.83225, -49.347, 15.6262, 0.74", "-9.00624, -50.6449, 15.9078, 0.74", "-9.09152, -51.8575, 16.1323, 1.03", "-9.08818, -52.9469, 16.2766, 1.4", "-9.05019, -53.6248, 16.3295, 1.69", "-8.97157, -54.3847, 16.3503, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.75031, -2.20834, 3.39", "1.44239, -9.75031, -2.20834, 3.39", "1.81723, -10.8959, -2.31423, 3.39", "2.11991, -11.82, -2.44375, 3.02", "2.42637, -12.7557, -2.5749, 3.02", "2.82935, -13.9862, -2.74735, 3.02", "3.26223, -15.3079, -2.9326, 3.24", "3.58868, -16.2825, -3.08378, 3.54", "3.9593, -17.3327, -3.28483, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-43.9928, 78.2871, -31.1503, 0.44", "-44.8449, 79.2791, -31.9623, 0.44", "-45.2421, 79.7603, -32.3119, 0.37", "-45.4449, 80.0206, -32.4353, 0.66", "-45.7861, 80.4881, -32.5864, 0.66", "-46.1399, 81.0135, -32.6966, 0.59", "-46.3762, 81.4094, -32.7449, 0.81", "-46.6221, 81.8981, -32.7054, 0.81", "-47.0198, 83.0384, -32.4989, 0.52", "-47.114, 83.5893, -32.3573, 0.52", "-47.1016, 84.4612, -32.0946, 0.44", "-46.9335, 85.3144, -31.8266, 0.44", "-46.6158, 86.163, -31.5596, 0.74", "-46.2932, 86.7717, -31.3631, 0.74", "-45.7088, 87.6373, -31.0992, 0.44", "-45.2608, 88.2433, -30.8906, 0.59", "-44.8052, 88.84, -30.6864, 0.59", "-44.3437, 89.4613, -30.4975, 0.59", "-43.9813, 90.0075, -30.3696, 0.37", "-43.7161, 90.4421, -30.2893, 0.37", "-43.3139, 91.1292, -30.1819, 0.59", "-42.9099, 91.7924, -30.0864, 0.37", "-42.5405, 92.3693, -30.0029, 0.81", "-42.1481, 92.9566, -29.9227, 0.81", "-41.4207, 94.0428, -29.8, 0.44", "-40.8594, 94.8984, -29.7163, 0.44", "-40.4538, 95.4987, -29.6793, 0.81", "-40.0395, 96.1144, -29.6498, 0.44", "-39.8118, 96.4683, -29.646, 0.59", "-39.256, 97.3758, -29.6842, 0.59", "-38.8981, 98.0354, -29.7992, 0.44", "-38.4969, 98.9509, -30.0497, 0.44", "-38.1992, 99.7466, -30.3769, 0.96", "-38.0727, 100.128, -30.5871, 1.18", "-37.9719, 100.484, -30.8298, 1.18", "-37.6903, 101.493, -31.8216, 0.44", "-37.5211, 102.229, -32.6734, 0.37", "-37.3299, 102.87, -33.5897, 0.66", "-37.2384, 103.147, -34.028, 0.66", "-37.0934, 103.57, -34.7365, 0.66", "-36.4419, 105.19, -37.5531, 0.44", "-36.315, 105.468, -38.0545, 0.44", "-35.6038, 106.926, -40.712, 0.29", "-35.4557, 107.252, -41.2714, 0.29", "-35.2876, 107.648, -41.9, 0.29", "-34.9409, 108.564, -43.2083, 0.74", "-34.5804, 109.756, -44.6446, 0.44", "-34.5059, 110.051, -44.9458, 0.44", "-34.4132, 110.735, -45.4708, 0.37", "-34.3582, 111.427, -45.919, 0.88", "-34.3824, 112.528, -46.4531, 0.29", "-34.4526, 112.954, -46.6041, 0.52", "-34.6572, 113.706, -46.8338, 0.15", "-34.8628, 114.369, -47.0678, 0.22", "-35.2104, 115.401, -47.4533, 0.22", "-35.5619, 116.289, -47.7903, 0.22", "-35.9084, 117.115, -48.0875, 0.22", "-36.4273, 118.331, -48.5753, 1.47", "-36.8027, 119.233, -48.9803, 0.66", "-37.0277, 119.817, -49.2468, 0.96", "-37.3702, 120.788, -49.6666, 0.22", "-37.6039, 121.435, -49.9024, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-43.9928, 78.2871, -31.1503, 0.37", "-44.1592, 79.6263, -30.6393, 0.37", "-44.1544, 80.3094, -30.4275, 0.37", "-44.1827, 80.9429, -30.1697, 0.37", "-44.3198, 81.8682, -29.7271, 0.74", "-44.5216, 82.6365, -29.3412, 0.29", "-44.8685, 83.5254, -28.8981, 0.29", "-45.053, 83.9394, -28.6887, 0.52", "-45.5859, 84.8112, -28.0953, 0.44", "-45.9788, 85.3489, -27.6603, 0.29", "-46.3297, 85.8129, -27.2569, 0.29", "-46.707, 86.3252, -26.7793, 0.29", "-47.2631, 87.203, -25.9757, 0.44", "-47.6574, 87.9235, -25.3236, 0.44", "-48.0279, 88.8656, -24.5333, 0.52", "-48.2205, 89.6287, -23.8901, 0.37", "-48.2977, 90.2465, -23.3593, 0.37", "-48.2916, 90.9261, -22.7926, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "33.8411, 32.8509, -5.53868, 0.29", "35.017, 32.4019, -4.02706, 0.29", "36.1133, 32.04, -2.79524, 0.59", "37.182, 31.6927, -1.74239, 0.74", "37.7662, 31.5112, -1.21264, 0.37", "38.6668, 31.2544, -0.337043, 0.37", "39.1681, 31.1224, 0.188396, 0.66", "39.5431, 31.0643, 0.605622, 0.96", "40.089, 31.0209, 1.41402, 1.25", "40.9217, 31.0344, 2.96708, 0.37", "41.6822, 31.1612, 4.61092, 0.37", "41.9332, 31.2345, 5.18927, 0.37", "42.4794, 31.4198, 6.36529, 0.74", "43.4502, 31.7357, 8.14481, 0.66", "44.2463, 31.9785, 9.33778, 0.52", "44.8693, 32.1132, 10.0017, 0.66", "45.6343, 32.2038, 10.5505, 0.66", "46.6756, 32.2657, 11.1003, 0.37", "47.8788, 32.2614, 11.5511, 0.52", "48.5473, 32.2161, 11.7394, 0.52", "49.7128, 32.0977, 12.0356, 0.66", "50.3669, 32.0107, 12.1908, 0.88", "51.2374, 31.8991, 12.3773, 0.88", "52.2497, 31.8013, 12.6404, 0.66", "53.5186, 31.7431, 12.996, 0.29", "54.6303, 31.7562, 13.3038, 0.29", "56.3144, 31.92, 13.7568, 0.88", "56.7809, 31.9855, 13.8811, 0.88", "58.6491, 32.3161, 14.3549, 0.29", "60.089, 32.6272, 14.685, 0.29", "61.4646, 32.9731, 14.9659, 0.96", "63.0998, 33.426, 15.2729, 0.29", "64.2887, 33.7639, 15.4913, 0.29", "65.3881, 34.0568, 15.6674, 0.81", "66.2499, 34.2711, 15.7556, 0.81", "67.014, 34.4495, 15.8276, 0.81", "68.1713, 34.6945, 15.9292, 0.59", "69.5174, 34.9275, 16.0469, 0.29", "70.7064, 35.1731, 16.1684, 0.81", "71.8809, 35.4186, 16.2991, 0.22", "72.9229, 35.6172, 16.4125, 0.22", "73.5827, 35.718, 16.4702, 0.52", "74.4898, 35.822, 16.4924, 0.22", "84.0543, 36.9638, 21.7587, 0.22", "93.0031, 38.355, 27.9586, 0.22", "103.088, 37.9785, 32.2991, 0.22", "113.06, 35.7258, 36.2975, 0.22", "123.044, 34.7859, 40.7818, 0.22", "131.458, 32.4119, 47.421, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "33.8411, 32.8509, -5.53868, 0.81", "35.5309, 33.0011, -4.96349, 0.81", "36.3323, 32.9837, -4.73648, 1.03", "38.4638, 32.8419, -4.34, 0.96", "39.6323, 32.775, -4.18644, 0.96", "40.9951, 32.7568, -4.05286, 0.59", "41.9433, 32.7937, -3.98287, 0.66", "43.2152, 32.8514, -3.93109, 0.66", "44.7317, 33.0455, -3.96352, 0.59", "45.5265, 33.2748, -4.07436, 0.81", "46.5311, 33.7419, -4.24695, 0.96", "47.4551, 34.2886, -4.41508, 1.25", "48.1231, 34.7011, -4.52797, 1.4", "48.9631, 35.2021, -4.63169, 1.4", "50.3362, 35.8921, -4.7209, 0.59", "50.8958, 36.0768, -4.74183, 0.59", "52.062, 36.2378, -4.75332, 0.59", "53.3379, 36.2248, -4.73493, 1.03", "54.2452, 36.1234, -4.70281, 1.18", "55.0351, 35.9718, -4.6282, 1.18", "56.3115, 35.6519, -4.4311, 0.74", "57.5392, 35.3161, -4.15861, 0.66", "58.1227, 35.1593, -4.00378, 0.96", "58.8838, 34.9878, -3.79683, 0.96", "60.2492, 34.7457, -3.43884, 1.03", "60.8938, 34.6725, -3.27285, 1.03", "62.6856, 34.667, -2.84674, 0.59", "63.6571, 34.7699, -2.64542, 0.59", "65.3899, 35.0813, -2.3508, 0.59", "66.2375, 35.2916, -2.24348, 0.81", "67.0291, 35.5577, -2.18973, 0.81", "68.6408, 36.2221, -2.17495, 0.37", "69.6548, 36.6722, -2.22977, 0.66", "70.5548, 37.0387, -2.28589, 0.74", "71.1196, 37.2329, -2.33257, 0.74", "72.2242, 37.4976, -2.44405, 0.74", "73.409, 37.6232, -2.57825, 0.52", "75.0575, 37.5856, -2.77663, 0.74", "76.2994, 37.482, -2.89727, 0.88", "76.98, 37.4145, -2.92578, 0.96", "77.6565, 37.3558, -2.91149, 1.18", "78.6855, 37.3006, -2.81646, 1.18", "79.4677, 37.3274, -2.66956, 0.66", "80.8545, 37.6078, -2.25318, 0.59", "81.7658, 37.932, -1.81677, 0.59", "82.3696, 38.2094, -1.45156, 0.74", "82.8416, 38.4718, -1.11432, 0.74", "83.307, 38.7609, -0.738843, 0.74", "84.1949, 39.3495, 0.0579024, 0.59", "85.3721, 40.1722, 1.22289, 0.96", "85.933, 40.5549, 1.78438, 1.25", "86.2378, 40.754, 2.11177, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "75.1492, 43.9198, 66.1078, 0.29", "81.832, 47.6175, 73.0603, 0.29", "89.474, 51.3744, 78.9021, 0.29", "97.3203, 55.9404, 83.7879, 0.29", "104.173, 59.9525, 90.3826, 0.29", "110.553, 65.093, 96.6181, 0.29", "115.494, 70.8113, 103.588, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "75.1492, 43.9198, 66.1078, 0.29", "81.2553, 46.7805, 71.1373, 0.29", "86.2817, 51.0855, 76.2781, 0.29", "90.2773, 55.8863, 81.8434, 0.29", "94.9083, 59.354, 87.9333, 0.29", "99.2431, 63.2667, 93.9572, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-20.5676, -6.90544, -23.5134, 0.74", "-22.005, -8.25551, -24.0322, 0.74", "-22.8041, -8.82925, -24.2446, 0.74", "-23.4982, -9.22213, -24.4147, 0.74", "-24.6424, -9.61897, -24.7796, 0.66", "-25.5023, -9.77604, -25.1086, 0.66", "-26.4292, -9.8686, -25.495, 0.59", "-27.0899, -9.81894, -25.7448, 1.25", "-27.6374, -9.72783, -25.9718, 1.25", "-29.3175, -9.41053, -26.736, 0.66", "-30.1496, -9.27677, -27.1436, 0.66", "-30.5887, -9.26248, -27.3855, 0.96", "-31.218, -9.36517, -27.7679, 0.96", "-31.6446, -9.5305, -28.1585, 0.96", "-32.2754, -9.9743, -29.1684, 0.74", "-32.5997, -10.3221, -29.9642, 0.52", "-32.9196, -10.7387, -30.9648, 0.81", "-33.1239, -11.0385, -31.7077, 1.03", "-33.8632, -12.2194, -34.7468, 1.25", "-34.3659, -13.0402, -36.9497, 0.66", "-34.6185, -13.4294, -38.036, 0.66", "-34.7824, -13.6286, -38.6024, 1.11", "-34.9359, -13.7579, -38.9384, 1.33", "-35.1646, -13.9129, -39.2221, 1.18", "-35.5312, -14.1546, -39.3887, 1.18", "-36.3706, -14.7145, -39.6387, 0.59", "-37.2257, -15.3483, -39.9375, 0.52", "-37.8907, -15.9068, -40.2497, 0.52", "-38.4332, -16.4273, -40.6332, 0.81", "-38.9548, -17.0072, -41.1775, 0.66", "-39.439, -17.5936, -41.8064, 0.66", "-39.7854, -18.0451, -42.3522, 1.33", "-40.0164, -18.3591, -42.7476, 1.33", "-40.7372, -19.3409, -44.0019, 0.66", "-41.3752, -20.1811, -45.0673, 0.52", "-41.6815, -20.5507, -45.5411, 0.52", "-42.0859, -20.984, -46.0205, 0.96", "-42.378, -21.2752, -46.2741, 1.18", "-42.5877, -21.4854, -46.389, 1.18", "-43.0171, -21.9625, -46.493, 0.81", "-43.5912, -22.6816, -46.525, 0.74", "-44.2858, -23.6619, -46.4902, 0.59", "-44.6328, -24.1554, -46.4374, 0.74", "-45.0988, -24.795, -46.3295, 0.74", "-45.6087, -25.4293, -46.1915, 0.59", "-46.0948, -26.0013, -46.0454, 0.44", "-46.6402, -26.6376, -45.8722, 0.44", "-47.1687, -27.2403, -45.7336, 0.44", "-47.7185, -27.9225, -45.6027, 0.44", "-48.6049, -29.1441, -45.4186, 0.44", "-48.8165, -29.5, -45.379, 0.96", "-49.1726, -30.3322, -45.3585, 1.18", "-49.3663, -31.0548, -45.3976, 0.81", "-49.5241, -32.2161, -45.5825, 0.59", "-49.5607, -32.7119, -45.7212, 0.74", "-49.6146, -33.5037, -46.0016, 0.66", "-49.7308, -34.2799, -46.3085, 0.66", "-49.874, -34.8558, -46.5556, 0.81", "-50.2311, -35.9214, -47.0072, 0.59", "-50.6006, -36.8624, -47.386, 0.52", "-50.9408, -37.7771, -47.7273, 0.81", "-51.2247, -38.6669, -48.0222, 1.4", "-51.331, -39.1971, -48.1373, 1.69", "-51.4157, -40.2366, -48.2467, 0.52", "-51.4484, -41.0923, -48.3424, 0.44", "-51.4586, -41.9449, -48.5582, 0.44", "-51.4799, -42.534, -48.8389, 0.29", "-51.6061, -43.6208, -49.537, 1.4", "-51.6505, -43.8376, -49.6948, 1.4", "-52.2459, -45.7454, -51.3628, 0.52", "-52.669, -46.7979, -52.3684, 0.52", "-52.9208, -47.3431, -52.9075, 0.52", "-53.3044, -48.1564, -53.7084, 0.74", "-53.5544, -48.7029, -54.2283, 0.88", "-54.0555, -49.9579, -55.2577, 0.44", "-54.2677, -50.5971, -55.6641, 0.59", "-54.5209, -51.3179, -56.0849, 0.59", "-54.8259, -52.0512, -56.5391, 0.37", "-55.0233, -52.4933, -56.8272, 0.59", "-55.4046, -53.2842, -57.3309, 0.81", "-55.7855, -54.0148, -57.7259, 1.18", "-56.0395, -54.4652, -57.9733, 1.18", "-56.7671, -55.5867, -58.6561, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-20.5676, -6.90544, -23.5134, 0.81", "-21.2123, -4.69664, -23.5506, 0.81", "-21.5498, -3.88927, -23.4937, 0.81", "-22.1117, -2.92855, -23.3619, 0.81", "-22.754, -2.1907, -23.2229, 0.88", "-23.5656, -1.6232, -23.112, 0.66", "-25.1002, -0.867779, -22.9982, 0.59", "-26.2166, -0.697247, -22.986, 0.59", "-27.2348, -0.716458, -23.1628, 0.59", "-28.5964, -0.913187, -23.6292, 0.74", "-30.0619, -1.24913, -24.4179, 1.03", "-30.5745, -1.38193, -24.7518, 1.62", "-31.2682, -1.55519, -25.2616, 1.92", "-33.4594, -2.02961, -26.8415, 0.88", "-34.2995, -2.18497, -27.4355, 0.66", "-35.5323, -2.40291, -28.2664, 0.66", "-37.1957, -2.68953, -29.3246, 0.66", "-37.934, -2.79874, -29.7723, 0.66", "-39.5358, -2.94127, -30.6504, 0.66", "-40.5515, -2.95949, -31.1517, 0.44", "-41.8247, -2.89989, -31.8207, 0.44", "-42.7497, -2.79764, -32.3608, 0.44", "-43.8291, -2.61221, -33.1206, 0.66", "-44.5785, -2.45465, -33.6933, 0.66", "-45.459, -2.20911, -34.3791, 0.66", "-46.217, -1.95299, -34.9117, 0.66", "-47.0769, -1.58371, -35.4517, 0.44", "-47.6726, -1.28995, -35.8093, 0.74", "-48.5578, -0.825993, -36.3163, 0.74", "-49.3454, -0.403432, -36.7623, 0.74", "-50.0164, -0.0437708, -37.1245, 0.74", "-50.7859, 0.360005, -37.5212, 0.37", "-51.9396, 0.816058, -38.1479, 0.37", "-52.4461, 0.898859, -38.4506, 0.37", "-52.9904, 0.852984, -38.8293, 0.88", "-53.7236, 0.689162, -39.3649, 1.18", "-54.3224, 0.515859, -39.8526, 1.33", "-55.849, 0.0186148, -41.1995, 0.44", "-56.9375, -0.303408, -42.2482, 0.44", "-57.7928, -0.472411, -43.1974, 0.44", "-58.5465, -0.484463, -44.1264, 0.88", "-59.3315, -0.282475, -45.1563, 1.03", "-59.6417, -0.0885111, -45.5621, 1.03", "-60.422, 0.717898, -46.433, 0.44", "-60.8894, 1.25752, -46.9018, 0.44", "-61.4535, 1.84335, -47.3422, 0.44", "-61.9312, 2.22766, -47.6685, 0.59", "-62.7442, 2.70103, -48.1301, 0.59", "-63.592, 3.01586, -48.5823, 0.74", "-65.1765, 3.2786, -49.3692, 0.37", "-66.1833, 3.28483, -49.8886, 0.37", "-67.6875, 3.08247, -50.7012, 0.59", "-68.2808, 2.92923, -51.0439, 0.88", "-69.4299, 2.48623, -51.7812, 0.66", "-70.2064, 2.12354, -52.3075, 0.74", "-71.0369, 1.68631, -52.8659, 0.59", "-71.751, 1.28389, -53.3796, 0.52", "-72.4192, 0.91166, -53.8606, 0.88", "-73.6415, 0.318564, -54.7741, 0.59", "-74.3498, 0.0455315, -55.3163, 0.44", "-75.1303, -0.178825, -55.9295, 1.03", "-75.674, -0.283373, -56.3538, 1.33", "-76.0103, -0.317009, -56.6038, 1.4", "-77.4322, -0.377068, -57.5727, 0.44", "-78.009, -0.390184, -57.9419, 0.44", "-78.8627, -0.39059, -58.4543, 0.44", "-79.7639, -0.364159, -58.9541, 0.44", "-81.2249, -0.309703, -59.7576, 0.59", "-82.2292, -0.27138, -60.3907, 0.88", "-83.1349, -0.204136, -61.1127, 1.11", "-84.2872, -0.0772131, -62.178, 0.52", "-85.1022, 0.0621927, -63.0145, 0.52", "-85.7747, 0.209642, -63.7496, 1.03", "-87.2585, 0.565353, -65.4869, 1.25", "-89.0213, 0.919022, -67.5405, 0.52", "-89.6302, 1.01547, -68.2315, 0.59", "-90.4528, 1.10868, -69.1106, 0.59", "-91.7654, 1.24937, -70.3418, 0.44", "-92.679, 1.35504, -71.0431, 0.44", "-94.0323, 1.57042, -71.8956, 0.44", "-94.7525, 1.72561, -72.3319, 0.44", "-95.7141, 2.05054, -73.0914, 0.66", "-96.3693, 2.38761, -73.7674, 0.88", "-96.7012, 2.6411, -74.1809, 0.88", "-97.6178, 3.56591, -75.4633, 0.52", "-98.1539, 4.24582, -76.3015, 0.52", "-98.8678, 5.32079, -77.6228, 0.81", "-99.3377, 6.16306, -78.6219, 0.44", "-99.5923, 6.68489, -79.2373, 0.44", "-99.8521, 7.36406, -80.001, 0.74", "-99.9836, 7.87669, -80.5132, 0.96", "-100.157, 9.20467, -81.6117, 0.66", "-100.228, 10.0356, -82.2663, 0.44", "-100.321, 10.9393, -83.0277, 0.44", "-100.487, 11.7936, -83.8485, 0.44", "-100.6, 12.0856, -84.1744, 0.44", "-101.069, 12.6873, -84.9463, 0.96", "-102.295, 13.3391, -86.0763, 0.66", "-103.142, 13.6063, -86.7007, 0.96", "-103.556, 13.7088, -86.9492, 1.25", "-104.05, 13.8172, -87.2129, 1.25", "-104.831, 14.0109, -87.6156, 1.25", "-106.165, 14.4755, -88.3163, 0.37", "-106.947, 14.9278, -88.7131, 0.37", "-107.45, 15.3156, -89.0176, 0.66", "-107.833, 15.6365, -89.2467, 0.81", "-108.432, 16.1467, -89.5667, 0.81", "-109.366, 16.9397, -89.9558, 0.44", "-110.019, 17.447, -90.1242, 0.44", "-111.234, 18.2622, -90.3158, 0.44", "-112.593, 19.1171, -90.4421, 0.44", "-113.629, 19.7624, -90.4839, 0.66", "-114.711, 20.4296, -90.4724, 0.96", "-115.808, 21.0961, -90.3836, 0.59", "-116.74, 21.6834, -90.2729, 0.44", "-117.7, 22.3022, -90.1498, 0.44", "-118.631, 22.8988, -90.0887, 0.44", "-119.446, 23.3563, -90.1347, 0.44", "-120.401, 23.7616, -90.3308, 0.74", "-120.88, 23.9072, -90.49, 0.74", "-122.265, 24.1899, -91.021, 0.52", "-122.9, 24.2846, -91.2962, 0.59", "-124.078, 24.4368, -91.8508, 0.44", "-124.954, 24.5852, -92.2829, 0.44", "-126.035, 24.8699, -92.8801, 0.37", "-127.106, 25.2592, -93.4786, 0.52", "-127.943, 25.6573, -93.9595, 1.11", "-128.586, 26.0214, -94.3797, 1.25", "-129.336, 26.4967, -94.9548, 0.37", "-130.4, 27.1889, -95.9027, 0.37", "-131.12, 27.6255, -96.618, 0.29", "-131.691, 27.9432, -97.2533, 0.29", "-132.717, 28.4948, -98.4656, 0.59", "-133.524, 28.9504, -99.4638, 0.59", "-133.979, 29.2242, -100.032, 0.29", "-134.337, 29.4679, -100.443, 0.37", "-134.9, 29.9219, -101.048, 0.37", "-135.674, 30.6106, -101.735, 0.44", "-136.328, 31.2301, -102.166, 0.44", "-136.956, 31.8263, -102.485, 0.44", "-137.723, 32.4948, -102.829, 0.37", "-138.04, 32.7333, -102.954, 0.37", "-138.866, 33.2401, -103.218, 0.88", "-139.353, 33.486, -103.353, 1.11", "-140.231, 33.893, -103.587, 1.11", "-141.609, 34.5633, -103.943, 0.37", "-142.672, 35.1371, -104.211, 0.37", "-143.275, 35.5246, -104.356, 0.66", "-144.156, 36.2732, -104.611, 0.66", "-144.826, 37.0127, -104.853, 0.37", "-145.366, 37.7901, -105.107, 0.52", "-145.555, 38.1314, -105.219, 0.66", "-145.825, 38.6866, -105.395, 0.66", "-146.554, 40.221, -105.863, 0.37", "-146.909, 40.8886, -106.033, 0.37", "-147.33, 41.4566, -106.108, 0.37", "-147.8, 41.9127, -106.089, 0.88", "-148.586, 42.5107, -105.971, 0.81", "-148.98, 42.7598, -105.889, 0.81", "-149.986, 43.3248, -105.638, 0.29", "-151.308, 44.0404, -105.296, 0.29", "-152.128, 44.5295, -105.019, 0.52", "-153.11, 45.1838, -104.664, 0.44", "-153.587, 45.5226, -104.49, 0.44", "-154.211, 46.0012, -104.234, 0.81", "-154.935, 46.6371, -103.907, 0.81", "-156.263, 48.0112, -103.234, 0.29", "-156.79, 48.5988, -102.952, 0.44", "-157.283, 49.1643, -102.652, 0.29", "-157.834, 49.766, -102.331, 0.29", "-158.568, 50.5129, -101.951, 0.29", "-159.137, 51.0534, -101.705, 0.29", "-159.82, 51.6437, -101.467, 0.59", "-161.138, 52.7524, -100.987, 0.22", "-161.988, 53.4554, -100.68, 0.22", "-162.446, 53.8002, -100.514, 0.52", "-162.877, 54.0767, -100.347, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-78.4919, -44.7992, 75.0323, 0.29", "-85.2019, -49.0446, 81.1813, 0.29", "-90.9755, -55.0425, 86.7239, 0.29", "-96.3686, -61.1242, 92.5549, 0.29", "-101.433, -67.8152, 97.9665, 0.29", "-105.251, -75.3593, 103.242, 0.29", "-109.878, -82.5282, 108.402, 0.29", "-114.539, -89.6955, 113.532, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-78.4919, -44.7992, 75.0323, 0.29", "-83.9441, -47.8053, 79.789, 0.29", "-89.3002, -51.7403, 83.8995, 0.29", "-94.0805, -56.0745, 88.2864, 0.29", "-98.1592, -60.5967, 93.1533, 0.29", "-101.841, -65.5808, 97.8585, 0.29", "-104.695, -71.3454, 102.185, 0.29", "-108.166, -76.438, 106.927, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.97157, -54.3847, 16.3503, 0.66", "-10.1873, -57.3265, 15.2379, 0.66", "-10.4962, -58.1084, 14.9718, 1.03", "-10.7985, -58.9294, 14.7959, 1.03", "-11.3417, -60.5031, 14.6111, 1.03", "-11.7033, -61.6995, 14.5561, 1.03", "-12.0818, -63.1658, 14.5747, 0.81", "-12.3133, -64.4874, 14.8202, 0.81", "-12.4468, -66.4381, 15.3272, 1.4", "-12.4306, -67.2783, 15.5985, 1.62", "-12.2985, -68.5387, 16.1105, 1.4", "-12.1472, -69.3725, 16.4717, 1.92", "-11.8636, -70.5075, 16.9693, 1.4", "-11.3328, -72.2292, 17.7254, 1.69", "-10.9438, -73.3798, 18.1691, 1.11", "-10.4266, -74.9231, 18.7241, 0.81", "-10.2001, -75.6514, 18.9656, 1.11", "-9.96357, -76.5201, 19.2239, 1.25", "-9.5396, -78.4524, 19.7451, 0.96", "-9.4123, -79.4291, 19.9721, 0.74", "-9.38872, -80.3616, 20.1549, 0.81", "-9.57458, -81.7735, 20.3521, 0.52", "-9.8501, -82.7805, 20.4378, 0.88", "-10.1914, -83.6278, 20.4252, 0.88", "-10.6653, -84.5556, 20.2709, 0.88", "-11.1091, -85.3779, 20.0559, 0.66", "-11.5504, -86.2607, 19.7139, 0.66", "-12.0685, -87.5075, 19.0122, 0.88", "-12.3443, -88.341, 18.4366, 1.33", "-12.5063, -88.982, 17.9641, 1.47", "-12.6335, -89.5865, 17.5175, 1.62", "-12.8854, -90.8208, 16.6659, 0.74", "-13.1795, -92.2245, 15.8774, 0.74", "-13.4587, -93.3184, 15.4478, 0.74", "-13.7094, -94.1901, 15.2675, 0.74", "-14.0566, -95.3961, 15.2049, 0.66", "-14.3658, -96.6542, 15.3214, 0.66", "-14.6964, -98.4785, 15.7329, 0.96", "-14.7836, -99.4222, 16.0247, 0.88", "-14.7744, -100.272, 16.3033, 0.88", "-14.6016, -101.863, 16.7963, 0.52", "-14.316, -103.331, 17.2174, 1.18", "-14.1558, -104.05, 17.3737, 1.62", "-13.9918, -104.859, 17.4836, 1.62", "-13.8049, -106.0, 17.6099, 0.96", "-13.7063, -106.883, 17.6964, 0.96", "-13.6554, -108.215, 17.813, 0.66", "-13.7722, -109.96, 17.9355, 0.52", "-13.9983, -111.524, 18.0828, 0.59", "-14.4069, -113.32, 18.2969, 0.74", "-14.5529, -113.786, 18.3693, 1.11", "-14.9215, -114.675, 18.578, 1.25", "-15.6822, -116.095, 19.0303, 0.88", "-16.1713, -116.8, 19.3451, 0.66", "-16.6961, -117.421, 19.6831, 0.66", "-17.216, -117.968, 19.9962, 0.59", "-18.2541, -119.072, 20.5697, 0.59", "-18.8406, -119.707, 20.8488, 0.44", "-19.5502, -120.531, 21.111, 0.44", "-20.1461, -121.299, 21.2483, 0.74", "-20.6328, -122.012, 21.3111, 0.74", "-21.0566, -122.692, 21.3199, 0.66", "-21.6122, -123.689, 21.2492, 1.03", "-22.0304, -124.481, 21.1949, 1.4", "-22.4798, -125.373, 21.1402, 1.4", "-22.8737, -126.146, 21.1006, 1.47", "-23.4969, -127.37, 21.0608, 0.74", "-23.981, -128.323, 21.0202, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.97157, -54.3847, 16.3503, 0.44", "-8.32972, -54.9524, 16.9934, 0.44", "-7.95777, -55.4498, 17.4341, 0.44", "-7.7085, -56.1026, 17.8536, 0.37", "-7.45264, -57.3856, 18.4634, 0.59", "-7.42069, -57.8888, 18.6428, 0.52", "-7.44291, -58.5378, 18.8326, 0.44", "-7.66172, -59.5877, 19.11, 0.44", "-7.97647, -60.4741, 19.3558, 0.44", "-8.2486, -61.0128, 19.5358, 0.59", "-8.67235, -61.631, 19.8374, 0.59", "-9.14453, -62.1544, 20.3186, 0.37", "-9.78833, -62.7354, 21.1548, 0.59", "-10.3571, -63.1866, 22.0236, 0.88", "-10.7177, -63.4399, 22.598, 0.81", "-11.4508, -63.9241, 23.757, 1.03", "-12.1915, -64.4089, 24.8999, 0.88", "-12.8629, -64.874, 25.8449, 0.44", "-13.4111, -65.3254, 26.5141, 0.44", "-13.7661, -65.6799, 26.885, 0.66", "-14.2553, -66.2042, 27.2664, 0.66", "-14.6976, -66.672, 27.4609, 0.66", "-15.3448, -67.3329, 27.5895, 0.66", "-15.9065, -67.9003, 27.6568, 1.33", "-16.1561, -68.1677, 27.6686, 1.47", "-16.6403, -68.6968, 27.6834, 1.03", "-17.2469, -69.3771, 27.7073, 0.81", "-17.7597, -69.9515, 27.7404, 0.74", "-18.3719, -70.6403, 27.8032, 0.52", "-18.803, -71.1491, 27.8649, 0.44", "-21.8182, -77.2043, 32.3146, 0.44", "-23.8384, -83.7383, 36.6106, 0.44", "-26.5503, -90.2452, 40.5563, 0.44", "-30.9182, -96.3232, 43.6474, 0.44", "-35.3666, -101.458, 48.1146, 0.44", "-39.0649, -106.639, 53.1693, 0.44", "-42.933, -112.016, 57.8699, 0.44", "-48.2411, -117.007, 61.4904, 0.44", "-54.7958, -121.355, 63.65, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.9593, -17.3327, -3.28483, 1.47", "3.33797, -19.0929, -3.84527, 1.47", "2.6879, -21.3654, -4.36975, 1.33", "2.25001, -23.1812, -4.64352, 1.55", "1.95008, -24.6582, -4.73674, 1.55", "1.67428, -26.1946, -4.64186, 1.77", "1.33133, -28.1659, -4.31075, 1.77", "1.14879, -29.3856, -3.93323, 2.14", "0.990083, -30.4059, -3.50479, 2.58", "0.768889, -31.7115, -2.92151, 2.36", "0.323526, -34.1057, -1.97222, 1.77", "-0.0862115, -36.168, -1.37484, 1.47", "-0.412231, -37.895, -1.10772, 1.18", "-0.71226, -39.728, -1.01764, 1.11", "-0.922603, -41.3568, -1.10724, 1.33", "-1.10731, -43.5762, -1.47093, 1.25", "-1.14259, -45.5173, -1.95969, 1.47", "-1.06972, -47.2568, -2.44804, 1.62", "-0.968487, -48.5628, -2.81678, 2.14", "-0.904952, -49.4644, -3.05386, 2.58", "-0.873467, -50.7607, -3.34651, 2.43", "-0.955876, -52.8473, -3.74454, 2.14", "-1.14243, -54.5312, -4.04097, 1.92", "-1.46473, -56.2001, -4.31937, 1.47", "-2.04131, -58.2595, -4.66736, 1.25", "-2.65118, -59.9577, -4.90424, 1.11", "-3.20927, -61.2278, -5.02735, 1.4", "-3.6165, -62.0443, -5.07935, 1.55", "-4.25958, -63.2922, -5.10196, 1.18", "-4.87264, -64.5691, -5.0394, 0.88", "-5.42117, -65.9138, -4.96651, 1.18", "-5.85043, -67.2311, -4.8955, 1.03", "-6.20333, -68.4722, -4.81774, 1.03", "-6.63605, -70.3134, -4.71834, 1.47", "-6.83016, -71.4839, -4.67723, 1.77", "-7.01517, -73.3259, -4.68288, 1.77", "-7.10305, -74.7422, -4.79703, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.9593, -17.3327, -3.28483, 1.77", "4.50559, -19.5342, -3.8092, 1.77", "4.74873, -20.6358, -4.05979, 1.99", "5.0283, -21.9025, -4.34794, 1.99", "5.40976, -23.6308, -4.7411, 3.17", "5.58159, -24.4094, -4.9182, 3.76", "5.87562, -25.7416, -5.22125, 4.2", "6.0361, -26.9189, -5.4573, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205314", "5.97663, 56.3268, -0.359339, 0.205314", "7.46769, 71.2525, -0.359339, 0.205314" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-48.2916, 90.9261, -22.7926, 0.29", "-48.4982, 91.5541, -22.8352, 0.29", "-48.7014, 92.5364, -23.0783, 0.29", "-48.8203, 93.4303, -23.3295, 0.29", "-48.8869, 94.4033, -23.6211, 0.29", "-48.9033, 95.108, -23.8489, 0.29", "-48.9135, 96.2685, -24.2205, 0.29", "-48.8475, 98.3743, -24.9788, 0.29", "-48.8134, 99.027, -25.2324, 0.37", "-48.7746, 99.8156, -25.5586, 0.37", "-48.738, 100.79, -25.9917, 0.37", "-48.7037, 101.592, -26.3521, 0.22", "-48.681, 102.425, -26.7127, 0.22", "-48.7507, 103.306, -27.0239, 1.03", "-48.7804, 103.462, -27.0866, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-48.2916, 90.9261, -22.7926, 0.52", "-50.2662, 92.3778, -22.2018, 0.52", "-51.1851, 93.1605, -21.8638, 0.52", "-52.1098, 94.0859, -21.4951, 0.44", "-52.5223, 94.5682, -21.3244, 0.59", "-52.9632, 95.1622, -21.132, 0.59", "-53.7716, 96.3056, -20.7532, 0.37", "-54.7103, 97.8156, -20.357, 0.37", "-55.2776, 98.7948, -20.0799, 0.37", "-55.8532, 99.7798, -19.7901, 0.37", "-56.4978, 100.853, -19.444, 0.29", "-57.1025, 101.81, -19.1182, 0.29", "-57.8049, 102.803, -18.7641, 0.81", "-58.136, 103.193, -18.628, 0.81", "-58.7059, 103.773, -18.4209, 0.74", "-59.4943, 104.501, -18.217, 0.74", "-60.1877, 105.073, -18.1574, 0.96", "-60.8909, 105.613, -18.2187, 0.96", "-61.3601, 105.979, -18.3315, 0.59", "-62.2636, 106.768, -18.6872, 0.29", "-63.0853, 107.6, -19.1674, 0.29", "-63.9606, 108.599, -19.8057, 0.29", "-64.5718, 109.358, -20.279, 0.22", "-65.4847, 110.546, -21.0025, 0.22", "-66.1981, 111.524, -21.5768, 0.74", "-67.0095, 112.687, -22.1779, 0.37", "-67.6667, 113.704, -22.5942, 0.37", "-68.2717, 114.709, -22.9392, 0.81", "-68.7035, 115.385, -23.1776, 1.18", "-69.1202, 115.907, -23.3743, 1.18", "-70.1918, 117.005, -23.8715, 0.29", "-71.3314, 118.088, -24.3835, 0.29", "-72.0557, 118.736, -24.7367, 0.29", "-72.7934, 119.356, -25.1282, 0.29", "-73.8885, 120.199, -25.7069, 0.74", "-74.6804, 120.684, -26.1279, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "131.458, 32.4119, 47.421, 0.29", "137.939, 32.4202, 50.9829, 0.29", "144.27, 32.2316, 54.8021, 0.29", "150.797, 32.8791, 58.2102, 0.29", "156.917, 34.3649, 62.0624, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "131.458, 32.4119, 47.421, 0.29", "139.335, 32.0581, 50.9561, 0.29", "147.121, 33.1873, 54.5062, 0.29", "155.319, 34.9448, 56.5514, 0.29", "162.831, 37.5158, 59.8906, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "86.2378, 40.754, 2.11177, 0.44", "87.1331, 40.7075, 1.8949, 0.44", "87.473, 40.7321, 1.7594, 0.37", "88.0806, 40.8326, 1.47801, 0.59", "88.4115, 40.9027, 1.31844, 0.74", "89.2587, 41.1099, 0.918688, 0.37", "90.1296, 41.348, 0.525014, 0.29", "90.6479, 41.5488, 0.260926, 0.29", "91.0165, 41.7237, 0.0858575, 0.88", "91.1516, 41.7996, 0.0214784, 1.11", "91.4839, 42.0025, -0.120302, 1.11", "91.7895, 42.1959, -0.192865, 1.18", "92.3427, 42.4849, -0.214218, 0.74", "92.7168, 42.6736, -0.208687, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "86.2378, 40.754, 2.11177, 0.29", "87.0078, 41.6819, 2.3824, 0.29", "87.3665, 42.1247, 2.5262, 0.29", "87.8259, 42.6919, 2.71038, 0.66", "88.3219, 43.3042, 2.90923, 0.29", "88.6933, 43.7627, 3.0581, 0.29", "89.4376, 44.6815, 3.35648, 0.29", "89.8534, 45.1847, 3.58645, 0.29", "96.4171, 52.3788, 5.27705, 0.29", "101.827, 60.3196, 7.51779, 0.29", "106.142, 69.0852, 8.5131, 0.29", "111.387, 77.2693, 10.1012, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-56.7671, -55.5867, -58.6561, 0.81", "-57.2497, -56.4493, -60.4866, 0.81", "-57.3405, -56.5674, -60.7185, 0.81", "-58.5129, -57.8881, -62.9774, 0.37", "-58.8534, -58.266, -63.5237, 0.52", "-59.1781, -58.633, -64.0276, 0.66", "-59.5453, -59.0714, -64.6102, 0.66", "-60.3564, -59.9955, -65.698, 0.37", "-60.8768, -60.5653, -66.393, 0.37", "-61.6857, -61.4233, -67.4254, 0.37", "-62.1882, -61.9414, -68.0821, 0.66", "-62.9941, -62.7636, -69.1153, 1.11", "-63.372, -63.147, -69.5678, 1.25", "-64.6833, -64.3267, -71.0941, 0.22", "-65.246, -64.7483, -71.6959, 0.29", "-65.7489, -65.0625, -72.182, 0.59", "-66.3213, -65.3961, -72.6829, 0.81", "-66.9283, -65.7527, -73.2259, 0.81", "-68.4521, -66.8247, -74.6775, 0.37", "-68.8798, -67.1987, -75.1088, 0.37", "-69.5437, -67.9493, -75.9299, 0.59", "-69.7724, -68.2799, -76.2616, 0.81", "-70.5203, -69.6619, -77.4896, 0.44", "-70.973, -70.7426, -78.3015, 0.44", "-71.2939, -71.6913, -78.898, 0.37", "-71.6616, -72.8824, -79.6099, 0.37", "-71.9379, -73.7605, -80.1302, 0.66", "-72.182, -74.4124, -80.5325, 0.81", "-72.4296, -75.0258, -80.8846, 0.81", "-72.9142, -76.1122, -81.5201, 0.29", "-73.2026, -76.7191, -81.8538, 0.96", "-73.9011, -78.1765, -82.5496, 0.29", "-74.3337, -79.1334, -82.9693, 0.29", "-74.7487, -80.1049, -83.3333, 0.44", "-74.9857, -80.6487, -83.5208, 0.44", "-75.3632, -81.5347, -83.7738, 0.29", "-75.5742, -82.0217, -83.9386, 0.59", "-75.885, -82.8116, -84.225, 0.59", "-76.1691, -83.5842, -84.5586, 0.52", "-76.6552, -84.7373, -85.1251, 0.37", "-76.9793, -85.4517, -85.5086, 0.88", "-77.5972, -86.7739, -86.259, 0.44", "-77.9365, -87.5313, -86.6893, 0.59", "-78.2104, -88.1563, -87.0365, 0.59", "-78.5275, -88.9233, -87.4212, 0.59", "-78.843, -89.7249, -87.7473, 0.37", "-79.1021, -90.3199, -87.9273, 0.37", "-79.5387, -91.2289, -88.0775, 0.29", "-79.7056, -91.5552, -88.0958, 0.29", "-80.1209, -92.3942, -88.0704, 0.88", "-80.3879, -92.9785, -88.0119, 1.18", "-80.8491, -93.9117, -87.8604, 0.29", "-81.2019, -94.5635, -87.7392, 0.29", "-81.7466, -95.5207, -87.615, 0.29", "-81.9945, -95.9693, -87.5848, 0.88", "-82.2366, -96.4169, -87.589, 0.88", "-83.053, -97.8802, -87.7388, 0.22", "-83.3399, -98.3693, -87.8442, 0.22", "-83.998, -99.4048, -88.1305, 0.59", "-84.1494, -99.6282, -88.2068, 0.59", "-84.7681, -100.517, -88.5297, 0.22", "-85.1246, -101.03, -88.7317, 0.44", "-85.6129, -101.794, -89.0748, 0.22", "-86.2861, -102.843, -89.5318, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-56.7671, -55.5867, -58.6561, 0.29", "-57.4692, -55.8579, -58.5415, 0.29", "-57.8929, -56.0546, -58.4585, 0.29", "-58.3052, -56.2645, -58.3869, 0.66", "-58.4996, -56.3756, -58.3582, 0.66", "-59.1774, -56.7912, -58.26, 0.29", "-59.469, -56.9756, -58.2225, 0.29", "-59.6768, -57.1318, -58.1772, 0.66", "-59.8709, -57.2914, -58.1333, 0.66", "-60.5307, -57.8551, -57.987, 0.29", "-60.7683, -58.0437, -57.9373, 0.52", "-61.0018, -58.2078, -57.8942, 0.52", "-61.6606, -58.6086, -57.7548, 0.22", "-61.9719, -58.7743, -57.6809, 0.59", "-62.1728, -58.8721, -57.622, 0.74", "-62.5686, -59.0394, -57.4983, 0.29", "-62.7711, -59.1153, -57.4362, 0.29", "-63.0395, -59.2013, -57.3532, 0.96", "-63.3123, -59.2581, -57.2881, 0.96", "-64.0549, -59.4085, -57.0841, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-23.981, -128.323, 21.0202, 0.29", "-23.9194, -128.306, 21.7063, 0.29", "-23.7387, -128.31, 23.2013, 0.29", "-23.6107, -128.352, 24.2677, 0.59", "-23.4597, -128.507, 25.7504, 0.66", "-23.2381, -128.879, 27.8252, 0.59", "-23.0676, -129.275, 29.1839, 0.29", "-22.9062, -129.682, 29.9879, 0.52", "-22.7769, -130.191, 30.2909, 0.66", "-22.5309, -131.343, 30.4314, 0.37", "-22.2038, -132.832, 30.4089, 0.29", "-21.9447, -134.016, 30.3039, 0.29", "-21.6954, -135.195, 30.1369, 0.29", "-21.452, -136.265, 29.9713, 0.29", "-21.1034, -137.529, 29.7775, 0.29", "-20.7503, -138.608, 29.6223, 0.29", "-18.0259, -145.183, 36.3944, 0.29", "-16.0811, -150.499, 44.4728, 0.29", "-11.9077, -156.076, 51.4469, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.981, -128.323, 21.0202, 0.74", "-24.6296, -129.053, 20.7405, 0.74", "-25.1974, -129.808, 20.497, 0.52", "-25.6298, -130.451, 20.3207, 0.52", "-26.3082, -131.63, 20.0587, 0.59", "-26.5822, -132.232, 19.9832, 0.96", "-26.7935, -132.888, 19.9273, 1.18", "-26.8699, -133.448, 19.8475, 1.18", "-26.8545, -133.98, 19.7696, 0.96", "-26.7246, -134.761, 19.6025, 0.66", "-26.4039, -135.871, 19.173, 0.52", "-26.0382, -136.864, 18.7115, 0.52", "-25.5645, -137.915, 18.1154, 0.29", "-25.3496, -138.309, 17.841, 0.37", "-24.7558, -139.222, 17.0237, 0.29", "-24.1133, -140.043, 15.9844, 0.29", "-24.6155, -148.858, 13.9843, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-7.10305, -74.7422, -4.79703, 0.37", "-9.68561, -75.7858, -4.43029, 0.37", "-10.8794, -76.3302, -3.86506, 0.37", "-11.7524, -76.755, -3.33034, 0.37", "-12.3442, -77.0516, -2.95593, 0.37", "-13.088, -77.4357, -2.45341, 0.59", "-13.8083, -77.8187, -1.95879, 0.74", "-14.3541, -78.1138, -1.46738, 0.52", "-14.7661, -78.3411, -1.0915, 0.59", "-15.1355, -78.5834, -0.784065, 0.74", "-15.7779, -79.0019, -0.338678, 0.52", "-16.1864, -79.2544, -0.111121, 0.52", "-16.5733, -79.471, 0.0615817, 0.74", "-17.0092, -79.6997, 0.235199, 0.74", "-17.4262, -79.9245, 0.392391, 0.52", "-18.0312, -80.2468, 0.611546, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.10305, -74.7422, -4.79703, 0.88", "-7.37661, -76.0148, -4.91521, 0.88", "-7.91747, -77.6139, -4.93911, 0.66", "-8.49484, -78.738, -4.6965, 0.74", "-8.99373, -79.4844, -4.45065, 0.88", "-9.86185, -80.613, -4.04922, 0.88", "-10.4129, -81.2951, -3.81333, 1.03", "-11.0896, -82.0397, -3.50056, 1.03", "-12.6347, -83.7747, -2.74149, 1.03", "-13.5135, -84.8666, -2.30389, 1.03", "-14.2353, -85.9709, -1.93547, 0.88", "-14.6396, -86.9205, -1.71077, 0.88", "-14.7848, -87.8094, -1.54904, 0.88", "-14.6017, -89.5405, -1.38016, 1.25", "-14.4236, -90.1716, -1.33744, 1.55", "-14.071, -91.0614, -1.22056, 1.55", "-13.4953, -92.2978, -0.915437, 1.55", "-13.0951, -93.0698, -0.615432, 1.55", "-12.3382, -94.4091, 0.119237, 1.03", "-11.7349, -95.3694, 0.844568, 1.03", "-11.2246, -96.1272, 1.52515, 0.81", "-10.4011, -97.2547, 2.71806, 0.81", "-9.8137, -97.9957, 3.59299, 1.03", "-9.2265, -98.6434, 4.40521, 1.03", "-8.53424, -99.3166, 5.25805, 1.03", "-7.94174, -99.8671, 5.86515, 0.88", "-7.01048, -100.772, 6.68879, 0.88", "-6.53266, -101.258, 7.0422, 0.96", "-5.977, -101.884, 7.41299, 0.96", "-5.2184, -102.835, 7.88347, 1.33", "-4.81357, -103.406, 8.10635, 1.62", "-4.47816, -103.923, 8.28988, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.0361, -26.9189, -5.4573, 0.66", "5.24763, -29.7015, -3.68699, 0.66", "4.9636, -30.602, -3.21667, 0.88", "4.45386, -32.3771, -2.43157, 1.03", "4.25097, -33.2217, -2.0891, 1.03", "4.10647, -33.9669, -1.7912, 1.03", "3.97083, -34.8893, -1.41214, 0.37", "3.86863, -35.8738, -1.10685, 0.37", "3.906, -36.8649, -0.765275, 0.59", "4.18864, -37.7329, -0.384165, 0.81", "4.46462, -38.2368, -0.0672574, 0.81", "4.78714, -38.6939, 0.327463, 0.52", "5.08367, -39.0722, 0.725203, 0.81", "5.50456, -39.6215, 1.34699, 1.25", "5.65236, -39.8906, 1.62043, 1.69", "5.78141, -40.3535, 1.98681, 1.69", "5.79177, -41.4306, 2.5323, 0.96", "5.69547, -42.1145, 2.73667, 0.66", "5.58837, -42.6427, 2.8464, 0.81", "5.34513, -43.7469, 3.05084, 0.44", "5.1869, -44.6284, 3.24563, 0.44", "5.10845, -45.3286, 3.4347, 0.44", "5.09838, -45.9707, 3.71369, 0.88", "5.16968, -46.8332, 4.33075, 1.25", "5.31164, -47.6588, 5.10954, 0.66", "5.47621, -48.2966, 5.80228, 0.52", "5.58539, -48.6709, 6.21676, 0.52", "5.83979, -49.632, 7.23358, 0.74", "6.04453, -50.4803, 8.03933, 1.25", "6.13343, -50.8394, 8.32465, 1.25", "6.2981, -51.4502, 8.71964, 0.52", "6.54073, -52.2319, 9.10678, 0.44", "6.91044, -53.2587, 9.49313, 0.37", "7.17565, -53.8603, 9.65175, 0.37", "7.48271, -54.4629, 9.77921, 0.96", "7.72942, -54.9113, 9.87105, 1.33", "8.48836, -56.1364, 10.147, 0.29", "8.77594, -56.5348, 10.2516, 0.29", "9.07641, -56.8957, 10.3552, 0.29", "9.18809, -57.0298, 10.395, 0.44", "10.8303, -64.3992, 13.6594, 0.44", "13.819, -71.4465, 16.7119, 0.44", "16.419, -78.9832, 18.6899, 0.44", "19.2097, -86.3037, 21.2002, 0.44", "21.4159, -93.6911, 24.063, 0.44", "23.6632, -101.284, 26.2376, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.0361, -26.9189, -5.4573, 1.03", "6.0331, -28.6512, -5.94046, 1.03", "6.184, -30.3978, -6.31129, 1.03", "6.41232, -31.6793, -6.4996, 0.96", "6.71182, -32.9023, -6.62151, 0.96", "7.0804, -34.0963, -6.68663, 0.96", "7.36548, -34.9108, -6.66847, 1.18", "7.92707, -36.0514, -6.40199, 1.47", "8.48256, -36.9863, -6.00767, 2.21", "8.7065, -37.3594, -5.80496, 2.21", "9.01638, -37.9709, -5.43262, 1.99", "9.47462, -39.1765, -4.69121, 1.33", "9.79502, -40.5045, -3.9513, 0.88", "9.90793, -41.5631, -3.43927, 0.74", "9.88454, -42.5468, -3.07995, 0.74", "9.75012, -43.7087, -2.78798, 1.33", "9.63066, -44.4055, -2.68604, 1.62", "9.48547, -45.1585, -2.64763, 1.92", "9.3501, -45.9582, -2.67138, 1.69", "9.20662, -47.4789, -2.76486, 1.33", "9.20835, -49.0215, -2.87597, 1.03", "9.31714, -50.0853, -2.95182, 0.88", "9.5192, -51.0734, -3.00049, 1.03", "9.8963, -52.3698, -3.04065, 1.03", "10.3845, -53.6726, -3.06992, 1.03", "10.8759, -54.7783, -3.11669, 1.33", "11.2643, -55.6035, -3.20268, 1.69", "11.7112, -56.595, -3.38376, 1.47", "11.9877, -57.2801, -3.5748, 1.03", "12.3341, -58.3099, -3.95524, 0.96", "12.5963, -59.2363, -4.38324, 0.96", "12.8541, -60.3604, -4.96984, 1.4", "13.0744, -61.5487, -5.61375, 1.4", "13.2555, -62.5864, -6.17209, 1.55", "13.3667, -63.1559, -6.44298, 1.77", "13.6119, -64.2632, -6.87606, 0.96", "13.8737, -65.2746, -7.14979, 0.66", "14.1617, -66.2489, -7.24195, 0.66", "14.5145, -67.2124, -7.15562, 0.96", "14.9564, -68.1876, -6.91751, 1.11", "15.1959, -68.6209, -6.76453, 1.4", "15.4204, -68.9687, -6.61722, 1.4", "15.8942, -69.6919, -6.30943, 1.4", "16.4608, -70.6239, -5.97908, 0.66", "16.7209, -71.1124, -5.87448, 0.52", "17.0258, -71.794, -5.81612, 0.52", "17.4125, -72.8965, -5.7866, 0.81", "17.7216, -74.1226, -5.76651, 1.03", "17.8573, -74.925, -5.78234, 1.03", "17.9457, -76.0006, -5.82039, 1.03", "18.0033, -77.0602, -5.93048, 1.03", "18.0466, -78.1531, -6.09981, 0.88", "18.1398, -79.4773, -6.39458, 1.03", "18.2825, -80.6525, -6.71368, 0.52", "18.4967, -81.7595, -7.07269, 0.52", "18.9272, -83.3592, -7.72359, 0.88", "19.1482, -84.0064, -8.0415, 1.11", "19.5412, -85.0234, -8.61381, 0.59", "19.7047, -85.454, -8.85689, 0.59", "19.9831, -86.4337, -9.29259, 0.52", "20.1102, -87.4925, -9.59728, 0.52", "19.991, -88.3657, -9.67008, 1.11", "19.7448, -89.1055, -9.6617, 1.25", "19.2083, -90.2258, -9.56729, 1.18", "18.6113, -91.3223, -9.43159, 0.52", "18.1637, -92.0899, -9.28546, 0.52", "17.6021, -93.147, -9.07306, 0.52", "17.4295, -93.5445, -9.01557, 0.81", "17.2073, -94.2697, -8.97571, 0.74", "17.0197, -95.1932, -9.03948, 0.74", "16.874, -96.0985, -9.19275, 1.03", "16.6858, -97.2795, -9.51194, 0.66", "16.5355, -98.0464, -9.78783, 0.52", "16.2957, -98.9147, -10.1938, 1.11", "16.0655, -99.6221, -10.6443, 1.11", "15.7268, -100.605, -11.4003, 0.81", "15.399, -101.617, -12.2812, 0.66", "15.192, -102.326, -12.9169, 0.88", "14.9984, -103.295, -13.7966, 0.66", "14.8898, -104.569, -15.038, 0.59", "14.9147, -105.403, -15.8911, 0.88", "15.0003, -106.133, -16.6565, 1.18", "15.0774, -106.662, -17.2094, 0.96", "15.1897, -107.364, -17.9373, 0.96", "15.3586, -108.653, -19.1878, 0.52", "15.385, -109.081, -19.5687, 0.81", "15.4062, -109.925, -20.2623, 0.66", "15.3751, -110.582, -20.689, 0.66", "15.2785, -111.414, -21.0647, 0.96", "15.0312, -112.481, -21.1849, 0.88", "14.7584, -113.443, -21.0789, 0.88", "14.5037, -114.289, -20.9317, 0.37", "14.0491, -115.846, -20.5989, 1.03", "13.8167, -116.664, -20.4422, 1.03", "13.2654, -118.459, -20.1753, 0.44", "12.9138, -119.744, -20.1195, 0.44", "12.8064, -120.477, -20.2296, 0.74", "12.8677, -121.215, -20.5383, 0.74", "13.1537, -122.22, -21.1671, 0.44", "13.476, -123.022, -21.7303, 0.66", "14.0429, -124.175, -22.5916, 0.44", "14.9031, -125.829, -23.8086, 0.88", "15.8378, -127.656, -25.0623, 0.52", "16.3187, -128.591, -25.6749, 0.74", "16.969, -129.854, -26.4524, 1.33", "17.3137, -130.574, -26.8651, 1.33", "17.8862, -132.064, -27.633, 0.74", "18.142, -133.017, -28.0491, 0.66", "18.352, -134.368, -28.5893, 0.66", "18.4134, -135.298, -28.992, 0.81", "18.386, -136.232, -29.4619, 0.59", "18.2962, -136.851, -29.7962, 1.18", "18.2248, -137.134, -29.9647, 1.18", "17.9134, -138.13, -30.5728, 0.44", "17.5935, -139.006, -31.0276, 0.44", "17.3328, -139.754, -31.3453, 1.03", "17.1812, -140.303, -31.4964, 1.4", "16.9278, -141.511, -31.5518, 0.52", "16.7996, -142.343, -31.5082, 0.52", "16.7098, -143.472, -31.2737, 0.74", "16.6865, -143.893, -31.1167, 0.74", "16.6075, -144.756, -30.6404, 0.59", "16.487, -145.761, -29.8976, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.0361, -26.9189, -5.4573, 0.88", "8.42625, -26.8928, -6.96917, 0.88", "9.10544, -26.8639, -7.33096, 0.88", "9.77993, -26.8317, -7.62553, 1.03", "10.2337, -26.8092, -7.78673, 1.33", "10.6499, -26.7919, -7.91649, 1.62", "11.2496, -26.7762, -8.0867, 1.84", "11.7581, -26.7362, -8.16462, 1.47", "12.3687, -26.693, -8.33893, 1.18", "12.8264, -26.6465, -8.66022, 0.81", "13.3139, -26.579, -9.15819, 0.81", "13.6223, -26.5428, -9.52185, 1.11", "14.2751, -26.5051, -10.375, 1.33", "14.9605, -26.494, -11.3184, 1.77", "16.5195, -26.5351, -13.504, 1.47", "17.0211, -26.5649, -14.1867, 1.11", "17.5334, -26.6031, -14.8362, 1.11", "18.2212, -26.6568, -15.597, 0.81", "18.6382, -26.6947, -15.9639, 0.96", "19.297, -26.7364, -16.371, 0.88", "19.837, -26.6977, -16.6155, 0.74", "20.254, -26.5855, -16.8238, 0.59", "20.7973, -26.3304, -17.1612, 1.03", "21.2034, -26.0891, -17.4299, 1.55", "21.5775, -25.8518, -17.6831, 1.69", "22.6976, -25.1336, -18.4765, 1.69", "23.0439, -24.9213, -18.7338, 1.69", "23.9112, -24.4327, -19.3723, 0.88", "24.4016, -24.1987, -19.7084, 0.81", "24.9855, -23.9838, -20.0499, 1.11", "25.7423, -23.796, -20.4158, 1.18", "26.425, -23.726, -20.6583, 0.59", "26.7288, -23.7355, -20.753, 0.59", "27.462, -23.881, -20.921, 0.96", "27.9834, -24.0722, -21.0299, 1.18", "28.4237, -24.3034, -21.0994, 1.18", "28.8686, -24.5855, -21.1325, 1.4", "29.378, -24.9381, -21.1469, 1.4", "29.8509, -25.2542, -21.1517, 1.11", "30.1855, -25.4474, -21.1449, 1.11", "30.5998, -25.6207, -21.1282, 1.03", "31.1441, -25.7699, -21.0948, 1.03", "31.6199, -25.841, -21.0561, 1.03", "32.1696, -25.8704, -21.0016, 0.96", "32.9288, -25.852, -20.9232, 0.88", "33.7547, -25.7877, -20.8166, 0.88", "34.3021, -25.7168, -20.7336, 1.03", "34.7328, -25.6478, -20.6737, 1.11", "35.0876, -25.5889, -20.6388, 1.18", "35.4108, -25.5498, -20.6475, 1.18", "36.0669, -25.5357, -20.8, 0.81", "36.5399, -25.5904, -21.0088, 0.74", "37.1604, -25.7212, -21.3589, 1.18", "37.6344, -25.8453, -21.6591, 1.4", "38.6007, -26.1175, -22.3311, 1.18", "39.3455, -26.3201, -22.8847, 0.88", "39.9039, -26.4489, -23.3352, 0.74", "40.4699, -26.5456, -23.7851, 0.74", "40.9864, -26.583, -24.164, 1.11", "41.5385, -26.5634, -24.5445, 1.4", "42.0881, -26.5117, -24.9024, 1.4", "42.8541, -26.4432, -25.4112, 1.11", "43.3045, -26.4219, -25.7298, 0.74", "43.8718, -26.4513, -26.1576, 0.66", "44.5473, -26.5829, -26.6952, 0.81", "45.225, -26.8195, -27.2119, 0.74", "45.7884, -27.0755, -27.6352, 1.25", "46.0998, -27.2312, -27.8547, 1.69", "46.505, -27.4185, -28.1203, 1.69", "46.9248, -27.5597, -28.3413, 1.4", "47.5723, -27.6543, -28.5837, 0.88", "48.5123, -27.6094, -28.8392, 0.81", "48.9378, -27.5506, -28.9317, 0.81", "49.5279, -27.4619, -29.0277, 0.81", "50.2805, -27.3537, -29.1003, 0.81", "50.7464, -27.3046, -29.1151, 0.81", "51.3986, -27.2865, -29.1033, 0.81", "51.8307, -27.3358, -29.0655, 0.96", "52.491, -27.5241, -29.0296, 0.96", "52.9394, -27.7262, -29.0518, 1.18", "53.3418, -27.9548, -29.1269, 1.47", "53.7549, -28.2097, -29.2369, 1.47", "54.3594, -28.585, -29.4232, 0.74", "55.0658, -28.9929, -29.6563, 0.74", "55.9365, -29.4339, -29.9628, 0.66", "56.754, -29.7963, -30.2757, 0.74", "57.2663, -29.983, -30.4734, 0.81", "57.8551, -30.1392, -30.6893, 0.81", "58.1547, -30.185, -30.788, 1.11", "58.8751, -30.2099, -31.0044, 1.25", "59.1957, -30.1848, -31.1189, 1.62", "59.5554, -30.1218, -31.3015, 1.62", "60.2653, -29.9655, -31.7373, 0.59", "60.7109, -29.8615, -32.0442, 0.59", "61.3819, -29.7131, -32.5223, 0.88", "62.2829, -29.5339, -33.1702, 1.4", "63.1894, -29.3869, -33.7987, 0.74", "63.722, -29.3243, -34.1508, 0.59", "64.1718, -29.2974, -34.4165, 0.81", "64.5652, -29.3045, -34.5858, 0.81", "64.9325, -29.3385, -34.6631, 0.96", "65.3035, -29.378, -34.6793, 0.96", "65.744, -29.4159, -34.6725, 0.59", "66.4327, -29.4415, -34.6726, 0.59", "67.0995, -29.4295, -34.673, 0.66", "67.491, -29.4003, -34.7061, 1.03", "68.1353, -29.3302, -34.7981, 1.03", "68.7911, -29.2104, -35.052, 0.59", "69.1254, -29.1228, -35.2434, 0.59", "69.5703, -28.9868, -35.5531, 0.59", "70.2508, -28.7958, -36.0725, 1.11", "70.5554, -28.7306, -36.3088, 1.33", "72.2595, -28.4635, -37.5723, 1.03", "72.5646, -28.4237, -37.7785, 1.4", "73.1648, -28.3537, -38.135, 0.81", "73.7656, -28.2865, -38.4339, 0.74", "74.519, -28.204, -38.7151, 0.59", "75.0149, -28.1489, -38.85, 0.59", "75.799, -28.0662, -38.9508, 0.59", "76.7288, -27.93, -39.0667, 0.88", "77.0593, -27.8491, -39.103, 1.25", "77.3535, -27.7468, -39.131, 1.55", "77.7908, -27.5649, -39.1781, 1.55", "78.1463, -27.4113, -39.2257, 1.33", "78.5863, -27.2201, -39.2878, 0.66", "79.1482, -26.987, -39.3654, 0.66", "79.5267, -26.8455, -39.4519, 0.66", "80.2264, -26.5946, -39.6911, 0.66", "80.5477, -26.5173, -39.9191, 0.66", "80.748, -26.4868, -40.1034, 0.96", "80.988, -26.4662, -40.3489, 0.96", "81.7101, -26.4553, -41.1087, 0.74", "82.142, -26.4674, -41.5594, 1.62", "83.8587, -26.5524, -43.2758, 0.66", "84.1177, -26.5598, -43.522, 0.66", "84.5116, -26.5616, -43.8586, 1.11", "85.0211, -26.5563, -44.2389, 1.11", "85.5325, -26.5327, -44.5374, 0.52", "86.0304, -26.4797, -44.7451, 0.52", "86.6545, -26.3474, -44.9128, 1.25", "87.137, -26.2246, -45.0454, 0.88", "88.0567, -25.9375, -45.2981, 0.44", "88.5821, -25.7412, -45.4331, 0.44", "89.3599, -25.4121, -45.6189, 0.52", "89.8744, -25.1734, -45.7335, 0.88", "90.129, -25.0492, -45.7847, 1.11", "90.3501, -24.9279, -45.8539, 1.11", "90.5322, -24.8135, -45.9392, 1.11", "91.1479, -24.3966, -46.368, 0.52", "91.4034, -24.2274, -46.619, 0.52", "91.7649, -24.0003, -47.0217, 0.81", "92.6157, -23.5061, -47.9953, 0.81", "93.0169, -23.2853, -48.443, 1.11", "93.1911, -23.1963, -48.6176, 1.92", "94.1876, -22.746, -49.4395, 0.59", "94.3116, -22.6991, -49.5159, 0.59", "94.7514, -22.5736, -49.6692, 0.88", "95.3037, -22.463, -49.7383, 0.44", "96.2007, -22.3254, -49.8012, 0.44", "96.9053, -22.2403, -49.8305, 0.74", "97.3045, -22.2096, -49.8604, 0.74", "97.9109, -22.2004, -50.0027, 0.52", "98.2831, -22.2225, -50.1668, 0.52", "98.8557, -22.2917, -50.5239, 0.59", "99.0765, -22.319, -50.6854, 0.59", "100.049, -22.4021, -51.442, 0.59", "100.69, -22.4187, -51.9399, 0.81", "101.294, -22.391, -52.4068, 1.4", "101.614, -22.3407, -52.6324, 1.55", "102.343, -22.1099, -53.0512, 0.44", "102.649, -21.958, -53.1749, 0.88", "103.016, -21.7273, -53.2435, 0.88", "103.414, -21.4735, -53.3072, 0.59", "104.03, -21.1069, -53.4141, 0.59", "104.453, -20.9031, -53.5432, 0.81", "104.94, -20.7264, -53.7455, 0.81", "105.596, -20.536, -54.0908, 0.52", "106.351, -20.3398, -54.5748, 0.74", "106.609, -20.2708, -54.816, 0.74", "107.196, -20.0641, -55.6061, 0.37", "107.449, -19.9355, -56.0465, 0.37", "107.791, -19.6917, -56.7704, 0.37", "108.054, -19.4342, -57.4167, 0.59", "108.756, -18.6364, -59.1876, 0.88", "109.087, -18.2538, -59.9912, 0.52", "109.213, -18.1301, -60.2735, 0.52", "109.511, -17.9176, -60.8871, 0.52", "109.769, -17.7809, -61.3328, 0.81", "110.12, -17.6349, -61.8381, 0.59", "110.433, -17.5341, -62.2164, 0.59", "111.485, -17.2763, -63.4251, 1.18", "112.737, -17.0297, -64.9451, 0.74", "113.042, -16.982, -65.3488, 0.74", "113.324, -16.9439, -65.7596, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-48.7804, 103.462, -27.0866, 0.29", "-50.122, 103.228, -28.399, 0.29", "-51.2276, 103.253, -29.4495, 0.29", "-51.7751, 103.486, -30.0562, 0.59", "-52.393, 103.96, -30.772, 0.59", "-52.909, 104.44, -31.3442, 0.59", "-53.4832, 105.014, -31.9296, 0.44", "-53.9485, 105.675, -32.3683, 0.59", "-54.7391, 107.044, -33.2591, 0.37", "-55.1023, 107.714, -33.7314, 0.29", "-55.4718, 108.328, -34.2152, 0.59", "-55.8798, 108.948, -34.739, 0.59", "-56.773, 110.254, -35.8731, 0.29", "-57.5859, 111.517, -36.9539, 0.29", "-57.9422, 112.138, -37.4908, 0.29", "-58.5394, 113.379, -38.6544, 0.29", "-58.8476, 114.196, -39.504, 0.29", "-59.1249, 115.081, -40.481, 0.52", "-59.3552, 115.912, -41.406, 0.66", "-59.6722, 117.229, -42.8054, 0.44", "-59.8612, 118.33, -44.0137, 0.59", "-59.9736, 119.689, -45.685, 0.96", "-60.0185, 120.124, -46.3359, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-48.7804, 103.462, -27.0866, 0.66", "-47.6211, 103.668, -27.0724, 0.66", "-46.6948, 103.833, -27.0611, 0.29", "-46.0225, 103.952, -27.0529, 0.44", "-45.1936, 104.099, -27.0428, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-74.6804, 120.684, -26.1279, 0.29", "-75.1763, 121.264, -26.6999, 0.29", "-75.8049, 121.935, -27.435, 0.59", "-76.2159, 122.378, -27.9268, 0.44", "-76.811, 123.066, -28.6447, 0.88", "-77.0759, 123.418, -28.986, 1.03", "-77.6702, 124.318, -29.7915, 0.52", "-77.8619, 124.648, -30.0786, 0.44", "-78.2413, 125.362, -30.6249, 0.66", "-78.5297, 125.944, -31.0342, 0.88", "-79.0857, 127.08, -31.7478, 0.59", "-79.4599, 127.827, -32.1834, 0.74", "-79.8464, 128.583, -32.5895, 0.74", "-80.3927, 129.576, -33.1238, 0.37", "-80.6487, 129.991, -33.3517, 0.37", "-81.2619, 130.856, -33.8306, 0.66", "-81.6971, 131.365, -34.112, 0.66", "-82.16, 131.808, -34.3663, 0.52", "-82.8387, 132.339, -34.6774, 0.88", "-83.3077, 132.641, -34.8543, 0.88", "-84.0062, 133.004, -35.0568, 0.52", "-84.8551, 133.375, -35.2433, 0.52", "-85.9154, 133.816, -35.4274, 0.88", "-86.6043, 134.112, -35.5255, 0.88", "-87.4647, 134.492, -35.6226, 0.52", "-88.2023, 134.829, -35.697, 0.44", "-89.0416, 135.222, -35.783, 0.37", "-89.8664, 135.648, -35.8621, 0.37", "-90.69, 136.124, -35.9457, 0.29", "-92.0319, 136.973, -36.0998, 0.29", "-92.6583, 137.383, -36.1781, 0.29", "-93.3788, 137.844, -36.2707, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-74.6804, 120.684, -26.1279, 0.29", "-76.1378, 119.546, -25.407, 0.29", "-76.9309, 118.927, -25.0147, 0.29", "-77.4929, 118.488, -24.7367, 0.22", "-78.2098, 117.928, -24.3821, 0.22", "-79.0075, 117.305, -23.9876, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "156.917, 34.3649, 62.0624, 0.29", "159.311, 38.7927, 69.2494, 0.29", "162.317, 42.3242, 76.7283, 0.29", "166.241, 45.5554, 83.9234, 0.29", "169.499, 47.4115, 91.9245, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "156.917, 34.3649, 62.0624, 0.29", "168.224, 32.6173, 63.2698, 0.29", "179.404, 32.3868, 66.0142, 0.29", "189.892, 33.1547, 70.6934, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "92.7168, 42.6736, -0.208687, 0.37", "92.9324, 43.3666, 0.0153777, 0.37", "93.214, 44.3957, 0.39439, 0.37", "93.4179, 45.1411, 0.668958, 0.22", "93.8467, 46.7084, 1.24622, 0.22", "94.1735, 47.9029, 1.68619, 0.66", "94.5672, 49.3414, 2.21606, 1.11", "94.6515, 49.6993, 2.37139, 1.11", "97.4334, 58.6905, 4.42889, 1.11", "100.741, 67.5488, 6.2956, 1.11", "104.635, 75.9904, 8.92764, 1.11", "108.539, 84.0608, 12.5918, 1.11", "113.448, 92.1649, 14.5213, 1.11", "118.553, 100.09, 16.7169, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "92.7168, 42.6736, -0.208687, 0.44", "93.7349, 42.9056, -0.114119, 0.44", "94.8241, 43.104, 0.00423944, 0.44", "95.9884, 43.3009, 0.21539, 0.74", "96.6954, 43.4144, 0.372858, 1.03", "97.3566, 43.518, 0.541995, 1.03", "97.88, 43.5927, 0.65937, 1.03", "98.7687, 43.7001, 0.774993, 0.66", "100.001, 43.8651, 0.800671, 0.66", "100.439, 43.9484, 0.73873, 0.81", "101.11, 44.1337, 0.555348, 0.44", "102.481, 44.6338, 0.0407272, 0.44", "104.115, 45.3602, -0.678287, 0.37", "104.69, 45.6447, -0.971822, 0.37", "105.58, 46.1021, -1.45909, 0.37", "106.648, 46.6825, -2.02004, 0.66", "107.27, 47.0442, -2.31636, 0.66", "108.138, 47.576, -2.61844, 0.37", "108.656, 47.8843, -2.73255, 0.37", "109.313, 48.266, -2.86074, 0.59", "109.897, 48.6077, -2.993, 0.59", "110.469, 48.9213, -3.2187, 0.44", "111.438, 49.3693, -3.65498, 0.66", "111.615, 49.4367, -3.73584, 0.96", "112.289, 49.63, -4.00966, 0.96", "113.272, 49.8122, -4.37005, 1.11", "115.529, 50.0926, -5.06794, 0.44", "116.79, 50.2095, -5.38924, 0.44", "117.771, 50.2923, -5.58805, 0.37", "118.977, 50.4078, -5.82635, 0.37", "119.71, 50.4988, -5.95547, 0.29", "120.725, 50.7023, -6.12403, 0.22", "121.417, 50.9731, -6.29572, 0.59", "121.784, 51.2282, -6.47961, 0.59", "122.86, 52.0668, -7.24933, 0.29", "123.316, 52.4226, -7.60845, 0.37", "123.857, 52.8094, -8.02858, 0.52", "124.448, 53.1259, -8.45404, 0.74", "125.284, 53.4226, -9.12298, 0.96", "126.781, 53.7928, -10.5015, 0.29", "127.36, 53.9144, -11.1267, 0.52", "127.62, 53.9703, -11.4603, 0.81", "128.477, 54.2042, -12.7403, 1.11", "130.035, 54.7308, -15.3984, 0.81", "130.714, 55.038, -16.7004, 0.96", "131.432, 55.4767, -18.206, 0.66", "131.968, 55.859, -19.3418, 0.52", "132.507, 56.2882, -20.3664, 0.52", "132.739, 56.4945, -20.6994, 0.74", "133.34, 56.9304, -21.1129, 0.74", "133.737, 57.1472, -21.2703, 0.96", "134.355, 57.388, -21.4432, 0.96", "135.37, 57.7044, -21.7898, 0.74", "136.373, 58.0143, -22.2245, 0.44", "137.482, 58.416, -22.9144, 0.44", "137.905, 58.6059, -23.2597, 0.96", "138.672, 59.0379, -24.1102, 1.18", "139.742, 59.7799, -25.6264, 0.66", "140.13, 60.0979, -26.3101, 0.66", "140.829, 60.7358, -27.771, 0.59", "141.087, 60.9994, -28.324, 0.52", "141.811, 61.7512, -29.7505, 0.52", "142.014, 61.9892, -30.123, 0.96", "142.444, 62.5112, -30.8127, 0.96", "143.254, 63.5444, -31.9839, 0.59", "143.947, 64.5156, -32.8797, 0.59", "144.386, 65.1674, -33.4149, 0.88", "145.017, 66.1567, -34.0924, 0.74", "145.577, 66.9591, -34.5987, 0.74", "146.237, 67.7817, -35.041, 0.88", "146.657, 68.1794, -35.2437, 0.88", "147.457, 68.7067, -35.5976, 0.37", "148.304, 69.1331, -35.9627, 0.37", "149.642, 69.647, -36.519, 0.37", "150.583, 69.9546, -36.9432, 0.37", "151.683, 70.2757, -37.485, 0.37", "152.348, 70.4858, -37.8236, 0.59", "153.174, 70.7777, -38.2437, 0.74", "153.729, 71.004, -38.542, 0.74", "154.78, 71.5106, -39.1668, 0.44", "155.339, 71.7875, -39.4895, 0.37", "156.971, 72.5177, -40.2323, 0.37", "157.744, 72.8002, -40.5053, 0.74", "158.152, 72.9161, -40.6161, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "111.387, 77.2693, 10.1012, 0.29", "116.99, 85.4325, 11.3301, 0.29", "123.563, 92.9064, 10.802, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "111.387, 77.2693, 10.1012, 0.29", "116.306, 84.8756, 11.4057, 0.29", "121.135, 92.2993, 13.7925, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-24.6155, -148.858, 13.9843, 0.29", "-21.7807, -159.453, 11.4262, 0.29", "-20.3137, -170.554, 10.5086, 0.29", "-19.4568, -181.471, 7.95953, 0.29", "-19.925, -192.642, 6.91495, 0.29", "-21.3963, -203.733, 5.91705, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-24.6155, -148.858, 13.9843, 0.29", "-27.6807, -154.317, 11.4496, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.47816, -103.923, 8.28988, 0.37", "-5.15175, -105.359, 6.6312, 0.37", "-5.61644, -106.116, 5.75227, 0.37", "-6.10389, -106.768, 4.95019, 0.44", "-6.7209, -107.474, 4.05185, 0.74", "-7.36393, -108.12, 3.21292, 0.59", "-8.06382, -108.72, 2.40115, 0.59", "-8.52908, -108.959, 2.00751, 0.74", "-9.34084, -109.211, 1.43512, 0.88", "-9.8752, -109.303, 1.12454, 1.18", "-10.4316, -109.344, 0.847107, 0.59", "-11.2889, -109.356, 0.448399, 0.44", "-12.1374, -109.351, 0.049052, 0.52", "-12.5253, -109.365, -0.146972, 0.74", "-13.186, -109.48, -0.481649, 0.74", "-13.6494, -109.659, -0.74755, 0.59", "-14.1107, -109.96, -1.03788, 0.59", "-14.7004, -110.527, -1.43208, 0.59", "-15.3176, -111.313, -1.84311, 0.44", "-16.0173, -112.362, -2.28639, 0.37", "-16.4195, -113.069, -2.52503, 1.03", "-16.6838, -113.605, -2.68144, 1.03", "-16.8918, -114.098, -2.8038, 0.96", "-17.2394, -115.124, -2.99859, 0.66", "-17.4967, -116.05, -3.14303, 0.66", "-17.7323, -117.108, -3.30355, 0.88", "-17.8489, -117.759, -3.39517, 1.03", "-17.9691, -118.684, -3.52623, 0.88", "-18.0728, -119.875, -3.70382, 0.52", "-18.1192, -120.806, -3.85339, 0.52", "-18.1373, -121.513, -3.98159, 0.96", "-18.1495, -121.974, -4.0758, 0.96", "-18.2153, -123.107, -4.35092, 0.59", "-18.3154, -124.005, -4.60807, 0.66", "-18.4434, -124.675, -4.83749, 0.81", "-18.6461, -125.488, -5.16011, 0.81", "-18.7877, -125.94, -5.36639, 0.81", "-19.0455, -126.763, -5.81668, 0.44", "-19.1696, -127.193, -6.08252, 0.81", "-19.3019, -127.814, -6.49277, 0.81", "-19.4054, -128.703, -7.07704, 0.52", "-19.3998, -129.427, -7.53, 0.52", "-19.2446, -130.754, -8.30646, 0.74", "-19.1221, -131.404, -8.6582, 1.11", "-19.0104, -132.004, -8.95618, 1.11", "-18.8962, -132.768, -9.29531, 0.96", "-18.8317, -133.624, -9.64289, 0.59", "-18.8579, -134.678, -10.0467, 0.44", "-19.0683, -135.841, -10.4834, 0.44", "-19.3308, -136.711, -10.8278, 0.44", "-19.6448, -137.523, -11.1454, 0.74", "-19.8881, -138.119, -11.3693, 0.74", "-20.1303, -138.696, -11.5674, 0.74", "-20.5636, -139.727, -11.8847, 0.66", "-20.8798, -140.497, -12.0955, 0.44", "-21.2817, -141.493, -12.355, 0.44", "-21.9242, -142.879, -12.7034, 0.44", "-22.2984, -143.519, -12.8611, 0.88", "-22.7456, -144.114, -13.0052, 1.18", "-23.1024, -144.496, -13.0888, 1.18", "-23.5564, -144.908, -13.176, 1.03", "-24.8541, -145.909, -13.4095, 0.66", "-26.0551, -146.704, -13.6062, 0.66", "-27.0763, -147.355, -13.7693, 1.25", "-27.6193, -147.704, -13.8537, 1.55", "-28.2753, -148.137, -13.9559, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.47816, -103.923, 8.28988, 0.74", "-4.78517, -104.719, 7.61964, 0.74", "-5.14624, -105.631, 6.83499, 0.74", "-5.33988, -106.178, 6.43794, 0.74", "-5.52585, -106.793, 6.05391, 0.81", "-5.87112, -108.206, 5.32894, 0.52", "-6.07735, -109.334, 4.8573, 0.74", "-6.14498, -109.936, 4.67136, 0.74", "-6.03832, -111.281, 4.58324, 0.74", "-5.82235, -111.952, 4.68729, 0.81", "-5.38768, -112.771, 4.97211, 0.66", "-5.11625, -113.176, 5.16791, 1.11", "-4.8273, -113.572, 5.35438, 1.11", "-4.44826, -114.075, 5.53645, 0.81", "-3.9527, -114.755, 5.66028, 0.81", "-3.50222, -115.418, 5.72735, 0.96", "-3.10265, -116.035, 5.76598, 0.88", "-2.62957, -116.793, 5.81625, 0.96", "-2.30179, -117.357, 5.83778, 1.11", "-1.93829, -118.059, 5.8226, 1.11", "-1.64274, -118.717, 5.76929, 0.74", "-1.26696, -119.74, 5.64052, 0.66", "-1.10521, -120.275, 5.55949, 0.66", "-0.825886, -121.511, 5.36507, 0.66", "-0.65275, -122.806, 5.15028, 0.59", "-0.620465, -123.556, 5.00996, 0.96", "-0.655102, -124.487, 4.81574, 1.18", "-0.735257, -125.18, 4.66914, 1.03", "-0.863997, -125.994, 4.5058, 0.88", "-1.03709, -127.051, 4.33439, 0.74", "-1.16432, -127.97, 4.27695, 0.59", "-1.2608, -128.749, 4.28753, 0.59", "-1.35114, -129.396, 4.35068, 1.4", "-1.44217, -129.873, 4.43393, 1.4", "-1.70272, -131.092, 4.75453, 0.88", "-2.01786, -132.525, 5.31152, 0.66", "-2.16071, -133.126, 5.5917, 0.88", "-2.3541, -133.889, 5.97259, 0.88", "-2.67809, -135.077, 6.56768, 0.59", "-2.91357, -135.834, 6.92957, 0.81", "-3.35198, -137.086, 7.47151, 0.81", "-3.57841, -137.731, 7.6826, 1.11", "-3.7507, -138.261, 7.82296, 1.11", "-3.96073, -139.023, 7.95517, 0.52", "-4.11744, -139.745, 8.03509, 0.74", "-4.23881, -140.388, 8.07121, 1.03", "-4.29971, -140.927, 8.07186, 1.25", "-4.3152, -141.459, 8.11454, 1.33", "-4.28149, -142.333, 8.31667, 1.03", "-4.16262, -143.153, 8.62144, 0.74", "-3.98968, -143.818, 8.94414, 0.44", "-3.76199, -144.422, 9.29691, 0.29", "-3.32847, -145.254, 9.87849, 0.29", "-2.69905, -146.169, 10.6425, 0.29", "-2.31237, -146.58, 11.0601, 0.29", "-1.9272, -146.869, 11.4048, 0.88", "-1.59769, -147.075, 11.6724, 0.88", "-1.04226, -147.391, 12.089, 0.52", "-0.777626, -147.533, 12.2448, 0.52", "-0.295415, -147.816, 12.5142, 0.52", "0.0618114, -148.125, 12.7642, 0.52", "0.524743, -148.699, 13.0839, 0.52", "0.74522, -149.065, 13.2187, 0.88", "0.986841, -149.518, 13.3272, 0.88", "1.29942, -150.072, 13.3998, 1.11", "1.63591, -150.589, 13.4528, 0.66", "2.31097, -151.413, 13.5154, 0.66", "2.64325, -151.708, 13.549, 0.66", "3.22975, -152.13, 13.6377, 0.66", "3.70308, -152.43, 13.7309, 0.52", "4.51152, -152.939, 13.8786, 0.66", "4.76509, -153.106, 13.952, 0.66", "5.29555, -153.481, 14.2139, 0.44", "5.71616, -153.808, 14.5084, 0.44", "6.27349, -154.303, 15.0214, 0.52", "6.90376, -154.939, 15.7593, 0.66", "7.42669, -155.521, 16.4531, 0.44", "7.97511, -156.156, 17.2439, 0.81", "8.49146, -156.747, 17.9625, 0.52", "8.84009, -157.134, 18.4057, 0.74", "9.27927, -157.607, 18.8899, 0.29", "9.52788, -157.865, 19.0919, 0.52", "9.93506, -158.27, 19.2562, 0.59", "10.7349, -159.08, 19.4808, 0.37", "11.3287, -159.672, 19.5806, 0.66", "11.6716, -160.007, 19.6187, 1.03", "12.2267, -160.539, 19.6577, 1.03", "12.8323, -161.128, 19.7307, 0.74", "13.7859, -162.073, 19.9476, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.487, -145.761, -29.8976, 0.44", "16.2588, -147.092, -30.0891, 0.44", "16.0919, -148.021, -30.2282, 0.81", "15.9552, -148.732, -30.3431, 1.18", "15.7678, -149.681, -30.5065, 0.74", "15.5745, -150.667, -30.6823, 0.44", "15.4052, -151.533, -30.8415, 0.96", "15.2304, -152.43, -31.0134, 0.96", "15.0639, -153.28, -31.1852, 1.18", "14.7791, -154.54, -31.4766, 0.74", "14.4825, -155.663, -31.818, 0.66", "14.2063, -156.562, -32.1665, 0.66", "13.8475, -157.669, -32.6937, 0.66", "13.6701, -158.208, -32.993, 1.03", "13.4267, -158.947, -33.4556, 0.81", "13.1213, -160.114, -34.2683, 0.52", "12.9977, -160.827, -34.7255, 0.44", "12.9188, -161.749, -35.1986, 0.37", "12.9057, -162.291, -35.398, 0.66", "12.8866, -162.9, -35.5534, 0.66", "12.8568, -164.513, -35.8665, 0.44", "12.7792, -166.141, -36.1184, 0.44", "12.6498, -167.436, -36.3232, 0.66", "12.4574, -168.567, -36.5306, 0.81", "12.1685, -169.775, -36.8356, 0.96", "11.7317, -171.017, -37.272, 1.11", "11.2926, -171.957, -37.6994, 0.81", "10.8921, -172.768, -38.1601, 0.88", "10.6013, -173.395, -38.5496, 0.66", "10.2141, -174.276, -39.1249, 0.29", "9.74142, -175.404, -39.8654, 0.29", "9.45779, -176.059, -40.2841, 0.52", "9.02159, -177.074, -40.9458, 0.52", "8.65499, -177.906, -41.4914, 0.37", "8.30043, -178.652, -41.9916, 0.29", "7.93492, -179.296, -42.4424, 0.29", "7.77531, -179.522, -42.6322, 0.88", "7.40368, -179.879, -43.0521, 1.11", "6.9368, -180.159, -43.5414, 0.44", "6.33937, -180.401, -44.1391, 0.37", "5.76753, -180.572, -44.7161, 0.59", "5.26235, -180.685, -45.2377, 0.74", "4.60338, -180.81, -45.9311, 0.44", "4.02868, -180.921, -46.5305, 0.37", "3.64315, -181.014, -46.9254, 0.88", "3.1897, -181.168, -47.3716, 1.11", "2.85254, -181.317, -47.6808, 1.11", "2.49325, -181.483, -47.979, 1.11", "1.58457, -181.923, -48.6914, 0.29", "0.983395, -182.229, -49.1604, 0.59", "0.582424, -182.441, -49.4694, 0.59", "-0.412289, -183.019, -50.2201, 0.29", "-1.02796, -183.424, -50.6707, 0.29", "-1.5149, -183.791, -51.0229, 0.52", "-2.0864, -184.274, -51.4382, 0.52", "-2.38954, -184.546, -51.6583, 0.81", "-2.90514, -185.093, -52.042, 0.81", "-3.42104, -185.811, -52.4441, 0.29", "-4.02366, -186.797, -52.9196, 0.29", "-4.3609, -187.378, -53.1768, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.487, -145.761, -29.8976, 0.22", "17.4167, -146.371, -29.5783, 0.22", "18.397, -147.014, -29.2416, 0.22", "19.5805, -147.79, -28.8351, 0.22", "20.3952, -148.325, -28.5554, 0.22", "21.2596, -148.892, -28.2585, 0.22", "22.1489, -149.475, -27.953, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "113.324, -16.9439, -65.7596, 0.74", "117.071, -18.7317, -66.6063, 0.74", "118.1, -19.28, -66.6633, 0.44", "118.85, -19.6531, -66.6431, 0.74", "120.02, -20.1529, -66.5611, 0.52", "121.58, -20.6902, -66.3985, 0.52", "123.245, -21.1524, -66.2512, 0.52", "124.467, -21.3809, -65.9964, 0.52", "125.722, -21.5271, -65.7756, 0.52", "127.291, -21.564, -65.6525, 0.52", "128.575, -21.4447, -65.6795, 0.74", "129.889, -21.1851, -65.835, 1.03", "130.369, -21.0603, -65.9277, 1.4", "130.844, -20.9286, -66.043, 1.4", "132.756, -20.4381, -66.5728, 0.44", "133.487, -20.2508, -66.7055, 0.74", "134.575, -19.97, -66.742, 0.74", "135.318, -19.7606, -66.6404, 0.96", "136.017, -19.5521, -66.4176, 0.96", "136.936, -19.2988, -65.9792, 0.96", "139.125, -18.8057, -64.542, 0.66", "140.035, -18.6658, -63.8265, 0.81", "140.575, -18.6216, -63.3242, 0.81", "141.891, -18.5784, -62.0046, 0.52", "142.879, -18.5818, -61.0029, 0.52", "143.977, -18.6291, -59.9566, 0.52", "145.067, -18.7123, -59.0927, 0.52", "146.477, -18.8147, -58.107, 0.44", "147.256, -18.8602, -57.6878, 0.96", "148.112, -18.913, -57.4671, 1.11", "149.35, -19.0071, -57.4456, 0.44", "150.475, -19.1842, -57.6792, 0.37", "151.302, -19.4174, -58.0022, 0.37", "152.654, -19.946, -58.7405, 0.66", "154.17, -20.6543, -59.7391, 0.74", "154.817, -20.9791, -60.2213, 0.81", "155.755, -21.4631, -61.0096, 0.81", "156.961, -22.0639, -62.0975, 0.66", "158.058, -22.5395, -63.0656, 0.66", "159.093, -22.9254, -63.9132, 0.29", "159.811, -23.1648, -64.4508, 0.59", "160.578, -23.3884, -64.9881, 0.74", "161.302, -23.5802, -65.4946, 0.44", "162.251, -23.8018, -66.1298, 0.37", "163.23, -24.0419, -66.7556, 0.37", "164.192, -24.2968, -67.3233, 0.59", "164.957, -24.5257, -67.7463, 0.59", "166.947, -25.3005, -68.9912, 0.29", "168.241, -25.9433, -69.8805, 0.29", "168.91, -26.3481, -70.3864, 0.29", "169.494, -26.7319, -70.8274, 0.74", "170.077, -27.1456, -71.2751, 0.74", "172.426, -29.085, -73.0601, 0.37", "173.136, -29.796, -73.5858, 0.52", "173.689, -30.4579, -74.0459, 0.81", "174.278, -31.2182, -74.6046, 0.37", "174.803, -31.9042, -75.1728, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "113.324, -16.9439, -65.7596, 0.88", "113.923, -16.8431, -66.7707, 0.88", "114.188, -16.885, -67.2015, 1.25", "114.442, -16.982, -67.6336, 1.25", "114.775, -17.1347, -68.25, 0.59", "115.668, -17.543, -69.8985, 0.59", "116.564, -17.9531, -71.5543, 0.96", "117.045, -18.2355, -72.4345, 1.11", "117.891, -18.8373, -74.0384, 1.25", "118.406, -19.2748, -75.0538, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-93.3788, 137.844, -36.2707, 0.22", "-93.2439, 136.711, -35.5832, 0.22", "-93.1599, 136.006, -35.1548, 0.22", "-92.9717, 134.426, -34.1958, 0.22", "-92.8569, 133.462, -33.6106, 0.22", "-92.7583, 132.634, -33.1077, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-93.3788, 137.844, -36.2707, 0.22", "-94.3645, 138.538, -35.8587, 0.22", "-95.2312, 139.179, -35.5041, 0.22", "-96.0557, 139.789, -35.1668, 0.22", "-96.8445, 140.372, -34.844, 0.22", "-98.0318, 141.25, -34.3582, 0.22", "-98.6376, 141.697, -34.1104, 0.37", "-99.2322, 142.202, -33.839, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "169.499, 47.4115, 91.9245, 0.29", "171.708, 47.5695, 96.0651, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "169.499, 47.4115, 91.9245, 0.29", "172.746, 49.7326, 100.459, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "189.892, 33.1547, 70.6934, 0.29", "190.35, 41.7445, 60.7693, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "189.892, 33.1547, 70.6934, 0.29", "181.837, 27.0109, 72.3886, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "158.152, 72.9161, -40.6161, 0.37", "157.609, 72.9547, -41.2738, 0.37", "156.973, 72.8623, -42.39, 0.66", "156.676, 72.6737, -43.2887, 0.29", "156.462, 72.4765, -44.1151, 0.29", "156.214, 72.2373, -45.1578, 0.29", "155.685, 71.7645, -47.4308, 0.29", "155.455, 71.5084, -48.4848, 0.81", "154.837, 70.6474, -51.6587, 0.44", "154.658, 70.3241, -52.7756, 0.96", "154.544, 70.0598, -53.742, 1.18", "154.448, 69.7389, -55.0163, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "158.152, 72.9161, -40.6161, 0.37", "159.355, 73.1775, -40.5057, 0.37", "160.75, 73.6816, -40.4372, 0.29", "161.262, 73.9103, -40.4222, 0.66", "161.76, 74.1702, -40.4053, 0.66", "162.378, 74.5557, -40.4109, 0.37", "163.239, 75.1223, -40.4427, 0.37", "164.166, 75.8261, -40.5156, 0.81", "164.542, 76.1533, -40.5285, 1.11", "165.059, 76.6379, -40.522, 1.33", "166.082, 77.7109, -40.4635, 0.44", "166.663, 78.414, -40.377, 0.52", "167.389, 79.44, -40.2007, 1.03", "168.132, 80.6713, -39.959, 0.52", "168.466, 81.3021, -39.8111, 0.66", "168.784, 82.0126, -39.6213, 0.66", "169.191, 83.1861, -39.274, 0.44", "169.349, 83.837, -39.128, 0.29", "169.518, 84.6417, -39.0127, 0.44", "169.766, 85.5519, -38.9678, 0.66", "170.036, 86.3037, -38.9651, 0.37", "170.391, 87.1622, -39.0091, 0.37", "170.978, 88.5474, -39.1549, 0.29", "171.341, 89.4408, -39.2553, 0.29", "171.854, 90.9469, -39.448, 0.29", "172.121, 91.9885, -39.5555, 0.29", "172.247, 92.8091, -39.6069, 1.55", "172.273, 93.4968, -39.6185, 1.18", "172.163, 94.2479, -39.5523, 0.96", "171.731, 95.48, -39.3639, 0.52", "170.93, 96.9155, -39.0672, 0.29", "170.283, 97.7994, -38.864, 0.29", "169.939, 98.2129, -38.7687, 0.29", "168.987, 99.3292, -38.5472, 0.22", "168.7, 99.6702, -38.5009, 0.66", "168.357, 100.099, -38.469, 0.66", "167.802, 100.893, -38.496, 0.37", "167.412, 101.69, -38.5593, 0.29", "167.169, 102.482, -38.682, 0.22", "167.036, 103.201, -38.7802, 0.22", "166.916, 104.329, -38.853, 0.22", "166.908, 104.846, -38.8574, 0.29", "166.955, 105.631, -38.8177, 0.29", "167.08, 106.816, -38.7114, 0.29", "167.329, 108.355, -38.5577, 0.29", "167.51, 109.315, -38.4436, 0.29", "167.696, 110.091, -38.3377, 0.29", "167.958, 111.11, -38.1774, 0.29", "168.409, 112.655, -37.8996, 0.29", "168.823, 113.845, -37.6798, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-21.3963, -203.733, 5.91705, 0.29", "-21.529, -214.479, 3.83029, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-21.3963, -203.733, 5.91705, 0.29", "-15.4355, -201.629, 10.6259, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-28.2753, -148.137, -13.9559, 0.37", "-28.6007, -149.267, -14.4223, 0.37", "-28.7562, -149.806, -14.6452, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-28.2753, -148.137, -13.9559, 0.29", "-30.7766, -147.781, -16.1716, 0.29", "-31.5183, -147.677, -16.7969, 0.22", "-32.5229, -147.618, -17.5827, 0.22", "-33.1309, -147.637, -18.0172, 1.47", "-33.5816, -147.651, -18.3393, 1.69", "-34.0123, -147.664, -18.6471, 1.69", "-35.2888, -147.686, -19.2121, 0.96", "-36.1852, -147.791, -19.6907, 0.29", "-36.9343, -148.005, -20.1628, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "13.7859, -162.073, 19.9476, 0.29", "13.9435, -163.093, 18.3977, 0.29", "14.0809, -163.983, 17.046, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.7859, -162.073, 19.9476, 0.29", "14.0214, -160.076, 18.6727, 0.29", "14.1984, -158.884, 17.2509, 0.29", "14.2898, -158.409, 16.0335, 0.29", "14.3784, -157.948, 14.8522, 0.52", "14.6291, -156.645, 11.5112, 0.44", "14.7132, -156.208, 10.3901, 0.29", "14.7496, -156.512, 8.55739, 0.29", "14.7488, -156.754, 7.90356, 0.29", "14.5941, -151.966, -2.08476, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.3609, -187.378, -53.1768, 0.22", "-4.44971, -188.114, -53.1906, 0.22", "-4.54881, -188.967, -53.1565, 0.22", "-4.65076, -190.077, -53.0993, 0.22", "-4.72293, -190.99, -53.049, 0.22", "-4.79268, -192.165, -52.9872, 0.22", "-4.84801, -193.097, -52.9382, 0.22", "-4.90504, -194.184, -52.8911, 0.22", "-4.91594, -194.873, -52.8585, 0.37", "-4.90775, -195.112, -52.8396, 0.37", "-4.86707, -195.783, -52.7648, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.3609, -187.378, -53.1768, 1.55", "-4.82168, -187.609, -53.7549, 1.55", "-5.08661, -187.793, -54.1108, 1.55", "-5.6141, -188.179, -54.8185, 0.29", "-6.40514, -188.745, -55.8326, 0.44", "-6.58894, -188.864, -56.101, 0.44", "-7.3059, -189.236, -57.2549, 0.29", "-7.73199, -189.412, -57.9917, 0.29", "-8.15481, -189.543, -58.7145, 0.29", "-8.63443, -189.628, -59.4912, 0.29", "-9.63939, -189.648, -60.9383, 0.29", "-10.5532, -189.521, -62.1553, 0.29", "-11.1436, -189.336, -62.8827, 0.22", "-11.7521, -189.091, -63.5805, 0.22", "-12.2403, -188.877, -64.1053, 0.22", "-12.7985, -188.627, -64.6499, 0.22", "-13.5689, -188.328, -65.2455, 0.22", "-14.1612, -188.066, -65.6631, 0.22", "-14.5582, -187.839, -65.9579, 0.52", "-14.8943, -187.598, -66.2256, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "118.406, -19.2748, -75.0538, 0.81", "120.942, -19.1443, -76.2443, 0.81", "122.879, -19.126, -77.063, 0.88", "124.422, -19.1902, -77.7257, 0.37", "124.868, -19.2074, -77.9135, 0.37", "125.844, -19.245, -78.324, 0.66", "126.479, -19.2695, -78.5912, 0.74", "126.699, -19.2837, -78.7154, 0.74", "127.921, -19.4293, -79.1473, 0.37", "128.533, -19.55, -79.3546, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "118.406, -19.2748, -75.0538, 0.44", "119.371, -18.7474, -76.3463, 0.44", "120.052, -18.375, -77.259, 0.44", "120.429, -18.1693, -77.7634, 0.44", "121.169, -17.7649, -78.7543, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "154.448, 69.7389, -55.0163, 0.96", "154.447, 68.6785, -57.1106, 0.96", "154.304, 67.559, -59.2154, 0.59", "154.265, 67.2939, -59.7214, 0.59", "154.238, 67.0523, -60.2062, 0.37", "154.209, 66.5313, -61.3429, 0.29", "154.199, 66.2144, -62.0834, 0.29", "154.18, 66.0526, -62.5836, 0.66", "154.178, 65.8728, -63.5593, 0.22", "154.214, 65.7677, -64.1472, 0.22", "154.269, 65.6199, -64.8931, 0.88", "154.294, 65.5287, -65.3479, 0.88", "154.302, 65.2546, -66.5903, 0.37", "154.279, 65.0798, -67.1586, 0.96", "154.241, 64.8602, -67.7096, 1.11", "154.18, 64.3956, -68.7419, 0.44", "154.164, 64.1063, -69.3675, 0.37", "154.169, 63.8837, -69.8622, 0.52", "154.229, 62.9679, -71.9811, 0.37", "154.316, 62.5705, -72.9902, 0.96", "154.41, 62.3015, -73.7838, 0.96", "154.521, 62.0451, -74.5935, 0.52", "154.616, 61.8367, -75.1903, 1.33", "154.732, 61.5625, -75.9032, 1.33", "155.129, 60.3951, -78.8281, 0.52", "155.169, 60.2597, -79.1572, 0.52", "155.243, 59.9568, -79.859, 0.52", "155.511, 58.603, -82.8046, 0.44", "155.593, 57.9761, -84.1463, 0.59", "155.615, 57.6194, -84.9537, 0.59", "155.584, 57.3141, -85.7363, 0.88", "155.561, 57.2263, -86.0116, 1.25", "155.474, 57.1296, -86.5118, 1.47", "155.126, 57.1249, -87.5752, 0.29", "154.772, 57.1957, -88.535, 0.29", "154.621, 57.2352, -88.9178, 0.29", "154.346, 57.3271, -89.5667, 0.29", "154.173, 57.3995, -89.9888, 0.29", "153.761, 57.608, -91.0125, 0.29", "153.598, 57.6856, -91.4139, 0.29", "153.368, 57.746, -91.9196, 0.96", "153.224, 57.7822, -92.2744, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "154.448, 69.7389, -55.0163, 0.15", "154.873, 70.9478, -55.3715, 0.15", "155.105, 71.6101, -55.566, 0.15", "155.292, 72.1423, -55.7224, 0.81", "155.455, 72.6044, -55.8582, 1.03", "155.668, 73.2133, -56.0371, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-28.7562, -149.806, -14.6452, 0.52", "-28.7879, -150.451, -15.0776, 0.52", "-28.8488, -151.492, -15.6491, 0.52", "-29.0128, -152.811, -16.2473, 0.37", "-29.096, -153.418, -16.513, 0.52", "-29.2177, -154.234, -16.8606, 0.44", "-29.3637, -155.139, -17.2567, 0.37", "-29.5456, -156.056, -17.6294, 0.29", "-29.779, -157.022, -17.9702, 0.29", "-30.0761, -158.278, -18.3664, 1.03", "-30.162, -158.631, -18.4819, 1.18", "-30.4282, -159.634, -18.8477, 0.88", "-30.6116, -160.354, -19.1251, 0.44", "-30.7929, -161.292, -19.4838, 0.37", "-30.8303, -161.844, -19.678, 0.59", "-30.8056, -162.363, -19.83, 0.44", "-30.6256, -163.419, -20.0928, 0.44", "-30.4231, -164.17, -20.2465, 0.44", "-30.0648, -165.322, -20.4541, 0.52", "-29.7436, -166.391, -20.6395, 0.66", "-29.5521, -167.274, -20.7527, 0.88", "-29.5008, -167.887, -20.7929, 0.88", "-29.6065, -168.817, -20.7798, 0.52", "-29.9204, -169.614, -20.7338, 0.29", "-30.5291, -170.558, -20.6502, 0.29", "-31.3499, -171.628, -20.6117, 0.29", "-31.9241, -172.333, -20.6539, 0.96", "-32.2697, -172.807, -20.739, 1.18", "-32.5971, -173.333, -20.8586, 1.18", "-33.0387, -174.332, -21.1301, 0.59", "-33.3281, -175.388, -21.3829, 0.52", "-33.5138, -176.42, -21.5899, 0.52", "-33.6834, -177.756, -21.8587, 0.66", "-33.7698, -178.641, -22.0181, 0.66", "-33.8316, -179.596, -22.156, 0.81", "-33.8721, -180.977, -22.2333, 0.81", "-33.9108, -181.969, -22.1108, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-28.7562, -149.806, -14.6452, 0.37", "-29.473, -149.677, -14.2629, 0.37", "-30.4356, -149.554, -13.8065, 0.37", "-30.8996, -149.496, -13.6107, 0.37", "-31.9372, -149.357, -13.2231, 0.29", "-32.5579, -149.258, -13.0147, 0.29", "-33.2938, -149.141, -12.7677, 0.29", "-34.004, -149.045, -12.5242, 0.37", "-34.3635, -149.015, -12.4392, 0.37", "-34.7231, -148.997, -12.3904, 0.29", "-35.1205, -148.962, -12.4003, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.0809, -163.983, 17.046, 0.22", "13.0078, -165.122, 17.2688, 0.22", "11.4615, -166.764, 17.5898, 0.22", "10.5826, -167.697, 17.7722, 0.29", "10.1035, -168.206, 17.8717, 0.29", "8.86213, -169.524, 18.1294, 0.22", "8.05097, -170.386, 18.2978, 0.22", "0.916727, -181.734, 19.0629, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "14.0809, -163.983, 17.046, 0.37", "13.8603, -165.146, 17.6167, 0.37", "13.5576, -166.203, 17.961, 0.96", "13.0783, -167.521, 18.2036, 0.59", "12.6794, -168.53, 18.2598, 0.59", "12.2566, -169.599, 18.3195, 0.22", "11.8538, -170.618, 18.3763, 0.22", "11.3196, -171.708, 18.3144, 0.22", "10.8124, -172.632, 18.106, 0.22", "10.2008, -173.582, 17.7288, 0.22", "7.90337, -183.084, 19.5017, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "121.169, -17.7649, -78.7543, 0.37", "123.389, -18.7004, -84.6636, 0.37", "123.753, -18.8316, -85.6751, 0.66", "124.012, -18.8985, -86.4767, 0.66", "124.129, -18.9163, -86.864, 0.96", "124.417, -18.9012, -87.8609, 1.11", "124.753, -18.8115, -89.0246, 1.11", "125.201, -18.3306, -90.4292, 0.81", "125.542, -17.8491, -91.4425, 1.4", "125.652, -17.6597, -91.7462, 1.4", "126.071, -16.8264, -92.7435, 0.37", "126.368, -16.1639, -93.2927, 0.37", "126.737, -15.3053, -93.77, 0.37", "127.031, -14.5807, -94.0381, 0.66", "127.254, -13.9721, -94.2127, 0.66", "127.484, -13.1027, -94.4719, 0.29", "127.576, -12.4298, -94.6767, 0.52", "127.597, -11.9426, -94.8419, 0.52", "127.602, -11.1326, -95.1662, 0.29", "127.617, -10.3012, -95.542, 1.03", "127.684, -9.07396, -96.1832, 0.66", "127.746, -8.29966, -96.6217, 0.44", "127.774, -8.02388, -96.7815, 0.66", "127.865, -7.17566, -97.2894, 0.37", "127.923, -6.74411, -97.5325, 0.52", "128.065, -5.89857, -97.9543, 0.37", "128.19, -5.30405, -98.183, 0.37", "128.329, -4.6692, -98.419, 0.37", "128.44, -3.95679, -98.683, 0.37", "128.503, -3.26862, -98.9263, 0.96", "128.529, -2.97848, -99.0256, 0.96", "128.666, -1.81079, -99.3938, 0.29", "128.8, -0.864953, -99.6991, 0.29", "128.944, 0.0123644, -99.9904, 0.29", "129.073, 0.74534, -100.242, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "121.169, -17.7649, -78.7543, 0.52", "119.816, -16.1883, -83.0606, 0.52", "119.696, -16.0484, -83.4027, 0.52", "119.09, -15.36, -84.9632, 0.37", "118.92, -15.1673, -85.4, 0.29", "118.406, -14.5844, -86.7214, 0.29", "117.969, -14.0889, -87.8447, 0.29", "117.464, -13.3979, -88.6754, 0.29", "117.243, -13.1084, -89.0428, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "153.224, 57.7822, -92.2744, 0.29", "153.052, 57.6144, -94.1092, 0.29", "153.036, 57.4469, -94.6254, 0.29", "153.039, 57.1482, -95.3249, 0.29", "153.058, 56.6072, -96.5857, 0.29", "153.059, 56.4181, -97.0704, 0.44", "153.062, 56.1615, -97.7287, 0.44", "153.048, 55.3123, -99.625, 0.29", "153.063, 54.868, -100.515, 0.29", "153.094, 54.5917, -101.032, 0.29", "153.149, 54.1671, -101.82, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "153.224, 57.7822, -92.2744, 0.22", "152.191, 57.1737, -91.5657, 0.22", "151.331, 56.74, -91.0229, 0.22", "150.244, 56.2881, -90.3699, 1.4", "149.024, 55.7813, -89.6375, 0.22", "147.664, 55.2158, -88.8203, 1.84", "146.472, 54.7205, -88.1046, 0.22", "145.419, 54.3952, -87.4681, 0.22", "144.422, 54.152, -86.8759, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "155.668, 73.2133, -56.0371, 0.74", "155.395, 74.0032, -56.1028, 0.74", "154.906, 75.2553, -56.1844, 0.22", "154.555, 75.9933, -56.2414, 0.22", "153.765, 77.4175, -56.3469, 0.22", "153.017, 78.6788, -56.3691, 1.33", "152.647, 79.3083, -56.3432, 1.33", "151.856, 80.5852, -56.1913, 0.22", "151.255, 81.4785, -56.0239, 0.22", "150.847, 82.0294, -55.9007, 0.22", "149.911, 83.1974, -55.6663, 0.22", "149.236, 84.0871, -55.4241, 0.22", "148.859, 84.6975, -55.2549, 0.37", "148.55, 85.3548, -55.08, 0.37", "148.3, 86.1427, -54.8658, 0.37", "148.164, 86.7623, -54.7277, 0.15", "147.784, 88.4673, -54.4692, 0.22", "147.462, 89.8669, -54.3118, 0.22", "147.218, 90.8475, -54.1917, 0.22", "146.686, 92.5958, -54.0165, 0.22", "146.228, 93.7888, -53.8952, 0.22", "145.565, 95.2685, -53.7264, 0.22", "145.295, 95.7985, -53.6662, 0.74", "144.085, 97.9177, -53.384, 0.29", "143.32, 99.1625, -53.2277, 0.29", "142.563, 100.374, -53.0988, 0.29", "142.028, 101.27, -52.9543, 0.29", "141.444, 102.387, -52.6792, 0.52", "140.938, 103.411, -52.3729, 0.37", "140.314, 104.772, -51.9289, 0.29", "140.167, 105.108, -51.8091, 0.37", "139.596, 106.422, -51.3401, 0.37", "138.798, 108.157, -50.7025, 0.37", "138.154, 109.483, -50.1831, 0.22", "137.808, 110.212, -49.8716, 0.22", "137.432, 110.995, -49.5302, 0.74", "137.213, 111.427, -49.3572, 0.88", "136.497, 112.772, -48.9392, 0.59", "135.595, 114.304, -48.6392, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "155.668, 73.2133, -56.0371, 0.29", "156.678, 73.4589, -56.4256, 0.29", "157.634, 73.5174, -56.8543, 0.29", "158.603, 73.4957, -57.3109, 1.03", "159.065, 73.4671, -57.536, 1.03", "160.211, 73.3685, -58.0477, 0.44", "161.081, 73.2914, -58.398, 0.29", "162.245, 73.1176, -58.8215, 0.96", "162.638, 73.0505, -58.9465, 0.96", "163.781, 72.8914, -59.2529, 0.22", "164.649, 72.8192, -59.4612, 0.22", "165.53, 72.8281, -59.6227, 0.22", "166.476, 72.9099, -59.781, 0.22", "167.557, 73.0886, -59.9625, 0.22", "168.228, 73.2405, -60.086, 0.52", "168.769, 73.4233, -60.2014, 0.29", "169.431, 73.7565, -60.3769, 1.03", "169.842, 74.0723, -60.482, 1.03", "170.173, 74.4665, -60.5772, 0.88", "170.48, 74.9309, -60.6516, 0.66", "170.836, 75.5757, -60.7258, 0.37", "171.164, 76.3056, -60.7763, 0.59", "171.508, 77.2538, -60.81, 0.29", "171.785, 78.1188, -60.7971, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-33.9108, -181.969, -22.1108, 0.74", "-34.4999, -182.784, -22.24, 0.74", "-35.4667, -183.981, -22.523, 0.66", "-36.1868, -184.762, -22.8095, 0.52", "-37.1454, -185.706, -23.2914, 0.37", "-37.6739, -186.224, -23.5862, 0.74", "-38.1266, -186.664, -23.8198, 1.03", "-38.7453, -187.243, -24.1432, 0.74", "-39.6254, -188.083, -24.6051, 0.52", "-40.5165, -189.026, -25.0404, 0.52", "-41.1183, -189.795, -25.306, 0.66", "-41.9755, -191.152, -25.6239, 0.88", "-42.2267, -191.641, -25.7022, 1.18", "-42.563, -192.436, -25.7812, 0.81", "-42.9524, -193.574, -25.8407, 0.52", "-43.2183, -194.546, -25.9031, 0.52", "-43.4938, -195.709, -26.0335, 0.52", "-43.6034, -196.269, -26.1334, 0.52", "-43.8198, -197.371, -26.3578, 0.52", "-44.0454, -198.462, -26.6114, 0.52", "-44.2312, -199.382, -26.8627, 1.03", "-44.3743, -200.052, -27.0668, 1.25", "-44.5758, -200.884, -27.3775, 0.66", "-44.7963, -201.695, -27.751, 0.29", "-45.1002, -202.491, -28.3205, 0.29", "-45.2866, -202.385, -28.7301, 0.52", "-45.7415, -201.664, -29.7809, 0.29", "-46.0802, -200.986, -30.604, 0.29", "-46.4236, -200.147, -31.4724, 0.22", "-46.4837, -199.968, -31.6365, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-33.9108, -181.969, -22.1108, 0.22", "-33.8077, -184.138, -22.7055, 0.22", "-33.7555, -185.007, -22.944, 0.22", "-33.639, -186.736, -23.3499, 0.22", "-33.5143, -188.693, -23.748, 0.22", "-33.4133, -190.278, -24.0706, 0.22", "-33.2172, -193.356, -24.6967, 0.22", "-33.1843, -194.672, -24.9698, 0.22", "-33.0697, -197.272, -25.5109, 0.22", "-32.9445, -198.725, -25.7784, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "129.073, 0.74534, -100.242, 0.29", "130.234, 0.696063, -100.091, 0.29", "130.902, 0.667723, -100.004, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "129.073, 0.74534, -100.242, 0.37", "128.988, 1.51511, -100.753, 0.37", "128.888, 2.42156, -101.355, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "axon_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "axon_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_ChC_8eec342856_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.1147, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( 0.0742096, 12.4047, -3.55135, 0.37 ) }
    dend_78 { pt3dadd( 0.0145527, 12.7551, -3.61854, 0.74 ) }
    dend_78 { pt3dadd( 0.0529957, 13.0313, -3.72162, 0.74 ) }
    dend_78 { pt3dadd( 0.376565, 13.8793, -4.11373, 0.37 ) }
    dend_78 { pt3dadd( 0.694865, 14.5574, -4.40522, 0.66 ) }
    dend_78 { pt3dadd( 1.06689, 15.2572, -4.71658, 1.33 ) }
    dend_78 { pt3dadd( 1.41732, 15.779, -4.95942, 1.33 ) }
    dend_78 { pt3dadd( 2.00705, 16.6409, -5.36742, 0.74 ) }
    dend_78 { pt3dadd( 2.44757, 17.3299, -5.67468, 0.74 ) }
    dend_78 { pt3dadd( 3.11885, 18.4689, -6.18163, 1.25 ) }
    dend_78 { pt3dadd( 3.54188, 19.3846, -6.57186, 2.06 ) }
    dend_78 { pt3dadd( 3.75648, 20.0684, -6.83251, 2.06 ) }
    dend_78 { pt3dadd( 3.90431, 20.9943, -7.1546, 1.4 ) }
    dend_78 { pt3dadd( 3.84819, 22.0636, -7.5133, 0.74 ) }
    dend_78 { pt3dadd( 3.60082, 22.7649, -7.75073, 1.11 ) }
    dend_78 { pt3dadd( 3.17039, 23.3024, -7.93452, 1.11 ) }
    dend_78 { pt3dadd( 2.5498, 23.7618, -8.08005, 0.81 ) }
    dend_78 { pt3dadd( 1.73248, 24.1497, -8.28062, 0.81 ) }
    dend_78 { pt3dadd( 0.733745, 24.465, -8.54442, 0.81 ) }
    dend_78 { pt3dadd( -0.239994, 24.6962, -8.82952, 0.96 ) }
    dend_78 { pt3dadd( -1.04389, 24.8861, -9.07429, 1.11 ) }
    dend_78 { pt3dadd( -1.76607, 25.0786, -9.33543, 1.11 ) }
    dend_78 { pt3dadd( -3.33488, 25.5997, -10.0206, 1.11 ) }
    dend_78 { pt3dadd( -3.79841, 25.8138, -10.2726, 1.11 ) }
    dend_78 { pt3dadd( -4.54612, 26.3833, -10.7903, 0.59 ) }
    dend_78 { pt3dadd( -4.98797, 26.9941, -11.1644, 0.96 ) }
    dend_78 { pt3dadd( -5.2493, 27.5579, -11.4121, 1.25 ) }
    dend_78 { pt3dadd( -5.43374, 28.0665, -11.5817, 1.55 ) }
    dend_78 { pt3dadd( -5.54563, 28.3868, -11.6547, 1.55 ) }
    dend_78 { pt3dadd( -5.94519, 29.3704, -11.8582, 0.74 ) }
    dend_78 { pt3dadd( -6.57296, 30.56, -12.1005, 0.96 ) }
    dend_78 { pt3dadd( -7.09286, 31.2812, -12.2754, 0.66 ) }
    dend_78 { pt3dadd( -7.52433, 31.7349, -12.4117, 0.66 ) }
    dend_78 { pt3dadd( -8.21723, 32.2987, -12.6278, 0.81 ) }
    dend_78 { pt3dadd( -8.7923, 32.6691, -12.813, 0.96 ) }
    dend_78 { pt3dadd( -9.54899, 33.0669, -13.0763, 1.47 ) }
    dend_78 { pt3dadd( -10.2462, 33.4103, -13.3325, 1.62 ) }
    dend_78 { pt3dadd( -10.9045, 33.7846, -13.5815, 1.47 ) }
    dend_78 { pt3dadd( -11.5173, 34.2045, -13.8255, 1.11 ) }
    dend_78 { pt3dadd( -12.2096, 34.782, -14.1211, 0.81 ) }
    dend_78 { pt3dadd( -13.0246, 35.6416, -14.5215, 0.66 ) }
    dend_78 { pt3dadd( -13.4626, 36.2348, -14.7647, 0.81 ) }
    dend_78 { pt3dadd( -14.0259, 37.2359, -15.1285, 1.03 ) }
    dend_78 { pt3dadd( -14.2436, 37.7576, -15.3123, 1.25 ) }
    dend_78 { pt3dadd( -14.3986, 38.243, -15.4913, 1.25 ) }
    dend_78 { pt3dadd( -14.6788, 39.2907, -15.916, 0.96 ) }
    dend_78 { pt3dadd( -14.8876, 40.0993, -16.2907, 0.81 ) }
    dend_78 { pt3dadd( -15.1787, 41.097, -16.8156, 0.59 ) }
    dend_78 { pt3dadd( -15.4186, 41.7902, -17.2055, 0.59 ) }
    dend_78 { pt3dadd( -15.7487, 42.6115, -17.6729, 0.59 ) }
    dend_78 { pt3dadd( -16.1114, 43.4178, -18.1157, 0.59 ) }
    dend_78 { pt3dadd( -16.4627, 44.1727, -18.4593, 0.44 ) }
    dend_78 { pt3dadd( -16.7956, 44.9609, -18.7227, 0.66 ) }
    dend_78 { pt3dadd( -17.0537, 45.803, -18.867, 0.74 ) }
    dend_78 { pt3dadd( -17.1373, 46.3315, -18.8924, 0.96 ) }
    dend_78 { pt3dadd( -17.1452, 46.9228, -18.8734, 0.96 ) }
    dend_78 { pt3dadd( -17.016, 48.2353, -18.848, 0.52 ) }
    dend_78 { pt3dadd( -16.8375, 49.2996, -18.8628, 0.59 ) }
    dend_78 { pt3dadd( -16.601, 50.5066, -18.9267, 0.59 ) }
    dend_78 { pt3dadd( -16.4792, 51.181, -18.9929, 0.96 ) }
    dend_78 { pt3dadd( -16.3856, 51.9591, -19.1085, 0.96 ) }
    dend_78 { pt3dadd( -16.3563, 53.3408, -19.4002, 0.66 ) }
    dend_78 { pt3dadd( -16.5048, 54.2906, -19.7005, 0.66 ) }
    dend_78 { pt3dadd( -16.8322, 55.0599, -20.013, 0.96 ) }
    dend_78 { pt3dadd( -17.2109, 55.5264, -20.2207, 1.03 ) }
    dend_78 { pt3dadd( -17.6942, 55.9031, -20.4178, 1.03 ) }
    dend_78 { pt3dadd( -18.3368, 56.2458, -20.6548, 1.03 ) }
    dend_78 { pt3dadd( -19.2028, 56.5677, -20.9984, 0.74 ) }
    dend_78 { pt3dadd( -19.8843, 56.7659, -21.3373, 0.74 ) }
    dend_78 { pt3dadd( -20.3389, 56.8724, -21.6131, 0.52 ) }
    dend_78 { pt3dadd( -21.3448, 57.0635, -22.356, 0.52 ) }
    dend_78 { pt3dadd( -22.1961, 57.1914, -23.0606, 0.52 ) }
    dend_78 { pt3dadd( -23.0641, 57.2929, -23.8128, 1.11 ) }
    dend_78 { pt3dadd( -23.5362, 57.3364, -24.2086, 1.4 ) }
    dend_78 { pt3dadd( -24.0722, 57.3705, -24.6109, 1.4 ) }
    dend_78 { pt3dadd( -24.9884, 57.3945, -25.1822, 0.81 ) }
    dend_78 { pt3dadd( -25.5533, 57.4065, -25.4132, 0.59 ) }
    dend_78 { pt3dadd( -26.404, 57.448, -25.5949, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -27.2586, 57.5291, -25.6442, 0.44 ) }
    dend_78 { pt3dadd( -28.1252, 57.6651, -25.6188, 0.74 ) }
    dend_78 { pt3dadd( -28.9533, 57.892, -25.554, 1.33 ) }
    dend_78 { pt3dadd( -29.9605, 58.3388, -25.4955, 0.88 ) }
    dend_78 { pt3dadd( -30.4069, 58.6376, -25.558, 0.59 ) }
    dend_78 { pt3dadd( -30.6835, 58.8997, -25.6711, 0.59 ) }
    dend_78 { pt3dadd( -31.0726, 59.3634, -25.9557, 0.74 ) }
    dend_78 { pt3dadd( -31.554, 60.0137, -26.4535, 0.96 ) }
    dend_78 { pt3dadd( -32.1755, 60.8602, -27.2154, 0.59 ) }
    dend_78 { pt3dadd( -32.8186, 61.6867, -28.0625, 0.59 ) }
    dend_78 { pt3dadd( -33.1533, 62.1018, -28.4854, 0.81 ) }
    dend_78 { pt3dadd( -33.5759, 62.5767, -28.9489, 0.96 ) }
    dend_78 { pt3dadd( -33.981, 62.9619, -29.2959, 1.03 ) }
    dend_78 { pt3dadd( -34.6671, 63.5478, -29.7355, 0.66 ) }
    dend_78 { pt3dadd( -34.8773, 63.7334, -29.8446, 0.66 ) }
    dend_78 { pt3dadd( -35.4417, 64.3175, -30.1164, 0.81 ) }
    dend_78 { pt3dadd( -35.9397, 64.9498, -30.4096, 0.81 ) }
    dend_78 { pt3dadd( -36.3183, 65.6025, -30.6977, 0.66 ) }
    dend_78 { pt3dadd( -36.6268, 66.2974, -30.9918, 0.66 ) }
    dend_78 { pt3dadd( -37.0108, 67.3785, -31.441, 0.52 ) }
    dend_78 { pt3dadd( -37.2304, 68.0534, -31.7306, 0.81 ) }
    dend_78 { pt3dadd( -37.3921, 68.5567, -31.9558, 0.74 ) }
    dend_78 { pt3dadd( -37.7829, 69.6365, -32.4333, 0.59 ) }
    dend_78 { pt3dadd( -38.0213, 70.1644, -32.6473, 0.74 ) }
    dend_78 { pt3dadd( -38.34, 70.6867, -32.8324, 0.96 ) }
    dend_78 { pt3dadd( -38.8321, 71.3142, -32.9789, 0.96 ) }
    dend_78 { pt3dadd( -39.2628, 71.7987, -33.0496, 0.74 ) }
    dend_78 { pt3dadd( -39.8589, 72.4282, -33.0984, 1.03 ) }
    dend_78 { pt3dadd( -40.2892, 72.869, -33.0599, 1.25 ) }
    dend_78 { pt3dadd( -40.591, 73.2028, -32.9982, 0.81 ) }
    dend_78 { pt3dadd( -41.2314, 73.9907, -32.7996, 0.59 ) }
    dend_78 { pt3dadd( -41.6216, 74.5255, -32.6353, 0.66 ) }
    dend_78 { pt3dadd( -41.9455, 75.0101, -32.4707, 0.66 ) }
    dend_78 { pt3dadd( -42.7853, 76.3518, -31.9808, 0.88 ) }
    dend_78 { pt3dadd( -43.2111, 77.039, -31.7102, 1.11 ) }
    dend_78 { pt3dadd( -43.5037, 77.5089, -31.5065, 1.03 ) }
    dend_78 { pt3dadd( -43.8598, 78.0762, -31.2531, 1.25 ) }
    dend_78 { pt3dadd( -43.9928, 78.2871, -31.1503, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.92519, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 5.10915, 10.8505, -4.97995, 1.11 ) }
    dend_53 { pt3dadd( 5.82739, 11.5894, -5.45923, 1.11 ) }
    dend_53 { pt3dadd( 6.97328, 12.8252, -6.22313, 1.11 ) }
    dend_53 { pt3dadd( 7.75926, 13.7153, -6.79821, 0.96 ) }
    dend_53 { pt3dadd( 9.0611, 15.037, -7.64799, 1.55 ) }
    dend_53 { pt3dadd( 10.1934, 16.0937, -8.33191, 1.62 ) }
    dend_53 { pt3dadd( 10.8602, 16.6488, -8.70532, 1.62 ) }
    dend_53 { pt3dadd( 11.8906, 17.4188, -9.15895, 1.25 ) }
    dend_53 { pt3dadd( 13.6182, 18.5766, -9.68928, 0.96 ) }
    dend_53 { pt3dadd( 16.2573, 20.1674, -10.1705, 0.88 ) }
    dend_53 { pt3dadd( 17.4962, 20.8139, -10.2457, 1.55 ) }
    dend_53 { pt3dadd( 18.8489, 21.4226, -10.213, 1.84 ) }
    dend_53 { pt3dadd( 20.8777, 22.24, -10.0541, 1.11 ) }
    dend_53 { pt3dadd( 21.9426, 22.6506, -9.91469, 1.03 ) }
    dend_53 { pt3dadd( 23.1344, 23.1574, -9.68259, 1.25 ) }
    dend_53 { pt3dadd( 24.2872, 23.7932, -9.44097, 0.88 ) }
    dend_53 { pt3dadd( 25.3502, 24.5206, -9.21908, 0.88 ) }
    dend_53 { pt3dadd( 26.3458, 25.315, -9.01417, 0.88 ) }
    dend_53 { pt3dadd( 27.5146, 26.3035, -8.76551, 0.88 ) }
    dend_53 { pt3dadd( 28.5141, 27.2037, -8.4436, 0.96 ) }
    dend_53 { pt3dadd( 29.5484, 28.2118, -8.05714, 0.96 ) }
    dend_53 { pt3dadd( 30.4921, 29.2325, -7.63632, 0.81 ) }
    dend_53 { pt3dadd( 31.881, 30.8268, -6.89476, 1.11 ) }
    dend_53 { pt3dadd( 32.7918, 31.8373, -6.31834, 1.4 ) }
    dend_53 { pt3dadd( 33.8411, 32.8509, -5.53868, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.55044, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.39336, 8.8998, 2.63464, 1.62 ) }
    dend_50 { pt3dadd( 5.11235, 9.31818, 3.28216, 1.25 ) }
    dend_50 { pt3dadd( 6.42036, 9.90215, 4.59535, 1.25 ) }
    dend_50 { pt3dadd( 7.11205, 10.1677, 5.33638, 1.25 ) }
    dend_50 { pt3dadd( 7.83376, 10.3562, 6.20204, 1.92 ) }
    dend_50 { pt3dadd( 8.13916, 10.408, 6.59097, 2.5 ) }
    dend_50 { pt3dadd( 8.8033, 10.4256, 7.51025, 2.5 ) }
    dend_50 { pt3dadd( 10.177, 10.2602, 9.55456, 1.77 ) }
    dend_50 { pt3dadd( 11.1298, 9.96977, 10.9694, 0.96 ) }
    dend_50 { pt3dadd( 12.4742, 9.4171, 12.9608, 0.88 ) }
    dend_50 { pt3dadd( 12.8585, 9.23801, 13.5391, 0.88 ) }
    dend_50 { pt3dadd( 13.1617, 9.10226, 13.9817, 1.4 ) }
    dend_50 { pt3dadd( 13.4614, 8.99071, 14.3685, 1.4 ) }
    dend_50 { pt3dadd( 14.5546, 8.75075, 15.4757, 0.66 ) }
    dend_50 { pt3dadd( 15.0183, 8.77754, 15.8456, 0.66 ) }
    dend_50 { pt3dadd( 16.1194, 9.20568, 16.4974, 0.88 ) }
    dend_50 { pt3dadd( 16.8113, 9.5857, 16.8509, 0.88 ) }
    dend_50 { pt3dadd( 17.6802, 10.1531, 17.195, 0.74 ) }
    dend_50 { pt3dadd( 18.3278, 10.6335, 17.3891, 1.4 ) }
    dend_50 { pt3dadd( 19.0733, 11.2339, 17.5248, 2.06 ) }
    dend_50 { pt3dadd( 19.8073, 11.8065, 17.5819, 1.84 ) }
    dend_50 { pt3dadd( 20.6876, 12.4615, 17.5318, 1.18 ) }
    dend_50 { pt3dadd( 21.6035, 13.0936, 17.5041, 1.18 ) }
    dend_50 { pt3dadd( 21.9754, 13.3178, 17.5567, 1.03 ) }
    dend_50 { pt3dadd( 22.5971, 13.6188, 17.8148, 1.03 ) }
    dend_50 { pt3dadd( 23.0084, 13.7819, 18.2296, 0.59 ) }
    dend_50 { pt3dadd( 23.3904, 13.9546, 18.8413, 0.59 ) }
    dend_50 { pt3dadd( 24.1388, 14.3543, 20.3655, 0.88 ) }
    dend_50 { pt3dadd( 25.0093, 14.8962, 22.3705, 1.62 ) }
    dend_50 { pt3dadd( 25.3834, 15.1618, 23.2423, 1.62 ) }
    dend_50 { pt3dadd( 26.2538, 15.8316, 25.2587, 0.88 ) }
    dend_50 { pt3dadd( 26.6593, 16.1427, 26.1375, 0.88 ) }
    dend_50 { pt3dadd( 27.0332, 16.4394, 26.8642, 1.47 ) }
    dend_50 { pt3dadd( 27.296, 16.6507, 27.2809, 1.47 ) }
    dend_50 { pt3dadd( 27.972, 17.1524, 28.0935, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 28.3491, 17.3827, 28.4574, 0.59 ) }
    dend_50 { pt3dadd( 28.7523, 17.5695, 28.7751, 0.59 ) }
    dend_50 { pt3dadd( 29.7361, 17.9749, 29.5591, 1.25 ) }
    dend_50 { pt3dadd( 31.2831, 18.634, 30.8491, 0.74 ) }
    dend_50 { pt3dadd( 31.7678, 18.8877, 31.3012, 0.29 ) }
    dend_50 { pt3dadd( 32.199, 19.1331, 31.7581, 0.29 ) }
    dend_50 { pt3dadd( 32.446, 19.274, 32.0562, 0.59 ) }
    dend_50 { pt3dadd( 33.0999, 19.6604, 32.8622, 1.11 ) }
    dend_50 { pt3dadd( 33.4303, 19.8318, 33.2575, 1.11 ) }
    dend_50 { pt3dadd( 34.1395, 20.4423, 34.1065, 1.11 ) }
    dend_50 { pt3dadd( 34.54, 20.9979, 34.7813, 0.59 ) }
    dend_50 { pt3dadd( 34.551, 19.4047, 34.8924, 0.59 ) }
    dend_50 { pt3dadd( 34.6882, 17.7619, 35.3056, 0.52 ) }
    dend_50 { pt3dadd( 34.7831, 16.6145, 35.5913, 0.59 ) }
    dend_50 { pt3dadd( 40.8795, 18.5193, 41.0253, 0.59 ) }
    dend_50 { pt3dadd( 47.273, 21.1545, 45.7506, 0.59 ) }
    dend_50 { pt3dadd( 52.557, 24.9687, 50.9743, 0.59 ) }
    dend_50 { pt3dadd( 57.792, 29.5542, 55.5555, 0.59 ) }
    dend_50 { pt3dadd( 63.8791, 34.4746, 58.3823, 0.59 ) }
    dend_50 { pt3dadd( 69.363, 39.6534, 61.8788, 0.59 ) }
    dend_50 { pt3dadd( 75.1492, 43.9198, 66.1078, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.13855, 6.5989, 1.93671, 1.69 ) }
    dend_49 { pt3dadd( -4.84347, 6.91694, 2.38914, 1.4 ) }
    dend_49 { pt3dadd( -5.35014, 7.11931, 2.81219, 1.03 ) }
    dend_49 { pt3dadd( -6.0489, 7.41076, 3.46513, 0.88 ) }
    dend_49 { pt3dadd( -6.53268, 7.63028, 3.94752, 0.88 ) }
    dend_49 { pt3dadd( -7.14896, 7.88604, 4.64434, 0.59 ) }
    dend_49 { pt3dadd( -7.71394, 8.11197, 5.34841, 0.44 ) }
    dend_49 { pt3dadd( -8.76038, 8.52133, 6.73973, 0.37 ) }
    dend_49 { pt3dadd( -9.12228, 8.66388, 7.23858, 0.37 ) }
    dend_49 { pt3dadd( -9.71314, 8.90222, 8.07273, 0.37 ) }
    dend_49 { pt3dadd( -11.1143, 9.49745, 10.1457, 1.03 ) }
    dend_49 { pt3dadd( -11.434, 9.64898, 10.6354, 1.62 ) }
    dend_49 { pt3dadd( -19.4156, 10.4023, 16.1502, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.17031, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.66424, -1.68881, -14.583, 0.74 ) }
    dend_44 { pt3dadd( -5.58944, -2.27461, -14.578, 1.03 ) }
    dend_44 { pt3dadd( -6.39868, -2.77691, -14.5904, 1.25 ) }
    dend_44 { pt3dadd( -7.04577, -3.18454, -14.6074, 1.62 ) }
    dend_44 { pt3dadd( -7.57604, -3.51294, -14.6241, 1.84 ) }
    dend_44 { pt3dadd( -8.27137, -3.91822, -14.6287, 1.84 ) }
    dend_44 { pt3dadd( -8.88728, -4.23491, -14.6007, 1.99 ) }
    dend_44 { pt3dadd( -9.53446, -4.52167, -14.5391, 2.21 ) }
    dend_44 { pt3dadd( -10.2906, -4.79981, -14.4297, 2.65 ) }
    dend_44 { pt3dadd( -10.827, -4.96474, -14.3438, 2.5 ) }
    dend_44 { pt3dadd( -11.7333, -5.20848, -14.206, 1.77 ) }
    dend_44 { pt3dadd( -12.6932, -5.45442, -14.0911, 1.33 ) }
    dend_44 { pt3dadd( -13.3458, -5.62609, -14.0603, 1.18 ) }
    dend_44 { pt3dadd( -14.1196, -5.83756, -14.1094, 1.11 ) }
    dend_44 { pt3dadd( -14.6695, -6.00694, -14.2648, 1.11 ) }
    dend_44 { pt3dadd( -15.236, -6.20596, -14.6109, 1.11 ) }
    dend_44 { pt3dadd( -15.7772, -6.41209, -15.1418, 1.4 ) }
    dend_44 { pt3dadd( -16.3159, -6.60588, -15.8281, 1.03 ) }
    dend_44 { pt3dadd( -16.7696, -6.75053, -16.4931, 0.88 ) }
    dend_44 { pt3dadd( -17.4447, -6.91638, -17.5826, 0.88 ) }
    dend_44 { pt3dadd( -18.1742, -7.03159, -18.8692, 1.47 ) }
    dend_44 { pt3dadd( -18.726, -7.08298, -19.8896, 1.77 ) }
    dend_44 { pt3dadd( -19.3437, -7.09309, -21.0768, 1.84 ) }
    dend_44 { pt3dadd( -19.5622, -7.0802, -21.5076, 2.06 ) }
    dend_44 { pt3dadd( -19.9579, -7.03136, -22.3092, 1.77 ) }
    dend_44 { pt3dadd( -20.5676, -6.90544, -23.5134, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.30384, -1.86883, 9.59687, 2.06 ) }
    dend_41 { pt3dadd( -7.00771, -1.83274, 9.94079, 2.06 ) }
    dend_41 { pt3dadd( -8.83409, -1.85983, 10.7901, 1.84 ) }
    dend_41 { pt3dadd( -9.85087, -1.95129, 11.2492, 1.84 ) }
    dend_41 { pt3dadd( -10.6287, -2.07835, 11.5967, 1.99 ) }
    dend_41 { pt3dadd( -12.0284, -2.42127, 12.2203, 1.55 ) }
    dend_41 { pt3dadd( -13.1672, -2.82872, 12.7147, 1.03 ) }
    dend_41 { pt3dadd( -14.0878, -3.26518, 13.0838, 0.88 ) }
    dend_41 { pt3dadd( -14.9817, -3.81158, 13.343, 1.18 ) }
    dend_41 { pt3dadd( -15.704, -4.3094, 13.5008, 1.18 ) }
    dend_41 { pt3dadd( -16.2577, -4.72626, 13.5924, 1.47 ) }
    dend_41 { pt3dadd( -17.0796, -5.40749, 13.664, 1.25 ) }
    dend_41 { pt3dadd( -17.8886, -6.10639, 13.7708, 1.03 ) }
    dend_41 { pt3dadd( -18.6183, -6.7291, 13.9342, 1.62 ) }
    dend_41 { pt3dadd( -19.3491, -7.33861, 14.2057, 1.69 ) }
    dend_41 { pt3dadd( -19.9126, -7.78057, 14.4957, 1.33 ) }
    dend_41 { pt3dadd( -20.9191, -8.50736, 15.1805, 1.03 ) }
    dend_41 { pt3dadd( -22.1588, -9.25687, 16.259, 0.88 ) }
    dend_41 { pt3dadd( -23.0256, -9.65522, 17.2194, 1.11 ) }
    dend_41 { pt3dadd( -23.7766, -9.85395, 18.2056, 1.33 ) }
    dend_41 { pt3dadd( -24.2449, -9.87412, 18.8988, 1.33 ) }
    dend_41 { pt3dadd( -24.7066, -9.7572, 19.6148, 1.18 ) }
    dend_41 { pt3dadd( -25.256, -9.44881, 20.4425, 0.88 ) }
    dend_41 { pt3dadd( -26.0373, -8.87628, 21.4523, 1.18 ) }
    dend_41 { pt3dadd( -26.5246, -8.53141, 22.0006, 1.33 ) }
    dend_41 { pt3dadd( -26.954, -8.30558, 22.4284, 1.33 ) }
    dend_41 { pt3dadd( -27.6946, -8.09505, 23.122, 0.59 ) }
    dend_41 { pt3dadd( -28.7102, -8.14753, 23.9851, 0.52 ) }
    dend_41 { pt3dadd( -29.2255, -8.45296, 24.3619, 0.59 ) }
    dend_41 { pt3dadd( -29.944, -9.40446, 24.929, 0.59 ) }
    dend_41 { pt3dadd( -30.6359, -10.7129, 25.6189, 0.59 ) }
    dend_41 { pt3dadd( -30.9947, -11.493, 26.0218, 1.03 ) }
    dend_41 { pt3dadd( -31.4054, -12.4671, 26.5712, 1.03 ) }
    dend_41 { pt3dadd( -31.7449, -13.2774, 27.074, 1.03 ) }
    dend_41 { pt3dadd( -32.385, -14.6311, 28.0996, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -32.9918, -15.5241, 29.0707, 0.66 ) }
    dend_41 { pt3dadd( -33.503, -15.9362, 29.8177, 0.66 ) }
    dend_41 { pt3dadd( -34.4037, -16.2773, 31.0014, 0.74 ) }
    dend_41 { pt3dadd( -35.0406, -16.3854, 31.7824, 0.81 ) }
    dend_41 { pt3dadd( -35.633, -16.4255, 32.4818, 0.52 ) }
    dend_41 { pt3dadd( -36.7066, -16.4407, 33.6498, 0.52 ) }
    dend_41 { pt3dadd( -37.1665, -16.4733, 34.155, 0.44 ) }
    dend_41 { pt3dadd( -37.8359, -16.7603, 35.0452, 0.37 ) }
    dend_41 { pt3dadd( -38.1578, -17.2047, 35.5671, 0.37 ) }
    dend_41 { pt3dadd( -38.4565, -17.8789, 36.1006, 1.11 ) }
    dend_41 { pt3dadd( -38.7114, -18.5706, 36.5175, 1.4 ) }
    dend_41 { pt3dadd( -38.9569, -19.4815, 36.9668, 1.4 ) }
    dend_41 { pt3dadd( -39.2586, -20.8645, 37.5863, 0.81 ) }
    dend_41 { pt3dadd( -39.4618, -21.9059, 38.0011, 0.29 ) }
    dend_41 { pt3dadd( -39.6429, -22.5946, 38.2868, 0.29 ) }
    dend_41 { pt3dadd( -39.8569, -23.1476, 38.531, 0.29 ) }
    dend_41 { pt3dadd( -45.7466, -27.0235, 45.0809, 0.29 ) }
    dend_41 { pt3dadd( -52.8743, -30.9962, 50.1785, 0.29 ) }
    dend_41 { pt3dadd( -59.3953, -34.9603, 56.0385, 0.29 ) }
    dend_41 { pt3dadd( -65.4468, -37.6969, 63.0308, 0.29 ) }
    dend_41 { pt3dadd( -71.5128, -40.555, 69.9593, 0.29 ) }
    dend_41 { pt3dadd( -78.4919, -44.7992, 75.0323, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18294, -6.51833, 6.96632, 1.77 ) }
    dend_32 { pt3dadd( -2.15961, -8.06477, 7.15462, 1.47 ) }
    dend_32 { pt3dadd( -2.14675, -9.62109, 7.32501, 1.25 ) }
    dend_32 { pt3dadd( -2.16872, -10.81, 7.44014, 1.62 ) }
    dend_32 { pt3dadd( -2.21262, -11.8131, 7.52689, 1.92 ) }
    dend_32 { pt3dadd( -2.2728, -12.6881, 7.60368, 2.14 ) }
    dend_32 { pt3dadd( -2.38184, -13.7775, 7.69742, 2.14 ) }
    dend_32 { pt3dadd( -2.60664, -15.2898, 7.82763, 1.55 ) }
    dend_32 { pt3dadd( -2.89278, -16.712, 7.94157, 1.33 ) }
    dend_32 { pt3dadd( -3.15192, -17.7896, 8.03751, 1.55 ) }
    dend_32 { pt3dadd( -3.34438, -18.4702, 8.10039, 1.92 ) }
    dend_32 { pt3dadd( -3.61785, -19.2957, 8.20568, 2.21 ) }
    dend_32 { pt3dadd( -3.82268, -19.8398, 8.29106, 2.5 ) }
    dend_32 { pt3dadd( -4.06217, -20.4819, 8.41363, 2.5 ) }
    dend_32 { pt3dadd( -4.28233, -21.1902, 8.56001, 2.36 ) }
    dend_32 { pt3dadd( -4.51917, -22.162, 8.76648, 1.69 ) }
    dend_32 { pt3dadd( -4.74682, -23.4361, 9.02651, 1.25 ) }
    dend_32 { pt3dadd( -4.86262, -24.6268, 9.26091, 1.4 ) }
    dend_32 { pt3dadd( -4.86752, -25.6833, 9.44359, 1.62 ) }
    dend_32 { pt3dadd( -4.74846, -26.9728, 9.63685, 2.06 ) }
    dend_32 { pt3dadd( -4.60353, -27.7675, 9.74686, 2.36 ) }
    dend_32 { pt3dadd( -4.45692, -28.2828, 9.80886, 2.36 ) }
    dend_32 { pt3dadd( -4.09522, -29.2648, 9.90843, 2.14 ) }
    dend_32 { pt3dadd( -3.50624, -30.6427, 10.0367, 1.62 ) }
    dend_32 { pt3dadd( -2.98651, -31.8034, 10.1317, 1.25 ) }
    dend_32 { pt3dadd( -2.45342, -33.0008, 10.2425, 1.03 ) }
    dend_32 { pt3dadd( -1.8844, -34.3471, 10.3941, 1.03 ) }
    dend_32 { pt3dadd( -1.46054, -35.4745, 10.5495, 1.03 ) }
    dend_32 { pt3dadd( -0.999094, -36.9338, 10.8029, 1.03 ) }
    dend_32 { pt3dadd( -0.797869, -37.8029, 10.9876, 0.96 ) }
    dend_32 { pt3dadd( -0.736829, -38.4896, 11.157, 0.96 ) }
    dend_32 { pt3dadd( -0.819672, -39.1016, 11.3263, 0.96 ) }
    dend_32 { pt3dadd( -1.20061, -39.9077, 11.608, 0.96 ) }
    dend_32 { pt3dadd( -1.57318, -40.3458, 11.7852, 0.88 ) }
    dend_32 { pt3dadd( -1.96402, -40.6696, 11.924, 1.18 ) }
    dend_32 { pt3dadd( -2.59496, -41.1191, 12.1011, 1.18 ) }
    dend_32 { pt3dadd( -3.20615, -41.5298, 12.2579, 1.33 ) }
    dend_32 { pt3dadd( -3.90987, -41.9958, 12.4535, 1.33 ) }
    dend_32 { pt3dadd( -4.51491, -42.402, 12.643, 1.4 ) }
    dend_32 { pt3dadd( -5.16351, -42.8653, 12.8773, 1.55 ) }
    dend_32 { pt3dadd( -5.78479, -43.3559, 13.1531, 1.55 ) }
    dend_32 { pt3dadd( -6.488, -44.0263, 13.5491, 1.84 ) }
    dend_32 { pt3dadd( -6.91385, -44.5158, 13.83, 2.14 ) }
    dend_32 { pt3dadd( -7.33094, -45.106, 14.1313, 1.99 ) }
    dend_32 { pt3dadd( -7.91267, -46.1719, 14.6131, 0.88 ) }
    dend_32 { pt3dadd( -8.30991, -47.1562, 14.9919, 0.88 ) }
    dend_32 { pt3dadd( -8.64481, -48.319, 15.3697, 0.81 ) }
    dend_32 { pt3dadd( -8.83225, -49.347, 15.6262, 0.74 ) }
    dend_32 { pt3dadd( -9.00624, -50.6449, 15.9078, 0.74 ) }
    dend_32 { pt3dadd( -9.09152, -51.8575, 16.1323, 1.03 ) }
    dend_32 { pt3dadd( -9.08818, -52.9469, 16.2766, 1.4 ) }
    dend_32 { pt3dadd( -9.05019, -53.6248, 16.3295, 1.69 ) }
    dend_32 { pt3dadd( -8.97157, -54.3847, 16.3503, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.81723, -10.8959, -2.31423, 3.39 ) }
    dend_0 { pt3dadd( 2.11991, -11.82, -2.44375, 3.02 ) }
    dend_0 { pt3dadd( 2.42637, -12.7557, -2.5749, 3.02 ) }
    dend_0 { pt3dadd( 2.82935, -13.9862, -2.74735, 3.02 ) }
    dend_0 { pt3dadd( 3.26223, -15.3079, -2.9326, 3.24 ) }
    dend_0 { pt3dadd( 3.58868, -16.2825, -3.08378, 3.54 ) }
    dend_0 { pt3dadd( 3.9593, -17.3327, -3.28483, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -43.9928, 78.2871, -31.1503, 0.44 ) }
    dend_88 { pt3dadd( -44.8449, 79.2791, -31.9623, 0.44 ) }
    dend_88 { pt3dadd( -45.2421, 79.7603, -32.3119, 0.37 ) }
    dend_88 { pt3dadd( -45.4449, 80.0206, -32.4353, 0.66 ) }
    dend_88 { pt3dadd( -45.7861, 80.4881, -32.5864, 0.66 ) }
    dend_88 { pt3dadd( -46.1399, 81.0135, -32.6966, 0.59 ) }
    dend_88 { pt3dadd( -46.3762, 81.4094, -32.7449, 0.81 ) }
    dend_88 { pt3dadd( -46.6221, 81.8981, -32.7054, 0.81 ) }
    dend_88 { pt3dadd( -47.0198, 83.0384, -32.4989, 0.52 ) }
    dend_88 { pt3dadd( -47.114, 83.5893, -32.3573, 0.52 ) }
    dend_88 { pt3dadd( -47.1016, 84.4612, -32.0946, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -46.9335, 85.3144, -31.8266, 0.44 ) }
    dend_88 { pt3dadd( -46.6158, 86.163, -31.5596, 0.74 ) }
    dend_88 { pt3dadd( -46.2932, 86.7717, -31.3631, 0.74 ) }
    dend_88 { pt3dadd( -45.7088, 87.6373, -31.0992, 0.44 ) }
    dend_88 { pt3dadd( -45.2608, 88.2433, -30.8906, 0.59 ) }
    dend_88 { pt3dadd( -44.8052, 88.84, -30.6864, 0.59 ) }
    dend_88 { pt3dadd( -44.3437, 89.4613, -30.4975, 0.59 ) }
    dend_88 { pt3dadd( -43.9813, 90.0075, -30.3696, 0.37 ) }
    dend_88 { pt3dadd( -43.7161, 90.4421, -30.2893, 0.37 ) }
    dend_88 { pt3dadd( -43.3139, 91.1292, -30.1819, 0.59 ) }
    dend_88 { pt3dadd( -42.9099, 91.7924, -30.0864, 0.37 ) }
    dend_88 { pt3dadd( -42.5405, 92.3693, -30.0029, 0.81 ) }
    dend_88 { pt3dadd( -42.1481, 92.9566, -29.9227, 0.81 ) }
    dend_88 { pt3dadd( -41.4207, 94.0428, -29.8, 0.44 ) }
    dend_88 { pt3dadd( -40.8594, 94.8984, -29.7163, 0.44 ) }
    dend_88 { pt3dadd( -40.4538, 95.4987, -29.6793, 0.81 ) }
    dend_88 { pt3dadd( -40.0395, 96.1144, -29.6498, 0.44 ) }
    dend_88 { pt3dadd( -39.8118, 96.4683, -29.646, 0.59 ) }
    dend_88 { pt3dadd( -39.256, 97.3758, -29.6842, 0.59 ) }
    dend_88 { pt3dadd( -38.8981, 98.0354, -29.7992, 0.44 ) }
    dend_88 { pt3dadd( -38.4969, 98.9509, -30.0497, 0.44 ) }
    dend_88 { pt3dadd( -38.1992, 99.7466, -30.3769, 0.96 ) }
    dend_88 { pt3dadd( -38.0727, 100.128, -30.5871, 1.18 ) }
    dend_88 { pt3dadd( -37.9719, 100.484, -30.8298, 1.18 ) }
    dend_88 { pt3dadd( -37.6903, 101.493, -31.8216, 0.44 ) }
    dend_88 { pt3dadd( -37.5211, 102.229, -32.6734, 0.37 ) }
    dend_88 { pt3dadd( -37.3299, 102.87, -33.5897, 0.66 ) }
    dend_88 { pt3dadd( -37.2384, 103.147, -34.028, 0.66 ) }
    dend_88 { pt3dadd( -37.0934, 103.57, -34.7365, 0.66 ) }
    dend_88 { pt3dadd( -36.4419, 105.19, -37.5531, 0.44 ) }
    dend_88 { pt3dadd( -36.315, 105.468, -38.0545, 0.44 ) }
    dend_88 { pt3dadd( -35.6038, 106.926, -40.712, 0.29 ) }
    dend_88 { pt3dadd( -35.4557, 107.252, -41.2714, 0.29 ) }
    dend_88 { pt3dadd( -35.2876, 107.648, -41.9, 0.29 ) }
    dend_88 { pt3dadd( -34.9409, 108.564, -43.2083, 0.74 ) }
    dend_88 { pt3dadd( -34.5804, 109.756, -44.6446, 0.44 ) }
    dend_88 { pt3dadd( -34.5059, 110.051, -44.9458, 0.44 ) }
    dend_88 { pt3dadd( -34.4132, 110.735, -45.4708, 0.37 ) }
    dend_88 { pt3dadd( -34.3582, 111.427, -45.919, 0.88 ) }
    dend_88 { pt3dadd( -34.3824, 112.528, -46.4531, 0.29 ) }
    dend_88 { pt3dadd( -34.4526, 112.954, -46.6041, 0.52 ) }
    dend_88 { pt3dadd( -34.6572, 113.706, -46.8338, 0.15 ) }
    dend_88 { pt3dadd( -34.8628, 114.369, -47.0678, 0.22 ) }
    dend_88 { pt3dadd( -35.2104, 115.401, -47.4533, 0.22 ) }
    dend_88 { pt3dadd( -35.5619, 116.289, -47.7903, 0.22 ) }
    dend_88 { pt3dadd( -35.9084, 117.115, -48.0875, 0.22 ) }
    dend_88 { pt3dadd( -36.4273, 118.331, -48.5753, 1.47 ) }
    dend_88 { pt3dadd( -36.8027, 119.233, -48.9803, 0.66 ) }
    dend_88 { pt3dadd( -37.0277, 119.817, -49.2468, 0.96 ) }
    dend_88 { pt3dadd( -37.3702, 120.788, -49.6666, 0.22 ) }
    dend_88 { pt3dadd( -37.6039, 121.435, -49.9024, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -43.9928, 78.2871, -31.1503, 0.37 ) }
    dend_79 { pt3dadd( -44.1592, 79.6263, -30.6393, 0.37 ) }
    dend_79 { pt3dadd( -44.1544, 80.3094, -30.4275, 0.37 ) }
    dend_79 { pt3dadd( -44.1827, 80.9429, -30.1697, 0.37 ) }
    dend_79 { pt3dadd( -44.3198, 81.8682, -29.7271, 0.74 ) }
    dend_79 { pt3dadd( -44.5216, 82.6365, -29.3412, 0.29 ) }
    dend_79 { pt3dadd( -44.8685, 83.5254, -28.8981, 0.29 ) }
    dend_79 { pt3dadd( -45.053, 83.9394, -28.6887, 0.52 ) }
    dend_79 { pt3dadd( -45.5859, 84.8112, -28.0953, 0.44 ) }
    dend_79 { pt3dadd( -45.9788, 85.3489, -27.6603, 0.29 ) }
    dend_79 { pt3dadd( -46.3297, 85.8129, -27.2569, 0.29 ) }
    dend_79 { pt3dadd( -46.707, 86.3252, -26.7793, 0.29 ) }
    dend_79 { pt3dadd( -47.2631, 87.203, -25.9757, 0.44 ) }
    dend_79 { pt3dadd( -47.6574, 87.9235, -25.3236, 0.44 ) }
    dend_79 { pt3dadd( -48.0279, 88.8656, -24.5333, 0.52 ) }
    dend_79 { pt3dadd( -48.2205, 89.6287, -23.8901, 0.37 ) }
    dend_79 { pt3dadd( -48.2977, 90.2465, -23.3593, 0.37 ) }
    dend_79 { pt3dadd( -48.2916, 90.9261, -22.7926, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 33.8411, 32.8509, -5.53868, 0.29 ) }
    dend_69 { pt3dadd( 35.017, 32.4019, -4.02706, 0.29 ) }
    dend_69 { pt3dadd( 36.1133, 32.04, -2.79524, 0.59 ) }
    dend_69 { pt3dadd( 37.182, 31.6927, -1.74239, 0.74 ) }
    dend_69 { pt3dadd( 37.7662, 31.5112, -1.21264, 0.37 ) }
    dend_69 { pt3dadd( 38.6668, 31.2544, -0.337043, 0.37 ) }
    dend_69 { pt3dadd( 39.1681, 31.1224, 0.188396, 0.66 ) }
    dend_69 { pt3dadd( 39.5431, 31.0643, 0.605622, 0.96 ) }
    dend_69 { pt3dadd( 40.089, 31.0209, 1.41402, 1.25 ) }
    dend_69 { pt3dadd( 40.9217, 31.0344, 2.96708, 0.37 ) }
    dend_69 { pt3dadd( 41.6822, 31.1612, 4.61092, 0.37 ) }
    dend_69 { pt3dadd( 41.9332, 31.2345, 5.18927, 0.37 ) }
    dend_69 { pt3dadd( 42.4794, 31.4198, 6.36529, 0.74 ) }
    dend_69 { pt3dadd( 43.4502, 31.7357, 8.14481, 0.66 ) }
    dend_69 { pt3dadd( 44.2463, 31.9785, 9.33778, 0.52 ) }
    dend_69 { pt3dadd( 44.8693, 32.1132, 10.0017, 0.66 ) }
    dend_69 { pt3dadd( 45.6343, 32.2038, 10.5505, 0.66 ) }
    dend_69 { pt3dadd( 46.6756, 32.2657, 11.1003, 0.37 ) }
    dend_69 { pt3dadd( 47.8788, 32.2614, 11.5511, 0.52 ) }
    dend_69 { pt3dadd( 48.5473, 32.2161, 11.7394, 0.52 ) }
    dend_69 { pt3dadd( 49.7128, 32.0977, 12.0356, 0.66 ) }
    dend_69 { pt3dadd( 50.3669, 32.0107, 12.1908, 0.88 ) }
    dend_69 { pt3dadd( 51.2374, 31.8991, 12.3773, 0.88 ) }
    dend_69 { pt3dadd( 52.2497, 31.8013, 12.6404, 0.66 ) }
    dend_69 { pt3dadd( 53.5186, 31.7431, 12.996, 0.29 ) }
    dend_69 { pt3dadd( 54.6303, 31.7562, 13.3038, 0.29 ) }
    dend_69 { pt3dadd( 56.3144, 31.92, 13.7568, 0.88 ) }
    dend_69 { pt3dadd( 56.7809, 31.9855, 13.8811, 0.88 ) }
    dend_69 { pt3dadd( 58.6491, 32.3161, 14.3549, 0.29 ) }
    dend_69 { pt3dadd( 60.089, 32.6272, 14.685, 0.29 ) }
    dend_69 { pt3dadd( 61.4646, 32.9731, 14.9659, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 63.0998, 33.426, 15.2729, 0.29 ) }
    dend_69 { pt3dadd( 64.2887, 33.7639, 15.4913, 0.29 ) }
    dend_69 { pt3dadd( 65.3881, 34.0568, 15.6674, 0.81 ) }
    dend_69 { pt3dadd( 66.2499, 34.2711, 15.7556, 0.81 ) }
    dend_69 { pt3dadd( 67.014, 34.4495, 15.8276, 0.81 ) }
    dend_69 { pt3dadd( 68.1713, 34.6945, 15.9292, 0.59 ) }
    dend_69 { pt3dadd( 69.5174, 34.9275, 16.0469, 0.29 ) }
    dend_69 { pt3dadd( 70.7064, 35.1731, 16.1684, 0.81 ) }
    dend_69 { pt3dadd( 71.8809, 35.4186, 16.2991, 0.22 ) }
    dend_69 { pt3dadd( 72.9229, 35.6172, 16.4125, 0.22 ) }
    dend_69 { pt3dadd( 73.5827, 35.718, 16.4702, 0.52 ) }
    dend_69 { pt3dadd( 74.4898, 35.822, 16.4924, 0.22 ) }
    dend_69 { pt3dadd( 84.0543, 36.9638, 21.7587, 0.22 ) }
    dend_69 { pt3dadd( 93.0031, 38.355, 27.9586, 0.22 ) }
    dend_69 { pt3dadd( 103.088, 37.9785, 32.2991, 0.22 ) }
    dend_69 { pt3dadd( 113.06, 35.7258, 36.2975, 0.22 ) }
    dend_69 { pt3dadd( 123.044, 34.7859, 40.7818, 0.22 ) }
    dend_69 { pt3dadd( 131.458, 32.4119, 47.421, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 33.8411, 32.8509, -5.53868, 0.81 ) }
    dend_54 { pt3dadd( 35.5309, 33.0011, -4.96349, 0.81 ) }
    dend_54 { pt3dadd( 36.3323, 32.9837, -4.73648, 1.03 ) }
    dend_54 { pt3dadd( 38.4638, 32.8419, -4.34, 0.96 ) }
    dend_54 { pt3dadd( 39.6323, 32.775, -4.18644, 0.96 ) }
    dend_54 { pt3dadd( 40.9951, 32.7568, -4.05286, 0.59 ) }
    dend_54 { pt3dadd( 41.9433, 32.7937, -3.98287, 0.66 ) }
    dend_54 { pt3dadd( 43.2152, 32.8514, -3.93109, 0.66 ) }
    dend_54 { pt3dadd( 44.7317, 33.0455, -3.96352, 0.59 ) }
    dend_54 { pt3dadd( 45.5265, 33.2748, -4.07436, 0.81 ) }
    dend_54 { pt3dadd( 46.5311, 33.7419, -4.24695, 0.96 ) }
    dend_54 { pt3dadd( 47.4551, 34.2886, -4.41508, 1.25 ) }
    dend_54 { pt3dadd( 48.1231, 34.7011, -4.52797, 1.4 ) }
    dend_54 { pt3dadd( 48.9631, 35.2021, -4.63169, 1.4 ) }
    dend_54 { pt3dadd( 50.3362, 35.8921, -4.7209, 0.59 ) }
    dend_54 { pt3dadd( 50.8958, 36.0768, -4.74183, 0.59 ) }
    dend_54 { pt3dadd( 52.062, 36.2378, -4.75332, 0.59 ) }
    dend_54 { pt3dadd( 53.3379, 36.2248, -4.73493, 1.03 ) }
    dend_54 { pt3dadd( 54.2452, 36.1234, -4.70281, 1.18 ) }
    dend_54 { pt3dadd( 55.0351, 35.9718, -4.6282, 1.18 ) }
    dend_54 { pt3dadd( 56.3115, 35.6519, -4.4311, 0.74 ) }
    dend_54 { pt3dadd( 57.5392, 35.3161, -4.15861, 0.66 ) }
    dend_54 { pt3dadd( 58.1227, 35.1593, -4.00378, 0.96 ) }
    dend_54 { pt3dadd( 58.8838, 34.9878, -3.79683, 0.96 ) }
    dend_54 { pt3dadd( 60.2492, 34.7457, -3.43884, 1.03 ) }
    dend_54 { pt3dadd( 60.8938, 34.6725, -3.27285, 1.03 ) }
    dend_54 { pt3dadd( 62.6856, 34.667, -2.84674, 0.59 ) }
    dend_54 { pt3dadd( 63.6571, 34.7699, -2.64542, 0.59 ) }
    dend_54 { pt3dadd( 65.3899, 35.0813, -2.3508, 0.59 ) }
    dend_54 { pt3dadd( 66.2375, 35.2916, -2.24348, 0.81 ) }
    dend_54 { pt3dadd( 67.0291, 35.5577, -2.18973, 0.81 ) }
    dend_54 { pt3dadd( 68.6408, 36.2221, -2.17495, 0.37 ) }
    dend_54 { pt3dadd( 69.6548, 36.6722, -2.22977, 0.66 ) }
    dend_54 { pt3dadd( 70.5548, 37.0387, -2.28589, 0.74 ) }
    dend_54 { pt3dadd( 71.1196, 37.2329, -2.33257, 0.74 ) }
    dend_54 { pt3dadd( 72.2242, 37.4976, -2.44405, 0.74 ) }
    dend_54 { pt3dadd( 73.409, 37.6232, -2.57825, 0.52 ) }
    dend_54 { pt3dadd( 75.0575, 37.5856, -2.77663, 0.74 ) }
    dend_54 { pt3dadd( 76.2994, 37.482, -2.89727, 0.88 ) }
    dend_54 { pt3dadd( 76.98, 37.4145, -2.92578, 0.96 ) }
    dend_54 { pt3dadd( 77.6565, 37.3558, -2.91149, 1.18 ) }
    dend_54 { pt3dadd( 78.6855, 37.3006, -2.81646, 1.18 ) }
    dend_54 { pt3dadd( 79.4677, 37.3274, -2.66956, 0.66 ) }
    dend_54 { pt3dadd( 80.8545, 37.6078, -2.25318, 0.59 ) }
    dend_54 { pt3dadd( 81.7658, 37.932, -1.81677, 0.59 ) }
    dend_54 { pt3dadd( 82.3696, 38.2094, -1.45156, 0.74 ) }
    dend_54 { pt3dadd( 82.8416, 38.4718, -1.11432, 0.74 ) }
    dend_54 { pt3dadd( 83.307, 38.7609, -0.738843, 0.74 ) }
    dend_54 { pt3dadd( 84.1949, 39.3495, 0.0579024, 0.59 ) }
    dend_54 { pt3dadd( 85.3721, 40.1722, 1.22289, 0.96 ) }
    dend_54 { pt3dadd( 85.933, 40.5549, 1.78438, 1.25 ) }
    dend_54 { pt3dadd( 86.2378, 40.754, 2.11177, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 75.1492, 43.9198, 66.1078, 0.29 ) }
    dend_52 { pt3dadd( 81.832, 47.6175, 73.0603, 0.29 ) }
    dend_52 { pt3dadd( 89.474, 51.3744, 78.9021, 0.29 ) }
    dend_52 { pt3dadd( 97.3203, 55.9404, 83.7879, 0.29 ) }
    dend_52 { pt3dadd( 104.173, 59.9525, 90.3826, 0.29 ) }
    dend_52 { pt3dadd( 110.553, 65.093, 96.6181, 0.29 ) }
    dend_52 { pt3dadd( 115.494, 70.8113, 103.588, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 75.1492, 43.9198, 66.1078, 0.29 ) }
    dend_51 { pt3dadd( 81.2553, 46.7805, 71.1373, 0.29 ) }
    dend_51 { pt3dadd( 86.2817, 51.0855, 76.2781, 0.29 ) }
    dend_51 { pt3dadd( 90.2773, 55.8863, 81.8434, 0.29 ) }
    dend_51 { pt3dadd( 94.9083, 59.354, 87.9333, 0.29 ) }
    dend_51 { pt3dadd( 99.2431, 63.2667, 93.9572, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -20.5676, -6.90544, -23.5134, 0.74 ) }
    dend_46 { pt3dadd( -22.005, -8.25551, -24.0322, 0.74 ) }
    dend_46 { pt3dadd( -22.8041, -8.82925, -24.2446, 0.74 ) }
    dend_46 { pt3dadd( -23.4982, -9.22213, -24.4147, 0.74 ) }
    dend_46 { pt3dadd( -24.6424, -9.61897, -24.7796, 0.66 ) }
    dend_46 { pt3dadd( -25.5023, -9.77604, -25.1086, 0.66 ) }
    dend_46 { pt3dadd( -26.4292, -9.8686, -25.495, 0.59 ) }
    dend_46 { pt3dadd( -27.0899, -9.81894, -25.7448, 1.25 ) }
    dend_46 { pt3dadd( -27.6374, -9.72783, -25.9718, 1.25 ) }
    dend_46 { pt3dadd( -29.3175, -9.41053, -26.736, 0.66 ) }
    dend_46 { pt3dadd( -30.1496, -9.27677, -27.1436, 0.66 ) }
    dend_46 { pt3dadd( -30.5887, -9.26248, -27.3855, 0.96 ) }
    dend_46 { pt3dadd( -31.218, -9.36517, -27.7679, 0.96 ) }
    dend_46 { pt3dadd( -31.6446, -9.5305, -28.1585, 0.96 ) }
    dend_46 { pt3dadd( -32.2754, -9.9743, -29.1684, 0.74 ) }
    dend_46 { pt3dadd( -32.5997, -10.3221, -29.9642, 0.52 ) }
    dend_46 { pt3dadd( -32.9196, -10.7387, -30.9648, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -33.1239, -11.0385, -31.7077, 1.03 ) }
    dend_46 { pt3dadd( -33.8632, -12.2194, -34.7468, 1.25 ) }
    dend_46 { pt3dadd( -34.3659, -13.0402, -36.9497, 0.66 ) }
    dend_46 { pt3dadd( -34.6185, -13.4294, -38.036, 0.66 ) }
    dend_46 { pt3dadd( -34.7824, -13.6286, -38.6024, 1.11 ) }
    dend_46 { pt3dadd( -34.9359, -13.7579, -38.9384, 1.33 ) }
    dend_46 { pt3dadd( -35.1646, -13.9129, -39.2221, 1.18 ) }
    dend_46 { pt3dadd( -35.5312, -14.1546, -39.3887, 1.18 ) }
    dend_46 { pt3dadd( -36.3706, -14.7145, -39.6387, 0.59 ) }
    dend_46 { pt3dadd( -37.2257, -15.3483, -39.9375, 0.52 ) }
    dend_46 { pt3dadd( -37.8907, -15.9068, -40.2497, 0.52 ) }
    dend_46 { pt3dadd( -38.4332, -16.4273, -40.6332, 0.81 ) }
    dend_46 { pt3dadd( -38.9548, -17.0072, -41.1775, 0.66 ) }
    dend_46 { pt3dadd( -39.439, -17.5936, -41.8064, 0.66 ) }
    dend_46 { pt3dadd( -39.7854, -18.0451, -42.3522, 1.33 ) }
    dend_46 { pt3dadd( -40.0164, -18.3591, -42.7476, 1.33 ) }
    dend_46 { pt3dadd( -40.7372, -19.3409, -44.0019, 0.66 ) }
    dend_46 { pt3dadd( -41.3752, -20.1811, -45.0673, 0.52 ) }
    dend_46 { pt3dadd( -41.6815, -20.5507, -45.5411, 0.52 ) }
    dend_46 { pt3dadd( -42.0859, -20.984, -46.0205, 0.96 ) }
    dend_46 { pt3dadd( -42.378, -21.2752, -46.2741, 1.18 ) }
    dend_46 { pt3dadd( -42.5877, -21.4854, -46.389, 1.18 ) }
    dend_46 { pt3dadd( -43.0171, -21.9625, -46.493, 0.81 ) }
    dend_46 { pt3dadd( -43.5912, -22.6816, -46.525, 0.74 ) }
    dend_46 { pt3dadd( -44.2858, -23.6619, -46.4902, 0.59 ) }
    dend_46 { pt3dadd( -44.6328, -24.1554, -46.4374, 0.74 ) }
    dend_46 { pt3dadd( -45.0988, -24.795, -46.3295, 0.74 ) }
    dend_46 { pt3dadd( -45.6087, -25.4293, -46.1915, 0.59 ) }
    dend_46 { pt3dadd( -46.0948, -26.0013, -46.0454, 0.44 ) }
    dend_46 { pt3dadd( -46.6402, -26.6376, -45.8722, 0.44 ) }
    dend_46 { pt3dadd( -47.1687, -27.2403, -45.7336, 0.44 ) }
    dend_46 { pt3dadd( -47.7185, -27.9225, -45.6027, 0.44 ) }
    dend_46 { pt3dadd( -48.6049, -29.1441, -45.4186, 0.44 ) }
    dend_46 { pt3dadd( -48.8165, -29.5, -45.379, 0.96 ) }
    dend_46 { pt3dadd( -49.1726, -30.3322, -45.3585, 1.18 ) }
    dend_46 { pt3dadd( -49.3663, -31.0548, -45.3976, 0.81 ) }
    dend_46 { pt3dadd( -49.5241, -32.2161, -45.5825, 0.59 ) }
    dend_46 { pt3dadd( -49.5607, -32.7119, -45.7212, 0.74 ) }
    dend_46 { pt3dadd( -49.6146, -33.5037, -46.0016, 0.66 ) }
    dend_46 { pt3dadd( -49.7308, -34.2799, -46.3085, 0.66 ) }
    dend_46 { pt3dadd( -49.874, -34.8558, -46.5556, 0.81 ) }
    dend_46 { pt3dadd( -50.2311, -35.9214, -47.0072, 0.59 ) }
    dend_46 { pt3dadd( -50.6006, -36.8624, -47.386, 0.52 ) }
    dend_46 { pt3dadd( -50.9408, -37.7771, -47.7273, 0.81 ) }
    dend_46 { pt3dadd( -51.2247, -38.6669, -48.0222, 1.4 ) }
    dend_46 { pt3dadd( -51.331, -39.1971, -48.1373, 1.69 ) }
    dend_46 { pt3dadd( -51.4157, -40.2366, -48.2467, 0.52 ) }
    dend_46 { pt3dadd( -51.4484, -41.0923, -48.3424, 0.44 ) }
    dend_46 { pt3dadd( -51.4586, -41.9449, -48.5582, 0.44 ) }
    dend_46 { pt3dadd( -51.4799, -42.534, -48.8389, 0.29 ) }
    dend_46 { pt3dadd( -51.6061, -43.6208, -49.537, 1.4 ) }
    dend_46 { pt3dadd( -51.6505, -43.8376, -49.6948, 1.4 ) }
    dend_46 { pt3dadd( -52.2459, -45.7454, -51.3628, 0.52 ) }
    dend_46 { pt3dadd( -52.669, -46.7979, -52.3684, 0.52 ) }
    dend_46 { pt3dadd( -52.9208, -47.3431, -52.9075, 0.52 ) }
    dend_46 { pt3dadd( -53.3044, -48.1564, -53.7084, 0.74 ) }
    dend_46 { pt3dadd( -53.5544, -48.7029, -54.2283, 0.88 ) }
    dend_46 { pt3dadd( -54.0555, -49.9579, -55.2577, 0.44 ) }
    dend_46 { pt3dadd( -54.2677, -50.5971, -55.6641, 0.59 ) }
    dend_46 { pt3dadd( -54.5209, -51.3179, -56.0849, 0.59 ) }
    dend_46 { pt3dadd( -54.8259, -52.0512, -56.5391, 0.37 ) }
    dend_46 { pt3dadd( -55.0233, -52.4933, -56.8272, 0.59 ) }
    dend_46 { pt3dadd( -55.4046, -53.2842, -57.3309, 0.81 ) }
    dend_46 { pt3dadd( -55.7855, -54.0148, -57.7259, 1.18 ) }
    dend_46 { pt3dadd( -56.0395, -54.4652, -57.9733, 1.18 ) }
    dend_46 { pt3dadd( -56.7671, -55.5867, -58.6561, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -20.5676, -6.90544, -23.5134, 0.81 ) }
    dend_45 { pt3dadd( -21.2123, -4.69664, -23.5506, 0.81 ) }
    dend_45 { pt3dadd( -21.5498, -3.88927, -23.4937, 0.81 ) }
    dend_45 { pt3dadd( -22.1117, -2.92855, -23.3619, 0.81 ) }
    dend_45 { pt3dadd( -22.754, -2.1907, -23.2229, 0.88 ) }
    dend_45 { pt3dadd( -23.5656, -1.6232, -23.112, 0.66 ) }
    dend_45 { pt3dadd( -25.1002, -0.867779, -22.9982, 0.59 ) }
    dend_45 { pt3dadd( -26.2166, -0.697247, -22.986, 0.59 ) }
    dend_45 { pt3dadd( -27.2348, -0.716458, -23.1628, 0.59 ) }
    dend_45 { pt3dadd( -28.5964, -0.913187, -23.6292, 0.74 ) }
    dend_45 { pt3dadd( -30.0619, -1.24913, -24.4179, 1.03 ) }
    dend_45 { pt3dadd( -30.5745, -1.38193, -24.7518, 1.62 ) }
    dend_45 { pt3dadd( -31.2682, -1.55519, -25.2616, 1.92 ) }
    dend_45 { pt3dadd( -33.4594, -2.02961, -26.8415, 0.88 ) }
    dend_45 { pt3dadd( -34.2995, -2.18497, -27.4355, 0.66 ) }
    dend_45 { pt3dadd( -35.5323, -2.40291, -28.2664, 0.66 ) }
    dend_45 { pt3dadd( -37.1957, -2.68953, -29.3246, 0.66 ) }
    dend_45 { pt3dadd( -37.934, -2.79874, -29.7723, 0.66 ) }
    dend_45 { pt3dadd( -39.5358, -2.94127, -30.6504, 0.66 ) }
    dend_45 { pt3dadd( -40.5515, -2.95949, -31.1517, 0.44 ) }
    dend_45 { pt3dadd( -41.8247, -2.89989, -31.8207, 0.44 ) }
    dend_45 { pt3dadd( -42.7497, -2.79764, -32.3608, 0.44 ) }
    dend_45 { pt3dadd( -43.8291, -2.61221, -33.1206, 0.66 ) }
    dend_45 { pt3dadd( -44.5785, -2.45465, -33.6933, 0.66 ) }
    dend_45 { pt3dadd( -45.459, -2.20911, -34.3791, 0.66 ) }
    dend_45 { pt3dadd( -46.217, -1.95299, -34.9117, 0.66 ) }
    dend_45 { pt3dadd( -47.0769, -1.58371, -35.4517, 0.44 ) }
    dend_45 { pt3dadd( -47.6726, -1.28995, -35.8093, 0.74 ) }
    dend_45 { pt3dadd( -48.5578, -0.825993, -36.3163, 0.74 ) }
    dend_45 { pt3dadd( -49.3454, -0.403432, -36.7623, 0.74 ) }
    dend_45 { pt3dadd( -50.0164, -0.0437708, -37.1245, 0.74 ) }
    dend_45 { pt3dadd( -50.7859, 0.360005, -37.5212, 0.37 ) }
    dend_45 { pt3dadd( -51.9396, 0.816058, -38.1479, 0.37 ) }
    dend_45 { pt3dadd( -52.4461, 0.898859, -38.4506, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -52.9904, 0.852984, -38.8293, 0.88 ) }
    dend_45 { pt3dadd( -53.7236, 0.689162, -39.3649, 1.18 ) }
    dend_45 { pt3dadd( -54.3224, 0.515859, -39.8526, 1.33 ) }
    dend_45 { pt3dadd( -55.849, 0.0186148, -41.1995, 0.44 ) }
    dend_45 { pt3dadd( -56.9375, -0.303408, -42.2482, 0.44 ) }
    dend_45 { pt3dadd( -57.7928, -0.472411, -43.1974, 0.44 ) }
    dend_45 { pt3dadd( -58.5465, -0.484463, -44.1264, 0.88 ) }
    dend_45 { pt3dadd( -59.3315, -0.282475, -45.1563, 1.03 ) }
    dend_45 { pt3dadd( -59.6417, -0.0885111, -45.5621, 1.03 ) }
    dend_45 { pt3dadd( -60.422, 0.717898, -46.433, 0.44 ) }
    dend_45 { pt3dadd( -60.8894, 1.25752, -46.9018, 0.44 ) }
    dend_45 { pt3dadd( -61.4535, 1.84335, -47.3422, 0.44 ) }
    dend_45 { pt3dadd( -61.9312, 2.22766, -47.6685, 0.59 ) }
    dend_45 { pt3dadd( -62.7442, 2.70103, -48.1301, 0.59 ) }
    dend_45 { pt3dadd( -63.592, 3.01586, -48.5823, 0.74 ) }
    dend_45 { pt3dadd( -65.1765, 3.2786, -49.3692, 0.37 ) }
    dend_45 { pt3dadd( -66.1833, 3.28483, -49.8886, 0.37 ) }
    dend_45 { pt3dadd( -67.6875, 3.08247, -50.7012, 0.59 ) }
    dend_45 { pt3dadd( -68.2808, 2.92923, -51.0439, 0.88 ) }
    dend_45 { pt3dadd( -69.4299, 2.48623, -51.7812, 0.66 ) }
    dend_45 { pt3dadd( -70.2064, 2.12354, -52.3075, 0.74 ) }
    dend_45 { pt3dadd( -71.0369, 1.68631, -52.8659, 0.59 ) }
    dend_45 { pt3dadd( -71.751, 1.28389, -53.3796, 0.52 ) }
    dend_45 { pt3dadd( -72.4192, 0.91166, -53.8606, 0.88 ) }
    dend_45 { pt3dadd( -73.6415, 0.318564, -54.7741, 0.59 ) }
    dend_45 { pt3dadd( -74.3498, 0.0455315, -55.3163, 0.44 ) }
    dend_45 { pt3dadd( -75.1303, -0.178825, -55.9295, 1.03 ) }
    dend_45 { pt3dadd( -75.674, -0.283373, -56.3538, 1.33 ) }
    dend_45 { pt3dadd( -76.0103, -0.317009, -56.6038, 1.4 ) }
    dend_45 { pt3dadd( -77.4322, -0.377068, -57.5727, 0.44 ) }
    dend_45 { pt3dadd( -78.009, -0.390184, -57.9419, 0.44 ) }
    dend_45 { pt3dadd( -78.8627, -0.39059, -58.4543, 0.44 ) }
    dend_45 { pt3dadd( -79.7639, -0.364159, -58.9541, 0.44 ) }
    dend_45 { pt3dadd( -81.2249, -0.309703, -59.7576, 0.59 ) }
    dend_45 { pt3dadd( -82.2292, -0.27138, -60.3907, 0.88 ) }
    dend_45 { pt3dadd( -83.1349, -0.204136, -61.1127, 1.11 ) }
    dend_45 { pt3dadd( -84.2872, -0.0772131, -62.178, 0.52 ) }
    dend_45 { pt3dadd( -85.1022, 0.0621927, -63.0145, 0.52 ) }
    dend_45 { pt3dadd( -85.7747, 0.209642, -63.7496, 1.03 ) }
    dend_45 { pt3dadd( -87.2585, 0.565353, -65.4869, 1.25 ) }
    dend_45 { pt3dadd( -89.0213, 0.919022, -67.5405, 0.52 ) }
    dend_45 { pt3dadd( -89.6302, 1.01547, -68.2315, 0.59 ) }
    dend_45 { pt3dadd( -90.4528, 1.10868, -69.1106, 0.59 ) }
    dend_45 { pt3dadd( -91.7654, 1.24937, -70.3418, 0.44 ) }
    dend_45 { pt3dadd( -92.679, 1.35504, -71.0431, 0.44 ) }
    dend_45 { pt3dadd( -94.0323, 1.57042, -71.8956, 0.44 ) }
    dend_45 { pt3dadd( -94.7525, 1.72561, -72.3319, 0.44 ) }
    dend_45 { pt3dadd( -95.7141, 2.05054, -73.0914, 0.66 ) }
    dend_45 { pt3dadd( -96.3693, 2.38761, -73.7674, 0.88 ) }
    dend_45 { pt3dadd( -96.7012, 2.6411, -74.1809, 0.88 ) }
    dend_45 { pt3dadd( -97.6178, 3.56591, -75.4633, 0.52 ) }
    dend_45 { pt3dadd( -98.1539, 4.24582, -76.3015, 0.52 ) }
    dend_45 { pt3dadd( -98.8678, 5.32079, -77.6228, 0.81 ) }
    dend_45 { pt3dadd( -99.3377, 6.16306, -78.6219, 0.44 ) }
    dend_45 { pt3dadd( -99.5923, 6.68489, -79.2373, 0.44 ) }
    dend_45 { pt3dadd( -99.8521, 7.36406, -80.001, 0.74 ) }
    dend_45 { pt3dadd( -99.9836, 7.87669, -80.5132, 0.96 ) }
    dend_45 { pt3dadd( -100.157, 9.20467, -81.6117, 0.66 ) }
    dend_45 { pt3dadd( -100.228, 10.0356, -82.2663, 0.44 ) }
    dend_45 { pt3dadd( -100.321, 10.9393, -83.0277, 0.44 ) }
    dend_45 { pt3dadd( -100.487, 11.7936, -83.8485, 0.44 ) }
    dend_45 { pt3dadd( -100.6, 12.0856, -84.1744, 0.44 ) }
    dend_45 { pt3dadd( -101.069, 12.6873, -84.9463, 0.96 ) }
    dend_45 { pt3dadd( -102.295, 13.3391, -86.0763, 0.66 ) }
    dend_45 { pt3dadd( -103.142, 13.6063, -86.7007, 0.96 ) }
    dend_45 { pt3dadd( -103.556, 13.7088, -86.9492, 1.25 ) }
    dend_45 { pt3dadd( -104.05, 13.8172, -87.2129, 1.25 ) }
    dend_45 { pt3dadd( -104.831, 14.0109, -87.6156, 1.25 ) }
    dend_45 { pt3dadd( -106.165, 14.4755, -88.3163, 0.37 ) }
    dend_45 { pt3dadd( -106.947, 14.9278, -88.7131, 0.37 ) }
    dend_45 { pt3dadd( -107.45, 15.3156, -89.0176, 0.66 ) }
    dend_45 { pt3dadd( -107.833, 15.6365, -89.2467, 0.81 ) }
    dend_45 { pt3dadd( -108.432, 16.1467, -89.5667, 0.81 ) }
    dend_45 { pt3dadd( -109.366, 16.9397, -89.9558, 0.44 ) }
    dend_45 { pt3dadd( -110.019, 17.447, -90.1242, 0.44 ) }
    dend_45 { pt3dadd( -111.234, 18.2622, -90.3158, 0.44 ) }
    dend_45 { pt3dadd( -112.593, 19.1171, -90.4421, 0.44 ) }
    dend_45 { pt3dadd( -113.629, 19.7624, -90.4839, 0.66 ) }
    dend_45 { pt3dadd( -114.711, 20.4296, -90.4724, 0.96 ) }
    dend_45 { pt3dadd( -115.808, 21.0961, -90.3836, 0.59 ) }
    dend_45 { pt3dadd( -116.74, 21.6834, -90.2729, 0.44 ) }
    dend_45 { pt3dadd( -117.7, 22.3022, -90.1498, 0.44 ) }
    dend_45 { pt3dadd( -118.631, 22.8988, -90.0887, 0.44 ) }
    dend_45 { pt3dadd( -119.446, 23.3563, -90.1347, 0.44 ) }
    dend_45 { pt3dadd( -120.401, 23.7616, -90.3308, 0.74 ) }
    dend_45 { pt3dadd( -120.88, 23.9072, -90.49, 0.74 ) }
    dend_45 { pt3dadd( -122.265, 24.1899, -91.021, 0.52 ) }
    dend_45 { pt3dadd( -122.9, 24.2846, -91.2962, 0.59 ) }
    dend_45 { pt3dadd( -124.078, 24.4368, -91.8508, 0.44 ) }
    dend_45 { pt3dadd( -124.954, 24.5852, -92.2829, 0.44 ) }
    dend_45 { pt3dadd( -126.035, 24.8699, -92.8801, 0.37 ) }
    dend_45 { pt3dadd( -127.106, 25.2592, -93.4786, 0.52 ) }
    dend_45 { pt3dadd( -127.943, 25.6573, -93.9595, 1.11 ) }
    dend_45 { pt3dadd( -128.586, 26.0214, -94.3797, 1.25 ) }
    dend_45 { pt3dadd( -129.336, 26.4967, -94.9548, 0.37 ) }
    dend_45 { pt3dadd( -130.4, 27.1889, -95.9027, 0.37 ) }
    dend_45 { pt3dadd( -131.12, 27.6255, -96.618, 0.29 ) }
    dend_45 { pt3dadd( -131.691, 27.9432, -97.2533, 0.29 ) }
    dend_45 { pt3dadd( -132.717, 28.4948, -98.4656, 0.59 ) }
    dend_45 { pt3dadd( -133.524, 28.9504, -99.4638, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -133.979, 29.2242, -100.032, 0.29 ) }
    dend_45 { pt3dadd( -134.337, 29.4679, -100.443, 0.37 ) }
    dend_45 { pt3dadd( -134.9, 29.9219, -101.048, 0.37 ) }
    dend_45 { pt3dadd( -135.674, 30.6106, -101.735, 0.44 ) }
    dend_45 { pt3dadd( -136.328, 31.2301, -102.166, 0.44 ) }
    dend_45 { pt3dadd( -136.956, 31.8263, -102.485, 0.44 ) }
    dend_45 { pt3dadd( -137.723, 32.4948, -102.829, 0.37 ) }
    dend_45 { pt3dadd( -138.04, 32.7333, -102.954, 0.37 ) }
    dend_45 { pt3dadd( -138.866, 33.2401, -103.218, 0.88 ) }
    dend_45 { pt3dadd( -139.353, 33.486, -103.353, 1.11 ) }
    dend_45 { pt3dadd( -140.231, 33.893, -103.587, 1.11 ) }
    dend_45 { pt3dadd( -141.609, 34.5633, -103.943, 0.37 ) }
    dend_45 { pt3dadd( -142.672, 35.1371, -104.211, 0.37 ) }
    dend_45 { pt3dadd( -143.275, 35.5246, -104.356, 0.66 ) }
    dend_45 { pt3dadd( -144.156, 36.2732, -104.611, 0.66 ) }
    dend_45 { pt3dadd( -144.826, 37.0127, -104.853, 0.37 ) }
    dend_45 { pt3dadd( -145.366, 37.7901, -105.107, 0.52 ) }
    dend_45 { pt3dadd( -145.555, 38.1314, -105.219, 0.66 ) }
    dend_45 { pt3dadd( -145.825, 38.6866, -105.395, 0.66 ) }
    dend_45 { pt3dadd( -146.554, 40.221, -105.863, 0.37 ) }
    dend_45 { pt3dadd( -146.909, 40.8886, -106.033, 0.37 ) }
    dend_45 { pt3dadd( -147.33, 41.4566, -106.108, 0.37 ) }
    dend_45 { pt3dadd( -147.8, 41.9127, -106.089, 0.88 ) }
    dend_45 { pt3dadd( -148.586, 42.5107, -105.971, 0.81 ) }
    dend_45 { pt3dadd( -148.98, 42.7598, -105.889, 0.81 ) }
    dend_45 { pt3dadd( -149.986, 43.3248, -105.638, 0.29 ) }
    dend_45 { pt3dadd( -151.308, 44.0404, -105.296, 0.29 ) }
    dend_45 { pt3dadd( -152.128, 44.5295, -105.019, 0.52 ) }
    dend_45 { pt3dadd( -153.11, 45.1838, -104.664, 0.44 ) }
    dend_45 { pt3dadd( -153.587, 45.5226, -104.49, 0.44 ) }
    dend_45 { pt3dadd( -154.211, 46.0012, -104.234, 0.81 ) }
    dend_45 { pt3dadd( -154.935, 46.6371, -103.907, 0.81 ) }
    dend_45 { pt3dadd( -156.263, 48.0112, -103.234, 0.29 ) }
    dend_45 { pt3dadd( -156.79, 48.5988, -102.952, 0.44 ) }
    dend_45 { pt3dadd( -157.283, 49.1643, -102.652, 0.29 ) }
    dend_45 { pt3dadd( -157.834, 49.766, -102.331, 0.29 ) }
    dend_45 { pt3dadd( -158.568, 50.5129, -101.951, 0.29 ) }
    dend_45 { pt3dadd( -159.137, 51.0534, -101.705, 0.29 ) }
    dend_45 { pt3dadd( -159.82, 51.6437, -101.467, 0.59 ) }
    dend_45 { pt3dadd( -161.138, 52.7524, -100.987, 0.22 ) }
    dend_45 { pt3dadd( -161.988, 53.4554, -100.68, 0.22 ) }
    dend_45 { pt3dadd( -162.446, 53.8002, -100.514, 0.52 ) }
    dend_45 { pt3dadd( -162.877, 54.0767, -100.347, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -78.4919, -44.7992, 75.0323, 0.29 ) }
    dend_43 { pt3dadd( -85.2019, -49.0446, 81.1813, 0.29 ) }
    dend_43 { pt3dadd( -90.9755, -55.0425, 86.7239, 0.29 ) }
    dend_43 { pt3dadd( -96.3686, -61.1242, 92.5549, 0.29 ) }
    dend_43 { pt3dadd( -101.433, -67.8152, 97.9665, 0.29 ) }
    dend_43 { pt3dadd( -105.251, -75.3593, 103.242, 0.29 ) }
    dend_43 { pt3dadd( -109.878, -82.5282, 108.402, 0.29 ) }
    dend_43 { pt3dadd( -114.539, -89.6955, 113.532, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -78.4919, -44.7992, 75.0323, 0.29 ) }
    dend_42 { pt3dadd( -83.9441, -47.8053, 79.789, 0.29 ) }
    dend_42 { pt3dadd( -89.3002, -51.7403, 83.8995, 0.29 ) }
    dend_42 { pt3dadd( -94.0805, -56.0745, 88.2864, 0.29 ) }
    dend_42 { pt3dadd( -98.1592, -60.5967, 93.1533, 0.29 ) }
    dend_42 { pt3dadd( -101.841, -65.5808, 97.8585, 0.29 ) }
    dend_42 { pt3dadd( -104.695, -71.3454, 102.185, 0.29 ) }
    dend_42 { pt3dadd( -108.166, -76.438, 106.927, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.97157, -54.3847, 16.3503, 0.66 ) }
    dend_34 { pt3dadd( -10.1873, -57.3265, 15.2379, 0.66 ) }
    dend_34 { pt3dadd( -10.4962, -58.1084, 14.9718, 1.03 ) }
    dend_34 { pt3dadd( -10.7985, -58.9294, 14.7959, 1.03 ) }
    dend_34 { pt3dadd( -11.3417, -60.5031, 14.6111, 1.03 ) }
    dend_34 { pt3dadd( -11.7033, -61.6995, 14.5561, 1.03 ) }
    dend_34 { pt3dadd( -12.0818, -63.1658, 14.5747, 0.81 ) }
    dend_34 { pt3dadd( -12.3133, -64.4874, 14.8202, 0.81 ) }
    dend_34 { pt3dadd( -12.4468, -66.4381, 15.3272, 1.4 ) }
    dend_34 { pt3dadd( -12.4306, -67.2783, 15.5985, 1.62 ) }
    dend_34 { pt3dadd( -12.2985, -68.5387, 16.1105, 1.4 ) }
    dend_34 { pt3dadd( -12.1472, -69.3725, 16.4717, 1.92 ) }
    dend_34 { pt3dadd( -11.8636, -70.5075, 16.9693, 1.4 ) }
    dend_34 { pt3dadd( -11.3328, -72.2292, 17.7254, 1.69 ) }
    dend_34 { pt3dadd( -10.9438, -73.3798, 18.1691, 1.11 ) }
    dend_34 { pt3dadd( -10.4266, -74.9231, 18.7241, 0.81 ) }
    dend_34 { pt3dadd( -10.2001, -75.6514, 18.9656, 1.11 ) }
    dend_34 { pt3dadd( -9.96357, -76.5201, 19.2239, 1.25 ) }
    dend_34 { pt3dadd( -9.5396, -78.4524, 19.7451, 0.96 ) }
    dend_34 { pt3dadd( -9.4123, -79.4291, 19.9721, 0.74 ) }
    dend_34 { pt3dadd( -9.38872, -80.3616, 20.1549, 0.81 ) }
    dend_34 { pt3dadd( -9.57458, -81.7735, 20.3521, 0.52 ) }
    dend_34 { pt3dadd( -9.8501, -82.7805, 20.4378, 0.88 ) }
    dend_34 { pt3dadd( -10.1914, -83.6278, 20.4252, 0.88 ) }
    dend_34 { pt3dadd( -10.6653, -84.5556, 20.2709, 0.88 ) }
    dend_34 { pt3dadd( -11.1091, -85.3779, 20.0559, 0.66 ) }
    dend_34 { pt3dadd( -11.5504, -86.2607, 19.7139, 0.66 ) }
    dend_34 { pt3dadd( -12.0685, -87.5075, 19.0122, 0.88 ) }
    dend_34 { pt3dadd( -12.3443, -88.341, 18.4366, 1.33 ) }
    dend_34 { pt3dadd( -12.5063, -88.982, 17.9641, 1.47 ) }
    dend_34 { pt3dadd( -12.6335, -89.5865, 17.5175, 1.62 ) }
    dend_34 { pt3dadd( -12.8854, -90.8208, 16.6659, 0.74 ) }
    dend_34 { pt3dadd( -13.1795, -92.2245, 15.8774, 0.74 ) }
    dend_34 { pt3dadd( -13.4587, -93.3184, 15.4478, 0.74 ) }
    dend_34 { pt3dadd( -13.7094, -94.1901, 15.2675, 0.74 ) }
    dend_34 { pt3dadd( -14.0566, -95.3961, 15.2049, 0.66 ) }
    dend_34 { pt3dadd( -14.3658, -96.6542, 15.3214, 0.66 ) }
    dend_34 { pt3dadd( -14.6964, -98.4785, 15.7329, 0.96 ) }
    dend_34 { pt3dadd( -14.7836, -99.4222, 16.0247, 0.88 ) }
    dend_34 { pt3dadd( -14.7744, -100.272, 16.3033, 0.88 ) }
    dend_34 { pt3dadd( -14.6016, -101.863, 16.7963, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -14.316, -103.331, 17.2174, 1.18 ) }
    dend_34 { pt3dadd( -14.1558, -104.05, 17.3737, 1.62 ) }
    dend_34 { pt3dadd( -13.9918, -104.859, 17.4836, 1.62 ) }
    dend_34 { pt3dadd( -13.8049, -106.0, 17.6099, 0.96 ) }
    dend_34 { pt3dadd( -13.7063, -106.883, 17.6964, 0.96 ) }
    dend_34 { pt3dadd( -13.6554, -108.215, 17.813, 0.66 ) }
    dend_34 { pt3dadd( -13.7722, -109.96, 17.9355, 0.52 ) }
    dend_34 { pt3dadd( -13.9983, -111.524, 18.0828, 0.59 ) }
    dend_34 { pt3dadd( -14.4069, -113.32, 18.2969, 0.74 ) }
    dend_34 { pt3dadd( -14.5529, -113.786, 18.3693, 1.11 ) }
    dend_34 { pt3dadd( -14.9215, -114.675, 18.578, 1.25 ) }
    dend_34 { pt3dadd( -15.6822, -116.095, 19.0303, 0.88 ) }
    dend_34 { pt3dadd( -16.1713, -116.8, 19.3451, 0.66 ) }
    dend_34 { pt3dadd( -16.6961, -117.421, 19.6831, 0.66 ) }
    dend_34 { pt3dadd( -17.216, -117.968, 19.9962, 0.59 ) }
    dend_34 { pt3dadd( -18.2541, -119.072, 20.5697, 0.59 ) }
    dend_34 { pt3dadd( -18.8406, -119.707, 20.8488, 0.44 ) }
    dend_34 { pt3dadd( -19.5502, -120.531, 21.111, 0.44 ) }
    dend_34 { pt3dadd( -20.1461, -121.299, 21.2483, 0.74 ) }
    dend_34 { pt3dadd( -20.6328, -122.012, 21.3111, 0.74 ) }
    dend_34 { pt3dadd( -21.0566, -122.692, 21.3199, 0.66 ) }
    dend_34 { pt3dadd( -21.6122, -123.689, 21.2492, 1.03 ) }
    dend_34 { pt3dadd( -22.0304, -124.481, 21.1949, 1.4 ) }
    dend_34 { pt3dadd( -22.4798, -125.373, 21.1402, 1.4 ) }
    dend_34 { pt3dadd( -22.8737, -126.146, 21.1006, 1.47 ) }
    dend_34 { pt3dadd( -23.4969, -127.37, 21.0608, 0.74 ) }
    dend_34 { pt3dadd( -23.981, -128.323, 21.0202, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.97157, -54.3847, 16.3503, 0.44 ) }
    dend_33 { pt3dadd( -8.32972, -54.9524, 16.9934, 0.44 ) }
    dend_33 { pt3dadd( -7.95777, -55.4498, 17.4341, 0.44 ) }
    dend_33 { pt3dadd( -7.7085, -56.1026, 17.8536, 0.37 ) }
    dend_33 { pt3dadd( -7.45264, -57.3856, 18.4634, 0.59 ) }
    dend_33 { pt3dadd( -7.42069, -57.8888, 18.6428, 0.52 ) }
    dend_33 { pt3dadd( -7.44291, -58.5378, 18.8326, 0.44 ) }
    dend_33 { pt3dadd( -7.66172, -59.5877, 19.11, 0.44 ) }
    dend_33 { pt3dadd( -7.97647, -60.4741, 19.3558, 0.44 ) }
    dend_33 { pt3dadd( -8.2486, -61.0128, 19.5358, 0.59 ) }
    dend_33 { pt3dadd( -8.67235, -61.631, 19.8374, 0.59 ) }
    dend_33 { pt3dadd( -9.14453, -62.1544, 20.3186, 0.37 ) }
    dend_33 { pt3dadd( -9.78833, -62.7354, 21.1548, 0.59 ) }
    dend_33 { pt3dadd( -10.3571, -63.1866, 22.0236, 0.88 ) }
    dend_33 { pt3dadd( -10.7177, -63.4399, 22.598, 0.81 ) }
    dend_33 { pt3dadd( -11.4508, -63.9241, 23.757, 1.03 ) }
    dend_33 { pt3dadd( -12.1915, -64.4089, 24.8999, 0.88 ) }
    dend_33 { pt3dadd( -12.8629, -64.874, 25.8449, 0.44 ) }
    dend_33 { pt3dadd( -13.4111, -65.3254, 26.5141, 0.44 ) }
    dend_33 { pt3dadd( -13.7661, -65.6799, 26.885, 0.66 ) }
    dend_33 { pt3dadd( -14.2553, -66.2042, 27.2664, 0.66 ) }
    dend_33 { pt3dadd( -14.6976, -66.672, 27.4609, 0.66 ) }
    dend_33 { pt3dadd( -15.3448, -67.3329, 27.5895, 0.66 ) }
    dend_33 { pt3dadd( -15.9065, -67.9003, 27.6568, 1.33 ) }
    dend_33 { pt3dadd( -16.1561, -68.1677, 27.6686, 1.47 ) }
    dend_33 { pt3dadd( -16.6403, -68.6968, 27.6834, 1.03 ) }
    dend_33 { pt3dadd( -17.2469, -69.3771, 27.7073, 0.81 ) }
    dend_33 { pt3dadd( -17.7597, -69.9515, 27.7404, 0.74 ) }
    dend_33 { pt3dadd( -18.3719, -70.6403, 27.8032, 0.52 ) }
    dend_33 { pt3dadd( -18.803, -71.1491, 27.8649, 0.44 ) }
    dend_33 { pt3dadd( -21.8182, -77.2043, 32.3146, 0.44 ) }
    dend_33 { pt3dadd( -23.8384, -83.7383, 36.6106, 0.44 ) }
    dend_33 { pt3dadd( -26.5503, -90.2452, 40.5563, 0.44 ) }
    dend_33 { pt3dadd( -30.9182, -96.3232, 43.6474, 0.44 ) }
    dend_33 { pt3dadd( -35.3666, -101.458, 48.1146, 0.44 ) }
    dend_33 { pt3dadd( -39.0649, -106.639, 53.1693, 0.44 ) }
    dend_33 { pt3dadd( -42.933, -112.016, 57.8699, 0.44 ) }
    dend_33 { pt3dadd( -48.2411, -117.007, 61.4904, 0.44 ) }
    dend_33 { pt3dadd( -54.7958, -121.355, 63.65, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.9593, -17.3327, -3.28483, 1.47 ) }
    dend_17 { pt3dadd( 3.33797, -19.0929, -3.84527, 1.47 ) }
    dend_17 { pt3dadd( 2.6879, -21.3654, -4.36975, 1.33 ) }
    dend_17 { pt3dadd( 2.25001, -23.1812, -4.64352, 1.55 ) }
    dend_17 { pt3dadd( 1.95008, -24.6582, -4.73674, 1.55 ) }
    dend_17 { pt3dadd( 1.67428, -26.1946, -4.64186, 1.77 ) }
    dend_17 { pt3dadd( 1.33133, -28.1659, -4.31075, 1.77 ) }
    dend_17 { pt3dadd( 1.14879, -29.3856, -3.93323, 2.14 ) }
    dend_17 { pt3dadd( 0.990083, -30.4059, -3.50479, 2.58 ) }
    dend_17 { pt3dadd( 0.768889, -31.7115, -2.92151, 2.36 ) }
    dend_17 { pt3dadd( 0.323526, -34.1057, -1.97222, 1.77 ) }
    dend_17 { pt3dadd( -0.0862115, -36.168, -1.37484, 1.47 ) }
    dend_17 { pt3dadd( -0.412231, -37.895, -1.10772, 1.18 ) }
    dend_17 { pt3dadd( -0.71226, -39.728, -1.01764, 1.11 ) }
    dend_17 { pt3dadd( -0.922603, -41.3568, -1.10724, 1.33 ) }
    dend_17 { pt3dadd( -1.10731, -43.5762, -1.47093, 1.25 ) }
    dend_17 { pt3dadd( -1.14259, -45.5173, -1.95969, 1.47 ) }
    dend_17 { pt3dadd( -1.06972, -47.2568, -2.44804, 1.62 ) }
    dend_17 { pt3dadd( -0.968487, -48.5628, -2.81678, 2.14 ) }
    dend_17 { pt3dadd( -0.904952, -49.4644, -3.05386, 2.58 ) }
    dend_17 { pt3dadd( -0.873467, -50.7607, -3.34651, 2.43 ) }
    dend_17 { pt3dadd( -0.955876, -52.8473, -3.74454, 2.14 ) }
    dend_17 { pt3dadd( -1.14243, -54.5312, -4.04097, 1.92 ) }
    dend_17 { pt3dadd( -1.46473, -56.2001, -4.31937, 1.47 ) }
    dend_17 { pt3dadd( -2.04131, -58.2595, -4.66736, 1.25 ) }
    dend_17 { pt3dadd( -2.65118, -59.9577, -4.90424, 1.11 ) }
    dend_17 { pt3dadd( -3.20927, -61.2278, -5.02735, 1.4 ) }
    dend_17 { pt3dadd( -3.6165, -62.0443, -5.07935, 1.55 ) }
    dend_17 { pt3dadd( -4.25958, -63.2922, -5.10196, 1.18 ) }
    dend_17 { pt3dadd( -4.87264, -64.5691, -5.0394, 0.88 ) }
    dend_17 { pt3dadd( -5.42117, -65.9138, -4.96651, 1.18 ) }
    dend_17 { pt3dadd( -5.85043, -67.2311, -4.8955, 1.03 ) }
    dend_17 { pt3dadd( -6.20333, -68.4722, -4.81774, 1.03 ) }
    dend_17 { pt3dadd( -6.63605, -70.3134, -4.71834, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -6.83016, -71.4839, -4.67723, 1.77 ) }
    dend_17 { pt3dadd( -7.01517, -73.3259, -4.68288, 1.77 ) }
    dend_17 { pt3dadd( -7.10305, -74.7422, -4.79703, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.9593, -17.3327, -3.28483, 1.77 ) }
    dend_1 { pt3dadd( 4.50559, -19.5342, -3.8092, 1.77 ) }
    dend_1 { pt3dadd( 4.74873, -20.6358, -4.05979, 1.99 ) }
    dend_1 { pt3dadd( 5.0283, -21.9025, -4.34794, 1.99 ) }
    dend_1 { pt3dadd( 5.40976, -23.6308, -4.7411, 3.17 ) }
    dend_1 { pt3dadd( 5.58159, -24.4094, -4.9182, 3.76 ) }
    dend_1 { pt3dadd( 5.87562, -25.7416, -5.22125, 4.2 ) }
    dend_1 { pt3dadd( 6.0361, -26.9189, -5.4573, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205314 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205314 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205314 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -48.2916, 90.9261, -22.7926, 0.29 ) }
    dend_85 { pt3dadd( -48.4982, 91.5541, -22.8352, 0.29 ) }
    dend_85 { pt3dadd( -48.7014, 92.5364, -23.0783, 0.29 ) }
    dend_85 { pt3dadd( -48.8203, 93.4303, -23.3295, 0.29 ) }
    dend_85 { pt3dadd( -48.8869, 94.4033, -23.6211, 0.29 ) }
    dend_85 { pt3dadd( -48.9033, 95.108, -23.8489, 0.29 ) }
    dend_85 { pt3dadd( -48.9135, 96.2685, -24.2205, 0.29 ) }
    dend_85 { pt3dadd( -48.8475, 98.3743, -24.9788, 0.29 ) }
    dend_85 { pt3dadd( -48.8134, 99.027, -25.2324, 0.37 ) }
    dend_85 { pt3dadd( -48.7746, 99.8156, -25.5586, 0.37 ) }
    dend_85 { pt3dadd( -48.738, 100.79, -25.9917, 0.37 ) }
    dend_85 { pt3dadd( -48.7037, 101.592, -26.3521, 0.22 ) }
    dend_85 { pt3dadd( -48.681, 102.425, -26.7127, 0.22 ) }
    dend_85 { pt3dadd( -48.7507, 103.306, -27.0239, 1.03 ) }
    dend_85 { pt3dadd( -48.7804, 103.462, -27.0866, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -48.2916, 90.9261, -22.7926, 0.52 ) }
    dend_80 { pt3dadd( -50.2662, 92.3778, -22.2018, 0.52 ) }
    dend_80 { pt3dadd( -51.1851, 93.1605, -21.8638, 0.52 ) }
    dend_80 { pt3dadd( -52.1098, 94.0859, -21.4951, 0.44 ) }
    dend_80 { pt3dadd( -52.5223, 94.5682, -21.3244, 0.59 ) }
    dend_80 { pt3dadd( -52.9632, 95.1622, -21.132, 0.59 ) }
    dend_80 { pt3dadd( -53.7716, 96.3056, -20.7532, 0.37 ) }
    dend_80 { pt3dadd( -54.7103, 97.8156, -20.357, 0.37 ) }
    dend_80 { pt3dadd( -55.2776, 98.7948, -20.0799, 0.37 ) }
    dend_80 { pt3dadd( -55.8532, 99.7798, -19.7901, 0.37 ) }
    dend_80 { pt3dadd( -56.4978, 100.853, -19.444, 0.29 ) }
    dend_80 { pt3dadd( -57.1025, 101.81, -19.1182, 0.29 ) }
    dend_80 { pt3dadd( -57.8049, 102.803, -18.7641, 0.81 ) }
    dend_80 { pt3dadd( -58.136, 103.193, -18.628, 0.81 ) }
    dend_80 { pt3dadd( -58.7059, 103.773, -18.4209, 0.74 ) }
    dend_80 { pt3dadd( -59.4943, 104.501, -18.217, 0.74 ) }
    dend_80 { pt3dadd( -60.1877, 105.073, -18.1574, 0.96 ) }
    dend_80 { pt3dadd( -60.8909, 105.613, -18.2187, 0.96 ) }
    dend_80 { pt3dadd( -61.3601, 105.979, -18.3315, 0.59 ) }
    dend_80 { pt3dadd( -62.2636, 106.768, -18.6872, 0.29 ) }
    dend_80 { pt3dadd( -63.0853, 107.6, -19.1674, 0.29 ) }
    dend_80 { pt3dadd( -63.9606, 108.599, -19.8057, 0.29 ) }
    dend_80 { pt3dadd( -64.5718, 109.358, -20.279, 0.22 ) }
    dend_80 { pt3dadd( -65.4847, 110.546, -21.0025, 0.22 ) }
    dend_80 { pt3dadd( -66.1981, 111.524, -21.5768, 0.74 ) }
    dend_80 { pt3dadd( -67.0095, 112.687, -22.1779, 0.37 ) }
    dend_80 { pt3dadd( -67.6667, 113.704, -22.5942, 0.37 ) }
    dend_80 { pt3dadd( -68.2717, 114.709, -22.9392, 0.81 ) }
    dend_80 { pt3dadd( -68.7035, 115.385, -23.1776, 1.18 ) }
    dend_80 { pt3dadd( -69.1202, 115.907, -23.3743, 1.18 ) }
    dend_80 { pt3dadd( -70.1918, 117.005, -23.8715, 0.29 ) }
    dend_80 { pt3dadd( -71.3314, 118.088, -24.3835, 0.29 ) }
    dend_80 { pt3dadd( -72.0557, 118.736, -24.7367, 0.29 ) }
    dend_80 { pt3dadd( -72.7934, 119.356, -25.1282, 0.29 ) }
    dend_80 { pt3dadd( -73.8885, 120.199, -25.7069, 0.74 ) }
    dend_80 { pt3dadd( -74.6804, 120.684, -26.1279, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 131.458, 32.4119, 47.421, 0.29 ) }
    dend_71 { pt3dadd( 137.939, 32.4202, 50.9829, 0.29 ) }
    dend_71 { pt3dadd( 144.27, 32.2316, 54.8021, 0.29 ) }
    dend_71 { pt3dadd( 150.797, 32.8791, 58.2102, 0.29 ) }
    dend_71 { pt3dadd( 156.917, 34.3649, 62.0624, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 131.458, 32.4119, 47.421, 0.29 ) }
    dend_70 { pt3dadd( 139.335, 32.0581, 50.9561, 0.29 ) }
    dend_70 { pt3dadd( 147.121, 33.1873, 54.5062, 0.29 ) }
    dend_70 { pt3dadd( 155.319, 34.9448, 56.5514, 0.29 ) }
    dend_70 { pt3dadd( 162.831, 37.5158, 59.8906, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 86.2378, 40.754, 2.11177, 0.44 ) }
    dend_58 { pt3dadd( 87.1331, 40.7075, 1.8949, 0.44 ) }
    dend_58 { pt3dadd( 87.473, 40.7321, 1.7594, 0.37 ) }
    dend_58 { pt3dadd( 88.0806, 40.8326, 1.47801, 0.59 ) }
    dend_58 { pt3dadd( 88.4115, 40.9027, 1.31844, 0.74 ) }
    dend_58 { pt3dadd( 89.2587, 41.1099, 0.918688, 0.37 ) }
    dend_58 { pt3dadd( 90.1296, 41.348, 0.525014, 0.29 ) }
    dend_58 { pt3dadd( 90.6479, 41.5488, 0.260926, 0.29 ) }
    dend_58 { pt3dadd( 91.0165, 41.7237, 0.0858575, 0.88 ) }
    dend_58 { pt3dadd( 91.1516, 41.7996, 0.0214784, 1.11 ) }
    dend_58 { pt3dadd( 91.4839, 42.0025, -0.120302, 1.11 ) }
    dend_58 { pt3dadd( 91.7895, 42.1959, -0.192865, 1.18 ) }
    dend_58 { pt3dadd( 92.3427, 42.4849, -0.214218, 0.74 ) }
    dend_58 { pt3dadd( 92.7168, 42.6736, -0.208687, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 86.2378, 40.754, 2.11177, 0.29 ) }
    dend_55 { pt3dadd( 87.0078, 41.6819, 2.3824, 0.29 ) }
    dend_55 { pt3dadd( 87.3665, 42.1247, 2.5262, 0.29 ) }
    dend_55 { pt3dadd( 87.8259, 42.6919, 2.71038, 0.66 ) }
    dend_55 { pt3dadd( 88.3219, 43.3042, 2.90923, 0.29 ) }
    dend_55 { pt3dadd( 88.6933, 43.7627, 3.0581, 0.29 ) }
    dend_55 { pt3dadd( 89.4376, 44.6815, 3.35648, 0.29 ) }
    dend_55 { pt3dadd( 89.8534, 45.1847, 3.58645, 0.29 ) }
    dend_55 { pt3dadd( 96.4171, 52.3788, 5.27705, 0.29 ) }
    dend_55 { pt3dadd( 101.827, 60.3196, 7.51779, 0.29 ) }
    dend_55 { pt3dadd( 106.142, 69.0852, 8.5131, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 111.387, 77.2693, 10.1012, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -56.7671, -55.5867, -58.6561, 0.81 ) }
    dend_48 { pt3dadd( -57.2497, -56.4493, -60.4866, 0.81 ) }
    dend_48 { pt3dadd( -57.3405, -56.5674, -60.7185, 0.81 ) }
    dend_48 { pt3dadd( -58.5129, -57.8881, -62.9774, 0.37 ) }
    dend_48 { pt3dadd( -58.8534, -58.266, -63.5237, 0.52 ) }
    dend_48 { pt3dadd( -59.1781, -58.633, -64.0276, 0.66 ) }
    dend_48 { pt3dadd( -59.5453, -59.0714, -64.6102, 0.66 ) }
    dend_48 { pt3dadd( -60.3564, -59.9955, -65.698, 0.37 ) }
    dend_48 { pt3dadd( -60.8768, -60.5653, -66.393, 0.37 ) }
    dend_48 { pt3dadd( -61.6857, -61.4233, -67.4254, 0.37 ) }
    dend_48 { pt3dadd( -62.1882, -61.9414, -68.0821, 0.66 ) }
    dend_48 { pt3dadd( -62.9941, -62.7636, -69.1153, 1.11 ) }
    dend_48 { pt3dadd( -63.372, -63.147, -69.5678, 1.25 ) }
    dend_48 { pt3dadd( -64.6833, -64.3267, -71.0941, 0.22 ) }
    dend_48 { pt3dadd( -65.246, -64.7483, -71.6959, 0.29 ) }
    dend_48 { pt3dadd( -65.7489, -65.0625, -72.182, 0.59 ) }
    dend_48 { pt3dadd( -66.3213, -65.3961, -72.6829, 0.81 ) }
    dend_48 { pt3dadd( -66.9283, -65.7527, -73.2259, 0.81 ) }
    dend_48 { pt3dadd( -68.4521, -66.8247, -74.6775, 0.37 ) }
    dend_48 { pt3dadd( -68.8798, -67.1987, -75.1088, 0.37 ) }
    dend_48 { pt3dadd( -69.5437, -67.9493, -75.9299, 0.59 ) }
    dend_48 { pt3dadd( -69.7724, -68.2799, -76.2616, 0.81 ) }
    dend_48 { pt3dadd( -70.5203, -69.6619, -77.4896, 0.44 ) }
    dend_48 { pt3dadd( -70.973, -70.7426, -78.3015, 0.44 ) }
    dend_48 { pt3dadd( -71.2939, -71.6913, -78.898, 0.37 ) }
    dend_48 { pt3dadd( -71.6616, -72.8824, -79.6099, 0.37 ) }
    dend_48 { pt3dadd( -71.9379, -73.7605, -80.1302, 0.66 ) }
    dend_48 { pt3dadd( -72.182, -74.4124, -80.5325, 0.81 ) }
    dend_48 { pt3dadd( -72.4296, -75.0258, -80.8846, 0.81 ) }
    dend_48 { pt3dadd( -72.9142, -76.1122, -81.5201, 0.29 ) }
    dend_48 { pt3dadd( -73.2026, -76.7191, -81.8538, 0.96 ) }
    dend_48 { pt3dadd( -73.9011, -78.1765, -82.5496, 0.29 ) }
    dend_48 { pt3dadd( -74.3337, -79.1334, -82.9693, 0.29 ) }
    dend_48 { pt3dadd( -74.7487, -80.1049, -83.3333, 0.44 ) }
    dend_48 { pt3dadd( -74.9857, -80.6487, -83.5208, 0.44 ) }
    dend_48 { pt3dadd( -75.3632, -81.5347, -83.7738, 0.29 ) }
    dend_48 { pt3dadd( -75.5742, -82.0217, -83.9386, 0.59 ) }
    dend_48 { pt3dadd( -75.885, -82.8116, -84.225, 0.59 ) }
    dend_48 { pt3dadd( -76.1691, -83.5842, -84.5586, 0.52 ) }
    dend_48 { pt3dadd( -76.6552, -84.7373, -85.1251, 0.37 ) }
    dend_48 { pt3dadd( -76.9793, -85.4517, -85.5086, 0.88 ) }
    dend_48 { pt3dadd( -77.5972, -86.7739, -86.259, 0.44 ) }
    dend_48 { pt3dadd( -77.9365, -87.5313, -86.6893, 0.59 ) }
    dend_48 { pt3dadd( -78.2104, -88.1563, -87.0365, 0.59 ) }
    dend_48 { pt3dadd( -78.5275, -88.9233, -87.4212, 0.59 ) }
    dend_48 { pt3dadd( -78.843, -89.7249, -87.7473, 0.37 ) }
    dend_48 { pt3dadd( -79.1021, -90.3199, -87.9273, 0.37 ) }
    dend_48 { pt3dadd( -79.5387, -91.2289, -88.0775, 0.29 ) }
    dend_48 { pt3dadd( -79.7056, -91.5552, -88.0958, 0.29 ) }
    dend_48 { pt3dadd( -80.1209, -92.3942, -88.0704, 0.88 ) }
    dend_48 { pt3dadd( -80.3879, -92.9785, -88.0119, 1.18 ) }
    dend_48 { pt3dadd( -80.8491, -93.9117, -87.8604, 0.29 ) }
    dend_48 { pt3dadd( -81.2019, -94.5635, -87.7392, 0.29 ) }
    dend_48 { pt3dadd( -81.7466, -95.5207, -87.615, 0.29 ) }
    dend_48 { pt3dadd( -81.9945, -95.9693, -87.5848, 0.88 ) }
    dend_48 { pt3dadd( -82.2366, -96.4169, -87.589, 0.88 ) }
    dend_48 { pt3dadd( -83.053, -97.8802, -87.7388, 0.22 ) }
    dend_48 { pt3dadd( -83.3399, -98.3693, -87.8442, 0.22 ) }
    dend_48 { pt3dadd( -83.998, -99.4048, -88.1305, 0.59 ) }
    dend_48 { pt3dadd( -84.1494, -99.6282, -88.2068, 0.59 ) }
    dend_48 { pt3dadd( -84.7681, -100.517, -88.5297, 0.22 ) }
    dend_48 { pt3dadd( -85.1246, -101.03, -88.7317, 0.44 ) }
    dend_48 { pt3dadd( -85.6129, -101.794, -89.0748, 0.22 ) }
    dend_48 { pt3dadd( -86.2861, -102.843, -89.5318, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -56.7671, -55.5867, -58.6561, 0.29 ) }
    dend_47 { pt3dadd( -57.4692, -55.8579, -58.5415, 0.29 ) }
    dend_47 { pt3dadd( -57.8929, -56.0546, -58.4585, 0.29 ) }
    dend_47 { pt3dadd( -58.3052, -56.2645, -58.3869, 0.66 ) }
    dend_47 { pt3dadd( -58.4996, -56.3756, -58.3582, 0.66 ) }
    dend_47 { pt3dadd( -59.1774, -56.7912, -58.26, 0.29 ) }
    dend_47 { pt3dadd( -59.469, -56.9756, -58.2225, 0.29 ) }
    dend_47 { pt3dadd( -59.6768, -57.1318, -58.1772, 0.66 ) }
    dend_47 { pt3dadd( -59.8709, -57.2914, -58.1333, 0.66 ) }
    dend_47 { pt3dadd( -60.5307, -57.8551, -57.987, 0.29 ) }
    dend_47 { pt3dadd( -60.7683, -58.0437, -57.9373, 0.52 ) }
    dend_47 { pt3dadd( -61.0018, -58.2078, -57.8942, 0.52 ) }
    dend_47 { pt3dadd( -61.6606, -58.6086, -57.7548, 0.22 ) }
    dend_47 { pt3dadd( -61.9719, -58.7743, -57.6809, 0.59 ) }
    dend_47 { pt3dadd( -62.1728, -58.8721, -57.622, 0.74 ) }
    dend_47 { pt3dadd( -62.5686, -59.0394, -57.4983, 0.29 ) }
    dend_47 { pt3dadd( -62.7711, -59.1153, -57.4362, 0.29 ) }
    dend_47 { pt3dadd( -63.0395, -59.2013, -57.3532, 0.96 ) }
    dend_47 { pt3dadd( -63.3123, -59.2581, -57.2881, 0.96 ) }
    dend_47 { pt3dadd( -64.0549, -59.4085, -57.0841, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -23.981, -128.323, 21.0202, 0.29 ) }
    dend_40 { pt3dadd( -23.9194, -128.306, 21.7063, 0.29 ) }
    dend_40 { pt3dadd( -23.7387, -128.31, 23.2013, 0.29 ) }
    dend_40 { pt3dadd( -23.6107, -128.352, 24.2677, 0.59 ) }
    dend_40 { pt3dadd( -23.4597, -128.507, 25.7504, 0.66 ) }
    dend_40 { pt3dadd( -23.2381, -128.879, 27.8252, 0.59 ) }
    dend_40 { pt3dadd( -23.0676, -129.275, 29.1839, 0.29 ) }
    dend_40 { pt3dadd( -22.9062, -129.682, 29.9879, 0.52 ) }
    dend_40 { pt3dadd( -22.7769, -130.191, 30.2909, 0.66 ) }
    dend_40 { pt3dadd( -22.5309, -131.343, 30.4314, 0.37 ) }
    dend_40 { pt3dadd( -22.2038, -132.832, 30.4089, 0.29 ) }
    dend_40 { pt3dadd( -21.9447, -134.016, 30.3039, 0.29 ) }
    dend_40 { pt3dadd( -21.6954, -135.195, 30.1369, 0.29 ) }
    dend_40 { pt3dadd( -21.452, -136.265, 29.9713, 0.29 ) }
    dend_40 { pt3dadd( -21.1034, -137.529, 29.7775, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -20.7503, -138.608, 29.6223, 0.29 ) }
    dend_40 { pt3dadd( -18.0259, -145.183, 36.3944, 0.29 ) }
    dend_40 { pt3dadd( -16.0811, -150.499, 44.4728, 0.29 ) }
    dend_40 { pt3dadd( -11.9077, -156.076, 51.4469, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.981, -128.323, 21.0202, 0.74 ) }
    dend_35 { pt3dadd( -24.6296, -129.053, 20.7405, 0.74 ) }
    dend_35 { pt3dadd( -25.1974, -129.808, 20.497, 0.52 ) }
    dend_35 { pt3dadd( -25.6298, -130.451, 20.3207, 0.52 ) }
    dend_35 { pt3dadd( -26.3082, -131.63, 20.0587, 0.59 ) }
    dend_35 { pt3dadd( -26.5822, -132.232, 19.9832, 0.96 ) }
    dend_35 { pt3dadd( -26.7935, -132.888, 19.9273, 1.18 ) }
    dend_35 { pt3dadd( -26.8699, -133.448, 19.8475, 1.18 ) }
    dend_35 { pt3dadd( -26.8545, -133.98, 19.7696, 0.96 ) }
    dend_35 { pt3dadd( -26.7246, -134.761, 19.6025, 0.66 ) }
    dend_35 { pt3dadd( -26.4039, -135.871, 19.173, 0.52 ) }
    dend_35 { pt3dadd( -26.0382, -136.864, 18.7115, 0.52 ) }
    dend_35 { pt3dadd( -25.5645, -137.915, 18.1154, 0.29 ) }
    dend_35 { pt3dadd( -25.3496, -138.309, 17.841, 0.37 ) }
    dend_35 { pt3dadd( -24.7558, -139.222, 17.0237, 0.29 ) }
    dend_35 { pt3dadd( -24.1133, -140.043, 15.9844, 0.29 ) }
    dend_35 { pt3dadd( -24.6155, -148.858, 13.9843, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -7.10305, -74.7422, -4.79703, 0.37 ) }
    dend_31 { pt3dadd( -9.68561, -75.7858, -4.43029, 0.37 ) }
    dend_31 { pt3dadd( -10.8794, -76.3302, -3.86506, 0.37 ) }
    dend_31 { pt3dadd( -11.7524, -76.755, -3.33034, 0.37 ) }
    dend_31 { pt3dadd( -12.3442, -77.0516, -2.95593, 0.37 ) }
    dend_31 { pt3dadd( -13.088, -77.4357, -2.45341, 0.59 ) }
    dend_31 { pt3dadd( -13.8083, -77.8187, -1.95879, 0.74 ) }
    dend_31 { pt3dadd( -14.3541, -78.1138, -1.46738, 0.52 ) }
    dend_31 { pt3dadd( -14.7661, -78.3411, -1.0915, 0.59 ) }
    dend_31 { pt3dadd( -15.1355, -78.5834, -0.784065, 0.74 ) }
    dend_31 { pt3dadd( -15.7779, -79.0019, -0.338678, 0.52 ) }
    dend_31 { pt3dadd( -16.1864, -79.2544, -0.111121, 0.52 ) }
    dend_31 { pt3dadd( -16.5733, -79.471, 0.0615817, 0.74 ) }
    dend_31 { pt3dadd( -17.0092, -79.6997, 0.235199, 0.74 ) }
    dend_31 { pt3dadd( -17.4262, -79.9245, 0.392391, 0.52 ) }
    dend_31 { pt3dadd( -18.0312, -80.2468, 0.611546, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.10305, -74.7422, -4.79703, 0.88 ) }
    dend_18 { pt3dadd( -7.37661, -76.0148, -4.91521, 0.88 ) }
    dend_18 { pt3dadd( -7.91747, -77.6139, -4.93911, 0.66 ) }
    dend_18 { pt3dadd( -8.49484, -78.738, -4.6965, 0.74 ) }
    dend_18 { pt3dadd( -8.99373, -79.4844, -4.45065, 0.88 ) }
    dend_18 { pt3dadd( -9.86185, -80.613, -4.04922, 0.88 ) }
    dend_18 { pt3dadd( -10.4129, -81.2951, -3.81333, 1.03 ) }
    dend_18 { pt3dadd( -11.0896, -82.0397, -3.50056, 1.03 ) }
    dend_18 { pt3dadd( -12.6347, -83.7747, -2.74149, 1.03 ) }
    dend_18 { pt3dadd( -13.5135, -84.8666, -2.30389, 1.03 ) }
    dend_18 { pt3dadd( -14.2353, -85.9709, -1.93547, 0.88 ) }
    dend_18 { pt3dadd( -14.6396, -86.9205, -1.71077, 0.88 ) }
    dend_18 { pt3dadd( -14.7848, -87.8094, -1.54904, 0.88 ) }
    dend_18 { pt3dadd( -14.6017, -89.5405, -1.38016, 1.25 ) }
    dend_18 { pt3dadd( -14.4236, -90.1716, -1.33744, 1.55 ) }
    dend_18 { pt3dadd( -14.071, -91.0614, -1.22056, 1.55 ) }
    dend_18 { pt3dadd( -13.4953, -92.2978, -0.915437, 1.55 ) }
    dend_18 { pt3dadd( -13.0951, -93.0698, -0.615432, 1.55 ) }
    dend_18 { pt3dadd( -12.3382, -94.4091, 0.119237, 1.03 ) }
    dend_18 { pt3dadd( -11.7349, -95.3694, 0.844568, 1.03 ) }
    dend_18 { pt3dadd( -11.2246, -96.1272, 1.52515, 0.81 ) }
    dend_18 { pt3dadd( -10.4011, -97.2547, 2.71806, 0.81 ) }
    dend_18 { pt3dadd( -9.8137, -97.9957, 3.59299, 1.03 ) }
    dend_18 { pt3dadd( -9.2265, -98.6434, 4.40521, 1.03 ) }
    dend_18 { pt3dadd( -8.53424, -99.3166, 5.25805, 1.03 ) }
    dend_18 { pt3dadd( -7.94174, -99.8671, 5.86515, 0.88 ) }
    dend_18 { pt3dadd( -7.01048, -100.772, 6.68879, 0.88 ) }
    dend_18 { pt3dadd( -6.53266, -101.258, 7.0422, 0.96 ) }
    dend_18 { pt3dadd( -5.977, -101.884, 7.41299, 0.96 ) }
    dend_18 { pt3dadd( -5.2184, -102.835, 7.88347, 1.33 ) }
    dend_18 { pt3dadd( -4.81357, -103.406, 8.10635, 1.62 ) }
    dend_18 { pt3dadd( -4.47816, -103.923, 8.28988, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.0361, -26.9189, -5.4573, 0.66 ) }
    dend_16 { pt3dadd( 5.24763, -29.7015, -3.68699, 0.66 ) }
    dend_16 { pt3dadd( 4.9636, -30.602, -3.21667, 0.88 ) }
    dend_16 { pt3dadd( 4.45386, -32.3771, -2.43157, 1.03 ) }
    dend_16 { pt3dadd( 4.25097, -33.2217, -2.0891, 1.03 ) }
    dend_16 { pt3dadd( 4.10647, -33.9669, -1.7912, 1.03 ) }
    dend_16 { pt3dadd( 3.97083, -34.8893, -1.41214, 0.37 ) }
    dend_16 { pt3dadd( 3.86863, -35.8738, -1.10685, 0.37 ) }
    dend_16 { pt3dadd( 3.906, -36.8649, -0.765275, 0.59 ) }
    dend_16 { pt3dadd( 4.18864, -37.7329, -0.384165, 0.81 ) }
    dend_16 { pt3dadd( 4.46462, -38.2368, -0.0672574, 0.81 ) }
    dend_16 { pt3dadd( 4.78714, -38.6939, 0.327463, 0.52 ) }
    dend_16 { pt3dadd( 5.08367, -39.0722, 0.725203, 0.81 ) }
    dend_16 { pt3dadd( 5.50456, -39.6215, 1.34699, 1.25 ) }
    dend_16 { pt3dadd( 5.65236, -39.8906, 1.62043, 1.69 ) }
    dend_16 { pt3dadd( 5.78141, -40.3535, 1.98681, 1.69 ) }
    dend_16 { pt3dadd( 5.79177, -41.4306, 2.5323, 0.96 ) }
    dend_16 { pt3dadd( 5.69547, -42.1145, 2.73667, 0.66 ) }
    dend_16 { pt3dadd( 5.58837, -42.6427, 2.8464, 0.81 ) }
    dend_16 { pt3dadd( 5.34513, -43.7469, 3.05084, 0.44 ) }
    dend_16 { pt3dadd( 5.1869, -44.6284, 3.24563, 0.44 ) }
    dend_16 { pt3dadd( 5.10845, -45.3286, 3.4347, 0.44 ) }
    dend_16 { pt3dadd( 5.09838, -45.9707, 3.71369, 0.88 ) }
    dend_16 { pt3dadd( 5.16968, -46.8332, 4.33075, 1.25 ) }
    dend_16 { pt3dadd( 5.31164, -47.6588, 5.10954, 0.66 ) }
    dend_16 { pt3dadd( 5.47621, -48.2966, 5.80228, 0.52 ) }
    dend_16 { pt3dadd( 5.58539, -48.6709, 6.21676, 0.52 ) }
    dend_16 { pt3dadd( 5.83979, -49.632, 7.23358, 0.74 ) }
    dend_16 { pt3dadd( 6.04453, -50.4803, 8.03933, 1.25 ) }
    dend_16 { pt3dadd( 6.13343, -50.8394, 8.32465, 1.25 ) }
    dend_16 { pt3dadd( 6.2981, -51.4502, 8.71964, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 6.54073, -52.2319, 9.10678, 0.44 ) }
    dend_16 { pt3dadd( 6.91044, -53.2587, 9.49313, 0.37 ) }
    dend_16 { pt3dadd( 7.17565, -53.8603, 9.65175, 0.37 ) }
    dend_16 { pt3dadd( 7.48271, -54.4629, 9.77921, 0.96 ) }
    dend_16 { pt3dadd( 7.72942, -54.9113, 9.87105, 1.33 ) }
    dend_16 { pt3dadd( 8.48836, -56.1364, 10.147, 0.29 ) }
    dend_16 { pt3dadd( 8.77594, -56.5348, 10.2516, 0.29 ) }
    dend_16 { pt3dadd( 9.07641, -56.8957, 10.3552, 0.29 ) }
    dend_16 { pt3dadd( 9.18809, -57.0298, 10.395, 0.44 ) }
    dend_16 { pt3dadd( 10.8303, -64.3992, 13.6594, 0.44 ) }
    dend_16 { pt3dadd( 13.819, -71.4465, 16.7119, 0.44 ) }
    dend_16 { pt3dadd( 16.419, -78.9832, 18.6899, 0.44 ) }
    dend_16 { pt3dadd( 19.2097, -86.3037, 21.2002, 0.44 ) }
    dend_16 { pt3dadd( 21.4159, -93.6911, 24.063, 0.44 ) }
    dend_16 { pt3dadd( 23.6632, -101.284, 26.2376, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.0361, -26.9189, -5.4573, 1.03 ) }
    dend_11 { pt3dadd( 6.0331, -28.6512, -5.94046, 1.03 ) }
    dend_11 { pt3dadd( 6.184, -30.3978, -6.31129, 1.03 ) }
    dend_11 { pt3dadd( 6.41232, -31.6793, -6.4996, 0.96 ) }
    dend_11 { pt3dadd( 6.71182, -32.9023, -6.62151, 0.96 ) }
    dend_11 { pt3dadd( 7.0804, -34.0963, -6.68663, 0.96 ) }
    dend_11 { pt3dadd( 7.36548, -34.9108, -6.66847, 1.18 ) }
    dend_11 { pt3dadd( 7.92707, -36.0514, -6.40199, 1.47 ) }
    dend_11 { pt3dadd( 8.48256, -36.9863, -6.00767, 2.21 ) }
    dend_11 { pt3dadd( 8.7065, -37.3594, -5.80496, 2.21 ) }
    dend_11 { pt3dadd( 9.01638, -37.9709, -5.43262, 1.99 ) }
    dend_11 { pt3dadd( 9.47462, -39.1765, -4.69121, 1.33 ) }
    dend_11 { pt3dadd( 9.79502, -40.5045, -3.9513, 0.88 ) }
    dend_11 { pt3dadd( 9.90793, -41.5631, -3.43927, 0.74 ) }
    dend_11 { pt3dadd( 9.88454, -42.5468, -3.07995, 0.74 ) }
    dend_11 { pt3dadd( 9.75012, -43.7087, -2.78798, 1.33 ) }
    dend_11 { pt3dadd( 9.63066, -44.4055, -2.68604, 1.62 ) }
    dend_11 { pt3dadd( 9.48547, -45.1585, -2.64763, 1.92 ) }
    dend_11 { pt3dadd( 9.3501, -45.9582, -2.67138, 1.69 ) }
    dend_11 { pt3dadd( 9.20662, -47.4789, -2.76486, 1.33 ) }
    dend_11 { pt3dadd( 9.20835, -49.0215, -2.87597, 1.03 ) }
    dend_11 { pt3dadd( 9.31714, -50.0853, -2.95182, 0.88 ) }
    dend_11 { pt3dadd( 9.5192, -51.0734, -3.00049, 1.03 ) }
    dend_11 { pt3dadd( 9.8963, -52.3698, -3.04065, 1.03 ) }
    dend_11 { pt3dadd( 10.3845, -53.6726, -3.06992, 1.03 ) }
    dend_11 { pt3dadd( 10.8759, -54.7783, -3.11669, 1.33 ) }
    dend_11 { pt3dadd( 11.2643, -55.6035, -3.20268, 1.69 ) }
    dend_11 { pt3dadd( 11.7112, -56.595, -3.38376, 1.47 ) }
    dend_11 { pt3dadd( 11.9877, -57.2801, -3.5748, 1.03 ) }
    dend_11 { pt3dadd( 12.3341, -58.3099, -3.95524, 0.96 ) }
    dend_11 { pt3dadd( 12.5963, -59.2363, -4.38324, 0.96 ) }
    dend_11 { pt3dadd( 12.8541, -60.3604, -4.96984, 1.4 ) }
    dend_11 { pt3dadd( 13.0744, -61.5487, -5.61375, 1.4 ) }
    dend_11 { pt3dadd( 13.2555, -62.5864, -6.17209, 1.55 ) }
    dend_11 { pt3dadd( 13.3667, -63.1559, -6.44298, 1.77 ) }
    dend_11 { pt3dadd( 13.6119, -64.2632, -6.87606, 0.96 ) }
    dend_11 { pt3dadd( 13.8737, -65.2746, -7.14979, 0.66 ) }
    dend_11 { pt3dadd( 14.1617, -66.2489, -7.24195, 0.66 ) }
    dend_11 { pt3dadd( 14.5145, -67.2124, -7.15562, 0.96 ) }
    dend_11 { pt3dadd( 14.9564, -68.1876, -6.91751, 1.11 ) }
    dend_11 { pt3dadd( 15.1959, -68.6209, -6.76453, 1.4 ) }
    dend_11 { pt3dadd( 15.4204, -68.9687, -6.61722, 1.4 ) }
    dend_11 { pt3dadd( 15.8942, -69.6919, -6.30943, 1.4 ) }
    dend_11 { pt3dadd( 16.4608, -70.6239, -5.97908, 0.66 ) }
    dend_11 { pt3dadd( 16.7209, -71.1124, -5.87448, 0.52 ) }
    dend_11 { pt3dadd( 17.0258, -71.794, -5.81612, 0.52 ) }
    dend_11 { pt3dadd( 17.4125, -72.8965, -5.7866, 0.81 ) }
    dend_11 { pt3dadd( 17.7216, -74.1226, -5.76651, 1.03 ) }
    dend_11 { pt3dadd( 17.8573, -74.925, -5.78234, 1.03 ) }
    dend_11 { pt3dadd( 17.9457, -76.0006, -5.82039, 1.03 ) }
    dend_11 { pt3dadd( 18.0033, -77.0602, -5.93048, 1.03 ) }
    dend_11 { pt3dadd( 18.0466, -78.1531, -6.09981, 0.88 ) }
    dend_11 { pt3dadd( 18.1398, -79.4773, -6.39458, 1.03 ) }
    dend_11 { pt3dadd( 18.2825, -80.6525, -6.71368, 0.52 ) }
    dend_11 { pt3dadd( 18.4967, -81.7595, -7.07269, 0.52 ) }
    dend_11 { pt3dadd( 18.9272, -83.3592, -7.72359, 0.88 ) }
    dend_11 { pt3dadd( 19.1482, -84.0064, -8.0415, 1.11 ) }
    dend_11 { pt3dadd( 19.5412, -85.0234, -8.61381, 0.59 ) }
    dend_11 { pt3dadd( 19.7047, -85.454, -8.85689, 0.59 ) }
    dend_11 { pt3dadd( 19.9831, -86.4337, -9.29259, 0.52 ) }
    dend_11 { pt3dadd( 20.1102, -87.4925, -9.59728, 0.52 ) }
    dend_11 { pt3dadd( 19.991, -88.3657, -9.67008, 1.11 ) }
    dend_11 { pt3dadd( 19.7448, -89.1055, -9.6617, 1.25 ) }
    dend_11 { pt3dadd( 19.2083, -90.2258, -9.56729, 1.18 ) }
    dend_11 { pt3dadd( 18.6113, -91.3223, -9.43159, 0.52 ) }
    dend_11 { pt3dadd( 18.1637, -92.0899, -9.28546, 0.52 ) }
    dend_11 { pt3dadd( 17.6021, -93.147, -9.07306, 0.52 ) }
    dend_11 { pt3dadd( 17.4295, -93.5445, -9.01557, 0.81 ) }
    dend_11 { pt3dadd( 17.2073, -94.2697, -8.97571, 0.74 ) }
    dend_11 { pt3dadd( 17.0197, -95.1932, -9.03948, 0.74 ) }
    dend_11 { pt3dadd( 16.874, -96.0985, -9.19275, 1.03 ) }
    dend_11 { pt3dadd( 16.6858, -97.2795, -9.51194, 0.66 ) }
    dend_11 { pt3dadd( 16.5355, -98.0464, -9.78783, 0.52 ) }
    dend_11 { pt3dadd( 16.2957, -98.9147, -10.1938, 1.11 ) }
    dend_11 { pt3dadd( 16.0655, -99.6221, -10.6443, 1.11 ) }
    dend_11 { pt3dadd( 15.7268, -100.605, -11.4003, 0.81 ) }
    dend_11 { pt3dadd( 15.399, -101.617, -12.2812, 0.66 ) }
    dend_11 { pt3dadd( 15.192, -102.326, -12.9169, 0.88 ) }
    dend_11 { pt3dadd( 14.9984, -103.295, -13.7966, 0.66 ) }
    dend_11 { pt3dadd( 14.8898, -104.569, -15.038, 0.59 ) }
    dend_11 { pt3dadd( 14.9147, -105.403, -15.8911, 0.88 ) }
    dend_11 { pt3dadd( 15.0003, -106.133, -16.6565, 1.18 ) }
    dend_11 { pt3dadd( 15.0774, -106.662, -17.2094, 0.96 ) }
    dend_11 { pt3dadd( 15.1897, -107.364, -17.9373, 0.96 ) }
    dend_11 { pt3dadd( 15.3586, -108.653, -19.1878, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 15.385, -109.081, -19.5687, 0.81 ) }
    dend_11 { pt3dadd( 15.4062, -109.925, -20.2623, 0.66 ) }
    dend_11 { pt3dadd( 15.3751, -110.582, -20.689, 0.66 ) }
    dend_11 { pt3dadd( 15.2785, -111.414, -21.0647, 0.96 ) }
    dend_11 { pt3dadd( 15.0312, -112.481, -21.1849, 0.88 ) }
    dend_11 { pt3dadd( 14.7584, -113.443, -21.0789, 0.88 ) }
    dend_11 { pt3dadd( 14.5037, -114.289, -20.9317, 0.37 ) }
    dend_11 { pt3dadd( 14.0491, -115.846, -20.5989, 1.03 ) }
    dend_11 { pt3dadd( 13.8167, -116.664, -20.4422, 1.03 ) }
    dend_11 { pt3dadd( 13.2654, -118.459, -20.1753, 0.44 ) }
    dend_11 { pt3dadd( 12.9138, -119.744, -20.1195, 0.44 ) }
    dend_11 { pt3dadd( 12.8064, -120.477, -20.2296, 0.74 ) }
    dend_11 { pt3dadd( 12.8677, -121.215, -20.5383, 0.74 ) }
    dend_11 { pt3dadd( 13.1537, -122.22, -21.1671, 0.44 ) }
    dend_11 { pt3dadd( 13.476, -123.022, -21.7303, 0.66 ) }
    dend_11 { pt3dadd( 14.0429, -124.175, -22.5916, 0.44 ) }
    dend_11 { pt3dadd( 14.9031, -125.829, -23.8086, 0.88 ) }
    dend_11 { pt3dadd( 15.8378, -127.656, -25.0623, 0.52 ) }
    dend_11 { pt3dadd( 16.3187, -128.591, -25.6749, 0.74 ) }
    dend_11 { pt3dadd( 16.969, -129.854, -26.4524, 1.33 ) }
    dend_11 { pt3dadd( 17.3137, -130.574, -26.8651, 1.33 ) }
    dend_11 { pt3dadd( 17.8862, -132.064, -27.633, 0.74 ) }
    dend_11 { pt3dadd( 18.142, -133.017, -28.0491, 0.66 ) }
    dend_11 { pt3dadd( 18.352, -134.368, -28.5893, 0.66 ) }
    dend_11 { pt3dadd( 18.4134, -135.298, -28.992, 0.81 ) }
    dend_11 { pt3dadd( 18.386, -136.232, -29.4619, 0.59 ) }
    dend_11 { pt3dadd( 18.2962, -136.851, -29.7962, 1.18 ) }
    dend_11 { pt3dadd( 18.2248, -137.134, -29.9647, 1.18 ) }
    dend_11 { pt3dadd( 17.9134, -138.13, -30.5728, 0.44 ) }
    dend_11 { pt3dadd( 17.5935, -139.006, -31.0276, 0.44 ) }
    dend_11 { pt3dadd( 17.3328, -139.754, -31.3453, 1.03 ) }
    dend_11 { pt3dadd( 17.1812, -140.303, -31.4964, 1.4 ) }
    dend_11 { pt3dadd( 16.9278, -141.511, -31.5518, 0.52 ) }
    dend_11 { pt3dadd( 16.7996, -142.343, -31.5082, 0.52 ) }
    dend_11 { pt3dadd( 16.7098, -143.472, -31.2737, 0.74 ) }
    dend_11 { pt3dadd( 16.6865, -143.893, -31.1167, 0.74 ) }
    dend_11 { pt3dadd( 16.6075, -144.756, -30.6404, 0.59 ) }
    dend_11 { pt3dadd( 16.487, -145.761, -29.8976, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.0361, -26.9189, -5.4573, 0.88 ) }
    dend_2 { pt3dadd( 8.42625, -26.8928, -6.96917, 0.88 ) }
    dend_2 { pt3dadd( 9.10544, -26.8639, -7.33096, 0.88 ) }
    dend_2 { pt3dadd( 9.77993, -26.8317, -7.62553, 1.03 ) }
    dend_2 { pt3dadd( 10.2337, -26.8092, -7.78673, 1.33 ) }
    dend_2 { pt3dadd( 10.6499, -26.7919, -7.91649, 1.62 ) }
    dend_2 { pt3dadd( 11.2496, -26.7762, -8.0867, 1.84 ) }
    dend_2 { pt3dadd( 11.7581, -26.7362, -8.16462, 1.47 ) }
    dend_2 { pt3dadd( 12.3687, -26.693, -8.33893, 1.18 ) }
    dend_2 { pt3dadd( 12.8264, -26.6465, -8.66022, 0.81 ) }
    dend_2 { pt3dadd( 13.3139, -26.579, -9.15819, 0.81 ) }
    dend_2 { pt3dadd( 13.6223, -26.5428, -9.52185, 1.11 ) }
    dend_2 { pt3dadd( 14.2751, -26.5051, -10.375, 1.33 ) }
    dend_2 { pt3dadd( 14.9605, -26.494, -11.3184, 1.77 ) }
    dend_2 { pt3dadd( 16.5195, -26.5351, -13.504, 1.47 ) }
    dend_2 { pt3dadd( 17.0211, -26.5649, -14.1867, 1.11 ) }
    dend_2 { pt3dadd( 17.5334, -26.6031, -14.8362, 1.11 ) }
    dend_2 { pt3dadd( 18.2212, -26.6568, -15.597, 0.81 ) }
    dend_2 { pt3dadd( 18.6382, -26.6947, -15.9639, 0.96 ) }
    dend_2 { pt3dadd( 19.297, -26.7364, -16.371, 0.88 ) }
    dend_2 { pt3dadd( 19.837, -26.6977, -16.6155, 0.74 ) }
    dend_2 { pt3dadd( 20.254, -26.5855, -16.8238, 0.59 ) }
    dend_2 { pt3dadd( 20.7973, -26.3304, -17.1612, 1.03 ) }
    dend_2 { pt3dadd( 21.2034, -26.0891, -17.4299, 1.55 ) }
    dend_2 { pt3dadd( 21.5775, -25.8518, -17.6831, 1.69 ) }
    dend_2 { pt3dadd( 22.6976, -25.1336, -18.4765, 1.69 ) }
    dend_2 { pt3dadd( 23.0439, -24.9213, -18.7338, 1.69 ) }
    dend_2 { pt3dadd( 23.9112, -24.4327, -19.3723, 0.88 ) }
    dend_2 { pt3dadd( 24.4016, -24.1987, -19.7084, 0.81 ) }
    dend_2 { pt3dadd( 24.9855, -23.9838, -20.0499, 1.11 ) }
    dend_2 { pt3dadd( 25.7423, -23.796, -20.4158, 1.18 ) }
    dend_2 { pt3dadd( 26.425, -23.726, -20.6583, 0.59 ) }
    dend_2 { pt3dadd( 26.7288, -23.7355, -20.753, 0.59 ) }
    dend_2 { pt3dadd( 27.462, -23.881, -20.921, 0.96 ) }
    dend_2 { pt3dadd( 27.9834, -24.0722, -21.0299, 1.18 ) }
    dend_2 { pt3dadd( 28.4237, -24.3034, -21.0994, 1.18 ) }
    dend_2 { pt3dadd( 28.8686, -24.5855, -21.1325, 1.4 ) }
    dend_2 { pt3dadd( 29.378, -24.9381, -21.1469, 1.4 ) }
    dend_2 { pt3dadd( 29.8509, -25.2542, -21.1517, 1.11 ) }
    dend_2 { pt3dadd( 30.1855, -25.4474, -21.1449, 1.11 ) }
    dend_2 { pt3dadd( 30.5998, -25.6207, -21.1282, 1.03 ) }
    dend_2 { pt3dadd( 31.1441, -25.7699, -21.0948, 1.03 ) }
    dend_2 { pt3dadd( 31.6199, -25.841, -21.0561, 1.03 ) }
    dend_2 { pt3dadd( 32.1696, -25.8704, -21.0016, 0.96 ) }
    dend_2 { pt3dadd( 32.9288, -25.852, -20.9232, 0.88 ) }
    dend_2 { pt3dadd( 33.7547, -25.7877, -20.8166, 0.88 ) }
    dend_2 { pt3dadd( 34.3021, -25.7168, -20.7336, 1.03 ) }
    dend_2 { pt3dadd( 34.7328, -25.6478, -20.6737, 1.11 ) }
    dend_2 { pt3dadd( 35.0876, -25.5889, -20.6388, 1.18 ) }
    dend_2 { pt3dadd( 35.4108, -25.5498, -20.6475, 1.18 ) }
    dend_2 { pt3dadd( 36.0669, -25.5357, -20.8, 0.81 ) }
    dend_2 { pt3dadd( 36.5399, -25.5904, -21.0088, 0.74 ) }
    dend_2 { pt3dadd( 37.1604, -25.7212, -21.3589, 1.18 ) }
    dend_2 { pt3dadd( 37.6344, -25.8453, -21.6591, 1.4 ) }
    dend_2 { pt3dadd( 38.6007, -26.1175, -22.3311, 1.18 ) }
    dend_2 { pt3dadd( 39.3455, -26.3201, -22.8847, 0.88 ) }
    dend_2 { pt3dadd( 39.9039, -26.4489, -23.3352, 0.74 ) }
    dend_2 { pt3dadd( 40.4699, -26.5456, -23.7851, 0.74 ) }
    dend_2 { pt3dadd( 40.9864, -26.583, -24.164, 1.11 ) }
    dend_2 { pt3dadd( 41.5385, -26.5634, -24.5445, 1.4 ) }
    dend_2 { pt3dadd( 42.0881, -26.5117, -24.9024, 1.4 ) }
    dend_2 { pt3dadd( 42.8541, -26.4432, -25.4112, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 43.3045, -26.4219, -25.7298, 0.74 ) }
    dend_2 { pt3dadd( 43.8718, -26.4513, -26.1576, 0.66 ) }
    dend_2 { pt3dadd( 44.5473, -26.5829, -26.6952, 0.81 ) }
    dend_2 { pt3dadd( 45.225, -26.8195, -27.2119, 0.74 ) }
    dend_2 { pt3dadd( 45.7884, -27.0755, -27.6352, 1.25 ) }
    dend_2 { pt3dadd( 46.0998, -27.2312, -27.8547, 1.69 ) }
    dend_2 { pt3dadd( 46.505, -27.4185, -28.1203, 1.69 ) }
    dend_2 { pt3dadd( 46.9248, -27.5597, -28.3413, 1.4 ) }
    dend_2 { pt3dadd( 47.5723, -27.6543, -28.5837, 0.88 ) }
    dend_2 { pt3dadd( 48.5123, -27.6094, -28.8392, 0.81 ) }
    dend_2 { pt3dadd( 48.9378, -27.5506, -28.9317, 0.81 ) }
    dend_2 { pt3dadd( 49.5279, -27.4619, -29.0277, 0.81 ) }
    dend_2 { pt3dadd( 50.2805, -27.3537, -29.1003, 0.81 ) }
    dend_2 { pt3dadd( 50.7464, -27.3046, -29.1151, 0.81 ) }
    dend_2 { pt3dadd( 51.3986, -27.2865, -29.1033, 0.81 ) }
    dend_2 { pt3dadd( 51.8307, -27.3358, -29.0655, 0.96 ) }
    dend_2 { pt3dadd( 52.491, -27.5241, -29.0296, 0.96 ) }
    dend_2 { pt3dadd( 52.9394, -27.7262, -29.0518, 1.18 ) }
    dend_2 { pt3dadd( 53.3418, -27.9548, -29.1269, 1.47 ) }
    dend_2 { pt3dadd( 53.7549, -28.2097, -29.2369, 1.47 ) }
    dend_2 { pt3dadd( 54.3594, -28.585, -29.4232, 0.74 ) }
    dend_2 { pt3dadd( 55.0658, -28.9929, -29.6563, 0.74 ) }
    dend_2 { pt3dadd( 55.9365, -29.4339, -29.9628, 0.66 ) }
    dend_2 { pt3dadd( 56.754, -29.7963, -30.2757, 0.74 ) }
    dend_2 { pt3dadd( 57.2663, -29.983, -30.4734, 0.81 ) }
    dend_2 { pt3dadd( 57.8551, -30.1392, -30.6893, 0.81 ) }
    dend_2 { pt3dadd( 58.1547, -30.185, -30.788, 1.11 ) }
    dend_2 { pt3dadd( 58.8751, -30.2099, -31.0044, 1.25 ) }
    dend_2 { pt3dadd( 59.1957, -30.1848, -31.1189, 1.62 ) }
    dend_2 { pt3dadd( 59.5554, -30.1218, -31.3015, 1.62 ) }
    dend_2 { pt3dadd( 60.2653, -29.9655, -31.7373, 0.59 ) }
    dend_2 { pt3dadd( 60.7109, -29.8615, -32.0442, 0.59 ) }
    dend_2 { pt3dadd( 61.3819, -29.7131, -32.5223, 0.88 ) }
    dend_2 { pt3dadd( 62.2829, -29.5339, -33.1702, 1.4 ) }
    dend_2 { pt3dadd( 63.1894, -29.3869, -33.7987, 0.74 ) }
    dend_2 { pt3dadd( 63.722, -29.3243, -34.1508, 0.59 ) }
    dend_2 { pt3dadd( 64.1718, -29.2974, -34.4165, 0.81 ) }
    dend_2 { pt3dadd( 64.5652, -29.3045, -34.5858, 0.81 ) }
    dend_2 { pt3dadd( 64.9325, -29.3385, -34.6631, 0.96 ) }
    dend_2 { pt3dadd( 65.3035, -29.378, -34.6793, 0.96 ) }
    dend_2 { pt3dadd( 65.744, -29.4159, -34.6725, 0.59 ) }
    dend_2 { pt3dadd( 66.4327, -29.4415, -34.6726, 0.59 ) }
    dend_2 { pt3dadd( 67.0995, -29.4295, -34.673, 0.66 ) }
    dend_2 { pt3dadd( 67.491, -29.4003, -34.7061, 1.03 ) }
    dend_2 { pt3dadd( 68.1353, -29.3302, -34.7981, 1.03 ) }
    dend_2 { pt3dadd( 68.7911, -29.2104, -35.052, 0.59 ) }
    dend_2 { pt3dadd( 69.1254, -29.1228, -35.2434, 0.59 ) }
    dend_2 { pt3dadd( 69.5703, -28.9868, -35.5531, 0.59 ) }
    dend_2 { pt3dadd( 70.2508, -28.7958, -36.0725, 1.11 ) }
    dend_2 { pt3dadd( 70.5554, -28.7306, -36.3088, 1.33 ) }
    dend_2 { pt3dadd( 72.2595, -28.4635, -37.5723, 1.03 ) }
    dend_2 { pt3dadd( 72.5646, -28.4237, -37.7785, 1.4 ) }
    dend_2 { pt3dadd( 73.1648, -28.3537, -38.135, 0.81 ) }
    dend_2 { pt3dadd( 73.7656, -28.2865, -38.4339, 0.74 ) }
    dend_2 { pt3dadd( 74.519, -28.204, -38.7151, 0.59 ) }
    dend_2 { pt3dadd( 75.0149, -28.1489, -38.85, 0.59 ) }
    dend_2 { pt3dadd( 75.799, -28.0662, -38.9508, 0.59 ) }
    dend_2 { pt3dadd( 76.7288, -27.93, -39.0667, 0.88 ) }
    dend_2 { pt3dadd( 77.0593, -27.8491, -39.103, 1.25 ) }
    dend_2 { pt3dadd( 77.3535, -27.7468, -39.131, 1.55 ) }
    dend_2 { pt3dadd( 77.7908, -27.5649, -39.1781, 1.55 ) }
    dend_2 { pt3dadd( 78.1463, -27.4113, -39.2257, 1.33 ) }
    dend_2 { pt3dadd( 78.5863, -27.2201, -39.2878, 0.66 ) }
    dend_2 { pt3dadd( 79.1482, -26.987, -39.3654, 0.66 ) }
    dend_2 { pt3dadd( 79.5267, -26.8455, -39.4519, 0.66 ) }
    dend_2 { pt3dadd( 80.2264, -26.5946, -39.6911, 0.66 ) }
    dend_2 { pt3dadd( 80.5477, -26.5173, -39.9191, 0.66 ) }
    dend_2 { pt3dadd( 80.748, -26.4868, -40.1034, 0.96 ) }
    dend_2 { pt3dadd( 80.988, -26.4662, -40.3489, 0.96 ) }
    dend_2 { pt3dadd( 81.7101, -26.4553, -41.1087, 0.74 ) }
    dend_2 { pt3dadd( 82.142, -26.4674, -41.5594, 1.62 ) }
    dend_2 { pt3dadd( 83.8587, -26.5524, -43.2758, 0.66 ) }
    dend_2 { pt3dadd( 84.1177, -26.5598, -43.522, 0.66 ) }
    dend_2 { pt3dadd( 84.5116, -26.5616, -43.8586, 1.11 ) }
    dend_2 { pt3dadd( 85.0211, -26.5563, -44.2389, 1.11 ) }
    dend_2 { pt3dadd( 85.5325, -26.5327, -44.5374, 0.52 ) }
    dend_2 { pt3dadd( 86.0304, -26.4797, -44.7451, 0.52 ) }
    dend_2 { pt3dadd( 86.6545, -26.3474, -44.9128, 1.25 ) }
    dend_2 { pt3dadd( 87.137, -26.2246, -45.0454, 0.88 ) }
    dend_2 { pt3dadd( 88.0567, -25.9375, -45.2981, 0.44 ) }
    dend_2 { pt3dadd( 88.5821, -25.7412, -45.4331, 0.44 ) }
    dend_2 { pt3dadd( 89.3599, -25.4121, -45.6189, 0.52 ) }
    dend_2 { pt3dadd( 89.8744, -25.1734, -45.7335, 0.88 ) }
    dend_2 { pt3dadd( 90.129, -25.0492, -45.7847, 1.11 ) }
    dend_2 { pt3dadd( 90.3501, -24.9279, -45.8539, 1.11 ) }
    dend_2 { pt3dadd( 90.5322, -24.8135, -45.9392, 1.11 ) }
    dend_2 { pt3dadd( 91.1479, -24.3966, -46.368, 0.52 ) }
    dend_2 { pt3dadd( 91.4034, -24.2274, -46.619, 0.52 ) }
    dend_2 { pt3dadd( 91.7649, -24.0003, -47.0217, 0.81 ) }
    dend_2 { pt3dadd( 92.6157, -23.5061, -47.9953, 0.81 ) }
    dend_2 { pt3dadd( 93.0169, -23.2853, -48.443, 1.11 ) }
    dend_2 { pt3dadd( 93.1911, -23.1963, -48.6176, 1.92 ) }
    dend_2 { pt3dadd( 94.1876, -22.746, -49.4395, 0.59 ) }
    dend_2 { pt3dadd( 94.3116, -22.6991, -49.5159, 0.59 ) }
    dend_2 { pt3dadd( 94.7514, -22.5736, -49.6692, 0.88 ) }
    dend_2 { pt3dadd( 95.3037, -22.463, -49.7383, 0.44 ) }
    dend_2 { pt3dadd( 96.2007, -22.3254, -49.8012, 0.44 ) }
    dend_2 { pt3dadd( 96.9053, -22.2403, -49.8305, 0.74 ) }
    dend_2 { pt3dadd( 97.3045, -22.2096, -49.8604, 0.74 ) }
    dend_2 { pt3dadd( 97.9109, -22.2004, -50.0027, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 98.2831, -22.2225, -50.1668, 0.52 ) }
    dend_2 { pt3dadd( 98.8557, -22.2917, -50.5239, 0.59 ) }
    dend_2 { pt3dadd( 99.0765, -22.319, -50.6854, 0.59 ) }
    dend_2 { pt3dadd( 100.049, -22.4021, -51.442, 0.59 ) }
    dend_2 { pt3dadd( 100.69, -22.4187, -51.9399, 0.81 ) }
    dend_2 { pt3dadd( 101.294, -22.391, -52.4068, 1.4 ) }
    dend_2 { pt3dadd( 101.614, -22.3407, -52.6324, 1.55 ) }
    dend_2 { pt3dadd( 102.343, -22.1099, -53.0512, 0.44 ) }
    dend_2 { pt3dadd( 102.649, -21.958, -53.1749, 0.88 ) }
    dend_2 { pt3dadd( 103.016, -21.7273, -53.2435, 0.88 ) }
    dend_2 { pt3dadd( 103.414, -21.4735, -53.3072, 0.59 ) }
    dend_2 { pt3dadd( 104.03, -21.1069, -53.4141, 0.59 ) }
    dend_2 { pt3dadd( 104.453, -20.9031, -53.5432, 0.81 ) }
    dend_2 { pt3dadd( 104.94, -20.7264, -53.7455, 0.81 ) }
    dend_2 { pt3dadd( 105.596, -20.536, -54.0908, 0.52 ) }
    dend_2 { pt3dadd( 106.351, -20.3398, -54.5748, 0.74 ) }
    dend_2 { pt3dadd( 106.609, -20.2708, -54.816, 0.74 ) }
    dend_2 { pt3dadd( 107.196, -20.0641, -55.6061, 0.37 ) }
    dend_2 { pt3dadd( 107.449, -19.9355, -56.0465, 0.37 ) }
    dend_2 { pt3dadd( 107.791, -19.6917, -56.7704, 0.37 ) }
    dend_2 { pt3dadd( 108.054, -19.4342, -57.4167, 0.59 ) }
    dend_2 { pt3dadd( 108.756, -18.6364, -59.1876, 0.88 ) }
    dend_2 { pt3dadd( 109.087, -18.2538, -59.9912, 0.52 ) }
    dend_2 { pt3dadd( 109.213, -18.1301, -60.2735, 0.52 ) }
    dend_2 { pt3dadd( 109.511, -17.9176, -60.8871, 0.52 ) }
    dend_2 { pt3dadd( 109.769, -17.7809, -61.3328, 0.81 ) }
    dend_2 { pt3dadd( 110.12, -17.6349, -61.8381, 0.59 ) }
    dend_2 { pt3dadd( 110.433, -17.5341, -62.2164, 0.59 ) }
    dend_2 { pt3dadd( 111.485, -17.2763, -63.4251, 1.18 ) }
    dend_2 { pt3dadd( 112.737, -17.0297, -64.9451, 0.74 ) }
    dend_2 { pt3dadd( 113.042, -16.982, -65.3488, 0.74 ) }
    dend_2 { pt3dadd( 113.324, -16.9439, -65.7596, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -48.7804, 103.462, -27.0866, 0.29 ) }
    dend_87 { pt3dadd( -50.122, 103.228, -28.399, 0.29 ) }
    dend_87 { pt3dadd( -51.2276, 103.253, -29.4495, 0.29 ) }
    dend_87 { pt3dadd( -51.7751, 103.486, -30.0562, 0.59 ) }
    dend_87 { pt3dadd( -52.393, 103.96, -30.772, 0.59 ) }
    dend_87 { pt3dadd( -52.909, 104.44, -31.3442, 0.59 ) }
    dend_87 { pt3dadd( -53.4832, 105.014, -31.9296, 0.44 ) }
    dend_87 { pt3dadd( -53.9485, 105.675, -32.3683, 0.59 ) }
    dend_87 { pt3dadd( -54.7391, 107.044, -33.2591, 0.37 ) }
    dend_87 { pt3dadd( -55.1023, 107.714, -33.7314, 0.29 ) }
    dend_87 { pt3dadd( -55.4718, 108.328, -34.2152, 0.59 ) }
    dend_87 { pt3dadd( -55.8798, 108.948, -34.739, 0.59 ) }
    dend_87 { pt3dadd( -56.773, 110.254, -35.8731, 0.29 ) }
    dend_87 { pt3dadd( -57.5859, 111.517, -36.9539, 0.29 ) }
    dend_87 { pt3dadd( -57.9422, 112.138, -37.4908, 0.29 ) }
    dend_87 { pt3dadd( -58.5394, 113.379, -38.6544, 0.29 ) }
    dend_87 { pt3dadd( -58.8476, 114.196, -39.504, 0.29 ) }
    dend_87 { pt3dadd( -59.1249, 115.081, -40.481, 0.52 ) }
    dend_87 { pt3dadd( -59.3552, 115.912, -41.406, 0.66 ) }
    dend_87 { pt3dadd( -59.6722, 117.229, -42.8054, 0.44 ) }
    dend_87 { pt3dadd( -59.8612, 118.33, -44.0137, 0.59 ) }
    dend_87 { pt3dadd( -59.9736, 119.689, -45.685, 0.96 ) }
    dend_87 { pt3dadd( -60.0185, 120.124, -46.3359, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -48.7804, 103.462, -27.0866, 0.66 ) }
    dend_86 { pt3dadd( -47.6211, 103.668, -27.0724, 0.66 ) }
    dend_86 { pt3dadd( -46.6948, 103.833, -27.0611, 0.29 ) }
    dend_86 { pt3dadd( -46.0225, 103.952, -27.0529, 0.44 ) }
    dend_86 { pt3dadd( -45.1936, 104.099, -27.0428, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -74.6804, 120.684, -26.1279, 0.29 ) }
    dend_82 { pt3dadd( -75.1763, 121.264, -26.6999, 0.29 ) }
    dend_82 { pt3dadd( -75.8049, 121.935, -27.435, 0.59 ) }
    dend_82 { pt3dadd( -76.2159, 122.378, -27.9268, 0.44 ) }
    dend_82 { pt3dadd( -76.811, 123.066, -28.6447, 0.88 ) }
    dend_82 { pt3dadd( -77.0759, 123.418, -28.986, 1.03 ) }
    dend_82 { pt3dadd( -77.6702, 124.318, -29.7915, 0.52 ) }
    dend_82 { pt3dadd( -77.8619, 124.648, -30.0786, 0.44 ) }
    dend_82 { pt3dadd( -78.2413, 125.362, -30.6249, 0.66 ) }
    dend_82 { pt3dadd( -78.5297, 125.944, -31.0342, 0.88 ) }
    dend_82 { pt3dadd( -79.0857, 127.08, -31.7478, 0.59 ) }
    dend_82 { pt3dadd( -79.4599, 127.827, -32.1834, 0.74 ) }
    dend_82 { pt3dadd( -79.8464, 128.583, -32.5895, 0.74 ) }
    dend_82 { pt3dadd( -80.3927, 129.576, -33.1238, 0.37 ) }
    dend_82 { pt3dadd( -80.6487, 129.991, -33.3517, 0.37 ) }
    dend_82 { pt3dadd( -81.2619, 130.856, -33.8306, 0.66 ) }
    dend_82 { pt3dadd( -81.6971, 131.365, -34.112, 0.66 ) }
    dend_82 { pt3dadd( -82.16, 131.808, -34.3663, 0.52 ) }
    dend_82 { pt3dadd( -82.8387, 132.339, -34.6774, 0.88 ) }
    dend_82 { pt3dadd( -83.3077, 132.641, -34.8543, 0.88 ) }
    dend_82 { pt3dadd( -84.0062, 133.004, -35.0568, 0.52 ) }
    dend_82 { pt3dadd( -84.8551, 133.375, -35.2433, 0.52 ) }
    dend_82 { pt3dadd( -85.9154, 133.816, -35.4274, 0.88 ) }
    dend_82 { pt3dadd( -86.6043, 134.112, -35.5255, 0.88 ) }
    dend_82 { pt3dadd( -87.4647, 134.492, -35.6226, 0.52 ) }
    dend_82 { pt3dadd( -88.2023, 134.829, -35.697, 0.44 ) }
    dend_82 { pt3dadd( -89.0416, 135.222, -35.783, 0.37 ) }
    dend_82 { pt3dadd( -89.8664, 135.648, -35.8621, 0.37 ) }
    dend_82 { pt3dadd( -90.69, 136.124, -35.9457, 0.29 ) }
    dend_82 { pt3dadd( -92.0319, 136.973, -36.0998, 0.29 ) }
    dend_82 { pt3dadd( -92.6583, 137.383, -36.1781, 0.29 ) }
    dend_82 { pt3dadd( -93.3788, 137.844, -36.2707, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -74.6804, 120.684, -26.1279, 0.29 ) }
    dend_81 { pt3dadd( -76.1378, 119.546, -25.407, 0.29 ) }
    dend_81 { pt3dadd( -76.9309, 118.927, -25.0147, 0.29 ) }
    dend_81 { pt3dadd( -77.4929, 118.488, -24.7367, 0.22 ) }
    dend_81 { pt3dadd( -78.2098, 117.928, -24.3821, 0.22 ) }
    dend_81 { pt3dadd( -79.0075, 117.305, -23.9876, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 156.917, 34.3649, 62.0624, 0.29 ) }
    dend_75 { pt3dadd( 159.311, 38.7927, 69.2494, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 162.317, 42.3242, 76.7283, 0.29 ) }
    dend_75 { pt3dadd( 166.241, 45.5554, 83.9234, 0.29 ) }
    dend_75 { pt3dadd( 169.499, 47.4115, 91.9245, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 156.917, 34.3649, 62.0624, 0.29 ) }
    dend_72 { pt3dadd( 168.224, 32.6173, 63.2698, 0.29 ) }
    dend_72 { pt3dadd( 179.404, 32.3868, 66.0142, 0.29 ) }
    dend_72 { pt3dadd( 189.892, 33.1547, 70.6934, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 92.7168, 42.6736, -0.208687, 0.37 ) }
    dend_68 { pt3dadd( 92.9324, 43.3666, 0.0153777, 0.37 ) }
    dend_68 { pt3dadd( 93.214, 44.3957, 0.39439, 0.37 ) }
    dend_68 { pt3dadd( 93.4179, 45.1411, 0.668958, 0.22 ) }
    dend_68 { pt3dadd( 93.8467, 46.7084, 1.24622, 0.22 ) }
    dend_68 { pt3dadd( 94.1735, 47.9029, 1.68619, 0.66 ) }
    dend_68 { pt3dadd( 94.5672, 49.3414, 2.21606, 1.11 ) }
    dend_68 { pt3dadd( 94.6515, 49.6993, 2.37139, 1.11 ) }
    dend_68 { pt3dadd( 97.4334, 58.6905, 4.42889, 1.11 ) }
    dend_68 { pt3dadd( 100.741, 67.5488, 6.2956, 1.11 ) }
    dend_68 { pt3dadd( 104.635, 75.9904, 8.92764, 1.11 ) }
    dend_68 { pt3dadd( 108.539, 84.0608, 12.5918, 1.11 ) }
    dend_68 { pt3dadd( 113.448, 92.1649, 14.5213, 1.11 ) }
    dend_68 { pt3dadd( 118.553, 100.09, 16.7169, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 92.7168, 42.6736, -0.208687, 0.44 ) }
    dend_59 { pt3dadd( 93.7349, 42.9056, -0.114119, 0.44 ) }
    dend_59 { pt3dadd( 94.8241, 43.104, 0.00423944, 0.44 ) }
    dend_59 { pt3dadd( 95.9884, 43.3009, 0.21539, 0.74 ) }
    dend_59 { pt3dadd( 96.6954, 43.4144, 0.372858, 1.03 ) }
    dend_59 { pt3dadd( 97.3566, 43.518, 0.541995, 1.03 ) }
    dend_59 { pt3dadd( 97.88, 43.5927, 0.65937, 1.03 ) }
    dend_59 { pt3dadd( 98.7687, 43.7001, 0.774993, 0.66 ) }
    dend_59 { pt3dadd( 100.001, 43.8651, 0.800671, 0.66 ) }
    dend_59 { pt3dadd( 100.439, 43.9484, 0.73873, 0.81 ) }
    dend_59 { pt3dadd( 101.11, 44.1337, 0.555348, 0.44 ) }
    dend_59 { pt3dadd( 102.481, 44.6338, 0.0407272, 0.44 ) }
    dend_59 { pt3dadd( 104.115, 45.3602, -0.678287, 0.37 ) }
    dend_59 { pt3dadd( 104.69, 45.6447, -0.971822, 0.37 ) }
    dend_59 { pt3dadd( 105.58, 46.1021, -1.45909, 0.37 ) }
    dend_59 { pt3dadd( 106.648, 46.6825, -2.02004, 0.66 ) }
    dend_59 { pt3dadd( 107.27, 47.0442, -2.31636, 0.66 ) }
    dend_59 { pt3dadd( 108.138, 47.576, -2.61844, 0.37 ) }
    dend_59 { pt3dadd( 108.656, 47.8843, -2.73255, 0.37 ) }
    dend_59 { pt3dadd( 109.313, 48.266, -2.86074, 0.59 ) }
    dend_59 { pt3dadd( 109.897, 48.6077, -2.993, 0.59 ) }
    dend_59 { pt3dadd( 110.469, 48.9213, -3.2187, 0.44 ) }
    dend_59 { pt3dadd( 111.438, 49.3693, -3.65498, 0.66 ) }
    dend_59 { pt3dadd( 111.615, 49.4367, -3.73584, 0.96 ) }
    dend_59 { pt3dadd( 112.289, 49.63, -4.00966, 0.96 ) }
    dend_59 { pt3dadd( 113.272, 49.8122, -4.37005, 1.11 ) }
    dend_59 { pt3dadd( 115.529, 50.0926, -5.06794, 0.44 ) }
    dend_59 { pt3dadd( 116.79, 50.2095, -5.38924, 0.44 ) }
    dend_59 { pt3dadd( 117.771, 50.2923, -5.58805, 0.37 ) }
    dend_59 { pt3dadd( 118.977, 50.4078, -5.82635, 0.37 ) }
    dend_59 { pt3dadd( 119.71, 50.4988, -5.95547, 0.29 ) }
    dend_59 { pt3dadd( 120.725, 50.7023, -6.12403, 0.22 ) }
    dend_59 { pt3dadd( 121.417, 50.9731, -6.29572, 0.59 ) }
    dend_59 { pt3dadd( 121.784, 51.2282, -6.47961, 0.59 ) }
    dend_59 { pt3dadd( 122.86, 52.0668, -7.24933, 0.29 ) }
    dend_59 { pt3dadd( 123.316, 52.4226, -7.60845, 0.37 ) }
    dend_59 { pt3dadd( 123.857, 52.8094, -8.02858, 0.52 ) }
    dend_59 { pt3dadd( 124.448, 53.1259, -8.45404, 0.74 ) }
    dend_59 { pt3dadd( 125.284, 53.4226, -9.12298, 0.96 ) }
    dend_59 { pt3dadd( 126.781, 53.7928, -10.5015, 0.29 ) }
    dend_59 { pt3dadd( 127.36, 53.9144, -11.1267, 0.52 ) }
    dend_59 { pt3dadd( 127.62, 53.9703, -11.4603, 0.81 ) }
    dend_59 { pt3dadd( 128.477, 54.2042, -12.7403, 1.11 ) }
    dend_59 { pt3dadd( 130.035, 54.7308, -15.3984, 0.81 ) }
    dend_59 { pt3dadd( 130.714, 55.038, -16.7004, 0.96 ) }
    dend_59 { pt3dadd( 131.432, 55.4767, -18.206, 0.66 ) }
    dend_59 { pt3dadd( 131.968, 55.859, -19.3418, 0.52 ) }
    dend_59 { pt3dadd( 132.507, 56.2882, -20.3664, 0.52 ) }
    dend_59 { pt3dadd( 132.739, 56.4945, -20.6994, 0.74 ) }
    dend_59 { pt3dadd( 133.34, 56.9304, -21.1129, 0.74 ) }
    dend_59 { pt3dadd( 133.737, 57.1472, -21.2703, 0.96 ) }
    dend_59 { pt3dadd( 134.355, 57.388, -21.4432, 0.96 ) }
    dend_59 { pt3dadd( 135.37, 57.7044, -21.7898, 0.74 ) }
    dend_59 { pt3dadd( 136.373, 58.0143, -22.2245, 0.44 ) }
    dend_59 { pt3dadd( 137.482, 58.416, -22.9144, 0.44 ) }
    dend_59 { pt3dadd( 137.905, 58.6059, -23.2597, 0.96 ) }
    dend_59 { pt3dadd( 138.672, 59.0379, -24.1102, 1.18 ) }
    dend_59 { pt3dadd( 139.742, 59.7799, -25.6264, 0.66 ) }
    dend_59 { pt3dadd( 140.13, 60.0979, -26.3101, 0.66 ) }
    dend_59 { pt3dadd( 140.829, 60.7358, -27.771, 0.59 ) }
    dend_59 { pt3dadd( 141.087, 60.9994, -28.324, 0.52 ) }
    dend_59 { pt3dadd( 141.811, 61.7512, -29.7505, 0.52 ) }
    dend_59 { pt3dadd( 142.014, 61.9892, -30.123, 0.96 ) }
    dend_59 { pt3dadd( 142.444, 62.5112, -30.8127, 0.96 ) }
    dend_59 { pt3dadd( 143.254, 63.5444, -31.9839, 0.59 ) }
    dend_59 { pt3dadd( 143.947, 64.5156, -32.8797, 0.59 ) }
    dend_59 { pt3dadd( 144.386, 65.1674, -33.4149, 0.88 ) }
    dend_59 { pt3dadd( 145.017, 66.1567, -34.0924, 0.74 ) }
    dend_59 { pt3dadd( 145.577, 66.9591, -34.5987, 0.74 ) }
    dend_59 { pt3dadd( 146.237, 67.7817, -35.041, 0.88 ) }
    dend_59 { pt3dadd( 146.657, 68.1794, -35.2437, 0.88 ) }
    dend_59 { pt3dadd( 147.457, 68.7067, -35.5976, 0.37 ) }
    dend_59 { pt3dadd( 148.304, 69.1331, -35.9627, 0.37 ) }
    dend_59 { pt3dadd( 149.642, 69.647, -36.519, 0.37 ) }
    dend_59 { pt3dadd( 150.583, 69.9546, -36.9432, 0.37 ) }
    dend_59 { pt3dadd( 151.683, 70.2757, -37.485, 0.37 ) }
    dend_59 { pt3dadd( 152.348, 70.4858, -37.8236, 0.59 ) }
    dend_59 { pt3dadd( 153.174, 70.7777, -38.2437, 0.74 ) }
    dend_59 { pt3dadd( 153.729, 71.004, -38.542, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 154.78, 71.5106, -39.1668, 0.44 ) }
    dend_59 { pt3dadd( 155.339, 71.7875, -39.4895, 0.37 ) }
    dend_59 { pt3dadd( 156.971, 72.5177, -40.2323, 0.37 ) }
    dend_59 { pt3dadd( 157.744, 72.8002, -40.5053, 0.74 ) }
    dend_59 { pt3dadd( 158.152, 72.9161, -40.6161, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 111.387, 77.2693, 10.1012, 0.29 ) }
    dend_57 { pt3dadd( 116.99, 85.4325, 11.3301, 0.29 ) }
    dend_57 { pt3dadd( 123.563, 92.9064, 10.802, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 111.387, 77.2693, 10.1012, 0.29 ) }
    dend_56 { pt3dadd( 116.306, 84.8756, 11.4057, 0.29 ) }
    dend_56 { pt3dadd( 121.135, 92.2993, 13.7925, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -24.6155, -148.858, 13.9843, 0.29 ) }
    dend_37 { pt3dadd( -21.7807, -159.453, 11.4262, 0.29 ) }
    dend_37 { pt3dadd( -20.3137, -170.554, 10.5086, 0.29 ) }
    dend_37 { pt3dadd( -19.4568, -181.471, 7.95953, 0.29 ) }
    dend_37 { pt3dadd( -19.925, -192.642, 6.91495, 0.29 ) }
    dend_37 { pt3dadd( -21.3963, -203.733, 5.91705, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -24.6155, -148.858, 13.9843, 0.29 ) }
    dend_36 { pt3dadd( -27.6807, -154.317, 11.4496, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.47816, -103.923, 8.28988, 0.37 ) }
    dend_24 { pt3dadd( -5.15175, -105.359, 6.6312, 0.37 ) }
    dend_24 { pt3dadd( -5.61644, -106.116, 5.75227, 0.37 ) }
    dend_24 { pt3dadd( -6.10389, -106.768, 4.95019, 0.44 ) }
    dend_24 { pt3dadd( -6.7209, -107.474, 4.05185, 0.74 ) }
    dend_24 { pt3dadd( -7.36393, -108.12, 3.21292, 0.59 ) }
    dend_24 { pt3dadd( -8.06382, -108.72, 2.40115, 0.59 ) }
    dend_24 { pt3dadd( -8.52908, -108.959, 2.00751, 0.74 ) }
    dend_24 { pt3dadd( -9.34084, -109.211, 1.43512, 0.88 ) }
    dend_24 { pt3dadd( -9.8752, -109.303, 1.12454, 1.18 ) }
    dend_24 { pt3dadd( -10.4316, -109.344, 0.847107, 0.59 ) }
    dend_24 { pt3dadd( -11.2889, -109.356, 0.448399, 0.44 ) }
    dend_24 { pt3dadd( -12.1374, -109.351, 0.049052, 0.52 ) }
    dend_24 { pt3dadd( -12.5253, -109.365, -0.146972, 0.74 ) }
    dend_24 { pt3dadd( -13.186, -109.48, -0.481649, 0.74 ) }
    dend_24 { pt3dadd( -13.6494, -109.659, -0.74755, 0.59 ) }
    dend_24 { pt3dadd( -14.1107, -109.96, -1.03788, 0.59 ) }
    dend_24 { pt3dadd( -14.7004, -110.527, -1.43208, 0.59 ) }
    dend_24 { pt3dadd( -15.3176, -111.313, -1.84311, 0.44 ) }
    dend_24 { pt3dadd( -16.0173, -112.362, -2.28639, 0.37 ) }
    dend_24 { pt3dadd( -16.4195, -113.069, -2.52503, 1.03 ) }
    dend_24 { pt3dadd( -16.6838, -113.605, -2.68144, 1.03 ) }
    dend_24 { pt3dadd( -16.8918, -114.098, -2.8038, 0.96 ) }
    dend_24 { pt3dadd( -17.2394, -115.124, -2.99859, 0.66 ) }
    dend_24 { pt3dadd( -17.4967, -116.05, -3.14303, 0.66 ) }
    dend_24 { pt3dadd( -17.7323, -117.108, -3.30355, 0.88 ) }
    dend_24 { pt3dadd( -17.8489, -117.759, -3.39517, 1.03 ) }
    dend_24 { pt3dadd( -17.9691, -118.684, -3.52623, 0.88 ) }
    dend_24 { pt3dadd( -18.0728, -119.875, -3.70382, 0.52 ) }
    dend_24 { pt3dadd( -18.1192, -120.806, -3.85339, 0.52 ) }
    dend_24 { pt3dadd( -18.1373, -121.513, -3.98159, 0.96 ) }
    dend_24 { pt3dadd( -18.1495, -121.974, -4.0758, 0.96 ) }
    dend_24 { pt3dadd( -18.2153, -123.107, -4.35092, 0.59 ) }
    dend_24 { pt3dadd( -18.3154, -124.005, -4.60807, 0.66 ) }
    dend_24 { pt3dadd( -18.4434, -124.675, -4.83749, 0.81 ) }
    dend_24 { pt3dadd( -18.6461, -125.488, -5.16011, 0.81 ) }
    dend_24 { pt3dadd( -18.7877, -125.94, -5.36639, 0.81 ) }
    dend_24 { pt3dadd( -19.0455, -126.763, -5.81668, 0.44 ) }
    dend_24 { pt3dadd( -19.1696, -127.193, -6.08252, 0.81 ) }
    dend_24 { pt3dadd( -19.3019, -127.814, -6.49277, 0.81 ) }
    dend_24 { pt3dadd( -19.4054, -128.703, -7.07704, 0.52 ) }
    dend_24 { pt3dadd( -19.3998, -129.427, -7.53, 0.52 ) }
    dend_24 { pt3dadd( -19.2446, -130.754, -8.30646, 0.74 ) }
    dend_24 { pt3dadd( -19.1221, -131.404, -8.6582, 1.11 ) }
    dend_24 { pt3dadd( -19.0104, -132.004, -8.95618, 1.11 ) }
    dend_24 { pt3dadd( -18.8962, -132.768, -9.29531, 0.96 ) }
    dend_24 { pt3dadd( -18.8317, -133.624, -9.64289, 0.59 ) }
    dend_24 { pt3dadd( -18.8579, -134.678, -10.0467, 0.44 ) }
    dend_24 { pt3dadd( -19.0683, -135.841, -10.4834, 0.44 ) }
    dend_24 { pt3dadd( -19.3308, -136.711, -10.8278, 0.44 ) }
    dend_24 { pt3dadd( -19.6448, -137.523, -11.1454, 0.74 ) }
    dend_24 { pt3dadd( -19.8881, -138.119, -11.3693, 0.74 ) }
    dend_24 { pt3dadd( -20.1303, -138.696, -11.5674, 0.74 ) }
    dend_24 { pt3dadd( -20.5636, -139.727, -11.8847, 0.66 ) }
    dend_24 { pt3dadd( -20.8798, -140.497, -12.0955, 0.44 ) }
    dend_24 { pt3dadd( -21.2817, -141.493, -12.355, 0.44 ) }
    dend_24 { pt3dadd( -21.9242, -142.879, -12.7034, 0.44 ) }
    dend_24 { pt3dadd( -22.2984, -143.519, -12.8611, 0.88 ) }
    dend_24 { pt3dadd( -22.7456, -144.114, -13.0052, 1.18 ) }
    dend_24 { pt3dadd( -23.1024, -144.496, -13.0888, 1.18 ) }
    dend_24 { pt3dadd( -23.5564, -144.908, -13.176, 1.03 ) }
    dend_24 { pt3dadd( -24.8541, -145.909, -13.4095, 0.66 ) }
    dend_24 { pt3dadd( -26.0551, -146.704, -13.6062, 0.66 ) }
    dend_24 { pt3dadd( -27.0763, -147.355, -13.7693, 1.25 ) }
    dend_24 { pt3dadd( -27.6193, -147.704, -13.8537, 1.55 ) }
    dend_24 { pt3dadd( -28.2753, -148.137, -13.9559, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.47816, -103.923, 8.28988, 0.74 ) }
    dend_19 { pt3dadd( -4.78517, -104.719, 7.61964, 0.74 ) }
    dend_19 { pt3dadd( -5.14624, -105.631, 6.83499, 0.74 ) }
    dend_19 { pt3dadd( -5.33988, -106.178, 6.43794, 0.74 ) }
    dend_19 { pt3dadd( -5.52585, -106.793, 6.05391, 0.81 ) }
    dend_19 { pt3dadd( -5.87112, -108.206, 5.32894, 0.52 ) }
    dend_19 { pt3dadd( -6.07735, -109.334, 4.8573, 0.74 ) }
    dend_19 { pt3dadd( -6.14498, -109.936, 4.67136, 0.74 ) }
    dend_19 { pt3dadd( -6.03832, -111.281, 4.58324, 0.74 ) }
    dend_19 { pt3dadd( -5.82235, -111.952, 4.68729, 0.81 ) }
    dend_19 { pt3dadd( -5.38768, -112.771, 4.97211, 0.66 ) }
    dend_19 { pt3dadd( -5.11625, -113.176, 5.16791, 1.11 ) }
    dend_19 { pt3dadd( -4.8273, -113.572, 5.35438, 1.11 ) }
    dend_19 { pt3dadd( -4.44826, -114.075, 5.53645, 0.81 ) }
    dend_19 { pt3dadd( -3.9527, -114.755, 5.66028, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( -3.50222, -115.418, 5.72735, 0.96 ) }
    dend_19 { pt3dadd( -3.10265, -116.035, 5.76598, 0.88 ) }
    dend_19 { pt3dadd( -2.62957, -116.793, 5.81625, 0.96 ) }
    dend_19 { pt3dadd( -2.30179, -117.357, 5.83778, 1.11 ) }
    dend_19 { pt3dadd( -1.93829, -118.059, 5.8226, 1.11 ) }
    dend_19 { pt3dadd( -1.64274, -118.717, 5.76929, 0.74 ) }
    dend_19 { pt3dadd( -1.26696, -119.74, 5.64052, 0.66 ) }
    dend_19 { pt3dadd( -1.10521, -120.275, 5.55949, 0.66 ) }
    dend_19 { pt3dadd( -0.825886, -121.511, 5.36507, 0.66 ) }
    dend_19 { pt3dadd( -0.65275, -122.806, 5.15028, 0.59 ) }
    dend_19 { pt3dadd( -0.620465, -123.556, 5.00996, 0.96 ) }
    dend_19 { pt3dadd( -0.655102, -124.487, 4.81574, 1.18 ) }
    dend_19 { pt3dadd( -0.735257, -125.18, 4.66914, 1.03 ) }
    dend_19 { pt3dadd( -0.863997, -125.994, 4.5058, 0.88 ) }
    dend_19 { pt3dadd( -1.03709, -127.051, 4.33439, 0.74 ) }
    dend_19 { pt3dadd( -1.16432, -127.97, 4.27695, 0.59 ) }
    dend_19 { pt3dadd( -1.2608, -128.749, 4.28753, 0.59 ) }
    dend_19 { pt3dadd( -1.35114, -129.396, 4.35068, 1.4 ) }
    dend_19 { pt3dadd( -1.44217, -129.873, 4.43393, 1.4 ) }
    dend_19 { pt3dadd( -1.70272, -131.092, 4.75453, 0.88 ) }
    dend_19 { pt3dadd( -2.01786, -132.525, 5.31152, 0.66 ) }
    dend_19 { pt3dadd( -2.16071, -133.126, 5.5917, 0.88 ) }
    dend_19 { pt3dadd( -2.3541, -133.889, 5.97259, 0.88 ) }
    dend_19 { pt3dadd( -2.67809, -135.077, 6.56768, 0.59 ) }
    dend_19 { pt3dadd( -2.91357, -135.834, 6.92957, 0.81 ) }
    dend_19 { pt3dadd( -3.35198, -137.086, 7.47151, 0.81 ) }
    dend_19 { pt3dadd( -3.57841, -137.731, 7.6826, 1.11 ) }
    dend_19 { pt3dadd( -3.7507, -138.261, 7.82296, 1.11 ) }
    dend_19 { pt3dadd( -3.96073, -139.023, 7.95517, 0.52 ) }
    dend_19 { pt3dadd( -4.11744, -139.745, 8.03509, 0.74 ) }
    dend_19 { pt3dadd( -4.23881, -140.388, 8.07121, 1.03 ) }
    dend_19 { pt3dadd( -4.29971, -140.927, 8.07186, 1.25 ) }
    dend_19 { pt3dadd( -4.3152, -141.459, 8.11454, 1.33 ) }
    dend_19 { pt3dadd( -4.28149, -142.333, 8.31667, 1.03 ) }
    dend_19 { pt3dadd( -4.16262, -143.153, 8.62144, 0.74 ) }
    dend_19 { pt3dadd( -3.98968, -143.818, 8.94414, 0.44 ) }
    dend_19 { pt3dadd( -3.76199, -144.422, 9.29691, 0.29 ) }
    dend_19 { pt3dadd( -3.32847, -145.254, 9.87849, 0.29 ) }
    dend_19 { pt3dadd( -2.69905, -146.169, 10.6425, 0.29 ) }
    dend_19 { pt3dadd( -2.31237, -146.58, 11.0601, 0.29 ) }
    dend_19 { pt3dadd( -1.9272, -146.869, 11.4048, 0.88 ) }
    dend_19 { pt3dadd( -1.59769, -147.075, 11.6724, 0.88 ) }
    dend_19 { pt3dadd( -1.04226, -147.391, 12.089, 0.52 ) }
    dend_19 { pt3dadd( -0.777626, -147.533, 12.2448, 0.52 ) }
    dend_19 { pt3dadd( -0.295415, -147.816, 12.5142, 0.52 ) }
    dend_19 { pt3dadd( 0.0618114, -148.125, 12.7642, 0.52 ) }
    dend_19 { pt3dadd( 0.524743, -148.699, 13.0839, 0.52 ) }
    dend_19 { pt3dadd( 0.74522, -149.065, 13.2187, 0.88 ) }
    dend_19 { pt3dadd( 0.986841, -149.518, 13.3272, 0.88 ) }
    dend_19 { pt3dadd( 1.29942, -150.072, 13.3998, 1.11 ) }
    dend_19 { pt3dadd( 1.63591, -150.589, 13.4528, 0.66 ) }
    dend_19 { pt3dadd( 2.31097, -151.413, 13.5154, 0.66 ) }
    dend_19 { pt3dadd( 2.64325, -151.708, 13.549, 0.66 ) }
    dend_19 { pt3dadd( 3.22975, -152.13, 13.6377, 0.66 ) }
    dend_19 { pt3dadd( 3.70308, -152.43, 13.7309, 0.52 ) }
    dend_19 { pt3dadd( 4.51152, -152.939, 13.8786, 0.66 ) }
    dend_19 { pt3dadd( 4.76509, -153.106, 13.952, 0.66 ) }
    dend_19 { pt3dadd( 5.29555, -153.481, 14.2139, 0.44 ) }
    dend_19 { pt3dadd( 5.71616, -153.808, 14.5084, 0.44 ) }
    dend_19 { pt3dadd( 6.27349, -154.303, 15.0214, 0.52 ) }
    dend_19 { pt3dadd( 6.90376, -154.939, 15.7593, 0.66 ) }
    dend_19 { pt3dadd( 7.42669, -155.521, 16.4531, 0.44 ) }
    dend_19 { pt3dadd( 7.97511, -156.156, 17.2439, 0.81 ) }
    dend_19 { pt3dadd( 8.49146, -156.747, 17.9625, 0.52 ) }
    dend_19 { pt3dadd( 8.84009, -157.134, 18.4057, 0.74 ) }
    dend_19 { pt3dadd( 9.27927, -157.607, 18.8899, 0.29 ) }
    dend_19 { pt3dadd( 9.52788, -157.865, 19.0919, 0.52 ) }
    dend_19 { pt3dadd( 9.93506, -158.27, 19.2562, 0.59 ) }
    dend_19 { pt3dadd( 10.7349, -159.08, 19.4808, 0.37 ) }
    dend_19 { pt3dadd( 11.3287, -159.672, 19.5806, 0.66 ) }
    dend_19 { pt3dadd( 11.6716, -160.007, 19.6187, 1.03 ) }
    dend_19 { pt3dadd( 12.2267, -160.539, 19.6577, 1.03 ) }
    dend_19 { pt3dadd( 12.8323, -161.128, 19.7307, 0.74 ) }
    dend_19 { pt3dadd( 13.7859, -162.073, 19.9476, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.487, -145.761, -29.8976, 0.44 ) }
    dend_13 { pt3dadd( 16.2588, -147.092, -30.0891, 0.44 ) }
    dend_13 { pt3dadd( 16.0919, -148.021, -30.2282, 0.81 ) }
    dend_13 { pt3dadd( 15.9552, -148.732, -30.3431, 1.18 ) }
    dend_13 { pt3dadd( 15.7678, -149.681, -30.5065, 0.74 ) }
    dend_13 { pt3dadd( 15.5745, -150.667, -30.6823, 0.44 ) }
    dend_13 { pt3dadd( 15.4052, -151.533, -30.8415, 0.96 ) }
    dend_13 { pt3dadd( 15.2304, -152.43, -31.0134, 0.96 ) }
    dend_13 { pt3dadd( 15.0639, -153.28, -31.1852, 1.18 ) }
    dend_13 { pt3dadd( 14.7791, -154.54, -31.4766, 0.74 ) }
    dend_13 { pt3dadd( 14.4825, -155.663, -31.818, 0.66 ) }
    dend_13 { pt3dadd( 14.2063, -156.562, -32.1665, 0.66 ) }
    dend_13 { pt3dadd( 13.8475, -157.669, -32.6937, 0.66 ) }
    dend_13 { pt3dadd( 13.6701, -158.208, -32.993, 1.03 ) }
    dend_13 { pt3dadd( 13.4267, -158.947, -33.4556, 0.81 ) }
    dend_13 { pt3dadd( 13.1213, -160.114, -34.2683, 0.52 ) }
    dend_13 { pt3dadd( 12.9977, -160.827, -34.7255, 0.44 ) }
    dend_13 { pt3dadd( 12.9188, -161.749, -35.1986, 0.37 ) }
    dend_13 { pt3dadd( 12.9057, -162.291, -35.398, 0.66 ) }
    dend_13 { pt3dadd( 12.8866, -162.9, -35.5534, 0.66 ) }
    dend_13 { pt3dadd( 12.8568, -164.513, -35.8665, 0.44 ) }
    dend_13 { pt3dadd( 12.7792, -166.141, -36.1184, 0.44 ) }
    dend_13 { pt3dadd( 12.6498, -167.436, -36.3232, 0.66 ) }
    dend_13 { pt3dadd( 12.4574, -168.567, -36.5306, 0.81 ) }
    dend_13 { pt3dadd( 12.1685, -169.775, -36.8356, 0.96 ) }
    dend_13 { pt3dadd( 11.7317, -171.017, -37.272, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 11.2926, -171.957, -37.6994, 0.81 ) }
    dend_13 { pt3dadd( 10.8921, -172.768, -38.1601, 0.88 ) }
    dend_13 { pt3dadd( 10.6013, -173.395, -38.5496, 0.66 ) }
    dend_13 { pt3dadd( 10.2141, -174.276, -39.1249, 0.29 ) }
    dend_13 { pt3dadd( 9.74142, -175.404, -39.8654, 0.29 ) }
    dend_13 { pt3dadd( 9.45779, -176.059, -40.2841, 0.52 ) }
    dend_13 { pt3dadd( 9.02159, -177.074, -40.9458, 0.52 ) }
    dend_13 { pt3dadd( 8.65499, -177.906, -41.4914, 0.37 ) }
    dend_13 { pt3dadd( 8.30043, -178.652, -41.9916, 0.29 ) }
    dend_13 { pt3dadd( 7.93492, -179.296, -42.4424, 0.29 ) }
    dend_13 { pt3dadd( 7.77531, -179.522, -42.6322, 0.88 ) }
    dend_13 { pt3dadd( 7.40368, -179.879, -43.0521, 1.11 ) }
    dend_13 { pt3dadd( 6.9368, -180.159, -43.5414, 0.44 ) }
    dend_13 { pt3dadd( 6.33937, -180.401, -44.1391, 0.37 ) }
    dend_13 { pt3dadd( 5.76753, -180.572, -44.7161, 0.59 ) }
    dend_13 { pt3dadd( 5.26235, -180.685, -45.2377, 0.74 ) }
    dend_13 { pt3dadd( 4.60338, -180.81, -45.9311, 0.44 ) }
    dend_13 { pt3dadd( 4.02868, -180.921, -46.5305, 0.37 ) }
    dend_13 { pt3dadd( 3.64315, -181.014, -46.9254, 0.88 ) }
    dend_13 { pt3dadd( 3.1897, -181.168, -47.3716, 1.11 ) }
    dend_13 { pt3dadd( 2.85254, -181.317, -47.6808, 1.11 ) }
    dend_13 { pt3dadd( 2.49325, -181.483, -47.979, 1.11 ) }
    dend_13 { pt3dadd( 1.58457, -181.923, -48.6914, 0.29 ) }
    dend_13 { pt3dadd( 0.983395, -182.229, -49.1604, 0.59 ) }
    dend_13 { pt3dadd( 0.582424, -182.441, -49.4694, 0.59 ) }
    dend_13 { pt3dadd( -0.412289, -183.019, -50.2201, 0.29 ) }
    dend_13 { pt3dadd( -1.02796, -183.424, -50.6707, 0.29 ) }
    dend_13 { pt3dadd( -1.5149, -183.791, -51.0229, 0.52 ) }
    dend_13 { pt3dadd( -2.0864, -184.274, -51.4382, 0.52 ) }
    dend_13 { pt3dadd( -2.38954, -184.546, -51.6583, 0.81 ) }
    dend_13 { pt3dadd( -2.90514, -185.093, -52.042, 0.81 ) }
    dend_13 { pt3dadd( -3.42104, -185.811, -52.4441, 0.29 ) }
    dend_13 { pt3dadd( -4.02366, -186.797, -52.9196, 0.29 ) }
    dend_13 { pt3dadd( -4.3609, -187.378, -53.1768, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.487, -145.761, -29.8976, 0.22 ) }
    dend_12 { pt3dadd( 17.4167, -146.371, -29.5783, 0.22 ) }
    dend_12 { pt3dadd( 18.397, -147.014, -29.2416, 0.22 ) }
    dend_12 { pt3dadd( 19.5805, -147.79, -28.8351, 0.22 ) }
    dend_12 { pt3dadd( 20.3952, -148.325, -28.5554, 0.22 ) }
    dend_12 { pt3dadd( 21.2596, -148.892, -28.2585, 0.22 ) }
    dend_12 { pt3dadd( 22.1489, -149.475, -27.953, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 113.324, -16.9439, -65.7596, 0.74 ) }
    dend_10 { pt3dadd( 117.071, -18.7317, -66.6063, 0.74 ) }
    dend_10 { pt3dadd( 118.1, -19.28, -66.6633, 0.44 ) }
    dend_10 { pt3dadd( 118.85, -19.6531, -66.6431, 0.74 ) }
    dend_10 { pt3dadd( 120.02, -20.1529, -66.5611, 0.52 ) }
    dend_10 { pt3dadd( 121.58, -20.6902, -66.3985, 0.52 ) }
    dend_10 { pt3dadd( 123.245, -21.1524, -66.2512, 0.52 ) }
    dend_10 { pt3dadd( 124.467, -21.3809, -65.9964, 0.52 ) }
    dend_10 { pt3dadd( 125.722, -21.5271, -65.7756, 0.52 ) }
    dend_10 { pt3dadd( 127.291, -21.564, -65.6525, 0.52 ) }
    dend_10 { pt3dadd( 128.575, -21.4447, -65.6795, 0.74 ) }
    dend_10 { pt3dadd( 129.889, -21.1851, -65.835, 1.03 ) }
    dend_10 { pt3dadd( 130.369, -21.0603, -65.9277, 1.4 ) }
    dend_10 { pt3dadd( 130.844, -20.9286, -66.043, 1.4 ) }
    dend_10 { pt3dadd( 132.756, -20.4381, -66.5728, 0.44 ) }
    dend_10 { pt3dadd( 133.487, -20.2508, -66.7055, 0.74 ) }
    dend_10 { pt3dadd( 134.575, -19.97, -66.742, 0.74 ) }
    dend_10 { pt3dadd( 135.318, -19.7606, -66.6404, 0.96 ) }
    dend_10 { pt3dadd( 136.017, -19.5521, -66.4176, 0.96 ) }
    dend_10 { pt3dadd( 136.936, -19.2988, -65.9792, 0.96 ) }
    dend_10 { pt3dadd( 139.125, -18.8057, -64.542, 0.66 ) }
    dend_10 { pt3dadd( 140.035, -18.6658, -63.8265, 0.81 ) }
    dend_10 { pt3dadd( 140.575, -18.6216, -63.3242, 0.81 ) }
    dend_10 { pt3dadd( 141.891, -18.5784, -62.0046, 0.52 ) }
    dend_10 { pt3dadd( 142.879, -18.5818, -61.0029, 0.52 ) }
    dend_10 { pt3dadd( 143.977, -18.6291, -59.9566, 0.52 ) }
    dend_10 { pt3dadd( 145.067, -18.7123, -59.0927, 0.52 ) }
    dend_10 { pt3dadd( 146.477, -18.8147, -58.107, 0.44 ) }
    dend_10 { pt3dadd( 147.256, -18.8602, -57.6878, 0.96 ) }
    dend_10 { pt3dadd( 148.112, -18.913, -57.4671, 1.11 ) }
    dend_10 { pt3dadd( 149.35, -19.0071, -57.4456, 0.44 ) }
    dend_10 { pt3dadd( 150.475, -19.1842, -57.6792, 0.37 ) }
    dend_10 { pt3dadd( 151.302, -19.4174, -58.0022, 0.37 ) }
    dend_10 { pt3dadd( 152.654, -19.946, -58.7405, 0.66 ) }
    dend_10 { pt3dadd( 154.17, -20.6543, -59.7391, 0.74 ) }
    dend_10 { pt3dadd( 154.817, -20.9791, -60.2213, 0.81 ) }
    dend_10 { pt3dadd( 155.755, -21.4631, -61.0096, 0.81 ) }
    dend_10 { pt3dadd( 156.961, -22.0639, -62.0975, 0.66 ) }
    dend_10 { pt3dadd( 158.058, -22.5395, -63.0656, 0.66 ) }
    dend_10 { pt3dadd( 159.093, -22.9254, -63.9132, 0.29 ) }
    dend_10 { pt3dadd( 159.811, -23.1648, -64.4508, 0.59 ) }
    dend_10 { pt3dadd( 160.578, -23.3884, -64.9881, 0.74 ) }
    dend_10 { pt3dadd( 161.302, -23.5802, -65.4946, 0.44 ) }
    dend_10 { pt3dadd( 162.251, -23.8018, -66.1298, 0.37 ) }
    dend_10 { pt3dadd( 163.23, -24.0419, -66.7556, 0.37 ) }
    dend_10 { pt3dadd( 164.192, -24.2968, -67.3233, 0.59 ) }
    dend_10 { pt3dadd( 164.957, -24.5257, -67.7463, 0.59 ) }
    dend_10 { pt3dadd( 166.947, -25.3005, -68.9912, 0.29 ) }
    dend_10 { pt3dadd( 168.241, -25.9433, -69.8805, 0.29 ) }
    dend_10 { pt3dadd( 168.91, -26.3481, -70.3864, 0.29 ) }
    dend_10 { pt3dadd( 169.494, -26.7319, -70.8274, 0.74 ) }
    dend_10 { pt3dadd( 170.077, -27.1456, -71.2751, 0.74 ) }
    dend_10 { pt3dadd( 172.426, -29.085, -73.0601, 0.37 ) }
    dend_10 { pt3dadd( 173.136, -29.796, -73.5858, 0.52 ) }
    dend_10 { pt3dadd( 173.689, -30.4579, -74.0459, 0.81 ) }
    dend_10 { pt3dadd( 174.278, -31.2182, -74.6046, 0.37 ) }
    dend_10 { pt3dadd( 174.803, -31.9042, -75.1728, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 113.324, -16.9439, -65.7596, 0.88 ) }
    dend_3 { pt3dadd( 113.923, -16.8431, -66.7707, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 114.188, -16.885, -67.2015, 1.25 ) }
    dend_3 { pt3dadd( 114.442, -16.982, -67.6336, 1.25 ) }
    dend_3 { pt3dadd( 114.775, -17.1347, -68.25, 0.59 ) }
    dend_3 { pt3dadd( 115.668, -17.543, -69.8985, 0.59 ) }
    dend_3 { pt3dadd( 116.564, -17.9531, -71.5543, 0.96 ) }
    dend_3 { pt3dadd( 117.045, -18.2355, -72.4345, 1.11 ) }
    dend_3 { pt3dadd( 117.891, -18.8373, -74.0384, 1.25 ) }
    dend_3 { pt3dadd( 118.406, -19.2748, -75.0538, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -93.3788, 137.844, -36.2707, 0.22 ) }
    dend_84 { pt3dadd( -93.2439, 136.711, -35.5832, 0.22 ) }
    dend_84 { pt3dadd( -93.1599, 136.006, -35.1548, 0.22 ) }
    dend_84 { pt3dadd( -92.9717, 134.426, -34.1958, 0.22 ) }
    dend_84 { pt3dadd( -92.8569, 133.462, -33.6106, 0.22 ) }
    dend_84 { pt3dadd( -92.7583, 132.634, -33.1077, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -93.3788, 137.844, -36.2707, 0.22 ) }
    dend_83 { pt3dadd( -94.3645, 138.538, -35.8587, 0.22 ) }
    dend_83 { pt3dadd( -95.2312, 139.179, -35.5041, 0.22 ) }
    dend_83 { pt3dadd( -96.0557, 139.789, -35.1668, 0.22 ) }
    dend_83 { pt3dadd( -96.8445, 140.372, -34.844, 0.22 ) }
    dend_83 { pt3dadd( -98.0318, 141.25, -34.3582, 0.22 ) }
    dend_83 { pt3dadd( -98.6376, 141.697, -34.1104, 0.37 ) }
    dend_83 { pt3dadd( -99.2322, 142.202, -33.839, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 169.499, 47.4115, 91.9245, 0.29 ) }
    dend_77 { pt3dadd( 171.708, 47.5695, 96.0651, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 169.499, 47.4115, 91.9245, 0.29 ) }
    dend_76 { pt3dadd( 172.746, 49.7326, 100.459, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 189.892, 33.1547, 70.6934, 0.29 ) }
    dend_74 { pt3dadd( 190.35, 41.7445, 60.7693, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 189.892, 33.1547, 70.6934, 0.29 ) }
    dend_73 { pt3dadd( 181.837, 27.0109, 72.3886, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 158.152, 72.9161, -40.6161, 0.37 ) }
    dend_61 { pt3dadd( 157.609, 72.9547, -41.2738, 0.37 ) }
    dend_61 { pt3dadd( 156.973, 72.8623, -42.39, 0.66 ) }
    dend_61 { pt3dadd( 156.676, 72.6737, -43.2887, 0.29 ) }
    dend_61 { pt3dadd( 156.462, 72.4765, -44.1151, 0.29 ) }
    dend_61 { pt3dadd( 156.214, 72.2373, -45.1578, 0.29 ) }
    dend_61 { pt3dadd( 155.685, 71.7645, -47.4308, 0.29 ) }
    dend_61 { pt3dadd( 155.455, 71.5084, -48.4848, 0.81 ) }
    dend_61 { pt3dadd( 154.837, 70.6474, -51.6587, 0.44 ) }
    dend_61 { pt3dadd( 154.658, 70.3241, -52.7756, 0.96 ) }
    dend_61 { pt3dadd( 154.544, 70.0598, -53.742, 1.18 ) }
    dend_61 { pt3dadd( 154.448, 69.7389, -55.0163, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 158.152, 72.9161, -40.6161, 0.37 ) }
    dend_60 { pt3dadd( 159.355, 73.1775, -40.5057, 0.37 ) }
    dend_60 { pt3dadd( 160.75, 73.6816, -40.4372, 0.29 ) }
    dend_60 { pt3dadd( 161.262, 73.9103, -40.4222, 0.66 ) }
    dend_60 { pt3dadd( 161.76, 74.1702, -40.4053, 0.66 ) }
    dend_60 { pt3dadd( 162.378, 74.5557, -40.4109, 0.37 ) }
    dend_60 { pt3dadd( 163.239, 75.1223, -40.4427, 0.37 ) }
    dend_60 { pt3dadd( 164.166, 75.8261, -40.5156, 0.81 ) }
    dend_60 { pt3dadd( 164.542, 76.1533, -40.5285, 1.11 ) }
    dend_60 { pt3dadd( 165.059, 76.6379, -40.522, 1.33 ) }
    dend_60 { pt3dadd( 166.082, 77.7109, -40.4635, 0.44 ) }
    dend_60 { pt3dadd( 166.663, 78.414, -40.377, 0.52 ) }
    dend_60 { pt3dadd( 167.389, 79.44, -40.2007, 1.03 ) }
    dend_60 { pt3dadd( 168.132, 80.6713, -39.959, 0.52 ) }
    dend_60 { pt3dadd( 168.466, 81.3021, -39.8111, 0.66 ) }
    dend_60 { pt3dadd( 168.784, 82.0126, -39.6213, 0.66 ) }
    dend_60 { pt3dadd( 169.191, 83.1861, -39.274, 0.44 ) }
    dend_60 { pt3dadd( 169.349, 83.837, -39.128, 0.29 ) }
    dend_60 { pt3dadd( 169.518, 84.6417, -39.0127, 0.44 ) }
    dend_60 { pt3dadd( 169.766, 85.5519, -38.9678, 0.66 ) }
    dend_60 { pt3dadd( 170.036, 86.3037, -38.9651, 0.37 ) }
    dend_60 { pt3dadd( 170.391, 87.1622, -39.0091, 0.37 ) }
    dend_60 { pt3dadd( 170.978, 88.5474, -39.1549, 0.29 ) }
    dend_60 { pt3dadd( 171.341, 89.4408, -39.2553, 0.29 ) }
    dend_60 { pt3dadd( 171.854, 90.9469, -39.448, 0.29 ) }
    dend_60 { pt3dadd( 172.121, 91.9885, -39.5555, 0.29 ) }
    dend_60 { pt3dadd( 172.247, 92.8091, -39.6069, 1.55 ) }
    dend_60 { pt3dadd( 172.273, 93.4968, -39.6185, 1.18 ) }
    dend_60 { pt3dadd( 172.163, 94.2479, -39.5523, 0.96 ) }
    dend_60 { pt3dadd( 171.731, 95.48, -39.3639, 0.52 ) }
    dend_60 { pt3dadd( 170.93, 96.9155, -39.0672, 0.29 ) }
    dend_60 { pt3dadd( 170.283, 97.7994, -38.864, 0.29 ) }
    dend_60 { pt3dadd( 169.939, 98.2129, -38.7687, 0.29 ) }
    dend_60 { pt3dadd( 168.987, 99.3292, -38.5472, 0.22 ) }
    dend_60 { pt3dadd( 168.7, 99.6702, -38.5009, 0.66 ) }
    dend_60 { pt3dadd( 168.357, 100.099, -38.469, 0.66 ) }
    dend_60 { pt3dadd( 167.802, 100.893, -38.496, 0.37 ) }
    dend_60 { pt3dadd( 167.412, 101.69, -38.5593, 0.29 ) }
    dend_60 { pt3dadd( 167.169, 102.482, -38.682, 0.22 ) }
    dend_60 { pt3dadd( 167.036, 103.201, -38.7802, 0.22 ) }
    dend_60 { pt3dadd( 166.916, 104.329, -38.853, 0.22 ) }
    dend_60 { pt3dadd( 166.908, 104.846, -38.8574, 0.29 ) }
    dend_60 { pt3dadd( 166.955, 105.631, -38.8177, 0.29 ) }
    dend_60 { pt3dadd( 167.08, 106.816, -38.7114, 0.29 ) }
    dend_60 { pt3dadd( 167.329, 108.355, -38.5577, 0.29 ) }
    dend_60 { pt3dadd( 167.51, 109.315, -38.4436, 0.29 ) }
    dend_60 { pt3dadd( 167.696, 110.091, -38.3377, 0.29 ) }
    dend_60 { pt3dadd( 167.958, 111.11, -38.1774, 0.29 ) }
    dend_60 { pt3dadd( 168.409, 112.655, -37.8996, 0.29 ) }
    dend_60 { pt3dadd( 168.823, 113.845, -37.6798, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -21.3963, -203.733, 5.91705, 0.29 ) }
    dend_39 { pt3dadd( -21.529, -214.479, 3.83029, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -21.3963, -203.733, 5.91705, 0.29 ) }
    dend_38 { pt3dadd( -15.4355, -201.629, 10.6259, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -28.2753, -148.137, -13.9559, 0.37 ) }
    dend_26 { pt3dadd( -28.6007, -149.267, -14.4223, 0.37 ) }
    dend_26 { pt3dadd( -28.7562, -149.806, -14.6452, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -28.2753, -148.137, -13.9559, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -30.7766, -147.781, -16.1716, 0.29 ) }
    dend_25 { pt3dadd( -31.5183, -147.677, -16.7969, 0.22 ) }
    dend_25 { pt3dadd( -32.5229, -147.618, -17.5827, 0.22 ) }
    dend_25 { pt3dadd( -33.1309, -147.637, -18.0172, 1.47 ) }
    dend_25 { pt3dadd( -33.5816, -147.651, -18.3393, 1.69 ) }
    dend_25 { pt3dadd( -34.0123, -147.664, -18.6471, 1.69 ) }
    dend_25 { pt3dadd( -35.2888, -147.686, -19.2121, 0.96 ) }
    dend_25 { pt3dadd( -36.1852, -147.791, -19.6907, 0.29 ) }
    dend_25 { pt3dadd( -36.9343, -148.005, -20.1628, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 13.7859, -162.073, 19.9476, 0.29 ) }
    dend_21 { pt3dadd( 13.9435, -163.093, 18.3977, 0.29 ) }
    dend_21 { pt3dadd( 14.0809, -163.983, 17.046, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.7859, -162.073, 19.9476, 0.29 ) }
    dend_20 { pt3dadd( 14.0214, -160.076, 18.6727, 0.29 ) }
    dend_20 { pt3dadd( 14.1984, -158.884, 17.2509, 0.29 ) }
    dend_20 { pt3dadd( 14.2898, -158.409, 16.0335, 0.29 ) }
    dend_20 { pt3dadd( 14.3784, -157.948, 14.8522, 0.52 ) }
    dend_20 { pt3dadd( 14.6291, -156.645, 11.5112, 0.44 ) }
    dend_20 { pt3dadd( 14.7132, -156.208, 10.3901, 0.29 ) }
    dend_20 { pt3dadd( 14.7496, -156.512, 8.55739, 0.29 ) }
    dend_20 { pt3dadd( 14.7488, -156.754, 7.90356, 0.29 ) }
    dend_20 { pt3dadd( 14.5941, -151.966, -2.08476, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.3609, -187.378, -53.1768, 0.22 ) }
    dend_15 { pt3dadd( -4.44971, -188.114, -53.1906, 0.22 ) }
    dend_15 { pt3dadd( -4.54881, -188.967, -53.1565, 0.22 ) }
    dend_15 { pt3dadd( -4.65076, -190.077, -53.0993, 0.22 ) }
    dend_15 { pt3dadd( -4.72293, -190.99, -53.049, 0.22 ) }
    dend_15 { pt3dadd( -4.79268, -192.165, -52.9872, 0.22 ) }
    dend_15 { pt3dadd( -4.84801, -193.097, -52.9382, 0.22 ) }
    dend_15 { pt3dadd( -4.90504, -194.184, -52.8911, 0.22 ) }
    dend_15 { pt3dadd( -4.91594, -194.873, -52.8585, 0.37 ) }
    dend_15 { pt3dadd( -4.90775, -195.112, -52.8396, 0.37 ) }
    dend_15 { pt3dadd( -4.86707, -195.783, -52.7648, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.3609, -187.378, -53.1768, 1.55 ) }
    dend_14 { pt3dadd( -4.82168, -187.609, -53.7549, 1.55 ) }
    dend_14 { pt3dadd( -5.08661, -187.793, -54.1108, 1.55 ) }
    dend_14 { pt3dadd( -5.6141, -188.179, -54.8185, 0.29 ) }
    dend_14 { pt3dadd( -6.40514, -188.745, -55.8326, 0.44 ) }
    dend_14 { pt3dadd( -6.58894, -188.864, -56.101, 0.44 ) }
    dend_14 { pt3dadd( -7.3059, -189.236, -57.2549, 0.29 ) }
    dend_14 { pt3dadd( -7.73199, -189.412, -57.9917, 0.29 ) }
    dend_14 { pt3dadd( -8.15481, -189.543, -58.7145, 0.29 ) }
    dend_14 { pt3dadd( -8.63443, -189.628, -59.4912, 0.29 ) }
    dend_14 { pt3dadd( -9.63939, -189.648, -60.9383, 0.29 ) }
    dend_14 { pt3dadd( -10.5532, -189.521, -62.1553, 0.29 ) }
    dend_14 { pt3dadd( -11.1436, -189.336, -62.8827, 0.22 ) }
    dend_14 { pt3dadd( -11.7521, -189.091, -63.5805, 0.22 ) }
    dend_14 { pt3dadd( -12.2403, -188.877, -64.1053, 0.22 ) }
    dend_14 { pt3dadd( -12.7985, -188.627, -64.6499, 0.22 ) }
    dend_14 { pt3dadd( -13.5689, -188.328, -65.2455, 0.22 ) }
    dend_14 { pt3dadd( -14.1612, -188.066, -65.6631, 0.22 ) }
    dend_14 { pt3dadd( -14.5582, -187.839, -65.9579, 0.52 ) }
    dend_14 { pt3dadd( -14.8943, -187.598, -66.2256, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 118.406, -19.2748, -75.0538, 0.81 ) }
    dend_9 { pt3dadd( 120.942, -19.1443, -76.2443, 0.81 ) }
    dend_9 { pt3dadd( 122.879, -19.126, -77.063, 0.88 ) }
    dend_9 { pt3dadd( 124.422, -19.1902, -77.7257, 0.37 ) }
    dend_9 { pt3dadd( 124.868, -19.2074, -77.9135, 0.37 ) }
    dend_9 { pt3dadd( 125.844, -19.245, -78.324, 0.66 ) }
    dend_9 { pt3dadd( 126.479, -19.2695, -78.5912, 0.74 ) }
    dend_9 { pt3dadd( 126.699, -19.2837, -78.7154, 0.74 ) }
    dend_9 { pt3dadd( 127.921, -19.4293, -79.1473, 0.37 ) }
    dend_9 { pt3dadd( 128.533, -19.55, -79.3546, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 118.406, -19.2748, -75.0538, 0.44 ) }
    dend_4 { pt3dadd( 119.371, -18.7474, -76.3463, 0.44 ) }
    dend_4 { pt3dadd( 120.052, -18.375, -77.259, 0.44 ) }
    dend_4 { pt3dadd( 120.429, -18.1693, -77.7634, 0.44 ) }
    dend_4 { pt3dadd( 121.169, -17.7649, -78.7543, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 154.448, 69.7389, -55.0163, 0.96 ) }
    dend_65 { pt3dadd( 154.447, 68.6785, -57.1106, 0.96 ) }
    dend_65 { pt3dadd( 154.304, 67.559, -59.2154, 0.59 ) }
    dend_65 { pt3dadd( 154.265, 67.2939, -59.7214, 0.59 ) }
    dend_65 { pt3dadd( 154.238, 67.0523, -60.2062, 0.37 ) }
    dend_65 { pt3dadd( 154.209, 66.5313, -61.3429, 0.29 ) }
    dend_65 { pt3dadd( 154.199, 66.2144, -62.0834, 0.29 ) }
    dend_65 { pt3dadd( 154.18, 66.0526, -62.5836, 0.66 ) }
    dend_65 { pt3dadd( 154.178, 65.8728, -63.5593, 0.22 ) }
    dend_65 { pt3dadd( 154.214, 65.7677, -64.1472, 0.22 ) }
    dend_65 { pt3dadd( 154.269, 65.6199, -64.8931, 0.88 ) }
    dend_65 { pt3dadd( 154.294, 65.5287, -65.3479, 0.88 ) }
    dend_65 { pt3dadd( 154.302, 65.2546, -66.5903, 0.37 ) }
    dend_65 { pt3dadd( 154.279, 65.0798, -67.1586, 0.96 ) }
    dend_65 { pt3dadd( 154.241, 64.8602, -67.7096, 1.11 ) }
    dend_65 { pt3dadd( 154.18, 64.3956, -68.7419, 0.44 ) }
    dend_65 { pt3dadd( 154.164, 64.1063, -69.3675, 0.37 ) }
    dend_65 { pt3dadd( 154.169, 63.8837, -69.8622, 0.52 ) }
    dend_65 { pt3dadd( 154.229, 62.9679, -71.9811, 0.37 ) }
    dend_65 { pt3dadd( 154.316, 62.5705, -72.9902, 0.96 ) }
    dend_65 { pt3dadd( 154.41, 62.3015, -73.7838, 0.96 ) }
    dend_65 { pt3dadd( 154.521, 62.0451, -74.5935, 0.52 ) }
    dend_65 { pt3dadd( 154.616, 61.8367, -75.1903, 1.33 ) }
    dend_65 { pt3dadd( 154.732, 61.5625, -75.9032, 1.33 ) }
    dend_65 { pt3dadd( 155.129, 60.3951, -78.8281, 0.52 ) }
    dend_65 { pt3dadd( 155.169, 60.2597, -79.1572, 0.52 ) }
    dend_65 { pt3dadd( 155.243, 59.9568, -79.859, 0.52 ) }
    dend_65 { pt3dadd( 155.511, 58.603, -82.8046, 0.44 ) }
    dend_65 { pt3dadd( 155.593, 57.9761, -84.1463, 0.59 ) }
    dend_65 { pt3dadd( 155.615, 57.6194, -84.9537, 0.59 ) }
    dend_65 { pt3dadd( 155.584, 57.3141, -85.7363, 0.88 ) }
    dend_65 { pt3dadd( 155.561, 57.2263, -86.0116, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 155.474, 57.1296, -86.5118, 1.47 ) }
    dend_65 { pt3dadd( 155.126, 57.1249, -87.5752, 0.29 ) }
    dend_65 { pt3dadd( 154.772, 57.1957, -88.535, 0.29 ) }
    dend_65 { pt3dadd( 154.621, 57.2352, -88.9178, 0.29 ) }
    dend_65 { pt3dadd( 154.346, 57.3271, -89.5667, 0.29 ) }
    dend_65 { pt3dadd( 154.173, 57.3995, -89.9888, 0.29 ) }
    dend_65 { pt3dadd( 153.761, 57.608, -91.0125, 0.29 ) }
    dend_65 { pt3dadd( 153.598, 57.6856, -91.4139, 0.29 ) }
    dend_65 { pt3dadd( 153.368, 57.746, -91.9196, 0.96 ) }
    dend_65 { pt3dadd( 153.224, 57.7822, -92.2744, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 154.448, 69.7389, -55.0163, 0.15 ) }
    dend_62 { pt3dadd( 154.873, 70.9478, -55.3715, 0.15 ) }
    dend_62 { pt3dadd( 155.105, 71.6101, -55.566, 0.15 ) }
    dend_62 { pt3dadd( 155.292, 72.1423, -55.7224, 0.81 ) }
    dend_62 { pt3dadd( 155.455, 72.6044, -55.8582, 1.03 ) }
    dend_62 { pt3dadd( 155.668, 73.2133, -56.0371, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -28.7562, -149.806, -14.6452, 0.52 ) }
    dend_28 { pt3dadd( -28.7879, -150.451, -15.0776, 0.52 ) }
    dend_28 { pt3dadd( -28.8488, -151.492, -15.6491, 0.52 ) }
    dend_28 { pt3dadd( -29.0128, -152.811, -16.2473, 0.37 ) }
    dend_28 { pt3dadd( -29.096, -153.418, -16.513, 0.52 ) }
    dend_28 { pt3dadd( -29.2177, -154.234, -16.8606, 0.44 ) }
    dend_28 { pt3dadd( -29.3637, -155.139, -17.2567, 0.37 ) }
    dend_28 { pt3dadd( -29.5456, -156.056, -17.6294, 0.29 ) }
    dend_28 { pt3dadd( -29.779, -157.022, -17.9702, 0.29 ) }
    dend_28 { pt3dadd( -30.0761, -158.278, -18.3664, 1.03 ) }
    dend_28 { pt3dadd( -30.162, -158.631, -18.4819, 1.18 ) }
    dend_28 { pt3dadd( -30.4282, -159.634, -18.8477, 0.88 ) }
    dend_28 { pt3dadd( -30.6116, -160.354, -19.1251, 0.44 ) }
    dend_28 { pt3dadd( -30.7929, -161.292, -19.4838, 0.37 ) }
    dend_28 { pt3dadd( -30.8303, -161.844, -19.678, 0.59 ) }
    dend_28 { pt3dadd( -30.8056, -162.363, -19.83, 0.44 ) }
    dend_28 { pt3dadd( -30.6256, -163.419, -20.0928, 0.44 ) }
    dend_28 { pt3dadd( -30.4231, -164.17, -20.2465, 0.44 ) }
    dend_28 { pt3dadd( -30.0648, -165.322, -20.4541, 0.52 ) }
    dend_28 { pt3dadd( -29.7436, -166.391, -20.6395, 0.66 ) }
    dend_28 { pt3dadd( -29.5521, -167.274, -20.7527, 0.88 ) }
    dend_28 { pt3dadd( -29.5008, -167.887, -20.7929, 0.88 ) }
    dend_28 { pt3dadd( -29.6065, -168.817, -20.7798, 0.52 ) }
    dend_28 { pt3dadd( -29.9204, -169.614, -20.7338, 0.29 ) }
    dend_28 { pt3dadd( -30.5291, -170.558, -20.6502, 0.29 ) }
    dend_28 { pt3dadd( -31.3499, -171.628, -20.6117, 0.29 ) }
    dend_28 { pt3dadd( -31.9241, -172.333, -20.6539, 0.96 ) }
    dend_28 { pt3dadd( -32.2697, -172.807, -20.739, 1.18 ) }
    dend_28 { pt3dadd( -32.5971, -173.333, -20.8586, 1.18 ) }
    dend_28 { pt3dadd( -33.0387, -174.332, -21.1301, 0.59 ) }
    dend_28 { pt3dadd( -33.3281, -175.388, -21.3829, 0.52 ) }
    dend_28 { pt3dadd( -33.5138, -176.42, -21.5899, 0.52 ) }
    dend_28 { pt3dadd( -33.6834, -177.756, -21.8587, 0.66 ) }
    dend_28 { pt3dadd( -33.7698, -178.641, -22.0181, 0.66 ) }
    dend_28 { pt3dadd( -33.8316, -179.596, -22.156, 0.81 ) }
    dend_28 { pt3dadd( -33.8721, -180.977, -22.2333, 0.81 ) }
    dend_28 { pt3dadd( -33.9108, -181.969, -22.1108, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -28.7562, -149.806, -14.6452, 0.37 ) }
    dend_27 { pt3dadd( -29.473, -149.677, -14.2629, 0.37 ) }
    dend_27 { pt3dadd( -30.4356, -149.554, -13.8065, 0.37 ) }
    dend_27 { pt3dadd( -30.8996, -149.496, -13.6107, 0.37 ) }
    dend_27 { pt3dadd( -31.9372, -149.357, -13.2231, 0.29 ) }
    dend_27 { pt3dadd( -32.5579, -149.258, -13.0147, 0.29 ) }
    dend_27 { pt3dadd( -33.2938, -149.141, -12.7677, 0.29 ) }
    dend_27 { pt3dadd( -34.004, -149.045, -12.5242, 0.37 ) }
    dend_27 { pt3dadd( -34.3635, -149.015, -12.4392, 0.37 ) }
    dend_27 { pt3dadd( -34.7231, -148.997, -12.3904, 0.29 ) }
    dend_27 { pt3dadd( -35.1205, -148.962, -12.4003, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.0809, -163.983, 17.046, 0.22 ) }
    dend_23 { pt3dadd( 13.0078, -165.122, 17.2688, 0.22 ) }
    dend_23 { pt3dadd( 11.4615, -166.764, 17.5898, 0.22 ) }
    dend_23 { pt3dadd( 10.5826, -167.697, 17.7722, 0.29 ) }
    dend_23 { pt3dadd( 10.1035, -168.206, 17.8717, 0.29 ) }
    dend_23 { pt3dadd( 8.86213, -169.524, 18.1294, 0.22 ) }
    dend_23 { pt3dadd( 8.05097, -170.386, 18.2978, 0.22 ) }
    dend_23 { pt3dadd( 0.916727, -181.734, 19.0629, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 14.0809, -163.983, 17.046, 0.37 ) }
    dend_22 { pt3dadd( 13.8603, -165.146, 17.6167, 0.37 ) }
    dend_22 { pt3dadd( 13.5576, -166.203, 17.961, 0.96 ) }
    dend_22 { pt3dadd( 13.0783, -167.521, 18.2036, 0.59 ) }
    dend_22 { pt3dadd( 12.6794, -168.53, 18.2598, 0.59 ) }
    dend_22 { pt3dadd( 12.2566, -169.599, 18.3195, 0.22 ) }
    dend_22 { pt3dadd( 11.8538, -170.618, 18.3763, 0.22 ) }
    dend_22 { pt3dadd( 11.3196, -171.708, 18.3144, 0.22 ) }
    dend_22 { pt3dadd( 10.8124, -172.632, 18.106, 0.22 ) }
    dend_22 { pt3dadd( 10.2008, -173.582, 17.7288, 0.22 ) }
    dend_22 { pt3dadd( 7.90337, -183.084, 19.5017, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 121.169, -17.7649, -78.7543, 0.37 ) }
    dend_6 { pt3dadd( 123.389, -18.7004, -84.6636, 0.37 ) }
    dend_6 { pt3dadd( 123.753, -18.8316, -85.6751, 0.66 ) }
    dend_6 { pt3dadd( 124.012, -18.8985, -86.4767, 0.66 ) }
    dend_6 { pt3dadd( 124.129, -18.9163, -86.864, 0.96 ) }
    dend_6 { pt3dadd( 124.417, -18.9012, -87.8609, 1.11 ) }
    dend_6 { pt3dadd( 124.753, -18.8115, -89.0246, 1.11 ) }
    dend_6 { pt3dadd( 125.201, -18.3306, -90.4292, 0.81 ) }
    dend_6 { pt3dadd( 125.542, -17.8491, -91.4425, 1.4 ) }
    dend_6 { pt3dadd( 125.652, -17.6597, -91.7462, 1.4 ) }
    dend_6 { pt3dadd( 126.071, -16.8264, -92.7435, 0.37 ) }
    dend_6 { pt3dadd( 126.368, -16.1639, -93.2927, 0.37 ) }
    dend_6 { pt3dadd( 126.737, -15.3053, -93.77, 0.37 ) }
    dend_6 { pt3dadd( 127.031, -14.5807, -94.0381, 0.66 ) }
    dend_6 { pt3dadd( 127.254, -13.9721, -94.2127, 0.66 ) }
    dend_6 { pt3dadd( 127.484, -13.1027, -94.4719, 0.29 ) }
    dend_6 { pt3dadd( 127.576, -12.4298, -94.6767, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 127.597, -11.9426, -94.8419, 0.52 ) }
    dend_6 { pt3dadd( 127.602, -11.1326, -95.1662, 0.29 ) }
    dend_6 { pt3dadd( 127.617, -10.3012, -95.542, 1.03 ) }
    dend_6 { pt3dadd( 127.684, -9.07396, -96.1832, 0.66 ) }
    dend_6 { pt3dadd( 127.746, -8.29966, -96.6217, 0.44 ) }
    dend_6 { pt3dadd( 127.774, -8.02388, -96.7815, 0.66 ) }
    dend_6 { pt3dadd( 127.865, -7.17566, -97.2894, 0.37 ) }
    dend_6 { pt3dadd( 127.923, -6.74411, -97.5325, 0.52 ) }
    dend_6 { pt3dadd( 128.065, -5.89857, -97.9543, 0.37 ) }
    dend_6 { pt3dadd( 128.19, -5.30405, -98.183, 0.37 ) }
    dend_6 { pt3dadd( 128.329, -4.6692, -98.419, 0.37 ) }
    dend_6 { pt3dadd( 128.44, -3.95679, -98.683, 0.37 ) }
    dend_6 { pt3dadd( 128.503, -3.26862, -98.9263, 0.96 ) }
    dend_6 { pt3dadd( 128.529, -2.97848, -99.0256, 0.96 ) }
    dend_6 { pt3dadd( 128.666, -1.81079, -99.3938, 0.29 ) }
    dend_6 { pt3dadd( 128.8, -0.864953, -99.6991, 0.29 ) }
    dend_6 { pt3dadd( 128.944, 0.0123644, -99.9904, 0.29 ) }
    dend_6 { pt3dadd( 129.073, 0.74534, -100.242, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 121.169, -17.7649, -78.7543, 0.52 ) }
    dend_5 { pt3dadd( 119.816, -16.1883, -83.0606, 0.52 ) }
    dend_5 { pt3dadd( 119.696, -16.0484, -83.4027, 0.52 ) }
    dend_5 { pt3dadd( 119.09, -15.36, -84.9632, 0.37 ) }
    dend_5 { pt3dadd( 118.92, -15.1673, -85.4, 0.29 ) }
    dend_5 { pt3dadd( 118.406, -14.5844, -86.7214, 0.29 ) }
    dend_5 { pt3dadd( 117.969, -14.0889, -87.8447, 0.29 ) }
    dend_5 { pt3dadd( 117.464, -13.3979, -88.6754, 0.29 ) }
    dend_5 { pt3dadd( 117.243, -13.1084, -89.0428, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 153.224, 57.7822, -92.2744, 0.29 ) }
    dend_67 { pt3dadd( 153.052, 57.6144, -94.1092, 0.29 ) }
    dend_67 { pt3dadd( 153.036, 57.4469, -94.6254, 0.29 ) }
    dend_67 { pt3dadd( 153.039, 57.1482, -95.3249, 0.29 ) }
    dend_67 { pt3dadd( 153.058, 56.6072, -96.5857, 0.29 ) }
    dend_67 { pt3dadd( 153.059, 56.4181, -97.0704, 0.44 ) }
    dend_67 { pt3dadd( 153.062, 56.1615, -97.7287, 0.44 ) }
    dend_67 { pt3dadd( 153.048, 55.3123, -99.625, 0.29 ) }
    dend_67 { pt3dadd( 153.063, 54.868, -100.515, 0.29 ) }
    dend_67 { pt3dadd( 153.094, 54.5917, -101.032, 0.29 ) }
    dend_67 { pt3dadd( 153.149, 54.1671, -101.82, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 153.224, 57.7822, -92.2744, 0.22 ) }
    dend_66 { pt3dadd( 152.191, 57.1737, -91.5657, 0.22 ) }
    dend_66 { pt3dadd( 151.331, 56.74, -91.0229, 0.22 ) }
    dend_66 { pt3dadd( 150.244, 56.2881, -90.3699, 1.4 ) }
    dend_66 { pt3dadd( 149.024, 55.7813, -89.6375, 0.22 ) }
    dend_66 { pt3dadd( 147.664, 55.2158, -88.8203, 1.84 ) }
    dend_66 { pt3dadd( 146.472, 54.7205, -88.1046, 0.22 ) }
    dend_66 { pt3dadd( 145.419, 54.3952, -87.4681, 0.22 ) }
    dend_66 { pt3dadd( 144.422, 54.152, -86.8759, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 155.668, 73.2133, -56.0371, 0.74 ) }
    dend_64 { pt3dadd( 155.395, 74.0032, -56.1028, 0.74 ) }
    dend_64 { pt3dadd( 154.906, 75.2553, -56.1844, 0.22 ) }
    dend_64 { pt3dadd( 154.555, 75.9933, -56.2414, 0.22 ) }
    dend_64 { pt3dadd( 153.765, 77.4175, -56.3469, 0.22 ) }
    dend_64 { pt3dadd( 153.017, 78.6788, -56.3691, 1.33 ) }
    dend_64 { pt3dadd( 152.647, 79.3083, -56.3432, 1.33 ) }
    dend_64 { pt3dadd( 151.856, 80.5852, -56.1913, 0.22 ) }
    dend_64 { pt3dadd( 151.255, 81.4785, -56.0239, 0.22 ) }
    dend_64 { pt3dadd( 150.847, 82.0294, -55.9007, 0.22 ) }
    dend_64 { pt3dadd( 149.911, 83.1974, -55.6663, 0.22 ) }
    dend_64 { pt3dadd( 149.236, 84.0871, -55.4241, 0.22 ) }
    dend_64 { pt3dadd( 148.859, 84.6975, -55.2549, 0.37 ) }
    dend_64 { pt3dadd( 148.55, 85.3548, -55.08, 0.37 ) }
    dend_64 { pt3dadd( 148.3, 86.1427, -54.8658, 0.37 ) }
    dend_64 { pt3dadd( 148.164, 86.7623, -54.7277, 0.15 ) }
    dend_64 { pt3dadd( 147.784, 88.4673, -54.4692, 0.22 ) }
    dend_64 { pt3dadd( 147.462, 89.8669, -54.3118, 0.22 ) }
    dend_64 { pt3dadd( 147.218, 90.8475, -54.1917, 0.22 ) }
    dend_64 { pt3dadd( 146.686, 92.5958, -54.0165, 0.22 ) }
    dend_64 { pt3dadd( 146.228, 93.7888, -53.8952, 0.22 ) }
    dend_64 { pt3dadd( 145.565, 95.2685, -53.7264, 0.22 ) }
    dend_64 { pt3dadd( 145.295, 95.7985, -53.6662, 0.74 ) }
    dend_64 { pt3dadd( 144.085, 97.9177, -53.384, 0.29 ) }
    dend_64 { pt3dadd( 143.32, 99.1625, -53.2277, 0.29 ) }
    dend_64 { pt3dadd( 142.563, 100.374, -53.0988, 0.29 ) }
    dend_64 { pt3dadd( 142.028, 101.27, -52.9543, 0.29 ) }
    dend_64 { pt3dadd( 141.444, 102.387, -52.6792, 0.52 ) }
    dend_64 { pt3dadd( 140.938, 103.411, -52.3729, 0.37 ) }
    dend_64 { pt3dadd( 140.314, 104.772, -51.9289, 0.29 ) }
    dend_64 { pt3dadd( 140.167, 105.108, -51.8091, 0.37 ) }
    dend_64 { pt3dadd( 139.596, 106.422, -51.3401, 0.37 ) }
    dend_64 { pt3dadd( 138.798, 108.157, -50.7025, 0.37 ) }
    dend_64 { pt3dadd( 138.154, 109.483, -50.1831, 0.22 ) }
    dend_64 { pt3dadd( 137.808, 110.212, -49.8716, 0.22 ) }
    dend_64 { pt3dadd( 137.432, 110.995, -49.5302, 0.74 ) }
    dend_64 { pt3dadd( 137.213, 111.427, -49.3572, 0.88 ) }
    dend_64 { pt3dadd( 136.497, 112.772, -48.9392, 0.59 ) }
    dend_64 { pt3dadd( 135.595, 114.304, -48.6392, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 155.668, 73.2133, -56.0371, 0.29 ) }
    dend_63 { pt3dadd( 156.678, 73.4589, -56.4256, 0.29 ) }
    dend_63 { pt3dadd( 157.634, 73.5174, -56.8543, 0.29 ) }
    dend_63 { pt3dadd( 158.603, 73.4957, -57.3109, 1.03 ) }
    dend_63 { pt3dadd( 159.065, 73.4671, -57.536, 1.03 ) }
    dend_63 { pt3dadd( 160.211, 73.3685, -58.0477, 0.44 ) }
    dend_63 { pt3dadd( 161.081, 73.2914, -58.398, 0.29 ) }
    dend_63 { pt3dadd( 162.245, 73.1176, -58.8215, 0.96 ) }
    dend_63 { pt3dadd( 162.638, 73.0505, -58.9465, 0.96 ) }
    dend_63 { pt3dadd( 163.781, 72.8914, -59.2529, 0.22 ) }
    dend_63 { pt3dadd( 164.649, 72.8192, -59.4612, 0.22 ) }
    dend_63 { pt3dadd( 165.53, 72.8281, -59.6227, 0.22 ) }
    dend_63 { pt3dadd( 166.476, 72.9099, -59.781, 0.22 ) }
    dend_63 { pt3dadd( 167.557, 73.0886, -59.9625, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 168.228, 73.2405, -60.086, 0.52 ) }
    dend_63 { pt3dadd( 168.769, 73.4233, -60.2014, 0.29 ) }
    dend_63 { pt3dadd( 169.431, 73.7565, -60.3769, 1.03 ) }
    dend_63 { pt3dadd( 169.842, 74.0723, -60.482, 1.03 ) }
    dend_63 { pt3dadd( 170.173, 74.4665, -60.5772, 0.88 ) }
    dend_63 { pt3dadd( 170.48, 74.9309, -60.6516, 0.66 ) }
    dend_63 { pt3dadd( 170.836, 75.5757, -60.7258, 0.37 ) }
    dend_63 { pt3dadd( 171.164, 76.3056, -60.7763, 0.59 ) }
    dend_63 { pt3dadd( 171.508, 77.2538, -60.81, 0.29 ) }
    dend_63 { pt3dadd( 171.785, 78.1188, -60.7971, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -33.9108, -181.969, -22.1108, 0.74 ) }
    dend_30 { pt3dadd( -34.4999, -182.784, -22.24, 0.74 ) }
    dend_30 { pt3dadd( -35.4667, -183.981, -22.523, 0.66 ) }
    dend_30 { pt3dadd( -36.1868, -184.762, -22.8095, 0.52 ) }
    dend_30 { pt3dadd( -37.1454, -185.706, -23.2914, 0.37 ) }
    dend_30 { pt3dadd( -37.6739, -186.224, -23.5862, 0.74 ) }
    dend_30 { pt3dadd( -38.1266, -186.664, -23.8198, 1.03 ) }
    dend_30 { pt3dadd( -38.7453, -187.243, -24.1432, 0.74 ) }
    dend_30 { pt3dadd( -39.6254, -188.083, -24.6051, 0.52 ) }
    dend_30 { pt3dadd( -40.5165, -189.026, -25.0404, 0.52 ) }
    dend_30 { pt3dadd( -41.1183, -189.795, -25.306, 0.66 ) }
    dend_30 { pt3dadd( -41.9755, -191.152, -25.6239, 0.88 ) }
    dend_30 { pt3dadd( -42.2267, -191.641, -25.7022, 1.18 ) }
    dend_30 { pt3dadd( -42.563, -192.436, -25.7812, 0.81 ) }
    dend_30 { pt3dadd( -42.9524, -193.574, -25.8407, 0.52 ) }
    dend_30 { pt3dadd( -43.2183, -194.546, -25.9031, 0.52 ) }
    dend_30 { pt3dadd( -43.4938, -195.709, -26.0335, 0.52 ) }
    dend_30 { pt3dadd( -43.6034, -196.269, -26.1334, 0.52 ) }
    dend_30 { pt3dadd( -43.8198, -197.371, -26.3578, 0.52 ) }
    dend_30 { pt3dadd( -44.0454, -198.462, -26.6114, 0.52 ) }
    dend_30 { pt3dadd( -44.2312, -199.382, -26.8627, 1.03 ) }
    dend_30 { pt3dadd( -44.3743, -200.052, -27.0668, 1.25 ) }
    dend_30 { pt3dadd( -44.5758, -200.884, -27.3775, 0.66 ) }
    dend_30 { pt3dadd( -44.7963, -201.695, -27.751, 0.29 ) }
    dend_30 { pt3dadd( -45.1002, -202.491, -28.3205, 0.29 ) }
    dend_30 { pt3dadd( -45.2866, -202.385, -28.7301, 0.52 ) }
    dend_30 { pt3dadd( -45.7415, -201.664, -29.7809, 0.29 ) }
    dend_30 { pt3dadd( -46.0802, -200.986, -30.604, 0.29 ) }
    dend_30 { pt3dadd( -46.4236, -200.147, -31.4724, 0.22 ) }
    dend_30 { pt3dadd( -46.4837, -199.968, -31.6365, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -33.9108, -181.969, -22.1108, 0.22 ) }
    dend_29 { pt3dadd( -33.8077, -184.138, -22.7055, 0.22 ) }
    dend_29 { pt3dadd( -33.7555, -185.007, -22.944, 0.22 ) }
    dend_29 { pt3dadd( -33.639, -186.736, -23.3499, 0.22 ) }
    dend_29 { pt3dadd( -33.5143, -188.693, -23.748, 0.22 ) }
    dend_29 { pt3dadd( -33.4133, -190.278, -24.0706, 0.22 ) }
    dend_29 { pt3dadd( -33.2172, -193.356, -24.6967, 0.22 ) }
    dend_29 { pt3dadd( -33.1843, -194.672, -24.9698, 0.22 ) }
    dend_29 { pt3dadd( -33.0697, -197.272, -25.5109, 0.22 ) }
    dend_29 { pt3dadd( -32.9445, -198.725, -25.7784, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 129.073, 0.74534, -100.242, 0.29 ) }
    dend_8 { pt3dadd( 130.234, 0.696063, -100.091, 0.29 ) }
    dend_8 { pt3dadd( 130.902, 0.667723, -100.004, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 129.073, 0.74534, -100.242, 0.37 ) }
    dend_7 { pt3dadd( 128.988, 1.51511, -100.753, 0.37 ) }
    dend_7 { pt3dadd( 128.888, 2.42156, -101.355, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, axon_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, axon_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_78 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 5
    dend_50 nseg = 5
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 9
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_80 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 7
    dend_2 nseg = 7
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_ChC_8eec342856_0_0


