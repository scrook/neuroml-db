// Cell: dNAC222_L6_SBC_1404bc18ce_0_0
/*
{
  "id" : "dNAC222_L6_SBC_1404bc18ce_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.07242, 11.4844, 0.81", "1.42511, 3.94767, 11.4844, 0.81", "0.927641, 4.91636, 11.4844, 0.81", "0.19327, 6.34638, 11.4844, 0.81", "-0.38191, 7.46641, 11.4844, 0.81", "-1.07534, 8.8167, 11.4844, 1.4", "-1.25271, 9.1621, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -9.69758, 0.224411, 4.05", "-1.37542, -9.69758, 0.224411, 4.05", "-1.79855, -11.1178, 0.232908, 3.61", "-2.3851, -13.1953, 0.187256, 2.87", "-2.88119, -15.1268, 0.0412996, 2.36", "-3.31568, -17.0064, -0.108314, 2.36", "-3.72953, -18.9818, -0.245929, 2.65", "-4.06643, -20.6691, -0.373871, 2.65", "-4.34579, -22.2118, -0.50883, 2.8", "-4.71682, -24.6101, -0.749917, 2.43", "-4.99793, -26.7389, -0.992935, 2.28", "-5.24626, -29.0232, -1.28127, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.3624, -2.89559, 3.17", "-0.565422, 10.3624, -2.89559, 3.17", "-1.77782, 11.6006, -2.98133, 2.8", "-2.9595, 12.751, -3.06017, 2.8", "-4.02683, 13.7683, -3.1268, 2.8", "-5.38965, 15.0817, -3.19858, 2.8", "-6.42858, 16.1408, -3.24663, 2.58", "-7.15409, 16.919, -3.27479, 2.58", "-7.76699, 17.6255, -3.29288, 2.36", "-8.31805, 18.3788, -3.30097, 1.92", "-9.00431, 19.6911, -3.30269, 1.92", "-9.38534, 21.0112, -3.2919, 1.92", "-9.52475, 22.1815, -3.28461, 1.92", "-9.50329, 23.1861, -3.28207, 2.21", "-9.35066, 24.2542, -3.34114, 2.21", "-9.13298, 25.1423, -3.43674, 1.84", "-8.71435, 26.4302, -3.63676, 1.84", "-8.41791, 27.2602, -3.79137, 1.84", "-8.07929, 28.1911, -4.00735, 1.84", "-7.46516, 29.9942, -4.5069, 1.69", "-7.24886, 30.7349, -4.73983, 1.69", "-6.97831, 31.8474, -5.17933, 1.69", "-6.79417, 32.8757, -5.66367, 1.84", "-6.6817, 33.7528, -6.11945, 1.99", "-6.62577, 34.6065, -6.58553, 1.99", "-6.5914, 35.57, -7.1177, 1.99", "-6.57758, 37.0034, -8.0007, 2.14", "-6.59144, 37.7595, -8.53052, 2.14", "-6.62256, 38.4345, -9.05089, 2.14", "-6.67002, 39.1066, -9.56961, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.594704", "-0.922998, -25.8985, 0.0443568, 0.594704", "-1.50121, -40.8873, 0.0443568, 0.594704" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.25271, 9.1621, 11.4844, 0.81", "-2.05332, 11.5335, 10.0455, 0.81", "-2.45146, 12.7125, 9.41426, 0.81", "-2.78394, 13.6192, 8.98002, 1.03", "-3.12118, 14.4537, 8.61626, 1.03", "-3.57784, 15.4792, 8.20424, 0.59", "-4.06952, 16.4855, 7.8352, 0.37", "-4.56793, 17.4007, 7.63967, 0.37", "-5.0426, 18.2041, 7.47406, 0.59", "-5.43678, 18.8586, 7.33418, 0.59", "-5.81979, 19.4566, 7.20018, 0.66", "-6.35644, 20.2744, 6.95538, 0.59", "-6.89361, 21.0709, 6.60682, 0.44", "-7.53258, 22.0752, 5.97511, 0.44", "-7.81717, 22.5724, 5.60734, 0.96", "-8.18406, 23.2748, 5.06134, 1.33", "-8.48702, 23.9254, 4.55697, 1.55", "-8.9634, 25.0866, 3.68188, 1.03", "-9.55229, 26.7874, 2.53724, 0.52", "-9.67185, 27.2536, 2.27443, 0.88", "-9.83934, 28.2068, 1.82535, 0.52", "-9.90941, 29.0342, 1.52498, 0.52", "-9.92153, 29.7479, 1.33626, 0.52", "-9.89017, 31.0121, 1.0732, 0.88", "-9.85129, 32.3262, 0.81718, 0.74", "-9.86569, 33.09, 0.647742, 0.59", "-10.0261, 34.6971, 0.230327, 0.59", "-10.2607, 35.6974, -0.0609431, 1.25", "-10.6799, 36.724, -0.404405, 1.4", "-11.151, 37.4397, -0.668666, 1.18", "-11.7751, 38.1481, -0.925278, 0.88", "-12.5983, 38.9497, -1.21148, 0.66", "-13.2291, 39.4921, -1.39123, 0.66", "-13.6988, 39.9054, -1.50253, 0.66", "-14.3819, 40.6387, -1.61081, 0.59", "-14.7946, 41.306, -1.64034, 0.59", "-15.0654, 42.1324, -1.6014, 0.74", "-15.133, 42.524, -1.55408, 0.88", "-15.1977, 43.055, -1.45892, 0.88", "-15.2757, 43.7209, -1.30816, 1.03", "-15.4069, 44.5091, -1.10474, 0.66", "-15.6877, 45.7129, -0.762551, 0.44", "-15.941, 46.6526, -0.477097, 0.44", "-16.1697, 47.5506, -0.278339, 0.59", "-16.2742, 48.041, -0.222596, 0.96", "-16.4176, 49.1619, -0.207454, 1.18", "-16.4163, 49.7542, -0.256452, 1.18", "-16.2849, 50.7105, -0.416272, 0.74", "-15.837, 52.5872, -0.768852, 0.37", "-15.5774, 53.5226, -0.948303, 0.29", "-15.3042, 54.4863, -1.1185, 0.29", "-15.0254, 55.4982, -1.28317, 0.37", "-14.8721, 56.2619, -1.38236, 0.37", "-14.7871, 57.4168, -1.45372, 0.29", "-14.8569, 58.2515, -1.40776, 0.37", "-14.9887, 58.9013, -1.34162, 0.74", "-15.1187, 59.3471, -1.28937, 0.74", "-15.3144, 59.9443, -1.23825, 0.44", "-15.57, 60.9036, -1.19654, 0.66", "-15.7497, 61.8402, -1.23475, 1.25", "-15.835, 62.4102, -1.28404, 1.47", "-15.929, 63.0449, -1.36043, 1.47", "-16.111, 64.1718, -1.52873, 1.11", "-16.3617, 65.6376, -1.78609, 0.29", "-16.557, 66.7003, -1.99196, 0.66", "-16.6769, 67.2949, -2.12171, 0.52", "-16.8992, 68.2463, -2.37072, 0.52", "-17.2225, 69.3894, -2.68455, 0.66", "-17.6502, 70.7035, -3.02658, 0.88", "-17.8923, 71.3391, -3.19088, 1.47", "-18.1989, 72.1433, -3.37224, 1.47", "-18.5487, 73.0883, -3.57076, 0.74", "-18.9051, 73.9807, -3.7685, 0.74", "-19.2656, 74.7458, -3.93432, 0.74", "-19.7157, 75.5547, -4.09651, 0.37", "-20.2749, 76.4885, -4.25461, 0.37", "-20.7319, 77.2339, -4.359, 0.29", "-21.1496, 77.9438, -4.45491, 0.29", "-21.6398, 78.8306, -4.60745, 0.29", "-21.9088, 79.372, -4.71468, 0.29", "-22.2343, 80.2559, -4.95743, 0.88", "-22.3762, 80.8505, -5.15365, 1.47", "-22.4375, 81.4534, -5.36623, 1.47", "-22.4381, 81.9768, -5.53958, 1.47", "-22.3736, 82.7341, -5.78213, 1.18", "-22.1746, 84.1891, -6.20886, 0.37", "-22.0452, 84.9809, -6.39863, 0.37", "-21.9487, 85.7753, -6.52342, 0.37", "-21.9176, 86.3421, -6.57326, 0.96", "-21.925, 87.0524, -6.5911, 1.03", "-21.9586, 87.4542, -6.56535, 1.03", "-22.1107, 88.5442, -6.43966, 0.37", "-22.289, 89.6176, -6.3749, 0.37", "-22.3929, 90.2303, -6.37065, 0.29", "-22.4958, 90.9235, -6.48782, 0.29", "-22.6232, 91.9541, -6.78027, 0.29", "-22.6706, 92.6991, -7.065, 0.29", "-22.6975, 93.717, -7.52665, 1.18", "-22.6835, 94.2285, -7.77218, 1.47", "-22.5068, 96.4385, -8.92624, 0.22", "-22.4786, 96.6758, -9.06137, 0.44", "-22.3265, 97.5935, -9.60897, 0.66", "-22.1642, 98.4083, -10.0709, 0.22", "-21.9906, 99.1963, -10.4916, 0.22", "-21.6786, 100.593, -11.2091, 0.88", "-21.512, 101.332, -11.5556, 0.88", "-21.371, 102.039, -11.9067, 0.88", "-21.1713, 103.253, -12.5712, 0.37", "-21.0703, 104.109, -13.1025, 0.37", "-21.0642, 104.48, -13.3516, 0.88", "-21.1088, 104.986, -13.6887, 0.88", "-21.2365, 105.773, -14.2557, 0.52", "-21.3958, 106.448, -14.7844, 0.29", "-21.602, 107.19, -15.4007, 0.29", "-21.8487, 108.036, -16.0803, 1.11", "-21.9703, 108.594, -16.5231, 1.33", "-22.079, 109.252, -17.0518, 1.55", "-22.1617, 109.9, -17.5783, 1.55", "-22.2579, 110.844, -18.3602, 0.52", "-22.3499, 111.732, -19.0931, 0.44", "-22.5447, 113.177, -20.2523, 1.47", "-22.6519, 113.877, -20.7725, 1.47", "-22.9243, 115.496, -21.8514, 0.44", "-23.0787, 116.371, -22.4019, 0.44", "-23.2681, 117.479, -23.0716, 0.44", "-23.4435, 118.565, -23.6974, 0.37", "-23.6194, 119.596, -24.2275, 0.37", "-23.8314, 121.279, -24.9435, 1.47", "-23.8659, 121.933, -25.1441, 1.77", "-23.8597, 123.607, -25.5085, 0.29", "-23.8189, 124.413, -25.6283, 1.03", "-23.7816, 124.883, -25.6619, 1.03", "-23.644, 126.539, -25.6367, 0.66", "-23.4943, 128.556, -25.4098, 0.29", "-23.4438, 129.575, -25.2138, 1.03", "-23.4365, 129.998, -25.098, 1.25", "-23.4617, 131.098, -24.775, 0.22", "-23.5007, 131.625, -24.629, 0.44", "-23.6348, 132.608, -24.3843, 0.22", "-23.7813, 133.377, -24.1676, 0.52", "-23.8978, 133.946, -24.0031, 0.52", "-24.1594, 135.381, -23.5819, 0.22", "-24.2736, 136.158, -23.353, 0.29", "-24.3655, 136.949, -23.1211, 0.29", "-24.5206, 138.537, -22.6688, 1.11", "-24.5563, 139.069, -22.5366, 1.33", "-24.5802, 140.055, -22.3082, 0.29", "-24.5545, 141.032, -22.0904, 0.29", "-24.527, 141.421, -22.0118, 0.44", "-24.4196, 142.501, -21.8332, 0.22", "-24.3, 143.61, -21.6955, 0.66", "-24.2754, 143.953, -21.6566, 1.18", "-24.2698, 144.447, -21.6096, 1.18", "-24.2686, 144.841, -21.5735, 0.74", "-24.2511, 146.308, -21.4412, 0.22", "-24.2367, 146.883, -21.394, 0.66", "-24.2577, 147.875, -21.2985, 0.22", "-24.2911, 148.364, -21.2485, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-1.25271, 9.1621, 11.4844, 0.44", "-0.720321, 10.2554, 10.7948, 0.44", "-0.455115, 10.8672, 10.4179, 0.44", "-0.141895, 11.6111, 9.97538, 0.96", "0.0783178, 12.0951, 9.6942, 0.96", "0.669549, 13.4314, 9.03407, 0.52", "0.866253, 13.9267, 8.84484, 0.52", "1.01617, 14.3901, 8.68742, 0.66", "1.13477, 15.0411, 8.57928, 0.37", "1.18112, 15.5398, 8.63876, 0.37", "1.30373, 16.547, 8.90872, 0.37", "1.45905, 17.4841, 9.22514, 0.59", "1.56833, 18.0217, 9.3875, 0.81", "1.6857, 18.5506, 9.53358, 0.81", "1.97845, 19.9373, 9.9289, 0.29", "2.1956, 20.965, 10.1682, 0.29", "2.39285, 21.7819, 10.3225, 0.29", "2.59063, 22.45, 10.4256, 0.29", "2.79031, 23.0561, 10.515, 0.88", "3.04685, 23.8313, 10.6092, 0.88", "3.16662, 24.4736, 10.6814, 0.52", "3.16241, 25.1661, 10.8536, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.24626, -29.0232, -1.28127, 1.77", "-4.98927, -30.0857, -1.27888, 1.77", "-4.84339, -30.6153, -1.24194, 1.77", "-4.63237, -31.1933, -1.34083, 1.77", "-4.32323, -31.8171, -1.57688, 1.77", "-3.96642, -32.5371, -1.84933, 1.92", "-3.69325, -33.0883, -2.05791, 2.14", "-3.27319, -33.7851, -2.3667, 2.36", "-1.97969, -35.6679, -3.52573, 1.77", "-1.47617, -36.2833, -4.08663, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.24626, -29.0232, -1.28127, 0.81", "-4.59358, -30.0006, -0.675153, 0.81", "-3.44789, -31.3449, 0.125358, 0.66", "-2.94076, -31.8048, 0.400985, 0.88", "-2.07498, -32.4604, 0.773728, 0.59", "-1.16584, -33.0605, 1.0567, 0.88", "-0.144268, -33.6646, 1.26378, 1.18", "0.734292, -34.0892, 1.25892, 0.81", "1.80146, -34.4921, 1.12327, 0.66", "2.54544, -34.7432, 0.998273, 0.59", "3.57857, -35.0728, 0.794952, 0.88", "4.50513, -35.3733, 0.589045, 0.74", "5.47508, -35.7313, 0.352043, 0.59", "6.47735, -36.1454, 0.0949518, 0.74", "7.36209, -36.5514, -0.121484, 0.74", "7.89554, -36.8203, -0.23615, 0.88", "8.47835, -37.1543, -0.338294, 0.88", "9.21536, -37.6392, -0.455325, 0.66", "9.94219, -38.2227, -0.589692, 0.66", "10.3604, -38.6717, -0.700273, 0.52", "10.7949, -39.3122, -0.84664, 0.52", "11.013, -39.8005, -0.919546, 0.96", "11.1248, -40.1479, -0.938647, 1.18", "11.3366, -40.9184, -0.927713, 1.03", "11.4585, -41.331, -0.866472, 1.18", "11.6756, -41.885, -0.702444, 1.03", "12.1238, -42.722, -0.318373, 0.37", "12.583, -43.3935, 0.10258, 0.74", "12.8625, -43.7562, 0.393012, 0.88", "13.4981, -44.5408, 1.12412, 0.59", "13.8243, -44.9533, 1.52425, 0.59", "14.198, -45.4615, 2.00932, 0.88", "14.633, -46.1294, 2.60134, 0.74", "14.9938, -46.7832, 3.1234, 1.25", "15.2233, -47.2199, 3.42296, 1.25", "15.5071, -47.7517, 3.71197, 0.81", "15.7959, -48.305, 3.96391, 0.59", "16.1441, -48.9552, 4.20712, 0.59", "16.4649, -49.4947, 4.34925, 0.59", "17.0508, -50.3311, 4.52351, 0.44", "17.4638, -50.8256, 4.63539, 0.52", "17.9125, -51.2799, 4.74798, 0.44", "18.4651, -51.7822, 4.87914, 0.44", "18.9084, -52.1795, 4.9843, 0.52", "19.4526, -52.7036, 5.13008, 0.66", "19.9398, -53.2127, 5.25406, 0.66", "20.5553, -53.9376, 5.42429, 0.52", "20.8302, -54.2904, 5.53175, 0.81", "21.1387, -54.7559, 5.7, 0.81", "21.4535, -55.3148, 5.91832, 0.66", "21.8988, -56.2319, 6.26861, 0.52", "22.2808, -57.1274, 6.60901, 0.52", "22.6035, -57.9606, 6.94262, 1.18", "22.7652, -58.3766, 7.11951, 1.4", "23.0449, -59.0449, 7.42756, 1.25", "23.3842, -59.8091, 7.83611, 1.03", "23.5039, -60.0611, 8.00051, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.67002, 39.1066, -9.56961, 1.33", "-7.09618, 39.8338, -9.61364, 1.33", "-7.51721, 40.643, -9.64134, 1.33", "-7.90035, 41.455, -9.61786, 1.33", "-8.29715, 42.3986, -9.53418, 1.33", "-8.69004, 43.459, -9.39879, 1.47", "-8.93786, 44.2395, -9.27725, 1.69", "-9.0795, 44.8997, -9.14536, 1.77", "-9.18534, 45.6575, -8.95979, 1.99", "-9.2534, 46.4184, -8.76561, 2.14", "-9.3142, 47.3337, -8.53222, 1.84", "-9.39798, 48.4117, -8.27468, 1.84", "-9.50792, 49.3483, -8.08786, 1.84", "-9.613, 49.985, -8.00136, 1.92", "-9.78016, 50.7792, -7.94148, 1.92", "-9.96383, 51.5421, -7.90462, 1.92", "-10.1804, 52.3171, -7.8829, 1.62", "-10.494, 53.2577, -7.88387, 1.62", "-10.8273, 54.1327, -7.90667, 1.77", "-11.1377, 54.8952, -7.946, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.67002, 39.1066, -9.56961, 0.66", "-6.00674, 40.2416, -9.87459, 0.66", "-5.57856, 40.8492, -9.99574, 0.66", "-5.40285, 41.0687, -10.0207, 0.96", "-5.0516, 41.4814, -10.0277, 0.96", "-4.77233, 41.8174, -9.97258, 0.74", "-4.56509, 42.0881, -9.90704, 0.66", "-4.21668, 42.5178, -9.73268, 0.66", "-3.91824, 42.8789, -9.58722, 0.66", "-3.62843, 43.219, -9.4691, 0.66", "-2.85382, 44.0629, -9.27482, 0.88", "-2.31934, 44.5948, -9.22864, 0.29", "-1.879, 44.9798, -9.28083, 0.29", "-1.28471, 45.3643, -9.53558, 1.18", "-1.00994, 45.4953, -9.72184, 1.62", "-0.334151, 45.7488, -10.2778, 0.81", "0.0619145, 45.8683, -10.6436, 0.81", "0.442883, 45.9546, -11.0133, 1.03", "1.0186, 46.073, -11.6078, 0.44", "1.50192, 46.175, -12.1341, 0.44", "1.81264, 46.2584, -12.4658, 1.18", "2.06096, 46.3527, -12.7028, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.47617, -36.2833, -4.08663, 1.03", "-2.06741, -37.0777, -5.26188, 1.03", "-2.65505, -37.6956, -6.03975, 0.81", "-2.96227, -37.9679, -6.35158, 0.81", "-3.33951, -38.2422, -6.66551, 0.81", "-3.67148, -38.4454, -6.91233, 1.11", "-4.04274, -38.6301, -7.15055, 1.11", "-4.55802, -38.7732, -7.32398, 1.4", "-4.91526, -38.8276, -7.40898, 1.4", "-5.53001, -38.853, -7.58755, 1.11", "-5.85782, -38.8089, -7.70722, 1.33", "-6.45232, -38.6097, -7.96904, 1.03", "-6.81486, -38.4232, -8.24147, 0.81", "-7.04185, -38.295, -8.45492, 0.81", "-7.56261, -38.0387, -9.00167, 0.81", "-8.10038, -37.8372, -9.6162, 1.03", "-8.51205, -37.7431, -10.1035, 1.33", "-9.85469, -37.7002, -11.7443, 1.03", "-10.308, -37.7912, -12.2706, 1.03", "-10.882, -38.0355, -12.8528, 1.33", "-11.3324, -38.3172, -13.2273, 1.33", "-11.7053, -38.6071, -13.4771, 1.47", "-12.3124, -39.1168, -13.7483, 1.11", "-12.805, -39.5193, -13.8427, 0.88", "-13.1713, -39.7683, -13.8923, 1.55", "-13.5702, -39.9675, -13.9372, 1.84", "-14.008, -40.1024, -13.9881, 1.99", "-14.7757, -40.1809, -14.0702, 1.18", "-15.2938, -40.1213, -14.1153, 0.88", "-15.8239, -39.9514, -14.1611, 1.25", "-16.2347, -39.7179, -14.2013, 1.47", "-16.7167, -39.343, -14.3093, 1.18", "-17.2351, -38.96, -14.6529, 0.96", "-17.4041, -38.8752, -14.8752, 1.18", "-17.5603, -38.8325, -15.1237, 1.18", "-17.8955, -38.7897, -15.6483, 0.74", "-18.5777, -38.7811, -16.6586, 0.74", "-19.7949, -38.8577, -18.5277, 1.47", "-20.5123, -38.9471, -19.656, 1.99", "-21.1412, -39.0614, -20.65, 1.47", "-21.5066, -39.1512, -21.2277, 1.62", "-22.0344, -39.3222, -22.0615, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.47617, -36.2833, -4.08663, 0.88", "-0.520542, -36.8683, -4.67975, 0.88", "0.178032, -37.4071, -5.23337, 1.03", "0.792531, -38.058, -5.84559, 1.03", "1.25032, -38.7904, -6.46969, 0.88", "1.62168, -39.6758, -7.15575, 0.81", "1.91058, -40.7656, -7.99029, 1.03", "1.88752, -41.3895, -8.46074, 1.33", "1.59794, -42.2969, -9.24333, 0.88", "1.06887, -43.2326, -10.1607, 0.66", "0.734046, -43.7016, -10.7256, 0.96", "0.367656, -44.2185, -11.558, 0.66", "0.162964, -44.6154, -12.3908, 0.74", "0.110848, -45.3467, -14.3593, 0.88", "0.263398, -45.5722, -15.0877, 1.11", "0.96846, -46.1596, -17.0399, 0.88", "1.81846, -46.8405, -19.1606, 0.74", "2.47761, -47.4096, -20.6486, 0.74", "2.99555, -47.914, -21.7859, 0.74", "3.45633, -48.437, -22.7885, 0.66", "4.24798, -49.5196, -24.5933, 0.96", "4.77238, -50.4136, -25.8118, 1.25", "5.24841, -51.356, -26.9189, 0.81", "5.79827, -52.5019, -28.1815, 0.74", "6.18335, -53.2061, -28.915, 0.88", "6.83431, -54.0964, -29.7047, 0.59", "7.74704, -54.9385, -30.2589, 0.59", "8.66803, -55.5905, -30.5724, 1.18", "9.14546, -55.862, -30.6188, 1.62", "9.66971, -56.1184, -30.5801, 1.84", "11.1068, -56.7296, -30.3542, 1.18", "12.2165, -57.1432, -30.2219, 0.81", "12.6805, -57.3039, -30.2087, 0.96", "13.8926, -57.7281, -30.3961, 0.59", "14.3141, -57.8904, -30.5418, 0.66", "15.0813, -58.2295, -30.9357, 0.52", "16.5999, -59.0732, -32.0913, 1.18", "17.1598, -59.4718, -32.6219, 1.25", "18.1208, -60.2624, -33.857, 0.88", "18.518, -60.6048, -34.4469, 0.88", "19.056, -61.0566, -35.2611, 0.66", "20.0737, -61.8027, -36.8192, 1.47", "20.5446, -62.0854, -37.5298, 1.69", "22.7718, -63.159, -40.8376, 0.81", "23.2687, -63.3524, -41.5406, 0.81", "23.8994, -63.5529, -42.3709, 0.66", "25.4154, -63.9216, -44.1462, 1.03", "25.9478, -64.0157, -44.6526, 1.03", "26.685, -64.1614, -45.1939, 1.33", "27.9428, -64.5274, -45.7075, 0.88", "28.8837, -64.9195, -45.9787, 0.88", "29.6317, -65.3391, -46.0736, 0.74", "29.9332, -65.5378, -46.0658, 0.88", "30.8384, -66.1591, -45.9856, 0.44", "31.6091, -66.6762, -45.8767, 1.77", "32.0315, -66.9641, -45.7938, 2.06", "32.5196, -67.3698, -45.662, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.1377, 54.8952, -7.946, 1.25", "-10.6278, 56.2229, -9.18562, 1.25", "-10.3893, 56.7839, -9.62319, 1.4", "-10.004, 57.8017, -10.272, 1.11", "-9.5709, 59.1347, -10.981, 1.33", "-9.31138, 60.0839, -11.415, 1.25", "-8.99404, 61.4031, -11.9624, 1.25", "-8.64389, 62.8976, -12.4765, 1.47", "-8.3139, 64.3321, -12.9084, 1.69", "-8.05145, 65.608, -13.1924, 1.84", "-7.88182, 66.7194, -13.3529, 2.14", "-7.81145, 67.8198, -13.4736, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.1377, 54.8952, -7.946, 0.96", "-12.0975, 56.5778, -7.3108, 0.96", "-12.8202, 57.6871, -7.04543, 0.81", "-14.2862, 59.6121, -6.81715, 0.66", "-15.1587, 60.5679, -6.82842, 0.59", "-16.269, 61.6138, -6.95096, 0.59", "-17.736, 62.8115, -7.23367, 0.74", "-19.0186, 63.5925, -7.67265, 0.74", "-20.1008, 64.124, -8.15855, 1.11", "-21.4337, 64.6841, -8.84249, 0.74", "-22.3753, 65.0792, -9.33533, 1.25", "-23.7669, 65.7476, -10.0668, 0.96", "-25.2483, 66.674, -10.7568, 0.44", "-25.7671, 67.1443, -10.998, 0.44", "-26.2446, 67.8113, -11.235, 0.74", "-26.6975, 68.818, -11.4645, 0.74", "-27.0757, 69.9938, -11.5166, 0.74", "-27.4197, 71.4069, -11.24, 0.59", "-27.6276, 72.4498, -10.7991, 0.59", "-27.7971, 73.4994, -10.1389, 0.88", "-27.9092, 74.4493, -9.4506, 0.66", "-28.1796, 76.6824, -7.45416, 0.66", "-28.4101, 78.2656, -5.86332, 0.96", "-28.5557, 79.0852, -4.9939, 0.66", "-28.7903, 80.1085, -3.86595, 0.52", "-29.1416, 81.3075, -2.55312, 0.88", "-29.7323, 83.006, -0.897032, 0.59", "-30.0899, 83.891, -0.235345, 0.59", "-30.48, 84.6885, 0.259723, 0.59", "-31.2732, 86.0305, 1.027, 0.59", "-32.0669, 87.1925, 1.66533, 1.11", "-33.1576, 88.6599, 2.4493, 0.59", "-33.8542, 89.5688, 2.84508, 0.59", "-34.7008, 90.6163, 3.30026, 0.81", "-35.5543, 91.6544, 3.72126, 0.81", "-36.4593, 92.7379, 4.07835, 0.96", "-37.2798, 93.6764, 4.35652, 1.03", "-38.1059, 94.5179, 4.60091, 1.33", "-38.9777, 95.3367, 4.88124, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.06096, 46.3527, -12.7028, 0.88", "3.351, 46.6724, -13.0744, 0.88", "4.39472, 46.8373, -13.3741, 0.66", "5.17615, 46.9125, -13.5991, 1.03", "6.06795, 46.9966, -13.888, 1.18", "6.83793, 47.1019, -14.1832, 1.18", "7.42324, 47.2154, -14.4444, 0.81", "8.14584, 47.3948, -14.8447, 0.44", "8.93561, 47.6934, -15.3763, 0.44", "9.79297, 48.2255, -16.0638, 0.44", "10.5671, 48.9121, -16.7511, 0.59", "11.0917, 49.4641, -17.223, 0.81", "11.5032, 49.9069, -17.5743, 0.81", "12.0217, 50.4548, -17.9794, 0.66", "12.685, 51.0649, -18.4185, 0.66", "13.5306, 51.6535, -18.8464, 0.66", "14.299, 52.012, -19.1482, 0.88", "15.1431, 52.2677, -19.4334, 0.52", "15.7659, 52.3715, -19.6288, 0.96", "16.5441, 52.3816, -19.8656, 0.96", "17.1517, 52.2877, -20.0443, 1.11", "17.9266, 52.014, -20.2883, 1.18", "18.485, 51.7103, -20.4728, 1.18", "19.1354, 51.2132, -20.7275, 0.66", "20.0027, 50.3391, -21.1496, 0.96", "20.7928, 49.2951, -21.6321, 0.44", "21.6284, 47.932, -22.3109, 0.37", "22.0544, 47.1542, -22.7409, 1.18", "22.5063, 46.2947, -23.2715, 1.33", "22.8406, 45.6408, -23.7238, 1.33", "23.3658, 44.5252, -24.6311, 0.59", "23.8014, 43.4611, -25.6312, 0.37", "24.0508, 42.7273, -26.3837, 0.37", "24.1894, 42.1479, -27.0356, 0.37", "24.2928, 41.5372, -27.7522, 0.37", "24.3726, 40.5462, -28.9585, 0.52", "24.3794, 39.727, -29.9772, 0.52", "24.353, 38.9574, -30.8748, 0.52", "24.3145, 37.3272, -32.5272, 0.96", "24.3487, 36.2574, -33.4787, 1.47", "24.4671, 35.3701, -34.1923, 1.69", "24.6289, 34.7639, -34.6335, 1.92", "24.9232, 34.0138, -35.1454, 1.92", "25.7856, 32.3379, -36.1965, 0.74", "26.5677, 31.0988, -36.859, 0.37", "27.1422, 30.3318, -37.2533, 0.88", "27.5662, 29.8746, -37.4951, 1.11", "27.9608, 29.5122, -37.7064, 1.11", "28.5119, 29.0628, -37.9893, 1.33", "28.8484, 28.8039, -38.1545, 1.33", "29.4224, 28.2626, -38.3976, 0.81", "29.8663, 27.5606, -38.6061, 0.44", "30.2162, 26.7083, -38.8541, 0.37", "30.5595, 25.6452, -39.21, 0.37", "30.7492, 24.9843, -39.4678, 1.18", "30.9522, 24.2438, -39.7951, 1.4", "31.3766, 22.6922, -40.6189, 0.29", "31.8383, 21.3085, -41.5719, 0.66", "32.2901, 20.2814, -42.4811, 1.11", "32.6242, 19.6216, -43.1655, 1.62", "32.7761, 19.3193, -43.4936, 1.84", "33.167, 18.5493, -44.3388, 1.84", "33.6847, 17.4241, -45.5695, 0.81", "34.078, 16.4665, -46.5425, 0.44", "34.3404, 15.776, -47.1805, 0.44", "34.7719, 14.7091, -48.0764, 0.44", "35.0884, 13.9994, -48.6163, 0.59", "35.9027, 12.4565, -49.6544, 0.52", "36.3907, 11.7036, -50.118, 0.37", "36.8707, 11.1358, -50.5314, 0.96", "37.5767, 10.4292, -51.1447, 1.62", "37.9074, 10.1221, -51.4271, 1.99", "38.5411, 9.50252, -51.9773, 1.99", "38.9423, 9.0942, -52.304, 1.47", "40.3772, 7.45948, -53.5216, 0.52", "41.2447, 6.45858, -54.2552, 0.52", "41.9197, 5.69106, -54.8112, 0.88", "42.6226, 4.93806, -55.3554, 0.59", "43.2386, 4.31517, -55.7872, 0.37", "43.764, 3.82845, -56.0744, 0.37", "44.538, 3.21095, -56.3119, 0.74", "45.0207, 2.8386, -56.4619, 0.74", "45.4328, 2.48299, -56.6398, 0.37", "45.6952, 2.19846, -56.8005, 0.37", "46.2385, 1.44952, -57.2554, 0.81", "46.4306, 1.08688, -57.4786, 1.03", "47.0759, -0.445198, -58.3866, 0.37", "47.4766, -1.52466, -59.0226, 1.18", "47.7653, -2.37721, -59.5222, 1.47", "48.1279, -3.40043, -60.1325, 0.66", "48.6297, -4.61542, -60.9279, 0.29", "48.8818, -5.10863, -61.2602, 1.25", "49.1882, -5.6044, -61.6204, 1.55", "49.531, -6.06063, -61.9973, 1.55", "50.5254, -7.12194, -62.9969, 0.44", "51.7322, -8.14108, -64.134, 1.18", "52.6852, -8.81403, -64.9806, 1.84", "53.8307, -9.54606, -65.9764, 2.06", "55.1936, -10.3369, -67.1749, 0.29", "56.017, -10.7746, -67.9151, 0.29", "56.9324, -11.2652, -68.7443, 1.18", "57.6845, -11.7228, -69.4051, 0.88", "58.1739, -12.0362, -69.8198, 0.52", "59.2264, -12.7289, -70.6272, 0.52", "59.8484, -13.1772, -71.1063, 0.52", "60.761, -13.8921, -71.7898, 0.29", "61.51, -14.502, -72.2961, 0.29", "62.2276, -15.075, -72.7557, 0.66", "62.8852, -15.6193, -73.1451, 0.81", "63.1513, -15.8491, -73.2817, 0.81", "64.1747, -16.7452, -73.8234, 0.29", "64.9403, -17.3916, -74.2498, 0.96", "65.6337, -17.9664, -74.6766, 1.03", "66.4269, -18.6473, -75.1861, 0.29", "66.901, -19.0488, -75.4901, 0.29", "67.6552, -19.6454, -75.9584, 0.96", "68.432, -20.2014, -76.4033, 0.96", "69.4938, -20.8708, -76.9721, 0.37", "70.5736, -21.4627, -77.4807, 0.66", "71.0406, -21.7117, -77.6884, 0.96", "72.1767, -22.345, -78.1585, 0.29", "73.3582, -23.0246, -78.5981, 1.03", "73.7827, -23.2649, -78.7529, 1.33", "74.8922, -23.8446, -79.1326, 0.37", "75.9529, -24.2982, -79.5187, 0.37", "76.8669, -24.6273, -79.8996, 0.37", "77.4362, -24.7939, -80.1641, 0.74", "78.3478, -25.0368, -80.6166, 0.74", "79.0168, -25.2196, -80.9618, 0.37", "79.8779, -25.432, -81.4188, 0.29", "80.7767, -25.5957, -81.8896, 0.29", "81.5047, -25.697, -82.264, 0.88", "82.2883, -25.7918, -82.6529, 1.25", "83.2097, -25.8953, -83.1036, 1.18", "84.429, -26.0145, -83.7002, 0.29", "85.3108, -26.0641, -84.1375, 0.74", "86.0528, -26.0834, -84.5032, 0.74", "86.9107, -26.0947, -84.9704, 0.37", "87.9558, -26.1121, -85.6042, 0.96", "88.5617, -26.1412, -85.9904, 1.33", "89.1605, -26.2252, -86.3985, 1.33", "90.1245, -26.4711, -87.0607, 0.37", "91.1417, -26.8328, -87.7573, 0.44", "91.8441, -27.1288, -88.2275, 0.44", "92.6303, -27.4737, -88.7169, 0.44", "93.7713, -27.9738, -89.3813, 0.96", "94.511, -28.3145, -89.7736, 1.03", "95.0382, -28.5698, -90.0222, 0.81", "95.7417, -28.9383, -90.3133, 0.52", "96.5781, -29.4073, -90.634, 0.29", "97.0232, -29.6594, -90.8136, 0.29", "97.8261, -30.076, -91.0647, 0.88", "98.5955, -30.4594, -91.2571, 1.25", "98.9106, -30.628, -91.3199, 1.25", "99.9811, -31.2982, -91.4993, 0.29", "100.734, -31.8645, -91.6162, 0.29", "102.004, -32.9113, -91.8056, 0.29", "102.444, -33.2811, -91.8788, 0.29", "103.37, -34.046, -92.071, 0.96", "104.08, -34.5849, -92.2573, 0.96", "104.867, -35.1279, -92.5259, 0.44", "105.388, -35.4488, -92.7452, 0.37", "105.997, -35.7692, -93.0882, 0.81", "106.9, -36.1287, -93.6728, 0.29", "107.62, -36.3855, -94.1947, 0.29", "108.263, -36.6323, -94.6841, 0.74", "109.002, -36.9735, -95.2865, 0.96", "109.757, -37.4061, -95.9352, 0.96", "110.766, -38.085, -96.8047, 0.44", "111.572, -38.7226, -97.5417, 0.29", "112.228, -39.328, -98.1651, 0.29", "112.832, -39.9459, -98.726, 0.96", "113.163, -40.2995, -99.0184, 1.11", "113.748, -40.8951, -99.4782, 1.18", "114.728, -41.8588, -100.254, 0.37", "115.284, -42.3443, -100.715, 0.37", "116.099, -43.0073, -101.438, 0.29", "116.882, -43.5964, -102.155, 0.29", "117.635, -44.125, -102.863, 0.96", "118.813, -44.8716, -103.961, 0.44", "119.385, -45.1821, -104.457, 1.03", "119.846, -45.4025, -104.833, 1.03", "120.859, -45.8132, -105.634, 0.29", "121.389, -45.9816, -106.011, 0.29", "122.027, -46.1257, -106.437, 0.96", "122.852, -46.2585, -106.945, 0.96", "123.361, -46.3399, -107.263, 0.37", "124.206, -46.4892, -107.806, 0.22", "125.138, -46.6951, -108.436, 1.11", "126.162, -46.9126, -109.154, 1.11", "127.548, -47.1957, -110.176, 0.44", "128.197, -47.3272, -110.683, 1.03", "128.634, -47.4347, -111.037, 1.03", "129.534, -47.7714, -111.783, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.06096, 46.3527, -12.7028, 0.29", "2.40357, 47.7321, -13.2532, 0.29", "2.56419, 48.3788, -13.5378, 0.29", "2.86705, 49.6208, -14.0783, 0.29", "3.07471, 50.4789, -14.4554, 0.81", "3.19485, 50.9821, -14.685, 0.81", "3.43119, 52.0256, -15.1573, 0.29", "3.66027, 52.9919, -15.6273, 0.29", "3.86676, 53.9124, -16.0816, 0.88", "3.9235, 54.1965, -16.2182, 0.88", "4.07008, 55.0072, -16.6186, 0.22", "4.25179, 56.0069, -17.1118, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-22.0344, -39.3222, -22.0615, 0.88", "-28.8852, -37.9435, -30.6513, 0.88", "-29.8372, -37.8156, -31.746, 0.52", "-30.2796, -37.777, -32.2186, 0.52", "-31.3708, -37.7288, -33.2907, 0.52", "-32.5158, -37.7446, -34.3017, 0.52", "-33.4638, -37.819, -35.0315, 1.03", "-33.9628, -38.0936, -35.0111, 1.62", "-34.2077, -38.2421, -34.9873, 1.99", "-34.808, -38.581, -34.8964, 2.14", "-35.8723, -39.0118, -34.7233, 1.55", "-36.9265, -39.242, -34.6909, 0.74", "-38.0021, -39.3384, -34.8503, 0.37", "-39.0418, -39.3833, -35.1192, 0.37", "-39.7818, -39.4415, -35.4314, 0.37", "-41.5199, -39.6296, -36.374, 0.74", "-43.2674, -39.8684, -37.4313, 1.4", "-44.1846, -40.0283, -38.002, 1.92", "-44.6312, -40.1246, -38.2806, 2.21", "-47.1604, -40.6945, -39.9273, 0.52", "-47.9446, -40.8719, -40.461, 0.52", "-48.9312, -41.095, -41.1529, 0.52", "-49.6781, -41.2029, -41.6848, 0.59", "-50.2498, -41.2204, -42.1097, 0.59", "-52.2405, -41.0283, -43.575, 1.69", "-54.0658, -40.5759, -44.8521, 2.06", "-55.6276, -40.0769, -45.8967, 1.03", "-56.3863, -39.792, -46.3982, 0.29", "-57.1845, -39.5022, -46.8964, 0.29", "-58.1839, -39.1952, -47.4205, 1.25", "-58.7855, -39.0797, -47.6609, 1.62", "-59.6104, -38.9905, -47.948, 1.92", "-61.9988, -38.9779, -48.8122, 0.81", "-63.156, -39.1398, -49.2584, 1.11", "-63.7305, -39.2647, -49.5223, 1.11", "-65.0471, -39.5753, -50.2404, 0.37", "-65.888, -39.7631, -50.7464, 0.29", "-66.8243, -39.9915, -51.327, 0.29", "-67.8097, -40.249, -51.8924, 0.29", "-69.7594, -40.6594, -53.0454, 1.33", "-70.5337, -40.7723, -53.5321, 1.55", "-71.2796, -40.8229, -54.0344, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.0344, -39.3222, -22.0615, 1.18", "-23.2046, -39.7296, -22.5236, 1.18", "-24.6125, -40.2581, -22.9882, 0.52", "-25.4322, -40.5576, -23.2368, 0.52", "-27.336, -41.2156, -23.6374, 0.88", "-28.5256, -41.6114, -23.7977, 1.18", "-29.4045, -41.9186, -23.8728, 1.18", "-30.4695, -42.3392, -23.8761, 1.25", "-31.4219, -42.7586, -23.8236, 1.11", "-33.0081, -43.5063, -23.5521, 0.88", "-33.9797, -43.9731, -23.2758, 0.59", "-34.7855, -44.3571, -23.0236, 0.44", "-35.3773, -44.6272, -22.8281, 0.29", "-36.0299, -44.9052, -22.605, 0.29", "-36.7842, -45.2045, -22.3727, 0.88", "-37.4796, -45.4256, -22.2475, 1.25", "-37.8931, -45.53, -22.204, 1.47", "-38.5552, -45.6702, -22.1622, 1.47", "-39.1114, -45.7969, -22.149, 1.33", "-39.9515, -46.0257, -22.1548, 0.59", "-40.8137, -46.3093, -22.1918, 0.44", "-41.8977, -46.706, -22.259, 0.37", "-42.5592, -46.9539, -22.3061, 0.96", "-43.4064, -47.2671, -22.3712, 0.59", "-44.5747, -47.6771, -22.4626, 0.52", "-45.2387, -47.8804, -22.5169, 0.52", "-45.9326, -48.0428, -22.5815, 1.11", "-46.5487, -48.1294, -22.6431, 1.99", "-47.2113, -48.1639, -22.7142, 2.28", "-47.9065, -48.1377, -22.8001, 1.99", "-48.7502, -48.041, -22.9192, 1.69", "-49.5346, -47.9204, -23.0542, 1.4", "-50.1608, -47.8298, -23.181, 0.66", "-50.9068, -47.7556, -23.3476, 0.52", "-51.6548, -47.7407, -23.524, 0.52", "-52.2384, -47.8191, -23.66, 0.29", "-52.8238, -48.0831, -23.7729, 0.29", "-53.5146, -48.6203, -23.8362, 0.81", "-53.8922, -48.9782, -23.8213, 1.11", "-54.4141, -49.5144, -23.7188, 0.96", "-55.0513, -50.1326, -23.4605, 0.74", "-55.6381, -50.5781, -23.1702, 0.37", "-56.4506, -50.9537, -22.6923, 1.11", "-56.9799, -51.1203, -22.3655, 1.84", "-57.5651, -51.2219, -21.9934, 2.36", "-58.5402, -51.2387, -21.3546, 2.58", "-59.5387, -51.1042, -20.6862, 0.59", "-60.3761, -50.8807, -20.1042, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "32.5196, -67.3698, -45.662, 0.74", "33.3619, -68.0377, -45.8667, 0.74", "33.9922, -68.5075, -46.098, 0.66", "34.3825, -68.7867, -46.2713, 1.11", "34.7076, -69.0051, -46.4373, 1.11", "35.3912, -69.4198, -46.8143, 0.88", "35.895, -69.6991, -47.1095, 0.59", "36.407, -69.9647, -47.4689, 1.11", "36.568, -70.0405, -47.598, 1.47", "36.8991, -70.1715, -47.8701, 1.69", "37.3524, -70.3179, -48.2323, 1.69", "37.9257, -70.4419, -48.6392, 1.77", "38.2591, -70.5026, -48.871, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "32.5196, -67.3698, -45.662, 0.37", "32.4154, -68.3321, -46.8837, 0.37", "32.208, -69.2601, -48.0525, 1.03", "31.861, -70.4443, -49.4875, 1.25", "31.2199, -71.891, -51.3219, 0.66", "30.9592, -72.347, -51.9332, 0.81", "29.9469, -73.8334, -54.1047, 1.11", "29.4677, -74.3524, -54.9535, 1.4", "28.8712, -74.8688, -55.8379, 0.88", "27.3564, -75.9001, -57.7604, 0.22", "25.8611, -76.7783, -59.5012, 0.37", "24.1759, -77.7281, -61.4351, 1.03", "23.299, -78.2189, -62.4566, 1.69", "22.7666, -78.5908, -63.2308, 1.69", "20.4627, -80.4936, -66.8923, 0.15", "20.121, -80.8952, -67.6175, 0.15", "19.8881, -81.27, -68.275, 1.18", "19.6208, -81.8745, -69.2918, 1.47", "18.9153, -84.1411, -72.9518, 0.88", "18.6763, -85.3172, -74.7669, 1.55", "18.461, -87.6978, -78.277, 0.81", "18.3698, -88.5911, -79.5878, 0.37", "18.3008, -89.0787, -80.2717, 0.52", "18.1907, -89.698, -81.034, 0.52", "18.1111, -90.2427, -81.4911, 0.37", "18.0051, -91.1071, -81.958, 0.37", "17.7899, -91.9506, -82.0647, 0.81", "17.5907, -92.6933, -82.0981, 1.11", "17.3798, -93.8372, -82.1034, 1.25", "17.1948, -95.3806, -82.1262, 0.29", "17.1148, -96.2517, -82.1331, 0.29", "16.9503, -97.7843, -82.1058, 1.55", "16.8277, -98.6162, -82.0767, 1.77", "16.437, -100.578, -81.9926, 0.29", "15.9881, -102.121, -81.9015, 0.22", "15.228, -103.828, -81.7602, 0.22", "14.4409, -105.169, -81.6009, 0.66", "13.8283, -105.963, -81.4823, 1.4", "13.693, -106.106, -81.4552, 1.92", "12.911, -106.804, -81.281, 1.62", "12.0168, -107.574, -81.0435, 0.52", "11.2112, -108.274, -80.8384, 0.29", "10.313, -109.109, -80.6208, 0.52", "9.92316, -109.48, -80.5263, 0.52", "9.11054, -110.283, -80.3278, 0.37", "8.76173, -110.629, -80.2397, 0.88", "8.22325, -111.146, -80.1232, 0.88", "7.59649, -111.725, -80.0088, 0.44", "6.92573, -112.368, -79.9009, 0.22", "6.41579, -112.9, -79.8353, 0.96", "5.75532, -113.653, -79.8018, 0.96", "4.6601, -115.085, -79.8108, 0.29", "4.20085, -115.773, -79.848, 1.25", "3.78198, -116.417, -79.8972, 1.25", "3.27527, -117.225, -79.9824, 0.96", "2.67062, -118.269, -80.1392, 0.96", "1.87308, -119.894, -80.4786, 0.29", "1.37817, -121.093, -80.7741, 0.29", "1.01577, -122.106, -81.0593, 0.66", "0.729291, -123.001, -81.3546, 0.37", "0.333903, -124.201, -81.8644, 0.96", "0.00931835, -125.205, -82.431, 1.18", "-0.151045, -125.708, -82.7895, 0.81", "-0.535561, -126.874, -83.7207, 0.52", "-0.935859, -128.051, -84.6348, 0.44", "-1.58496, -129.754, -85.9444, 0.96", "-2.56086, -131.97, -87.6862, 0.37", "-3.09964, -133.114, -88.5859, 0.37", "-3.81734, -134.676, -89.8346, 0.37", "-4.42841, -136.127, -90.9406, 1.18", "-4.73181, -136.984, -91.5433, 1.47", "-4.94758, -137.747, -92.0361, 1.47", "-5.43813, -140.095, -93.4626, 0.74", "-5.61512, -141.534, -94.31, 0.29", "-5.66175, -142.777, -95.018, 0.29", "-5.61087, -144.636, -96.0423, 0.96", "-5.55377, -145.324, -96.3733, 1.11", "-5.36409, -146.558, -96.8863, 0.29", "-5.08633, -147.635, -97.2776, 0.29", "-4.73098, -148.622, -97.6057, 0.44", "-4.40386, -149.311, -97.8336, 0.29", "-4.03762, -150.015, -98.0038, 1.03", "-3.69874, -150.698, -98.1371, 1.03", "-3.02617, -152.101, -98.3919, 0.29", "-2.44498, -153.174, -98.5747, 1.11", "-2.17524, -153.641, -98.6492, 1.25", "-1.41462, -154.969, -98.8101, 0.22", "-1.22068, -155.342, -98.8297, 0.74", "-1.05174, -155.709, -98.8335, 0.74", "-0.640097, -156.702, -98.7909, 0.22", "-0.377369, -157.384, -98.7547, 0.66", "-0.136546, -157.982, -98.727, 0.66", "0.209699, -158.801, -98.6934, 0.22", "0.435706, -159.385, -98.6672, 0.81", "0.756959, -160.315, -98.6163, 0.22", "1.12203, -161.535, -98.5347, 0.52", "1.33175, -162.309, -98.476, 0.66", "1.44536, -162.75, -98.4388, 0.66", "1.72298, -163.813, -98.343, 0.29", "2.11494, -165.374, -98.1884, 0.29", "2.32141, -166.193, -98.1064, 0.81", "2.39866, -166.502, -98.0741, 0.81", "2.7093, -167.733, -97.9449, 0.29", "2.98843, -168.797, -97.8321, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.81145, 67.8198, -13.4736, 1.25", "-7.28352, 69.8914, -12.2117, 1.25", "-7.12458, 70.5709, -12.0808, 1.25", "-6.96341, 71.5755, -12.177, 1.03", "-6.90047, 72.0961, -12.2961, 1.11", "-6.80447, 73.0278, -12.5648, 1.11", "-6.72048, 74.0031, -12.8654, 1.03", "-6.63258, 75.3468, -13.4479, 0.96", "-6.59764, 76.526, -14.0002, 1.18", "-6.60853, 77.5264, -14.4879, 1.18", "-6.64796, 78.4653, -14.9389, 1.4", "-6.72479, 79.5359, -15.4107, 1.55", "-6.84299, 80.8101, -15.9175, 1.18", "-6.93544, 81.7588, -16.2532, 0.96", "-7.04272, 82.9305, -16.6473, 1.25", "-7.14055, 83.8348, -16.9342, 1.25", "-7.23656, 84.6513, -17.1753, 1.03", "-7.38449, 85.8296, -17.4769, 1.03", "-7.50127, 86.6222, -17.6374, 1.03", "-7.69156, 87.8712, -17.8356, 1.03", "-7.89838, 89.3072, -17.9934, 1.03", "-7.98797, 89.9527, -18.0421, 1.33", "-8.18053, 91.4072, -18.1177, 1.62", "-8.33016, 92.5825, -18.1503, 1.11", "-8.47419, 93.7251, -18.0817, 1.4", "-8.57674, 94.6151, -17.969, 1.25", "-8.66091, 95.6885, -17.7905, 1.55", "-8.67092, 95.9072, -17.7499, 1.47", "-8.68771, 97.3011, -17.4756, 1.62", "-8.68225, 99.1676, -17.1071, 1.47", "-8.69782, 99.9398, -16.9706, 1.55", "-8.72999, 100.66, -16.8776, 1.11", "-8.79996, 101.989, -16.7651, 0.88", "-8.84256, 102.889, -16.735, 0.88", "-8.8615, 103.738, -16.7631, 0.88", "-8.82839, 104.941, -16.8888, 0.88", "-8.73799, 105.855, -16.9894, 1.18", "-8.55176, 106.911, -17.1319, 1.18", "-8.35006, 107.681, -17.2503, 1.33", "-8.06391, 108.573, -17.3614, 1.33", "-7.563, 109.971, -17.462, 1.11", "-7.03849, 111.374, -17.4795, 0.88", "-6.69386, 112.339, -17.4263, 0.88", "-6.34156, 113.456, -17.304, 1.03", "-6.07079, 114.571, -17.1372, 1.33", "-5.90733, 115.619, -16.9502, 1.33", "-5.85366, 116.499, -16.7916, 1.47", "-5.87469, 117.327, -16.6214, 1.4", "-5.93881, 118.093, -16.4522, 1.4", "-6.04445, 118.951, -16.2798, 1.18", "-6.17879, 119.951, -16.1159, 1.18", "-6.26681, 120.646, -16.0074, 1.03", "-6.36723, 121.693, -15.8521, 1.03", "-6.39842, 122.657, -15.731, 0.88", "-6.35636, 123.689, -15.7002, 1.03", "-6.273, 124.635, -15.7313, 0.96", "-6.18359, 125.359, -15.8171, 0.96", "-6.04564, 126.34, -16.0099, 0.96", "-5.85376, 127.62, -16.4188, 0.96", "-5.56409, 129.528, -17.3298, 0.81", "-5.43003, 130.69, -18.0426, 1.03", "-5.38517, 131.398, -18.5355, 1.03", "-5.35825, 132.412, -19.2445, 0.88", "-5.3533, 133.876, -20.2359, 1.03", "-5.37895, 135.471, -21.2276, 1.03", "-5.39263, 136.405, -21.6982, 1.25", "-5.43254, 137.64, -22.2159, 1.25", "-5.53796, 139.397, -22.761, 1.03", "-5.61048, 140.314, -22.9564, 1.03", "-5.70004, 141.566, -23.149, 1.03", "-5.76353, 143.184, -23.3389, 1.03", "-5.73687, 144.9, -23.5367, 0.88", "-5.62533, 146.4, -23.7238, 0.88", "-5.47159, 147.708, -23.8925, 0.88", "-5.11396, 150.124, -24.1917, 0.74", "-4.83388, 151.698, -24.3693, 0.74", "-4.50625, 153.332, -24.5127, 0.74", "-4.22472, 154.673, -24.6369, 0.74", "-4.00642, 156.08, -24.8447, 0.74", "-3.95969, 157.541, -25.2293, 0.74", "-4.03926, 158.23, -25.484, 0.88", "-4.20257, 159.027, -25.874, 1.03", "-4.50095, 160.427, -26.6167, 0.74", "-4.85812, 162.397, -27.6521, 0.74", "-5.06869, 164.078, -28.5181, 0.59", "-5.11902, 164.839, -28.8779, 0.88", "-5.14659, 166.142, -29.4238, 1.11", "-5.08482, 168.025, -30.0788, 1.55", "-4.96708, 169.554, -30.4501, 1.33", "-4.82222, 170.867, -30.6687, 1.11", "-4.61305, 172.529, -30.8934, 1.11", "-4.42682, 173.854, -31.0615, 1.11", "-4.19627, 175.194, -31.2038, 1.03", "-3.86232, 176.721, -31.3411, 0.88", "-3.62827, 177.546, -31.4026, 1.18", "-3.45302, 178.065, -31.4227, 1.4", "-3.18246, 178.815, -31.4259, 1.25", "-2.885, 179.687, -31.4247, 1.25", "-2.7328, 180.231, -31.445, 1.11", "-2.60189, 180.855, -31.4922, 0.96", "-2.52536, 181.649, -31.5607, 0.96", "-2.51599, 182.206, -31.6159, 0.88", "-2.54083, 183.302, -31.725, 0.66", "-2.55634, 184.017, -31.76, 0.81", "-2.54933, 184.776, -31.7521, 0.81", "-2.49463, 185.662, -31.6759, 0.74", "-2.27787, 187.402, -31.4143, 0.88", "-2.1954, 187.872, -31.309, 1.18", "-1.89704, 189.092, -30.9568, 1.18", "-1.68559, 189.782, -30.7214, 1.18", "-1.41903, 190.512, -30.4605, 1.11", "-1.07335, 191.347, -30.1665, 0.96", "-0.832679, 191.921, -29.9685, 0.96", "-0.556909, 192.621, -29.7835, 0.81", "-0.291101, 193.344, -29.6599, 1.11", "-0.146821, 193.755, -29.636, 1.47", "0.149795, 194.646, -29.7008, 1.03", "0.381933, 195.389, -29.8272, 1.03", "0.625501, 196.2, -30.0427, 1.25", "0.769101, 196.764, -30.2019, 1.25", "1.05531, 198.138, -30.5509, 0.88", "1.16662, 198.862, -30.6808, 0.88", "1.2551, 199.79, -30.7794, 1.18", "1.30939, 200.806, -30.8072, 0.96", "1.34805, 201.945, -30.7192, 0.81", "1.38017, 202.944, -30.5439, 1.25", "1.4145, 203.746, -30.3263, 0.66", "1.46464, 204.554, -30.0687, 0.96", "1.5282, 205.295, -29.84, 1.25", "1.60914, 206.017, -29.6377, 0.96", "1.71823, 206.716, -29.5033, 0.96", "1.86998, 207.511, -29.3819, 1.25", "2.00681, 208.125, -29.2931, 1.55", "2.19199, 208.859, -29.1838, 1.55", "2.34109, 209.393, -29.1105, 1.25", "2.55074, 210.17, -29.0431, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.81145, 67.8198, -13.4736, 0.59", "-7.94879, 70.7547, -15.0407, 0.59", "-8.01217, 71.8484, -15.5764, 0.88", "-8.08926, 73.1544, -16.139, 1.18", "-8.1464, 74.8009, -16.7679, 1.18", "-8.14594, 75.949, -17.2231, 0.96", "-8.12758, 77.2305, -17.7312, 0.59", "-8.10329, 78.0596, -17.9926, 0.96", "-8.06229, 79.4126, -18.4201, 0.96", "-8.04566, 81.0164, -18.9541, 0.96", "-8.08483, 82.5232, -19.47, 0.52", "-8.17458, 83.6236, -19.8424, 0.37", "-8.31442, 84.3387, -20.0847, 0.37", "-8.56885, 85.0663, -20.3035, 0.81", "-8.92199, 85.6814, -20.4939, 1.18", "-9.19519, 86.1061, -20.6295, 1.18", "-9.62848, 86.865, -20.8546, 0.66", "-9.93365, 87.5383, -21.0776, 0.66", "-10.2977, 88.6524, -21.4519, 0.59", "-10.5831, 90.0175, -21.9128, 0.88", "-10.8269, 91.9655, -22.5673, 1.11", "-10.8917, 93.0465, -22.9213, 1.11", "-10.893, 93.9733, -23.1914, 1.11", "-10.8478, 95.0924, -23.4366, 0.37", "-10.7762, 96.3106, -23.5718, 0.37", "-10.7397, 97.1324, -23.5462, 0.74", "-10.7406, 97.3973, -23.5148, 0.88", "-10.7601, 98.5884, -23.3208, 0.88", "-10.75, 99.4952, -23.1311, 0.66", "-10.6765, 100.735, -22.8409, 0.52", "-10.6095, 101.309, -22.7406, 0.52", "-10.4217, 102.39, -22.6585, 0.96", "-10.2577, 103.112, -22.6926, 0.96", "-10.0997, 103.702, -22.7893, 1.18", "-9.97238, 104.187, -22.9049, 1.18", "-9.68398, 105.459, -23.2474, 0.66", "-9.58544, 106.174, -23.4288, 0.88", "-9.55237, 107.132, -23.6319, 0.88", "-9.58599, 107.886, -23.799, 0.44", "-9.65015, 108.714, -23.9746, 0.74", "-9.69116, 109.223, -24.0713, 0.74", "-9.72587, 109.903, -24.1749, 0.52", "-9.72311, 110.75, -24.3119, 0.37", "-9.67749, 111.459, -24.4307, 0.37", "-9.55618, 112.323, -24.5775, 0.74", "-9.44367, 112.87, -24.6702, 0.74", "-9.27369, 113.602, -24.7919, 0.66", "-8.98421, 114.789, -24.9782, 0.74", "-8.89294, 115.146, -25.0311, 1.4", "-8.66418, 115.896, -25.1398, 1.4", "-8.42863, 116.589, -25.2792, 1.33", "-7.95297, 117.811, -25.5994, 0.44", "-7.48584, 118.857, -25.9352, 0.44", "-7.17227, 119.548, -26.1881, 0.37", "-6.64577, 120.796, -26.6807, 0.37", "-6.24613, 121.844, -27.1113, 0.59", "-6.04387, 122.5, -27.384, 0.59", "-5.92018, 123.109, -27.6314, 0.29", "-5.90425, 124.627, -28.1283, 0.88", "-6.01429, 125.366, -28.2953, 1.77", "-6.169, 126.044, -28.389, 2.06", "-6.31292, 126.642, -28.4317, 1.69", "-6.52812, 127.504, -28.4942, 1.18", "-6.86121, 128.82, -28.6149, 0.44", "-7.16195, 129.996, -28.7327, 0.37", "-7.50102, 131.325, -28.8783, 0.74", "-7.64899, 131.864, -28.944, 0.74", "-7.98032, 133.035, -29.1167, 0.52", "-8.21966, 133.889, -29.2149, 0.44", "-8.36259, 134.43, -29.247, 0.66", "-8.50966, 134.961, -29.2337, 0.66", "-8.72875, 135.675, -29.1783, 0.37", "-8.89012, 136.221, -29.1001, 0.37", "-9.29403, 137.835, -28.6939, 0.59", "-9.48998, 138.974, -28.338, 1.03", "-9.55253, 139.614, -28.1257, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-38.9777, 95.3367, 4.88124, 0.29", "-39.1215, 96.8844, 5.09664, 0.29", "-39.2513, 97.6172, 5.21484, 0.44", "-39.432, 98.1578, 5.36359, 0.66", "-39.7451, 98.7372, 5.65607, 0.29", "-40.1199, 99.2629, 6.00336, 0.29", "-40.3317, 99.535, 6.19684, 0.74", "-40.6334, 99.8249, 6.47874, 0.88", "-41.3386, 100.433, 7.08891, 0.44", "-42.0326, 101.03, 7.64357, 0.52", "-42.2289, 101.224, 7.79661, 0.81", "-42.5345, 101.644, 8.06155, 0.44", "-42.7766, 102.126, 8.33848, 0.88", "-42.9818, 102.725, 8.68089, 0.59", "-43.1107, 103.343, 8.95362, 0.29", "-43.1777, 103.876, 9.14356, 0.29", "-43.2635, 104.804, 9.442, 0.96", "-43.3305, 105.638, 9.69833, 1.18", "-43.384, 106.5, 9.96101, 0.81", "-43.4564, 107.686, 10.2744, 0.52", "-43.5025, 108.307, 10.4205, 0.52", "-43.6069, 109.234, 10.5749, 0.44", "-43.71, 109.962, 10.665, 0.66", "-43.8261, 110.776, 10.7825, 0.88", "-43.9007, 111.264, 10.8665, 0.52", "-43.9848, 111.868, 11.0062, 0.29", "-44.1064, 112.711, 11.202, 0.29", "-44.266, 113.835, 11.4571, 0.52", "-44.4328, 114.698, 11.6465, 0.81", "-44.6101, 115.48, 11.7789, 0.22", "-44.7383, 116.068, 11.8614, 0.22", "-44.9641, 117.039, 11.977, 0.37", "-45.0986, 117.539, 12.0281, 0.37", "-45.4275, 118.586, 12.1236, 0.37", "-45.775, 119.589, 12.2181, 0.29", "-46.111, 120.632, 12.3307, 0.52", "-46.2679, 121.183, 12.3874, 0.88", "-46.5066, 122.31, 12.4874, 0.59", "-46.5953, 122.903, 12.5263, 0.44", "-46.6475, 123.633, 12.5649, 0.22", "-46.7026, 125.092, 12.6316, 0.22", "-46.6983, 125.746, 12.6387, 0.81", "-46.67, 126.287, 12.609, 1.33", "-46.6374, 126.815, 12.5471, 1.33", "-46.5651, 127.773, 12.3952, 0.59", "-46.4969, 128.401, 12.2638, 0.81", "-46.4121, 128.98, 12.1147, 0.81", "-46.262, 129.871, 11.8271, 0.52", "-46.0622, 130.993, 11.3984, 0.22", "-45.8959, 131.875, 11.0227, 0.22", "-45.677, 132.934, 10.5308, 0.59", "-45.5187, 133.595, 10.217, 0.81", "-45.2933, 134.53, 9.77005, 0.29", "-45.128, 135.21, 9.47276, 0.22", "-45.0548, 135.562, 9.32624, 0.59", "-45.0386, 135.834, 9.22866, 0.59", "-45.1672, 136.539, 9.02228, 0.22", "-45.4105, 137.165, 8.83308, 0.29", "-45.6347, 137.584, 8.6884, 0.81", "-45.8108, 137.865, 8.55738, 1.11", "-45.9454, 138.081, 8.44212, 1.11", "-46.5407, 139.133, 7.84537, 0.37", "-46.7612, 139.625, 7.58245, 0.96", "-47.0029, 140.322, 7.24518, 0.88", "-47.1821, 140.879, 6.9913, 0.88", "-47.4342, 141.634, 6.68569, 0.52", "-47.627, 142.196, 6.48557, 0.74", "-47.9795, 143.208, 6.1818, 0.29", "-48.3419, 144.14, 5.89477, 0.59", "-48.6205, 144.774, 5.69141, 0.59", "-48.9768, 145.564, 5.34143, 0.29", "-49.2736, 146.192, 4.95496, 1.18", "-49.4018, 146.479, 4.7392, 1.47", "-49.6675, 147.155, 4.1485, 1.18", "-49.8871, 147.815, 3.56609, 0.44", "-50.1955, 148.954, 2.58187, 0.22", "-50.2904, 149.399, 2.18032, 0.22", "-50.4334, 150.3, 1.41217, 1.18", "-50.4566, 150.531, 1.22851, 1.4", "-50.4759, 151.596, 0.479647, 0.44", "-50.444, 152.212, 0.0788894, 0.66", "-50.4108, 152.806, -0.249954, 0.66", "-50.315, 153.648, -0.731045, 0.22", "-50.2456, 154.008, -0.958564, 0.59", "-50.1085, 154.554, -1.32656, 0.52", "-49.913, 155.181, -1.75655, 0.96", "-49.7623, 155.759, -2.17863, 0.59", "-49.6387, 156.311, -2.59742, 0.37", "-49.5118, 156.868, -3.0452, 0.59", "-49.4102, 157.25, -3.33728, 0.81", "-49.1763, 158.16, -4.0151, 0.22", "-48.9773, 158.945, -4.55167, 0.59", "-48.8577, 159.443, -4.8728, 0.52", "-48.7485, 160.038, -5.23151, 0.22", "-48.609, 160.959, -5.7603, 0.22", "-48.4806, 161.98, -6.33412, 0.88", "-48.4256, 162.568, -6.64981, 1.69", "-48.4066, 162.897, -6.80395, 1.92", "-48.4191, 163.524, -7.09734, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-38.9777, 95.3367, 4.88124, 0.52", "-40.193, 95.6355, 5.01031, 0.52", "-40.9782, 95.8143, 5.09774, 0.59", "-41.8282, 96.0007, 5.19763, 0.44", "-42.4106, 96.1458, 5.26969, 0.59", "-43.0656, 96.3462, 5.36026, 0.59", "-43.8559, 96.6369, 5.47878, 0.52", "-44.358, 96.8515, 5.56492, 0.74", "-44.9993, 97.1764, 5.6862, 0.37", "-45.477, 97.4464, 5.79255, 0.37", "-46.0879, 97.8053, 5.9402, 0.37", "-46.6228, 98.1022, 6.08367, 0.52", "-47.3051, 98.3807, 6.25992, 0.52", "-47.8455, 98.4778, 6.38015, 0.29", "-48.5947, 98.4874, 6.49248, 0.81", "-49.0522, 98.4569, 6.53857, 1.11", "-49.6889, 98.4032, 6.57983, 1.25", "-50.6788, 98.3291, 6.62254, 0.66", "-51.5357, 98.2889, 6.63521, 0.37", "-52.7662, 98.3067, 6.58259, 0.37", "-53.582, 98.3804, 6.48813, 0.29", "-54.6535, 98.5473, 6.30214, 0.66", "-55.0671, 98.6429, 6.20006, 0.88", "-55.6586, 98.8194, 5.98297, 0.59", "-56.578, 99.1035, 5.53822, 0.37", "-57.2097, 99.2763, 5.16909, 0.37", "-57.6851, 99.3769, 4.85541, 0.96", "-58.442, 99.477, 4.29087, 1.18", "-59.7324, 99.5644, 3.30692, 0.59", "-60.2139, 99.5716, 2.94176, 0.44", "-60.7561, 99.5462, 2.5596, 0.29", "-61.3942, 99.487, 2.15228, 0.15", "-62.4346, 99.3419, 1.54545, 0.88", "-62.9221, 99.269, 1.31046, 1.18", "-63.6108, 99.1946, 1.03689, 0.44", "-64.2613, 99.1701, 0.813512, 0.37", "-64.8549, 99.1883, 0.654033, 0.96", "-65.8272, 99.2959, 0.496606, 1.25", "-66.8536, 99.5048, 0.452607, 0.44", "-67.5066, 99.6884, 0.490809, 0.44", "-68.3351, 99.9729, 0.61291, 1.03", "-69.0056, 100.247, 0.784045, 0.88", "-69.8745, 100.642, 1.05704, 0.74", "-71.1813, 101.301, 1.58223, 0.37", "-72.048, 101.755, 1.99616, 0.88", "-72.3235, 101.9, 2.14927, 1.18", "-73.026, 102.311, 2.5877, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "129.534, -47.7714, -111.783, 0.29", "129.069, -47.6002, -115.002, 0.29", "128.926, -47.4931, -115.839, 0.52", "128.872, -47.4392, -116.088, 0.52", "128.644, -47.1912, -116.885, 0.29", "128.406, -46.9237, -117.563, 0.96", "128.332, -46.8309, -117.769, 1.33", "128.229, -46.6459, -117.966, 1.33", "128.032, -46.2708, -118.37, 0.59", "127.89, -45.941, -118.791, 0.37", "127.839, -45.6753, -119.286, 0.22", "127.983, -45.4438, -120.02, 0.22", "128.114, -45.4027, -120.311, 0.59", "128.4, -45.3991, -120.766, 0.59", "128.68, -45.4326, -121.119, 0.37", "129.058, -45.501, -121.528, 0.96", "129.443, -45.577, -121.899, 0.96", "129.956, -45.6921, -122.372, 0.44", "130.216, -45.7526, -122.61, 0.52", "130.553, -45.8424, -122.919, 0.22", "130.781, -45.9052, -123.14, 0.74", "131.268, -46.0292, -123.637, 0.29", "131.485, -46.0747, -123.877, 0.29", "131.809, -46.121, -124.28, 0.88", "132.18, -46.1518, -124.78, 0.37", "132.783, -46.1518, -125.665, 0.96", "133.037, -46.1224, -126.077, 1.4", "133.25, -46.0569, -126.474, 0.59", "133.557, -45.8752, -127.144, 0.22", "133.795, -45.6295, -127.774, 0.22", "133.951, -45.3322, -128.33, 1.11", "134.018, -45.0149, -128.782, 1.33", "134.038, -44.6397, -129.252, 1.33", "134.031, -44.3315, -129.591, 1.33", "134.004, -44.0245, -129.885, 0.59", "133.942, -43.4839, -130.368, 0.22", "133.911, -42.8623, -130.906, 1.4", "133.929, -42.5678, -131.172, 1.69", "134.023, -42.004, -131.72, 0.29", "134.092, -41.7889, -131.987, 0.66", "134.237, -41.5508, -132.428, 0.66", "134.529, -41.4298, -133.165, 0.22", "134.775, -41.5875, -133.816, 1.03", "134.862, -41.7718, -134.147, 1.03", "134.984, -42.6044, -135.199, 0.74", "135.034, -43.1296, -135.791, 1.03", "135.068, -43.9725, -136.631, 1.11", "135.046, -44.8732, -137.432, 1.11", "134.97, -45.854, -138.22, 0.74", "134.847, -46.7963, -138.931, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "129.534, -47.7714, -111.783, 0.37", "131.727, -48.7182, -112.028, 0.37", "132.535, -48.8874, -111.995, 0.44", "133.045, -48.873, -111.858, 0.44", "134.664, -48.5954, -111.245, 0.74", "134.897, -48.5268, -111.154, 0.88", "135.703, -48.2307, -110.858, 0.37", "136.733, -47.732, -110.429, 0.37", "138.316, -46.8968, -109.75, 0.88", "138.866, -46.5879, -109.511, 1.03", "139.701, -46.1056, -109.158, 0.29", "140.495, -45.6145, -108.805, 0.29", "141.127, -45.1885, -108.508, 0.29", "142.326, -44.3778, -108.061, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-71.2796, -40.8229, -54.0344, 0.74", "-72.3819, -40.634, -54.1782, 0.74", "-73.2318, -40.5154, -54.277, 1.03", "-74.6216, -40.3683, -54.4932, 0.37", "-75.3433, -40.3201, -54.6444, 0.22", "-76.221, -40.2946, -54.8778, 1.4", "-76.8374, -40.2916, -55.0609, 1.55", "-77.6517, -40.3356, -55.3535, 1.55", "-79.0368, -40.4727, -55.927, 0.81", "-80.0322, -40.6185, -56.3717, 0.52", "-80.8705, -40.7812, -56.7585, 0.88", "-81.8208, -40.9839, -57.213, 0.22", "-82.5525, -41.1292, -57.5667, 0.74", "-83.2015, -41.2213, -57.8728, 0.74", "-83.7234, -41.2395, -58.15, 0.74", "-84.623, -41.2011, -58.6906, 0.44", "-85.3664, -41.1494, -59.1771, 0.22", "-85.7695, -41.1201, -59.4838, 0.81", "-86.3558, -41.0805, -59.9447, 0.81", "-88.5211, -40.9299, -61.65, 0.52", "-89.3681, -40.8832, -62.3012, 1.03", "-90.0583, -40.8797, -62.7994, 1.4", "-91.19, -40.9301, -63.5567, 1.18", "-91.8481, -40.9848, -63.9647, 0.66", "-92.8428, -41.0836, -64.5305, 1.18", "-93.4199, -41.1417, -64.8184, 1.55", "-94.7825, -41.2587, -65.5137, 0.52", "-95.3502, -41.3023, -65.8276, 1.18", "-96.1503, -41.3675, -66.3027, 1.18", "-97.5906, -41.4722, -67.2604, 0.29", "-98.1498, -41.5096, -67.6793, 0.29", "-98.8139, -41.545, -68.2116, 0.29", "-99.5636, -41.5653, -68.834, 0.59", "-100.244, -41.5767, -69.4055, 0.59", "-100.748, -41.5727, -69.8125, 0.44", "-101.943, -41.532, -70.7268, 1.03", "-102.545, -41.4845, -71.1959, 1.33", "-103.937, -41.3388, -72.2509, 0.29", "-104.546, -41.2614, -72.6833, 0.29", "-105.098, -41.1822, -73.0465, 0.96", "-105.827, -41.0738, -73.4717, 0.96", "-108.213, -40.6772, -74.5402, 0.29", "-108.663, -40.588, -74.6773, 0.29", "-109.43, -40.4379, -74.7985, 1.03", "-110.171, -40.3061, -74.8256, 1.33", "-111.069, -40.1601, -74.7577, 0.74", "-112.283, -39.9665, -74.5456, 0.37", "-113.713, -39.7463, -74.1604, 0.29", "-114.56, -39.6236, -73.9455, 0.22", "-115.465, -39.5087, -73.7193, 0.22", "-116.391, -39.3781, -73.492, 0.52", "-117.071, -39.2727, -73.3314, 0.96", "-117.665, -39.1748, -73.2092, 1.18", "-118.272, -39.0861, -73.0954, 1.18", "-119.13, -38.9377, -72.9387, 0.74", "-119.915, -38.8058, -72.7892, 0.22", "-120.308, -38.7451, -72.7024, 0.44", "-120.827, -38.6642, -72.5616, 0.44", "-121.471, -38.5397, -72.3689, 0.22", "-122.128, -38.383, -72.1532, 0.22", "-122.57, -38.2567, -72.0001, 0.88", "-123.048, -38.1098, -71.8217, 1.25", "-123.277, -38.0209, -71.7275, 1.25", "-124.333, -37.5194, -71.2564, 0.22", "-124.873, -37.218, -71.0059, 0.22", "-125.426, -36.8701, -70.7462, 0.88", "-125.891, -36.5412, -70.527, 1.25", "-126.582, -35.998, -70.1988, 0.22", "-127.398, -35.2996, -69.808, 0.22", "-128.05, -34.6894, -69.5033, 0.88", "-128.433, -34.2943, -69.3247, 0.88", "-128.772, -33.9044, -69.1372, 0.37", "-129.254, -33.2666, -68.8085, 0.15", "-129.681, -32.6103, -68.4584, 0.96", "-129.967, -32.1124, -68.1857, 1.18", "-130.647, -30.8431, -67.4006, 0.22", "-131.252, -29.6999, -66.6123, 0.81", "-131.55, -29.1016, -66.178, 0.74", "-131.902, -28.3165, -65.5792, 0.29", "-132.014, -28.047, -65.3645, 0.29", "-132.309, -27.3005, -64.7442, 0.52", "-132.445, -26.9286, -64.4345, 0.66", "-132.687, -26.1945, -63.9312, 0.22", "-132.797, -25.8051, -63.7106, 0.22", "-132.933, -25.1058, -63.3949, 0.81", "-132.982, -24.6914, -63.265, 1.11", "-133.009, -24.0286, -63.1644, 1.11", "-132.996, -22.9973, -63.1392, 0.22", "-132.974, -22.4392, -63.1891, 0.59", "-132.963, -22.0945, -63.2363, 0.59", "-132.952, -21.3988, -63.3419, 0.29", "-132.993, -20.3195, -63.5234, 0.22", "-133.068, -19.247, -63.7254, 0.88", "-133.177, -18.302, -63.8814, 1.11", "-133.388, -16.8275, -64.0658, 0.22", "-133.493, -16.154, -64.1292, 0.52", "-133.697, -15.0894, -64.2283, 0.22", "-133.979, -13.8953, -64.3469, 0.22", "-134.304, -12.69, -64.4743, 0.66", "-134.593, -11.71, -64.6076, 0.66", "-134.945, -10.6386, -64.8273, 0.88", "-135.378, -9.38153, -65.1379, 0.66", "-135.67, -8.57816, -65.3575, 0.44", "-135.96, -7.85909, -65.5806, 0.66", "-136.092, -7.53769, -65.7054, 0.66", "-136.698, -6.18026, -66.321, 0.22", "-137.152, -5.22078, -66.772, 0.22", "-137.357, -4.74016, -66.9715, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-71.2796, -40.8229, -54.0344, 0.44", "-72.2923, -42.0976, -54.2664, 0.44", "-73.0669, -43.0924, -54.5046, 0.29", "-73.4352, -43.5619, -54.6504, 0.66", "-73.8244, -44.0394, -54.8472, 0.66", "-74.5304, -44.8699, -55.307, 0.29", "-74.8992, -45.2798, -55.5645, 0.59", "-75.4933, -45.9584, -56.0581, 0.37", "-76.175, -46.7292, -56.6975, 1.18", "-76.766, -47.4443, -57.3437, 1.62", "-77.3421, -48.2956, -58.2211, 1.62", "-78.031, -49.6407, -59.7998, 0.29", "-78.2648, -50.2473, -60.5708, 0.29", "-78.3798, -50.6574, -61.1096, 0.66", "-78.5711, -51.504, -62.1846, 0.52", "-78.9142, -53.1788, -64.1608, 1.18", "-79.1369, -54.3634, -65.4421, 1.77", "-79.2752, -55.0708, -66.1735, 1.77", "-79.8373, -56.91, -68.0362, 0.29", "-80.1305, -57.6574, -68.7217, 0.29", "-80.4691, -58.4323, -69.3646, 0.29", "-80.97, -59.6143, -70.2799, 1.62", "-81.2485, -60.3933, -70.8899, 1.69", "-82.0863, -63.5852, -73.4997, 0.29", "-82.2414, -64.5674, -74.3378, 0.29", "-82.2851, -65.3698, -75.0531, 0.29", "-82.1857, -67.154, -76.6622, 1.25", "-81.9109, -68.5489, -77.9368, 0.66", "-81.4892, -69.6621, -78.9253, 0.29", "-81.0455, -70.3969, -79.5378, 1.03", "-80.6397, -70.9697, -80.0423, 1.03", "-80.1263, -71.6501, -80.6105, 0.44", "-79.3884, -72.5397, -81.2828, 0.29", "-78.9298, -73.0811, -81.677, 0.88", "-78.6467, -73.4295, -81.9214, 1.33", "-77.2393, -75.486, -83.373, 0.29", "-76.8546, -76.2108, -83.8544, 0.96", "-76.6805, -76.6597, -84.132, 0.81", "-76.4634, -77.5158, -84.6443, 0.37", "-76.267, -78.6273, -85.3138, 0.66", "-76.0728, -80.0436, -86.1659, 0.52", "-75.9749, -80.9288, -86.7031, 0.88", "-75.9031, -81.5933, -87.1683, 0.88", "-75.6563, -83.6, -88.9543, 0.44", "-75.5877, -84.2774, -89.6832, 0.37", "-75.4951, -85.1956, -90.8123, 0.29", "-75.3935, -85.8596, -91.7044, 0.96", "-75.2138, -86.8668, -93.1612, 1.03", "-74.8408, -88.8245, -96.0458, 0.74", "-74.6205, -89.965, -97.6757, 1.33", "-74.4452, -90.9223, -98.9346, 1.11", "-74.2961, -91.8435, -100.007, 0.44", "-74.1981, -92.5215, -100.658, 0.81", "-74.0595, -93.389, -101.306, 0.88", "-73.7853, -94.9056, -102.202, 0.22", "-73.5731, -95.8482, -102.769, 0.22", "-73.47, -96.3392, -103.097, 0.59", "-73.3557, -96.9864, -103.568, 0.59", "-73.0558, -98.7319, -104.948, 0.37", "-72.8854, -99.6898, -105.824, 0.59", "-72.6524, -100.998, -107.12, 0.44", "-72.5435, -101.661, -107.876, 0.74", "-72.4846, -102.122, -108.435, 0.74", "-72.4333, -102.937, -109.437, 0.37", "-72.4494, -104.316, -111.345, 0.96", "-72.4838, -104.892, -112.255, 0.88", "-72.7219, -106.559, -115.129, 0.66", "-72.8329, -107.143, -116.205, 0.96", "-72.9617, -107.684, -117.241, 0.96", "-73.535, -109.714, -121.156, 0.66", "-73.9859, -111.247, -123.933, 0.66", "-74.522, -113.119, -127.108, 0.44", "-74.838, -114.31, -128.869, 0.74", "-74.9909, -114.961, -129.701, 0.37", "-75.1534, -115.757, -130.521, 0.81", "-75.4463, -117.299, -131.573, 0.22", "-75.568, -118.06, -131.943, 0.81", "-75.7196, -119.562, -132.42, 0.22", "-75.875, -121.435, -132.858, 0.22", "-75.9329, -122.274, -133.046, 0.88", "-75.9841, -122.906, -133.195, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-60.3761, -50.8807, -20.1042, 0.96", "-62.1228, -51.8987, -21.3818, 0.96", "-63.3095, -52.5311, -22.0283, 0.22", "-63.9173, -52.8551, -22.3595, 0.52", "-64.3956, -53.11, -22.6201, 0.66", "-65.1102, -53.4909, -23.0094, 0.44", "-65.9197, -53.9223, -23.4505, 1.33", "-67.0992, -54.3231, -23.7787, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-60.3761, -50.8807, -20.1042, 0.37", "-61.723, -49.7667, -19.6637, 0.37", "-62.1925, -49.4055, -19.5002, 0.37", "-62.9802, -48.7995, -19.226, 0.22", "-63.4057, -48.4721, -19.0779, 1.03", "-63.8426, -48.1359, -18.9258, 1.77", "-64.3635, -47.7353, -18.7445, 2.14", "-64.711, -47.5095, -18.6754, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "38.2591, -70.5026, -48.871, 0.44", "39.2706, -70.2234, -48.8041, 0.44", "39.8967, -69.982, -48.761, 0.22", "40.4775, -69.6401, -48.7662, 0.22", "41.1457, -69.1838, -48.8516, 0.44", "41.3479, -69.0248, -48.9113, 0.81", "41.6725, -68.7515, -49.0308, 0.81", "41.955, -68.4752, -49.228, 0.37", "42.4771, -67.8548, -49.7881, 0.44", "42.7007, -67.5141, -50.2594, 0.59", "42.981, -67.0016, -51.1138, 0.15", "43.1549, -66.6692, -51.7503, 0.29", "43.4697, -66.0824, -52.996, 1.18", "43.6447, -65.772, -53.7171, 1.18", "44.3771, -64.5856, -56.5929, 0.74", "44.517, -64.3655, -57.1047, 0.74", "44.7136, -64.0758, -57.7543, 0.96", "44.8958, -63.8185, -58.2846, 0.96", "45.2304, -63.3639, -59.0489, 0.52", "45.6656, -62.7611, -59.8219, 0.29", "46.0839, -62.1997, -60.3458, 0.29", "46.6311, -61.4564, -60.971, 1.33", "46.905, -61.0846, -61.25, 1.33", "47.4629, -60.3208, -61.7413, 0.44", "48.0446, -59.5259, -62.1603, 0.37", "48.5227, -58.8725, -62.4263, 0.37", "48.7467, -58.5821, -62.5104, 0.37", "49.1645, -58.0644, -62.6085, 0.22", "50.0586, -57.0099, -62.7584, 1.55", "50.4451, -56.5872, -62.7966, 1.77", "51.352, -55.6022, -62.8861, 0.37", "51.6556, -55.226, -62.9181, 0.44", "51.8695, -54.9134, -62.9475, 0.44", "52.0784, -54.5654, -62.9888, 0.44", "52.5494, -53.7423, -63.1153, 0.29", "52.8555, -53.1848, -63.2241, 0.22", "53.2051, -52.5425, -63.3665, 0.22", "53.8159, -51.4236, -63.6065, 1.18", "54.2001, -50.715, -63.739, 1.4", "54.3385, -50.4649, -63.7782, 1.62", "54.5134, -50.1634, -63.8255, 1.62", "54.9801, -49.4915, -63.9694, 0.96", "55.3569, -49.0184, -64.0909, 0.59", "55.9261, -48.3491, -64.2866, 0.52", "56.5282, -47.6546, -64.4929, 0.37", "57.0051, -47.1261, -64.6592, 1.03", "58.0895, -46.0481, -65.0349, 0.22", "58.4796, -45.7224, -65.1601, 0.66", "58.7791, -45.5237, -65.2427, 0.66", "59.5081, -45.2174, -65.3941, 0.29", "60.074, -45.1718, -65.439, 0.29", "60.8378, -45.382, -65.5163, 0.29", "61.6683, -45.8898, -65.6571, 1.33", "62.0431, -46.2259, -65.8077, 1.47", "62.6246, -46.8485, -66.1724, 0.74", "63.0823, -47.3712, -66.5483, 0.44", "64.231, -48.6052, -67.6564, 0.96", "64.5738, -48.9283, -68.0196, 0.74", "65.4519, -49.6554, -68.9823, 0.29", "65.9428, -49.9854, -69.4732, 0.52", "66.5723, -50.3234, -70.0118, 0.29", "67.2401, -50.6123, -70.4673, 0.66", "67.6805, -50.7596, -70.6834, 0.66", "68.2978, -50.9016, -70.9772, 0.29", "69.3587, -51.0785, -71.4592, 0.96", "70.0355, -51.1999, -71.7794, 0.29", "70.7457, -51.3268, -72.1385, 1.11", "71.8645, -51.5096, -72.7235, 0.37", "73.0001, -51.6585, -73.3258, 0.96", "73.7756, -51.7239, -73.7411, 0.52", "74.4825, -51.7644, -74.1225, 0.96", "74.749, -51.7733, -74.2594, 0.96", "75.7715, -51.8144, -74.7582, 0.29", "76.2517, -51.8401, -74.9596, 0.81", "76.6166, -51.8573, -75.0776, 0.81", "77.438, -51.8575, -75.3117, 0.29", "78.0913, -51.8231, -75.4757, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "38.2591, -70.5026, -48.871, 0.74", "39.1291, -72.0336, -48.5591, 0.74", "39.9156, -73.1319, -48.2434, 0.81", "40.8375, -74.2153, -47.871, 0.81", "41.9387, -75.3302, -47.4509, 0.59", "42.8975, -76.1572, -47.1221, 0.37", "43.4894, -76.5868, -46.9262, 0.37", "44.7622, -77.3322, -46.4667, 0.88", "45.288, -77.572, -46.2985, 0.88", "45.9071, -77.8323, -46.1096, 0.88", "46.7336, -78.2285, -45.8985, 0.29", "48.1335, -79.1211, -45.5862, 0.29", "48.8599, -79.7725, -45.4487, 1.03", "49.337, -80.2741, -45.3634, 1.33", "50.1468, -81.1432, -45.1999, 1.18", "51.1296, -82.1503, -44.9927, 1.03", "51.9238, -82.8789, -44.8313, 0.81", "53.2407, -83.8039, -44.5808, 0.37", "54.6699, -84.4991, -44.3055, 0.96", "55.5752, -84.8069, -44.1436, 1.18", "56.5564, -85.0168, -43.9581, 1.18", "57.4924, -85.1157, -43.7959, 0.88", "58.9327, -85.1382, -43.648, 0.44", "59.61, -85.099, -43.6785, 0.44", "60.8333, -84.9885, -43.9461, 0.37", "61.7929, -84.8933, -44.3362, 0.37", "63.1199, -84.7892, -45.1101, 0.66", "64.0792, -84.7637, -45.7862, 1.03", "65.276, -84.7322, -46.7727, 0.74", "66.0805, -84.7116, -47.5055, 0.52", "67.0787, -84.678, -48.5277, 0.44", "67.8738, -84.6937, -49.4139, 0.44", "68.6933, -84.7927, -50.2806, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.55074, 210.17, -29.0431, 0.29", "2.29106, 212.885, -29.6269, 0.29", "2.32993, 213.491, -29.7069, 0.29", "2.39715, 214.134, -29.7377, 0.66", "2.44279, 214.817, -29.6851, 0.88", "2.45481, 215.632, -29.5517, 0.88", "2.45666, 217.043, -29.0721, 0.52", "2.49715, 218.132, -28.3907, 0.66", "2.52414, 218.786, -27.7957, 0.81", "2.53806, 219.732, -26.7581, 0.37", "2.51301, 220.4, -25.9517, 0.52", "2.38142, 221.756, -24.1988, 0.74", "2.21018, 222.701, -22.9457, 1.03", "1.80806, 224.318, -20.7212, 1.03", "1.59694, 225.076, -19.6842, 0.74", "1.42929, 225.707, -18.8665, 0.44", "1.26938, 226.335, -18.0896, 0.44", "0.991358, 227.374, -16.9142, 0.44", "0.554002, 228.982, -15.2237, 0.88", "0.317635, 229.888, -14.3553, 1.18", "0.180495, 230.534, -13.7326, 0.52", "0.0723927, 231.25, -13.0497, 0.52", "-0.0153981, 232.273, -12.1556, 0.59", "-0.0453482, 233.005, -11.6199, 0.81", "-0.102083, 233.939, -11.1249, 0.29", "-0.18885, 234.5, -10.8525, 0.29", "-0.387367, 235.146, -10.5096, 0.66", "-0.643066, 235.702, -10.0923, 0.66", "-0.861897, 236.152, -9.65691, 0.37", "-1.04573, 236.586, -9.1606, 0.66", "-1.24856, 237.189, -8.46673, 0.81", "-1.39075, 237.77, -7.85321, 0.74", "-1.65653, 239.595, -6.08759, 0.44", "-1.68144, 240.399, -5.40383, 0.37", "-1.61469, 241.135, -4.9019, 0.37", "-1.41932, 242.147, -4.39244, 0.29", "-1.20811, 242.921, -4.09068, 0.15", "-1.00786, 243.526, -3.93721, 0.44", "-0.889302, 243.848, -3.92477, 0.44", "-0.78648, 244.144, -3.91639, 0.44", "-0.248082, 246.1, -3.65316, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.55074, 210.17, -29.0431, 0.74", "2.48233, 211.107, -29.5039, 0.74", "2.38714, 211.934, -29.8698, 0.74", "2.18587, 213.27, -30.4151, 0.96", "2.00589, 214.248, -30.7428, 0.96", "1.75123, 215.408, -31.04, 0.74", "1.35572, 217.021, -31.3614, 0.59", "1.14091, 217.81, -31.4456, 0.81", "0.866246, 218.856, -31.4819, 0.81", "0.551035, 220.185, -31.4403, 0.81", "0.288347, 221.647, -31.3321, 0.96", "0.174007, 222.636, -31.237, 0.96", "0.110625, 224.299, -31.0932, 0.74", "0.152757, 225.21, -31.0313, 1.03", "0.241391, 225.865, -31.0079, 1.03", "0.465058, 226.974, -31.0395, 1.03", "0.59752, 227.555, -31.0811, 1.03", "0.761687, 228.436, -31.1743, 1.03", "0.832756, 229.194, -31.2491, 1.03", "0.835275, 230.075, -31.3386, 0.96", "0.735736, 231.05, -31.4298, 0.74", "0.587625, 231.848, -31.5079, 0.74", "0.357473, 232.787, -31.5872, 0.88", "-0.00153828, 233.993, -31.6654, 1.11", "-0.309116, 234.902, -31.7198, 1.11", "-0.833977, 236.377, -31.7953, 0.96", "-1.1092, 237.184, -31.8265, 0.96", "-1.36001, 237.974, -31.8398, 0.96", "-1.57063, 238.649, -31.8337, 0.96", "-1.84285, 239.506, -31.8027, 0.81", "-2.15736, 240.545, -31.7428, 0.96", "-2.36815, 241.322, -31.6725, 0.96", "-2.5887, 242.237, -31.5407, 0.96", "-2.71851, 242.924, -31.4184, 1.25", "-2.82957, 243.742, -31.224, 1.25", "-2.92045, 244.936, -30.871, 1.11", "-2.9302, 245.948, -30.5707, 0.88", "-2.85014, 246.997, -30.2792, 0.74", "-2.73162, 247.709, -30.1199, 1.18", "-2.52184, 248.552, -29.9642, 1.18", "-2.37278, 249.08, -29.8688, 1.18", "-2.11264, 250.039, -29.6878, 0.96", "-1.95362, 250.749, -29.5835, 0.81", "-1.82944, 251.532, -29.4982, 0.81", "-1.73814, 252.434, -29.4073, 0.81", "-1.66494, 253.57, -29.3088, 0.81", "-1.64244, 254.477, -29.224, 1.11", "-1.64898, 255.444, -29.1422, 1.11", "-1.68906, 256.468, -29.1354, 0.96", "-1.76087, 257.532, -29.2113, 0.96", "-1.90442, 258.97, -29.4454, 0.88", "-2.06912, 260.274, -29.7775, 0.88", "-2.23377, 261.371, -30.1378, 0.88", "-2.50632, 263.066, -30.7851, 0.88", "-2.71645, 264.331, -31.3001, 1.11", "-2.89244, 265.376, -31.747, 1.11", "-3.04605, 266.343, -32.115, 1.11", "-3.16929, 267.457, -32.4438, 0.81", "-3.24842, 269.196, -32.794, 1.11", "-3.22312, 269.932, -32.8657, 1.11", "-3.08941, 271.152, -32.9392, 1.11", "-2.79947, 272.987, -33.0017, 0.96", "-2.53841, 274.387, -33.0291, 0.96", "-2.35967, 275.329, -33.0768, 0.96", "-2.21971, 276.126, -33.168, 0.96", "-1.94783, 277.61, -33.4069, 0.81", "-1.74823, 278.595, -33.6068, 0.81", "-1.51711, 279.738, -33.8829, 0.66", "-1.17346, 281.501, -34.3386, 0.66", "-0.916257, 282.952, -34.7093, 0.66", "-0.674367, 284.745, -35.1565, 1.03", "-0.604512, 285.575, -35.3427, 1.03", "-0.547846, 287.188, -35.7306, 0.81", "-0.565309, 288.164, -35.9737, 0.81", "-0.634153, 289.18, -36.2243, 0.96", "-0.7908, 290.672, -36.6078, 0.66", "-0.934665, 291.749, -36.8996, 0.88", "-1.08511, 292.995, -37.2215, 0.88", "-1.2127, 294.343, -37.5288, 0.88", "-1.30996, 295.868, -37.8182, 1.03", "-1.32057, 296.708, -37.9768, 1.03", "-1.29306, 297.561, -38.1343, 1.03", "-1.2115, 299.047, -38.3795, 0.81", "-1.13288, 300.46, -38.5615, 0.81", "-1.10039, 301.402, -38.6704, 0.81", "-1.09215, 303.345, -38.8616, 0.81", "-1.16339, 304.784, -38.9886, 1.25", "-1.22098, 305.297, -39.0364, 1.33", "-1.35776, 306.154, -39.1331, 1.33", "-1.5365, 307.124, -39.2626, 1.18", "-1.69337, 307.945, -39.396, 0.74", "-1.93627, 309.134, -39.598, 0.66", "-2.11872, 310.08, -39.7921, 0.96", "-2.25694, 310.938, -39.9957, 0.96", "-2.33814, 311.69, -40.1718, 0.66", "-2.38458, 312.699, -40.3593, 0.66", "-2.40061, 313.989, -40.5299, 0.66", "-2.3974, 315.006, -40.6115, 0.96", "-2.41445, 315.807, -40.6612, 0.96", "-2.47387, 316.667, -40.7378, 0.74", "-2.65825, 318.573, -40.9662, 0.74", "-2.72944, 319.191, -41.0507, 0.88", "-2.92751, 320.794, -41.3107, 0.96", "-3.12058, 322.298, -41.5646, 0.81", "-3.32098, 323.842, -41.8418, 0.66", "-3.4749, 325.192, -42.1054, 0.81", "-3.57344, 326.266, -42.2991, 0.96", "-3.66723, 327.886, -42.5545, 0.74", "-3.69941, 328.697, -42.6522, 1.03", "-3.73668, 329.741, -42.6995, 1.03", "-3.80908, 331.252, -42.6967, 1.33", "-3.87862, 332.218, -42.6849, 1.55", "-4.01936, 333.798, -42.6618, 0.81", "-4.14728, 334.874, -42.6492, 0.66", "-4.30816, 335.96, -42.6576, 0.66", "-4.44734, 336.746, -42.6895, 0.66", "-4.67109, 337.941, -42.7872, 0.66", "-4.83025, 338.935, -42.9013, 0.66", "-4.96261, 340.014, -43.0216, 1.25", "-5.00127, 340.498, -43.0817, 1.03", "-5.04668, 341.808, -43.2678, 0.81", "-5.04658, 342.978, -43.4246, 0.81", "-5.01196, 344.265, -43.5987, 0.66", "-4.94566, 345.351, -43.7363, 0.66", "-4.8483, 346.426, -43.8594, 0.96", "-4.74815, 347.372, -43.9559, 1.4", "-4.66096, 348.132, -44.0234, 1.4", "-4.6056, 348.693, -44.071, 1.4", "-4.54069, 349.695, -44.1541, 0.88", "-4.47272, 350.935, -44.2618, 0.74", "-4.4235, 351.747, -44.3398, 0.74", "-4.34475, 353.092, -44.4799, 0.74", "-4.26771, 354.23, -44.6099, 0.66", "-4.16696, 355.509, -44.7723, 0.66", "-4.01463, 357.247, -45.0176, 0.66", "-3.8823, 358.51, -45.2008, 0.74", "-3.78201, 359.292, -45.318, 0.74", "-3.63924, 360.218, -45.4615, 0.96", "-3.49785, 361.043, -45.5856, 1.11", "-3.39224, 361.663, -45.6802, 1.11", "-3.24441, 362.724, -45.8408, 0.74", "-3.13446, 363.641, -45.989, 0.59", "-3.00181, 364.679, -46.1575, 0.59", "-2.85708, 365.665, -46.3308, 0.88", "-2.78661, 366.151, -46.4254, 1.25", "-2.68897, 366.878, -46.5812, 1.4", "-2.62959, 367.387, -46.7002, 1.4", "-2.56713, 368.156, -46.886, 0.88", "-2.52364, 369.081, -47.115, 0.66", "-2.5121, 370.293, -47.4106, 0.66", "-2.52182, 371.198, -47.6096, 0.66", "-2.54011, 371.808, -47.7329, 0.52", "-2.58913, 372.973, -47.9501, 0.81", "-2.63726, 373.877, -48.1186, 0.81", "-2.67941, 374.765, -48.2744, 0.66", "-2.70551, 376.111, -48.4988, 0.59", "-2.70189, 376.854, -48.6126, 0.88", "-2.67878, 377.736, -48.7451, 1.11", "-2.63875, 378.614, -48.8706, 1.11", "-2.59571, 379.315, -48.9676, 1.11", "-2.54483, 379.957, -49.0545, 0.88", "-2.46808, 380.733, -49.1734, 0.52", "-2.37981, 381.514, -49.2942, 0.81", "-2.28822, 382.308, -49.4021, 0.81", "-2.23911, 382.777, -49.449, 0.81", "-2.16074, 383.618, -49.5232, 0.96", "-2.08215, 384.665, -49.605, 0.59", "-2.03002, 385.415, -49.6596, 0.44", "-1.95138, 386.509, -49.722, 0.44", "-1.88726, 387.342, -49.7608, 1.11", "-1.86092, 387.72, -49.7746, 1.4", "-1.83209, 388.536, -49.7824, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.55253, 139.614, -28.1257, 0.29", "-10.0732, 140.55, -28.0722, 0.29", "-10.5398, 141.338, -28.0985, 0.52", "-10.8858, 141.893, -28.1422, 0.52", "-11.5297, 142.931, -28.2526, 0.66", "-11.7839, 143.348, -28.3063, 0.66", "-12.0143, 143.778, -28.341, 0.37", "-12.4936, 145.0, -28.3605, 0.29", "-12.598, 145.451, -28.3491, 0.59", "-12.6626, 146.005, -28.3253, 0.81", "-12.6688, 146.346, -28.2964, 0.81", "-12.6186, 147.797, -28.1177, 0.74", "-12.564, 148.578, -27.9879, 0.74", "-12.4819, 149.548, -27.7741, 0.44", "-12.4518, 150.194, -27.6369, 0.29", "-12.4544, 150.841, -27.5155, 0.29", "-12.4823, 151.273, -27.4524, 0.52", "-12.5527, 151.773, -27.4248, 0.52", "-12.6602, 152.377, -27.4251, 0.52", "-12.8659, 153.337, -27.4606, 0.74", "-13.009, 153.92, -27.5029, 0.96", "-13.1164, 154.343, -27.5482, 0.96", "-13.2632, 154.946, -27.6295, 0.59", "-13.4293, 155.674, -27.7508, 0.37", "-13.5914, 156.343, -27.9276, 0.22", "-13.693, 156.783, -28.0801, 0.22", "-13.7732, 157.195, -28.2358, 0.74", "-13.8816, 157.794, -28.4755, 1.03", "-13.939, 158.113, -28.6, 1.03", "-14.1509, 159.322, -29.0532, 0.44", "-14.29, 160.156, -29.3739, 0.44", "-14.3987, 160.914, -29.64, 0.37", "-14.489, 161.605, -29.8636, 0.37", "-14.5615, 162.265, -30.0574, 0.37", "-14.6069, 162.967, -30.2363, 0.37", "-14.6093, 163.648, -30.3959, 0.37", "-14.5643, 164.718, -30.7008, 0.88", "-14.5092, 165.255, -30.8749, 1.18", "-14.4495, 165.651, -31.0147, 1.18", "-14.3264, 166.285, -31.2547, 0.74", "-14.1446, 167.103, -31.566, 0.52", "-13.9726, 167.868, -31.8472, 0.44", "-13.7719, 168.718, -32.161, 0.37", "-13.6573, 169.169, -32.321, 0.37", "-13.46, 169.871, -32.5545, 0.37", "-13.1923, 170.719, -32.8106, 0.59", "-13.0036, 171.251, -32.9496, 1.03", "-12.8133, 171.748, -33.0705, 1.03", "-12.6075, 172.286, -33.1915, 0.96", "-12.3477, 173.037, -33.3292, 0.29", "-12.1574, 173.735, -33.4497, 0.29", "-12.0833, 174.134, -33.5169, 0.52", "-12.041, 174.517, -33.5712, 0.52", "-12.0223, 174.979, -33.6259, 0.29", "-12.037, 175.621, -33.6947, 0.52", "-12.0681, 176.399, -33.764, 0.66", "-12.0528, 177.067, -33.8227, 0.66", "-11.9923, 177.691, -33.8946, 0.52", "-11.9308, 178.115, -33.9609, 0.81", "-11.8604, 178.586, -34.0679, 1.11", "-11.7677, 179.325, -34.2728, 0.15", "-11.6875, 180.034, -34.4865, 0.15", "-11.6352, 180.522, -34.6533, 0.52", "-11.553, 181.346, -34.9689, 0.59", "-11.4661, 182.261, -35.3415, 0.29", "-11.4108, 182.987, -35.6384, 0.29", "-11.3889, 183.59, -35.892, 0.96", "-11.3837, 183.924, -36.0252, 0.96", "-11.3565, 184.473, -36.2238, 0.59", "-11.315, 184.976, -36.4052, 0.22", "-11.2477, 185.692, -36.6452, 0.22", "-11.2018, 186.3, -36.8509, 0.88", "-11.1901, 186.655, -36.9634, 0.88", "-11.1933, 187.101, -37.09, 0.88", "-11.2335, 187.855, -37.2849, 0.29", "-11.315, 188.609, -37.4503, 0.22", "-11.3666, 188.943, -37.4987, 0.22", "-11.5002, 189.668, -37.5353, 0.81", "-11.5585, 190.042, -37.5296, 1.11", "-11.5813, 190.261, -37.5187, 1.11", "-11.5913, 190.889, -37.5216, 0.88", "-11.5601, 191.495, -37.5814, 0.59", "-11.4912, 192.188, -37.6976, 0.29", "-11.3647, 193.158, -37.9071, 0.29", "-11.2679, 193.937, -38.0874, 0.74", "-11.1593, 195.143, -38.4027, 0.52", "-11.1268, 195.888, -38.6339, 1.03", "-11.1402, 196.472, -38.8402, 1.03", "-11.1837, 196.838, -38.9685, 0.74", "-11.3918, 197.626, -39.2228, 0.44", "-11.69, 198.45, -39.4232, 0.88", "-11.8971, 198.982, -39.5127, 1.18", "-12.0014, 199.246, -39.5618, 1.18", "-12.2221, 199.847, -39.6834, 0.59", "-12.5032, 200.737, -39.8834, 0.29", "-12.7331, 201.659, -40.102, 0.81", "-12.9085, 202.547, -40.2978, 0.52", "-13.0143, 203.129, -40.4212, 0.52", "-13.1183, 203.702, -40.5453, 0.74", "-13.2519, 204.418, -40.689, 0.74", "-13.4047, 205.218, -40.8119, 0.22", "-13.4792, 205.511, -40.8489, 0.22", "-13.6158, 205.968, -40.8908, 0.52", "-13.7083, 206.293, -40.9104, 0.52", "-13.8798, 206.919, -40.96, 0.29", "-14.0154, 207.451, -41.0115, 0.29", "-14.1716, 208.106, -41.0887, 1.03", "-14.2841, 208.66, -41.1637, 1.03", "-14.3458, 209.045, -41.2114, 1.03", "-14.405, 209.611, -41.2717, 0.52", "-14.4199, 210.084, -41.3192, 0.29", "-14.4109, 210.572, -41.3504, 0.59", "-14.3806, 210.903, -41.3564, 0.59", "-14.2794, 211.591, -41.3653, 0.22", "-14.1489, 212.284, -41.3788, 0.81", "-14.0444, 212.735, -41.3966, 1.03", "-14.0033, 212.893, -41.408, 1.03", "-13.835, 213.558, -41.4668, 0.59", "-13.6904, 214.218, -41.5231, 0.37", "-13.6272, 214.592, -41.5423, 0.37", "-13.5805, 215.101, -41.5398, 0.66", "-13.5688, 215.428, -41.5225, 0.66", "-13.6044, 216.357, -41.4366, 0.29", "-13.6553, 216.812, -41.3834, 0.29", "-13.7654, 217.526, -41.2916, 0.74", "-13.8529, 218.07, -41.2211, 0.74", "-13.9439, 218.661, -41.143, 0.74", "-14.0446, 219.462, -41.041, 0.29", "-14.108, 220.175, -40.9585, 0.29", "-14.1248, 221.207, -40.8683, 1.33", "-14.0827, 221.722, -40.8333, 1.33", "-13.9678, 222.448, -40.8068, 1.11", "-13.8227, 223.059, -40.8042, 0.59", "-13.6133, 223.7, -40.8471, 0.44", "-13.149, 224.958, -41.0584, 0.29", "-12.7931, 225.832, -41.3161, 0.74", "-12.6003, 226.329, -41.5209, 0.81", "-12.4567, 226.743, -41.7381, 0.44", "-12.2294, 227.537, -42.2209, 0.22", "-12.0736, 228.223, -42.6812, 0.81", "-12.0206, 228.532, -42.9104, 0.81", "-11.94, 229.159, -43.3894, 0.22", "-11.8764, 229.658, -43.7488, 0.22", "-11.8071, 230.27, -44.1731, 0.81", "-11.7849, 230.446, -44.2832, 0.81", "-11.6842, 231.063, -44.6508, 0.29", "-11.5855, 231.571, -44.9484, 0.88", "-11.4425, 232.135, -45.2741, 0.88", "-11.2006, 233.018, -45.7557, 0.22", "-11.0404, 233.643, -46.0588, 0.74", "-10.9931, 233.847, -46.1429, 0.88", "-10.8731, 234.57, -46.3918, 0.15", "-10.7949, 235.172, -46.5698, 0.52", "-10.7427, 235.704, -46.7089, 0.22", "-10.716, 236.235, -46.8473, 0.66", "-10.7186, 236.5, -46.9229, 0.88", "-10.7995, 237.577, -47.2382, 0.22", "-10.8447, 237.904, -47.3318, 0.59", "-10.9313, 238.369, -47.4649, 0.44", "-11.0582, 239.014, -47.6299, 0.22", "-11.1318, 239.409, -47.715, 0.37", "-11.2549, 240.113, -47.8256, 0.15", "-11.3647, 240.809, -47.8841, 0.81", "-11.4229, 241.216, -47.9037, 1.11", "-11.4978, 241.854, -47.9149, 1.03", "-11.549, 242.455, -47.9122, 0.29", "-11.5938, 243.049, -47.915, 0.29", "-11.6404, 243.591, -47.92, 0.29", "-11.7347, 244.561, -47.9394, 0.22", "-11.7999, 245.152, -47.9553, 0.74", "-11.9653, 246.446, -48.0102, 0.22", "-12.0773, 247.22, -48.0419, 0.81", "-12.3271, 248.811, -48.1057, 0.22", "-12.3724, 249.089, -48.1169, 0.22", "-12.4647, 249.67, -48.1429, 0.81", "-12.4926, 249.884, -48.1537, 1.03", "-12.5416, 250.392, -48.1781, 0.22", "-12.5722, 250.875, -48.1878, 0.44", "-12.5895, 251.485, -48.1894, 0.22", "-12.5963, 251.95, -48.1883, 0.44", "-12.5951, 252.541, -48.1831, 0.22", "-12.5993, 253.124, -48.1687, 0.44", "-12.6151, 253.734, -48.1338, 0.59", "-12.6711, 254.377, -48.098, 0.29", "-12.8039, 255.207, -48.0676, 0.44", "-12.9926, 256.06, -48.0444, 0.44", "-13.2931, 257.234, -48.0318, 0.81", "-13.4766, 257.88, -48.063, 0.96", "-13.751, 258.732, -48.1661, 0.66", "-14.1811, 259.814, -48.3326, 0.29", "-14.3478, 260.159, -48.3987, 0.44", "-14.6531, 260.721, -48.5374, 0.15", "-15.1181, 261.507, -48.7854, 0.44", "-15.4433, 262.061, -48.9864, 0.44", "-15.7691, 262.658, -49.1908, 0.15", "-15.901, 262.877, -49.2805, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.55253, 139.614, -28.1257, 0.22", "-8.659, 141.174, -29.6452, 0.22", "-8.14008, 141.843, -30.3316, 0.22", "-7.63811, 142.49, -30.9956, 0.22", "-7.11327, 143.167, -31.6899, 0.22", "-6.69416, 143.707, -32.2442, 0.44", "-5.88855, 144.746, -33.3099, 0.74", "-5.26729, 145.536, -33.9795, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-73.026, 102.311, 2.5877, 0.29", "-74.0125, 101.983, 2.64476, 0.29", "-74.6077, 101.784, 2.67919, 0.29", "-75.4849, 101.492, 2.72994, 0.29", "-76.4511, 101.171, 2.78583, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-73.026, 102.311, 2.5877, 0.22", "-74.2662, 104.258, 2.64039, 0.22", "-74.9073, 105.265, 2.66763, 0.66", "-75.194, 105.715, 2.67981, 0.66", "-75.7348, 106.564, 2.70279, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-137.357, -4.74016, -66.9715, 0.22", "-137.353, -1.40926, -68.9267, 0.22", "-137.352, -0.604256, -69.3993, 0.22", "-137.35, 0.95038, -70.3118, 0.88", "-137.35, 1.45069, -70.6055, 0.66", "-137.349, 1.88184, -70.8585, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-137.357, -4.74016, -66.9715, 0.22", "-138.299, -4.10998, -66.903, 0.22", "-138.7, -3.90127, -66.9035, 0.44", "-139.486, -3.54758, -66.9421, 0.22", "-139.791, -3.42281, -66.9586, 0.59", "-140.611, -3.09059, -66.9852, 0.29", "-141.629, -2.67844, -67.0182, 0.29", "-142.182, -2.49567, -67.0556, 0.29", "-142.623, -2.37741, -67.1106, 0.59", "-143.258, -2.24906, -67.2313, 0.22", "-143.782, -2.15536, -67.3322, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-67.0992, -54.3231, -23.7787, 0.37", "-67.3827, -56.1629, -24.8383, 0.37", "-67.5493, -57.4535, -25.5548, 0.15", "-67.6439, -58.5469, -26.0923, 0.44", "-67.714, -59.4929, -26.5218, 0.44", "-67.805, -60.8381, -27.0977, 0.22", "-67.8899, -61.9911, -27.559, 1.03", "-67.926, -62.4454, -27.6962, 1.03", "-68.078, -64.0965, -28.0586, 0.29", "-68.21, -65.2155, -28.2491, 1.03", "-68.376, -66.2837, -28.3611, 1.03", "-68.5835, -67.3571, -28.4157, 0.29", "-68.8965, -68.8183, -28.418, 0.29", "-69.0864, -69.6408, -28.3744, 0.81", "-69.2969, -70.4452, -28.2901, 0.52", "-69.801, -72.2624, -28.0432, 0.29", "-70.2433, -73.7712, -27.8051, 0.74", "-70.5164, -74.6373, -27.6114, 1.03", "-71.1331, -76.4758, -27.1088, 0.22", "-71.429, -77.3066, -26.8384, 0.22", "-71.5965, -77.7341, -26.6728, 0.59", "-71.7324, -78.055, -26.5426, 0.59", "-72.5377, -79.9662, -25.7921, 0.59", "-72.9317, -80.9358, -25.5202, 0.37", "-73.5473, -82.452, -25.2195, 1.25", "-73.7667, -83.0145, -25.1339, 1.47", "-74.3464, -84.4825, -24.9708, 0.37", "-74.7574, -85.444, -24.9299, 1.03", "-75.5294, -87.1002, -25.0034, 0.29", "-75.8964, -87.8117, -25.0362, 0.44", "-76.125, -88.2771, -25.0219, 0.66", "-76.3456, -88.7719, -24.9711, 0.52", "-76.783, -89.7996, -24.729, 0.29", "-77.1517, -90.7538, -24.3712, 0.74", "-77.2727, -91.1531, -24.1422, 0.74", "-77.7567, -93.1087, -22.9489, 0.22", "-77.8472, -93.6079, -22.6401, 0.44", "-77.9112, -94.2227, -22.2265, 0.59", "-77.9969, -95.2651, -21.476, 0.37", "-78.1093, -96.4967, -20.5863, 0.74", "-78.2049, -97.1468, -20.1315, 0.74", "-78.4059, -98.0288, -19.5742, 0.29", "-78.807, -99.5493, -18.6992, 1.03", "-79.2481, -101.026, -17.9826, 0.22", "-79.4624, -101.622, -17.7348, 0.88", "-80.1722, -103.342, -17.1907, 0.29", "-80.6489, -104.401, -16.9075, 0.15", "-81.047, -105.188, -16.7575, 0.74", "-81.7102, -106.348, -16.6874, 1.03", "-82.2051, -107.156, -16.7167, 1.11", "-83.1845, -108.66, -16.8684, 0.22", "-83.4405, -109.043, -16.9362, 0.59", "-83.6371, -109.353, -17.0021, 0.59", "-84.6347, -111.003, -17.3901, 0.22", "-84.9446, -111.594, -17.5309, 0.74", "-85.2099, -112.264, -17.6431, 0.74", "-85.4856, -113.48, -17.6897, 0.22", "-85.591, -114.878, -17.6423, 0.59", "-85.5647, -115.442, -17.6114, 0.74", "-85.3645, -116.767, -17.5289, 0.22", "-85.0411, -118.371, -17.3756, 0.88", "-84.5695, -120.163, -17.1509, 0.15", "-84.3577, -120.78, -17.0411, 0.15", "-83.9621, -121.774, -16.7779, 0.74", "-83.6798, -122.449, -16.5899, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-67.0992, -54.3231, -23.7787, 0.29", "-68.1247, -53.5359, -22.8616, 0.29", "-69.0657, -52.9676, -22.0904, 0.29", "-70.0368, -52.4919, -21.2477, 0.29", "-70.5149, -52.2869, -20.8233, 0.29", "-71.5886, -51.8877, -19.8527, 0.52", "-72.297, -51.6828, -19.2279, 0.74", "-72.9835, -51.5631, -18.5913, 0.37", "-73.9086, -51.4927, -17.767, 0.66", "-74.2837, -51.502, -17.4674, 1.03", "-75.1611, -51.6204, -16.7911, 1.03", "-76.3596, -51.9381, -15.8768, 0.22", "-77.1012, -52.2098, -15.2997, 0.22", "-77.8228, -52.626, -14.647, 0.44", "-78.2581, -52.9542, -14.2101, 0.44", "-78.8812, -53.5222, -13.5032, 0.29", "-79.3992, -54.108, -12.8499, 1.11", "-79.6465, -54.4366, -12.5141, 1.25", "-80.6225, -55.9015, -11.1585, 0.66", "-81.1433, -56.7684, -10.4049, 0.22", "-81.4232, -57.2986, -9.97392, 0.22", "-81.7176, -57.9755, -9.4713, 0.22", "-81.9626, -58.6005, -9.07226, 0.81", "-82.1642, -59.1203, -8.78321, 0.81", "-82.4062, -59.7161, -8.52066, 0.29", "-82.8086, -60.6379, -8.13551, 0.88", "-83.518, -61.9776, -7.54254, 0.22", "-83.8453, -62.4515, -7.30692, 0.52", "-84.3889, -63.1047, -6.95531, 0.29", "-84.8224, -63.5396, -6.72025, 0.66", "-85.7347, -64.3094, -6.32276, 0.29", "-86.2112, -64.6783, -6.18531, 0.96", "-86.5133, -64.9045, -6.11964, 0.96", "-87.5703, -65.7191, -5.88199, 0.29", "-88.1882, -66.2338, -5.69874, 1.33", "-88.7714, -66.7361, -5.4714, 1.55", "-89.7389, -67.5492, -4.99324, 0.29", "-90.2168, -67.9392, -4.70352, 0.29", "-90.8533, -68.467, -4.24376, 0.52", "-91.6585, -69.0913, -3.62388, 0.96", "-92.1975, -69.5159, -3.14995, 0.44", "-92.8441, -70.0569, -2.48813, 0.29", "-93.6291, -70.7405, -1.53912, 0.88", "-94.1237, -71.2379, -0.899343, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-64.711, -47.5095, -18.6754, 0.29", "-65.7682, -48.5399, -19.1598, 0.29", "-66.8661, -49.7903, -19.2603, 0.29", "-67.781, -50.8366, -19.1276, 0.81", "-68.575, -51.6903, -18.877, 0.81", "-69.4334, -52.5282, -18.4219, 0.37", "-71.4162, -54.2418, -16.9301, 0.37", "-72.3028, -54.8472, -15.8877, 0.59", "-72.8994, -55.1654, -15.0914, 0.88", "-73.5775, -55.4658, -14.1309, 0.88", "-74.6853, -55.9191, -12.4753, 1.03", "-75.617, -56.3167, -11.0234, 1.03", "-76.7617, -56.9141, -9.09703, 0.59", "-77.4293, -57.4525, -7.74113, 0.37", "-78.0871, -58.3567, -6.03951, 0.37", "-78.5454, -59.3947, -4.55588, 0.66", "-78.8241, -60.3435, -3.50631, 0.96", "-79.2459, -62.2394, -1.73669, 1.03", "-79.5229, -63.7079, -0.473104, 0.44", "-79.7627, -64.8653, 0.557993, 0.44", "-79.9198, -65.5909, 1.19849, 0.66", "-80.1075, -66.3785, 1.91967, 0.88", "-80.2239, -67.2522, 3.02642, 0.88", "-80.1723, -68.2239, 4.59697, 0.44", "-79.9534, -69.0122, 6.13942, 0.74", "-79.6093, -69.6673, 7.50082, 0.74", "-79.0294, -70.3989, 9.03744, 1.03", "-76.9334, -72.3485, 13.2669, 0.44", "-76.2539, -72.8234, 14.3534, 0.44", "-75.9107, -72.9954, 14.8205, 0.74", "-74.8768, -73.3837, 16.1205, 0.74", "-73.8333, -73.6481, 17.4397, 0.66", "-73.1746, -73.6865, 18.2461, 0.52", "-72.4146, -73.5795, 19.0994, 0.52", "-70.7659, -72.8124, 21.2853, 1.03", "-69.821, -71.8359, 22.7927, 0.22", "-69.5874, -70.8327, 23.5872, 0.22", "-69.9393, -68.6881, 24.6263, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-64.711, -47.5095, -18.6754, 0.29", "-65.9949, -46.4825, -18.964, 0.29", "-66.5781, -46.0383, -18.9644, 0.29", "-67.0015, -45.6995, -18.8617, 0.66", "-67.4682, -45.3114, -18.7104, 0.66", "-68.0596, -44.8355, -18.4963, 0.44", "-68.6401, -44.3685, -18.2861, 0.29", "-69.7828, -43.5107, -17.7863, 0.59", "-70.7089, -42.8004, -17.2577, 1.03", "-71.426, -42.2258, -16.7537, 1.4", "-71.7224, -41.9772, -16.4966, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "68.6933, -84.7927, -50.2806, 0.81", "69.4641, -85.4717, -51.5191, 0.81", "69.8917, -85.8423, -52.1465, 1.11", "72.2061, -87.6757, -55.2463, 0.44", "72.6344, -87.9659, -55.7766, 0.29", "73.1781, -88.2781, -56.3993, 0.29", "74.1467, -88.7815, -57.47, 0.29", "74.8317, -89.0355, -58.2501, 0.59", "75.2591, -89.2093, -58.9109, 0.74", "75.762, -89.3942, -59.7224, 0.37", "76.2955, -89.55, -60.6956, 0.81", "76.567, -89.6022, -61.2176, 0.96", "77.5976, -89.739, -63.3041, 1.4", "79.3683, -89.922, -67.7105, 0.74", "79.8103, -89.9511, -68.9508, 0.29", "80.2077, -89.9666, -70.1385, 0.29", "80.4357, -89.9606, -70.8297, 0.66", "81.3888, -89.8842, -73.5322, 1.69", "83.2166, -89.6474, -78.1577, 1.18", "84.5538, -89.4797, -81.1282, 0.74", "85.2943, -89.4651, -82.6968, 1.47", "85.5908, -89.5006, -83.2657, 1.47", "86.3947, -89.698, -84.6411, 0.29", "87.4074, -90.1087, -85.9341, 0.29", "88.5021, -90.8058, -86.7738, 1.11", "89.5274, -91.6956, -87.3386, 0.29", "90.1834, -92.3928, -87.6247, 1.25", "90.5543, -92.8295, -87.7766, 1.25", "91.346, -93.8337, -88.0888, 0.15", "91.8305, -94.3743, -88.2836, 0.59", "92.1476, -94.6222, -88.4322, 0.59", "93.0443, -95.141, -88.9139, 0.22", "94.086, -95.6168, -89.4837, 1.84", "94.7827, -95.8744, -89.8657, 1.84", "96.2711, -96.3141, -90.6672, 0.22", "97.2126, -96.5659, -91.1312, 0.59", "98.3527, -96.8833, -91.6411, 0.22", "99.2489, -97.1635, -91.9988, 0.22", "100.203, -97.5477, -92.3045, 0.88", "100.73, -97.7982, -92.4433, 1.11", "102.21, -98.603, -92.754, 0.22", "102.982, -99.0469, -92.8822, 1.33", "103.402, -99.3012, -92.9505, 1.55", "104.557, -100.096, -93.1257, 0.22", "105.297, -100.663, -93.2296, 0.66", "105.672, -100.982, -93.2869, 0.66", "106.429, -101.694, -93.427, 0.22", "107.11, -102.361, -93.5782, 0.44", "107.658, -102.918, -93.7238, 0.22", "108.182, -103.453, -93.8923, 0.96", "108.597, -103.867, -93.9937, 1.18", "109.992, -105.275, -94.2368, 0.15", "110.565, -105.834, -94.2974, 0.96", "110.981, -106.223, -94.3685, 0.96", "111.729, -106.917, -94.5328, 0.15", "113.217, -108.321, -94.9274, 0.81", "113.972, -109.015, -95.1976, 0.81", "114.974, -109.889, -95.6458, 0.29", "116.603, -111.203, -96.5106, 0.44", "117.236, -111.655, -96.8875, 0.81", "117.722, -111.933, -97.2084, 0.81", "118.887, -112.425, -98.12, 0.37", "119.669, -112.654, -98.729, 0.29", "120.519, -112.833, -99.3384, 0.59", "121.389, -112.984, -99.8899, 0.44", "122.502, -113.146, -100.578, 0.29", "123.894, -113.326, -101.393, 0.59", "124.751, -113.427, -101.934, 0.59", "125.495, -113.503, -102.457, 0.29", "126.714, -113.595, -103.36, 0.29", "127.444, -113.643, -103.927, 0.29", "128.078, -113.688, -104.377, 0.74", "129.646, -113.777, -105.371, 0.74", "130.352, -113.829, -105.806, 0.37", "130.803, -113.867, -106.074, 1.03", "131.452, -113.923, -106.442, 1.03", "132.78, -114.1, -107.19, 0.29", "134.758, -114.47, -108.235, 1.11", "136.259, -114.835, -108.909, 0.44", "136.712, -114.968, -109.125, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "68.6933, -84.7927, -50.2806, 0.52", "69.6539, -84.5994, -50.2029, 0.52", "70.2686, -84.4399, -50.1757, 0.52", "70.8947, -84.2554, -50.1563, 0.81", "71.3621, -84.0723, -50.1617, 0.81", "72.1299, -83.6936, -50.2002, 0.29", "72.6958, -83.3436, -50.2607, 0.29", "73.1454, -82.9159, -50.3761, 0.88", "73.4812, -82.4596, -50.5082, 1.11", "73.8444, -81.7709, -50.732, 0.44", "74.068, -81.1048, -50.972, 0.37", "74.2104, -80.3496, -51.2714, 0.37", "74.2909, -79.3526, -51.653, 0.66", "74.2884, -78.7084, -51.8882, 1.03", "74.2381, -78.0328, -52.0955, 1.03", "74.0999, -76.9581, -52.3075, 0.52", "74.0383, -76.5537, -52.3436, 0.37", "73.9453, -75.8718, -52.3312, 1.03", "73.91, -75.4546, -52.2796, 1.03", "73.9057, -74.5288, -52.1234, 0.29", "74.0112, -73.0197, -51.7942, 0.22", "74.0897, -72.4743, -51.6542, 0.66", "74.1733, -72.0089, -51.5418, 0.52", "74.2998, -71.3362, -51.4203, 0.37", "74.4919, -70.4263, -51.3065, 0.74", "74.6412, -69.8414, -51.2568, 0.22", "74.847, -69.1266, -51.2009, 0.88", "74.9372, -68.765, -51.1611, 0.88", "75.1438, -67.7545, -51.0329, 0.29", "75.2167, -67.2416, -50.9647, 0.44", "75.2601, -66.7142, -50.8842, 0.29", "75.2791, -66.1318, -50.8285, 0.29", "75.2455, -65.2868, -50.7974, 0.81", "75.2029, -64.6752, -50.7848, 1.03", "75.1597, -64.255, -50.7877, 1.03", "75.0927, -63.7957, -50.8089, 0.22", "74.9558, -62.8891, -50.8516, 0.22", "74.8792, -62.1434, -50.8404, 0.81", "74.8719, -61.7654, -50.797, 0.81", "74.9188, -61.2045, -50.6434, 0.44", "75.0203, -60.6442, -50.4284, 0.44", "75.2055, -59.8612, -50.0612, 0.96", "75.4055, -59.0854, -49.6279, 0.96", "75.5342, -58.5698, -49.3348, 1.11", "75.7079, -57.8341, -48.941, 0.29", "75.8478, -57.2567, -48.6439, 0.81", "76.0146, -56.6273, -48.3476, 0.81", "76.2631, -55.7564, -48.0267, 0.44", "76.4735, -54.9329, -47.7982, 1.11", "76.6195, -54.3502, -47.6663, 1.11", "76.7263, -53.9327, -47.5912, 0.81", "76.8696, -53.5004, -47.52, 0.52", "77.2702, -52.6411, -47.4093, 0.22", "77.7603, -51.9141, -47.3705, 0.22", "78.1927, -51.496, -47.3944, 0.59", "78.3725, -51.3831, -47.4238, 0.59", "79.4503, -50.9105, -47.6914, 0.52", "80.0983, -50.7192, -47.8763, 0.29", "80.9679, -50.5378, -48.141, 0.52", "81.8148, -50.3761, -48.4287, 0.44", "82.38, -50.2583, -48.6438, 0.81", "82.8521, -50.1305, -48.834, 1.03", "83.7098, -49.8024, -49.1881, 0.29", "84.1368, -49.5943, -49.3294, 0.29", "84.6282, -49.3321, -49.4439, 0.81", "84.9747, -49.1524, -49.4956, 0.81", "85.6825, -48.8353, -49.5572, 0.52", "86.611, -48.5379, -49.5678, 0.15", "87.3593, -48.4328, -49.5091, 0.44", "87.8747, -48.4366, -49.3882, 0.74", "88.2627, -48.4601, -49.255, 1.03", "88.6688, -48.4818, -49.0881, 1.03", "89.2544, -48.4864, -48.8014, 0.88", "89.988, -48.3887, -48.4038, 0.37", "91.0612, -47.9633, -47.862, 0.81", "91.5985, -47.5887, -47.6247, 0.81", "92.0859, -47.0871, -47.3889, 0.29", "92.4062, -46.6615, -47.2113, 0.29", "92.8276, -45.9952, -46.963, 0.15", "93.1749, -45.4564, -46.7858, 1.03", "93.4003, -45.1548, -46.6839, 1.03", "94.3874, -44.1068, -46.2455, 0.52", "94.9628, -43.6283, -45.9963, 0.52", "95.6287, -43.1995, -45.7224, 0.44", "96.7992, -42.605, -45.2758, 0.88", "97.5248, -42.2883, -45.0337, 0.74", "98.2346, -42.0224, -44.8594, 0.44", "98.717, -41.8805, -44.794, 0.37", "99.3579, -41.7262, -44.7456, 0.22", "99.9102, -41.6318, -44.7323, 0.22", "100.645, -41.5097, -44.7455, 0.44", "101.108, -41.4212, -44.7807, 0.22", "101.715, -41.289, -44.8479, 0.22", "102.318, -41.1615, -44.9431, 0.44", "103.305, -41.0175, -45.1367, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.83209, 388.536, -49.7824, 0.74", "-1.76782, 391.018, -50.5969, 0.74", "-1.74256, 392.065, -50.9002, 0.52", "-1.69688, 393.097, -51.1636, 0.37", "-1.62775, 394.738, -51.5402, 0.37", "-1.60068, 395.356, -51.6714, 0.59", "-1.52556, 396.671, -51.9334, 0.74", "-1.46738, 397.5, -52.0583, 0.74", "-1.34056, 399.079, -52.334, 0.37", "-1.24904, 400.23, -52.5486, 0.37", "-1.09642, 402.223, -52.923, 0.81", "-0.999622, 403.56, -53.1751, 0.96", "-0.894432, 404.92, -53.4277, 0.96", "-0.757339, 406.698, -53.7579, 0.66", "-0.685173, 407.74, -53.95, 0.44", "-0.624725, 408.55, -54.0902, 0.44", "-0.530149, 410.078, -54.3333, 0.44", "-0.469341, 411.425, -54.5267, 0.81", "-0.450682, 412.358, -54.6466, 1.03", "-0.44819, 413.33, -54.7617, 1.03", "-0.480842, 414.965, -54.9661, 0.74", "-0.540537, 416.239, -55.1311, 0.74", "-0.683678, 418.281, -55.3865, 0.44", "-0.883393, 420.301, -55.6393, 0.44", "-0.989128, 421.276, -55.7803, 1.03", "-1.09122, 422.214, -55.9367, 1.18", "-1.25515, 423.722, -56.2533, 0.52", "-1.4022, 425.168, -56.6466, 0.74", "-1.55889, 426.624, -57.1397, 1.11", "-1.70154, 427.962, -57.6536, 0.44", "-1.83803, 429.15, -58.1432, 0.37", "-1.97192, 430.418, -58.6867, 0.37", "-2.13453, 432.198, -59.4605, 0.59", "-2.22724, 433.495, -60.0084, 0.96", "-2.26634, 434.42, -60.3585, 1.18", "-2.2785, 435.275, -60.6274, 1.18", "-2.23634, 437.179, -61.1437, 0.44", "-2.14361, 438.509, -61.4193, 0.37", "-2.0327, 439.459, -61.5729, 0.59", "-1.8513, 440.643, -61.7618, 0.44", "-1.62146, 442.083, -62.0311, 0.44", "-1.45257, 443.145, -62.2541, 0.74", "-1.34007, 443.941, -62.4347, 0.74", "-1.27199, 444.548, -62.5867, 0.74", "-1.17879, 445.777, -62.9115, 0.37", "-1.11238, 447.287, -63.3208, 1.18", "-1.09635, 447.849, -63.4685, 1.18", "-1.03987, 449.069, -63.757, 0.88", "-0.945487, 450.296, -64.0206, 0.59", "-0.776506, 451.9, -64.318, 0.88", "-0.642073, 453.073, -64.4994, 1.11", "-0.485283, 454.264, -64.6518, 1.11", "-0.25197, 455.871, -64.8532, 0.52", "0.0268333, 457.467, -65.0567, 0.44", "0.217078, 458.361, -65.1736, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.83209, 388.536, -49.7824, 0.29", "-1.779, 389.552, -49.2998, 0.29", "-1.71337, 390.659, -48.8443, 0.66", "-1.67363, 391.3, -48.5847, 0.66", "-1.63162, 391.876, -48.3484, 0.37", "-1.55479, 392.855, -47.9298, 0.22", "-1.52974, 393.159, -47.7946, 0.66", "-1.48057, 393.557, -47.6195, 0.66", "-1.35907, 394.651, -47.1757, 0.37", "-1.3044, 395.313, -46.9144, 0.37", "-1.25895, 396.207, -46.586, 0.59", "-1.23813, 396.624, -46.4511, 0.37", "-1.20819, 397.267, -46.261, 0.29", "-1.18715, 397.988, -46.0773, 0.74", "-1.18477, 398.386, -45.9982, 0.96", "-1.18724, 398.912, -45.8988, 0.52", "-1.20703, 399.653, -45.7592, 0.44", "-1.21851, 400.34, -45.6124, 0.29", "-1.21083, 401.253, -45.3766, 0.29", "-1.19313, 401.828, -45.1917, 0.66", "-1.15674, 402.434, -44.977, 0.81", "-1.05766, 403.45, -44.6045, 0.29", "-0.877885, 404.729, -44.1299, 0.29", "-0.714005, 405.613, -43.8093, 0.29", "-0.545627, 406.38, -43.5577, 0.88", "-0.410328, 406.962, -43.3955, 0.88", "-0.244659, 407.65, -43.2344, 0.29", "-0.0218151, 408.502, -43.1038, 0.29", "0.0445209, 408.769, -43.0869, 0.52", "0.281027, 409.715, -43.091, 0.22", "0.442591, 410.282, -43.1312, 0.52", "0.612846, 410.803, -43.1823, 0.52", "1.13271, 412.167, -43.3486, 0.44", "1.44508, 412.89, -43.4565, 0.96", "1.64822, 413.314, -43.5287, 0.96", "2.14628, 414.253, -43.6976, 0.29", "2.58165, 415.018, -43.8434, 0.22", "2.99013, 415.707, -43.9718, 0.81", "3.48204, 416.509, -44.102, 0.29", "3.8681, 417.137, -44.1911, 0.29", "4.22041, 417.72, -44.2554, 0.66", "4.36597, 417.962, -44.2681, 0.81", "4.80737, 418.705, -44.2745, 0.29", "5.07704, 419.176, -44.2561, 0.29", "5.26799, 419.524, -44.2274, 0.81", "5.45854, 419.899, -44.1906, 0.81", "5.8089, 420.669, -44.132, 0.29", "6.1938, 421.627, -44.0778, 0.29", "6.44595, 422.337, -44.0505, 0.88", "6.56927, 422.717, -44.0442, 1.03", "6.75424, 423.312, -44.0446, 0.74", "7.25548, 424.99, -44.0676, 0.22", "7.44931, 425.635, -44.0852, 0.96", "7.61997, 426.148, -44.0971, 1.11", "7.99226, 427.221, -44.1129, 0.29", "8.20509, 427.81, -44.1156, 0.59", "8.36124, 428.245, -44.0965, 0.59", "8.60545, 428.92, -44.0317, 0.59", "8.91532, 429.779, -43.9043, 0.29", "9.14322, 430.407, -43.7822, 0.44", "9.46228, 431.392, -43.5159, 0.29", "9.75877, 432.428, -43.1926, 0.81", "9.83865, 432.719, -43.0933, 0.81", "9.93542, 433.098, -42.957, 1.03", "10.0874, 433.69, -42.7402, 0.37", "10.3726, 434.706, -42.3622, 0.29", "10.5355, 435.265, -42.1752, 0.29", "10.8435, 436.338, -41.8784, 0.29", "10.986, 436.885, -41.7684, 0.81", "11.2182, 437.959, -41.5946, 0.37", "11.3876, 438.816, -41.4371, 0.29", "11.5808, 439.66, -41.2647, 1.11", "11.6963, 440.2, -41.119, 0.66", "11.8612, 441.25, -40.7252, 0.29", "11.9763, 442.199, -40.2436, 0.29", "12.0807, 443.216, -39.5599, 0.29", "12.1757, 443.785, -39.0796, 0.29", "12.2639, 444.257, -38.631, 0.29", "12.3723, 444.918, -37.9649, 0.81", "12.4084, 445.292, -37.5571, 1.11", "12.4428, 445.778, -37.0694, 0.88", "12.5157, 447.219, -35.8474, 0.29", "12.5588, 447.8, -35.4009, 0.29", "12.6331, 448.431, -34.9695, 0.74", "12.7391, 449.39, -34.3993, 0.29", "12.7959, 450.203, -33.9576, 0.29", "12.8349, 451.113, -33.5071, 0.66", "12.8525, 451.526, -33.3418, 0.88", "12.9883, 452.464, -33.0262, 0.22", "13.1333, 453.089, -32.8702, 0.37", "13.1471, 453.151, -32.8631, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-71.7224, -41.9772, -16.4966, 0.22", "-73.0485, -41.8437, -16.3346, 0.22", "-73.6055, -41.822, -16.2688, 0.22", "-74.4166, -41.8407, -16.1764, 0.37", "-75.237, -41.8959, -16.0858, 0.22", "-76.2669, -42.0024, -15.9751, 0.22", "-77.348, -42.1325, -15.8607, 0.81", "-77.8625, -42.2175, -15.816, 0.81", "-78.5488, -42.3632, -15.7685, 0.52", "-79.1538, -42.5197, -15.7403, 0.29", "-79.6578, -42.66, -15.7247, 0.66", "-80.3849, -42.8531, -15.731, 0.66", "-80.9614, -42.9797, -15.7541, 0.29", "-81.7732, -43.1339, -15.8148, 0.29", "-82.5793, -43.2555, -15.9022, 0.96", "-83.3598, -43.3555, -16.0561, 1.03", "-84.4493, -43.4893, -16.3385, 0.22", "-84.7291, -43.5258, -16.4251, 0.22", "-85.2577, -43.6065, -16.6028, 0.88", "-85.7088, -43.7044, -16.7718, 0.88", "-86.9207, -44.0406, -17.2945, 0.22", "-87.5488, -44.2477, -17.6156, 0.22", "-88.0933, -44.4663, -17.9145, 0.22", "-88.557, -44.6932, -18.1854, 0.88", "-89.0486, -45.0191, -18.5121, 1.11", "-89.5665, -45.4968, -18.9391, 0.88", "-90.1595, -46.3114, -19.5771, 0.29", "-90.4892, -46.9944, -20.105, 1.18", "-90.6322, -47.3645, -20.3941, 1.33", "-90.8985, -48.2516, -21.0992, 0.29", "-91.0209, -48.935, -21.621, 0.22", "-91.0412, -49.5745, -22.0287, 0.22", "-90.9304, -50.4389, -22.4909, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-71.7224, -41.9772, -16.4966, 0.66", "-72.8098, -41.3793, -14.3852, 0.66", "-73.1358, -41.1395, -13.7072, 0.66", "-73.5098, -40.7824, -12.8804, 0.81", "-73.8364, -40.4407, -12.1851, 0.81", "-74.6769, -39.601, -10.5517, 0.96", "-75.378, -38.9434, -9.30644, 1.33", "-75.8432, -38.4886, -8.6084, 0.44", "-76.2738, -38.0631, -8.03601, 0.44", "-76.7122, -37.6476, -7.59729, 0.37", "-77.4789, -36.9884, -7.17157, 0.37", "-77.8591, -36.7343, -7.12429, 0.37", "-78.5801, -36.3328, -7.15858, 0.29", "-79.3594, -35.9531, -7.21308, 0.66", "-79.934, -35.6815, -7.19207, 0.88", "-80.598, -35.3811, -7.08962, 0.88", "-81.5111, -35.0387, -6.81025, 0.66", "-82.0381, -34.91, -6.51514, 0.66", "-82.6853, -34.8193, -6.00477, 0.81", "-84.2322, -34.6745, -4.49897, 0.81", "-84.8654, -34.6058, -3.75339, 0.59", "-85.5132, -34.4905, -2.85237, 0.44", "-86.1404, -34.2832, -1.8511, 0.44", "-86.481, -34.1017, -1.28647, 0.37", "-86.8568, -33.7884, -0.714107, 0.37", "-87.322, -33.1945, -0.172521, 0.66", "-87.7064, -32.625, 0.12705, 0.66", "-88.2052, -31.9315, 0.29376, 0.44", "-88.6677, -31.4438, 0.29707, 0.66", "-89.1533, -31.1049, 0.226124, 0.66", "-89.9086, -30.7628, 0.0841599, 0.66", "-91.6877, -30.2243, -0.237739, 0.37", "-92.3751, -30.0728, -0.338007, 0.66", "-93.3715, -29.9138, -0.456722, 0.66", "-94.1874, -29.8283, -0.510254, 0.44", "-94.9415, -29.7842, -0.510719, 0.37", "-95.5158, -29.772, -0.4321, 0.59", "-96.3821, -29.7661, -0.171051, 0.44", "-96.9814, -29.7696, 0.0414467, 0.37", "-97.7593, -29.7774, 0.370092, 0.37", "-98.7529, -29.8069, 0.824086, 0.37", "-100.048, -29.8606, 1.45294, 0.37", "-100.942, -29.8972, 1.91221, 0.29", "-101.421, -29.9048, 2.16117, 0.52", "-102.441, -29.8493, 2.67522, 0.29", "-103.281, -29.7659, 3.10961, 0.37", "-103.817, -29.6819, 3.37467, 0.37", "-104.391, -29.5499, 3.5828, 0.96", "-105.128, -29.3162, 3.7916, 0.66", "-105.605, -29.1181, 3.90634, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.217078, 458.361, -65.1736, 0.52", "0.256161, 459.02, -65.2781, 0.52", "0.2768, 459.531, -65.3549, 1.03", "0.288624, 459.945, -65.4153, 1.03", "0.303424, 460.744, -65.5372, 1.11", "0.325378, 461.667, -65.6707, 0.29", "0.351754, 462.521, -65.7981, 0.29", "0.383697, 463.32, -65.93, 0.96", "0.39973, 463.685, -65.9844, 1.11", "0.434757, 464.522, -66.0909, 0.66", "0.460237, 465.459, -66.1886, 0.52", "0.467026, 466.293, -66.2554, 0.52", "0.467338, 467.161, -66.3046, 0.52", "0.457278, 467.814, -66.323, 0.81", "0.424511, 468.884, -66.3356, 1.11", "0.399202, 469.478, -66.3323, 1.33", "0.313039, 470.975, -66.3182, 0.44", "0.269203, 471.667, -66.3092, 0.44", "0.203409, 472.863, -66.3046, 0.37", "0.176112, 473.581, -66.3119, 0.96", "0.167127, 474.341, -66.3367, 1.25", "0.177119, 474.845, -66.3639, 1.25", "0.211211, 475.393, -66.4048, 1.03", "0.249668, 475.816, -66.4416, 0.74", "0.316641, 476.421, -66.4969, 0.52", "0.371747, 476.979, -66.5399, 0.37", "0.42468, 477.571, -66.5792, 0.37", "0.481578, 478.337, -66.6165, 0.37", "0.536041, 479.313, -66.6572, 0.66", "0.555012, 479.854, -66.6777, 0.66", "0.581564, 480.762, -66.7201, 0.66", "0.59956, 481.544, -66.7572, 0.29", "0.615064, 482.242, -66.7981, 0.29", "0.623638, 482.733, -66.8303, 0.81", "0.637413, 483.596, -66.8973, 1.03", "0.646123, 484.294, -66.956, 1.18", "0.652803, 484.823, -67.0055, 0.81", "0.657599, 485.55, -67.0829, 0.29", "0.660935, 486.193, -67.1526, 0.29", "0.665968, 486.849, -67.2239, 0.96", "0.669483, 487.595, -67.3037, 1.11", "0.678188, 488.154, -67.3588, 1.11", "0.708485, 489.075, -67.4498, 0.74", "0.745705, 489.87, -67.5205, 0.44", "0.797232, 490.669, -67.5832, 0.88", "0.839067, 491.247, -67.6227, 0.88", "0.908473, 492.069, -67.6783, 0.52", "0.99283, 492.936, -67.7376, 0.52", "1.08791, 493.804, -67.7974, 0.52", "1.17885, 494.717, -67.8631, 0.52", "1.23698, 495.466, -67.917, 1.11", "1.26159, 495.849, -67.9467, 1.11", "1.29101, 496.57, -68.0035, 0.81", "1.32253, 497.543, -68.0837, 0.29", "1.34276, 498.466, -68.1657, 0.29", "1.34738, 499.003, -68.2139, 0.96", "1.34318, 499.613, -68.2613, 1.11", "1.31788, 500.256, -68.3002, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.217078, 458.361, -65.1736, 0.44", "1.0815, 457.518, -65.0711, 0.44", "1.68203, 456.933, -64.9999, 0.37", "2.6481, 455.992, -64.8854, 0.29", "3.1098, 455.542, -64.8306, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-105.605, -29.1181, 3.90634, 0.22", "-104.919, -28.5893, 3.85927, 0.22", "-104.433, -28.2142, 3.82589, 0.22", "-103.951, -27.8424, 3.79279, 0.59", "-103.625, -27.5904, 3.77036, 0.59", "-103.196, -27.26, 3.74096, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-105.605, -29.1181, 3.90634, 0.37", "-106.459, -28.0144, 3.69761, 0.37", "-107.172, -27.1861, 3.53185, 0.37", "-107.924, -26.3958, 3.3633, 0.22", "-108.73, -25.5491, 3.1827, 0.22", "-109.309, -24.9403, 3.05285, 0.22", "-109.931, -24.2871, 2.91355, 0.22", "-110.15, -24.0882, 2.8694, 0.52", "-110.664, -23.7068, 2.77488, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.31788, 500.256, -68.3002, 0.22", "2.06044, 502.65, -70.6907, 0.22", "2.11612, 503.079, -71.1273, 0.29", "2.09681, 503.826, -71.9349, 0.29", "2.0293, 504.047, -72.2333, 0.66", "1.85601, 504.354, -72.7183, 0.66", "1.61307, 504.737, -73.3151, 0.29", "1.09453, 505.186, -73.9705, 0.88", "0.848975, 505.393, -74.2596, 0.88", "0.0277915, 506.1, -75.1779, 0.29", "-0.289307, 506.426, -75.5244, 0.29", "-0.684191, 506.978, -75.9423, 0.29", "-1.01792, 507.702, -76.3573, 0.66", "-1.25889, 508.411, -76.7076, 0.22", "-1.43153, 508.981, -76.967, 0.22", "-1.62071, 509.568, -77.2252, 0.22", "-2.0144, 510.606, -77.7119, 0.96", "-2.55298, 511.771, -78.3454, 1.33", "-3.20595, 513.008, -79.1071, 0.29", "-3.40833, 513.382, -79.3492, 0.29", "-3.8605, 514.165, -79.877, 0.29", "-4.24864, 514.758, -80.3094, 0.29", "-4.72939, 515.308, -80.763, 0.96", "-5.04203, 515.554, -80.9711, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.31788, 500.256, -68.3002, 0.29", "1.36709, 501.375, -68.2668, 0.29", "1.40327, 502.219, -68.2415, 0.29", "1.44093, 503.419, -68.2098, 0.29", "1.46193, 504.43, -68.1866, 0.74", "1.46969, 505.144, -68.1725, 1.03", "1.47132, 505.638, -68.164, 1.03", "1.46834, 506.848, -68.1425, 0.29", "1.47651, 507.934, -68.1221, 0.29", "1.48411, 508.476, -68.1096, 0.96", "1.49457, 509.017, -68.0952, 1.18", "1.51127, 509.86, -68.0754, 0.59", "1.52912, 510.656, -68.0519, 0.37", "1.56646, 511.814, -68.0087, 0.37", "1.60906, 512.755, -67.9662, 0.29", "1.66112, 514.001, -67.9088, 0.29", "1.6836, 514.885, -67.8665, 0.88", "1.68675, 515.232, -67.851, 1.03", "1.67819, 515.805, -67.8308, 1.03", "1.65585, 516.564, -67.8093, 1.03", "1.62624, 517.597, -67.7839, 0.44", "1.61098, 518.594, -67.7576, 0.74", "1.60677, 518.916, -67.7503, 0.74", "1.59576, 519.707, -67.7422, 0.44", "1.58427, 520.171, -67.7402, 0.37", "1.57743, 520.727, -67.7369, 0.74", "1.58694, 521.192, -67.7306, 0.96", "1.62957, 521.984, -67.7235, 0.29", "1.66237, 522.439, -67.7142, 0.29", "1.72502, 523.126, -67.6954, 0.81", "1.7529, 523.376, -67.6871, 0.81", "1.8143, 523.87, -67.6735, 0.37", "1.89269, 524.624, -67.6593, 0.37", "1.93749, 525.12, -67.6552, 1.03", "1.95675, 525.558, -67.6605, 1.03", "1.96218, 526.42, -67.6829, 1.03", "1.93512, 527.218, -67.7158, 0.37", "1.85222, 528.304, -67.7671, 0.29", "1.78519, 528.9, -67.7966, 0.29", "1.6725, 529.707, -67.8339, 0.88", "1.59385, 530.2, -67.8523, 1.25", "1.512, 530.635, -67.8633, 1.25", "1.38075, 531.325, -67.8661, 0.74", "1.27573, 531.911, -67.8596, 0.74", "1.09228, 532.985, -67.8338, 1.25", "1.00352, 533.574, -67.8167, 1.25", "0.929806, 534.092, -67.8051, 0.52", "0.839493, 534.781, -67.793, 0.29", "0.773213, 535.323, -67.7895, 0.52", "0.711211, 535.861, -67.7897, 0.81", "0.56105, 537.189, -67.8072, 0.37", "0.44711, 538.17, -67.8254, 0.37", "0.418765, 538.419, -67.831, 1.03", "0.358652, 538.917, -67.8435, 1.4", "0.317076, 539.252, -67.8523, 1.4", "0.208863, 540.188, -67.8742, 0.52", "0.123319, 540.976, -67.8907, 0.52", "0.0466864, 541.768, -67.9041, 0.81", "-0.00103498, 542.356, -67.9109, 0.81", "-0.0409031, 542.948, -67.915, 0.81", "-0.0822596, 543.668, -67.9174, 0.44", "-0.10321, 544.16, -67.9166, 0.44", "-0.125415, 544.897, -67.9123, 0.81", "-0.145269, 545.657, -67.9068, 0.88", "-0.158459, 546.49, -67.8978, 1.18", "-0.169385, 547.232, -67.8895, 1.4", "-0.174856, 547.589, -67.8856, 1.4", "-0.176698, 548.124, -67.8824, 0.88", "-0.160062, 549.507, -67.8779, 0.37", "-0.141478, 550.221, -67.877, 0.37", "-0.121036, 550.715, -67.8764, 0.66", "-0.0942433, 551.207, -67.8739, 0.96", "-0.056215, 551.799, -67.8673, 0.37", "-0.0225327, 552.269, -67.8605, 0.74", "0.0440452, 553.073, -67.8571, 0.37", "0.09902, 553.773, -67.8593, 0.81", "0.147273, 554.417, -67.8675, 1.03", "0.237138, 555.675, -67.9124, 0.22", "0.296539, 556.551, -67.9566, 0.22", "0.367301, 557.57, -68.0232, 0.22", "0.434088, 558.511, -68.103, 1.25", "0.468492, 558.972, -68.1527, 1.33", "0.524798, 559.756, -68.2519, 0.44", "0.576489, 560.417, -68.3554, 0.44", "0.654701, 561.229, -68.4909, 0.44", "0.727765, 561.878, -68.6017, 0.37", "0.839995, 562.837, -68.765, 0.37", "0.898805, 563.327, -68.838, 0.37", "0.977806, 564.046, -68.9315, 0.74", "1.0291, 564.578, -68.9984, 1.03", "1.07382, 565.137, -69.0583, 0.74", "1.10383, 565.594, -69.0905, 0.29", "1.13815, 566.28, -69.1152, 0.29", "1.15065, 566.673, -69.1192, 0.66", "1.16084, 567.226, -69.1118, 0.66", "1.16698, 568.016, -69.1032, 0.22", "1.17029, 568.612, -69.0925, 0.52", "1.17617, 569.028, -69.0844, 0.52", "1.19773, 570.466, -69.0461, 0.22", "1.2227, 571.279, -69.0049, 0.59", "1.23437, 571.575, -68.9841, 0.59", "1.27038, 572.325, -68.9171, 0.22", "1.29629, 572.808, -68.8691, 0.81", "1.31705, 573.159, -68.8317, 0.81", "1.38606, 574.089, -68.7285, 0.22", "1.41871, 574.477, -68.687, 0.59", "1.44153, 574.692, -68.6654, 0.59", "1.59935, 576.134, -68.5459, 0.22", "1.64302, 576.587, -68.516, 0.22", "1.70839, 577.368, -68.4801, 0.74", "1.72865, 577.737, -68.4712, 0.81", "1.74706, 578.277, -68.46, 0.81", "1.7611, 579.21, -68.4429, 0.22", "1.76046, 580.147, -68.4269, 0.22", "1.75211, 580.737, -68.4172, 0.22", "1.72959, 581.484, -68.4064, 0.81", "1.72235, 581.686, -68.4033, 0.81", "1.69206, 582.914, -68.3863, 0.22", "1.69226, 582.976, -68.3856, 0.52", "1.74825, 584.373, -68.3729, 0.29", "1.80261, 585.161, -68.3677, 0.88", "1.84535, 585.61, -68.3666, 0.88", "1.92714, 586.42, -68.3699, 0.22", "1.97437, 586.936, -68.3759, 0.22", "2.03273, 587.54, -68.3807, 0.96", "2.05846, 587.79, -68.3814, 0.96", "2.16465, 588.79, -68.375, 0.22", "2.21633, 589.381, -68.368, 0.22", "2.27861, 590.169, -68.3468, 0.88", "2.33495, 590.963, -68.3191, 0.22", "2.38294, 591.761, -68.2898, 0.88", "2.40045, 592.009, -68.2797, 0.88", "2.47089, 592.838, -68.2422, 0.22", "2.53776, 593.447, -68.2094, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-5.04203, 515.554, -80.9711, 0.37", "-5.54464, 516.632, -81.3338, 0.37", "-5.70597, 516.993, -81.4577, 0.59", "-5.97177, 517.663, -81.6773, 0.59", "-6.1655, 518.234, -81.8606, 0.29", "-6.4764, 519.219, -82.1916, 0.29", "-6.64006, 519.755, -82.382, 0.29", "-6.7714, 520.226, -82.5873, 0.52", "-6.8802, 520.678, -82.8182, 0.22", "-7.00451, 521.242, -83.1541, 0.52", "-7.15231, 521.848, -83.5349, 0.81", "-7.26503, 522.282, -83.7895, 0.81", "-7.59935, 523.357, -84.3906, 0.22", "-7.7954, 523.896, -84.6774, 0.81", "-8.04264, 524.48, -84.9619, 0.81", "-8.35226, 525.143, -85.2334, 0.29", "-8.8126, 526.076, -85.5657, 0.29", "-9.16411, 526.731, -85.7935, 0.81", "-9.45096, 527.209, -85.972, 1.11", "-9.70946, 527.637, -86.1681, 0.74", "-10.0327, 528.219, -86.4676, 0.29", "-10.4627, 529.026, -86.9312, 0.29", "-10.8096, 529.69, -87.3217, 0.29", "-11.2511, 530.611, -87.8517, 1.03", "-11.5929, 531.38, -88.2704, 1.18", "-12.1573, 532.736, -88.969, 0.29", "-12.3595, 533.268, -89.2238, 0.29", "-12.6487, 534.129, -89.5998, 1.55", "-12.7932, 534.59, -89.7915, 1.33", "-13.01, 535.244, -90.0585, 0.81", "-13.2647, 535.93, -90.3547, 0.52", "-13.6612, 536.937, -90.8195, 0.29", "-13.9985, 537.798, -91.229, 0.52", "-14.1196, 538.126, -91.3817, 0.81", "-14.5852, 539.484, -91.9733, 0.22", "-14.8613, 540.426, -92.3529, 0.22", "-14.9849, 540.933, -92.5215, 0.66", "-15.0804, 541.49, -92.6814, 0.66", "-15.1821, 542.563, -92.9601, 0.22", "-15.1874, 543.049, -93.1057, 0.52", "-15.1711, 543.468, -93.2508, 0.52", "-15.1688, 544.37, -93.5938, 0.29", "-15.2145, 545.32, -93.9842, 0.96", "-15.267, 545.803, -94.1908, 0.96", "-15.485, 547.294, -94.8759, 0.22", "-15.6793, 548.351, -95.3809, 0.96", "-15.8493, 549.082, -95.7454, 0.22", "-15.9555, 549.426, -95.9268, 0.59", "-16.1142, 549.806, -96.1145, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.04203, 515.554, -80.9711, 0.15", "-6.34943, 515.09, -81.9827, 0.15", "-6.74287, 514.962, -82.2669, 0.52", "-7.00194, 514.881, -82.4485, 0.66", "-7.938, 514.59, -83.0944, 0.22", "-8.78363, 514.319, -83.6616, 0.22", "-9.14119, 514.2, -83.8859, 0.59", "-9.68715, 514.046, -84.209, 0.66", "-10.6694, 513.763, -84.7532, 0.29", "-11.0296, 513.656, -84.9376, 0.81", "-11.7517, 513.427, -85.2941, 0.96", "-12.5674, 513.153, -85.7106, 0.15", "-13.3935, 512.861, -86.1589, 0.15", "-14.1929, 512.571, -86.6074, 0.15", "-14.8551, 512.327, -86.9811, 0.88", "-15.3346, 512.13, -87.2577, 0.88", "-16.651, 511.572, -88.0472, 0.22", "-17.1543, 511.346, -88.3642, 0.74", "-17.8448, 511.005, -88.8002, 0.74", "-18.6411, 510.568, -89.3135, 0.29", "-19.3205, 510.166, -89.7456, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_SBC_1404bc18ce_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.07242, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.42511, 3.94767, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.927641, 4.91636, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.19327, 6.34638, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.38191, 7.46641, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -1.07534, 8.8167, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -1.25271, 9.1621, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.79855, -11.1178, 0.232908, 3.61 ) }
    dend_27 { pt3dadd( -2.3851, -13.1953, 0.187256, 2.87 ) }
    dend_27 { pt3dadd( -2.88119, -15.1268, 0.0412996, 2.36 ) }
    dend_27 { pt3dadd( -3.31568, -17.0064, -0.108314, 2.36 ) }
    dend_27 { pt3dadd( -3.72953, -18.9818, -0.245929, 2.65 ) }
    dend_27 { pt3dadd( -4.06643, -20.6691, -0.373871, 2.65 ) }
    dend_27 { pt3dadd( -4.34579, -22.2118, -0.50883, 2.8 ) }
    dend_27 { pt3dadd( -4.71682, -24.6101, -0.749917, 2.43 ) }
    dend_27 { pt3dadd( -4.99793, -26.7389, -0.992935, 2.28 ) }
    dend_27 { pt3dadd( -5.24626, -29.0232, -1.28127, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -1.77782, 11.6006, -2.98133, 2.8 ) }
    dend_0 { pt3dadd( -2.9595, 12.751, -3.06017, 2.8 ) }
    dend_0 { pt3dadd( -4.02683, 13.7683, -3.1268, 2.8 ) }
    dend_0 { pt3dadd( -5.38965, 15.0817, -3.19858, 2.8 ) }
    dend_0 { pt3dadd( -6.42858, 16.1408, -3.24663, 2.58 ) }
    dend_0 { pt3dadd( -7.15409, 16.919, -3.27479, 2.58 ) }
    dend_0 { pt3dadd( -7.76699, 17.6255, -3.29288, 2.36 ) }
    dend_0 { pt3dadd( -8.31805, 18.3788, -3.30097, 1.92 ) }
    dend_0 { pt3dadd( -9.00431, 19.6911, -3.30269, 1.92 ) }
    dend_0 { pt3dadd( -9.38534, 21.0112, -3.2919, 1.92 ) }
    dend_0 { pt3dadd( -9.52475, 22.1815, -3.28461, 1.92 ) }
    dend_0 { pt3dadd( -9.50329, 23.1861, -3.28207, 2.21 ) }
    dend_0 { pt3dadd( -9.35066, 24.2542, -3.34114, 2.21 ) }
    dend_0 { pt3dadd( -9.13298, 25.1423, -3.43674, 1.84 ) }
    dend_0 { pt3dadd( -8.71435, 26.4302, -3.63676, 1.84 ) }
    dend_0 { pt3dadd( -8.41791, 27.2602, -3.79137, 1.84 ) }
    dend_0 { pt3dadd( -8.07929, 28.1911, -4.00735, 1.84 ) }
    dend_0 { pt3dadd( -7.46516, 29.9942, -4.5069, 1.69 ) }
    dend_0 { pt3dadd( -7.24886, 30.7349, -4.73983, 1.69 ) }
    dend_0 { pt3dadd( -6.97831, 31.8474, -5.17933, 1.69 ) }
    dend_0 { pt3dadd( -6.79417, 32.8757, -5.66367, 1.84 ) }
    dend_0 { pt3dadd( -6.6817, 33.7528, -6.11945, 1.99 ) }
    dend_0 { pt3dadd( -6.62577, 34.6065, -6.58553, 1.99 ) }
    dend_0 { pt3dadd( -6.5914, 35.57, -7.1177, 1.99 ) }
    dend_0 { pt3dadd( -6.57758, 37.0034, -8.0007, 2.14 ) }
    dend_0 { pt3dadd( -6.59144, 37.7595, -8.53052, 2.14 ) }
    dend_0 { pt3dadd( -6.62256, 38.4345, -9.05089, 2.14 ) }
    dend_0 { pt3dadd( -6.67002, 39.1066, -9.56961, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.594704 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.594704 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.594704 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.25271, 9.1621, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -2.05332, 11.5335, 10.0455, 0.81 ) }
    dend_56 { pt3dadd( -2.45146, 12.7125, 9.41426, 0.81 ) }
    dend_56 { pt3dadd( -2.78394, 13.6192, 8.98002, 1.03 ) }
    dend_56 { pt3dadd( -3.12118, 14.4537, 8.61626, 1.03 ) }
    dend_56 { pt3dadd( -3.57784, 15.4792, 8.20424, 0.59 ) }
    dend_56 { pt3dadd( -4.06952, 16.4855, 7.8352, 0.37 ) }
    dend_56 { pt3dadd( -4.56793, 17.4007, 7.63967, 0.37 ) }
    dend_56 { pt3dadd( -5.0426, 18.2041, 7.47406, 0.59 ) }
    dend_56 { pt3dadd( -5.43678, 18.8586, 7.33418, 0.59 ) }
    dend_56 { pt3dadd( -5.81979, 19.4566, 7.20018, 0.66 ) }
    dend_56 { pt3dadd( -6.35644, 20.2744, 6.95538, 0.59 ) }
    dend_56 { pt3dadd( -6.89361, 21.0709, 6.60682, 0.44 ) }
    dend_56 { pt3dadd( -7.53258, 22.0752, 5.97511, 0.44 ) }
    dend_56 { pt3dadd( -7.81717, 22.5724, 5.60734, 0.96 ) }
    dend_56 { pt3dadd( -8.18406, 23.2748, 5.06134, 1.33 ) }
    dend_56 { pt3dadd( -8.48702, 23.9254, 4.55697, 1.55 ) }
    dend_56 { pt3dadd( -8.9634, 25.0866, 3.68188, 1.03 ) }
    dend_56 { pt3dadd( -9.55229, 26.7874, 2.53724, 0.52 ) }
    dend_56 { pt3dadd( -9.67185, 27.2536, 2.27443, 0.88 ) }
    dend_56 { pt3dadd( -9.83934, 28.2068, 1.82535, 0.52 ) }
    dend_56 { pt3dadd( -9.90941, 29.0342, 1.52498, 0.52 ) }
    dend_56 { pt3dadd( -9.92153, 29.7479, 1.33626, 0.52 ) }
    dend_56 { pt3dadd( -9.89017, 31.0121, 1.0732, 0.88 ) }
    dend_56 { pt3dadd( -9.85129, 32.3262, 0.81718, 0.74 ) }
    dend_56 { pt3dadd( -9.86569, 33.09, 0.647742, 0.59 ) }
    dend_56 { pt3dadd( -10.0261, 34.6971, 0.230327, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -10.2607, 35.6974, -0.0609431, 1.25 ) }
    dend_56 { pt3dadd( -10.6799, 36.724, -0.404405, 1.4 ) }
    dend_56 { pt3dadd( -11.151, 37.4397, -0.668666, 1.18 ) }
    dend_56 { pt3dadd( -11.7751, 38.1481, -0.925278, 0.88 ) }
    dend_56 { pt3dadd( -12.5983, 38.9497, -1.21148, 0.66 ) }
    dend_56 { pt3dadd( -13.2291, 39.4921, -1.39123, 0.66 ) }
    dend_56 { pt3dadd( -13.6988, 39.9054, -1.50253, 0.66 ) }
    dend_56 { pt3dadd( -14.3819, 40.6387, -1.61081, 0.59 ) }
    dend_56 { pt3dadd( -14.7946, 41.306, -1.64034, 0.59 ) }
    dend_56 { pt3dadd( -15.0654, 42.1324, -1.6014, 0.74 ) }
    dend_56 { pt3dadd( -15.133, 42.524, -1.55408, 0.88 ) }
    dend_56 { pt3dadd( -15.1977, 43.055, -1.45892, 0.88 ) }
    dend_56 { pt3dadd( -15.2757, 43.7209, -1.30816, 1.03 ) }
    dend_56 { pt3dadd( -15.4069, 44.5091, -1.10474, 0.66 ) }
    dend_56 { pt3dadd( -15.6877, 45.7129, -0.762551, 0.44 ) }
    dend_56 { pt3dadd( -15.941, 46.6526, -0.477097, 0.44 ) }
    dend_56 { pt3dadd( -16.1697, 47.5506, -0.278339, 0.59 ) }
    dend_56 { pt3dadd( -16.2742, 48.041, -0.222596, 0.96 ) }
    dend_56 { pt3dadd( -16.4176, 49.1619, -0.207454, 1.18 ) }
    dend_56 { pt3dadd( -16.4163, 49.7542, -0.256452, 1.18 ) }
    dend_56 { pt3dadd( -16.2849, 50.7105, -0.416272, 0.74 ) }
    dend_56 { pt3dadd( -15.837, 52.5872, -0.768852, 0.37 ) }
    dend_56 { pt3dadd( -15.5774, 53.5226, -0.948303, 0.29 ) }
    dend_56 { pt3dadd( -15.3042, 54.4863, -1.1185, 0.29 ) }
    dend_56 { pt3dadd( -15.0254, 55.4982, -1.28317, 0.37 ) }
    dend_56 { pt3dadd( -14.8721, 56.2619, -1.38236, 0.37 ) }
    dend_56 { pt3dadd( -14.7871, 57.4168, -1.45372, 0.29 ) }
    dend_56 { pt3dadd( -14.8569, 58.2515, -1.40776, 0.37 ) }
    dend_56 { pt3dadd( -14.9887, 58.9013, -1.34162, 0.74 ) }
    dend_56 { pt3dadd( -15.1187, 59.3471, -1.28937, 0.74 ) }
    dend_56 { pt3dadd( -15.3144, 59.9443, -1.23825, 0.44 ) }
    dend_56 { pt3dadd( -15.57, 60.9036, -1.19654, 0.66 ) }
    dend_56 { pt3dadd( -15.7497, 61.8402, -1.23475, 1.25 ) }
    dend_56 { pt3dadd( -15.835, 62.4102, -1.28404, 1.47 ) }
    dend_56 { pt3dadd( -15.929, 63.0449, -1.36043, 1.47 ) }
    dend_56 { pt3dadd( -16.111, 64.1718, -1.52873, 1.11 ) }
    dend_56 { pt3dadd( -16.3617, 65.6376, -1.78609, 0.29 ) }
    dend_56 { pt3dadd( -16.557, 66.7003, -1.99196, 0.66 ) }
    dend_56 { pt3dadd( -16.6769, 67.2949, -2.12171, 0.52 ) }
    dend_56 { pt3dadd( -16.8992, 68.2463, -2.37072, 0.52 ) }
    dend_56 { pt3dadd( -17.2225, 69.3894, -2.68455, 0.66 ) }
    dend_56 { pt3dadd( -17.6502, 70.7035, -3.02658, 0.88 ) }
    dend_56 { pt3dadd( -17.8923, 71.3391, -3.19088, 1.47 ) }
    dend_56 { pt3dadd( -18.1989, 72.1433, -3.37224, 1.47 ) }
    dend_56 { pt3dadd( -18.5487, 73.0883, -3.57076, 0.74 ) }
    dend_56 { pt3dadd( -18.9051, 73.9807, -3.7685, 0.74 ) }
    dend_56 { pt3dadd( -19.2656, 74.7458, -3.93432, 0.74 ) }
    dend_56 { pt3dadd( -19.7157, 75.5547, -4.09651, 0.37 ) }
    dend_56 { pt3dadd( -20.2749, 76.4885, -4.25461, 0.37 ) }
    dend_56 { pt3dadd( -20.7319, 77.2339, -4.359, 0.29 ) }
    dend_56 { pt3dadd( -21.1496, 77.9438, -4.45491, 0.29 ) }
    dend_56 { pt3dadd( -21.6398, 78.8306, -4.60745, 0.29 ) }
    dend_56 { pt3dadd( -21.9088, 79.372, -4.71468, 0.29 ) }
    dend_56 { pt3dadd( -22.2343, 80.2559, -4.95743, 0.88 ) }
    dend_56 { pt3dadd( -22.3762, 80.8505, -5.15365, 1.47 ) }
    dend_56 { pt3dadd( -22.4375, 81.4534, -5.36623, 1.47 ) }
    dend_56 { pt3dadd( -22.4381, 81.9768, -5.53958, 1.47 ) }
    dend_56 { pt3dadd( -22.3736, 82.7341, -5.78213, 1.18 ) }
    dend_56 { pt3dadd( -22.1746, 84.1891, -6.20886, 0.37 ) }
    dend_56 { pt3dadd( -22.0452, 84.9809, -6.39863, 0.37 ) }
    dend_56 { pt3dadd( -21.9487, 85.7753, -6.52342, 0.37 ) }
    dend_56 { pt3dadd( -21.9176, 86.3421, -6.57326, 0.96 ) }
    dend_56 { pt3dadd( -21.925, 87.0524, -6.5911, 1.03 ) }
    dend_56 { pt3dadd( -21.9586, 87.4542, -6.56535, 1.03 ) }
    dend_56 { pt3dadd( -22.1107, 88.5442, -6.43966, 0.37 ) }
    dend_56 { pt3dadd( -22.289, 89.6176, -6.3749, 0.37 ) }
    dend_56 { pt3dadd( -22.3929, 90.2303, -6.37065, 0.29 ) }
    dend_56 { pt3dadd( -22.4958, 90.9235, -6.48782, 0.29 ) }
    dend_56 { pt3dadd( -22.6232, 91.9541, -6.78027, 0.29 ) }
    dend_56 { pt3dadd( -22.6706, 92.6991, -7.065, 0.29 ) }
    dend_56 { pt3dadd( -22.6975, 93.717, -7.52665, 1.18 ) }
    dend_56 { pt3dadd( -22.6835, 94.2285, -7.77218, 1.47 ) }
    dend_56 { pt3dadd( -22.5068, 96.4385, -8.92624, 0.22 ) }
    dend_56 { pt3dadd( -22.4786, 96.6758, -9.06137, 0.44 ) }
    dend_56 { pt3dadd( -22.3265, 97.5935, -9.60897, 0.66 ) }
    dend_56 { pt3dadd( -22.1642, 98.4083, -10.0709, 0.22 ) }
    dend_56 { pt3dadd( -21.9906, 99.1963, -10.4916, 0.22 ) }
    dend_56 { pt3dadd( -21.6786, 100.593, -11.2091, 0.88 ) }
    dend_56 { pt3dadd( -21.512, 101.332, -11.5556, 0.88 ) }
    dend_56 { pt3dadd( -21.371, 102.039, -11.9067, 0.88 ) }
    dend_56 { pt3dadd( -21.1713, 103.253, -12.5712, 0.37 ) }
    dend_56 { pt3dadd( -21.0703, 104.109, -13.1025, 0.37 ) }
    dend_56 { pt3dadd( -21.0642, 104.48, -13.3516, 0.88 ) }
    dend_56 { pt3dadd( -21.1088, 104.986, -13.6887, 0.88 ) }
    dend_56 { pt3dadd( -21.2365, 105.773, -14.2557, 0.52 ) }
    dend_56 { pt3dadd( -21.3958, 106.448, -14.7844, 0.29 ) }
    dend_56 { pt3dadd( -21.602, 107.19, -15.4007, 0.29 ) }
    dend_56 { pt3dadd( -21.8487, 108.036, -16.0803, 1.11 ) }
    dend_56 { pt3dadd( -21.9703, 108.594, -16.5231, 1.33 ) }
    dend_56 { pt3dadd( -22.079, 109.252, -17.0518, 1.55 ) }
    dend_56 { pt3dadd( -22.1617, 109.9, -17.5783, 1.55 ) }
    dend_56 { pt3dadd( -22.2579, 110.844, -18.3602, 0.52 ) }
    dend_56 { pt3dadd( -22.3499, 111.732, -19.0931, 0.44 ) }
    dend_56 { pt3dadd( -22.5447, 113.177, -20.2523, 1.47 ) }
    dend_56 { pt3dadd( -22.6519, 113.877, -20.7725, 1.47 ) }
    dend_56 { pt3dadd( -22.9243, 115.496, -21.8514, 0.44 ) }
    dend_56 { pt3dadd( -23.0787, 116.371, -22.4019, 0.44 ) }
    dend_56 { pt3dadd( -23.2681, 117.479, -23.0716, 0.44 ) }
    dend_56 { pt3dadd( -23.4435, 118.565, -23.6974, 0.37 ) }
    dend_56 { pt3dadd( -23.6194, 119.596, -24.2275, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -23.8314, 121.279, -24.9435, 1.47 ) }
    dend_56 { pt3dadd( -23.8659, 121.933, -25.1441, 1.77 ) }
    dend_56 { pt3dadd( -23.8597, 123.607, -25.5085, 0.29 ) }
    dend_56 { pt3dadd( -23.8189, 124.413, -25.6283, 1.03 ) }
    dend_56 { pt3dadd( -23.7816, 124.883, -25.6619, 1.03 ) }
    dend_56 { pt3dadd( -23.644, 126.539, -25.6367, 0.66 ) }
    dend_56 { pt3dadd( -23.4943, 128.556, -25.4098, 0.29 ) }
    dend_56 { pt3dadd( -23.4438, 129.575, -25.2138, 1.03 ) }
    dend_56 { pt3dadd( -23.4365, 129.998, -25.098, 1.25 ) }
    dend_56 { pt3dadd( -23.4617, 131.098, -24.775, 0.22 ) }
    dend_56 { pt3dadd( -23.5007, 131.625, -24.629, 0.44 ) }
    dend_56 { pt3dadd( -23.6348, 132.608, -24.3843, 0.22 ) }
    dend_56 { pt3dadd( -23.7813, 133.377, -24.1676, 0.52 ) }
    dend_56 { pt3dadd( -23.8978, 133.946, -24.0031, 0.52 ) }
    dend_56 { pt3dadd( -24.1594, 135.381, -23.5819, 0.22 ) }
    dend_56 { pt3dadd( -24.2736, 136.158, -23.353, 0.29 ) }
    dend_56 { pt3dadd( -24.3655, 136.949, -23.1211, 0.29 ) }
    dend_56 { pt3dadd( -24.5206, 138.537, -22.6688, 1.11 ) }
    dend_56 { pt3dadd( -24.5563, 139.069, -22.5366, 1.33 ) }
    dend_56 { pt3dadd( -24.5802, 140.055, -22.3082, 0.29 ) }
    dend_56 { pt3dadd( -24.5545, 141.032, -22.0904, 0.29 ) }
    dend_56 { pt3dadd( -24.527, 141.421, -22.0118, 0.44 ) }
    dend_56 { pt3dadd( -24.4196, 142.501, -21.8332, 0.22 ) }
    dend_56 { pt3dadd( -24.3, 143.61, -21.6955, 0.66 ) }
    dend_56 { pt3dadd( -24.2754, 143.953, -21.6566, 1.18 ) }
    dend_56 { pt3dadd( -24.2698, 144.447, -21.6096, 1.18 ) }
    dend_56 { pt3dadd( -24.2686, 144.841, -21.5735, 0.74 ) }
    dend_56 { pt3dadd( -24.2511, 146.308, -21.4412, 0.22 ) }
    dend_56 { pt3dadd( -24.2367, 146.883, -21.394, 0.66 ) }
    dend_56 { pt3dadd( -24.2577, 147.875, -21.2985, 0.22 ) }
    dend_56 { pt3dadd( -24.2911, 148.364, -21.2485, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -1.25271, 9.1621, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -0.720321, 10.2554, 10.7948, 0.44 ) }
    dend_55 { pt3dadd( -0.455115, 10.8672, 10.4179, 0.44 ) }
    dend_55 { pt3dadd( -0.141895, 11.6111, 9.97538, 0.96 ) }
    dend_55 { pt3dadd( 0.0783178, 12.0951, 9.6942, 0.96 ) }
    dend_55 { pt3dadd( 0.669549, 13.4314, 9.03407, 0.52 ) }
    dend_55 { pt3dadd( 0.866253, 13.9267, 8.84484, 0.52 ) }
    dend_55 { pt3dadd( 1.01617, 14.3901, 8.68742, 0.66 ) }
    dend_55 { pt3dadd( 1.13477, 15.0411, 8.57928, 0.37 ) }
    dend_55 { pt3dadd( 1.18112, 15.5398, 8.63876, 0.37 ) }
    dend_55 { pt3dadd( 1.30373, 16.547, 8.90872, 0.37 ) }
    dend_55 { pt3dadd( 1.45905, 17.4841, 9.22514, 0.59 ) }
    dend_55 { pt3dadd( 1.56833, 18.0217, 9.3875, 0.81 ) }
    dend_55 { pt3dadd( 1.6857, 18.5506, 9.53358, 0.81 ) }
    dend_55 { pt3dadd( 1.97845, 19.9373, 9.9289, 0.29 ) }
    dend_55 { pt3dadd( 2.1956, 20.965, 10.1682, 0.29 ) }
    dend_55 { pt3dadd( 2.39285, 21.7819, 10.3225, 0.29 ) }
    dend_55 { pt3dadd( 2.59063, 22.45, 10.4256, 0.29 ) }
    dend_55 { pt3dadd( 2.79031, 23.0561, 10.515, 0.88 ) }
    dend_55 { pt3dadd( 3.04685, 23.8313, 10.6092, 0.88 ) }
    dend_55 { pt3dadd( 3.16662, 24.4736, 10.6814, 0.52 ) }
    dend_55 { pt3dadd( 3.16241, 25.1661, 10.8536, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.24626, -29.0232, -1.28127, 1.77 ) }
    dend_29 { pt3dadd( -4.98927, -30.0857, -1.27888, 1.77 ) }
    dend_29 { pt3dadd( -4.84339, -30.6153, -1.24194, 1.77 ) }
    dend_29 { pt3dadd( -4.63237, -31.1933, -1.34083, 1.77 ) }
    dend_29 { pt3dadd( -4.32323, -31.8171, -1.57688, 1.77 ) }
    dend_29 { pt3dadd( -3.96642, -32.5371, -1.84933, 1.92 ) }
    dend_29 { pt3dadd( -3.69325, -33.0883, -2.05791, 2.14 ) }
    dend_29 { pt3dadd( -3.27319, -33.7851, -2.3667, 2.36 ) }
    dend_29 { pt3dadd( -1.97969, -35.6679, -3.52573, 1.77 ) }
    dend_29 { pt3dadd( -1.47617, -36.2833, -4.08663, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.24626, -29.0232, -1.28127, 0.81 ) }
    dend_28 { pt3dadd( -4.59358, -30.0006, -0.675153, 0.81 ) }
    dend_28 { pt3dadd( -3.44789, -31.3449, 0.125358, 0.66 ) }
    dend_28 { pt3dadd( -2.94076, -31.8048, 0.400985, 0.88 ) }
    dend_28 { pt3dadd( -2.07498, -32.4604, 0.773728, 0.59 ) }
    dend_28 { pt3dadd( -1.16584, -33.0605, 1.0567, 0.88 ) }
    dend_28 { pt3dadd( -0.144268, -33.6646, 1.26378, 1.18 ) }
    dend_28 { pt3dadd( 0.734292, -34.0892, 1.25892, 0.81 ) }
    dend_28 { pt3dadd( 1.80146, -34.4921, 1.12327, 0.66 ) }
    dend_28 { pt3dadd( 2.54544, -34.7432, 0.998273, 0.59 ) }
    dend_28 { pt3dadd( 3.57857, -35.0728, 0.794952, 0.88 ) }
    dend_28 { pt3dadd( 4.50513, -35.3733, 0.589045, 0.74 ) }
    dend_28 { pt3dadd( 5.47508, -35.7313, 0.352043, 0.59 ) }
    dend_28 { pt3dadd( 6.47735, -36.1454, 0.0949518, 0.74 ) }
    dend_28 { pt3dadd( 7.36209, -36.5514, -0.121484, 0.74 ) }
    dend_28 { pt3dadd( 7.89554, -36.8203, -0.23615, 0.88 ) }
    dend_28 { pt3dadd( 8.47835, -37.1543, -0.338294, 0.88 ) }
    dend_28 { pt3dadd( 9.21536, -37.6392, -0.455325, 0.66 ) }
    dend_28 { pt3dadd( 9.94219, -38.2227, -0.589692, 0.66 ) }
    dend_28 { pt3dadd( 10.3604, -38.6717, -0.700273, 0.52 ) }
    dend_28 { pt3dadd( 10.7949, -39.3122, -0.84664, 0.52 ) }
    dend_28 { pt3dadd( 11.013, -39.8005, -0.919546, 0.96 ) }
    dend_28 { pt3dadd( 11.1248, -40.1479, -0.938647, 1.18 ) }
    dend_28 { pt3dadd( 11.3366, -40.9184, -0.927713, 1.03 ) }
    dend_28 { pt3dadd( 11.4585, -41.331, -0.866472, 1.18 ) }
    dend_28 { pt3dadd( 11.6756, -41.885, -0.702444, 1.03 ) }
    dend_28 { pt3dadd( 12.1238, -42.722, -0.318373, 0.37 ) }
    dend_28 { pt3dadd( 12.583, -43.3935, 0.10258, 0.74 ) }
    dend_28 { pt3dadd( 12.8625, -43.7562, 0.393012, 0.88 ) }
    dend_28 { pt3dadd( 13.4981, -44.5408, 1.12412, 0.59 ) }
    dend_28 { pt3dadd( 13.8243, -44.9533, 1.52425, 0.59 ) }
    dend_28 { pt3dadd( 14.198, -45.4615, 2.00932, 0.88 ) }
    dend_28 { pt3dadd( 14.633, -46.1294, 2.60134, 0.74 ) }
    dend_28 { pt3dadd( 14.9938, -46.7832, 3.1234, 1.25 ) }
    dend_28 { pt3dadd( 15.2233, -47.2199, 3.42296, 1.25 ) }
    dend_28 { pt3dadd( 15.5071, -47.7517, 3.71197, 0.81 ) }
    dend_28 { pt3dadd( 15.7959, -48.305, 3.96391, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 16.1441, -48.9552, 4.20712, 0.59 ) }
    dend_28 { pt3dadd( 16.4649, -49.4947, 4.34925, 0.59 ) }
    dend_28 { pt3dadd( 17.0508, -50.3311, 4.52351, 0.44 ) }
    dend_28 { pt3dadd( 17.4638, -50.8256, 4.63539, 0.52 ) }
    dend_28 { pt3dadd( 17.9125, -51.2799, 4.74798, 0.44 ) }
    dend_28 { pt3dadd( 18.4651, -51.7822, 4.87914, 0.44 ) }
    dend_28 { pt3dadd( 18.9084, -52.1795, 4.9843, 0.52 ) }
    dend_28 { pt3dadd( 19.4526, -52.7036, 5.13008, 0.66 ) }
    dend_28 { pt3dadd( 19.9398, -53.2127, 5.25406, 0.66 ) }
    dend_28 { pt3dadd( 20.5553, -53.9376, 5.42429, 0.52 ) }
    dend_28 { pt3dadd( 20.8302, -54.2904, 5.53175, 0.81 ) }
    dend_28 { pt3dadd( 21.1387, -54.7559, 5.7, 0.81 ) }
    dend_28 { pt3dadd( 21.4535, -55.3148, 5.91832, 0.66 ) }
    dend_28 { pt3dadd( 21.8988, -56.2319, 6.26861, 0.52 ) }
    dend_28 { pt3dadd( 22.2808, -57.1274, 6.60901, 0.52 ) }
    dend_28 { pt3dadd( 22.6035, -57.9606, 6.94262, 1.18 ) }
    dend_28 { pt3dadd( 22.7652, -58.3766, 7.11951, 1.4 ) }
    dend_28 { pt3dadd( 23.0449, -59.0449, 7.42756, 1.25 ) }
    dend_28 { pt3dadd( 23.3842, -59.8091, 7.83611, 1.03 ) }
    dend_28 { pt3dadd( 23.5039, -60.0611, 8.00051, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.67002, 39.1066, -9.56961, 1.33 ) }
    dend_6 { pt3dadd( -7.09618, 39.8338, -9.61364, 1.33 ) }
    dend_6 { pt3dadd( -7.51721, 40.643, -9.64134, 1.33 ) }
    dend_6 { pt3dadd( -7.90035, 41.455, -9.61786, 1.33 ) }
    dend_6 { pt3dadd( -8.29715, 42.3986, -9.53418, 1.33 ) }
    dend_6 { pt3dadd( -8.69004, 43.459, -9.39879, 1.47 ) }
    dend_6 { pt3dadd( -8.93786, 44.2395, -9.27725, 1.69 ) }
    dend_6 { pt3dadd( -9.0795, 44.8997, -9.14536, 1.77 ) }
    dend_6 { pt3dadd( -9.18534, 45.6575, -8.95979, 1.99 ) }
    dend_6 { pt3dadd( -9.2534, 46.4184, -8.76561, 2.14 ) }
    dend_6 { pt3dadd( -9.3142, 47.3337, -8.53222, 1.84 ) }
    dend_6 { pt3dadd( -9.39798, 48.4117, -8.27468, 1.84 ) }
    dend_6 { pt3dadd( -9.50792, 49.3483, -8.08786, 1.84 ) }
    dend_6 { pt3dadd( -9.613, 49.985, -8.00136, 1.92 ) }
    dend_6 { pt3dadd( -9.78016, 50.7792, -7.94148, 1.92 ) }
    dend_6 { pt3dadd( -9.96383, 51.5421, -7.90462, 1.92 ) }
    dend_6 { pt3dadd( -10.1804, 52.3171, -7.8829, 1.62 ) }
    dend_6 { pt3dadd( -10.494, 53.2577, -7.88387, 1.62 ) }
    dend_6 { pt3dadd( -10.8273, 54.1327, -7.90667, 1.77 ) }
    dend_6 { pt3dadd( -11.1377, 54.8952, -7.946, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.67002, 39.1066, -9.56961, 0.66 ) }
    dend_1 { pt3dadd( -6.00674, 40.2416, -9.87459, 0.66 ) }
    dend_1 { pt3dadd( -5.57856, 40.8492, -9.99574, 0.66 ) }
    dend_1 { pt3dadd( -5.40285, 41.0687, -10.0207, 0.96 ) }
    dend_1 { pt3dadd( -5.0516, 41.4814, -10.0277, 0.96 ) }
    dend_1 { pt3dadd( -4.77233, 41.8174, -9.97258, 0.74 ) }
    dend_1 { pt3dadd( -4.56509, 42.0881, -9.90704, 0.66 ) }
    dend_1 { pt3dadd( -4.21668, 42.5178, -9.73268, 0.66 ) }
    dend_1 { pt3dadd( -3.91824, 42.8789, -9.58722, 0.66 ) }
    dend_1 { pt3dadd( -3.62843, 43.219, -9.4691, 0.66 ) }
    dend_1 { pt3dadd( -2.85382, 44.0629, -9.27482, 0.88 ) }
    dend_1 { pt3dadd( -2.31934, 44.5948, -9.22864, 0.29 ) }
    dend_1 { pt3dadd( -1.879, 44.9798, -9.28083, 0.29 ) }
    dend_1 { pt3dadd( -1.28471, 45.3643, -9.53558, 1.18 ) }
    dend_1 { pt3dadd( -1.00994, 45.4953, -9.72184, 1.62 ) }
    dend_1 { pt3dadd( -0.334151, 45.7488, -10.2778, 0.81 ) }
    dend_1 { pt3dadd( 0.0619145, 45.8683, -10.6436, 0.81 ) }
    dend_1 { pt3dadd( 0.442883, 45.9546, -11.0133, 1.03 ) }
    dend_1 { pt3dadd( 1.0186, 46.073, -11.6078, 0.44 ) }
    dend_1 { pt3dadd( 1.50192, 46.175, -12.1341, 0.44 ) }
    dend_1 { pt3dadd( 1.81264, 46.2584, -12.4658, 1.18 ) }
    dend_1 { pt3dadd( 2.06096, 46.3527, -12.7028, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.47617, -36.2833, -4.08663, 1.03 ) }
    dend_37 { pt3dadd( -2.06741, -37.0777, -5.26188, 1.03 ) }
    dend_37 { pt3dadd( -2.65505, -37.6956, -6.03975, 0.81 ) }
    dend_37 { pt3dadd( -2.96227, -37.9679, -6.35158, 0.81 ) }
    dend_37 { pt3dadd( -3.33951, -38.2422, -6.66551, 0.81 ) }
    dend_37 { pt3dadd( -3.67148, -38.4454, -6.91233, 1.11 ) }
    dend_37 { pt3dadd( -4.04274, -38.6301, -7.15055, 1.11 ) }
    dend_37 { pt3dadd( -4.55802, -38.7732, -7.32398, 1.4 ) }
    dend_37 { pt3dadd( -4.91526, -38.8276, -7.40898, 1.4 ) }
    dend_37 { pt3dadd( -5.53001, -38.853, -7.58755, 1.11 ) }
    dend_37 { pt3dadd( -5.85782, -38.8089, -7.70722, 1.33 ) }
    dend_37 { pt3dadd( -6.45232, -38.6097, -7.96904, 1.03 ) }
    dend_37 { pt3dadd( -6.81486, -38.4232, -8.24147, 0.81 ) }
    dend_37 { pt3dadd( -7.04185, -38.295, -8.45492, 0.81 ) }
    dend_37 { pt3dadd( -7.56261, -38.0387, -9.00167, 0.81 ) }
    dend_37 { pt3dadd( -8.10038, -37.8372, -9.6162, 1.03 ) }
    dend_37 { pt3dadd( -8.51205, -37.7431, -10.1035, 1.33 ) }
    dend_37 { pt3dadd( -9.85469, -37.7002, -11.7443, 1.03 ) }
    dend_37 { pt3dadd( -10.308, -37.7912, -12.2706, 1.03 ) }
    dend_37 { pt3dadd( -10.882, -38.0355, -12.8528, 1.33 ) }
    dend_37 { pt3dadd( -11.3324, -38.3172, -13.2273, 1.33 ) }
    dend_37 { pt3dadd( -11.7053, -38.6071, -13.4771, 1.47 ) }
    dend_37 { pt3dadd( -12.3124, -39.1168, -13.7483, 1.11 ) }
    dend_37 { pt3dadd( -12.805, -39.5193, -13.8427, 0.88 ) }
    dend_37 { pt3dadd( -13.1713, -39.7683, -13.8923, 1.55 ) }
    dend_37 { pt3dadd( -13.5702, -39.9675, -13.9372, 1.84 ) }
    dend_37 { pt3dadd( -14.008, -40.1024, -13.9881, 1.99 ) }
    dend_37 { pt3dadd( -14.7757, -40.1809, -14.0702, 1.18 ) }
    dend_37 { pt3dadd( -15.2938, -40.1213, -14.1153, 0.88 ) }
    dend_37 { pt3dadd( -15.8239, -39.9514, -14.1611, 1.25 ) }
    dend_37 { pt3dadd( -16.2347, -39.7179, -14.2013, 1.47 ) }
    dend_37 { pt3dadd( -16.7167, -39.343, -14.3093, 1.18 ) }
    dend_37 { pt3dadd( -17.2351, -38.96, -14.6529, 0.96 ) }
    dend_37 { pt3dadd( -17.4041, -38.8752, -14.8752, 1.18 ) }
    dend_37 { pt3dadd( -17.5603, -38.8325, -15.1237, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -17.8955, -38.7897, -15.6483, 0.74 ) }
    dend_37 { pt3dadd( -18.5777, -38.7811, -16.6586, 0.74 ) }
    dend_37 { pt3dadd( -19.7949, -38.8577, -18.5277, 1.47 ) }
    dend_37 { pt3dadd( -20.5123, -38.9471, -19.656, 1.99 ) }
    dend_37 { pt3dadd( -21.1412, -39.0614, -20.65, 1.47 ) }
    dend_37 { pt3dadd( -21.5066, -39.1512, -21.2277, 1.62 ) }
    dend_37 { pt3dadd( -22.0344, -39.3222, -22.0615, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.47617, -36.2833, -4.08663, 0.88 ) }
    dend_30 { pt3dadd( -0.520542, -36.8683, -4.67975, 0.88 ) }
    dend_30 { pt3dadd( 0.178032, -37.4071, -5.23337, 1.03 ) }
    dend_30 { pt3dadd( 0.792531, -38.058, -5.84559, 1.03 ) }
    dend_30 { pt3dadd( 1.25032, -38.7904, -6.46969, 0.88 ) }
    dend_30 { pt3dadd( 1.62168, -39.6758, -7.15575, 0.81 ) }
    dend_30 { pt3dadd( 1.91058, -40.7656, -7.99029, 1.03 ) }
    dend_30 { pt3dadd( 1.88752, -41.3895, -8.46074, 1.33 ) }
    dend_30 { pt3dadd( 1.59794, -42.2969, -9.24333, 0.88 ) }
    dend_30 { pt3dadd( 1.06887, -43.2326, -10.1607, 0.66 ) }
    dend_30 { pt3dadd( 0.734046, -43.7016, -10.7256, 0.96 ) }
    dend_30 { pt3dadd( 0.367656, -44.2185, -11.558, 0.66 ) }
    dend_30 { pt3dadd( 0.162964, -44.6154, -12.3908, 0.74 ) }
    dend_30 { pt3dadd( 0.110848, -45.3467, -14.3593, 0.88 ) }
    dend_30 { pt3dadd( 0.263398, -45.5722, -15.0877, 1.11 ) }
    dend_30 { pt3dadd( 0.96846, -46.1596, -17.0399, 0.88 ) }
    dend_30 { pt3dadd( 1.81846, -46.8405, -19.1606, 0.74 ) }
    dend_30 { pt3dadd( 2.47761, -47.4096, -20.6486, 0.74 ) }
    dend_30 { pt3dadd( 2.99555, -47.914, -21.7859, 0.74 ) }
    dend_30 { pt3dadd( 3.45633, -48.437, -22.7885, 0.66 ) }
    dend_30 { pt3dadd( 4.24798, -49.5196, -24.5933, 0.96 ) }
    dend_30 { pt3dadd( 4.77238, -50.4136, -25.8118, 1.25 ) }
    dend_30 { pt3dadd( 5.24841, -51.356, -26.9189, 0.81 ) }
    dend_30 { pt3dadd( 5.79827, -52.5019, -28.1815, 0.74 ) }
    dend_30 { pt3dadd( 6.18335, -53.2061, -28.915, 0.88 ) }
    dend_30 { pt3dadd( 6.83431, -54.0964, -29.7047, 0.59 ) }
    dend_30 { pt3dadd( 7.74704, -54.9385, -30.2589, 0.59 ) }
    dend_30 { pt3dadd( 8.66803, -55.5905, -30.5724, 1.18 ) }
    dend_30 { pt3dadd( 9.14546, -55.862, -30.6188, 1.62 ) }
    dend_30 { pt3dadd( 9.66971, -56.1184, -30.5801, 1.84 ) }
    dend_30 { pt3dadd( 11.1068, -56.7296, -30.3542, 1.18 ) }
    dend_30 { pt3dadd( 12.2165, -57.1432, -30.2219, 0.81 ) }
    dend_30 { pt3dadd( 12.6805, -57.3039, -30.2087, 0.96 ) }
    dend_30 { pt3dadd( 13.8926, -57.7281, -30.3961, 0.59 ) }
    dend_30 { pt3dadd( 14.3141, -57.8904, -30.5418, 0.66 ) }
    dend_30 { pt3dadd( 15.0813, -58.2295, -30.9357, 0.52 ) }
    dend_30 { pt3dadd( 16.5999, -59.0732, -32.0913, 1.18 ) }
    dend_30 { pt3dadd( 17.1598, -59.4718, -32.6219, 1.25 ) }
    dend_30 { pt3dadd( 18.1208, -60.2624, -33.857, 0.88 ) }
    dend_30 { pt3dadd( 18.518, -60.6048, -34.4469, 0.88 ) }
    dend_30 { pt3dadd( 19.056, -61.0566, -35.2611, 0.66 ) }
    dend_30 { pt3dadd( 20.0737, -61.8027, -36.8192, 1.47 ) }
    dend_30 { pt3dadd( 20.5446, -62.0854, -37.5298, 1.69 ) }
    dend_30 { pt3dadd( 22.7718, -63.159, -40.8376, 0.81 ) }
    dend_30 { pt3dadd( 23.2687, -63.3524, -41.5406, 0.81 ) }
    dend_30 { pt3dadd( 23.8994, -63.5529, -42.3709, 0.66 ) }
    dend_30 { pt3dadd( 25.4154, -63.9216, -44.1462, 1.03 ) }
    dend_30 { pt3dadd( 25.9478, -64.0157, -44.6526, 1.03 ) }
    dend_30 { pt3dadd( 26.685, -64.1614, -45.1939, 1.33 ) }
    dend_30 { pt3dadd( 27.9428, -64.5274, -45.7075, 0.88 ) }
    dend_30 { pt3dadd( 28.8837, -64.9195, -45.9787, 0.88 ) }
    dend_30 { pt3dadd( 29.6317, -65.3391, -46.0736, 0.74 ) }
    dend_30 { pt3dadd( 29.9332, -65.5378, -46.0658, 0.88 ) }
    dend_30 { pt3dadd( 30.8384, -66.1591, -45.9856, 0.44 ) }
    dend_30 { pt3dadd( 31.6091, -66.6762, -45.8767, 1.77 ) }
    dend_30 { pt3dadd( 32.0315, -66.9641, -45.7938, 2.06 ) }
    dend_30 { pt3dadd( 32.5196, -67.3698, -45.662, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.1377, 54.8952, -7.946, 1.25 ) }
    dend_12 { pt3dadd( -10.6278, 56.2229, -9.18562, 1.25 ) }
    dend_12 { pt3dadd( -10.3893, 56.7839, -9.62319, 1.4 ) }
    dend_12 { pt3dadd( -10.004, 57.8017, -10.272, 1.11 ) }
    dend_12 { pt3dadd( -9.5709, 59.1347, -10.981, 1.33 ) }
    dend_12 { pt3dadd( -9.31138, 60.0839, -11.415, 1.25 ) }
    dend_12 { pt3dadd( -8.99404, 61.4031, -11.9624, 1.25 ) }
    dend_12 { pt3dadd( -8.64389, 62.8976, -12.4765, 1.47 ) }
    dend_12 { pt3dadd( -8.3139, 64.3321, -12.9084, 1.69 ) }
    dend_12 { pt3dadd( -8.05145, 65.608, -13.1924, 1.84 ) }
    dend_12 { pt3dadd( -7.88182, 66.7194, -13.3529, 2.14 ) }
    dend_12 { pt3dadd( -7.81145, 67.8198, -13.4736, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.1377, 54.8952, -7.946, 0.96 ) }
    dend_7 { pt3dadd( -12.0975, 56.5778, -7.3108, 0.96 ) }
    dend_7 { pt3dadd( -12.8202, 57.6871, -7.04543, 0.81 ) }
    dend_7 { pt3dadd( -14.2862, 59.6121, -6.81715, 0.66 ) }
    dend_7 { pt3dadd( -15.1587, 60.5679, -6.82842, 0.59 ) }
    dend_7 { pt3dadd( -16.269, 61.6138, -6.95096, 0.59 ) }
    dend_7 { pt3dadd( -17.736, 62.8115, -7.23367, 0.74 ) }
    dend_7 { pt3dadd( -19.0186, 63.5925, -7.67265, 0.74 ) }
    dend_7 { pt3dadd( -20.1008, 64.124, -8.15855, 1.11 ) }
    dend_7 { pt3dadd( -21.4337, 64.6841, -8.84249, 0.74 ) }
    dend_7 { pt3dadd( -22.3753, 65.0792, -9.33533, 1.25 ) }
    dend_7 { pt3dadd( -23.7669, 65.7476, -10.0668, 0.96 ) }
    dend_7 { pt3dadd( -25.2483, 66.674, -10.7568, 0.44 ) }
    dend_7 { pt3dadd( -25.7671, 67.1443, -10.998, 0.44 ) }
    dend_7 { pt3dadd( -26.2446, 67.8113, -11.235, 0.74 ) }
    dend_7 { pt3dadd( -26.6975, 68.818, -11.4645, 0.74 ) }
    dend_7 { pt3dadd( -27.0757, 69.9938, -11.5166, 0.74 ) }
    dend_7 { pt3dadd( -27.4197, 71.4069, -11.24, 0.59 ) }
    dend_7 { pt3dadd( -27.6276, 72.4498, -10.7991, 0.59 ) }
    dend_7 { pt3dadd( -27.7971, 73.4994, -10.1389, 0.88 ) }
    dend_7 { pt3dadd( -27.9092, 74.4493, -9.4506, 0.66 ) }
    dend_7 { pt3dadd( -28.1796, 76.6824, -7.45416, 0.66 ) }
    dend_7 { pt3dadd( -28.4101, 78.2656, -5.86332, 0.96 ) }
    dend_7 { pt3dadd( -28.5557, 79.0852, -4.9939, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -28.7903, 80.1085, -3.86595, 0.52 ) }
    dend_7 { pt3dadd( -29.1416, 81.3075, -2.55312, 0.88 ) }
    dend_7 { pt3dadd( -29.7323, 83.006, -0.897032, 0.59 ) }
    dend_7 { pt3dadd( -30.0899, 83.891, -0.235345, 0.59 ) }
    dend_7 { pt3dadd( -30.48, 84.6885, 0.259723, 0.59 ) }
    dend_7 { pt3dadd( -31.2732, 86.0305, 1.027, 0.59 ) }
    dend_7 { pt3dadd( -32.0669, 87.1925, 1.66533, 1.11 ) }
    dend_7 { pt3dadd( -33.1576, 88.6599, 2.4493, 0.59 ) }
    dend_7 { pt3dadd( -33.8542, 89.5688, 2.84508, 0.59 ) }
    dend_7 { pt3dadd( -34.7008, 90.6163, 3.30026, 0.81 ) }
    dend_7 { pt3dadd( -35.5543, 91.6544, 3.72126, 0.81 ) }
    dend_7 { pt3dadd( -36.4593, 92.7379, 4.07835, 0.96 ) }
    dend_7 { pt3dadd( -37.2798, 93.6764, 4.35652, 1.03 ) }
    dend_7 { pt3dadd( -38.1059, 94.5179, 4.60091, 1.33 ) }
    dend_7 { pt3dadd( -38.9777, 95.3367, 4.88124, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.06096, 46.3527, -12.7028, 0.88 ) }
    dend_3 { pt3dadd( 3.351, 46.6724, -13.0744, 0.88 ) }
    dend_3 { pt3dadd( 4.39472, 46.8373, -13.3741, 0.66 ) }
    dend_3 { pt3dadd( 5.17615, 46.9125, -13.5991, 1.03 ) }
    dend_3 { pt3dadd( 6.06795, 46.9966, -13.888, 1.18 ) }
    dend_3 { pt3dadd( 6.83793, 47.1019, -14.1832, 1.18 ) }
    dend_3 { pt3dadd( 7.42324, 47.2154, -14.4444, 0.81 ) }
    dend_3 { pt3dadd( 8.14584, 47.3948, -14.8447, 0.44 ) }
    dend_3 { pt3dadd( 8.93561, 47.6934, -15.3763, 0.44 ) }
    dend_3 { pt3dadd( 9.79297, 48.2255, -16.0638, 0.44 ) }
    dend_3 { pt3dadd( 10.5671, 48.9121, -16.7511, 0.59 ) }
    dend_3 { pt3dadd( 11.0917, 49.4641, -17.223, 0.81 ) }
    dend_3 { pt3dadd( 11.5032, 49.9069, -17.5743, 0.81 ) }
    dend_3 { pt3dadd( 12.0217, 50.4548, -17.9794, 0.66 ) }
    dend_3 { pt3dadd( 12.685, 51.0649, -18.4185, 0.66 ) }
    dend_3 { pt3dadd( 13.5306, 51.6535, -18.8464, 0.66 ) }
    dend_3 { pt3dadd( 14.299, 52.012, -19.1482, 0.88 ) }
    dend_3 { pt3dadd( 15.1431, 52.2677, -19.4334, 0.52 ) }
    dend_3 { pt3dadd( 15.7659, 52.3715, -19.6288, 0.96 ) }
    dend_3 { pt3dadd( 16.5441, 52.3816, -19.8656, 0.96 ) }
    dend_3 { pt3dadd( 17.1517, 52.2877, -20.0443, 1.11 ) }
    dend_3 { pt3dadd( 17.9266, 52.014, -20.2883, 1.18 ) }
    dend_3 { pt3dadd( 18.485, 51.7103, -20.4728, 1.18 ) }
    dend_3 { pt3dadd( 19.1354, 51.2132, -20.7275, 0.66 ) }
    dend_3 { pt3dadd( 20.0027, 50.3391, -21.1496, 0.96 ) }
    dend_3 { pt3dadd( 20.7928, 49.2951, -21.6321, 0.44 ) }
    dend_3 { pt3dadd( 21.6284, 47.932, -22.3109, 0.37 ) }
    dend_3 { pt3dadd( 22.0544, 47.1542, -22.7409, 1.18 ) }
    dend_3 { pt3dadd( 22.5063, 46.2947, -23.2715, 1.33 ) }
    dend_3 { pt3dadd( 22.8406, 45.6408, -23.7238, 1.33 ) }
    dend_3 { pt3dadd( 23.3658, 44.5252, -24.6311, 0.59 ) }
    dend_3 { pt3dadd( 23.8014, 43.4611, -25.6312, 0.37 ) }
    dend_3 { pt3dadd( 24.0508, 42.7273, -26.3837, 0.37 ) }
    dend_3 { pt3dadd( 24.1894, 42.1479, -27.0356, 0.37 ) }
    dend_3 { pt3dadd( 24.2928, 41.5372, -27.7522, 0.37 ) }
    dend_3 { pt3dadd( 24.3726, 40.5462, -28.9585, 0.52 ) }
    dend_3 { pt3dadd( 24.3794, 39.727, -29.9772, 0.52 ) }
    dend_3 { pt3dadd( 24.353, 38.9574, -30.8748, 0.52 ) }
    dend_3 { pt3dadd( 24.3145, 37.3272, -32.5272, 0.96 ) }
    dend_3 { pt3dadd( 24.3487, 36.2574, -33.4787, 1.47 ) }
    dend_3 { pt3dadd( 24.4671, 35.3701, -34.1923, 1.69 ) }
    dend_3 { pt3dadd( 24.6289, 34.7639, -34.6335, 1.92 ) }
    dend_3 { pt3dadd( 24.9232, 34.0138, -35.1454, 1.92 ) }
    dend_3 { pt3dadd( 25.7856, 32.3379, -36.1965, 0.74 ) }
    dend_3 { pt3dadd( 26.5677, 31.0988, -36.859, 0.37 ) }
    dend_3 { pt3dadd( 27.1422, 30.3318, -37.2533, 0.88 ) }
    dend_3 { pt3dadd( 27.5662, 29.8746, -37.4951, 1.11 ) }
    dend_3 { pt3dadd( 27.9608, 29.5122, -37.7064, 1.11 ) }
    dend_3 { pt3dadd( 28.5119, 29.0628, -37.9893, 1.33 ) }
    dend_3 { pt3dadd( 28.8484, 28.8039, -38.1545, 1.33 ) }
    dend_3 { pt3dadd( 29.4224, 28.2626, -38.3976, 0.81 ) }
    dend_3 { pt3dadd( 29.8663, 27.5606, -38.6061, 0.44 ) }
    dend_3 { pt3dadd( 30.2162, 26.7083, -38.8541, 0.37 ) }
    dend_3 { pt3dadd( 30.5595, 25.6452, -39.21, 0.37 ) }
    dend_3 { pt3dadd( 30.7492, 24.9843, -39.4678, 1.18 ) }
    dend_3 { pt3dadd( 30.9522, 24.2438, -39.7951, 1.4 ) }
    dend_3 { pt3dadd( 31.3766, 22.6922, -40.6189, 0.29 ) }
    dend_3 { pt3dadd( 31.8383, 21.3085, -41.5719, 0.66 ) }
    dend_3 { pt3dadd( 32.2901, 20.2814, -42.4811, 1.11 ) }
    dend_3 { pt3dadd( 32.6242, 19.6216, -43.1655, 1.62 ) }
    dend_3 { pt3dadd( 32.7761, 19.3193, -43.4936, 1.84 ) }
    dend_3 { pt3dadd( 33.167, 18.5493, -44.3388, 1.84 ) }
    dend_3 { pt3dadd( 33.6847, 17.4241, -45.5695, 0.81 ) }
    dend_3 { pt3dadd( 34.078, 16.4665, -46.5425, 0.44 ) }
    dend_3 { pt3dadd( 34.3404, 15.776, -47.1805, 0.44 ) }
    dend_3 { pt3dadd( 34.7719, 14.7091, -48.0764, 0.44 ) }
    dend_3 { pt3dadd( 35.0884, 13.9994, -48.6163, 0.59 ) }
    dend_3 { pt3dadd( 35.9027, 12.4565, -49.6544, 0.52 ) }
    dend_3 { pt3dadd( 36.3907, 11.7036, -50.118, 0.37 ) }
    dend_3 { pt3dadd( 36.8707, 11.1358, -50.5314, 0.96 ) }
    dend_3 { pt3dadd( 37.5767, 10.4292, -51.1447, 1.62 ) }
    dend_3 { pt3dadd( 37.9074, 10.1221, -51.4271, 1.99 ) }
    dend_3 { pt3dadd( 38.5411, 9.50252, -51.9773, 1.99 ) }
    dend_3 { pt3dadd( 38.9423, 9.0942, -52.304, 1.47 ) }
    dend_3 { pt3dadd( 40.3772, 7.45948, -53.5216, 0.52 ) }
    dend_3 { pt3dadd( 41.2447, 6.45858, -54.2552, 0.52 ) }
    dend_3 { pt3dadd( 41.9197, 5.69106, -54.8112, 0.88 ) }
    dend_3 { pt3dadd( 42.6226, 4.93806, -55.3554, 0.59 ) }
    dend_3 { pt3dadd( 43.2386, 4.31517, -55.7872, 0.37 ) }
    dend_3 { pt3dadd( 43.764, 3.82845, -56.0744, 0.37 ) }
    dend_3 { pt3dadd( 44.538, 3.21095, -56.3119, 0.74 ) }
    dend_3 { pt3dadd( 45.0207, 2.8386, -56.4619, 0.74 ) }
    dend_3 { pt3dadd( 45.4328, 2.48299, -56.6398, 0.37 ) }
    dend_3 { pt3dadd( 45.6952, 2.19846, -56.8005, 0.37 ) }
    dend_3 { pt3dadd( 46.2385, 1.44952, -57.2554, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 46.4306, 1.08688, -57.4786, 1.03 ) }
    dend_3 { pt3dadd( 47.0759, -0.445198, -58.3866, 0.37 ) }
    dend_3 { pt3dadd( 47.4766, -1.52466, -59.0226, 1.18 ) }
    dend_3 { pt3dadd( 47.7653, -2.37721, -59.5222, 1.47 ) }
    dend_3 { pt3dadd( 48.1279, -3.40043, -60.1325, 0.66 ) }
    dend_3 { pt3dadd( 48.6297, -4.61542, -60.9279, 0.29 ) }
    dend_3 { pt3dadd( 48.8818, -5.10863, -61.2602, 1.25 ) }
    dend_3 { pt3dadd( 49.1882, -5.6044, -61.6204, 1.55 ) }
    dend_3 { pt3dadd( 49.531, -6.06063, -61.9973, 1.55 ) }
    dend_3 { pt3dadd( 50.5254, -7.12194, -62.9969, 0.44 ) }
    dend_3 { pt3dadd( 51.7322, -8.14108, -64.134, 1.18 ) }
    dend_3 { pt3dadd( 52.6852, -8.81403, -64.9806, 1.84 ) }
    dend_3 { pt3dadd( 53.8307, -9.54606, -65.9764, 2.06 ) }
    dend_3 { pt3dadd( 55.1936, -10.3369, -67.1749, 0.29 ) }
    dend_3 { pt3dadd( 56.017, -10.7746, -67.9151, 0.29 ) }
    dend_3 { pt3dadd( 56.9324, -11.2652, -68.7443, 1.18 ) }
    dend_3 { pt3dadd( 57.6845, -11.7228, -69.4051, 0.88 ) }
    dend_3 { pt3dadd( 58.1739, -12.0362, -69.8198, 0.52 ) }
    dend_3 { pt3dadd( 59.2264, -12.7289, -70.6272, 0.52 ) }
    dend_3 { pt3dadd( 59.8484, -13.1772, -71.1063, 0.52 ) }
    dend_3 { pt3dadd( 60.761, -13.8921, -71.7898, 0.29 ) }
    dend_3 { pt3dadd( 61.51, -14.502, -72.2961, 0.29 ) }
    dend_3 { pt3dadd( 62.2276, -15.075, -72.7557, 0.66 ) }
    dend_3 { pt3dadd( 62.8852, -15.6193, -73.1451, 0.81 ) }
    dend_3 { pt3dadd( 63.1513, -15.8491, -73.2817, 0.81 ) }
    dend_3 { pt3dadd( 64.1747, -16.7452, -73.8234, 0.29 ) }
    dend_3 { pt3dadd( 64.9403, -17.3916, -74.2498, 0.96 ) }
    dend_3 { pt3dadd( 65.6337, -17.9664, -74.6766, 1.03 ) }
    dend_3 { pt3dadd( 66.4269, -18.6473, -75.1861, 0.29 ) }
    dend_3 { pt3dadd( 66.901, -19.0488, -75.4901, 0.29 ) }
    dend_3 { pt3dadd( 67.6552, -19.6454, -75.9584, 0.96 ) }
    dend_3 { pt3dadd( 68.432, -20.2014, -76.4033, 0.96 ) }
    dend_3 { pt3dadd( 69.4938, -20.8708, -76.9721, 0.37 ) }
    dend_3 { pt3dadd( 70.5736, -21.4627, -77.4807, 0.66 ) }
    dend_3 { pt3dadd( 71.0406, -21.7117, -77.6884, 0.96 ) }
    dend_3 { pt3dadd( 72.1767, -22.345, -78.1585, 0.29 ) }
    dend_3 { pt3dadd( 73.3582, -23.0246, -78.5981, 1.03 ) }
    dend_3 { pt3dadd( 73.7827, -23.2649, -78.7529, 1.33 ) }
    dend_3 { pt3dadd( 74.8922, -23.8446, -79.1326, 0.37 ) }
    dend_3 { pt3dadd( 75.9529, -24.2982, -79.5187, 0.37 ) }
    dend_3 { pt3dadd( 76.8669, -24.6273, -79.8996, 0.37 ) }
    dend_3 { pt3dadd( 77.4362, -24.7939, -80.1641, 0.74 ) }
    dend_3 { pt3dadd( 78.3478, -25.0368, -80.6166, 0.74 ) }
    dend_3 { pt3dadd( 79.0168, -25.2196, -80.9618, 0.37 ) }
    dend_3 { pt3dadd( 79.8779, -25.432, -81.4188, 0.29 ) }
    dend_3 { pt3dadd( 80.7767, -25.5957, -81.8896, 0.29 ) }
    dend_3 { pt3dadd( 81.5047, -25.697, -82.264, 0.88 ) }
    dend_3 { pt3dadd( 82.2883, -25.7918, -82.6529, 1.25 ) }
    dend_3 { pt3dadd( 83.2097, -25.8953, -83.1036, 1.18 ) }
    dend_3 { pt3dadd( 84.429, -26.0145, -83.7002, 0.29 ) }
    dend_3 { pt3dadd( 85.3108, -26.0641, -84.1375, 0.74 ) }
    dend_3 { pt3dadd( 86.0528, -26.0834, -84.5032, 0.74 ) }
    dend_3 { pt3dadd( 86.9107, -26.0947, -84.9704, 0.37 ) }
    dend_3 { pt3dadd( 87.9558, -26.1121, -85.6042, 0.96 ) }
    dend_3 { pt3dadd( 88.5617, -26.1412, -85.9904, 1.33 ) }
    dend_3 { pt3dadd( 89.1605, -26.2252, -86.3985, 1.33 ) }
    dend_3 { pt3dadd( 90.1245, -26.4711, -87.0607, 0.37 ) }
    dend_3 { pt3dadd( 91.1417, -26.8328, -87.7573, 0.44 ) }
    dend_3 { pt3dadd( 91.8441, -27.1288, -88.2275, 0.44 ) }
    dend_3 { pt3dadd( 92.6303, -27.4737, -88.7169, 0.44 ) }
    dend_3 { pt3dadd( 93.7713, -27.9738, -89.3813, 0.96 ) }
    dend_3 { pt3dadd( 94.511, -28.3145, -89.7736, 1.03 ) }
    dend_3 { pt3dadd( 95.0382, -28.5698, -90.0222, 0.81 ) }
    dend_3 { pt3dadd( 95.7417, -28.9383, -90.3133, 0.52 ) }
    dend_3 { pt3dadd( 96.5781, -29.4073, -90.634, 0.29 ) }
    dend_3 { pt3dadd( 97.0232, -29.6594, -90.8136, 0.29 ) }
    dend_3 { pt3dadd( 97.8261, -30.076, -91.0647, 0.88 ) }
    dend_3 { pt3dadd( 98.5955, -30.4594, -91.2571, 1.25 ) }
    dend_3 { pt3dadd( 98.9106, -30.628, -91.3199, 1.25 ) }
    dend_3 { pt3dadd( 99.9811, -31.2982, -91.4993, 0.29 ) }
    dend_3 { pt3dadd( 100.734, -31.8645, -91.6162, 0.29 ) }
    dend_3 { pt3dadd( 102.004, -32.9113, -91.8056, 0.29 ) }
    dend_3 { pt3dadd( 102.444, -33.2811, -91.8788, 0.29 ) }
    dend_3 { pt3dadd( 103.37, -34.046, -92.071, 0.96 ) }
    dend_3 { pt3dadd( 104.08, -34.5849, -92.2573, 0.96 ) }
    dend_3 { pt3dadd( 104.867, -35.1279, -92.5259, 0.44 ) }
    dend_3 { pt3dadd( 105.388, -35.4488, -92.7452, 0.37 ) }
    dend_3 { pt3dadd( 105.997, -35.7692, -93.0882, 0.81 ) }
    dend_3 { pt3dadd( 106.9, -36.1287, -93.6728, 0.29 ) }
    dend_3 { pt3dadd( 107.62, -36.3855, -94.1947, 0.29 ) }
    dend_3 { pt3dadd( 108.263, -36.6323, -94.6841, 0.74 ) }
    dend_3 { pt3dadd( 109.002, -36.9735, -95.2865, 0.96 ) }
    dend_3 { pt3dadd( 109.757, -37.4061, -95.9352, 0.96 ) }
    dend_3 { pt3dadd( 110.766, -38.085, -96.8047, 0.44 ) }
    dend_3 { pt3dadd( 111.572, -38.7226, -97.5417, 0.29 ) }
    dend_3 { pt3dadd( 112.228, -39.328, -98.1651, 0.29 ) }
    dend_3 { pt3dadd( 112.832, -39.9459, -98.726, 0.96 ) }
    dend_3 { pt3dadd( 113.163, -40.2995, -99.0184, 1.11 ) }
    dend_3 { pt3dadd( 113.748, -40.8951, -99.4782, 1.18 ) }
    dend_3 { pt3dadd( 114.728, -41.8588, -100.254, 0.37 ) }
    dend_3 { pt3dadd( 115.284, -42.3443, -100.715, 0.37 ) }
    dend_3 { pt3dadd( 116.099, -43.0073, -101.438, 0.29 ) }
    dend_3 { pt3dadd( 116.882, -43.5964, -102.155, 0.29 ) }
    dend_3 { pt3dadd( 117.635, -44.125, -102.863, 0.96 ) }
    dend_3 { pt3dadd( 118.813, -44.8716, -103.961, 0.44 ) }
    dend_3 { pt3dadd( 119.385, -45.1821, -104.457, 1.03 ) }
    dend_3 { pt3dadd( 119.846, -45.4025, -104.833, 1.03 ) }
    dend_3 { pt3dadd( 120.859, -45.8132, -105.634, 0.29 ) }
    dend_3 { pt3dadd( 121.389, -45.9816, -106.011, 0.29 ) }
    dend_3 { pt3dadd( 122.027, -46.1257, -106.437, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 122.852, -46.2585, -106.945, 0.96 ) }
    dend_3 { pt3dadd( 123.361, -46.3399, -107.263, 0.37 ) }
    dend_3 { pt3dadd( 124.206, -46.4892, -107.806, 0.22 ) }
    dend_3 { pt3dadd( 125.138, -46.6951, -108.436, 1.11 ) }
    dend_3 { pt3dadd( 126.162, -46.9126, -109.154, 1.11 ) }
    dend_3 { pt3dadd( 127.548, -47.1957, -110.176, 0.44 ) }
    dend_3 { pt3dadd( 128.197, -47.3272, -110.683, 1.03 ) }
    dend_3 { pt3dadd( 128.634, -47.4347, -111.037, 1.03 ) }
    dend_3 { pt3dadd( 129.534, -47.7714, -111.783, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.06096, 46.3527, -12.7028, 0.29 ) }
    dend_2 { pt3dadd( 2.40357, 47.7321, -13.2532, 0.29 ) }
    dend_2 { pt3dadd( 2.56419, 48.3788, -13.5378, 0.29 ) }
    dend_2 { pt3dadd( 2.86705, 49.6208, -14.0783, 0.29 ) }
    dend_2 { pt3dadd( 3.07471, 50.4789, -14.4554, 0.81 ) }
    dend_2 { pt3dadd( 3.19485, 50.9821, -14.685, 0.81 ) }
    dend_2 { pt3dadd( 3.43119, 52.0256, -15.1573, 0.29 ) }
    dend_2 { pt3dadd( 3.66027, 52.9919, -15.6273, 0.29 ) }
    dend_2 { pt3dadd( 3.86676, 53.9124, -16.0816, 0.88 ) }
    dend_2 { pt3dadd( 3.9235, 54.1965, -16.2182, 0.88 ) }
    dend_2 { pt3dadd( 4.07008, 55.0072, -16.6186, 0.22 ) }
    dend_2 { pt3dadd( 4.25179, 56.0069, -17.1118, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -22.0344, -39.3222, -22.0615, 0.88 ) }
    dend_49 { pt3dadd( -28.8852, -37.9435, -30.6513, 0.88 ) }
    dend_49 { pt3dadd( -29.8372, -37.8156, -31.746, 0.52 ) }
    dend_49 { pt3dadd( -30.2796, -37.777, -32.2186, 0.52 ) }
    dend_49 { pt3dadd( -31.3708, -37.7288, -33.2907, 0.52 ) }
    dend_49 { pt3dadd( -32.5158, -37.7446, -34.3017, 0.52 ) }
    dend_49 { pt3dadd( -33.4638, -37.819, -35.0315, 1.03 ) }
    dend_49 { pt3dadd( -33.9628, -38.0936, -35.0111, 1.62 ) }
    dend_49 { pt3dadd( -34.2077, -38.2421, -34.9873, 1.99 ) }
    dend_49 { pt3dadd( -34.808, -38.581, -34.8964, 2.14 ) }
    dend_49 { pt3dadd( -35.8723, -39.0118, -34.7233, 1.55 ) }
    dend_49 { pt3dadd( -36.9265, -39.242, -34.6909, 0.74 ) }
    dend_49 { pt3dadd( -38.0021, -39.3384, -34.8503, 0.37 ) }
    dend_49 { pt3dadd( -39.0418, -39.3833, -35.1192, 0.37 ) }
    dend_49 { pt3dadd( -39.7818, -39.4415, -35.4314, 0.37 ) }
    dend_49 { pt3dadd( -41.5199, -39.6296, -36.374, 0.74 ) }
    dend_49 { pt3dadd( -43.2674, -39.8684, -37.4313, 1.4 ) }
    dend_49 { pt3dadd( -44.1846, -40.0283, -38.002, 1.92 ) }
    dend_49 { pt3dadd( -44.6312, -40.1246, -38.2806, 2.21 ) }
    dend_49 { pt3dadd( -47.1604, -40.6945, -39.9273, 0.52 ) }
    dend_49 { pt3dadd( -47.9446, -40.8719, -40.461, 0.52 ) }
    dend_49 { pt3dadd( -48.9312, -41.095, -41.1529, 0.52 ) }
    dend_49 { pt3dadd( -49.6781, -41.2029, -41.6848, 0.59 ) }
    dend_49 { pt3dadd( -50.2498, -41.2204, -42.1097, 0.59 ) }
    dend_49 { pt3dadd( -52.2405, -41.0283, -43.575, 1.69 ) }
    dend_49 { pt3dadd( -54.0658, -40.5759, -44.8521, 2.06 ) }
    dend_49 { pt3dadd( -55.6276, -40.0769, -45.8967, 1.03 ) }
    dend_49 { pt3dadd( -56.3863, -39.792, -46.3982, 0.29 ) }
    dend_49 { pt3dadd( -57.1845, -39.5022, -46.8964, 0.29 ) }
    dend_49 { pt3dadd( -58.1839, -39.1952, -47.4205, 1.25 ) }
    dend_49 { pt3dadd( -58.7855, -39.0797, -47.6609, 1.62 ) }
    dend_49 { pt3dadd( -59.6104, -38.9905, -47.948, 1.92 ) }
    dend_49 { pt3dadd( -61.9988, -38.9779, -48.8122, 0.81 ) }
    dend_49 { pt3dadd( -63.156, -39.1398, -49.2584, 1.11 ) }
    dend_49 { pt3dadd( -63.7305, -39.2647, -49.5223, 1.11 ) }
    dend_49 { pt3dadd( -65.0471, -39.5753, -50.2404, 0.37 ) }
    dend_49 { pt3dadd( -65.888, -39.7631, -50.7464, 0.29 ) }
    dend_49 { pt3dadd( -66.8243, -39.9915, -51.327, 0.29 ) }
    dend_49 { pt3dadd( -67.8097, -40.249, -51.8924, 0.29 ) }
    dend_49 { pt3dadd( -69.7594, -40.6594, -53.0454, 1.33 ) }
    dend_49 { pt3dadd( -70.5337, -40.7723, -53.5321, 1.55 ) }
    dend_49 { pt3dadd( -71.2796, -40.8229, -54.0344, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.0344, -39.3222, -22.0615, 1.18 ) }
    dend_38 { pt3dadd( -23.2046, -39.7296, -22.5236, 1.18 ) }
    dend_38 { pt3dadd( -24.6125, -40.2581, -22.9882, 0.52 ) }
    dend_38 { pt3dadd( -25.4322, -40.5576, -23.2368, 0.52 ) }
    dend_38 { pt3dadd( -27.336, -41.2156, -23.6374, 0.88 ) }
    dend_38 { pt3dadd( -28.5256, -41.6114, -23.7977, 1.18 ) }
    dend_38 { pt3dadd( -29.4045, -41.9186, -23.8728, 1.18 ) }
    dend_38 { pt3dadd( -30.4695, -42.3392, -23.8761, 1.25 ) }
    dend_38 { pt3dadd( -31.4219, -42.7586, -23.8236, 1.11 ) }
    dend_38 { pt3dadd( -33.0081, -43.5063, -23.5521, 0.88 ) }
    dend_38 { pt3dadd( -33.9797, -43.9731, -23.2758, 0.59 ) }
    dend_38 { pt3dadd( -34.7855, -44.3571, -23.0236, 0.44 ) }
    dend_38 { pt3dadd( -35.3773, -44.6272, -22.8281, 0.29 ) }
    dend_38 { pt3dadd( -36.0299, -44.9052, -22.605, 0.29 ) }
    dend_38 { pt3dadd( -36.7842, -45.2045, -22.3727, 0.88 ) }
    dend_38 { pt3dadd( -37.4796, -45.4256, -22.2475, 1.25 ) }
    dend_38 { pt3dadd( -37.8931, -45.53, -22.204, 1.47 ) }
    dend_38 { pt3dadd( -38.5552, -45.6702, -22.1622, 1.47 ) }
    dend_38 { pt3dadd( -39.1114, -45.7969, -22.149, 1.33 ) }
    dend_38 { pt3dadd( -39.9515, -46.0257, -22.1548, 0.59 ) }
    dend_38 { pt3dadd( -40.8137, -46.3093, -22.1918, 0.44 ) }
    dend_38 { pt3dadd( -41.8977, -46.706, -22.259, 0.37 ) }
    dend_38 { pt3dadd( -42.5592, -46.9539, -22.3061, 0.96 ) }
    dend_38 { pt3dadd( -43.4064, -47.2671, -22.3712, 0.59 ) }
    dend_38 { pt3dadd( -44.5747, -47.6771, -22.4626, 0.52 ) }
    dend_38 { pt3dadd( -45.2387, -47.8804, -22.5169, 0.52 ) }
    dend_38 { pt3dadd( -45.9326, -48.0428, -22.5815, 1.11 ) }
    dend_38 { pt3dadd( -46.5487, -48.1294, -22.6431, 1.99 ) }
    dend_38 { pt3dadd( -47.2113, -48.1639, -22.7142, 2.28 ) }
    dend_38 { pt3dadd( -47.9065, -48.1377, -22.8001, 1.99 ) }
    dend_38 { pt3dadd( -48.7502, -48.041, -22.9192, 1.69 ) }
    dend_38 { pt3dadd( -49.5346, -47.9204, -23.0542, 1.4 ) }
    dend_38 { pt3dadd( -50.1608, -47.8298, -23.181, 0.66 ) }
    dend_38 { pt3dadd( -50.9068, -47.7556, -23.3476, 0.52 ) }
    dend_38 { pt3dadd( -51.6548, -47.7407, -23.524, 0.52 ) }
    dend_38 { pt3dadd( -52.2384, -47.8191, -23.66, 0.29 ) }
    dend_38 { pt3dadd( -52.8238, -48.0831, -23.7729, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -53.5146, -48.6203, -23.8362, 0.81 ) }
    dend_38 { pt3dadd( -53.8922, -48.9782, -23.8213, 1.11 ) }
    dend_38 { pt3dadd( -54.4141, -49.5144, -23.7188, 0.96 ) }
    dend_38 { pt3dadd( -55.0513, -50.1326, -23.4605, 0.74 ) }
    dend_38 { pt3dadd( -55.6381, -50.5781, -23.1702, 0.37 ) }
    dend_38 { pt3dadd( -56.4506, -50.9537, -22.6923, 1.11 ) }
    dend_38 { pt3dadd( -56.9799, -51.1203, -22.3655, 1.84 ) }
    dend_38 { pt3dadd( -57.5651, -51.2219, -21.9934, 2.36 ) }
    dend_38 { pt3dadd( -58.5402, -51.2387, -21.3546, 2.58 ) }
    dend_38 { pt3dadd( -59.5387, -51.1042, -20.6862, 0.59 ) }
    dend_38 { pt3dadd( -60.3761, -50.8807, -20.1042, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 32.5196, -67.3698, -45.662, 0.74 ) }
    dend_32 { pt3dadd( 33.3619, -68.0377, -45.8667, 0.74 ) }
    dend_32 { pt3dadd( 33.9922, -68.5075, -46.098, 0.66 ) }
    dend_32 { pt3dadd( 34.3825, -68.7867, -46.2713, 1.11 ) }
    dend_32 { pt3dadd( 34.7076, -69.0051, -46.4373, 1.11 ) }
    dend_32 { pt3dadd( 35.3912, -69.4198, -46.8143, 0.88 ) }
    dend_32 { pt3dadd( 35.895, -69.6991, -47.1095, 0.59 ) }
    dend_32 { pt3dadd( 36.407, -69.9647, -47.4689, 1.11 ) }
    dend_32 { pt3dadd( 36.568, -70.0405, -47.598, 1.47 ) }
    dend_32 { pt3dadd( 36.8991, -70.1715, -47.8701, 1.69 ) }
    dend_32 { pt3dadd( 37.3524, -70.3179, -48.2323, 1.69 ) }
    dend_32 { pt3dadd( 37.9257, -70.4419, -48.6392, 1.77 ) }
    dend_32 { pt3dadd( 38.2591, -70.5026, -48.871, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 32.5196, -67.3698, -45.662, 0.37 ) }
    dend_31 { pt3dadd( 32.4154, -68.3321, -46.8837, 0.37 ) }
    dend_31 { pt3dadd( 32.208, -69.2601, -48.0525, 1.03 ) }
    dend_31 { pt3dadd( 31.861, -70.4443, -49.4875, 1.25 ) }
    dend_31 { pt3dadd( 31.2199, -71.891, -51.3219, 0.66 ) }
    dend_31 { pt3dadd( 30.9592, -72.347, -51.9332, 0.81 ) }
    dend_31 { pt3dadd( 29.9469, -73.8334, -54.1047, 1.11 ) }
    dend_31 { pt3dadd( 29.4677, -74.3524, -54.9535, 1.4 ) }
    dend_31 { pt3dadd( 28.8712, -74.8688, -55.8379, 0.88 ) }
    dend_31 { pt3dadd( 27.3564, -75.9001, -57.7604, 0.22 ) }
    dend_31 { pt3dadd( 25.8611, -76.7783, -59.5012, 0.37 ) }
    dend_31 { pt3dadd( 24.1759, -77.7281, -61.4351, 1.03 ) }
    dend_31 { pt3dadd( 23.299, -78.2189, -62.4566, 1.69 ) }
    dend_31 { pt3dadd( 22.7666, -78.5908, -63.2308, 1.69 ) }
    dend_31 { pt3dadd( 20.4627, -80.4936, -66.8923, 0.15 ) }
    dend_31 { pt3dadd( 20.121, -80.8952, -67.6175, 0.15 ) }
    dend_31 { pt3dadd( 19.8881, -81.27, -68.275, 1.18 ) }
    dend_31 { pt3dadd( 19.6208, -81.8745, -69.2918, 1.47 ) }
    dend_31 { pt3dadd( 18.9153, -84.1411, -72.9518, 0.88 ) }
    dend_31 { pt3dadd( 18.6763, -85.3172, -74.7669, 1.55 ) }
    dend_31 { pt3dadd( 18.461, -87.6978, -78.277, 0.81 ) }
    dend_31 { pt3dadd( 18.3698, -88.5911, -79.5878, 0.37 ) }
    dend_31 { pt3dadd( 18.3008, -89.0787, -80.2717, 0.52 ) }
    dend_31 { pt3dadd( 18.1907, -89.698, -81.034, 0.52 ) }
    dend_31 { pt3dadd( 18.1111, -90.2427, -81.4911, 0.37 ) }
    dend_31 { pt3dadd( 18.0051, -91.1071, -81.958, 0.37 ) }
    dend_31 { pt3dadd( 17.7899, -91.9506, -82.0647, 0.81 ) }
    dend_31 { pt3dadd( 17.5907, -92.6933, -82.0981, 1.11 ) }
    dend_31 { pt3dadd( 17.3798, -93.8372, -82.1034, 1.25 ) }
    dend_31 { pt3dadd( 17.1948, -95.3806, -82.1262, 0.29 ) }
    dend_31 { pt3dadd( 17.1148, -96.2517, -82.1331, 0.29 ) }
    dend_31 { pt3dadd( 16.9503, -97.7843, -82.1058, 1.55 ) }
    dend_31 { pt3dadd( 16.8277, -98.6162, -82.0767, 1.77 ) }
    dend_31 { pt3dadd( 16.437, -100.578, -81.9926, 0.29 ) }
    dend_31 { pt3dadd( 15.9881, -102.121, -81.9015, 0.22 ) }
    dend_31 { pt3dadd( 15.228, -103.828, -81.7602, 0.22 ) }
    dend_31 { pt3dadd( 14.4409, -105.169, -81.6009, 0.66 ) }
    dend_31 { pt3dadd( 13.8283, -105.963, -81.4823, 1.4 ) }
    dend_31 { pt3dadd( 13.693, -106.106, -81.4552, 1.92 ) }
    dend_31 { pt3dadd( 12.911, -106.804, -81.281, 1.62 ) }
    dend_31 { pt3dadd( 12.0168, -107.574, -81.0435, 0.52 ) }
    dend_31 { pt3dadd( 11.2112, -108.274, -80.8384, 0.29 ) }
    dend_31 { pt3dadd( 10.313, -109.109, -80.6208, 0.52 ) }
    dend_31 { pt3dadd( 9.92316, -109.48, -80.5263, 0.52 ) }
    dend_31 { pt3dadd( 9.11054, -110.283, -80.3278, 0.37 ) }
    dend_31 { pt3dadd( 8.76173, -110.629, -80.2397, 0.88 ) }
    dend_31 { pt3dadd( 8.22325, -111.146, -80.1232, 0.88 ) }
    dend_31 { pt3dadd( 7.59649, -111.725, -80.0088, 0.44 ) }
    dend_31 { pt3dadd( 6.92573, -112.368, -79.9009, 0.22 ) }
    dend_31 { pt3dadd( 6.41579, -112.9, -79.8353, 0.96 ) }
    dend_31 { pt3dadd( 5.75532, -113.653, -79.8018, 0.96 ) }
    dend_31 { pt3dadd( 4.6601, -115.085, -79.8108, 0.29 ) }
    dend_31 { pt3dadd( 4.20085, -115.773, -79.848, 1.25 ) }
    dend_31 { pt3dadd( 3.78198, -116.417, -79.8972, 1.25 ) }
    dend_31 { pt3dadd( 3.27527, -117.225, -79.9824, 0.96 ) }
    dend_31 { pt3dadd( 2.67062, -118.269, -80.1392, 0.96 ) }
    dend_31 { pt3dadd( 1.87308, -119.894, -80.4786, 0.29 ) }
    dend_31 { pt3dadd( 1.37817, -121.093, -80.7741, 0.29 ) }
    dend_31 { pt3dadd( 1.01577, -122.106, -81.0593, 0.66 ) }
    dend_31 { pt3dadd( 0.729291, -123.001, -81.3546, 0.37 ) }
    dend_31 { pt3dadd( 0.333903, -124.201, -81.8644, 0.96 ) }
    dend_31 { pt3dadd( 0.00931835, -125.205, -82.431, 1.18 ) }
    dend_31 { pt3dadd( -0.151045, -125.708, -82.7895, 0.81 ) }
    dend_31 { pt3dadd( -0.535561, -126.874, -83.7207, 0.52 ) }
    dend_31 { pt3dadd( -0.935859, -128.051, -84.6348, 0.44 ) }
    dend_31 { pt3dadd( -1.58496, -129.754, -85.9444, 0.96 ) }
    dend_31 { pt3dadd( -2.56086, -131.97, -87.6862, 0.37 ) }
    dend_31 { pt3dadd( -3.09964, -133.114, -88.5859, 0.37 ) }
    dend_31 { pt3dadd( -3.81734, -134.676, -89.8346, 0.37 ) }
    dend_31 { pt3dadd( -4.42841, -136.127, -90.9406, 1.18 ) }
    dend_31 { pt3dadd( -4.73181, -136.984, -91.5433, 1.47 ) }
    dend_31 { pt3dadd( -4.94758, -137.747, -92.0361, 1.47 ) }
    dend_31 { pt3dadd( -5.43813, -140.095, -93.4626, 0.74 ) }
    dend_31 { pt3dadd( -5.61512, -141.534, -94.31, 0.29 ) }
    dend_31 { pt3dadd( -5.66175, -142.777, -95.018, 0.29 ) }
    dend_31 { pt3dadd( -5.61087, -144.636, -96.0423, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( -5.55377, -145.324, -96.3733, 1.11 ) }
    dend_31 { pt3dadd( -5.36409, -146.558, -96.8863, 0.29 ) }
    dend_31 { pt3dadd( -5.08633, -147.635, -97.2776, 0.29 ) }
    dend_31 { pt3dadd( -4.73098, -148.622, -97.6057, 0.44 ) }
    dend_31 { pt3dadd( -4.40386, -149.311, -97.8336, 0.29 ) }
    dend_31 { pt3dadd( -4.03762, -150.015, -98.0038, 1.03 ) }
    dend_31 { pt3dadd( -3.69874, -150.698, -98.1371, 1.03 ) }
    dend_31 { pt3dadd( -3.02617, -152.101, -98.3919, 0.29 ) }
    dend_31 { pt3dadd( -2.44498, -153.174, -98.5747, 1.11 ) }
    dend_31 { pt3dadd( -2.17524, -153.641, -98.6492, 1.25 ) }
    dend_31 { pt3dadd( -1.41462, -154.969, -98.8101, 0.22 ) }
    dend_31 { pt3dadd( -1.22068, -155.342, -98.8297, 0.74 ) }
    dend_31 { pt3dadd( -1.05174, -155.709, -98.8335, 0.74 ) }
    dend_31 { pt3dadd( -0.640097, -156.702, -98.7909, 0.22 ) }
    dend_31 { pt3dadd( -0.377369, -157.384, -98.7547, 0.66 ) }
    dend_31 { pt3dadd( -0.136546, -157.982, -98.727, 0.66 ) }
    dend_31 { pt3dadd( 0.209699, -158.801, -98.6934, 0.22 ) }
    dend_31 { pt3dadd( 0.435706, -159.385, -98.6672, 0.81 ) }
    dend_31 { pt3dadd( 0.756959, -160.315, -98.6163, 0.22 ) }
    dend_31 { pt3dadd( 1.12203, -161.535, -98.5347, 0.52 ) }
    dend_31 { pt3dadd( 1.33175, -162.309, -98.476, 0.66 ) }
    dend_31 { pt3dadd( 1.44536, -162.75, -98.4388, 0.66 ) }
    dend_31 { pt3dadd( 1.72298, -163.813, -98.343, 0.29 ) }
    dend_31 { pt3dadd( 2.11494, -165.374, -98.1884, 0.29 ) }
    dend_31 { pt3dadd( 2.32141, -166.193, -98.1064, 0.81 ) }
    dend_31 { pt3dadd( 2.39866, -166.502, -98.0741, 0.81 ) }
    dend_31 { pt3dadd( 2.7093, -167.733, -97.9449, 0.29 ) }
    dend_31 { pt3dadd( 2.98843, -168.797, -97.8321, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.81145, 67.8198, -13.4736, 1.25 ) }
    dend_16 { pt3dadd( -7.28352, 69.8914, -12.2117, 1.25 ) }
    dend_16 { pt3dadd( -7.12458, 70.5709, -12.0808, 1.25 ) }
    dend_16 { pt3dadd( -6.96341, 71.5755, -12.177, 1.03 ) }
    dend_16 { pt3dadd( -6.90047, 72.0961, -12.2961, 1.11 ) }
    dend_16 { pt3dadd( -6.80447, 73.0278, -12.5648, 1.11 ) }
    dend_16 { pt3dadd( -6.72048, 74.0031, -12.8654, 1.03 ) }
    dend_16 { pt3dadd( -6.63258, 75.3468, -13.4479, 0.96 ) }
    dend_16 { pt3dadd( -6.59764, 76.526, -14.0002, 1.18 ) }
    dend_16 { pt3dadd( -6.60853, 77.5264, -14.4879, 1.18 ) }
    dend_16 { pt3dadd( -6.64796, 78.4653, -14.9389, 1.4 ) }
    dend_16 { pt3dadd( -6.72479, 79.5359, -15.4107, 1.55 ) }
    dend_16 { pt3dadd( -6.84299, 80.8101, -15.9175, 1.18 ) }
    dend_16 { pt3dadd( -6.93544, 81.7588, -16.2532, 0.96 ) }
    dend_16 { pt3dadd( -7.04272, 82.9305, -16.6473, 1.25 ) }
    dend_16 { pt3dadd( -7.14055, 83.8348, -16.9342, 1.25 ) }
    dend_16 { pt3dadd( -7.23656, 84.6513, -17.1753, 1.03 ) }
    dend_16 { pt3dadd( -7.38449, 85.8296, -17.4769, 1.03 ) }
    dend_16 { pt3dadd( -7.50127, 86.6222, -17.6374, 1.03 ) }
    dend_16 { pt3dadd( -7.69156, 87.8712, -17.8356, 1.03 ) }
    dend_16 { pt3dadd( -7.89838, 89.3072, -17.9934, 1.03 ) }
    dend_16 { pt3dadd( -7.98797, 89.9527, -18.0421, 1.33 ) }
    dend_16 { pt3dadd( -8.18053, 91.4072, -18.1177, 1.62 ) }
    dend_16 { pt3dadd( -8.33016, 92.5825, -18.1503, 1.11 ) }
    dend_16 { pt3dadd( -8.47419, 93.7251, -18.0817, 1.4 ) }
    dend_16 { pt3dadd( -8.57674, 94.6151, -17.969, 1.25 ) }
    dend_16 { pt3dadd( -8.66091, 95.6885, -17.7905, 1.55 ) }
    dend_16 { pt3dadd( -8.67092, 95.9072, -17.7499, 1.47 ) }
    dend_16 { pt3dadd( -8.68771, 97.3011, -17.4756, 1.62 ) }
    dend_16 { pt3dadd( -8.68225, 99.1676, -17.1071, 1.47 ) }
    dend_16 { pt3dadd( -8.69782, 99.9398, -16.9706, 1.55 ) }
    dend_16 { pt3dadd( -8.72999, 100.66, -16.8776, 1.11 ) }
    dend_16 { pt3dadd( -8.79996, 101.989, -16.7651, 0.88 ) }
    dend_16 { pt3dadd( -8.84256, 102.889, -16.735, 0.88 ) }
    dend_16 { pt3dadd( -8.8615, 103.738, -16.7631, 0.88 ) }
    dend_16 { pt3dadd( -8.82839, 104.941, -16.8888, 0.88 ) }
    dend_16 { pt3dadd( -8.73799, 105.855, -16.9894, 1.18 ) }
    dend_16 { pt3dadd( -8.55176, 106.911, -17.1319, 1.18 ) }
    dend_16 { pt3dadd( -8.35006, 107.681, -17.2503, 1.33 ) }
    dend_16 { pt3dadd( -8.06391, 108.573, -17.3614, 1.33 ) }
    dend_16 { pt3dadd( -7.563, 109.971, -17.462, 1.11 ) }
    dend_16 { pt3dadd( -7.03849, 111.374, -17.4795, 0.88 ) }
    dend_16 { pt3dadd( -6.69386, 112.339, -17.4263, 0.88 ) }
    dend_16 { pt3dadd( -6.34156, 113.456, -17.304, 1.03 ) }
    dend_16 { pt3dadd( -6.07079, 114.571, -17.1372, 1.33 ) }
    dend_16 { pt3dadd( -5.90733, 115.619, -16.9502, 1.33 ) }
    dend_16 { pt3dadd( -5.85366, 116.499, -16.7916, 1.47 ) }
    dend_16 { pt3dadd( -5.87469, 117.327, -16.6214, 1.4 ) }
    dend_16 { pt3dadd( -5.93881, 118.093, -16.4522, 1.4 ) }
    dend_16 { pt3dadd( -6.04445, 118.951, -16.2798, 1.18 ) }
    dend_16 { pt3dadd( -6.17879, 119.951, -16.1159, 1.18 ) }
    dend_16 { pt3dadd( -6.26681, 120.646, -16.0074, 1.03 ) }
    dend_16 { pt3dadd( -6.36723, 121.693, -15.8521, 1.03 ) }
    dend_16 { pt3dadd( -6.39842, 122.657, -15.731, 0.88 ) }
    dend_16 { pt3dadd( -6.35636, 123.689, -15.7002, 1.03 ) }
    dend_16 { pt3dadd( -6.273, 124.635, -15.7313, 0.96 ) }
    dend_16 { pt3dadd( -6.18359, 125.359, -15.8171, 0.96 ) }
    dend_16 { pt3dadd( -6.04564, 126.34, -16.0099, 0.96 ) }
    dend_16 { pt3dadd( -5.85376, 127.62, -16.4188, 0.96 ) }
    dend_16 { pt3dadd( -5.56409, 129.528, -17.3298, 0.81 ) }
    dend_16 { pt3dadd( -5.43003, 130.69, -18.0426, 1.03 ) }
    dend_16 { pt3dadd( -5.38517, 131.398, -18.5355, 1.03 ) }
    dend_16 { pt3dadd( -5.35825, 132.412, -19.2445, 0.88 ) }
    dend_16 { pt3dadd( -5.3533, 133.876, -20.2359, 1.03 ) }
    dend_16 { pt3dadd( -5.37895, 135.471, -21.2276, 1.03 ) }
    dend_16 { pt3dadd( -5.39263, 136.405, -21.6982, 1.25 ) }
    dend_16 { pt3dadd( -5.43254, 137.64, -22.2159, 1.25 ) }
    dend_16 { pt3dadd( -5.53796, 139.397, -22.761, 1.03 ) }
    dend_16 { pt3dadd( -5.61048, 140.314, -22.9564, 1.03 ) }
    dend_16 { pt3dadd( -5.70004, 141.566, -23.149, 1.03 ) }
    dend_16 { pt3dadd( -5.76353, 143.184, -23.3389, 1.03 ) }
    dend_16 { pt3dadd( -5.73687, 144.9, -23.5367, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -5.62533, 146.4, -23.7238, 0.88 ) }
    dend_16 { pt3dadd( -5.47159, 147.708, -23.8925, 0.88 ) }
    dend_16 { pt3dadd( -5.11396, 150.124, -24.1917, 0.74 ) }
    dend_16 { pt3dadd( -4.83388, 151.698, -24.3693, 0.74 ) }
    dend_16 { pt3dadd( -4.50625, 153.332, -24.5127, 0.74 ) }
    dend_16 { pt3dadd( -4.22472, 154.673, -24.6369, 0.74 ) }
    dend_16 { pt3dadd( -4.00642, 156.08, -24.8447, 0.74 ) }
    dend_16 { pt3dadd( -3.95969, 157.541, -25.2293, 0.74 ) }
    dend_16 { pt3dadd( -4.03926, 158.23, -25.484, 0.88 ) }
    dend_16 { pt3dadd( -4.20257, 159.027, -25.874, 1.03 ) }
    dend_16 { pt3dadd( -4.50095, 160.427, -26.6167, 0.74 ) }
    dend_16 { pt3dadd( -4.85812, 162.397, -27.6521, 0.74 ) }
    dend_16 { pt3dadd( -5.06869, 164.078, -28.5181, 0.59 ) }
    dend_16 { pt3dadd( -5.11902, 164.839, -28.8779, 0.88 ) }
    dend_16 { pt3dadd( -5.14659, 166.142, -29.4238, 1.11 ) }
    dend_16 { pt3dadd( -5.08482, 168.025, -30.0788, 1.55 ) }
    dend_16 { pt3dadd( -4.96708, 169.554, -30.4501, 1.33 ) }
    dend_16 { pt3dadd( -4.82222, 170.867, -30.6687, 1.11 ) }
    dend_16 { pt3dadd( -4.61305, 172.529, -30.8934, 1.11 ) }
    dend_16 { pt3dadd( -4.42682, 173.854, -31.0615, 1.11 ) }
    dend_16 { pt3dadd( -4.19627, 175.194, -31.2038, 1.03 ) }
    dend_16 { pt3dadd( -3.86232, 176.721, -31.3411, 0.88 ) }
    dend_16 { pt3dadd( -3.62827, 177.546, -31.4026, 1.18 ) }
    dend_16 { pt3dadd( -3.45302, 178.065, -31.4227, 1.4 ) }
    dend_16 { pt3dadd( -3.18246, 178.815, -31.4259, 1.25 ) }
    dend_16 { pt3dadd( -2.885, 179.687, -31.4247, 1.25 ) }
    dend_16 { pt3dadd( -2.7328, 180.231, -31.445, 1.11 ) }
    dend_16 { pt3dadd( -2.60189, 180.855, -31.4922, 0.96 ) }
    dend_16 { pt3dadd( -2.52536, 181.649, -31.5607, 0.96 ) }
    dend_16 { pt3dadd( -2.51599, 182.206, -31.6159, 0.88 ) }
    dend_16 { pt3dadd( -2.54083, 183.302, -31.725, 0.66 ) }
    dend_16 { pt3dadd( -2.55634, 184.017, -31.76, 0.81 ) }
    dend_16 { pt3dadd( -2.54933, 184.776, -31.7521, 0.81 ) }
    dend_16 { pt3dadd( -2.49463, 185.662, -31.6759, 0.74 ) }
    dend_16 { pt3dadd( -2.27787, 187.402, -31.4143, 0.88 ) }
    dend_16 { pt3dadd( -2.1954, 187.872, -31.309, 1.18 ) }
    dend_16 { pt3dadd( -1.89704, 189.092, -30.9568, 1.18 ) }
    dend_16 { pt3dadd( -1.68559, 189.782, -30.7214, 1.18 ) }
    dend_16 { pt3dadd( -1.41903, 190.512, -30.4605, 1.11 ) }
    dend_16 { pt3dadd( -1.07335, 191.347, -30.1665, 0.96 ) }
    dend_16 { pt3dadd( -0.832679, 191.921, -29.9685, 0.96 ) }
    dend_16 { pt3dadd( -0.556909, 192.621, -29.7835, 0.81 ) }
    dend_16 { pt3dadd( -0.291101, 193.344, -29.6599, 1.11 ) }
    dend_16 { pt3dadd( -0.146821, 193.755, -29.636, 1.47 ) }
    dend_16 { pt3dadd( 0.149795, 194.646, -29.7008, 1.03 ) }
    dend_16 { pt3dadd( 0.381933, 195.389, -29.8272, 1.03 ) }
    dend_16 { pt3dadd( 0.625501, 196.2, -30.0427, 1.25 ) }
    dend_16 { pt3dadd( 0.769101, 196.764, -30.2019, 1.25 ) }
    dend_16 { pt3dadd( 1.05531, 198.138, -30.5509, 0.88 ) }
    dend_16 { pt3dadd( 1.16662, 198.862, -30.6808, 0.88 ) }
    dend_16 { pt3dadd( 1.2551, 199.79, -30.7794, 1.18 ) }
    dend_16 { pt3dadd( 1.30939, 200.806, -30.8072, 0.96 ) }
    dend_16 { pt3dadd( 1.34805, 201.945, -30.7192, 0.81 ) }
    dend_16 { pt3dadd( 1.38017, 202.944, -30.5439, 1.25 ) }
    dend_16 { pt3dadd( 1.4145, 203.746, -30.3263, 0.66 ) }
    dend_16 { pt3dadd( 1.46464, 204.554, -30.0687, 0.96 ) }
    dend_16 { pt3dadd( 1.5282, 205.295, -29.84, 1.25 ) }
    dend_16 { pt3dadd( 1.60914, 206.017, -29.6377, 0.96 ) }
    dend_16 { pt3dadd( 1.71823, 206.716, -29.5033, 0.96 ) }
    dend_16 { pt3dadd( 1.86998, 207.511, -29.3819, 1.25 ) }
    dend_16 { pt3dadd( 2.00681, 208.125, -29.2931, 1.55 ) }
    dend_16 { pt3dadd( 2.19199, 208.859, -29.1838, 1.55 ) }
    dend_16 { pt3dadd( 2.34109, 209.393, -29.1105, 1.25 ) }
    dend_16 { pt3dadd( 2.55074, 210.17, -29.0431, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.81145, 67.8198, -13.4736, 0.59 ) }
    dend_13 { pt3dadd( -7.94879, 70.7547, -15.0407, 0.59 ) }
    dend_13 { pt3dadd( -8.01217, 71.8484, -15.5764, 0.88 ) }
    dend_13 { pt3dadd( -8.08926, 73.1544, -16.139, 1.18 ) }
    dend_13 { pt3dadd( -8.1464, 74.8009, -16.7679, 1.18 ) }
    dend_13 { pt3dadd( -8.14594, 75.949, -17.2231, 0.96 ) }
    dend_13 { pt3dadd( -8.12758, 77.2305, -17.7312, 0.59 ) }
    dend_13 { pt3dadd( -8.10329, 78.0596, -17.9926, 0.96 ) }
    dend_13 { pt3dadd( -8.06229, 79.4126, -18.4201, 0.96 ) }
    dend_13 { pt3dadd( -8.04566, 81.0164, -18.9541, 0.96 ) }
    dend_13 { pt3dadd( -8.08483, 82.5232, -19.47, 0.52 ) }
    dend_13 { pt3dadd( -8.17458, 83.6236, -19.8424, 0.37 ) }
    dend_13 { pt3dadd( -8.31442, 84.3387, -20.0847, 0.37 ) }
    dend_13 { pt3dadd( -8.56885, 85.0663, -20.3035, 0.81 ) }
    dend_13 { pt3dadd( -8.92199, 85.6814, -20.4939, 1.18 ) }
    dend_13 { pt3dadd( -9.19519, 86.1061, -20.6295, 1.18 ) }
    dend_13 { pt3dadd( -9.62848, 86.865, -20.8546, 0.66 ) }
    dend_13 { pt3dadd( -9.93365, 87.5383, -21.0776, 0.66 ) }
    dend_13 { pt3dadd( -10.2977, 88.6524, -21.4519, 0.59 ) }
    dend_13 { pt3dadd( -10.5831, 90.0175, -21.9128, 0.88 ) }
    dend_13 { pt3dadd( -10.8269, 91.9655, -22.5673, 1.11 ) }
    dend_13 { pt3dadd( -10.8917, 93.0465, -22.9213, 1.11 ) }
    dend_13 { pt3dadd( -10.893, 93.9733, -23.1914, 1.11 ) }
    dend_13 { pt3dadd( -10.8478, 95.0924, -23.4366, 0.37 ) }
    dend_13 { pt3dadd( -10.7762, 96.3106, -23.5718, 0.37 ) }
    dend_13 { pt3dadd( -10.7397, 97.1324, -23.5462, 0.74 ) }
    dend_13 { pt3dadd( -10.7406, 97.3973, -23.5148, 0.88 ) }
    dend_13 { pt3dadd( -10.7601, 98.5884, -23.3208, 0.88 ) }
    dend_13 { pt3dadd( -10.75, 99.4952, -23.1311, 0.66 ) }
    dend_13 { pt3dadd( -10.6765, 100.735, -22.8409, 0.52 ) }
    dend_13 { pt3dadd( -10.6095, 101.309, -22.7406, 0.52 ) }
    dend_13 { pt3dadd( -10.4217, 102.39, -22.6585, 0.96 ) }
    dend_13 { pt3dadd( -10.2577, 103.112, -22.6926, 0.96 ) }
    dend_13 { pt3dadd( -10.0997, 103.702, -22.7893, 1.18 ) }
    dend_13 { pt3dadd( -9.97238, 104.187, -22.9049, 1.18 ) }
    dend_13 { pt3dadd( -9.68398, 105.459, -23.2474, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -9.58544, 106.174, -23.4288, 0.88 ) }
    dend_13 { pt3dadd( -9.55237, 107.132, -23.6319, 0.88 ) }
    dend_13 { pt3dadd( -9.58599, 107.886, -23.799, 0.44 ) }
    dend_13 { pt3dadd( -9.65015, 108.714, -23.9746, 0.74 ) }
    dend_13 { pt3dadd( -9.69116, 109.223, -24.0713, 0.74 ) }
    dend_13 { pt3dadd( -9.72587, 109.903, -24.1749, 0.52 ) }
    dend_13 { pt3dadd( -9.72311, 110.75, -24.3119, 0.37 ) }
    dend_13 { pt3dadd( -9.67749, 111.459, -24.4307, 0.37 ) }
    dend_13 { pt3dadd( -9.55618, 112.323, -24.5775, 0.74 ) }
    dend_13 { pt3dadd( -9.44367, 112.87, -24.6702, 0.74 ) }
    dend_13 { pt3dadd( -9.27369, 113.602, -24.7919, 0.66 ) }
    dend_13 { pt3dadd( -8.98421, 114.789, -24.9782, 0.74 ) }
    dend_13 { pt3dadd( -8.89294, 115.146, -25.0311, 1.4 ) }
    dend_13 { pt3dadd( -8.66418, 115.896, -25.1398, 1.4 ) }
    dend_13 { pt3dadd( -8.42863, 116.589, -25.2792, 1.33 ) }
    dend_13 { pt3dadd( -7.95297, 117.811, -25.5994, 0.44 ) }
    dend_13 { pt3dadd( -7.48584, 118.857, -25.9352, 0.44 ) }
    dend_13 { pt3dadd( -7.17227, 119.548, -26.1881, 0.37 ) }
    dend_13 { pt3dadd( -6.64577, 120.796, -26.6807, 0.37 ) }
    dend_13 { pt3dadd( -6.24613, 121.844, -27.1113, 0.59 ) }
    dend_13 { pt3dadd( -6.04387, 122.5, -27.384, 0.59 ) }
    dend_13 { pt3dadd( -5.92018, 123.109, -27.6314, 0.29 ) }
    dend_13 { pt3dadd( -5.90425, 124.627, -28.1283, 0.88 ) }
    dend_13 { pt3dadd( -6.01429, 125.366, -28.2953, 1.77 ) }
    dend_13 { pt3dadd( -6.169, 126.044, -28.389, 2.06 ) }
    dend_13 { pt3dadd( -6.31292, 126.642, -28.4317, 1.69 ) }
    dend_13 { pt3dadd( -6.52812, 127.504, -28.4942, 1.18 ) }
    dend_13 { pt3dadd( -6.86121, 128.82, -28.6149, 0.44 ) }
    dend_13 { pt3dadd( -7.16195, 129.996, -28.7327, 0.37 ) }
    dend_13 { pt3dadd( -7.50102, 131.325, -28.8783, 0.74 ) }
    dend_13 { pt3dadd( -7.64899, 131.864, -28.944, 0.74 ) }
    dend_13 { pt3dadd( -7.98032, 133.035, -29.1167, 0.52 ) }
    dend_13 { pt3dadd( -8.21966, 133.889, -29.2149, 0.44 ) }
    dend_13 { pt3dadd( -8.36259, 134.43, -29.247, 0.66 ) }
    dend_13 { pt3dadd( -8.50966, 134.961, -29.2337, 0.66 ) }
    dend_13 { pt3dadd( -8.72875, 135.675, -29.1783, 0.37 ) }
    dend_13 { pt3dadd( -8.89012, 136.221, -29.1001, 0.37 ) }
    dend_13 { pt3dadd( -9.29403, 137.835, -28.6939, 0.59 ) }
    dend_13 { pt3dadd( -9.48998, 138.974, -28.338, 1.03 ) }
    dend_13 { pt3dadd( -9.55253, 139.614, -28.1257, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -38.9777, 95.3367, 4.88124, 0.29 ) }
    dend_11 { pt3dadd( -39.1215, 96.8844, 5.09664, 0.29 ) }
    dend_11 { pt3dadd( -39.2513, 97.6172, 5.21484, 0.44 ) }
    dend_11 { pt3dadd( -39.432, 98.1578, 5.36359, 0.66 ) }
    dend_11 { pt3dadd( -39.7451, 98.7372, 5.65607, 0.29 ) }
    dend_11 { pt3dadd( -40.1199, 99.2629, 6.00336, 0.29 ) }
    dend_11 { pt3dadd( -40.3317, 99.535, 6.19684, 0.74 ) }
    dend_11 { pt3dadd( -40.6334, 99.8249, 6.47874, 0.88 ) }
    dend_11 { pt3dadd( -41.3386, 100.433, 7.08891, 0.44 ) }
    dend_11 { pt3dadd( -42.0326, 101.03, 7.64357, 0.52 ) }
    dend_11 { pt3dadd( -42.2289, 101.224, 7.79661, 0.81 ) }
    dend_11 { pt3dadd( -42.5345, 101.644, 8.06155, 0.44 ) }
    dend_11 { pt3dadd( -42.7766, 102.126, 8.33848, 0.88 ) }
    dend_11 { pt3dadd( -42.9818, 102.725, 8.68089, 0.59 ) }
    dend_11 { pt3dadd( -43.1107, 103.343, 8.95362, 0.29 ) }
    dend_11 { pt3dadd( -43.1777, 103.876, 9.14356, 0.29 ) }
    dend_11 { pt3dadd( -43.2635, 104.804, 9.442, 0.96 ) }
    dend_11 { pt3dadd( -43.3305, 105.638, 9.69833, 1.18 ) }
    dend_11 { pt3dadd( -43.384, 106.5, 9.96101, 0.81 ) }
    dend_11 { pt3dadd( -43.4564, 107.686, 10.2744, 0.52 ) }
    dend_11 { pt3dadd( -43.5025, 108.307, 10.4205, 0.52 ) }
    dend_11 { pt3dadd( -43.6069, 109.234, 10.5749, 0.44 ) }
    dend_11 { pt3dadd( -43.71, 109.962, 10.665, 0.66 ) }
    dend_11 { pt3dadd( -43.8261, 110.776, 10.7825, 0.88 ) }
    dend_11 { pt3dadd( -43.9007, 111.264, 10.8665, 0.52 ) }
    dend_11 { pt3dadd( -43.9848, 111.868, 11.0062, 0.29 ) }
    dend_11 { pt3dadd( -44.1064, 112.711, 11.202, 0.29 ) }
    dend_11 { pt3dadd( -44.266, 113.835, 11.4571, 0.52 ) }
    dend_11 { pt3dadd( -44.4328, 114.698, 11.6465, 0.81 ) }
    dend_11 { pt3dadd( -44.6101, 115.48, 11.7789, 0.22 ) }
    dend_11 { pt3dadd( -44.7383, 116.068, 11.8614, 0.22 ) }
    dend_11 { pt3dadd( -44.9641, 117.039, 11.977, 0.37 ) }
    dend_11 { pt3dadd( -45.0986, 117.539, 12.0281, 0.37 ) }
    dend_11 { pt3dadd( -45.4275, 118.586, 12.1236, 0.37 ) }
    dend_11 { pt3dadd( -45.775, 119.589, 12.2181, 0.29 ) }
    dend_11 { pt3dadd( -46.111, 120.632, 12.3307, 0.52 ) }
    dend_11 { pt3dadd( -46.2679, 121.183, 12.3874, 0.88 ) }
    dend_11 { pt3dadd( -46.5066, 122.31, 12.4874, 0.59 ) }
    dend_11 { pt3dadd( -46.5953, 122.903, 12.5263, 0.44 ) }
    dend_11 { pt3dadd( -46.6475, 123.633, 12.5649, 0.22 ) }
    dend_11 { pt3dadd( -46.7026, 125.092, 12.6316, 0.22 ) }
    dend_11 { pt3dadd( -46.6983, 125.746, 12.6387, 0.81 ) }
    dend_11 { pt3dadd( -46.67, 126.287, 12.609, 1.33 ) }
    dend_11 { pt3dadd( -46.6374, 126.815, 12.5471, 1.33 ) }
    dend_11 { pt3dadd( -46.5651, 127.773, 12.3952, 0.59 ) }
    dend_11 { pt3dadd( -46.4969, 128.401, 12.2638, 0.81 ) }
    dend_11 { pt3dadd( -46.4121, 128.98, 12.1147, 0.81 ) }
    dend_11 { pt3dadd( -46.262, 129.871, 11.8271, 0.52 ) }
    dend_11 { pt3dadd( -46.0622, 130.993, 11.3984, 0.22 ) }
    dend_11 { pt3dadd( -45.8959, 131.875, 11.0227, 0.22 ) }
    dend_11 { pt3dadd( -45.677, 132.934, 10.5308, 0.59 ) }
    dend_11 { pt3dadd( -45.5187, 133.595, 10.217, 0.81 ) }
    dend_11 { pt3dadd( -45.2933, 134.53, 9.77005, 0.29 ) }
    dend_11 { pt3dadd( -45.128, 135.21, 9.47276, 0.22 ) }
    dend_11 { pt3dadd( -45.0548, 135.562, 9.32624, 0.59 ) }
    dend_11 { pt3dadd( -45.0386, 135.834, 9.22866, 0.59 ) }
    dend_11 { pt3dadd( -45.1672, 136.539, 9.02228, 0.22 ) }
    dend_11 { pt3dadd( -45.4105, 137.165, 8.83308, 0.29 ) }
    dend_11 { pt3dadd( -45.6347, 137.584, 8.6884, 0.81 ) }
    dend_11 { pt3dadd( -45.8108, 137.865, 8.55738, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -45.9454, 138.081, 8.44212, 1.11 ) }
    dend_11 { pt3dadd( -46.5407, 139.133, 7.84537, 0.37 ) }
    dend_11 { pt3dadd( -46.7612, 139.625, 7.58245, 0.96 ) }
    dend_11 { pt3dadd( -47.0029, 140.322, 7.24518, 0.88 ) }
    dend_11 { pt3dadd( -47.1821, 140.879, 6.9913, 0.88 ) }
    dend_11 { pt3dadd( -47.4342, 141.634, 6.68569, 0.52 ) }
    dend_11 { pt3dadd( -47.627, 142.196, 6.48557, 0.74 ) }
    dend_11 { pt3dadd( -47.9795, 143.208, 6.1818, 0.29 ) }
    dend_11 { pt3dadd( -48.3419, 144.14, 5.89477, 0.59 ) }
    dend_11 { pt3dadd( -48.6205, 144.774, 5.69141, 0.59 ) }
    dend_11 { pt3dadd( -48.9768, 145.564, 5.34143, 0.29 ) }
    dend_11 { pt3dadd( -49.2736, 146.192, 4.95496, 1.18 ) }
    dend_11 { pt3dadd( -49.4018, 146.479, 4.7392, 1.47 ) }
    dend_11 { pt3dadd( -49.6675, 147.155, 4.1485, 1.18 ) }
    dend_11 { pt3dadd( -49.8871, 147.815, 3.56609, 0.44 ) }
    dend_11 { pt3dadd( -50.1955, 148.954, 2.58187, 0.22 ) }
    dend_11 { pt3dadd( -50.2904, 149.399, 2.18032, 0.22 ) }
    dend_11 { pt3dadd( -50.4334, 150.3, 1.41217, 1.18 ) }
    dend_11 { pt3dadd( -50.4566, 150.531, 1.22851, 1.4 ) }
    dend_11 { pt3dadd( -50.4759, 151.596, 0.479647, 0.44 ) }
    dend_11 { pt3dadd( -50.444, 152.212, 0.0788894, 0.66 ) }
    dend_11 { pt3dadd( -50.4108, 152.806, -0.249954, 0.66 ) }
    dend_11 { pt3dadd( -50.315, 153.648, -0.731045, 0.22 ) }
    dend_11 { pt3dadd( -50.2456, 154.008, -0.958564, 0.59 ) }
    dend_11 { pt3dadd( -50.1085, 154.554, -1.32656, 0.52 ) }
    dend_11 { pt3dadd( -49.913, 155.181, -1.75655, 0.96 ) }
    dend_11 { pt3dadd( -49.7623, 155.759, -2.17863, 0.59 ) }
    dend_11 { pt3dadd( -49.6387, 156.311, -2.59742, 0.37 ) }
    dend_11 { pt3dadd( -49.5118, 156.868, -3.0452, 0.59 ) }
    dend_11 { pt3dadd( -49.4102, 157.25, -3.33728, 0.81 ) }
    dend_11 { pt3dadd( -49.1763, 158.16, -4.0151, 0.22 ) }
    dend_11 { pt3dadd( -48.9773, 158.945, -4.55167, 0.59 ) }
    dend_11 { pt3dadd( -48.8577, 159.443, -4.8728, 0.52 ) }
    dend_11 { pt3dadd( -48.7485, 160.038, -5.23151, 0.22 ) }
    dend_11 { pt3dadd( -48.609, 160.959, -5.7603, 0.22 ) }
    dend_11 { pt3dadd( -48.4806, 161.98, -6.33412, 0.88 ) }
    dend_11 { pt3dadd( -48.4256, 162.568, -6.64981, 1.69 ) }
    dend_11 { pt3dadd( -48.4066, 162.897, -6.80395, 1.92 ) }
    dend_11 { pt3dadd( -48.4191, 163.524, -7.09734, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -38.9777, 95.3367, 4.88124, 0.52 ) }
    dend_8 { pt3dadd( -40.193, 95.6355, 5.01031, 0.52 ) }
    dend_8 { pt3dadd( -40.9782, 95.8143, 5.09774, 0.59 ) }
    dend_8 { pt3dadd( -41.8282, 96.0007, 5.19763, 0.44 ) }
    dend_8 { pt3dadd( -42.4106, 96.1458, 5.26969, 0.59 ) }
    dend_8 { pt3dadd( -43.0656, 96.3462, 5.36026, 0.59 ) }
    dend_8 { pt3dadd( -43.8559, 96.6369, 5.47878, 0.52 ) }
    dend_8 { pt3dadd( -44.358, 96.8515, 5.56492, 0.74 ) }
    dend_8 { pt3dadd( -44.9993, 97.1764, 5.6862, 0.37 ) }
    dend_8 { pt3dadd( -45.477, 97.4464, 5.79255, 0.37 ) }
    dend_8 { pt3dadd( -46.0879, 97.8053, 5.9402, 0.37 ) }
    dend_8 { pt3dadd( -46.6228, 98.1022, 6.08367, 0.52 ) }
    dend_8 { pt3dadd( -47.3051, 98.3807, 6.25992, 0.52 ) }
    dend_8 { pt3dadd( -47.8455, 98.4778, 6.38015, 0.29 ) }
    dend_8 { pt3dadd( -48.5947, 98.4874, 6.49248, 0.81 ) }
    dend_8 { pt3dadd( -49.0522, 98.4569, 6.53857, 1.11 ) }
    dend_8 { pt3dadd( -49.6889, 98.4032, 6.57983, 1.25 ) }
    dend_8 { pt3dadd( -50.6788, 98.3291, 6.62254, 0.66 ) }
    dend_8 { pt3dadd( -51.5357, 98.2889, 6.63521, 0.37 ) }
    dend_8 { pt3dadd( -52.7662, 98.3067, 6.58259, 0.37 ) }
    dend_8 { pt3dadd( -53.582, 98.3804, 6.48813, 0.29 ) }
    dend_8 { pt3dadd( -54.6535, 98.5473, 6.30214, 0.66 ) }
    dend_8 { pt3dadd( -55.0671, 98.6429, 6.20006, 0.88 ) }
    dend_8 { pt3dadd( -55.6586, 98.8194, 5.98297, 0.59 ) }
    dend_8 { pt3dadd( -56.578, 99.1035, 5.53822, 0.37 ) }
    dend_8 { pt3dadd( -57.2097, 99.2763, 5.16909, 0.37 ) }
    dend_8 { pt3dadd( -57.6851, 99.3769, 4.85541, 0.96 ) }
    dend_8 { pt3dadd( -58.442, 99.477, 4.29087, 1.18 ) }
    dend_8 { pt3dadd( -59.7324, 99.5644, 3.30692, 0.59 ) }
    dend_8 { pt3dadd( -60.2139, 99.5716, 2.94176, 0.44 ) }
    dend_8 { pt3dadd( -60.7561, 99.5462, 2.5596, 0.29 ) }
    dend_8 { pt3dadd( -61.3942, 99.487, 2.15228, 0.15 ) }
    dend_8 { pt3dadd( -62.4346, 99.3419, 1.54545, 0.88 ) }
    dend_8 { pt3dadd( -62.9221, 99.269, 1.31046, 1.18 ) }
    dend_8 { pt3dadd( -63.6108, 99.1946, 1.03689, 0.44 ) }
    dend_8 { pt3dadd( -64.2613, 99.1701, 0.813512, 0.37 ) }
    dend_8 { pt3dadd( -64.8549, 99.1883, 0.654033, 0.96 ) }
    dend_8 { pt3dadd( -65.8272, 99.2959, 0.496606, 1.25 ) }
    dend_8 { pt3dadd( -66.8536, 99.5048, 0.452607, 0.44 ) }
    dend_8 { pt3dadd( -67.5066, 99.6884, 0.490809, 0.44 ) }
    dend_8 { pt3dadd( -68.3351, 99.9729, 0.61291, 1.03 ) }
    dend_8 { pt3dadd( -69.0056, 100.247, 0.784045, 0.88 ) }
    dend_8 { pt3dadd( -69.8745, 100.642, 1.05704, 0.74 ) }
    dend_8 { pt3dadd( -71.1813, 101.301, 1.58223, 0.37 ) }
    dend_8 { pt3dadd( -72.048, 101.755, 1.99616, 0.88 ) }
    dend_8 { pt3dadd( -72.3235, 101.9, 2.14927, 1.18 ) }
    dend_8 { pt3dadd( -73.026, 102.311, 2.5877, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 129.534, -47.7714, -111.783, 0.29 ) }
    dend_5 { pt3dadd( 129.069, -47.6002, -115.002, 0.29 ) }
    dend_5 { pt3dadd( 128.926, -47.4931, -115.839, 0.52 ) }
    dend_5 { pt3dadd( 128.872, -47.4392, -116.088, 0.52 ) }
    dend_5 { pt3dadd( 128.644, -47.1912, -116.885, 0.29 ) }
    dend_5 { pt3dadd( 128.406, -46.9237, -117.563, 0.96 ) }
    dend_5 { pt3dadd( 128.332, -46.8309, -117.769, 1.33 ) }
    dend_5 { pt3dadd( 128.229, -46.6459, -117.966, 1.33 ) }
    dend_5 { pt3dadd( 128.032, -46.2708, -118.37, 0.59 ) }
    dend_5 { pt3dadd( 127.89, -45.941, -118.791, 0.37 ) }
    dend_5 { pt3dadd( 127.839, -45.6753, -119.286, 0.22 ) }
    dend_5 { pt3dadd( 127.983, -45.4438, -120.02, 0.22 ) }
    dend_5 { pt3dadd( 128.114, -45.4027, -120.311, 0.59 ) }
    dend_5 { pt3dadd( 128.4, -45.3991, -120.766, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 128.68, -45.4326, -121.119, 0.37 ) }
    dend_5 { pt3dadd( 129.058, -45.501, -121.528, 0.96 ) }
    dend_5 { pt3dadd( 129.443, -45.577, -121.899, 0.96 ) }
    dend_5 { pt3dadd( 129.956, -45.6921, -122.372, 0.44 ) }
    dend_5 { pt3dadd( 130.216, -45.7526, -122.61, 0.52 ) }
    dend_5 { pt3dadd( 130.553, -45.8424, -122.919, 0.22 ) }
    dend_5 { pt3dadd( 130.781, -45.9052, -123.14, 0.74 ) }
    dend_5 { pt3dadd( 131.268, -46.0292, -123.637, 0.29 ) }
    dend_5 { pt3dadd( 131.485, -46.0747, -123.877, 0.29 ) }
    dend_5 { pt3dadd( 131.809, -46.121, -124.28, 0.88 ) }
    dend_5 { pt3dadd( 132.18, -46.1518, -124.78, 0.37 ) }
    dend_5 { pt3dadd( 132.783, -46.1518, -125.665, 0.96 ) }
    dend_5 { pt3dadd( 133.037, -46.1224, -126.077, 1.4 ) }
    dend_5 { pt3dadd( 133.25, -46.0569, -126.474, 0.59 ) }
    dend_5 { pt3dadd( 133.557, -45.8752, -127.144, 0.22 ) }
    dend_5 { pt3dadd( 133.795, -45.6295, -127.774, 0.22 ) }
    dend_5 { pt3dadd( 133.951, -45.3322, -128.33, 1.11 ) }
    dend_5 { pt3dadd( 134.018, -45.0149, -128.782, 1.33 ) }
    dend_5 { pt3dadd( 134.038, -44.6397, -129.252, 1.33 ) }
    dend_5 { pt3dadd( 134.031, -44.3315, -129.591, 1.33 ) }
    dend_5 { pt3dadd( 134.004, -44.0245, -129.885, 0.59 ) }
    dend_5 { pt3dadd( 133.942, -43.4839, -130.368, 0.22 ) }
    dend_5 { pt3dadd( 133.911, -42.8623, -130.906, 1.4 ) }
    dend_5 { pt3dadd( 133.929, -42.5678, -131.172, 1.69 ) }
    dend_5 { pt3dadd( 134.023, -42.004, -131.72, 0.29 ) }
    dend_5 { pt3dadd( 134.092, -41.7889, -131.987, 0.66 ) }
    dend_5 { pt3dadd( 134.237, -41.5508, -132.428, 0.66 ) }
    dend_5 { pt3dadd( 134.529, -41.4298, -133.165, 0.22 ) }
    dend_5 { pt3dadd( 134.775, -41.5875, -133.816, 1.03 ) }
    dend_5 { pt3dadd( 134.862, -41.7718, -134.147, 1.03 ) }
    dend_5 { pt3dadd( 134.984, -42.6044, -135.199, 0.74 ) }
    dend_5 { pt3dadd( 135.034, -43.1296, -135.791, 1.03 ) }
    dend_5 { pt3dadd( 135.068, -43.9725, -136.631, 1.11 ) }
    dend_5 { pt3dadd( 135.046, -44.8732, -137.432, 1.11 ) }
    dend_5 { pt3dadd( 134.97, -45.854, -138.22, 0.74 ) }
    dend_5 { pt3dadd( 134.847, -46.7963, -138.931, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 129.534, -47.7714, -111.783, 0.37 ) }
    dend_4 { pt3dadd( 131.727, -48.7182, -112.028, 0.37 ) }
    dend_4 { pt3dadd( 132.535, -48.8874, -111.995, 0.44 ) }
    dend_4 { pt3dadd( 133.045, -48.873, -111.858, 0.44 ) }
    dend_4 { pt3dadd( 134.664, -48.5954, -111.245, 0.74 ) }
    dend_4 { pt3dadd( 134.897, -48.5268, -111.154, 0.88 ) }
    dend_4 { pt3dadd( 135.703, -48.2307, -110.858, 0.37 ) }
    dend_4 { pt3dadd( 136.733, -47.732, -110.429, 0.37 ) }
    dend_4 { pt3dadd( 138.316, -46.8968, -109.75, 0.88 ) }
    dend_4 { pt3dadd( 138.866, -46.5879, -109.511, 1.03 ) }
    dend_4 { pt3dadd( 139.701, -46.1056, -109.158, 0.29 ) }
    dend_4 { pt3dadd( 140.495, -45.6145, -108.805, 0.29 ) }
    dend_4 { pt3dadd( 141.127, -45.1885, -108.508, 0.29 ) }
    dend_4 { pt3dadd( 142.326, -44.3778, -108.061, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -71.2796, -40.8229, -54.0344, 0.74 ) }
    dend_51 { pt3dadd( -72.3819, -40.634, -54.1782, 0.74 ) }
    dend_51 { pt3dadd( -73.2318, -40.5154, -54.277, 1.03 ) }
    dend_51 { pt3dadd( -74.6216, -40.3683, -54.4932, 0.37 ) }
    dend_51 { pt3dadd( -75.3433, -40.3201, -54.6444, 0.22 ) }
    dend_51 { pt3dadd( -76.221, -40.2946, -54.8778, 1.4 ) }
    dend_51 { pt3dadd( -76.8374, -40.2916, -55.0609, 1.55 ) }
    dend_51 { pt3dadd( -77.6517, -40.3356, -55.3535, 1.55 ) }
    dend_51 { pt3dadd( -79.0368, -40.4727, -55.927, 0.81 ) }
    dend_51 { pt3dadd( -80.0322, -40.6185, -56.3717, 0.52 ) }
    dend_51 { pt3dadd( -80.8705, -40.7812, -56.7585, 0.88 ) }
    dend_51 { pt3dadd( -81.8208, -40.9839, -57.213, 0.22 ) }
    dend_51 { pt3dadd( -82.5525, -41.1292, -57.5667, 0.74 ) }
    dend_51 { pt3dadd( -83.2015, -41.2213, -57.8728, 0.74 ) }
    dend_51 { pt3dadd( -83.7234, -41.2395, -58.15, 0.74 ) }
    dend_51 { pt3dadd( -84.623, -41.2011, -58.6906, 0.44 ) }
    dend_51 { pt3dadd( -85.3664, -41.1494, -59.1771, 0.22 ) }
    dend_51 { pt3dadd( -85.7695, -41.1201, -59.4838, 0.81 ) }
    dend_51 { pt3dadd( -86.3558, -41.0805, -59.9447, 0.81 ) }
    dend_51 { pt3dadd( -88.5211, -40.9299, -61.65, 0.52 ) }
    dend_51 { pt3dadd( -89.3681, -40.8832, -62.3012, 1.03 ) }
    dend_51 { pt3dadd( -90.0583, -40.8797, -62.7994, 1.4 ) }
    dend_51 { pt3dadd( -91.19, -40.9301, -63.5567, 1.18 ) }
    dend_51 { pt3dadd( -91.8481, -40.9848, -63.9647, 0.66 ) }
    dend_51 { pt3dadd( -92.8428, -41.0836, -64.5305, 1.18 ) }
    dend_51 { pt3dadd( -93.4199, -41.1417, -64.8184, 1.55 ) }
    dend_51 { pt3dadd( -94.7825, -41.2587, -65.5137, 0.52 ) }
    dend_51 { pt3dadd( -95.3502, -41.3023, -65.8276, 1.18 ) }
    dend_51 { pt3dadd( -96.1503, -41.3675, -66.3027, 1.18 ) }
    dend_51 { pt3dadd( -97.5906, -41.4722, -67.2604, 0.29 ) }
    dend_51 { pt3dadd( -98.1498, -41.5096, -67.6793, 0.29 ) }
    dend_51 { pt3dadd( -98.8139, -41.545, -68.2116, 0.29 ) }
    dend_51 { pt3dadd( -99.5636, -41.5653, -68.834, 0.59 ) }
    dend_51 { pt3dadd( -100.244, -41.5767, -69.4055, 0.59 ) }
    dend_51 { pt3dadd( -100.748, -41.5727, -69.8125, 0.44 ) }
    dend_51 { pt3dadd( -101.943, -41.532, -70.7268, 1.03 ) }
    dend_51 { pt3dadd( -102.545, -41.4845, -71.1959, 1.33 ) }
    dend_51 { pt3dadd( -103.937, -41.3388, -72.2509, 0.29 ) }
    dend_51 { pt3dadd( -104.546, -41.2614, -72.6833, 0.29 ) }
    dend_51 { pt3dadd( -105.098, -41.1822, -73.0465, 0.96 ) }
    dend_51 { pt3dadd( -105.827, -41.0738, -73.4717, 0.96 ) }
    dend_51 { pt3dadd( -108.213, -40.6772, -74.5402, 0.29 ) }
    dend_51 { pt3dadd( -108.663, -40.588, -74.6773, 0.29 ) }
    dend_51 { pt3dadd( -109.43, -40.4379, -74.7985, 1.03 ) }
    dend_51 { pt3dadd( -110.171, -40.3061, -74.8256, 1.33 ) }
    dend_51 { pt3dadd( -111.069, -40.1601, -74.7577, 0.74 ) }
    dend_51 { pt3dadd( -112.283, -39.9665, -74.5456, 0.37 ) }
    dend_51 { pt3dadd( -113.713, -39.7463, -74.1604, 0.29 ) }
    dend_51 { pt3dadd( -114.56, -39.6236, -73.9455, 0.22 ) }
    dend_51 { pt3dadd( -115.465, -39.5087, -73.7193, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -116.391, -39.3781, -73.492, 0.52 ) }
    dend_51 { pt3dadd( -117.071, -39.2727, -73.3314, 0.96 ) }
    dend_51 { pt3dadd( -117.665, -39.1748, -73.2092, 1.18 ) }
    dend_51 { pt3dadd( -118.272, -39.0861, -73.0954, 1.18 ) }
    dend_51 { pt3dadd( -119.13, -38.9377, -72.9387, 0.74 ) }
    dend_51 { pt3dadd( -119.915, -38.8058, -72.7892, 0.22 ) }
    dend_51 { pt3dadd( -120.308, -38.7451, -72.7024, 0.44 ) }
    dend_51 { pt3dadd( -120.827, -38.6642, -72.5616, 0.44 ) }
    dend_51 { pt3dadd( -121.471, -38.5397, -72.3689, 0.22 ) }
    dend_51 { pt3dadd( -122.128, -38.383, -72.1532, 0.22 ) }
    dend_51 { pt3dadd( -122.57, -38.2567, -72.0001, 0.88 ) }
    dend_51 { pt3dadd( -123.048, -38.1098, -71.8217, 1.25 ) }
    dend_51 { pt3dadd( -123.277, -38.0209, -71.7275, 1.25 ) }
    dend_51 { pt3dadd( -124.333, -37.5194, -71.2564, 0.22 ) }
    dend_51 { pt3dadd( -124.873, -37.218, -71.0059, 0.22 ) }
    dend_51 { pt3dadd( -125.426, -36.8701, -70.7462, 0.88 ) }
    dend_51 { pt3dadd( -125.891, -36.5412, -70.527, 1.25 ) }
    dend_51 { pt3dadd( -126.582, -35.998, -70.1988, 0.22 ) }
    dend_51 { pt3dadd( -127.398, -35.2996, -69.808, 0.22 ) }
    dend_51 { pt3dadd( -128.05, -34.6894, -69.5033, 0.88 ) }
    dend_51 { pt3dadd( -128.433, -34.2943, -69.3247, 0.88 ) }
    dend_51 { pt3dadd( -128.772, -33.9044, -69.1372, 0.37 ) }
    dend_51 { pt3dadd( -129.254, -33.2666, -68.8085, 0.15 ) }
    dend_51 { pt3dadd( -129.681, -32.6103, -68.4584, 0.96 ) }
    dend_51 { pt3dadd( -129.967, -32.1124, -68.1857, 1.18 ) }
    dend_51 { pt3dadd( -130.647, -30.8431, -67.4006, 0.22 ) }
    dend_51 { pt3dadd( -131.252, -29.6999, -66.6123, 0.81 ) }
    dend_51 { pt3dadd( -131.55, -29.1016, -66.178, 0.74 ) }
    dend_51 { pt3dadd( -131.902, -28.3165, -65.5792, 0.29 ) }
    dend_51 { pt3dadd( -132.014, -28.047, -65.3645, 0.29 ) }
    dend_51 { pt3dadd( -132.309, -27.3005, -64.7442, 0.52 ) }
    dend_51 { pt3dadd( -132.445, -26.9286, -64.4345, 0.66 ) }
    dend_51 { pt3dadd( -132.687, -26.1945, -63.9312, 0.22 ) }
    dend_51 { pt3dadd( -132.797, -25.8051, -63.7106, 0.22 ) }
    dend_51 { pt3dadd( -132.933, -25.1058, -63.3949, 0.81 ) }
    dend_51 { pt3dadd( -132.982, -24.6914, -63.265, 1.11 ) }
    dend_51 { pt3dadd( -133.009, -24.0286, -63.1644, 1.11 ) }
    dend_51 { pt3dadd( -132.996, -22.9973, -63.1392, 0.22 ) }
    dend_51 { pt3dadd( -132.974, -22.4392, -63.1891, 0.59 ) }
    dend_51 { pt3dadd( -132.963, -22.0945, -63.2363, 0.59 ) }
    dend_51 { pt3dadd( -132.952, -21.3988, -63.3419, 0.29 ) }
    dend_51 { pt3dadd( -132.993, -20.3195, -63.5234, 0.22 ) }
    dend_51 { pt3dadd( -133.068, -19.247, -63.7254, 0.88 ) }
    dend_51 { pt3dadd( -133.177, -18.302, -63.8814, 1.11 ) }
    dend_51 { pt3dadd( -133.388, -16.8275, -64.0658, 0.22 ) }
    dend_51 { pt3dadd( -133.493, -16.154, -64.1292, 0.52 ) }
    dend_51 { pt3dadd( -133.697, -15.0894, -64.2283, 0.22 ) }
    dend_51 { pt3dadd( -133.979, -13.8953, -64.3469, 0.22 ) }
    dend_51 { pt3dadd( -134.304, -12.69, -64.4743, 0.66 ) }
    dend_51 { pt3dadd( -134.593, -11.71, -64.6076, 0.66 ) }
    dend_51 { pt3dadd( -134.945, -10.6386, -64.8273, 0.88 ) }
    dend_51 { pt3dadd( -135.378, -9.38153, -65.1379, 0.66 ) }
    dend_51 { pt3dadd( -135.67, -8.57816, -65.3575, 0.44 ) }
    dend_51 { pt3dadd( -135.96, -7.85909, -65.5806, 0.66 ) }
    dend_51 { pt3dadd( -136.092, -7.53769, -65.7054, 0.66 ) }
    dend_51 { pt3dadd( -136.698, -6.18026, -66.321, 0.22 ) }
    dend_51 { pt3dadd( -137.152, -5.22078, -66.772, 0.22 ) }
    dend_51 { pt3dadd( -137.357, -4.74016, -66.9715, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -71.2796, -40.8229, -54.0344, 0.44 ) }
    dend_50 { pt3dadd( -72.2923, -42.0976, -54.2664, 0.44 ) }
    dend_50 { pt3dadd( -73.0669, -43.0924, -54.5046, 0.29 ) }
    dend_50 { pt3dadd( -73.4352, -43.5619, -54.6504, 0.66 ) }
    dend_50 { pt3dadd( -73.8244, -44.0394, -54.8472, 0.66 ) }
    dend_50 { pt3dadd( -74.5304, -44.8699, -55.307, 0.29 ) }
    dend_50 { pt3dadd( -74.8992, -45.2798, -55.5645, 0.59 ) }
    dend_50 { pt3dadd( -75.4933, -45.9584, -56.0581, 0.37 ) }
    dend_50 { pt3dadd( -76.175, -46.7292, -56.6975, 1.18 ) }
    dend_50 { pt3dadd( -76.766, -47.4443, -57.3437, 1.62 ) }
    dend_50 { pt3dadd( -77.3421, -48.2956, -58.2211, 1.62 ) }
    dend_50 { pt3dadd( -78.031, -49.6407, -59.7998, 0.29 ) }
    dend_50 { pt3dadd( -78.2648, -50.2473, -60.5708, 0.29 ) }
    dend_50 { pt3dadd( -78.3798, -50.6574, -61.1096, 0.66 ) }
    dend_50 { pt3dadd( -78.5711, -51.504, -62.1846, 0.52 ) }
    dend_50 { pt3dadd( -78.9142, -53.1788, -64.1608, 1.18 ) }
    dend_50 { pt3dadd( -79.1369, -54.3634, -65.4421, 1.77 ) }
    dend_50 { pt3dadd( -79.2752, -55.0708, -66.1735, 1.77 ) }
    dend_50 { pt3dadd( -79.8373, -56.91, -68.0362, 0.29 ) }
    dend_50 { pt3dadd( -80.1305, -57.6574, -68.7217, 0.29 ) }
    dend_50 { pt3dadd( -80.4691, -58.4323, -69.3646, 0.29 ) }
    dend_50 { pt3dadd( -80.97, -59.6143, -70.2799, 1.62 ) }
    dend_50 { pt3dadd( -81.2485, -60.3933, -70.8899, 1.69 ) }
    dend_50 { pt3dadd( -82.0863, -63.5852, -73.4997, 0.29 ) }
    dend_50 { pt3dadd( -82.2414, -64.5674, -74.3378, 0.29 ) }
    dend_50 { pt3dadd( -82.2851, -65.3698, -75.0531, 0.29 ) }
    dend_50 { pt3dadd( -82.1857, -67.154, -76.6622, 1.25 ) }
    dend_50 { pt3dadd( -81.9109, -68.5489, -77.9368, 0.66 ) }
    dend_50 { pt3dadd( -81.4892, -69.6621, -78.9253, 0.29 ) }
    dend_50 { pt3dadd( -81.0455, -70.3969, -79.5378, 1.03 ) }
    dend_50 { pt3dadd( -80.6397, -70.9697, -80.0423, 1.03 ) }
    dend_50 { pt3dadd( -80.1263, -71.6501, -80.6105, 0.44 ) }
    dend_50 { pt3dadd( -79.3884, -72.5397, -81.2828, 0.29 ) }
    dend_50 { pt3dadd( -78.9298, -73.0811, -81.677, 0.88 ) }
    dend_50 { pt3dadd( -78.6467, -73.4295, -81.9214, 1.33 ) }
    dend_50 { pt3dadd( -77.2393, -75.486, -83.373, 0.29 ) }
    dend_50 { pt3dadd( -76.8546, -76.2108, -83.8544, 0.96 ) }
    dend_50 { pt3dadd( -76.6805, -76.6597, -84.132, 0.81 ) }
    dend_50 { pt3dadd( -76.4634, -77.5158, -84.6443, 0.37 ) }
    dend_50 { pt3dadd( -76.267, -78.6273, -85.3138, 0.66 ) }
    dend_50 { pt3dadd( -76.0728, -80.0436, -86.1659, 0.52 ) }
    dend_50 { pt3dadd( -75.9749, -80.9288, -86.7031, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -75.9031, -81.5933, -87.1683, 0.88 ) }
    dend_50 { pt3dadd( -75.6563, -83.6, -88.9543, 0.44 ) }
    dend_50 { pt3dadd( -75.5877, -84.2774, -89.6832, 0.37 ) }
    dend_50 { pt3dadd( -75.4951, -85.1956, -90.8123, 0.29 ) }
    dend_50 { pt3dadd( -75.3935, -85.8596, -91.7044, 0.96 ) }
    dend_50 { pt3dadd( -75.2138, -86.8668, -93.1612, 1.03 ) }
    dend_50 { pt3dadd( -74.8408, -88.8245, -96.0458, 0.74 ) }
    dend_50 { pt3dadd( -74.6205, -89.965, -97.6757, 1.33 ) }
    dend_50 { pt3dadd( -74.4452, -90.9223, -98.9346, 1.11 ) }
    dend_50 { pt3dadd( -74.2961, -91.8435, -100.007, 0.44 ) }
    dend_50 { pt3dadd( -74.1981, -92.5215, -100.658, 0.81 ) }
    dend_50 { pt3dadd( -74.0595, -93.389, -101.306, 0.88 ) }
    dend_50 { pt3dadd( -73.7853, -94.9056, -102.202, 0.22 ) }
    dend_50 { pt3dadd( -73.5731, -95.8482, -102.769, 0.22 ) }
    dend_50 { pt3dadd( -73.47, -96.3392, -103.097, 0.59 ) }
    dend_50 { pt3dadd( -73.3557, -96.9864, -103.568, 0.59 ) }
    dend_50 { pt3dadd( -73.0558, -98.7319, -104.948, 0.37 ) }
    dend_50 { pt3dadd( -72.8854, -99.6898, -105.824, 0.59 ) }
    dend_50 { pt3dadd( -72.6524, -100.998, -107.12, 0.44 ) }
    dend_50 { pt3dadd( -72.5435, -101.661, -107.876, 0.74 ) }
    dend_50 { pt3dadd( -72.4846, -102.122, -108.435, 0.74 ) }
    dend_50 { pt3dadd( -72.4333, -102.937, -109.437, 0.37 ) }
    dend_50 { pt3dadd( -72.4494, -104.316, -111.345, 0.96 ) }
    dend_50 { pt3dadd( -72.4838, -104.892, -112.255, 0.88 ) }
    dend_50 { pt3dadd( -72.7219, -106.559, -115.129, 0.66 ) }
    dend_50 { pt3dadd( -72.8329, -107.143, -116.205, 0.96 ) }
    dend_50 { pt3dadd( -72.9617, -107.684, -117.241, 0.96 ) }
    dend_50 { pt3dadd( -73.535, -109.714, -121.156, 0.66 ) }
    dend_50 { pt3dadd( -73.9859, -111.247, -123.933, 0.66 ) }
    dend_50 { pt3dadd( -74.522, -113.119, -127.108, 0.44 ) }
    dend_50 { pt3dadd( -74.838, -114.31, -128.869, 0.74 ) }
    dend_50 { pt3dadd( -74.9909, -114.961, -129.701, 0.37 ) }
    dend_50 { pt3dadd( -75.1534, -115.757, -130.521, 0.81 ) }
    dend_50 { pt3dadd( -75.4463, -117.299, -131.573, 0.22 ) }
    dend_50 { pt3dadd( -75.568, -118.06, -131.943, 0.81 ) }
    dend_50 { pt3dadd( -75.7196, -119.562, -132.42, 0.22 ) }
    dend_50 { pt3dadd( -75.875, -121.435, -132.858, 0.22 ) }
    dend_50 { pt3dadd( -75.9329, -122.274, -133.046, 0.88 ) }
    dend_50 { pt3dadd( -75.9841, -122.906, -133.195, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -60.3761, -50.8807, -20.1042, 0.96 ) }
    dend_46 { pt3dadd( -62.1228, -51.8987, -21.3818, 0.96 ) }
    dend_46 { pt3dadd( -63.3095, -52.5311, -22.0283, 0.22 ) }
    dend_46 { pt3dadd( -63.9173, -52.8551, -22.3595, 0.52 ) }
    dend_46 { pt3dadd( -64.3956, -53.11, -22.6201, 0.66 ) }
    dend_46 { pt3dadd( -65.1102, -53.4909, -23.0094, 0.44 ) }
    dend_46 { pt3dadd( -65.9197, -53.9223, -23.4505, 1.33 ) }
    dend_46 { pt3dadd( -67.0992, -54.3231, -23.7787, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -60.3761, -50.8807, -20.1042, 0.37 ) }
    dend_39 { pt3dadd( -61.723, -49.7667, -19.6637, 0.37 ) }
    dend_39 { pt3dadd( -62.1925, -49.4055, -19.5002, 0.37 ) }
    dend_39 { pt3dadd( -62.9802, -48.7995, -19.226, 0.22 ) }
    dend_39 { pt3dadd( -63.4057, -48.4721, -19.0779, 1.03 ) }
    dend_39 { pt3dadd( -63.8426, -48.1359, -18.9258, 1.77 ) }
    dend_39 { pt3dadd( -64.3635, -47.7353, -18.7445, 2.14 ) }
    dend_39 { pt3dadd( -64.711, -47.5095, -18.6754, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 38.2591, -70.5026, -48.871, 0.44 ) }
    dend_36 { pt3dadd( 39.2706, -70.2234, -48.8041, 0.44 ) }
    dend_36 { pt3dadd( 39.8967, -69.982, -48.761, 0.22 ) }
    dend_36 { pt3dadd( 40.4775, -69.6401, -48.7662, 0.22 ) }
    dend_36 { pt3dadd( 41.1457, -69.1838, -48.8516, 0.44 ) }
    dend_36 { pt3dadd( 41.3479, -69.0248, -48.9113, 0.81 ) }
    dend_36 { pt3dadd( 41.6725, -68.7515, -49.0308, 0.81 ) }
    dend_36 { pt3dadd( 41.955, -68.4752, -49.228, 0.37 ) }
    dend_36 { pt3dadd( 42.4771, -67.8548, -49.7881, 0.44 ) }
    dend_36 { pt3dadd( 42.7007, -67.5141, -50.2594, 0.59 ) }
    dend_36 { pt3dadd( 42.981, -67.0016, -51.1138, 0.15 ) }
    dend_36 { pt3dadd( 43.1549, -66.6692, -51.7503, 0.29 ) }
    dend_36 { pt3dadd( 43.4697, -66.0824, -52.996, 1.18 ) }
    dend_36 { pt3dadd( 43.6447, -65.772, -53.7171, 1.18 ) }
    dend_36 { pt3dadd( 44.3771, -64.5856, -56.5929, 0.74 ) }
    dend_36 { pt3dadd( 44.517, -64.3655, -57.1047, 0.74 ) }
    dend_36 { pt3dadd( 44.7136, -64.0758, -57.7543, 0.96 ) }
    dend_36 { pt3dadd( 44.8958, -63.8185, -58.2846, 0.96 ) }
    dend_36 { pt3dadd( 45.2304, -63.3639, -59.0489, 0.52 ) }
    dend_36 { pt3dadd( 45.6656, -62.7611, -59.8219, 0.29 ) }
    dend_36 { pt3dadd( 46.0839, -62.1997, -60.3458, 0.29 ) }
    dend_36 { pt3dadd( 46.6311, -61.4564, -60.971, 1.33 ) }
    dend_36 { pt3dadd( 46.905, -61.0846, -61.25, 1.33 ) }
    dend_36 { pt3dadd( 47.4629, -60.3208, -61.7413, 0.44 ) }
    dend_36 { pt3dadd( 48.0446, -59.5259, -62.1603, 0.37 ) }
    dend_36 { pt3dadd( 48.5227, -58.8725, -62.4263, 0.37 ) }
    dend_36 { pt3dadd( 48.7467, -58.5821, -62.5104, 0.37 ) }
    dend_36 { pt3dadd( 49.1645, -58.0644, -62.6085, 0.22 ) }
    dend_36 { pt3dadd( 50.0586, -57.0099, -62.7584, 1.55 ) }
    dend_36 { pt3dadd( 50.4451, -56.5872, -62.7966, 1.77 ) }
    dend_36 { pt3dadd( 51.352, -55.6022, -62.8861, 0.37 ) }
    dend_36 { pt3dadd( 51.6556, -55.226, -62.9181, 0.44 ) }
    dend_36 { pt3dadd( 51.8695, -54.9134, -62.9475, 0.44 ) }
    dend_36 { pt3dadd( 52.0784, -54.5654, -62.9888, 0.44 ) }
    dend_36 { pt3dadd( 52.5494, -53.7423, -63.1153, 0.29 ) }
    dend_36 { pt3dadd( 52.8555, -53.1848, -63.2241, 0.22 ) }
    dend_36 { pt3dadd( 53.2051, -52.5425, -63.3665, 0.22 ) }
    dend_36 { pt3dadd( 53.8159, -51.4236, -63.6065, 1.18 ) }
    dend_36 { pt3dadd( 54.2001, -50.715, -63.739, 1.4 ) }
    dend_36 { pt3dadd( 54.3385, -50.4649, -63.7782, 1.62 ) }
    dend_36 { pt3dadd( 54.5134, -50.1634, -63.8255, 1.62 ) }
    dend_36 { pt3dadd( 54.9801, -49.4915, -63.9694, 0.96 ) }
    dend_36 { pt3dadd( 55.3569, -49.0184, -64.0909, 0.59 ) }
    dend_36 { pt3dadd( 55.9261, -48.3491, -64.2866, 0.52 ) }
    dend_36 { pt3dadd( 56.5282, -47.6546, -64.4929, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 57.0051, -47.1261, -64.6592, 1.03 ) }
    dend_36 { pt3dadd( 58.0895, -46.0481, -65.0349, 0.22 ) }
    dend_36 { pt3dadd( 58.4796, -45.7224, -65.1601, 0.66 ) }
    dend_36 { pt3dadd( 58.7791, -45.5237, -65.2427, 0.66 ) }
    dend_36 { pt3dadd( 59.5081, -45.2174, -65.3941, 0.29 ) }
    dend_36 { pt3dadd( 60.074, -45.1718, -65.439, 0.29 ) }
    dend_36 { pt3dadd( 60.8378, -45.382, -65.5163, 0.29 ) }
    dend_36 { pt3dadd( 61.6683, -45.8898, -65.6571, 1.33 ) }
    dend_36 { pt3dadd( 62.0431, -46.2259, -65.8077, 1.47 ) }
    dend_36 { pt3dadd( 62.6246, -46.8485, -66.1724, 0.74 ) }
    dend_36 { pt3dadd( 63.0823, -47.3712, -66.5483, 0.44 ) }
    dend_36 { pt3dadd( 64.231, -48.6052, -67.6564, 0.96 ) }
    dend_36 { pt3dadd( 64.5738, -48.9283, -68.0196, 0.74 ) }
    dend_36 { pt3dadd( 65.4519, -49.6554, -68.9823, 0.29 ) }
    dend_36 { pt3dadd( 65.9428, -49.9854, -69.4732, 0.52 ) }
    dend_36 { pt3dadd( 66.5723, -50.3234, -70.0118, 0.29 ) }
    dend_36 { pt3dadd( 67.2401, -50.6123, -70.4673, 0.66 ) }
    dend_36 { pt3dadd( 67.6805, -50.7596, -70.6834, 0.66 ) }
    dend_36 { pt3dadd( 68.2978, -50.9016, -70.9772, 0.29 ) }
    dend_36 { pt3dadd( 69.3587, -51.0785, -71.4592, 0.96 ) }
    dend_36 { pt3dadd( 70.0355, -51.1999, -71.7794, 0.29 ) }
    dend_36 { pt3dadd( 70.7457, -51.3268, -72.1385, 1.11 ) }
    dend_36 { pt3dadd( 71.8645, -51.5096, -72.7235, 0.37 ) }
    dend_36 { pt3dadd( 73.0001, -51.6585, -73.3258, 0.96 ) }
    dend_36 { pt3dadd( 73.7756, -51.7239, -73.7411, 0.52 ) }
    dend_36 { pt3dadd( 74.4825, -51.7644, -74.1225, 0.96 ) }
    dend_36 { pt3dadd( 74.749, -51.7733, -74.2594, 0.96 ) }
    dend_36 { pt3dadd( 75.7715, -51.8144, -74.7582, 0.29 ) }
    dend_36 { pt3dadd( 76.2517, -51.8401, -74.9596, 0.81 ) }
    dend_36 { pt3dadd( 76.6166, -51.8573, -75.0776, 0.81 ) }
    dend_36 { pt3dadd( 77.438, -51.8575, -75.3117, 0.29 ) }
    dend_36 { pt3dadd( 78.0913, -51.8231, -75.4757, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 38.2591, -70.5026, -48.871, 0.74 ) }
    dend_33 { pt3dadd( 39.1291, -72.0336, -48.5591, 0.74 ) }
    dend_33 { pt3dadd( 39.9156, -73.1319, -48.2434, 0.81 ) }
    dend_33 { pt3dadd( 40.8375, -74.2153, -47.871, 0.81 ) }
    dend_33 { pt3dadd( 41.9387, -75.3302, -47.4509, 0.59 ) }
    dend_33 { pt3dadd( 42.8975, -76.1572, -47.1221, 0.37 ) }
    dend_33 { pt3dadd( 43.4894, -76.5868, -46.9262, 0.37 ) }
    dend_33 { pt3dadd( 44.7622, -77.3322, -46.4667, 0.88 ) }
    dend_33 { pt3dadd( 45.288, -77.572, -46.2985, 0.88 ) }
    dend_33 { pt3dadd( 45.9071, -77.8323, -46.1096, 0.88 ) }
    dend_33 { pt3dadd( 46.7336, -78.2285, -45.8985, 0.29 ) }
    dend_33 { pt3dadd( 48.1335, -79.1211, -45.5862, 0.29 ) }
    dend_33 { pt3dadd( 48.8599, -79.7725, -45.4487, 1.03 ) }
    dend_33 { pt3dadd( 49.337, -80.2741, -45.3634, 1.33 ) }
    dend_33 { pt3dadd( 50.1468, -81.1432, -45.1999, 1.18 ) }
    dend_33 { pt3dadd( 51.1296, -82.1503, -44.9927, 1.03 ) }
    dend_33 { pt3dadd( 51.9238, -82.8789, -44.8313, 0.81 ) }
    dend_33 { pt3dadd( 53.2407, -83.8039, -44.5808, 0.37 ) }
    dend_33 { pt3dadd( 54.6699, -84.4991, -44.3055, 0.96 ) }
    dend_33 { pt3dadd( 55.5752, -84.8069, -44.1436, 1.18 ) }
    dend_33 { pt3dadd( 56.5564, -85.0168, -43.9581, 1.18 ) }
    dend_33 { pt3dadd( 57.4924, -85.1157, -43.7959, 0.88 ) }
    dend_33 { pt3dadd( 58.9327, -85.1382, -43.648, 0.44 ) }
    dend_33 { pt3dadd( 59.61, -85.099, -43.6785, 0.44 ) }
    dend_33 { pt3dadd( 60.8333, -84.9885, -43.9461, 0.37 ) }
    dend_33 { pt3dadd( 61.7929, -84.8933, -44.3362, 0.37 ) }
    dend_33 { pt3dadd( 63.1199, -84.7892, -45.1101, 0.66 ) }
    dend_33 { pt3dadd( 64.0792, -84.7637, -45.7862, 1.03 ) }
    dend_33 { pt3dadd( 65.276, -84.7322, -46.7727, 0.74 ) }
    dend_33 { pt3dadd( 66.0805, -84.7116, -47.5055, 0.52 ) }
    dend_33 { pt3dadd( 67.0787, -84.678, -48.5277, 0.44 ) }
    dend_33 { pt3dadd( 67.8738, -84.6937, -49.4139, 0.44 ) }
    dend_33 { pt3dadd( 68.6933, -84.7927, -50.2806, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.55074, 210.17, -29.0431, 0.29 ) }
    dend_26 { pt3dadd( 2.29106, 212.885, -29.6269, 0.29 ) }
    dend_26 { pt3dadd( 2.32993, 213.491, -29.7069, 0.29 ) }
    dend_26 { pt3dadd( 2.39715, 214.134, -29.7377, 0.66 ) }
    dend_26 { pt3dadd( 2.44279, 214.817, -29.6851, 0.88 ) }
    dend_26 { pt3dadd( 2.45481, 215.632, -29.5517, 0.88 ) }
    dend_26 { pt3dadd( 2.45666, 217.043, -29.0721, 0.52 ) }
    dend_26 { pt3dadd( 2.49715, 218.132, -28.3907, 0.66 ) }
    dend_26 { pt3dadd( 2.52414, 218.786, -27.7957, 0.81 ) }
    dend_26 { pt3dadd( 2.53806, 219.732, -26.7581, 0.37 ) }
    dend_26 { pt3dadd( 2.51301, 220.4, -25.9517, 0.52 ) }
    dend_26 { pt3dadd( 2.38142, 221.756, -24.1988, 0.74 ) }
    dend_26 { pt3dadd( 2.21018, 222.701, -22.9457, 1.03 ) }
    dend_26 { pt3dadd( 1.80806, 224.318, -20.7212, 1.03 ) }
    dend_26 { pt3dadd( 1.59694, 225.076, -19.6842, 0.74 ) }
    dend_26 { pt3dadd( 1.42929, 225.707, -18.8665, 0.44 ) }
    dend_26 { pt3dadd( 1.26938, 226.335, -18.0896, 0.44 ) }
    dend_26 { pt3dadd( 0.991358, 227.374, -16.9142, 0.44 ) }
    dend_26 { pt3dadd( 0.554002, 228.982, -15.2237, 0.88 ) }
    dend_26 { pt3dadd( 0.317635, 229.888, -14.3553, 1.18 ) }
    dend_26 { pt3dadd( 0.180495, 230.534, -13.7326, 0.52 ) }
    dend_26 { pt3dadd( 0.0723927, 231.25, -13.0497, 0.52 ) }
    dend_26 { pt3dadd( -0.0153981, 232.273, -12.1556, 0.59 ) }
    dend_26 { pt3dadd( -0.0453482, 233.005, -11.6199, 0.81 ) }
    dend_26 { pt3dadd( -0.102083, 233.939, -11.1249, 0.29 ) }
    dend_26 { pt3dadd( -0.18885, 234.5, -10.8525, 0.29 ) }
    dend_26 { pt3dadd( -0.387367, 235.146, -10.5096, 0.66 ) }
    dend_26 { pt3dadd( -0.643066, 235.702, -10.0923, 0.66 ) }
    dend_26 { pt3dadd( -0.861897, 236.152, -9.65691, 0.37 ) }
    dend_26 { pt3dadd( -1.04573, 236.586, -9.1606, 0.66 ) }
    dend_26 { pt3dadd( -1.24856, 237.189, -8.46673, 0.81 ) }
    dend_26 { pt3dadd( -1.39075, 237.77, -7.85321, 0.74 ) }
    dend_26 { pt3dadd( -1.65653, 239.595, -6.08759, 0.44 ) }
    dend_26 { pt3dadd( -1.68144, 240.399, -5.40383, 0.37 ) }
    dend_26 { pt3dadd( -1.61469, 241.135, -4.9019, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -1.41932, 242.147, -4.39244, 0.29 ) }
    dend_26 { pt3dadd( -1.20811, 242.921, -4.09068, 0.15 ) }
    dend_26 { pt3dadd( -1.00786, 243.526, -3.93721, 0.44 ) }
    dend_26 { pt3dadd( -0.889302, 243.848, -3.92477, 0.44 ) }
    dend_26 { pt3dadd( -0.78648, 244.144, -3.91639, 0.44 ) }
    dend_26 { pt3dadd( -0.248082, 246.1, -3.65316, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.55074, 210.17, -29.0431, 0.74 ) }
    dend_17 { pt3dadd( 2.48233, 211.107, -29.5039, 0.74 ) }
    dend_17 { pt3dadd( 2.38714, 211.934, -29.8698, 0.74 ) }
    dend_17 { pt3dadd( 2.18587, 213.27, -30.4151, 0.96 ) }
    dend_17 { pt3dadd( 2.00589, 214.248, -30.7428, 0.96 ) }
    dend_17 { pt3dadd( 1.75123, 215.408, -31.04, 0.74 ) }
    dend_17 { pt3dadd( 1.35572, 217.021, -31.3614, 0.59 ) }
    dend_17 { pt3dadd( 1.14091, 217.81, -31.4456, 0.81 ) }
    dend_17 { pt3dadd( 0.866246, 218.856, -31.4819, 0.81 ) }
    dend_17 { pt3dadd( 0.551035, 220.185, -31.4403, 0.81 ) }
    dend_17 { pt3dadd( 0.288347, 221.647, -31.3321, 0.96 ) }
    dend_17 { pt3dadd( 0.174007, 222.636, -31.237, 0.96 ) }
    dend_17 { pt3dadd( 0.110625, 224.299, -31.0932, 0.74 ) }
    dend_17 { pt3dadd( 0.152757, 225.21, -31.0313, 1.03 ) }
    dend_17 { pt3dadd( 0.241391, 225.865, -31.0079, 1.03 ) }
    dend_17 { pt3dadd( 0.465058, 226.974, -31.0395, 1.03 ) }
    dend_17 { pt3dadd( 0.59752, 227.555, -31.0811, 1.03 ) }
    dend_17 { pt3dadd( 0.761687, 228.436, -31.1743, 1.03 ) }
    dend_17 { pt3dadd( 0.832756, 229.194, -31.2491, 1.03 ) }
    dend_17 { pt3dadd( 0.835275, 230.075, -31.3386, 0.96 ) }
    dend_17 { pt3dadd( 0.735736, 231.05, -31.4298, 0.74 ) }
    dend_17 { pt3dadd( 0.587625, 231.848, -31.5079, 0.74 ) }
    dend_17 { pt3dadd( 0.357473, 232.787, -31.5872, 0.88 ) }
    dend_17 { pt3dadd( -0.00153828, 233.993, -31.6654, 1.11 ) }
    dend_17 { pt3dadd( -0.309116, 234.902, -31.7198, 1.11 ) }
    dend_17 { pt3dadd( -0.833977, 236.377, -31.7953, 0.96 ) }
    dend_17 { pt3dadd( -1.1092, 237.184, -31.8265, 0.96 ) }
    dend_17 { pt3dadd( -1.36001, 237.974, -31.8398, 0.96 ) }
    dend_17 { pt3dadd( -1.57063, 238.649, -31.8337, 0.96 ) }
    dend_17 { pt3dadd( -1.84285, 239.506, -31.8027, 0.81 ) }
    dend_17 { pt3dadd( -2.15736, 240.545, -31.7428, 0.96 ) }
    dend_17 { pt3dadd( -2.36815, 241.322, -31.6725, 0.96 ) }
    dend_17 { pt3dadd( -2.5887, 242.237, -31.5407, 0.96 ) }
    dend_17 { pt3dadd( -2.71851, 242.924, -31.4184, 1.25 ) }
    dend_17 { pt3dadd( -2.82957, 243.742, -31.224, 1.25 ) }
    dend_17 { pt3dadd( -2.92045, 244.936, -30.871, 1.11 ) }
    dend_17 { pt3dadd( -2.9302, 245.948, -30.5707, 0.88 ) }
    dend_17 { pt3dadd( -2.85014, 246.997, -30.2792, 0.74 ) }
    dend_17 { pt3dadd( -2.73162, 247.709, -30.1199, 1.18 ) }
    dend_17 { pt3dadd( -2.52184, 248.552, -29.9642, 1.18 ) }
    dend_17 { pt3dadd( -2.37278, 249.08, -29.8688, 1.18 ) }
    dend_17 { pt3dadd( -2.11264, 250.039, -29.6878, 0.96 ) }
    dend_17 { pt3dadd( -1.95362, 250.749, -29.5835, 0.81 ) }
    dend_17 { pt3dadd( -1.82944, 251.532, -29.4982, 0.81 ) }
    dend_17 { pt3dadd( -1.73814, 252.434, -29.4073, 0.81 ) }
    dend_17 { pt3dadd( -1.66494, 253.57, -29.3088, 0.81 ) }
    dend_17 { pt3dadd( -1.64244, 254.477, -29.224, 1.11 ) }
    dend_17 { pt3dadd( -1.64898, 255.444, -29.1422, 1.11 ) }
    dend_17 { pt3dadd( -1.68906, 256.468, -29.1354, 0.96 ) }
    dend_17 { pt3dadd( -1.76087, 257.532, -29.2113, 0.96 ) }
    dend_17 { pt3dadd( -1.90442, 258.97, -29.4454, 0.88 ) }
    dend_17 { pt3dadd( -2.06912, 260.274, -29.7775, 0.88 ) }
    dend_17 { pt3dadd( -2.23377, 261.371, -30.1378, 0.88 ) }
    dend_17 { pt3dadd( -2.50632, 263.066, -30.7851, 0.88 ) }
    dend_17 { pt3dadd( -2.71645, 264.331, -31.3001, 1.11 ) }
    dend_17 { pt3dadd( -2.89244, 265.376, -31.747, 1.11 ) }
    dend_17 { pt3dadd( -3.04605, 266.343, -32.115, 1.11 ) }
    dend_17 { pt3dadd( -3.16929, 267.457, -32.4438, 0.81 ) }
    dend_17 { pt3dadd( -3.24842, 269.196, -32.794, 1.11 ) }
    dend_17 { pt3dadd( -3.22312, 269.932, -32.8657, 1.11 ) }
    dend_17 { pt3dadd( -3.08941, 271.152, -32.9392, 1.11 ) }
    dend_17 { pt3dadd( -2.79947, 272.987, -33.0017, 0.96 ) }
    dend_17 { pt3dadd( -2.53841, 274.387, -33.0291, 0.96 ) }
    dend_17 { pt3dadd( -2.35967, 275.329, -33.0768, 0.96 ) }
    dend_17 { pt3dadd( -2.21971, 276.126, -33.168, 0.96 ) }
    dend_17 { pt3dadd( -1.94783, 277.61, -33.4069, 0.81 ) }
    dend_17 { pt3dadd( -1.74823, 278.595, -33.6068, 0.81 ) }
    dend_17 { pt3dadd( -1.51711, 279.738, -33.8829, 0.66 ) }
    dend_17 { pt3dadd( -1.17346, 281.501, -34.3386, 0.66 ) }
    dend_17 { pt3dadd( -0.916257, 282.952, -34.7093, 0.66 ) }
    dend_17 { pt3dadd( -0.674367, 284.745, -35.1565, 1.03 ) }
    dend_17 { pt3dadd( -0.604512, 285.575, -35.3427, 1.03 ) }
    dend_17 { pt3dadd( -0.547846, 287.188, -35.7306, 0.81 ) }
    dend_17 { pt3dadd( -0.565309, 288.164, -35.9737, 0.81 ) }
    dend_17 { pt3dadd( -0.634153, 289.18, -36.2243, 0.96 ) }
    dend_17 { pt3dadd( -0.7908, 290.672, -36.6078, 0.66 ) }
    dend_17 { pt3dadd( -0.934665, 291.749, -36.8996, 0.88 ) }
    dend_17 { pt3dadd( -1.08511, 292.995, -37.2215, 0.88 ) }
    dend_17 { pt3dadd( -1.2127, 294.343, -37.5288, 0.88 ) }
    dend_17 { pt3dadd( -1.30996, 295.868, -37.8182, 1.03 ) }
    dend_17 { pt3dadd( -1.32057, 296.708, -37.9768, 1.03 ) }
    dend_17 { pt3dadd( -1.29306, 297.561, -38.1343, 1.03 ) }
    dend_17 { pt3dadd( -1.2115, 299.047, -38.3795, 0.81 ) }
    dend_17 { pt3dadd( -1.13288, 300.46, -38.5615, 0.81 ) }
    dend_17 { pt3dadd( -1.10039, 301.402, -38.6704, 0.81 ) }
    dend_17 { pt3dadd( -1.09215, 303.345, -38.8616, 0.81 ) }
    dend_17 { pt3dadd( -1.16339, 304.784, -38.9886, 1.25 ) }
    dend_17 { pt3dadd( -1.22098, 305.297, -39.0364, 1.33 ) }
    dend_17 { pt3dadd( -1.35776, 306.154, -39.1331, 1.33 ) }
    dend_17 { pt3dadd( -1.5365, 307.124, -39.2626, 1.18 ) }
    dend_17 { pt3dadd( -1.69337, 307.945, -39.396, 0.74 ) }
    dend_17 { pt3dadd( -1.93627, 309.134, -39.598, 0.66 ) }
    dend_17 { pt3dadd( -2.11872, 310.08, -39.7921, 0.96 ) }
    dend_17 { pt3dadd( -2.25694, 310.938, -39.9957, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -2.33814, 311.69, -40.1718, 0.66 ) }
    dend_17 { pt3dadd( -2.38458, 312.699, -40.3593, 0.66 ) }
    dend_17 { pt3dadd( -2.40061, 313.989, -40.5299, 0.66 ) }
    dend_17 { pt3dadd( -2.3974, 315.006, -40.6115, 0.96 ) }
    dend_17 { pt3dadd( -2.41445, 315.807, -40.6612, 0.96 ) }
    dend_17 { pt3dadd( -2.47387, 316.667, -40.7378, 0.74 ) }
    dend_17 { pt3dadd( -2.65825, 318.573, -40.9662, 0.74 ) }
    dend_17 { pt3dadd( -2.72944, 319.191, -41.0507, 0.88 ) }
    dend_17 { pt3dadd( -2.92751, 320.794, -41.3107, 0.96 ) }
    dend_17 { pt3dadd( -3.12058, 322.298, -41.5646, 0.81 ) }
    dend_17 { pt3dadd( -3.32098, 323.842, -41.8418, 0.66 ) }
    dend_17 { pt3dadd( -3.4749, 325.192, -42.1054, 0.81 ) }
    dend_17 { pt3dadd( -3.57344, 326.266, -42.2991, 0.96 ) }
    dend_17 { pt3dadd( -3.66723, 327.886, -42.5545, 0.74 ) }
    dend_17 { pt3dadd( -3.69941, 328.697, -42.6522, 1.03 ) }
    dend_17 { pt3dadd( -3.73668, 329.741, -42.6995, 1.03 ) }
    dend_17 { pt3dadd( -3.80908, 331.252, -42.6967, 1.33 ) }
    dend_17 { pt3dadd( -3.87862, 332.218, -42.6849, 1.55 ) }
    dend_17 { pt3dadd( -4.01936, 333.798, -42.6618, 0.81 ) }
    dend_17 { pt3dadd( -4.14728, 334.874, -42.6492, 0.66 ) }
    dend_17 { pt3dadd( -4.30816, 335.96, -42.6576, 0.66 ) }
    dend_17 { pt3dadd( -4.44734, 336.746, -42.6895, 0.66 ) }
    dend_17 { pt3dadd( -4.67109, 337.941, -42.7872, 0.66 ) }
    dend_17 { pt3dadd( -4.83025, 338.935, -42.9013, 0.66 ) }
    dend_17 { pt3dadd( -4.96261, 340.014, -43.0216, 1.25 ) }
    dend_17 { pt3dadd( -5.00127, 340.498, -43.0817, 1.03 ) }
    dend_17 { pt3dadd( -5.04668, 341.808, -43.2678, 0.81 ) }
    dend_17 { pt3dadd( -5.04658, 342.978, -43.4246, 0.81 ) }
    dend_17 { pt3dadd( -5.01196, 344.265, -43.5987, 0.66 ) }
    dend_17 { pt3dadd( -4.94566, 345.351, -43.7363, 0.66 ) }
    dend_17 { pt3dadd( -4.8483, 346.426, -43.8594, 0.96 ) }
    dend_17 { pt3dadd( -4.74815, 347.372, -43.9559, 1.4 ) }
    dend_17 { pt3dadd( -4.66096, 348.132, -44.0234, 1.4 ) }
    dend_17 { pt3dadd( -4.6056, 348.693, -44.071, 1.4 ) }
    dend_17 { pt3dadd( -4.54069, 349.695, -44.1541, 0.88 ) }
    dend_17 { pt3dadd( -4.47272, 350.935, -44.2618, 0.74 ) }
    dend_17 { pt3dadd( -4.4235, 351.747, -44.3398, 0.74 ) }
    dend_17 { pt3dadd( -4.34475, 353.092, -44.4799, 0.74 ) }
    dend_17 { pt3dadd( -4.26771, 354.23, -44.6099, 0.66 ) }
    dend_17 { pt3dadd( -4.16696, 355.509, -44.7723, 0.66 ) }
    dend_17 { pt3dadd( -4.01463, 357.247, -45.0176, 0.66 ) }
    dend_17 { pt3dadd( -3.8823, 358.51, -45.2008, 0.74 ) }
    dend_17 { pt3dadd( -3.78201, 359.292, -45.318, 0.74 ) }
    dend_17 { pt3dadd( -3.63924, 360.218, -45.4615, 0.96 ) }
    dend_17 { pt3dadd( -3.49785, 361.043, -45.5856, 1.11 ) }
    dend_17 { pt3dadd( -3.39224, 361.663, -45.6802, 1.11 ) }
    dend_17 { pt3dadd( -3.24441, 362.724, -45.8408, 0.74 ) }
    dend_17 { pt3dadd( -3.13446, 363.641, -45.989, 0.59 ) }
    dend_17 { pt3dadd( -3.00181, 364.679, -46.1575, 0.59 ) }
    dend_17 { pt3dadd( -2.85708, 365.665, -46.3308, 0.88 ) }
    dend_17 { pt3dadd( -2.78661, 366.151, -46.4254, 1.25 ) }
    dend_17 { pt3dadd( -2.68897, 366.878, -46.5812, 1.4 ) }
    dend_17 { pt3dadd( -2.62959, 367.387, -46.7002, 1.4 ) }
    dend_17 { pt3dadd( -2.56713, 368.156, -46.886, 0.88 ) }
    dend_17 { pt3dadd( -2.52364, 369.081, -47.115, 0.66 ) }
    dend_17 { pt3dadd( -2.5121, 370.293, -47.4106, 0.66 ) }
    dend_17 { pt3dadd( -2.52182, 371.198, -47.6096, 0.66 ) }
    dend_17 { pt3dadd( -2.54011, 371.808, -47.7329, 0.52 ) }
    dend_17 { pt3dadd( -2.58913, 372.973, -47.9501, 0.81 ) }
    dend_17 { pt3dadd( -2.63726, 373.877, -48.1186, 0.81 ) }
    dend_17 { pt3dadd( -2.67941, 374.765, -48.2744, 0.66 ) }
    dend_17 { pt3dadd( -2.70551, 376.111, -48.4988, 0.59 ) }
    dend_17 { pt3dadd( -2.70189, 376.854, -48.6126, 0.88 ) }
    dend_17 { pt3dadd( -2.67878, 377.736, -48.7451, 1.11 ) }
    dend_17 { pt3dadd( -2.63875, 378.614, -48.8706, 1.11 ) }
    dend_17 { pt3dadd( -2.59571, 379.315, -48.9676, 1.11 ) }
    dend_17 { pt3dadd( -2.54483, 379.957, -49.0545, 0.88 ) }
    dend_17 { pt3dadd( -2.46808, 380.733, -49.1734, 0.52 ) }
    dend_17 { pt3dadd( -2.37981, 381.514, -49.2942, 0.81 ) }
    dend_17 { pt3dadd( -2.28822, 382.308, -49.4021, 0.81 ) }
    dend_17 { pt3dadd( -2.23911, 382.777, -49.449, 0.81 ) }
    dend_17 { pt3dadd( -2.16074, 383.618, -49.5232, 0.96 ) }
    dend_17 { pt3dadd( -2.08215, 384.665, -49.605, 0.59 ) }
    dend_17 { pt3dadd( -2.03002, 385.415, -49.6596, 0.44 ) }
    dend_17 { pt3dadd( -1.95138, 386.509, -49.722, 0.44 ) }
    dend_17 { pt3dadd( -1.88726, 387.342, -49.7608, 1.11 ) }
    dend_17 { pt3dadd( -1.86092, 387.72, -49.7746, 1.4 ) }
    dend_17 { pt3dadd( -1.83209, 388.536, -49.7824, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.55253, 139.614, -28.1257, 0.29 ) }
    dend_15 { pt3dadd( -10.0732, 140.55, -28.0722, 0.29 ) }
    dend_15 { pt3dadd( -10.5398, 141.338, -28.0985, 0.52 ) }
    dend_15 { pt3dadd( -10.8858, 141.893, -28.1422, 0.52 ) }
    dend_15 { pt3dadd( -11.5297, 142.931, -28.2526, 0.66 ) }
    dend_15 { pt3dadd( -11.7839, 143.348, -28.3063, 0.66 ) }
    dend_15 { pt3dadd( -12.0143, 143.778, -28.341, 0.37 ) }
    dend_15 { pt3dadd( -12.4936, 145.0, -28.3605, 0.29 ) }
    dend_15 { pt3dadd( -12.598, 145.451, -28.3491, 0.59 ) }
    dend_15 { pt3dadd( -12.6626, 146.005, -28.3253, 0.81 ) }
    dend_15 { pt3dadd( -12.6688, 146.346, -28.2964, 0.81 ) }
    dend_15 { pt3dadd( -12.6186, 147.797, -28.1177, 0.74 ) }
    dend_15 { pt3dadd( -12.564, 148.578, -27.9879, 0.74 ) }
    dend_15 { pt3dadd( -12.4819, 149.548, -27.7741, 0.44 ) }
    dend_15 { pt3dadd( -12.4518, 150.194, -27.6369, 0.29 ) }
    dend_15 { pt3dadd( -12.4544, 150.841, -27.5155, 0.29 ) }
    dend_15 { pt3dadd( -12.4823, 151.273, -27.4524, 0.52 ) }
    dend_15 { pt3dadd( -12.5527, 151.773, -27.4248, 0.52 ) }
    dend_15 { pt3dadd( -12.6602, 152.377, -27.4251, 0.52 ) }
    dend_15 { pt3dadd( -12.8659, 153.337, -27.4606, 0.74 ) }
    dend_15 { pt3dadd( -13.009, 153.92, -27.5029, 0.96 ) }
    dend_15 { pt3dadd( -13.1164, 154.343, -27.5482, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -13.2632, 154.946, -27.6295, 0.59 ) }
    dend_15 { pt3dadd( -13.4293, 155.674, -27.7508, 0.37 ) }
    dend_15 { pt3dadd( -13.5914, 156.343, -27.9276, 0.22 ) }
    dend_15 { pt3dadd( -13.693, 156.783, -28.0801, 0.22 ) }
    dend_15 { pt3dadd( -13.7732, 157.195, -28.2358, 0.74 ) }
    dend_15 { pt3dadd( -13.8816, 157.794, -28.4755, 1.03 ) }
    dend_15 { pt3dadd( -13.939, 158.113, -28.6, 1.03 ) }
    dend_15 { pt3dadd( -14.1509, 159.322, -29.0532, 0.44 ) }
    dend_15 { pt3dadd( -14.29, 160.156, -29.3739, 0.44 ) }
    dend_15 { pt3dadd( -14.3987, 160.914, -29.64, 0.37 ) }
    dend_15 { pt3dadd( -14.489, 161.605, -29.8636, 0.37 ) }
    dend_15 { pt3dadd( -14.5615, 162.265, -30.0574, 0.37 ) }
    dend_15 { pt3dadd( -14.6069, 162.967, -30.2363, 0.37 ) }
    dend_15 { pt3dadd( -14.6093, 163.648, -30.3959, 0.37 ) }
    dend_15 { pt3dadd( -14.5643, 164.718, -30.7008, 0.88 ) }
    dend_15 { pt3dadd( -14.5092, 165.255, -30.8749, 1.18 ) }
    dend_15 { pt3dadd( -14.4495, 165.651, -31.0147, 1.18 ) }
    dend_15 { pt3dadd( -14.3264, 166.285, -31.2547, 0.74 ) }
    dend_15 { pt3dadd( -14.1446, 167.103, -31.566, 0.52 ) }
    dend_15 { pt3dadd( -13.9726, 167.868, -31.8472, 0.44 ) }
    dend_15 { pt3dadd( -13.7719, 168.718, -32.161, 0.37 ) }
    dend_15 { pt3dadd( -13.6573, 169.169, -32.321, 0.37 ) }
    dend_15 { pt3dadd( -13.46, 169.871, -32.5545, 0.37 ) }
    dend_15 { pt3dadd( -13.1923, 170.719, -32.8106, 0.59 ) }
    dend_15 { pt3dadd( -13.0036, 171.251, -32.9496, 1.03 ) }
    dend_15 { pt3dadd( -12.8133, 171.748, -33.0705, 1.03 ) }
    dend_15 { pt3dadd( -12.6075, 172.286, -33.1915, 0.96 ) }
    dend_15 { pt3dadd( -12.3477, 173.037, -33.3292, 0.29 ) }
    dend_15 { pt3dadd( -12.1574, 173.735, -33.4497, 0.29 ) }
    dend_15 { pt3dadd( -12.0833, 174.134, -33.5169, 0.52 ) }
    dend_15 { pt3dadd( -12.041, 174.517, -33.5712, 0.52 ) }
    dend_15 { pt3dadd( -12.0223, 174.979, -33.6259, 0.29 ) }
    dend_15 { pt3dadd( -12.037, 175.621, -33.6947, 0.52 ) }
    dend_15 { pt3dadd( -12.0681, 176.399, -33.764, 0.66 ) }
    dend_15 { pt3dadd( -12.0528, 177.067, -33.8227, 0.66 ) }
    dend_15 { pt3dadd( -11.9923, 177.691, -33.8946, 0.52 ) }
    dend_15 { pt3dadd( -11.9308, 178.115, -33.9609, 0.81 ) }
    dend_15 { pt3dadd( -11.8604, 178.586, -34.0679, 1.11 ) }
    dend_15 { pt3dadd( -11.7677, 179.325, -34.2728, 0.15 ) }
    dend_15 { pt3dadd( -11.6875, 180.034, -34.4865, 0.15 ) }
    dend_15 { pt3dadd( -11.6352, 180.522, -34.6533, 0.52 ) }
    dend_15 { pt3dadd( -11.553, 181.346, -34.9689, 0.59 ) }
    dend_15 { pt3dadd( -11.4661, 182.261, -35.3415, 0.29 ) }
    dend_15 { pt3dadd( -11.4108, 182.987, -35.6384, 0.29 ) }
    dend_15 { pt3dadd( -11.3889, 183.59, -35.892, 0.96 ) }
    dend_15 { pt3dadd( -11.3837, 183.924, -36.0252, 0.96 ) }
    dend_15 { pt3dadd( -11.3565, 184.473, -36.2238, 0.59 ) }
    dend_15 { pt3dadd( -11.315, 184.976, -36.4052, 0.22 ) }
    dend_15 { pt3dadd( -11.2477, 185.692, -36.6452, 0.22 ) }
    dend_15 { pt3dadd( -11.2018, 186.3, -36.8509, 0.88 ) }
    dend_15 { pt3dadd( -11.1901, 186.655, -36.9634, 0.88 ) }
    dend_15 { pt3dadd( -11.1933, 187.101, -37.09, 0.88 ) }
    dend_15 { pt3dadd( -11.2335, 187.855, -37.2849, 0.29 ) }
    dend_15 { pt3dadd( -11.315, 188.609, -37.4503, 0.22 ) }
    dend_15 { pt3dadd( -11.3666, 188.943, -37.4987, 0.22 ) }
    dend_15 { pt3dadd( -11.5002, 189.668, -37.5353, 0.81 ) }
    dend_15 { pt3dadd( -11.5585, 190.042, -37.5296, 1.11 ) }
    dend_15 { pt3dadd( -11.5813, 190.261, -37.5187, 1.11 ) }
    dend_15 { pt3dadd( -11.5913, 190.889, -37.5216, 0.88 ) }
    dend_15 { pt3dadd( -11.5601, 191.495, -37.5814, 0.59 ) }
    dend_15 { pt3dadd( -11.4912, 192.188, -37.6976, 0.29 ) }
    dend_15 { pt3dadd( -11.3647, 193.158, -37.9071, 0.29 ) }
    dend_15 { pt3dadd( -11.2679, 193.937, -38.0874, 0.74 ) }
    dend_15 { pt3dadd( -11.1593, 195.143, -38.4027, 0.52 ) }
    dend_15 { pt3dadd( -11.1268, 195.888, -38.6339, 1.03 ) }
    dend_15 { pt3dadd( -11.1402, 196.472, -38.8402, 1.03 ) }
    dend_15 { pt3dadd( -11.1837, 196.838, -38.9685, 0.74 ) }
    dend_15 { pt3dadd( -11.3918, 197.626, -39.2228, 0.44 ) }
    dend_15 { pt3dadd( -11.69, 198.45, -39.4232, 0.88 ) }
    dend_15 { pt3dadd( -11.8971, 198.982, -39.5127, 1.18 ) }
    dend_15 { pt3dadd( -12.0014, 199.246, -39.5618, 1.18 ) }
    dend_15 { pt3dadd( -12.2221, 199.847, -39.6834, 0.59 ) }
    dend_15 { pt3dadd( -12.5032, 200.737, -39.8834, 0.29 ) }
    dend_15 { pt3dadd( -12.7331, 201.659, -40.102, 0.81 ) }
    dend_15 { pt3dadd( -12.9085, 202.547, -40.2978, 0.52 ) }
    dend_15 { pt3dadd( -13.0143, 203.129, -40.4212, 0.52 ) }
    dend_15 { pt3dadd( -13.1183, 203.702, -40.5453, 0.74 ) }
    dend_15 { pt3dadd( -13.2519, 204.418, -40.689, 0.74 ) }
    dend_15 { pt3dadd( -13.4047, 205.218, -40.8119, 0.22 ) }
    dend_15 { pt3dadd( -13.4792, 205.511, -40.8489, 0.22 ) }
    dend_15 { pt3dadd( -13.6158, 205.968, -40.8908, 0.52 ) }
    dend_15 { pt3dadd( -13.7083, 206.293, -40.9104, 0.52 ) }
    dend_15 { pt3dadd( -13.8798, 206.919, -40.96, 0.29 ) }
    dend_15 { pt3dadd( -14.0154, 207.451, -41.0115, 0.29 ) }
    dend_15 { pt3dadd( -14.1716, 208.106, -41.0887, 1.03 ) }
    dend_15 { pt3dadd( -14.2841, 208.66, -41.1637, 1.03 ) }
    dend_15 { pt3dadd( -14.3458, 209.045, -41.2114, 1.03 ) }
    dend_15 { pt3dadd( -14.405, 209.611, -41.2717, 0.52 ) }
    dend_15 { pt3dadd( -14.4199, 210.084, -41.3192, 0.29 ) }
    dend_15 { pt3dadd( -14.4109, 210.572, -41.3504, 0.59 ) }
    dend_15 { pt3dadd( -14.3806, 210.903, -41.3564, 0.59 ) }
    dend_15 { pt3dadd( -14.2794, 211.591, -41.3653, 0.22 ) }
    dend_15 { pt3dadd( -14.1489, 212.284, -41.3788, 0.81 ) }
    dend_15 { pt3dadd( -14.0444, 212.735, -41.3966, 1.03 ) }
    dend_15 { pt3dadd( -14.0033, 212.893, -41.408, 1.03 ) }
    dend_15 { pt3dadd( -13.835, 213.558, -41.4668, 0.59 ) }
    dend_15 { pt3dadd( -13.6904, 214.218, -41.5231, 0.37 ) }
    dend_15 { pt3dadd( -13.6272, 214.592, -41.5423, 0.37 ) }
    dend_15 { pt3dadd( -13.5805, 215.101, -41.5398, 0.66 ) }
    dend_15 { pt3dadd( -13.5688, 215.428, -41.5225, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -13.6044, 216.357, -41.4366, 0.29 ) }
    dend_15 { pt3dadd( -13.6553, 216.812, -41.3834, 0.29 ) }
    dend_15 { pt3dadd( -13.7654, 217.526, -41.2916, 0.74 ) }
    dend_15 { pt3dadd( -13.8529, 218.07, -41.2211, 0.74 ) }
    dend_15 { pt3dadd( -13.9439, 218.661, -41.143, 0.74 ) }
    dend_15 { pt3dadd( -14.0446, 219.462, -41.041, 0.29 ) }
    dend_15 { pt3dadd( -14.108, 220.175, -40.9585, 0.29 ) }
    dend_15 { pt3dadd( -14.1248, 221.207, -40.8683, 1.33 ) }
    dend_15 { pt3dadd( -14.0827, 221.722, -40.8333, 1.33 ) }
    dend_15 { pt3dadd( -13.9678, 222.448, -40.8068, 1.11 ) }
    dend_15 { pt3dadd( -13.8227, 223.059, -40.8042, 0.59 ) }
    dend_15 { pt3dadd( -13.6133, 223.7, -40.8471, 0.44 ) }
    dend_15 { pt3dadd( -13.149, 224.958, -41.0584, 0.29 ) }
    dend_15 { pt3dadd( -12.7931, 225.832, -41.3161, 0.74 ) }
    dend_15 { pt3dadd( -12.6003, 226.329, -41.5209, 0.81 ) }
    dend_15 { pt3dadd( -12.4567, 226.743, -41.7381, 0.44 ) }
    dend_15 { pt3dadd( -12.2294, 227.537, -42.2209, 0.22 ) }
    dend_15 { pt3dadd( -12.0736, 228.223, -42.6812, 0.81 ) }
    dend_15 { pt3dadd( -12.0206, 228.532, -42.9104, 0.81 ) }
    dend_15 { pt3dadd( -11.94, 229.159, -43.3894, 0.22 ) }
    dend_15 { pt3dadd( -11.8764, 229.658, -43.7488, 0.22 ) }
    dend_15 { pt3dadd( -11.8071, 230.27, -44.1731, 0.81 ) }
    dend_15 { pt3dadd( -11.7849, 230.446, -44.2832, 0.81 ) }
    dend_15 { pt3dadd( -11.6842, 231.063, -44.6508, 0.29 ) }
    dend_15 { pt3dadd( -11.5855, 231.571, -44.9484, 0.88 ) }
    dend_15 { pt3dadd( -11.4425, 232.135, -45.2741, 0.88 ) }
    dend_15 { pt3dadd( -11.2006, 233.018, -45.7557, 0.22 ) }
    dend_15 { pt3dadd( -11.0404, 233.643, -46.0588, 0.74 ) }
    dend_15 { pt3dadd( -10.9931, 233.847, -46.1429, 0.88 ) }
    dend_15 { pt3dadd( -10.8731, 234.57, -46.3918, 0.15 ) }
    dend_15 { pt3dadd( -10.7949, 235.172, -46.5698, 0.52 ) }
    dend_15 { pt3dadd( -10.7427, 235.704, -46.7089, 0.22 ) }
    dend_15 { pt3dadd( -10.716, 236.235, -46.8473, 0.66 ) }
    dend_15 { pt3dadd( -10.7186, 236.5, -46.9229, 0.88 ) }
    dend_15 { pt3dadd( -10.7995, 237.577, -47.2382, 0.22 ) }
    dend_15 { pt3dadd( -10.8447, 237.904, -47.3318, 0.59 ) }
    dend_15 { pt3dadd( -10.9313, 238.369, -47.4649, 0.44 ) }
    dend_15 { pt3dadd( -11.0582, 239.014, -47.6299, 0.22 ) }
    dend_15 { pt3dadd( -11.1318, 239.409, -47.715, 0.37 ) }
    dend_15 { pt3dadd( -11.2549, 240.113, -47.8256, 0.15 ) }
    dend_15 { pt3dadd( -11.3647, 240.809, -47.8841, 0.81 ) }
    dend_15 { pt3dadd( -11.4229, 241.216, -47.9037, 1.11 ) }
    dend_15 { pt3dadd( -11.4978, 241.854, -47.9149, 1.03 ) }
    dend_15 { pt3dadd( -11.549, 242.455, -47.9122, 0.29 ) }
    dend_15 { pt3dadd( -11.5938, 243.049, -47.915, 0.29 ) }
    dend_15 { pt3dadd( -11.6404, 243.591, -47.92, 0.29 ) }
    dend_15 { pt3dadd( -11.7347, 244.561, -47.9394, 0.22 ) }
    dend_15 { pt3dadd( -11.7999, 245.152, -47.9553, 0.74 ) }
    dend_15 { pt3dadd( -11.9653, 246.446, -48.0102, 0.22 ) }
    dend_15 { pt3dadd( -12.0773, 247.22, -48.0419, 0.81 ) }
    dend_15 { pt3dadd( -12.3271, 248.811, -48.1057, 0.22 ) }
    dend_15 { pt3dadd( -12.3724, 249.089, -48.1169, 0.22 ) }
    dend_15 { pt3dadd( -12.4647, 249.67, -48.1429, 0.81 ) }
    dend_15 { pt3dadd( -12.4926, 249.884, -48.1537, 1.03 ) }
    dend_15 { pt3dadd( -12.5416, 250.392, -48.1781, 0.22 ) }
    dend_15 { pt3dadd( -12.5722, 250.875, -48.1878, 0.44 ) }
    dend_15 { pt3dadd( -12.5895, 251.485, -48.1894, 0.22 ) }
    dend_15 { pt3dadd( -12.5963, 251.95, -48.1883, 0.44 ) }
    dend_15 { pt3dadd( -12.5951, 252.541, -48.1831, 0.22 ) }
    dend_15 { pt3dadd( -12.5993, 253.124, -48.1687, 0.44 ) }
    dend_15 { pt3dadd( -12.6151, 253.734, -48.1338, 0.59 ) }
    dend_15 { pt3dadd( -12.6711, 254.377, -48.098, 0.29 ) }
    dend_15 { pt3dadd( -12.8039, 255.207, -48.0676, 0.44 ) }
    dend_15 { pt3dadd( -12.9926, 256.06, -48.0444, 0.44 ) }
    dend_15 { pt3dadd( -13.2931, 257.234, -48.0318, 0.81 ) }
    dend_15 { pt3dadd( -13.4766, 257.88, -48.063, 0.96 ) }
    dend_15 { pt3dadd( -13.751, 258.732, -48.1661, 0.66 ) }
    dend_15 { pt3dadd( -14.1811, 259.814, -48.3326, 0.29 ) }
    dend_15 { pt3dadd( -14.3478, 260.159, -48.3987, 0.44 ) }
    dend_15 { pt3dadd( -14.6531, 260.721, -48.5374, 0.15 ) }
    dend_15 { pt3dadd( -15.1181, 261.507, -48.7854, 0.44 ) }
    dend_15 { pt3dadd( -15.4433, 262.061, -48.9864, 0.44 ) }
    dend_15 { pt3dadd( -15.7691, 262.658, -49.1908, 0.15 ) }
    dend_15 { pt3dadd( -15.901, 262.877, -49.2805, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.55253, 139.614, -28.1257, 0.22 ) }
    dend_14 { pt3dadd( -8.659, 141.174, -29.6452, 0.22 ) }
    dend_14 { pt3dadd( -8.14008, 141.843, -30.3316, 0.22 ) }
    dend_14 { pt3dadd( -7.63811, 142.49, -30.9956, 0.22 ) }
    dend_14 { pt3dadd( -7.11327, 143.167, -31.6899, 0.22 ) }
    dend_14 { pt3dadd( -6.69416, 143.707, -32.2442, 0.44 ) }
    dend_14 { pt3dadd( -5.88855, 144.746, -33.3099, 0.74 ) }
    dend_14 { pt3dadd( -5.26729, 145.536, -33.9795, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -73.026, 102.311, 2.5877, 0.29 ) }
    dend_10 { pt3dadd( -74.0125, 101.983, 2.64476, 0.29 ) }
    dend_10 { pt3dadd( -74.6077, 101.784, 2.67919, 0.29 ) }
    dend_10 { pt3dadd( -75.4849, 101.492, 2.72994, 0.29 ) }
    dend_10 { pt3dadd( -76.4511, 101.171, 2.78583, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -73.026, 102.311, 2.5877, 0.22 ) }
    dend_9 { pt3dadd( -74.2662, 104.258, 2.64039, 0.22 ) }
    dend_9 { pt3dadd( -74.9073, 105.265, 2.66763, 0.66 ) }
    dend_9 { pt3dadd( -75.194, 105.715, 2.67981, 0.66 ) }
    dend_9 { pt3dadd( -75.7348, 106.564, 2.70279, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -137.357, -4.74016, -66.9715, 0.22 ) }
    dend_53 { pt3dadd( -137.353, -1.40926, -68.9267, 0.22 ) }
    dend_53 { pt3dadd( -137.352, -0.604256, -69.3993, 0.22 ) }
    dend_53 { pt3dadd( -137.35, 0.95038, -70.3118, 0.88 ) }
    dend_53 { pt3dadd( -137.35, 1.45069, -70.6055, 0.66 ) }
    dend_53 { pt3dadd( -137.349, 1.88184, -70.8585, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -137.357, -4.74016, -66.9715, 0.22 ) }
    dend_52 { pt3dadd( -138.299, -4.10998, -66.903, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -138.7, -3.90127, -66.9035, 0.44 ) }
    dend_52 { pt3dadd( -139.486, -3.54758, -66.9421, 0.22 ) }
    dend_52 { pt3dadd( -139.791, -3.42281, -66.9586, 0.59 ) }
    dend_52 { pt3dadd( -140.611, -3.09059, -66.9852, 0.29 ) }
    dend_52 { pt3dadd( -141.629, -2.67844, -67.0182, 0.29 ) }
    dend_52 { pt3dadd( -142.182, -2.49567, -67.0556, 0.29 ) }
    dend_52 { pt3dadd( -142.623, -2.37741, -67.1106, 0.59 ) }
    dend_52 { pt3dadd( -143.258, -2.24906, -67.2313, 0.22 ) }
    dend_52 { pt3dadd( -143.782, -2.15536, -67.3322, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -67.0992, -54.3231, -23.7787, 0.37 ) }
    dend_48 { pt3dadd( -67.3827, -56.1629, -24.8383, 0.37 ) }
    dend_48 { pt3dadd( -67.5493, -57.4535, -25.5548, 0.15 ) }
    dend_48 { pt3dadd( -67.6439, -58.5469, -26.0923, 0.44 ) }
    dend_48 { pt3dadd( -67.714, -59.4929, -26.5218, 0.44 ) }
    dend_48 { pt3dadd( -67.805, -60.8381, -27.0977, 0.22 ) }
    dend_48 { pt3dadd( -67.8899, -61.9911, -27.559, 1.03 ) }
    dend_48 { pt3dadd( -67.926, -62.4454, -27.6962, 1.03 ) }
    dend_48 { pt3dadd( -68.078, -64.0965, -28.0586, 0.29 ) }
    dend_48 { pt3dadd( -68.21, -65.2155, -28.2491, 1.03 ) }
    dend_48 { pt3dadd( -68.376, -66.2837, -28.3611, 1.03 ) }
    dend_48 { pt3dadd( -68.5835, -67.3571, -28.4157, 0.29 ) }
    dend_48 { pt3dadd( -68.8965, -68.8183, -28.418, 0.29 ) }
    dend_48 { pt3dadd( -69.0864, -69.6408, -28.3744, 0.81 ) }
    dend_48 { pt3dadd( -69.2969, -70.4452, -28.2901, 0.52 ) }
    dend_48 { pt3dadd( -69.801, -72.2624, -28.0432, 0.29 ) }
    dend_48 { pt3dadd( -70.2433, -73.7712, -27.8051, 0.74 ) }
    dend_48 { pt3dadd( -70.5164, -74.6373, -27.6114, 1.03 ) }
    dend_48 { pt3dadd( -71.1331, -76.4758, -27.1088, 0.22 ) }
    dend_48 { pt3dadd( -71.429, -77.3066, -26.8384, 0.22 ) }
    dend_48 { pt3dadd( -71.5965, -77.7341, -26.6728, 0.59 ) }
    dend_48 { pt3dadd( -71.7324, -78.055, -26.5426, 0.59 ) }
    dend_48 { pt3dadd( -72.5377, -79.9662, -25.7921, 0.59 ) }
    dend_48 { pt3dadd( -72.9317, -80.9358, -25.5202, 0.37 ) }
    dend_48 { pt3dadd( -73.5473, -82.452, -25.2195, 1.25 ) }
    dend_48 { pt3dadd( -73.7667, -83.0145, -25.1339, 1.47 ) }
    dend_48 { pt3dadd( -74.3464, -84.4825, -24.9708, 0.37 ) }
    dend_48 { pt3dadd( -74.7574, -85.444, -24.9299, 1.03 ) }
    dend_48 { pt3dadd( -75.5294, -87.1002, -25.0034, 0.29 ) }
    dend_48 { pt3dadd( -75.8964, -87.8117, -25.0362, 0.44 ) }
    dend_48 { pt3dadd( -76.125, -88.2771, -25.0219, 0.66 ) }
    dend_48 { pt3dadd( -76.3456, -88.7719, -24.9711, 0.52 ) }
    dend_48 { pt3dadd( -76.783, -89.7996, -24.729, 0.29 ) }
    dend_48 { pt3dadd( -77.1517, -90.7538, -24.3712, 0.74 ) }
    dend_48 { pt3dadd( -77.2727, -91.1531, -24.1422, 0.74 ) }
    dend_48 { pt3dadd( -77.7567, -93.1087, -22.9489, 0.22 ) }
    dend_48 { pt3dadd( -77.8472, -93.6079, -22.6401, 0.44 ) }
    dend_48 { pt3dadd( -77.9112, -94.2227, -22.2265, 0.59 ) }
    dend_48 { pt3dadd( -77.9969, -95.2651, -21.476, 0.37 ) }
    dend_48 { pt3dadd( -78.1093, -96.4967, -20.5863, 0.74 ) }
    dend_48 { pt3dadd( -78.2049, -97.1468, -20.1315, 0.74 ) }
    dend_48 { pt3dadd( -78.4059, -98.0288, -19.5742, 0.29 ) }
    dend_48 { pt3dadd( -78.807, -99.5493, -18.6992, 1.03 ) }
    dend_48 { pt3dadd( -79.2481, -101.026, -17.9826, 0.22 ) }
    dend_48 { pt3dadd( -79.4624, -101.622, -17.7348, 0.88 ) }
    dend_48 { pt3dadd( -80.1722, -103.342, -17.1907, 0.29 ) }
    dend_48 { pt3dadd( -80.6489, -104.401, -16.9075, 0.15 ) }
    dend_48 { pt3dadd( -81.047, -105.188, -16.7575, 0.74 ) }
    dend_48 { pt3dadd( -81.7102, -106.348, -16.6874, 1.03 ) }
    dend_48 { pt3dadd( -82.2051, -107.156, -16.7167, 1.11 ) }
    dend_48 { pt3dadd( -83.1845, -108.66, -16.8684, 0.22 ) }
    dend_48 { pt3dadd( -83.4405, -109.043, -16.9362, 0.59 ) }
    dend_48 { pt3dadd( -83.6371, -109.353, -17.0021, 0.59 ) }
    dend_48 { pt3dadd( -84.6347, -111.003, -17.3901, 0.22 ) }
    dend_48 { pt3dadd( -84.9446, -111.594, -17.5309, 0.74 ) }
    dend_48 { pt3dadd( -85.2099, -112.264, -17.6431, 0.74 ) }
    dend_48 { pt3dadd( -85.4856, -113.48, -17.6897, 0.22 ) }
    dend_48 { pt3dadd( -85.591, -114.878, -17.6423, 0.59 ) }
    dend_48 { pt3dadd( -85.5647, -115.442, -17.6114, 0.74 ) }
    dend_48 { pt3dadd( -85.3645, -116.767, -17.5289, 0.22 ) }
    dend_48 { pt3dadd( -85.0411, -118.371, -17.3756, 0.88 ) }
    dend_48 { pt3dadd( -84.5695, -120.163, -17.1509, 0.15 ) }
    dend_48 { pt3dadd( -84.3577, -120.78, -17.0411, 0.15 ) }
    dend_48 { pt3dadd( -83.9621, -121.774, -16.7779, 0.74 ) }
    dend_48 { pt3dadd( -83.6798, -122.449, -16.5899, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -67.0992, -54.3231, -23.7787, 0.29 ) }
    dend_47 { pt3dadd( -68.1247, -53.5359, -22.8616, 0.29 ) }
    dend_47 { pt3dadd( -69.0657, -52.9676, -22.0904, 0.29 ) }
    dend_47 { pt3dadd( -70.0368, -52.4919, -21.2477, 0.29 ) }
    dend_47 { pt3dadd( -70.5149, -52.2869, -20.8233, 0.29 ) }
    dend_47 { pt3dadd( -71.5886, -51.8877, -19.8527, 0.52 ) }
    dend_47 { pt3dadd( -72.297, -51.6828, -19.2279, 0.74 ) }
    dend_47 { pt3dadd( -72.9835, -51.5631, -18.5913, 0.37 ) }
    dend_47 { pt3dadd( -73.9086, -51.4927, -17.767, 0.66 ) }
    dend_47 { pt3dadd( -74.2837, -51.502, -17.4674, 1.03 ) }
    dend_47 { pt3dadd( -75.1611, -51.6204, -16.7911, 1.03 ) }
    dend_47 { pt3dadd( -76.3596, -51.9381, -15.8768, 0.22 ) }
    dend_47 { pt3dadd( -77.1012, -52.2098, -15.2997, 0.22 ) }
    dend_47 { pt3dadd( -77.8228, -52.626, -14.647, 0.44 ) }
    dend_47 { pt3dadd( -78.2581, -52.9542, -14.2101, 0.44 ) }
    dend_47 { pt3dadd( -78.8812, -53.5222, -13.5032, 0.29 ) }
    dend_47 { pt3dadd( -79.3992, -54.108, -12.8499, 1.11 ) }
    dend_47 { pt3dadd( -79.6465, -54.4366, -12.5141, 1.25 ) }
    dend_47 { pt3dadd( -80.6225, -55.9015, -11.1585, 0.66 ) }
    dend_47 { pt3dadd( -81.1433, -56.7684, -10.4049, 0.22 ) }
    dend_47 { pt3dadd( -81.4232, -57.2986, -9.97392, 0.22 ) }
    dend_47 { pt3dadd( -81.7176, -57.9755, -9.4713, 0.22 ) }
    dend_47 { pt3dadd( -81.9626, -58.6005, -9.07226, 0.81 ) }
    dend_47 { pt3dadd( -82.1642, -59.1203, -8.78321, 0.81 ) }
    dend_47 { pt3dadd( -82.4062, -59.7161, -8.52066, 0.29 ) }
    dend_47 { pt3dadd( -82.8086, -60.6379, -8.13551, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -83.518, -61.9776, -7.54254, 0.22 ) }
    dend_47 { pt3dadd( -83.8453, -62.4515, -7.30692, 0.52 ) }
    dend_47 { pt3dadd( -84.3889, -63.1047, -6.95531, 0.29 ) }
    dend_47 { pt3dadd( -84.8224, -63.5396, -6.72025, 0.66 ) }
    dend_47 { pt3dadd( -85.7347, -64.3094, -6.32276, 0.29 ) }
    dend_47 { pt3dadd( -86.2112, -64.6783, -6.18531, 0.96 ) }
    dend_47 { pt3dadd( -86.5133, -64.9045, -6.11964, 0.96 ) }
    dend_47 { pt3dadd( -87.5703, -65.7191, -5.88199, 0.29 ) }
    dend_47 { pt3dadd( -88.1882, -66.2338, -5.69874, 1.33 ) }
    dend_47 { pt3dadd( -88.7714, -66.7361, -5.4714, 1.55 ) }
    dend_47 { pt3dadd( -89.7389, -67.5492, -4.99324, 0.29 ) }
    dend_47 { pt3dadd( -90.2168, -67.9392, -4.70352, 0.29 ) }
    dend_47 { pt3dadd( -90.8533, -68.467, -4.24376, 0.52 ) }
    dend_47 { pt3dadd( -91.6585, -69.0913, -3.62388, 0.96 ) }
    dend_47 { pt3dadd( -92.1975, -69.5159, -3.14995, 0.44 ) }
    dend_47 { pt3dadd( -92.8441, -70.0569, -2.48813, 0.29 ) }
    dend_47 { pt3dadd( -93.6291, -70.7405, -1.53912, 0.88 ) }
    dend_47 { pt3dadd( -94.1237, -71.2379, -0.899343, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -64.711, -47.5095, -18.6754, 0.29 ) }
    dend_45 { pt3dadd( -65.7682, -48.5399, -19.1598, 0.29 ) }
    dend_45 { pt3dadd( -66.8661, -49.7903, -19.2603, 0.29 ) }
    dend_45 { pt3dadd( -67.781, -50.8366, -19.1276, 0.81 ) }
    dend_45 { pt3dadd( -68.575, -51.6903, -18.877, 0.81 ) }
    dend_45 { pt3dadd( -69.4334, -52.5282, -18.4219, 0.37 ) }
    dend_45 { pt3dadd( -71.4162, -54.2418, -16.9301, 0.37 ) }
    dend_45 { pt3dadd( -72.3028, -54.8472, -15.8877, 0.59 ) }
    dend_45 { pt3dadd( -72.8994, -55.1654, -15.0914, 0.88 ) }
    dend_45 { pt3dadd( -73.5775, -55.4658, -14.1309, 0.88 ) }
    dend_45 { pt3dadd( -74.6853, -55.9191, -12.4753, 1.03 ) }
    dend_45 { pt3dadd( -75.617, -56.3167, -11.0234, 1.03 ) }
    dend_45 { pt3dadd( -76.7617, -56.9141, -9.09703, 0.59 ) }
    dend_45 { pt3dadd( -77.4293, -57.4525, -7.74113, 0.37 ) }
    dend_45 { pt3dadd( -78.0871, -58.3567, -6.03951, 0.37 ) }
    dend_45 { pt3dadd( -78.5454, -59.3947, -4.55588, 0.66 ) }
    dend_45 { pt3dadd( -78.8241, -60.3435, -3.50631, 0.96 ) }
    dend_45 { pt3dadd( -79.2459, -62.2394, -1.73669, 1.03 ) }
    dend_45 { pt3dadd( -79.5229, -63.7079, -0.473104, 0.44 ) }
    dend_45 { pt3dadd( -79.7627, -64.8653, 0.557993, 0.44 ) }
    dend_45 { pt3dadd( -79.9198, -65.5909, 1.19849, 0.66 ) }
    dend_45 { pt3dadd( -80.1075, -66.3785, 1.91967, 0.88 ) }
    dend_45 { pt3dadd( -80.2239, -67.2522, 3.02642, 0.88 ) }
    dend_45 { pt3dadd( -80.1723, -68.2239, 4.59697, 0.44 ) }
    dend_45 { pt3dadd( -79.9534, -69.0122, 6.13942, 0.74 ) }
    dend_45 { pt3dadd( -79.6093, -69.6673, 7.50082, 0.74 ) }
    dend_45 { pt3dadd( -79.0294, -70.3989, 9.03744, 1.03 ) }
    dend_45 { pt3dadd( -76.9334, -72.3485, 13.2669, 0.44 ) }
    dend_45 { pt3dadd( -76.2539, -72.8234, 14.3534, 0.44 ) }
    dend_45 { pt3dadd( -75.9107, -72.9954, 14.8205, 0.74 ) }
    dend_45 { pt3dadd( -74.8768, -73.3837, 16.1205, 0.74 ) }
    dend_45 { pt3dadd( -73.8333, -73.6481, 17.4397, 0.66 ) }
    dend_45 { pt3dadd( -73.1746, -73.6865, 18.2461, 0.52 ) }
    dend_45 { pt3dadd( -72.4146, -73.5795, 19.0994, 0.52 ) }
    dend_45 { pt3dadd( -70.7659, -72.8124, 21.2853, 1.03 ) }
    dend_45 { pt3dadd( -69.821, -71.8359, 22.7927, 0.22 ) }
    dend_45 { pt3dadd( -69.5874, -70.8327, 23.5872, 0.22 ) }
    dend_45 { pt3dadd( -69.9393, -68.6881, 24.6263, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -64.711, -47.5095, -18.6754, 0.29 ) }
    dend_40 { pt3dadd( -65.9949, -46.4825, -18.964, 0.29 ) }
    dend_40 { pt3dadd( -66.5781, -46.0383, -18.9644, 0.29 ) }
    dend_40 { pt3dadd( -67.0015, -45.6995, -18.8617, 0.66 ) }
    dend_40 { pt3dadd( -67.4682, -45.3114, -18.7104, 0.66 ) }
    dend_40 { pt3dadd( -68.0596, -44.8355, -18.4963, 0.44 ) }
    dend_40 { pt3dadd( -68.6401, -44.3685, -18.2861, 0.29 ) }
    dend_40 { pt3dadd( -69.7828, -43.5107, -17.7863, 0.59 ) }
    dend_40 { pt3dadd( -70.7089, -42.8004, -17.2577, 1.03 ) }
    dend_40 { pt3dadd( -71.426, -42.2258, -16.7537, 1.4 ) }
    dend_40 { pt3dadd( -71.7224, -41.9772, -16.4966, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 68.6933, -84.7927, -50.2806, 0.81 ) }
    dend_35 { pt3dadd( 69.4641, -85.4717, -51.5191, 0.81 ) }
    dend_35 { pt3dadd( 69.8917, -85.8423, -52.1465, 1.11 ) }
    dend_35 { pt3dadd( 72.2061, -87.6757, -55.2463, 0.44 ) }
    dend_35 { pt3dadd( 72.6344, -87.9659, -55.7766, 0.29 ) }
    dend_35 { pt3dadd( 73.1781, -88.2781, -56.3993, 0.29 ) }
    dend_35 { pt3dadd( 74.1467, -88.7815, -57.47, 0.29 ) }
    dend_35 { pt3dadd( 74.8317, -89.0355, -58.2501, 0.59 ) }
    dend_35 { pt3dadd( 75.2591, -89.2093, -58.9109, 0.74 ) }
    dend_35 { pt3dadd( 75.762, -89.3942, -59.7224, 0.37 ) }
    dend_35 { pt3dadd( 76.2955, -89.55, -60.6956, 0.81 ) }
    dend_35 { pt3dadd( 76.567, -89.6022, -61.2176, 0.96 ) }
    dend_35 { pt3dadd( 77.5976, -89.739, -63.3041, 1.4 ) }
    dend_35 { pt3dadd( 79.3683, -89.922, -67.7105, 0.74 ) }
    dend_35 { pt3dadd( 79.8103, -89.9511, -68.9508, 0.29 ) }
    dend_35 { pt3dadd( 80.2077, -89.9666, -70.1385, 0.29 ) }
    dend_35 { pt3dadd( 80.4357, -89.9606, -70.8297, 0.66 ) }
    dend_35 { pt3dadd( 81.3888, -89.8842, -73.5322, 1.69 ) }
    dend_35 { pt3dadd( 83.2166, -89.6474, -78.1577, 1.18 ) }
    dend_35 { pt3dadd( 84.5538, -89.4797, -81.1282, 0.74 ) }
    dend_35 { pt3dadd( 85.2943, -89.4651, -82.6968, 1.47 ) }
    dend_35 { pt3dadd( 85.5908, -89.5006, -83.2657, 1.47 ) }
    dend_35 { pt3dadd( 86.3947, -89.698, -84.6411, 0.29 ) }
    dend_35 { pt3dadd( 87.4074, -90.1087, -85.9341, 0.29 ) }
    dend_35 { pt3dadd( 88.5021, -90.8058, -86.7738, 1.11 ) }
    dend_35 { pt3dadd( 89.5274, -91.6956, -87.3386, 0.29 ) }
    dend_35 { pt3dadd( 90.1834, -92.3928, -87.6247, 1.25 ) }
    dend_35 { pt3dadd( 90.5543, -92.8295, -87.7766, 1.25 ) }
    dend_35 { pt3dadd( 91.346, -93.8337, -88.0888, 0.15 ) }
    dend_35 { pt3dadd( 91.8305, -94.3743, -88.2836, 0.59 ) }
    dend_35 { pt3dadd( 92.1476, -94.6222, -88.4322, 0.59 ) }
    dend_35 { pt3dadd( 93.0443, -95.141, -88.9139, 0.22 ) }
    dend_35 { pt3dadd( 94.086, -95.6168, -89.4837, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 94.7827, -95.8744, -89.8657, 1.84 ) }
    dend_35 { pt3dadd( 96.2711, -96.3141, -90.6672, 0.22 ) }
    dend_35 { pt3dadd( 97.2126, -96.5659, -91.1312, 0.59 ) }
    dend_35 { pt3dadd( 98.3527, -96.8833, -91.6411, 0.22 ) }
    dend_35 { pt3dadd( 99.2489, -97.1635, -91.9988, 0.22 ) }
    dend_35 { pt3dadd( 100.203, -97.5477, -92.3045, 0.88 ) }
    dend_35 { pt3dadd( 100.73, -97.7982, -92.4433, 1.11 ) }
    dend_35 { pt3dadd( 102.21, -98.603, -92.754, 0.22 ) }
    dend_35 { pt3dadd( 102.982, -99.0469, -92.8822, 1.33 ) }
    dend_35 { pt3dadd( 103.402, -99.3012, -92.9505, 1.55 ) }
    dend_35 { pt3dadd( 104.557, -100.096, -93.1257, 0.22 ) }
    dend_35 { pt3dadd( 105.297, -100.663, -93.2296, 0.66 ) }
    dend_35 { pt3dadd( 105.672, -100.982, -93.2869, 0.66 ) }
    dend_35 { pt3dadd( 106.429, -101.694, -93.427, 0.22 ) }
    dend_35 { pt3dadd( 107.11, -102.361, -93.5782, 0.44 ) }
    dend_35 { pt3dadd( 107.658, -102.918, -93.7238, 0.22 ) }
    dend_35 { pt3dadd( 108.182, -103.453, -93.8923, 0.96 ) }
    dend_35 { pt3dadd( 108.597, -103.867, -93.9937, 1.18 ) }
    dend_35 { pt3dadd( 109.992, -105.275, -94.2368, 0.15 ) }
    dend_35 { pt3dadd( 110.565, -105.834, -94.2974, 0.96 ) }
    dend_35 { pt3dadd( 110.981, -106.223, -94.3685, 0.96 ) }
    dend_35 { pt3dadd( 111.729, -106.917, -94.5328, 0.15 ) }
    dend_35 { pt3dadd( 113.217, -108.321, -94.9274, 0.81 ) }
    dend_35 { pt3dadd( 113.972, -109.015, -95.1976, 0.81 ) }
    dend_35 { pt3dadd( 114.974, -109.889, -95.6458, 0.29 ) }
    dend_35 { pt3dadd( 116.603, -111.203, -96.5106, 0.44 ) }
    dend_35 { pt3dadd( 117.236, -111.655, -96.8875, 0.81 ) }
    dend_35 { pt3dadd( 117.722, -111.933, -97.2084, 0.81 ) }
    dend_35 { pt3dadd( 118.887, -112.425, -98.12, 0.37 ) }
    dend_35 { pt3dadd( 119.669, -112.654, -98.729, 0.29 ) }
    dend_35 { pt3dadd( 120.519, -112.833, -99.3384, 0.59 ) }
    dend_35 { pt3dadd( 121.389, -112.984, -99.8899, 0.44 ) }
    dend_35 { pt3dadd( 122.502, -113.146, -100.578, 0.29 ) }
    dend_35 { pt3dadd( 123.894, -113.326, -101.393, 0.59 ) }
    dend_35 { pt3dadd( 124.751, -113.427, -101.934, 0.59 ) }
    dend_35 { pt3dadd( 125.495, -113.503, -102.457, 0.29 ) }
    dend_35 { pt3dadd( 126.714, -113.595, -103.36, 0.29 ) }
    dend_35 { pt3dadd( 127.444, -113.643, -103.927, 0.29 ) }
    dend_35 { pt3dadd( 128.078, -113.688, -104.377, 0.74 ) }
    dend_35 { pt3dadd( 129.646, -113.777, -105.371, 0.74 ) }
    dend_35 { pt3dadd( 130.352, -113.829, -105.806, 0.37 ) }
    dend_35 { pt3dadd( 130.803, -113.867, -106.074, 1.03 ) }
    dend_35 { pt3dadd( 131.452, -113.923, -106.442, 1.03 ) }
    dend_35 { pt3dadd( 132.78, -114.1, -107.19, 0.29 ) }
    dend_35 { pt3dadd( 134.758, -114.47, -108.235, 1.11 ) }
    dend_35 { pt3dadd( 136.259, -114.835, -108.909, 0.44 ) }
    dend_35 { pt3dadd( 136.712, -114.968, -109.125, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 68.6933, -84.7927, -50.2806, 0.52 ) }
    dend_34 { pt3dadd( 69.6539, -84.5994, -50.2029, 0.52 ) }
    dend_34 { pt3dadd( 70.2686, -84.4399, -50.1757, 0.52 ) }
    dend_34 { pt3dadd( 70.8947, -84.2554, -50.1563, 0.81 ) }
    dend_34 { pt3dadd( 71.3621, -84.0723, -50.1617, 0.81 ) }
    dend_34 { pt3dadd( 72.1299, -83.6936, -50.2002, 0.29 ) }
    dend_34 { pt3dadd( 72.6958, -83.3436, -50.2607, 0.29 ) }
    dend_34 { pt3dadd( 73.1454, -82.9159, -50.3761, 0.88 ) }
    dend_34 { pt3dadd( 73.4812, -82.4596, -50.5082, 1.11 ) }
    dend_34 { pt3dadd( 73.8444, -81.7709, -50.732, 0.44 ) }
    dend_34 { pt3dadd( 74.068, -81.1048, -50.972, 0.37 ) }
    dend_34 { pt3dadd( 74.2104, -80.3496, -51.2714, 0.37 ) }
    dend_34 { pt3dadd( 74.2909, -79.3526, -51.653, 0.66 ) }
    dend_34 { pt3dadd( 74.2884, -78.7084, -51.8882, 1.03 ) }
    dend_34 { pt3dadd( 74.2381, -78.0328, -52.0955, 1.03 ) }
    dend_34 { pt3dadd( 74.0999, -76.9581, -52.3075, 0.52 ) }
    dend_34 { pt3dadd( 74.0383, -76.5537, -52.3436, 0.37 ) }
    dend_34 { pt3dadd( 73.9453, -75.8718, -52.3312, 1.03 ) }
    dend_34 { pt3dadd( 73.91, -75.4546, -52.2796, 1.03 ) }
    dend_34 { pt3dadd( 73.9057, -74.5288, -52.1234, 0.29 ) }
    dend_34 { pt3dadd( 74.0112, -73.0197, -51.7942, 0.22 ) }
    dend_34 { pt3dadd( 74.0897, -72.4743, -51.6542, 0.66 ) }
    dend_34 { pt3dadd( 74.1733, -72.0089, -51.5418, 0.52 ) }
    dend_34 { pt3dadd( 74.2998, -71.3362, -51.4203, 0.37 ) }
    dend_34 { pt3dadd( 74.4919, -70.4263, -51.3065, 0.74 ) }
    dend_34 { pt3dadd( 74.6412, -69.8414, -51.2568, 0.22 ) }
    dend_34 { pt3dadd( 74.847, -69.1266, -51.2009, 0.88 ) }
    dend_34 { pt3dadd( 74.9372, -68.765, -51.1611, 0.88 ) }
    dend_34 { pt3dadd( 75.1438, -67.7545, -51.0329, 0.29 ) }
    dend_34 { pt3dadd( 75.2167, -67.2416, -50.9647, 0.44 ) }
    dend_34 { pt3dadd( 75.2601, -66.7142, -50.8842, 0.29 ) }
    dend_34 { pt3dadd( 75.2791, -66.1318, -50.8285, 0.29 ) }
    dend_34 { pt3dadd( 75.2455, -65.2868, -50.7974, 0.81 ) }
    dend_34 { pt3dadd( 75.2029, -64.6752, -50.7848, 1.03 ) }
    dend_34 { pt3dadd( 75.1597, -64.255, -50.7877, 1.03 ) }
    dend_34 { pt3dadd( 75.0927, -63.7957, -50.8089, 0.22 ) }
    dend_34 { pt3dadd( 74.9558, -62.8891, -50.8516, 0.22 ) }
    dend_34 { pt3dadd( 74.8792, -62.1434, -50.8404, 0.81 ) }
    dend_34 { pt3dadd( 74.8719, -61.7654, -50.797, 0.81 ) }
    dend_34 { pt3dadd( 74.9188, -61.2045, -50.6434, 0.44 ) }
    dend_34 { pt3dadd( 75.0203, -60.6442, -50.4284, 0.44 ) }
    dend_34 { pt3dadd( 75.2055, -59.8612, -50.0612, 0.96 ) }
    dend_34 { pt3dadd( 75.4055, -59.0854, -49.6279, 0.96 ) }
    dend_34 { pt3dadd( 75.5342, -58.5698, -49.3348, 1.11 ) }
    dend_34 { pt3dadd( 75.7079, -57.8341, -48.941, 0.29 ) }
    dend_34 { pt3dadd( 75.8478, -57.2567, -48.6439, 0.81 ) }
    dend_34 { pt3dadd( 76.0146, -56.6273, -48.3476, 0.81 ) }
    dend_34 { pt3dadd( 76.2631, -55.7564, -48.0267, 0.44 ) }
    dend_34 { pt3dadd( 76.4735, -54.9329, -47.7982, 1.11 ) }
    dend_34 { pt3dadd( 76.6195, -54.3502, -47.6663, 1.11 ) }
    dend_34 { pt3dadd( 76.7263, -53.9327, -47.5912, 0.81 ) }
    dend_34 { pt3dadd( 76.8696, -53.5004, -47.52, 0.52 ) }
    dend_34 { pt3dadd( 77.2702, -52.6411, -47.4093, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 77.7603, -51.9141, -47.3705, 0.22 ) }
    dend_34 { pt3dadd( 78.1927, -51.496, -47.3944, 0.59 ) }
    dend_34 { pt3dadd( 78.3725, -51.3831, -47.4238, 0.59 ) }
    dend_34 { pt3dadd( 79.4503, -50.9105, -47.6914, 0.52 ) }
    dend_34 { pt3dadd( 80.0983, -50.7192, -47.8763, 0.29 ) }
    dend_34 { pt3dadd( 80.9679, -50.5378, -48.141, 0.52 ) }
    dend_34 { pt3dadd( 81.8148, -50.3761, -48.4287, 0.44 ) }
    dend_34 { pt3dadd( 82.38, -50.2583, -48.6438, 0.81 ) }
    dend_34 { pt3dadd( 82.8521, -50.1305, -48.834, 1.03 ) }
    dend_34 { pt3dadd( 83.7098, -49.8024, -49.1881, 0.29 ) }
    dend_34 { pt3dadd( 84.1368, -49.5943, -49.3294, 0.29 ) }
    dend_34 { pt3dadd( 84.6282, -49.3321, -49.4439, 0.81 ) }
    dend_34 { pt3dadd( 84.9747, -49.1524, -49.4956, 0.81 ) }
    dend_34 { pt3dadd( 85.6825, -48.8353, -49.5572, 0.52 ) }
    dend_34 { pt3dadd( 86.611, -48.5379, -49.5678, 0.15 ) }
    dend_34 { pt3dadd( 87.3593, -48.4328, -49.5091, 0.44 ) }
    dend_34 { pt3dadd( 87.8747, -48.4366, -49.3882, 0.74 ) }
    dend_34 { pt3dadd( 88.2627, -48.4601, -49.255, 1.03 ) }
    dend_34 { pt3dadd( 88.6688, -48.4818, -49.0881, 1.03 ) }
    dend_34 { pt3dadd( 89.2544, -48.4864, -48.8014, 0.88 ) }
    dend_34 { pt3dadd( 89.988, -48.3887, -48.4038, 0.37 ) }
    dend_34 { pt3dadd( 91.0612, -47.9633, -47.862, 0.81 ) }
    dend_34 { pt3dadd( 91.5985, -47.5887, -47.6247, 0.81 ) }
    dend_34 { pt3dadd( 92.0859, -47.0871, -47.3889, 0.29 ) }
    dend_34 { pt3dadd( 92.4062, -46.6615, -47.2113, 0.29 ) }
    dend_34 { pt3dadd( 92.8276, -45.9952, -46.963, 0.15 ) }
    dend_34 { pt3dadd( 93.1749, -45.4564, -46.7858, 1.03 ) }
    dend_34 { pt3dadd( 93.4003, -45.1548, -46.6839, 1.03 ) }
    dend_34 { pt3dadd( 94.3874, -44.1068, -46.2455, 0.52 ) }
    dend_34 { pt3dadd( 94.9628, -43.6283, -45.9963, 0.52 ) }
    dend_34 { pt3dadd( 95.6287, -43.1995, -45.7224, 0.44 ) }
    dend_34 { pt3dadd( 96.7992, -42.605, -45.2758, 0.88 ) }
    dend_34 { pt3dadd( 97.5248, -42.2883, -45.0337, 0.74 ) }
    dend_34 { pt3dadd( 98.2346, -42.0224, -44.8594, 0.44 ) }
    dend_34 { pt3dadd( 98.717, -41.8805, -44.794, 0.37 ) }
    dend_34 { pt3dadd( 99.3579, -41.7262, -44.7456, 0.22 ) }
    dend_34 { pt3dadd( 99.9102, -41.6318, -44.7323, 0.22 ) }
    dend_34 { pt3dadd( 100.645, -41.5097, -44.7455, 0.44 ) }
    dend_34 { pt3dadd( 101.108, -41.4212, -44.7807, 0.22 ) }
    dend_34 { pt3dadd( 101.715, -41.289, -44.8479, 0.22 ) }
    dend_34 { pt3dadd( 102.318, -41.1615, -44.9431, 0.44 ) }
    dend_34 { pt3dadd( 103.305, -41.0175, -45.1367, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.83209, 388.536, -49.7824, 0.74 ) }
    dend_19 { pt3dadd( -1.76782, 391.018, -50.5969, 0.74 ) }
    dend_19 { pt3dadd( -1.74256, 392.065, -50.9002, 0.52 ) }
    dend_19 { pt3dadd( -1.69688, 393.097, -51.1636, 0.37 ) }
    dend_19 { pt3dadd( -1.62775, 394.738, -51.5402, 0.37 ) }
    dend_19 { pt3dadd( -1.60068, 395.356, -51.6714, 0.59 ) }
    dend_19 { pt3dadd( -1.52556, 396.671, -51.9334, 0.74 ) }
    dend_19 { pt3dadd( -1.46738, 397.5, -52.0583, 0.74 ) }
    dend_19 { pt3dadd( -1.34056, 399.079, -52.334, 0.37 ) }
    dend_19 { pt3dadd( -1.24904, 400.23, -52.5486, 0.37 ) }
    dend_19 { pt3dadd( -1.09642, 402.223, -52.923, 0.81 ) }
    dend_19 { pt3dadd( -0.999622, 403.56, -53.1751, 0.96 ) }
    dend_19 { pt3dadd( -0.894432, 404.92, -53.4277, 0.96 ) }
    dend_19 { pt3dadd( -0.757339, 406.698, -53.7579, 0.66 ) }
    dend_19 { pt3dadd( -0.685173, 407.74, -53.95, 0.44 ) }
    dend_19 { pt3dadd( -0.624725, 408.55, -54.0902, 0.44 ) }
    dend_19 { pt3dadd( -0.530149, 410.078, -54.3333, 0.44 ) }
    dend_19 { pt3dadd( -0.469341, 411.425, -54.5267, 0.81 ) }
    dend_19 { pt3dadd( -0.450682, 412.358, -54.6466, 1.03 ) }
    dend_19 { pt3dadd( -0.44819, 413.33, -54.7617, 1.03 ) }
    dend_19 { pt3dadd( -0.480842, 414.965, -54.9661, 0.74 ) }
    dend_19 { pt3dadd( -0.540537, 416.239, -55.1311, 0.74 ) }
    dend_19 { pt3dadd( -0.683678, 418.281, -55.3865, 0.44 ) }
    dend_19 { pt3dadd( -0.883393, 420.301, -55.6393, 0.44 ) }
    dend_19 { pt3dadd( -0.989128, 421.276, -55.7803, 1.03 ) }
    dend_19 { pt3dadd( -1.09122, 422.214, -55.9367, 1.18 ) }
    dend_19 { pt3dadd( -1.25515, 423.722, -56.2533, 0.52 ) }
    dend_19 { pt3dadd( -1.4022, 425.168, -56.6466, 0.74 ) }
    dend_19 { pt3dadd( -1.55889, 426.624, -57.1397, 1.11 ) }
    dend_19 { pt3dadd( -1.70154, 427.962, -57.6536, 0.44 ) }
    dend_19 { pt3dadd( -1.83803, 429.15, -58.1432, 0.37 ) }
    dend_19 { pt3dadd( -1.97192, 430.418, -58.6867, 0.37 ) }
    dend_19 { pt3dadd( -2.13453, 432.198, -59.4605, 0.59 ) }
    dend_19 { pt3dadd( -2.22724, 433.495, -60.0084, 0.96 ) }
    dend_19 { pt3dadd( -2.26634, 434.42, -60.3585, 1.18 ) }
    dend_19 { pt3dadd( -2.2785, 435.275, -60.6274, 1.18 ) }
    dend_19 { pt3dadd( -2.23634, 437.179, -61.1437, 0.44 ) }
    dend_19 { pt3dadd( -2.14361, 438.509, -61.4193, 0.37 ) }
    dend_19 { pt3dadd( -2.0327, 439.459, -61.5729, 0.59 ) }
    dend_19 { pt3dadd( -1.8513, 440.643, -61.7618, 0.44 ) }
    dend_19 { pt3dadd( -1.62146, 442.083, -62.0311, 0.44 ) }
    dend_19 { pt3dadd( -1.45257, 443.145, -62.2541, 0.74 ) }
    dend_19 { pt3dadd( -1.34007, 443.941, -62.4347, 0.74 ) }
    dend_19 { pt3dadd( -1.27199, 444.548, -62.5867, 0.74 ) }
    dend_19 { pt3dadd( -1.17879, 445.777, -62.9115, 0.37 ) }
    dend_19 { pt3dadd( -1.11238, 447.287, -63.3208, 1.18 ) }
    dend_19 { pt3dadd( -1.09635, 447.849, -63.4685, 1.18 ) }
    dend_19 { pt3dadd( -1.03987, 449.069, -63.757, 0.88 ) }
    dend_19 { pt3dadd( -0.945487, 450.296, -64.0206, 0.59 ) }
    dend_19 { pt3dadd( -0.776506, 451.9, -64.318, 0.88 ) }
    dend_19 { pt3dadd( -0.642073, 453.073, -64.4994, 1.11 ) }
    dend_19 { pt3dadd( -0.485283, 454.264, -64.6518, 1.11 ) }
    dend_19 { pt3dadd( -0.25197, 455.871, -64.8532, 0.52 ) }
    dend_19 { pt3dadd( 0.0268333, 457.467, -65.0567, 0.44 ) }
    dend_19 { pt3dadd( 0.217078, 458.361, -65.1736, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.83209, 388.536, -49.7824, 0.29 ) }
    dend_18 { pt3dadd( -1.779, 389.552, -49.2998, 0.29 ) }
    dend_18 { pt3dadd( -1.71337, 390.659, -48.8443, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -1.67363, 391.3, -48.5847, 0.66 ) }
    dend_18 { pt3dadd( -1.63162, 391.876, -48.3484, 0.37 ) }
    dend_18 { pt3dadd( -1.55479, 392.855, -47.9298, 0.22 ) }
    dend_18 { pt3dadd( -1.52974, 393.159, -47.7946, 0.66 ) }
    dend_18 { pt3dadd( -1.48057, 393.557, -47.6195, 0.66 ) }
    dend_18 { pt3dadd( -1.35907, 394.651, -47.1757, 0.37 ) }
    dend_18 { pt3dadd( -1.3044, 395.313, -46.9144, 0.37 ) }
    dend_18 { pt3dadd( -1.25895, 396.207, -46.586, 0.59 ) }
    dend_18 { pt3dadd( -1.23813, 396.624, -46.4511, 0.37 ) }
    dend_18 { pt3dadd( -1.20819, 397.267, -46.261, 0.29 ) }
    dend_18 { pt3dadd( -1.18715, 397.988, -46.0773, 0.74 ) }
    dend_18 { pt3dadd( -1.18477, 398.386, -45.9982, 0.96 ) }
    dend_18 { pt3dadd( -1.18724, 398.912, -45.8988, 0.52 ) }
    dend_18 { pt3dadd( -1.20703, 399.653, -45.7592, 0.44 ) }
    dend_18 { pt3dadd( -1.21851, 400.34, -45.6124, 0.29 ) }
    dend_18 { pt3dadd( -1.21083, 401.253, -45.3766, 0.29 ) }
    dend_18 { pt3dadd( -1.19313, 401.828, -45.1917, 0.66 ) }
    dend_18 { pt3dadd( -1.15674, 402.434, -44.977, 0.81 ) }
    dend_18 { pt3dadd( -1.05766, 403.45, -44.6045, 0.29 ) }
    dend_18 { pt3dadd( -0.877885, 404.729, -44.1299, 0.29 ) }
    dend_18 { pt3dadd( -0.714005, 405.613, -43.8093, 0.29 ) }
    dend_18 { pt3dadd( -0.545627, 406.38, -43.5577, 0.88 ) }
    dend_18 { pt3dadd( -0.410328, 406.962, -43.3955, 0.88 ) }
    dend_18 { pt3dadd( -0.244659, 407.65, -43.2344, 0.29 ) }
    dend_18 { pt3dadd( -0.0218151, 408.502, -43.1038, 0.29 ) }
    dend_18 { pt3dadd( 0.0445209, 408.769, -43.0869, 0.52 ) }
    dend_18 { pt3dadd( 0.281027, 409.715, -43.091, 0.22 ) }
    dend_18 { pt3dadd( 0.442591, 410.282, -43.1312, 0.52 ) }
    dend_18 { pt3dadd( 0.612846, 410.803, -43.1823, 0.52 ) }
    dend_18 { pt3dadd( 1.13271, 412.167, -43.3486, 0.44 ) }
    dend_18 { pt3dadd( 1.44508, 412.89, -43.4565, 0.96 ) }
    dend_18 { pt3dadd( 1.64822, 413.314, -43.5287, 0.96 ) }
    dend_18 { pt3dadd( 2.14628, 414.253, -43.6976, 0.29 ) }
    dend_18 { pt3dadd( 2.58165, 415.018, -43.8434, 0.22 ) }
    dend_18 { pt3dadd( 2.99013, 415.707, -43.9718, 0.81 ) }
    dend_18 { pt3dadd( 3.48204, 416.509, -44.102, 0.29 ) }
    dend_18 { pt3dadd( 3.8681, 417.137, -44.1911, 0.29 ) }
    dend_18 { pt3dadd( 4.22041, 417.72, -44.2554, 0.66 ) }
    dend_18 { pt3dadd( 4.36597, 417.962, -44.2681, 0.81 ) }
    dend_18 { pt3dadd( 4.80737, 418.705, -44.2745, 0.29 ) }
    dend_18 { pt3dadd( 5.07704, 419.176, -44.2561, 0.29 ) }
    dend_18 { pt3dadd( 5.26799, 419.524, -44.2274, 0.81 ) }
    dend_18 { pt3dadd( 5.45854, 419.899, -44.1906, 0.81 ) }
    dend_18 { pt3dadd( 5.8089, 420.669, -44.132, 0.29 ) }
    dend_18 { pt3dadd( 6.1938, 421.627, -44.0778, 0.29 ) }
    dend_18 { pt3dadd( 6.44595, 422.337, -44.0505, 0.88 ) }
    dend_18 { pt3dadd( 6.56927, 422.717, -44.0442, 1.03 ) }
    dend_18 { pt3dadd( 6.75424, 423.312, -44.0446, 0.74 ) }
    dend_18 { pt3dadd( 7.25548, 424.99, -44.0676, 0.22 ) }
    dend_18 { pt3dadd( 7.44931, 425.635, -44.0852, 0.96 ) }
    dend_18 { pt3dadd( 7.61997, 426.148, -44.0971, 1.11 ) }
    dend_18 { pt3dadd( 7.99226, 427.221, -44.1129, 0.29 ) }
    dend_18 { pt3dadd( 8.20509, 427.81, -44.1156, 0.59 ) }
    dend_18 { pt3dadd( 8.36124, 428.245, -44.0965, 0.59 ) }
    dend_18 { pt3dadd( 8.60545, 428.92, -44.0317, 0.59 ) }
    dend_18 { pt3dadd( 8.91532, 429.779, -43.9043, 0.29 ) }
    dend_18 { pt3dadd( 9.14322, 430.407, -43.7822, 0.44 ) }
    dend_18 { pt3dadd( 9.46228, 431.392, -43.5159, 0.29 ) }
    dend_18 { pt3dadd( 9.75877, 432.428, -43.1926, 0.81 ) }
    dend_18 { pt3dadd( 9.83865, 432.719, -43.0933, 0.81 ) }
    dend_18 { pt3dadd( 9.93542, 433.098, -42.957, 1.03 ) }
    dend_18 { pt3dadd( 10.0874, 433.69, -42.7402, 0.37 ) }
    dend_18 { pt3dadd( 10.3726, 434.706, -42.3622, 0.29 ) }
    dend_18 { pt3dadd( 10.5355, 435.265, -42.1752, 0.29 ) }
    dend_18 { pt3dadd( 10.8435, 436.338, -41.8784, 0.29 ) }
    dend_18 { pt3dadd( 10.986, 436.885, -41.7684, 0.81 ) }
    dend_18 { pt3dadd( 11.2182, 437.959, -41.5946, 0.37 ) }
    dend_18 { pt3dadd( 11.3876, 438.816, -41.4371, 0.29 ) }
    dend_18 { pt3dadd( 11.5808, 439.66, -41.2647, 1.11 ) }
    dend_18 { pt3dadd( 11.6963, 440.2, -41.119, 0.66 ) }
    dend_18 { pt3dadd( 11.8612, 441.25, -40.7252, 0.29 ) }
    dend_18 { pt3dadd( 11.9763, 442.199, -40.2436, 0.29 ) }
    dend_18 { pt3dadd( 12.0807, 443.216, -39.5599, 0.29 ) }
    dend_18 { pt3dadd( 12.1757, 443.785, -39.0796, 0.29 ) }
    dend_18 { pt3dadd( 12.2639, 444.257, -38.631, 0.29 ) }
    dend_18 { pt3dadd( 12.3723, 444.918, -37.9649, 0.81 ) }
    dend_18 { pt3dadd( 12.4084, 445.292, -37.5571, 1.11 ) }
    dend_18 { pt3dadd( 12.4428, 445.778, -37.0694, 0.88 ) }
    dend_18 { pt3dadd( 12.5157, 447.219, -35.8474, 0.29 ) }
    dend_18 { pt3dadd( 12.5588, 447.8, -35.4009, 0.29 ) }
    dend_18 { pt3dadd( 12.6331, 448.431, -34.9695, 0.74 ) }
    dend_18 { pt3dadd( 12.7391, 449.39, -34.3993, 0.29 ) }
    dend_18 { pt3dadd( 12.7959, 450.203, -33.9576, 0.29 ) }
    dend_18 { pt3dadd( 12.8349, 451.113, -33.5071, 0.66 ) }
    dend_18 { pt3dadd( 12.8525, 451.526, -33.3418, 0.88 ) }
    dend_18 { pt3dadd( 12.9883, 452.464, -33.0262, 0.22 ) }
    dend_18 { pt3dadd( 13.1333, 453.089, -32.8702, 0.37 ) }
    dend_18 { pt3dadd( 13.1471, 453.151, -32.8631, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -71.7224, -41.9772, -16.4966, 0.22 ) }
    dend_44 { pt3dadd( -73.0485, -41.8437, -16.3346, 0.22 ) }
    dend_44 { pt3dadd( -73.6055, -41.822, -16.2688, 0.22 ) }
    dend_44 { pt3dadd( -74.4166, -41.8407, -16.1764, 0.37 ) }
    dend_44 { pt3dadd( -75.237, -41.8959, -16.0858, 0.22 ) }
    dend_44 { pt3dadd( -76.2669, -42.0024, -15.9751, 0.22 ) }
    dend_44 { pt3dadd( -77.348, -42.1325, -15.8607, 0.81 ) }
    dend_44 { pt3dadd( -77.8625, -42.2175, -15.816, 0.81 ) }
    dend_44 { pt3dadd( -78.5488, -42.3632, -15.7685, 0.52 ) }
    dend_44 { pt3dadd( -79.1538, -42.5197, -15.7403, 0.29 ) }
    dend_44 { pt3dadd( -79.6578, -42.66, -15.7247, 0.66 ) }
    dend_44 { pt3dadd( -80.3849, -42.8531, -15.731, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -80.9614, -42.9797, -15.7541, 0.29 ) }
    dend_44 { pt3dadd( -81.7732, -43.1339, -15.8148, 0.29 ) }
    dend_44 { pt3dadd( -82.5793, -43.2555, -15.9022, 0.96 ) }
    dend_44 { pt3dadd( -83.3598, -43.3555, -16.0561, 1.03 ) }
    dend_44 { pt3dadd( -84.4493, -43.4893, -16.3385, 0.22 ) }
    dend_44 { pt3dadd( -84.7291, -43.5258, -16.4251, 0.22 ) }
    dend_44 { pt3dadd( -85.2577, -43.6065, -16.6028, 0.88 ) }
    dend_44 { pt3dadd( -85.7088, -43.7044, -16.7718, 0.88 ) }
    dend_44 { pt3dadd( -86.9207, -44.0406, -17.2945, 0.22 ) }
    dend_44 { pt3dadd( -87.5488, -44.2477, -17.6156, 0.22 ) }
    dend_44 { pt3dadd( -88.0933, -44.4663, -17.9145, 0.22 ) }
    dend_44 { pt3dadd( -88.557, -44.6932, -18.1854, 0.88 ) }
    dend_44 { pt3dadd( -89.0486, -45.0191, -18.5121, 1.11 ) }
    dend_44 { pt3dadd( -89.5665, -45.4968, -18.9391, 0.88 ) }
    dend_44 { pt3dadd( -90.1595, -46.3114, -19.5771, 0.29 ) }
    dend_44 { pt3dadd( -90.4892, -46.9944, -20.105, 1.18 ) }
    dend_44 { pt3dadd( -90.6322, -47.3645, -20.3941, 1.33 ) }
    dend_44 { pt3dadd( -90.8985, -48.2516, -21.0992, 0.29 ) }
    dend_44 { pt3dadd( -91.0209, -48.935, -21.621, 0.22 ) }
    dend_44 { pt3dadd( -91.0412, -49.5745, -22.0287, 0.22 ) }
    dend_44 { pt3dadd( -90.9304, -50.4389, -22.4909, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -71.7224, -41.9772, -16.4966, 0.66 ) }
    dend_41 { pt3dadd( -72.8098, -41.3793, -14.3852, 0.66 ) }
    dend_41 { pt3dadd( -73.1358, -41.1395, -13.7072, 0.66 ) }
    dend_41 { pt3dadd( -73.5098, -40.7824, -12.8804, 0.81 ) }
    dend_41 { pt3dadd( -73.8364, -40.4407, -12.1851, 0.81 ) }
    dend_41 { pt3dadd( -74.6769, -39.601, -10.5517, 0.96 ) }
    dend_41 { pt3dadd( -75.378, -38.9434, -9.30644, 1.33 ) }
    dend_41 { pt3dadd( -75.8432, -38.4886, -8.6084, 0.44 ) }
    dend_41 { pt3dadd( -76.2738, -38.0631, -8.03601, 0.44 ) }
    dend_41 { pt3dadd( -76.7122, -37.6476, -7.59729, 0.37 ) }
    dend_41 { pt3dadd( -77.4789, -36.9884, -7.17157, 0.37 ) }
    dend_41 { pt3dadd( -77.8591, -36.7343, -7.12429, 0.37 ) }
    dend_41 { pt3dadd( -78.5801, -36.3328, -7.15858, 0.29 ) }
    dend_41 { pt3dadd( -79.3594, -35.9531, -7.21308, 0.66 ) }
    dend_41 { pt3dadd( -79.934, -35.6815, -7.19207, 0.88 ) }
    dend_41 { pt3dadd( -80.598, -35.3811, -7.08962, 0.88 ) }
    dend_41 { pt3dadd( -81.5111, -35.0387, -6.81025, 0.66 ) }
    dend_41 { pt3dadd( -82.0381, -34.91, -6.51514, 0.66 ) }
    dend_41 { pt3dadd( -82.6853, -34.8193, -6.00477, 0.81 ) }
    dend_41 { pt3dadd( -84.2322, -34.6745, -4.49897, 0.81 ) }
    dend_41 { pt3dadd( -84.8654, -34.6058, -3.75339, 0.59 ) }
    dend_41 { pt3dadd( -85.5132, -34.4905, -2.85237, 0.44 ) }
    dend_41 { pt3dadd( -86.1404, -34.2832, -1.8511, 0.44 ) }
    dend_41 { pt3dadd( -86.481, -34.1017, -1.28647, 0.37 ) }
    dend_41 { pt3dadd( -86.8568, -33.7884, -0.714107, 0.37 ) }
    dend_41 { pt3dadd( -87.322, -33.1945, -0.172521, 0.66 ) }
    dend_41 { pt3dadd( -87.7064, -32.625, 0.12705, 0.66 ) }
    dend_41 { pt3dadd( -88.2052, -31.9315, 0.29376, 0.44 ) }
    dend_41 { pt3dadd( -88.6677, -31.4438, 0.29707, 0.66 ) }
    dend_41 { pt3dadd( -89.1533, -31.1049, 0.226124, 0.66 ) }
    dend_41 { pt3dadd( -89.9086, -30.7628, 0.0841599, 0.66 ) }
    dend_41 { pt3dadd( -91.6877, -30.2243, -0.237739, 0.37 ) }
    dend_41 { pt3dadd( -92.3751, -30.0728, -0.338007, 0.66 ) }
    dend_41 { pt3dadd( -93.3715, -29.9138, -0.456722, 0.66 ) }
    dend_41 { pt3dadd( -94.1874, -29.8283, -0.510254, 0.44 ) }
    dend_41 { pt3dadd( -94.9415, -29.7842, -0.510719, 0.37 ) }
    dend_41 { pt3dadd( -95.5158, -29.772, -0.4321, 0.59 ) }
    dend_41 { pt3dadd( -96.3821, -29.7661, -0.171051, 0.44 ) }
    dend_41 { pt3dadd( -96.9814, -29.7696, 0.0414467, 0.37 ) }
    dend_41 { pt3dadd( -97.7593, -29.7774, 0.370092, 0.37 ) }
    dend_41 { pt3dadd( -98.7529, -29.8069, 0.824086, 0.37 ) }
    dend_41 { pt3dadd( -100.048, -29.8606, 1.45294, 0.37 ) }
    dend_41 { pt3dadd( -100.942, -29.8972, 1.91221, 0.29 ) }
    dend_41 { pt3dadd( -101.421, -29.9048, 2.16117, 0.52 ) }
    dend_41 { pt3dadd( -102.441, -29.8493, 2.67522, 0.29 ) }
    dend_41 { pt3dadd( -103.281, -29.7659, 3.10961, 0.37 ) }
    dend_41 { pt3dadd( -103.817, -29.6819, 3.37467, 0.37 ) }
    dend_41 { pt3dadd( -104.391, -29.5499, 3.5828, 0.96 ) }
    dend_41 { pt3dadd( -105.128, -29.3162, 3.7916, 0.66 ) }
    dend_41 { pt3dadd( -105.605, -29.1181, 3.90634, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.217078, 458.361, -65.1736, 0.52 ) }
    dend_21 { pt3dadd( 0.256161, 459.02, -65.2781, 0.52 ) }
    dend_21 { pt3dadd( 0.2768, 459.531, -65.3549, 1.03 ) }
    dend_21 { pt3dadd( 0.288624, 459.945, -65.4153, 1.03 ) }
    dend_21 { pt3dadd( 0.303424, 460.744, -65.5372, 1.11 ) }
    dend_21 { pt3dadd( 0.325378, 461.667, -65.6707, 0.29 ) }
    dend_21 { pt3dadd( 0.351754, 462.521, -65.7981, 0.29 ) }
    dend_21 { pt3dadd( 0.383697, 463.32, -65.93, 0.96 ) }
    dend_21 { pt3dadd( 0.39973, 463.685, -65.9844, 1.11 ) }
    dend_21 { pt3dadd( 0.434757, 464.522, -66.0909, 0.66 ) }
    dend_21 { pt3dadd( 0.460237, 465.459, -66.1886, 0.52 ) }
    dend_21 { pt3dadd( 0.467026, 466.293, -66.2554, 0.52 ) }
    dend_21 { pt3dadd( 0.467338, 467.161, -66.3046, 0.52 ) }
    dend_21 { pt3dadd( 0.457278, 467.814, -66.323, 0.81 ) }
    dend_21 { pt3dadd( 0.424511, 468.884, -66.3356, 1.11 ) }
    dend_21 { pt3dadd( 0.399202, 469.478, -66.3323, 1.33 ) }
    dend_21 { pt3dadd( 0.313039, 470.975, -66.3182, 0.44 ) }
    dend_21 { pt3dadd( 0.269203, 471.667, -66.3092, 0.44 ) }
    dend_21 { pt3dadd( 0.203409, 472.863, -66.3046, 0.37 ) }
    dend_21 { pt3dadd( 0.176112, 473.581, -66.3119, 0.96 ) }
    dend_21 { pt3dadd( 0.167127, 474.341, -66.3367, 1.25 ) }
    dend_21 { pt3dadd( 0.177119, 474.845, -66.3639, 1.25 ) }
    dend_21 { pt3dadd( 0.211211, 475.393, -66.4048, 1.03 ) }
    dend_21 { pt3dadd( 0.249668, 475.816, -66.4416, 0.74 ) }
    dend_21 { pt3dadd( 0.316641, 476.421, -66.4969, 0.52 ) }
    dend_21 { pt3dadd( 0.371747, 476.979, -66.5399, 0.37 ) }
    dend_21 { pt3dadd( 0.42468, 477.571, -66.5792, 0.37 ) }
    dend_21 { pt3dadd( 0.481578, 478.337, -66.6165, 0.37 ) }
    dend_21 { pt3dadd( 0.536041, 479.313, -66.6572, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( 0.555012, 479.854, -66.6777, 0.66 ) }
    dend_21 { pt3dadd( 0.581564, 480.762, -66.7201, 0.66 ) }
    dend_21 { pt3dadd( 0.59956, 481.544, -66.7572, 0.29 ) }
    dend_21 { pt3dadd( 0.615064, 482.242, -66.7981, 0.29 ) }
    dend_21 { pt3dadd( 0.623638, 482.733, -66.8303, 0.81 ) }
    dend_21 { pt3dadd( 0.637413, 483.596, -66.8973, 1.03 ) }
    dend_21 { pt3dadd( 0.646123, 484.294, -66.956, 1.18 ) }
    dend_21 { pt3dadd( 0.652803, 484.823, -67.0055, 0.81 ) }
    dend_21 { pt3dadd( 0.657599, 485.55, -67.0829, 0.29 ) }
    dend_21 { pt3dadd( 0.660935, 486.193, -67.1526, 0.29 ) }
    dend_21 { pt3dadd( 0.665968, 486.849, -67.2239, 0.96 ) }
    dend_21 { pt3dadd( 0.669483, 487.595, -67.3037, 1.11 ) }
    dend_21 { pt3dadd( 0.678188, 488.154, -67.3588, 1.11 ) }
    dend_21 { pt3dadd( 0.708485, 489.075, -67.4498, 0.74 ) }
    dend_21 { pt3dadd( 0.745705, 489.87, -67.5205, 0.44 ) }
    dend_21 { pt3dadd( 0.797232, 490.669, -67.5832, 0.88 ) }
    dend_21 { pt3dadd( 0.839067, 491.247, -67.6227, 0.88 ) }
    dend_21 { pt3dadd( 0.908473, 492.069, -67.6783, 0.52 ) }
    dend_21 { pt3dadd( 0.99283, 492.936, -67.7376, 0.52 ) }
    dend_21 { pt3dadd( 1.08791, 493.804, -67.7974, 0.52 ) }
    dend_21 { pt3dadd( 1.17885, 494.717, -67.8631, 0.52 ) }
    dend_21 { pt3dadd( 1.23698, 495.466, -67.917, 1.11 ) }
    dend_21 { pt3dadd( 1.26159, 495.849, -67.9467, 1.11 ) }
    dend_21 { pt3dadd( 1.29101, 496.57, -68.0035, 0.81 ) }
    dend_21 { pt3dadd( 1.32253, 497.543, -68.0837, 0.29 ) }
    dend_21 { pt3dadd( 1.34276, 498.466, -68.1657, 0.29 ) }
    dend_21 { pt3dadd( 1.34738, 499.003, -68.2139, 0.96 ) }
    dend_21 { pt3dadd( 1.34318, 499.613, -68.2613, 1.11 ) }
    dend_21 { pt3dadd( 1.31788, 500.256, -68.3002, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.217078, 458.361, -65.1736, 0.44 ) }
    dend_20 { pt3dadd( 1.0815, 457.518, -65.0711, 0.44 ) }
    dend_20 { pt3dadd( 1.68203, 456.933, -64.9999, 0.37 ) }
    dend_20 { pt3dadd( 2.6481, 455.992, -64.8854, 0.29 ) }
    dend_20 { pt3dadd( 3.1098, 455.542, -64.8306, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -105.605, -29.1181, 3.90634, 0.22 ) }
    dend_43 { pt3dadd( -104.919, -28.5893, 3.85927, 0.22 ) }
    dend_43 { pt3dadd( -104.433, -28.2142, 3.82589, 0.22 ) }
    dend_43 { pt3dadd( -103.951, -27.8424, 3.79279, 0.59 ) }
    dend_43 { pt3dadd( -103.625, -27.5904, 3.77036, 0.59 ) }
    dend_43 { pt3dadd( -103.196, -27.26, 3.74096, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -105.605, -29.1181, 3.90634, 0.37 ) }
    dend_42 { pt3dadd( -106.459, -28.0144, 3.69761, 0.37 ) }
    dend_42 { pt3dadd( -107.172, -27.1861, 3.53185, 0.37 ) }
    dend_42 { pt3dadd( -107.924, -26.3958, 3.3633, 0.22 ) }
    dend_42 { pt3dadd( -108.73, -25.5491, 3.1827, 0.22 ) }
    dend_42 { pt3dadd( -109.309, -24.9403, 3.05285, 0.22 ) }
    dend_42 { pt3dadd( -109.931, -24.2871, 2.91355, 0.22 ) }
    dend_42 { pt3dadd( -110.15, -24.0882, 2.8694, 0.52 ) }
    dend_42 { pt3dadd( -110.664, -23.7068, 2.77488, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.31788, 500.256, -68.3002, 0.22 ) }
    dend_23 { pt3dadd( 2.06044, 502.65, -70.6907, 0.22 ) }
    dend_23 { pt3dadd( 2.11612, 503.079, -71.1273, 0.29 ) }
    dend_23 { pt3dadd( 2.09681, 503.826, -71.9349, 0.29 ) }
    dend_23 { pt3dadd( 2.0293, 504.047, -72.2333, 0.66 ) }
    dend_23 { pt3dadd( 1.85601, 504.354, -72.7183, 0.66 ) }
    dend_23 { pt3dadd( 1.61307, 504.737, -73.3151, 0.29 ) }
    dend_23 { pt3dadd( 1.09453, 505.186, -73.9705, 0.88 ) }
    dend_23 { pt3dadd( 0.848975, 505.393, -74.2596, 0.88 ) }
    dend_23 { pt3dadd( 0.0277915, 506.1, -75.1779, 0.29 ) }
    dend_23 { pt3dadd( -0.289307, 506.426, -75.5244, 0.29 ) }
    dend_23 { pt3dadd( -0.684191, 506.978, -75.9423, 0.29 ) }
    dend_23 { pt3dadd( -1.01792, 507.702, -76.3573, 0.66 ) }
    dend_23 { pt3dadd( -1.25889, 508.411, -76.7076, 0.22 ) }
    dend_23 { pt3dadd( -1.43153, 508.981, -76.967, 0.22 ) }
    dend_23 { pt3dadd( -1.62071, 509.568, -77.2252, 0.22 ) }
    dend_23 { pt3dadd( -2.0144, 510.606, -77.7119, 0.96 ) }
    dend_23 { pt3dadd( -2.55298, 511.771, -78.3454, 1.33 ) }
    dend_23 { pt3dadd( -3.20595, 513.008, -79.1071, 0.29 ) }
    dend_23 { pt3dadd( -3.40833, 513.382, -79.3492, 0.29 ) }
    dend_23 { pt3dadd( -3.8605, 514.165, -79.877, 0.29 ) }
    dend_23 { pt3dadd( -4.24864, 514.758, -80.3094, 0.29 ) }
    dend_23 { pt3dadd( -4.72939, 515.308, -80.763, 0.96 ) }
    dend_23 { pt3dadd( -5.04203, 515.554, -80.9711, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.31788, 500.256, -68.3002, 0.29 ) }
    dend_22 { pt3dadd( 1.36709, 501.375, -68.2668, 0.29 ) }
    dend_22 { pt3dadd( 1.40327, 502.219, -68.2415, 0.29 ) }
    dend_22 { pt3dadd( 1.44093, 503.419, -68.2098, 0.29 ) }
    dend_22 { pt3dadd( 1.46193, 504.43, -68.1866, 0.74 ) }
    dend_22 { pt3dadd( 1.46969, 505.144, -68.1725, 1.03 ) }
    dend_22 { pt3dadd( 1.47132, 505.638, -68.164, 1.03 ) }
    dend_22 { pt3dadd( 1.46834, 506.848, -68.1425, 0.29 ) }
    dend_22 { pt3dadd( 1.47651, 507.934, -68.1221, 0.29 ) }
    dend_22 { pt3dadd( 1.48411, 508.476, -68.1096, 0.96 ) }
    dend_22 { pt3dadd( 1.49457, 509.017, -68.0952, 1.18 ) }
    dend_22 { pt3dadd( 1.51127, 509.86, -68.0754, 0.59 ) }
    dend_22 { pt3dadd( 1.52912, 510.656, -68.0519, 0.37 ) }
    dend_22 { pt3dadd( 1.56646, 511.814, -68.0087, 0.37 ) }
    dend_22 { pt3dadd( 1.60906, 512.755, -67.9662, 0.29 ) }
    dend_22 { pt3dadd( 1.66112, 514.001, -67.9088, 0.29 ) }
    dend_22 { pt3dadd( 1.6836, 514.885, -67.8665, 0.88 ) }
    dend_22 { pt3dadd( 1.68675, 515.232, -67.851, 1.03 ) }
    dend_22 { pt3dadd( 1.67819, 515.805, -67.8308, 1.03 ) }
    dend_22 { pt3dadd( 1.65585, 516.564, -67.8093, 1.03 ) }
    dend_22 { pt3dadd( 1.62624, 517.597, -67.7839, 0.44 ) }
    dend_22 { pt3dadd( 1.61098, 518.594, -67.7576, 0.74 ) }
    dend_22 { pt3dadd( 1.60677, 518.916, -67.7503, 0.74 ) }
    dend_22 { pt3dadd( 1.59576, 519.707, -67.7422, 0.44 ) }
    dend_22 { pt3dadd( 1.58427, 520.171, -67.7402, 0.37 ) }
    dend_22 { pt3dadd( 1.57743, 520.727, -67.7369, 0.74 ) }
    dend_22 { pt3dadd( 1.58694, 521.192, -67.7306, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( 1.62957, 521.984, -67.7235, 0.29 ) }
    dend_22 { pt3dadd( 1.66237, 522.439, -67.7142, 0.29 ) }
    dend_22 { pt3dadd( 1.72502, 523.126, -67.6954, 0.81 ) }
    dend_22 { pt3dadd( 1.7529, 523.376, -67.6871, 0.81 ) }
    dend_22 { pt3dadd( 1.8143, 523.87, -67.6735, 0.37 ) }
    dend_22 { pt3dadd( 1.89269, 524.624, -67.6593, 0.37 ) }
    dend_22 { pt3dadd( 1.93749, 525.12, -67.6552, 1.03 ) }
    dend_22 { pt3dadd( 1.95675, 525.558, -67.6605, 1.03 ) }
    dend_22 { pt3dadd( 1.96218, 526.42, -67.6829, 1.03 ) }
    dend_22 { pt3dadd( 1.93512, 527.218, -67.7158, 0.37 ) }
    dend_22 { pt3dadd( 1.85222, 528.304, -67.7671, 0.29 ) }
    dend_22 { pt3dadd( 1.78519, 528.9, -67.7966, 0.29 ) }
    dend_22 { pt3dadd( 1.6725, 529.707, -67.8339, 0.88 ) }
    dend_22 { pt3dadd( 1.59385, 530.2, -67.8523, 1.25 ) }
    dend_22 { pt3dadd( 1.512, 530.635, -67.8633, 1.25 ) }
    dend_22 { pt3dadd( 1.38075, 531.325, -67.8661, 0.74 ) }
    dend_22 { pt3dadd( 1.27573, 531.911, -67.8596, 0.74 ) }
    dend_22 { pt3dadd( 1.09228, 532.985, -67.8338, 1.25 ) }
    dend_22 { pt3dadd( 1.00352, 533.574, -67.8167, 1.25 ) }
    dend_22 { pt3dadd( 0.929806, 534.092, -67.8051, 0.52 ) }
    dend_22 { pt3dadd( 0.839493, 534.781, -67.793, 0.29 ) }
    dend_22 { pt3dadd( 0.773213, 535.323, -67.7895, 0.52 ) }
    dend_22 { pt3dadd( 0.711211, 535.861, -67.7897, 0.81 ) }
    dend_22 { pt3dadd( 0.56105, 537.189, -67.8072, 0.37 ) }
    dend_22 { pt3dadd( 0.44711, 538.17, -67.8254, 0.37 ) }
    dend_22 { pt3dadd( 0.418765, 538.419, -67.831, 1.03 ) }
    dend_22 { pt3dadd( 0.358652, 538.917, -67.8435, 1.4 ) }
    dend_22 { pt3dadd( 0.317076, 539.252, -67.8523, 1.4 ) }
    dend_22 { pt3dadd( 0.208863, 540.188, -67.8742, 0.52 ) }
    dend_22 { pt3dadd( 0.123319, 540.976, -67.8907, 0.52 ) }
    dend_22 { pt3dadd( 0.0466864, 541.768, -67.9041, 0.81 ) }
    dend_22 { pt3dadd( -0.00103498, 542.356, -67.9109, 0.81 ) }
    dend_22 { pt3dadd( -0.0409031, 542.948, -67.915, 0.81 ) }
    dend_22 { pt3dadd( -0.0822596, 543.668, -67.9174, 0.44 ) }
    dend_22 { pt3dadd( -0.10321, 544.16, -67.9166, 0.44 ) }
    dend_22 { pt3dadd( -0.125415, 544.897, -67.9123, 0.81 ) }
    dend_22 { pt3dadd( -0.145269, 545.657, -67.9068, 0.88 ) }
    dend_22 { pt3dadd( -0.158459, 546.49, -67.8978, 1.18 ) }
    dend_22 { pt3dadd( -0.169385, 547.232, -67.8895, 1.4 ) }
    dend_22 { pt3dadd( -0.174856, 547.589, -67.8856, 1.4 ) }
    dend_22 { pt3dadd( -0.176698, 548.124, -67.8824, 0.88 ) }
    dend_22 { pt3dadd( -0.160062, 549.507, -67.8779, 0.37 ) }
    dend_22 { pt3dadd( -0.141478, 550.221, -67.877, 0.37 ) }
    dend_22 { pt3dadd( -0.121036, 550.715, -67.8764, 0.66 ) }
    dend_22 { pt3dadd( -0.0942433, 551.207, -67.8739, 0.96 ) }
    dend_22 { pt3dadd( -0.056215, 551.799, -67.8673, 0.37 ) }
    dend_22 { pt3dadd( -0.0225327, 552.269, -67.8605, 0.74 ) }
    dend_22 { pt3dadd( 0.0440452, 553.073, -67.8571, 0.37 ) }
    dend_22 { pt3dadd( 0.09902, 553.773, -67.8593, 0.81 ) }
    dend_22 { pt3dadd( 0.147273, 554.417, -67.8675, 1.03 ) }
    dend_22 { pt3dadd( 0.237138, 555.675, -67.9124, 0.22 ) }
    dend_22 { pt3dadd( 0.296539, 556.551, -67.9566, 0.22 ) }
    dend_22 { pt3dadd( 0.367301, 557.57, -68.0232, 0.22 ) }
    dend_22 { pt3dadd( 0.434088, 558.511, -68.103, 1.25 ) }
    dend_22 { pt3dadd( 0.468492, 558.972, -68.1527, 1.33 ) }
    dend_22 { pt3dadd( 0.524798, 559.756, -68.2519, 0.44 ) }
    dend_22 { pt3dadd( 0.576489, 560.417, -68.3554, 0.44 ) }
    dend_22 { pt3dadd( 0.654701, 561.229, -68.4909, 0.44 ) }
    dend_22 { pt3dadd( 0.727765, 561.878, -68.6017, 0.37 ) }
    dend_22 { pt3dadd( 0.839995, 562.837, -68.765, 0.37 ) }
    dend_22 { pt3dadd( 0.898805, 563.327, -68.838, 0.37 ) }
    dend_22 { pt3dadd( 0.977806, 564.046, -68.9315, 0.74 ) }
    dend_22 { pt3dadd( 1.0291, 564.578, -68.9984, 1.03 ) }
    dend_22 { pt3dadd( 1.07382, 565.137, -69.0583, 0.74 ) }
    dend_22 { pt3dadd( 1.10383, 565.594, -69.0905, 0.29 ) }
    dend_22 { pt3dadd( 1.13815, 566.28, -69.1152, 0.29 ) }
    dend_22 { pt3dadd( 1.15065, 566.673, -69.1192, 0.66 ) }
    dend_22 { pt3dadd( 1.16084, 567.226, -69.1118, 0.66 ) }
    dend_22 { pt3dadd( 1.16698, 568.016, -69.1032, 0.22 ) }
    dend_22 { pt3dadd( 1.17029, 568.612, -69.0925, 0.52 ) }
    dend_22 { pt3dadd( 1.17617, 569.028, -69.0844, 0.52 ) }
    dend_22 { pt3dadd( 1.19773, 570.466, -69.0461, 0.22 ) }
    dend_22 { pt3dadd( 1.2227, 571.279, -69.0049, 0.59 ) }
    dend_22 { pt3dadd( 1.23437, 571.575, -68.9841, 0.59 ) }
    dend_22 { pt3dadd( 1.27038, 572.325, -68.9171, 0.22 ) }
    dend_22 { pt3dadd( 1.29629, 572.808, -68.8691, 0.81 ) }
    dend_22 { pt3dadd( 1.31705, 573.159, -68.8317, 0.81 ) }
    dend_22 { pt3dadd( 1.38606, 574.089, -68.7285, 0.22 ) }
    dend_22 { pt3dadd( 1.41871, 574.477, -68.687, 0.59 ) }
    dend_22 { pt3dadd( 1.44153, 574.692, -68.6654, 0.59 ) }
    dend_22 { pt3dadd( 1.59935, 576.134, -68.5459, 0.22 ) }
    dend_22 { pt3dadd( 1.64302, 576.587, -68.516, 0.22 ) }
    dend_22 { pt3dadd( 1.70839, 577.368, -68.4801, 0.74 ) }
    dend_22 { pt3dadd( 1.72865, 577.737, -68.4712, 0.81 ) }
    dend_22 { pt3dadd( 1.74706, 578.277, -68.46, 0.81 ) }
    dend_22 { pt3dadd( 1.7611, 579.21, -68.4429, 0.22 ) }
    dend_22 { pt3dadd( 1.76046, 580.147, -68.4269, 0.22 ) }
    dend_22 { pt3dadd( 1.75211, 580.737, -68.4172, 0.22 ) }
    dend_22 { pt3dadd( 1.72959, 581.484, -68.4064, 0.81 ) }
    dend_22 { pt3dadd( 1.72235, 581.686, -68.4033, 0.81 ) }
    dend_22 { pt3dadd( 1.69206, 582.914, -68.3863, 0.22 ) }
    dend_22 { pt3dadd( 1.69226, 582.976, -68.3856, 0.52 ) }
    dend_22 { pt3dadd( 1.74825, 584.373, -68.3729, 0.29 ) }
    dend_22 { pt3dadd( 1.80261, 585.161, -68.3677, 0.88 ) }
    dend_22 { pt3dadd( 1.84535, 585.61, -68.3666, 0.88 ) }
    dend_22 { pt3dadd( 1.92714, 586.42, -68.3699, 0.22 ) }
    dend_22 { pt3dadd( 1.97437, 586.936, -68.3759, 0.22 ) }
    dend_22 { pt3dadd( 2.03273, 587.54, -68.3807, 0.96 ) }
    dend_22 { pt3dadd( 2.05846, 587.79, -68.3814, 0.96 ) }
    dend_22 { pt3dadd( 2.16465, 588.79, -68.375, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( 2.21633, 589.381, -68.368, 0.22 ) }
    dend_22 { pt3dadd( 2.27861, 590.169, -68.3468, 0.88 ) }
    dend_22 { pt3dadd( 2.33495, 590.963, -68.3191, 0.22 ) }
    dend_22 { pt3dadd( 2.38294, 591.761, -68.2898, 0.88 ) }
    dend_22 { pt3dadd( 2.40045, 592.009, -68.2797, 0.88 ) }
    dend_22 { pt3dadd( 2.47089, 592.838, -68.2422, 0.22 ) }
    dend_22 { pt3dadd( 2.53776, 593.447, -68.2094, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -5.04203, 515.554, -80.9711, 0.37 ) }
    dend_25 { pt3dadd( -5.54464, 516.632, -81.3338, 0.37 ) }
    dend_25 { pt3dadd( -5.70597, 516.993, -81.4577, 0.59 ) }
    dend_25 { pt3dadd( -5.97177, 517.663, -81.6773, 0.59 ) }
    dend_25 { pt3dadd( -6.1655, 518.234, -81.8606, 0.29 ) }
    dend_25 { pt3dadd( -6.4764, 519.219, -82.1916, 0.29 ) }
    dend_25 { pt3dadd( -6.64006, 519.755, -82.382, 0.29 ) }
    dend_25 { pt3dadd( -6.7714, 520.226, -82.5873, 0.52 ) }
    dend_25 { pt3dadd( -6.8802, 520.678, -82.8182, 0.22 ) }
    dend_25 { pt3dadd( -7.00451, 521.242, -83.1541, 0.52 ) }
    dend_25 { pt3dadd( -7.15231, 521.848, -83.5349, 0.81 ) }
    dend_25 { pt3dadd( -7.26503, 522.282, -83.7895, 0.81 ) }
    dend_25 { pt3dadd( -7.59935, 523.357, -84.3906, 0.22 ) }
    dend_25 { pt3dadd( -7.7954, 523.896, -84.6774, 0.81 ) }
    dend_25 { pt3dadd( -8.04264, 524.48, -84.9619, 0.81 ) }
    dend_25 { pt3dadd( -8.35226, 525.143, -85.2334, 0.29 ) }
    dend_25 { pt3dadd( -8.8126, 526.076, -85.5657, 0.29 ) }
    dend_25 { pt3dadd( -9.16411, 526.731, -85.7935, 0.81 ) }
    dend_25 { pt3dadd( -9.45096, 527.209, -85.972, 1.11 ) }
    dend_25 { pt3dadd( -9.70946, 527.637, -86.1681, 0.74 ) }
    dend_25 { pt3dadd( -10.0327, 528.219, -86.4676, 0.29 ) }
    dend_25 { pt3dadd( -10.4627, 529.026, -86.9312, 0.29 ) }
    dend_25 { pt3dadd( -10.8096, 529.69, -87.3217, 0.29 ) }
    dend_25 { pt3dadd( -11.2511, 530.611, -87.8517, 1.03 ) }
    dend_25 { pt3dadd( -11.5929, 531.38, -88.2704, 1.18 ) }
    dend_25 { pt3dadd( -12.1573, 532.736, -88.969, 0.29 ) }
    dend_25 { pt3dadd( -12.3595, 533.268, -89.2238, 0.29 ) }
    dend_25 { pt3dadd( -12.6487, 534.129, -89.5998, 1.55 ) }
    dend_25 { pt3dadd( -12.7932, 534.59, -89.7915, 1.33 ) }
    dend_25 { pt3dadd( -13.01, 535.244, -90.0585, 0.81 ) }
    dend_25 { pt3dadd( -13.2647, 535.93, -90.3547, 0.52 ) }
    dend_25 { pt3dadd( -13.6612, 536.937, -90.8195, 0.29 ) }
    dend_25 { pt3dadd( -13.9985, 537.798, -91.229, 0.52 ) }
    dend_25 { pt3dadd( -14.1196, 538.126, -91.3817, 0.81 ) }
    dend_25 { pt3dadd( -14.5852, 539.484, -91.9733, 0.22 ) }
    dend_25 { pt3dadd( -14.8613, 540.426, -92.3529, 0.22 ) }
    dend_25 { pt3dadd( -14.9849, 540.933, -92.5215, 0.66 ) }
    dend_25 { pt3dadd( -15.0804, 541.49, -92.6814, 0.66 ) }
    dend_25 { pt3dadd( -15.1821, 542.563, -92.9601, 0.22 ) }
    dend_25 { pt3dadd( -15.1874, 543.049, -93.1057, 0.52 ) }
    dend_25 { pt3dadd( -15.1711, 543.468, -93.2508, 0.52 ) }
    dend_25 { pt3dadd( -15.1688, 544.37, -93.5938, 0.29 ) }
    dend_25 { pt3dadd( -15.2145, 545.32, -93.9842, 0.96 ) }
    dend_25 { pt3dadd( -15.267, 545.803, -94.1908, 0.96 ) }
    dend_25 { pt3dadd( -15.485, 547.294, -94.8759, 0.22 ) }
    dend_25 { pt3dadd( -15.6793, 548.351, -95.3809, 0.96 ) }
    dend_25 { pt3dadd( -15.8493, 549.082, -95.7454, 0.22 ) }
    dend_25 { pt3dadd( -15.9555, 549.426, -95.9268, 0.59 ) }
    dend_25 { pt3dadd( -16.1142, 549.806, -96.1145, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.04203, 515.554, -80.9711, 0.15 ) }
    dend_24 { pt3dadd( -6.34943, 515.09, -81.9827, 0.15 ) }
    dend_24 { pt3dadd( -6.74287, 514.962, -82.2669, 0.52 ) }
    dend_24 { pt3dadd( -7.00194, 514.881, -82.4485, 0.66 ) }
    dend_24 { pt3dadd( -7.938, 514.59, -83.0944, 0.22 ) }
    dend_24 { pt3dadd( -8.78363, 514.319, -83.6616, 0.22 ) }
    dend_24 { pt3dadd( -9.14119, 514.2, -83.8859, 0.59 ) }
    dend_24 { pt3dadd( -9.68715, 514.046, -84.209, 0.66 ) }
    dend_24 { pt3dadd( -10.6694, 513.763, -84.7532, 0.29 ) }
    dend_24 { pt3dadd( -11.0296, 513.656, -84.9376, 0.81 ) }
    dend_24 { pt3dadd( -11.7517, 513.427, -85.2941, 0.96 ) }
    dend_24 { pt3dadd( -12.5674, 513.153, -85.7106, 0.15 ) }
    dend_24 { pt3dadd( -13.3935, 512.861, -86.1589, 0.15 ) }
    dend_24 { pt3dadd( -14.1929, 512.571, -86.6074, 0.15 ) }
    dend_24 { pt3dadd( -14.8551, 512.327, -86.9811, 0.88 ) }
    dend_24 { pt3dadd( -15.3346, 512.13, -87.2577, 0.88 ) }
    dend_24 { pt3dadd( -16.651, 511.572, -88.0472, 0.22 ) }
    dend_24 { pt3dadd( -17.1543, 511.346, -88.3642, 0.74 ) }
    dend_24 { pt3dadd( -17.8448, 511.005, -88.8002, 0.74 ) }
    dend_24 { pt3dadd( -18.6411, 510.568, -89.3135, 0.29 ) }
    dend_24 { pt3dadd( -19.3205, 510.166, -89.7456, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 7
    dend_28 nseg = 3
    dend_30 nseg = 3
    dend_7 nseg = 3
    dend_3 nseg = 11
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 7
    dend_16 nseg = 7
    dend_13 nseg = 3
    dend_11 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 7
    dend_36 nseg = 3
    dend_26 nseg = 3
    dend_17 nseg = 9
    dend_15 nseg = 7
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_45 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 3
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_SBC_1404bc18ce_0_0


