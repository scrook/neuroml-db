// Cell: cADpyr231_L6_TPC_L1_f2d985e7ff_0_0
/*
{
  "id" : "cADpyr231_L6_TPC_L1_f2d985e7ff_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.03395, 3.46126, 0.0, 4.02624", "-5.40206, 3.10028, 0.0, 7.63249", "-4.77017, 2.73931, 0.0, 9.13419", "-4.13828, 2.37834, 0.0, 10.1593", "-3.50639, 2.01736, 0.0, 10.7784", "-2.8745, 1.65639, 0.0, 11.2424", "-2.24261, 1.29542, 0.0, 11.6482", "-1.61072, 0.934444, 0.0, 11.8964", "-0.978829, 0.573471, 0.0, 11.9658", "-0.346938, 0.212498, 0.0, 11.8936", "0.284952, -0.148476, 0.0, 11.75", "0.916843, -0.509449, 0.0, 11.4122", "1.54873, -0.870422, 0.0, 10.7166", "2.18062, -1.2314, 0.0, 9.92593", "2.81251, -1.59237, 0.0, 9.06177", "3.44441, -1.95334, 0.0, 8.18674", "4.0763, -2.31431, 0.0, 6.96573", "4.70819, -2.67529, 0.0, 5.76679", "5.34008, -3.03626, 0.0, 4.82206", "5.97197, -3.39723, 0.0, 3.69325", "6.60386, -3.75821, 0.0, 2.12851" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "3.70325, 3.95779, -3.96046, 2.89", "3.8073, 4.09441, -4.08831, 2.89", "4.52076, 5.47979, -4.08825, 2.89", "5.10507, 6.60233, -4.08504, 2.65", "5.14623, 6.68104, -4.08514, 2.65", "5.72325, 7.72381, -4.08414, 2.41", "6.44354, 9.05459, -4.08084, 2.17", "6.48198, 9.13467, -4.0808, 2.17", "6.95659, 10.3138, -4.05585, 2.05", "6.98445, 10.3981, -4.05322, 2.05", "7.24205, 11.3163, -4.02371, 1.93", "7.55592, 12.617, -3.98456, 1.81", "7.9331, 14.375, -3.99196, 1.81", "8.28127, 16.255, -4.04333, 1.69", "8.68036, 18.9848, -4.14782, 1.69", "9.01881, 21.9107, -4.279, 1.69", "9.14494, 23.3481, -4.35584, 1.69", "9.27059, 25.0648, -4.45279, 1.45", "9.35836, 26.4861, -4.54656, 1.45", "9.44253, 28.6349, -4.71662, 1.45", "9.46625, 30.7803, -4.8928, 1.45", "9.46524, 30.8988, -4.90151, 1.45", "9.4245, 35.2705, -5.09393, 1.45" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.50458, 0.0307451, -6.32078, 1.08", "-2.33608, 0.158529, -8.96893, 1.08", "-2.9765, 0.214191, -9.07125, 1.08", "-3.6287, 0.270878, -9.17544, 1.08", "-3.69708, 0.276821, -9.18637, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.3794, 4.70432, 2.0742, 0.84", "-3.26073, 4.55125, 2.01043, 0.84", "-3.93019, 5.60239, 2.01043, 0.72", "-4.33398, 6.2364, 2.01043, 0.72", "-4.44518, 6.41099, 2.01043, 0.72", "-4.61196, 6.67287, 2.01043, 0.72", "-4.66756, 6.76016, 2.01043, 0.72", "-4.87847, 7.01041, 2.01043, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.04268, -4.8377, -1.5304, 1.45", "5.48317, -5.27828, -1.67815, 1.45", "6.43977, -7.74486, -1.67815, 1.45", "6.89146, -9.14247, -1.59627, 1.45", "6.93158, -9.30529, -1.5832, 1.45", "7.28112, -11.5828, -1.39254, 1.45", "7.54267, -13.8291, -1.20213, 1.45", "7.60809, -14.9018, -1.10618, 1.45", "7.624, -17.3396, -0.872355, 1.33", "7.46729, -20.5614, -0.5626, 1.33", "7.11592, -24.2316, -0.213665, 1.33", "7.09422, -24.348, -0.202782, 1.33", "6.67968, -25.8859, -0.0618303, 1.2", "6.59645, -26.1336, -0.0384043, 1.2", "5.94124, -27.7811, 0.063394, 1.2", "5.86167, -27.9286, 0.0769536, 1.2", "4.83616, -29.4037, 0.275378, 1.2", "4.64692, -29.6539, 0.313691, 1.2", "3.37077, -31.0682, 0.595909, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.07272, -3.20214, -2.0333, 1.45", "6.23024, -3.28461, -2.09057, 1.45", "7.24346, -3.45596, -1.93565, 1.33", "8.31765, -3.61914, -1.75649, 1.33", "10.1321, -3.88378, -1.44111, 1.33", "12.0831, -4.18368, -1.09271, 1.33", "14.1754, -4.51935, -0.713673, 1.2", "16.4836, -4.93244, -0.262299, 1.2", "19.4531, -5.60703, 0.336996, 1.2", "19.5204, -5.62353, 0.351277, 1.2", "20.8809, -5.98996, 0.652152, 1.2", "20.9951, -6.02437, 0.675999, 1.2", "22.3763, -6.50856, 0.856794, 1.2", "23.996, -7.32917, 1.11083, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.79619, -0.752577, -3.98951, 2.53", "-5.62217, -0.827456, -4.61405, 2.53", "-6.36899, -1.32523, -5.0428, 1.93", "-8.00407, -2.38496, -5.7708, 1.69", "-9.48323, -3.33768, -6.35878, 1.45", "-11.4038, -4.5499, -7.03143, 1.45", "-13.1747, -5.66763, -7.65164, 1.45", "-15.4634, -7.10427, -8.39897, 1.45", "-17.7003, -8.49447, -9.00784, 1.45", "-17.8764, -8.60199, -9.03663, 1.45", "-19.4742, -9.56069, -9.17275, 1.45" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998551026838
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.60386, -3.75821, 0.0, 0.61", "19.6285, -11.1986, 0.0, 0.61", "32.653, -18.6391, 0.0, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "9.4245, 35.2705, -5.09393, 1.45", "12.0163, 36.6597, -4.43201, 0.48", "14.0556, 37.6963, -3.93413, 0.48", "14.363, 37.8473, -3.86397, 0.48", "17.036, 39.311, -3.27732, 0.48", "17.4522, 39.5558, -3.23427, 0.48", "19.6062, 40.9665, -3.22276, 0.48", "19.9771, 41.2294, -3.29217, 0.48", "22.6447, 43.4151, -4.26299, 0.48", "23.8039, 44.4885, -4.90671, 0.48", "26.3385, 47.0487, -6.96236, 0.48", "27.2354, 47.7202, -8.09575, 0.48", "28.0152, 48.001, -9.42644, 0.48", "28.3953, 48.0256, -10.154, 0.48", "28.7699, 47.9263, -10.914, 0.48", "29.5785, 47.5618, -12.4198, 0.48", "32.9288, 45.5979, -18.0682, 0.48", "34.0808, 44.8412, -20.0208, 0.48", "34.3951, 44.6343, -20.5567, 0.48", "35.5517, 43.9092, -22.5013, 0.48", "35.7374, 43.8076, -22.7943, 0.48", "36.1796, 43.6153, -23.4699, 0.48", "37.8248, 42.9977, -25.5037, 0.48", "39.8199, 42.2382, -27.673, 0.48", "40.0835, 42.1387, -27.9356, 0.48", "40.7958, 41.877, -28.6137, 0.48", "41.8701, 41.4366, -29.7023, 0.48", "44.6619, 40.192, -32.7604, 0.48", "45.9144, 39.5967, -34.1335, 0.48", "46.0294, 39.5394, -34.2654, 0.48", "47.5123, 38.8164, -36.1736, 0.48", "48.9725, 38.1334, -38.3122, 0.48", "49.9679, 37.7151, -39.8949, 0.48", "50.544, 37.5142, -40.9384, 0.48", "50.6844, 37.4703, -41.1969, 0.48", "52.3099, 37.0511, -44.1014, 0.48", "53.3084, 36.8635, -45.8376, 0.48", "54.0503, 36.7633, -47.0304, 0.48", "54.2908, 36.7316, -47.4212, 0.48", "54.5962, 36.6932, -47.9516, 0.48", "56.3251, 36.5151, -50.9909, 0.48", "57.8799, 36.4166, -53.7472, 0.48" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "9.4245, 35.2705, -5.09393, 1.45", "9.33208, 37.259, -5.08935, 1.33", "9.11748, 39.9921, -5.0824, 1.2", "8.83059, 42.456, -5.07543, 1.2", "8.81047, 42.6203, -5.07496, 1.2", "8.63077, 44.3765, -5.13219, 1.2", "8.6189, 44.4928, -5.13815, 1.2", "8.42614, 46.222, -5.26049, 1.2", "8.15098, 48.2737, -5.38191, 1.08", "7.94448, 49.8284, -5.45227, 1.08", "7.6565, 52.0255, -5.53004, 1.08", "7.36501, 54.522, -5.59579, 1.08", "7.16623, 56.6241, -5.5744, 1.08", "6.95194, 59.6974, -5.43983, 1.08", "6.83986, 62.0412, -5.25081, 1.08", "6.82903, 62.3008, -5.21921, 1.08", "6.76144, 64.0977, -4.9074, 1.08", "6.75998, 65.9872, -4.53256, 1.08", "6.76518, 66.3459, -4.44136, 1.08", "6.76244, 67.9903, -3.96496, 1.08", "6.752, 68.1479, -3.9156, 1.08", "6.52643, 69.6786, -3.53996, 1.08", "6.51109, 69.7643, -3.53211, 1.08", "6.17857, 71.5744, -3.55987, 0.96", "6.01155, 72.9876, -3.63805, 0.96", "5.97843, 73.4469, -3.67751, 0.96", "5.9756, 75.4304, -3.89576, 0.96", "6.15439, 78.7507, -4.34354, 0.96", "6.17735, 78.9813, -4.37661, 0.96", "6.53945, 81.5487, -4.7814, 0.96", "6.56585, 81.7109, -4.80189, 0.96", "7.04623, 84.5881, -5.07681, 0.96", "7.11966, 85.0721, -5.10644, 0.96", "7.35658, 87.7644, -5.2696, 0.96", "7.36961, 88.1144, -5.29539, 0.96", "7.29589, 90.4594, -5.48812, 0.96", "7.2806, 90.6921, -5.50823, 0.96", "7.07781, 92.9377, -5.70541, 0.96", "6.85744, 95.2432, -5.91682, 0.96", "6.84913, 95.359, -5.93209, 0.96", "6.78238, 97.6824, -6.29444, 0.96", "6.79011, 97.9402, -6.33881, 0.96", "6.9201, 99.5944, -6.63257, 0.96", "6.94144, 99.7557, -6.66127, 0.96", "7.47777, 103.011, -7.19995, 0.96", "7.50563, 103.171, -7.22843, 0.96", "7.88014, 105.15, -7.62437, 0.96", "7.96262, 105.627, -7.72226, 0.96", "8.17349, 107.113, -8.03856, 0.96", "8.18143, 107.18, -8.05104, 0.96" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.69708, 0.276821, -9.18637, 1.08", "-4.32279, 1.00202, -9.17556, 0.36", "-5.41149, 2.06555, -9.17516, 0.36", "-6.45542, 2.90502, -9.31421, 0.36", "-7.82515, 3.92027, -9.5823, 0.36", "-8.15891, 4.1535, -9.66075, 0.36", "-8.63512, 4.47384, -9.78112, 0.36", "-8.89484, 4.60924, -9.86301, 0.36", "-10.3885, 5.2198, -10.3805, 0.36", "-10.4884, 5.26025, -10.4208, 0.36", "-11.3445, 5.67389, -10.8226, 0.36", "-11.6431, 5.82531, -10.9646, 0.36", "-12.6736, 6.35603, -11.4659, 0.36", "-13.0298, 6.53963, -11.6308, 0.36", "-13.6123, 6.85899, -11.9083, 0.36", "-13.8067, 6.96889, -12.0104, 0.36", "-14.5727, 7.41878, -12.4836, 0.36", "-15.1481, 7.76767, -12.882, 0.36", "-15.63, 8.06584, -13.2507, 0.36", "-17.5288, 9.23761, -14.8803, 0.36", "-17.5891, 9.25951, -15.019, 0.36", "-18.0216, 9.38157, -16.3387, 0.36", "-18.1783, 9.41512, -16.9172, 0.36", "-18.2846, 9.43621, -17.3582, 0.36", "-18.4701, 9.46447, -18.2166, 0.36", "-20.4619, 9.83724, -28.5284, 0.36", "-20.6789, 9.91294, -29.6553, 0.36", "-20.7449, 9.94884, -30.0106, 0.36", "-21.1099, 10.2234, -31.9641, 0.36", "-21.1589, 10.2661, -32.2211, 0.36", "-21.4595, 10.6082, -33.6119, 0.36", "-21.7355, 11.3849, -34.0871, 0.36", "-21.9318, 12.0762, -34.4755, 0.36", "-21.9477, 12.145, -34.5045, 0.36" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.69708, 0.276821, -9.18637, 1.08", "-5.3322, -0.298824, -10.8203, 0.96", "-5.99161, -0.568455, -11.4308, 0.96", "-6.31669, -0.709495, -11.7341, 0.96", "-7.30429, -1.14977, -12.6674, 0.96", "-7.63623, -1.29536, -13.0146, 0.96", "-8.384, -1.62332, -13.7967, 0.96", "-8.44913, -1.6576, -13.8609, 0.96", "-9.41069, -2.21358, -14.8513, 0.96", "-9.47378, -2.24816, -14.9173, 0.96", "-10.9188, -2.92942, -16.7035, 0.96" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.87847, 7.01041, 2.01043, 0.72", "-7.13576, 6.07457, 5.08346, 0.48", "-7.90576, 5.85955, 6.15928, 0.48", "-8.23488, 5.83162, 6.60874, 0.48", "-9.17465, 5.85276, 7.75515, 0.48", "-9.33546, 5.86025, 7.93528, 0.48", "-10.393, 5.88459, 9.04385, 0.48", "-10.6822, 5.9357, 9.30393, 0.48", "-11.7419, 6.04977, 10.223, 0.48", "-12.5806, 6.06415, 10.8948, 0.48", "-13.3174, 6.01457, 11.477, 0.48", "-14.4119, 5.8604, 12.3965, 0.48", "-14.6069, 5.8234, 12.5924, 0.48", "-15.8208, 5.58933, 14.0213, 0.48", "-16.0919, 5.54854, 14.4012, 0.48", "-16.7183, 5.52386, 15.448, 0.48", "-17.093, 5.59598, 16.18, 0.48", "-18.0339, 5.93802, 18.2582, 0.48", "-18.0627, 5.95292, 18.3292, 0.48", "-18.3104, 6.18604, 19.1332, 0.48", "-18.3876, 6.27079, 19.3874, 0.48", "-18.7094, 6.74515, 20.5507, 0.48", "-24.0488, 6.83658, 30.345, 0.48" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-4.87847, 7.01041, 2.01043, 0.72", "-5.51761, 8.31308, 2.46746, 0.72", "-6.36528, 10.0253, 3.15989, 0.72", "-6.43988, 10.1763, 3.22159, 0.72", "-7.5654, 12.227, 4.16792, 0.72", "-8.29347, 13.4631, 4.79652, 0.72", "-9.8274, 15.8365, 6.12513, 0.6", "-10.1488, 16.2664, 6.40163, 0.6", "-10.866, 17.0678, 6.99452, 0.6", "-12.1581, 18.412, 8.08112, 0.6", "-12.5878, 18.844, 8.46868, 0.6", "-13.4577, 19.7127, 9.26398, 0.6", "-13.5998, 19.859, 9.38851, 0.6", "-14.881, 21.3013, 10.6542, 0.6", "-15.1817, 21.6819, 10.9938, 0.6", "-16.2273, 23.2424, 12.2708, 0.6", "-16.4489, 23.6137, 12.5622, 0.6", "-17.0633, 24.8564, 13.5169, 0.6", "-17.2199, 25.2197, 13.805, 0.6", "-17.4073, 25.9607, 14.4593, 0.6" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.37077, -31.0682, 0.595909, 1.2", "1.69663, -32.3189, 0.536315, 0.6", "0.387328, -33.3203, 0.470182, 0.6", "-1.38081, -34.6725, 0.380873, 0.6", "-1.55496, -34.8057, 0.372077, 0.6", "-2.6617, -35.6522, 0.316175, 0.6", "-4.08944, -36.7441, 0.24406, 0.6", "-4.71799, -37.2108, 0.166683, 0.6" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.37077, -31.0682, 0.595909, 1.2", "4.04181, -32.2038, -0.26056, 1.08", "4.15917, -32.4024, -0.410351, 1.08" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "23.996, -7.32917, 1.11083, 1.2", "25.5415, -6.78337, 0.662857, 0.48", "26.6656, -6.50145, 0.443716, 0.48", "26.9783, -6.43343, 0.397318, 0.48", "28.0446, -6.1805, 0.349232, 0.48", "28.2708, -6.12041, 0.359936, 0.48", "29.2931, -5.75651, 0.496435, 0.48", "30.4816, -5.20965, 0.84639, 0.48", "30.6102, -5.13624, 0.897279, 0.48", "31.6093, -4.3603, 1.43018, 0.48", "32.0389, -3.86023, 1.775, 0.48", "32.7419, -2.7574, 2.51461, 0.48", "32.8383, -2.55627, 2.64589, 0.48", "33.1432, -1.68785, 3.16644, 0.48", "33.313, -1.1309, 3.4791, 0.48", "33.5425, 0.0404738, 4.06195, 0.48", "33.5489, 0.0946869, 4.08896, 0.48" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "23.996, -7.32917, 1.11083, 1.2", "26.2314, -8.36948, -0.439706, 0.72", "27.3347, -8.80051, -1.16276, 0.72", "28.9517, -9.22217, -2.19477, 0.72", "30.1802, -9.47175, -2.84122, 0.72", "30.3677, -9.50714, -2.93212, 0.72", "31.1449, -9.68261, -3.28472, 0.72", "31.2251, -9.69783, -3.3145, 0.72", "34.5577, -10.4943, -4.44751, 0.72", "37.0277, -11.2301, -5.10582, 0.72", "37.2222, -11.2967, -5.15441, 0.72", "38.7503, -11.8554, -5.534, 0.72", "39.7327, -12.2441, -5.74566, 0.72", "41.4057, -12.9369, -5.99546, 0.6", "43.9739, -14.1374, -6.03292, 0.6", "45.565, -14.9254, -5.94207, 0.6", "45.9131, -15.1058, -5.87886, 0.6", "46.9906, -15.7586, -5.42344, 0.6", "47.804, -16.3818, -4.89249, 0.6", "48.9765, -17.5051, -3.83961, 0.6", "49.0404, -17.5737, -3.77894, 0.6", "50.0438, -18.6415, -2.89738, 0.6", "51.5867, -20.1652, -1.79608, 0.6", "52.8835, -21.3769, -1.07537, 0.6", "53.0848, -21.573, -0.973552, 0.6", "54.7606, -23.2465, -0.171701, 0.6", "55.1091, -23.6376, -0.00339571, 0.6", "55.9619, -24.72, 0.407328, 0.6", "56.0394, -24.8402, 0.450772, 0.6", "57.3822, -27.2869, 1.32899, 0.6", "57.4252, -27.359, 1.35133, 0.6", "58.323, -28.8786, 1.77519, 0.6", "58.4569, -29.0836, 1.81784, 0.6", "59.4195, -30.4433, 2.0179, 0.6", "60.5828, -31.8111, 2.13446, 0.6", "62.5627, -33.7677, 2.14672, 0.6", "62.6462, -33.8419, 2.14636, 0.6", "64.3854, -35.2103, 2.13143, 0.6", "64.503, -35.3025, 2.13353, 0.6", "66.0171, -36.6153, 2.19084, 0.6", "66.1694, -36.7613, 2.20203, 0.6", "67.2132, -37.8862, 2.31127, 0.6", "67.2723, -37.9495, 2.31807, 0.6", "69.2062, -39.9931, 2.57537, 0.6", "71.579, -42.4317, 2.92987, 0.6", "71.6569, -42.5108, 2.94265, 0.6", "73.2573, -44.0481, 3.20515, 0.48", "74.5409, -45.2223, 3.4177, 0.48", "75.0562, -45.6465, 3.51067, 0.48", "76.4529, -46.5886, 3.78448, 0.48", "76.8381, -46.7959, 3.88792, 0.48", "77.4099, -47.0951, 4.06119, 0.48", "77.4838, -47.1323, 4.08762, 0.48", "78.7507, -47.8963, 4.59746, 0.48", "78.9378, -48.0263, 4.66977, 0.48", "79.8516, -48.7438, 4.99916, 0.48", "80.0234, -48.8848, 5.05205, 0.48", "80.8347, -49.5521, 5.26553, 0.48", "81.0853, -49.7677, 5.31431, 0.48", "82.2836, -50.8428, 5.48048, 0.48", "82.4333, -50.991, 5.49658, 0.48", "84.1366, -52.8082, 5.6397, 0.48", "84.3552, -53.0606, 5.65216, 0.48", "86.066, -55.1734, 5.71193, 0.48", "86.2413, -55.4155, 5.71502, 0.48", "87.3529, -57.1164, 5.76023, 0.48", "87.4326, -57.2444, 5.76712, 0.48", "88.6545, -59.3161, 5.94877, 0.48", "88.8416, -59.59, 5.98854, 0.48", "90.3991, -61.5218, 6.40312, 0.48", "91.0859, -62.1813, 6.62268, 0.48", "91.8232, -62.74, 6.88912, 0.48", "92.3384, -63.0671, 7.08356, 0.48", "94.5519, -64.2494, 7.95156, 0.48", "95.0067, -64.4872, 8.11558, 0.48", "97.1476, -65.5634, 8.80991, 0.48", "97.4405, -65.7307, 8.89773, 0.48", "99.673, -67.1787, 9.56813, 0.48", "99.7865, -67.2683, 9.60588, 0.48", "101.195, -68.6975, 10.1638, 0.48", "101.52, -69.1052, 10.3011, 0.48", "102.4, -70.5794, 10.6898, 0.48", "102.537, -70.8577, 10.7636, 0.48", "103.101, -72.2207, 11.1136, 0.48", "103.311, -72.6531, 11.2308, 0.48", "103.866, -73.6653, 11.5415, 0.48", "104.099, -74.0289, 11.6616, 0.48", "105.967, -76.5955, 12.5317, 0.48", "106.432, -77.1597, 12.7221, 0.48", "107.846, -78.6311, 13.1777, 0.48", "108.352, -79.0914, 13.2939, 0.48", "109.1, -79.6913, 13.4088, 0.48", "109.487, -79.9916, 13.427, 0.48", "110.46, -80.7323, 13.3083, 0.48", "111.123, -81.3399, 13.1604, 0.48", "112.114, -82.6244, 12.8173, 0.48", "112.278, -82.9072, 12.748, 0.48", "112.792, -84.0216, 12.5226, 0.48", "112.898, -84.2995, 12.4919, 0.48", "113.353, -85.8428, 12.4548, 0.48", "113.726, -87.4915, 12.5161, 0.48", "114.033, -88.9544, 12.6225, 0.48", "114.132, -89.3634, 12.6531, 0.48", "114.512, -90.7314, 12.7639, 0.48", "114.606, -91.0145, 12.7855, 0.48", "115.135, -92.4284, 12.8956, 0.48", "115.693, -93.5762, 12.9548, 0.48", "116.116, -94.3378, 12.9727, 0.48", "116.191, -94.4668, 12.9678, 0.48", "116.482, -94.9172, 12.9174, 0.48", "123.756, -104.566, 15.7421, 0.48", "131.019, -114.422, 17.7642, 0.48", "139.868, -123.109, 18.2417, 0.48", "148.007, -132.428, 17.2939, 0.48" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-19.4742, -9.56069, -9.17275, 1.45", "-21.4379, -9.11279, -9.35695, 0.48", "-21.5188, -9.07728, -9.36001, 0.48", "-22.8045, -8.38895, -9.3887, 0.48", "-22.8695, -8.34526, -9.38176, 0.48", "-24.2287, -7.33347, -9.1146, 0.48", "-24.4188, -7.1876, -9.06076, 0.48", "-25.6941, -6.08211, -8.48627, 0.48", "-25.7756, -6.01099, -8.43835, 0.48", "-27.0781, -4.92381, -7.45827, 0.48", "-27.3483, -4.72361, -7.23647, 0.48", "-28.5155, -4.04565, -6.2423, 0.48", "-28.9331, -3.89627, -5.8323, 0.48", "-29.5679, -3.83017, -5.19524, 0.48", "-30.3325, -3.84293, -4.46362, 0.48", "-30.4958, -3.86528, -4.32906, 0.48", "-31.2655, -3.99375, -3.75513, 0.48", "-33.9407, -4.46818, -2.09885, 0.48", "-35.4378, -4.70399, -1.31376, 0.48", "-35.5472, -4.71831, -1.27089, 0.48", "-37.8724, -4.95732, -0.555564, 0.48", "-38.0352, -4.97076, -0.519695, 0.48", "-40.0245, -5.09381, -0.252008, 0.48", "-40.0933, -5.09632, -0.250595, 0.48", "-42.2229, -5.1297, -0.219435, 0.48", "-42.3706, -5.13242, -0.21736, 0.48", "-44.4296, -5.16569, -0.203077, 0.48", "-44.6821, -5.17138, -0.198836, 0.48", "-47.2131, -5.22699, -0.102437, 0.48", "-48.4425, -5.24848, -0.0408787, 0.48", "-48.6945, -5.25145, -0.0250669, 0.48", "-50.3573, -5.26787, 0.0466825, 0.48", "-50.4261, -5.26843, 0.0472831, 0.48", "-53.2345, -5.28806, 0.0175341, 0.48", "-53.4312, -5.2877, 0.0160989, 0.48", "-55.2197, -5.27467, 0.0329609, 0.48", "-55.8981, -5.28545, 0.0342032, 0.48", "-56.6295, -5.32525, 0.00415075, 0.48", "-57.1287, -5.36469, -0.0627475, 0.48", "-58.3984, -5.52754, -0.406905, 0.48", "-58.7337, -5.58014, -0.508819, 0.48", "-59.9382, -5.82373, -0.92633, 0.48", "-60.7886, -6.04349, -1.2157, 0.48", "-62.2258, -6.48534, -1.73514, 0.48", "-62.458, -6.56883, -1.83029, 0.48", "-63.2322, -6.88192, -2.18053, 0.48", "-63.6387, -7.05259, -2.35128, 0.48", "-64.8119, -7.55737, -2.78041, 0.48", "-65.2388, -7.73768, -2.93237, 0.48", "-66.2705, -8.17827, -3.33644, 0.48", "-66.6711, -8.30171, -3.50229, 0.48", "-67.367, -8.44305, -3.79697, 0.48", "-67.5964, -8.46409, -3.88196, 0.48", "-68.8416, -8.47803, -4.34902, 0.48", "-69.192, -8.46441, -4.47939, 0.48", "-70.7011, -8.28477, -5.0015, 0.48", "-70.8864, -8.25345, -5.05955, 0.48", "-71.8628, -8.03552, -5.3261, 0.48", "-81.631, -8.20269, -6.35789, 0.48", "-91.4075, -7.2403, -6.30283, 0.48", "-100.958, -5.23333, -5.17443, 0.48", "-110.282, -2.21786, -5.86586, 0.48", "-119.114, 2.06582, -6.25968, 0.48", "-128.208, 5.77707, -6.45401, 0.48", "-136.924, 10.2304, -5.61342, 0.48", "-145.07, 15.7141, -5.31685, 0.48", "-152.808, 21.5105, -3.57764, 0.48" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-19.4742, -9.56069, -9.17275, 1.45", "-21.2415, -11.2319, -8.98454, 1.08", "-22.339, -12.2653, -8.72742, 0.96", "-23.2136, -13.1612, -8.46553, 0.96", "-23.277, -13.236, -8.44389, 0.96", "-24.0603, -14.2981, -8.15216, 0.96", "-24.1342, -14.4066, -8.11751, 0.96", "-25.2059, -16.1504, -7.48258, 0.96", "-25.7946, -17.2019, -7.06567, 0.96", "-26.3878, -18.3195, -6.59328, 0.84", "-26.795, -19.1092, -6.25134, 0.84", "-27.5004, -20.56, -5.60571, 0.72", "-28.0534, -21.6918, -5.11592, 0.72", "-28.1373, -21.8666, -5.04769, 0.72", "-28.5276, -22.5172, -4.7217, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-19.4742, -9.56069, -9.17275, 1.45", "-20.1642, -11.0693, -10.5826, 0.6", "-20.5983, -12.0106, -11.5541, 0.6", "-20.6818, -12.1323, -11.7447, 0.6", "-21.232, -12.8035, -13.002, 0.6", "-21.7252, -13.2905, -13.9818, 0.6", "-21.8018, -13.3569, -14.1227, 0.6", "-22.4513, -13.7465, -15.1493, 0.6", "-23.8813, -14.354, -17.3181, 0.6", "-23.9313, -14.3739, -17.3861, 0.6", "-24.7699, -14.6651, -18.4016, 0.6", "-25.0939, -14.7668, -18.7422, 0.6", "-25.8781, -15.0322, -19.4545, 0.6", "-26.1882, -15.1345, -19.694, 0.6", "-27.9264, -15.7494, -20.9097, 0.6", "-28.1603, -15.8041, -21.1874, 0.6", "-28.9893, -15.9614, -22.3021, 0.6", "-29.1808, -15.9892, -22.58, 0.6", "-29.7728, -16.0304, -23.5736, 0.6", "-29.8439, -16.0271, -23.7105, 0.6", "-31.742, -15.3636, -28.8164, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.653, -18.6391, 0.0, 0.61", "45.6776, -26.0795, 0.0, 0.61", "58.7022, -33.5199, 0.0, 0.61" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "57.8799, 36.4166, -53.7472, 0.48", "58.137, 36.6872, -54.1845, 0.36", "58.5492, 37.0956, -54.7901, 0.36", "58.6587, 37.2003, -54.9406, 0.36", "59.3015, 37.6927, -55.7467, 0.36", "59.497, 37.828, -55.9843, 0.36", "59.7382, 38.0011, -56.2617, 0.36", "60.078, 38.2041, -56.6265, 0.36", "60.1236, 38.2282, -56.6728, 0.36", "61.0896, 38.7516, -57.6118, 0.36", "61.1379, 38.7776, -57.654, 0.36", "61.6945, 39.0767, -58.1434, 0.36" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "57.8799, 36.4166, -53.7472, 0.48", "61.1788, 37.2229, -56.6086, 0.48", "62.3551, 37.6796, -57.6488, 0.48", "62.5502, 37.7633, -57.8122, 0.48", "63.8944, 38.3611, -58.8997, 0.48", "64.2643, 38.5166, -59.1465, 0.48", "65.284, 38.9342, -59.6518, 0.48", "67.1393, 39.7416, -60.2797, 0.48", "68.7635, 40.3902, -60.7686, 0.48", "68.8994, 40.4394, -60.8047, 0.48", "71.4766, 41.2866, -61.366, 0.48", "74.0017, 42.0778, -61.8347, 0.48", "75.9164, 42.6026, -62.2657, 0.48", "77.0625, 42.9009, -62.5751, 0.48", "78.2955, 43.2329, -62.9831, 0.48", "79.5333, 43.5788, -63.4777, 0.48", "79.7902, 43.6552, -63.608, 0.48", "83.2365, 44.6425, -65.6642, 0.48", "84.1144, 44.8766, -66.1686, 0.48", "85.6923, 45.2287, -67.1289, 0.48", "86.0422, 45.277, -67.3588, 0.48", "86.5569, 45.3192, -67.7135, 0.48", "88.0855, 45.3533, -68.6863, 0.48", "89.345, 45.2721, -69.438, 0.48", "89.758, 45.2001, -69.7235, 0.48", "91.9696, 44.6206, -71.4867, 0.48", "92.1207, 44.5793, -71.6076, 0.48", "93.04, 44.3673, -72.3509, 0.48", "94.3717, 44.1144, -73.4877, 0.48", "96.6975, 43.7439, -75.6393, 0.48", "97.5743, 43.6513, -76.3487, 0.48", "98.4018, 43.5958, -76.9807, 0.48", "100.908, 43.4505, -78.7567, 0.48", "102.391, 43.3853, -79.7309, 0.48", "103.513, 43.2892, -80.2431, 0.48", "106.848, 42.8782, -81.3568, 0.48", "108.541, 42.582, -81.7767, 0.48", "110.84, 42.083, -82.2116, 0.48", "111.359, 41.9527, -82.255, 0.48", "116.147, 40.6978, -82.3361, 0.48", "116.553, 40.586, -82.3377, 0.48", "119.308, 39.8203, -82.398, 0.48", "119.548, 39.7622, -82.4002, 0.48", "121.587, 39.3527, -82.4706, 0.48", "122.003, 39.2948, -82.5028, 0.48", "124.048, 39.2698, -82.8896, 0.48", "126.014, 39.3596, -83.3228, 0.48", "127.025, 39.4983, -83.5388, 0.48", "127.497, 39.5855, -83.6283, 0.48", "129.059, 39.946, -83.9998, 0.48", "132.163, 40.7366, -84.7661, 0.48", "132.362, 40.7901, -84.8061, 0.48", "135.119, 41.3506, -85.1869, 0.48", "135.924, 41.4704, -85.2556, 0.48", "138.948, 41.457, -85.4875, 0.48", "139.155, 41.4276, -85.5105, 0.48", "141.248, 40.9179, -85.7388, 0.48", "143.875, 40.2007, -86.1109, 0.48", "144.072, 40.1432, -86.1573, 0.48", "147.654, 39.1504, -87.1517, 0.36", "149.67, 38.6624, -87.6314, 0.36", "149.873, 38.6314, -87.6776, 0.36", "151.075, 38.5675, -87.9769, 0.36", "154.412, 38.9873, -88.437, 0.36", "154.821, 39.0883, -88.4306, 0.36", "157.616, 40.1921, -87.804, 0.36", "159.86, 41.1164, -87.062, 0.36", "160.15, 41.2367, -86.9528, 0.36", "162.854, 42.3852, -85.7262, 0.36", "162.975, 42.4389, -85.6586, 0.36", "165.995, 43.6252, -84.1406, 0.36", "166.085, 43.6506, -84.1085, 0.36" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "8.18143, 107.18, -8.05104, 0.96", "7.57497, 108.847, -8.1186, 0.72", "7.54325, 108.93, -8.11789, 0.72", "7.19257, 109.86, -8.0898, 0.72", "7.16317, 109.943, -8.0896, 0.72", "6.97847, 110.479, -8.10069, 0.72", "6.84008, 110.896, -8.15147, 0.72", "6.67342, 111.394, -8.23719, 0.72", "6.60851, 111.578, -8.27354, 0.72", "6.17867, 112.528, -8.51167, 0.72", "6.11882, 112.632, -8.54482, 0.72", "5.22489, 113.975, -9.03989, 0.72", "5.06395, 114.187, -9.12597, 0.72", "4.43961, 114.921, -9.44228, 0.72", "3.72694, 115.794, -9.79606, 0.72", "2.97039, 116.754, -10.1755, 0.72", "2.79121, 117.029, -10.2801, 0.72", "2.45814, 117.645, -10.5054, 0.72", "2.40805, 117.766, -10.5493, 0.72", "1.95049, 119.337, -11.1005, 0.72", "1.85482, 119.825, -11.2455, 0.72", "1.60238, 121.426, -11.6171, 0.72", "1.5493, 121.775, -11.6888, 0.72", "1.42489, 122.576, -11.8126, 0.72", "1.3429, 123.034, -11.8665, 0.72", "1.13196, 123.833, -11.9081, 0.72", "0.764806, 124.955, -11.8996, 0.6", "0.710895, 125.086, -11.8926, 0.6", "-0.0858272, 126.792, -11.792, 0.6", "-0.126103, 126.87, -11.7898, 0.6", "-0.799462, 128.103, -11.7834, 0.6", "-0.935622, 128.344, -11.7862, 0.6", "-1.45313, 129.227, -11.8443, 0.6", "-1.48427, 129.285, -11.8514, 0.6", "-2.4156, 131.158, -12.1975, 0.6", "-2.45131, 131.238, -12.2144, 0.6", "-2.83584, 132.243, -12.4544, 0.6", "-3.06595, 132.886, -12.595, 0.6", "-3.5499, 134.276, -12.8756, 0.6", "-3.56598, 134.332, -12.8879, 0.6", "-3.97173, 136.031, -13.2963, 0.6", "-4.01332, 136.227, -13.3431, 0.6", "-4.27548, 137.605, -13.6595, 0.6", "-4.31051, 137.8, -13.6977, 0.6", "-4.62491, 139.697, -14.0334, 0.6", "-4.66196, 139.956, -14.0777, 0.6", "-4.80325, 141.409, -14.399, 0.6", "-4.83889, 141.761, -14.4874, 0.6", "-4.89029, 142.239, -14.6129, 0.6", "-5.03034, 143.267, -14.8732, 0.6", "-5.04135, 143.323, -14.8857, 0.6", "-5.35419, 144.927, -15.2698, 0.6", "-5.36819, 145.012, -15.2925, 0.6", "-5.53743, 146.208, -15.6265, 0.6", "-5.5849, 146.782, -15.8041, 0.6", "-5.63526, 148.448, -16.351, 0.6", "-5.62894, 148.628, -16.4065, 0.6", "-5.54891, 149.464, -16.6459, 0.6", "-5.50094, 149.818, -16.761, 0.6", "-5.33697, 150.834, -17.0971, 0.6", "-5.26128, 151.285, -17.2328, 0.6", "-5.14675, 152.257, -17.4735, 0.6", "-5.13323, 152.561, -17.5324, 0.6", "-5.18583, 153.723, -17.6475, 0.48", "-5.31249, 155.057, -17.7034, 0.48", "-5.34601, 155.328, -17.7019, 0.48", "-5.4794, 156.389, -17.6757, 0.48", "-5.49018, 156.477, -17.6729, 0.48", "-5.76638, 158.948, -17.6006, 0.48", "-5.85701, 159.739, -17.6307, 0.48", "-5.97935, 160.892, -17.706, 0.48", "-5.99667, 161.067, -17.7219, 0.48", "-6.05315, 161.756, -17.8174, 0.48", "-6.08865, 162.126, -17.8879, 0.48", "-6.37578, 163.882, -18.6513, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "8.18143, 107.18, -8.05104, 0.96", "7.97952, 109.159, -8.07925, 0.96", "7.66673, 112.188, -8.12276, 0.96", "7.44712, 114.307, -8.15327, 0.96", "7.17851, 116.82, -8.19021, 0.84", "7.15748, 116.995, -8.193, 0.84", "6.84808, 119.349, -8.23294, 0.84", "6.78785, 119.717, -8.24028, 0.84", "6.46353, 121.425, -8.34681, 0.84", "6.36963, 121.926, -8.39853, 0.84", "6.14544, 123.244, -8.58001, 0.84", "6.0909, 123.632, -8.64406, 0.84", "5.95609, 124.784, -8.86312, 0.84", "5.72065, 127.194, -9.30648, 0.84", "5.71474, 127.265, -9.31934, 0.84", "5.56785, 129.239, -9.63937, 0.84", "5.39071, 132.009, -10.046, 0.84", "5.38285, 132.132, -10.0609, 0.84", "5.23976, 134.745, -10.2831, 0.84", "5.21617, 135.137, -10.3016, 0.84", "5.13267, 137.388, -10.3692, 0.84", "5.12814, 137.513, -10.372, 0.84", "5.06034, 139.764, -10.3891, 0.84", "5.02052, 142.085, -10.4039, 0.84", "5.02159, 142.21, -10.4044, 0.84", "5.17235, 148.137, -10.4191, 0.84" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-21.9477, 12.145, -34.5045, 0.36", "-21.9685, 12.1211, -34.9173, 0.36", "-22.1919, 11.9838, -37.3993, 0.36", "-22.2536, 11.954, -37.9462, 0.36", "-22.4954, 11.8682, -39.6932, 0.36", "-22.6184, 11.8318, -40.4874, 0.36", "-22.7606, 11.7975, -41.2981, 0.36", "-22.8435, 11.789, -41.647, 0.36", "-22.9228, 11.784, -41.8796, 0.36", "-23.0975, 11.7742, -42.3127, 0.36", "-23.1261, 11.7721, -42.3649, 0.36", "-23.293, 11.763, -42.6512, 0.36", "-24.0644, 11.7113, -44.2068, 0.36" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-21.9477, 12.145, -34.5045, 0.36", "-22.4284, 13.0647, -34.6546, 0.36", "-23.1531, 14.283, -34.6655, 0.36", "-23.3813, 14.589, -34.5892, 0.36", "-23.8205, 15.1043, -34.3424, 0.36", "-24.0277, 15.3154, -34.1769, 0.36", "-24.6199, 15.8766, -33.6314, 0.36", "-24.9981, 16.1592, -33.1935, 0.36", "-25.536, 16.4823, -32.4887, 0.36", "-25.7548, 16.6067, -32.1788, 0.36", "-26.2989, 16.8976, -31.3468, 0.36", "-26.3651, 16.9346, -31.2486, 0.36", "-26.7177, 17.1609, -30.7164, 0.36" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-10.9188, -2.92942, -16.7035, 0.96", "-10.8441, -2.98013, -18.0215, 0.6", "-10.823, -2.99222, -18.2562, 0.6", "-10.7111, -3.06528, -21.1882, 0.6", "-10.7194, -3.06873, -21.3551, 0.6", "-10.9179, -3.09847, -23.3349, 0.6", "-11.1137, -3.12228, -24.729, 0.6", "-11.3039, -3.12944, -25.7853, 0.6", "-12.4547, -3.25857, -30.8966, 0.6", "-13.0146, -3.34028, -32.9402, 0.6", "-13.2129, -3.38888, -33.5897, 0.6", "-13.4386, -3.45953, -34.2274, 0.6", "-13.5137, -3.49149, -34.4488, 0.6", "-14.3095, -3.90687, -37.0132, 0.6", "-14.5257, -4.12428, -38.022, 0.6", "-14.8051, -4.41691, -39.4727, 0.6", "-14.8676, -4.47518, -39.7956, 0.6", "-15.6934, -5.13311, -43.8962, 0.6", "-15.8141, -5.21582, -44.4605, 0.6", "-17.0801, -6.08046, -50.0807, 0.6", "-17.5866, -6.47028, -52.2927, 0.6", "-17.9215, -6.73582, -53.744, 0.6", "-18.3576, -7.15285, -55.6421, 0.6", "-18.3849, -7.18642, -55.7593, 0.6", "-19.2516, -8.78163, -60.6608, 0.6", "-19.4162, -9.70804, -63.2815, 0.6", "-19.3799, -9.98087, -63.9186, 0.6", "-19.3165, -10.298, -64.6247, 0.6", "-19.1996, -10.7402, -65.817, 0.6", "-18.9481, -11.604, -68.7685, 0.6", "-18.8788, -11.7939, -69.5795, 0.6", "-18.7116, -12.1435, -71.064, 0.6", "-18.6676, -12.231, -71.3836, 0.6", "-18.2733, -12.9625, -73.8414, 0.6", "-18.0258, -13.3942, -75.0292, 0.6", "-17.7447, -13.8531, -76.2001, 0.6", "-17.6683, -13.9797, -76.4999, 0.6", "-17.3771, -14.4603, -77.5864, 0.6", "-17.3171, -14.5626, -77.7742, 0.6", "-16.5086, -15.9707, -79.8667, 0.6", "-16.1095, -16.5712, -80.6887, 0.6", "-15.263, -17.7345, -82.3252, 0.6", "-14.8785, -18.2508, -83.061, 0.6", "-14.1636, -19.1628, -84.3436, 0.6", "-14.0612, -19.2855, -84.5057, 0.6", "-12.2996, -21.2477, -87.1255, 0.6", "-11.6659, -21.8848, -88.0217, 0.6", "-10.1005, -23.3252, -90.2126, 0.6", "-9.5863, -23.7908, -90.9132, 0.6", "-8.56133, -24.7157, -92.285, 0.6", "-7.43595, -25.7891, -93.6172, 0.6", "-6.53467, -26.6895, -94.5791, 0.6", "-6.2407, -26.992, -94.8503, 0.6", "-3.46638, -29.9219, -97.2029, 0.6", "-3.18029, -30.2437, -97.4599, 0.6", "-0.770722, -33.0985, -99.798, 0.6", "-0.598292, -33.3076, -99.9761, 0.6", "1.8169, -36.2569, -102.703, 0.6", "2.10096, -36.5952, -103.048, 0.6", "4.29783, -39.0899, -105.973, 0.48", "5.70748, -40.6369, -108.048, 0.48", "6.30911, -41.2704, -109.126, 0.48", "7.01085, -41.9647, -110.499, 0.48", "7.1024, -42.0419, -110.703, 0.48", "7.49338, -42.3249, -111.587, 0.48", "8.08707, -42.6789, -112.962, 0.48", "9.12028, -43.2516, -115.315, 0.48", "9.33813, -43.3742, -115.839, 0.48", "10.0743, -43.7859, -117.827, 0.48", "10.3113, -43.9421, -118.46, 0.48", "10.6285, -44.1905, -119.333, 0.48", "10.7726, -44.3115, -119.725, 0.48", "11.6368, -45.1416, -122.153, 0.48", "11.7202, -45.2333, -122.402, 0.48", "12.5929, -46.3187, -125.012, 0.48", "13.5824, -47.5553, -127.858, 0.48", "13.7668, -47.7662, -128.37, 0.48", "14.2872, -48.3292, -129.802, 0.48", "14.4627, -48.4845, -130.245, 0.48", "14.969, -48.8336, -131.493, 0.48", "15.4186, -48.9676, -132.572, 0.48", "16.3986, -48.9803, -134.827, 0.48", "16.765, -48.8915, -135.677, 0.48", "17.7039, -48.4568, -137.873, 0.48", "17.7867, -48.417, -138.052, 0.48", "18.8238, -47.9733, -140.279, 0.48", "19.4616, -47.7572, -141.645, 0.48", "20.3831, -47.6011, -143.55, 0.48", "20.457, -47.5982, -143.699, 0.48", "21.5968, -47.7061, -145.821, 0.48", "23.273, -47.9794, -148.874, 0.48", "23.9142, -48.1149, -149.953, 0.48", "25.448, -48.4179, -152.357, 0.48", "25.5836, -48.4401, -152.548, 0.48", "26.8689, -48.5286, -154.365, 0.48", "28.2899, -48.4742, -156.362, 0.48", "29.3593, -48.3766, -157.729, 0.48", "29.7266, -48.3406, -158.175, 0.48", "31.0335, -48.1661, -159.72, 0.48", "33.0911, -47.8679, -162.196, 0.48", "34.4948, -47.6229, -164.027, 0.48", "35.2137, -47.5006, -164.972, 0.48", "36.0011, -47.3922, -166.075, 0.48", "37.0269, -47.2829, -167.548, 0.48", "38.2175, -47.3951, -169.114, 0.48", "39.4776, -47.7471, -170.459, 0.48", "39.7011, -47.8387, -170.69, 0.48", "40.9407, -48.4514, -171.981, 0.48", "41.3222, -48.677, -172.402, 0.48", "44.0846, -50.5585, -175.511, 0.48", "45.3508, -51.4755, -176.879, 0.48", "46.8804, -52.587, -178.527, 0.48", "47.2421, -52.8196, -178.968, 0.48", "48.3002, -53.3884, -180.484, 0.48", "48.8499, -53.6241, -181.372, 0.48", "49.3171, -53.76, -182.226, 0.48", "49.7475, -53.8787, -183.029, 0.48", "51.4314, -54.2643, -186.221, 0.48", "52.3313, -54.5233, -187.744, 0.48", "53.0432, -54.7618, -188.89, 0.48", "53.3057, -54.8793, -189.341, 0.48", "55.0067, -55.8369, -192.486, 0.48", "55.3594, -56.1002, -193.165, 0.48", "57.567, -58.1656, -197.495, 0.48", "57.8747, -58.4837, -198.185, 0.48", "59.1318, -59.9238, -201.29, 0.48", "59.518, -60.4065, -202.362, 0.48", "60.038, -61.1605, -204.078, 0.48", "60.1246, -61.3029, -204.435, 0.48", "60.8679, -63.0486, -209.688, 0.48", "60.9896, -63.3999, -210.817, 0.48", "61.052, -63.9014, -212.364, 0.48", "60.9825, -64.4847, -214.08, 0.48", "60.8568, -64.7495, -214.767, 0.48", "60.4375, -65.3275, -215.848, 0.48", "59.9412, -65.9564, -216.459, 0.48", "58.9031, -67.3298, -217.665, 0.48", "58.7956, -67.5111, -217.772, 0.48", "58.0511, -69.0568, -218.337, 0.48", "58.0013, -69.2151, -218.357, 0.48", "57.2741, -73.1139, -218.165, 0.48", "57.1782, -73.8908, -218.05, 0.48", "56.9318, -76.8294, -217.397, 0.48", "56.6519, -78.9509, -216.985, 0.48", "56.2519, -81.8172, -216.447, 0.48", "56.2069, -82.1843, -216.393, 0.48", "55.9318, -84.6578, -216.1, 0.48", "55.8775, -85.2578, -216.084, 0.48", "55.4699, -90.6831, -216.503, 0.48", "55.4225, -91.5227, -216.623, 0.48", "55.2428, -94.9899, -217.254, 0.48", "55.1947, -96.6079, -217.554, 0.48", "55.172, -99.1688, -218.036, 0.48", "55.142, -99.6864, -218.139, 0.48", "55.0092, -100.395, -218.334, 0.48", "54.3164, -102.466, -218.963, 0.48", "54.1406, -102.781, -219.058, 0.48", "53.3112, -104.04, -219.423, 0.48", "51.2102, -106.877, -220.272, 0.36", "48.9043, -109.841, -221.177, 0.36", "48.3243, -110.551, -221.401, 0.36", "46.2427, -112.974, -222.199, 0.36", "45.4535, -113.854, -222.487, 0.36" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-10.9188, -2.92942, -16.7035, 0.96", "-13.6992, 0.697757, -19.2896, 0.84", "-14.3592, 1.69368, -19.5993, 0.84", "-14.4383, 1.82996, -19.6065, 0.84", "-15.2112, 3.17487, -19.5595, 0.84", "-16.2624, 4.95422, -19.4457, 0.84", "-17.0812, 6.29296, -19.3113, 0.84", "-17.1603, 6.4249, -19.2765, 0.84", "-17.975, 7.80079, -18.9919, 0.84", "-19.2159, 9.85524, -18.7618, 0.72", "-19.7256, 10.674, -18.8063, 0.72", "-20.3019, 11.5509, -18.9914, 0.72", "-20.8569, 12.353, -19.2137, 0.72", "-21.6412, 13.4626, -19.5594, 0.72", "-22.5838, 14.7721, -20.0553, 0.72", "-23.5789, 16.1812, -20.6727, 0.6", "-23.6638, 16.3019, -20.7285, 0.6", "-24.7428, 17.739, -21.3757, 0.6", "-25.3719, 18.5019, -21.6582, 0.6", "-25.5556, 18.7041, -21.7208, 0.6", "-25.6789, 18.8407, -21.7439, 0.6", "-25.7529, 18.9241, -21.7455, 0.6", "-26.7404, 20.0658, -21.6941, 0.6", "-26.8112, 20.1478, -21.6674, 0.6", "-27.4678, 20.9447, -21.2311, 0.6", "-28.0486, 21.6521, -20.755, 0.6", "-28.7437, 22.5001, -20.1106, 0.6", "-29.1653, 22.9947, -19.6998, 0.6", "-30.4632, 24.3995, -18.4708, 0.6", "-30.5518, 24.4849, -18.4055, 0.6", "-31.3345, 25.2666, -17.9096, 0.6", "-31.4951, 25.4341, -17.8181, 0.6", "-32.1639, 26.1892, -17.5181, 0.6", "-33.1081, 27.3199, -17.1984, 0.6", "-34.3918, 28.8423, -16.8793, 0.6", "-36.1769, 30.9498, -16.451, 0.6", "-36.2681, 31.0531, -16.431, 0.6", "-38.0743, 32.9609, -16.0793, 0.6", "-39.1594, 34.0617, -15.8859, 0.6", "-40.8823, 35.6834, -15.6252, 0.48", "-40.9449, 35.7379, -15.6176, 0.48", "-43.7527, 38.0367, -15.3529, 0.48", "-45.1857, 39.2099, -15.1764, 0.48", "-45.2789, 39.2854, -15.1622, 0.48", "-47.7694, 41.3495, -14.7244, 0.48", "-49.5732, 42.9199, -14.3628, 0.48", "-50.4727, 43.7439, -14.1036, 0.48", "-52.1295, 45.3896, -13.4419, 0.48", "-52.2315, 45.4986, -13.3918, 0.48", "-53.6847, 47.1163, -12.5632, 0.48", "-53.749, 47.1951, -12.5176, 0.48", "-55.1957, 49.0885, -11.3727, 0.48", "-55.4535, 49.4249, -11.194, 0.48", "-56.3938, 50.6787, -10.6476, 0.48", "-56.584, 50.9384, -10.556, 0.48", "-57.4438, 52.145, -10.2135, 0.48", "-57.5328, 52.2728, -10.1889, 0.48", "-59.1448, 54.6282, -9.95981, 0.48", "-59.3348, 54.902, -9.92962, 0.48", "-60.3837, 56.4061, -9.74858, 0.48", "-60.4526, 56.5044, -9.73539, 0.48", "-61.6895, 58.2983, -9.47345, 0.48", "-61.9268, 58.6903, -9.43442, 0.48", "-62.7035, 60.191, -9.3323, 0.48", "-62.8141, 60.4143, -9.32197, 0.48", "-63.4853, 61.943, -9.32244, 0.48", "-63.5428, 62.0898, -9.32745, 0.48", "-64.6828, 65.6367, -9.69459, 0.48", "-65.0571, 67.0289, -9.91447, 0.48", "-65.0735, 67.1084, -9.93347, 0.48", "-65.3552, 68.6255, -10.3376, 0.48", "-65.3711, 68.7307, -10.3711, 0.48", "-65.6263, 70.5964, -11.0354, 0.48", "-65.6384, 70.8037, -11.1379, 0.48", "-65.7097, 72.441, -12.1068, 0.48" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-24.0488, 6.83658, 30.345, 0.48", "-29.23, 6.85977, 35.1751, 0.48" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-24.0488, 6.83658, 30.345, 0.48", "-28.0783, 6.15627, 38.2515, 0.48", "-31.3067, 5.72929, 46.5343, 0.48", "-35.0301, 6.03968, 54.6121, 0.48" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.4073, 25.9607, 14.4593, 0.6", "-15.6095, 26.4067, 14.207, 0.36", "-14.831, 26.6378, 14.1181, 0.36", "-14.7235, 26.6708, 14.1222, 0.36", "-13.9488, 26.9104, 14.2344, 0.36", "-13.4945, 27.0159, 14.3338, 0.36", "-12.6071, 27.1736, 14.5633, 0.36", "-12.0209, 27.2364, 14.7732, 0.36", "-10.9653, 27.0063, 15.3417, 0.36", "-10.8007, 26.8996, 15.4801, 0.36", "-10.32, 26.3198, 16.0827, 0.36", "-10.2582, 26.2108, 16.1807, 0.36", "-9.9514, 25.4897, 16.7482, 0.36", "-9.5894, 24.5457, 17.3667, 0.36", "-9.36313, 23.8328, 17.777, 0.36", "-9.26836, 23.5225, 17.9779, 0.36", "-9.11386, 22.9817, 18.3881, 0.36", "-9.07836, 22.8616, 18.4862, 0.36", "-8.93626, 22.4637, 18.8668, 0.36", "-8.90502, 22.4236, 18.9079, 0.36", "-8.45978, 22.0301, 19.3139, 0.36", "-8.40951, 21.9952, 19.3568, 0.36", "-1.76591, 18.141, 24.6727, 0.36", "6.25636, 14.999, 28.2812, 0.36", "14.1245, 12.6331, 32.7249, 0.36", "21.992, 9.06151, 36.2741, 0.36", "29.1505, 5.62648, 41.1941, 0.36", "36.0147, 1.41343, 45.9253, 0.36" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-17.4073, 25.9607, 14.4593, 0.6", "-16.9426, 27.4739, 15.1007, 0.6", "-16.9032, 27.5886, 15.1361, 0.6", "-16.3937, 29.0151, 15.4972, 0.6", "-16.3073, 29.3244, 15.5833, 0.6", "-15.9484, 30.8313, 16.025, 0.6", "-15.8076, 31.5454, 16.2377, 0.6", "-15.69, 32.3306, 16.4653, 0.6", "-15.6811, 32.4323, 16.4912, 0.6", "-15.6619, 34.2831, 16.8815, 0.6", "-15.6705, 34.4066, 16.9069, 0.6", "-15.8777, 35.7472, 17.215, 0.6", "-15.8939, 35.8472, 17.2437, 0.6", "-16.1068, 37.1825, 17.653, 0.6", "-16.1695, 37.7383, 17.7672, 0.6", "-16.2335, 38.7896, 17.8669, 0.6", "-16.2366, 38.8682, 17.87, 0.6", "-16.288, 40.6044, 17.8885, 0.6", "-16.2881, 40.7097, 17.8878, 0.6", "-16.1687, 42.5844, 17.7932, 0.6", "-16.1575, 42.6896, 17.7824, 0.6", "-15.9559, 44.1265, 17.4783, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.71799, -37.2108, 0.166683, 0.6", "-4.97968, -38.1119, 3.2691, 0.48", "-5.09044, -38.5545, 4.34233, 0.48", "-5.21687, -39.0509, 5.38079, 0.48", "-5.45666, -39.9195, 7.13282, 0.48", "-5.51386, -40.0886, 7.45639, 0.48", "-5.69167, -40.5692, 8.34217, 0.48", "-6.24386, -41.6889, 9.98878, 0.48", "-6.65181, -42.3281, 10.826, 0.48", "-7.02985, -42.7743, 11.367, 0.48", "-7.6601, -43.3245, 12.0251, 0.48", "-7.74435, -43.3861, 12.0991, 0.48", "-8.9328, -44.1222, 12.9977, 0.48", "-9.47153, -44.4624, 13.3455, 0.48", "-10.4901, -45.206, 13.9709, 0.48", "-11.0584, -45.692, 14.3289, 0.48", "-11.6502, -46.37, 14.8344, 0.48", "-11.7807, -46.573, 14.9881, 0.48", "-12.1665, -47.7175, 15.8413, 0.48", "-12.2114, -47.9489, 16.0131, 0.48", "-12.2192, -48.0511, 16.0897, 0.48", "-12.2778, -49.5006, 17.2089, 0.48", "-12.2758, -49.7579, 17.4158, 0.48", "-12.2037, -51.0521, 18.455, 0.48", "-12.1406, -51.5714, 18.86, 0.48", "-11.9383, -52.8597, 19.8245, 0.48", "-11.9151, -52.9881, 19.9167, 0.48", "-11.7366, -53.7567, 20.4057, 0.48", "-11.5681, -54.3603, 20.7675, 0.48", "-11.3261, -54.9254, 21.0785, 0.48", "-11.2831, -55.0026, 21.1151, 0.48", "-11.9664, -62.6574, 28.4492, 0.48", "-11.0533, -71.3566, 34.4776, 0.48", "-9.44675, -80.4987, 39.6442, 0.48", "-7.23449, -89.7658, 44.3428, 0.48", "-6.6082, -99.8014, 47.7703, 0.48", "-4.69902, -109.92, 50.3808, 0.48", "-4.92692, -120.046, 53.586, 0.48", "-5.43444, -130.199, 56.668, 0.48", "-5.68186, -140.469, 59.3733, 0.48", "-3.96629, -150.808, 61.1088, 0.48", "-2.17418, -161.039, 63.3366, 0.48", "0.896241, -171.196, 63.8486, 0.48", "2.93817, -181.576, 62.8811, 0.48" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.71799, -37.2108, 0.166683, 0.6", "-6.48443, -36.811, 0.0717146, 0.48", "-6.56281, -36.8094, 0.0539406, 0.48", "-7.43822, -36.8537, -0.188798, 0.48", "-7.59166, -36.8686, -0.234493, 0.48", "-8.65364, -36.9825, -0.559999, 0.48", "-8.76151, -36.9921, -0.594582, 0.48", "-9.9813, -37.146, -1.09655, 0.48", "-10.1361, -37.1594, -1.15897, 0.48", "-11.4242, -37.2311, -1.66537, 0.48", "-11.5919, -37.2282, -1.73021, 0.48", "-12.6112, -37.131, -2.11379, 0.48", "-12.6856, -37.1213, -2.14258, 0.48", "-13.626, -36.9556, -2.51732, 0.48", "-13.8581, -36.9171, -2.6137, 0.48", "-14.9504, -36.797, -2.89772, 0.48", "-15.0301, -36.7937, -2.90791, 0.48", "-15.9933, -36.853, -2.88463, 0.48", "-16.0722, -36.8634, -2.87316, 0.48", "-16.6759, -36.9797, -2.68464, 0.48", "-18.7097, -37.4001, -1.81263, 0.48", "-18.78, -37.4125, -1.77556, 0.48", "-19.3783, -37.5008, -1.4315, 0.48", "-19.6626, -37.5325, -1.25952, 0.48", "-20.6924, -37.6243, -0.670328, 0.48", "-20.7928, -37.6324, -0.618055, 0.48", "-22.1754, -37.7311, -0.0285738, 0.48", "-22.4247, -37.7576, 0.0813768, 0.48", "-23.3202, -37.8673, 0.486247, 0.48", "-23.7337, -37.9518, 0.665279, 0.48", "-24.194, -38.0838, 0.86636, 0.48", "-24.704, -38.2496, 1.09393, 0.48", "-25.4353, -38.5336, 1.44623, 0.48", "-25.6411, -38.6142, 1.5419, 0.48", "-26.5783, -38.9968, 1.91886, 0.48", "-26.8816, -39.1121, 2.01609, 0.48", "-27.6968, -39.3835, 2.24157, 0.48", "-27.8535, -39.4311, 2.27408, 0.48", "-28.3685, -39.5957, 2.35063, 0.48", "-29.2161, -39.8976, 2.46675, 0.48", "-29.3651, -39.9505, 2.49602, 0.48", "-30.2382, -40.3002, 2.66244, 0.48", "-30.4412, -40.3919, 2.70589, 0.48", "-31.0556, -40.6627, 2.87783, 0.48", "-31.2849, -40.7557, 2.98465, 0.48", "-32.0458, -41.047, 3.48775, 0.48", "-38.5761, -42.147, 4.33439, 0.48", "-45.2182, -42.7752, 4.57543, 0.48", "-51.8484, -42.4978, 5.30637, 0.48", "-58.4966, -42.2647, 4.74295, 0.48", "-65.1591, -42.4786, 5.11309, 0.48", "-71.6941, -41.827, 6.31296, 0.48" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.15917, -32.4024, -0.410351, 1.08", "3.46004, -32.9151, -1.21087, 0.84", "2.32432, -33.8747, -2.68387, 0.84", "2.28235, -33.9112, -2.7369, 0.84", "1.83032, -34.3032, -3.3355, 0.84", "1.74396, -34.3779, -3.45462, 0.84", "0.917723, -35.0338, -4.63024, 0.84", "0.689751, -35.2162, -5.00116, 0.84", "0.426826, -35.4231, -5.43593, 0.72", "0.0350482, -35.7115, -6.10014, 0.72", "-0.490223, -36.0736, -6.94266, 0.72", "-1.22327, -36.545, -8.03708, 0.72", "-1.41097, -36.6708, -8.30599, 0.72", "-1.9987, -37.1656, -9.24875, 0.72", "-2.11608, -37.2669, -9.46087, 0.72", "-2.61354, -37.7029, -10.4022, 0.72", "-2.96656, -37.9995, -11.0843, 0.72", "-3.61001, -38.5211, -12.3772, 0.72", "-4.53648, -39.2503, -14.3517, 0.72", "-5.52382, -39.9957, -16.5931, 0.72", "-5.6223, -40.0705, -16.8381, 0.72", "-5.85851, -40.246, -17.4807, 0.72", "-6.16038, -40.4726, -18.322, 0.72", "-6.78967, -40.9141, -20.1594, 0.72", "-6.81993, -40.9359, -20.2508, 0.72", "-7.37131, -41.353, -21.9418, 0.72", "-7.54515, -41.4739, -22.4652, 0.72", "-7.83714, -41.6408, -23.3148, 0.72", "-8.23828, -41.8269, -24.4227, 0.72", "-8.90755, -42.0887, -26.1752, 0.72", "-9.43705, -42.2829, -27.5396, 0.72", "-9.6314, -42.3474, -28.0488, 0.72", "-11.0579, -42.8139, -31.8439, 0.72", "-11.2211, -42.8671, -32.2717, 0.72", "-11.4105, -42.9329, -32.7732, 0.72", "-11.7979, -43.0971, -33.8932, 0.72", "-13.1654, -43.8091, -38.2179, 0.72", "-13.1998, -43.8328, -38.3433, 0.72", "-13.2972, -43.9408, -38.8078, 0.72", "-13.4381, -44.1752, -39.6769, 0.72", "-13.5979, -44.6573, -41.1819, 0.72", "-13.6086, -44.7986, -41.5152, 0.72", "-13.5287, -45.3549, -42.4963, 0.72", "-13.5087, -45.6311, -42.9699, 0.72", "-13.504, -46.1895, -43.8882, 0.72", "-13.6314, -46.8215, -44.8438, 0.72", "-13.7235, -47.0243, -45.1586, 0.72", "-13.9451, -47.4163, -45.7694, 0.72", "-14.185, -47.7737, -46.341, 0.72", "-14.2441, -47.8667, -46.492, 0.72", "-14.7123, -48.7448, -47.9505, 0.72", "-14.8777, -49.2879, -48.9264, 0.72", "-14.9139, -49.6641, -49.6453, 0.72", "-14.887, -49.7934, -49.9097, 0.72", "-14.7524, -50.0462, -50.4901, 0.72", "-14.3978, -50.4419, -51.5903, 0.72", "-13.8613, -50.817, -52.7853, 0.72", "-13.8161, -50.852, -52.9045, 0.72", "-13.6332, -51.0192, -53.5313, 0.72", "-13.5843, -51.0986, -53.7894, 0.72", "-13.4484, -51.6846, -55.3781, 0.72", "-13.4413, -51.86, -55.7623, 0.72", "-13.4739, -52.6042, -57.2357, 0.72", "-13.4755, -52.6446, -57.3136, 0.72", "-13.4896, -53.0076, -57.9379, 0.72", "-13.4887, -53.1508, -58.1601, 0.72", "-13.3531, -55.0091, -60.7818, 0.72", "-13.24, -55.8653, -62.0365, 0.72", "-13.1733, -56.135, -62.4492, 0.72", "-12.897, -57.0514, -63.9393, 0.72", "-12.8163, -57.2623, -64.3019, 0.72", "-12.6418, -57.6619, -65.0091, 0.72", "-12.2546, -58.2752, -66.2035, 0.72", "-11.9141, -58.6622, -67.1635, 0.72", "-11.8101, -58.7587, -67.4637, 0.72", "-11.6481, -58.8924, -67.9837, 0.72", "-11.4826, -59.0425, -68.5799, 0.72", "-10.9636, -59.6608, -70.6518, 0.72", "-10.6527, -60.2392, -71.9843, 0.72", "-10.5625, -60.5302, -72.4408, 0.72", "-10.4224, -61.2007, -73.247, 0.72", "-10.4133, -61.3338, -73.378, 0.72", "-10.4155, -62.1634, -74.0336, 0.72", "-10.5273, -63.4265, -74.7908, 0.72", "-10.6604, -64.5786, -75.4366, 0.72", "-10.69, -64.8084, -75.5836, 0.72", "-10.976, -67.0101, -77.3447, 0.72", "-10.9882, -67.1019, -77.4409, 0.72", "-11.0647, -67.614, -78.1733, 0.72", "-11.1237, -67.9805, -78.8093, 0.72", "-11.2432, -68.6269, -80.1046, 0.72", "-11.3622, -69.1766, -81.1416, 0.72", "-11.5415, -69.8634, -82.3173, 0.72", "-11.6884, -70.3269, -83.1008, 0.72", "-11.8113, -70.6871, -83.6985, 0.72", "-12.0411, -71.3218, -84.6952, 0.72", "-12.6369, -72.9751, -87.0356, 0.72", "-12.9268, -73.7923, -88.1132, 0.72", "-13.1532, -74.5772, -89.0989, 0.72", "-13.3488, -75.4765, -90.2161, 0.72", "-13.3845, -75.8243, -90.6786, 0.72", "-13.3645, -76.4558, -91.5397, 0.72", "-13.3277, -76.6002, -91.7485, 0.72", "-12.9529, -77.5596, -93.1361, 0.72", "-12.7163, -78.1633, -93.9407, 0.72", "-12.3127, -79.265, -95.3903, 0.72", "-12.2227, -79.5145, -95.6999, 0.72", "-11.9959, -80.157, -96.4804, 0.72", "-11.8459, -80.5805, -96.9646, 0.72", "-11.4298, -81.7704, -98.2971, 0.72", "-11.2523, -82.254, -98.8423, 0.72", "-10.9506, -83.0985, -99.8133, 0.72", "-10.9131, -83.1883, -99.9183, 0.72", "-10.3977, -84.2574, -101.236, 0.72", "-9.9884, -84.9426, -102.189, 0.72", "-9.5479, -85.5433, -103.113, 0.72", "-9.41302, -85.7102, -103.382, 0.72", "-8.85575, -86.3898, -104.488, 0.72", "-8.80409, -86.4559, -104.59, 0.72", "-7.70819, -87.9739, -106.782, 0.72", "-7.58052, -88.1687, -107.035, 0.72", "-7.23671, -88.7423, -107.721, 0.72", "-7.00276, -89.1593, -108.204, 0.72", "-6.51303, -90.1385, -109.36, 0.72", "-6.27396, -90.685, -109.96, 0.72", "-5.85429, -91.7656, -111.049, 0.72", "-5.68142, -92.2927, -111.584, 0.72", "-5.37351, -93.4369, -112.803, 0.72", "-5.22672, -94.1153, -113.549, 0.72", "-5.04089, -95.1927, -114.734, 0.72", "-5.03356, -95.2525, -114.798, 0.72", "-4.97303, -96.309, -115.952, 0.72", "-4.96004, -96.8702, -116.569, 0.72", "-4.94838, -97.925, -117.687, 0.72", "-4.93671, -98.2432, -118.029, 0.72", "-4.90468, -99.0559, -118.941, 0.72", "-4.88706, -99.5206, -119.48, 0.72", "-4.86233, -100.506, -120.645, 0.72", "-4.86013, -100.677, -120.846, 0.72", "-4.87205, -102.279, -122.757, 0.6", "-4.90876, -103.223, -123.884, 0.6", "-4.93406, -103.575, -124.304, 0.6", "-5.0055, -104.392, -125.242, 0.6", "-5.03728, -104.887, -125.82, 0.6", "-5.06158, -105.432, -126.485, 0.6", "-5.06474, -105.608, -126.714, 0.6", "-5.06236, -105.843, -127.048, 0.6", "-4.99869, -106.55, -128.086, 0.6", "-4.74871, -108.135, -130.589, 0.6", "-4.71103, -108.315, -130.901, 0.6", "-4.47722, -109.232, -132.619, 0.6", "-4.41256, -109.463, -133.034, 0.6", "-4.24017, -110.019, -133.931, 0.6", "-4.18841, -110.176, -134.15, 0.6", "-3.82528, -111.4, -135.626, 0.6", "-3.76688, -111.621, -135.867, 0.6", "-3.52484, -112.71, -136.811, 0.6", "-3.38208, -113.567, -137.492, 0.6", "-3.29541, -114.331, -138.081, 0.6", "-3.17271, -115.539, -138.984, 0.6", "-3.15223, -115.796, -139.168, 0.6", "-3.04883, -117.515, -140.457, 0.6", "-3.02368, -118.171, -140.971, 0.6", "-3.00515, -119.54, -142.096, 0.6", "-3.01204, -119.887, -142.394, 0.6", "-3.05655, -120.831, -143.261, 0.6", "-3.07551, -121.036, -143.454, 0.6", "-3.22604, -121.976, -144.313, 0.6", "-3.4063, -122.781, -145.038, 0.6", "-3.93484, -124.649, -146.726, 0.6", "-3.96446, -124.746, -146.811, 0.6", "-4.21424, -125.457, -147.489, 0.6", "-4.56329, -126.422, -148.476, 0.6", "-5.19629, -128.062, -150.288, 0.6", "-5.25347, -128.231, -150.483, 0.6", "-5.42069, -128.817, -151.227, 0.6", "-5.6567, -129.733, -152.575, 0.6", "-5.78625, -130.309, -153.583, 0.6", "-5.83011, -130.591, -154.088, 0.6", "-5.90618, -131.46, -155.501, 0.6", "-5.92166, -131.674, -155.806, 0.6", "-6.05339, -132.735, -157.147, 0.6", "-6.11758, -133.168, -157.613, 0.6", "-6.24896, -134.194, -158.534, 0.6", "-6.2596, -134.298, -158.615, 0.6", "-6.3476, -135.591, -159.538, 0.6", "-6.42883, -138.279, -161.369, 0.6", "-6.42455, -138.389, -161.442, 0.6", "-6.27374, -140.067, -162.62, 0.6", "-6.22391, -140.312, -162.806, 0.6", "-5.90669, -141.343, -163.673, 0.6", "-5.88263, -141.395, -163.724, 0.6", "-5.36867, -142.266, -164.593, 0.6", "-5.25488, -142.464, -164.805, 0.6", "-4.64903, -143.546, -166.092, 0.6", "-4.32923, -144.163, -166.839, 0.6", "-3.75287, -145.357, -168.311, 0.6", "-3.55177, -145.764, -168.853, 0.6", "-3.36853, -146.142, -169.389, 0.6", "-3.15835, -146.549, -170.028, 0.6", "-2.89149, -147.035, -170.967, 0.6", "-2.74574, -147.25, -171.439, 0.6", "-2.39273, -147.672, -172.597, 0.6", "-2.36367, -147.707, -172.685, 0.6", "-2.14667, -147.98, -173.313, 0.6", "-1.81771, -148.488, -174.229, 0.6", "-1.31341, -149.42, -175.602, 0.6", "-1.2777, -149.502, -175.699, 0.6", "-0.919612, -150.481, -176.719, 0.6", "-0.872952, -150.619, -176.853, 0.6", "-0.473984, -151.993, -178.057, 0.6", "-0.449081, -152.072, -178.111, 0.6", "-0.242122, -152.751, -178.51, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.15917, -32.4024, -0.410351, 1.08", "4.68315, -35.2863, -1.09173, 0.96", "5.06762, -38.4748, -1.73814, 0.96", "5.07937, -38.6079, -1.76252, 0.96", "5.16325, -41.238, -2.16875, 0.84", "5.1591, -43.6969, -2.50769, 0.84", "5.15356, -43.8318, -2.52312, 0.84", "4.83417, -46.7871, -2.90859, 0.84", "4.75197, -47.3349, -2.97942, 0.84", "4.41681, -49.3417, -3.2097, 0.84", "4.38268, -49.5292, -3.23464, 0.84", "3.96571, -51.7884, -3.62033, 0.84", "3.51778, -54.4892, -4.14444, 0.84", "3.17061, -56.9273, -4.66491, 0.84", "3.1464, -57.1135, -4.70539, 0.84", "2.78995, -60.7538, -5.65947, 0.72", "2.58644, -63.5229, -6.45099, 0.72", "2.57994, -63.6525, -6.49121, 0.72", "2.52208, -65.2477, -7.04614, 0.72", "2.52162, -65.3728, -7.09916, 0.72", "2.61903, -67.9031, -8.21718, 0.72", "2.72634, -68.947, -8.71338, 0.72", "2.74056, -69.0685, -8.77258, 0.72", "3.04151, -72.1786, -10.1737, 0.72", "3.04283, -72.3055, -10.222, 0.72", "2.85641, -74.672, -10.9186, 0.72", "2.82619, -74.8017, -10.9457, 0.72", "2.22428, -76.4889, -11.2832, 0.72", "2.10096, -76.7741, -11.3305, 0.72", "0.874385, -79.0711, -11.579, 0.72", "0.747513, -79.3093, -11.609, 0.72", "-0.202839, -80.9945, -11.8684, 0.72", "-0.304004, -81.2424, -11.9131, 0.72", "-0.726132, -82.9222, -12.2645, 0.72", "-0.735102, -83.1104, -12.3018, 0.72", "-0.479962, -84.8428, -12.626, 0.72", "-0.448764, -84.9735, -12.6461, 0.72", "0.245757, -87.1524, -12.9058, 0.72", "0.286101, -87.2812, -12.9212, 0.72", "0.828714, -89.1644, -13.2192, 0.72", "0.89078, -89.5358, -13.2957, 0.72", "0.934206, -90.5039, -13.5413, 0.72", "0.871171, -91.0421, -13.6833, 0.72", "0.618967, -91.8885, -13.921, 0.72", "0.243439, -92.8891, -14.2679, 0.72", "-0.630662, -94.7469, -14.9068, 0.72", "-0.711682, -94.9124, -14.9612, 0.72", "-1.35342, -96.2413, -15.3473, 0.72", "-1.3898, -96.3213, -15.3678, 0.72", "-2.50556, -99.2548, -15.9503, 0.6", "-3.24296, -101.537, -16.2891, 0.6", "-3.3567, -101.96, -16.3408, 0.6", "-3.78, -103.63, -16.5268, 0.6", "-3.84916, -103.892, -16.5497, 0.6", "-4.54082, -106.394, -16.677, 0.6", "-4.61617, -106.656, -16.6774, 0.6", "-5.19697, -108.655, -16.7326, 0.6", "-5.28536, -108.946, -16.7444, 0.6", "-5.77496, -110.526, -16.8369, 0.6", "-5.82801, -110.71, -16.8484, 0.6", "-6.32335, -112.528, -16.9684, 0.6", "-6.41154, -112.933, -17.0279, 0.6", "-6.74103, -114.927, -17.4179, 0.6", "-6.80137, -115.409, -17.5226, 0.6", "-6.96991, -117.266, -17.9826, 0.6", "-6.99526, -117.526, -18.0582, 0.6", "-7.38483, -121.339, -19.3044, 0.6", "-7.44141, -121.727, -19.4164, 0.6", "-7.77075, -123.433, -19.8773, 0.6", "-7.86713, -123.821, -19.9577, 0.6", "-8.4595, -125.811, -20.2384, 0.6", "-8.51011, -125.973, -20.2458, 0.6", "-9.41866, -128.692, -20.0077, 0.6", "-9.46049, -128.821, -19.9933, 0.6", "-10.0665, -130.846, -19.7092, 0.6", "-10.1625, -131.261, -19.65, 0.6", "-10.3806, -132.87, -19.4548, 0.6", "-10.3886, -133.006, -19.4449, 0.6", "-10.3953, -134.694, -19.385, 0.6", "-10.2779, -137.501, -19.3284, 0.6", "-10.064, -140.086, -19.3072, 0.6", "-9.5881, -143.748, -19.3234, 0.6", "-9.20855, -146.066, -19.3566, 0.6", "-9.18557, -146.199, -19.3592, 0.6", "-8.63331, -149.142, -19.4403, 0.48", "-8.60106, -149.332, -19.4463, 0.48", "-8.32333, -151.659, -19.5022, 0.48", "-8.30932, -152.337, -19.5423, 0.48", "-8.44779, -154.824, -19.7545, 0.48", "-8.4907, -155.204, -19.7921, 0.48", "-8.89554, -157.415, -20.0824, 0.48", "-8.92427, -157.545, -20.1107, 0.48", "-9.7015, -160.539, -20.9826, 0.48", "-9.7432, -160.716, -21.0434, 0.48", "-10.2478, -163.134, -22.0037, 0.48", "-10.3966, -163.864, -22.3044, 0.48", "-10.9076, -166.468, -23.4047, 0.48", "-10.9333, -166.593, -23.4509, 0.48", "-11.2781, -168.17, -23.957, 0.48", "-11.3075, -168.297, -23.9953, 0.48", "-12.3394, -172.593, -25.2439, 0.48", "-12.468, -173.092, -25.4151, 0.48", "-13.0957, -175.397, -26.3005, 0.48", "-13.1811, -175.677, -26.421, 0.48", "-13.6012, -176.912, -27.0386, 0.48", "-13.7192, -177.232, -27.2156, 0.48", "-15.2136, -180.814, -29.58, 0.48", "-15.2621, -180.921, -29.6481, 0.48", "-16.1758, -182.833, -30.8502, 0.48", "-16.3964, -183.288, -31.1001, 0.48", "-17.4556, -185.446, -32.1779, 0.48", "-17.7221, -186.002, -32.4302, 0.48", "-19.5203, -189.813, -33.9111, 0.48", "-19.591, -189.98, -33.9747, 0.48", "-20.1152, -191.354, -34.4923, 0.48", "-20.4414, -192.285, -34.8075, 0.48", "-20.8782, -193.687, -35.2378, 0.48", "-20.9151, -193.813, -35.2711, 0.48", "-21.5534, -196.614, -36.2305, 0.48", "-21.6541, -196.988, -36.3583, 0.48", "-21.82, -197.548, -36.5511, 0.48", "-21.864, -197.668, -36.5967, 0.48", "-22.6142, -199.39, -37.3409, 0.48", "-23.9762, -202.52, -38.8197, 0.48", "-24.6515, -204.022, -39.6138, 0.48", "-24.709, -204.176, -39.6884, 0.48", "-25.319, -206.142, -40.5774, 0.48", "-25.3591, -206.293, -40.6422, 0.48", "-25.817, -208.531, -41.5662, 0.48", "-25.8416, -208.657, -41.6105, 0.48", "-26.1929, -210.818, -42.3979, 0.48", "-26.239, -211.074, -42.476, 0.48", "-26.5325, -212.571, -42.8873, 0.48", "-26.6382, -212.945, -43.0074, 0.48", "-27.4289, -215.092, -43.8025, 0.48", "-27.5226, -215.332, -43.8943, 0.48", "-28.464, -217.485, -44.7725, 0.48", "-28.7171, -218.074, -45.0036, 0.48", "-29.5905, -220.149, -45.7685, 0.48", "-29.6406, -220.269, -45.8092, 0.48", "-29.9708, -221.007, -46.0447, 0.48" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "33.5489, 0.0946869, 4.08896, 0.48", "32.9594, 1.08031, 3.41127, 0.48", "32.385, 1.98942, 2.81969, 0.48", "31.8365, 2.87087, 2.17619, 0.48", "31.7418, 3.02493, 2.06103, 0.48", "31.1315, 4.01743, 1.31919, 0.48", "31.051, 4.14841, 1.22129, 0.48", "30.71, 4.63177, 0.845173, 0.48", "30.1, 5.5028, 0.0683847, 0.48", "29.9857, 5.67061, -0.0731387, 0.48", "24.6452, 11.2696, -6.24917, 0.48", "19.8902, 16.8783, -12.8784, 0.48", "15.2444, 22.0681, -19.9137, 0.48", "10.876, 26.7451, -27.4672, 0.48", "6.26064, 32.2314, -34.2946, 0.48", "2.21908, 36.8688, -42.0518, 0.48", "-1.07739, 41.8623, -49.9392, 0.48", "-5.121, 48.0814, -56.4956, 0.48", "-9.5439, 53.3908, -63.5851, 0.48", "-12.2772, 58.6068, -71.5435, 0.48", "-15.5168, 64.1444, -79.0836, 0.48", "-19.0782, 69.7623, -86.4164, 0.48" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "33.5489, 0.0946869, 4.08896, 0.48", "34.44, 1.49388, 4.05714, 0.48", "34.4966, 1.62265, 4.05915, 0.48", "34.8233, 2.41131, 4.06712, 0.48", "34.9482, 2.68466, 4.07501, 0.48", "35.3504, 3.49531, 4.12869, 0.48", "35.4094, 3.61316, 4.13904, 0.48", "35.9152, 4.47139, 4.31866, 0.48", "36.0757, 4.64131, 4.3561, 0.48", "36.7375, 5.1529, 4.5034, 0.48", "37.0375, 5.34994, 4.57698, 0.48", "37.2169, 5.4527, 4.62291, 0.48", "38.9387, 6.3994, 5.10257, 0.48", "40.2437, 7.08504, 5.52818, 0.48", "40.954, 7.46468, 5.77683, 0.48", "41.6654, 7.85132, 6.03116, 0.48", "42.2709, 8.19631, 6.24362, 0.48", "42.6552, 8.42355, 6.38623, 0.48", "43.5269, 9.01686, 6.78103, 0.48", "43.7797, 9.20779, 6.91023, 0.48", "44.0695, 9.42205, 7.03618, 0.48", "44.4812, 9.70719, 7.20791, 0.48", "51.8429, 14.3778, 8.3509, 0.48", "59.65, 18.2075, 9.65448, 0.48", "67.3864, 22.3795, 9.41346, 0.48", "74.7918, 26.9825, 8.27824, 0.48", "81.6606, 32.4478, 7.76272, 0.48", "87.2047, 39.2584, 8.20393, 0.48", "92.6883, 45.9569, 9.74564, 0.48" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-28.5276, -22.5172, -4.7217, 0.72", "-29.1582, -22.6193, -3.52965, 0.48", "-29.3705, -22.6813, -3.07937, 0.48", "-30.2183, -23.0016, -1.15305, 0.48", "-30.2483, -23.017, -1.08758, 0.48", "-30.6619, -23.2548, -0.180985, 0.48", "-31.0042, -23.4433, 0.538144, 0.48", "-31.3048, -23.6327, 1.24054, 0.48", "-31.3735, -23.6738, 1.38357, 0.48", "-31.8473, -23.9255, 2.12288, 0.48", "-32.2712, -24.0658, 2.64562, 0.48", "-32.8025, -24.1499, 3.15052, 0.48", "-33.1508, -24.2099, 3.3568, 0.48", "-33.9219, -24.3754, 3.61504, 0.48", "-34.1081, -24.4206, 3.66129, 0.48", "-34.7658, -24.5806, 3.8135, 0.48", "-34.9758, -24.6322, 3.85607, 0.48", "-36.3618, -24.9798, 4.14926, 0.48", "-37.9626, -25.3093, 4.57585, 0.48", "-38.0858, -25.3354, 4.61177, 0.48", "-40.0225, -25.7234, 5.22007, 0.48", "-40.7019, -25.8425, 5.45685, 0.48", "-41.0132, -25.879, 5.57684, 0.48", "-42.3089, -25.8661, 6.21116, 0.48" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.5276, -22.5172, -4.7217, 0.72", "-29.5386, -23.9966, -4.32539, 0.72", "-30.3899, -25.0543, -4.04857, 0.72", "-31.2504, -26.1201, -3.66056, 0.6", "-31.3071, -26.1978, -3.63365, 0.6", "-32.0751, -27.4061, -3.26966, 0.6", "-32.4841, -28.2706, -3.07611, 0.6", "-32.8527, -29.2096, -2.90685, 0.6", "-33.6083, -31.9178, -2.49136, 0.6", "-33.9457, -33.9973, -2.24783, 0.6", "-34.075, -35.8758, -2.09017, 0.6", "-33.9851, -39.7686, -1.90527, 0.6", "-33.9764, -39.8681, -1.9034, 0.6", "-33.7574, -41.4619, -1.91796, 0.6", "-33.4164, -43.1299, -2.00314, 0.6", "-32.8154, -45.4758, -2.12915, 0.6", "-32.1067, -47.7826, -2.26429, 0.6", "-31.6367, -49.1735, -2.34922, 0.6", "-31.5909, -49.2988, -2.35778, 0.6", "-30.5892, -51.8073, -2.48305, 0.6", "-29.8282, -53.5044, -2.54497, 0.6", "-28.7145, -55.696, -2.60427, 0.6", "-28.6774, -55.7642, -2.60508, 0.6", "-27.6825, -57.5538, -2.59991, 0.6", "-26.6074, -59.4459, -2.56555, 0.6", "-25.9396, -60.6093, -2.50599, 0.6", "-25.7995, -60.836, -2.48702, 0.6", "-25.2675, -61.6499, -2.39483, 0.6", "-25.1455, -61.8243, -2.37542, 0.6", "-24.5562, -62.5795, -2.18938, 0.6", "-24.405, -62.7515, -2.11679, 0.6", "-23.6565, -63.5578, -1.61743, 0.6", "-23.5774, -63.6492, -1.56056, 0.6", "-23.1, -64.2349, -1.18213, 0.6", "-22.1288, -65.6312, -0.31933, 0.6", "-21.6223, -66.4807, 0.202255, 0.6", "-21.5819, -66.561, 0.245718, 0.6", "-20.9166, -68.1088, 1.04376, 0.6", "-20.8774, -68.1915, 1.08368, 0.6", "-20.2733, -69.3613, 1.60034, 0.6", "-20.1143, -69.6166, 1.68646, 0.6", "-18.9809, -71.4277, 2.24705, 0.6", "-18.838, -71.6557, 2.31421, 0.6", "-18.0223, -73.1616, 2.59088, 0.6", "-17.9301, -73.4123, 2.58208, 0.6", "-17.5273, -75.0149, 2.28013, 0.6", "-17.2956, -77.1332, 1.70129, 0.6", "-17.3014, -77.3972, 1.61643, 0.6", "-17.5498, -79.8306, 0.797353, 0.6", "-18.1477, -82.5688, -0.218006, 0.6", "-18.1731, -82.6589, -0.252779, 0.6", "-18.9762, -84.8618, -1.10855, 0.6", "-19.3827, -85.8738, -1.51296, 0.6", "-19.4444, -86.0194, -1.56607, 0.6", "-20.8016, -88.9803, -2.51973, 0.6", "-20.8738, -89.1447, -2.57865, 0.6", "-21.5461, -90.7883, -3.27678, 0.6", "-21.5712, -90.8534, -3.31097, 0.6", "-21.8878, -91.783, -3.87055, 0.6", "-21.9066, -91.846, -3.9119, 0.6", "-22.3586, -93.7325, -5.40194, 0.6", "-22.6661, -95.0469, -6.54476, 0.6", "-22.7404, -95.3927, -6.86492, 0.6", "-22.9674, -96.3753, -7.77923, 0.6", "-23.0134, -96.6079, -7.97559, 0.6", "-23.326, -98.2636, -9.23201, 0.6", "-23.3767, -98.5126, -9.38914, 0.6", "-23.6283, -100.06, -10.259, 0.6", "-23.6674, -100.309, -10.3737, 0.6", "-24.0886, -102.561, -11.1662, 0.6", "-24.1617, -102.842, -11.2368, 0.6", "-24.5739, -104.144, -11.4404, 0.6", "-24.6407, -104.32, -11.4611, 0.6", "-24.9665, -105.026, -11.5113, 0.6", "-25.741, -106.438, -11.5824, 0.48", "-26.684, -107.876, -11.6397, 0.48", "-26.7593, -107.986, -11.6437, 0.48", "-27.6619, -109.262, -11.6862, 0.48", "-27.7698, -109.417, -11.691, 0.48", "-29.1103, -111.374, -11.7474, 0.48", "-29.2616, -111.62, -11.7542, 0.48", "-30.0053, -112.945, -11.7951, 0.48", "-30.0886, -113.115, -11.801, 0.48", "-30.3883, -113.87, -11.8318, 0.48", "-30.4213, -113.999, -11.8299, 0.48", "-30.5001, -115.228, -11.7314, 0.48", "-30.4983, -115.34, -11.6583, 0.48", "-30.4934, -115.848, -11.189, 0.48", "-30.4954, -115.941, -11.0933, 0.48", "-30.5777, -117.138, -10.026, 0.48", "-30.5841, -117.198, -9.97692, 0.48", "-31.3852, -121.336, -7.32065, 0.48", "-31.6626, -122.524, -6.69421, 0.48", "-31.6971, -122.645, -6.64955, 0.48", "-32.5737, -125.472, -5.95719, 0.48", "-32.618, -125.62, -5.94158, 0.48", "-33.5666, -128.915, -5.93114, 0.48", "-33.5889, -128.989, -5.94025, 0.48", "-34.4942, -131.826, -6.24521, 0.48", "-34.5863, -132.088, -6.26667, 0.48", "-35.2828, -133.883, -6.34775, 0.48", "-35.3754, -134.133, -6.35976, 0.48", "-35.7592, -135.207, -6.41622, 0.48", "-36.246, -136.637, -6.49178, 0.48", "-36.8913, -138.58, -6.59573, 0.48", "-37.6736, -140.961, -6.81858, 0.48", "-38.2757, -142.719, -7.06215, 0.48", "-38.3158, -142.845, -7.08404, 0.48", "-38.7368, -144.374, -7.42758, 0.48", "-38.759, -144.468, -7.45387, 0.48", "-39.2221, -146.793, -8.26234, 0.48", "-39.5051, -148.398, -8.91501, 0.48", "-39.5172, -148.468, -8.94468, 0.48", "-39.7368, -149.925, -9.55344, 0.48", "-39.8132, -150.381, -9.74066, 0.48", "-40.042, -151.793, -10.2642, 0.48", "-40.0906, -152.085, -10.3499, 0.48", "-40.3212, -153.383, -10.6965, 0.48", "-40.3448, -153.478, -10.7181, 0.48", "-41.0477, -155.599, -11.1165, 0.48", "-41.0954, -155.722, -11.1376, 0.48", "-41.8399, -157.342, -11.3741, 0.48", "-41.8974, -157.461, -11.39, 0.48", "-42.5146, -158.849, -11.5488, 0.48", "-42.9483, -159.962, -11.6554, 0.48", "-42.992, -160.11, -11.6664, 0.48", "-43.4269, -161.657, -11.7782, 0.48", "-43.5344, -162.042, -11.8045, 0.48", "-43.9756, -163.603, -11.9033, 0.48", "-44.0238, -163.786, -11.9139, 0.48", "-44.303, -164.838, -11.9684, 0.48", "-44.7328, -166.492, -12.0567, 0.36", "-45.1585, -168.185, -12.1292, 0.36", "-45.2301, -168.475, -12.1388, 0.36", "-45.4953, -169.53, -12.1525, 0.36", "-45.5225, -169.661, -12.1447, 0.36", "-45.7635, -171.251, -11.8947, 0.36", "-45.7965, -171.614, -11.797, 0.36", "-45.9022, -172.779, -11.3696, 0.36", "-45.9598, -173.057, -11.2502, 0.36", "-46.5406, -174.673, -10.4421, 0.36", "-46.8095, -175.18, -10.1812, 0.36", "-47.5011, -176.162, -9.71555, 0.36", "-47.5763, -176.265, -9.67646, 0.36", "-48.4906, -177.558, -9.29545, 0.36", "-48.8123, -178.056, -9.19201, 0.36", "-49.4098, -179.128, -9.04199, 0.36", "-50.1815, -180.812, -8.83757, 0.36", "-50.4522, -181.667, -8.81887, 0.36", "-50.723, -182.997, -8.89015, 0.36", "-50.755, -183.315, -8.92484, 0.36", "-50.7959, -184.576, -9.14814, 0.36", "-50.7922, -184.706, -9.1798, 0.36", "-50.5701, -187.174, -10.0095, 0.36", "-50.4171, -188.67, -10.6263, 0.36", "-50.3971, -188.79, -10.6833, 0.36", "-50.1511, -189.873, -11.2317, 0.36", "-50.0937, -190.034, -11.3125, 0.36", "-49.347, -191.013, -11.5811, 0.36", "-49.196, -191.103, -11.5543, 0.36", "-48.2896, -191.484, -11.3303, 0.36", "-48.2193, -191.509, -11.3083, 0.36", "-46.7384, -191.895, -10.7092, 0.36", "-44.6024, -192.363, -9.72817, 0.36", "-44.2927, -192.413, -9.56193, 0.36" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-31.742, -15.3636, -28.8164, 0.6", "-32.0804, -15.3164, -29.1722, 0.6", "-32.1295, -15.313, -29.2486, 0.6", "-32.8756, -15.2158, -30.4098, 0.6", "-33.0764, -15.1852, -30.725, 0.6", "-33.7072, -15.0568, -31.6857, 0.6", "-35.6855, -14.5163, -34.6285, 0.6", "-37.8242, -13.8746, -37.8552, 0.48", "-38.4898, -13.6396, -38.9008, 0.48", "-38.5795, -13.6034, -39.0548, 0.48", "-39.1174, -13.3393, -40.0492, 0.48", "-39.5173, -13.0709, -40.9259, 0.48", "-39.7023, -12.8781, -41.4273, 0.48", "-40.3649, -12.1507, -43.6157, 0.48", "-40.7465, -11.7439, -45.1966, 0.48", "-40.824, -11.667, -45.5554, 0.48", "-41.0961, -11.4187, -46.8869, 0.48", "-41.1142, -11.4037, -46.9747, 0.48", "-41.7177, -10.8601, -49.5859, 0.48", "-41.9609, -10.6212, -50.5743, 0.48", "-42.0951, -10.4917, -51.0226, 0.48", "-42.4187, -10.2029, -51.9088, 0.48", "-42.5705, -10.0853, -52.2309, 0.48", "-43.0284, -9.75621, -53.0584, 0.48", "-43.2423, -9.6384, -53.343, 0.48", "-43.9423, -9.32065, -54.2326, 0.48", "-44.4068, -9.15454, -54.8227, 0.48", "-45.0554, -8.98462, -55.6904, 0.48", "-45.2489, -8.9472, -56.0095, 0.48", "-46.0408, -8.89971, -57.912, 0.48", "-46.1283, -8.89427, -58.1822, 0.48", "-46.4145, -8.88504, -59.3117, 0.48", "-46.5259, -8.86958, -59.8802, 0.48", "-47.0302, -8.73976, -63.1152, 0.48", "-47.5125, -8.53276, -66.5978, 0.48", "-47.6508, -8.4381, -67.8445, 0.48", "-47.7213, -8.38515, -68.4173, 0.48", "-48.0663, -8.0891, -71.1247, 0.48", "-48.0806, -8.07838, -71.2139, 0.48", "-48.2153, -7.99163, -71.8352, 0.48", "-48.2557, -7.97391, -71.9647, 0.48", "-48.7231, -7.91831, -73.2957, 0.48", "-48.9706, -7.97195, -74.0137, 0.48", "-49.304, -8.18612, -75.0622, 0.48", "-49.3506, -8.23471, -75.2705, 0.48", "-49.399, -8.34267, -75.6482, 0.48", "-49.4824, -8.64421, -76.6337, 0.48", "-49.5768, -9.23284, -78.4887, 0.48", "-49.5936, -9.37964, -78.9544, 0.48", "-49.6826, -10.3183, -81.8523, 0.48", "-49.769, -11.2987, -84.8695, 0.48", "-49.7746, -11.3402, -84.9998, 0.48", "-49.9184, -12.0722, -87.2875, 0.48", "-49.9672, -12.2099, -87.7299, 0.48", "-50.0806, -12.4091, -88.3847, 0.48", "-50.2953, -12.5541, -89.0031, 0.48", "-50.9476, -12.6433, -90.1558, 0.48", "-51.0659, -12.6322, -90.3222, 0.48", "-51.8983, -12.4143, -91.2138, 0.48", "-51.9563, -12.3965, -91.2653, 0.48", "-53.0541, -12.0008, -92.3333, 0.48", "-53.4941, -11.832, -92.7982, 0.48", "-54.4569, -11.4525, -93.9043, 0.48", "-54.8011, -11.3171, -94.3077, 0.48", "-56.1748, -10.7776, -95.8672, 0.48", "-58.157, -10.0206, -98.0255, 0.48", "-59.3702, -9.50241, -99.2574, 0.48", "-59.7097, -9.34523, -99.5838, 0.48", "-60.9818, -8.69763, -100.716, 0.48", "-62.2148, -8.00598, -101.714, 0.48", "-62.425, -7.87575, -101.853, 0.48", "-64.7535, -6.43282, -102.856, 0.48", "-64.9725, -6.29229, -102.941, 0.48", "-66.4422, -5.32855, -103.507, 0.48", "-66.6847, -5.16534, -103.597, 0.48", "-67.5544, -4.57559, -103.917, 0.48", "-69.2482, -3.36576, -104.507, 0.48", "-72.0027, -1.33466, -105.44, 0.48", "-72.1023, -1.24761, -105.475, 0.48", "-74.0935, 0.713618, -106.196, 0.48", "-74.3573, 0.979822, -106.293, 0.48", "-76.1346, 2.84129, -106.981, 0.48", "-76.2251, 2.9375, -107.016, 0.48", "-78.4752, 5.2626, -107.831, 0.48", "-78.756, 5.53189, -107.962, 0.48", "-80.6748, 7.23458, -109.025, 0.48", "-81.0842, 7.57015, -109.272, 0.48", "-82.4876, 8.61604, -110.197, 0.48", "-82.5836, 8.68695, -110.264, 0.48", "-85.3938, 10.7053, -112.352, 0.48", "-85.5902, 10.8798, -112.509, 0.48", "-86.945, 12.4364, -113.827, 0.48", "-87.2064, 12.817, -114.12, 0.48", "-87.9918, 14.26, -115.18, 0.48", "-88.0424, 14.3865, -115.272, 0.48", "-88.4524, 16.336, -116.571, 0.48", "-88.7251, 18.581, -118.067, 0.48", "-88.8193, 20.4074, -119.281, 0.48", "-88.8203, 20.4833, -119.331, 0.48", "-88.7017, 23.0819, -121.069, 0.48", "-88.5868, 24.7662, -122.218, 0.48", "-88.5564, 24.9951, -122.384, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-31.742, -15.3636, -28.8164, 0.6", "-32.5026, -16.4686, -29.8111, 0.6", "-32.5425, -16.5061, -29.859, 0.6", "-33.3592, -17.0658, -30.6842, 0.6", "-33.4167, -17.0984, -30.7324, 0.6", "-34.2533, -17.533, -31.4033, 0.6", "-34.3888, -17.6012, -31.5053, 0.6", "-35.4838, -18.0608, -32.2389, 0.6", "-36.0712, -18.3504, -32.6561, 0.6", "-36.6543, -18.7141, -33.1286, 0.6", "-36.8988, -18.9048, -33.3518, 0.6", "-37.9124, -19.782, -34.4023, 0.6", "-38.1044, -19.9243, -34.6086, 0.6", "-39.0505, -20.5055, -35.6701, 0.6", "-40.0234, -21.0054, -36.8138, 0.6", "-40.4374, -21.1747, -37.282, 0.6", "-41.5052, -21.5403, -38.4796, 0.6", "-42.8005, -21.8506, -39.9094, 0.6", "-43.7367, -21.9878, -40.8607, 0.6", "-43.9374, -21.9961, -41.0487, 0.6", "-44.7118, -21.9802, -41.7449, 0.6", "-45.8743, -21.9691, -42.7877, 0.6", "-46.2435, -21.9741, -43.1044, 0.6", "-46.7699, -22.0094, -43.5532, 0.6", "-46.9568, -22.0175, -43.7101, 0.6", "-48.2001, -22.1024, -44.7981, 0.6", "-48.3598, -22.118, -44.9469, 0.6", "-49.3313, -22.2875, -45.8263, 0.6", "-50.5295, -22.6522, -46.9954, 0.6", "-50.7187, -22.7396, -47.1985, 0.6", "-51.4005, -23.1759, -47.9811, 0.6", "-51.635, -23.3955, -48.2906, 0.6", "-51.9489, -23.762, -48.7845, 0.6", "-52.1186, -24.0093, -49.0945, 0.6", "-52.448, -24.5111, -49.7042, 0.6", "-52.8128, -25.0494, -50.3571, 0.6", "-53.2388, -25.7284, -51.1268, 0.6", "-53.3613, -25.9434, -51.3684, 0.6", "-53.6989, -26.7035, -52.1716, 0.6", "-54.2728, -28.4044, -53.7941, 0.6", "-54.295, -28.524, -53.8901, 0.6", "-54.3611, -29.6418, -54.6739, 0.6", "-54.2963, -30.3879, -55.137, 0.6", "-54.0565, -31.5814, -55.8352, 0.6", "-53.9679, -31.8629, -55.9929, 0.6", "-53.3783, -33.3794, -56.7835, 0.6", "-53.2998, -33.5925, -56.9005, 0.6", "-52.9001, -34.7047, -57.5514, 0.6", "-52.8264, -34.9699, -57.6923, 0.6", "-52.5884, -36.1497, -58.3613, 0.6", "-52.5702, -36.31, -58.4606, 0.6", "-52.5567, -37.1446, -59.021, 0.6", "-52.5878, -37.3259, -59.1938, 0.6", "-53.0107, -38.4784, -60.462, 0.6", "-53.158, -38.7966, -60.8438, 0.6", "-53.6047, -39.6346, -62.0113, 0.6", "-53.648, -39.71, -62.1279, 0.6", "-54.8041, -41.6468, -65.4347, 0.6", "-55.1336, -42.1884, -66.4223, 0.6", "-55.1514, -42.2167, -66.4765, 0.6", "-55.6582, -43.1115, -68.0472, 0.6", "-55.732, -43.2638, -68.284, 0.6", "-55.9458, -43.8188, -69.0312, 0.6", "-55.9646, -43.8964, -69.1063, 0.6", "-56.2293, -44.7162, -69.7894, 0.6", "-56.3459, -45.0127, -70.0118, 0.6", "-57.0386, -46.3615, -70.9102, 0.6", "-57.1306, -46.5215, -71.0157, 0.6", "-58.2451, -48.2426, -72.1132, 0.6", "-59.3717, -49.8739, -73.1499, 0.6", "-59.5846, -50.1785, -73.347, 0.6", "-60.5084, -51.6259, -74.2157, 0.6", "-60.6049, -51.8096, -74.3084, 0.6", "-60.9602, -52.7637, -74.6813, 0.6", "-60.9938, -52.9001, -74.7189, 0.6", "-61.3038, -54.4227, -75.0549, 0.6", "-61.8506, -57.3232, -75.6002, 0.6", "-62.1988, -59.4638, -75.9705, 0.6", "-62.6715, -62.4644, -76.4639, 0.48", "-63.0745, -65.2162, -76.7804, 0.48", "-63.3642, -67.1671, -76.9052, 0.48", "-63.3811, -67.2764, -76.9048, 0.48", "-63.8072, -70.0568, -76.7063, 0.48", "-63.8253, -70.1634, -76.6888, 0.48", "-64.225, -72.6006, -75.849, 0.48", "-64.2437, -72.7444, -75.773, 0.48", "-64.363, -73.9864, -74.9956, 0.48", "-64.3873, -74.2268, -74.8334, 0.48", "-64.6104, -76.5423, -73.185, 0.48", "-64.7777, -78.3895, -71.9783, 0.48", "-64.8395, -78.9335, -71.7054, 0.48", "-65.015, -80.3384, -71.0843, 0.48", "-65.0646, -80.643, -70.9717, 0.48", "-65.4539, -82.1995, -70.5003, 0.48", "-65.4873, -82.3011, -70.4767, 0.48", "-67.1207, -86.5468, -69.5727, 0.48", "-67.2115, -86.7696, -69.5269, 0.48", "-68.0964, -88.7623, -69.1029, 0.48", "-69.4508, -91.6029, -68.4796, 0.48", "-70.0859, -92.7937, -68.2065, 0.48", "-70.6011, -93.694, -67.9885, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "-6.37578, 163.882, -18.6513, 0.48", "-5.74107, 164.99, -19.2153, 0.48", "-5.06762, 166.038, -19.8278, 0.48", "-4.89686, 166.303, -19.9844, 0.48", "-4.3368, 167.168, -20.4999, 0.48", "-4.01165, 167.67, -20.7998, 0.48", "-3.06536, 169.056, -21.6787, 0.48", "-2.64037, 169.608, -22.081, 0.48", "-1.39724, 171.05, -23.2686, 0.48", "-0.549752, 171.991, -24.0809, 0.48", "-0.449678, 172.098, -24.177, 0.48", "0.544006, 173.144, -25.133, 0.48", "0.832946, 173.439, -25.4116, 0.48", "1.67167, 174.241, -26.2236, 0.48", "1.76593, 174.33, -26.3328, 0.48", "2.67986, 175.237, -27.5394, 0.48", "2.76793, 175.325, -27.6637, 0.48", "2.9512, 175.516, -27.9408, 0.48", "3.45443, 176.032, -28.719, 0.48", "4.78142, 177.199, -30.7767, 0.48", "5.08816, 177.449, -31.322, 0.48", "5.90557, 178.061, -32.9249, 0.48", "5.95791, 178.102, -33.0297, 0.48", "6.28413, 178.385, -33.6914, 0.48", "6.85603, 179.033, -34.9186, 0.48", "7.74781, 180.389, -36.9902, 0.48", "7.84888, 180.591, -37.2589, 0.48", "8.27274, 181.661, -38.5017, 0.48", "8.52224, 182.295, -39.1635, 0.48", "9.03294, 183.663, -40.4008, 0.48", "9.18321, 184.07, -40.7067, 0.48", "9.85045, 185.677, -41.7815, 0.48", "10.1058, 186.217, -42.1657, 0.48", "10.871, 187.649, -43.2291, 0.48", "11.2705, 188.346, -43.7237, 0.48", "12.1104, 189.708, -44.639, 0.48", "12.1908, 189.842, -44.7199, 0.48", "12.9651, 191.224, -45.4581, 0.48", "13.4134, 191.997, -45.9017, 0.48", "14.2919, 193.473, -46.7965, 0.48", "14.4227, 193.678, -46.9309, 0.48", "14.729, 194.134, -47.247, 0.48", "14.7921, 194.219, -47.3121, 0.48", "16.6163, 196.487, -49.1922, 0.48", "17.0297, 196.899, -49.6214, 0.48", "18.7844, 198.326, -51.4514, 0.48", "19.0094, 198.495, -51.6958, 0.48", "19.9993, 199.174, -52.8033, 0.48", "20.1512, 199.27, -52.9767, 0.48", "21.0762, 199.782, -54.0568, 0.48", "21.1836, 199.839, -54.1837, 0.48", "22.3906, 200.462, -55.6289, 0.48", "22.6059, 200.577, -55.8821, 0.48", "24.1713, 201.274, -57.73, 0.48", "24.5713, 201.397, -58.1983, 0.48", "25.5088, 201.593, -59.286, 0.48", "25.8248, 201.623, -59.6684, 0.48", "26.9173, 201.601, -61.0275, 0.48", "28.4785, 201.44, -63.0901, 0.48", "29.8402, 201.161, -65.0157, 0.48", "30.0368, 201.112, -65.3286, 0.48", "30.891, 200.865, -66.8121, 0.48", "30.9331, 200.851, -66.8818, 0.48", "31.7297, 200.554, -68.16, 0.48", "31.7763, 200.531, -68.2238, 0.48", "33.259, 199.538, -69.9232, 0.48", "33.5451, 199.353, -70.2032, 0.48", "35.2214, 198.332, -71.6424, 0.48", "35.5025, 198.189, -71.8768, 0.48", "37.4669, 197.366, -73.4536, 0.48", "37.8882, 197.239, -73.7927, 0.48", "39.8315, 197.002, -75.7049, 0.48", "40.1117, 197.022, -76.0538, 0.48", "41.0938, 197.32, -77.5207, 0.48", "41.4202, 197.465, -78.0375, 0.48", "42.1154, 197.865, -79.2052, 0.48", "43.7609, 198.893, -82.1099, 0.36", "43.9174, 199.0, -82.4057, 0.36", "44.6596, 199.477, -83.7844, 0.36", "45.0123, 199.692, -84.4567, 0.36", "45.5243, 199.977, -85.4793, 0.36", "46.1737, 200.305, -86.8291, 0.36", "46.2972, 200.355, -87.0728, 0.36", "46.9424, 200.644, -88.5232, 0.36", "47.1225, 200.742, -88.9967, 0.36", "47.8283, 201.096, -90.7066, 0.36", "47.9875, 201.163, -91.063, 0.36", "48.194, 201.209, -91.4229, 0.36", "48.7212, 201.297, -92.2139, 0.36", "49.1027, 201.313, -92.7194, 0.36", "50.4596, 201.308, -94.3448, 0.36", "50.7045, 201.3, -94.6257, 0.36", "52.4811, 201.191, -96.7173, 0.36", "52.8811, 201.155, -97.2058, 0.36", "54.2353, 201.003, -98.9302, 0.36", "54.4734, 200.982, -99.2421, 0.36", "55.4889, 200.877, -100.63, 0.36", "55.8195, 200.843, -101.098, 0.36", "56.5045, 200.783, -102.146, 0.36", "56.7468, 200.791, -102.522, 0.36", "57.4262, 201.019, -103.572, 0.36" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "-6.37578, 163.882, -18.6513, 0.48", "-6.55321, 164.944, -18.7037, 0.36", "-6.57423, 165.093, -18.7193, 0.36", "-6.73063, 166.365, -18.8801, 0.36", "-6.74701, 166.522, -18.9002, 0.36", "-6.87417, 167.651, -19.0644, 0.36", "-6.88299, 167.725, -19.0759, 0.36", "-7.01993, 169.014, -19.348, 0.36", "-7.0458, 169.245, -19.402, 0.36", "-7.2032, 170.566, -19.7446, 0.36", "-7.27452, 171.358, -19.9839, 0.36", "-7.30738, 171.884, -20.1645, 0.36", "-7.32333, 172.306, -20.3385, 0.36", "-7.33165, 173.03, -20.6862, 0.36", "-7.32998, 173.114, -20.7292, 0.36", "-7.22199, 174.622, -21.5479, 0.36", "-7.19736, 174.94, -21.7404, 0.36", "-7.13379, 175.907, -22.3623, 0.36", "-7.12359, 176.236, -22.569, 0.36", "-7.13455, 176.761, -22.9008, 0.36", "-7.18622, 177.316, -23.2379, 0.36", "-7.46885, 178.775, -24.1045, 0.36", "-7.50208, 178.919, -24.187, 0.36", "-7.69282, 179.602, -24.5688, 0.36", "-7.7556, 179.875, -24.7087, 0.36", "-7.86787, 180.496, -24.9922, 0.36", "-7.91081, 180.828, -25.1084, 0.36", "-7.97948, 181.644, -25.3121, 0.36", "-7.98693, 181.717, -25.33, 0.36", "-8.14124, 183.132, -25.6629, 0.36", "-8.1909, 183.517, -25.7348, 0.36", "-8.38519, 184.778, -25.9192, 0.36", "-8.4868, 185.249, -25.9642, 0.36", "-8.70845, 186.012, -25.9961, 0.36", "-8.76722, 186.178, -25.9941, 0.36", "-9.25646, 187.315, -25.9119, 0.36", "-9.39175, 187.6, -25.8982, 0.36", "-9.7941, 188.413, -25.8749, 0.36", "-10.0311, 188.903, -25.87, 0.36", "-10.2217, 189.3, -25.8724, 0.36", "-10.3781, 189.604, -25.891, 0.36", "-11.1004, 190.821, -26.0926, 0.36", "-11.278, 191.141, -26.1835, 0.36", "-11.642, 191.824, -26.4411, 0.36", "-11.7571, 192.051, -26.5373, 0.36", "-12.1273, 192.82, -26.8797, 0.36", "-12.3869, 193.334, -27.1285, 0.36", "-13.0589, 194.643, -27.7939, 0.36", "-13.1339, 194.773, -27.8721, 0.36", "-13.2604, 195.002, -28.0221, 0.36", "-13.2983, 195.075, -28.0694, 0.36", "-13.7361, 195.932, -28.6208, 0.36", "-14.0588, 196.51, -29.0068, 0.36", "-14.2062, 196.744, -29.1723, 0.36", "-14.728, 197.616, -29.8039, 0.36", "-14.812, 197.771, -29.9232, 0.36", "-15.1359, 198.555, -30.5197, 0.36", "-15.2866, 199.088, -30.905, 0.36", "-15.3967, 199.6, -31.2756, 0.36", "-15.4455, 199.841, -31.4501, 0.36", "-15.5506, 200.338, -31.8129, 0.36", "-15.7189, 201.234, -32.4181, 0.36", "-15.7712, 201.517, -32.6021, 0.36", "-15.8193, 201.732, -32.7421, 0.36", "-15.9521, 202.153, -33.0562, 0.36", "-16.161, 202.683, -33.4837, 0.36", "-16.2706, 202.929, -33.6962, 0.36", "-16.608, 203.756, -34.476, 0.36", "-16.8001, 204.32, -35.0556, 0.36", "-16.9782, 204.925, -35.7132, 0.36", "-17.0901, 205.336, -36.166, 0.36", "-17.1393, 205.517, -36.3709, 0.36", "-17.3013, 206.086, -36.9961, 0.36", "-17.5807, 206.99, -37.9715, 0.36", "-17.643, 207.18, -38.1649, 0.36", "-17.9032, 207.951, -38.8883, 0.36", "-17.9899, 208.137, -39.0721, 0.36", "-18.2629, 208.569, -39.5324, 0.36", "-18.4159, 208.727, -39.7241, 0.36", "-18.6575, 208.933, -39.9919, 0.36", "-18.7055, 208.964, -40.0412, 0.36", "-19.7865, 209.512, -41.1066, 0.36", "-20.0292, 209.63, -41.341, 0.36", "-21.3504, 210.29, -42.6467, 0.36", "-21.4248, 210.331, -42.7213, 0.36", "-22.261, 210.833, -43.5865, 0.36", "-22.3056, 210.867, -43.6367, 0.36", "-22.6584, 211.249, -44.0905, 0.36", "-22.9163, 211.631, -44.5294, 0.36", "-23.1044, 212.101, -45.0683, 0.36", "-23.1667, 212.32, -45.3337, 0.36", "-23.2793, 212.967, -46.1672, 0.36", "-23.3198, 213.069, -46.3578, 0.36", "-23.503, 213.337, -47.0747, 0.36", "-23.5922, 213.412, -47.3576, 0.36", "-23.7183, 213.48, -47.7149, 0.36", "-23.9109, 213.581, -48.1876, 0.36", "-24.6717, 213.977, -49.8483, 0.36", "-24.7166, 214.01, -49.9394, 0.36", "-25.0796, 214.358, -50.6129, 0.36", "-25.3051, 214.663, -51.0475, 0.36", "-25.6818, 215.411, -51.8493, 0.36", "-25.7077, 215.539, -51.9452, 0.36", "-25.6994, 216.389, -52.3918, 0.36", "-25.6576, 216.728, -52.5625, 0.36", "-25.5095, 217.347, -52.8664, 0.36", "-25.4795, 217.485, -52.9592, 0.36", "-25.5066, 217.846, -53.4876, 0.36", "-25.5273, 217.888, -53.5836, 0.36", "-25.709, 218.081, -54.1443, 0.36", "-25.8199, 218.167, -54.4246, 0.36", "-26.5775, 218.569, -56.0151, 0.36", "-27.5056, 218.963, -57.7905, 0.36", "-27.5537, 218.98, -57.8769, 0.36", "-27.8664, 219.082, -58.4147, 0.36", "-27.922, 219.099, -58.5041, 0.36", "-28.7634, 219.356, -59.8356, 0.36", "-28.9078, 219.402, -60.0566, 0.36", "-29.0567, 219.454, -60.2784, 0.36", "-29.4227, 219.591, -60.8389, 0.36", "-30.4008, 219.964, -62.3798, 0.36", "-30.766, 220.152, -62.9875, 0.36", "-31.3511, 220.581, -64.0472, 0.36", "-31.3929, 220.628, -64.1331, 0.36", "-31.5839, 220.966, -64.5983, 0.36", "-31.6029, 221.051, -64.6604, 0.36", "-31.6715, 222.036, -65.0537, 0.36", "-31.7025, 222.5, -65.1864, 0.36", "-31.8063, 223.712, -65.4496, 0.36", "-31.8401, 223.932, -65.4932, 0.36", "-32.2898, 225.723, -65.8235, 0.36", "-32.3412, 225.869, -65.8478, 0.36", "-32.6284, 226.462, -65.9232, 0.36", "-32.8012, 226.707, -65.97, 0.36", "-33.1134, 227.032, -66.0638, 0.36", "-33.4481, 227.333, -66.1817, 0.36", "-33.7871, 227.618, -66.3184, 0.36", "-33.864, 227.686, -66.3492, 0.36", "-35.0066, 228.673, -66.7795, 0.36", "-35.1025, 228.755, -66.8149, 0.36", "-35.7986, 229.328, -67.0778, 0.36", "-37.1969, 230.434, -67.6139, 0.36", "-37.3929, 230.581, -67.6915, 0.36", "-38.1773, 231.146, -68.0087, 0.36", "-38.3618, 231.27, -68.0957, 0.36", "-38.7432, 231.51, -68.311, 0.36", "-39.208, 231.783, -68.6409, 0.36", "-39.5561, 231.98, -68.9505, 0.36", "-39.6194, 232.034, -69.0176, 0.36", "-40.3203, 232.902, -69.9579, 0.36", "-40.4387, 233.151, -70.1521, 0.36", "-40.5645, 233.572, -70.4103, 0.36", "-40.5784, 233.639, -70.4426, 0.36", "-40.8306, 235.061, -71.0386, 0.36", "-40.8547, 235.219, -71.0927, 0.36", "-41.0146, 236.542, -71.4662, 0.36", "-41.0627, 236.911, -71.5693, 0.36", "-41.26, 238.324, -71.9661, 0.36", "-41.291, 238.539, -72.0285, 0.36", "-41.5777, 240.475, -72.5937, 0.36", "-41.6308, 240.802, -72.7123, 0.36", "-41.7821, 241.807, -73.1241, 0.36", "-41.7912, 241.876, -73.1528, 0.36", "-41.8544, 242.441, -73.3975, 0.36", "-41.944, 243.267, -73.7737, 0.36", "-42.2043, 245.44, -74.922, 0.36", "-42.3207, 246.396, -75.4516, 0.36" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "5.17235, 148.137, -10.4191, 0.84", "6.71727, 149.216, -10.1683, 0.48", "6.87311, 149.333, -10.1279, 0.48", "7.97675, 150.219, -9.79175, 0.48", "9.61506, 151.542, -9.16041, 0.48", "11.9899, 153.252, -8.11402, 0.48", "13.0885, 153.988, -7.58319, 0.48", "13.4633, 154.242, -7.35479, 0.48", "14.201, 154.744, -6.84924, 0.48", "14.9641, 155.275, -6.22443, 0.48", "16.0878, 156.047, -5.24107, 0.48", "16.3947, 156.243, -5.02807, 0.48", "17.5917, 156.932, -4.22059, 0.48", "18.0907, 157.204, -3.91741, 0.48", "19.371, 157.897, -3.20345, 0.48", "20.1898, 158.449, -2.80621, 0.48", "21.1366, 159.195, -2.3848, 0.48", "21.7076, 159.658, -2.18084, 0.48", "22.5198, 160.318, -1.95144, 0.48", "23.007, 160.726, -1.86446, 0.48", "24.9956, 162.454, -1.73267, 0.48", "25.433, 162.852, -1.70462, 0.48", "27.3196, 164.629, -1.55171, 0.48", "27.9112, 165.192, -1.47906, 0.48", "29.377, 166.54, -1.27837, 0.48", "30.0613, 167.098, -1.1921, 0.48", "32.1656, 168.599, -0.863517, 0.48", "32.3152, 168.707, -0.830427, 0.48", "33.8802, 169.833, -0.351095, 0.48", "35.1395, 170.792, 0.0625715, 0.48", "36.5367, 171.895, 0.549697, 0.48", "37.258, 172.438, 0.741904, 0.48", "38.7242, 173.514, 1.00041, 0.48", "38.9551, 173.686, 1.0275, 0.48", "42.141, 176.102, 1.24699, 0.48", "42.2972, 176.225, 1.25352, 0.48", "45.3816, 178.708, 1.26998, 0.48", "45.8612, 179.063, 1.27651, 0.48", "48.2456, 180.691, 1.3404, 0.48", "48.5751, 180.913, 1.36216, 0.48", "49.2095, 181.329, 1.4442, 0.48", "49.322, 181.41, 1.46879, 0.48", "51.7019, 183.342, 2.2773, 0.48", "52.0586, 183.674, 2.41802, 0.48", "53.1462, 184.814, 2.90768, 0.48", "53.3524, 185.045, 2.99546, 0.48", "55.4946, 187.575, 3.84353, 0.48", "55.8168, 187.961, 3.94942, 0.48", "57.4332, 189.973, 4.34436, 0.48", "57.894, 190.525, 4.46254, 0.48", "58.9841, 191.818, 4.75278, 0.48", "59.2531, 192.163, 4.83162, 0.48", "59.9823, 193.211, 5.07899, 0.48", "60.1588, 193.464, 5.14341, 0.48", "61.3085, 195.084, 5.60512, 0.48", "61.8821, 195.853, 5.84302, 0.48", "62.6931, 196.937, 6.20551, 0.48", "63.2162, 197.586, 6.35022, 0.48", "64.4365, 198.973, 6.47566, 0.48", "64.6241, 199.141, 6.45174, 0.48", "65.9937, 200.072, 6.00648, 0.48", "66.1544, 200.167, 5.9366, 0.48", "68.2993, 201.354, 4.72853, 0.48", "68.6153, 201.54, 4.52116, 0.48", "69.7058, 202.265, 3.74129, 0.48", "70.1849, 202.649, 3.41501, 0.48", "71.1252, 203.516, 2.80363, 0.48", "71.9935, 204.318, 2.32851, 0.48", "73.0109, 205.275, 1.8706, 0.48", "73.7869, 205.968, 1.52224, 0.48", "75.4361, 207.409, 0.765931, 0.48", "75.5771, 207.535, 0.702853, 0.48", "76.734, 208.572, 0.286778, 0.48", "77.0265, 208.831, 0.213623, 0.48", "78.7492, 210.269, -0.077889, 0.48", "79.3098, 210.679, -0.190348, 0.48", "80.6747, 211.564, -0.522522, 0.48", "81.8927, 212.31, -0.871249, 0.48", "82.6061, 212.733, -1.09304, 0.48", "83.3233, 213.122, -1.31395, 0.48", "85.3336, 214.121, -1.96822, 0.48", "85.6654, 214.286, -2.111, 0.48", "87.0235, 214.984, -2.80518, 0.48", "87.2661, 215.127, -2.9451, 0.48", "89.7159, 216.759, -4.38873, 0.48", "89.7945, 216.815, -4.42991, 0.48", "91.5472, 218.145, -5.16044, 0.48", "91.8941, 218.396, -5.28097, 0.48", "92.527, 218.841, -5.46729, 0.48", "93.8498, 219.729, -5.79573, 0.48", "95.4163, 220.786, -6.06341, 0.48", "95.9665, 221.16, -6.10007, 0.48", "96.9971, 221.904, -6.0262, 0.48", "97.7003, 222.475, -5.95163, 0.48", "97.8031, 222.568, -5.92908, 0.48", "98.8233, 223.631, -5.5647, 0.48", "99.5641, 224.405, -5.24412, 0.48", "100.495, 225.356, -4.84851, 0.48", "100.857, 225.683, -4.70727, 0.48", "102.166, 226.738, -4.20551, 0.48", "102.395, 226.901, -4.12637, 0.48", "104.801, 228.471, -3.30725, 0.48", "105.053, 228.638, -3.21994, 0.48", "107.496, 230.264, -2.39881, 0.48", "107.656, 230.371, -2.34966, 0.48", "110.765, 232.503, -1.50248, 0.48", "111.546, 233.076, -1.27758, 0.48", "113.386, 234.524, -0.708303, 0.48", "114.295, 235.35, -0.378636, 0.48", "115.446, 236.576, 0.122497, 0.48", "115.564, 236.725, 0.180855, 0.48", "117.273, 239.358, 1.20179, 0.48", "117.527, 239.811, 1.36659, 0.48", "118.813, 242.455, 2.30061, 0.48", "119.05, 243.012, 2.50068, 0.48", "119.818, 245.109, 3.26774, 0.48", "119.964, 245.558, 3.42992, 0.48", "120.561, 247.785, 4.19965, 0.48", "120.78, 248.795, 4.54526, 0.48", "120.95, 249.831, 4.90353, 0.48", "121.078, 250.771, 5.22773, 0.48", "121.171, 251.79, 5.59665, 0.48", "121.188, 252.35, 5.7903, 0.48", "121.02, 253.555, 6.24003, 0.48", "120.998, 253.641, 6.26875, 0.48", "119.329, 264.808, 9.27466, 0.48", "119.537, 276.462, 10.08, 0.48", "121.361, 288.0, 10.3377, 0.48", "122.003, 299.653, 9.77834, 0.48", "121.164, 311.209, 8.26976, 0.48" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "5.17235, 148.137, -10.4191, 0.84", "4.8235, 150.305, -10.5779, 0.84", "4.48165, 152.442, -10.673, 0.84", "4.45353, 152.619, -10.6788, 0.84", "3.99381, 155.109, -10.7373, 0.84", "3.21187, 158.958, -10.8064, 0.84", "3.08644, 159.527, -10.8143, 0.84", "2.60248, 162.078, -10.8239, 0.84", "2.58256, 162.203, -10.8239, 0.84", "2.29685, 164.462, -10.8082, 0.84", "2.21556, 165.258, -10.7933, 0.84", "2.1308, 166.579, -10.755, 0.84", "2.10013, 168.863, -10.7389, 0.84", "2.10934, 169.146, -10.7422, 0.84", "2.22425, 171.475, -10.7767, 0.84", "2.23255, 171.602, -10.7768, 0.84", "2.32635, 173.385, -10.7494, 0.84", "2.32783, 173.511, -10.7495, 0.84", "2.17767, 177.453, -10.8008, 0.84", "2.16428, 177.723, -10.8081, 0.84", "2.0303, 179.816, -10.8887, 0.84", "2.0128, 180.125, -10.9033, 0.84", "1.86251, 184.033, -11.2399, 0.84", "1.8608, 184.116, -11.2497, 0.84", "1.84283, 186.538, -11.6147, 0.84", "1.8414, 186.663, -11.6361, 0.84", "1.78337, 188.539, -12.0087, 0.84", "1.67731, 190.476, -12.3952, 0.84", "1.66602, 190.6, -12.416, 0.84", "1.38955, 192.987, -12.7715, 0.84", "1.31656, 193.5, -12.833, 0.84", "1.11116, 194.986, -12.9896, 0.84", "1.08642, 195.162, -13.0059, 0.84", "0.599757, 198.55, -13.248, 0.84", "0.558537, 198.839, -13.2728, 0.84", "0.198898, 201.471, -13.5082, 0.84", "-0.532422, 207.07, -14.0242, 0.84", "-0.562392, 207.32, -14.0482, 0.84", "-0.973222, 210.846, -14.4882, 0.84", "-1.47446, 215.824, -15.2837, 0.84", "-1.79437, 219.426, -15.9651, 0.84", "-1.81655, 219.751, -16.0427, 0.84", "-1.89178, 221.167, -16.4449, 0.84", "-2.00773, 223.889, -17.2525, 0.84", "-2.04765, 225.935, -17.924, 0.84", "-2.04453, 226.212, -18.0143, 0.84", "-1.98765, 228.961, -18.9248, 0.84", "-1.94269, 230.907, -19.4233, 0.84", "-1.89522, 232.904, -19.7073, 0.84", "-1.89089, 233.056, -19.713, 0.84", "-1.83305, 235.105, -19.6602, 0.84", "-1.66101, 238.575, -19.4289, 0.84", "-1.43842, 241.123, -19.0819, 0.84", "-1.07109, 243.934, -18.633, 0.84", "-0.974632, 244.614, -18.5222, 0.84", "-0.718722, 246.418, -18.1767, 0.84", "-0.671482, 246.755, -18.089, 0.84", "-0.226672, 249.517, -17.0305, 0.84", "0.0323418, 250.839, -16.5686, 0.84" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-24.0644, 11.7113, -44.2068, 0.36", "-25.4155, 10.0697, -46.0767, 0.48", "-26.3847, 8.90017, -47.3031, 0.48", "-26.6462, 8.57871, -47.5914, 0.48", "-27.3048, 7.7605, -48.3135, 0.48", "-27.5001, 7.48894, -48.5508, 0.48", "-28.5008, 6.01925, -49.8359, 0.48", "-28.7156, 5.69146, -50.1214, 0.48", "-29.3985, 4.58552, -51.1491, 0.48", "-29.7553, 4.00493, -51.6973, 0.48", "-30.8359, 2.1737, -53.4991, 0.48", "-30.865, 2.12222, -53.5524, 0.48", "-31.6607, 0.648333, -55.2275, 0.48", "-31.8212, 0.349882, -55.5865, 0.48", "-32.1883, -0.330035, -56.3259, 0.48", "-32.3018, -0.535585, -56.5224, 0.48", "-32.74, -1.3069, -57.1945, 0.48", "-33.7477, -3.13302, -58.6927, 0.48", "-33.8497, -3.33496, -58.844, 0.48", "-35.366, -6.47118, -61.205, 0.48", "-35.4359, -6.6165, -61.3274, 0.48", "-36.0138, -7.81152, -62.4129, 0.48", "-36.0715, -7.938, -62.5303, 0.48", "-36.3032, -8.50883, -63.1001, 0.48", "-36.368, -8.69776, -63.3023, 0.48", "-36.7893, -10.4719, -65.635, 0.48", "-36.8516, -10.7755, -66.0092, 0.48", "-37.012, -11.5141, -66.9853, 0.48", "-37.1315, -11.8697, -67.4072, 0.48", "-37.5166, -12.8005, -68.4641, 0.48", "-37.7907, -13.4234, -69.1322, 0.48", "-38.4856, -14.948, -70.6271, 0.48", "-39.5965, -17.3274, -72.8878, 0.48", "-40.5901, -19.4714, -74.8719, 0.48", "-41.3315, -21.2212, -76.1982, 0.48", "-41.4457, -21.5059, -76.3791, 0.48", "-41.9224, -22.7837, -77.0086, 0.48", "-42.2325, -23.6695, -77.3536, 0.48", "-42.8119, -25.4412, -77.8975, 0.48", "-44.3055, -30.2356, -79.3406, 0.48", "-44.4869, -30.7653, -79.4956, 0.48", "-45.6182, -33.7841, -80.431, 0.48", "-45.7303, -34.0533, -80.5242, 0.48", "-46.3607, -35.4135, -81.0918, 0.48", "-46.7169, -36.1426, -81.4999, 0.48", "-47.2166, -37.1364, -82.3242, 0.48", "-47.2789, -37.2784, -82.4544, 0.48", "-47.9593, -39.0992, -84.3132, 0.48", "-48.2276, -40.0183, -85.3186, 0.48", "-48.5487, -41.512, -87.0049, 0.48", "-48.6312, -41.9682, -87.5057, 0.48", "-48.8147, -43.136, -88.7533, 0.48", "-48.832, -43.2323, -88.8491, 0.48", "-49.4573, -46.3148, -91.7153, 0.48", "-49.5506, -46.6685, -91.976, 0.48", "-49.9268, -48.045, -92.854, 0.48", "-50.063, -48.6301, -93.2021, 0.48", "-50.3984, -50.3224, -94.1683, 0.48", "-50.4261, -50.4868, -94.252, 0.48", "-51.0907, -53.4359, -95.7223, 0.48", "-51.3695, -54.5124, -96.3199, 0.48", "-52.0415, -57.0212, -97.8367, 0.48", "-52.2327, -57.7152, -98.2809, 0.48", "-52.7063, -59.3884, -99.4795, 0.48", "-53.6967, -62.7397, -102.234, 0.48", "-53.8153, -63.0678, -102.555, 0.48", "-54.2031, -63.9318, -103.468, 0.48", "-54.3886, -64.2509, -103.873, 0.48", "-55.1731, -65.421, -105.644, 0.48", "-55.8133, -66.264, -107.127, 0.48", "-56.6576, -67.3718, -109.173, 0.48", "-56.7575, -67.4909, -109.399, 0.48", "-57.8841, -68.707, -111.823, 0.48", "-58.2224, -69.0526, -112.525, 0.48", "-59.6435, -70.4616, -115.341, 0.48", "-59.7739, -70.618, -115.583, 0.48", "-60.6721, -71.8901, -117.293, 0.48", "-61.3514, -73.0316, -118.589, 0.48", "-61.5674, -73.4565, -119.002, 0.48", "-61.5976, -73.521, -119.059, 0.48", "-63.2181, -77.3104, -122.149, 0.48", "-63.3852, -77.7258, -122.45, 0.48", "-64.4164, -80.4953, -124.173, 0.48", "-64.5894, -80.9837, -124.453, 0.48", "-65.1126, -82.3806, -125.248, 0.48", "-65.1658, -82.5141, -125.328, 0.48", "-66.038, -84.3575, -126.515, 0.48", "-67.2407, -86.586, -127.914, 0.48", "-67.2871, -86.653, -127.954, 0.48", "-68.8788, -88.5854, -129.118, 0.48", "-69.3522, -89.0599, -129.406, 0.48", "-71.0066, -90.5714, -130.357, 0.48", "-71.2219, -90.735, -130.468, 0.48", "-73.3181, -92.0732, -131.343, 0.48", "-73.8871, -92.419, -131.553, 0.48", "-75.0938, -93.0568, -131.863, 0.48" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-24.0644, 11.7113, -44.2068, 0.36", "-25.0214, 12.437, -45.3282, 0.36", "-25.1718, 12.5637, -45.5723, 0.36", "-25.9784, 13.2573, -46.9834, 0.36", "-26.1787, 13.4278, -47.3298, 0.36", "-26.66, 13.8297, -48.164, 0.36", "-26.7732, 13.9247, -48.3592, 0.36", "-27.7078, 14.7701, -50.1567, 0.36", "-27.876, 14.94, -50.4681, 0.36", "-28.3529, 15.4935, -51.3564, 0.36", "-28.4845, 15.6782, -51.6274, 0.36", "-28.8058, 16.273, -52.5017, 0.36", "-28.882, 16.5037, -52.8596, 0.36", "-29.0118, 17.1255, -53.6006, 0.36", "-29.0464, 17.4838, -53.9272, 0.36", "-29.0672, 18.4616, -54.6878, 0.36", "-29.0538, 19.4717, -55.3765, 0.36", "-28.9704, 21.4727, -56.6401, 0.36", "-28.8352, 24.1079, -57.8873, 0.36", "-28.7412, 25.9375, -58.4855, 0.36", "-28.7116, 26.9953, -58.6373, 0.36", "-28.7046, 28.2455, -58.6287, 0.36", "-28.7093, 28.4475, -58.5999, 0.36", "-28.7928, 31.1008, -57.8654, 0.36", "-28.7969, 31.2133, -57.8298, 0.36", "-28.9286, 32.9024, -57.0403, 0.36", "-28.955, 33.233, -56.8695, 0.36", "-29.0472, 34.3836, -56.2728, 0.36", "-29.0962, 34.9975, -55.9927, 0.36", "-29.1989, 36.2806, -55.5018, 0.36", "-29.2478, 36.7939, -55.3256, 0.36", "-29.4406, 38.6936, -54.7198, 0.36", "-29.5438, 39.5768, -54.4547, 0.36", "-29.7268, 40.9566, -54.0503, 0.36", "-29.7501, 41.0904, -54.0101, 0.36", "-30.394, 43.9198, -53.1174, 0.36", "-30.4639, 44.1613, -53.0373, 0.36", "-30.9494, 45.4803, -52.5676, 0.36", "-31.2769, 46.2299, -52.2886, 0.36", "-31.6763, 47.0595, -51.9482, 0.36", "-31.968, 47.6176, -51.696, 0.36", "-32.4297, 48.3284, -51.2645, 0.36", "-32.5661, 48.5263, -51.1557, 0.36", "-32.9226, 48.989, -51.0122, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-65.7097, 72.441, -12.1068, 0.48", "-64.2111, 73.9673, -13.7834, 0.48", "-63.8193, 74.435, -14.11, 0.48", "-63.18, 75.3261, -14.5597, 0.48", "-63.0889, 75.5553, -14.6086, 0.48", "-62.7386, 77.091, -14.7502, 0.48", "-62.6862, 77.6066, -14.7723, 0.48", "-62.786, 79.1703, -14.6877, 0.48", "-62.8478, 79.6192, -14.6803, 0.48", "-63.2995, 81.8535, -14.6827, 0.48", "-63.4719, 82.4745, -14.7083, 0.48", "-63.8813, 83.6015, -14.8046, 0.48", "-64.2358, 84.3345, -14.9742, 0.48", "-65.1658, 85.9114, -15.5271, 0.48", "-65.3744, 86.2214, -15.6625, 0.48", "-66.0295, 87.0829, -16.1468, 0.48", "-66.1203, 87.201, -16.2223, 0.48", "-68.0575, 89.6945, -17.9666, 0.48", "-68.1523, 89.8172, -18.0536, 0.48", "-69.2112, 91.2839, -19.2951, 0.48", "-69.6055, 91.8794, -19.8652, 0.48", "-70.3129, 93.0289, -21.0745, 0.48", "-70.4432, 93.2568, -21.3242, 0.48", "-70.8046, 93.9431, -22.0878, 0.48", "-72.0935, 96.2893, -24.8495, 0.48", "-72.3984, 96.7873, -25.4895, 0.48", "-73.0891, 97.7901, -26.8494, 0.48", "-73.1487, 97.8648, -26.9738, 0.48", "-73.7218, 98.5567, -28.2446, 0.48", "-74.2154, 99.1394, -29.4038, 0.48", "-74.9153, 100.011, -31.1469, 0.48", "-75.1079, 100.272, -31.6703, 0.48", "-76.4804, 102.338, -35.8045, 0.48", "-77.5678, 104.127, -39.3371, 0.48", "-77.6501, 104.297, -39.6516, 0.48", "-78.1505, 105.57, -41.7698, 0.48", "-78.2636, 105.971, -42.3465, 0.48", "-78.3947, 106.662, -43.2143, 0.48", "-78.4035, 106.804, -43.3565, 0.48", "-78.3781, 109.454, -45.744, 0.48", "-78.3793, 109.728, -45.97, 0.48", "-78.3932, 111.196, -47.0907, 0.48", "-78.4548, 112.333, -48.0384, 0.48", "-78.5195, 113.385, -48.9317, 0.48", "-78.536, 113.575, -49.0967, 0.48", "-78.6379, 114.286, -49.7443, 0.48", "-78.7079, 114.648, -50.1132, 0.48", "-79.3121, 116.814, -52.8454, 0.48" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-65.7097, 72.441, -12.1068, 0.48", "-67.0001, 74.3727, -12.8111, 0.48", "-68.0494, 76.3006, -13.4853, 0.48", "-68.1594, 76.5452, -13.5609, 0.48", "-68.6934, 77.847, -13.9475, 0.48", "-68.8526, 78.2426, -14.0892, 0.48", "-69.4191, 79.6471, -14.6395, 0.48", "-69.8017, 80.6739, -15.0038, 0.48", "-70.3271, 82.3444, -15.5795, 0.48", "-70.3498, 82.4186, -15.6085, 0.48", "-70.993, 84.5645, -16.5472, 0.48", "-71.1647, 85.1027, -16.7888, 0.48", "-71.5814, 86.3422, -17.3535, 0.48", "-71.9027, 87.3975, -17.8134, 0.48", "-72.4643, 89.5268, -18.7645, 0.48", "-72.6151, 90.1062, -19.0291, 0.48", "-72.9663, 91.541, -19.6984, 0.48", "-73.0017, 91.6695, -19.7663, 0.48", "-73.7543, 93.9299, -21.1297, 0.48", "-73.8643, 94.1904, -21.3212, 0.48", "-74.4566, 95.3694, -22.3124, 0.48", "-74.5918, 95.6138, -22.545, 0.48", "-74.9371, 96.1834, -23.1665, 0.48", "-75.2012, 96.6511, -23.7638, 0.48", "-75.794, 97.964, -25.6963, 0.48", "-75.8791, 98.2409, -26.1169, 0.48", "-76.0092, 98.945, -27.1652, 0.48", "-76.0224, 99.0443, -27.3098, 0.48", "-76.2386, 101.231, -30.2847, 0.48", "-76.3414, 102.399, -31.7842, 0.48", "-76.4011, 102.969, -32.4373, 0.48", "-76.5094, 103.975, -33.5254, 0.48", "-76.5324, 104.184, -33.7307, 0.48", "-76.6653, 105.275, -34.6558, 0.48", "-76.8101, 106.1, -35.1884, 0.48", "-77.068, 107.301, -35.9445, 0.48", "-77.2511, 108.024, -36.4692, 0.48", "-77.5471, 109.083, -37.3873, 0.48", "-77.5779, 109.183, -37.4863, 0.48", "-77.774, 109.784, -38.232, 0.48", "-78.0733, 110.595, -39.4075, 0.48", "-78.4684, 111.558, -41.0141, 0.48", "-78.5373, 111.706, -41.2813, 0.48", "-78.6364, 111.911, -41.6941, 0.48", "-78.9044, 112.628, -43.4465, 0.48", "-78.9963, 113.071, -44.7388, 0.48", "-79.0143, 113.16, -45.0385, 0.48", "-79.0269, 113.271, -45.4816, 0.48", "-79.0402, 113.382, -46.0713, 0.48", "-79.1174, 113.751, -49.1862, 0.48", "-79.1555, 113.779, -50.0542, 0.48", "-79.2099, 113.756, -51.2269, 0.48", "-79.2184, 113.746, -51.3919, 0.48", "-79.277, 113.656, -52.2764, 0.48", "-79.3887, 113.544, -53.0673, 0.48", "-79.8655, 113.126, -55.2327, 0.48", "-79.9204, 113.071, -55.4795, 0.48", "-80.1048, 112.85, -56.4414, 0.48", "-80.1544, 112.802, -56.6808, 0.48", "-80.3582, 112.691, -57.5578, 0.48" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-35.0301, 6.03968, 54.6121, 0.48", "-33.0021, 10.6541, 66.5438, 0.48", "-30.9615, 13.5299, 79.0073, 0.48", "-28.6367, 15.6329, 91.5749, 0.48", "-28.2578, 18.0869, 104.287, 0.48", "-29.8316, 22.5764, 116.335, 0.48", "-31.9596, 25.7432, 128.713, 0.48", "-35.0373, 26.3399, 141.28, 0.48", "-36.4501, 27.1651, 154.129, 0.48", "-34.8736, 25.5428, 166.883, 0.48", "-32.3855, 22.4611, 179.215, 0.48" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-35.0301, 6.03968, 54.6121, 0.48", "-46.5001, 3.81826, 61.58, 0.48", "-57.4728, 0.637613, 68.9644, 0.48" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "36.0147, 1.41343, 45.9253, 0.36", "38.7956, -3.03562, 51.7997, 0.36", "41.6643, -6.68266, 58.1641, 0.36", "45.7281, -10.1334, 63.9619, 0.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "36.0147, 1.41343, 45.9253, 0.36", "47.0468, 1.13263, 49.9114, 0.36", "58.5327, 1.27464, 52.3045, 0.36", "70.1782, 1.0352, 53.7188, 0.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-15.9559, 44.1265, 17.4783, 0.6", "-17.3666, 45.0107, 16.2582, 0.36", "-17.5167, 45.1186, 16.1324, 0.36", "-18.395, 45.7868, 15.3609, 0.36", "-19.1504, 46.3707, 14.6881, 0.36", "-19.3204, 46.4924, 14.551, 0.36", "-20.0418, 46.9834, 14.0333, 0.36", "-20.1928, 47.0742, 13.9738, 0.36", "-21.0024, 47.5472, 13.7491, 0.36", "-21.0982, 47.6047, 13.7446, 0.36", "-22.0012, 48.0861, 13.8813, 0.36", "-22.5362, 48.3842, 13.9906, 0.36", "-23.1998, 48.7995, 14.3058, 0.36", "-23.2537, 48.8383, 14.3392, 0.36", "-24.0715, 49.5373, 14.8917, 0.36", "-24.2345, 49.6919, 15.0016, 0.36", "-24.6649, 50.1716, 15.3016, 0.36", "-26.1867, 52.0118, 16.3283, 0.36", "-26.2494, 52.0948, 16.3695, 0.36", "-27.1417, 53.3169, 16.9436, 0.36", "-27.2391, 53.4544, 17.0036, 0.36", "-28.0422, 54.633, 17.4527, 0.36", "-28.2452, 54.9495, 17.5453, 0.36", "-28.8615, 56.0204, 17.7359, 0.36", "-29.0622, 56.3713, 17.7983, 0.36", "-29.5232, 57.2027, 17.9448, 0.36", "-29.6323, 57.396, 17.9716, 0.36", "-30.155, 58.2478, 18.011, 0.36", "-36.5752, 64.813, 16.6295, 0.36", "-43.3419, 70.6625, 14.1344, 0.36", "-49.329, 77.5211, 12.3058, 0.36", "-54.2058, 84.834, 9.31074, 0.36", "-59.166, 91.0597, 4.52886, 0.36", "-63.903, 97.927, 0.450694, 0.36", "-70.8427, 103.516, -2.16324, 0.36", "-78.2427, 108.944, -3.58213, 0.36", "-85.329, 113.878, -6.99777, 0.36" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.9559, 44.1265, 17.4783, 0.6", "-15.6137, 46.7312, 17.853, 0.48", "-15.4078, 49.1085, 18.1784, 0.48", "-15.2786, 51.6434, 18.4565, 0.48", "-15.2763, 51.9534, 18.4759, 0.48", "-15.3262, 54.7118, 18.5718, 0.48", "-15.33, 54.8149, 18.5733, 0.48", "-15.4952, 56.7549, 18.5273, 0.48", "-15.5898, 57.6174, 18.4807, 0.48", "-15.7789, 59.3034, 18.3534, 0.48", "-15.7829, 59.4583, 18.343, 0.48", "-15.7078, 61.1807, 18.2276, 0.48", "-15.6944, 61.3354, 18.2234, 0.48", "-15.3061, 64.7596, 18.2875, 0.48", "-15.2643, 65.1039, 18.3045, 0.48", "-14.9475, 67.9429, 18.4976, 0.48", "-14.9172, 68.2513, 18.5184, 0.48", "-14.7332, 70.5863, 18.675, 0.48", "-14.5825, 73.3722, 18.8598, 0.48", "-14.5844, 73.5275, 18.8605, 0.48", "-14.7414, 76.6442, 18.7462, 0.48", "-14.8202, 77.3446, 18.6988, 0.48", "-15.1404, 79.6488, 18.5022, 0.48", "-15.179, 79.8639, 18.481, 0.48", "-16.2551, 85.0204, 17.9299, 0.48", "-16.3323, 85.3571, 17.8957, 0.48", "-17.3093, 89.3872, 17.5691, 0.48", "-17.3827, 89.6884, 17.5516, 0.48", "-18.0423, 92.3635, 17.4784, 0.48", "-18.1188, 92.6645, 17.4805, 0.48", "-18.6934, 94.6182, 17.5908, 0.48", "-20.155, 99.0523, 17.8364, 0.48", "-20.3767, 99.6329, 17.8677, 0.48", "-21.5022, 102.321, 18.0098, 0.48", "-21.9168, 103.354, 18.0332, 0.48", "-22.6932, 105.76, 18.034, 0.48", "-22.8848, 106.521, 18.0197, 0.48", "-23.0667, 107.825, 17.979, 0.48", "-23.1493, 109.544, 17.9226, 0.48", "-22.9322, 113.991, 17.6824, 0.48", "-22.5999, 117.157, 17.484, 0.48", "-22.5097, 117.852, 17.4411, 0.48", "-22.1358, 120.85, 17.2638, 0.48", "-22.1195, 121.004, 17.2557, 0.48", "-21.8474, 125.249, 17.0696, 0.48", "-21.844, 126.038, 17.0508, 0.48", "-21.9984, 129.621, 16.9643, 0.48", "-22.021, 130.111, 16.9388, 0.48", "-22.1498, 132.757, 16.7498, 0.48", "-22.2, 133.531, 16.6925, 0.48", "-22.4323, 136.362, 16.4868, 0.48", "-22.4548, 136.58, 16.4671, 0.48", "-22.882, 140.022, 16.0803, 0.48", "-23.0032, 140.782, 15.9781, 0.48", "-23.583, 143.711, 15.5546, 0.48", "-23.6962, 144.186, 15.497, 0.48", "-24.107, 145.672, 15.3502, 0.48", "-24.1961, 146.007, 15.3298, 0.48", "-25.0955, 149.56, 15.2717, 0.48", "-25.2091, 150.085, 15.2672, 0.48", "-25.9062, 154.153, 15.2642, 0.48", "-25.9892, 154.769, 15.2585, 0.48", "-26.2218, 157.133, 15.2214, 0.48", "-26.3048, 158.085, 15.1846, 0.48", "-26.4781, 159.459, 14.9947, 0.48", "-26.5154, 159.667, 14.9378, 0.48", "-26.8626, 161.021, 14.3633, 0.48", "-27.0062, 161.485, 14.1321, 0.48", "-27.5389, 162.933, 13.2644, 0.48", "-28.6254, 165.769, 11.4523, 0.48", "-28.6716, 165.895, 11.374, 0.48", "-29.1397, 167.485, 10.4676, 0.48", "-29.3386, 168.293, 10.0436, 0.48", "-29.5416, 169.252, 9.60384, 0.48", "-29.6221, 169.73, 9.41311, 0.48", "-29.8799, 171.346, 8.88551, 0.48", "-30.6365, 175.052, 7.72103, 0.48", "-30.675, 175.197, 7.68092, 0.48", "-31.4154, 177.528, 7.14428, 0.48", "-31.4738, 177.695, 7.11511, 0.48", "-32.3514, 180.049, 6.78386, 0.48", "-32.6304, 180.785, 6.72027, 0.48", "-33.5533, 183.272, 6.66009, 0.48", "-33.756, 183.895, 6.65286, 0.48", "-34.4934, 186.488, 6.64261, 0.48", "-34.5447, 186.693, 6.63995, 0.48", "-35.3035, 190.212, 6.56564, 0.48", "-35.3911, 190.669, 6.58042, 0.48", "-36.0515, 194.539, 6.87356, 0.48", "-36.1066, 194.875, 6.91334, 0.48", "-36.4071, 197.241, 6.89078, 0.48", "-36.4283, 197.445, 6.8688, 0.48", "-36.7501, 201.379, 6.04865, 0.48", "-36.7898, 201.974, 5.87526, 0.48", "-36.8733, 204.536, 4.74559, 0.48", "-36.9803, 210.81, 1.66192, 0.48", "-36.9826, 211.092, 1.50354, 0.48", "-36.9769, 212.438, 0.63727, 0.48", "-36.9677, 212.78, 0.363382, 0.48", "-36.8652, 215.601, -2.0049, 0.36", "-36.7532, 217.58, -3.7781, 0.36" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-71.6941, -41.827, 6.31296, 0.48", "-79.7318, -41.7747, 4.18389, 0.48", "-87.9234, -41.248, 2.85635, 0.48", "-96.0026, -39.5578, 1.85172, 0.48", "-104.237, -38.8329, 0.950949, 0.48", "-112.411, -38.3203, -0.487133, 0.48", "-120.681, -37.4926, -0.239467, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-71.6941, -41.827, 6.31296, 0.48", "-76.5947, -42.063, 8.04983, 0.48", "-81.5034, -42.9729, 9.52098, 0.48", "-86.6172, -43.629, 10.2322, 0.48", "-91.5759, -45.1153, 10.7713, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-29.9708, -221.007, -46.0447, 0.48", "-31.1331, -222.415, -45.657, 0.36", "-31.22, -222.506, -45.6452, 0.36", "-32.1709, -223.509, -45.5897, 0.36", "-32.501, -223.863, -45.5806, 0.36", "-33.4456, -224.883, -45.557, 0.36", "-34.7458, -226.294, -45.5237, 0.36", "-35.3536, -226.932, -45.5144, 0.36", "-35.6997, -227.303, -45.5207, 0.36", "-35.8928, -227.528, -45.5299, 0.36", "-37.0033, -228.95, -45.5948, 0.36", "-37.1096, -229.094, -45.6031, 0.36", "-38.062, -230.454, -45.5888, 0.36", "-38.3374, -230.819, -45.5831, 0.36", "-39.3268, -231.999, -45.577, 0.36", "-39.6514, -232.335, -45.5721, 0.36", "-40.4631, -233.095, -45.5539, 0.36", "-41.0487, -233.577, -45.5233, 0.36", "-41.9483, -234.107, -45.4122, 0.36", "-42.5336, -234.375, -45.3226, 0.36", "-44.1635, -234.868, -45.0161, 0.36", "-44.5479, -234.955, -44.9411, 0.36", "-45.4247, -235.102, -44.8186, 0.36", "-47.8762, -235.408, -44.642, 0.36", "-48.054, -235.43, -44.6414, 0.36", "-49.77, -235.656, -44.78, 0.36", "-50.3545, -235.749, -44.9333, 0.36", "-52.2833, -236.139, -45.7029, 0.36", "-52.5349, -236.209, -45.8343, 0.36", "-53.7093, -236.65, -46.5889, 0.36", "-54.1359, -236.849, -46.8862, 0.36", "-55.9377, -237.902, -48.318, 0.36", "-56.307, -238.155, -48.6097, 0.36", "-57.0231, -238.726, -49.1982, 0.36", "-57.2215, -238.885, -49.3558, 0.36", "-58.0923, -239.586, -50.0582, 0.36", "-58.4751, -239.928, -50.3656, 0.36", "-59.3404, -240.799, -51.0557, 0.36", "-59.3915, -240.852, -51.0974, 0.36", "-60.6972, -242.172, -52.2216, 0.36", "-60.8664, -242.311, -52.3676, 0.36", "-61.796, -242.941, -53.198, 0.36", "-61.9254, -243.015, -53.3123, 0.36", "-62.5947, -243.336, -53.909, 0.36", "-63.1254, -243.556, -54.4227, 0.36", "-64.7661, -244.12, -56.1747, 0.36", "-65.434, -244.303, -56.8621, 0.36", "-66.1486, -244.449, -57.5746, 0.36", "-66.3579, -244.486, -57.7852, 0.36", "-68.0269, -244.742, -59.6294, 0.36", "-68.6227, -244.84, -60.3247, 0.36", "-69.3638, -244.976, -61.2476, 0.36", "-69.4437, -244.992, -61.3448, 0.36", "-70.2279, -245.186, -62.2726, 0.36", "-71.9257, -245.67, -64.1204, 0.36", "-73.0244, -246.023, -65.1866, 0.36", "-73.2181, -246.085, -65.3541, 0.36", "-74.2507, -246.408, -66.177, 0.36", "-75.0734, -246.659, -66.7732, 0.36", "-76.7995, -247.119, -67.8049, 0.36", "-77.216, -247.203, -67.9889, 0.36", "-78.9899, -247.43, -68.6667, 0.36", "-79.2686, -247.452, -68.7734, 0.36", "-79.5139, -247.453, -68.8719, 0.36", "-80.3696, -247.418, -69.1945, 0.36", "-81.2308, -247.371, -69.4656, 0.36", "-82.9097, -247.317, -69.9814, 0.36", "-83.6799, -247.31, -70.2198, 0.36", "-83.7997, -247.317, -70.265, 0.36", "-84.6541, -247.396, -70.6133, 0.36", "-85.0749, -247.447, -70.7994, 0.36", "-86.6821, -247.647, -71.5733, 0.36", "-86.7658, -247.656, -71.617, 0.36", "-89.8655, -247.949, -73.2219, 0.36", "-89.9787, -247.96, -73.2784, 0.36", "-91.6842, -248.14, -74.1282, 0.36", "-92.4149, -248.236, -74.5103, 0.36", "-94.2073, -248.532, -75.5266, 0.36", "-95.0874, -248.722, -76.0455, 0.36", "-95.8206, -248.942, -76.4963, 0.36", "-96.6097, -249.28, -77.0135, 0.36", "-97.8367, -250.033, -77.9297, 0.36", "-98.4647, -250.516, -78.4458, 0.36", "-99.1493, -251.171, -79.1074, 0.36", "-99.5179, -251.535, -79.5213, 0.36", "-100.115, -252.118, -80.2322, 0.36", "-100.867, -252.779, -81.0697, 0.36", "-101.655, -253.369, -81.9092, 0.36", "-101.879, -253.5, -82.141, 0.36", "-103.633, -254.294, -83.9871, 0.36", "-103.75, -254.343, -84.1134, 0.36", "-104.257, -254.553, -84.6559, 0.36", "-105.234, -255.025, -85.7546, 0.36", "-106.4, -255.674, -87.1997, 0.36", "-106.702, -255.858, -87.5897, 0.36", "-107.409, -256.34, -88.5572, 0.36", "-107.778, -256.587, -89.0182, 0.36", "-108.923, -257.351, -90.3525, 0.36", "-109.735, -257.887, -91.1945, 0.36", "-110.65, -258.451, -92.0938, 0.36", "-110.816, -258.543, -92.2432, 0.36", "-112.215, -259.199, -93.3789, 0.36", "-112.553, -259.353, -93.62, 0.36", "-113.735, -259.892, -94.3928, 0.36", "-114.275, -260.153, -94.7649, 0.36", "-115.464, -260.762, -95.6913, 0.36", "-115.833, -260.96, -96.0042, 0.36", "-116.324, -261.248, -96.4872, 0.36", "-117.762, -262.07, -97.8683, 0.36", "-118.457, -262.442, -98.4976, 0.36", "-118.771, -262.612, -98.7891, 0.36" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-29.9708, -221.007, -46.0447, 0.48", "-30.7452, -223.755, -45.9368, 0.36", "-31.3341, -225.601, -45.8602, 0.36", "-31.3734, -225.724, -45.8564, 0.36", "-32.3616, -229.265, -45.9112, 0.36", "-32.3936, -229.391, -45.9157, 0.36", "-32.6667, -230.59, -45.9326, 0.36", "-32.7281, -230.873, -45.9338, 0.36", "-33.0363, -232.553, -45.8961, 0.36", "-33.5634, -235.77, -45.7645, 0.36", "-33.6071, -236.055, -45.7362, 0.36", "-33.9592, -238.254, -45.4267, 0.36", "-33.9999, -238.473, -45.4008, 0.36", "-34.9724, -242.705, -44.9482, 0.36", "-35.0323, -242.877, -44.933, 0.36", "-35.8753, -244.606, -44.8749, 0.36", "-35.9934, -244.777, -44.9035, 0.36", "-38.0237, -246.807, -45.9298, 0.36", "-38.118, -246.877, -45.9872, 0.36", "-39.4999, -247.663, -46.9429, 0.36", "-39.9734, -247.942, -47.2669, 0.36", "-41.5225, -248.901, -48.2988, 0.36", "-41.7122, -249.027, -48.4055, 0.36", "-43.152, -250.281, -49.0161, 0.36", "-43.893, -251.05, -49.3131, 0.36", "-44.313, -251.589, -49.4577, 0.36", "-44.9948, -252.561, -49.6765, 0.36", "-45.1242, -252.773, -49.7178, 0.36", "-46.5124, -255.083, -50.154, 0.36", "-46.6024, -255.24, -50.1835, 0.36", "-47.28, -256.43, -50.3828, 0.36", "-47.7525, -257.285, -50.5171, 0.36", "-47.8141, -257.397, -50.5401, 0.36", "-48.839, -259.205, -50.9574, 0.36", "-49.031, -259.554, -51.0446, 0.36", "-49.8279, -261.366, -51.5391, 0.36", "-49.8847, -261.522, -51.585, 0.36", "-50.6111, -263.871, -52.318, 0.36", "-50.6395, -263.991, -52.3598, 0.36", "-50.8791, -265.319, -52.8839, 0.36", "-51.1738, -266.968, -53.5508, 0.36", "-51.4229, -268.398, -54.1571, 0.36", "-51.5146, -268.889, -54.3545, 0.36", "-51.9054, -270.919, -55.1215, 0.36", "-52.2551, -272.646, -55.7455, 0.36", "-52.6061, -274.235, -56.2947, 0.36", "-52.7112, -274.692, -56.4306, 0.36", "-53.0515, -276.291, -56.8534, 0.36", "-53.1081, -276.538, -56.9143, 0.36", "-53.5241, -278.271, -57.3159, 0.36", "-53.6126, -278.646, -57.4552, 0.36", "-53.975, -280.256, -58.2557, 0.36", "-54.0779, -280.7, -58.5348, 0.36", "-54.3855, -281.921, -59.685, 0.36", "-54.408, -282.004, -59.7828, 0.36", "-55.0513, -284.152, -62.8992, 0.36", "-55.1338, -284.423, -63.3572, 0.36", "-55.2247, -284.691, -63.9019, 0.36", "-55.6516, -285.826, -66.3956, 0.36", "-55.6772, -285.889, -66.5424, 0.36", "-55.8347, -286.243, -67.3635, 0.36", "-56.1174, -286.787, -68.6593, 0.36", "-56.5072, -287.461, -70.3519, 0.36", "-56.5787, -287.581, -70.6465, 0.36", "-56.7716, -287.881, -71.389, 0.36", "-57.0211, -288.254, -72.3681, 0.36", "-57.6466, -289.142, -74.9482, 0.36", "-57.6676, -289.174, -75.0373, 0.36" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-19.0782, 69.7623, -86.4164, 0.48", "-22.0078, 74.5906, -89.8914, 0.48", "-23.6911, 79.6215, -93.8696, 0.48", "-25.4372, 85.0229, -97.2971, 0.48", "-26.2104, 90.661, -100.701, 0.48", "-27.4292, 96.4149, -103.763, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-19.0782, 69.7623, -86.4164, 0.48", "-24.0258, 75.3929, -95.836, 0.48", "-27.5364, 79.8633, -106.447, 0.48", "-28.6186, 86.4617, -116.457, 0.48", "-31.2726, 93.3058, -125.998, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "92.6883, 45.9569, 9.74564, 0.48", "102.459, 54.6791, 12.8214, 0.48", "111.684, 64.4397, 13.6168, 0.48", "122.417, 72.3898, 15.2361, 0.48", "134.2, 78.8364, 16.0176, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "92.6883, 45.9569, 9.74564, 0.48", "103.874, 50.1531, 4.99948, 0.48", "115.778, 54.1603, 2.26077, 0.48", "126.821, 58.6414, -2.55858, 0.48", "136.841, 63.5545, -8.94093, 0.48", "147.202, 68.0314, -15.0944, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-42.3089, -25.8661, 6.21116, 0.48", "-43.5919, -25.5005, 5.35706, 0.48", "-43.6891, -25.4907, 5.30772, 0.48", "-44.6151, -25.477, 4.91197, 0.48", "-44.7435, -25.4796, 4.86534, 0.48", "-46.1848, -25.5397, 4.38484, 0.48", "-46.5157, -25.5606, 4.28565, 0.48", "-47.7259, -25.7103, 4.00677, 0.48", "-48.2629, -25.7917, 3.87846, 0.48", "-49.6476, -26.0284, 3.56055, 0.48", "-49.8828, -26.0675, 3.50552, 0.48", "-51.1494, -26.2584, 3.18913, 0.48", "-51.2275, -26.2694, 3.16731, 0.48", "-53.5792, -26.5695, 2.42276, 0.48", "-55.8479, -26.8556, 1.65737, 0.48", "-56.0318, -26.8827, 1.59276, 0.48", "-57.8202, -27.2711, 0.938735, 0.48", "-58.0241, -27.3398, 0.865608, 0.48", "-59.1412, -27.8426, 0.479305, 0.48", "-59.2865, -27.9271, 0.430671, 0.48", "-60.0053, -28.3535, 0.203138, 0.48", "-61.6952, -29.3024, -0.275889, 0.48", "-63.5373, -30.2202, -0.710332, 0.48", "-63.7144, -30.2974, -0.748171, 0.48", "-65.5652, -30.9885, -1.1078, 0.48", "-67.946, -31.7205, -1.55687, 0.48", "-68.1499, -31.7683, -1.59259, 0.48", "-70.3999, -32.1337, -1.95374, 0.48", "-70.6139, -32.1683, -1.98356, 0.48", "-72.1225, -32.4897, -2.13452, 0.48", "-72.4584, -32.57, -2.15735, 0.48", "-73.569, -32.8531, -2.2176, 0.48", "-73.6307, -32.8682, -2.22154, 0.48", "-75.5932, -33.3342, -2.35561, 0.48", "-77.1662, -33.6836, -2.46886, 0.48", "-78.7935, -34.0621, -2.59697, 0.48", "-79.1184, -34.1401, -2.62496, 0.48", "-80.4987, -34.4746, -2.76296, 0.48", "-80.6044, -34.5006, -2.77467, 0.48", "-81.3759, -34.6698, -2.90187, 0.48", "-82.6444, -34.9588, -3.18322, 0.48", "-82.7958, -34.9894, -3.23156, 0.48", "-84.0139, -35.1612, -3.70859, 0.48", "-84.114, -35.1668, -3.75251, 0.48", "-85.6159, -35.1557, -4.46874, 0.48", "-85.9564, -35.1313, -4.65901, 0.48", "-88.0061, -34.8835, -5.91876, 0.48", "-88.0973, -34.8723, -5.97821, 0.48", "-89.4631, -34.7044, -6.92994, 0.48", "-89.7139, -34.6796, -7.10874, 0.48", "-91.6467, -34.5391, -8.51975, 0.48", "-91.7125, -34.535, -8.5681, 0.48", "-93.0375, -34.496, -9.59675, 0.48", "-93.2335, -34.4865, -9.75523, 0.48", "-94.3313, -34.4119, -10.7258, 0.48", "-94.3794, -34.4077, -10.7672, 0.48", "-95.2974, -34.2905, -11.5545, 0.48", "-95.4199, -34.272, -11.6613, 0.48", "-96.0672, -34.1317, -12.275, 0.48", "-96.3448, -34.0558, -12.5393, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-42.3089, -25.8661, 6.21116, 0.48", "-43.5515, -26.3258, 6.68877, 0.48", "-43.6819, -26.383, 6.72669, 0.48", "-44.9964, -26.9752, 7.06951, 0.48", "-45.1161, -27.0252, 7.09939, 0.48", "-46.2873, -27.4902, 7.40048, 0.48", "-46.5151, -27.5668, 7.46131, 0.48", "-48.0465, -28.0069, 7.85917, 0.48", "-48.2972, -28.0754, 7.91703, 0.48", "-49.4743, -28.38, 8.1593, 0.48", "-49.6946, -28.4286, 8.20536, 0.48", "-51.2704, -28.7215, 8.5517, 0.48", "-51.5096, -28.768, 8.59769, 0.48", "-52.5676, -28.992, 8.77913, 0.48", "-52.808, -29.0837, 8.80565, 0.48", "-54.0459, -29.7644, 8.8638, 0.48", "-54.245, -29.9122, 8.86571, 0.48", "-54.9488, -30.5869, 8.84967, 0.48", "-55.1202, -30.766, 8.84575, 0.48", "-56.6098, -32.4676, 8.80534, 0.48", "-56.7025, -32.5704, 8.80064, 0.48", "-57.612, -33.5707, 8.73517, 0.48", "-57.85, -33.7742, 8.71767, 0.48", "-58.7231, -34.2403, 8.6007, 0.48", "-58.826, -34.2773, 8.58219, 0.48", "-59.962, -34.5579, 8.34317, 0.48", "-60.1746, -34.6019, 8.29355, 0.48", "-61.676, -34.8588, 7.9115, 0.48", "-63.8013, -35.2096, 7.3695, 0.48", "-65.6586, -35.5223, 6.89459, 0.48", "-65.7289, -35.536, 6.8773, 0.48", "-67.5403, -35.9978, 6.5231, 0.48", "-67.6457, -36.0281, 6.50696, 0.48", "-69.5254, -36.6867, 6.3215, 0.48", "-69.6289, -36.7264, 6.31739, 0.48", "-70.3612, -37.0285, 6.29926, 0.48", "-72.6444, -38.0899, 6.38918, 0.48", "-72.7167, -38.1294, 6.39823, 0.48", "-74.6707, -39.2785, 6.74866, 0.48", "-74.7625, -39.3364, 6.77148, 0.48", "-75.4986, -39.7838, 6.94923, 0.48", "-77.0405, -40.7056, 7.28711, 0.48", "-77.8803, -41.1798, 7.42857, 0.48", "-78.0185, -41.2513, 7.44576, 0.48", "-78.8038, -41.604, 7.49898, 0.48", "-79.8235, -42.0064, 7.46302, 0.48", "-80.4784, -42.2577, 7.36531, 0.48", "-81.1925, -42.5905, 7.1517, 0.48", "-81.4773, -42.7425, 7.07135, 0.48", "-82.3083, -43.2338, 6.85741, 0.48", "-82.5128, -43.3663, 6.81133, 0.48", "-83.4311, -44.0259, 6.65322, 0.48", "-85.3989, -45.5117, 6.37717, 0.48", "-86.8937, -46.6754, 6.22264, 0.48", "-87.0295, -46.7817, 6.20566, 0.48", "-87.9388, -47.4858, 6.07474, 0.48", "-88.9054, -48.193, 5.95115, 0.48", "-89.0279, -48.2742, 5.94041, 0.48", "-90.3012, -49.0266, 5.96301, 0.48", "-91.7251, -49.7814, 6.09446, 0.48", "-91.8257, -49.8249, 6.11125, 0.48", "-92.7683, -50.1216, 6.36156, 0.48", "-93.3526, -50.2353, 6.55806, 0.48", "-94.1524, -50.3506, 6.88105, 0.48", "-94.3081, -50.3586, 6.96577, 0.48", "-94.8292, -50.3491, 7.337, 0.48", "-95.0575, -50.3467, 7.4967, 0.48", "-95.544, -50.3541, 7.80054, 0.48", "-95.6173, -50.3575, 7.83918, 0.48", "-103.647, -54.4654, 9.69662, 0.48", "-111.856, -57.1674, 12.8769, 0.48", "-119.529, -60.0102, 17.1013, 0.48", "-127.057, -63.3261, 21.24, 0.48", "-135.535, -66.1159, 23.5095, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "0.0323418, 250.839, -16.5686, 0.84", "-1.15033, 251.004, -7.78571, 0.6", "-2.72672, 250.72, -5.06293, 0.6", "-1.86952, 250.927, -5.36371, 0.6", "-0.484498, 251.269, -5.74789, 0.6", "0.663246, 251.551, -6.03547, 0.6", "0.76302, 251.575, -6.05626, 0.6", "3.35261, 252.251, -6.87738, 0.6", "3.82783, 252.399, -6.96072, 0.6", "5.67512, 253.066, -7.22756, 0.6", "6.06816, 253.208, -7.26665, 0.6", "7.38152, 253.677, -7.38644, 0.6", "9.07653, 254.269, -7.5258, 0.6", "9.57979, 254.439, -7.56551, 0.6", "10.4896, 254.735, -7.55661, 0.6", "11.7594, 255.112, -7.33703, 0.6", "12.3905, 255.313, -7.11068, 0.6", "12.8525, 255.471, -6.83725, 0.6", "12.9951, 255.528, -6.712, 0.6", "14.0649, 256.078, -5.50471, 0.6", "14.7097, 256.481, -4.62546, 0.6", "15.7158, 257.179, -3.1156, 0.6", "15.9421, 257.31, -2.81808, 0.6", "16.8988, 257.8, -1.65712, 0.6", "17.7209, 258.184, -0.771161, 0.6", "19.0263, 258.732, 0.496637, 0.6", "19.5675, 258.914, 0.963422, 0.6", "21.7543, 259.458, 2.69322, 0.6", "22.2719, 259.568, 3.08788, 0.6", "23.8655, 259.852, 4.21122, 0.6", "24.4536, 259.965, 4.60575, 0.6", "25.5195, 260.207, 5.31788, 0.6", "26.1922, 260.418, 5.77457, 0.6", "27.0698, 260.778, 6.36907, 0.6", "27.7484, 261.081, 6.80331, 0.6", "28.8078, 261.601, 7.42867, 0.6", "29.0877, 261.753, 7.57798, 0.6", "30.2952, 262.463, 8.17128, 0.48", "32.1955, 263.598, 9.05717, 0.48", "32.8308, 263.969, 9.33588, 0.48", "34.4174, 264.87, 10.0164, 0.48", "35.7312, 265.546, 10.5502, 0.48", "37.0663, 266.173, 11.0829, 0.48", "38.1392, 266.576, 11.4983, 0.48", "39.3931, 266.944, 11.9541, 0.48", "39.6527, 266.991, 12.0475, 0.48", "40.9968, 267.085, 12.5506, 0.48", "41.5381, 267.083, 12.7507, 0.48", "43.4918, 267.02, 13.4555, 0.48", "44.0283, 267.014, 13.6467, 0.48", "45.6839, 267.041, 14.2645, 0.48", "46.0833, 267.055, 14.4305, 0.48", "47.6306, 267.146, 15.1504, 0.48", "48.4065, 267.176, 15.5345, 0.48", "49.3144, 267.212, 16.0028, 0.48", "49.4823, 267.216, 16.0828, 0.48", "51.5394, 267.251, 16.9676, 0.48", "51.7621, 267.253, 17.0356, 0.48", "53.3334, 267.258, 17.3658, 0.48", "54.2145, 267.308, 17.4802, 0.48", "55.7355, 267.463, 17.6135, 0.48", "56.4372, 267.588, 17.6913, 0.48", "58.794, 268.217, 17.9749, 0.48", "59.0991, 268.309, 17.9894, 0.48", "61.2425, 269.053, 17.9498, 0.48", "61.6182, 269.173, 17.9246, 0.48", "64.0431, 269.926, 17.614, 0.48", "64.5281, 270.069, 17.5349, 0.48", "67.4729, 271.019, 16.9809, 0.48", "68.0611, 271.209, 16.8536, 0.48", "69.6478, 271.701, 16.4836, 0.48", "72.1639, 272.501, 15.9102, 0.48", "72.3251, 272.56, 15.8775, 0.48", "74.6079, 273.482, 15.6113, 0.48", "76.0351, 274.064, 15.5353, 0.48", "77.3372, 274.574, 15.4552, 0.48", "77.7096, 274.7, 15.4095, 0.48", "79.7966, 275.256, 15.1215, 0.48", "80.4848, 275.411, 15.0126, 0.48", "83.8263, 275.888, 14.4557, 0.48", "85.2127, 275.993, 14.2425, 0.48", "88.3606, 276.084, 13.7982, 0.48", "91.156, 276.092, 13.4521, 0.48", "91.9695, 276.07, 13.3628, 0.48", "95.2006, 275.922, 13.1111, 0.48", "97.9436, 275.679, 13.0417, 0.48", "98.6563, 275.589, 13.0429, 0.48", "100.624, 275.286, 13.1576, 0.48", "100.796, 275.255, 13.1689, 0.48", "102.673, 274.966, 13.2896, 0.48", "104.757, 274.729, 13.2588, 0.48", "105.035, 274.696, 13.2364, 0.48", "107.796, 274.318, 12.8938, 0.48", "108.476, 274.206, 12.7731, 0.48", "110.283, 273.931, 12.3905, 0.48", "113.266, 273.598, 11.6533, 0.48", "114.689, 273.47, 11.2268, 0.48", "115.072, 273.426, 11.0932, 0.48", "118.022, 272.99, 9.90355, 0.48", "118.547, 272.885, 9.68848, 0.48", "120.294, 272.482, 9.04715, 0.48", "121.544, 272.194, 8.60795, 0.48", "123.458, 271.798, 7.95571, 0.48", "123.609, 271.768, 7.90682, 0.48", "127.306, 271.04, 6.76413, 0.48", "129.595, 270.597, 6.10092, 0.48", "131.07, 270.332, 5.72373, 0.48", "133.693, 269.959, 5.17668, 0.48", "134.016, 269.93, 5.11334, 0.48", "135.651, 269.855, 4.79256, 0.48", "136.267, 269.872, 4.68024, 0.48", "137.142, 269.898, 4.51942, 0.48", "138.051, 269.934, 4.39198, 0.48", "139.094, 269.984, 4.23874, 0.48", "140.946, 270.236, 3.90308, 0.48", "143.726, 270.817, 3.33832, 0.48", "143.911, 270.875, 3.29853, 0.48", "145.6, 271.565, 2.9023, 0.48", "145.906, 271.72, 2.82563, 0.48", "149.371, 273.818, 1.91531, 0.48", "150.004, 274.276, 1.7504, 0.48", "151.638, 275.589, 1.32109, 0.48", "152.329, 276.126, 1.17722, 0.48", "153.85, 277.312, 0.951375, 0.48", "154.008, 277.431, 0.938185, 0.48", "156.69, 279.399, 0.895866, 0.48", "156.851, 279.514, 0.896972, 0.48", "159.368, 281.327, 0.973622, 0.48", "162.567, 283.771, 1.1608, 0.48", "163.152, 284.244, 1.20792, 0.48", "164.232, 285.13, 1.28652, 0.48", "165.045, 285.817, 1.34033, 0.48", "166.46, 287.097, 1.43407, 0.48", "166.743, 287.373, 1.45284, 0.48", "167.94, 288.488, 1.55487, 0.48", "170.38, 290.639, 1.77775, 0.48", "170.612, 290.833, 1.7992, 0.48", "173.207, 293.049, 2.04626, 0.48", "173.445, 293.251, 2.06999, 0.48", "174.936, 294.518, 2.19016, 0.48", "176.67, 295.974, 2.30014, 0.48", "176.742, 296.033, 2.30405, 0.48", "178.883, 297.775, 2.37958, 0.48", "178.993, 297.861, 2.38401, 0.48", "180.615, 299.185, 2.52038, 0.48", "181.499, 299.97, 2.65248, 0.48", "182.382, 300.754, 2.84572, 0.48", "182.746, 301.079, 2.97609, 0.48", "183.74, 301.95, 3.51468, 0.48", "184.37, 302.545, 3.98326, 0.48", "185.932, 304.148, 5.52197, 0.48", "186.156, 304.39, 5.76497, 0.48", "187.202, 305.564, 6.94422, 0.48", "187.686, 306.137, 7.49093, 0.48", "188.6, 307.258, 8.53713, 0.48", "189.033, 307.798, 9.03216, 0.48", "189.599, 308.552, 9.79737, 0.48", "189.966, 309.029, 10.2511, 0.48", "190.241, 309.366, 10.4965, 0.48" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.0323418, 250.839, -16.5686, 0.84", "-0.333685, 254.069, -16.1476, 0.84", "-0.335087, 254.154, -16.1484, 0.84", "-0.295879, 256.357, -16.2585, 0.84", "-0.214173, 258.67, -16.4116, 0.84", "-0.21131, 258.798, -16.4209, 0.84", "-0.180951, 260.596, -16.5558, 0.84", "-0.0771442, 264.219, -16.9752, 0.84", "-0.0539212, 264.872, -17.0438, 0.84", "0.0479658, 266.809, -17.2081, 0.84", "0.294548, 271.029, -17.5116, 0.84", "0.300597, 271.157, -17.5176, 0.84", "0.351362, 273.555, -17.52, 0.84", "0.345404, 273.96, -17.5006, 0.84", "0.317127, 276.03, -17.365, 0.84", "0.27517, 279.637, -17.058, 0.84", "0.26969, 280.43, -16.976, 0.84", "0.230487, 282.779, -16.7242, 0.84", "0.221642, 283.033, -16.6972, 0.84", "0.111291, 286.571, -16.3438, 0.84", "0.107586, 286.699, -16.3317, 0.84", "0.0876298, 288.109, -16.2294, 0.84", "0.0871928, 288.183, -16.227, 0.84", "0.0299738, 289.731, -16.2516, 0.84", "-0.162872, 292.365, -16.3507, 0.84", "-0.179575, 292.491, -16.3593, 0.84", "-0.817092, 296.274, -16.6897, 0.84", "-0.865482, 296.524, -16.7153, 0.84", "-1.3322, 298.697, -16.9663, 0.84", "-1.35787, 298.821, -16.9824, 0.84", "-1.55191, 299.902, -17.1291, 0.84", "-1.62625, 300.465, -17.1978, 0.84", "-1.75165, 301.606, -17.3285, 0.84", "-1.76807, 301.732, -17.3424, 0.84", "-2.07817, 304.261, -17.6512, 0.84", "-2.40813, 306.915, -18.0115, 0.84", "-2.45655, 307.313, -18.0675, 0.84", "-2.63303, 309.283, -18.4142, 0.84", "-2.76783, 310.99, -18.7646, 0.84", "-2.88418, 313.146, -19.2268, 0.84", "-2.94596, 314.931, -19.6447, 0.84", "-2.93327, 315.329, -19.7465, 0.84", "-2.65683, 318.499, -20.5751, 0.84", "-2.61979, 318.744, -20.6387, 0.84", "-2.3071, 320.988, -21.2418, 0.84", "-2.28991, 321.161, -21.2898, 0.84", "-2.18677, 323.462, -21.9596, 0.84", "-2.18866, 323.544, -21.9816, 0.84", "-2.40818, 326.085, -22.5891, 0.84", "-2.66341, 328.66, -23.1314, 0.84", "-2.67779, 328.785, -23.1552, 0.84", "-2.85246, 330.18, -23.3761, 0.84", "-3.27366, 333.215, -23.7548, 0.84", "-3.32523, 333.614, -23.7962, 0.84", "-3.586, 336.562, -24.0031, 0.84", "-3.59637, 336.818, -24.0115, 0.84", "-3.61151, 337.722, -24.0257, 0.84", "-3.61033, 337.85, -24.0255, 0.84", "-3.56229, 339.793, -24.0058, 0.84", "-3.5047, 342.434, -23.9769, 0.84", "-3.50117, 342.818, -23.9751, 0.84", "-3.50724, 344.788, -23.967, 0.84", "-3.50987, 345.044, -23.9583, 0.84", "-3.57033, 347.61, -23.8167, 0.84", "-3.58266, 347.994, -23.7901, 0.84", "-3.65819, 349.927, -23.665, 0.84", "-3.65727, 350.012, -23.662, 0.84", "-3.53368, 352.599, -23.6013, 0.84", "-3.52376, 352.727, -23.6019, 0.84", "-3.32159, 354.342, -23.691, 0.84", "-3.26731, 354.729, -23.7411, 0.84", "-2.83238, 357.407, -24.3076, 0.84", "-2.81414, 357.527, -24.3454, 0.84", "-2.64383, 358.788, -24.8851, 0.84", "-2.53546, 359.534, -25.2584, 0.84", "-2.32132, 360.862, -26.0429, 0.84", "-2.27051, 361.112, -26.1933, 0.84", "-2.01033, 362.305, -27.0114, 0.84", "-1.93072, 362.622, -27.2294, 0.84", "-1.45214, 364.144, -28.2647, 0.84", "-1.29118, 364.603, -28.5553, 0.84", "-0.551412, 366.213, -29.5767, 0.84" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-0.551412, 366.213, -29.5767, 0.84", "0.0837038, 366.728, -29.7631, 0.48", "0.662682, 367.279, -30.0279, 0.48", "0.718574, 367.352, -30.0886, 0.48", "1.0513, 367.968, -30.8318, 0.48", "1.07738, 368.032, -30.9175, 0.48", "1.4556, 368.875, -32.0719, 0.48", "1.66899, 369.436, -32.8432, 0.48", "2.07621, 370.43, -34.2302, 0.48", "2.35115, 371.027, -35.0765, 0.48", "2.69151, 371.734, -36.056, 0.48", "3.08667, 372.509, -37.0929, 0.48", "3.13238, 372.605, -37.2062, 0.48", "3.63245, 373.676, -38.2105, 0.48", "3.78993, 374.023, -38.4633, 0.48", "4.23913, 375.158, -39.1993, 0.48", "4.30352, 375.357, -39.328, 0.48", "4.77458, 377.19, -40.5192, 0.48", "4.84773, 377.455, -40.7017, 0.48", "5.16791, 378.599, -41.5137, 0.48", "5.38832, 379.254, -41.9812, 0.48", "5.70844, 380.039, -42.5751, 0.48", "5.74937, 380.118, -42.6392, 0.48", "6.47697, 381.242, -43.632, 0.48", "6.60203, 381.403, -43.7695, 0.48", "7.16991, 382.075, -44.3273, 0.48", "7.44231, 382.391, -44.5704, 0.48", "8.77722, 383.935, -45.7071, 0.48", "9.00335, 384.212, -45.9063, 0.48", "10.667, 386.22, -47.3251, 0.48", "10.7707, 386.342, -47.4141, 0.48", "11.5233, 387.167, -48.0596, 0.48", "11.5886, 387.237, -48.1143, 0.48", "12.6403, 388.396, -49.0388, 0.48", "13.61, 389.54, -50.001, 0.48", "13.796, 389.793, -50.221, 0.48", "14.8703, 391.339, -51.5762, 0.48", "14.9661, 391.487, -51.7083, 0.48", "15.5989, 392.542, -52.6703, 0.48", "15.8464, 392.942, -53.077, 0.48", "16.479, 394.03, -54.2746, 0.48", "16.7324, 394.455, -54.7907, 0.48", "17.1952, 395.242, -55.8875, 0.48", "17.2237, 395.288, -55.95, 0.48", "17.816, 396.327, -57.3215, 0.48", "17.9294, 396.563, -57.6023, 0.48", "18.1337, 397.207, -58.2789, 0.48", "18.1415, 397.261, -58.3403, 0.48", "18.2936, 398.663, -59.9943, 0.48", "18.3812, 399.843, -61.434, 0.48", "18.3874, 400.019, -61.6381, 0.48", "18.4516, 401.421, -63.258, 0.48", "18.5596, 403.709, -65.834, 0.48", "18.6206, 404.532, -66.7496, 0.48", "18.6724, 405.098, -67.395, 0.48", "18.814, 406.117, -68.4657, 0.48", "18.8258, 406.197, -68.5401, 0.48", "18.9654, 407.501, -69.6604, 0.48", "19.0477, 408.862, -70.6856, 0.48", "19.0365, 409.49, -71.1792, 0.48", "18.9964, 410.427, -71.951, 0.48", "18.9484, 410.936, -72.4237, 0.48", "18.7023, 412.851, -74.2223, 0.48", "18.6843, 412.955, -74.3232, 0.48", "18.4782, 414.206, -75.5391, 0.48", "18.4716, 414.259, -75.5898, 0.48", "18.405, 415.995, -77.2399, 0.48", "18.4741, 417.392, -78.5388, 0.48", "18.4848, 417.453, -78.5925, 0.48", "18.7961, 418.977, -79.9484, 0.48", "18.8625, 419.258, -80.2114, 0.48", "19.1714, 420.312, -81.2523, 0.48", "19.1983, 420.385, -81.3298, 0.48", "19.8201, 422.073, -83.2417, 0.48", "20.0598, 422.825, -84.0964, 0.48", "20.1286, 423.121, -84.4369, 0.48", "20.3535, 424.483, -86.0389, 0.48", "20.3642, 424.787, -86.4143, 0.48", "20.3292, 425.716, -87.6008, 0.48", "20.3052, 425.915, -87.8704, 0.48", "20.2383, 426.535, -88.7298, 0.48", "20.2119, 426.735, -89.045, 0.48", "19.9722, 428.134, -91.5181, 0.48", "19.9473, 428.39, -92.0049, 0.48", "19.9405, 429.001, -93.2561, 0.48", "19.9432, 429.218, -93.6979, 0.48", "19.9763, 430.478, -96.319, 0.48", "19.9954, 430.721, -96.8184, 0.48", "20.0367, 431.025, -97.4529, 0.48", "20.1895, 431.551, -98.626, 0.48", "20.5129, 432.334, -100.445, 0.48", "20.6441, 432.607, -101.08, 0.48", "20.9392, 433.086, -102.141, 0.48", "20.9735, 433.139, -102.257, 0.48", "21.7003, 434.158, -104.517, 0.48", "21.8013, 434.276, -104.731, 0.48", "21.8705, 434.355, -104.846, 0.48", "21.9207, 434.424, -104.916, 0.48", "22.7093, 435.665, -105.927, 0.48", "22.7952, 435.829, -106.033, 0.48", "23.669, 437.652, -106.951, 0.48", "23.7727, 437.86, -107.053, 0.48", "24.9579, 440.077, -108.146, 0.48", "25.1024, 440.336, -108.272, 0.48", "25.7417, 441.339, -108.686, 0.48", "27.0322, 443.272, -109.356, 0.48", "27.0771, 443.339, -109.373, 0.48", "28.5626, 445.625, -109.801, 0.48", "28.6927, 445.832, -109.827, 0.48", "30.0609, 448.013, -110.037, 0.48", "30.2821, 448.344, -110.064, 0.48", "31.5681, 450.268, -110.21, 0.48", "32.9593, 452.315, -110.375, 0.48", "33.0234, 452.404, -110.381, 0.48", "33.3029, 452.783, -110.43, 0.48", "34.9569, 455.021, -110.995, 0.48", "36.0303, 456.392, -111.446, 0.48", "36.1165, 456.49, -111.488, 0.48", "37.4459, 457.882, -112.241, 0.48", "37.9546, 458.39, -112.591, 0.48", "39.1036, 459.505, -113.518, 0.48", "39.21, 459.606, -113.616, 0.48", "39.8717, 460.28, -114.318, 0.48", "39.997, 460.414, -114.46, 0.48", "41.7059, 462.38, -116.409, 0.48", "41.7883, 462.477, -116.498, 0.48", "42.7991, 463.806, -117.651, 0.48", "44.392, 466.118, -119.596, 0.48", "44.4613, 466.238, -119.682, 0.48", "45.2746, 467.814, -120.71, 0.48", "45.4429, 468.177, -120.93, 0.48", "46.4432, 470.356, -122.247, 0.48", "46.502, 470.48, -122.321, 0.48", "48.0661, 473.532, -124.069, 0.48", "48.2458, 473.845, -124.253, 0.48", "49.3212, 475.552, -125.335, 0.48", "49.4121, 475.674, -125.423, 0.48", "50.5779, 476.975, -126.524, 0.48", "50.6582, 477.056, -126.614, 0.48", "51.7357, 477.992, -128.051, 0.48", "52.2096, 478.404, -128.733, 0.48", "53.4135, 479.479, -130.829, 0.48", "53.4584, 479.52, -130.921, 0.48", "54.2938, 480.31, -132.953, 0.48", "54.3492, 480.363, -133.088, 0.48", "54.63, 480.639, -133.814, 0.48", "55.2363, 481.267, -135.255, 0.48", "56.074, 482.229, -137.201, 0.48", "56.2633, 482.468, -137.615, 0.48", "56.696, 483.075, -138.583, 0.48", "56.804, 483.24, -138.847, 0.48", "57.7991, 484.882, -141.436, 0.48", "57.9279, 485.15, -141.828, 0.48", "58.2463, 486.031, -143.075, 0.48", "58.5417, 487.008, -144.33, 0.48", "58.8402, 488.241, -145.846, 0.48", "58.8496, 488.291, -145.899, 0.48", "59.3349, 491.319, -148.553, 0.48", "59.4102, 491.801, -148.905, 0.48", "59.671, 493.49, -149.923, 0.48", "59.7497, 494.043, -150.178, 0.48", "60.2157, 498.041, -151.622, 0.48", "60.3249, 499.116, -151.892, 0.48", "60.5134, 501.242, -152.109, 0.48", "60.5397, 501.577, -152.129, 0.48", "60.659, 503.003, -152.146, 0.48", "60.6707, 503.112, -152.149, 0.48", "60.9666, 505.582, -152.211, 0.48", "61.3949, 508.595, -152.418, 0.48", "61.4533, 508.936, -152.449, 0.48", "61.8799, 511.126, -152.683, 0.48", "62.7712, 515.322, -153.209, 0.48", "62.8228, 515.586, -153.249, 0.48", "63.2676, 517.974, -153.695, 0.48", "63.3784, 518.748, -153.829, 0.48", "63.6518, 521.44, -154.242, 0.48", "63.6604, 521.658, -154.275, 0.48", "63.6118, 526.308, -154.957, 0.48", "63.6042, 526.634, -155.006, 0.48", "63.4312, 530.567, -155.598, 0.48", "63.4167, 531.116, -155.683, 0.48", "63.4076, 533.819, -156.118, 0.48", "63.4182, 534.03, -156.154, 0.48", "63.7925, 537.041, -156.681, 0.48", "63.8168, 537.205, -156.709, 0.48", "64.0462, 538.664, -156.982, 0.48", "64.0676, 538.816, -157.008, 0.48", "64.2741, 540.881, -157.292, 0.48", "64.2871, 541.208, -157.336, 0.48", "64.075, 544.594, -157.9, 0.48", "63.7374, 547.371, -158.386, 0.48", "63.6528, 547.806, -158.459, 0.48", "63.1352, 550.037, -158.86, 0.48", "62.9947, 550.552, -158.955, 0.48", "62.316, 553.053, -159.458, 0.48", "62.2717, 553.211, -159.496, 0.48", "61.7126, 555.403, -159.948, 0.48", "61.3044, 557.274, -160.288, 0.48", "61.2586, 557.533, -160.317, 0.48", "60.9298, 559.88, -160.501, 0.48", "60.8698, 560.59, -160.517, 0.48", "60.7236, 562.778, -160.53, 0.48", "60.7102, 563.158, -160.516, 0.48", "60.5552, 566.573, -160.109, 0.48" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-0.551412, 366.213, -29.5767, 0.84", "-0.854022, 367.925, -30.3225, 0.84", "-1.12156, 369.943, -31.2253, 0.84", "-1.22431, 371.175, -31.7486, 0.84", "-1.33478, 372.899, -32.5085, 0.84", "-1.34274, 373.148, -32.6173, 0.84", "-1.38166, 376.398, -34.0259, 0.84", "-1.37643, 376.602, -34.1151, 0.84", "-1.22079, 379.275, -35.2104, 0.84", "-1.15894, 380.092, -35.491, 0.84", "-0.960732, 382.284, -36.1779, 0.84", "-0.942912, 382.504, -36.2448, 0.84", "-0.595362, 387.586, -37.8328, 0.84", "-0.573792, 387.933, -37.9457, 0.84", "-0.390123, 390.962, -38.92, 0.84", "-0.379713, 391.149, -38.9777, 0.84", "-0.313491, 392.812, -39.5087, 0.84", "-0.273813, 393.88, -39.8668, 0.84", "-0.2282, 394.657, -40.1884, 0.84" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-0.2282, 394.657, -40.1884, 0.84", "-0.371557, 395.561, -39.7392, 0.84", "-0.870932, 398.713, -38.1746, 0.84", "-1.05615, 399.881, -37.5942, 0.84" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-0.2282, 394.657, -40.1884, 0.84", "1.11097, 395.735, -42.7755, 0.6", "1.82145, 396.337, -44.3105, 0.6", "1.85817, 396.368, -44.3935, 0.6", "2.31939, 396.764, -45.4406, 0.6", "2.45202, 396.891, -45.7673, 0.6", "3.14956, 397.614, -47.635, 0.6", "3.40477, 397.979, -48.5103, 0.6", "3.68145, 398.486, -49.7586, 0.6", "3.72933, 398.621, -50.0607, 0.6", "3.86142, 399.426, -51.7254, 0.6", "3.88414, 399.787, -52.3425, 0.6", "3.85735, 400.421, -53.2366, 0.6", "3.84427, 400.533, -53.3792, 0.6", "3.73103, 401.246, -54.2923, 0.6", "3.70818, 401.394, -54.501, 0.6", "3.66338, 402.35, -55.8169, 0.6", "3.66907, 402.509, -56.0312, 0.6", "3.74663, 403.5, -57.2582, 0.6", "3.83533, 404.654, -58.6066, 0.48", "3.86751, 405.331, -59.3024, 0.48", "3.88567, 406.441, -60.2811, 0.48", "3.87728, 406.768, -60.5023, 0.48", "3.78206, 408.938, -61.7104, 0.48", "3.72908, 409.322, -61.8599, 0.48", "3.37652, 410.915, -62.3215, 0.48", "3.29937, 411.119, -62.3643, 0.48", "2.59815, 412.503, -62.5992, 0.48", "2.46342, 412.731, -62.6266, 0.48", "0.671407, 415.185, -62.7736, 0.48", "0.512397, 415.387, -62.7805, 0.48", "-1.76514, 418.117, -62.8137, 0.48", "-2.02728, 418.428, -62.8106, 0.48", "-3.34697, 419.953, -62.765, 0.48", "-5.0086, 421.867, -62.6717, 0.36", "-6.26054, 423.314, -62.5778, 0.36", "-6.69252, 423.854, -62.578, 0.36", "-7.70161, 425.257, -62.6619, 0.36", "-7.88926, 425.567, -62.6939, 0.36", "-8.50592, 426.774, -62.8674, 0.36", "-8.97111, 427.817, -63.0414, 0.36", "-10.2986, 430.765, -63.5771, 0.36", "-10.3522, 430.88, -63.5973, 0.36", "-11.4667, 433.259, -64.0053, 0.36", "-11.9021, 434.15, -64.1609, 0.36", "-12.5259, 435.369, -64.3701, 0.36", "-12.7557, 435.701, -64.4177, 0.36", "-13.8296, 436.851, -64.5051, 0.36", "-13.9223, 436.939, -64.5147, 0.36", "-14.8975, 437.754, -64.6429, 0.36", "-14.9889, 437.842, -64.664, 0.36", "-16.8887, 439.882, -65.2731, 0.36", "-17.0451, 440.073, -65.3447, 0.36", "-18.0653, 441.448, -65.9457, 0.36", "-18.2305, 441.701, -66.0554, 0.36", "-19.1671, 443.266, -66.697, 0.36", "-19.2102, 443.345, -66.7299, 0.36", "-20.031, 445.167, -67.5021, 0.36", "-20.1638, 445.461, -67.6269, 0.36", "-20.9754, 447.077, -68.3074, 0.36", "-21.5857, 448.215, -68.7553, 0.36", "-21.963, 448.805, -68.9724, 0.36", "-22.8855, 450.12, -69.4513, 0.36", "-22.9898, 450.247, -69.4977, 0.36", "-24.9392, 452.407, -70.3517, 0.36", "-25.1076, 452.584, -70.4311, 0.36", "-26.543, 454.168, -71.2233, 0.36", "-26.5963, 454.227, -71.2544, 0.36", "-27.8236, 455.604, -72.0898, 0.36", "-28.0058, 455.824, -72.2358, 0.36", "-29.498, 457.656, -73.5536, 0.36", "-30.6109, 459.029, -74.5829, 0.36", "-30.704, 459.142, -74.6703, 0.36", "-31.8874, 460.497, -75.7257, 0.36", "-32.0156, 460.634, -75.8303, 0.36", "-33.8842, 462.418, -77.0883, 0.36", "-34.0033, 462.52, -77.1561, 0.36", "-35.5046, 463.755, -77.94, 0.36", "-35.5969, 463.831, -77.9884, 0.36", "-37.5996, 465.456, -79.0516, 0.36", "-39.3663, 466.85, -80.1452, 0.36", "-39.4866, 466.938, -80.2277, 0.36", "-41.44, 468.273, -81.6581, 0.36", "-43.1191, 469.279, -82.9631, 0.36", "-43.3815, 469.414, -83.174, 0.36", "-45.5129, 470.272, -84.8773, 0.36", "-46.5161, 470.597, -85.673, 0.36", "-47.1368, 470.792, -86.1395, 0.36", "-48.4454, 471.155, -87.0678, 0.36", "-48.5079, 471.177, -87.1027, 0.36", "-50.0696, 471.993, -87.63, 0.36", "-50.4114, 472.264, -87.6641, 0.36", "-51.8122, 473.646, -87.6441, 0.36", "-51.8766, 473.717, -87.6357, 0.36", "-53.9788, 476.243, -87.1239, 0.36", "-55.934, 478.535, -86.4397, 0.36", "-57.0744, 479.877, -85.938, 0.36", "-57.1366, 479.946, -85.9133, 0.36", "-59.3856, 482.315, -85.0691, 0.36", "-60.0121, 482.926, -84.9556, 0.36", "-62.2924, 484.897, -85.1605, 0.36", "-62.349, 484.94, -85.1834, 0.36", "-64.7102, 486.724, -86.452, 0.36", "-64.7772, 486.78, -86.4918, 0.36", "-67.0827, 488.884, -88.1297, 0.36", "-67.2146, 489.017, -88.2328, 0.36", "-69.9425, 492.203, -90.5415, 0.36", "-70.0865, 492.385, -90.654, 0.36", "-71.5445, 494.539, -91.6562, 0.36", "-71.7252, 494.845, -91.7768, 0.36", "-73.2482, 497.604, -92.6516, 0.36", "-74.5864, 500.139, -93.4398, 0.36", "-74.8173, 500.596, -93.5751, 0.36", "-76.1929, 503.144, -94.246, 0.36", "-77.5875, 505.62, -94.8419, 0.36", "-79.4095, 508.662, -95.4611, 0.36", "-79.557, 508.887, -95.4937, 0.36", "-81.0924, 510.998, -95.7147, 0.36", "-82.8138, 513.121, -95.8469, 0.24", "-83.6055, 513.977, -95.8483, 0.24", "-84.1489, 514.529, -95.805, 0.24", "-85.4972, 515.888, -95.673, 0.24", "-86.0811, 516.462, -95.6198, 0.24", "-87.5538, 517.839, -95.4906, 0.24", "-89.1607, 519.323, -95.2722, 0.24", "-89.2954, 519.442, -95.244, 0.24", "-90.6562, 520.647, -94.8278, 0.24", "-90.724, 520.707, -94.7966, 0.24", "-91.5667, 521.474, -94.2446, 0.24", "-92.3126, 522.166, -93.5203, 0.24", "-93.268, 523.026, -92.4471, 0.24", "-93.9939, 523.722, -91.4327, 0.24", "-94.5424, 524.31, -90.3681, 0.24", "-94.8164, 524.634, -89.7471, 0.24", "-95.0357, 524.989, -88.9654, 0.24", "-95.5233, 525.995, -86.4262, 0.24" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-1.05615, 399.881, -37.5942, 0.84", "-2.06033, 400.399, -37.2192, 0.6", "-2.63102, 400.767, -37.0565, 0.6", "-3.35626, 401.27, -36.8688, 0.6", "-3.63656, 401.477, -36.8007, 0.6", "-4.74433, 402.299, -36.5417, 0.6", "-5.10819, 402.568, -36.4597, 0.6", "-6.296, 403.613, -36.17, 0.6", "-6.71943, 404.012, -36.0574, 0.6", "-7.70144, 404.979, -35.7579, 0.6", "-8.34462, 405.662, -35.5205, 0.6", "-8.75852, 406.127, -35.3372, 0.6", "-10.4406, 408.048, -34.4935, 0.6", "-10.7762, 408.441, -34.3032, 0.6", "-10.853, 408.529, -34.2572, 0.6", "-12.0041, 409.8, -33.5446, 0.6", "-12.4718, 410.31, -33.244, 0.6", "-13.1457, 411.009, -32.7992, 0.6", "-13.3883, 411.24, -32.6497, 0.6", "-14.1896, 412.021, -32.1804, 0.6", "-14.7643, 412.653, -31.8437, 0.6", "-15.9859, 414.132, -31.1061, 0.6", "-16.1803, 414.399, -30.9786, 0.6", "-17.4693, 416.342, -30.0276, 0.6", "-17.6543, 416.637, -29.8825, 0.6", "-18.6184, 418.267, -29.091, 0.6", "-18.9401, 418.769, -28.8509, 0.6", "-19.8563, 420.075, -28.2525, 0.6", "-20.3553, 420.677, -27.9914, 0.6", "-20.8592, 421.189, -27.7729, 0.6", "-21.1636, 421.475, -27.6345, 0.6", "-22.9253, 422.978, -26.8325, 0.6", "-23.0498, 423.093, -26.7808, 0.6", "-24.2096, 424.226, -26.3253, 0.6", "-24.4805, 424.511, -26.2158, 0.6", "-26.1372, 426.406, -25.47, 0.6", "-26.2699, 426.568, -25.4146, 0.6", "-27.6307, 428.405, -24.8422, 0.6", "-28.0458, 428.976, -24.6626, 0.6", "-28.2515, 429.28, -24.5747, 0.6", "-28.3717, 429.453, -24.5236, 0.6", "-30.761, 432.693, -23.5362, 0.6", "-31.21, 433.297, -23.3275, 0.6", "-32.5546, 435.068, -22.6061, 0.6", "-33.3419, 436.113, -22.1566, 0.6", "-34.0229, 437.031, -21.745, 0.6", "-34.7811, 438.067, -21.2442, 0.6", "-35.2208, 438.654, -20.9165, 0.6", "-35.8389, 439.429, -20.5044, 0.6", "-36.2076, 439.894, -20.3008, 0.6", "-37.8269, 441.924, -19.5089, 0.6", "-38.2803, 442.527, -19.3499, 0.6", "-39.3458, 444.028, -19.069, 0.6", "-39.7707, 444.643, -19.0067, 0.6", "-40.8669, 446.268, -18.9989, 0.6", "-40.9736, 446.438, -19.0024, 0.6", "-41.7115, 447.71, -19.0794, 0.6", "-41.7523, 447.795, -19.0772, 0.6", "-42.5835, 449.887, -18.8065, 0.6", "-42.6127, 449.973, -18.782, 0.6", "-43.3711, 452.353, -17.7862, 0.48", "-43.3928, 452.417, -17.7584, 0.48", "-44.2008, 454.524, -16.941, 0.48", "-44.3847, 454.983, -16.7795, 0.48", "-45.0992, 456.786, -16.2559, 0.48", "-45.3069, 457.297, -16.1376, 0.48", "-46.322, 459.647, -15.7474, 0.48", "-48.2389, 463.909, -15.1661, 0.48", "-48.332, 464.095, -15.1489, 0.48", "-49.6298, 466.567, -14.9678, 0.48", "-49.8678, 467.018, -14.9412, 0.48", "-50.7463, 468.705, -14.822, 0.48", "-51.085, 469.337, -14.7505, 0.48", "-52.0277, 470.952, -14.5068, 0.48", "-52.2293, 471.285, -14.4453, 0.48", "-53.1931, 472.807, -14.0826, 0.48", "-53.5132, 473.401, -13.9518, 0.48", "-54.2461, 475.07, -13.6039, 0.48", "-54.3521, 475.372, -13.543, 0.48", "-54.7249, 476.654, -13.292, 0.48", "-54.807, 476.927, -13.2428, 0.48", "-55.8198, 479.763, -12.8689, 0.48", "-55.9999, 480.255, -12.8257, 0.48", "-56.717, 482.103, -12.7558, 0.48", "-56.9777, 482.726, -12.749, 0.48", "-57.3291, 483.567, -12.7614, 0.48", "-58.5172, 486.368, -12.8427, 0.48", "-58.7181, 486.844, -12.8652, 0.48", "-59.4143, 488.575, -12.9704, 0.48", "-59.5505, 488.925, -12.9964, 0.48", "-60.3389, 491.211, -13.1419, 0.48", "-60.4052, 491.453, -13.1506, 0.48", "-60.8999, 493.976, -13.174, 0.48", "-60.9208, 494.1, -13.1737, 0.48", "-61.3794, 497.511, -13.1334, 0.48", "-61.6475, 499.753, -13.0972, 0.48", "-61.8864, 501.982, -13.0568, 0.48", "-62.0901, 504.666, -13.0011, 0.48", "-62.1027, 504.946, -12.9943, 0.48", "-62.1813, 508.726, -12.9032, 0.48", "-62.1792, 508.977, -12.8971, 0.48", "-62.1846, 511.751, -12.855, 0.48", "-62.346, 516.08, -12.8599, 0.48", "-62.3713, 516.475, -12.8631, 0.48", "-62.6268, 519.009, -12.8996, 0.48", "-62.6765, 519.383, -12.907, 0.48", "-63.0734, 522.255, -12.9566, 0.48", "-63.4379, 524.654, -12.9931, 0.48", "-63.561, 525.407, -12.9932, 0.48", "-63.9528, 528.05, -12.9326, 0.48", "-63.982, 528.329, -12.9158, 0.48", "-64.1608, 531.379, -12.6379, 0.48", "-64.1635, 531.639, -12.6053, 0.48", "-64.1158, 533.222, -12.3718, 0.48", "-64.1127, 533.738, -12.2956, 0.48", "-64.1552, 537.194, -11.7738, 0.48", "-64.1716, 537.37, -11.7537, 0.48", "-64.4468, 539.027, -11.6217, 0.48", "-64.5473, 539.537, -11.5956, 0.48", "-65.0096, 541.627, -11.5612, 0.48", "-65.0405, 541.77, -11.5613, 0.48", "-65.7881, 545.234, -11.6096, 0.48", "-65.896, 545.74, -11.6201, 0.48", "-65.9432, 545.986, -11.6253, 0.48", "-66.202, 547.525, -11.6577, 0.48", "-66.4457, 549.434, -11.7017, 0.36", "-66.4684, 549.609, -11.7064, 0.36", "-66.9339, 553.007, -11.8029, 0.36" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-1.05615, 399.881, -37.5942, 0.84", "-1.18442, 401.69, -37.3108, 0.72", "-1.41927, 404.463, -36.8871, 0.72", "-1.58981, 406.323, -36.6229, 0.72", "-1.74642, 407.968, -36.4075, 0.72", "-1.78962, 408.396, -36.3572, 0.72", "-1.98933, 410.171, -36.1652, 0.72", "-2.07088, 410.71, -36.1112, 0.72", "-2.34606, 412.325, -35.9682, 0.72", "-2.39463, 412.743, -35.9608, 0.72", "-2.52993, 414.673, -35.9406, 0.72", "-2.53617, 415.07, -35.9358, 0.72", "-2.48103, 417.006, -35.911, 0.72", "-2.47657, 417.097, -35.9098, 0.72", "-2.26294, 420.165, -35.8693, 0.72", "-2.25278, 420.302, -35.8672, 0.72", "-2.1326, 422.038, -35.848, 0.72", "-2.11399, 422.313, -35.8452, 0.72", "-1.96503, 424.512, -35.8341, 0.72", "-1.94341, 424.923, -35.8333, 0.72", "-1.89989, 426.849, -35.8305, 0.72", "-1.82663, 430.563, -35.8363, 0.72", "-1.8244, 430.869, -35.8377, 0.72", "-1.80461, 433.832, -35.851, 0.72", "-1.80313, 433.968, -35.8516, 0.72", "-1.72269, 436.989, -35.8711, 0.72", "-1.70982, 437.262, -35.8734, 0.72", "-1.55554, 439.873, -35.911, 0.72", "-1.53493, 440.146, -35.9163, 0.72", "-1.36117, 441.798, -36.0005, 0.72", "-0.844112, 445.758, -36.2796, 0.72", "-0.533892, 447.727, -36.4521, 0.72", "-0.162588, 449.899, -36.6658, 0.72", "0.205528, 452.074, -36.8966, 0.72", "0.63103, 454.865, -37.2056, 0.72", "0.641704, 454.955, -37.2155, 0.72", "0.81866, 457.306, -37.4724, 0.72", "0.824229, 457.442, -37.4854, 0.72", "0.846912, 460.08, -37.6754, 0.72", "0.846813, 460.399, -37.6899, 0.72", "0.954535, 463.01, -37.7157, 0.72", "0.969147, 463.145, -37.7272, 0.72", "1.12915, 464.118, -37.867, 0.72", "1.1787, 464.416, -37.9165, 0.72", "1.48914, 466.111, -38.2427, 0.72", "1.77922, 468.073, -38.6762, 0.72", "2.16417, 471.229, -39.4749, 0.72", "2.17238, 471.394, -39.519, 0.72", "2.13529, 475.109, -40.5407, 0.72", "2.12213, 475.268, -40.5824, 0.72", "1.71939, 477.762, -41.2091, 0.72", "1.67752, 477.946, -41.2512, 0.72", "0.788143, 481.013, -41.7647, 0.72", "0.747466, 481.142, -41.784, 0.72", "-0.0415422, 483.397, -42.0515, 0.72", "-0.179972, 483.782, -42.0848, 0.72", "-0.858422, 485.68, -42.1743, 0.72", "-2.27254, 489.654, -42.2898, 0.72", "-2.36441, 489.911, -42.293, 0.72", "-3.35335, 492.911, -42.1342, 0.72", "-3.43528, 493.187, -42.087, 0.72", "-4.23706, 496.272, -41.1442, 0.72", "-4.34494, 496.807, -40.9281, 0.72", "-4.52841, 497.975, -40.3734, 0.72", "-5.1712, 502.671, -38.0751, 0.72", "-5.5434, 505.848, -36.4491, 0.72", "-5.89905, 508.875, -34.9374, 0.72", "-6.16783, 511.281, -33.7455, 0.72", "-6.2236, 511.796, -33.5226, 0.72", "-6.46581, 514.089, -32.6097, 0.72", "-6.55208, 514.795, -32.4167, 0.72", "-6.86985, 517.027, -32.1452, 0.72", "-6.93988, 517.431, -32.1378, 0.72", "-7.59141, 520.241, -32.0841, 0.72" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-66.9339, 553.007, -11.8029, 0.36", "-68.2783, 555.76, -12.2172, 0.36", "-69.3777, 558.011, -12.6134, 0.36", "-69.5901, 558.532, -12.7296, 0.36", "-70.4125, 560.65, -13.2011, 0.36", "-70.5136, 560.914, -13.2542, 0.36", "-71.1685, 562.647, -13.5733, 0.36", "-71.6165, 564.215, -13.8037, 0.36", "-72.2124, 566.588, -14.0698, 0.36", "-72.4041, 567.437, -14.1331, 0.36", "-72.7009, 569.026, -14.1725, 0.36", "-72.7312, 569.262, -14.164, 0.36", "-72.8787, 571.202, -13.963, 0.36", "-72.8957, 571.767, -13.8607, 0.36", "-72.9314, 572.925, -13.5638, 0.36", "-72.9058, 573.431, -13.4558, 0.36", "-72.7609, 574.449, -13.2554, 0.36", "-71.9307, 586.251, -11.6613, 0.36", "-70.549, 597.929, -9.59873, 0.36", "-68.422, 609.059, -5.83908, 0.36", "-64.5705, 619.716, -2.08084, 0.36", "-58.8802, 629.235, 2.33909, 0.36", "-54.9329, 638.742, 8.38664, 0.36", "-51.7204, 648.611, 14.2876, 0.36", "-48.0848, 658.25, 20.3212, 0.36", "-45.5035, 668.601, 25.6794, 0.36" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-66.9339, 553.007, -11.8029, 0.36", "-67.2261, 554.577, -11.9103, 0.36", "-67.2783, 554.813, -11.9284, 0.36", "-67.8867, 557.309, -12.1423, 0.36", "-67.9187, 557.425, -12.1543, 0.36", "-68.6355, 559.876, -12.4264, 0.36", "-68.7836, 560.36, -12.4804, 0.36", "-69.4406, 562.276, -12.7194, 0.36", "-69.5885, 562.683, -12.7729, 0.36", "-70.1002, 563.991, -12.9567, 0.36", "-70.1959, 564.222, -12.9864, 0.36", "-70.6996, 565.355, -13.113, 0.36", "-70.7446, 565.469, -13.1192, 0.36", "-71.4413, 567.506, -13.1223, 0.36", "-71.5341, 567.881, -13.0981, 0.36", "-71.8793, 569.832, -12.8519, 0.36", "-71.8959, 570.044, -12.8068, 0.36", "-71.8075, 572.328, -12.0556, 0.36", "-71.6328, 572.747, -11.7511, 0.36", "-70.5026, 572.865, -10.5129, 0.36", "-70.3275, 572.831, -10.336, 0.36", "-67.9898, 571.941, -8.14611, 0.36", "-66.3402, 571.104, -6.63928, 0.36", "-66.1504, 570.976, -6.46941, 0.36", "-65.698, 570.618, -6.06332, 0.36", "-65.5948, 570.519, -5.97011, 0.36", "-64.8369, 569.78, -5.31384, 0.36", "-59.2891, 564.483, 1.17352, 0.36", "-53.0754, 558.91, 6.76482, 0.36" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-7.59141, 520.241, -32.0841, 0.72", "-5.71311, 521.957, -32.3109, 0.48", "-5.01327, 522.689, -32.4219, 0.48", "-4.82611, 522.937, -32.4324, 0.48", "-3.81599, 524.485, -32.4114, 0.48", "-3.6606, 524.781, -32.3972, 0.48", "-2.97084, 526.246, -32.2995, 0.48", "-2.77181, 526.841, -32.2402, 0.48", "-2.23437, 528.622, -31.9384, 0.48", "-2.14319, 528.921, -31.8705, 0.48", "-1.4883, 531.128, -31.2808, 0.48", "-1.37772, 531.448, -31.1827, 0.48", "-0.589082, 533.475, -30.4731, 0.48", "-0.425737, 533.826, -30.3386, 0.48", "1.13596, 536.657, -29.1859, 0.48", "1.21013, 536.775, -29.1322, 0.48", "2.90491, 539.102, -27.8126, 0.48", "3.19863, 539.46, -27.5782, 0.48", "4.06045, 540.369, -26.8754, 0.48", "4.42156, 540.749, -26.5518, 0.48", "4.79738, 541.121, -26.1634, 0.48", "5.59821, 542.005, -25.2899, 0.48", "5.96298, 542.457, -24.8253, 0.48", "6.0356, 542.577, -24.7142, 0.48", "6.94069, 544.57, -23.0458, 0.48", "6.97792, 544.685, -22.9579, 0.48", "7.31651, 546.083, -21.9766, 0.48", "7.44189, 547.06, -21.4025, 0.48", "7.51712, 548.943, -20.3641, 0.48", "7.50363, 549.354, -20.1519, 0.48", "7.33804, 550.947, -19.3676, 0.48", "7.32024, 551.116, -19.2902, 0.48", "7.03337, 553.552, -18.271, 0.48", "6.94602, 554.477, -17.9466, 0.48", "6.82749, 555.955, -17.4524, 0.48", "6.79466, 556.463, -17.2781, 0.48", "6.7141, 558.879, -16.4409, 0.48", "6.71999, 559.163, -16.3468, 0.48", "6.88271, 561.026, -15.7533, 0.48", "6.95615, 561.769, -15.5272, 0.48", "7.08404, 562.961, -15.1617, 0.48", "7.10897, 563.28, -15.0658, 0.48", "7.20655, 565.669, -14.3706, 0.48", "7.22162, 565.99, -14.2779, 0.48", "7.38677, 568.138, -13.7269, 0.48", "7.41387, 568.42, -13.6641, 0.48", "7.5505, 569.391, -13.4265, 0.48", "7.75586, 570.675, -13.0765, 0.48", "7.84149, 571.204, -12.9284, 0.48", "8.55227, 575.208, -11.7774, 0.48", "8.59797, 575.428, -11.7153, 0.48", "9.00813, 577.325, -11.1693, 0.48", "9.15275, 577.799, -11.0354, 0.48", "10.1589, 580.366, -10.2709, 0.48", "10.3742, 580.844, -10.1294, 0.48", "11.0964, 582.241, -9.73022, 0.48", "11.1646, 582.369, -9.69659, 0.48", "12.8163, 585.37, -9.01705, 0.48", "13.6934, 586.848, -8.71204, 0.48", "13.9479, 587.239, -8.63734, 0.48", "14.7593, 588.515, -8.41634, 0.48", "14.9196, 588.773, -8.37086, 0.48", "15.1972, 589.237, -8.29112, 0.48", "16.7333, 591.962, -7.84937, 0.48", "17.0353, 592.404, -7.78637, 0.48", "17.7704, 593.261, -7.62693, 0.48", "17.9408, 593.423, -7.58528, 0.48", "18.6335, 594.034, -7.38377, 0.48", "19.2098, 594.5, -7.18961, 0.48", "20.5019, 595.523, -6.59967, 0.48", "21.4421, 596.36, -6.07921, 0.48", "22.0675, 597.068, -5.62213, 0.48", "22.8624, 598.218, -4.86267, 0.48", "22.9206, 598.333, -4.78737, 0.48", "23.7051, 600.37, -3.49479, 0.48", "23.9566, 601.196, -2.96364, 0.48", "24.4583, 603.068, -1.71264, 0.48", "24.6502, 603.798, -1.18704, 0.48", "24.9897, 605.046, -0.200515, 0.48", "25.135, 605.523, 0.201526, 0.48", "25.5748, 606.797, 1.37538, 0.48", "25.8255, 607.409, 1.96384, 0.48", "26.4204, 608.602, 3.19155, 0.48", "26.6829, 609.082, 3.71372, 0.48", "27.2525, 610.07, 4.87251, 0.48", "27.4015, 610.345, 5.19343, 0.48", "27.7746, 611.104, 5.99766, 0.48", "27.8121, 611.181, 6.06993, 0.48", "32.8639, 619.415, 13.8701, 0.48", "37.9038, 626.714, 22.5576, 0.48", "44.2893, 634.839, 29.44, 0.48", "51.0102, 643.057, 35.8785, 0.48", "58.4464, 651.469, 41.1802, 0.48", "64.3261, 659.747, 48.3257, 0.48", "69.3769, 666.74, 57.2557, 0.48", "74.4945, 674.7, 65.2942, 0.48", "80.4068, 681.226, 74.0466, 0.48" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-7.59141, 520.241, -32.0841, 0.72", "-7.98521, 522.506, -32.8536, 0.72", "-8.11003, 523.156, -33.0727, 0.72", "-8.41968, 524.734, -33.6817, 0.72", "-8.44176, 524.835, -33.7246, 0.72", "-8.99079, 527.247, -34.7984, 0.72", "-9.08653, 527.664, -34.9802, 0.72", "-9.275, 528.5, -35.4057, 0.72", "-9.45813, 529.256, -35.7788, 0.72", "-9.9296, 530.984, -36.6796, 0.72", "-9.9966, 531.22, -36.8014, 0.72", "-10.3933, 532.495, -37.4221, 0.72", "-10.5392, 532.98, -37.6663, 0.72" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-10.5392, 532.98, -37.6663, 0.72", "-11.2782, 533.739, -37.7936, 0.48", "-12.1071, 534.716, -37.9433, 0.48", "-12.1657, 534.786, -37.9545, 0.48", "-13.0318, 535.761, -37.8437, 0.48", "-13.1681, 535.911, -37.8091, 0.48", "-13.9467, 536.749, -37.5873, 0.48", "-14.1136, 536.938, -37.5248, 0.48", "-14.6132, 537.515, -37.3188, 0.48", "-16.238, 539.258, -36.6508, 0.48", "-16.4586, 539.483, -36.55, 0.48", "-17.1891, 540.243, -36.1941, 0.48", "-17.3237, 540.382, -36.1264, 0.48", "-17.9094, 541.032, -35.8448, 0.48", "-18.0007, 541.149, -35.8081, 0.48", "-18.6098, 542.063, -35.7231, 0.48", "-18.6655, 542.156, -35.6928, 0.48", "-18.9345, 542.65, -35.4473, 0.48", "-19.0211, 542.813, -35.3573, 0.48", "-19.3552, 543.397, -34.9933, 0.48", "-19.3971, 543.466, -34.9491, 0.48", "-20.514, 545.191, -33.7873, 0.48", "-20.5803, 545.295, -33.7144, 0.48", "-20.9362, 545.868, -33.3011, 0.48", "-21.4607, 546.662, -32.7393, 0.48", "-21.7964, 547.14, -32.4054, 0.48", "-21.9431, 547.352, -32.2827, 0.48", "-22.0134, 547.454, -32.24, 0.48", "-22.1461, 547.66, -32.1513, 0.48", "-22.7938, 548.714, -31.6789, 0.48", "-22.8644, 548.847, -31.628, 0.48", "-23.2613, 549.631, -31.3329, 0.48", "-23.3167, 549.74, -31.2907, 0.48", "-24.139, 551.422, -30.6507, 0.48", "-24.2286, 551.615, -30.5791, 0.48", "-24.7239, 552.748, -30.178, 0.48", "-24.8913, 553.176, -30.0414, 0.48", "-25.2075, 554.095, -29.7797, 0.48", "-25.3793, 554.701, -29.6452, 0.48", "-25.4589, 555.066, -29.584, 0.48", "-25.4776, 555.163, -29.5681, 0.48", "-25.7164, 556.551, -29.3415, 0.48", "-25.8063, 557.004, -29.2695, 0.48", "-26.0833, 558.283, -29.0511, 0.48", "-26.1658, 558.601, -28.988, 0.48", "-26.4556, 559.604, -28.7726, 0.48", "-26.4829, 559.69, -28.753, 0.48", "-27.0203, 561.233, -28.3888, 0.48", "-27.1064, 561.518, -28.3228, 0.48", "-27.4439, 562.774, -28.0456, 0.48", "-27.4642, 562.862, -28.0268, 0.48", "-27.7911, 564.502, -27.6764, 0.48", "-27.8191, 564.773, -27.6399, 0.48", "-27.8261, 566.588, -27.5354, 0.48", "-27.8179, 566.793, -27.5546, 0.48", "-27.7414, 567.772, -27.7732, 0.48", "-27.7379, 567.882, -27.8074, 0.48", "-27.7961, 570.066, -28.6818, 0.48", "-27.801, 570.115, -28.7022, 0.48", "-28.1575, 572.284, -29.6539, 0.36", "-28.1839, 572.401, -29.7033, 0.36", "-28.709, 574.252, -30.453, 0.36", "-29.0108, 575.183, -30.7711, 0.36", "-29.5707, 576.614, -31.1376, 0.36", "-29.6935, 576.916, -31.2008, 0.36", "-30.0395, 577.775, -31.3054, 0.36", "-30.1364, 578.04, -31.3308, 0.36", "-30.5101, 579.114, -31.3302, 0.36", "-30.5595, 579.252, -31.3153, 0.36", "-30.8014, 579.751, -31.2188, 0.36", "-31.4883, 581.041, -30.9318, 0.36", "-31.5222, 581.099, -30.9171, 0.36", "-32.3008, 582.354, -30.5919, 0.36", "-32.4247, 582.55, -30.5409, 0.36", "-33.8996, 585.07, -29.9803, 0.36", "-33.9435, 585.149, -29.965, 0.36", "-34.6471, 586.358, -29.7525, 0.36", "-34.9324, 586.849, -29.6787, 0.36", "-35.4553, 587.748, -29.5723, 0.36", "-36.3626, 589.277, -29.3958, 0.36", "-36.6562, 589.803, -29.3369, 0.36", "-37.2185, 590.837, -29.2414, 0.36", "-37.5742, 591.511, -29.2031, 0.36", "-37.893, 592.113, -29.183, 0.36", "-37.9785, 592.275, -29.182, 0.36", "-38.8118, 593.925, -29.2004, 0.36", "-39.04, 594.427, -29.2171, 0.36", "-39.5437, 595.614, -29.2436, 0.36", "-39.7523, 596.106, -29.292, 0.36", "-40.1073, 596.932, -29.4219, 0.36", "-40.1881, 597.117, -29.4585, 0.36", "-40.2396, 597.233, -29.4859, 0.36", "-41.1336, 599.471, -30.0289, 0.36", "-41.8029, 601.368, -30.5, 0.36", "-41.9038, 601.718, -30.5818, 0.36", "-42.1975, 602.945, -30.8548, 0.36", "-42.2333, 603.14, -30.9089, 0.36", "-42.3259, 604.213, -31.2358, 0.36", "-42.3229, 604.3, -31.2646, 0.36", "-42.2353, 605.646, -31.6359, 0.36", "-42.2318, 605.706, -31.6506, 0.36", "-42.1107, 607.956, -32.205, 0.36", "-42.1176, 609.326, -32.5273, 0.36", "-42.1402, 609.778, -32.6311, 0.36", "-42.384, 611.683, -33.0387, 0.36", "-42.9165, 614.065, -33.5608, 0.36", "-42.9518, 614.187, -33.5867, 0.36", "-43.6832, 616.0, -33.9725, 0.36", "-43.7711, 616.18, -34.0187, 0.36", "-44.7389, 617.986, -34.5648, 0.36", "-46.152, 620.351, -35.4176, 0.36", "-46.2005, 620.423, -35.4471, 0.36", "-47.5222, 622.347, -36.2131, 0.36", "-47.7175, 622.614, -36.3203, 0.36", "-48.3708, 623.438, -36.6365, 0.36", "-48.5689, 623.628, -36.6936, 0.36", "-49.6424, 624.159, -36.5422, 0.36", "-50.36, 624.374, -36.199, 0.36", "-51.0618, 624.487, -35.6962, 0.36", "-51.2124, 624.514, -35.5823, 0.36", "-52.3574, 624.728, -34.6662, 0.36", "-53.1228, 624.888, -34.1197, 0.36", "-54.4144, 625.17, -33.3988, 0.36", "-54.5307, 625.197, -33.3479, 0.36", "-55.5865, 625.492, -32.9608, 0.36", "-56.2299, 625.681, -32.7651, 0.36", "-57.8044, 626.156, -32.4415, 0.36", "-59.3016, 626.583, -32.2402, 0.36", "-59.7388, 626.69, -32.1899, 0.36", "-60.7853, 627.0, -32.0333, 0.36", "-61.1395, 627.123, -31.9622, 0.36", "-62.1442, 627.572, -31.683, 0.36", "-62.2349, 627.624, -31.6468, 0.36", "-63.6571, 628.568, -30.9748, 0.36", "-65.176, 629.626, -30.2073, 0.36", "-65.7014, 630.056, -29.9342, 0.36", "-66.1885, 630.518, -29.681, 0.36", "-66.4613, 630.814, -29.5372, 0.36", "-66.9741, 631.394, -29.2735, 0.36", "-67.136, 631.579, -29.1911, 0.36", "-68.2687, 632.627, -28.6415, 0.36", "-68.634, 632.861, -28.4903, 0.36", "-69.3196, 633.154, -28.2414, 0.36", "-70.0936, 633.381, -27.9517, 0.36", "-71.0358, 633.559, -27.5608, 0.36", "-71.3373, 633.59, -27.4351, 0.36", "-72.5579, 633.61, -26.8866, 0.36", "-73.0504, 633.616, -26.6646, 0.36", "-74.1788, 633.653, -26.1606, 0.36", "-74.4669, 633.68, -26.0417, 0.36", "-75.8626, 633.876, -25.4645, 0.36", "-76.0852, 633.911, -25.3701, 0.36", "-77.051, 634.086, -24.9044, 0.36", "-77.2556, 634.118, -24.8024, 0.36", "-78.1864, 634.233, -24.3826, 0.36", "-78.2488, 634.242, -24.3555, 0.36", "-85.0187, 634.841, -20.8849, 0.36", "-91.7065, 636.972, -17.8899, 0.36", "-98.882, 637.962, -15.4882, 0.36", "-106.208, 638.731, -13.4948, 0.36", "-113.818, 639.286, -13.375, 0.36" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-10.5392, 532.98, -37.6663, 0.72", "-10.5875, 535.835, -39.3071, 0.72", "-10.5959, 535.92, -39.3576, 0.72", "-10.8717, 538.099, -40.6427, 0.72", "-11.0025, 539.096, -41.1816, 0.72", "-11.1731, 540.495, -41.8966, 0.72", "-11.187, 540.654, -41.9732, 0.72", "-11.276, 543.792, -43.1744, 0.72", "-11.2735, 543.92, -43.2195, 0.72", "-11.1469, 546.386, -44.0145, 0.72", "-11.0964, 547.109, -44.2234, 0.72", "-10.9257, 549.4, -44.8955, 0.72", "-10.6553, 553.781, -46.1229, 0.72", "-10.6517, 553.964, -46.1677, 0.72", "-10.742, 555.302, -46.4871, 0.72", "-10.8079, 555.751, -46.5919, 0.72", "-11.252, 557.633, -47.0074, 0.72", "-12.0628, 560.103, -47.4876, 0.6", "-13.5445, 563.872, -48.1643, 0.6", "-14.4743, 566.307, -48.546, 0.6", "-14.6041, 566.658, -48.5929, 0.6", "-15.1026, 568.203, -48.7447, 0.6", "-15.9739, 571.345, -48.9487, 0.48", "-16.0019, 571.502, -48.9621, 0.48", "-16.1137, 573.896, -49.2021, 0.48", "-16.0875, 574.191, -49.2336, 0.48", "-15.6979, 576.485, -49.5116, 0.48", "-15.6761, 576.57, -49.5262, 0.48", "-14.7819, 579.491, -50.1376, 0.48", "-14.733, 579.669, -50.175, 0.48", "-14.3427, 581.59, -50.5502, 0.48", "-14.3226, 581.72, -50.5738, 0.48", "-13.8465, 586.016, -51.2706, 0.48", "-13.7975, 586.559, -51.3461, 0.48", "-13.5768, 589.354, -51.6453, 0.48", "-13.1608, 594.438, -52.1329, 0.48", "-13.1508, 594.571, -52.1434, 0.48", "-12.9865, 596.746, -52.2687, 0.48", "-12.9534, 597.227, -52.2807, 0.48", "-12.6708, 600.816, -52.3529, 0.48", "-12.6251, 601.225, -52.3581, 0.48", "-12.2195, 604.27, -52.3623, 0.48", "-12.1285, 604.956, -52.3637, 0.48", "-11.8522, 607.076, -52.374, 0.48", "-11.6388, 608.806, -52.3834, 0.48", "-11.5043, 610.199, -52.3915, 0.48", "-11.2538, 613.15, -52.4123, 0.48", "-11.247, 613.283, -52.4145, 0.48", "-11.2046, 617.115, -52.5138, 0.48", "-11.2262, 617.649, -52.5332, 0.48", "-11.3937, 619.986, -52.6583, 0.48", "-11.4303, 620.36, -52.6866, 0.48", "-11.5376, 621.9, -52.8753, 0.48", "-11.539, 621.985, -52.9004, 0.48", "-11.5147, 623.969, -53.7056, 0.48", "-11.3601, 625.88, -54.6152, 0.48", "-11.3112, 626.115, -54.7547, 0.48", "-10.9212, 627.459, -55.634, 0.48", "-9.7121, 630.39, -57.8501, 0.48" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-9.7121, 630.39, -57.8501, 0.48", "-9.0104, 630.473, -59.6119, 0.48", "-8.28603, 630.636, -61.445, 0.48", "-8.19123, 630.666, -61.6987, 0.48", "-7.87418, 630.82, -62.5967, 0.48", "-7.67798, 630.932, -63.1636, 0.48", "-5.45921, 632.611, -68.773, 0.48", "-4.98576, 633.061, -69.9979, 0.48", "-4.39824, 633.62, -71.2773, 0.48", "-3.64491, 634.394, -72.6887, 0.48", "-3.53727, 634.518, -72.8517, 0.48", "-1.55394, 636.971, -75.0695, 0.48", "-1.41086, 637.18, -75.1723, 0.48", "-0.173283, 639.096, -75.9991, 0.48", "-0.0455852, 639.32, -76.0881, 0.48", "0.966653, 641.299, -76.8835, 0.48", "1.04, 641.464, -76.9522, 0.48", "2.44581, 645.091, -78.4834, 0.48", "2.61765, 645.567, -78.6872, 0.48", "3.35596, 647.88, -79.8365, 0.48", "3.46358, 648.219, -80.0208, 0.48", "4.27797, 650.762, -81.5452, 0.48", "4.89257, 652.656, -82.814, 0.48", "4.96561, 652.882, -82.9774, 0.48", "5.98178, 656.189, -85.4508, 0.48", "6.07065, 656.527, -85.7036, 0.48", "6.48128, 658.505, -87.1745, 0.48", "6.64724, 660.026, -88.3937, 0.48", "6.69803, 661.428, -89.5464, 0.48", "6.68998, 661.68, -89.7445, 0.48", "6.35547, 664.622, -91.9135, 0.48", "6.24901, 665.108, -92.2927, 0.48", "5.57252, 667.173, -93.9894, 0.48", "5.35319, 667.677, -94.4151, 0.48", "4.76413, 668.725, -95.3901, 0.48", "4.68095, 668.852, -95.5091, 0.48", "2.88716, 671.063, -97.7232, 0.48", "2.69691, 671.301, -97.9831, 0.48", "1.72555, 672.587, -99.4161, 0.48", "1.58183, 672.807, -99.682, 0.48", "1.19451, 673.495, -100.613, 0.48", "1.04578, 673.805, -101.035, 0.48", "0.0599568, 676.409, -104.557, 0.48", "0.00817278, 676.573, -104.769, 0.48", "-0.314876, 677.876, -106.446, 0.48", "-0.605042, 679.058, -108.004, 0.48", "-0.832612, 680.014, -109.337, 0.48", "-0.902532, 680.281, -109.732, 0.48", "-1.13654, 681.024, -110.835, 0.48", "-1.34329, 681.614, -111.731, 0.48", "-2.01303, 683.409, -114.479, 0.48", "-2.46255, 684.56, -116.335, 0.48", "-2.88053, 685.574, -118.011, 0.48", "-3.60022, 687.269, -120.778, 0.48", "-3.64455, 687.372, -120.937, 0.48", "-4.41992, 689.12, -123.501, 0.48", "-4.83553, 689.931, -124.66, 0.48", "-5.48278, 691.047, -126.247, 0.48", "-5.54672, 691.15, -126.397, 0.48", "-6.01054, 691.852, -127.505, 0.48", "-6.90118, 693.21, -129.631, 0.48", "-8.1277, 695.08, -132.464, 0.48", "-8.43243, 695.586, -133.138, 0.48", "-8.98954, 696.715, -134.522, 0.48", "-9.32809, 697.689, -135.618, 0.48", "-9.5283, 698.596, -136.583, 0.48", "-9.588, 699.196, -137.169, 0.48", "-9.5992, 700.787, -138.713, 0.48", "-9.5595, 703.278, -141.148, 0.48", "-9.5204, 704.71, -142.803, 0.48", "-9.47673, 705.818, -144.153, 0.48", "-9.40033, 707.104, -145.849, 0.48", "-9.38056, 707.356, -146.215, 0.48", "-9.284, 708.437, -148.018, 0.48", "-9.33389, 711.631, -153.7, 0.48" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-9.7121, 630.39, -57.8501, 0.48", "-9.6882, 632.464, -57.6209, 0.48", "-9.757, 634.466, -57.3638, 0.48", "-9.7618, 634.584, -57.3478, 0.48", "-9.8371, 637.039, -56.9946, 0.48", "-9.8377, 637.312, -56.946, 0.48", "-9.7919, 640.004, -56.4159, 0.48", "-9.7902, 640.146, -56.3949, 0.48", "-9.7715, 641.77, -56.2577, 0.48", "-9.7692, 642.497, -56.2845, 0.48", "-9.7774, 644.077, -56.5747, 0.48", "-9.7856, 644.19, -56.6136, 0.48", "-10.0855, 647.121, -57.9363, 0.48", "-10.1911, 647.666, -58.1939, 0.48", "-10.7567, 649.751, -59.2429, 0.48", "-10.8765, 650.118, -59.4301, 0.48", "-12.1883, 653.67, -61.2753, 0.48", "-12.3373, 654.095, -61.4675, 0.48", "-13.0576, 656.263, -62.3088, 0.48", "-13.1976, 656.718, -62.488, 0.48", "-13.6268, 658.228, -63.0803, 0.48", "-13.7166, 658.561, -63.2054, 0.48", "-14.5362, 661.727, -64.3027, 0.48", "-14.7307, 662.525, -64.5551, 0.48", "-14.7787, 662.77, -64.6141, 0.48", "-15.0462, 664.542, -64.8242, 0.48", "-15.1626, 665.264, -64.8249, 0.48", "-15.3959, 666.585, -64.7362, 0.48", "-15.5641, 667.513, -64.6237, 0.48", "-15.8369, 669.098, -64.4051, 0.48", "-16.455, 672.869, -63.8742, 0.48", "-16.8328, 675.36, -63.5135, 0.48", "-16.8493, 675.478, -63.498, 0.48", "-17.4099, 679.632, -63.0218, 0.48", "-17.4509, 680.007, -62.9816, 0.48", "-17.7186, 682.552, -62.6724, 0.48", "-17.7613, 683.025, -62.6003, 0.48", "-17.855, 684.345, -62.3762, 0.48", "-17.8743, 684.689, -62.3136, 0.48", "-18.0312, 688.535, -61.5488, 0.48", "-18.0808, 690.737, -61.1511, 0.48", "-18.0817, 690.904, -61.1227, 0.48", "-18.0309, 692.89, -60.773, 0.48", "-17.8952, 695.966, -60.255, 0.48", "-17.8732, 696.455, -60.2143, 0.48", "-17.751, 698.674, -60.2405, 0.48", "-17.7364, 698.823, -60.2533, 0.48", "-17.4905, 701.291, -60.5978, 0.48", "-17.449, 701.699, -60.6847, 0.48", "-17.2343, 704.922, -61.5883, 0.48", "-17.226, 705.036, -61.6239, 0.48", "-17.0948, 706.883, -62.2159, 0.48", "-17.0736, 707.109, -62.2946, 0.48", "-16.8536, 708.702, -62.93, 0.48", "-16.8229, 708.858, -62.9904, 0.48", "-16.6302, 709.648, -63.286, 0.48", "-16.1785, 711.499, -64.0774, 0.48", "-15.7383, 713.411, -64.91, 0.48", "-15.41, 714.967, -65.5667, 0.48", "-15.3212, 715.568, -65.8187, 0.48", "-15.2139, 716.669, -66.2707, 0.48", "-15.207, 716.827, -66.3325, 0.48", "-15.1772, 720.163, -67.5778, 0.48", "-15.1779, 720.391, -67.6519, 0.48", "-15.1709, 723.162, -68.5048, 0.48", "-15.164, 723.426, -68.5887, 0.48", "-15.1066, 724.708, -69.0332, 0.48", "-15.0968, 724.867, -69.0927, 0.48", "-14.8859, 727.356, -70.1168, 0.48", "-14.842, 727.787, -70.2765, 0.48", "-14.6483, 729.394, -70.8295, 0.48", "-14.6305, 729.575, -70.8904, 0.48", "-14.394, 732.589, -71.9159, 0.48", "-14.3741, 732.957, -72.0399, 0.48", "-14.3784, 735.11, -72.7956, 0.48", "-14.3945, 735.555, -72.9592, 0.48", "-14.5136, 737.389, -73.6743, 0.48", "-14.5398, 737.668, -73.786, 0.48", "-15.0372, 740.93, -75.2148, 0.48", "-15.3306, 742.599, -75.9783, 0.48", "-15.7217, 744.631, -76.8713, 0.48", "-15.8017, 745.037, -77.0358, 0.48", "-16.1514, 746.592, -77.5888, 0.48", "-16.8595, 749.479, -78.4863, 0.48", "-16.9267, 749.732, -78.5473, 0.48", "-17.6343, 752.625, -79.0566, 0.48", "-17.6918, 752.885, -79.0911, 0.48", "-18.0761, 754.891, -79.2967, 0.48", "-18.0946, 755.009, -79.3051, 0.48", "-18.2962, 757.055, -79.3078, 0.48", "-18.3099, 757.238, -79.3238, 0.48", "-18.2893, 758.399, -79.5503, 0.48", "-18.2829, 758.467, -79.5646, 0.48", "-18.1886, 759.059, -79.6965, 0.48", "-18.1779, 759.127, -79.7097, 0.48", "-17.6647, 762.395, -80.2982, 0.48", "-17.4217, 764.731, -80.6179, 0.48", "-17.2883, 766.797, -80.8298, 0.48", "-17.2769, 767.045, -80.8482, 0.48", "-17.2115, 769.095, -80.934, 0.48", "-17.2071, 769.265, -80.9263, 0.48", "-17.1879, 771.382, -80.5461, 0.48", "-17.193, 771.499, -80.5189, 0.48", "-17.3188, 772.919, -80.1618, 0.48", "-17.3254, 772.986, -80.1443, 0.48", "-17.5532, 775.334, -79.5348, 0.48", "-17.6056, 775.935, -79.3871, 0.48", "-17.7042, 776.881, -79.2102, 0.48", "-17.9283, 778.361, -79.0174, 0.48", "-17.9678, 778.525, -79.01, 0.48", "-18.6602, 780.703, -79.1724, 0.48", "-18.7086, 780.808, -79.2027, 0.48", "-19.4603, 782.224, -79.7912, 0.48", "-19.6177, 782.487, -79.936, 0.48", "-20.3942, 783.689, -80.739, 0.48", "-20.8038, 784.279, -81.1681, 0.48", "-21.7568, 785.464, -82.2098, 0.48", "-21.8572, 785.59, -82.327, 0.48", "-22.5323, 786.45, -83.1474, 0.48", "-22.651, 786.604, -83.2873, 0.48", "-23.0738, 787.17, -83.7873, 0.48", "-23.5701, 787.851, -84.3197, 0.48", "-24.6559, 789.28, -85.466, 0.48", "-24.9506, 789.635, -85.7739, 0.48", "-25.5221, 790.258, -86.3707, 0.48", "-25.5894, 790.329, -86.44, 0.48", "-25.9611, 790.712, -86.8109, 0.48", "-26.6482, 791.425, -87.4259, 0.48", "-27.4085, 792.112, -88.0741, 0.48", "-27.4628, 792.158, -88.129, 0.48" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-9.33389, 711.631, -153.7, 0.48", "-7.49866, 711.922, -153.149, 0.48", "-6.97122, 712.015, -153.015, 0.48", "-5.70055, 712.281, -152.777, 0.48", "-4.24821, 712.627, -152.689, 0.48", "-4.15195, 712.651, -152.689, 0.48", "-3.47814, 712.819, -152.712, 0.48", "-2.96797, 712.961, -152.784, 0.48", "-1.50687, 713.374, -153.06, 0.48", "0.117837, 713.845, -153.341, 0.48", "0.180467, 713.864, -153.349, 0.48", "1.50015, 714.267, -153.531, 0.48", "1.88741, 714.387, -153.585, 0.48", "3.08271, 714.752, -153.733, 0.48", "4.53077, 715.192, -153.856, 0.48", "4.5937, 715.212, -153.857, 0.48", "6.11004, 715.708, -153.877, 0.48", "6.30333, 715.779, -153.879, 0.48" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-9.33389, 711.631, -153.7, 0.48", "-9.31679, 713.002, -154.322, 0.48", "-9.3155, 713.054, -154.346, 0.48", "-9.27036, 714.387, -154.912, 0.48", "-9.26677, 714.487, -154.953, 0.48", "-9.19862, 715.748, -155.436, 0.48", "-9.11787, 717.076, -155.932, 0.48", "-9.10928, 717.178, -155.967, 0.48", "-9.03882, 717.968, -156.264, 0.48", "-9.02088, 718.117, -156.325, 0.48", "-8.83951, 719.457, -156.888, 0.48", "-8.82147, 719.577, -156.939, 0.48", "-8.67816, 720.492, -157.315, 0.48", "-8.67034, 720.544, -157.336, 0.48", "-8.56904, 721.403, -157.673, 0.48", "-8.45472, 722.718, -158.167, 0.48", "-8.44698, 722.887, -158.228, 0.48", "-8.41089, 724.485, -158.774, 0.48", "-8.4101, 724.558, -158.796, 0.48", "-8.41111, 726.046, -159.21, 0.48", "-8.41394, 726.406, -159.309, 0.48", "-8.40311, 727.245, -159.542, 0.48", "-8.38399, 727.541, -159.636, 0.48", "-8.2637, 728.513, -160.007, 0.48", "-8.24085, 728.624, -160.053, 0.48", "-7.92793, 729.658, -160.626, 0.48", "-7.87365, 729.818, -160.729, 0.48", "-7.56679, 730.639, -161.303, 0.48", "-7.47821, 730.874, -161.485, 0.48", "-7.24892, 731.498, -162.051, 0.48", "-6.80056, 732.856, -163.347, 0.48", "-6.79224, 732.896, -163.386, 0.48", "-6.70476, 733.645, -164.084, 0.48", "-6.70116, 733.967, -164.361, 0.48", "-6.75179, 734.914, -165.115, 0.48", "-6.93076, 736.28, -166.103, 0.48", "-7.248, 738.008, -167.213, 0.48", "-7.31867, 738.307, -167.383, 0.48", "-7.6566, 739.364, -167.916, 0.48", "-7.71232, 739.518, -167.98, 0.48", "-7.91847, 740.041, -168.13, 0.48", "-7.94067, 740.093, -168.141, 0.48", "-8.40273, 741.215, -168.349, 0.48", "-8.81241, 742.242, -168.572, 0.48", "-8.92678, 742.531, -168.639, 0.48", "-9.30257, 743.46, -168.848, 0.48", "-9.45282, 743.811, -168.918, 0.48", "-10.0558, 745.164, -169.16, 0.48", "-10.2165, 745.507, -169.207, 0.48", "-10.6658, 746.427, -169.28, 0.48", "-10.84, 746.765, -169.291, 0.48", "-11.1999, 747.433, -169.288, 0.48", "-11.2452, 747.517, -169.283, 0.48", "-12.3981, 749.613, -169.091, 0.48", "-12.4714, 749.747, -169.08, 0.48", "-13.2682, 751.214, -168.975, 0.48", "-13.3952, 751.456, -168.959, 0.48", "-14.0644, 752.76, -168.874, 0.48", "-14.0991, 752.828, -168.869, 0.48", "-14.9541, 754.525, -168.72, 0.48", "-15.0282, 754.678, -168.708, 0.48", "-15.6128, 756.078, -168.633, 0.48", "-15.6487, 756.18, -168.63, 0.48", "-15.8815, 757.073, -168.635, 0.48", "-16.085, 758.066, -168.653, 0.48", "-16.0911, 758.16, -168.661, 0.48", "-16.0897, 759.359, -168.828, 0.48", "-16.0638, 759.667, -168.884, 0.48", "-15.9396, 760.578, -169.04, 0.48", "-15.9227, 760.651, -169.052, 0.48", "-15.2112, 763.222, -169.451, 0.48", "-15.1401, 763.449, -169.484, 0.48", "-14.6926, 764.741, -169.659, 0.48", "-14.4345, 765.387, -169.728, 0.48", "-13.4088, 767.654, -169.924, 0.48", "-13.335, 767.801, -169.934, 0.48", "-12.8197, 768.695, -169.971, 0.48", "-12.7649, 768.787, -169.975, 0.48", "-12.155, 769.825, -170.024, 0.48", "-12.1273, 769.874, -170.026, 0.48", "-11.2585, 771.583, -169.982, 0.48", "-11.2345, 771.635, -169.978, 0.48", "-10.7865, 772.704, -169.888, 0.48", "-10.2915, 773.986, -169.772, 0.48", "-10.1639, 774.364, -169.738, 0.48", "-9.6943, 775.804, -169.586, 0.48", "-9.5242, 776.372, -169.508, 0.48", "-9.25189, 777.318, -169.376, 0.48", "-9.19143, 777.556, -169.343, 0.48", "-8.91332, 778.681, -169.178, 0.48" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_26", "apic_1", "axon_1", "apic_28", "apic_27", "apic_23", "apic_2", "apic_25", "apic_24", "apic_22", "apic_3", "apic_21", "apic_4", "apic_20", "apic_5", "apic_7", "apic_6", "apic_17", "apic_8", "apic_19", "apic_18", "apic_16", "apic_9", "apic_15", "apic_10", "apic_12", "apic_11", "apic_14", "apic_13" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_43", "dend_30", "dend_19", "dend_10", "dend_0", "apic_26", "apic_1", "dend_49", "dend_44", "dend_38", "dend_31", "dend_25", "dend_20", "dend_12", "dend_11", "dend_9", "dend_4", "dend_1", "apic_28", "apic_27", "apic_23", "apic_2", "dend_51", "dend_50", "dend_48", "dend_45", "dend_42", "dend_39", "dend_35", "dend_32", "dend_29", "dend_26", "dend_24", "dend_21", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "apic_25", "apic_24", "apic_22", "apic_3", "dend_53", "dend_52", "dend_47", "dend_46", "dend_41", "dend_40", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_8", "dend_7", "apic_21", "apic_4", "apic_20", "apic_5", "apic_7", "apic_6", "apic_17", "apic_8", "apic_19", "apic_18", "apic_16", "apic_9", "apic_15", "apic_10", "apic_12", "apic_11", "apic_14", "apic_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_26", "apic_1", "apic_28", "apic_27", "apic_23", "apic_2", "apic_25", "apic_24", "apic_22", "apic_3", "apic_21", "apic_4", "apic_20", "apic_5", "apic_7", "apic_6", "apic_17", "apic_8", "apic_19", "apic_18", "apic_16", "apic_9", "apic_15", "apic_10", "apic_12", "apic_11", "apic_14", "apic_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_26", "apic_1", "apic_28", "apic_27", "apic_23", "apic_2", "apic_25", "apic_24", "apic_22", "apic_3", "apic_21", "apic_4", "apic_20", "apic_5", "apic_7", "apic_6", "apic_17", "apic_8", "apic_19", "apic_18", "apic_16", "apic_9", "apic_15", "apic_10", "apic_12", "apic_11", "apic_14", "apic_13" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_43", "dend_30", "dend_19", "dend_10", "dend_0", "apic_26", "apic_1", "dend_49", "dend_44", "dend_38", "dend_31", "dend_25", "dend_20", "dend_12", "dend_11", "dend_9", "dend_4", "dend_1", "apic_28", "apic_27", "apic_23", "apic_2", "dend_51", "dend_50", "dend_48", "dend_45", "dend_42", "dend_39", "dend_35", "dend_32", "dend_29", "dend_26", "dend_24", "dend_21", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "apic_25", "apic_24", "apic_22", "apic_3", "dend_53", "dend_52", "dend_47", "dend_46", "dend_41", "dend_40", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_8", "dend_7", "apic_21", "apic_4", "apic_20", "apic_5", "apic_7", "apic_6", "apic_17", "apic_8", "apic_19", "apic_18", "apic_16", "apic_9", "apic_15", "apic_10", "apic_12", "apic_11", "apic_14", "apic_13" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_30", "dend_19", "dend_10", "dend_0", "dend_49", "dend_44", "dend_38", "dend_31", "dend_25", "dend_20", "dend_12", "dend_11", "dend_9", "dend_4", "dend_1", "dend_51", "dend_50", "dend_48", "dend_45", "dend_42", "dend_39", "dend_35", "dend_32", "dend_29", "dend_26", "dend_24", "dend_21", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_53", "dend_52", "dend_47", "dend_46", "dend_41", "dend_40", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24", "apic_25", "apic_26", "apic_27", "apic_28" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.025689999",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039763",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.288755",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.029455999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "6.71E-4",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098377",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.957198",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "1.936176",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.072928995",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0038689997",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.97688496",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.8399997E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.9999996E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "4.59E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0055919997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr231_L6_TPC_L1_f2d985e7ff_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_26, id: apic_26, parent: apic_0
create apic_26
public apic_26
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_0
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_28, id: apic_28, parent: apic_26
create apic_28
public apic_28
// Section: apic_27, id: apic_27, parent: apic_26
create apic_27
public apic_27
// Section: apic_23, id: apic_23, parent: apic_1
create apic_23
public apic_23
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_25, id: apic_25, parent: apic_23
create apic_25
public apic_25
// Section: apic_24, id: apic_24, parent: apic_23
create apic_24
public apic_24
// Section: apic_22, id: apic_22, parent: apic_2
create apic_22
public apic_22
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_21, id: apic_21, parent: apic_3
create apic_21
public apic_21
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_20, id: apic_20, parent: apic_4
create apic_20
public apic_20
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_15, id: apic_15, parent: apic_9
create apic_15
public apic_15
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_26, apic_1, axon_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_30, dend_19, dend_10, dend_0, apic_26, apic_1, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, apic_28, apic_27, apic_23, apic_2, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, apic_25, apic_24, apic_22, apic_3, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_26, apic_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_26, apic_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_30, dend_19, dend_10, dend_0, apic_26, apic_1, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, apic_28, apic_27, apic_23, apic_2, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, apic_25, apic_24, apic_22, apic_3, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_30, dend_19, dend_10, dend_0, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_85
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26, apic_27, apic_28], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999998551026838)
    connect dend_43(0), soma_0(0.4999998551026838)
    connect dend_30(0), soma_0(0.4999998551026838)
    connect dend_19(0), soma_0(0.4999998551026838)
    connect dend_10(0), soma_0(0.4999998551026838)
    connect dend_0(0), soma_0(0.4999998551026838)
    connect axon_0(0), soma_0(1.0)
    connect apic_26(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_0(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_28(0), apic_26(1.0)
    connect apic_27(0), apic_26(1.0)
    connect apic_23(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_25(0), apic_23(1.0)
    connect apic_24(0), apic_23(1.0)
    connect apic_22(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_21(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_20(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_15(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.03395, 3.46126, 0.0, 4.02624 ) }
    soma_0 { pt3dadd( -5.40206, 3.10028, 0.0, 7.63249 ) }
    soma_0 { pt3dadd( -4.77017, 2.73931, 0.0, 9.13419 ) }
    soma_0 { pt3dadd( -4.13828, 2.37834, 0.0, 10.1593 ) }
    soma_0 { pt3dadd( -3.50639, 2.01736, 0.0, 10.7784 ) }
    soma_0 { pt3dadd( -2.8745, 1.65639, 0.0, 11.2424 ) }
    soma_0 { pt3dadd( -2.24261, 1.29542, 0.0, 11.6482 ) }
    soma_0 { pt3dadd( -1.61072, 0.934444, 0.0, 11.8964 ) }
    soma_0 { pt3dadd( -0.978829, 0.573471, 0.0, 11.9658 ) }
    soma_0 { pt3dadd( -0.346938, 0.212498, 0.0, 11.8936 ) }
    soma_0 { pt3dadd( 0.284952, -0.148476, 0.0, 11.75 ) }
    soma_0 { pt3dadd( 0.916843, -0.509449, 0.0, 11.4122 ) }
    soma_0 { pt3dadd( 1.54873, -0.870422, 0.0, 10.7166 ) }
    soma_0 { pt3dadd( 2.18062, -1.2314, 0.0, 9.92593 ) }
    soma_0 { pt3dadd( 2.81251, -1.59237, 0.0, 9.06177 ) }
    soma_0 { pt3dadd( 3.44441, -1.95334, 0.0, 8.18674 ) }
    soma_0 { pt3dadd( 4.0763, -2.31431, 0.0, 6.96573 ) }
    soma_0 { pt3dadd( 4.70819, -2.67529, 0.0, 5.76679 ) }
    soma_0 { pt3dadd( 5.34008, -3.03626, 0.0, 4.82206 ) }
    soma_0 { pt3dadd( 5.97197, -3.39723, 0.0, 3.69325 ) }
    soma_0 { pt3dadd( 6.60386, -3.75821, 0.0, 2.12851 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 3.70325, 3.95779, -3.96046, 2.89 ) }
    apic_0 { pt3dadd( 3.8073, 4.09441, -4.08831, 2.89 ) }
    apic_0 { pt3dadd( 4.52076, 5.47979, -4.08825, 2.89 ) }
    apic_0 { pt3dadd( 5.10507, 6.60233, -4.08504, 2.65 ) }
    apic_0 { pt3dadd( 5.14623, 6.68104, -4.08514, 2.65 ) }
    apic_0 { pt3dadd( 5.72325, 7.72381, -4.08414, 2.41 ) }
    apic_0 { pt3dadd( 6.44354, 9.05459, -4.08084, 2.17 ) }
    apic_0 { pt3dadd( 6.48198, 9.13467, -4.0808, 2.17 ) }
    apic_0 { pt3dadd( 6.95659, 10.3138, -4.05585, 2.05 ) }
    apic_0 { pt3dadd( 6.98445, 10.3981, -4.05322, 2.05 ) }
    apic_0 { pt3dadd( 7.24205, 11.3163, -4.02371, 1.93 ) }
    apic_0 { pt3dadd( 7.55592, 12.617, -3.98456, 1.81 ) }
    apic_0 { pt3dadd( 7.9331, 14.375, -3.99196, 1.81 ) }
    apic_0 { pt3dadd( 8.28127, 16.255, -4.04333, 1.69 ) }
    apic_0 { pt3dadd( 8.68036, 18.9848, -4.14782, 1.69 ) }
    apic_0 { pt3dadd( 9.01881, 21.9107, -4.279, 1.69 ) }
    apic_0 { pt3dadd( 9.14494, 23.3481, -4.35584, 1.69 ) }
    apic_0 { pt3dadd( 9.27059, 25.0648, -4.45279, 1.45 ) }
    apic_0 { pt3dadd( 9.35836, 26.4861, -4.54656, 1.45 ) }
    apic_0 { pt3dadd( 9.44253, 28.6349, -4.71662, 1.45 ) }
    apic_0 { pt3dadd( 9.46625, 30.7803, -4.8928, 1.45 ) }
    apic_0 { pt3dadd( 9.46524, 30.8988, -4.90151, 1.45 ) }
    apic_0 { pt3dadd( 9.4245, 35.2705, -5.09393, 1.45 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.50458, 0.0307451, -6.32078, 1.08 ) }
    dend_43 { pt3dadd( -2.33608, 0.158529, -8.96893, 1.08 ) }
    dend_43 { pt3dadd( -2.9765, 0.214191, -9.07125, 1.08 ) }
    dend_43 { pt3dadd( -3.6287, 0.270878, -9.17544, 1.08 ) }
    dend_43 { pt3dadd( -3.69708, 0.276821, -9.18637, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 49/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.3794, 4.70432, 2.0742, 0.84 ) }
    dend_30 { pt3dadd( -3.26073, 4.55125, 2.01043, 0.84 ) }
    dend_30 { pt3dadd( -3.93019, 5.60239, 2.01043, 0.72 ) }
    dend_30 { pt3dadd( -4.33398, 6.2364, 2.01043, 0.72 ) }
    dend_30 { pt3dadd( -4.44518, 6.41099, 2.01043, 0.72 ) }
    dend_30 { pt3dadd( -4.61196, 6.67287, 2.01043, 0.72 ) }
    dend_30 { pt3dadd( -4.66756, 6.76016, 2.01043, 0.72 ) }
    dend_30 { pt3dadd( -4.87847, 7.01041, 2.01043, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 57/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.04268, -4.8377, -1.5304, 1.45 ) }
    dend_19 { pt3dadd( 5.48317, -5.27828, -1.67815, 1.45 ) }
    dend_19 { pt3dadd( 6.43977, -7.74486, -1.67815, 1.45 ) }
    dend_19 { pt3dadd( 6.89146, -9.14247, -1.59627, 1.45 ) }
    dend_19 { pt3dadd( 6.93158, -9.30529, -1.5832, 1.45 ) }
    dend_19 { pt3dadd( 7.28112, -11.5828, -1.39254, 1.45 ) }
    dend_19 { pt3dadd( 7.54267, -13.8291, -1.20213, 1.45 ) }
    dend_19 { pt3dadd( 7.60809, -14.9018, -1.10618, 1.45 ) }
    dend_19 { pt3dadd( 7.624, -17.3396, -0.872355, 1.33 ) }
    dend_19 { pt3dadd( 7.46729, -20.5614, -0.5626, 1.33 ) }
    dend_19 { pt3dadd( 7.11592, -24.2316, -0.213665, 1.33 ) }
    dend_19 { pt3dadd( 7.09422, -24.348, -0.202782, 1.33 ) }
    dend_19 { pt3dadd( 6.67968, -25.8859, -0.0618303, 1.2 ) }
    dend_19 { pt3dadd( 6.59645, -26.1336, -0.0384043, 1.2 ) }
    dend_19 { pt3dadd( 5.94124, -27.7811, 0.063394, 1.2 ) }
    dend_19 { pt3dadd( 5.86167, -27.9286, 0.0769536, 1.2 ) }
    dend_19 { pt3dadd( 4.83616, -29.4037, 0.275378, 1.2 ) }
    dend_19 { pt3dadd( 4.64692, -29.6539, 0.313691, 1.2 ) }
    dend_19 { pt3dadd( 3.37077, -31.0682, 0.595909, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 76/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.07272, -3.20214, -2.0333, 1.45 ) }
    dend_10 { pt3dadd( 6.23024, -3.28461, -2.09057, 1.45 ) }
    dend_10 { pt3dadd( 7.24346, -3.45596, -1.93565, 1.33 ) }
    dend_10 { pt3dadd( 8.31765, -3.61914, -1.75649, 1.33 ) }
    dend_10 { pt3dadd( 10.1321, -3.88378, -1.44111, 1.33 ) }
    dend_10 { pt3dadd( 12.0831, -4.18368, -1.09271, 1.33 ) }
    dend_10 { pt3dadd( 14.1754, -4.51935, -0.713673, 1.2 ) }
    dend_10 { pt3dadd( 16.4836, -4.93244, -0.262299, 1.2 ) }
    dend_10 { pt3dadd( 19.4531, -5.60703, 0.336996, 1.2 ) }
    dend_10 { pt3dadd( 19.5204, -5.62353, 0.351277, 1.2 ) }
    dend_10 { pt3dadd( 20.8809, -5.98996, 0.652152, 1.2 ) }
    dend_10 { pt3dadd( 20.9951, -6.02437, 0.675999, 1.2 ) }
    dend_10 { pt3dadd( 22.3763, -6.50856, 0.856794, 1.2 ) }
    dend_10 { pt3dadd( 23.996, -7.32917, 1.11083, 1.2 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 90/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.79619, -0.752577, -3.98951, 2.53 ) }
    dend_0 { pt3dadd( -5.62217, -0.827456, -4.61405, 2.53 ) }
    dend_0 { pt3dadd( -6.36899, -1.32523, -5.0428, 1.93 ) }
    dend_0 { pt3dadd( -8.00407, -2.38496, -5.7708, 1.69 ) }
    dend_0 { pt3dadd( -9.48323, -3.33768, -6.35878, 1.45 ) }
    dend_0 { pt3dadd( -11.4038, -4.5499, -7.03143, 1.45 ) }
    dend_0 { pt3dadd( -13.1747, -5.66763, -7.65164, 1.45 ) }
    dend_0 { pt3dadd( -15.4634, -7.10427, -8.39897, 1.45 ) }
    dend_0 { pt3dadd( -17.7003, -8.49447, -9.00784, 1.45 ) }
    dend_0 { pt3dadd( -17.8764, -8.60199, -9.03663, 1.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -19.4742, -9.56069, -9.17275, 1.45 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.60386, -3.75821, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 19.6285, -11.1986, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 32.653, -18.6391, 0.0, 0.61 ) }
    // Section: apic_26, id: apic_26, parent: apic_0 (entry count 4/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 9.4245, 35.2705, -5.09393, 1.45 ) }
    apic_26 { pt3dadd( 12.0163, 36.6597, -4.43201, 0.48 ) }
    apic_26 { pt3dadd( 14.0556, 37.6963, -3.93413, 0.48 ) }
    apic_26 { pt3dadd( 14.363, 37.8473, -3.86397, 0.48 ) }
    apic_26 { pt3dadd( 17.036, 39.311, -3.27732, 0.48 ) }
    apic_26 { pt3dadd( 17.4522, 39.5558, -3.23427, 0.48 ) }
    apic_26 { pt3dadd( 19.6062, 40.9665, -3.22276, 0.48 ) }
    apic_26 { pt3dadd( 19.9771, 41.2294, -3.29217, 0.48 ) }
    apic_26 { pt3dadd( 22.6447, 43.4151, -4.26299, 0.48 ) }
    apic_26 { pt3dadd( 23.8039, 44.4885, -4.90671, 0.48 ) }
    apic_26 { pt3dadd( 26.3385, 47.0487, -6.96236, 0.48 ) }
    apic_26 { pt3dadd( 27.2354, 47.7202, -8.09575, 0.48 ) }
    apic_26 { pt3dadd( 28.0152, 48.001, -9.42644, 0.48 ) }
    apic_26 { pt3dadd( 28.3953, 48.0256, -10.154, 0.48 ) }
    apic_26 { pt3dadd( 28.7699, 47.9263, -10.914, 0.48 ) }
    apic_26 { pt3dadd( 29.5785, 47.5618, -12.4198, 0.48 ) }
    apic_26 { pt3dadd( 32.9288, 45.5979, -18.0682, 0.48 ) }
    apic_26 { pt3dadd( 34.0808, 44.8412, -20.0208, 0.48 ) }
    apic_26 { pt3dadd( 34.3951, 44.6343, -20.5567, 0.48 ) }
    apic_26 { pt3dadd( 35.5517, 43.9092, -22.5013, 0.48 ) }
    apic_26 { pt3dadd( 35.7374, 43.8076, -22.7943, 0.48 ) }
    apic_26 { pt3dadd( 36.1796, 43.6153, -23.4699, 0.48 ) }
    apic_26 { pt3dadd( 37.8248, 42.9977, -25.5037, 0.48 ) }
    apic_26 { pt3dadd( 39.8199, 42.2382, -27.673, 0.48 ) }
    apic_26 { pt3dadd( 40.0835, 42.1387, -27.9356, 0.48 ) }
    apic_26 { pt3dadd( 40.7958, 41.877, -28.6137, 0.48 ) }
    apic_26 { pt3dadd( 41.8701, 41.4366, -29.7023, 0.48 ) }
    apic_26 { pt3dadd( 44.6619, 40.192, -32.7604, 0.48 ) }
    apic_26 { pt3dadd( 45.9144, 39.5967, -34.1335, 0.48 ) }
    apic_26 { pt3dadd( 46.0294, 39.5394, -34.2654, 0.48 ) }
    apic_26 { pt3dadd( 47.5123, 38.8164, -36.1736, 0.48 ) }
    apic_26 { pt3dadd( 48.9725, 38.1334, -38.3122, 0.48 ) }
    apic_26 { pt3dadd( 49.9679, 37.7151, -39.8949, 0.48 ) }
    apic_26 { pt3dadd( 50.544, 37.5142, -40.9384, 0.48 ) }
    apic_26 { pt3dadd( 50.6844, 37.4703, -41.1969, 0.48 ) }
    apic_26 { pt3dadd( 52.3099, 37.0511, -44.1014, 0.48 ) }
    apic_26 { pt3dadd( 53.3084, 36.8635, -45.8376, 0.48 ) }
    apic_26 { pt3dadd( 54.0503, 36.7633, -47.0304, 0.48 ) }
    apic_26 { pt3dadd( 54.2908, 36.7316, -47.4212, 0.48 ) }
    apic_26 { pt3dadd( 54.5962, 36.6932, -47.9516, 0.48 ) }
    apic_26 { pt3dadd( 56.3251, 36.5151, -50.9909, 0.48 ) }
    apic_26 { pt3dadd( 57.8799, 36.4166, -53.7472, 0.48 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 46/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 9.4245, 35.2705, -5.09393, 1.45 ) }
    apic_1 { pt3dadd( 9.33208, 37.259, -5.08935, 1.33 ) }
    apic_1 { pt3dadd( 9.11748, 39.9921, -5.0824, 1.2 ) }
    apic_1 { pt3dadd( 8.83059, 42.456, -5.07543, 1.2 ) }
    apic_1 { pt3dadd( 8.81047, 42.6203, -5.07496, 1.2 ) }
    apic_1 { pt3dadd( 8.63077, 44.3765, -5.13219, 1.2 ) }
    apic_1 { pt3dadd( 8.6189, 44.4928, -5.13815, 1.2 ) }
    apic_1 { pt3dadd( 8.42614, 46.222, -5.26049, 1.2 ) }
    apic_1 { pt3dadd( 8.15098, 48.2737, -5.38191, 1.08 ) }
    apic_1 { pt3dadd( 7.94448, 49.8284, -5.45227, 1.08 ) }
    apic_1 { pt3dadd( 7.6565, 52.0255, -5.53004, 1.08 ) }
    apic_1 { pt3dadd( 7.36501, 54.522, -5.59579, 1.08 ) }
    apic_1 { pt3dadd( 7.16623, 56.6241, -5.5744, 1.08 ) }
    apic_1 { pt3dadd( 6.95194, 59.6974, -5.43983, 1.08 ) }
    apic_1 { pt3dadd( 6.83986, 62.0412, -5.25081, 1.08 ) }
    apic_1 { pt3dadd( 6.82903, 62.3008, -5.21921, 1.08 ) }
    apic_1 { pt3dadd( 6.76144, 64.0977, -4.9074, 1.08 ) }
    apic_1 { pt3dadd( 6.75998, 65.9872, -4.53256, 1.08 ) }
    apic_1 { pt3dadd( 6.76518, 66.3459, -4.44136, 1.08 ) }
    apic_1 { pt3dadd( 6.76244, 67.9903, -3.96496, 1.08 ) }
    apic_1 { pt3dadd( 6.752, 68.1479, -3.9156, 1.08 ) }
    apic_1 { pt3dadd( 6.52643, 69.6786, -3.53996, 1.08 ) }
    apic_1 { pt3dadd( 6.51109, 69.7643, -3.53211, 1.08 ) }
    apic_1 { pt3dadd( 6.17857, 71.5744, -3.55987, 0.96 ) }
    apic_1 { pt3dadd( 6.01155, 72.9876, -3.63805, 0.96 ) }
    apic_1 { pt3dadd( 5.97843, 73.4469, -3.67751, 0.96 ) }
    apic_1 { pt3dadd( 5.9756, 75.4304, -3.89576, 0.96 ) }
    apic_1 { pt3dadd( 6.15439, 78.7507, -4.34354, 0.96 ) }
    apic_1 { pt3dadd( 6.17735, 78.9813, -4.37661, 0.96 ) }
    apic_1 { pt3dadd( 6.53945, 81.5487, -4.7814, 0.96 ) }
    apic_1 { pt3dadd( 6.56585, 81.7109, -4.80189, 0.96 ) }
    apic_1 { pt3dadd( 7.04623, 84.5881, -5.07681, 0.96 ) }
    apic_1 { pt3dadd( 7.11966, 85.0721, -5.10644, 0.96 ) }
    apic_1 { pt3dadd( 7.35658, 87.7644, -5.2696, 0.96 ) }
    apic_1 { pt3dadd( 7.36961, 88.1144, -5.29539, 0.96 ) }
    apic_1 { pt3dadd( 7.29589, 90.4594, -5.48812, 0.96 ) }
    apic_1 { pt3dadd( 7.2806, 90.6921, -5.50823, 0.96 ) }
    apic_1 { pt3dadd( 7.07781, 92.9377, -5.70541, 0.96 ) }
    apic_1 { pt3dadd( 6.85744, 95.2432, -5.91682, 0.96 ) }
    apic_1 { pt3dadd( 6.84913, 95.359, -5.93209, 0.96 ) }
    apic_1 { pt3dadd( 6.78238, 97.6824, -6.29444, 0.96 ) }
    apic_1 { pt3dadd( 6.79011, 97.9402, -6.33881, 0.96 ) }
    apic_1 { pt3dadd( 6.9201, 99.5944, -6.63257, 0.96 ) }
    apic_1 { pt3dadd( 6.94144, 99.7557, -6.66127, 0.96 ) }
    apic_1 { pt3dadd( 7.47777, 103.011, -7.19995, 0.96 ) }
    apic_1 { pt3dadd( 7.50563, 103.171, -7.22843, 0.96 ) }
    apic_1 { pt3dadd( 7.88014, 105.15, -7.62437, 0.96 ) }
    apic_1 { pt3dadd( 7.96262, 105.627, -7.72226, 0.96 ) }
    apic_1 { pt3dadd( 8.17349, 107.113, -8.03856, 0.96 ) }
    apic_1 { pt3dadd( 8.18143, 107.18, -8.05104, 0.96 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.69708, 0.276821, -9.18637, 1.08 ) }
    dend_49 { pt3dadd( -4.32279, 1.00202, -9.17556, 0.36 ) }
    dend_49 { pt3dadd( -5.41149, 2.06555, -9.17516, 0.36 ) }
    dend_49 { pt3dadd( -6.45542, 2.90502, -9.31421, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( -7.82515, 3.92027, -9.5823, 0.36 ) }
    dend_49 { pt3dadd( -8.15891, 4.1535, -9.66075, 0.36 ) }
    dend_49 { pt3dadd( -8.63512, 4.47384, -9.78112, 0.36 ) }
    dend_49 { pt3dadd( -8.89484, 4.60924, -9.86301, 0.36 ) }
    dend_49 { pt3dadd( -10.3885, 5.2198, -10.3805, 0.36 ) }
    dend_49 { pt3dadd( -10.4884, 5.26025, -10.4208, 0.36 ) }
    dend_49 { pt3dadd( -11.3445, 5.67389, -10.8226, 0.36 ) }
    dend_49 { pt3dadd( -11.6431, 5.82531, -10.9646, 0.36 ) }
    dend_49 { pt3dadd( -12.6736, 6.35603, -11.4659, 0.36 ) }
    dend_49 { pt3dadd( -13.0298, 6.53963, -11.6308, 0.36 ) }
    dend_49 { pt3dadd( -13.6123, 6.85899, -11.9083, 0.36 ) }
    dend_49 { pt3dadd( -13.8067, 6.96889, -12.0104, 0.36 ) }
    dend_49 { pt3dadd( -14.5727, 7.41878, -12.4836, 0.36 ) }
    dend_49 { pt3dadd( -15.1481, 7.76767, -12.882, 0.36 ) }
    dend_49 { pt3dadd( -15.63, 8.06584, -13.2507, 0.36 ) }
    dend_49 { pt3dadd( -17.5288, 9.23761, -14.8803, 0.36 ) }
    dend_49 { pt3dadd( -17.5891, 9.25951, -15.019, 0.36 ) }
    dend_49 { pt3dadd( -18.0216, 9.38157, -16.3387, 0.36 ) }
    dend_49 { pt3dadd( -18.1783, 9.41512, -16.9172, 0.36 ) }
    dend_49 { pt3dadd( -18.2846, 9.43621, -17.3582, 0.36 ) }
    dend_49 { pt3dadd( -18.4701, 9.46447, -18.2166, 0.36 ) }
    dend_49 { pt3dadd( -20.4619, 9.83724, -28.5284, 0.36 ) }
    dend_49 { pt3dadd( -20.6789, 9.91294, -29.6553, 0.36 ) }
    dend_49 { pt3dadd( -20.7449, 9.94884, -30.0106, 0.36 ) }
    dend_49 { pt3dadd( -21.1099, 10.2234, -31.9641, 0.36 ) }
    dend_49 { pt3dadd( -21.1589, 10.2661, -32.2211, 0.36 ) }
    dend_49 { pt3dadd( -21.4595, 10.6082, -33.6119, 0.36 ) }
    dend_49 { pt3dadd( -21.7355, 11.3849, -34.0871, 0.36 ) }
    dend_49 { pt3dadd( -21.9318, 12.0762, -34.4755, 0.36 ) }
    dend_49 { pt3dadd( -21.9477, 12.145, -34.5045, 0.36 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.69708, 0.276821, -9.18637, 1.08 ) }
    dend_44 { pt3dadd( -5.3322, -0.298824, -10.8203, 0.96 ) }
    dend_44 { pt3dadd( -5.99161, -0.568455, -11.4308, 0.96 ) }
    dend_44 { pt3dadd( -6.31669, -0.709495, -11.7341, 0.96 ) }
    dend_44 { pt3dadd( -7.30429, -1.14977, -12.6674, 0.96 ) }
    dend_44 { pt3dadd( -7.63623, -1.29536, -13.0146, 0.96 ) }
    dend_44 { pt3dadd( -8.384, -1.62332, -13.7967, 0.96 ) }
    dend_44 { pt3dadd( -8.44913, -1.6576, -13.8609, 0.96 ) }
    dend_44 { pt3dadd( -9.41069, -2.21358, -14.8513, 0.96 ) }
    dend_44 { pt3dadd( -9.47378, -2.24816, -14.9173, 0.96 ) }
    dend_44 { pt3dadd( -10.9188, -2.92942, -16.7035, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 41/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.87847, 7.01041, 2.01043, 0.72 ) }
    dend_38 { pt3dadd( -7.13576, 6.07457, 5.08346, 0.48 ) }
    dend_38 { pt3dadd( -7.90576, 5.85955, 6.15928, 0.48 ) }
    dend_38 { pt3dadd( -8.23488, 5.83162, 6.60874, 0.48 ) }
    dend_38 { pt3dadd( -9.17465, 5.85276, 7.75515, 0.48 ) }
    dend_38 { pt3dadd( -9.33546, 5.86025, 7.93528, 0.48 ) }
    dend_38 { pt3dadd( -10.393, 5.88459, 9.04385, 0.48 ) }
    dend_38 { pt3dadd( -10.6822, 5.9357, 9.30393, 0.48 ) }
    dend_38 { pt3dadd( -11.7419, 6.04977, 10.223, 0.48 ) }
    dend_38 { pt3dadd( -12.5806, 6.06415, 10.8948, 0.48 ) }
    dend_38 { pt3dadd( -13.3174, 6.01457, 11.477, 0.48 ) }
    dend_38 { pt3dadd( -14.4119, 5.8604, 12.3965, 0.48 ) }
    dend_38 { pt3dadd( -14.6069, 5.8234, 12.5924, 0.48 ) }
    dend_38 { pt3dadd( -15.8208, 5.58933, 14.0213, 0.48 ) }
    dend_38 { pt3dadd( -16.0919, 5.54854, 14.4012, 0.48 ) }
    dend_38 { pt3dadd( -16.7183, 5.52386, 15.448, 0.48 ) }
    dend_38 { pt3dadd( -17.093, 5.59598, 16.18, 0.48 ) }
    dend_38 { pt3dadd( -18.0339, 5.93802, 18.2582, 0.48 ) }
    dend_38 { pt3dadd( -18.0627, 5.95292, 18.3292, 0.48 ) }
    dend_38 { pt3dadd( -18.3104, 6.18604, 19.1332, 0.48 ) }
    dend_38 { pt3dadd( -18.3876, 6.27079, 19.3874, 0.48 ) }
    dend_38 { pt3dadd( -18.7094, 6.74515, 20.5507, 0.48 ) }
    dend_38 { pt3dadd( -24.0488, 6.83658, 30.345, 0.48 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 64/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -4.87847, 7.01041, 2.01043, 0.72 ) }
    dend_31 { pt3dadd( -5.51761, 8.31308, 2.46746, 0.72 ) }
    dend_31 { pt3dadd( -6.36528, 10.0253, 3.15989, 0.72 ) }
    dend_31 { pt3dadd( -6.43988, 10.1763, 3.22159, 0.72 ) }
    dend_31 { pt3dadd( -7.5654, 12.227, 4.16792, 0.72 ) }
    dend_31 { pt3dadd( -8.29347, 13.4631, 4.79652, 0.72 ) }
    dend_31 { pt3dadd( -9.8274, 15.8365, 6.12513, 0.6 ) }
    dend_31 { pt3dadd( -10.1488, 16.2664, 6.40163, 0.6 ) }
    dend_31 { pt3dadd( -10.866, 17.0678, 6.99452, 0.6 ) }
    dend_31 { pt3dadd( -12.1581, 18.412, 8.08112, 0.6 ) }
    dend_31 { pt3dadd( -12.5878, 18.844, 8.46868, 0.6 ) }
    dend_31 { pt3dadd( -13.4577, 19.7127, 9.26398, 0.6 ) }
    dend_31 { pt3dadd( -13.5998, 19.859, 9.38851, 0.6 ) }
    dend_31 { pt3dadd( -14.881, 21.3013, 10.6542, 0.6 ) }
    dend_31 { pt3dadd( -15.1817, 21.6819, 10.9938, 0.6 ) }
    dend_31 { pt3dadd( -16.2273, 23.2424, 12.2708, 0.6 ) }
    dend_31 { pt3dadd( -16.4489, 23.6137, 12.5622, 0.6 ) }
    dend_31 { pt3dadd( -17.0633, 24.8564, 13.5169, 0.6 ) }
    dend_31 { pt3dadd( -17.2199, 25.2197, 13.805, 0.6 ) }
    dend_31 { pt3dadd( -17.4073, 25.9607, 14.4593, 0.6 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 84/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.37077, -31.0682, 0.595909, 1.2 ) }
    dend_25 { pt3dadd( 1.69663, -32.3189, 0.536315, 0.6 ) }
    dend_25 { pt3dadd( 0.387328, -33.3203, 0.470182, 0.6 ) }
    dend_25 { pt3dadd( -1.38081, -34.6725, 0.380873, 0.6 ) }
    dend_25 { pt3dadd( -1.55496, -34.8057, 0.372077, 0.6 ) }
    dend_25 { pt3dadd( -2.6617, -35.6522, 0.316175, 0.6 ) }
    dend_25 { pt3dadd( -4.08944, -36.7441, 0.24406, 0.6 ) }
    dend_25 { pt3dadd( -4.71799, -37.2108, 0.166683, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.37077, -31.0682, 0.595909, 1.2 ) }
    dend_20 { pt3dadd( 4.04181, -32.2038, -0.26056, 1.08 ) }
    dend_20 { pt3dadd( 4.15917, -32.4024, -0.410351, 1.08 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 95/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 23.996, -7.32917, 1.11083, 1.2 ) }
    dend_12 { pt3dadd( 25.5415, -6.78337, 0.662857, 0.48 ) }
    dend_12 { pt3dadd( 26.6656, -6.50145, 0.443716, 0.48 ) }
    dend_12 { pt3dadd( 26.9783, -6.43343, 0.397318, 0.48 ) }
    dend_12 { pt3dadd( 28.0446, -6.1805, 0.349232, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 28.2708, -6.12041, 0.359936, 0.48 ) }
    dend_12 { pt3dadd( 29.2931, -5.75651, 0.496435, 0.48 ) }
    dend_12 { pt3dadd( 30.4816, -5.20965, 0.84639, 0.48 ) }
    dend_12 { pt3dadd( 30.6102, -5.13624, 0.897279, 0.48 ) }
    dend_12 { pt3dadd( 31.6093, -4.3603, 1.43018, 0.48 ) }
    dend_12 { pt3dadd( 32.0389, -3.86023, 1.775, 0.48 ) }
    dend_12 { pt3dadd( 32.7419, -2.7574, 2.51461, 0.48 ) }
    dend_12 { pt3dadd( 32.8383, -2.55627, 2.64589, 0.48 ) }
    dend_12 { pt3dadd( 33.1432, -1.68785, 3.16644, 0.48 ) }
    dend_12 { pt3dadd( 33.313, -1.1309, 3.4791, 0.48 ) }
    dend_12 { pt3dadd( 33.5425, 0.0404738, 4.06195, 0.48 ) }
    dend_12 { pt3dadd( 33.5489, 0.0946869, 4.08896, 0.48 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 23.996, -7.32917, 1.11083, 1.2 ) }
    dend_11 { pt3dadd( 26.2314, -8.36948, -0.439706, 0.72 ) }
    dend_11 { pt3dadd( 27.3347, -8.80051, -1.16276, 0.72 ) }
    dend_11 { pt3dadd( 28.9517, -9.22217, -2.19477, 0.72 ) }
    dend_11 { pt3dadd( 30.1802, -9.47175, -2.84122, 0.72 ) }
    dend_11 { pt3dadd( 30.3677, -9.50714, -2.93212, 0.72 ) }
    dend_11 { pt3dadd( 31.1449, -9.68261, -3.28472, 0.72 ) }
    dend_11 { pt3dadd( 31.2251, -9.69783, -3.3145, 0.72 ) }
    dend_11 { pt3dadd( 34.5577, -10.4943, -4.44751, 0.72 ) }
    dend_11 { pt3dadd( 37.0277, -11.2301, -5.10582, 0.72 ) }
    dend_11 { pt3dadd( 37.2222, -11.2967, -5.15441, 0.72 ) }
    dend_11 { pt3dadd( 38.7503, -11.8554, -5.534, 0.72 ) }
    dend_11 { pt3dadd( 39.7327, -12.2441, -5.74566, 0.72 ) }
    dend_11 { pt3dadd( 41.4057, -12.9369, -5.99546, 0.6 ) }
    dend_11 { pt3dadd( 43.9739, -14.1374, -6.03292, 0.6 ) }
    dend_11 { pt3dadd( 45.565, -14.9254, -5.94207, 0.6 ) }
    dend_11 { pt3dadd( 45.9131, -15.1058, -5.87886, 0.6 ) }
    dend_11 { pt3dadd( 46.9906, -15.7586, -5.42344, 0.6 ) }
    dend_11 { pt3dadd( 47.804, -16.3818, -4.89249, 0.6 ) }
    dend_11 { pt3dadd( 48.9765, -17.5051, -3.83961, 0.6 ) }
    dend_11 { pt3dadd( 49.0404, -17.5737, -3.77894, 0.6 ) }
    dend_11 { pt3dadd( 50.0438, -18.6415, -2.89738, 0.6 ) }
    dend_11 { pt3dadd( 51.5867, -20.1652, -1.79608, 0.6 ) }
    dend_11 { pt3dadd( 52.8835, -21.3769, -1.07537, 0.6 ) }
    dend_11 { pt3dadd( 53.0848, -21.573, -0.973552, 0.6 ) }
    dend_11 { pt3dadd( 54.7606, -23.2465, -0.171701, 0.6 ) }
    dend_11 { pt3dadd( 55.1091, -23.6376, -0.00339571, 0.6 ) }
    dend_11 { pt3dadd( 55.9619, -24.72, 0.407328, 0.6 ) }
    dend_11 { pt3dadd( 56.0394, -24.8402, 0.450772, 0.6 ) }
    dend_11 { pt3dadd( 57.3822, -27.2869, 1.32899, 0.6 ) }
    dend_11 { pt3dadd( 57.4252, -27.359, 1.35133, 0.6 ) }
    dend_11 { pt3dadd( 58.323, -28.8786, 1.77519, 0.6 ) }
    dend_11 { pt3dadd( 58.4569, -29.0836, 1.81784, 0.6 ) }
    dend_11 { pt3dadd( 59.4195, -30.4433, 2.0179, 0.6 ) }
    dend_11 { pt3dadd( 60.5828, -31.8111, 2.13446, 0.6 ) }
    dend_11 { pt3dadd( 62.5627, -33.7677, 2.14672, 0.6 ) }
    dend_11 { pt3dadd( 62.6462, -33.8419, 2.14636, 0.6 ) }
    dend_11 { pt3dadd( 64.3854, -35.2103, 2.13143, 0.6 ) }
    dend_11 { pt3dadd( 64.503, -35.3025, 2.13353, 0.6 ) }
    dend_11 { pt3dadd( 66.0171, -36.6153, 2.19084, 0.6 ) }
    dend_11 { pt3dadd( 66.1694, -36.7613, 2.20203, 0.6 ) }
    dend_11 { pt3dadd( 67.2132, -37.8862, 2.31127, 0.6 ) }
    dend_11 { pt3dadd( 67.2723, -37.9495, 2.31807, 0.6 ) }
    dend_11 { pt3dadd( 69.2062, -39.9931, 2.57537, 0.6 ) }
    dend_11 { pt3dadd( 71.579, -42.4317, 2.92987, 0.6 ) }
    dend_11 { pt3dadd( 71.6569, -42.5108, 2.94265, 0.6 ) }
    dend_11 { pt3dadd( 73.2573, -44.0481, 3.20515, 0.48 ) }
    dend_11 { pt3dadd( 74.5409, -45.2223, 3.4177, 0.48 ) }
    dend_11 { pt3dadd( 75.0562, -45.6465, 3.51067, 0.48 ) }
    dend_11 { pt3dadd( 76.4529, -46.5886, 3.78448, 0.48 ) }
    dend_11 { pt3dadd( 76.8381, -46.7959, 3.88792, 0.48 ) }
    dend_11 { pt3dadd( 77.4099, -47.0951, 4.06119, 0.48 ) }
    dend_11 { pt3dadd( 77.4838, -47.1323, 4.08762, 0.48 ) }
    dend_11 { pt3dadd( 78.7507, -47.8963, 4.59746, 0.48 ) }
    dend_11 { pt3dadd( 78.9378, -48.0263, 4.66977, 0.48 ) }
    dend_11 { pt3dadd( 79.8516, -48.7438, 4.99916, 0.48 ) }
    dend_11 { pt3dadd( 80.0234, -48.8848, 5.05205, 0.48 ) }
    dend_11 { pt3dadd( 80.8347, -49.5521, 5.26553, 0.48 ) }
    dend_11 { pt3dadd( 81.0853, -49.7677, 5.31431, 0.48 ) }
    dend_11 { pt3dadd( 82.2836, -50.8428, 5.48048, 0.48 ) }
    dend_11 { pt3dadd( 82.4333, -50.991, 5.49658, 0.48 ) }
    dend_11 { pt3dadd( 84.1366, -52.8082, 5.6397, 0.48 ) }
    dend_11 { pt3dadd( 84.3552, -53.0606, 5.65216, 0.48 ) }
    dend_11 { pt3dadd( 86.066, -55.1734, 5.71193, 0.48 ) }
    dend_11 { pt3dadd( 86.2413, -55.4155, 5.71502, 0.48 ) }
    dend_11 { pt3dadd( 87.3529, -57.1164, 5.76023, 0.48 ) }
    dend_11 { pt3dadd( 87.4326, -57.2444, 5.76712, 0.48 ) }
    dend_11 { pt3dadd( 88.6545, -59.3161, 5.94877, 0.48 ) }
    dend_11 { pt3dadd( 88.8416, -59.59, 5.98854, 0.48 ) }
    dend_11 { pt3dadd( 90.3991, -61.5218, 6.40312, 0.48 ) }
    dend_11 { pt3dadd( 91.0859, -62.1813, 6.62268, 0.48 ) }
    dend_11 { pt3dadd( 91.8232, -62.74, 6.88912, 0.48 ) }
    dend_11 { pt3dadd( 92.3384, -63.0671, 7.08356, 0.48 ) }
    dend_11 { pt3dadd( 94.5519, -64.2494, 7.95156, 0.48 ) }
    dend_11 { pt3dadd( 95.0067, -64.4872, 8.11558, 0.48 ) }
    dend_11 { pt3dadd( 97.1476, -65.5634, 8.80991, 0.48 ) }
    dend_11 { pt3dadd( 97.4405, -65.7307, 8.89773, 0.48 ) }
    dend_11 { pt3dadd( 99.673, -67.1787, 9.56813, 0.48 ) }
    dend_11 { pt3dadd( 99.7865, -67.2683, 9.60588, 0.48 ) }
    dend_11 { pt3dadd( 101.195, -68.6975, 10.1638, 0.48 ) }
    dend_11 { pt3dadd( 101.52, -69.1052, 10.3011, 0.48 ) }
    dend_11 { pt3dadd( 102.4, -70.5794, 10.6898, 0.48 ) }
    dend_11 { pt3dadd( 102.537, -70.8577, 10.7636, 0.48 ) }
    dend_11 { pt3dadd( 103.101, -72.2207, 11.1136, 0.48 ) }
    dend_11 { pt3dadd( 103.311, -72.6531, 11.2308, 0.48 ) }
    dend_11 { pt3dadd( 103.866, -73.6653, 11.5415, 0.48 ) }
    dend_11 { pt3dadd( 104.099, -74.0289, 11.6616, 0.48 ) }
    dend_11 { pt3dadd( 105.967, -76.5955, 12.5317, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( 106.432, -77.1597, 12.7221, 0.48 ) }
    dend_11 { pt3dadd( 107.846, -78.6311, 13.1777, 0.48 ) }
    dend_11 { pt3dadd( 108.352, -79.0914, 13.2939, 0.48 ) }
    dend_11 { pt3dadd( 109.1, -79.6913, 13.4088, 0.48 ) }
    dend_11 { pt3dadd( 109.487, -79.9916, 13.427, 0.48 ) }
    dend_11 { pt3dadd( 110.46, -80.7323, 13.3083, 0.48 ) }
    dend_11 { pt3dadd( 111.123, -81.3399, 13.1604, 0.48 ) }
    dend_11 { pt3dadd( 112.114, -82.6244, 12.8173, 0.48 ) }
    dend_11 { pt3dadd( 112.278, -82.9072, 12.748, 0.48 ) }
    dend_11 { pt3dadd( 112.792, -84.0216, 12.5226, 0.48 ) }
    dend_11 { pt3dadd( 112.898, -84.2995, 12.4919, 0.48 ) }
    dend_11 { pt3dadd( 113.353, -85.8428, 12.4548, 0.48 ) }
    dend_11 { pt3dadd( 113.726, -87.4915, 12.5161, 0.48 ) }
    dend_11 { pt3dadd( 114.033, -88.9544, 12.6225, 0.48 ) }
    dend_11 { pt3dadd( 114.132, -89.3634, 12.6531, 0.48 ) }
    dend_11 { pt3dadd( 114.512, -90.7314, 12.7639, 0.48 ) }
    dend_11 { pt3dadd( 114.606, -91.0145, 12.7855, 0.48 ) }
    dend_11 { pt3dadd( 115.135, -92.4284, 12.8956, 0.48 ) }
    dend_11 { pt3dadd( 115.693, -93.5762, 12.9548, 0.48 ) }
    dend_11 { pt3dadd( 116.116, -94.3378, 12.9727, 0.48 ) }
    dend_11 { pt3dadd( 116.191, -94.4668, 12.9678, 0.48 ) }
    dend_11 { pt3dadd( 116.482, -94.9172, 12.9174, 0.48 ) }
    dend_11 { pt3dadd( 123.756, -104.566, 15.7421, 0.48 ) }
    dend_11 { pt3dadd( 131.019, -114.422, 17.7642, 0.48 ) }
    dend_11 { pt3dadd( 139.868, -123.109, 18.2417, 0.48 ) }
    dend_11 { pt3dadd( 148.007, -132.428, 17.2939, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_0 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -19.4742, -9.56069, -9.17275, 1.45 ) }
    dend_9 { pt3dadd( -21.4379, -9.11279, -9.35695, 0.48 ) }
    dend_9 { pt3dadd( -21.5188, -9.07728, -9.36001, 0.48 ) }
    dend_9 { pt3dadd( -22.8045, -8.38895, -9.3887, 0.48 ) }
    dend_9 { pt3dadd( -22.8695, -8.34526, -9.38176, 0.48 ) }
    dend_9 { pt3dadd( -24.2287, -7.33347, -9.1146, 0.48 ) }
    dend_9 { pt3dadd( -24.4188, -7.1876, -9.06076, 0.48 ) }
    dend_9 { pt3dadd( -25.6941, -6.08211, -8.48627, 0.48 ) }
    dend_9 { pt3dadd( -25.7756, -6.01099, -8.43835, 0.48 ) }
    dend_9 { pt3dadd( -27.0781, -4.92381, -7.45827, 0.48 ) }
    dend_9 { pt3dadd( -27.3483, -4.72361, -7.23647, 0.48 ) }
    dend_9 { pt3dadd( -28.5155, -4.04565, -6.2423, 0.48 ) }
    dend_9 { pt3dadd( -28.9331, -3.89627, -5.8323, 0.48 ) }
    dend_9 { pt3dadd( -29.5679, -3.83017, -5.19524, 0.48 ) }
    dend_9 { pt3dadd( -30.3325, -3.84293, -4.46362, 0.48 ) }
    dend_9 { pt3dadd( -30.4958, -3.86528, -4.32906, 0.48 ) }
    dend_9 { pt3dadd( -31.2655, -3.99375, -3.75513, 0.48 ) }
    dend_9 { pt3dadd( -33.9407, -4.46818, -2.09885, 0.48 ) }
    dend_9 { pt3dadd( -35.4378, -4.70399, -1.31376, 0.48 ) }
    dend_9 { pt3dadd( -35.5472, -4.71831, -1.27089, 0.48 ) }
    dend_9 { pt3dadd( -37.8724, -4.95732, -0.555564, 0.48 ) }
    dend_9 { pt3dadd( -38.0352, -4.97076, -0.519695, 0.48 ) }
    dend_9 { pt3dadd( -40.0245, -5.09381, -0.252008, 0.48 ) }
    dend_9 { pt3dadd( -40.0933, -5.09632, -0.250595, 0.48 ) }
    dend_9 { pt3dadd( -42.2229, -5.1297, -0.219435, 0.48 ) }
    dend_9 { pt3dadd( -42.3706, -5.13242, -0.21736, 0.48 ) }
    dend_9 { pt3dadd( -44.4296, -5.16569, -0.203077, 0.48 ) }
    dend_9 { pt3dadd( -44.6821, -5.17138, -0.198836, 0.48 ) }
    dend_9 { pt3dadd( -47.2131, -5.22699, -0.102437, 0.48 ) }
    dend_9 { pt3dadd( -48.4425, -5.24848, -0.0408787, 0.48 ) }
    dend_9 { pt3dadd( -48.6945, -5.25145, -0.0250669, 0.48 ) }
    dend_9 { pt3dadd( -50.3573, -5.26787, 0.0466825, 0.48 ) }
    dend_9 { pt3dadd( -50.4261, -5.26843, 0.0472831, 0.48 ) }
    dend_9 { pt3dadd( -53.2345, -5.28806, 0.0175341, 0.48 ) }
    dend_9 { pt3dadd( -53.4312, -5.2877, 0.0160989, 0.48 ) }
    dend_9 { pt3dadd( -55.2197, -5.27467, 0.0329609, 0.48 ) }
    dend_9 { pt3dadd( -55.8981, -5.28545, 0.0342032, 0.48 ) }
    dend_9 { pt3dadd( -56.6295, -5.32525, 0.00415075, 0.48 ) }
    dend_9 { pt3dadd( -57.1287, -5.36469, -0.0627475, 0.48 ) }
    dend_9 { pt3dadd( -58.3984, -5.52754, -0.406905, 0.48 ) }
    dend_9 { pt3dadd( -58.7337, -5.58014, -0.508819, 0.48 ) }
    dend_9 { pt3dadd( -59.9382, -5.82373, -0.92633, 0.48 ) }
    dend_9 { pt3dadd( -60.7886, -6.04349, -1.2157, 0.48 ) }
    dend_9 { pt3dadd( -62.2258, -6.48534, -1.73514, 0.48 ) }
    dend_9 { pt3dadd( -62.458, -6.56883, -1.83029, 0.48 ) }
    dend_9 { pt3dadd( -63.2322, -6.88192, -2.18053, 0.48 ) }
    dend_9 { pt3dadd( -63.6387, -7.05259, -2.35128, 0.48 ) }
    dend_9 { pt3dadd( -64.8119, -7.55737, -2.78041, 0.48 ) }
    dend_9 { pt3dadd( -65.2388, -7.73768, -2.93237, 0.48 ) }
    dend_9 { pt3dadd( -66.2705, -8.17827, -3.33644, 0.48 ) }
    dend_9 { pt3dadd( -66.6711, -8.30171, -3.50229, 0.48 ) }
    dend_9 { pt3dadd( -67.367, -8.44305, -3.79697, 0.48 ) }
    dend_9 { pt3dadd( -67.5964, -8.46409, -3.88196, 0.48 ) }
    dend_9 { pt3dadd( -68.8416, -8.47803, -4.34902, 0.48 ) }
    dend_9 { pt3dadd( -69.192, -8.46441, -4.47939, 0.48 ) }
    dend_9 { pt3dadd( -70.7011, -8.28477, -5.0015, 0.48 ) }
    dend_9 { pt3dadd( -70.8864, -8.25345, -5.05955, 0.48 ) }
    dend_9 { pt3dadd( -71.8628, -8.03552, -5.3261, 0.48 ) }
    dend_9 { pt3dadd( -81.631, -8.20269, -6.35789, 0.48 ) }
    dend_9 { pt3dadd( -91.4075, -7.2403, -6.30283, 0.48 ) }
    dend_9 { pt3dadd( -100.958, -5.23333, -5.17443, 0.48 ) }
    dend_9 { pt3dadd( -110.282, -2.21786, -5.86586, 0.48 ) }
    dend_9 { pt3dadd( -119.114, 2.06582, -6.25968, 0.48 ) }
    dend_9 { pt3dadd( -128.208, 5.77707, -6.45401, 0.48 ) }
    dend_9 { pt3dadd( -136.924, 10.2304, -5.61342, 0.48 ) }
    dend_9 { pt3dadd( -145.07, 15.7141, -5.31685, 0.48 ) }
    dend_9 { pt3dadd( -152.808, 21.5105, -3.57764, 0.48 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 93/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -19.4742, -9.56069, -9.17275, 1.45 ) }
    dend_4 { pt3dadd( -21.2415, -11.2319, -8.98454, 1.08 ) }
    dend_4 { pt3dadd( -22.339, -12.2653, -8.72742, 0.96 ) }
    dend_4 { pt3dadd( -23.2136, -13.1612, -8.46553, 0.96 ) }
    dend_4 { pt3dadd( -23.277, -13.236, -8.44389, 0.96 ) }
    dend_4 { pt3dadd( -24.0603, -14.2981, -8.15216, 0.96 ) }
    dend_4 { pt3dadd( -24.1342, -14.4066, -8.11751, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_4 { pt3dadd( -25.2059, -16.1504, -7.48258, 0.96 ) }
    dend_4 { pt3dadd( -25.7946, -17.2019, -7.06567, 0.96 ) }
    dend_4 { pt3dadd( -26.3878, -18.3195, -6.59328, 0.84 ) }
    dend_4 { pt3dadd( -26.795, -19.1092, -6.25134, 0.84 ) }
    dend_4 { pt3dadd( -27.5004, -20.56, -5.60571, 0.72 ) }
    dend_4 { pt3dadd( -28.0534, -21.6918, -5.11592, 0.72 ) }
    dend_4 { pt3dadd( -28.1373, -21.8666, -5.04769, 0.72 ) }
    dend_4 { pt3dadd( -28.5276, -22.5172, -4.7217, 0.72 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 8/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -19.4742, -9.56069, -9.17275, 1.45 ) }
    dend_1 { pt3dadd( -20.1642, -11.0693, -10.5826, 0.6 ) }
    dend_1 { pt3dadd( -20.5983, -12.0106, -11.5541, 0.6 ) }
    dend_1 { pt3dadd( -20.6818, -12.1323, -11.7447, 0.6 ) }
    dend_1 { pt3dadd( -21.232, -12.8035, -13.002, 0.6 ) }
    dend_1 { pt3dadd( -21.7252, -13.2905, -13.9818, 0.6 ) }
    dend_1 { pt3dadd( -21.8018, -13.3569, -14.1227, 0.6 ) }
    dend_1 { pt3dadd( -22.4513, -13.7465, -15.1493, 0.6 ) }
    dend_1 { pt3dadd( -23.8813, -14.354, -17.3181, 0.6 ) }
    dend_1 { pt3dadd( -23.9313, -14.3739, -17.3861, 0.6 ) }
    dend_1 { pt3dadd( -24.7699, -14.6651, -18.4016, 0.6 ) }
    dend_1 { pt3dadd( -25.0939, -14.7668, -18.7422, 0.6 ) }
    dend_1 { pt3dadd( -25.8781, -15.0322, -19.4545, 0.6 ) }
    dend_1 { pt3dadd( -26.1882, -15.1345, -19.694, 0.6 ) }
    dend_1 { pt3dadd( -27.9264, -15.7494, -20.9097, 0.6 ) }
    dend_1 { pt3dadd( -28.1603, -15.8041, -21.1874, 0.6 ) }
    dend_1 { pt3dadd( -28.9893, -15.9614, -22.3021, 0.6 ) }
    dend_1 { pt3dadd( -29.1808, -15.9892, -22.58, 0.6 ) }
    dend_1 { pt3dadd( -29.7728, -16.0304, -23.5736, 0.6 ) }
    dend_1 { pt3dadd( -29.8439, -16.0271, -23.7105, 0.6 ) }
    dend_1 { pt3dadd( -31.742, -15.3636, -28.8164, 0.6 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.653, -18.6391, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 45.6776, -26.0795, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 58.7022, -33.5199, 0.0, 0.61 ) }
    // Section: apic_28, id: apic_28, parent: apic_26 (entry count 32/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 57.8799, 36.4166, -53.7472, 0.48 ) }
    apic_28 { pt3dadd( 58.137, 36.6872, -54.1845, 0.36 ) }
    apic_28 { pt3dadd( 58.5492, 37.0956, -54.7901, 0.36 ) }
    apic_28 { pt3dadd( 58.6587, 37.2003, -54.9406, 0.36 ) }
    apic_28 { pt3dadd( 59.3015, 37.6927, -55.7467, 0.36 ) }
    apic_28 { pt3dadd( 59.497, 37.828, -55.9843, 0.36 ) }
    apic_28 { pt3dadd( 59.7382, 38.0011, -56.2617, 0.36 ) }
    apic_28 { pt3dadd( 60.078, 38.2041, -56.6265, 0.36 ) }
    apic_28 { pt3dadd( 60.1236, 38.2282, -56.6728, 0.36 ) }
    apic_28 { pt3dadd( 61.0896, 38.7516, -57.6118, 0.36 ) }
    apic_28 { pt3dadd( 61.1379, 38.7776, -57.654, 0.36 ) }
    apic_28 { pt3dadd( 61.6945, 39.0767, -58.1434, 0.36 ) }
    // Section: apic_27, id: apic_27, parent: apic_26 (entry count 44/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 57.8799, 36.4166, -53.7472, 0.48 ) }
    apic_27 { pt3dadd( 61.1788, 37.2229, -56.6086, 0.48 ) }
    apic_27 { pt3dadd( 62.3551, 37.6796, -57.6488, 0.48 ) }
    apic_27 { pt3dadd( 62.5502, 37.7633, -57.8122, 0.48 ) }
    apic_27 { pt3dadd( 63.8944, 38.3611, -58.8997, 0.48 ) }
    apic_27 { pt3dadd( 64.2643, 38.5166, -59.1465, 0.48 ) }
    apic_27 { pt3dadd( 65.284, 38.9342, -59.6518, 0.48 ) }
    apic_27 { pt3dadd( 67.1393, 39.7416, -60.2797, 0.48 ) }
    apic_27 { pt3dadd( 68.7635, 40.3902, -60.7686, 0.48 ) }
    apic_27 { pt3dadd( 68.8994, 40.4394, -60.8047, 0.48 ) }
    apic_27 { pt3dadd( 71.4766, 41.2866, -61.366, 0.48 ) }
    apic_27 { pt3dadd( 74.0017, 42.0778, -61.8347, 0.48 ) }
    apic_27 { pt3dadd( 75.9164, 42.6026, -62.2657, 0.48 ) }
    apic_27 { pt3dadd( 77.0625, 42.9009, -62.5751, 0.48 ) }
    apic_27 { pt3dadd( 78.2955, 43.2329, -62.9831, 0.48 ) }
    apic_27 { pt3dadd( 79.5333, 43.5788, -63.4777, 0.48 ) }
    apic_27 { pt3dadd( 79.7902, 43.6552, -63.608, 0.48 ) }
    apic_27 { pt3dadd( 83.2365, 44.6425, -65.6642, 0.48 ) }
    apic_27 { pt3dadd( 84.1144, 44.8766, -66.1686, 0.48 ) }
    apic_27 { pt3dadd( 85.6923, 45.2287, -67.1289, 0.48 ) }
    apic_27 { pt3dadd( 86.0422, 45.277, -67.3588, 0.48 ) }
    apic_27 { pt3dadd( 86.5569, 45.3192, -67.7135, 0.48 ) }
    apic_27 { pt3dadd( 88.0855, 45.3533, -68.6863, 0.48 ) }
    apic_27 { pt3dadd( 89.345, 45.2721, -69.438, 0.48 ) }
    apic_27 { pt3dadd( 89.758, 45.2001, -69.7235, 0.48 ) }
    apic_27 { pt3dadd( 91.9696, 44.6206, -71.4867, 0.48 ) }
    apic_27 { pt3dadd( 92.1207, 44.5793, -71.6076, 0.48 ) }
    apic_27 { pt3dadd( 93.04, 44.3673, -72.3509, 0.48 ) }
    apic_27 { pt3dadd( 94.3717, 44.1144, -73.4877, 0.48 ) }
    apic_27 { pt3dadd( 96.6975, 43.7439, -75.6393, 0.48 ) }
    apic_27 { pt3dadd( 97.5743, 43.6513, -76.3487, 0.48 ) }
    apic_27 { pt3dadd( 98.4018, 43.5958, -76.9807, 0.48 ) }
    apic_27 { pt3dadd( 100.908, 43.4505, -78.7567, 0.48 ) }
    apic_27 { pt3dadd( 102.391, 43.3853, -79.7309, 0.48 ) }
    apic_27 { pt3dadd( 103.513, 43.2892, -80.2431, 0.48 ) }
    apic_27 { pt3dadd( 106.848, 42.8782, -81.3568, 0.48 ) }
    apic_27 { pt3dadd( 108.541, 42.582, -81.7767, 0.48 ) }
    apic_27 { pt3dadd( 110.84, 42.083, -82.2116, 0.48 ) }
    apic_27 { pt3dadd( 111.359, 41.9527, -82.255, 0.48 ) }
    apic_27 { pt3dadd( 116.147, 40.6978, -82.3361, 0.48 ) }
    apic_27 { pt3dadd( 116.553, 40.586, -82.3377, 0.48 ) }
    apic_27 { pt3dadd( 119.308, 39.8203, -82.398, 0.48 ) }
    apic_27 { pt3dadd( 119.548, 39.7622, -82.4002, 0.48 ) }
    apic_27 { pt3dadd( 121.587, 39.3527, -82.4706, 0.48 ) }
    apic_27 { pt3dadd( 122.003, 39.2948, -82.5028, 0.48 ) }
    apic_27 { pt3dadd( 124.048, 39.2698, -82.8896, 0.48 ) }
    apic_27 { pt3dadd( 126.014, 39.3596, -83.3228, 0.48 ) }
    apic_27 { pt3dadd( 127.025, 39.4983, -83.5388, 0.48 ) }
    apic_27 { pt3dadd( 127.497, 39.5855, -83.6283, 0.48 ) }
    apic_27 { pt3dadd( 129.059, 39.946, -83.9998, 0.48 ) }
    apic_27 { pt3dadd( 132.163, 40.7366, -84.7661, 0.48 ) }
    apic_27 { pt3dadd( 132.362, 40.7901, -84.8061, 0.48 ) }
    apic_27 { pt3dadd( 135.119, 41.3506, -85.1869, 0.48 ) }
    apic_27 { pt3dadd( 135.924, 41.4704, -85.2556, 0.48 ) }
    apic_27 { pt3dadd( 138.948, 41.457, -85.4875, 0.48 ) }
    apic_27 { pt3dadd( 139.155, 41.4276, -85.5105, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_27 { pt3dadd( 141.248, 40.9179, -85.7388, 0.48 ) }
    apic_27 { pt3dadd( 143.875, 40.2007, -86.1109, 0.48 ) }
    apic_27 { pt3dadd( 144.072, 40.1432, -86.1573, 0.48 ) }
    apic_27 { pt3dadd( 147.654, 39.1504, -87.1517, 0.36 ) }
    apic_27 { pt3dadd( 149.67, 38.6624, -87.6314, 0.36 ) }
    apic_27 { pt3dadd( 149.873, 38.6314, -87.6776, 0.36 ) }
    apic_27 { pt3dadd( 151.075, 38.5675, -87.9769, 0.36 ) }
    apic_27 { pt3dadd( 154.412, 38.9873, -88.437, 0.36 ) }
    apic_27 { pt3dadd( 154.821, 39.0883, -88.4306, 0.36 ) }
    apic_27 { pt3dadd( 157.616, 40.1921, -87.804, 0.36 ) }
    apic_27 { pt3dadd( 159.86, 41.1164, -87.062, 0.36 ) }
    apic_27 { pt3dadd( 160.15, 41.2367, -86.9528, 0.36 ) }
    apic_27 { pt3dadd( 162.854, 42.3852, -85.7262, 0.36 ) }
    apic_27 { pt3dadd( 162.975, 42.4389, -85.6586, 0.36 ) }
    apic_27 { pt3dadd( 165.995, 43.6252, -84.1406, 0.36 ) }
    apic_27 { pt3dadd( 166.085, 43.6506, -84.1085, 0.36 ) }
    // Section: apic_23, id: apic_23, parent: apic_1 (entry count 16/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 8.18143, 107.18, -8.05104, 0.96 ) }
    apic_23 { pt3dadd( 7.57497, 108.847, -8.1186, 0.72 ) }
    apic_23 { pt3dadd( 7.54325, 108.93, -8.11789, 0.72 ) }
    apic_23 { pt3dadd( 7.19257, 109.86, -8.0898, 0.72 ) }
    apic_23 { pt3dadd( 7.16317, 109.943, -8.0896, 0.72 ) }
    apic_23 { pt3dadd( 6.97847, 110.479, -8.10069, 0.72 ) }
    apic_23 { pt3dadd( 6.84008, 110.896, -8.15147, 0.72 ) }
    apic_23 { pt3dadd( 6.67342, 111.394, -8.23719, 0.72 ) }
    apic_23 { pt3dadd( 6.60851, 111.578, -8.27354, 0.72 ) }
    apic_23 { pt3dadd( 6.17867, 112.528, -8.51167, 0.72 ) }
    apic_23 { pt3dadd( 6.11882, 112.632, -8.54482, 0.72 ) }
    apic_23 { pt3dadd( 5.22489, 113.975, -9.03989, 0.72 ) }
    apic_23 { pt3dadd( 5.06395, 114.187, -9.12597, 0.72 ) }
    apic_23 { pt3dadd( 4.43961, 114.921, -9.44228, 0.72 ) }
    apic_23 { pt3dadd( 3.72694, 115.794, -9.79606, 0.72 ) }
    apic_23 { pt3dadd( 2.97039, 116.754, -10.1755, 0.72 ) }
    apic_23 { pt3dadd( 2.79121, 117.029, -10.2801, 0.72 ) }
    apic_23 { pt3dadd( 2.45814, 117.645, -10.5054, 0.72 ) }
    apic_23 { pt3dadd( 2.40805, 117.766, -10.5493, 0.72 ) }
    apic_23 { pt3dadd( 1.95049, 119.337, -11.1005, 0.72 ) }
    apic_23 { pt3dadd( 1.85482, 119.825, -11.2455, 0.72 ) }
    apic_23 { pt3dadd( 1.60238, 121.426, -11.6171, 0.72 ) }
    apic_23 { pt3dadd( 1.5493, 121.775, -11.6888, 0.72 ) }
    apic_23 { pt3dadd( 1.42489, 122.576, -11.8126, 0.72 ) }
    apic_23 { pt3dadd( 1.3429, 123.034, -11.8665, 0.72 ) }
    apic_23 { pt3dadd( 1.13196, 123.833, -11.9081, 0.72 ) }
    apic_23 { pt3dadd( 0.764806, 124.955, -11.8996, 0.6 ) }
    apic_23 { pt3dadd( 0.710895, 125.086, -11.8926, 0.6 ) }
    apic_23 { pt3dadd( -0.0858272, 126.792, -11.792, 0.6 ) }
    apic_23 { pt3dadd( -0.126103, 126.87, -11.7898, 0.6 ) }
    apic_23 { pt3dadd( -0.799462, 128.103, -11.7834, 0.6 ) }
    apic_23 { pt3dadd( -0.935622, 128.344, -11.7862, 0.6 ) }
    apic_23 { pt3dadd( -1.45313, 129.227, -11.8443, 0.6 ) }
    apic_23 { pt3dadd( -1.48427, 129.285, -11.8514, 0.6 ) }
    apic_23 { pt3dadd( -2.4156, 131.158, -12.1975, 0.6 ) }
    apic_23 { pt3dadd( -2.45131, 131.238, -12.2144, 0.6 ) }
    apic_23 { pt3dadd( -2.83584, 132.243, -12.4544, 0.6 ) }
    apic_23 { pt3dadd( -3.06595, 132.886, -12.595, 0.6 ) }
    apic_23 { pt3dadd( -3.5499, 134.276, -12.8756, 0.6 ) }
    apic_23 { pt3dadd( -3.56598, 134.332, -12.8879, 0.6 ) }
    apic_23 { pt3dadd( -3.97173, 136.031, -13.2963, 0.6 ) }
    apic_23 { pt3dadd( -4.01332, 136.227, -13.3431, 0.6 ) }
    apic_23 { pt3dadd( -4.27548, 137.605, -13.6595, 0.6 ) }
    apic_23 { pt3dadd( -4.31051, 137.8, -13.6977, 0.6 ) }
    apic_23 { pt3dadd( -4.62491, 139.697, -14.0334, 0.6 ) }
    apic_23 { pt3dadd( -4.66196, 139.956, -14.0777, 0.6 ) }
    apic_23 { pt3dadd( -4.80325, 141.409, -14.399, 0.6 ) }
    apic_23 { pt3dadd( -4.83889, 141.761, -14.4874, 0.6 ) }
    apic_23 { pt3dadd( -4.89029, 142.239, -14.6129, 0.6 ) }
    apic_23 { pt3dadd( -5.03034, 143.267, -14.8732, 0.6 ) }
    apic_23 { pt3dadd( -5.04135, 143.323, -14.8857, 0.6 ) }
    apic_23 { pt3dadd( -5.35419, 144.927, -15.2698, 0.6 ) }
    apic_23 { pt3dadd( -5.36819, 145.012, -15.2925, 0.6 ) }
    apic_23 { pt3dadd( -5.53743, 146.208, -15.6265, 0.6 ) }
    apic_23 { pt3dadd( -5.5849, 146.782, -15.8041, 0.6 ) }
    apic_23 { pt3dadd( -5.63526, 148.448, -16.351, 0.6 ) }
    apic_23 { pt3dadd( -5.62894, 148.628, -16.4065, 0.6 ) }
    apic_23 { pt3dadd( -5.54891, 149.464, -16.6459, 0.6 ) }
    apic_23 { pt3dadd( -5.50094, 149.818, -16.761, 0.6 ) }
    apic_23 { pt3dadd( -5.33697, 150.834, -17.0971, 0.6 ) }
    apic_23 { pt3dadd( -5.26128, 151.285, -17.2328, 0.6 ) }
    apic_23 { pt3dadd( -5.14675, 152.257, -17.4735, 0.6 ) }
    apic_23 { pt3dadd( -5.13323, 152.561, -17.5324, 0.6 ) }
    apic_23 { pt3dadd( -5.18583, 153.723, -17.6475, 0.48 ) }
    apic_23 { pt3dadd( -5.31249, 155.057, -17.7034, 0.48 ) }
    apic_23 { pt3dadd( -5.34601, 155.328, -17.7019, 0.48 ) }
    apic_23 { pt3dadd( -5.4794, 156.389, -17.6757, 0.48 ) }
    apic_23 { pt3dadd( -5.49018, 156.477, -17.6729, 0.48 ) }
    apic_23 { pt3dadd( -5.76638, 158.948, -17.6006, 0.48 ) }
    apic_23 { pt3dadd( -5.85701, 159.739, -17.6307, 0.48 ) }
    apic_23 { pt3dadd( -5.97935, 160.892, -17.706, 0.48 ) }
    apic_23 { pt3dadd( -5.99667, 161.067, -17.7219, 0.48 ) }
    apic_23 { pt3dadd( -6.05315, 161.756, -17.8174, 0.48 ) }
    apic_23 { pt3dadd( -6.08865, 162.126, -17.8879, 0.48 ) }
    apic_23 { pt3dadd( -6.37578, 163.882, -18.6513, 0.48 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 91/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 8.18143, 107.18, -8.05104, 0.96 ) }
    apic_2 { pt3dadd( 7.97952, 109.159, -8.07925, 0.96 ) }
    apic_2 { pt3dadd( 7.66673, 112.188, -8.12276, 0.96 ) }
    apic_2 { pt3dadd( 7.44712, 114.307, -8.15327, 0.96 ) }
    apic_2 { pt3dadd( 7.17851, 116.82, -8.19021, 0.84 ) }
    apic_2 { pt3dadd( 7.15748, 116.995, -8.193, 0.84 ) }
    apic_2 { pt3dadd( 6.84808, 119.349, -8.23294, 0.84 ) }
    apic_2 { pt3dadd( 6.78785, 119.717, -8.24028, 0.84 ) }
    apic_2 { pt3dadd( 6.46353, 121.425, -8.34681, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_2 { pt3dadd( 6.36963, 121.926, -8.39853, 0.84 ) }
    apic_2 { pt3dadd( 6.14544, 123.244, -8.58001, 0.84 ) }
    apic_2 { pt3dadd( 6.0909, 123.632, -8.64406, 0.84 ) }
    apic_2 { pt3dadd( 5.95609, 124.784, -8.86312, 0.84 ) }
    apic_2 { pt3dadd( 5.72065, 127.194, -9.30648, 0.84 ) }
    apic_2 { pt3dadd( 5.71474, 127.265, -9.31934, 0.84 ) }
    apic_2 { pt3dadd( 5.56785, 129.239, -9.63937, 0.84 ) }
    apic_2 { pt3dadd( 5.39071, 132.009, -10.046, 0.84 ) }
    apic_2 { pt3dadd( 5.38285, 132.132, -10.0609, 0.84 ) }
    apic_2 { pt3dadd( 5.23976, 134.745, -10.2831, 0.84 ) }
    apic_2 { pt3dadd( 5.21617, 135.137, -10.3016, 0.84 ) }
    apic_2 { pt3dadd( 5.13267, 137.388, -10.3692, 0.84 ) }
    apic_2 { pt3dadd( 5.12814, 137.513, -10.372, 0.84 ) }
    apic_2 { pt3dadd( 5.06034, 139.764, -10.3891, 0.84 ) }
    apic_2 { pt3dadd( 5.02052, 142.085, -10.4039, 0.84 ) }
    apic_2 { pt3dadd( 5.02159, 142.21, -10.4044, 0.84 ) }
    apic_2 { pt3dadd( 5.17235, 148.137, -10.4191, 0.84 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 17/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -21.9477, 12.145, -34.5045, 0.36 ) }
    dend_51 { pt3dadd( -21.9685, 12.1211, -34.9173, 0.36 ) }
    dend_51 { pt3dadd( -22.1919, 11.9838, -37.3993, 0.36 ) }
    dend_51 { pt3dadd( -22.2536, 11.954, -37.9462, 0.36 ) }
    dend_51 { pt3dadd( -22.4954, 11.8682, -39.6932, 0.36 ) }
    dend_51 { pt3dadd( -22.6184, 11.8318, -40.4874, 0.36 ) }
    dend_51 { pt3dadd( -22.7606, 11.7975, -41.2981, 0.36 ) }
    dend_51 { pt3dadd( -22.8435, 11.789, -41.647, 0.36 ) }
    dend_51 { pt3dadd( -22.9228, 11.784, -41.8796, 0.36 ) }
    dend_51 { pt3dadd( -23.0975, 11.7742, -42.3127, 0.36 ) }
    dend_51 { pt3dadd( -23.1261, 11.7721, -42.3649, 0.36 ) }
    dend_51 { pt3dadd( -23.293, 11.763, -42.6512, 0.36 ) }
    dend_51 { pt3dadd( -24.0644, 11.7113, -44.2068, 0.36 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 30/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -21.9477, 12.145, -34.5045, 0.36 ) }
    dend_50 { pt3dadd( -22.4284, 13.0647, -34.6546, 0.36 ) }
    dend_50 { pt3dadd( -23.1531, 14.283, -34.6655, 0.36 ) }
    dend_50 { pt3dadd( -23.3813, 14.589, -34.5892, 0.36 ) }
    dend_50 { pt3dadd( -23.8205, 15.1043, -34.3424, 0.36 ) }
    dend_50 { pt3dadd( -24.0277, 15.3154, -34.1769, 0.36 ) }
    dend_50 { pt3dadd( -24.6199, 15.8766, -33.6314, 0.36 ) }
    dend_50 { pt3dadd( -24.9981, 16.1592, -33.1935, 0.36 ) }
    dend_50 { pt3dadd( -25.536, 16.4823, -32.4887, 0.36 ) }
    dend_50 { pt3dadd( -25.7548, 16.6067, -32.1788, 0.36 ) }
    dend_50 { pt3dadd( -26.2989, 16.8976, -31.3468, 0.36 ) }
    dend_50 { pt3dadd( -26.3651, 16.9346, -31.2486, 0.36 ) }
    dend_50 { pt3dadd( -26.7177, 17.1609, -30.7164, 0.36 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 43/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -10.9188, -2.92942, -16.7035, 0.96 ) }
    dend_48 { pt3dadd( -10.8441, -2.98013, -18.0215, 0.6 ) }
    dend_48 { pt3dadd( -10.823, -2.99222, -18.2562, 0.6 ) }
    dend_48 { pt3dadd( -10.7111, -3.06528, -21.1882, 0.6 ) }
    dend_48 { pt3dadd( -10.7194, -3.06873, -21.3551, 0.6 ) }
    dend_48 { pt3dadd( -10.9179, -3.09847, -23.3349, 0.6 ) }
    dend_48 { pt3dadd( -11.1137, -3.12228, -24.729, 0.6 ) }
    dend_48 { pt3dadd( -11.3039, -3.12944, -25.7853, 0.6 ) }
    dend_48 { pt3dadd( -12.4547, -3.25857, -30.8966, 0.6 ) }
    dend_48 { pt3dadd( -13.0146, -3.34028, -32.9402, 0.6 ) }
    dend_48 { pt3dadd( -13.2129, -3.38888, -33.5897, 0.6 ) }
    dend_48 { pt3dadd( -13.4386, -3.45953, -34.2274, 0.6 ) }
    dend_48 { pt3dadd( -13.5137, -3.49149, -34.4488, 0.6 ) }
    dend_48 { pt3dadd( -14.3095, -3.90687, -37.0132, 0.6 ) }
    dend_48 { pt3dadd( -14.5257, -4.12428, -38.022, 0.6 ) }
    dend_48 { pt3dadd( -14.8051, -4.41691, -39.4727, 0.6 ) }
    dend_48 { pt3dadd( -14.8676, -4.47518, -39.7956, 0.6 ) }
    dend_48 { pt3dadd( -15.6934, -5.13311, -43.8962, 0.6 ) }
    dend_48 { pt3dadd( -15.8141, -5.21582, -44.4605, 0.6 ) }
    dend_48 { pt3dadd( -17.0801, -6.08046, -50.0807, 0.6 ) }
    dend_48 { pt3dadd( -17.5866, -6.47028, -52.2927, 0.6 ) }
    dend_48 { pt3dadd( -17.9215, -6.73582, -53.744, 0.6 ) }
    dend_48 { pt3dadd( -18.3576, -7.15285, -55.6421, 0.6 ) }
    dend_48 { pt3dadd( -18.3849, -7.18642, -55.7593, 0.6 ) }
    dend_48 { pt3dadd( -19.2516, -8.78163, -60.6608, 0.6 ) }
    dend_48 { pt3dadd( -19.4162, -9.70804, -63.2815, 0.6 ) }
    dend_48 { pt3dadd( -19.3799, -9.98087, -63.9186, 0.6 ) }
    dend_48 { pt3dadd( -19.3165, -10.298, -64.6247, 0.6 ) }
    dend_48 { pt3dadd( -19.1996, -10.7402, -65.817, 0.6 ) }
    dend_48 { pt3dadd( -18.9481, -11.604, -68.7685, 0.6 ) }
    dend_48 { pt3dadd( -18.8788, -11.7939, -69.5795, 0.6 ) }
    dend_48 { pt3dadd( -18.7116, -12.1435, -71.064, 0.6 ) }
    dend_48 { pt3dadd( -18.6676, -12.231, -71.3836, 0.6 ) }
    dend_48 { pt3dadd( -18.2733, -12.9625, -73.8414, 0.6 ) }
    dend_48 { pt3dadd( -18.0258, -13.3942, -75.0292, 0.6 ) }
    dend_48 { pt3dadd( -17.7447, -13.8531, -76.2001, 0.6 ) }
    dend_48 { pt3dadd( -17.6683, -13.9797, -76.4999, 0.6 ) }
    dend_48 { pt3dadd( -17.3771, -14.4603, -77.5864, 0.6 ) }
    dend_48 { pt3dadd( -17.3171, -14.5626, -77.7742, 0.6 ) }
    dend_48 { pt3dadd( -16.5086, -15.9707, -79.8667, 0.6 ) }
    dend_48 { pt3dadd( -16.1095, -16.5712, -80.6887, 0.6 ) }
    dend_48 { pt3dadd( -15.263, -17.7345, -82.3252, 0.6 ) }
    dend_48 { pt3dadd( -14.8785, -18.2508, -83.061, 0.6 ) }
    dend_48 { pt3dadd( -14.1636, -19.1628, -84.3436, 0.6 ) }
    dend_48 { pt3dadd( -14.0612, -19.2855, -84.5057, 0.6 ) }
    dend_48 { pt3dadd( -12.2996, -21.2477, -87.1255, 0.6 ) }
    dend_48 { pt3dadd( -11.6659, -21.8848, -88.0217, 0.6 ) }
    dend_48 { pt3dadd( -10.1005, -23.3252, -90.2126, 0.6 ) }
    dend_48 { pt3dadd( -9.5863, -23.7908, -90.9132, 0.6 ) }
    dend_48 { pt3dadd( -8.56133, -24.7157, -92.285, 0.6 ) }
    dend_48 { pt3dadd( -7.43595, -25.7891, -93.6172, 0.6 ) }
    dend_48 { pt3dadd( -6.53467, -26.6895, -94.5791, 0.6 ) }
    dend_48 { pt3dadd( -6.2407, -26.992, -94.8503, 0.6 ) }
    dend_48 { pt3dadd( -3.46638, -29.9219, -97.2029, 0.6 ) }
    dend_48 { pt3dadd( -3.18029, -30.2437, -97.4599, 0.6 ) }
    dend_48 { pt3dadd( -0.770722, -33.0985, -99.798, 0.6 ) }
    dend_48 { pt3dadd( -0.598292, -33.3076, -99.9761, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( 1.8169, -36.2569, -102.703, 0.6 ) }
    dend_48 { pt3dadd( 2.10096, -36.5952, -103.048, 0.6 ) }
    dend_48 { pt3dadd( 4.29783, -39.0899, -105.973, 0.48 ) }
    dend_48 { pt3dadd( 5.70748, -40.6369, -108.048, 0.48 ) }
    dend_48 { pt3dadd( 6.30911, -41.2704, -109.126, 0.48 ) }
    dend_48 { pt3dadd( 7.01085, -41.9647, -110.499, 0.48 ) }
    dend_48 { pt3dadd( 7.1024, -42.0419, -110.703, 0.48 ) }
    dend_48 { pt3dadd( 7.49338, -42.3249, -111.587, 0.48 ) }
    dend_48 { pt3dadd( 8.08707, -42.6789, -112.962, 0.48 ) }
    dend_48 { pt3dadd( 9.12028, -43.2516, -115.315, 0.48 ) }
    dend_48 { pt3dadd( 9.33813, -43.3742, -115.839, 0.48 ) }
    dend_48 { pt3dadd( 10.0743, -43.7859, -117.827, 0.48 ) }
    dend_48 { pt3dadd( 10.3113, -43.9421, -118.46, 0.48 ) }
    dend_48 { pt3dadd( 10.6285, -44.1905, -119.333, 0.48 ) }
    dend_48 { pt3dadd( 10.7726, -44.3115, -119.725, 0.48 ) }
    dend_48 { pt3dadd( 11.6368, -45.1416, -122.153, 0.48 ) }
    dend_48 { pt3dadd( 11.7202, -45.2333, -122.402, 0.48 ) }
    dend_48 { pt3dadd( 12.5929, -46.3187, -125.012, 0.48 ) }
    dend_48 { pt3dadd( 13.5824, -47.5553, -127.858, 0.48 ) }
    dend_48 { pt3dadd( 13.7668, -47.7662, -128.37, 0.48 ) }
    dend_48 { pt3dadd( 14.2872, -48.3292, -129.802, 0.48 ) }
    dend_48 { pt3dadd( 14.4627, -48.4845, -130.245, 0.48 ) }
    dend_48 { pt3dadd( 14.969, -48.8336, -131.493, 0.48 ) }
    dend_48 { pt3dadd( 15.4186, -48.9676, -132.572, 0.48 ) }
    dend_48 { pt3dadd( 16.3986, -48.9803, -134.827, 0.48 ) }
    dend_48 { pt3dadd( 16.765, -48.8915, -135.677, 0.48 ) }
    dend_48 { pt3dadd( 17.7039, -48.4568, -137.873, 0.48 ) }
    dend_48 { pt3dadd( 17.7867, -48.417, -138.052, 0.48 ) }
    dend_48 { pt3dadd( 18.8238, -47.9733, -140.279, 0.48 ) }
    dend_48 { pt3dadd( 19.4616, -47.7572, -141.645, 0.48 ) }
    dend_48 { pt3dadd( 20.3831, -47.6011, -143.55, 0.48 ) }
    dend_48 { pt3dadd( 20.457, -47.5982, -143.699, 0.48 ) }
    dend_48 { pt3dadd( 21.5968, -47.7061, -145.821, 0.48 ) }
    dend_48 { pt3dadd( 23.273, -47.9794, -148.874, 0.48 ) }
    dend_48 { pt3dadd( 23.9142, -48.1149, -149.953, 0.48 ) }
    dend_48 { pt3dadd( 25.448, -48.4179, -152.357, 0.48 ) }
    dend_48 { pt3dadd( 25.5836, -48.4401, -152.548, 0.48 ) }
    dend_48 { pt3dadd( 26.8689, -48.5286, -154.365, 0.48 ) }
    dend_48 { pt3dadd( 28.2899, -48.4742, -156.362, 0.48 ) }
    dend_48 { pt3dadd( 29.3593, -48.3766, -157.729, 0.48 ) }
    dend_48 { pt3dadd( 29.7266, -48.3406, -158.175, 0.48 ) }
    dend_48 { pt3dadd( 31.0335, -48.1661, -159.72, 0.48 ) }
    dend_48 { pt3dadd( 33.0911, -47.8679, -162.196, 0.48 ) }
    dend_48 { pt3dadd( 34.4948, -47.6229, -164.027, 0.48 ) }
    dend_48 { pt3dadd( 35.2137, -47.5006, -164.972, 0.48 ) }
    dend_48 { pt3dadd( 36.0011, -47.3922, -166.075, 0.48 ) }
    dend_48 { pt3dadd( 37.0269, -47.2829, -167.548, 0.48 ) }
    dend_48 { pt3dadd( 38.2175, -47.3951, -169.114, 0.48 ) }
    dend_48 { pt3dadd( 39.4776, -47.7471, -170.459, 0.48 ) }
    dend_48 { pt3dadd( 39.7011, -47.8387, -170.69, 0.48 ) }
    dend_48 { pt3dadd( 40.9407, -48.4514, -171.981, 0.48 ) }
    dend_48 { pt3dadd( 41.3222, -48.677, -172.402, 0.48 ) }
    dend_48 { pt3dadd( 44.0846, -50.5585, -175.511, 0.48 ) }
    dend_48 { pt3dadd( 45.3508, -51.4755, -176.879, 0.48 ) }
    dend_48 { pt3dadd( 46.8804, -52.587, -178.527, 0.48 ) }
    dend_48 { pt3dadd( 47.2421, -52.8196, -178.968, 0.48 ) }
    dend_48 { pt3dadd( 48.3002, -53.3884, -180.484, 0.48 ) }
    dend_48 { pt3dadd( 48.8499, -53.6241, -181.372, 0.48 ) }
    dend_48 { pt3dadd( 49.3171, -53.76, -182.226, 0.48 ) }
    dend_48 { pt3dadd( 49.7475, -53.8787, -183.029, 0.48 ) }
    dend_48 { pt3dadd( 51.4314, -54.2643, -186.221, 0.48 ) }
    dend_48 { pt3dadd( 52.3313, -54.5233, -187.744, 0.48 ) }
    dend_48 { pt3dadd( 53.0432, -54.7618, -188.89, 0.48 ) }
    dend_48 { pt3dadd( 53.3057, -54.8793, -189.341, 0.48 ) }
    dend_48 { pt3dadd( 55.0067, -55.8369, -192.486, 0.48 ) }
    dend_48 { pt3dadd( 55.3594, -56.1002, -193.165, 0.48 ) }
    dend_48 { pt3dadd( 57.567, -58.1656, -197.495, 0.48 ) }
    dend_48 { pt3dadd( 57.8747, -58.4837, -198.185, 0.48 ) }
    dend_48 { pt3dadd( 59.1318, -59.9238, -201.29, 0.48 ) }
    dend_48 { pt3dadd( 59.518, -60.4065, -202.362, 0.48 ) }
    dend_48 { pt3dadd( 60.038, -61.1605, -204.078, 0.48 ) }
    dend_48 { pt3dadd( 60.1246, -61.3029, -204.435, 0.48 ) }
    dend_48 { pt3dadd( 60.8679, -63.0486, -209.688, 0.48 ) }
    dend_48 { pt3dadd( 60.9896, -63.3999, -210.817, 0.48 ) }
    dend_48 { pt3dadd( 61.052, -63.9014, -212.364, 0.48 ) }
    dend_48 { pt3dadd( 60.9825, -64.4847, -214.08, 0.48 ) }
    dend_48 { pt3dadd( 60.8568, -64.7495, -214.767, 0.48 ) }
    dend_48 { pt3dadd( 60.4375, -65.3275, -215.848, 0.48 ) }
    dend_48 { pt3dadd( 59.9412, -65.9564, -216.459, 0.48 ) }
    dend_48 { pt3dadd( 58.9031, -67.3298, -217.665, 0.48 ) }
    dend_48 { pt3dadd( 58.7956, -67.5111, -217.772, 0.48 ) }
    dend_48 { pt3dadd( 58.0511, -69.0568, -218.337, 0.48 ) }
    dend_48 { pt3dadd( 58.0013, -69.2151, -218.357, 0.48 ) }
    dend_48 { pt3dadd( 57.2741, -73.1139, -218.165, 0.48 ) }
    dend_48 { pt3dadd( 57.1782, -73.8908, -218.05, 0.48 ) }
    dend_48 { pt3dadd( 56.9318, -76.8294, -217.397, 0.48 ) }
    dend_48 { pt3dadd( 56.6519, -78.9509, -216.985, 0.48 ) }
    dend_48 { pt3dadd( 56.2519, -81.8172, -216.447, 0.48 ) }
    dend_48 { pt3dadd( 56.2069, -82.1843, -216.393, 0.48 ) }
    dend_48 { pt3dadd( 55.9318, -84.6578, -216.1, 0.48 ) }
    dend_48 { pt3dadd( 55.8775, -85.2578, -216.084, 0.48 ) }
    dend_48 { pt3dadd( 55.4699, -90.6831, -216.503, 0.48 ) }
    dend_48 { pt3dadd( 55.4225, -91.5227, -216.623, 0.48 ) }
    dend_48 { pt3dadd( 55.2428, -94.9899, -217.254, 0.48 ) }
    dend_48 { pt3dadd( 55.1947, -96.6079, -217.554, 0.48 ) }
    dend_48 { pt3dadd( 55.172, -99.1688, -218.036, 0.48 ) }
    dend_48 { pt3dadd( 55.142, -99.6864, -218.139, 0.48 ) }
    dend_48 { pt3dadd( 55.0092, -100.395, -218.334, 0.48 ) }
    dend_48 { pt3dadd( 54.3164, -102.466, -218.963, 0.48 ) }
    dend_48 { pt3dadd( 54.1406, -102.781, -219.058, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( 53.3112, -104.04, -219.423, 0.48 ) }
    dend_48 { pt3dadd( 51.2102, -106.877, -220.272, 0.36 ) }
    dend_48 { pt3dadd( 48.9043, -109.841, -221.177, 0.36 ) }
    dend_48 { pt3dadd( 48.3243, -110.551, -221.401, 0.36 ) }
    dend_48 { pt3dadd( 46.2427, -112.974, -222.199, 0.36 ) }
    dend_48 { pt3dadd( 45.4535, -113.854, -222.487, 0.36 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -10.9188, -2.92942, -16.7035, 0.96 ) }
    dend_45 { pt3dadd( -13.6992, 0.697757, -19.2896, 0.84 ) }
    dend_45 { pt3dadd( -14.3592, 1.69368, -19.5993, 0.84 ) }
    dend_45 { pt3dadd( -14.4383, 1.82996, -19.6065, 0.84 ) }
    dend_45 { pt3dadd( -15.2112, 3.17487, -19.5595, 0.84 ) }
    dend_45 { pt3dadd( -16.2624, 4.95422, -19.4457, 0.84 ) }
    dend_45 { pt3dadd( -17.0812, 6.29296, -19.3113, 0.84 ) }
    dend_45 { pt3dadd( -17.1603, 6.4249, -19.2765, 0.84 ) }
    dend_45 { pt3dadd( -17.975, 7.80079, -18.9919, 0.84 ) }
    dend_45 { pt3dadd( -19.2159, 9.85524, -18.7618, 0.72 ) }
    dend_45 { pt3dadd( -19.7256, 10.674, -18.8063, 0.72 ) }
    dend_45 { pt3dadd( -20.3019, 11.5509, -18.9914, 0.72 ) }
    dend_45 { pt3dadd( -20.8569, 12.353, -19.2137, 0.72 ) }
    dend_45 { pt3dadd( -21.6412, 13.4626, -19.5594, 0.72 ) }
    dend_45 { pt3dadd( -22.5838, 14.7721, -20.0553, 0.72 ) }
    dend_45 { pt3dadd( -23.5789, 16.1812, -20.6727, 0.6 ) }
    dend_45 { pt3dadd( -23.6638, 16.3019, -20.7285, 0.6 ) }
    dend_45 { pt3dadd( -24.7428, 17.739, -21.3757, 0.6 ) }
    dend_45 { pt3dadd( -25.3719, 18.5019, -21.6582, 0.6 ) }
    dend_45 { pt3dadd( -25.5556, 18.7041, -21.7208, 0.6 ) }
    dend_45 { pt3dadd( -25.6789, 18.8407, -21.7439, 0.6 ) }
    dend_45 { pt3dadd( -25.7529, 18.9241, -21.7455, 0.6 ) }
    dend_45 { pt3dadd( -26.7404, 20.0658, -21.6941, 0.6 ) }
    dend_45 { pt3dadd( -26.8112, 20.1478, -21.6674, 0.6 ) }
    dend_45 { pt3dadd( -27.4678, 20.9447, -21.2311, 0.6 ) }
    dend_45 { pt3dadd( -28.0486, 21.6521, -20.755, 0.6 ) }
    dend_45 { pt3dadd( -28.7437, 22.5001, -20.1106, 0.6 ) }
    dend_45 { pt3dadd( -29.1653, 22.9947, -19.6998, 0.6 ) }
    dend_45 { pt3dadd( -30.4632, 24.3995, -18.4708, 0.6 ) }
    dend_45 { pt3dadd( -30.5518, 24.4849, -18.4055, 0.6 ) }
    dend_45 { pt3dadd( -31.3345, 25.2666, -17.9096, 0.6 ) }
    dend_45 { pt3dadd( -31.4951, 25.4341, -17.8181, 0.6 ) }
    dend_45 { pt3dadd( -32.1639, 26.1892, -17.5181, 0.6 ) }
    dend_45 { pt3dadd( -33.1081, 27.3199, -17.1984, 0.6 ) }
    dend_45 { pt3dadd( -34.3918, 28.8423, -16.8793, 0.6 ) }
    dend_45 { pt3dadd( -36.1769, 30.9498, -16.451, 0.6 ) }
    dend_45 { pt3dadd( -36.2681, 31.0531, -16.431, 0.6 ) }
    dend_45 { pt3dadd( -38.0743, 32.9609, -16.0793, 0.6 ) }
    dend_45 { pt3dadd( -39.1594, 34.0617, -15.8859, 0.6 ) }
    dend_45 { pt3dadd( -40.8823, 35.6834, -15.6252, 0.48 ) }
    dend_45 { pt3dadd( -40.9449, 35.7379, -15.6176, 0.48 ) }
    dend_45 { pt3dadd( -43.7527, 38.0367, -15.3529, 0.48 ) }
    dend_45 { pt3dadd( -45.1857, 39.2099, -15.1764, 0.48 ) }
    dend_45 { pt3dadd( -45.2789, 39.2854, -15.1622, 0.48 ) }
    dend_45 { pt3dadd( -47.7694, 41.3495, -14.7244, 0.48 ) }
    dend_45 { pt3dadd( -49.5732, 42.9199, -14.3628, 0.48 ) }
    dend_45 { pt3dadd( -50.4727, 43.7439, -14.1036, 0.48 ) }
    dend_45 { pt3dadd( -52.1295, 45.3896, -13.4419, 0.48 ) }
    dend_45 { pt3dadd( -52.2315, 45.4986, -13.3918, 0.48 ) }
    dend_45 { pt3dadd( -53.6847, 47.1163, -12.5632, 0.48 ) }
    dend_45 { pt3dadd( -53.749, 47.1951, -12.5176, 0.48 ) }
    dend_45 { pt3dadd( -55.1957, 49.0885, -11.3727, 0.48 ) }
    dend_45 { pt3dadd( -55.4535, 49.4249, -11.194, 0.48 ) }
    dend_45 { pt3dadd( -56.3938, 50.6787, -10.6476, 0.48 ) }
    dend_45 { pt3dadd( -56.584, 50.9384, -10.556, 0.48 ) }
    dend_45 { pt3dadd( -57.4438, 52.145, -10.2135, 0.48 ) }
    dend_45 { pt3dadd( -57.5328, 52.2728, -10.1889, 0.48 ) }
    dend_45 { pt3dadd( -59.1448, 54.6282, -9.95981, 0.48 ) }
    dend_45 { pt3dadd( -59.3348, 54.902, -9.92962, 0.48 ) }
    dend_45 { pt3dadd( -60.3837, 56.4061, -9.74858, 0.48 ) }
    dend_45 { pt3dadd( -60.4526, 56.5044, -9.73539, 0.48 ) }
    dend_45 { pt3dadd( -61.6895, 58.2983, -9.47345, 0.48 ) }
    dend_45 { pt3dadd( -61.9268, 58.6903, -9.43442, 0.48 ) }
    dend_45 { pt3dadd( -62.7035, 60.191, -9.3323, 0.48 ) }
    dend_45 { pt3dadd( -62.8141, 60.4143, -9.32197, 0.48 ) }
    dend_45 { pt3dadd( -63.4853, 61.943, -9.32244, 0.48 ) }
    dend_45 { pt3dadd( -63.5428, 62.0898, -9.32745, 0.48 ) }
    dend_45 { pt3dadd( -64.6828, 65.6367, -9.69459, 0.48 ) }
    dend_45 { pt3dadd( -65.0571, 67.0289, -9.91447, 0.48 ) }
    dend_45 { pt3dadd( -65.0735, 67.1084, -9.93347, 0.48 ) }
    dend_45 { pt3dadd( -65.3552, 68.6255, -10.3376, 0.48 ) }
    dend_45 { pt3dadd( -65.3711, 68.7307, -10.3711, 0.48 ) }
    dend_45 { pt3dadd( -65.6263, 70.5964, -11.0354, 0.48 ) }
    dend_45 { pt3dadd( -65.6384, 70.8037, -11.1379, 0.48 ) }
    dend_45 { pt3dadd( -65.7097, 72.441, -12.1068, 0.48 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -24.0488, 6.83658, 30.345, 0.48 ) }
    dend_42 { pt3dadd( -29.23, 6.85977, 35.1751, 0.48 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 83/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -24.0488, 6.83658, 30.345, 0.48 ) }
    dend_39 { pt3dadd( -28.0783, 6.15627, 38.2515, 0.48 ) }
    dend_39 { pt3dadd( -31.3067, 5.72929, 46.5343, 0.48 ) }
    dend_39 { pt3dadd( -35.0301, 6.03968, 54.6121, 0.48 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 87/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.4073, 25.9607, 14.4593, 0.6 ) }
    dend_35 { pt3dadd( -15.6095, 26.4067, 14.207, 0.36 ) }
    dend_35 { pt3dadd( -14.831, 26.6378, 14.1181, 0.36 ) }
    dend_35 { pt3dadd( -14.7235, 26.6708, 14.1222, 0.36 ) }
    dend_35 { pt3dadd( -13.9488, 26.9104, 14.2344, 0.36 ) }
    dend_35 { pt3dadd( -13.4945, 27.0159, 14.3338, 0.36 ) }
    dend_35 { pt3dadd( -12.6071, 27.1736, 14.5633, 0.36 ) }
    dend_35 { pt3dadd( -12.0209, 27.2364, 14.7732, 0.36 ) }
    dend_35 { pt3dadd( -10.9653, 27.0063, 15.3417, 0.36 ) }
    dend_35 { pt3dadd( -10.8007, 26.8996, 15.4801, 0.36 ) }
    dend_35 { pt3dadd( -10.32, 26.3198, 16.0827, 0.36 ) }
    dend_35 { pt3dadd( -10.2582, 26.2108, 16.1807, 0.36 ) }
    dend_35 { pt3dadd( -9.9514, 25.4897, 16.7482, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( -9.5894, 24.5457, 17.3667, 0.36 ) }
    dend_35 { pt3dadd( -9.36313, 23.8328, 17.777, 0.36 ) }
    dend_35 { pt3dadd( -9.26836, 23.5225, 17.9779, 0.36 ) }
    dend_35 { pt3dadd( -9.11386, 22.9817, 18.3881, 0.36 ) }
    dend_35 { pt3dadd( -9.07836, 22.8616, 18.4862, 0.36 ) }
    dend_35 { pt3dadd( -8.93626, 22.4637, 18.8668, 0.36 ) }
    dend_35 { pt3dadd( -8.90502, 22.4236, 18.9079, 0.36 ) }
    dend_35 { pt3dadd( -8.45978, 22.0301, 19.3139, 0.36 ) }
    dend_35 { pt3dadd( -8.40951, 21.9952, 19.3568, 0.36 ) }
    dend_35 { pt3dadd( -1.76591, 18.141, 24.6727, 0.36 ) }
    dend_35 { pt3dadd( 6.25636, 14.999, 28.2812, 0.36 ) }
    dend_35 { pt3dadd( 14.1245, 12.6331, 32.7249, 0.36 ) }
    dend_35 { pt3dadd( 21.992, 9.06151, 36.2741, 0.36 ) }
    dend_35 { pt3dadd( 29.1505, 5.62648, 41.1941, 0.36 ) }
    dend_35 { pt3dadd( 36.0147, 1.41343, 45.9253, 0.36 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 15/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -17.4073, 25.9607, 14.4593, 0.6 ) }
    dend_32 { pt3dadd( -16.9426, 27.4739, 15.1007, 0.6 ) }
    dend_32 { pt3dadd( -16.9032, 27.5886, 15.1361, 0.6 ) }
    dend_32 { pt3dadd( -16.3937, 29.0151, 15.4972, 0.6 ) }
    dend_32 { pt3dadd( -16.3073, 29.3244, 15.5833, 0.6 ) }
    dend_32 { pt3dadd( -15.9484, 30.8313, 16.025, 0.6 ) }
    dend_32 { pt3dadd( -15.8076, 31.5454, 16.2377, 0.6 ) }
    dend_32 { pt3dadd( -15.69, 32.3306, 16.4653, 0.6 ) }
    dend_32 { pt3dadd( -15.6811, 32.4323, 16.4912, 0.6 ) }
    dend_32 { pt3dadd( -15.6619, 34.2831, 16.8815, 0.6 ) }
    dend_32 { pt3dadd( -15.6705, 34.4066, 16.9069, 0.6 ) }
    dend_32 { pt3dadd( -15.8777, 35.7472, 17.215, 0.6 ) }
    dend_32 { pt3dadd( -15.8939, 35.8472, 17.2437, 0.6 ) }
    dend_32 { pt3dadd( -16.1068, 37.1825, 17.653, 0.6 ) }
    dend_32 { pt3dadd( -16.1695, 37.7383, 17.7672, 0.6 ) }
    dend_32 { pt3dadd( -16.2335, 38.7896, 17.8669, 0.6 ) }
    dend_32 { pt3dadd( -16.2366, 38.8682, 17.87, 0.6 ) }
    dend_32 { pt3dadd( -16.288, 40.6044, 17.8885, 0.6 ) }
    dend_32 { pt3dadd( -16.2881, 40.7097, 17.8878, 0.6 ) }
    dend_32 { pt3dadd( -16.1687, 42.5844, 17.7932, 0.6 ) }
    dend_32 { pt3dadd( -16.1575, 42.6896, 17.7824, 0.6 ) }
    dend_32 { pt3dadd( -15.9559, 44.1265, 17.4783, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.71799, -37.2108, 0.166683, 0.6 ) }
    dend_29 { pt3dadd( -4.97968, -38.1119, 3.2691, 0.48 ) }
    dend_29 { pt3dadd( -5.09044, -38.5545, 4.34233, 0.48 ) }
    dend_29 { pt3dadd( -5.21687, -39.0509, 5.38079, 0.48 ) }
    dend_29 { pt3dadd( -5.45666, -39.9195, 7.13282, 0.48 ) }
    dend_29 { pt3dadd( -5.51386, -40.0886, 7.45639, 0.48 ) }
    dend_29 { pt3dadd( -5.69167, -40.5692, 8.34217, 0.48 ) }
    dend_29 { pt3dadd( -6.24386, -41.6889, 9.98878, 0.48 ) }
    dend_29 { pt3dadd( -6.65181, -42.3281, 10.826, 0.48 ) }
    dend_29 { pt3dadd( -7.02985, -42.7743, 11.367, 0.48 ) }
    dend_29 { pt3dadd( -7.6601, -43.3245, 12.0251, 0.48 ) }
    dend_29 { pt3dadd( -7.74435, -43.3861, 12.0991, 0.48 ) }
    dend_29 { pt3dadd( -8.9328, -44.1222, 12.9977, 0.48 ) }
    dend_29 { pt3dadd( -9.47153, -44.4624, 13.3455, 0.48 ) }
    dend_29 { pt3dadd( -10.4901, -45.206, 13.9709, 0.48 ) }
    dend_29 { pt3dadd( -11.0584, -45.692, 14.3289, 0.48 ) }
    dend_29 { pt3dadd( -11.6502, -46.37, 14.8344, 0.48 ) }
    dend_29 { pt3dadd( -11.7807, -46.573, 14.9881, 0.48 ) }
    dend_29 { pt3dadd( -12.1665, -47.7175, 15.8413, 0.48 ) }
    dend_29 { pt3dadd( -12.2114, -47.9489, 16.0131, 0.48 ) }
    dend_29 { pt3dadd( -12.2192, -48.0511, 16.0897, 0.48 ) }
    dend_29 { pt3dadd( -12.2778, -49.5006, 17.2089, 0.48 ) }
    dend_29 { pt3dadd( -12.2758, -49.7579, 17.4158, 0.48 ) }
    dend_29 { pt3dadd( -12.2037, -51.0521, 18.455, 0.48 ) }
    dend_29 { pt3dadd( -12.1406, -51.5714, 18.86, 0.48 ) }
    dend_29 { pt3dadd( -11.9383, -52.8597, 19.8245, 0.48 ) }
    dend_29 { pt3dadd( -11.9151, -52.9881, 19.9167, 0.48 ) }
    dend_29 { pt3dadd( -11.7366, -53.7567, 20.4057, 0.48 ) }
    dend_29 { pt3dadd( -11.5681, -54.3603, 20.7675, 0.48 ) }
    dend_29 { pt3dadd( -11.3261, -54.9254, 21.0785, 0.48 ) }
    dend_29 { pt3dadd( -11.2831, -55.0026, 21.1151, 0.48 ) }
    dend_29 { pt3dadd( -11.9664, -62.6574, 28.4492, 0.48 ) }
    dend_29 { pt3dadd( -11.0533, -71.3566, 34.4776, 0.48 ) }
    dend_29 { pt3dadd( -9.44675, -80.4987, 39.6442, 0.48 ) }
    dend_29 { pt3dadd( -7.23449, -89.7658, 44.3428, 0.48 ) }
    dend_29 { pt3dadd( -6.6082, -99.8014, 47.7703, 0.48 ) }
    dend_29 { pt3dadd( -4.69902, -109.92, 50.3808, 0.48 ) }
    dend_29 { pt3dadd( -4.92692, -120.046, 53.586, 0.48 ) }
    dend_29 { pt3dadd( -5.43444, -130.199, 56.668, 0.48 ) }
    dend_29 { pt3dadd( -5.68186, -140.469, 59.3733, 0.48 ) }
    dend_29 { pt3dadd( -3.96629, -150.808, 61.1088, 0.48 ) }
    dend_29 { pt3dadd( -2.17418, -161.039, 63.3366, 0.48 ) }
    dend_29 { pt3dadd( 0.896241, -171.196, 63.8486, 0.48 ) }
    dend_29 { pt3dadd( 2.93817, -181.576, 62.8811, 0.48 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.71799, -37.2108, 0.166683, 0.6 ) }
    dend_26 { pt3dadd( -6.48443, -36.811, 0.0717146, 0.48 ) }
    dend_26 { pt3dadd( -6.56281, -36.8094, 0.0539406, 0.48 ) }
    dend_26 { pt3dadd( -7.43822, -36.8537, -0.188798, 0.48 ) }
    dend_26 { pt3dadd( -7.59166, -36.8686, -0.234493, 0.48 ) }
    dend_26 { pt3dadd( -8.65364, -36.9825, -0.559999, 0.48 ) }
    dend_26 { pt3dadd( -8.76151, -36.9921, -0.594582, 0.48 ) }
    dend_26 { pt3dadd( -9.9813, -37.146, -1.09655, 0.48 ) }
    dend_26 { pt3dadd( -10.1361, -37.1594, -1.15897, 0.48 ) }
    dend_26 { pt3dadd( -11.4242, -37.2311, -1.66537, 0.48 ) }
    dend_26 { pt3dadd( -11.5919, -37.2282, -1.73021, 0.48 ) }
    dend_26 { pt3dadd( -12.6112, -37.131, -2.11379, 0.48 ) }
    dend_26 { pt3dadd( -12.6856, -37.1213, -2.14258, 0.48 ) }
    dend_26 { pt3dadd( -13.626, -36.9556, -2.51732, 0.48 ) }
    dend_26 { pt3dadd( -13.8581, -36.9171, -2.6137, 0.48 ) }
    dend_26 { pt3dadd( -14.9504, -36.797, -2.89772, 0.48 ) }
    dend_26 { pt3dadd( -15.0301, -36.7937, -2.90791, 0.48 ) }
    dend_26 { pt3dadd( -15.9933, -36.853, -2.88463, 0.48 ) }
    dend_26 { pt3dadd( -16.0722, -36.8634, -2.87316, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -16.6759, -36.9797, -2.68464, 0.48 ) }
    dend_26 { pt3dadd( -18.7097, -37.4001, -1.81263, 0.48 ) }
    dend_26 { pt3dadd( -18.78, -37.4125, -1.77556, 0.48 ) }
    dend_26 { pt3dadd( -19.3783, -37.5008, -1.4315, 0.48 ) }
    dend_26 { pt3dadd( -19.6626, -37.5325, -1.25952, 0.48 ) }
    dend_26 { pt3dadd( -20.6924, -37.6243, -0.670328, 0.48 ) }
    dend_26 { pt3dadd( -20.7928, -37.6324, -0.618055, 0.48 ) }
    dend_26 { pt3dadd( -22.1754, -37.7311, -0.0285738, 0.48 ) }
    dend_26 { pt3dadd( -22.4247, -37.7576, 0.0813768, 0.48 ) }
    dend_26 { pt3dadd( -23.3202, -37.8673, 0.486247, 0.48 ) }
    dend_26 { pt3dadd( -23.7337, -37.9518, 0.665279, 0.48 ) }
    dend_26 { pt3dadd( -24.194, -38.0838, 0.86636, 0.48 ) }
    dend_26 { pt3dadd( -24.704, -38.2496, 1.09393, 0.48 ) }
    dend_26 { pt3dadd( -25.4353, -38.5336, 1.44623, 0.48 ) }
    dend_26 { pt3dadd( -25.6411, -38.6142, 1.5419, 0.48 ) }
    dend_26 { pt3dadd( -26.5783, -38.9968, 1.91886, 0.48 ) }
    dend_26 { pt3dadd( -26.8816, -39.1121, 2.01609, 0.48 ) }
    dend_26 { pt3dadd( -27.6968, -39.3835, 2.24157, 0.48 ) }
    dend_26 { pt3dadd( -27.8535, -39.4311, 2.27408, 0.48 ) }
    dend_26 { pt3dadd( -28.3685, -39.5957, 2.35063, 0.48 ) }
    dend_26 { pt3dadd( -29.2161, -39.8976, 2.46675, 0.48 ) }
    dend_26 { pt3dadd( -29.3651, -39.9505, 2.49602, 0.48 ) }
    dend_26 { pt3dadd( -30.2382, -40.3002, 2.66244, 0.48 ) }
    dend_26 { pt3dadd( -30.4412, -40.3919, 2.70589, 0.48 ) }
    dend_26 { pt3dadd( -31.0556, -40.6627, 2.87783, 0.48 ) }
    dend_26 { pt3dadd( -31.2849, -40.7557, 2.98465, 0.48 ) }
    dend_26 { pt3dadd( -32.0458, -41.047, 3.48775, 0.48 ) }
    dend_26 { pt3dadd( -38.5761, -42.147, 4.33439, 0.48 ) }
    dend_26 { pt3dadd( -45.2182, -42.7752, 4.57543, 0.48 ) }
    dend_26 { pt3dadd( -51.8484, -42.4978, 5.30637, 0.48 ) }
    dend_26 { pt3dadd( -58.4966, -42.2647, 4.74295, 0.48 ) }
    dend_26 { pt3dadd( -65.1591, -42.4786, 5.11309, 0.48 ) }
    dend_26 { pt3dadd( -71.6941, -41.827, 6.31296, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.15917, -32.4024, -0.410351, 1.08 ) }
    dend_24 { pt3dadd( 3.46004, -32.9151, -1.21087, 0.84 ) }
    dend_24 { pt3dadd( 2.32432, -33.8747, -2.68387, 0.84 ) }
    dend_24 { pt3dadd( 2.28235, -33.9112, -2.7369, 0.84 ) }
    dend_24 { pt3dadd( 1.83032, -34.3032, -3.3355, 0.84 ) }
    dend_24 { pt3dadd( 1.74396, -34.3779, -3.45462, 0.84 ) }
    dend_24 { pt3dadd( 0.917723, -35.0338, -4.63024, 0.84 ) }
    dend_24 { pt3dadd( 0.689751, -35.2162, -5.00116, 0.84 ) }
    dend_24 { pt3dadd( 0.426826, -35.4231, -5.43593, 0.72 ) }
    dend_24 { pt3dadd( 0.0350482, -35.7115, -6.10014, 0.72 ) }
    dend_24 { pt3dadd( -0.490223, -36.0736, -6.94266, 0.72 ) }
    dend_24 { pt3dadd( -1.22327, -36.545, -8.03708, 0.72 ) }
    dend_24 { pt3dadd( -1.41097, -36.6708, -8.30599, 0.72 ) }
    dend_24 { pt3dadd( -1.9987, -37.1656, -9.24875, 0.72 ) }
    dend_24 { pt3dadd( -2.11608, -37.2669, -9.46087, 0.72 ) }
    dend_24 { pt3dadd( -2.61354, -37.7029, -10.4022, 0.72 ) }
    dend_24 { pt3dadd( -2.96656, -37.9995, -11.0843, 0.72 ) }
    dend_24 { pt3dadd( -3.61001, -38.5211, -12.3772, 0.72 ) }
    dend_24 { pt3dadd( -4.53648, -39.2503, -14.3517, 0.72 ) }
    dend_24 { pt3dadd( -5.52382, -39.9957, -16.5931, 0.72 ) }
    dend_24 { pt3dadd( -5.6223, -40.0705, -16.8381, 0.72 ) }
    dend_24 { pt3dadd( -5.85851, -40.246, -17.4807, 0.72 ) }
    dend_24 { pt3dadd( -6.16038, -40.4726, -18.322, 0.72 ) }
    dend_24 { pt3dadd( -6.78967, -40.9141, -20.1594, 0.72 ) }
    dend_24 { pt3dadd( -6.81993, -40.9359, -20.2508, 0.72 ) }
    dend_24 { pt3dadd( -7.37131, -41.353, -21.9418, 0.72 ) }
    dend_24 { pt3dadd( -7.54515, -41.4739, -22.4652, 0.72 ) }
    dend_24 { pt3dadd( -7.83714, -41.6408, -23.3148, 0.72 ) }
    dend_24 { pt3dadd( -8.23828, -41.8269, -24.4227, 0.72 ) }
    dend_24 { pt3dadd( -8.90755, -42.0887, -26.1752, 0.72 ) }
    dend_24 { pt3dadd( -9.43705, -42.2829, -27.5396, 0.72 ) }
    dend_24 { pt3dadd( -9.6314, -42.3474, -28.0488, 0.72 ) }
    dend_24 { pt3dadd( -11.0579, -42.8139, -31.8439, 0.72 ) }
    dend_24 { pt3dadd( -11.2211, -42.8671, -32.2717, 0.72 ) }
    dend_24 { pt3dadd( -11.4105, -42.9329, -32.7732, 0.72 ) }
    dend_24 { pt3dadd( -11.7979, -43.0971, -33.8932, 0.72 ) }
    dend_24 { pt3dadd( -13.1654, -43.8091, -38.2179, 0.72 ) }
    dend_24 { pt3dadd( -13.1998, -43.8328, -38.3433, 0.72 ) }
    dend_24 { pt3dadd( -13.2972, -43.9408, -38.8078, 0.72 ) }
    dend_24 { pt3dadd( -13.4381, -44.1752, -39.6769, 0.72 ) }
    dend_24 { pt3dadd( -13.5979, -44.6573, -41.1819, 0.72 ) }
    dend_24 { pt3dadd( -13.6086, -44.7986, -41.5152, 0.72 ) }
    dend_24 { pt3dadd( -13.5287, -45.3549, -42.4963, 0.72 ) }
    dend_24 { pt3dadd( -13.5087, -45.6311, -42.9699, 0.72 ) }
    dend_24 { pt3dadd( -13.504, -46.1895, -43.8882, 0.72 ) }
    dend_24 { pt3dadd( -13.6314, -46.8215, -44.8438, 0.72 ) }
    dend_24 { pt3dadd( -13.7235, -47.0243, -45.1586, 0.72 ) }
    dend_24 { pt3dadd( -13.9451, -47.4163, -45.7694, 0.72 ) }
    dend_24 { pt3dadd( -14.185, -47.7737, -46.341, 0.72 ) }
    dend_24 { pt3dadd( -14.2441, -47.8667, -46.492, 0.72 ) }
    dend_24 { pt3dadd( -14.7123, -48.7448, -47.9505, 0.72 ) }
    dend_24 { pt3dadd( -14.8777, -49.2879, -48.9264, 0.72 ) }
    dend_24 { pt3dadd( -14.9139, -49.6641, -49.6453, 0.72 ) }
    dend_24 { pt3dadd( -14.887, -49.7934, -49.9097, 0.72 ) }
    dend_24 { pt3dadd( -14.7524, -50.0462, -50.4901, 0.72 ) }
    dend_24 { pt3dadd( -14.3978, -50.4419, -51.5903, 0.72 ) }
    dend_24 { pt3dadd( -13.8613, -50.817, -52.7853, 0.72 ) }
    dend_24 { pt3dadd( -13.8161, -50.852, -52.9045, 0.72 ) }
    dend_24 { pt3dadd( -13.6332, -51.0192, -53.5313, 0.72 ) }
    dend_24 { pt3dadd( -13.5843, -51.0986, -53.7894, 0.72 ) }
    dend_24 { pt3dadd( -13.4484, -51.6846, -55.3781, 0.72 ) }
    dend_24 { pt3dadd( -13.4413, -51.86, -55.7623, 0.72 ) }
    dend_24 { pt3dadd( -13.4739, -52.6042, -57.2357, 0.72 ) }
    dend_24 { pt3dadd( -13.4755, -52.6446, -57.3136, 0.72 ) }
    dend_24 { pt3dadd( -13.4896, -53.0076, -57.9379, 0.72 ) }
    dend_24 { pt3dadd( -13.4887, -53.1508, -58.1601, 0.72 ) }
    dend_24 { pt3dadd( -13.3531, -55.0091, -60.7818, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( -13.24, -55.8653, -62.0365, 0.72 ) }
    dend_24 { pt3dadd( -13.1733, -56.135, -62.4492, 0.72 ) }
    dend_24 { pt3dadd( -12.897, -57.0514, -63.9393, 0.72 ) }
    dend_24 { pt3dadd( -12.8163, -57.2623, -64.3019, 0.72 ) }
    dend_24 { pt3dadd( -12.6418, -57.6619, -65.0091, 0.72 ) }
    dend_24 { pt3dadd( -12.2546, -58.2752, -66.2035, 0.72 ) }
    dend_24 { pt3dadd( -11.9141, -58.6622, -67.1635, 0.72 ) }
    dend_24 { pt3dadd( -11.8101, -58.7587, -67.4637, 0.72 ) }
    dend_24 { pt3dadd( -11.6481, -58.8924, -67.9837, 0.72 ) }
    dend_24 { pt3dadd( -11.4826, -59.0425, -68.5799, 0.72 ) }
    dend_24 { pt3dadd( -10.9636, -59.6608, -70.6518, 0.72 ) }
    dend_24 { pt3dadd( -10.6527, -60.2392, -71.9843, 0.72 ) }
    dend_24 { pt3dadd( -10.5625, -60.5302, -72.4408, 0.72 ) }
    dend_24 { pt3dadd( -10.4224, -61.2007, -73.247, 0.72 ) }
    dend_24 { pt3dadd( -10.4133, -61.3338, -73.378, 0.72 ) }
    dend_24 { pt3dadd( -10.4155, -62.1634, -74.0336, 0.72 ) }
    dend_24 { pt3dadd( -10.5273, -63.4265, -74.7908, 0.72 ) }
    dend_24 { pt3dadd( -10.6604, -64.5786, -75.4366, 0.72 ) }
    dend_24 { pt3dadd( -10.69, -64.8084, -75.5836, 0.72 ) }
    dend_24 { pt3dadd( -10.976, -67.0101, -77.3447, 0.72 ) }
    dend_24 { pt3dadd( -10.9882, -67.1019, -77.4409, 0.72 ) }
    dend_24 { pt3dadd( -11.0647, -67.614, -78.1733, 0.72 ) }
    dend_24 { pt3dadd( -11.1237, -67.9805, -78.8093, 0.72 ) }
    dend_24 { pt3dadd( -11.2432, -68.6269, -80.1046, 0.72 ) }
    dend_24 { pt3dadd( -11.3622, -69.1766, -81.1416, 0.72 ) }
    dend_24 { pt3dadd( -11.5415, -69.8634, -82.3173, 0.72 ) }
    dend_24 { pt3dadd( -11.6884, -70.3269, -83.1008, 0.72 ) }
    dend_24 { pt3dadd( -11.8113, -70.6871, -83.6985, 0.72 ) }
    dend_24 { pt3dadd( -12.0411, -71.3218, -84.6952, 0.72 ) }
    dend_24 { pt3dadd( -12.6369, -72.9751, -87.0356, 0.72 ) }
    dend_24 { pt3dadd( -12.9268, -73.7923, -88.1132, 0.72 ) }
    dend_24 { pt3dadd( -13.1532, -74.5772, -89.0989, 0.72 ) }
    dend_24 { pt3dadd( -13.3488, -75.4765, -90.2161, 0.72 ) }
    dend_24 { pt3dadd( -13.3845, -75.8243, -90.6786, 0.72 ) }
    dend_24 { pt3dadd( -13.3645, -76.4558, -91.5397, 0.72 ) }
    dend_24 { pt3dadd( -13.3277, -76.6002, -91.7485, 0.72 ) }
    dend_24 { pt3dadd( -12.9529, -77.5596, -93.1361, 0.72 ) }
    dend_24 { pt3dadd( -12.7163, -78.1633, -93.9407, 0.72 ) }
    dend_24 { pt3dadd( -12.3127, -79.265, -95.3903, 0.72 ) }
    dend_24 { pt3dadd( -12.2227, -79.5145, -95.6999, 0.72 ) }
    dend_24 { pt3dadd( -11.9959, -80.157, -96.4804, 0.72 ) }
    dend_24 { pt3dadd( -11.8459, -80.5805, -96.9646, 0.72 ) }
    dend_24 { pt3dadd( -11.4298, -81.7704, -98.2971, 0.72 ) }
    dend_24 { pt3dadd( -11.2523, -82.254, -98.8423, 0.72 ) }
    dend_24 { pt3dadd( -10.9506, -83.0985, -99.8133, 0.72 ) }
    dend_24 { pt3dadd( -10.9131, -83.1883, -99.9183, 0.72 ) }
    dend_24 { pt3dadd( -10.3977, -84.2574, -101.236, 0.72 ) }
    dend_24 { pt3dadd( -9.9884, -84.9426, -102.189, 0.72 ) }
    dend_24 { pt3dadd( -9.5479, -85.5433, -103.113, 0.72 ) }
    dend_24 { pt3dadd( -9.41302, -85.7102, -103.382, 0.72 ) }
    dend_24 { pt3dadd( -8.85575, -86.3898, -104.488, 0.72 ) }
    dend_24 { pt3dadd( -8.80409, -86.4559, -104.59, 0.72 ) }
    dend_24 { pt3dadd( -7.70819, -87.9739, -106.782, 0.72 ) }
    dend_24 { pt3dadd( -7.58052, -88.1687, -107.035, 0.72 ) }
    dend_24 { pt3dadd( -7.23671, -88.7423, -107.721, 0.72 ) }
    dend_24 { pt3dadd( -7.00276, -89.1593, -108.204, 0.72 ) }
    dend_24 { pt3dadd( -6.51303, -90.1385, -109.36, 0.72 ) }
    dend_24 { pt3dadd( -6.27396, -90.685, -109.96, 0.72 ) }
    dend_24 { pt3dadd( -5.85429, -91.7656, -111.049, 0.72 ) }
    dend_24 { pt3dadd( -5.68142, -92.2927, -111.584, 0.72 ) }
    dend_24 { pt3dadd( -5.37351, -93.4369, -112.803, 0.72 ) }
    dend_24 { pt3dadd( -5.22672, -94.1153, -113.549, 0.72 ) }
    dend_24 { pt3dadd( -5.04089, -95.1927, -114.734, 0.72 ) }
    dend_24 { pt3dadd( -5.03356, -95.2525, -114.798, 0.72 ) }
    dend_24 { pt3dadd( -4.97303, -96.309, -115.952, 0.72 ) }
    dend_24 { pt3dadd( -4.96004, -96.8702, -116.569, 0.72 ) }
    dend_24 { pt3dadd( -4.94838, -97.925, -117.687, 0.72 ) }
    dend_24 { pt3dadd( -4.93671, -98.2432, -118.029, 0.72 ) }
    dend_24 { pt3dadd( -4.90468, -99.0559, -118.941, 0.72 ) }
    dend_24 { pt3dadd( -4.88706, -99.5206, -119.48, 0.72 ) }
    dend_24 { pt3dadd( -4.86233, -100.506, -120.645, 0.72 ) }
    dend_24 { pt3dadd( -4.86013, -100.677, -120.846, 0.72 ) }
    dend_24 { pt3dadd( -4.87205, -102.279, -122.757, 0.6 ) }
    dend_24 { pt3dadd( -4.90876, -103.223, -123.884, 0.6 ) }
    dend_24 { pt3dadd( -4.93406, -103.575, -124.304, 0.6 ) }
    dend_24 { pt3dadd( -5.0055, -104.392, -125.242, 0.6 ) }
    dend_24 { pt3dadd( -5.03728, -104.887, -125.82, 0.6 ) }
    dend_24 { pt3dadd( -5.06158, -105.432, -126.485, 0.6 ) }
    dend_24 { pt3dadd( -5.06474, -105.608, -126.714, 0.6 ) }
    dend_24 { pt3dadd( -5.06236, -105.843, -127.048, 0.6 ) }
    dend_24 { pt3dadd( -4.99869, -106.55, -128.086, 0.6 ) }
    dend_24 { pt3dadd( -4.74871, -108.135, -130.589, 0.6 ) }
    dend_24 { pt3dadd( -4.71103, -108.315, -130.901, 0.6 ) }
    dend_24 { pt3dadd( -4.47722, -109.232, -132.619, 0.6 ) }
    dend_24 { pt3dadd( -4.41256, -109.463, -133.034, 0.6 ) }
    dend_24 { pt3dadd( -4.24017, -110.019, -133.931, 0.6 ) }
    dend_24 { pt3dadd( -4.18841, -110.176, -134.15, 0.6 ) }
    dend_24 { pt3dadd( -3.82528, -111.4, -135.626, 0.6 ) }
    dend_24 { pt3dadd( -3.76688, -111.621, -135.867, 0.6 ) }
    dend_24 { pt3dadd( -3.52484, -112.71, -136.811, 0.6 ) }
    dend_24 { pt3dadd( -3.38208, -113.567, -137.492, 0.6 ) }
    dend_24 { pt3dadd( -3.29541, -114.331, -138.081, 0.6 ) }
    dend_24 { pt3dadd( -3.17271, -115.539, -138.984, 0.6 ) }
    dend_24 { pt3dadd( -3.15223, -115.796, -139.168, 0.6 ) }
    dend_24 { pt3dadd( -3.04883, -117.515, -140.457, 0.6 ) }
    dend_24 { pt3dadd( -3.02368, -118.171, -140.971, 0.6 ) }
    dend_24 { pt3dadd( -3.00515, -119.54, -142.096, 0.6 ) }
    dend_24 { pt3dadd( -3.01204, -119.887, -142.394, 0.6 ) }
    dend_24 { pt3dadd( -3.05655, -120.831, -143.261, 0.6 ) }
    dend_24 { pt3dadd( -3.07551, -121.036, -143.454, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_24 { pt3dadd( -3.22604, -121.976, -144.313, 0.6 ) }
    dend_24 { pt3dadd( -3.4063, -122.781, -145.038, 0.6 ) }
    dend_24 { pt3dadd( -3.93484, -124.649, -146.726, 0.6 ) }
    dend_24 { pt3dadd( -3.96446, -124.746, -146.811, 0.6 ) }
    dend_24 { pt3dadd( -4.21424, -125.457, -147.489, 0.6 ) }
    dend_24 { pt3dadd( -4.56329, -126.422, -148.476, 0.6 ) }
    dend_24 { pt3dadd( -5.19629, -128.062, -150.288, 0.6 ) }
    dend_24 { pt3dadd( -5.25347, -128.231, -150.483, 0.6 ) }
    dend_24 { pt3dadd( -5.42069, -128.817, -151.227, 0.6 ) }
    dend_24 { pt3dadd( -5.6567, -129.733, -152.575, 0.6 ) }
    dend_24 { pt3dadd( -5.78625, -130.309, -153.583, 0.6 ) }
    dend_24 { pt3dadd( -5.83011, -130.591, -154.088, 0.6 ) }
    dend_24 { pt3dadd( -5.90618, -131.46, -155.501, 0.6 ) }
    dend_24 { pt3dadd( -5.92166, -131.674, -155.806, 0.6 ) }
    dend_24 { pt3dadd( -6.05339, -132.735, -157.147, 0.6 ) }
    dend_24 { pt3dadd( -6.11758, -133.168, -157.613, 0.6 ) }
    dend_24 { pt3dadd( -6.24896, -134.194, -158.534, 0.6 ) }
    dend_24 { pt3dadd( -6.2596, -134.298, -158.615, 0.6 ) }
    dend_24 { pt3dadd( -6.3476, -135.591, -159.538, 0.6 ) }
    dend_24 { pt3dadd( -6.42883, -138.279, -161.369, 0.6 ) }
    dend_24 { pt3dadd( -6.42455, -138.389, -161.442, 0.6 ) }
    dend_24 { pt3dadd( -6.27374, -140.067, -162.62, 0.6 ) }
    dend_24 { pt3dadd( -6.22391, -140.312, -162.806, 0.6 ) }
    dend_24 { pt3dadd( -5.90669, -141.343, -163.673, 0.6 ) }
    dend_24 { pt3dadd( -5.88263, -141.395, -163.724, 0.6 ) }
    dend_24 { pt3dadd( -5.36867, -142.266, -164.593, 0.6 ) }
    dend_24 { pt3dadd( -5.25488, -142.464, -164.805, 0.6 ) }
    dend_24 { pt3dadd( -4.64903, -143.546, -166.092, 0.6 ) }
    dend_24 { pt3dadd( -4.32923, -144.163, -166.839, 0.6 ) }
    dend_24 { pt3dadd( -3.75287, -145.357, -168.311, 0.6 ) }
    dend_24 { pt3dadd( -3.55177, -145.764, -168.853, 0.6 ) }
    dend_24 { pt3dadd( -3.36853, -146.142, -169.389, 0.6 ) }
    dend_24 { pt3dadd( -3.15835, -146.549, -170.028, 0.6 ) }
    dend_24 { pt3dadd( -2.89149, -147.035, -170.967, 0.6 ) }
    dend_24 { pt3dadd( -2.74574, -147.25, -171.439, 0.6 ) }
    dend_24 { pt3dadd( -2.39273, -147.672, -172.597, 0.6 ) }
    dend_24 { pt3dadd( -2.36367, -147.707, -172.685, 0.6 ) }
    dend_24 { pt3dadd( -2.14667, -147.98, -173.313, 0.6 ) }
    dend_24 { pt3dadd( -1.81771, -148.488, -174.229, 0.6 ) }
    dend_24 { pt3dadd( -1.31341, -149.42, -175.602, 0.6 ) }
    dend_24 { pt3dadd( -1.2777, -149.502, -175.699, 0.6 ) }
    dend_24 { pt3dadd( -0.919612, -150.481, -176.719, 0.6 ) }
    dend_24 { pt3dadd( -0.872952, -150.619, -176.853, 0.6 ) }
    dend_24 { pt3dadd( -0.473984, -151.993, -178.057, 0.6 ) }
    dend_24 { pt3dadd( -0.449081, -152.072, -178.111, 0.6 ) }
    dend_24 { pt3dadd( -0.242122, -152.751, -178.51, 0.6 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.15917, -32.4024, -0.410351, 1.08 ) }
    dend_21 { pt3dadd( 4.68315, -35.2863, -1.09173, 0.96 ) }
    dend_21 { pt3dadd( 5.06762, -38.4748, -1.73814, 0.96 ) }
    dend_21 { pt3dadd( 5.07937, -38.6079, -1.76252, 0.96 ) }
    dend_21 { pt3dadd( 5.16325, -41.238, -2.16875, 0.84 ) }
    dend_21 { pt3dadd( 5.1591, -43.6969, -2.50769, 0.84 ) }
    dend_21 { pt3dadd( 5.15356, -43.8318, -2.52312, 0.84 ) }
    dend_21 { pt3dadd( 4.83417, -46.7871, -2.90859, 0.84 ) }
    dend_21 { pt3dadd( 4.75197, -47.3349, -2.97942, 0.84 ) }
    dend_21 { pt3dadd( 4.41681, -49.3417, -3.2097, 0.84 ) }
    dend_21 { pt3dadd( 4.38268, -49.5292, -3.23464, 0.84 ) }
    dend_21 { pt3dadd( 3.96571, -51.7884, -3.62033, 0.84 ) }
    dend_21 { pt3dadd( 3.51778, -54.4892, -4.14444, 0.84 ) }
    dend_21 { pt3dadd( 3.17061, -56.9273, -4.66491, 0.84 ) }
    dend_21 { pt3dadd( 3.1464, -57.1135, -4.70539, 0.84 ) }
    dend_21 { pt3dadd( 2.78995, -60.7538, -5.65947, 0.72 ) }
    dend_21 { pt3dadd( 2.58644, -63.5229, -6.45099, 0.72 ) }
    dend_21 { pt3dadd( 2.57994, -63.6525, -6.49121, 0.72 ) }
    dend_21 { pt3dadd( 2.52208, -65.2477, -7.04614, 0.72 ) }
    dend_21 { pt3dadd( 2.52162, -65.3728, -7.09916, 0.72 ) }
    dend_21 { pt3dadd( 2.61903, -67.9031, -8.21718, 0.72 ) }
    dend_21 { pt3dadd( 2.72634, -68.947, -8.71338, 0.72 ) }
    dend_21 { pt3dadd( 2.74056, -69.0685, -8.77258, 0.72 ) }
    dend_21 { pt3dadd( 3.04151, -72.1786, -10.1737, 0.72 ) }
    dend_21 { pt3dadd( 3.04283, -72.3055, -10.222, 0.72 ) }
    dend_21 { pt3dadd( 2.85641, -74.672, -10.9186, 0.72 ) }
    dend_21 { pt3dadd( 2.82619, -74.8017, -10.9457, 0.72 ) }
    dend_21 { pt3dadd( 2.22428, -76.4889, -11.2832, 0.72 ) }
    dend_21 { pt3dadd( 2.10096, -76.7741, -11.3305, 0.72 ) }
    dend_21 { pt3dadd( 0.874385, -79.0711, -11.579, 0.72 ) }
    dend_21 { pt3dadd( 0.747513, -79.3093, -11.609, 0.72 ) }
    dend_21 { pt3dadd( -0.202839, -80.9945, -11.8684, 0.72 ) }
    dend_21 { pt3dadd( -0.304004, -81.2424, -11.9131, 0.72 ) }
    dend_21 { pt3dadd( -0.726132, -82.9222, -12.2645, 0.72 ) }
    dend_21 { pt3dadd( -0.735102, -83.1104, -12.3018, 0.72 ) }
    dend_21 { pt3dadd( -0.479962, -84.8428, -12.626, 0.72 ) }
    dend_21 { pt3dadd( -0.448764, -84.9735, -12.6461, 0.72 ) }
    dend_21 { pt3dadd( 0.245757, -87.1524, -12.9058, 0.72 ) }
    dend_21 { pt3dadd( 0.286101, -87.2812, -12.9212, 0.72 ) }
    dend_21 { pt3dadd( 0.828714, -89.1644, -13.2192, 0.72 ) }
    dend_21 { pt3dadd( 0.89078, -89.5358, -13.2957, 0.72 ) }
    dend_21 { pt3dadd( 0.934206, -90.5039, -13.5413, 0.72 ) }
    dend_21 { pt3dadd( 0.871171, -91.0421, -13.6833, 0.72 ) }
    dend_21 { pt3dadd( 0.618967, -91.8885, -13.921, 0.72 ) }
    dend_21 { pt3dadd( 0.243439, -92.8891, -14.2679, 0.72 ) }
    dend_21 { pt3dadd( -0.630662, -94.7469, -14.9068, 0.72 ) }
    dend_21 { pt3dadd( -0.711682, -94.9124, -14.9612, 0.72 ) }
    dend_21 { pt3dadd( -1.35342, -96.2413, -15.3473, 0.72 ) }
    dend_21 { pt3dadd( -1.3898, -96.3213, -15.3678, 0.72 ) }
    dend_21 { pt3dadd( -2.50556, -99.2548, -15.9503, 0.6 ) }
    dend_21 { pt3dadd( -3.24296, -101.537, -16.2891, 0.6 ) }
    dend_21 { pt3dadd( -3.3567, -101.96, -16.3408, 0.6 ) }
    dend_21 { pt3dadd( -3.78, -103.63, -16.5268, 0.6 ) }
    dend_21 { pt3dadd( -3.84916, -103.892, -16.5497, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( -4.54082, -106.394, -16.677, 0.6 ) }
    dend_21 { pt3dadd( -4.61617, -106.656, -16.6774, 0.6 ) }
    dend_21 { pt3dadd( -5.19697, -108.655, -16.7326, 0.6 ) }
    dend_21 { pt3dadd( -5.28536, -108.946, -16.7444, 0.6 ) }
    dend_21 { pt3dadd( -5.77496, -110.526, -16.8369, 0.6 ) }
    dend_21 { pt3dadd( -5.82801, -110.71, -16.8484, 0.6 ) }
    dend_21 { pt3dadd( -6.32335, -112.528, -16.9684, 0.6 ) }
    dend_21 { pt3dadd( -6.41154, -112.933, -17.0279, 0.6 ) }
    dend_21 { pt3dadd( -6.74103, -114.927, -17.4179, 0.6 ) }
    dend_21 { pt3dadd( -6.80137, -115.409, -17.5226, 0.6 ) }
    dend_21 { pt3dadd( -6.96991, -117.266, -17.9826, 0.6 ) }
    dend_21 { pt3dadd( -6.99526, -117.526, -18.0582, 0.6 ) }
    dend_21 { pt3dadd( -7.38483, -121.339, -19.3044, 0.6 ) }
    dend_21 { pt3dadd( -7.44141, -121.727, -19.4164, 0.6 ) }
    dend_21 { pt3dadd( -7.77075, -123.433, -19.8773, 0.6 ) }
    dend_21 { pt3dadd( -7.86713, -123.821, -19.9577, 0.6 ) }
    dend_21 { pt3dadd( -8.4595, -125.811, -20.2384, 0.6 ) }
    dend_21 { pt3dadd( -8.51011, -125.973, -20.2458, 0.6 ) }
    dend_21 { pt3dadd( -9.41866, -128.692, -20.0077, 0.6 ) }
    dend_21 { pt3dadd( -9.46049, -128.821, -19.9933, 0.6 ) }
    dend_21 { pt3dadd( -10.0665, -130.846, -19.7092, 0.6 ) }
    dend_21 { pt3dadd( -10.1625, -131.261, -19.65, 0.6 ) }
    dend_21 { pt3dadd( -10.3806, -132.87, -19.4548, 0.6 ) }
    dend_21 { pt3dadd( -10.3886, -133.006, -19.4449, 0.6 ) }
    dend_21 { pt3dadd( -10.3953, -134.694, -19.385, 0.6 ) }
    dend_21 { pt3dadd( -10.2779, -137.501, -19.3284, 0.6 ) }
    dend_21 { pt3dadd( -10.064, -140.086, -19.3072, 0.6 ) }
    dend_21 { pt3dadd( -9.5881, -143.748, -19.3234, 0.6 ) }
    dend_21 { pt3dadd( -9.20855, -146.066, -19.3566, 0.6 ) }
    dend_21 { pt3dadd( -9.18557, -146.199, -19.3592, 0.6 ) }
    dend_21 { pt3dadd( -8.63331, -149.142, -19.4403, 0.48 ) }
    dend_21 { pt3dadd( -8.60106, -149.332, -19.4463, 0.48 ) }
    dend_21 { pt3dadd( -8.32333, -151.659, -19.5022, 0.48 ) }
    dend_21 { pt3dadd( -8.30932, -152.337, -19.5423, 0.48 ) }
    dend_21 { pt3dadd( -8.44779, -154.824, -19.7545, 0.48 ) }
    dend_21 { pt3dadd( -8.4907, -155.204, -19.7921, 0.48 ) }
    dend_21 { pt3dadd( -8.89554, -157.415, -20.0824, 0.48 ) }
    dend_21 { pt3dadd( -8.92427, -157.545, -20.1107, 0.48 ) }
    dend_21 { pt3dadd( -9.7015, -160.539, -20.9826, 0.48 ) }
    dend_21 { pt3dadd( -9.7432, -160.716, -21.0434, 0.48 ) }
    dend_21 { pt3dadd( -10.2478, -163.134, -22.0037, 0.48 ) }
    dend_21 { pt3dadd( -10.3966, -163.864, -22.3044, 0.48 ) }
    dend_21 { pt3dadd( -10.9076, -166.468, -23.4047, 0.48 ) }
    dend_21 { pt3dadd( -10.9333, -166.593, -23.4509, 0.48 ) }
    dend_21 { pt3dadd( -11.2781, -168.17, -23.957, 0.48 ) }
    dend_21 { pt3dadd( -11.3075, -168.297, -23.9953, 0.48 ) }
    dend_21 { pt3dadd( -12.3394, -172.593, -25.2439, 0.48 ) }
    dend_21 { pt3dadd( -12.468, -173.092, -25.4151, 0.48 ) }
    dend_21 { pt3dadd( -13.0957, -175.397, -26.3005, 0.48 ) }
    dend_21 { pt3dadd( -13.1811, -175.677, -26.421, 0.48 ) }
    dend_21 { pt3dadd( -13.6012, -176.912, -27.0386, 0.48 ) }
    dend_21 { pt3dadd( -13.7192, -177.232, -27.2156, 0.48 ) }
    dend_21 { pt3dadd( -15.2136, -180.814, -29.58, 0.48 ) }
    dend_21 { pt3dadd( -15.2621, -180.921, -29.6481, 0.48 ) }
    dend_21 { pt3dadd( -16.1758, -182.833, -30.8502, 0.48 ) }
    dend_21 { pt3dadd( -16.3964, -183.288, -31.1001, 0.48 ) }
    dend_21 { pt3dadd( -17.4556, -185.446, -32.1779, 0.48 ) }
    dend_21 { pt3dadd( -17.7221, -186.002, -32.4302, 0.48 ) }
    dend_21 { pt3dadd( -19.5203, -189.813, -33.9111, 0.48 ) }
    dend_21 { pt3dadd( -19.591, -189.98, -33.9747, 0.48 ) }
    dend_21 { pt3dadd( -20.1152, -191.354, -34.4923, 0.48 ) }
    dend_21 { pt3dadd( -20.4414, -192.285, -34.8075, 0.48 ) }
    dend_21 { pt3dadd( -20.8782, -193.687, -35.2378, 0.48 ) }
    dend_21 { pt3dadd( -20.9151, -193.813, -35.2711, 0.48 ) }
    dend_21 { pt3dadd( -21.5534, -196.614, -36.2305, 0.48 ) }
    dend_21 { pt3dadd( -21.6541, -196.988, -36.3583, 0.48 ) }
    dend_21 { pt3dadd( -21.82, -197.548, -36.5511, 0.48 ) }
    dend_21 { pt3dadd( -21.864, -197.668, -36.5967, 0.48 ) }
    dend_21 { pt3dadd( -22.6142, -199.39, -37.3409, 0.48 ) }
    dend_21 { pt3dadd( -23.9762, -202.52, -38.8197, 0.48 ) }
    dend_21 { pt3dadd( -24.6515, -204.022, -39.6138, 0.48 ) }
    dend_21 { pt3dadd( -24.709, -204.176, -39.6884, 0.48 ) }
    dend_21 { pt3dadd( -25.319, -206.142, -40.5774, 0.48 ) }
    dend_21 { pt3dadd( -25.3591, -206.293, -40.6422, 0.48 ) }
    dend_21 { pt3dadd( -25.817, -208.531, -41.5662, 0.48 ) }
    dend_21 { pt3dadd( -25.8416, -208.657, -41.6105, 0.48 ) }
    dend_21 { pt3dadd( -26.1929, -210.818, -42.3979, 0.48 ) }
    dend_21 { pt3dadd( -26.239, -211.074, -42.476, 0.48 ) }
    dend_21 { pt3dadd( -26.5325, -212.571, -42.8873, 0.48 ) }
    dend_21 { pt3dadd( -26.6382, -212.945, -43.0074, 0.48 ) }
    dend_21 { pt3dadd( -27.4289, -215.092, -43.8025, 0.48 ) }
    dend_21 { pt3dadd( -27.5226, -215.332, -43.8943, 0.48 ) }
    dend_21 { pt3dadd( -28.464, -217.485, -44.7725, 0.48 ) }
    dend_21 { pt3dadd( -28.7171, -218.074, -45.0036, 0.48 ) }
    dend_21 { pt3dadd( -29.5905, -220.149, -45.7685, 0.48 ) }
    dend_21 { pt3dadd( -29.6406, -220.269, -45.8092, 0.48 ) }
    dend_21 { pt3dadd( -29.9708, -221.007, -46.0447, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 33.5489, 0.0946869, 4.08896, 0.48 ) }
    dend_16 { pt3dadd( 32.9594, 1.08031, 3.41127, 0.48 ) }
    dend_16 { pt3dadd( 32.385, 1.98942, 2.81969, 0.48 ) }
    dend_16 { pt3dadd( 31.8365, 2.87087, 2.17619, 0.48 ) }
    dend_16 { pt3dadd( 31.7418, 3.02493, 2.06103, 0.48 ) }
    dend_16 { pt3dadd( 31.1315, 4.01743, 1.31919, 0.48 ) }
    dend_16 { pt3dadd( 31.051, 4.14841, 1.22129, 0.48 ) }
    dend_16 { pt3dadd( 30.71, 4.63177, 0.845173, 0.48 ) }
    dend_16 { pt3dadd( 30.1, 5.5028, 0.0683847, 0.48 ) }
    dend_16 { pt3dadd( 29.9857, 5.67061, -0.0731387, 0.48 ) }
    dend_16 { pt3dadd( 24.6452, 11.2696, -6.24917, 0.48 ) }
    dend_16 { pt3dadd( 19.8902, 16.8783, -12.8784, 0.48 ) }
    dend_16 { pt3dadd( 15.2444, 22.0681, -19.9137, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_16 { pt3dadd( 10.876, 26.7451, -27.4672, 0.48 ) }
    dend_16 { pt3dadd( 6.26064, 32.2314, -34.2946, 0.48 ) }
    dend_16 { pt3dadd( 2.21908, 36.8688, -42.0518, 0.48 ) }
    dend_16 { pt3dadd( -1.07739, 41.8623, -49.9392, 0.48 ) }
    dend_16 { pt3dadd( -5.121, 48.0814, -56.4956, 0.48 ) }
    dend_16 { pt3dadd( -9.5439, 53.3908, -63.5851, 0.48 ) }
    dend_16 { pt3dadd( -12.2772, 58.6068, -71.5435, 0.48 ) }
    dend_16 { pt3dadd( -15.5168, 64.1444, -79.0836, 0.48 ) }
    dend_16 { pt3dadd( -19.0782, 69.7623, -86.4164, 0.48 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 9/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 33.5489, 0.0946869, 4.08896, 0.48 ) }
    dend_13 { pt3dadd( 34.44, 1.49388, 4.05714, 0.48 ) }
    dend_13 { pt3dadd( 34.4966, 1.62265, 4.05915, 0.48 ) }
    dend_13 { pt3dadd( 34.8233, 2.41131, 4.06712, 0.48 ) }
    dend_13 { pt3dadd( 34.9482, 2.68466, 4.07501, 0.48 ) }
    dend_13 { pt3dadd( 35.3504, 3.49531, 4.12869, 0.48 ) }
    dend_13 { pt3dadd( 35.4094, 3.61316, 4.13904, 0.48 ) }
    dend_13 { pt3dadd( 35.9152, 4.47139, 4.31866, 0.48 ) }
    dend_13 { pt3dadd( 36.0757, 4.64131, 4.3561, 0.48 ) }
    dend_13 { pt3dadd( 36.7375, 5.1529, 4.5034, 0.48 ) }
    dend_13 { pt3dadd( 37.0375, 5.34994, 4.57698, 0.48 ) }
    dend_13 { pt3dadd( 37.2169, 5.4527, 4.62291, 0.48 ) }
    dend_13 { pt3dadd( 38.9387, 6.3994, 5.10257, 0.48 ) }
    dend_13 { pt3dadd( 40.2437, 7.08504, 5.52818, 0.48 ) }
    dend_13 { pt3dadd( 40.954, 7.46468, 5.77683, 0.48 ) }
    dend_13 { pt3dadd( 41.6654, 7.85132, 6.03116, 0.48 ) }
    dend_13 { pt3dadd( 42.2709, 8.19631, 6.24362, 0.48 ) }
    dend_13 { pt3dadd( 42.6552, 8.42355, 6.38623, 0.48 ) }
    dend_13 { pt3dadd( 43.5269, 9.01686, 6.78103, 0.48 ) }
    dend_13 { pt3dadd( 43.7797, 9.20779, 6.91023, 0.48 ) }
    dend_13 { pt3dadd( 44.0695, 9.42205, 7.03618, 0.48 ) }
    dend_13 { pt3dadd( 44.4812, 9.70719, 7.20791, 0.48 ) }
    dend_13 { pt3dadd( 51.8429, 14.3778, 8.3509, 0.48 ) }
    dend_13 { pt3dadd( 59.65, 18.2075, 9.65448, 0.48 ) }
    dend_13 { pt3dadd( 67.3864, 22.3795, 9.41346, 0.48 ) }
    dend_13 { pt3dadd( 74.7918, 26.9825, 8.27824, 0.48 ) }
    dend_13 { pt3dadd( 81.6606, 32.4478, 7.76272, 0.48 ) }
    dend_13 { pt3dadd( 87.2047, 39.2584, 8.20393, 0.48 ) }
    dend_13 { pt3dadd( 92.6883, 45.9569, 9.74564, 0.48 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -28.5276, -22.5172, -4.7217, 0.72 ) }
    dend_6 { pt3dadd( -29.1582, -22.6193, -3.52965, 0.48 ) }
    dend_6 { pt3dadd( -29.3705, -22.6813, -3.07937, 0.48 ) }
    dend_6 { pt3dadd( -30.2183, -23.0016, -1.15305, 0.48 ) }
    dend_6 { pt3dadd( -30.2483, -23.017, -1.08758, 0.48 ) }
    dend_6 { pt3dadd( -30.6619, -23.2548, -0.180985, 0.48 ) }
    dend_6 { pt3dadd( -31.0042, -23.4433, 0.538144, 0.48 ) }
    dend_6 { pt3dadd( -31.3048, -23.6327, 1.24054, 0.48 ) }
    dend_6 { pt3dadd( -31.3735, -23.6738, 1.38357, 0.48 ) }
    dend_6 { pt3dadd( -31.8473, -23.9255, 2.12288, 0.48 ) }
    dend_6 { pt3dadd( -32.2712, -24.0658, 2.64562, 0.48 ) }
    dend_6 { pt3dadd( -32.8025, -24.1499, 3.15052, 0.48 ) }
    dend_6 { pt3dadd( -33.1508, -24.2099, 3.3568, 0.48 ) }
    dend_6 { pt3dadd( -33.9219, -24.3754, 3.61504, 0.48 ) }
    dend_6 { pt3dadd( -34.1081, -24.4206, 3.66129, 0.48 ) }
    dend_6 { pt3dadd( -34.7658, -24.5806, 3.8135, 0.48 ) }
    dend_6 { pt3dadd( -34.9758, -24.6322, 3.85607, 0.48 ) }
    dend_6 { pt3dadd( -36.3618, -24.9798, 4.14926, 0.48 ) }
    dend_6 { pt3dadd( -37.9626, -25.3093, 4.57585, 0.48 ) }
    dend_6 { pt3dadd( -38.0858, -25.3354, 4.61177, 0.48 ) }
    dend_6 { pt3dadd( -40.0225, -25.7234, 5.22007, 0.48 ) }
    dend_6 { pt3dadd( -40.7019, -25.8425, 5.45685, 0.48 ) }
    dend_6 { pt3dadd( -41.0132, -25.879, 5.57684, 0.48 ) }
    dend_6 { pt3dadd( -42.3089, -25.8661, 6.21116, 0.48 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 62/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.5276, -22.5172, -4.7217, 0.72 ) }
    dend_5 { pt3dadd( -29.5386, -23.9966, -4.32539, 0.72 ) }
    dend_5 { pt3dadd( -30.3899, -25.0543, -4.04857, 0.72 ) }
    dend_5 { pt3dadd( -31.2504, -26.1201, -3.66056, 0.6 ) }
    dend_5 { pt3dadd( -31.3071, -26.1978, -3.63365, 0.6 ) }
    dend_5 { pt3dadd( -32.0751, -27.4061, -3.26966, 0.6 ) }
    dend_5 { pt3dadd( -32.4841, -28.2706, -3.07611, 0.6 ) }
    dend_5 { pt3dadd( -32.8527, -29.2096, -2.90685, 0.6 ) }
    dend_5 { pt3dadd( -33.6083, -31.9178, -2.49136, 0.6 ) }
    dend_5 { pt3dadd( -33.9457, -33.9973, -2.24783, 0.6 ) }
    dend_5 { pt3dadd( -34.075, -35.8758, -2.09017, 0.6 ) }
    dend_5 { pt3dadd( -33.9851, -39.7686, -1.90527, 0.6 ) }
    dend_5 { pt3dadd( -33.9764, -39.8681, -1.9034, 0.6 ) }
    dend_5 { pt3dadd( -33.7574, -41.4619, -1.91796, 0.6 ) }
    dend_5 { pt3dadd( -33.4164, -43.1299, -2.00314, 0.6 ) }
    dend_5 { pt3dadd( -32.8154, -45.4758, -2.12915, 0.6 ) }
    dend_5 { pt3dadd( -32.1067, -47.7826, -2.26429, 0.6 ) }
    dend_5 { pt3dadd( -31.6367, -49.1735, -2.34922, 0.6 ) }
    dend_5 { pt3dadd( -31.5909, -49.2988, -2.35778, 0.6 ) }
    dend_5 { pt3dadd( -30.5892, -51.8073, -2.48305, 0.6 ) }
    dend_5 { pt3dadd( -29.8282, -53.5044, -2.54497, 0.6 ) }
    dend_5 { pt3dadd( -28.7145, -55.696, -2.60427, 0.6 ) }
    dend_5 { pt3dadd( -28.6774, -55.7642, -2.60508, 0.6 ) }
    dend_5 { pt3dadd( -27.6825, -57.5538, -2.59991, 0.6 ) }
    dend_5 { pt3dadd( -26.6074, -59.4459, -2.56555, 0.6 ) }
    dend_5 { pt3dadd( -25.9396, -60.6093, -2.50599, 0.6 ) }
    dend_5 { pt3dadd( -25.7995, -60.836, -2.48702, 0.6 ) }
    dend_5 { pt3dadd( -25.2675, -61.6499, -2.39483, 0.6 ) }
    dend_5 { pt3dadd( -25.1455, -61.8243, -2.37542, 0.6 ) }
    dend_5 { pt3dadd( -24.5562, -62.5795, -2.18938, 0.6 ) }
    dend_5 { pt3dadd( -24.405, -62.7515, -2.11679, 0.6 ) }
    dend_5 { pt3dadd( -23.6565, -63.5578, -1.61743, 0.6 ) }
    dend_5 { pt3dadd( -23.5774, -63.6492, -1.56056, 0.6 ) }
    dend_5 { pt3dadd( -23.1, -64.2349, -1.18213, 0.6 ) }
    dend_5 { pt3dadd( -22.1288, -65.6312, -0.31933, 0.6 ) }
    dend_5 { pt3dadd( -21.6223, -66.4807, 0.202255, 0.6 ) }
    dend_5 { pt3dadd( -21.5819, -66.561, 0.245718, 0.6 ) }
    dend_5 { pt3dadd( -20.9166, -68.1088, 1.04376, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( -20.8774, -68.1915, 1.08368, 0.6 ) }
    dend_5 { pt3dadd( -20.2733, -69.3613, 1.60034, 0.6 ) }
    dend_5 { pt3dadd( -20.1143, -69.6166, 1.68646, 0.6 ) }
    dend_5 { pt3dadd( -18.9809, -71.4277, 2.24705, 0.6 ) }
    dend_5 { pt3dadd( -18.838, -71.6557, 2.31421, 0.6 ) }
    dend_5 { pt3dadd( -18.0223, -73.1616, 2.59088, 0.6 ) }
    dend_5 { pt3dadd( -17.9301, -73.4123, 2.58208, 0.6 ) }
    dend_5 { pt3dadd( -17.5273, -75.0149, 2.28013, 0.6 ) }
    dend_5 { pt3dadd( -17.2956, -77.1332, 1.70129, 0.6 ) }
    dend_5 { pt3dadd( -17.3014, -77.3972, 1.61643, 0.6 ) }
    dend_5 { pt3dadd( -17.5498, -79.8306, 0.797353, 0.6 ) }
    dend_5 { pt3dadd( -18.1477, -82.5688, -0.218006, 0.6 ) }
    dend_5 { pt3dadd( -18.1731, -82.6589, -0.252779, 0.6 ) }
    dend_5 { pt3dadd( -18.9762, -84.8618, -1.10855, 0.6 ) }
    dend_5 { pt3dadd( -19.3827, -85.8738, -1.51296, 0.6 ) }
    dend_5 { pt3dadd( -19.4444, -86.0194, -1.56607, 0.6 ) }
    dend_5 { pt3dadd( -20.8016, -88.9803, -2.51973, 0.6 ) }
    dend_5 { pt3dadd( -20.8738, -89.1447, -2.57865, 0.6 ) }
    dend_5 { pt3dadd( -21.5461, -90.7883, -3.27678, 0.6 ) }
    dend_5 { pt3dadd( -21.5712, -90.8534, -3.31097, 0.6 ) }
    dend_5 { pt3dadd( -21.8878, -91.783, -3.87055, 0.6 ) }
    dend_5 { pt3dadd( -21.9066, -91.846, -3.9119, 0.6 ) }
    dend_5 { pt3dadd( -22.3586, -93.7325, -5.40194, 0.6 ) }
    dend_5 { pt3dadd( -22.6661, -95.0469, -6.54476, 0.6 ) }
    dend_5 { pt3dadd( -22.7404, -95.3927, -6.86492, 0.6 ) }
    dend_5 { pt3dadd( -22.9674, -96.3753, -7.77923, 0.6 ) }
    dend_5 { pt3dadd( -23.0134, -96.6079, -7.97559, 0.6 ) }
    dend_5 { pt3dadd( -23.326, -98.2636, -9.23201, 0.6 ) }
    dend_5 { pt3dadd( -23.3767, -98.5126, -9.38914, 0.6 ) }
    dend_5 { pt3dadd( -23.6283, -100.06, -10.259, 0.6 ) }
    dend_5 { pt3dadd( -23.6674, -100.309, -10.3737, 0.6 ) }
    dend_5 { pt3dadd( -24.0886, -102.561, -11.1662, 0.6 ) }
    dend_5 { pt3dadd( -24.1617, -102.842, -11.2368, 0.6 ) }
    dend_5 { pt3dadd( -24.5739, -104.144, -11.4404, 0.6 ) }
    dend_5 { pt3dadd( -24.6407, -104.32, -11.4611, 0.6 ) }
    dend_5 { pt3dadd( -24.9665, -105.026, -11.5113, 0.6 ) }
    dend_5 { pt3dadd( -25.741, -106.438, -11.5824, 0.48 ) }
    dend_5 { pt3dadd( -26.684, -107.876, -11.6397, 0.48 ) }
    dend_5 { pt3dadd( -26.7593, -107.986, -11.6437, 0.48 ) }
    dend_5 { pt3dadd( -27.6619, -109.262, -11.6862, 0.48 ) }
    dend_5 { pt3dadd( -27.7698, -109.417, -11.691, 0.48 ) }
    dend_5 { pt3dadd( -29.1103, -111.374, -11.7474, 0.48 ) }
    dend_5 { pt3dadd( -29.2616, -111.62, -11.7542, 0.48 ) }
    dend_5 { pt3dadd( -30.0053, -112.945, -11.7951, 0.48 ) }
    dend_5 { pt3dadd( -30.0886, -113.115, -11.801, 0.48 ) }
    dend_5 { pt3dadd( -30.3883, -113.87, -11.8318, 0.48 ) }
    dend_5 { pt3dadd( -30.4213, -113.999, -11.8299, 0.48 ) }
    dend_5 { pt3dadd( -30.5001, -115.228, -11.7314, 0.48 ) }
    dend_5 { pt3dadd( -30.4983, -115.34, -11.6583, 0.48 ) }
    dend_5 { pt3dadd( -30.4934, -115.848, -11.189, 0.48 ) }
    dend_5 { pt3dadd( -30.4954, -115.941, -11.0933, 0.48 ) }
    dend_5 { pt3dadd( -30.5777, -117.138, -10.026, 0.48 ) }
    dend_5 { pt3dadd( -30.5841, -117.198, -9.97692, 0.48 ) }
    dend_5 { pt3dadd( -31.3852, -121.336, -7.32065, 0.48 ) }
    dend_5 { pt3dadd( -31.6626, -122.524, -6.69421, 0.48 ) }
    dend_5 { pt3dadd( -31.6971, -122.645, -6.64955, 0.48 ) }
    dend_5 { pt3dadd( -32.5737, -125.472, -5.95719, 0.48 ) }
    dend_5 { pt3dadd( -32.618, -125.62, -5.94158, 0.48 ) }
    dend_5 { pt3dadd( -33.5666, -128.915, -5.93114, 0.48 ) }
    dend_5 { pt3dadd( -33.5889, -128.989, -5.94025, 0.48 ) }
    dend_5 { pt3dadd( -34.4942, -131.826, -6.24521, 0.48 ) }
    dend_5 { pt3dadd( -34.5863, -132.088, -6.26667, 0.48 ) }
    dend_5 { pt3dadd( -35.2828, -133.883, -6.34775, 0.48 ) }
    dend_5 { pt3dadd( -35.3754, -134.133, -6.35976, 0.48 ) }
    dend_5 { pt3dadd( -35.7592, -135.207, -6.41622, 0.48 ) }
    dend_5 { pt3dadd( -36.246, -136.637, -6.49178, 0.48 ) }
    dend_5 { pt3dadd( -36.8913, -138.58, -6.59573, 0.48 ) }
    dend_5 { pt3dadd( -37.6736, -140.961, -6.81858, 0.48 ) }
    dend_5 { pt3dadd( -38.2757, -142.719, -7.06215, 0.48 ) }
    dend_5 { pt3dadd( -38.3158, -142.845, -7.08404, 0.48 ) }
    dend_5 { pt3dadd( -38.7368, -144.374, -7.42758, 0.48 ) }
    dend_5 { pt3dadd( -38.759, -144.468, -7.45387, 0.48 ) }
    dend_5 { pt3dadd( -39.2221, -146.793, -8.26234, 0.48 ) }
    dend_5 { pt3dadd( -39.5051, -148.398, -8.91501, 0.48 ) }
    dend_5 { pt3dadd( -39.5172, -148.468, -8.94468, 0.48 ) }
    dend_5 { pt3dadd( -39.7368, -149.925, -9.55344, 0.48 ) }
    dend_5 { pt3dadd( -39.8132, -150.381, -9.74066, 0.48 ) }
    dend_5 { pt3dadd( -40.042, -151.793, -10.2642, 0.48 ) }
    dend_5 { pt3dadd( -40.0906, -152.085, -10.3499, 0.48 ) }
    dend_5 { pt3dadd( -40.3212, -153.383, -10.6965, 0.48 ) }
    dend_5 { pt3dadd( -40.3448, -153.478, -10.7181, 0.48 ) }
    dend_5 { pt3dadd( -41.0477, -155.599, -11.1165, 0.48 ) }
    dend_5 { pt3dadd( -41.0954, -155.722, -11.1376, 0.48 ) }
    dend_5 { pt3dadd( -41.8399, -157.342, -11.3741, 0.48 ) }
    dend_5 { pt3dadd( -41.8974, -157.461, -11.39, 0.48 ) }
    dend_5 { pt3dadd( -42.5146, -158.849, -11.5488, 0.48 ) }
    dend_5 { pt3dadd( -42.9483, -159.962, -11.6554, 0.48 ) }
    dend_5 { pt3dadd( -42.992, -160.11, -11.6664, 0.48 ) }
    dend_5 { pt3dadd( -43.4269, -161.657, -11.7782, 0.48 ) }
    dend_5 { pt3dadd( -43.5344, -162.042, -11.8045, 0.48 ) }
    dend_5 { pt3dadd( -43.9756, -163.603, -11.9033, 0.48 ) }
    dend_5 { pt3dadd( -44.0238, -163.786, -11.9139, 0.48 ) }
    dend_5 { pt3dadd( -44.303, -164.838, -11.9684, 0.48 ) }
    dend_5 { pt3dadd( -44.7328, -166.492, -12.0567, 0.36 ) }
    dend_5 { pt3dadd( -45.1585, -168.185, -12.1292, 0.36 ) }
    dend_5 { pt3dadd( -45.2301, -168.475, -12.1388, 0.36 ) }
    dend_5 { pt3dadd( -45.4953, -169.53, -12.1525, 0.36 ) }
    dend_5 { pt3dadd( -45.5225, -169.661, -12.1447, 0.36 ) }
    dend_5 { pt3dadd( -45.7635, -171.251, -11.8947, 0.36 ) }
    dend_5 { pt3dadd( -45.7965, -171.614, -11.797, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_5 { pt3dadd( -45.9022, -172.779, -11.3696, 0.36 ) }
    dend_5 { pt3dadd( -45.9598, -173.057, -11.2502, 0.36 ) }
    dend_5 { pt3dadd( -46.5406, -174.673, -10.4421, 0.36 ) }
    dend_5 { pt3dadd( -46.8095, -175.18, -10.1812, 0.36 ) }
    dend_5 { pt3dadd( -47.5011, -176.162, -9.71555, 0.36 ) }
    dend_5 { pt3dadd( -47.5763, -176.265, -9.67646, 0.36 ) }
    dend_5 { pt3dadd( -48.4906, -177.558, -9.29545, 0.36 ) }
    dend_5 { pt3dadd( -48.8123, -178.056, -9.19201, 0.36 ) }
    dend_5 { pt3dadd( -49.4098, -179.128, -9.04199, 0.36 ) }
    dend_5 { pt3dadd( -50.1815, -180.812, -8.83757, 0.36 ) }
    dend_5 { pt3dadd( -50.4522, -181.667, -8.81887, 0.36 ) }
    dend_5 { pt3dadd( -50.723, -182.997, -8.89015, 0.36 ) }
    dend_5 { pt3dadd( -50.755, -183.315, -8.92484, 0.36 ) }
    dend_5 { pt3dadd( -50.7959, -184.576, -9.14814, 0.36 ) }
    dend_5 { pt3dadd( -50.7922, -184.706, -9.1798, 0.36 ) }
    dend_5 { pt3dadd( -50.5701, -187.174, -10.0095, 0.36 ) }
    dend_5 { pt3dadd( -50.4171, -188.67, -10.6263, 0.36 ) }
    dend_5 { pt3dadd( -50.3971, -188.79, -10.6833, 0.36 ) }
    dend_5 { pt3dadd( -50.1511, -189.873, -11.2317, 0.36 ) }
    dend_5 { pt3dadd( -50.0937, -190.034, -11.3125, 0.36 ) }
    dend_5 { pt3dadd( -49.347, -191.013, -11.5811, 0.36 ) }
    dend_5 { pt3dadd( -49.196, -191.103, -11.5543, 0.36 ) }
    dend_5 { pt3dadd( -48.2896, -191.484, -11.3303, 0.36 ) }
    dend_5 { pt3dadd( -48.2193, -191.509, -11.3083, 0.36 ) }
    dend_5 { pt3dadd( -46.7384, -191.895, -10.7092, 0.36 ) }
    dend_5 { pt3dadd( -44.6024, -192.363, -9.72817, 0.36 ) }
    dend_5 { pt3dadd( -44.2927, -192.413, -9.56193, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -31.742, -15.3636, -28.8164, 0.6 ) }
    dend_3 { pt3dadd( -32.0804, -15.3164, -29.1722, 0.6 ) }
    dend_3 { pt3dadd( -32.1295, -15.313, -29.2486, 0.6 ) }
    dend_3 { pt3dadd( -32.8756, -15.2158, -30.4098, 0.6 ) }
    dend_3 { pt3dadd( -33.0764, -15.1852, -30.725, 0.6 ) }
    dend_3 { pt3dadd( -33.7072, -15.0568, -31.6857, 0.6 ) }
    dend_3 { pt3dadd( -35.6855, -14.5163, -34.6285, 0.6 ) }
    dend_3 { pt3dadd( -37.8242, -13.8746, -37.8552, 0.48 ) }
    dend_3 { pt3dadd( -38.4898, -13.6396, -38.9008, 0.48 ) }
    dend_3 { pt3dadd( -38.5795, -13.6034, -39.0548, 0.48 ) }
    dend_3 { pt3dadd( -39.1174, -13.3393, -40.0492, 0.48 ) }
    dend_3 { pt3dadd( -39.5173, -13.0709, -40.9259, 0.48 ) }
    dend_3 { pt3dadd( -39.7023, -12.8781, -41.4273, 0.48 ) }
    dend_3 { pt3dadd( -40.3649, -12.1507, -43.6157, 0.48 ) }
    dend_3 { pt3dadd( -40.7465, -11.7439, -45.1966, 0.48 ) }
    dend_3 { pt3dadd( -40.824, -11.667, -45.5554, 0.48 ) }
    dend_3 { pt3dadd( -41.0961, -11.4187, -46.8869, 0.48 ) }
    dend_3 { pt3dadd( -41.1142, -11.4037, -46.9747, 0.48 ) }
    dend_3 { pt3dadd( -41.7177, -10.8601, -49.5859, 0.48 ) }
    dend_3 { pt3dadd( -41.9609, -10.6212, -50.5743, 0.48 ) }
    dend_3 { pt3dadd( -42.0951, -10.4917, -51.0226, 0.48 ) }
    dend_3 { pt3dadd( -42.4187, -10.2029, -51.9088, 0.48 ) }
    dend_3 { pt3dadd( -42.5705, -10.0853, -52.2309, 0.48 ) }
    dend_3 { pt3dadd( -43.0284, -9.75621, -53.0584, 0.48 ) }
    dend_3 { pt3dadd( -43.2423, -9.6384, -53.343, 0.48 ) }
    dend_3 { pt3dadd( -43.9423, -9.32065, -54.2326, 0.48 ) }
    dend_3 { pt3dadd( -44.4068, -9.15454, -54.8227, 0.48 ) }
    dend_3 { pt3dadd( -45.0554, -8.98462, -55.6904, 0.48 ) }
    dend_3 { pt3dadd( -45.2489, -8.9472, -56.0095, 0.48 ) }
    dend_3 { pt3dadd( -46.0408, -8.89971, -57.912, 0.48 ) }
    dend_3 { pt3dadd( -46.1283, -8.89427, -58.1822, 0.48 ) }
    dend_3 { pt3dadd( -46.4145, -8.88504, -59.3117, 0.48 ) }
    dend_3 { pt3dadd( -46.5259, -8.86958, -59.8802, 0.48 ) }
    dend_3 { pt3dadd( -47.0302, -8.73976, -63.1152, 0.48 ) }
    dend_3 { pt3dadd( -47.5125, -8.53276, -66.5978, 0.48 ) }
    dend_3 { pt3dadd( -47.6508, -8.4381, -67.8445, 0.48 ) }
    dend_3 { pt3dadd( -47.7213, -8.38515, -68.4173, 0.48 ) }
    dend_3 { pt3dadd( -48.0663, -8.0891, -71.1247, 0.48 ) }
    dend_3 { pt3dadd( -48.0806, -8.07838, -71.2139, 0.48 ) }
    dend_3 { pt3dadd( -48.2153, -7.99163, -71.8352, 0.48 ) }
    dend_3 { pt3dadd( -48.2557, -7.97391, -71.9647, 0.48 ) }
    dend_3 { pt3dadd( -48.7231, -7.91831, -73.2957, 0.48 ) }
    dend_3 { pt3dadd( -48.9706, -7.97195, -74.0137, 0.48 ) }
    dend_3 { pt3dadd( -49.304, -8.18612, -75.0622, 0.48 ) }
    dend_3 { pt3dadd( -49.3506, -8.23471, -75.2705, 0.48 ) }
    dend_3 { pt3dadd( -49.399, -8.34267, -75.6482, 0.48 ) }
    dend_3 { pt3dadd( -49.4824, -8.64421, -76.6337, 0.48 ) }
    dend_3 { pt3dadd( -49.5768, -9.23284, -78.4887, 0.48 ) }
    dend_3 { pt3dadd( -49.5936, -9.37964, -78.9544, 0.48 ) }
    dend_3 { pt3dadd( -49.6826, -10.3183, -81.8523, 0.48 ) }
    dend_3 { pt3dadd( -49.769, -11.2987, -84.8695, 0.48 ) }
    dend_3 { pt3dadd( -49.7746, -11.3402, -84.9998, 0.48 ) }
    dend_3 { pt3dadd( -49.9184, -12.0722, -87.2875, 0.48 ) }
    dend_3 { pt3dadd( -49.9672, -12.2099, -87.7299, 0.48 ) }
    dend_3 { pt3dadd( -50.0806, -12.4091, -88.3847, 0.48 ) }
    dend_3 { pt3dadd( -50.2953, -12.5541, -89.0031, 0.48 ) }
    dend_3 { pt3dadd( -50.9476, -12.6433, -90.1558, 0.48 ) }
    dend_3 { pt3dadd( -51.0659, -12.6322, -90.3222, 0.48 ) }
    dend_3 { pt3dadd( -51.8983, -12.4143, -91.2138, 0.48 ) }
    dend_3 { pt3dadd( -51.9563, -12.3965, -91.2653, 0.48 ) }
    dend_3 { pt3dadd( -53.0541, -12.0008, -92.3333, 0.48 ) }
    dend_3 { pt3dadd( -53.4941, -11.832, -92.7982, 0.48 ) }
    dend_3 { pt3dadd( -54.4569, -11.4525, -93.9043, 0.48 ) }
    dend_3 { pt3dadd( -54.8011, -11.3171, -94.3077, 0.48 ) }
    dend_3 { pt3dadd( -56.1748, -10.7776, -95.8672, 0.48 ) }
    dend_3 { pt3dadd( -58.157, -10.0206, -98.0255, 0.48 ) }
    dend_3 { pt3dadd( -59.3702, -9.50241, -99.2574, 0.48 ) }
    dend_3 { pt3dadd( -59.7097, -9.34523, -99.5838, 0.48 ) }
    dend_3 { pt3dadd( -60.9818, -8.69763, -100.716, 0.48 ) }
    dend_3 { pt3dadd( -62.2148, -8.00598, -101.714, 0.48 ) }
    dend_3 { pt3dadd( -62.425, -7.87575, -101.853, 0.48 ) }
    dend_3 { pt3dadd( -64.7535, -6.43282, -102.856, 0.48 ) }
    dend_3 { pt3dadd( -64.9725, -6.29229, -102.941, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -66.4422, -5.32855, -103.507, 0.48 ) }
    dend_3 { pt3dadd( -66.6847, -5.16534, -103.597, 0.48 ) }
    dend_3 { pt3dadd( -67.5544, -4.57559, -103.917, 0.48 ) }
    dend_3 { pt3dadd( -69.2482, -3.36576, -104.507, 0.48 ) }
    dend_3 { pt3dadd( -72.0027, -1.33466, -105.44, 0.48 ) }
    dend_3 { pt3dadd( -72.1023, -1.24761, -105.475, 0.48 ) }
    dend_3 { pt3dadd( -74.0935, 0.713618, -106.196, 0.48 ) }
    dend_3 { pt3dadd( -74.3573, 0.979822, -106.293, 0.48 ) }
    dend_3 { pt3dadd( -76.1346, 2.84129, -106.981, 0.48 ) }
    dend_3 { pt3dadd( -76.2251, 2.9375, -107.016, 0.48 ) }
    dend_3 { pt3dadd( -78.4752, 5.2626, -107.831, 0.48 ) }
    dend_3 { pt3dadd( -78.756, 5.53189, -107.962, 0.48 ) }
    dend_3 { pt3dadd( -80.6748, 7.23458, -109.025, 0.48 ) }
    dend_3 { pt3dadd( -81.0842, 7.57015, -109.272, 0.48 ) }
    dend_3 { pt3dadd( -82.4876, 8.61604, -110.197, 0.48 ) }
    dend_3 { pt3dadd( -82.5836, 8.68695, -110.264, 0.48 ) }
    dend_3 { pt3dadd( -85.3938, 10.7053, -112.352, 0.48 ) }
    dend_3 { pt3dadd( -85.5902, 10.8798, -112.509, 0.48 ) }
    dend_3 { pt3dadd( -86.945, 12.4364, -113.827, 0.48 ) }
    dend_3 { pt3dadd( -87.2064, 12.817, -114.12, 0.48 ) }
    dend_3 { pt3dadd( -87.9918, 14.26, -115.18, 0.48 ) }
    dend_3 { pt3dadd( -88.0424, 14.3865, -115.272, 0.48 ) }
    dend_3 { pt3dadd( -88.4524, 16.336, -116.571, 0.48 ) }
    dend_3 { pt3dadd( -88.7251, 18.581, -118.067, 0.48 ) }
    dend_3 { pt3dadd( -88.8193, 20.4074, -119.281, 0.48 ) }
    dend_3 { pt3dadd( -88.8203, 20.4833, -119.331, 0.48 ) }
    dend_3 { pt3dadd( -88.7017, 23.0819, -121.069, 0.48 ) }
    dend_3 { pt3dadd( -88.5868, 24.7662, -122.218, 0.48 ) }
    dend_3 { pt3dadd( -88.5564, 24.9951, -122.384, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -31.742, -15.3636, -28.8164, 0.6 ) }
    dend_2 { pt3dadd( -32.5026, -16.4686, -29.8111, 0.6 ) }
    dend_2 { pt3dadd( -32.5425, -16.5061, -29.859, 0.6 ) }
    dend_2 { pt3dadd( -33.3592, -17.0658, -30.6842, 0.6 ) }
    dend_2 { pt3dadd( -33.4167, -17.0984, -30.7324, 0.6 ) }
    dend_2 { pt3dadd( -34.2533, -17.533, -31.4033, 0.6 ) }
    dend_2 { pt3dadd( -34.3888, -17.6012, -31.5053, 0.6 ) }
    dend_2 { pt3dadd( -35.4838, -18.0608, -32.2389, 0.6 ) }
    dend_2 { pt3dadd( -36.0712, -18.3504, -32.6561, 0.6 ) }
    dend_2 { pt3dadd( -36.6543, -18.7141, -33.1286, 0.6 ) }
    dend_2 { pt3dadd( -36.8988, -18.9048, -33.3518, 0.6 ) }
    dend_2 { pt3dadd( -37.9124, -19.782, -34.4023, 0.6 ) }
    dend_2 { pt3dadd( -38.1044, -19.9243, -34.6086, 0.6 ) }
    dend_2 { pt3dadd( -39.0505, -20.5055, -35.6701, 0.6 ) }
    dend_2 { pt3dadd( -40.0234, -21.0054, -36.8138, 0.6 ) }
    dend_2 { pt3dadd( -40.4374, -21.1747, -37.282, 0.6 ) }
    dend_2 { pt3dadd( -41.5052, -21.5403, -38.4796, 0.6 ) }
    dend_2 { pt3dadd( -42.8005, -21.8506, -39.9094, 0.6 ) }
    dend_2 { pt3dadd( -43.7367, -21.9878, -40.8607, 0.6 ) }
    dend_2 { pt3dadd( -43.9374, -21.9961, -41.0487, 0.6 ) }
    dend_2 { pt3dadd( -44.7118, -21.9802, -41.7449, 0.6 ) }
    dend_2 { pt3dadd( -45.8743, -21.9691, -42.7877, 0.6 ) }
    dend_2 { pt3dadd( -46.2435, -21.9741, -43.1044, 0.6 ) }
    dend_2 { pt3dadd( -46.7699, -22.0094, -43.5532, 0.6 ) }
    dend_2 { pt3dadd( -46.9568, -22.0175, -43.7101, 0.6 ) }
    dend_2 { pt3dadd( -48.2001, -22.1024, -44.7981, 0.6 ) }
    dend_2 { pt3dadd( -48.3598, -22.118, -44.9469, 0.6 ) }
    dend_2 { pt3dadd( -49.3313, -22.2875, -45.8263, 0.6 ) }
    dend_2 { pt3dadd( -50.5295, -22.6522, -46.9954, 0.6 ) }
    dend_2 { pt3dadd( -50.7187, -22.7396, -47.1985, 0.6 ) }
    dend_2 { pt3dadd( -51.4005, -23.1759, -47.9811, 0.6 ) }
    dend_2 { pt3dadd( -51.635, -23.3955, -48.2906, 0.6 ) }
    dend_2 { pt3dadd( -51.9489, -23.762, -48.7845, 0.6 ) }
    dend_2 { pt3dadd( -52.1186, -24.0093, -49.0945, 0.6 ) }
    dend_2 { pt3dadd( -52.448, -24.5111, -49.7042, 0.6 ) }
    dend_2 { pt3dadd( -52.8128, -25.0494, -50.3571, 0.6 ) }
    dend_2 { pt3dadd( -53.2388, -25.7284, -51.1268, 0.6 ) }
    dend_2 { pt3dadd( -53.3613, -25.9434, -51.3684, 0.6 ) }
    dend_2 { pt3dadd( -53.6989, -26.7035, -52.1716, 0.6 ) }
    dend_2 { pt3dadd( -54.2728, -28.4044, -53.7941, 0.6 ) }
    dend_2 { pt3dadd( -54.295, -28.524, -53.8901, 0.6 ) }
    dend_2 { pt3dadd( -54.3611, -29.6418, -54.6739, 0.6 ) }
    dend_2 { pt3dadd( -54.2963, -30.3879, -55.137, 0.6 ) }
    dend_2 { pt3dadd( -54.0565, -31.5814, -55.8352, 0.6 ) }
    dend_2 { pt3dadd( -53.9679, -31.8629, -55.9929, 0.6 ) }
    dend_2 { pt3dadd( -53.3783, -33.3794, -56.7835, 0.6 ) }
    dend_2 { pt3dadd( -53.2998, -33.5925, -56.9005, 0.6 ) }
    dend_2 { pt3dadd( -52.9001, -34.7047, -57.5514, 0.6 ) }
    dend_2 { pt3dadd( -52.8264, -34.9699, -57.6923, 0.6 ) }
    dend_2 { pt3dadd( -52.5884, -36.1497, -58.3613, 0.6 ) }
    dend_2 { pt3dadd( -52.5702, -36.31, -58.4606, 0.6 ) }
    dend_2 { pt3dadd( -52.5567, -37.1446, -59.021, 0.6 ) }
    dend_2 { pt3dadd( -52.5878, -37.3259, -59.1938, 0.6 ) }
    dend_2 { pt3dadd( -53.0107, -38.4784, -60.462, 0.6 ) }
    dend_2 { pt3dadd( -53.158, -38.7966, -60.8438, 0.6 ) }
    dend_2 { pt3dadd( -53.6047, -39.6346, -62.0113, 0.6 ) }
    dend_2 { pt3dadd( -53.648, -39.71, -62.1279, 0.6 ) }
    dend_2 { pt3dadd( -54.8041, -41.6468, -65.4347, 0.6 ) }
    dend_2 { pt3dadd( -55.1336, -42.1884, -66.4223, 0.6 ) }
    dend_2 { pt3dadd( -55.1514, -42.2167, -66.4765, 0.6 ) }
    dend_2 { pt3dadd( -55.6582, -43.1115, -68.0472, 0.6 ) }
    dend_2 { pt3dadd( -55.732, -43.2638, -68.284, 0.6 ) }
    dend_2 { pt3dadd( -55.9458, -43.8188, -69.0312, 0.6 ) }
    dend_2 { pt3dadd( -55.9646, -43.8964, -69.1063, 0.6 ) }
    dend_2 { pt3dadd( -56.2293, -44.7162, -69.7894, 0.6 ) }
    dend_2 { pt3dadd( -56.3459, -45.0127, -70.0118, 0.6 ) }
    dend_2 { pt3dadd( -57.0386, -46.3615, -70.9102, 0.6 ) }
    dend_2 { pt3dadd( -57.1306, -46.5215, -71.0157, 0.6 ) }
    dend_2 { pt3dadd( -58.2451, -48.2426, -72.1132, 0.6 ) }
    dend_2 { pt3dadd( -59.3717, -49.8739, -73.1499, 0.6 ) }
    dend_2 { pt3dadd( -59.5846, -50.1785, -73.347, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_2 { pt3dadd( -60.5084, -51.6259, -74.2157, 0.6 ) }
    dend_2 { pt3dadd( -60.6049, -51.8096, -74.3084, 0.6 ) }
    dend_2 { pt3dadd( -60.9602, -52.7637, -74.6813, 0.6 ) }
    dend_2 { pt3dadd( -60.9938, -52.9001, -74.7189, 0.6 ) }
    dend_2 { pt3dadd( -61.3038, -54.4227, -75.0549, 0.6 ) }
    dend_2 { pt3dadd( -61.8506, -57.3232, -75.6002, 0.6 ) }
    dend_2 { pt3dadd( -62.1988, -59.4638, -75.9705, 0.6 ) }
    dend_2 { pt3dadd( -62.6715, -62.4644, -76.4639, 0.48 ) }
    dend_2 { pt3dadd( -63.0745, -65.2162, -76.7804, 0.48 ) }
    dend_2 { pt3dadd( -63.3642, -67.1671, -76.9052, 0.48 ) }
    dend_2 { pt3dadd( -63.3811, -67.2764, -76.9048, 0.48 ) }
    dend_2 { pt3dadd( -63.8072, -70.0568, -76.7063, 0.48 ) }
    dend_2 { pt3dadd( -63.8253, -70.1634, -76.6888, 0.48 ) }
    dend_2 { pt3dadd( -64.225, -72.6006, -75.849, 0.48 ) }
    dend_2 { pt3dadd( -64.2437, -72.7444, -75.773, 0.48 ) }
    dend_2 { pt3dadd( -64.363, -73.9864, -74.9956, 0.48 ) }
    dend_2 { pt3dadd( -64.3873, -74.2268, -74.8334, 0.48 ) }
    dend_2 { pt3dadd( -64.6104, -76.5423, -73.185, 0.48 ) }
    dend_2 { pt3dadd( -64.7777, -78.3895, -71.9783, 0.48 ) }
    dend_2 { pt3dadd( -64.8395, -78.9335, -71.7054, 0.48 ) }
    dend_2 { pt3dadd( -65.015, -80.3384, -71.0843, 0.48 ) }
    dend_2 { pt3dadd( -65.0646, -80.643, -70.9717, 0.48 ) }
    dend_2 { pt3dadd( -65.4539, -82.1995, -70.5003, 0.48 ) }
    dend_2 { pt3dadd( -65.4873, -82.3011, -70.4767, 0.48 ) }
    dend_2 { pt3dadd( -67.1207, -86.5468, -69.5727, 0.48 ) }
    dend_2 { pt3dadd( -67.2115, -86.7696, -69.5269, 0.48 ) }
    dend_2 { pt3dadd( -68.0964, -88.7623, -69.1029, 0.48 ) }
    dend_2 { pt3dadd( -69.4508, -91.6029, -68.4796, 0.48 ) }
    dend_2 { pt3dadd( -70.0859, -92.7937, -68.2065, 0.48 ) }
    dend_2 { pt3dadd( -70.6011, -93.694, -67.9885, 0.48 ) }
    // Section: apic_25, id: apic_25, parent: apic_23 (entry count 30/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( -6.37578, 163.882, -18.6513, 0.48 ) }
    apic_25 { pt3dadd( -5.74107, 164.99, -19.2153, 0.48 ) }
    apic_25 { pt3dadd( -5.06762, 166.038, -19.8278, 0.48 ) }
    apic_25 { pt3dadd( -4.89686, 166.303, -19.9844, 0.48 ) }
    apic_25 { pt3dadd( -4.3368, 167.168, -20.4999, 0.48 ) }
    apic_25 { pt3dadd( -4.01165, 167.67, -20.7998, 0.48 ) }
    apic_25 { pt3dadd( -3.06536, 169.056, -21.6787, 0.48 ) }
    apic_25 { pt3dadd( -2.64037, 169.608, -22.081, 0.48 ) }
    apic_25 { pt3dadd( -1.39724, 171.05, -23.2686, 0.48 ) }
    apic_25 { pt3dadd( -0.549752, 171.991, -24.0809, 0.48 ) }
    apic_25 { pt3dadd( -0.449678, 172.098, -24.177, 0.48 ) }
    apic_25 { pt3dadd( 0.544006, 173.144, -25.133, 0.48 ) }
    apic_25 { pt3dadd( 0.832946, 173.439, -25.4116, 0.48 ) }
    apic_25 { pt3dadd( 1.67167, 174.241, -26.2236, 0.48 ) }
    apic_25 { pt3dadd( 1.76593, 174.33, -26.3328, 0.48 ) }
    apic_25 { pt3dadd( 2.67986, 175.237, -27.5394, 0.48 ) }
    apic_25 { pt3dadd( 2.76793, 175.325, -27.6637, 0.48 ) }
    apic_25 { pt3dadd( 2.9512, 175.516, -27.9408, 0.48 ) }
    apic_25 { pt3dadd( 3.45443, 176.032, -28.719, 0.48 ) }
    apic_25 { pt3dadd( 4.78142, 177.199, -30.7767, 0.48 ) }
    apic_25 { pt3dadd( 5.08816, 177.449, -31.322, 0.48 ) }
    apic_25 { pt3dadd( 5.90557, 178.061, -32.9249, 0.48 ) }
    apic_25 { pt3dadd( 5.95791, 178.102, -33.0297, 0.48 ) }
    apic_25 { pt3dadd( 6.28413, 178.385, -33.6914, 0.48 ) }
    apic_25 { pt3dadd( 6.85603, 179.033, -34.9186, 0.48 ) }
    apic_25 { pt3dadd( 7.74781, 180.389, -36.9902, 0.48 ) }
    apic_25 { pt3dadd( 7.84888, 180.591, -37.2589, 0.48 ) }
    apic_25 { pt3dadd( 8.27274, 181.661, -38.5017, 0.48 ) }
    apic_25 { pt3dadd( 8.52224, 182.295, -39.1635, 0.48 ) }
    apic_25 { pt3dadd( 9.03294, 183.663, -40.4008, 0.48 ) }
    apic_25 { pt3dadd( 9.18321, 184.07, -40.7067, 0.48 ) }
    apic_25 { pt3dadd( 9.85045, 185.677, -41.7815, 0.48 ) }
    apic_25 { pt3dadd( 10.1058, 186.217, -42.1657, 0.48 ) }
    apic_25 { pt3dadd( 10.871, 187.649, -43.2291, 0.48 ) }
    apic_25 { pt3dadd( 11.2705, 188.346, -43.7237, 0.48 ) }
    apic_25 { pt3dadd( 12.1104, 189.708, -44.639, 0.48 ) }
    apic_25 { pt3dadd( 12.1908, 189.842, -44.7199, 0.48 ) }
    apic_25 { pt3dadd( 12.9651, 191.224, -45.4581, 0.48 ) }
    apic_25 { pt3dadd( 13.4134, 191.997, -45.9017, 0.48 ) }
    apic_25 { pt3dadd( 14.2919, 193.473, -46.7965, 0.48 ) }
    apic_25 { pt3dadd( 14.4227, 193.678, -46.9309, 0.48 ) }
    apic_25 { pt3dadd( 14.729, 194.134, -47.247, 0.48 ) }
    apic_25 { pt3dadd( 14.7921, 194.219, -47.3121, 0.48 ) }
    apic_25 { pt3dadd( 16.6163, 196.487, -49.1922, 0.48 ) }
    apic_25 { pt3dadd( 17.0297, 196.899, -49.6214, 0.48 ) }
    apic_25 { pt3dadd( 18.7844, 198.326, -51.4514, 0.48 ) }
    apic_25 { pt3dadd( 19.0094, 198.495, -51.6958, 0.48 ) }
    apic_25 { pt3dadd( 19.9993, 199.174, -52.8033, 0.48 ) }
    apic_25 { pt3dadd( 20.1512, 199.27, -52.9767, 0.48 ) }
    apic_25 { pt3dadd( 21.0762, 199.782, -54.0568, 0.48 ) }
    apic_25 { pt3dadd( 21.1836, 199.839, -54.1837, 0.48 ) }
    apic_25 { pt3dadd( 22.3906, 200.462, -55.6289, 0.48 ) }
    apic_25 { pt3dadd( 22.6059, 200.577, -55.8821, 0.48 ) }
    apic_25 { pt3dadd( 24.1713, 201.274, -57.73, 0.48 ) }
    apic_25 { pt3dadd( 24.5713, 201.397, -58.1983, 0.48 ) }
    apic_25 { pt3dadd( 25.5088, 201.593, -59.286, 0.48 ) }
    apic_25 { pt3dadd( 25.8248, 201.623, -59.6684, 0.48 ) }
    apic_25 { pt3dadd( 26.9173, 201.601, -61.0275, 0.48 ) }
    apic_25 { pt3dadd( 28.4785, 201.44, -63.0901, 0.48 ) }
    apic_25 { pt3dadd( 29.8402, 201.161, -65.0157, 0.48 ) }
    apic_25 { pt3dadd( 30.0368, 201.112, -65.3286, 0.48 ) }
    apic_25 { pt3dadd( 30.891, 200.865, -66.8121, 0.48 ) }
    apic_25 { pt3dadd( 30.9331, 200.851, -66.8818, 0.48 ) }
    apic_25 { pt3dadd( 31.7297, 200.554, -68.16, 0.48 ) }
    apic_25 { pt3dadd( 31.7763, 200.531, -68.2238, 0.48 ) }
    apic_25 { pt3dadd( 33.259, 199.538, -69.9232, 0.48 ) }
    apic_25 { pt3dadd( 33.5451, 199.353, -70.2032, 0.48 ) }
    apic_25 { pt3dadd( 35.2214, 198.332, -71.6424, 0.48 ) }
    apic_25 { pt3dadd( 35.5025, 198.189, -71.8768, 0.48 ) }
    apic_25 { pt3dadd( 37.4669, 197.366, -73.4536, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_25 { pt3dadd( 37.8882, 197.239, -73.7927, 0.48 ) }
    apic_25 { pt3dadd( 39.8315, 197.002, -75.7049, 0.48 ) }
    apic_25 { pt3dadd( 40.1117, 197.022, -76.0538, 0.48 ) }
    apic_25 { pt3dadd( 41.0938, 197.32, -77.5207, 0.48 ) }
    apic_25 { pt3dadd( 41.4202, 197.465, -78.0375, 0.48 ) }
    apic_25 { pt3dadd( 42.1154, 197.865, -79.2052, 0.48 ) }
    apic_25 { pt3dadd( 43.7609, 198.893, -82.1099, 0.36 ) }
    apic_25 { pt3dadd( 43.9174, 199.0, -82.4057, 0.36 ) }
    apic_25 { pt3dadd( 44.6596, 199.477, -83.7844, 0.36 ) }
    apic_25 { pt3dadd( 45.0123, 199.692, -84.4567, 0.36 ) }
    apic_25 { pt3dadd( 45.5243, 199.977, -85.4793, 0.36 ) }
    apic_25 { pt3dadd( 46.1737, 200.305, -86.8291, 0.36 ) }
    apic_25 { pt3dadd( 46.2972, 200.355, -87.0728, 0.36 ) }
    apic_25 { pt3dadd( 46.9424, 200.644, -88.5232, 0.36 ) }
    apic_25 { pt3dadd( 47.1225, 200.742, -88.9967, 0.36 ) }
    apic_25 { pt3dadd( 47.8283, 201.096, -90.7066, 0.36 ) }
    apic_25 { pt3dadd( 47.9875, 201.163, -91.063, 0.36 ) }
    apic_25 { pt3dadd( 48.194, 201.209, -91.4229, 0.36 ) }
    apic_25 { pt3dadd( 48.7212, 201.297, -92.2139, 0.36 ) }
    apic_25 { pt3dadd( 49.1027, 201.313, -92.7194, 0.36 ) }
    apic_25 { pt3dadd( 50.4596, 201.308, -94.3448, 0.36 ) }
    apic_25 { pt3dadd( 50.7045, 201.3, -94.6257, 0.36 ) }
    apic_25 { pt3dadd( 52.4811, 201.191, -96.7173, 0.36 ) }
    apic_25 { pt3dadd( 52.8811, 201.155, -97.2058, 0.36 ) }
    apic_25 { pt3dadd( 54.2353, 201.003, -98.9302, 0.36 ) }
    apic_25 { pt3dadd( 54.4734, 200.982, -99.2421, 0.36 ) }
    apic_25 { pt3dadd( 55.4889, 200.877, -100.63, 0.36 ) }
    apic_25 { pt3dadd( 55.8195, 200.843, -101.098, 0.36 ) }
    apic_25 { pt3dadd( 56.5045, 200.783, -102.146, 0.36 ) }
    apic_25 { pt3dadd( 56.7468, 200.791, -102.522, 0.36 ) }
    apic_25 { pt3dadd( 57.4262, 201.019, -103.572, 0.36 ) }
    // Section: apic_24, id: apic_24, parent: apic_23 (entry count 31/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( -6.37578, 163.882, -18.6513, 0.48 ) }
    apic_24 { pt3dadd( -6.55321, 164.944, -18.7037, 0.36 ) }
    apic_24 { pt3dadd( -6.57423, 165.093, -18.7193, 0.36 ) }
    apic_24 { pt3dadd( -6.73063, 166.365, -18.8801, 0.36 ) }
    apic_24 { pt3dadd( -6.74701, 166.522, -18.9002, 0.36 ) }
    apic_24 { pt3dadd( -6.87417, 167.651, -19.0644, 0.36 ) }
    apic_24 { pt3dadd( -6.88299, 167.725, -19.0759, 0.36 ) }
    apic_24 { pt3dadd( -7.01993, 169.014, -19.348, 0.36 ) }
    apic_24 { pt3dadd( -7.0458, 169.245, -19.402, 0.36 ) }
    apic_24 { pt3dadd( -7.2032, 170.566, -19.7446, 0.36 ) }
    apic_24 { pt3dadd( -7.27452, 171.358, -19.9839, 0.36 ) }
    apic_24 { pt3dadd( -7.30738, 171.884, -20.1645, 0.36 ) }
    apic_24 { pt3dadd( -7.32333, 172.306, -20.3385, 0.36 ) }
    apic_24 { pt3dadd( -7.33165, 173.03, -20.6862, 0.36 ) }
    apic_24 { pt3dadd( -7.32998, 173.114, -20.7292, 0.36 ) }
    apic_24 { pt3dadd( -7.22199, 174.622, -21.5479, 0.36 ) }
    apic_24 { pt3dadd( -7.19736, 174.94, -21.7404, 0.36 ) }
    apic_24 { pt3dadd( -7.13379, 175.907, -22.3623, 0.36 ) }
    apic_24 { pt3dadd( -7.12359, 176.236, -22.569, 0.36 ) }
    apic_24 { pt3dadd( -7.13455, 176.761, -22.9008, 0.36 ) }
    apic_24 { pt3dadd( -7.18622, 177.316, -23.2379, 0.36 ) }
    apic_24 { pt3dadd( -7.46885, 178.775, -24.1045, 0.36 ) }
    apic_24 { pt3dadd( -7.50208, 178.919, -24.187, 0.36 ) }
    apic_24 { pt3dadd( -7.69282, 179.602, -24.5688, 0.36 ) }
    apic_24 { pt3dadd( -7.7556, 179.875, -24.7087, 0.36 ) }
    apic_24 { pt3dadd( -7.86787, 180.496, -24.9922, 0.36 ) }
    apic_24 { pt3dadd( -7.91081, 180.828, -25.1084, 0.36 ) }
    apic_24 { pt3dadd( -7.97948, 181.644, -25.3121, 0.36 ) }
    apic_24 { pt3dadd( -7.98693, 181.717, -25.33, 0.36 ) }
    apic_24 { pt3dadd( -8.14124, 183.132, -25.6629, 0.36 ) }
    apic_24 { pt3dadd( -8.1909, 183.517, -25.7348, 0.36 ) }
    apic_24 { pt3dadd( -8.38519, 184.778, -25.9192, 0.36 ) }
    apic_24 { pt3dadd( -8.4868, 185.249, -25.9642, 0.36 ) }
    apic_24 { pt3dadd( -8.70845, 186.012, -25.9961, 0.36 ) }
    apic_24 { pt3dadd( -8.76722, 186.178, -25.9941, 0.36 ) }
    apic_24 { pt3dadd( -9.25646, 187.315, -25.9119, 0.36 ) }
    apic_24 { pt3dadd( -9.39175, 187.6, -25.8982, 0.36 ) }
    apic_24 { pt3dadd( -9.7941, 188.413, -25.8749, 0.36 ) }
    apic_24 { pt3dadd( -10.0311, 188.903, -25.87, 0.36 ) }
    apic_24 { pt3dadd( -10.2217, 189.3, -25.8724, 0.36 ) }
    apic_24 { pt3dadd( -10.3781, 189.604, -25.891, 0.36 ) }
    apic_24 { pt3dadd( -11.1004, 190.821, -26.0926, 0.36 ) }
    apic_24 { pt3dadd( -11.278, 191.141, -26.1835, 0.36 ) }
    apic_24 { pt3dadd( -11.642, 191.824, -26.4411, 0.36 ) }
    apic_24 { pt3dadd( -11.7571, 192.051, -26.5373, 0.36 ) }
    apic_24 { pt3dadd( -12.1273, 192.82, -26.8797, 0.36 ) }
    apic_24 { pt3dadd( -12.3869, 193.334, -27.1285, 0.36 ) }
    apic_24 { pt3dadd( -13.0589, 194.643, -27.7939, 0.36 ) }
    apic_24 { pt3dadd( -13.1339, 194.773, -27.8721, 0.36 ) }
    apic_24 { pt3dadd( -13.2604, 195.002, -28.0221, 0.36 ) }
    apic_24 { pt3dadd( -13.2983, 195.075, -28.0694, 0.36 ) }
    apic_24 { pt3dadd( -13.7361, 195.932, -28.6208, 0.36 ) }
    apic_24 { pt3dadd( -14.0588, 196.51, -29.0068, 0.36 ) }
    apic_24 { pt3dadd( -14.2062, 196.744, -29.1723, 0.36 ) }
    apic_24 { pt3dadd( -14.728, 197.616, -29.8039, 0.36 ) }
    apic_24 { pt3dadd( -14.812, 197.771, -29.9232, 0.36 ) }
    apic_24 { pt3dadd( -15.1359, 198.555, -30.5197, 0.36 ) }
    apic_24 { pt3dadd( -15.2866, 199.088, -30.905, 0.36 ) }
    apic_24 { pt3dadd( -15.3967, 199.6, -31.2756, 0.36 ) }
    apic_24 { pt3dadd( -15.4455, 199.841, -31.4501, 0.36 ) }
    apic_24 { pt3dadd( -15.5506, 200.338, -31.8129, 0.36 ) }
    apic_24 { pt3dadd( -15.7189, 201.234, -32.4181, 0.36 ) }
    apic_24 { pt3dadd( -15.7712, 201.517, -32.6021, 0.36 ) }
    apic_24 { pt3dadd( -15.8193, 201.732, -32.7421, 0.36 ) }
    apic_24 { pt3dadd( -15.9521, 202.153, -33.0562, 0.36 ) }
    apic_24 { pt3dadd( -16.161, 202.683, -33.4837, 0.36 ) }
    apic_24 { pt3dadd( -16.2706, 202.929, -33.6962, 0.36 ) }
    apic_24 { pt3dadd( -16.608, 203.756, -34.476, 0.36 ) }
    apic_24 { pt3dadd( -16.8001, 204.32, -35.0556, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_24 { pt3dadd( -16.9782, 204.925, -35.7132, 0.36 ) }
    apic_24 { pt3dadd( -17.0901, 205.336, -36.166, 0.36 ) }
    apic_24 { pt3dadd( -17.1393, 205.517, -36.3709, 0.36 ) }
    apic_24 { pt3dadd( -17.3013, 206.086, -36.9961, 0.36 ) }
    apic_24 { pt3dadd( -17.5807, 206.99, -37.9715, 0.36 ) }
    apic_24 { pt3dadd( -17.643, 207.18, -38.1649, 0.36 ) }
    apic_24 { pt3dadd( -17.9032, 207.951, -38.8883, 0.36 ) }
    apic_24 { pt3dadd( -17.9899, 208.137, -39.0721, 0.36 ) }
    apic_24 { pt3dadd( -18.2629, 208.569, -39.5324, 0.36 ) }
    apic_24 { pt3dadd( -18.4159, 208.727, -39.7241, 0.36 ) }
    apic_24 { pt3dadd( -18.6575, 208.933, -39.9919, 0.36 ) }
    apic_24 { pt3dadd( -18.7055, 208.964, -40.0412, 0.36 ) }
    apic_24 { pt3dadd( -19.7865, 209.512, -41.1066, 0.36 ) }
    apic_24 { pt3dadd( -20.0292, 209.63, -41.341, 0.36 ) }
    apic_24 { pt3dadd( -21.3504, 210.29, -42.6467, 0.36 ) }
    apic_24 { pt3dadd( -21.4248, 210.331, -42.7213, 0.36 ) }
    apic_24 { pt3dadd( -22.261, 210.833, -43.5865, 0.36 ) }
    apic_24 { pt3dadd( -22.3056, 210.867, -43.6367, 0.36 ) }
    apic_24 { pt3dadd( -22.6584, 211.249, -44.0905, 0.36 ) }
    apic_24 { pt3dadd( -22.9163, 211.631, -44.5294, 0.36 ) }
    apic_24 { pt3dadd( -23.1044, 212.101, -45.0683, 0.36 ) }
    apic_24 { pt3dadd( -23.1667, 212.32, -45.3337, 0.36 ) }
    apic_24 { pt3dadd( -23.2793, 212.967, -46.1672, 0.36 ) }
    apic_24 { pt3dadd( -23.3198, 213.069, -46.3578, 0.36 ) }
    apic_24 { pt3dadd( -23.503, 213.337, -47.0747, 0.36 ) }
    apic_24 { pt3dadd( -23.5922, 213.412, -47.3576, 0.36 ) }
    apic_24 { pt3dadd( -23.7183, 213.48, -47.7149, 0.36 ) }
    apic_24 { pt3dadd( -23.9109, 213.581, -48.1876, 0.36 ) }
    apic_24 { pt3dadd( -24.6717, 213.977, -49.8483, 0.36 ) }
    apic_24 { pt3dadd( -24.7166, 214.01, -49.9394, 0.36 ) }
    apic_24 { pt3dadd( -25.0796, 214.358, -50.6129, 0.36 ) }
    apic_24 { pt3dadd( -25.3051, 214.663, -51.0475, 0.36 ) }
    apic_24 { pt3dadd( -25.6818, 215.411, -51.8493, 0.36 ) }
    apic_24 { pt3dadd( -25.7077, 215.539, -51.9452, 0.36 ) }
    apic_24 { pt3dadd( -25.6994, 216.389, -52.3918, 0.36 ) }
    apic_24 { pt3dadd( -25.6576, 216.728, -52.5625, 0.36 ) }
    apic_24 { pt3dadd( -25.5095, 217.347, -52.8664, 0.36 ) }
    apic_24 { pt3dadd( -25.4795, 217.485, -52.9592, 0.36 ) }
    apic_24 { pt3dadd( -25.5066, 217.846, -53.4876, 0.36 ) }
    apic_24 { pt3dadd( -25.5273, 217.888, -53.5836, 0.36 ) }
    apic_24 { pt3dadd( -25.709, 218.081, -54.1443, 0.36 ) }
    apic_24 { pt3dadd( -25.8199, 218.167, -54.4246, 0.36 ) }
    apic_24 { pt3dadd( -26.5775, 218.569, -56.0151, 0.36 ) }
    apic_24 { pt3dadd( -27.5056, 218.963, -57.7905, 0.36 ) }
    apic_24 { pt3dadd( -27.5537, 218.98, -57.8769, 0.36 ) }
    apic_24 { pt3dadd( -27.8664, 219.082, -58.4147, 0.36 ) }
    apic_24 { pt3dadd( -27.922, 219.099, -58.5041, 0.36 ) }
    apic_24 { pt3dadd( -28.7634, 219.356, -59.8356, 0.36 ) }
    apic_24 { pt3dadd( -28.9078, 219.402, -60.0566, 0.36 ) }
    apic_24 { pt3dadd( -29.0567, 219.454, -60.2784, 0.36 ) }
    apic_24 { pt3dadd( -29.4227, 219.591, -60.8389, 0.36 ) }
    apic_24 { pt3dadd( -30.4008, 219.964, -62.3798, 0.36 ) }
    apic_24 { pt3dadd( -30.766, 220.152, -62.9875, 0.36 ) }
    apic_24 { pt3dadd( -31.3511, 220.581, -64.0472, 0.36 ) }
    apic_24 { pt3dadd( -31.3929, 220.628, -64.1331, 0.36 ) }
    apic_24 { pt3dadd( -31.5839, 220.966, -64.5983, 0.36 ) }
    apic_24 { pt3dadd( -31.6029, 221.051, -64.6604, 0.36 ) }
    apic_24 { pt3dadd( -31.6715, 222.036, -65.0537, 0.36 ) }
    apic_24 { pt3dadd( -31.7025, 222.5, -65.1864, 0.36 ) }
    apic_24 { pt3dadd( -31.8063, 223.712, -65.4496, 0.36 ) }
    apic_24 { pt3dadd( -31.8401, 223.932, -65.4932, 0.36 ) }
    apic_24 { pt3dadd( -32.2898, 225.723, -65.8235, 0.36 ) }
    apic_24 { pt3dadd( -32.3412, 225.869, -65.8478, 0.36 ) }
    apic_24 { pt3dadd( -32.6284, 226.462, -65.9232, 0.36 ) }
    apic_24 { pt3dadd( -32.8012, 226.707, -65.97, 0.36 ) }
    apic_24 { pt3dadd( -33.1134, 227.032, -66.0638, 0.36 ) }
    apic_24 { pt3dadd( -33.4481, 227.333, -66.1817, 0.36 ) }
    apic_24 { pt3dadd( -33.7871, 227.618, -66.3184, 0.36 ) }
    apic_24 { pt3dadd( -33.864, 227.686, -66.3492, 0.36 ) }
    apic_24 { pt3dadd( -35.0066, 228.673, -66.7795, 0.36 ) }
    apic_24 { pt3dadd( -35.1025, 228.755, -66.8149, 0.36 ) }
    apic_24 { pt3dadd( -35.7986, 229.328, -67.0778, 0.36 ) }
    apic_24 { pt3dadd( -37.1969, 230.434, -67.6139, 0.36 ) }
    apic_24 { pt3dadd( -37.3929, 230.581, -67.6915, 0.36 ) }
    apic_24 { pt3dadd( -38.1773, 231.146, -68.0087, 0.36 ) }
    apic_24 { pt3dadd( -38.3618, 231.27, -68.0957, 0.36 ) }
    apic_24 { pt3dadd( -38.7432, 231.51, -68.311, 0.36 ) }
    apic_24 { pt3dadd( -39.208, 231.783, -68.6409, 0.36 ) }
    apic_24 { pt3dadd( -39.5561, 231.98, -68.9505, 0.36 ) }
    apic_24 { pt3dadd( -39.6194, 232.034, -69.0176, 0.36 ) }
    apic_24 { pt3dadd( -40.3203, 232.902, -69.9579, 0.36 ) }
    apic_24 { pt3dadd( -40.4387, 233.151, -70.1521, 0.36 ) }
    apic_24 { pt3dadd( -40.5645, 233.572, -70.4103, 0.36 ) }
    apic_24 { pt3dadd( -40.5784, 233.639, -70.4426, 0.36 ) }
    apic_24 { pt3dadd( -40.8306, 235.061, -71.0386, 0.36 ) }
    apic_24 { pt3dadd( -40.8547, 235.219, -71.0927, 0.36 ) }
    apic_24 { pt3dadd( -41.0146, 236.542, -71.4662, 0.36 ) }
    apic_24 { pt3dadd( -41.0627, 236.911, -71.5693, 0.36 ) }
    apic_24 { pt3dadd( -41.26, 238.324, -71.9661, 0.36 ) }
    apic_24 { pt3dadd( -41.291, 238.539, -72.0285, 0.36 ) }
    apic_24 { pt3dadd( -41.5777, 240.475, -72.5937, 0.36 ) }
    apic_24 { pt3dadd( -41.6308, 240.802, -72.7123, 0.36 ) }
    apic_24 { pt3dadd( -41.7821, 241.807, -73.1241, 0.36 ) }
    apic_24 { pt3dadd( -41.7912, 241.876, -73.1528, 0.36 ) }
    apic_24 { pt3dadd( -41.8544, 242.441, -73.3975, 0.36 ) }
    apic_24 { pt3dadd( -41.944, 243.267, -73.7737, 0.36 ) }
    apic_24 { pt3dadd( -42.2043, 245.44, -74.922, 0.36 ) }
    apic_24 { pt3dadd( -42.3207, 246.396, -75.4516, 0.36 ) }
    // Section: apic_22, id: apic_22, parent: apic_2 (entry count 98/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 5.17235, 148.137, -10.4191, 0.84 ) }
    apic_22 { pt3dadd( 6.71727, 149.216, -10.1683, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_22 { pt3dadd( 6.87311, 149.333, -10.1279, 0.48 ) }
    apic_22 { pt3dadd( 7.97675, 150.219, -9.79175, 0.48 ) }
    apic_22 { pt3dadd( 9.61506, 151.542, -9.16041, 0.48 ) }
    apic_22 { pt3dadd( 11.9899, 153.252, -8.11402, 0.48 ) }
    apic_22 { pt3dadd( 13.0885, 153.988, -7.58319, 0.48 ) }
    apic_22 { pt3dadd( 13.4633, 154.242, -7.35479, 0.48 ) }
    apic_22 { pt3dadd( 14.201, 154.744, -6.84924, 0.48 ) }
    apic_22 { pt3dadd( 14.9641, 155.275, -6.22443, 0.48 ) }
    apic_22 { pt3dadd( 16.0878, 156.047, -5.24107, 0.48 ) }
    apic_22 { pt3dadd( 16.3947, 156.243, -5.02807, 0.48 ) }
    apic_22 { pt3dadd( 17.5917, 156.932, -4.22059, 0.48 ) }
    apic_22 { pt3dadd( 18.0907, 157.204, -3.91741, 0.48 ) }
    apic_22 { pt3dadd( 19.371, 157.897, -3.20345, 0.48 ) }
    apic_22 { pt3dadd( 20.1898, 158.449, -2.80621, 0.48 ) }
    apic_22 { pt3dadd( 21.1366, 159.195, -2.3848, 0.48 ) }
    apic_22 { pt3dadd( 21.7076, 159.658, -2.18084, 0.48 ) }
    apic_22 { pt3dadd( 22.5198, 160.318, -1.95144, 0.48 ) }
    apic_22 { pt3dadd( 23.007, 160.726, -1.86446, 0.48 ) }
    apic_22 { pt3dadd( 24.9956, 162.454, -1.73267, 0.48 ) }
    apic_22 { pt3dadd( 25.433, 162.852, -1.70462, 0.48 ) }
    apic_22 { pt3dadd( 27.3196, 164.629, -1.55171, 0.48 ) }
    apic_22 { pt3dadd( 27.9112, 165.192, -1.47906, 0.48 ) }
    apic_22 { pt3dadd( 29.377, 166.54, -1.27837, 0.48 ) }
    apic_22 { pt3dadd( 30.0613, 167.098, -1.1921, 0.48 ) }
    apic_22 { pt3dadd( 32.1656, 168.599, -0.863517, 0.48 ) }
    apic_22 { pt3dadd( 32.3152, 168.707, -0.830427, 0.48 ) }
    apic_22 { pt3dadd( 33.8802, 169.833, -0.351095, 0.48 ) }
    apic_22 { pt3dadd( 35.1395, 170.792, 0.0625715, 0.48 ) }
    apic_22 { pt3dadd( 36.5367, 171.895, 0.549697, 0.48 ) }
    apic_22 { pt3dadd( 37.258, 172.438, 0.741904, 0.48 ) }
    apic_22 { pt3dadd( 38.7242, 173.514, 1.00041, 0.48 ) }
    apic_22 { pt3dadd( 38.9551, 173.686, 1.0275, 0.48 ) }
    apic_22 { pt3dadd( 42.141, 176.102, 1.24699, 0.48 ) }
    apic_22 { pt3dadd( 42.2972, 176.225, 1.25352, 0.48 ) }
    apic_22 { pt3dadd( 45.3816, 178.708, 1.26998, 0.48 ) }
    apic_22 { pt3dadd( 45.8612, 179.063, 1.27651, 0.48 ) }
    apic_22 { pt3dadd( 48.2456, 180.691, 1.3404, 0.48 ) }
    apic_22 { pt3dadd( 48.5751, 180.913, 1.36216, 0.48 ) }
    apic_22 { pt3dadd( 49.2095, 181.329, 1.4442, 0.48 ) }
    apic_22 { pt3dadd( 49.322, 181.41, 1.46879, 0.48 ) }
    apic_22 { pt3dadd( 51.7019, 183.342, 2.2773, 0.48 ) }
    apic_22 { pt3dadd( 52.0586, 183.674, 2.41802, 0.48 ) }
    apic_22 { pt3dadd( 53.1462, 184.814, 2.90768, 0.48 ) }
    apic_22 { pt3dadd( 53.3524, 185.045, 2.99546, 0.48 ) }
    apic_22 { pt3dadd( 55.4946, 187.575, 3.84353, 0.48 ) }
    apic_22 { pt3dadd( 55.8168, 187.961, 3.94942, 0.48 ) }
    apic_22 { pt3dadd( 57.4332, 189.973, 4.34436, 0.48 ) }
    apic_22 { pt3dadd( 57.894, 190.525, 4.46254, 0.48 ) }
    apic_22 { pt3dadd( 58.9841, 191.818, 4.75278, 0.48 ) }
    apic_22 { pt3dadd( 59.2531, 192.163, 4.83162, 0.48 ) }
    apic_22 { pt3dadd( 59.9823, 193.211, 5.07899, 0.48 ) }
    apic_22 { pt3dadd( 60.1588, 193.464, 5.14341, 0.48 ) }
    apic_22 { pt3dadd( 61.3085, 195.084, 5.60512, 0.48 ) }
    apic_22 { pt3dadd( 61.8821, 195.853, 5.84302, 0.48 ) }
    apic_22 { pt3dadd( 62.6931, 196.937, 6.20551, 0.48 ) }
    apic_22 { pt3dadd( 63.2162, 197.586, 6.35022, 0.48 ) }
    apic_22 { pt3dadd( 64.4365, 198.973, 6.47566, 0.48 ) }
    apic_22 { pt3dadd( 64.6241, 199.141, 6.45174, 0.48 ) }
    apic_22 { pt3dadd( 65.9937, 200.072, 6.00648, 0.48 ) }
    apic_22 { pt3dadd( 66.1544, 200.167, 5.9366, 0.48 ) }
    apic_22 { pt3dadd( 68.2993, 201.354, 4.72853, 0.48 ) }
    apic_22 { pt3dadd( 68.6153, 201.54, 4.52116, 0.48 ) }
    apic_22 { pt3dadd( 69.7058, 202.265, 3.74129, 0.48 ) }
    apic_22 { pt3dadd( 70.1849, 202.649, 3.41501, 0.48 ) }
    apic_22 { pt3dadd( 71.1252, 203.516, 2.80363, 0.48 ) }
    apic_22 { pt3dadd( 71.9935, 204.318, 2.32851, 0.48 ) }
    apic_22 { pt3dadd( 73.0109, 205.275, 1.8706, 0.48 ) }
    apic_22 { pt3dadd( 73.7869, 205.968, 1.52224, 0.48 ) }
    apic_22 { pt3dadd( 75.4361, 207.409, 0.765931, 0.48 ) }
    apic_22 { pt3dadd( 75.5771, 207.535, 0.702853, 0.48 ) }
    apic_22 { pt3dadd( 76.734, 208.572, 0.286778, 0.48 ) }
    apic_22 { pt3dadd( 77.0265, 208.831, 0.213623, 0.48 ) }
    apic_22 { pt3dadd( 78.7492, 210.269, -0.077889, 0.48 ) }
    apic_22 { pt3dadd( 79.3098, 210.679, -0.190348, 0.48 ) }
    apic_22 { pt3dadd( 80.6747, 211.564, -0.522522, 0.48 ) }
    apic_22 { pt3dadd( 81.8927, 212.31, -0.871249, 0.48 ) }
    apic_22 { pt3dadd( 82.6061, 212.733, -1.09304, 0.48 ) }
    apic_22 { pt3dadd( 83.3233, 213.122, -1.31395, 0.48 ) }
    apic_22 { pt3dadd( 85.3336, 214.121, -1.96822, 0.48 ) }
    apic_22 { pt3dadd( 85.6654, 214.286, -2.111, 0.48 ) }
    apic_22 { pt3dadd( 87.0235, 214.984, -2.80518, 0.48 ) }
    apic_22 { pt3dadd( 87.2661, 215.127, -2.9451, 0.48 ) }
    apic_22 { pt3dadd( 89.7159, 216.759, -4.38873, 0.48 ) }
    apic_22 { pt3dadd( 89.7945, 216.815, -4.42991, 0.48 ) }
    apic_22 { pt3dadd( 91.5472, 218.145, -5.16044, 0.48 ) }
    apic_22 { pt3dadd( 91.8941, 218.396, -5.28097, 0.48 ) }
    apic_22 { pt3dadd( 92.527, 218.841, -5.46729, 0.48 ) }
    apic_22 { pt3dadd( 93.8498, 219.729, -5.79573, 0.48 ) }
    apic_22 { pt3dadd( 95.4163, 220.786, -6.06341, 0.48 ) }
    apic_22 { pt3dadd( 95.9665, 221.16, -6.10007, 0.48 ) }
    apic_22 { pt3dadd( 96.9971, 221.904, -6.0262, 0.48 ) }
    apic_22 { pt3dadd( 97.7003, 222.475, -5.95163, 0.48 ) }
    apic_22 { pt3dadd( 97.8031, 222.568, -5.92908, 0.48 ) }
    apic_22 { pt3dadd( 98.8233, 223.631, -5.5647, 0.48 ) }
    apic_22 { pt3dadd( 99.5641, 224.405, -5.24412, 0.48 ) }
    apic_22 { pt3dadd( 100.495, 225.356, -4.84851, 0.48 ) }
    apic_22 { pt3dadd( 100.857, 225.683, -4.70727, 0.48 ) }
    apic_22 { pt3dadd( 102.166, 226.738, -4.20551, 0.48 ) }
    apic_22 { pt3dadd( 102.395, 226.901, -4.12637, 0.48 ) }
    apic_22 { pt3dadd( 104.801, 228.471, -3.30725, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_22 { pt3dadd( 105.053, 228.638, -3.21994, 0.48 ) }
    apic_22 { pt3dadd( 107.496, 230.264, -2.39881, 0.48 ) }
    apic_22 { pt3dadd( 107.656, 230.371, -2.34966, 0.48 ) }
    apic_22 { pt3dadd( 110.765, 232.503, -1.50248, 0.48 ) }
    apic_22 { pt3dadd( 111.546, 233.076, -1.27758, 0.48 ) }
    apic_22 { pt3dadd( 113.386, 234.524, -0.708303, 0.48 ) }
    apic_22 { pt3dadd( 114.295, 235.35, -0.378636, 0.48 ) }
    apic_22 { pt3dadd( 115.446, 236.576, 0.122497, 0.48 ) }
    apic_22 { pt3dadd( 115.564, 236.725, 0.180855, 0.48 ) }
    apic_22 { pt3dadd( 117.273, 239.358, 1.20179, 0.48 ) }
    apic_22 { pt3dadd( 117.527, 239.811, 1.36659, 0.48 ) }
    apic_22 { pt3dadd( 118.813, 242.455, 2.30061, 0.48 ) }
    apic_22 { pt3dadd( 119.05, 243.012, 2.50068, 0.48 ) }
    apic_22 { pt3dadd( 119.818, 245.109, 3.26774, 0.48 ) }
    apic_22 { pt3dadd( 119.964, 245.558, 3.42992, 0.48 ) }
    apic_22 { pt3dadd( 120.561, 247.785, 4.19965, 0.48 ) }
    apic_22 { pt3dadd( 120.78, 248.795, 4.54526, 0.48 ) }
    apic_22 { pt3dadd( 120.95, 249.831, 4.90353, 0.48 ) }
    apic_22 { pt3dadd( 121.078, 250.771, 5.22773, 0.48 ) }
    apic_22 { pt3dadd( 121.171, 251.79, 5.59665, 0.48 ) }
    apic_22 { pt3dadd( 121.188, 252.35, 5.7903, 0.48 ) }
    apic_22 { pt3dadd( 121.02, 253.555, 6.24003, 0.48 ) }
    apic_22 { pt3dadd( 120.998, 253.641, 6.26875, 0.48 ) }
    apic_22 { pt3dadd( 119.329, 264.808, 9.27466, 0.48 ) }
    apic_22 { pt3dadd( 119.537, 276.462, 10.08, 0.48 ) }
    apic_22 { pt3dadd( 121.361, 288.0, 10.3377, 0.48 ) }
    apic_22 { pt3dadd( 122.003, 299.653, 9.77834, 0.48 ) }
    apic_22 { pt3dadd( 121.164, 311.209, 8.26976, 0.48 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 28/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 5.17235, 148.137, -10.4191, 0.84 ) }
    apic_3 { pt3dadd( 4.8235, 150.305, -10.5779, 0.84 ) }
    apic_3 { pt3dadd( 4.48165, 152.442, -10.673, 0.84 ) }
    apic_3 { pt3dadd( 4.45353, 152.619, -10.6788, 0.84 ) }
    apic_3 { pt3dadd( 3.99381, 155.109, -10.7373, 0.84 ) }
    apic_3 { pt3dadd( 3.21187, 158.958, -10.8064, 0.84 ) }
    apic_3 { pt3dadd( 3.08644, 159.527, -10.8143, 0.84 ) }
    apic_3 { pt3dadd( 2.60248, 162.078, -10.8239, 0.84 ) }
    apic_3 { pt3dadd( 2.58256, 162.203, -10.8239, 0.84 ) }
    apic_3 { pt3dadd( 2.29685, 164.462, -10.8082, 0.84 ) }
    apic_3 { pt3dadd( 2.21556, 165.258, -10.7933, 0.84 ) }
    apic_3 { pt3dadd( 2.1308, 166.579, -10.755, 0.84 ) }
    apic_3 { pt3dadd( 2.10013, 168.863, -10.7389, 0.84 ) }
    apic_3 { pt3dadd( 2.10934, 169.146, -10.7422, 0.84 ) }
    apic_3 { pt3dadd( 2.22425, 171.475, -10.7767, 0.84 ) }
    apic_3 { pt3dadd( 2.23255, 171.602, -10.7768, 0.84 ) }
    apic_3 { pt3dadd( 2.32635, 173.385, -10.7494, 0.84 ) }
    apic_3 { pt3dadd( 2.32783, 173.511, -10.7495, 0.84 ) }
    apic_3 { pt3dadd( 2.17767, 177.453, -10.8008, 0.84 ) }
    apic_3 { pt3dadd( 2.16428, 177.723, -10.8081, 0.84 ) }
    apic_3 { pt3dadd( 2.0303, 179.816, -10.8887, 0.84 ) }
    apic_3 { pt3dadd( 2.0128, 180.125, -10.9033, 0.84 ) }
    apic_3 { pt3dadd( 1.86251, 184.033, -11.2399, 0.84 ) }
    apic_3 { pt3dadd( 1.8608, 184.116, -11.2497, 0.84 ) }
    apic_3 { pt3dadd( 1.84283, 186.538, -11.6147, 0.84 ) }
    apic_3 { pt3dadd( 1.8414, 186.663, -11.6361, 0.84 ) }
    apic_3 { pt3dadd( 1.78337, 188.539, -12.0087, 0.84 ) }
    apic_3 { pt3dadd( 1.67731, 190.476, -12.3952, 0.84 ) }
    apic_3 { pt3dadd( 1.66602, 190.6, -12.416, 0.84 ) }
    apic_3 { pt3dadd( 1.38955, 192.987, -12.7715, 0.84 ) }
    apic_3 { pt3dadd( 1.31656, 193.5, -12.833, 0.84 ) }
    apic_3 { pt3dadd( 1.11116, 194.986, -12.9896, 0.84 ) }
    apic_3 { pt3dadd( 1.08642, 195.162, -13.0059, 0.84 ) }
    apic_3 { pt3dadd( 0.599757, 198.55, -13.248, 0.84 ) }
    apic_3 { pt3dadd( 0.558537, 198.839, -13.2728, 0.84 ) }
    apic_3 { pt3dadd( 0.198898, 201.471, -13.5082, 0.84 ) }
    apic_3 { pt3dadd( -0.532422, 207.07, -14.0242, 0.84 ) }
    apic_3 { pt3dadd( -0.562392, 207.32, -14.0482, 0.84 ) }
    apic_3 { pt3dadd( -0.973222, 210.846, -14.4882, 0.84 ) }
    apic_3 { pt3dadd( -1.47446, 215.824, -15.2837, 0.84 ) }
    apic_3 { pt3dadd( -1.79437, 219.426, -15.9651, 0.84 ) }
    apic_3 { pt3dadd( -1.81655, 219.751, -16.0427, 0.84 ) }
    apic_3 { pt3dadd( -1.89178, 221.167, -16.4449, 0.84 ) }
    apic_3 { pt3dadd( -2.00773, 223.889, -17.2525, 0.84 ) }
    apic_3 { pt3dadd( -2.04765, 225.935, -17.924, 0.84 ) }
    apic_3 { pt3dadd( -2.04453, 226.212, -18.0143, 0.84 ) }
    apic_3 { pt3dadd( -1.98765, 228.961, -18.9248, 0.84 ) }
    apic_3 { pt3dadd( -1.94269, 230.907, -19.4233, 0.84 ) }
    apic_3 { pt3dadd( -1.89522, 232.904, -19.7073, 0.84 ) }
    apic_3 { pt3dadd( -1.89089, 233.056, -19.713, 0.84 ) }
    apic_3 { pt3dadd( -1.83305, 235.105, -19.6602, 0.84 ) }
    apic_3 { pt3dadd( -1.66101, 238.575, -19.4289, 0.84 ) }
    apic_3 { pt3dadd( -1.43842, 241.123, -19.0819, 0.84 ) }
    apic_3 { pt3dadd( -1.07109, 243.934, -18.633, 0.84 ) }
    apic_3 { pt3dadd( -0.974632, 244.614, -18.5222, 0.84 ) }
    apic_3 { pt3dadd( -0.718722, 246.418, -18.1767, 0.84 ) }
    apic_3 { pt3dadd( -0.671482, 246.755, -18.089, 0.84 ) }
    apic_3 { pt3dadd( -0.226672, 249.517, -17.0305, 0.84 ) }
    apic_3 { pt3dadd( 0.0323418, 250.839, -16.5686, 0.84 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 87/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -24.0644, 11.7113, -44.2068, 0.36 ) }
    dend_53 { pt3dadd( -25.4155, 10.0697, -46.0767, 0.48 ) }
    dend_53 { pt3dadd( -26.3847, 8.90017, -47.3031, 0.48 ) }
    dend_53 { pt3dadd( -26.6462, 8.57871, -47.5914, 0.48 ) }
    dend_53 { pt3dadd( -27.3048, 7.7605, -48.3135, 0.48 ) }
    dend_53 { pt3dadd( -27.5001, 7.48894, -48.5508, 0.48 ) }
    dend_53 { pt3dadd( -28.5008, 6.01925, -49.8359, 0.48 ) }
    dend_53 { pt3dadd( -28.7156, 5.69146, -50.1214, 0.48 ) }
    dend_53 { pt3dadd( -29.3985, 4.58552, -51.1491, 0.48 ) }
    dend_53 { pt3dadd( -29.7553, 4.00493, -51.6973, 0.48 ) }
    dend_53 { pt3dadd( -30.8359, 2.1737, -53.4991, 0.48 ) }
    dend_53 { pt3dadd( -30.865, 2.12222, -53.5524, 0.48 ) }
    dend_53 { pt3dadd( -31.6607, 0.648333, -55.2275, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_53 { pt3dadd( -31.8212, 0.349882, -55.5865, 0.48 ) }
    dend_53 { pt3dadd( -32.1883, -0.330035, -56.3259, 0.48 ) }
    dend_53 { pt3dadd( -32.3018, -0.535585, -56.5224, 0.48 ) }
    dend_53 { pt3dadd( -32.74, -1.3069, -57.1945, 0.48 ) }
    dend_53 { pt3dadd( -33.7477, -3.13302, -58.6927, 0.48 ) }
    dend_53 { pt3dadd( -33.8497, -3.33496, -58.844, 0.48 ) }
    dend_53 { pt3dadd( -35.366, -6.47118, -61.205, 0.48 ) }
    dend_53 { pt3dadd( -35.4359, -6.6165, -61.3274, 0.48 ) }
    dend_53 { pt3dadd( -36.0138, -7.81152, -62.4129, 0.48 ) }
    dend_53 { pt3dadd( -36.0715, -7.938, -62.5303, 0.48 ) }
    dend_53 { pt3dadd( -36.3032, -8.50883, -63.1001, 0.48 ) }
    dend_53 { pt3dadd( -36.368, -8.69776, -63.3023, 0.48 ) }
    dend_53 { pt3dadd( -36.7893, -10.4719, -65.635, 0.48 ) }
    dend_53 { pt3dadd( -36.8516, -10.7755, -66.0092, 0.48 ) }
    dend_53 { pt3dadd( -37.012, -11.5141, -66.9853, 0.48 ) }
    dend_53 { pt3dadd( -37.1315, -11.8697, -67.4072, 0.48 ) }
    dend_53 { pt3dadd( -37.5166, -12.8005, -68.4641, 0.48 ) }
    dend_53 { pt3dadd( -37.7907, -13.4234, -69.1322, 0.48 ) }
    dend_53 { pt3dadd( -38.4856, -14.948, -70.6271, 0.48 ) }
    dend_53 { pt3dadd( -39.5965, -17.3274, -72.8878, 0.48 ) }
    dend_53 { pt3dadd( -40.5901, -19.4714, -74.8719, 0.48 ) }
    dend_53 { pt3dadd( -41.3315, -21.2212, -76.1982, 0.48 ) }
    dend_53 { pt3dadd( -41.4457, -21.5059, -76.3791, 0.48 ) }
    dend_53 { pt3dadd( -41.9224, -22.7837, -77.0086, 0.48 ) }
    dend_53 { pt3dadd( -42.2325, -23.6695, -77.3536, 0.48 ) }
    dend_53 { pt3dadd( -42.8119, -25.4412, -77.8975, 0.48 ) }
    dend_53 { pt3dadd( -44.3055, -30.2356, -79.3406, 0.48 ) }
    dend_53 { pt3dadd( -44.4869, -30.7653, -79.4956, 0.48 ) }
    dend_53 { pt3dadd( -45.6182, -33.7841, -80.431, 0.48 ) }
    dend_53 { pt3dadd( -45.7303, -34.0533, -80.5242, 0.48 ) }
    dend_53 { pt3dadd( -46.3607, -35.4135, -81.0918, 0.48 ) }
    dend_53 { pt3dadd( -46.7169, -36.1426, -81.4999, 0.48 ) }
    dend_53 { pt3dadd( -47.2166, -37.1364, -82.3242, 0.48 ) }
    dend_53 { pt3dadd( -47.2789, -37.2784, -82.4544, 0.48 ) }
    dend_53 { pt3dadd( -47.9593, -39.0992, -84.3132, 0.48 ) }
    dend_53 { pt3dadd( -48.2276, -40.0183, -85.3186, 0.48 ) }
    dend_53 { pt3dadd( -48.5487, -41.512, -87.0049, 0.48 ) }
    dend_53 { pt3dadd( -48.6312, -41.9682, -87.5057, 0.48 ) }
    dend_53 { pt3dadd( -48.8147, -43.136, -88.7533, 0.48 ) }
    dend_53 { pt3dadd( -48.832, -43.2323, -88.8491, 0.48 ) }
    dend_53 { pt3dadd( -49.4573, -46.3148, -91.7153, 0.48 ) }
    dend_53 { pt3dadd( -49.5506, -46.6685, -91.976, 0.48 ) }
    dend_53 { pt3dadd( -49.9268, -48.045, -92.854, 0.48 ) }
    dend_53 { pt3dadd( -50.063, -48.6301, -93.2021, 0.48 ) }
    dend_53 { pt3dadd( -50.3984, -50.3224, -94.1683, 0.48 ) }
    dend_53 { pt3dadd( -50.4261, -50.4868, -94.252, 0.48 ) }
    dend_53 { pt3dadd( -51.0907, -53.4359, -95.7223, 0.48 ) }
    dend_53 { pt3dadd( -51.3695, -54.5124, -96.3199, 0.48 ) }
    dend_53 { pt3dadd( -52.0415, -57.0212, -97.8367, 0.48 ) }
    dend_53 { pt3dadd( -52.2327, -57.7152, -98.2809, 0.48 ) }
    dend_53 { pt3dadd( -52.7063, -59.3884, -99.4795, 0.48 ) }
    dend_53 { pt3dadd( -53.6967, -62.7397, -102.234, 0.48 ) }
    dend_53 { pt3dadd( -53.8153, -63.0678, -102.555, 0.48 ) }
    dend_53 { pt3dadd( -54.2031, -63.9318, -103.468, 0.48 ) }
    dend_53 { pt3dadd( -54.3886, -64.2509, -103.873, 0.48 ) }
    dend_53 { pt3dadd( -55.1731, -65.421, -105.644, 0.48 ) }
    dend_53 { pt3dadd( -55.8133, -66.264, -107.127, 0.48 ) }
    dend_53 { pt3dadd( -56.6576, -67.3718, -109.173, 0.48 ) }
    dend_53 { pt3dadd( -56.7575, -67.4909, -109.399, 0.48 ) }
    dend_53 { pt3dadd( -57.8841, -68.707, -111.823, 0.48 ) }
    dend_53 { pt3dadd( -58.2224, -69.0526, -112.525, 0.48 ) }
    dend_53 { pt3dadd( -59.6435, -70.4616, -115.341, 0.48 ) }
    dend_53 { pt3dadd( -59.7739, -70.618, -115.583, 0.48 ) }
    dend_53 { pt3dadd( -60.6721, -71.8901, -117.293, 0.48 ) }
    dend_53 { pt3dadd( -61.3514, -73.0316, -118.589, 0.48 ) }
    dend_53 { pt3dadd( -61.5674, -73.4565, -119.002, 0.48 ) }
    dend_53 { pt3dadd( -61.5976, -73.521, -119.059, 0.48 ) }
    dend_53 { pt3dadd( -63.2181, -77.3104, -122.149, 0.48 ) }
    dend_53 { pt3dadd( -63.3852, -77.7258, -122.45, 0.48 ) }
    dend_53 { pt3dadd( -64.4164, -80.4953, -124.173, 0.48 ) }
    dend_53 { pt3dadd( -64.5894, -80.9837, -124.453, 0.48 ) }
    dend_53 { pt3dadd( -65.1126, -82.3806, -125.248, 0.48 ) }
    dend_53 { pt3dadd( -65.1658, -82.5141, -125.328, 0.48 ) }
    dend_53 { pt3dadd( -66.038, -84.3575, -126.515, 0.48 ) }
    dend_53 { pt3dadd( -67.2407, -86.586, -127.914, 0.48 ) }
    dend_53 { pt3dadd( -67.2871, -86.653, -127.954, 0.48 ) }
    dend_53 { pt3dadd( -68.8788, -88.5854, -129.118, 0.48 ) }
    dend_53 { pt3dadd( -69.3522, -89.0599, -129.406, 0.48 ) }
    dend_53 { pt3dadd( -71.0066, -90.5714, -130.357, 0.48 ) }
    dend_53 { pt3dadd( -71.2219, -90.735, -130.468, 0.48 ) }
    dend_53 { pt3dadd( -73.3181, -92.0732, -131.343, 0.48 ) }
    dend_53 { pt3dadd( -73.8871, -92.419, -131.553, 0.48 ) }
    dend_53 { pt3dadd( -75.0938, -93.0568, -131.863, 0.48 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 83/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -24.0644, 11.7113, -44.2068, 0.36 ) }
    dend_52 { pt3dadd( -25.0214, 12.437, -45.3282, 0.36 ) }
    dend_52 { pt3dadd( -25.1718, 12.5637, -45.5723, 0.36 ) }
    dend_52 { pt3dadd( -25.9784, 13.2573, -46.9834, 0.36 ) }
    dend_52 { pt3dadd( -26.1787, 13.4278, -47.3298, 0.36 ) }
    dend_52 { pt3dadd( -26.66, 13.8297, -48.164, 0.36 ) }
    dend_52 { pt3dadd( -26.7732, 13.9247, -48.3592, 0.36 ) }
    dend_52 { pt3dadd( -27.7078, 14.7701, -50.1567, 0.36 ) }
    dend_52 { pt3dadd( -27.876, 14.94, -50.4681, 0.36 ) }
    dend_52 { pt3dadd( -28.3529, 15.4935, -51.3564, 0.36 ) }
    dend_52 { pt3dadd( -28.4845, 15.6782, -51.6274, 0.36 ) }
    dend_52 { pt3dadd( -28.8058, 16.273, -52.5017, 0.36 ) }
    dend_52 { pt3dadd( -28.882, 16.5037, -52.8596, 0.36 ) }
    dend_52 { pt3dadd( -29.0118, 17.1255, -53.6006, 0.36 ) }
    dend_52 { pt3dadd( -29.0464, 17.4838, -53.9272, 0.36 ) }
    dend_52 { pt3dadd( -29.0672, 18.4616, -54.6878, 0.36 ) }
    dend_52 { pt3dadd( -29.0538, 19.4717, -55.3765, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_52 { pt3dadd( -28.9704, 21.4727, -56.6401, 0.36 ) }
    dend_52 { pt3dadd( -28.8352, 24.1079, -57.8873, 0.36 ) }
    dend_52 { pt3dadd( -28.7412, 25.9375, -58.4855, 0.36 ) }
    dend_52 { pt3dadd( -28.7116, 26.9953, -58.6373, 0.36 ) }
    dend_52 { pt3dadd( -28.7046, 28.2455, -58.6287, 0.36 ) }
    dend_52 { pt3dadd( -28.7093, 28.4475, -58.5999, 0.36 ) }
    dend_52 { pt3dadd( -28.7928, 31.1008, -57.8654, 0.36 ) }
    dend_52 { pt3dadd( -28.7969, 31.2133, -57.8298, 0.36 ) }
    dend_52 { pt3dadd( -28.9286, 32.9024, -57.0403, 0.36 ) }
    dend_52 { pt3dadd( -28.955, 33.233, -56.8695, 0.36 ) }
    dend_52 { pt3dadd( -29.0472, 34.3836, -56.2728, 0.36 ) }
    dend_52 { pt3dadd( -29.0962, 34.9975, -55.9927, 0.36 ) }
    dend_52 { pt3dadd( -29.1989, 36.2806, -55.5018, 0.36 ) }
    dend_52 { pt3dadd( -29.2478, 36.7939, -55.3256, 0.36 ) }
    dend_52 { pt3dadd( -29.4406, 38.6936, -54.7198, 0.36 ) }
    dend_52 { pt3dadd( -29.5438, 39.5768, -54.4547, 0.36 ) }
    dend_52 { pt3dadd( -29.7268, 40.9566, -54.0503, 0.36 ) }
    dend_52 { pt3dadd( -29.7501, 41.0904, -54.0101, 0.36 ) }
    dend_52 { pt3dadd( -30.394, 43.9198, -53.1174, 0.36 ) }
    dend_52 { pt3dadd( -30.4639, 44.1613, -53.0373, 0.36 ) }
    dend_52 { pt3dadd( -30.9494, 45.4803, -52.5676, 0.36 ) }
    dend_52 { pt3dadd( -31.2769, 46.2299, -52.2886, 0.36 ) }
    dend_52 { pt3dadd( -31.6763, 47.0595, -51.9482, 0.36 ) }
    dend_52 { pt3dadd( -31.968, 47.6176, -51.696, 0.36 ) }
    dend_52 { pt3dadd( -32.4297, 48.3284, -51.2645, 0.36 ) }
    dend_52 { pt3dadd( -32.5661, 48.5263, -51.1557, 0.36 ) }
    dend_52 { pt3dadd( -32.9226, 48.989, -51.0122, 0.36 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -65.7097, 72.441, -12.1068, 0.48 ) }
    dend_47 { pt3dadd( -64.2111, 73.9673, -13.7834, 0.48 ) }
    dend_47 { pt3dadd( -63.8193, 74.435, -14.11, 0.48 ) }
    dend_47 { pt3dadd( -63.18, 75.3261, -14.5597, 0.48 ) }
    dend_47 { pt3dadd( -63.0889, 75.5553, -14.6086, 0.48 ) }
    dend_47 { pt3dadd( -62.7386, 77.091, -14.7502, 0.48 ) }
    dend_47 { pt3dadd( -62.6862, 77.6066, -14.7723, 0.48 ) }
    dend_47 { pt3dadd( -62.786, 79.1703, -14.6877, 0.48 ) }
    dend_47 { pt3dadd( -62.8478, 79.6192, -14.6803, 0.48 ) }
    dend_47 { pt3dadd( -63.2995, 81.8535, -14.6827, 0.48 ) }
    dend_47 { pt3dadd( -63.4719, 82.4745, -14.7083, 0.48 ) }
    dend_47 { pt3dadd( -63.8813, 83.6015, -14.8046, 0.48 ) }
    dend_47 { pt3dadd( -64.2358, 84.3345, -14.9742, 0.48 ) }
    dend_47 { pt3dadd( -65.1658, 85.9114, -15.5271, 0.48 ) }
    dend_47 { pt3dadd( -65.3744, 86.2214, -15.6625, 0.48 ) }
    dend_47 { pt3dadd( -66.0295, 87.0829, -16.1468, 0.48 ) }
    dend_47 { pt3dadd( -66.1203, 87.201, -16.2223, 0.48 ) }
    dend_47 { pt3dadd( -68.0575, 89.6945, -17.9666, 0.48 ) }
    dend_47 { pt3dadd( -68.1523, 89.8172, -18.0536, 0.48 ) }
    dend_47 { pt3dadd( -69.2112, 91.2839, -19.2951, 0.48 ) }
    dend_47 { pt3dadd( -69.6055, 91.8794, -19.8652, 0.48 ) }
    dend_47 { pt3dadd( -70.3129, 93.0289, -21.0745, 0.48 ) }
    dend_47 { pt3dadd( -70.4432, 93.2568, -21.3242, 0.48 ) }
    dend_47 { pt3dadd( -70.8046, 93.9431, -22.0878, 0.48 ) }
    dend_47 { pt3dadd( -72.0935, 96.2893, -24.8495, 0.48 ) }
    dend_47 { pt3dadd( -72.3984, 96.7873, -25.4895, 0.48 ) }
    dend_47 { pt3dadd( -73.0891, 97.7901, -26.8494, 0.48 ) }
    dend_47 { pt3dadd( -73.1487, 97.8648, -26.9738, 0.48 ) }
    dend_47 { pt3dadd( -73.7218, 98.5567, -28.2446, 0.48 ) }
    dend_47 { pt3dadd( -74.2154, 99.1394, -29.4038, 0.48 ) }
    dend_47 { pt3dadd( -74.9153, 100.011, -31.1469, 0.48 ) }
    dend_47 { pt3dadd( -75.1079, 100.272, -31.6703, 0.48 ) }
    dend_47 { pt3dadd( -76.4804, 102.338, -35.8045, 0.48 ) }
    dend_47 { pt3dadd( -77.5678, 104.127, -39.3371, 0.48 ) }
    dend_47 { pt3dadd( -77.6501, 104.297, -39.6516, 0.48 ) }
    dend_47 { pt3dadd( -78.1505, 105.57, -41.7698, 0.48 ) }
    dend_47 { pt3dadd( -78.2636, 105.971, -42.3465, 0.48 ) }
    dend_47 { pt3dadd( -78.3947, 106.662, -43.2143, 0.48 ) }
    dend_47 { pt3dadd( -78.4035, 106.804, -43.3565, 0.48 ) }
    dend_47 { pt3dadd( -78.3781, 109.454, -45.744, 0.48 ) }
    dend_47 { pt3dadd( -78.3793, 109.728, -45.97, 0.48 ) }
    dend_47 { pt3dadd( -78.3932, 111.196, -47.0907, 0.48 ) }
    dend_47 { pt3dadd( -78.4548, 112.333, -48.0384, 0.48 ) }
    dend_47 { pt3dadd( -78.5195, 113.385, -48.9317, 0.48 ) }
    dend_47 { pt3dadd( -78.536, 113.575, -49.0967, 0.48 ) }
    dend_47 { pt3dadd( -78.6379, 114.286, -49.7443, 0.48 ) }
    dend_47 { pt3dadd( -78.7079, 114.648, -50.1132, 0.48 ) }
    dend_47 { pt3dadd( -79.3121, 116.814, -52.8454, 0.48 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -65.7097, 72.441, -12.1068, 0.48 ) }
    dend_46 { pt3dadd( -67.0001, 74.3727, -12.8111, 0.48 ) }
    dend_46 { pt3dadd( -68.0494, 76.3006, -13.4853, 0.48 ) }
    dend_46 { pt3dadd( -68.1594, 76.5452, -13.5609, 0.48 ) }
    dend_46 { pt3dadd( -68.6934, 77.847, -13.9475, 0.48 ) }
    dend_46 { pt3dadd( -68.8526, 78.2426, -14.0892, 0.48 ) }
    dend_46 { pt3dadd( -69.4191, 79.6471, -14.6395, 0.48 ) }
    dend_46 { pt3dadd( -69.8017, 80.6739, -15.0038, 0.48 ) }
    dend_46 { pt3dadd( -70.3271, 82.3444, -15.5795, 0.48 ) }
    dend_46 { pt3dadd( -70.3498, 82.4186, -15.6085, 0.48 ) }
    dend_46 { pt3dadd( -70.993, 84.5645, -16.5472, 0.48 ) }
    dend_46 { pt3dadd( -71.1647, 85.1027, -16.7888, 0.48 ) }
    dend_46 { pt3dadd( -71.5814, 86.3422, -17.3535, 0.48 ) }
    dend_46 { pt3dadd( -71.9027, 87.3975, -17.8134, 0.48 ) }
    dend_46 { pt3dadd( -72.4643, 89.5268, -18.7645, 0.48 ) }
    dend_46 { pt3dadd( -72.6151, 90.1062, -19.0291, 0.48 ) }
    dend_46 { pt3dadd( -72.9663, 91.541, -19.6984, 0.48 ) }
    dend_46 { pt3dadd( -73.0017, 91.6695, -19.7663, 0.48 ) }
    dend_46 { pt3dadd( -73.7543, 93.9299, -21.1297, 0.48 ) }
    dend_46 { pt3dadd( -73.8643, 94.1904, -21.3212, 0.48 ) }
    dend_46 { pt3dadd( -74.4566, 95.3694, -22.3124, 0.48 ) }
    dend_46 { pt3dadd( -74.5918, 95.6138, -22.545, 0.48 ) }
    dend_46 { pt3dadd( -74.9371, 96.1834, -23.1665, 0.48 ) }
    dend_46 { pt3dadd( -75.2012, 96.6511, -23.7638, 0.48 ) }
    dend_46 { pt3dadd( -75.794, 97.964, -25.6963, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_46 { pt3dadd( -75.8791, 98.2409, -26.1169, 0.48 ) }
    dend_46 { pt3dadd( -76.0092, 98.945, -27.1652, 0.48 ) }
    dend_46 { pt3dadd( -76.0224, 99.0443, -27.3098, 0.48 ) }
    dend_46 { pt3dadd( -76.2386, 101.231, -30.2847, 0.48 ) }
    dend_46 { pt3dadd( -76.3414, 102.399, -31.7842, 0.48 ) }
    dend_46 { pt3dadd( -76.4011, 102.969, -32.4373, 0.48 ) }
    dend_46 { pt3dadd( -76.5094, 103.975, -33.5254, 0.48 ) }
    dend_46 { pt3dadd( -76.5324, 104.184, -33.7307, 0.48 ) }
    dend_46 { pt3dadd( -76.6653, 105.275, -34.6558, 0.48 ) }
    dend_46 { pt3dadd( -76.8101, 106.1, -35.1884, 0.48 ) }
    dend_46 { pt3dadd( -77.068, 107.301, -35.9445, 0.48 ) }
    dend_46 { pt3dadd( -77.2511, 108.024, -36.4692, 0.48 ) }
    dend_46 { pt3dadd( -77.5471, 109.083, -37.3873, 0.48 ) }
    dend_46 { pt3dadd( -77.5779, 109.183, -37.4863, 0.48 ) }
    dend_46 { pt3dadd( -77.774, 109.784, -38.232, 0.48 ) }
    dend_46 { pt3dadd( -78.0733, 110.595, -39.4075, 0.48 ) }
    dend_46 { pt3dadd( -78.4684, 111.558, -41.0141, 0.48 ) }
    dend_46 { pt3dadd( -78.5373, 111.706, -41.2813, 0.48 ) }
    dend_46 { pt3dadd( -78.6364, 111.911, -41.6941, 0.48 ) }
    dend_46 { pt3dadd( -78.9044, 112.628, -43.4465, 0.48 ) }
    dend_46 { pt3dadd( -78.9963, 113.071, -44.7388, 0.48 ) }
    dend_46 { pt3dadd( -79.0143, 113.16, -45.0385, 0.48 ) }
    dend_46 { pt3dadd( -79.0269, 113.271, -45.4816, 0.48 ) }
    dend_46 { pt3dadd( -79.0402, 113.382, -46.0713, 0.48 ) }
    dend_46 { pt3dadd( -79.1174, 113.751, -49.1862, 0.48 ) }
    dend_46 { pt3dadd( -79.1555, 113.779, -50.0542, 0.48 ) }
    dend_46 { pt3dadd( -79.2099, 113.756, -51.2269, 0.48 ) }
    dend_46 { pt3dadd( -79.2184, 113.746, -51.3919, 0.48 ) }
    dend_46 { pt3dadd( -79.277, 113.656, -52.2764, 0.48 ) }
    dend_46 { pt3dadd( -79.3887, 113.544, -53.0673, 0.48 ) }
    dend_46 { pt3dadd( -79.8655, 113.126, -55.2327, 0.48 ) }
    dend_46 { pt3dadd( -79.9204, 113.071, -55.4795, 0.48 ) }
    dend_46 { pt3dadd( -80.1048, 112.85, -56.4414, 0.48 ) }
    dend_46 { pt3dadd( -80.1544, 112.802, -56.6808, 0.48 ) }
    dend_46 { pt3dadd( -80.3582, 112.691, -57.5578, 0.48 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -35.0301, 6.03968, 54.6121, 0.48 ) }
    dend_41 { pt3dadd( -33.0021, 10.6541, 66.5438, 0.48 ) }
    dend_41 { pt3dadd( -30.9615, 13.5299, 79.0073, 0.48 ) }
    dend_41 { pt3dadd( -28.6367, 15.6329, 91.5749, 0.48 ) }
    dend_41 { pt3dadd( -28.2578, 18.0869, 104.287, 0.48 ) }
    dend_41 { pt3dadd( -29.8316, 22.5764, 116.335, 0.48 ) }
    dend_41 { pt3dadd( -31.9596, 25.7432, 128.713, 0.48 ) }
    dend_41 { pt3dadd( -35.0373, 26.3399, 141.28, 0.48 ) }
    dend_41 { pt3dadd( -36.4501, 27.1651, 154.129, 0.48 ) }
    dend_41 { pt3dadd( -34.8736, 25.5428, 166.883, 0.48 ) }
    dend_41 { pt3dadd( -32.3855, 22.4611, 179.215, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -35.0301, 6.03968, 54.6121, 0.48 ) }
    dend_40 { pt3dadd( -46.5001, 3.81826, 61.58, 0.48 ) }
    dend_40 { pt3dadd( -57.4728, 0.637613, 68.9644, 0.48 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 49/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 36.0147, 1.41343, 45.9253, 0.36 ) }
    dend_37 { pt3dadd( 38.7956, -3.03562, 51.7997, 0.36 ) }
    dend_37 { pt3dadd( 41.6643, -6.68266, 58.1641, 0.36 ) }
    dend_37 { pt3dadd( 45.7281, -10.1334, 63.9619, 0.36 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 36.0147, 1.41343, 45.9253, 0.36 ) }
    dend_36 { pt3dadd( 47.0468, 1.13263, 49.9114, 0.36 ) }
    dend_36 { pt3dadd( 58.5327, 1.27464, 52.3045, 0.36 ) }
    dend_36 { pt3dadd( 70.1782, 1.0352, 53.7188, 0.36 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -15.9559, 44.1265, 17.4783, 0.6 ) }
    dend_34 { pt3dadd( -17.3666, 45.0107, 16.2582, 0.36 ) }
    dend_34 { pt3dadd( -17.5167, 45.1186, 16.1324, 0.36 ) }
    dend_34 { pt3dadd( -18.395, 45.7868, 15.3609, 0.36 ) }
    dend_34 { pt3dadd( -19.1504, 46.3707, 14.6881, 0.36 ) }
    dend_34 { pt3dadd( -19.3204, 46.4924, 14.551, 0.36 ) }
    dend_34 { pt3dadd( -20.0418, 46.9834, 14.0333, 0.36 ) }
    dend_34 { pt3dadd( -20.1928, 47.0742, 13.9738, 0.36 ) }
    dend_34 { pt3dadd( -21.0024, 47.5472, 13.7491, 0.36 ) }
    dend_34 { pt3dadd( -21.0982, 47.6047, 13.7446, 0.36 ) }
    dend_34 { pt3dadd( -22.0012, 48.0861, 13.8813, 0.36 ) }
    dend_34 { pt3dadd( -22.5362, 48.3842, 13.9906, 0.36 ) }
    dend_34 { pt3dadd( -23.1998, 48.7995, 14.3058, 0.36 ) }
    dend_34 { pt3dadd( -23.2537, 48.8383, 14.3392, 0.36 ) }
    dend_34 { pt3dadd( -24.0715, 49.5373, 14.8917, 0.36 ) }
    dend_34 { pt3dadd( -24.2345, 49.6919, 15.0016, 0.36 ) }
    dend_34 { pt3dadd( -24.6649, 50.1716, 15.3016, 0.36 ) }
    dend_34 { pt3dadd( -26.1867, 52.0118, 16.3283, 0.36 ) }
    dend_34 { pt3dadd( -26.2494, 52.0948, 16.3695, 0.36 ) }
    dend_34 { pt3dadd( -27.1417, 53.3169, 16.9436, 0.36 ) }
    dend_34 { pt3dadd( -27.2391, 53.4544, 17.0036, 0.36 ) }
    dend_34 { pt3dadd( -28.0422, 54.633, 17.4527, 0.36 ) }
    dend_34 { pt3dadd( -28.2452, 54.9495, 17.5453, 0.36 ) }
    dend_34 { pt3dadd( -28.8615, 56.0204, 17.7359, 0.36 ) }
    dend_34 { pt3dadd( -29.0622, 56.3713, 17.7983, 0.36 ) }
    dend_34 { pt3dadd( -29.5232, 57.2027, 17.9448, 0.36 ) }
    dend_34 { pt3dadd( -29.6323, 57.396, 17.9716, 0.36 ) }
    dend_34 { pt3dadd( -30.155, 58.2478, 18.011, 0.36 ) }
    dend_34 { pt3dadd( -36.5752, 64.813, 16.6295, 0.36 ) }
    dend_34 { pt3dadd( -43.3419, 70.6625, 14.1344, 0.36 ) }
    dend_34 { pt3dadd( -49.329, 77.5211, 12.3058, 0.36 ) }
    dend_34 { pt3dadd( -54.2058, 84.834, 9.31074, 0.36 ) }
    dend_34 { pt3dadd( -59.166, 91.0597, 4.52886, 0.36 ) }
    dend_34 { pt3dadd( -63.903, 97.927, 0.450694, 0.36 ) }
    dend_34 { pt3dadd( -70.8427, 103.516, -2.16324, 0.36 ) }
    dend_34 { pt3dadd( -78.2427, 108.944, -3.58213, 0.36 ) }
    dend_34 { pt3dadd( -85.329, 113.878, -6.99777, 0.36 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.9559, 44.1265, 17.4783, 0.6 ) }
    dend_33 { pt3dadd( -15.6137, 46.7312, 17.853, 0.48 ) }
    dend_33 { pt3dadd( -15.4078, 49.1085, 18.1784, 0.48 ) }
    dend_33 { pt3dadd( -15.2786, 51.6434, 18.4565, 0.48 ) }
    dend_33 { pt3dadd( -15.2763, 51.9534, 18.4759, 0.48 ) }
    dend_33 { pt3dadd( -15.3262, 54.7118, 18.5718, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_33 { pt3dadd( -15.33, 54.8149, 18.5733, 0.48 ) }
    dend_33 { pt3dadd( -15.4952, 56.7549, 18.5273, 0.48 ) }
    dend_33 { pt3dadd( -15.5898, 57.6174, 18.4807, 0.48 ) }
    dend_33 { pt3dadd( -15.7789, 59.3034, 18.3534, 0.48 ) }
    dend_33 { pt3dadd( -15.7829, 59.4583, 18.343, 0.48 ) }
    dend_33 { pt3dadd( -15.7078, 61.1807, 18.2276, 0.48 ) }
    dend_33 { pt3dadd( -15.6944, 61.3354, 18.2234, 0.48 ) }
    dend_33 { pt3dadd( -15.3061, 64.7596, 18.2875, 0.48 ) }
    dend_33 { pt3dadd( -15.2643, 65.1039, 18.3045, 0.48 ) }
    dend_33 { pt3dadd( -14.9475, 67.9429, 18.4976, 0.48 ) }
    dend_33 { pt3dadd( -14.9172, 68.2513, 18.5184, 0.48 ) }
    dend_33 { pt3dadd( -14.7332, 70.5863, 18.675, 0.48 ) }
    dend_33 { pt3dadd( -14.5825, 73.3722, 18.8598, 0.48 ) }
    dend_33 { pt3dadd( -14.5844, 73.5275, 18.8605, 0.48 ) }
    dend_33 { pt3dadd( -14.7414, 76.6442, 18.7462, 0.48 ) }
    dend_33 { pt3dadd( -14.8202, 77.3446, 18.6988, 0.48 ) }
    dend_33 { pt3dadd( -15.1404, 79.6488, 18.5022, 0.48 ) }
    dend_33 { pt3dadd( -15.179, 79.8639, 18.481, 0.48 ) }
    dend_33 { pt3dadd( -16.2551, 85.0204, 17.9299, 0.48 ) }
    dend_33 { pt3dadd( -16.3323, 85.3571, 17.8957, 0.48 ) }
    dend_33 { pt3dadd( -17.3093, 89.3872, 17.5691, 0.48 ) }
    dend_33 { pt3dadd( -17.3827, 89.6884, 17.5516, 0.48 ) }
    dend_33 { pt3dadd( -18.0423, 92.3635, 17.4784, 0.48 ) }
    dend_33 { pt3dadd( -18.1188, 92.6645, 17.4805, 0.48 ) }
    dend_33 { pt3dadd( -18.6934, 94.6182, 17.5908, 0.48 ) }
    dend_33 { pt3dadd( -20.155, 99.0523, 17.8364, 0.48 ) }
    dend_33 { pt3dadd( -20.3767, 99.6329, 17.8677, 0.48 ) }
    dend_33 { pt3dadd( -21.5022, 102.321, 18.0098, 0.48 ) }
    dend_33 { pt3dadd( -21.9168, 103.354, 18.0332, 0.48 ) }
    dend_33 { pt3dadd( -22.6932, 105.76, 18.034, 0.48 ) }
    dend_33 { pt3dadd( -22.8848, 106.521, 18.0197, 0.48 ) }
    dend_33 { pt3dadd( -23.0667, 107.825, 17.979, 0.48 ) }
    dend_33 { pt3dadd( -23.1493, 109.544, 17.9226, 0.48 ) }
    dend_33 { pt3dadd( -22.9322, 113.991, 17.6824, 0.48 ) }
    dend_33 { pt3dadd( -22.5999, 117.157, 17.484, 0.48 ) }
    dend_33 { pt3dadd( -22.5097, 117.852, 17.4411, 0.48 ) }
    dend_33 { pt3dadd( -22.1358, 120.85, 17.2638, 0.48 ) }
    dend_33 { pt3dadd( -22.1195, 121.004, 17.2557, 0.48 ) }
    dend_33 { pt3dadd( -21.8474, 125.249, 17.0696, 0.48 ) }
    dend_33 { pt3dadd( -21.844, 126.038, 17.0508, 0.48 ) }
    dend_33 { pt3dadd( -21.9984, 129.621, 16.9643, 0.48 ) }
    dend_33 { pt3dadd( -22.021, 130.111, 16.9388, 0.48 ) }
    dend_33 { pt3dadd( -22.1498, 132.757, 16.7498, 0.48 ) }
    dend_33 { pt3dadd( -22.2, 133.531, 16.6925, 0.48 ) }
    dend_33 { pt3dadd( -22.4323, 136.362, 16.4868, 0.48 ) }
    dend_33 { pt3dadd( -22.4548, 136.58, 16.4671, 0.48 ) }
    dend_33 { pt3dadd( -22.882, 140.022, 16.0803, 0.48 ) }
    dend_33 { pt3dadd( -23.0032, 140.782, 15.9781, 0.48 ) }
    dend_33 { pt3dadd( -23.583, 143.711, 15.5546, 0.48 ) }
    dend_33 { pt3dadd( -23.6962, 144.186, 15.497, 0.48 ) }
    dend_33 { pt3dadd( -24.107, 145.672, 15.3502, 0.48 ) }
    dend_33 { pt3dadd( -24.1961, 146.007, 15.3298, 0.48 ) }
    dend_33 { pt3dadd( -25.0955, 149.56, 15.2717, 0.48 ) }
    dend_33 { pt3dadd( -25.2091, 150.085, 15.2672, 0.48 ) }
    dend_33 { pt3dadd( -25.9062, 154.153, 15.2642, 0.48 ) }
    dend_33 { pt3dadd( -25.9892, 154.769, 15.2585, 0.48 ) }
    dend_33 { pt3dadd( -26.2218, 157.133, 15.2214, 0.48 ) }
    dend_33 { pt3dadd( -26.3048, 158.085, 15.1846, 0.48 ) }
    dend_33 { pt3dadd( -26.4781, 159.459, 14.9947, 0.48 ) }
    dend_33 { pt3dadd( -26.5154, 159.667, 14.9378, 0.48 ) }
    dend_33 { pt3dadd( -26.8626, 161.021, 14.3633, 0.48 ) }
    dend_33 { pt3dadd( -27.0062, 161.485, 14.1321, 0.48 ) }
    dend_33 { pt3dadd( -27.5389, 162.933, 13.2644, 0.48 ) }
    dend_33 { pt3dadd( -28.6254, 165.769, 11.4523, 0.48 ) }
    dend_33 { pt3dadd( -28.6716, 165.895, 11.374, 0.48 ) }
    dend_33 { pt3dadd( -29.1397, 167.485, 10.4676, 0.48 ) }
    dend_33 { pt3dadd( -29.3386, 168.293, 10.0436, 0.48 ) }
    dend_33 { pt3dadd( -29.5416, 169.252, 9.60384, 0.48 ) }
    dend_33 { pt3dadd( -29.6221, 169.73, 9.41311, 0.48 ) }
    dend_33 { pt3dadd( -29.8799, 171.346, 8.88551, 0.48 ) }
    dend_33 { pt3dadd( -30.6365, 175.052, 7.72103, 0.48 ) }
    dend_33 { pt3dadd( -30.675, 175.197, 7.68092, 0.48 ) }
    dend_33 { pt3dadd( -31.4154, 177.528, 7.14428, 0.48 ) }
    dend_33 { pt3dadd( -31.4738, 177.695, 7.11511, 0.48 ) }
    dend_33 { pt3dadd( -32.3514, 180.049, 6.78386, 0.48 ) }
    dend_33 { pt3dadd( -32.6304, 180.785, 6.72027, 0.48 ) }
    dend_33 { pt3dadd( -33.5533, 183.272, 6.66009, 0.48 ) }
    dend_33 { pt3dadd( -33.756, 183.895, 6.65286, 0.48 ) }
    dend_33 { pt3dadd( -34.4934, 186.488, 6.64261, 0.48 ) }
    dend_33 { pt3dadd( -34.5447, 186.693, 6.63995, 0.48 ) }
    dend_33 { pt3dadd( -35.3035, 190.212, 6.56564, 0.48 ) }
    dend_33 { pt3dadd( -35.3911, 190.669, 6.58042, 0.48 ) }
    dend_33 { pt3dadd( -36.0515, 194.539, 6.87356, 0.48 ) }
    dend_33 { pt3dadd( -36.1066, 194.875, 6.91334, 0.48 ) }
    dend_33 { pt3dadd( -36.4071, 197.241, 6.89078, 0.48 ) }
    dend_33 { pt3dadd( -36.4283, 197.445, 6.8688, 0.48 ) }
    dend_33 { pt3dadd( -36.7501, 201.379, 6.04865, 0.48 ) }
    dend_33 { pt3dadd( -36.7898, 201.974, 5.87526, 0.48 ) }
    dend_33 { pt3dadd( -36.8733, 204.536, 4.74559, 0.48 ) }
    dend_33 { pt3dadd( -36.9803, 210.81, 1.66192, 0.48 ) }
    dend_33 { pt3dadd( -36.9826, 211.092, 1.50354, 0.48 ) }
    dend_33 { pt3dadd( -36.9769, 212.438, 0.63727, 0.48 ) }
    dend_33 { pt3dadd( -36.9677, 212.78, 0.363382, 0.48 ) }
    dend_33 { pt3dadd( -36.8652, 215.601, -2.0049, 0.36 ) }
    dend_33 { pt3dadd( -36.7532, 217.58, -3.7781, 0.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -71.6941, -41.827, 6.31296, 0.48 ) }
    dend_28 { pt3dadd( -79.7318, -41.7747, 4.18389, 0.48 ) }
    dend_28 { pt3dadd( -87.9234, -41.248, 2.85635, 0.48 ) }
    dend_28 { pt3dadd( -96.0026, -39.5578, 1.85172, 0.48 ) }
    dend_28 { pt3dadd( -104.237, -38.8329, 0.950949, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_28 { pt3dadd( -112.411, -38.3203, -0.487133, 0.48 ) }
    dend_28 { pt3dadd( -120.681, -37.4926, -0.239467, 0.48 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -71.6941, -41.827, 6.31296, 0.48 ) }
    dend_27 { pt3dadd( -76.5947, -42.063, 8.04983, 0.48 ) }
    dend_27 { pt3dadd( -81.5034, -42.9729, 9.52098, 0.48 ) }
    dend_27 { pt3dadd( -86.6172, -43.629, 10.2322, 0.48 ) }
    dend_27 { pt3dadd( -91.5759, -45.1153, 10.7713, 0.48 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 7/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -29.9708, -221.007, -46.0447, 0.48 ) }
    dend_23 { pt3dadd( -31.1331, -222.415, -45.657, 0.36 ) }
    dend_23 { pt3dadd( -31.22, -222.506, -45.6452, 0.36 ) }
    dend_23 { pt3dadd( -32.1709, -223.509, -45.5897, 0.36 ) }
    dend_23 { pt3dadd( -32.501, -223.863, -45.5806, 0.36 ) }
    dend_23 { pt3dadd( -33.4456, -224.883, -45.557, 0.36 ) }
    dend_23 { pt3dadd( -34.7458, -226.294, -45.5237, 0.36 ) }
    dend_23 { pt3dadd( -35.3536, -226.932, -45.5144, 0.36 ) }
    dend_23 { pt3dadd( -35.6997, -227.303, -45.5207, 0.36 ) }
    dend_23 { pt3dadd( -35.8928, -227.528, -45.5299, 0.36 ) }
    dend_23 { pt3dadd( -37.0033, -228.95, -45.5948, 0.36 ) }
    dend_23 { pt3dadd( -37.1096, -229.094, -45.6031, 0.36 ) }
    dend_23 { pt3dadd( -38.062, -230.454, -45.5888, 0.36 ) }
    dend_23 { pt3dadd( -38.3374, -230.819, -45.5831, 0.36 ) }
    dend_23 { pt3dadd( -39.3268, -231.999, -45.577, 0.36 ) }
    dend_23 { pt3dadd( -39.6514, -232.335, -45.5721, 0.36 ) }
    dend_23 { pt3dadd( -40.4631, -233.095, -45.5539, 0.36 ) }
    dend_23 { pt3dadd( -41.0487, -233.577, -45.5233, 0.36 ) }
    dend_23 { pt3dadd( -41.9483, -234.107, -45.4122, 0.36 ) }
    dend_23 { pt3dadd( -42.5336, -234.375, -45.3226, 0.36 ) }
    dend_23 { pt3dadd( -44.1635, -234.868, -45.0161, 0.36 ) }
    dend_23 { pt3dadd( -44.5479, -234.955, -44.9411, 0.36 ) }
    dend_23 { pt3dadd( -45.4247, -235.102, -44.8186, 0.36 ) }
    dend_23 { pt3dadd( -47.8762, -235.408, -44.642, 0.36 ) }
    dend_23 { pt3dadd( -48.054, -235.43, -44.6414, 0.36 ) }
    dend_23 { pt3dadd( -49.77, -235.656, -44.78, 0.36 ) }
    dend_23 { pt3dadd( -50.3545, -235.749, -44.9333, 0.36 ) }
    dend_23 { pt3dadd( -52.2833, -236.139, -45.7029, 0.36 ) }
    dend_23 { pt3dadd( -52.5349, -236.209, -45.8343, 0.36 ) }
    dend_23 { pt3dadd( -53.7093, -236.65, -46.5889, 0.36 ) }
    dend_23 { pt3dadd( -54.1359, -236.849, -46.8862, 0.36 ) }
    dend_23 { pt3dadd( -55.9377, -237.902, -48.318, 0.36 ) }
    dend_23 { pt3dadd( -56.307, -238.155, -48.6097, 0.36 ) }
    dend_23 { pt3dadd( -57.0231, -238.726, -49.1982, 0.36 ) }
    dend_23 { pt3dadd( -57.2215, -238.885, -49.3558, 0.36 ) }
    dend_23 { pt3dadd( -58.0923, -239.586, -50.0582, 0.36 ) }
    dend_23 { pt3dadd( -58.4751, -239.928, -50.3656, 0.36 ) }
    dend_23 { pt3dadd( -59.3404, -240.799, -51.0557, 0.36 ) }
    dend_23 { pt3dadd( -59.3915, -240.852, -51.0974, 0.36 ) }
    dend_23 { pt3dadd( -60.6972, -242.172, -52.2216, 0.36 ) }
    dend_23 { pt3dadd( -60.8664, -242.311, -52.3676, 0.36 ) }
    dend_23 { pt3dadd( -61.796, -242.941, -53.198, 0.36 ) }
    dend_23 { pt3dadd( -61.9254, -243.015, -53.3123, 0.36 ) }
    dend_23 { pt3dadd( -62.5947, -243.336, -53.909, 0.36 ) }
    dend_23 { pt3dadd( -63.1254, -243.556, -54.4227, 0.36 ) }
    dend_23 { pt3dadd( -64.7661, -244.12, -56.1747, 0.36 ) }
    dend_23 { pt3dadd( -65.434, -244.303, -56.8621, 0.36 ) }
    dend_23 { pt3dadd( -66.1486, -244.449, -57.5746, 0.36 ) }
    dend_23 { pt3dadd( -66.3579, -244.486, -57.7852, 0.36 ) }
    dend_23 { pt3dadd( -68.0269, -244.742, -59.6294, 0.36 ) }
    dend_23 { pt3dadd( -68.6227, -244.84, -60.3247, 0.36 ) }
    dend_23 { pt3dadd( -69.3638, -244.976, -61.2476, 0.36 ) }
    dend_23 { pt3dadd( -69.4437, -244.992, -61.3448, 0.36 ) }
    dend_23 { pt3dadd( -70.2279, -245.186, -62.2726, 0.36 ) }
    dend_23 { pt3dadd( -71.9257, -245.67, -64.1204, 0.36 ) }
    dend_23 { pt3dadd( -73.0244, -246.023, -65.1866, 0.36 ) }
    dend_23 { pt3dadd( -73.2181, -246.085, -65.3541, 0.36 ) }
    dend_23 { pt3dadd( -74.2507, -246.408, -66.177, 0.36 ) }
    dend_23 { pt3dadd( -75.0734, -246.659, -66.7732, 0.36 ) }
    dend_23 { pt3dadd( -76.7995, -247.119, -67.8049, 0.36 ) }
    dend_23 { pt3dadd( -77.216, -247.203, -67.9889, 0.36 ) }
    dend_23 { pt3dadd( -78.9899, -247.43, -68.6667, 0.36 ) }
    dend_23 { pt3dadd( -79.2686, -247.452, -68.7734, 0.36 ) }
    dend_23 { pt3dadd( -79.5139, -247.453, -68.8719, 0.36 ) }
    dend_23 { pt3dadd( -80.3696, -247.418, -69.1945, 0.36 ) }
    dend_23 { pt3dadd( -81.2308, -247.371, -69.4656, 0.36 ) }
    dend_23 { pt3dadd( -82.9097, -247.317, -69.9814, 0.36 ) }
    dend_23 { pt3dadd( -83.6799, -247.31, -70.2198, 0.36 ) }
    dend_23 { pt3dadd( -83.7997, -247.317, -70.265, 0.36 ) }
    dend_23 { pt3dadd( -84.6541, -247.396, -70.6133, 0.36 ) }
    dend_23 { pt3dadd( -85.0749, -247.447, -70.7994, 0.36 ) }
    dend_23 { pt3dadd( -86.6821, -247.647, -71.5733, 0.36 ) }
    dend_23 { pt3dadd( -86.7658, -247.656, -71.617, 0.36 ) }
    dend_23 { pt3dadd( -89.8655, -247.949, -73.2219, 0.36 ) }
    dend_23 { pt3dadd( -89.9787, -247.96, -73.2784, 0.36 ) }
    dend_23 { pt3dadd( -91.6842, -248.14, -74.1282, 0.36 ) }
    dend_23 { pt3dadd( -92.4149, -248.236, -74.5103, 0.36 ) }
    dend_23 { pt3dadd( -94.2073, -248.532, -75.5266, 0.36 ) }
    dend_23 { pt3dadd( -95.0874, -248.722, -76.0455, 0.36 ) }
    dend_23 { pt3dadd( -95.8206, -248.942, -76.4963, 0.36 ) }
    dend_23 { pt3dadd( -96.6097, -249.28, -77.0135, 0.36 ) }
    dend_23 { pt3dadd( -97.8367, -250.033, -77.9297, 0.36 ) }
    dend_23 { pt3dadd( -98.4647, -250.516, -78.4458, 0.36 ) }
    dend_23 { pt3dadd( -99.1493, -251.171, -79.1074, 0.36 ) }
    dend_23 { pt3dadd( -99.5179, -251.535, -79.5213, 0.36 ) }
    dend_23 { pt3dadd( -100.115, -252.118, -80.2322, 0.36 ) }
    dend_23 { pt3dadd( -100.867, -252.779, -81.0697, 0.36 ) }
    dend_23 { pt3dadd( -101.655, -253.369, -81.9092, 0.36 ) }
    dend_23 { pt3dadd( -101.879, -253.5, -82.141, 0.36 ) }
    dend_23 { pt3dadd( -103.633, -254.294, -83.9871, 0.36 ) }
    dend_23 { pt3dadd( -103.75, -254.343, -84.1134, 0.36 ) }
    dend_23 { pt3dadd( -104.257, -254.553, -84.6559, 0.36 ) }
    dend_23 { pt3dadd( -105.234, -255.025, -85.7546, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_23 { pt3dadd( -106.4, -255.674, -87.1997, 0.36 ) }
    dend_23 { pt3dadd( -106.702, -255.858, -87.5897, 0.36 ) }
    dend_23 { pt3dadd( -107.409, -256.34, -88.5572, 0.36 ) }
    dend_23 { pt3dadd( -107.778, -256.587, -89.0182, 0.36 ) }
    dend_23 { pt3dadd( -108.923, -257.351, -90.3525, 0.36 ) }
    dend_23 { pt3dadd( -109.735, -257.887, -91.1945, 0.36 ) }
    dend_23 { pt3dadd( -110.65, -258.451, -92.0938, 0.36 ) }
    dend_23 { pt3dadd( -110.816, -258.543, -92.2432, 0.36 ) }
    dend_23 { pt3dadd( -112.215, -259.199, -93.3789, 0.36 ) }
    dend_23 { pt3dadd( -112.553, -259.353, -93.62, 0.36 ) }
    dend_23 { pt3dadd( -113.735, -259.892, -94.3928, 0.36 ) }
    dend_23 { pt3dadd( -114.275, -260.153, -94.7649, 0.36 ) }
    dend_23 { pt3dadd( -115.464, -260.762, -95.6913, 0.36 ) }
    dend_23 { pt3dadd( -115.833, -260.96, -96.0042, 0.36 ) }
    dend_23 { pt3dadd( -116.324, -261.248, -96.4872, 0.36 ) }
    dend_23 { pt3dadd( -117.762, -262.07, -97.8683, 0.36 ) }
    dend_23 { pt3dadd( -118.457, -262.442, -98.4976, 0.36 ) }
    dend_23 { pt3dadd( -118.771, -262.612, -98.7891, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 18/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -29.9708, -221.007, -46.0447, 0.48 ) }
    dend_22 { pt3dadd( -30.7452, -223.755, -45.9368, 0.36 ) }
    dend_22 { pt3dadd( -31.3341, -225.601, -45.8602, 0.36 ) }
    dend_22 { pt3dadd( -31.3734, -225.724, -45.8564, 0.36 ) }
    dend_22 { pt3dadd( -32.3616, -229.265, -45.9112, 0.36 ) }
    dend_22 { pt3dadd( -32.3936, -229.391, -45.9157, 0.36 ) }
    dend_22 { pt3dadd( -32.6667, -230.59, -45.9326, 0.36 ) }
    dend_22 { pt3dadd( -32.7281, -230.873, -45.9338, 0.36 ) }
    dend_22 { pt3dadd( -33.0363, -232.553, -45.8961, 0.36 ) }
    dend_22 { pt3dadd( -33.5634, -235.77, -45.7645, 0.36 ) }
    dend_22 { pt3dadd( -33.6071, -236.055, -45.7362, 0.36 ) }
    dend_22 { pt3dadd( -33.9592, -238.254, -45.4267, 0.36 ) }
    dend_22 { pt3dadd( -33.9999, -238.473, -45.4008, 0.36 ) }
    dend_22 { pt3dadd( -34.9724, -242.705, -44.9482, 0.36 ) }
    dend_22 { pt3dadd( -35.0323, -242.877, -44.933, 0.36 ) }
    dend_22 { pt3dadd( -35.8753, -244.606, -44.8749, 0.36 ) }
    dend_22 { pt3dadd( -35.9934, -244.777, -44.9035, 0.36 ) }
    dend_22 { pt3dadd( -38.0237, -246.807, -45.9298, 0.36 ) }
    dend_22 { pt3dadd( -38.118, -246.877, -45.9872, 0.36 ) }
    dend_22 { pt3dadd( -39.4999, -247.663, -46.9429, 0.36 ) }
    dend_22 { pt3dadd( -39.9734, -247.942, -47.2669, 0.36 ) }
    dend_22 { pt3dadd( -41.5225, -248.901, -48.2988, 0.36 ) }
    dend_22 { pt3dadd( -41.7122, -249.027, -48.4055, 0.36 ) }
    dend_22 { pt3dadd( -43.152, -250.281, -49.0161, 0.36 ) }
    dend_22 { pt3dadd( -43.893, -251.05, -49.3131, 0.36 ) }
    dend_22 { pt3dadd( -44.313, -251.589, -49.4577, 0.36 ) }
    dend_22 { pt3dadd( -44.9948, -252.561, -49.6765, 0.36 ) }
    dend_22 { pt3dadd( -45.1242, -252.773, -49.7178, 0.36 ) }
    dend_22 { pt3dadd( -46.5124, -255.083, -50.154, 0.36 ) }
    dend_22 { pt3dadd( -46.6024, -255.24, -50.1835, 0.36 ) }
    dend_22 { pt3dadd( -47.28, -256.43, -50.3828, 0.36 ) }
    dend_22 { pt3dadd( -47.7525, -257.285, -50.5171, 0.36 ) }
    dend_22 { pt3dadd( -47.8141, -257.397, -50.5401, 0.36 ) }
    dend_22 { pt3dadd( -48.839, -259.205, -50.9574, 0.36 ) }
    dend_22 { pt3dadd( -49.031, -259.554, -51.0446, 0.36 ) }
    dend_22 { pt3dadd( -49.8279, -261.366, -51.5391, 0.36 ) }
    dend_22 { pt3dadd( -49.8847, -261.522, -51.585, 0.36 ) }
    dend_22 { pt3dadd( -50.6111, -263.871, -52.318, 0.36 ) }
    dend_22 { pt3dadd( -50.6395, -263.991, -52.3598, 0.36 ) }
    dend_22 { pt3dadd( -50.8791, -265.319, -52.8839, 0.36 ) }
    dend_22 { pt3dadd( -51.1738, -266.968, -53.5508, 0.36 ) }
    dend_22 { pt3dadd( -51.4229, -268.398, -54.1571, 0.36 ) }
    dend_22 { pt3dadd( -51.5146, -268.889, -54.3545, 0.36 ) }
    dend_22 { pt3dadd( -51.9054, -270.919, -55.1215, 0.36 ) }
    dend_22 { pt3dadd( -52.2551, -272.646, -55.7455, 0.36 ) }
    dend_22 { pt3dadd( -52.6061, -274.235, -56.2947, 0.36 ) }
    dend_22 { pt3dadd( -52.7112, -274.692, -56.4306, 0.36 ) }
    dend_22 { pt3dadd( -53.0515, -276.291, -56.8534, 0.36 ) }
    dend_22 { pt3dadd( -53.1081, -276.538, -56.9143, 0.36 ) }
    dend_22 { pt3dadd( -53.5241, -278.271, -57.3159, 0.36 ) }
    dend_22 { pt3dadd( -53.6126, -278.646, -57.4552, 0.36 ) }
    dend_22 { pt3dadd( -53.975, -280.256, -58.2557, 0.36 ) }
    dend_22 { pt3dadd( -54.0779, -280.7, -58.5348, 0.36 ) }
    dend_22 { pt3dadd( -54.3855, -281.921, -59.685, 0.36 ) }
    dend_22 { pt3dadd( -54.408, -282.004, -59.7828, 0.36 ) }
    dend_22 { pt3dadd( -55.0513, -284.152, -62.8992, 0.36 ) }
    dend_22 { pt3dadd( -55.1338, -284.423, -63.3572, 0.36 ) }
    dend_22 { pt3dadd( -55.2247, -284.691, -63.9019, 0.36 ) }
    dend_22 { pt3dadd( -55.6516, -285.826, -66.3956, 0.36 ) }
    dend_22 { pt3dadd( -55.6772, -285.889, -66.5424, 0.36 ) }
    dend_22 { pt3dadd( -55.8347, -286.243, -67.3635, 0.36 ) }
    dend_22 { pt3dadd( -56.1174, -286.787, -68.6593, 0.36 ) }
    dend_22 { pt3dadd( -56.5072, -287.461, -70.3519, 0.36 ) }
    dend_22 { pt3dadd( -56.5787, -287.581, -70.6465, 0.36 ) }
    dend_22 { pt3dadd( -56.7716, -287.881, -71.389, 0.36 ) }
    dend_22 { pt3dadd( -57.0211, -288.254, -72.3681, 0.36 ) }
    dend_22 { pt3dadd( -57.6466, -289.142, -74.9482, 0.36 ) }
    dend_22 { pt3dadd( -57.6676, -289.174, -75.0373, 0.36 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -19.0782, 69.7623, -86.4164, 0.48 ) }
    dend_18 { pt3dadd( -22.0078, 74.5906, -89.8914, 0.48 ) }
    dend_18 { pt3dadd( -23.6911, 79.6215, -93.8696, 0.48 ) }
    dend_18 { pt3dadd( -25.4372, 85.0229, -97.2971, 0.48 ) }
    dend_18 { pt3dadd( -26.2104, 90.661, -100.701, 0.48 ) }
    dend_18 { pt3dadd( -27.4292, 96.4149, -103.763, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -19.0782, 69.7623, -86.4164, 0.48 ) }
    dend_17 { pt3dadd( -24.0258, 75.3929, -95.836, 0.48 ) }
    dend_17 { pt3dadd( -27.5364, 79.8633, -106.447, 0.48 ) }
    dend_17 { pt3dadd( -28.6186, 86.4617, -116.457, 0.48 ) }
    dend_17 { pt3dadd( -31.2726, 93.3058, -125.998, 0.48 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 92.6883, 45.9569, 9.74564, 0.48 ) }
    dend_15 { pt3dadd( 102.459, 54.6791, 12.8214, 0.48 ) }
    dend_15 { pt3dadd( 111.684, 64.4397, 13.6168, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_15 { pt3dadd( 122.417, 72.3898, 15.2361, 0.48 ) }
    dend_15 { pt3dadd( 134.2, 78.8364, 16.0176, 0.48 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 92.6883, 45.9569, 9.74564, 0.48 ) }
    dend_14 { pt3dadd( 103.874, 50.1531, 4.99948, 0.48 ) }
    dend_14 { pt3dadd( 115.778, 54.1603, 2.26077, 0.48 ) }
    dend_14 { pt3dadd( 126.821, 58.6414, -2.55858, 0.48 ) }
    dend_14 { pt3dadd( 136.841, 63.5545, -8.94093, 0.48 ) }
    dend_14 { pt3dadd( 147.202, 68.0314, -15.0944, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 8/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -42.3089, -25.8661, 6.21116, 0.48 ) }
    dend_8 { pt3dadd( -43.5919, -25.5005, 5.35706, 0.48 ) }
    dend_8 { pt3dadd( -43.6891, -25.4907, 5.30772, 0.48 ) }
    dend_8 { pt3dadd( -44.6151, -25.477, 4.91197, 0.48 ) }
    dend_8 { pt3dadd( -44.7435, -25.4796, 4.86534, 0.48 ) }
    dend_8 { pt3dadd( -46.1848, -25.5397, 4.38484, 0.48 ) }
    dend_8 { pt3dadd( -46.5157, -25.5606, 4.28565, 0.48 ) }
    dend_8 { pt3dadd( -47.7259, -25.7103, 4.00677, 0.48 ) }
    dend_8 { pt3dadd( -48.2629, -25.7917, 3.87846, 0.48 ) }
    dend_8 { pt3dadd( -49.6476, -26.0284, 3.56055, 0.48 ) }
    dend_8 { pt3dadd( -49.8828, -26.0675, 3.50552, 0.48 ) }
    dend_8 { pt3dadd( -51.1494, -26.2584, 3.18913, 0.48 ) }
    dend_8 { pt3dadd( -51.2275, -26.2694, 3.16731, 0.48 ) }
    dend_8 { pt3dadd( -53.5792, -26.5695, 2.42276, 0.48 ) }
    dend_8 { pt3dadd( -55.8479, -26.8556, 1.65737, 0.48 ) }
    dend_8 { pt3dadd( -56.0318, -26.8827, 1.59276, 0.48 ) }
    dend_8 { pt3dadd( -57.8202, -27.2711, 0.938735, 0.48 ) }
    dend_8 { pt3dadd( -58.0241, -27.3398, 0.865608, 0.48 ) }
    dend_8 { pt3dadd( -59.1412, -27.8426, 0.479305, 0.48 ) }
    dend_8 { pt3dadd( -59.2865, -27.9271, 0.430671, 0.48 ) }
    dend_8 { pt3dadd( -60.0053, -28.3535, 0.203138, 0.48 ) }
    dend_8 { pt3dadd( -61.6952, -29.3024, -0.275889, 0.48 ) }
    dend_8 { pt3dadd( -63.5373, -30.2202, -0.710332, 0.48 ) }
    dend_8 { pt3dadd( -63.7144, -30.2974, -0.748171, 0.48 ) }
    dend_8 { pt3dadd( -65.5652, -30.9885, -1.1078, 0.48 ) }
    dend_8 { pt3dadd( -67.946, -31.7205, -1.55687, 0.48 ) }
    dend_8 { pt3dadd( -68.1499, -31.7683, -1.59259, 0.48 ) }
    dend_8 { pt3dadd( -70.3999, -32.1337, -1.95374, 0.48 ) }
    dend_8 { pt3dadd( -70.6139, -32.1683, -1.98356, 0.48 ) }
    dend_8 { pt3dadd( -72.1225, -32.4897, -2.13452, 0.48 ) }
    dend_8 { pt3dadd( -72.4584, -32.57, -2.15735, 0.48 ) }
    dend_8 { pt3dadd( -73.569, -32.8531, -2.2176, 0.48 ) }
    dend_8 { pt3dadd( -73.6307, -32.8682, -2.22154, 0.48 ) }
    dend_8 { pt3dadd( -75.5932, -33.3342, -2.35561, 0.48 ) }
    dend_8 { pt3dadd( -77.1662, -33.6836, -2.46886, 0.48 ) }
    dend_8 { pt3dadd( -78.7935, -34.0621, -2.59697, 0.48 ) }
    dend_8 { pt3dadd( -79.1184, -34.1401, -2.62496, 0.48 ) }
    dend_8 { pt3dadd( -80.4987, -34.4746, -2.76296, 0.48 ) }
    dend_8 { pt3dadd( -80.6044, -34.5006, -2.77467, 0.48 ) }
    dend_8 { pt3dadd( -81.3759, -34.6698, -2.90187, 0.48 ) }
    dend_8 { pt3dadd( -82.6444, -34.9588, -3.18322, 0.48 ) }
    dend_8 { pt3dadd( -82.7958, -34.9894, -3.23156, 0.48 ) }
    dend_8 { pt3dadd( -84.0139, -35.1612, -3.70859, 0.48 ) }
    dend_8 { pt3dadd( -84.114, -35.1668, -3.75251, 0.48 ) }
    dend_8 { pt3dadd( -85.6159, -35.1557, -4.46874, 0.48 ) }
    dend_8 { pt3dadd( -85.9564, -35.1313, -4.65901, 0.48 ) }
    dend_8 { pt3dadd( -88.0061, -34.8835, -5.91876, 0.48 ) }
    dend_8 { pt3dadd( -88.0973, -34.8723, -5.97821, 0.48 ) }
    dend_8 { pt3dadd( -89.4631, -34.7044, -6.92994, 0.48 ) }
    dend_8 { pt3dadd( -89.7139, -34.6796, -7.10874, 0.48 ) }
    dend_8 { pt3dadd( -91.6467, -34.5391, -8.51975, 0.48 ) }
    dend_8 { pt3dadd( -91.7125, -34.535, -8.5681, 0.48 ) }
    dend_8 { pt3dadd( -93.0375, -34.496, -9.59675, 0.48 ) }
    dend_8 { pt3dadd( -93.2335, -34.4865, -9.75523, 0.48 ) }
    dend_8 { pt3dadd( -94.3313, -34.4119, -10.7258, 0.48 ) }
    dend_8 { pt3dadd( -94.3794, -34.4077, -10.7672, 0.48 ) }
    dend_8 { pt3dadd( -95.2974, -34.2905, -11.5545, 0.48 ) }
    dend_8 { pt3dadd( -95.4199, -34.272, -11.6613, 0.48 ) }
    dend_8 { pt3dadd( -96.0672, -34.1317, -12.275, 0.48 ) }
    dend_8 { pt3dadd( -96.3448, -34.0558, -12.5393, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 68/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -42.3089, -25.8661, 6.21116, 0.48 ) }
    dend_7 { pt3dadd( -43.5515, -26.3258, 6.68877, 0.48 ) }
    dend_7 { pt3dadd( -43.6819, -26.383, 6.72669, 0.48 ) }
    dend_7 { pt3dadd( -44.9964, -26.9752, 7.06951, 0.48 ) }
    dend_7 { pt3dadd( -45.1161, -27.0252, 7.09939, 0.48 ) }
    dend_7 { pt3dadd( -46.2873, -27.4902, 7.40048, 0.48 ) }
    dend_7 { pt3dadd( -46.5151, -27.5668, 7.46131, 0.48 ) }
    dend_7 { pt3dadd( -48.0465, -28.0069, 7.85917, 0.48 ) }
    dend_7 { pt3dadd( -48.2972, -28.0754, 7.91703, 0.48 ) }
    dend_7 { pt3dadd( -49.4743, -28.38, 8.1593, 0.48 ) }
    dend_7 { pt3dadd( -49.6946, -28.4286, 8.20536, 0.48 ) }
    dend_7 { pt3dadd( -51.2704, -28.7215, 8.5517, 0.48 ) }
    dend_7 { pt3dadd( -51.5096, -28.768, 8.59769, 0.48 ) }
    dend_7 { pt3dadd( -52.5676, -28.992, 8.77913, 0.48 ) }
    dend_7 { pt3dadd( -52.808, -29.0837, 8.80565, 0.48 ) }
    dend_7 { pt3dadd( -54.0459, -29.7644, 8.8638, 0.48 ) }
    dend_7 { pt3dadd( -54.245, -29.9122, 8.86571, 0.48 ) }
    dend_7 { pt3dadd( -54.9488, -30.5869, 8.84967, 0.48 ) }
    dend_7 { pt3dadd( -55.1202, -30.766, 8.84575, 0.48 ) }
    dend_7 { pt3dadd( -56.6098, -32.4676, 8.80534, 0.48 ) }
    dend_7 { pt3dadd( -56.7025, -32.5704, 8.80064, 0.48 ) }
    dend_7 { pt3dadd( -57.612, -33.5707, 8.73517, 0.48 ) }
    dend_7 { pt3dadd( -57.85, -33.7742, 8.71767, 0.48 ) }
    dend_7 { pt3dadd( -58.7231, -34.2403, 8.6007, 0.48 ) }
    dend_7 { pt3dadd( -58.826, -34.2773, 8.58219, 0.48 ) }
    dend_7 { pt3dadd( -59.962, -34.5579, 8.34317, 0.48 ) }
    dend_7 { pt3dadd( -60.1746, -34.6019, 8.29355, 0.48 ) }
    dend_7 { pt3dadd( -61.676, -34.8588, 7.9115, 0.48 ) }
    dend_7 { pt3dadd( -63.8013, -35.2096, 7.3695, 0.48 ) }
    dend_7 { pt3dadd( -65.6586, -35.5223, 6.89459, 0.48 ) }
    dend_7 { pt3dadd( -65.7289, -35.536, 6.8773, 0.48 ) }
    dend_7 { pt3dadd( -67.5403, -35.9978, 6.5231, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_7 { pt3dadd( -67.6457, -36.0281, 6.50696, 0.48 ) }
    dend_7 { pt3dadd( -69.5254, -36.6867, 6.3215, 0.48 ) }
    dend_7 { pt3dadd( -69.6289, -36.7264, 6.31739, 0.48 ) }
    dend_7 { pt3dadd( -70.3612, -37.0285, 6.29926, 0.48 ) }
    dend_7 { pt3dadd( -72.6444, -38.0899, 6.38918, 0.48 ) }
    dend_7 { pt3dadd( -72.7167, -38.1294, 6.39823, 0.48 ) }
    dend_7 { pt3dadd( -74.6707, -39.2785, 6.74866, 0.48 ) }
    dend_7 { pt3dadd( -74.7625, -39.3364, 6.77148, 0.48 ) }
    dend_7 { pt3dadd( -75.4986, -39.7838, 6.94923, 0.48 ) }
    dend_7 { pt3dadd( -77.0405, -40.7056, 7.28711, 0.48 ) }
    dend_7 { pt3dadd( -77.8803, -41.1798, 7.42857, 0.48 ) }
    dend_7 { pt3dadd( -78.0185, -41.2513, 7.44576, 0.48 ) }
    dend_7 { pt3dadd( -78.8038, -41.604, 7.49898, 0.48 ) }
    dend_7 { pt3dadd( -79.8235, -42.0064, 7.46302, 0.48 ) }
    dend_7 { pt3dadd( -80.4784, -42.2577, 7.36531, 0.48 ) }
    dend_7 { pt3dadd( -81.1925, -42.5905, 7.1517, 0.48 ) }
    dend_7 { pt3dadd( -81.4773, -42.7425, 7.07135, 0.48 ) }
    dend_7 { pt3dadd( -82.3083, -43.2338, 6.85741, 0.48 ) }
    dend_7 { pt3dadd( -82.5128, -43.3663, 6.81133, 0.48 ) }
    dend_7 { pt3dadd( -83.4311, -44.0259, 6.65322, 0.48 ) }
    dend_7 { pt3dadd( -85.3989, -45.5117, 6.37717, 0.48 ) }
    dend_7 { pt3dadd( -86.8937, -46.6754, 6.22264, 0.48 ) }
    dend_7 { pt3dadd( -87.0295, -46.7817, 6.20566, 0.48 ) }
    dend_7 { pt3dadd( -87.9388, -47.4858, 6.07474, 0.48 ) }
    dend_7 { pt3dadd( -88.9054, -48.193, 5.95115, 0.48 ) }
    dend_7 { pt3dadd( -89.0279, -48.2742, 5.94041, 0.48 ) }
    dend_7 { pt3dadd( -90.3012, -49.0266, 5.96301, 0.48 ) }
    dend_7 { pt3dadd( -91.7251, -49.7814, 6.09446, 0.48 ) }
    dend_7 { pt3dadd( -91.8257, -49.8249, 6.11125, 0.48 ) }
    dend_7 { pt3dadd( -92.7683, -50.1216, 6.36156, 0.48 ) }
    dend_7 { pt3dadd( -93.3526, -50.2353, 6.55806, 0.48 ) }
    dend_7 { pt3dadd( -94.1524, -50.3506, 6.88105, 0.48 ) }
    dend_7 { pt3dadd( -94.3081, -50.3586, 6.96577, 0.48 ) }
    dend_7 { pt3dadd( -94.8292, -50.3491, 7.337, 0.48 ) }
    dend_7 { pt3dadd( -95.0575, -50.3467, 7.4967, 0.48 ) }
    dend_7 { pt3dadd( -95.544, -50.3541, 7.80054, 0.48 ) }
    dend_7 { pt3dadd( -95.6173, -50.3575, 7.83918, 0.48 ) }
    dend_7 { pt3dadd( -103.647, -54.4654, 9.69662, 0.48 ) }
    dend_7 { pt3dadd( -111.856, -57.1674, 12.8769, 0.48 ) }
    dend_7 { pt3dadd( -119.529, -60.0102, 17.1013, 0.48 ) }
    dend_7 { pt3dadd( -127.057, -63.3261, 21.24, 0.48 ) }
    dend_7 { pt3dadd( -135.535, -66.1159, 23.5095, 0.48 ) }
    // Section: apic_21, id: apic_21, parent: apic_3 (entry count 42/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 0.0323418, 250.839, -16.5686, 0.84 ) }
    apic_21 { pt3dadd( -1.15033, 251.004, -7.78571, 0.6 ) }
    apic_21 { pt3dadd( -2.72672, 250.72, -5.06293, 0.6 ) }
    apic_21 { pt3dadd( -1.86952, 250.927, -5.36371, 0.6 ) }
    apic_21 { pt3dadd( -0.484498, 251.269, -5.74789, 0.6 ) }
    apic_21 { pt3dadd( 0.663246, 251.551, -6.03547, 0.6 ) }
    apic_21 { pt3dadd( 0.76302, 251.575, -6.05626, 0.6 ) }
    apic_21 { pt3dadd( 3.35261, 252.251, -6.87738, 0.6 ) }
    apic_21 { pt3dadd( 3.82783, 252.399, -6.96072, 0.6 ) }
    apic_21 { pt3dadd( 5.67512, 253.066, -7.22756, 0.6 ) }
    apic_21 { pt3dadd( 6.06816, 253.208, -7.26665, 0.6 ) }
    apic_21 { pt3dadd( 7.38152, 253.677, -7.38644, 0.6 ) }
    apic_21 { pt3dadd( 9.07653, 254.269, -7.5258, 0.6 ) }
    apic_21 { pt3dadd( 9.57979, 254.439, -7.56551, 0.6 ) }
    apic_21 { pt3dadd( 10.4896, 254.735, -7.55661, 0.6 ) }
    apic_21 { pt3dadd( 11.7594, 255.112, -7.33703, 0.6 ) }
    apic_21 { pt3dadd( 12.3905, 255.313, -7.11068, 0.6 ) }
    apic_21 { pt3dadd( 12.8525, 255.471, -6.83725, 0.6 ) }
    apic_21 { pt3dadd( 12.9951, 255.528, -6.712, 0.6 ) }
    apic_21 { pt3dadd( 14.0649, 256.078, -5.50471, 0.6 ) }
    apic_21 { pt3dadd( 14.7097, 256.481, -4.62546, 0.6 ) }
    apic_21 { pt3dadd( 15.7158, 257.179, -3.1156, 0.6 ) }
    apic_21 { pt3dadd( 15.9421, 257.31, -2.81808, 0.6 ) }
    apic_21 { pt3dadd( 16.8988, 257.8, -1.65712, 0.6 ) }
    apic_21 { pt3dadd( 17.7209, 258.184, -0.771161, 0.6 ) }
    apic_21 { pt3dadd( 19.0263, 258.732, 0.496637, 0.6 ) }
    apic_21 { pt3dadd( 19.5675, 258.914, 0.963422, 0.6 ) }
    apic_21 { pt3dadd( 21.7543, 259.458, 2.69322, 0.6 ) }
    apic_21 { pt3dadd( 22.2719, 259.568, 3.08788, 0.6 ) }
    apic_21 { pt3dadd( 23.8655, 259.852, 4.21122, 0.6 ) }
    apic_21 { pt3dadd( 24.4536, 259.965, 4.60575, 0.6 ) }
    apic_21 { pt3dadd( 25.5195, 260.207, 5.31788, 0.6 ) }
    apic_21 { pt3dadd( 26.1922, 260.418, 5.77457, 0.6 ) }
    apic_21 { pt3dadd( 27.0698, 260.778, 6.36907, 0.6 ) }
    apic_21 { pt3dadd( 27.7484, 261.081, 6.80331, 0.6 ) }
    apic_21 { pt3dadd( 28.8078, 261.601, 7.42867, 0.6 ) }
    apic_21 { pt3dadd( 29.0877, 261.753, 7.57798, 0.6 ) }
    apic_21 { pt3dadd( 30.2952, 262.463, 8.17128, 0.48 ) }
    apic_21 { pt3dadd( 32.1955, 263.598, 9.05717, 0.48 ) }
    apic_21 { pt3dadd( 32.8308, 263.969, 9.33588, 0.48 ) }
    apic_21 { pt3dadd( 34.4174, 264.87, 10.0164, 0.48 ) }
    apic_21 { pt3dadd( 35.7312, 265.546, 10.5502, 0.48 ) }
    apic_21 { pt3dadd( 37.0663, 266.173, 11.0829, 0.48 ) }
    apic_21 { pt3dadd( 38.1392, 266.576, 11.4983, 0.48 ) }
    apic_21 { pt3dadd( 39.3931, 266.944, 11.9541, 0.48 ) }
    apic_21 { pt3dadd( 39.6527, 266.991, 12.0475, 0.48 ) }
    apic_21 { pt3dadd( 40.9968, 267.085, 12.5506, 0.48 ) }
    apic_21 { pt3dadd( 41.5381, 267.083, 12.7507, 0.48 ) }
    apic_21 { pt3dadd( 43.4918, 267.02, 13.4555, 0.48 ) }
    apic_21 { pt3dadd( 44.0283, 267.014, 13.6467, 0.48 ) }
    apic_21 { pt3dadd( 45.6839, 267.041, 14.2645, 0.48 ) }
    apic_21 { pt3dadd( 46.0833, 267.055, 14.4305, 0.48 ) }
    apic_21 { pt3dadd( 47.6306, 267.146, 15.1504, 0.48 ) }
    apic_21 { pt3dadd( 48.4065, 267.176, 15.5345, 0.48 ) }
    apic_21 { pt3dadd( 49.3144, 267.212, 16.0028, 0.48 ) }
    apic_21 { pt3dadd( 49.4823, 267.216, 16.0828, 0.48 ) }
    apic_21 { pt3dadd( 51.5394, 267.251, 16.9676, 0.48 ) }
    apic_21 { pt3dadd( 51.7621, 267.253, 17.0356, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_21 { pt3dadd( 53.3334, 267.258, 17.3658, 0.48 ) }
    apic_21 { pt3dadd( 54.2145, 267.308, 17.4802, 0.48 ) }
    apic_21 { pt3dadd( 55.7355, 267.463, 17.6135, 0.48 ) }
    apic_21 { pt3dadd( 56.4372, 267.588, 17.6913, 0.48 ) }
    apic_21 { pt3dadd( 58.794, 268.217, 17.9749, 0.48 ) }
    apic_21 { pt3dadd( 59.0991, 268.309, 17.9894, 0.48 ) }
    apic_21 { pt3dadd( 61.2425, 269.053, 17.9498, 0.48 ) }
    apic_21 { pt3dadd( 61.6182, 269.173, 17.9246, 0.48 ) }
    apic_21 { pt3dadd( 64.0431, 269.926, 17.614, 0.48 ) }
    apic_21 { pt3dadd( 64.5281, 270.069, 17.5349, 0.48 ) }
    apic_21 { pt3dadd( 67.4729, 271.019, 16.9809, 0.48 ) }
    apic_21 { pt3dadd( 68.0611, 271.209, 16.8536, 0.48 ) }
    apic_21 { pt3dadd( 69.6478, 271.701, 16.4836, 0.48 ) }
    apic_21 { pt3dadd( 72.1639, 272.501, 15.9102, 0.48 ) }
    apic_21 { pt3dadd( 72.3251, 272.56, 15.8775, 0.48 ) }
    apic_21 { pt3dadd( 74.6079, 273.482, 15.6113, 0.48 ) }
    apic_21 { pt3dadd( 76.0351, 274.064, 15.5353, 0.48 ) }
    apic_21 { pt3dadd( 77.3372, 274.574, 15.4552, 0.48 ) }
    apic_21 { pt3dadd( 77.7096, 274.7, 15.4095, 0.48 ) }
    apic_21 { pt3dadd( 79.7966, 275.256, 15.1215, 0.48 ) }
    apic_21 { pt3dadd( 80.4848, 275.411, 15.0126, 0.48 ) }
    apic_21 { pt3dadd( 83.8263, 275.888, 14.4557, 0.48 ) }
    apic_21 { pt3dadd( 85.2127, 275.993, 14.2425, 0.48 ) }
    apic_21 { pt3dadd( 88.3606, 276.084, 13.7982, 0.48 ) }
    apic_21 { pt3dadd( 91.156, 276.092, 13.4521, 0.48 ) }
    apic_21 { pt3dadd( 91.9695, 276.07, 13.3628, 0.48 ) }
    apic_21 { pt3dadd( 95.2006, 275.922, 13.1111, 0.48 ) }
    apic_21 { pt3dadd( 97.9436, 275.679, 13.0417, 0.48 ) }
    apic_21 { pt3dadd( 98.6563, 275.589, 13.0429, 0.48 ) }
    apic_21 { pt3dadd( 100.624, 275.286, 13.1576, 0.48 ) }
    apic_21 { pt3dadd( 100.796, 275.255, 13.1689, 0.48 ) }
    apic_21 { pt3dadd( 102.673, 274.966, 13.2896, 0.48 ) }
    apic_21 { pt3dadd( 104.757, 274.729, 13.2588, 0.48 ) }
    apic_21 { pt3dadd( 105.035, 274.696, 13.2364, 0.48 ) }
    apic_21 { pt3dadd( 107.796, 274.318, 12.8938, 0.48 ) }
    apic_21 { pt3dadd( 108.476, 274.206, 12.7731, 0.48 ) }
    apic_21 { pt3dadd( 110.283, 273.931, 12.3905, 0.48 ) }
    apic_21 { pt3dadd( 113.266, 273.598, 11.6533, 0.48 ) }
    apic_21 { pt3dadd( 114.689, 273.47, 11.2268, 0.48 ) }
    apic_21 { pt3dadd( 115.072, 273.426, 11.0932, 0.48 ) }
    apic_21 { pt3dadd( 118.022, 272.99, 9.90355, 0.48 ) }
    apic_21 { pt3dadd( 118.547, 272.885, 9.68848, 0.48 ) }
    apic_21 { pt3dadd( 120.294, 272.482, 9.04715, 0.48 ) }
    apic_21 { pt3dadd( 121.544, 272.194, 8.60795, 0.48 ) }
    apic_21 { pt3dadd( 123.458, 271.798, 7.95571, 0.48 ) }
    apic_21 { pt3dadd( 123.609, 271.768, 7.90682, 0.48 ) }
    apic_21 { pt3dadd( 127.306, 271.04, 6.76413, 0.48 ) }
    apic_21 { pt3dadd( 129.595, 270.597, 6.10092, 0.48 ) }
    apic_21 { pt3dadd( 131.07, 270.332, 5.72373, 0.48 ) }
    apic_21 { pt3dadd( 133.693, 269.959, 5.17668, 0.48 ) }
    apic_21 { pt3dadd( 134.016, 269.93, 5.11334, 0.48 ) }
    apic_21 { pt3dadd( 135.651, 269.855, 4.79256, 0.48 ) }
    apic_21 { pt3dadd( 136.267, 269.872, 4.68024, 0.48 ) }
    apic_21 { pt3dadd( 137.142, 269.898, 4.51942, 0.48 ) }
    apic_21 { pt3dadd( 138.051, 269.934, 4.39198, 0.48 ) }
    apic_21 { pt3dadd( 139.094, 269.984, 4.23874, 0.48 ) }
    apic_21 { pt3dadd( 140.946, 270.236, 3.90308, 0.48 ) }
    apic_21 { pt3dadd( 143.726, 270.817, 3.33832, 0.48 ) }
    apic_21 { pt3dadd( 143.911, 270.875, 3.29853, 0.48 ) }
    apic_21 { pt3dadd( 145.6, 271.565, 2.9023, 0.48 ) }
    apic_21 { pt3dadd( 145.906, 271.72, 2.82563, 0.48 ) }
    apic_21 { pt3dadd( 149.371, 273.818, 1.91531, 0.48 ) }
    apic_21 { pt3dadd( 150.004, 274.276, 1.7504, 0.48 ) }
    apic_21 { pt3dadd( 151.638, 275.589, 1.32109, 0.48 ) }
    apic_21 { pt3dadd( 152.329, 276.126, 1.17722, 0.48 ) }
    apic_21 { pt3dadd( 153.85, 277.312, 0.951375, 0.48 ) }
    apic_21 { pt3dadd( 154.008, 277.431, 0.938185, 0.48 ) }
    apic_21 { pt3dadd( 156.69, 279.399, 0.895866, 0.48 ) }
    apic_21 { pt3dadd( 156.851, 279.514, 0.896972, 0.48 ) }
    apic_21 { pt3dadd( 159.368, 281.327, 0.973622, 0.48 ) }
    apic_21 { pt3dadd( 162.567, 283.771, 1.1608, 0.48 ) }
    apic_21 { pt3dadd( 163.152, 284.244, 1.20792, 0.48 ) }
    apic_21 { pt3dadd( 164.232, 285.13, 1.28652, 0.48 ) }
    apic_21 { pt3dadd( 165.045, 285.817, 1.34033, 0.48 ) }
    apic_21 { pt3dadd( 166.46, 287.097, 1.43407, 0.48 ) }
    apic_21 { pt3dadd( 166.743, 287.373, 1.45284, 0.48 ) }
    apic_21 { pt3dadd( 167.94, 288.488, 1.55487, 0.48 ) }
    apic_21 { pt3dadd( 170.38, 290.639, 1.77775, 0.48 ) }
    apic_21 { pt3dadd( 170.612, 290.833, 1.7992, 0.48 ) }
    apic_21 { pt3dadd( 173.207, 293.049, 2.04626, 0.48 ) }
    apic_21 { pt3dadd( 173.445, 293.251, 2.06999, 0.48 ) }
    apic_21 { pt3dadd( 174.936, 294.518, 2.19016, 0.48 ) }
    apic_21 { pt3dadd( 176.67, 295.974, 2.30014, 0.48 ) }
    apic_21 { pt3dadd( 176.742, 296.033, 2.30405, 0.48 ) }
    apic_21 { pt3dadd( 178.883, 297.775, 2.37958, 0.48 ) }
    apic_21 { pt3dadd( 178.993, 297.861, 2.38401, 0.48 ) }
    apic_21 { pt3dadd( 180.615, 299.185, 2.52038, 0.48 ) }
    apic_21 { pt3dadd( 181.499, 299.97, 2.65248, 0.48 ) }
    apic_21 { pt3dadd( 182.382, 300.754, 2.84572, 0.48 ) }
    apic_21 { pt3dadd( 182.746, 301.079, 2.97609, 0.48 ) }
    apic_21 { pt3dadd( 183.74, 301.95, 3.51468, 0.48 ) }
    apic_21 { pt3dadd( 184.37, 302.545, 3.98326, 0.48 ) }
    apic_21 { pt3dadd( 185.932, 304.148, 5.52197, 0.48 ) }
    apic_21 { pt3dadd( 186.156, 304.39, 5.76497, 0.48 ) }
    apic_21 { pt3dadd( 187.202, 305.564, 6.94422, 0.48 ) }
    apic_21 { pt3dadd( 187.686, 306.137, 7.49093, 0.48 ) }
    apic_21 { pt3dadd( 188.6, 307.258, 8.53713, 0.48 ) }
    apic_21 { pt3dadd( 189.033, 307.798, 9.03216, 0.48 ) }
    apic_21 { pt3dadd( 189.599, 308.552, 9.79737, 0.48 ) }
    apic_21 { pt3dadd( 189.966, 309.029, 10.2511, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_21 { pt3dadd( 190.241, 309.366, 10.4965, 0.48 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 1/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.0323418, 250.839, -16.5686, 0.84 ) }
    apic_4 { pt3dadd( -0.333685, 254.069, -16.1476, 0.84 ) }
    apic_4 { pt3dadd( -0.335087, 254.154, -16.1484, 0.84 ) }
    apic_4 { pt3dadd( -0.295879, 256.357, -16.2585, 0.84 ) }
    apic_4 { pt3dadd( -0.214173, 258.67, -16.4116, 0.84 ) }
    apic_4 { pt3dadd( -0.21131, 258.798, -16.4209, 0.84 ) }
    apic_4 { pt3dadd( -0.180951, 260.596, -16.5558, 0.84 ) }
    apic_4 { pt3dadd( -0.0771442, 264.219, -16.9752, 0.84 ) }
    apic_4 { pt3dadd( -0.0539212, 264.872, -17.0438, 0.84 ) }
    apic_4 { pt3dadd( 0.0479658, 266.809, -17.2081, 0.84 ) }
    apic_4 { pt3dadd( 0.294548, 271.029, -17.5116, 0.84 ) }
    apic_4 { pt3dadd( 0.300597, 271.157, -17.5176, 0.84 ) }
    apic_4 { pt3dadd( 0.351362, 273.555, -17.52, 0.84 ) }
    apic_4 { pt3dadd( 0.345404, 273.96, -17.5006, 0.84 ) }
    apic_4 { pt3dadd( 0.317127, 276.03, -17.365, 0.84 ) }
    apic_4 { pt3dadd( 0.27517, 279.637, -17.058, 0.84 ) }
    apic_4 { pt3dadd( 0.26969, 280.43, -16.976, 0.84 ) }
    apic_4 { pt3dadd( 0.230487, 282.779, -16.7242, 0.84 ) }
    apic_4 { pt3dadd( 0.221642, 283.033, -16.6972, 0.84 ) }
    apic_4 { pt3dadd( 0.111291, 286.571, -16.3438, 0.84 ) }
    apic_4 { pt3dadd( 0.107586, 286.699, -16.3317, 0.84 ) }
    apic_4 { pt3dadd( 0.0876298, 288.109, -16.2294, 0.84 ) }
    apic_4 { pt3dadd( 0.0871928, 288.183, -16.227, 0.84 ) }
    apic_4 { pt3dadd( 0.0299738, 289.731, -16.2516, 0.84 ) }
    apic_4 { pt3dadd( -0.162872, 292.365, -16.3507, 0.84 ) }
    apic_4 { pt3dadd( -0.179575, 292.491, -16.3593, 0.84 ) }
    apic_4 { pt3dadd( -0.817092, 296.274, -16.6897, 0.84 ) }
    apic_4 { pt3dadd( -0.865482, 296.524, -16.7153, 0.84 ) }
    apic_4 { pt3dadd( -1.3322, 298.697, -16.9663, 0.84 ) }
    apic_4 { pt3dadd( -1.35787, 298.821, -16.9824, 0.84 ) }
    apic_4 { pt3dadd( -1.55191, 299.902, -17.1291, 0.84 ) }
    apic_4 { pt3dadd( -1.62625, 300.465, -17.1978, 0.84 ) }
    apic_4 { pt3dadd( -1.75165, 301.606, -17.3285, 0.84 ) }
    apic_4 { pt3dadd( -1.76807, 301.732, -17.3424, 0.84 ) }
    apic_4 { pt3dadd( -2.07817, 304.261, -17.6512, 0.84 ) }
    apic_4 { pt3dadd( -2.40813, 306.915, -18.0115, 0.84 ) }
    apic_4 { pt3dadd( -2.45655, 307.313, -18.0675, 0.84 ) }
    apic_4 { pt3dadd( -2.63303, 309.283, -18.4142, 0.84 ) }
    apic_4 { pt3dadd( -2.76783, 310.99, -18.7646, 0.84 ) }
    apic_4 { pt3dadd( -2.88418, 313.146, -19.2268, 0.84 ) }
    apic_4 { pt3dadd( -2.94596, 314.931, -19.6447, 0.84 ) }
    apic_4 { pt3dadd( -2.93327, 315.329, -19.7465, 0.84 ) }
    apic_4 { pt3dadd( -2.65683, 318.499, -20.5751, 0.84 ) }
    apic_4 { pt3dadd( -2.61979, 318.744, -20.6387, 0.84 ) }
    apic_4 { pt3dadd( -2.3071, 320.988, -21.2418, 0.84 ) }
    apic_4 { pt3dadd( -2.28991, 321.161, -21.2898, 0.84 ) }
    apic_4 { pt3dadd( -2.18677, 323.462, -21.9596, 0.84 ) }
    apic_4 { pt3dadd( -2.18866, 323.544, -21.9816, 0.84 ) }
    apic_4 { pt3dadd( -2.40818, 326.085, -22.5891, 0.84 ) }
    apic_4 { pt3dadd( -2.66341, 328.66, -23.1314, 0.84 ) }
    apic_4 { pt3dadd( -2.67779, 328.785, -23.1552, 0.84 ) }
    apic_4 { pt3dadd( -2.85246, 330.18, -23.3761, 0.84 ) }
    apic_4 { pt3dadd( -3.27366, 333.215, -23.7548, 0.84 ) }
    apic_4 { pt3dadd( -3.32523, 333.614, -23.7962, 0.84 ) }
    apic_4 { pt3dadd( -3.586, 336.562, -24.0031, 0.84 ) }
    apic_4 { pt3dadd( -3.59637, 336.818, -24.0115, 0.84 ) }
    apic_4 { pt3dadd( -3.61151, 337.722, -24.0257, 0.84 ) }
    apic_4 { pt3dadd( -3.61033, 337.85, -24.0255, 0.84 ) }
    apic_4 { pt3dadd( -3.56229, 339.793, -24.0058, 0.84 ) }
    apic_4 { pt3dadd( -3.5047, 342.434, -23.9769, 0.84 ) }
    apic_4 { pt3dadd( -3.50117, 342.818, -23.9751, 0.84 ) }
    apic_4 { pt3dadd( -3.50724, 344.788, -23.967, 0.84 ) }
    apic_4 { pt3dadd( -3.50987, 345.044, -23.9583, 0.84 ) }
    apic_4 { pt3dadd( -3.57033, 347.61, -23.8167, 0.84 ) }
    apic_4 { pt3dadd( -3.58266, 347.994, -23.7901, 0.84 ) }
    apic_4 { pt3dadd( -3.65819, 349.927, -23.665, 0.84 ) }
    apic_4 { pt3dadd( -3.65727, 350.012, -23.662, 0.84 ) }
    apic_4 { pt3dadd( -3.53368, 352.599, -23.6013, 0.84 ) }
    apic_4 { pt3dadd( -3.52376, 352.727, -23.6019, 0.84 ) }
    apic_4 { pt3dadd( -3.32159, 354.342, -23.691, 0.84 ) }
    apic_4 { pt3dadd( -3.26731, 354.729, -23.7411, 0.84 ) }
    apic_4 { pt3dadd( -2.83238, 357.407, -24.3076, 0.84 ) }
    apic_4 { pt3dadd( -2.81414, 357.527, -24.3454, 0.84 ) }
    apic_4 { pt3dadd( -2.64383, 358.788, -24.8851, 0.84 ) }
    apic_4 { pt3dadd( -2.53546, 359.534, -25.2584, 0.84 ) }
    apic_4 { pt3dadd( -2.32132, 360.862, -26.0429, 0.84 ) }
    apic_4 { pt3dadd( -2.27051, 361.112, -26.1933, 0.84 ) }
    apic_4 { pt3dadd( -2.01033, 362.305, -27.0114, 0.84 ) }
    apic_4 { pt3dadd( -1.93072, 362.622, -27.2294, 0.84 ) }
    apic_4 { pt3dadd( -1.45214, 364.144, -28.2647, 0.84 ) }
    apic_4 { pt3dadd( -1.29118, 364.603, -28.5553, 0.84 ) }
    apic_4 { pt3dadd( -0.551412, 366.213, -29.5767, 0.84 ) }
    // Section: apic_20, id: apic_20, parent: apic_4 (entry count 83/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -0.551412, 366.213, -29.5767, 0.84 ) }
    apic_20 { pt3dadd( 0.0837038, 366.728, -29.7631, 0.48 ) }
    apic_20 { pt3dadd( 0.662682, 367.279, -30.0279, 0.48 ) }
    apic_20 { pt3dadd( 0.718574, 367.352, -30.0886, 0.48 ) }
    apic_20 { pt3dadd( 1.0513, 367.968, -30.8318, 0.48 ) }
    apic_20 { pt3dadd( 1.07738, 368.032, -30.9175, 0.48 ) }
    apic_20 { pt3dadd( 1.4556, 368.875, -32.0719, 0.48 ) }
    apic_20 { pt3dadd( 1.66899, 369.436, -32.8432, 0.48 ) }
    apic_20 { pt3dadd( 2.07621, 370.43, -34.2302, 0.48 ) }
    apic_20 { pt3dadd( 2.35115, 371.027, -35.0765, 0.48 ) }
    apic_20 { pt3dadd( 2.69151, 371.734, -36.056, 0.48 ) }
    apic_20 { pt3dadd( 3.08667, 372.509, -37.0929, 0.48 ) }
    apic_20 { pt3dadd( 3.13238, 372.605, -37.2062, 0.48 ) }
    apic_20 { pt3dadd( 3.63245, 373.676, -38.2105, 0.48 ) }
    apic_20 { pt3dadd( 3.78993, 374.023, -38.4633, 0.48 ) }
    apic_20 { pt3dadd( 4.23913, 375.158, -39.1993, 0.48 ) }
    apic_20 { pt3dadd( 4.30352, 375.357, -39.328, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_20 { pt3dadd( 4.77458, 377.19, -40.5192, 0.48 ) }
    apic_20 { pt3dadd( 4.84773, 377.455, -40.7017, 0.48 ) }
    apic_20 { pt3dadd( 5.16791, 378.599, -41.5137, 0.48 ) }
    apic_20 { pt3dadd( 5.38832, 379.254, -41.9812, 0.48 ) }
    apic_20 { pt3dadd( 5.70844, 380.039, -42.5751, 0.48 ) }
    apic_20 { pt3dadd( 5.74937, 380.118, -42.6392, 0.48 ) }
    apic_20 { pt3dadd( 6.47697, 381.242, -43.632, 0.48 ) }
    apic_20 { pt3dadd( 6.60203, 381.403, -43.7695, 0.48 ) }
    apic_20 { pt3dadd( 7.16991, 382.075, -44.3273, 0.48 ) }
    apic_20 { pt3dadd( 7.44231, 382.391, -44.5704, 0.48 ) }
    apic_20 { pt3dadd( 8.77722, 383.935, -45.7071, 0.48 ) }
    apic_20 { pt3dadd( 9.00335, 384.212, -45.9063, 0.48 ) }
    apic_20 { pt3dadd( 10.667, 386.22, -47.3251, 0.48 ) }
    apic_20 { pt3dadd( 10.7707, 386.342, -47.4141, 0.48 ) }
    apic_20 { pt3dadd( 11.5233, 387.167, -48.0596, 0.48 ) }
    apic_20 { pt3dadd( 11.5886, 387.237, -48.1143, 0.48 ) }
    apic_20 { pt3dadd( 12.6403, 388.396, -49.0388, 0.48 ) }
    apic_20 { pt3dadd( 13.61, 389.54, -50.001, 0.48 ) }
    apic_20 { pt3dadd( 13.796, 389.793, -50.221, 0.48 ) }
    apic_20 { pt3dadd( 14.8703, 391.339, -51.5762, 0.48 ) }
    apic_20 { pt3dadd( 14.9661, 391.487, -51.7083, 0.48 ) }
    apic_20 { pt3dadd( 15.5989, 392.542, -52.6703, 0.48 ) }
    apic_20 { pt3dadd( 15.8464, 392.942, -53.077, 0.48 ) }
    apic_20 { pt3dadd( 16.479, 394.03, -54.2746, 0.48 ) }
    apic_20 { pt3dadd( 16.7324, 394.455, -54.7907, 0.48 ) }
    apic_20 { pt3dadd( 17.1952, 395.242, -55.8875, 0.48 ) }
    apic_20 { pt3dadd( 17.2237, 395.288, -55.95, 0.48 ) }
    apic_20 { pt3dadd( 17.816, 396.327, -57.3215, 0.48 ) }
    apic_20 { pt3dadd( 17.9294, 396.563, -57.6023, 0.48 ) }
    apic_20 { pt3dadd( 18.1337, 397.207, -58.2789, 0.48 ) }
    apic_20 { pt3dadd( 18.1415, 397.261, -58.3403, 0.48 ) }
    apic_20 { pt3dadd( 18.2936, 398.663, -59.9943, 0.48 ) }
    apic_20 { pt3dadd( 18.3812, 399.843, -61.434, 0.48 ) }
    apic_20 { pt3dadd( 18.3874, 400.019, -61.6381, 0.48 ) }
    apic_20 { pt3dadd( 18.4516, 401.421, -63.258, 0.48 ) }
    apic_20 { pt3dadd( 18.5596, 403.709, -65.834, 0.48 ) }
    apic_20 { pt3dadd( 18.6206, 404.532, -66.7496, 0.48 ) }
    apic_20 { pt3dadd( 18.6724, 405.098, -67.395, 0.48 ) }
    apic_20 { pt3dadd( 18.814, 406.117, -68.4657, 0.48 ) }
    apic_20 { pt3dadd( 18.8258, 406.197, -68.5401, 0.48 ) }
    apic_20 { pt3dadd( 18.9654, 407.501, -69.6604, 0.48 ) }
    apic_20 { pt3dadd( 19.0477, 408.862, -70.6856, 0.48 ) }
    apic_20 { pt3dadd( 19.0365, 409.49, -71.1792, 0.48 ) }
    apic_20 { pt3dadd( 18.9964, 410.427, -71.951, 0.48 ) }
    apic_20 { pt3dadd( 18.9484, 410.936, -72.4237, 0.48 ) }
    apic_20 { pt3dadd( 18.7023, 412.851, -74.2223, 0.48 ) }
    apic_20 { pt3dadd( 18.6843, 412.955, -74.3232, 0.48 ) }
    apic_20 { pt3dadd( 18.4782, 414.206, -75.5391, 0.48 ) }
    apic_20 { pt3dadd( 18.4716, 414.259, -75.5898, 0.48 ) }
    apic_20 { pt3dadd( 18.405, 415.995, -77.2399, 0.48 ) }
    apic_20 { pt3dadd( 18.4741, 417.392, -78.5388, 0.48 ) }
    apic_20 { pt3dadd( 18.4848, 417.453, -78.5925, 0.48 ) }
    apic_20 { pt3dadd( 18.7961, 418.977, -79.9484, 0.48 ) }
    apic_20 { pt3dadd( 18.8625, 419.258, -80.2114, 0.48 ) }
    apic_20 { pt3dadd( 19.1714, 420.312, -81.2523, 0.48 ) }
    apic_20 { pt3dadd( 19.1983, 420.385, -81.3298, 0.48 ) }
    apic_20 { pt3dadd( 19.8201, 422.073, -83.2417, 0.48 ) }
    apic_20 { pt3dadd( 20.0598, 422.825, -84.0964, 0.48 ) }
    apic_20 { pt3dadd( 20.1286, 423.121, -84.4369, 0.48 ) }
    apic_20 { pt3dadd( 20.3535, 424.483, -86.0389, 0.48 ) }
    apic_20 { pt3dadd( 20.3642, 424.787, -86.4143, 0.48 ) }
    apic_20 { pt3dadd( 20.3292, 425.716, -87.6008, 0.48 ) }
    apic_20 { pt3dadd( 20.3052, 425.915, -87.8704, 0.48 ) }
    apic_20 { pt3dadd( 20.2383, 426.535, -88.7298, 0.48 ) }
    apic_20 { pt3dadd( 20.2119, 426.735, -89.045, 0.48 ) }
    apic_20 { pt3dadd( 19.9722, 428.134, -91.5181, 0.48 ) }
    apic_20 { pt3dadd( 19.9473, 428.39, -92.0049, 0.48 ) }
    apic_20 { pt3dadd( 19.9405, 429.001, -93.2561, 0.48 ) }
    apic_20 { pt3dadd( 19.9432, 429.218, -93.6979, 0.48 ) }
    apic_20 { pt3dadd( 19.9763, 430.478, -96.319, 0.48 ) }
    apic_20 { pt3dadd( 19.9954, 430.721, -96.8184, 0.48 ) }
    apic_20 { pt3dadd( 20.0367, 431.025, -97.4529, 0.48 ) }
    apic_20 { pt3dadd( 20.1895, 431.551, -98.626, 0.48 ) }
    apic_20 { pt3dadd( 20.5129, 432.334, -100.445, 0.48 ) }
    apic_20 { pt3dadd( 20.6441, 432.607, -101.08, 0.48 ) }
    apic_20 { pt3dadd( 20.9392, 433.086, -102.141, 0.48 ) }
    apic_20 { pt3dadd( 20.9735, 433.139, -102.257, 0.48 ) }
    apic_20 { pt3dadd( 21.7003, 434.158, -104.517, 0.48 ) }
    apic_20 { pt3dadd( 21.8013, 434.276, -104.731, 0.48 ) }
    apic_20 { pt3dadd( 21.8705, 434.355, -104.846, 0.48 ) }
    apic_20 { pt3dadd( 21.9207, 434.424, -104.916, 0.48 ) }
    apic_20 { pt3dadd( 22.7093, 435.665, -105.927, 0.48 ) }
    apic_20 { pt3dadd( 22.7952, 435.829, -106.033, 0.48 ) }
    apic_20 { pt3dadd( 23.669, 437.652, -106.951, 0.48 ) }
    apic_20 { pt3dadd( 23.7727, 437.86, -107.053, 0.48 ) }
    apic_20 { pt3dadd( 24.9579, 440.077, -108.146, 0.48 ) }
    apic_20 { pt3dadd( 25.1024, 440.336, -108.272, 0.48 ) }
    apic_20 { pt3dadd( 25.7417, 441.339, -108.686, 0.48 ) }
    apic_20 { pt3dadd( 27.0322, 443.272, -109.356, 0.48 ) }
    apic_20 { pt3dadd( 27.0771, 443.339, -109.373, 0.48 ) }
    apic_20 { pt3dadd( 28.5626, 445.625, -109.801, 0.48 ) }
    apic_20 { pt3dadd( 28.6927, 445.832, -109.827, 0.48 ) }
    apic_20 { pt3dadd( 30.0609, 448.013, -110.037, 0.48 ) }
    apic_20 { pt3dadd( 30.2821, 448.344, -110.064, 0.48 ) }
    apic_20 { pt3dadd( 31.5681, 450.268, -110.21, 0.48 ) }
    apic_20 { pt3dadd( 32.9593, 452.315, -110.375, 0.48 ) }
    apic_20 { pt3dadd( 33.0234, 452.404, -110.381, 0.48 ) }
    apic_20 { pt3dadd( 33.3029, 452.783, -110.43, 0.48 ) }
    apic_20 { pt3dadd( 34.9569, 455.021, -110.995, 0.48 ) }
    apic_20 { pt3dadd( 36.0303, 456.392, -111.446, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    apic_20 { pt3dadd( 36.1165, 456.49, -111.488, 0.48 ) }
    apic_20 { pt3dadd( 37.4459, 457.882, -112.241, 0.48 ) }
    apic_20 { pt3dadd( 37.9546, 458.39, -112.591, 0.48 ) }
    apic_20 { pt3dadd( 39.1036, 459.505, -113.518, 0.48 ) }
    apic_20 { pt3dadd( 39.21, 459.606, -113.616, 0.48 ) }
    apic_20 { pt3dadd( 39.8717, 460.28, -114.318, 0.48 ) }
    apic_20 { pt3dadd( 39.997, 460.414, -114.46, 0.48 ) }
    apic_20 { pt3dadd( 41.7059, 462.38, -116.409, 0.48 ) }
    apic_20 { pt3dadd( 41.7883, 462.477, -116.498, 0.48 ) }
    apic_20 { pt3dadd( 42.7991, 463.806, -117.651, 0.48 ) }
    apic_20 { pt3dadd( 44.392, 466.118, -119.596, 0.48 ) }
    apic_20 { pt3dadd( 44.4613, 466.238, -119.682, 0.48 ) }
    apic_20 { pt3dadd( 45.2746, 467.814, -120.71, 0.48 ) }
    apic_20 { pt3dadd( 45.4429, 468.177, -120.93, 0.48 ) }
    apic_20 { pt3dadd( 46.4432, 470.356, -122.247, 0.48 ) }
    apic_20 { pt3dadd( 46.502, 470.48, -122.321, 0.48 ) }
    apic_20 { pt3dadd( 48.0661, 473.532, -124.069, 0.48 ) }
    apic_20 { pt3dadd( 48.2458, 473.845, -124.253, 0.48 ) }
    apic_20 { pt3dadd( 49.3212, 475.552, -125.335, 0.48 ) }
    apic_20 { pt3dadd( 49.4121, 475.674, -125.423, 0.48 ) }
    apic_20 { pt3dadd( 50.5779, 476.975, -126.524, 0.48 ) }
    apic_20 { pt3dadd( 50.6582, 477.056, -126.614, 0.48 ) }
    apic_20 { pt3dadd( 51.7357, 477.992, -128.051, 0.48 ) }
    apic_20 { pt3dadd( 52.2096, 478.404, -128.733, 0.48 ) }
    apic_20 { pt3dadd( 53.4135, 479.479, -130.829, 0.48 ) }
    apic_20 { pt3dadd( 53.4584, 479.52, -130.921, 0.48 ) }
    apic_20 { pt3dadd( 54.2938, 480.31, -132.953, 0.48 ) }
    apic_20 { pt3dadd( 54.3492, 480.363, -133.088, 0.48 ) }
    apic_20 { pt3dadd( 54.63, 480.639, -133.814, 0.48 ) }
    apic_20 { pt3dadd( 55.2363, 481.267, -135.255, 0.48 ) }
    apic_20 { pt3dadd( 56.074, 482.229, -137.201, 0.48 ) }
    apic_20 { pt3dadd( 56.2633, 482.468, -137.615, 0.48 ) }
    apic_20 { pt3dadd( 56.696, 483.075, -138.583, 0.48 ) }
    apic_20 { pt3dadd( 56.804, 483.24, -138.847, 0.48 ) }
    apic_20 { pt3dadd( 57.7991, 484.882, -141.436, 0.48 ) }
    apic_20 { pt3dadd( 57.9279, 485.15, -141.828, 0.48 ) }
    apic_20 { pt3dadd( 58.2463, 486.031, -143.075, 0.48 ) }
    apic_20 { pt3dadd( 58.5417, 487.008, -144.33, 0.48 ) }
    apic_20 { pt3dadd( 58.8402, 488.241, -145.846, 0.48 ) }
    apic_20 { pt3dadd( 58.8496, 488.291, -145.899, 0.48 ) }
    apic_20 { pt3dadd( 59.3349, 491.319, -148.553, 0.48 ) }
    apic_20 { pt3dadd( 59.4102, 491.801, -148.905, 0.48 ) }
    apic_20 { pt3dadd( 59.671, 493.49, -149.923, 0.48 ) }
    apic_20 { pt3dadd( 59.7497, 494.043, -150.178, 0.48 ) }
    apic_20 { pt3dadd( 60.2157, 498.041, -151.622, 0.48 ) }
    apic_20 { pt3dadd( 60.3249, 499.116, -151.892, 0.48 ) }
    apic_20 { pt3dadd( 60.5134, 501.242, -152.109, 0.48 ) }
    apic_20 { pt3dadd( 60.5397, 501.577, -152.129, 0.48 ) }
    apic_20 { pt3dadd( 60.659, 503.003, -152.146, 0.48 ) }
    apic_20 { pt3dadd( 60.6707, 503.112, -152.149, 0.48 ) }
    apic_20 { pt3dadd( 60.9666, 505.582, -152.211, 0.48 ) }
    apic_20 { pt3dadd( 61.3949, 508.595, -152.418, 0.48 ) }
    apic_20 { pt3dadd( 61.4533, 508.936, -152.449, 0.48 ) }
    apic_20 { pt3dadd( 61.8799, 511.126, -152.683, 0.48 ) }
    apic_20 { pt3dadd( 62.7712, 515.322, -153.209, 0.48 ) }
    apic_20 { pt3dadd( 62.8228, 515.586, -153.249, 0.48 ) }
    apic_20 { pt3dadd( 63.2676, 517.974, -153.695, 0.48 ) }
    apic_20 { pt3dadd( 63.3784, 518.748, -153.829, 0.48 ) }
    apic_20 { pt3dadd( 63.6518, 521.44, -154.242, 0.48 ) }
    apic_20 { pt3dadd( 63.6604, 521.658, -154.275, 0.48 ) }
    apic_20 { pt3dadd( 63.6118, 526.308, -154.957, 0.48 ) }
    apic_20 { pt3dadd( 63.6042, 526.634, -155.006, 0.48 ) }
    apic_20 { pt3dadd( 63.4312, 530.567, -155.598, 0.48 ) }
    apic_20 { pt3dadd( 63.4167, 531.116, -155.683, 0.48 ) }
    apic_20 { pt3dadd( 63.4076, 533.819, -156.118, 0.48 ) }
    apic_20 { pt3dadd( 63.4182, 534.03, -156.154, 0.48 ) }
    apic_20 { pt3dadd( 63.7925, 537.041, -156.681, 0.48 ) }
    apic_20 { pt3dadd( 63.8168, 537.205, -156.709, 0.48 ) }
    apic_20 { pt3dadd( 64.0462, 538.664, -156.982, 0.48 ) }
    apic_20 { pt3dadd( 64.0676, 538.816, -157.008, 0.48 ) }
    apic_20 { pt3dadd( 64.2741, 540.881, -157.292, 0.48 ) }
    apic_20 { pt3dadd( 64.2871, 541.208, -157.336, 0.48 ) }
    apic_20 { pt3dadd( 64.075, 544.594, -157.9, 0.48 ) }
    apic_20 { pt3dadd( 63.7374, 547.371, -158.386, 0.48 ) }
    apic_20 { pt3dadd( 63.6528, 547.806, -158.459, 0.48 ) }
    apic_20 { pt3dadd( 63.1352, 550.037, -158.86, 0.48 ) }
    apic_20 { pt3dadd( 62.9947, 550.552, -158.955, 0.48 ) }
    apic_20 { pt3dadd( 62.316, 553.053, -159.458, 0.48 ) }
    apic_20 { pt3dadd( 62.2717, 553.211, -159.496, 0.48 ) }
    apic_20 { pt3dadd( 61.7126, 555.403, -159.948, 0.48 ) }
    apic_20 { pt3dadd( 61.3044, 557.274, -160.288, 0.48 ) }
    apic_20 { pt3dadd( 61.2586, 557.533, -160.317, 0.48 ) }
    apic_20 { pt3dadd( 60.9298, 559.88, -160.501, 0.48 ) }
    apic_20 { pt3dadd( 60.8698, 560.59, -160.517, 0.48 ) }
    apic_20 { pt3dadd( 60.7236, 562.778, -160.53, 0.48 ) }
    apic_20 { pt3dadd( 60.7102, 563.158, -160.516, 0.48 ) }
    apic_20 { pt3dadd( 60.5552, 566.573, -160.109, 0.48 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 87/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -0.551412, 366.213, -29.5767, 0.84 ) }
    apic_5 { pt3dadd( -0.854022, 367.925, -30.3225, 0.84 ) }
    apic_5 { pt3dadd( -1.12156, 369.943, -31.2253, 0.84 ) }
    apic_5 { pt3dadd( -1.22431, 371.175, -31.7486, 0.84 ) }
    apic_5 { pt3dadd( -1.33478, 372.899, -32.5085, 0.84 ) }
    apic_5 { pt3dadd( -1.34274, 373.148, -32.6173, 0.84 ) }
    apic_5 { pt3dadd( -1.38166, 376.398, -34.0259, 0.84 ) }
    apic_5 { pt3dadd( -1.37643, 376.602, -34.1151, 0.84 ) }
    apic_5 { pt3dadd( -1.22079, 379.275, -35.2104, 0.84 ) }
    apic_5 { pt3dadd( -1.15894, 380.092, -35.491, 0.84 ) }
    apic_5 { pt3dadd( -0.960732, 382.284, -36.1779, 0.84 ) }
    apic_5 { pt3dadd( -0.942912, 382.504, -36.2448, 0.84 ) }
    apic_5 { pt3dadd( -0.595362, 387.586, -37.8328, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_5 { pt3dadd( -0.573792, 387.933, -37.9457, 0.84 ) }
    apic_5 { pt3dadd( -0.390123, 390.962, -38.92, 0.84 ) }
    apic_5 { pt3dadd( -0.379713, 391.149, -38.9777, 0.84 ) }
    apic_5 { pt3dadd( -0.313491, 392.812, -39.5087, 0.84 ) }
    apic_5 { pt3dadd( -0.273813, 393.88, -39.8668, 0.84 ) }
    apic_5 { pt3dadd( -0.2282, 394.657, -40.1884, 0.84 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 6/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -0.2282, 394.657, -40.1884, 0.84 ) }
    apic_7 { pt3dadd( -0.371557, 395.561, -39.7392, 0.84 ) }
    apic_7 { pt3dadd( -0.870932, 398.713, -38.1746, 0.84 ) }
    apic_7 { pt3dadd( -1.05615, 399.881, -37.5942, 0.84 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 10/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -0.2282, 394.657, -40.1884, 0.84 ) }
    apic_6 { pt3dadd( 1.11097, 395.735, -42.7755, 0.6 ) }
    apic_6 { pt3dadd( 1.82145, 396.337, -44.3105, 0.6 ) }
    apic_6 { pt3dadd( 1.85817, 396.368, -44.3935, 0.6 ) }
    apic_6 { pt3dadd( 2.31939, 396.764, -45.4406, 0.6 ) }
    apic_6 { pt3dadd( 2.45202, 396.891, -45.7673, 0.6 ) }
    apic_6 { pt3dadd( 3.14956, 397.614, -47.635, 0.6 ) }
    apic_6 { pt3dadd( 3.40477, 397.979, -48.5103, 0.6 ) }
    apic_6 { pt3dadd( 3.68145, 398.486, -49.7586, 0.6 ) }
    apic_6 { pt3dadd( 3.72933, 398.621, -50.0607, 0.6 ) }
    apic_6 { pt3dadd( 3.86142, 399.426, -51.7254, 0.6 ) }
    apic_6 { pt3dadd( 3.88414, 399.787, -52.3425, 0.6 ) }
    apic_6 { pt3dadd( 3.85735, 400.421, -53.2366, 0.6 ) }
    apic_6 { pt3dadd( 3.84427, 400.533, -53.3792, 0.6 ) }
    apic_6 { pt3dadd( 3.73103, 401.246, -54.2923, 0.6 ) }
    apic_6 { pt3dadd( 3.70818, 401.394, -54.501, 0.6 ) }
    apic_6 { pt3dadd( 3.66338, 402.35, -55.8169, 0.6 ) }
    apic_6 { pt3dadd( 3.66907, 402.509, -56.0312, 0.6 ) }
    apic_6 { pt3dadd( 3.74663, 403.5, -57.2582, 0.6 ) }
    apic_6 { pt3dadd( 3.83533, 404.654, -58.6066, 0.48 ) }
    apic_6 { pt3dadd( 3.86751, 405.331, -59.3024, 0.48 ) }
    apic_6 { pt3dadd( 3.88567, 406.441, -60.2811, 0.48 ) }
    apic_6 { pt3dadd( 3.87728, 406.768, -60.5023, 0.48 ) }
    apic_6 { pt3dadd( 3.78206, 408.938, -61.7104, 0.48 ) }
    apic_6 { pt3dadd( 3.72908, 409.322, -61.8599, 0.48 ) }
    apic_6 { pt3dadd( 3.37652, 410.915, -62.3215, 0.48 ) }
    apic_6 { pt3dadd( 3.29937, 411.119, -62.3643, 0.48 ) }
    apic_6 { pt3dadd( 2.59815, 412.503, -62.5992, 0.48 ) }
    apic_6 { pt3dadd( 2.46342, 412.731, -62.6266, 0.48 ) }
    apic_6 { pt3dadd( 0.671407, 415.185, -62.7736, 0.48 ) }
    apic_6 { pt3dadd( 0.512397, 415.387, -62.7805, 0.48 ) }
    apic_6 { pt3dadd( -1.76514, 418.117, -62.8137, 0.48 ) }
    apic_6 { pt3dadd( -2.02728, 418.428, -62.8106, 0.48 ) }
    apic_6 { pt3dadd( -3.34697, 419.953, -62.765, 0.48 ) }
    apic_6 { pt3dadd( -5.0086, 421.867, -62.6717, 0.36 ) }
    apic_6 { pt3dadd( -6.26054, 423.314, -62.5778, 0.36 ) }
    apic_6 { pt3dadd( -6.69252, 423.854, -62.578, 0.36 ) }
    apic_6 { pt3dadd( -7.70161, 425.257, -62.6619, 0.36 ) }
    apic_6 { pt3dadd( -7.88926, 425.567, -62.6939, 0.36 ) }
    apic_6 { pt3dadd( -8.50592, 426.774, -62.8674, 0.36 ) }
    apic_6 { pt3dadd( -8.97111, 427.817, -63.0414, 0.36 ) }
    apic_6 { pt3dadd( -10.2986, 430.765, -63.5771, 0.36 ) }
    apic_6 { pt3dadd( -10.3522, 430.88, -63.5973, 0.36 ) }
    apic_6 { pt3dadd( -11.4667, 433.259, -64.0053, 0.36 ) }
    apic_6 { pt3dadd( -11.9021, 434.15, -64.1609, 0.36 ) }
    apic_6 { pt3dadd( -12.5259, 435.369, -64.3701, 0.36 ) }
    apic_6 { pt3dadd( -12.7557, 435.701, -64.4177, 0.36 ) }
    apic_6 { pt3dadd( -13.8296, 436.851, -64.5051, 0.36 ) }
    apic_6 { pt3dadd( -13.9223, 436.939, -64.5147, 0.36 ) }
    apic_6 { pt3dadd( -14.8975, 437.754, -64.6429, 0.36 ) }
    apic_6 { pt3dadd( -14.9889, 437.842, -64.664, 0.36 ) }
    apic_6 { pt3dadd( -16.8887, 439.882, -65.2731, 0.36 ) }
    apic_6 { pt3dadd( -17.0451, 440.073, -65.3447, 0.36 ) }
    apic_6 { pt3dadd( -18.0653, 441.448, -65.9457, 0.36 ) }
    apic_6 { pt3dadd( -18.2305, 441.701, -66.0554, 0.36 ) }
    apic_6 { pt3dadd( -19.1671, 443.266, -66.697, 0.36 ) }
    apic_6 { pt3dadd( -19.2102, 443.345, -66.7299, 0.36 ) }
    apic_6 { pt3dadd( -20.031, 445.167, -67.5021, 0.36 ) }
    apic_6 { pt3dadd( -20.1638, 445.461, -67.6269, 0.36 ) }
    apic_6 { pt3dadd( -20.9754, 447.077, -68.3074, 0.36 ) }
    apic_6 { pt3dadd( -21.5857, 448.215, -68.7553, 0.36 ) }
    apic_6 { pt3dadd( -21.963, 448.805, -68.9724, 0.36 ) }
    apic_6 { pt3dadd( -22.8855, 450.12, -69.4513, 0.36 ) }
    apic_6 { pt3dadd( -22.9898, 450.247, -69.4977, 0.36 ) }
    apic_6 { pt3dadd( -24.9392, 452.407, -70.3517, 0.36 ) }
    apic_6 { pt3dadd( -25.1076, 452.584, -70.4311, 0.36 ) }
    apic_6 { pt3dadd( -26.543, 454.168, -71.2233, 0.36 ) }
    apic_6 { pt3dadd( -26.5963, 454.227, -71.2544, 0.36 ) }
    apic_6 { pt3dadd( -27.8236, 455.604, -72.0898, 0.36 ) }
    apic_6 { pt3dadd( -28.0058, 455.824, -72.2358, 0.36 ) }
    apic_6 { pt3dadd( -29.498, 457.656, -73.5536, 0.36 ) }
    apic_6 { pt3dadd( -30.6109, 459.029, -74.5829, 0.36 ) }
    apic_6 { pt3dadd( -30.704, 459.142, -74.6703, 0.36 ) }
    apic_6 { pt3dadd( -31.8874, 460.497, -75.7257, 0.36 ) }
    apic_6 { pt3dadd( -32.0156, 460.634, -75.8303, 0.36 ) }
    apic_6 { pt3dadd( -33.8842, 462.418, -77.0883, 0.36 ) }
    apic_6 { pt3dadd( -34.0033, 462.52, -77.1561, 0.36 ) }
    apic_6 { pt3dadd( -35.5046, 463.755, -77.94, 0.36 ) }
    apic_6 { pt3dadd( -35.5969, 463.831, -77.9884, 0.36 ) }
    apic_6 { pt3dadd( -37.5996, 465.456, -79.0516, 0.36 ) }
    apic_6 { pt3dadd( -39.3663, 466.85, -80.1452, 0.36 ) }
    apic_6 { pt3dadd( -39.4866, 466.938, -80.2277, 0.36 ) }
    apic_6 { pt3dadd( -41.44, 468.273, -81.6581, 0.36 ) }
    apic_6 { pt3dadd( -43.1191, 469.279, -82.9631, 0.36 ) }
    apic_6 { pt3dadd( -43.3815, 469.414, -83.174, 0.36 ) }
    apic_6 { pt3dadd( -45.5129, 470.272, -84.8773, 0.36 ) }
    apic_6 { pt3dadd( -46.5161, 470.597, -85.673, 0.36 ) }
    apic_6 { pt3dadd( -47.1368, 470.792, -86.1395, 0.36 ) }
    apic_6 { pt3dadd( -48.4454, 471.155, -87.0678, 0.36 ) }
    apic_6 { pt3dadd( -48.5079, 471.177, -87.1027, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    apic_6 { pt3dadd( -50.0696, 471.993, -87.63, 0.36 ) }
    apic_6 { pt3dadd( -50.4114, 472.264, -87.6641, 0.36 ) }
    apic_6 { pt3dadd( -51.8122, 473.646, -87.6441, 0.36 ) }
    apic_6 { pt3dadd( -51.8766, 473.717, -87.6357, 0.36 ) }
    apic_6 { pt3dadd( -53.9788, 476.243, -87.1239, 0.36 ) }
    apic_6 { pt3dadd( -55.934, 478.535, -86.4397, 0.36 ) }
    apic_6 { pt3dadd( -57.0744, 479.877, -85.938, 0.36 ) }
    apic_6 { pt3dadd( -57.1366, 479.946, -85.9133, 0.36 ) }
    apic_6 { pt3dadd( -59.3856, 482.315, -85.0691, 0.36 ) }
    apic_6 { pt3dadd( -60.0121, 482.926, -84.9556, 0.36 ) }
    apic_6 { pt3dadd( -62.2924, 484.897, -85.1605, 0.36 ) }
    apic_6 { pt3dadd( -62.349, 484.94, -85.1834, 0.36 ) }
    apic_6 { pt3dadd( -64.7102, 486.724, -86.452, 0.36 ) }
    apic_6 { pt3dadd( -64.7772, 486.78, -86.4918, 0.36 ) }
    apic_6 { pt3dadd( -67.0827, 488.884, -88.1297, 0.36 ) }
    apic_6 { pt3dadd( -67.2146, 489.017, -88.2328, 0.36 ) }
    apic_6 { pt3dadd( -69.9425, 492.203, -90.5415, 0.36 ) }
    apic_6 { pt3dadd( -70.0865, 492.385, -90.654, 0.36 ) }
    apic_6 { pt3dadd( -71.5445, 494.539, -91.6562, 0.36 ) }
    apic_6 { pt3dadd( -71.7252, 494.845, -91.7768, 0.36 ) }
    apic_6 { pt3dadd( -73.2482, 497.604, -92.6516, 0.36 ) }
    apic_6 { pt3dadd( -74.5864, 500.139, -93.4398, 0.36 ) }
    apic_6 { pt3dadd( -74.8173, 500.596, -93.5751, 0.36 ) }
    apic_6 { pt3dadd( -76.1929, 503.144, -94.246, 0.36 ) }
    apic_6 { pt3dadd( -77.5875, 505.62, -94.8419, 0.36 ) }
    apic_6 { pt3dadd( -79.4095, 508.662, -95.4611, 0.36 ) }
    apic_6 { pt3dadd( -79.557, 508.887, -95.4937, 0.36 ) }
    apic_6 { pt3dadd( -81.0924, 510.998, -95.7147, 0.36 ) }
    apic_6 { pt3dadd( -82.8138, 513.121, -95.8469, 0.24 ) }
    apic_6 { pt3dadd( -83.6055, 513.977, -95.8483, 0.24 ) }
    apic_6 { pt3dadd( -84.1489, 514.529, -95.805, 0.24 ) }
    apic_6 { pt3dadd( -85.4972, 515.888, -95.673, 0.24 ) }
    apic_6 { pt3dadd( -86.0811, 516.462, -95.6198, 0.24 ) }
    apic_6 { pt3dadd( -87.5538, 517.839, -95.4906, 0.24 ) }
    apic_6 { pt3dadd( -89.1607, 519.323, -95.2722, 0.24 ) }
    apic_6 { pt3dadd( -89.2954, 519.442, -95.244, 0.24 ) }
    apic_6 { pt3dadd( -90.6562, 520.647, -94.8278, 0.24 ) }
    apic_6 { pt3dadd( -90.724, 520.707, -94.7966, 0.24 ) }
    apic_6 { pt3dadd( -91.5667, 521.474, -94.2446, 0.24 ) }
    apic_6 { pt3dadd( -92.3126, 522.166, -93.5203, 0.24 ) }
    apic_6 { pt3dadd( -93.268, 523.026, -92.4471, 0.24 ) }
    apic_6 { pt3dadd( -93.9939, 523.722, -91.4327, 0.24 ) }
    apic_6 { pt3dadd( -94.5424, 524.31, -90.3681, 0.24 ) }
    apic_6 { pt3dadd( -94.8164, 524.634, -89.7471, 0.24 ) }
    apic_6 { pt3dadd( -95.0357, 524.989, -88.9654, 0.24 ) }
    apic_6 { pt3dadd( -95.5233, 525.995, -86.4262, 0.24 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 46/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -1.05615, 399.881, -37.5942, 0.84 ) }
    apic_17 { pt3dadd( -2.06033, 400.399, -37.2192, 0.6 ) }
    apic_17 { pt3dadd( -2.63102, 400.767, -37.0565, 0.6 ) }
    apic_17 { pt3dadd( -3.35626, 401.27, -36.8688, 0.6 ) }
    apic_17 { pt3dadd( -3.63656, 401.477, -36.8007, 0.6 ) }
    apic_17 { pt3dadd( -4.74433, 402.299, -36.5417, 0.6 ) }
    apic_17 { pt3dadd( -5.10819, 402.568, -36.4597, 0.6 ) }
    apic_17 { pt3dadd( -6.296, 403.613, -36.17, 0.6 ) }
    apic_17 { pt3dadd( -6.71943, 404.012, -36.0574, 0.6 ) }
    apic_17 { pt3dadd( -7.70144, 404.979, -35.7579, 0.6 ) }
    apic_17 { pt3dadd( -8.34462, 405.662, -35.5205, 0.6 ) }
    apic_17 { pt3dadd( -8.75852, 406.127, -35.3372, 0.6 ) }
    apic_17 { pt3dadd( -10.4406, 408.048, -34.4935, 0.6 ) }
    apic_17 { pt3dadd( -10.7762, 408.441, -34.3032, 0.6 ) }
    apic_17 { pt3dadd( -10.853, 408.529, -34.2572, 0.6 ) }
    apic_17 { pt3dadd( -12.0041, 409.8, -33.5446, 0.6 ) }
    apic_17 { pt3dadd( -12.4718, 410.31, -33.244, 0.6 ) }
    apic_17 { pt3dadd( -13.1457, 411.009, -32.7992, 0.6 ) }
    apic_17 { pt3dadd( -13.3883, 411.24, -32.6497, 0.6 ) }
    apic_17 { pt3dadd( -14.1896, 412.021, -32.1804, 0.6 ) }
    apic_17 { pt3dadd( -14.7643, 412.653, -31.8437, 0.6 ) }
    apic_17 { pt3dadd( -15.9859, 414.132, -31.1061, 0.6 ) }
    apic_17 { pt3dadd( -16.1803, 414.399, -30.9786, 0.6 ) }
    apic_17 { pt3dadd( -17.4693, 416.342, -30.0276, 0.6 ) }
    apic_17 { pt3dadd( -17.6543, 416.637, -29.8825, 0.6 ) }
    apic_17 { pt3dadd( -18.6184, 418.267, -29.091, 0.6 ) }
    apic_17 { pt3dadd( -18.9401, 418.769, -28.8509, 0.6 ) }
    apic_17 { pt3dadd( -19.8563, 420.075, -28.2525, 0.6 ) }
    apic_17 { pt3dadd( -20.3553, 420.677, -27.9914, 0.6 ) }
    apic_17 { pt3dadd( -20.8592, 421.189, -27.7729, 0.6 ) }
    apic_17 { pt3dadd( -21.1636, 421.475, -27.6345, 0.6 ) }
    apic_17 { pt3dadd( -22.9253, 422.978, -26.8325, 0.6 ) }
    apic_17 { pt3dadd( -23.0498, 423.093, -26.7808, 0.6 ) }
    apic_17 { pt3dadd( -24.2096, 424.226, -26.3253, 0.6 ) }
    apic_17 { pt3dadd( -24.4805, 424.511, -26.2158, 0.6 ) }
    apic_17 { pt3dadd( -26.1372, 426.406, -25.47, 0.6 ) }
    apic_17 { pt3dadd( -26.2699, 426.568, -25.4146, 0.6 ) }
    apic_17 { pt3dadd( -27.6307, 428.405, -24.8422, 0.6 ) }
    apic_17 { pt3dadd( -28.0458, 428.976, -24.6626, 0.6 ) }
    apic_17 { pt3dadd( -28.2515, 429.28, -24.5747, 0.6 ) }
    apic_17 { pt3dadd( -28.3717, 429.453, -24.5236, 0.6 ) }
    apic_17 { pt3dadd( -30.761, 432.693, -23.5362, 0.6 ) }
    apic_17 { pt3dadd( -31.21, 433.297, -23.3275, 0.6 ) }
    apic_17 { pt3dadd( -32.5546, 435.068, -22.6061, 0.6 ) }
    apic_17 { pt3dadd( -33.3419, 436.113, -22.1566, 0.6 ) }
    apic_17 { pt3dadd( -34.0229, 437.031, -21.745, 0.6 ) }
    apic_17 { pt3dadd( -34.7811, 438.067, -21.2442, 0.6 ) }
    apic_17 { pt3dadd( -35.2208, 438.654, -20.9165, 0.6 ) }
    apic_17 { pt3dadd( -35.8389, 439.429, -20.5044, 0.6 ) }
    apic_17 { pt3dadd( -36.2076, 439.894, -20.3008, 0.6 ) }
    apic_17 { pt3dadd( -37.8269, 441.924, -19.5089, 0.6 ) }
    apic_17 { pt3dadd( -38.2803, 442.527, -19.3499, 0.6 ) }
    apic_17 { pt3dadd( -39.3458, 444.028, -19.069, 0.6 ) }
    apic_17 { pt3dadd( -39.7707, 444.643, -19.0067, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    apic_17 { pt3dadd( -40.8669, 446.268, -18.9989, 0.6 ) }
    apic_17 { pt3dadd( -40.9736, 446.438, -19.0024, 0.6 ) }
    apic_17 { pt3dadd( -41.7115, 447.71, -19.0794, 0.6 ) }
    apic_17 { pt3dadd( -41.7523, 447.795, -19.0772, 0.6 ) }
    apic_17 { pt3dadd( -42.5835, 449.887, -18.8065, 0.6 ) }
    apic_17 { pt3dadd( -42.6127, 449.973, -18.782, 0.6 ) }
    apic_17 { pt3dadd( -43.3711, 452.353, -17.7862, 0.48 ) }
    apic_17 { pt3dadd( -43.3928, 452.417, -17.7584, 0.48 ) }
    apic_17 { pt3dadd( -44.2008, 454.524, -16.941, 0.48 ) }
    apic_17 { pt3dadd( -44.3847, 454.983, -16.7795, 0.48 ) }
    apic_17 { pt3dadd( -45.0992, 456.786, -16.2559, 0.48 ) }
    apic_17 { pt3dadd( -45.3069, 457.297, -16.1376, 0.48 ) }
    apic_17 { pt3dadd( -46.322, 459.647, -15.7474, 0.48 ) }
    apic_17 { pt3dadd( -48.2389, 463.909, -15.1661, 0.48 ) }
    apic_17 { pt3dadd( -48.332, 464.095, -15.1489, 0.48 ) }
    apic_17 { pt3dadd( -49.6298, 466.567, -14.9678, 0.48 ) }
    apic_17 { pt3dadd( -49.8678, 467.018, -14.9412, 0.48 ) }
    apic_17 { pt3dadd( -50.7463, 468.705, -14.822, 0.48 ) }
    apic_17 { pt3dadd( -51.085, 469.337, -14.7505, 0.48 ) }
    apic_17 { pt3dadd( -52.0277, 470.952, -14.5068, 0.48 ) }
    apic_17 { pt3dadd( -52.2293, 471.285, -14.4453, 0.48 ) }
    apic_17 { pt3dadd( -53.1931, 472.807, -14.0826, 0.48 ) }
    apic_17 { pt3dadd( -53.5132, 473.401, -13.9518, 0.48 ) }
    apic_17 { pt3dadd( -54.2461, 475.07, -13.6039, 0.48 ) }
    apic_17 { pt3dadd( -54.3521, 475.372, -13.543, 0.48 ) }
    apic_17 { pt3dadd( -54.7249, 476.654, -13.292, 0.48 ) }
    apic_17 { pt3dadd( -54.807, 476.927, -13.2428, 0.48 ) }
    apic_17 { pt3dadd( -55.8198, 479.763, -12.8689, 0.48 ) }
    apic_17 { pt3dadd( -55.9999, 480.255, -12.8257, 0.48 ) }
    apic_17 { pt3dadd( -56.717, 482.103, -12.7558, 0.48 ) }
    apic_17 { pt3dadd( -56.9777, 482.726, -12.749, 0.48 ) }
    apic_17 { pt3dadd( -57.3291, 483.567, -12.7614, 0.48 ) }
    apic_17 { pt3dadd( -58.5172, 486.368, -12.8427, 0.48 ) }
    apic_17 { pt3dadd( -58.7181, 486.844, -12.8652, 0.48 ) }
    apic_17 { pt3dadd( -59.4143, 488.575, -12.9704, 0.48 ) }
    apic_17 { pt3dadd( -59.5505, 488.925, -12.9964, 0.48 ) }
    apic_17 { pt3dadd( -60.3389, 491.211, -13.1419, 0.48 ) }
    apic_17 { pt3dadd( -60.4052, 491.453, -13.1506, 0.48 ) }
    apic_17 { pt3dadd( -60.8999, 493.976, -13.174, 0.48 ) }
    apic_17 { pt3dadd( -60.9208, 494.1, -13.1737, 0.48 ) }
    apic_17 { pt3dadd( -61.3794, 497.511, -13.1334, 0.48 ) }
    apic_17 { pt3dadd( -61.6475, 499.753, -13.0972, 0.48 ) }
    apic_17 { pt3dadd( -61.8864, 501.982, -13.0568, 0.48 ) }
    apic_17 { pt3dadd( -62.0901, 504.666, -13.0011, 0.48 ) }
    apic_17 { pt3dadd( -62.1027, 504.946, -12.9943, 0.48 ) }
    apic_17 { pt3dadd( -62.1813, 508.726, -12.9032, 0.48 ) }
    apic_17 { pt3dadd( -62.1792, 508.977, -12.8971, 0.48 ) }
    apic_17 { pt3dadd( -62.1846, 511.751, -12.855, 0.48 ) }
    apic_17 { pt3dadd( -62.346, 516.08, -12.8599, 0.48 ) }
    apic_17 { pt3dadd( -62.3713, 516.475, -12.8631, 0.48 ) }
    apic_17 { pt3dadd( -62.6268, 519.009, -12.8996, 0.48 ) }
    apic_17 { pt3dadd( -62.6765, 519.383, -12.907, 0.48 ) }
    apic_17 { pt3dadd( -63.0734, 522.255, -12.9566, 0.48 ) }
    apic_17 { pt3dadd( -63.4379, 524.654, -12.9931, 0.48 ) }
    apic_17 { pt3dadd( -63.561, 525.407, -12.9932, 0.48 ) }
    apic_17 { pt3dadd( -63.9528, 528.05, -12.9326, 0.48 ) }
    apic_17 { pt3dadd( -63.982, 528.329, -12.9158, 0.48 ) }
    apic_17 { pt3dadd( -64.1608, 531.379, -12.6379, 0.48 ) }
    apic_17 { pt3dadd( -64.1635, 531.639, -12.6053, 0.48 ) }
    apic_17 { pt3dadd( -64.1158, 533.222, -12.3718, 0.48 ) }
    apic_17 { pt3dadd( -64.1127, 533.738, -12.2956, 0.48 ) }
    apic_17 { pt3dadd( -64.1552, 537.194, -11.7738, 0.48 ) }
    apic_17 { pt3dadd( -64.1716, 537.37, -11.7537, 0.48 ) }
    apic_17 { pt3dadd( -64.4468, 539.027, -11.6217, 0.48 ) }
    apic_17 { pt3dadd( -64.5473, 539.537, -11.5956, 0.48 ) }
    apic_17 { pt3dadd( -65.0096, 541.627, -11.5612, 0.48 ) }
    apic_17 { pt3dadd( -65.0405, 541.77, -11.5613, 0.48 ) }
    apic_17 { pt3dadd( -65.7881, 545.234, -11.6096, 0.48 ) }
    apic_17 { pt3dadd( -65.896, 545.74, -11.6201, 0.48 ) }
    apic_17 { pt3dadd( -65.9432, 545.986, -11.6253, 0.48 ) }
    apic_17 { pt3dadd( -66.202, 547.525, -11.6577, 0.48 ) }
    apic_17 { pt3dadd( -66.4457, 549.434, -11.7017, 0.36 ) }
    apic_17 { pt3dadd( -66.4684, 549.609, -11.7064, 0.36 ) }
    apic_17 { pt3dadd( -66.9339, 553.007, -11.8029, 0.36 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 74/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -1.05615, 399.881, -37.5942, 0.84 ) }
    apic_8 { pt3dadd( -1.18442, 401.69, -37.3108, 0.72 ) }
    apic_8 { pt3dadd( -1.41927, 404.463, -36.8871, 0.72 ) }
    apic_8 { pt3dadd( -1.58981, 406.323, -36.6229, 0.72 ) }
    apic_8 { pt3dadd( -1.74642, 407.968, -36.4075, 0.72 ) }
    apic_8 { pt3dadd( -1.78962, 408.396, -36.3572, 0.72 ) }
    apic_8 { pt3dadd( -1.98933, 410.171, -36.1652, 0.72 ) }
    apic_8 { pt3dadd( -2.07088, 410.71, -36.1112, 0.72 ) }
    apic_8 { pt3dadd( -2.34606, 412.325, -35.9682, 0.72 ) }
    apic_8 { pt3dadd( -2.39463, 412.743, -35.9608, 0.72 ) }
    apic_8 { pt3dadd( -2.52993, 414.673, -35.9406, 0.72 ) }
    apic_8 { pt3dadd( -2.53617, 415.07, -35.9358, 0.72 ) }
    apic_8 { pt3dadd( -2.48103, 417.006, -35.911, 0.72 ) }
    apic_8 { pt3dadd( -2.47657, 417.097, -35.9098, 0.72 ) }
    apic_8 { pt3dadd( -2.26294, 420.165, -35.8693, 0.72 ) }
    apic_8 { pt3dadd( -2.25278, 420.302, -35.8672, 0.72 ) }
    apic_8 { pt3dadd( -2.1326, 422.038, -35.848, 0.72 ) }
    apic_8 { pt3dadd( -2.11399, 422.313, -35.8452, 0.72 ) }
    apic_8 { pt3dadd( -1.96503, 424.512, -35.8341, 0.72 ) }
    apic_8 { pt3dadd( -1.94341, 424.923, -35.8333, 0.72 ) }
    apic_8 { pt3dadd( -1.89989, 426.849, -35.8305, 0.72 ) }
    apic_8 { pt3dadd( -1.82663, 430.563, -35.8363, 0.72 ) }
    apic_8 { pt3dadd( -1.8244, 430.869, -35.8377, 0.72 ) }
    apic_8 { pt3dadd( -1.80461, 433.832, -35.851, 0.72 ) }
    apic_8 { pt3dadd( -1.80313, 433.968, -35.8516, 0.72 ) }
    apic_8 { pt3dadd( -1.72269, 436.989, -35.8711, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    apic_8 { pt3dadd( -1.70982, 437.262, -35.8734, 0.72 ) }
    apic_8 { pt3dadd( -1.55554, 439.873, -35.911, 0.72 ) }
    apic_8 { pt3dadd( -1.53493, 440.146, -35.9163, 0.72 ) }
    apic_8 { pt3dadd( -1.36117, 441.798, -36.0005, 0.72 ) }
    apic_8 { pt3dadd( -0.844112, 445.758, -36.2796, 0.72 ) }
    apic_8 { pt3dadd( -0.533892, 447.727, -36.4521, 0.72 ) }
    apic_8 { pt3dadd( -0.162588, 449.899, -36.6658, 0.72 ) }
    apic_8 { pt3dadd( 0.205528, 452.074, -36.8966, 0.72 ) }
    apic_8 { pt3dadd( 0.63103, 454.865, -37.2056, 0.72 ) }
    apic_8 { pt3dadd( 0.641704, 454.955, -37.2155, 0.72 ) }
    apic_8 { pt3dadd( 0.81866, 457.306, -37.4724, 0.72 ) }
    apic_8 { pt3dadd( 0.824229, 457.442, -37.4854, 0.72 ) }
    apic_8 { pt3dadd( 0.846912, 460.08, -37.6754, 0.72 ) }
    apic_8 { pt3dadd( 0.846813, 460.399, -37.6899, 0.72 ) }
    apic_8 { pt3dadd( 0.954535, 463.01, -37.7157, 0.72 ) }
    apic_8 { pt3dadd( 0.969147, 463.145, -37.7272, 0.72 ) }
    apic_8 { pt3dadd( 1.12915, 464.118, -37.867, 0.72 ) }
    apic_8 { pt3dadd( 1.1787, 464.416, -37.9165, 0.72 ) }
    apic_8 { pt3dadd( 1.48914, 466.111, -38.2427, 0.72 ) }
    apic_8 { pt3dadd( 1.77922, 468.073, -38.6762, 0.72 ) }
    apic_8 { pt3dadd( 2.16417, 471.229, -39.4749, 0.72 ) }
    apic_8 { pt3dadd( 2.17238, 471.394, -39.519, 0.72 ) }
    apic_8 { pt3dadd( 2.13529, 475.109, -40.5407, 0.72 ) }
    apic_8 { pt3dadd( 2.12213, 475.268, -40.5824, 0.72 ) }
    apic_8 { pt3dadd( 1.71939, 477.762, -41.2091, 0.72 ) }
    apic_8 { pt3dadd( 1.67752, 477.946, -41.2512, 0.72 ) }
    apic_8 { pt3dadd( 0.788143, 481.013, -41.7647, 0.72 ) }
    apic_8 { pt3dadd( 0.747466, 481.142, -41.784, 0.72 ) }
    apic_8 { pt3dadd( -0.0415422, 483.397, -42.0515, 0.72 ) }
    apic_8 { pt3dadd( -0.179972, 483.782, -42.0848, 0.72 ) }
    apic_8 { pt3dadd( -0.858422, 485.68, -42.1743, 0.72 ) }
    apic_8 { pt3dadd( -2.27254, 489.654, -42.2898, 0.72 ) }
    apic_8 { pt3dadd( -2.36441, 489.911, -42.293, 0.72 ) }
    apic_8 { pt3dadd( -3.35335, 492.911, -42.1342, 0.72 ) }
    apic_8 { pt3dadd( -3.43528, 493.187, -42.087, 0.72 ) }
    apic_8 { pt3dadd( -4.23706, 496.272, -41.1442, 0.72 ) }
    apic_8 { pt3dadd( -4.34494, 496.807, -40.9281, 0.72 ) }
    apic_8 { pt3dadd( -4.52841, 497.975, -40.3734, 0.72 ) }
    apic_8 { pt3dadd( -5.1712, 502.671, -38.0751, 0.72 ) }
    apic_8 { pt3dadd( -5.5434, 505.848, -36.4491, 0.72 ) }
    apic_8 { pt3dadd( -5.89905, 508.875, -34.9374, 0.72 ) }
    apic_8 { pt3dadd( -6.16783, 511.281, -33.7455, 0.72 ) }
    apic_8 { pt3dadd( -6.2236, 511.796, -33.5226, 0.72 ) }
    apic_8 { pt3dadd( -6.46581, 514.089, -32.6097, 0.72 ) }
    apic_8 { pt3dadd( -6.55208, 514.795, -32.4167, 0.72 ) }
    apic_8 { pt3dadd( -6.86985, 517.027, -32.1452, 0.72 ) }
    apic_8 { pt3dadd( -6.93988, 517.431, -32.1378, 0.72 ) }
    apic_8 { pt3dadd( -7.59141, 520.241, -32.0841, 0.72 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 48/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -66.9339, 553.007, -11.8029, 0.36 ) }
    apic_19 { pt3dadd( -68.2783, 555.76, -12.2172, 0.36 ) }
    apic_19 { pt3dadd( -69.3777, 558.011, -12.6134, 0.36 ) }
    apic_19 { pt3dadd( -69.5901, 558.532, -12.7296, 0.36 ) }
    apic_19 { pt3dadd( -70.4125, 560.65, -13.2011, 0.36 ) }
    apic_19 { pt3dadd( -70.5136, 560.914, -13.2542, 0.36 ) }
    apic_19 { pt3dadd( -71.1685, 562.647, -13.5733, 0.36 ) }
    apic_19 { pt3dadd( -71.6165, 564.215, -13.8037, 0.36 ) }
    apic_19 { pt3dadd( -72.2124, 566.588, -14.0698, 0.36 ) }
    apic_19 { pt3dadd( -72.4041, 567.437, -14.1331, 0.36 ) }
    apic_19 { pt3dadd( -72.7009, 569.026, -14.1725, 0.36 ) }
    apic_19 { pt3dadd( -72.7312, 569.262, -14.164, 0.36 ) }
    apic_19 { pt3dadd( -72.8787, 571.202, -13.963, 0.36 ) }
    apic_19 { pt3dadd( -72.8957, 571.767, -13.8607, 0.36 ) }
    apic_19 { pt3dadd( -72.9314, 572.925, -13.5638, 0.36 ) }
    apic_19 { pt3dadd( -72.9058, 573.431, -13.4558, 0.36 ) }
    apic_19 { pt3dadd( -72.7609, 574.449, -13.2554, 0.36 ) }
    apic_19 { pt3dadd( -71.9307, 586.251, -11.6613, 0.36 ) }
    apic_19 { pt3dadd( -70.549, 597.929, -9.59873, 0.36 ) }
    apic_19 { pt3dadd( -68.422, 609.059, -5.83908, 0.36 ) }
    apic_19 { pt3dadd( -64.5705, 619.716, -2.08084, 0.36 ) }
    apic_19 { pt3dadd( -58.8802, 629.235, 2.33909, 0.36 ) }
    apic_19 { pt3dadd( -54.9329, 638.742, 8.38664, 0.36 ) }
    apic_19 { pt3dadd( -51.7204, 648.611, 14.2876, 0.36 ) }
    apic_19 { pt3dadd( -48.0848, 658.25, 20.3212, 0.36 ) }
    apic_19 { pt3dadd( -45.5035, 668.601, 25.6794, 0.36 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 74/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -66.9339, 553.007, -11.8029, 0.36 ) }
    apic_18 { pt3dadd( -67.2261, 554.577, -11.9103, 0.36 ) }
    apic_18 { pt3dadd( -67.2783, 554.813, -11.9284, 0.36 ) }
    apic_18 { pt3dadd( -67.8867, 557.309, -12.1423, 0.36 ) }
    apic_18 { pt3dadd( -67.9187, 557.425, -12.1543, 0.36 ) }
    apic_18 { pt3dadd( -68.6355, 559.876, -12.4264, 0.36 ) }
    apic_18 { pt3dadd( -68.7836, 560.36, -12.4804, 0.36 ) }
    apic_18 { pt3dadd( -69.4406, 562.276, -12.7194, 0.36 ) }
    apic_18 { pt3dadd( -69.5885, 562.683, -12.7729, 0.36 ) }
    apic_18 { pt3dadd( -70.1002, 563.991, -12.9567, 0.36 ) }
    apic_18 { pt3dadd( -70.1959, 564.222, -12.9864, 0.36 ) }
    apic_18 { pt3dadd( -70.6996, 565.355, -13.113, 0.36 ) }
    apic_18 { pt3dadd( -70.7446, 565.469, -13.1192, 0.36 ) }
    apic_18 { pt3dadd( -71.4413, 567.506, -13.1223, 0.36 ) }
    apic_18 { pt3dadd( -71.5341, 567.881, -13.0981, 0.36 ) }
    apic_18 { pt3dadd( -71.8793, 569.832, -12.8519, 0.36 ) }
    apic_18 { pt3dadd( -71.8959, 570.044, -12.8068, 0.36 ) }
    apic_18 { pt3dadd( -71.8075, 572.328, -12.0556, 0.36 ) }
    apic_18 { pt3dadd( -71.6328, 572.747, -11.7511, 0.36 ) }
    apic_18 { pt3dadd( -70.5026, 572.865, -10.5129, 0.36 ) }
    apic_18 { pt3dadd( -70.3275, 572.831, -10.336, 0.36 ) }
    apic_18 { pt3dadd( -67.9898, 571.941, -8.14611, 0.36 ) }
    apic_18 { pt3dadd( -66.3402, 571.104, -6.63928, 0.36 ) }
    apic_18 { pt3dadd( -66.1504, 570.976, -6.46941, 0.36 ) }
    apic_18 { pt3dadd( -65.698, 570.618, -6.06332, 0.36 ) }
    apic_18 { pt3dadd( -65.5948, 570.519, -5.97011, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    apic_18 { pt3dadd( -64.8369, 569.78, -5.31384, 0.36 ) }
    apic_18 { pt3dadd( -59.2891, 564.483, 1.17352, 0.36 ) }
    apic_18 { pt3dadd( -53.0754, 558.91, 6.76482, 0.36 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 3/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -7.59141, 520.241, -32.0841, 0.72 ) }
    apic_16 { pt3dadd( -5.71311, 521.957, -32.3109, 0.48 ) }
    apic_16 { pt3dadd( -5.01327, 522.689, -32.4219, 0.48 ) }
    apic_16 { pt3dadd( -4.82611, 522.937, -32.4324, 0.48 ) }
    apic_16 { pt3dadd( -3.81599, 524.485, -32.4114, 0.48 ) }
    apic_16 { pt3dadd( -3.6606, 524.781, -32.3972, 0.48 ) }
    apic_16 { pt3dadd( -2.97084, 526.246, -32.2995, 0.48 ) }
    apic_16 { pt3dadd( -2.77181, 526.841, -32.2402, 0.48 ) }
    apic_16 { pt3dadd( -2.23437, 528.622, -31.9384, 0.48 ) }
    apic_16 { pt3dadd( -2.14319, 528.921, -31.8705, 0.48 ) }
    apic_16 { pt3dadd( -1.4883, 531.128, -31.2808, 0.48 ) }
    apic_16 { pt3dadd( -1.37772, 531.448, -31.1827, 0.48 ) }
    apic_16 { pt3dadd( -0.589082, 533.475, -30.4731, 0.48 ) }
    apic_16 { pt3dadd( -0.425737, 533.826, -30.3386, 0.48 ) }
    apic_16 { pt3dadd( 1.13596, 536.657, -29.1859, 0.48 ) }
    apic_16 { pt3dadd( 1.21013, 536.775, -29.1322, 0.48 ) }
    apic_16 { pt3dadd( 2.90491, 539.102, -27.8126, 0.48 ) }
    apic_16 { pt3dadd( 3.19863, 539.46, -27.5782, 0.48 ) }
    apic_16 { pt3dadd( 4.06045, 540.369, -26.8754, 0.48 ) }
    apic_16 { pt3dadd( 4.42156, 540.749, -26.5518, 0.48 ) }
    apic_16 { pt3dadd( 4.79738, 541.121, -26.1634, 0.48 ) }
    apic_16 { pt3dadd( 5.59821, 542.005, -25.2899, 0.48 ) }
    apic_16 { pt3dadd( 5.96298, 542.457, -24.8253, 0.48 ) }
    apic_16 { pt3dadd( 6.0356, 542.577, -24.7142, 0.48 ) }
    apic_16 { pt3dadd( 6.94069, 544.57, -23.0458, 0.48 ) }
    apic_16 { pt3dadd( 6.97792, 544.685, -22.9579, 0.48 ) }
    apic_16 { pt3dadd( 7.31651, 546.083, -21.9766, 0.48 ) }
    apic_16 { pt3dadd( 7.44189, 547.06, -21.4025, 0.48 ) }
    apic_16 { pt3dadd( 7.51712, 548.943, -20.3641, 0.48 ) }
    apic_16 { pt3dadd( 7.50363, 549.354, -20.1519, 0.48 ) }
    apic_16 { pt3dadd( 7.33804, 550.947, -19.3676, 0.48 ) }
    apic_16 { pt3dadd( 7.32024, 551.116, -19.2902, 0.48 ) }
    apic_16 { pt3dadd( 7.03337, 553.552, -18.271, 0.48 ) }
    apic_16 { pt3dadd( 6.94602, 554.477, -17.9466, 0.48 ) }
    apic_16 { pt3dadd( 6.82749, 555.955, -17.4524, 0.48 ) }
    apic_16 { pt3dadd( 6.79466, 556.463, -17.2781, 0.48 ) }
    apic_16 { pt3dadd( 6.7141, 558.879, -16.4409, 0.48 ) }
    apic_16 { pt3dadd( 6.71999, 559.163, -16.3468, 0.48 ) }
    apic_16 { pt3dadd( 6.88271, 561.026, -15.7533, 0.48 ) }
    apic_16 { pt3dadd( 6.95615, 561.769, -15.5272, 0.48 ) }
    apic_16 { pt3dadd( 7.08404, 562.961, -15.1617, 0.48 ) }
    apic_16 { pt3dadd( 7.10897, 563.28, -15.0658, 0.48 ) }
    apic_16 { pt3dadd( 7.20655, 565.669, -14.3706, 0.48 ) }
    apic_16 { pt3dadd( 7.22162, 565.99, -14.2779, 0.48 ) }
    apic_16 { pt3dadd( 7.38677, 568.138, -13.7269, 0.48 ) }
    apic_16 { pt3dadd( 7.41387, 568.42, -13.6641, 0.48 ) }
    apic_16 { pt3dadd( 7.5505, 569.391, -13.4265, 0.48 ) }
    apic_16 { pt3dadd( 7.75586, 570.675, -13.0765, 0.48 ) }
    apic_16 { pt3dadd( 7.84149, 571.204, -12.9284, 0.48 ) }
    apic_16 { pt3dadd( 8.55227, 575.208, -11.7774, 0.48 ) }
    apic_16 { pt3dadd( 8.59797, 575.428, -11.7153, 0.48 ) }
    apic_16 { pt3dadd( 9.00813, 577.325, -11.1693, 0.48 ) }
    apic_16 { pt3dadd( 9.15275, 577.799, -11.0354, 0.48 ) }
    apic_16 { pt3dadd( 10.1589, 580.366, -10.2709, 0.48 ) }
    apic_16 { pt3dadd( 10.3742, 580.844, -10.1294, 0.48 ) }
    apic_16 { pt3dadd( 11.0964, 582.241, -9.73022, 0.48 ) }
    apic_16 { pt3dadd( 11.1646, 582.369, -9.69659, 0.48 ) }
    apic_16 { pt3dadd( 12.8163, 585.37, -9.01705, 0.48 ) }
    apic_16 { pt3dadd( 13.6934, 586.848, -8.71204, 0.48 ) }
    apic_16 { pt3dadd( 13.9479, 587.239, -8.63734, 0.48 ) }
    apic_16 { pt3dadd( 14.7593, 588.515, -8.41634, 0.48 ) }
    apic_16 { pt3dadd( 14.9196, 588.773, -8.37086, 0.48 ) }
    apic_16 { pt3dadd( 15.1972, 589.237, -8.29112, 0.48 ) }
    apic_16 { pt3dadd( 16.7333, 591.962, -7.84937, 0.48 ) }
    apic_16 { pt3dadd( 17.0353, 592.404, -7.78637, 0.48 ) }
    apic_16 { pt3dadd( 17.7704, 593.261, -7.62693, 0.48 ) }
    apic_16 { pt3dadd( 17.9408, 593.423, -7.58528, 0.48 ) }
    apic_16 { pt3dadd( 18.6335, 594.034, -7.38377, 0.48 ) }
    apic_16 { pt3dadd( 19.2098, 594.5, -7.18961, 0.48 ) }
    apic_16 { pt3dadd( 20.5019, 595.523, -6.59967, 0.48 ) }
    apic_16 { pt3dadd( 21.4421, 596.36, -6.07921, 0.48 ) }
    apic_16 { pt3dadd( 22.0675, 597.068, -5.62213, 0.48 ) }
    apic_16 { pt3dadd( 22.8624, 598.218, -4.86267, 0.48 ) }
    apic_16 { pt3dadd( 22.9206, 598.333, -4.78737, 0.48 ) }
    apic_16 { pt3dadd( 23.7051, 600.37, -3.49479, 0.48 ) }
    apic_16 { pt3dadd( 23.9566, 601.196, -2.96364, 0.48 ) }
    apic_16 { pt3dadd( 24.4583, 603.068, -1.71264, 0.48 ) }
    apic_16 { pt3dadd( 24.6502, 603.798, -1.18704, 0.48 ) }
    apic_16 { pt3dadd( 24.9897, 605.046, -0.200515, 0.48 ) }
    apic_16 { pt3dadd( 25.135, 605.523, 0.201526, 0.48 ) }
    apic_16 { pt3dadd( 25.5748, 606.797, 1.37538, 0.48 ) }
    apic_16 { pt3dadd( 25.8255, 607.409, 1.96384, 0.48 ) }
    apic_16 { pt3dadd( 26.4204, 608.602, 3.19155, 0.48 ) }
    apic_16 { pt3dadd( 26.6829, 609.082, 3.71372, 0.48 ) }
    apic_16 { pt3dadd( 27.2525, 610.07, 4.87251, 0.48 ) }
    apic_16 { pt3dadd( 27.4015, 610.345, 5.19343, 0.48 ) }
    apic_16 { pt3dadd( 27.7746, 611.104, 5.99766, 0.48 ) }
    apic_16 { pt3dadd( 27.8121, 611.181, 6.06993, 0.48 ) }
    apic_16 { pt3dadd( 32.8639, 619.415, 13.8701, 0.48 ) }
    apic_16 { pt3dadd( 37.9038, 626.714, 22.5576, 0.48 ) }
    apic_16 { pt3dadd( 44.2893, 634.839, 29.44, 0.48 ) }
    apic_16 { pt3dadd( 51.0102, 643.057, 35.8785, 0.48 ) }
    apic_16 { pt3dadd( 58.4464, 651.469, 41.1802, 0.48 ) }
    apic_16 { pt3dadd( 64.3261, 659.747, 48.3257, 0.48 ) }
    apic_16 { pt3dadd( 69.3769, 666.74, 57.2557, 0.48 ) }
    apic_16 { pt3dadd( 74.4945, 674.7, 65.2942, 0.48 ) }
    apic_16 { pt3dadd( 80.4068, 681.226, 74.0466, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 0/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -7.59141, 520.241, -32.0841, 0.72 ) }
    apic_9 { pt3dadd( -7.98521, 522.506, -32.8536, 0.72 ) }
    apic_9 { pt3dadd( -8.11003, 523.156, -33.0727, 0.72 ) }
    apic_9 { pt3dadd( -8.41968, 524.734, -33.6817, 0.72 ) }
    apic_9 { pt3dadd( -8.44176, 524.835, -33.7246, 0.72 ) }
    apic_9 { pt3dadd( -8.99079, 527.247, -34.7984, 0.72 ) }
    apic_9 { pt3dadd( -9.08653, 527.664, -34.9802, 0.72 ) }
    apic_9 { pt3dadd( -9.275, 528.5, -35.4057, 0.72 ) }
    apic_9 { pt3dadd( -9.45813, 529.256, -35.7788, 0.72 ) }
    apic_9 { pt3dadd( -9.9296, 530.984, -36.6796, 0.72 ) }
    apic_9 { pt3dadd( -9.9966, 531.22, -36.8014, 0.72 ) }
    apic_9 { pt3dadd( -10.3933, 532.495, -37.4221, 0.72 ) }
    apic_9 { pt3dadd( -10.5392, 532.98, -37.6663, 0.72 ) }
    // Section: apic_15, id: apic_15, parent: apic_9 (entry count 13/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -10.5392, 532.98, -37.6663, 0.72 ) }
    apic_15 { pt3dadd( -11.2782, 533.739, -37.7936, 0.48 ) }
    apic_15 { pt3dadd( -12.1071, 534.716, -37.9433, 0.48 ) }
    apic_15 { pt3dadd( -12.1657, 534.786, -37.9545, 0.48 ) }
    apic_15 { pt3dadd( -13.0318, 535.761, -37.8437, 0.48 ) }
    apic_15 { pt3dadd( -13.1681, 535.911, -37.8091, 0.48 ) }
    apic_15 { pt3dadd( -13.9467, 536.749, -37.5873, 0.48 ) }
    apic_15 { pt3dadd( -14.1136, 536.938, -37.5248, 0.48 ) }
    apic_15 { pt3dadd( -14.6132, 537.515, -37.3188, 0.48 ) }
    apic_15 { pt3dadd( -16.238, 539.258, -36.6508, 0.48 ) }
    apic_15 { pt3dadd( -16.4586, 539.483, -36.55, 0.48 ) }
    apic_15 { pt3dadd( -17.1891, 540.243, -36.1941, 0.48 ) }
    apic_15 { pt3dadd( -17.3237, 540.382, -36.1264, 0.48 ) }
    apic_15 { pt3dadd( -17.9094, 541.032, -35.8448, 0.48 ) }
    apic_15 { pt3dadd( -18.0007, 541.149, -35.8081, 0.48 ) }
    apic_15 { pt3dadd( -18.6098, 542.063, -35.7231, 0.48 ) }
    apic_15 { pt3dadd( -18.6655, 542.156, -35.6928, 0.48 ) }
    apic_15 { pt3dadd( -18.9345, 542.65, -35.4473, 0.48 ) }
    apic_15 { pt3dadd( -19.0211, 542.813, -35.3573, 0.48 ) }
    apic_15 { pt3dadd( -19.3552, 543.397, -34.9933, 0.48 ) }
    apic_15 { pt3dadd( -19.3971, 543.466, -34.9491, 0.48 ) }
    apic_15 { pt3dadd( -20.514, 545.191, -33.7873, 0.48 ) }
    apic_15 { pt3dadd( -20.5803, 545.295, -33.7144, 0.48 ) }
    apic_15 { pt3dadd( -20.9362, 545.868, -33.3011, 0.48 ) }
    apic_15 { pt3dadd( -21.4607, 546.662, -32.7393, 0.48 ) }
    apic_15 { pt3dadd( -21.7964, 547.14, -32.4054, 0.48 ) }
    apic_15 { pt3dadd( -21.9431, 547.352, -32.2827, 0.48 ) }
    apic_15 { pt3dadd( -22.0134, 547.454, -32.24, 0.48 ) }
    apic_15 { pt3dadd( -22.1461, 547.66, -32.1513, 0.48 ) }
    apic_15 { pt3dadd( -22.7938, 548.714, -31.6789, 0.48 ) }
    apic_15 { pt3dadd( -22.8644, 548.847, -31.628, 0.48 ) }
    apic_15 { pt3dadd( -23.2613, 549.631, -31.3329, 0.48 ) }
    apic_15 { pt3dadd( -23.3167, 549.74, -31.2907, 0.48 ) }
    apic_15 { pt3dadd( -24.139, 551.422, -30.6507, 0.48 ) }
    apic_15 { pt3dadd( -24.2286, 551.615, -30.5791, 0.48 ) }
    apic_15 { pt3dadd( -24.7239, 552.748, -30.178, 0.48 ) }
    apic_15 { pt3dadd( -24.8913, 553.176, -30.0414, 0.48 ) }
    apic_15 { pt3dadd( -25.2075, 554.095, -29.7797, 0.48 ) }
    apic_15 { pt3dadd( -25.3793, 554.701, -29.6452, 0.48 ) }
    apic_15 { pt3dadd( -25.4589, 555.066, -29.584, 0.48 ) }
    apic_15 { pt3dadd( -25.4776, 555.163, -29.5681, 0.48 ) }
    apic_15 { pt3dadd( -25.7164, 556.551, -29.3415, 0.48 ) }
    apic_15 { pt3dadd( -25.8063, 557.004, -29.2695, 0.48 ) }
    apic_15 { pt3dadd( -26.0833, 558.283, -29.0511, 0.48 ) }
    apic_15 { pt3dadd( -26.1658, 558.601, -28.988, 0.48 ) }
    apic_15 { pt3dadd( -26.4556, 559.604, -28.7726, 0.48 ) }
    apic_15 { pt3dadd( -26.4829, 559.69, -28.753, 0.48 ) }
    apic_15 { pt3dadd( -27.0203, 561.233, -28.3888, 0.48 ) }
    apic_15 { pt3dadd( -27.1064, 561.518, -28.3228, 0.48 ) }
    apic_15 { pt3dadd( -27.4439, 562.774, -28.0456, 0.48 ) }
    apic_15 { pt3dadd( -27.4642, 562.862, -28.0268, 0.48 ) }
    apic_15 { pt3dadd( -27.7911, 564.502, -27.6764, 0.48 ) }
    apic_15 { pt3dadd( -27.8191, 564.773, -27.6399, 0.48 ) }
    apic_15 { pt3dadd( -27.8261, 566.588, -27.5354, 0.48 ) }
    apic_15 { pt3dadd( -27.8179, 566.793, -27.5546, 0.48 ) }
    apic_15 { pt3dadd( -27.7414, 567.772, -27.7732, 0.48 ) }
    apic_15 { pt3dadd( -27.7379, 567.882, -27.8074, 0.48 ) }
    apic_15 { pt3dadd( -27.7961, 570.066, -28.6818, 0.48 ) }
    apic_15 { pt3dadd( -27.801, 570.115, -28.7022, 0.48 ) }
    apic_15 { pt3dadd( -28.1575, 572.284, -29.6539, 0.36 ) }
    apic_15 { pt3dadd( -28.1839, 572.401, -29.7033, 0.36 ) }
    apic_15 { pt3dadd( -28.709, 574.252, -30.453, 0.36 ) }
    apic_15 { pt3dadd( -29.0108, 575.183, -30.7711, 0.36 ) }
    apic_15 { pt3dadd( -29.5707, 576.614, -31.1376, 0.36 ) }
    apic_15 { pt3dadd( -29.6935, 576.916, -31.2008, 0.36 ) }
    apic_15 { pt3dadd( -30.0395, 577.775, -31.3054, 0.36 ) }
    apic_15 { pt3dadd( -30.1364, 578.04, -31.3308, 0.36 ) }
    apic_15 { pt3dadd( -30.5101, 579.114, -31.3302, 0.36 ) }
    apic_15 { pt3dadd( -30.5595, 579.252, -31.3153, 0.36 ) }
    apic_15 { pt3dadd( -30.8014, 579.751, -31.2188, 0.36 ) }
    apic_15 { pt3dadd( -31.4883, 581.041, -30.9318, 0.36 ) }
    apic_15 { pt3dadd( -31.5222, 581.099, -30.9171, 0.36 ) }
    apic_15 { pt3dadd( -32.3008, 582.354, -30.5919, 0.36 ) }
    apic_15 { pt3dadd( -32.4247, 582.55, -30.5409, 0.36 ) }
    apic_15 { pt3dadd( -33.8996, 585.07, -29.9803, 0.36 ) }
    apic_15 { pt3dadd( -33.9435, 585.149, -29.965, 0.36 ) }
    apic_15 { pt3dadd( -34.6471, 586.358, -29.7525, 0.36 ) }
    apic_15 { pt3dadd( -34.9324, 586.849, -29.6787, 0.36 ) }
    apic_15 { pt3dadd( -35.4553, 587.748, -29.5723, 0.36 ) }
    apic_15 { pt3dadd( -36.3626, 589.277, -29.3958, 0.36 ) }
    apic_15 { pt3dadd( -36.6562, 589.803, -29.3369, 0.36 ) }
    apic_15 { pt3dadd( -37.2185, 590.837, -29.2414, 0.36 ) }
    apic_15 { pt3dadd( -37.5742, 591.511, -29.2031, 0.36 ) }
    apic_15 { pt3dadd( -37.893, 592.113, -29.183, 0.36 ) }
    apic_15 { pt3dadd( -37.9785, 592.275, -29.182, 0.36 ) }
    apic_15 { pt3dadd( -38.8118, 593.925, -29.2004, 0.36 ) }
    apic_15 { pt3dadd( -39.04, 594.427, -29.2171, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    apic_15 { pt3dadd( -39.5437, 595.614, -29.2436, 0.36 ) }
    apic_15 { pt3dadd( -39.7523, 596.106, -29.292, 0.36 ) }
    apic_15 { pt3dadd( -40.1073, 596.932, -29.4219, 0.36 ) }
    apic_15 { pt3dadd( -40.1881, 597.117, -29.4585, 0.36 ) }
    apic_15 { pt3dadd( -40.2396, 597.233, -29.4859, 0.36 ) }
    apic_15 { pt3dadd( -41.1336, 599.471, -30.0289, 0.36 ) }
    apic_15 { pt3dadd( -41.8029, 601.368, -30.5, 0.36 ) }
    apic_15 { pt3dadd( -41.9038, 601.718, -30.5818, 0.36 ) }
    apic_15 { pt3dadd( -42.1975, 602.945, -30.8548, 0.36 ) }
    apic_15 { pt3dadd( -42.2333, 603.14, -30.9089, 0.36 ) }
    apic_15 { pt3dadd( -42.3259, 604.213, -31.2358, 0.36 ) }
    apic_15 { pt3dadd( -42.3229, 604.3, -31.2646, 0.36 ) }
    apic_15 { pt3dadd( -42.2353, 605.646, -31.6359, 0.36 ) }
    apic_15 { pt3dadd( -42.2318, 605.706, -31.6506, 0.36 ) }
    apic_15 { pt3dadd( -42.1107, 607.956, -32.205, 0.36 ) }
    apic_15 { pt3dadd( -42.1176, 609.326, -32.5273, 0.36 ) }
    apic_15 { pt3dadd( -42.1402, 609.778, -32.6311, 0.36 ) }
    apic_15 { pt3dadd( -42.384, 611.683, -33.0387, 0.36 ) }
    apic_15 { pt3dadd( -42.9165, 614.065, -33.5608, 0.36 ) }
    apic_15 { pt3dadd( -42.9518, 614.187, -33.5867, 0.36 ) }
    apic_15 { pt3dadd( -43.6832, 616.0, -33.9725, 0.36 ) }
    apic_15 { pt3dadd( -43.7711, 616.18, -34.0187, 0.36 ) }
    apic_15 { pt3dadd( -44.7389, 617.986, -34.5648, 0.36 ) }
    apic_15 { pt3dadd( -46.152, 620.351, -35.4176, 0.36 ) }
    apic_15 { pt3dadd( -46.2005, 620.423, -35.4471, 0.36 ) }
    apic_15 { pt3dadd( -47.5222, 622.347, -36.2131, 0.36 ) }
    apic_15 { pt3dadd( -47.7175, 622.614, -36.3203, 0.36 ) }
    apic_15 { pt3dadd( -48.3708, 623.438, -36.6365, 0.36 ) }
    apic_15 { pt3dadd( -48.5689, 623.628, -36.6936, 0.36 ) }
    apic_15 { pt3dadd( -49.6424, 624.159, -36.5422, 0.36 ) }
    apic_15 { pt3dadd( -50.36, 624.374, -36.199, 0.36 ) }
    apic_15 { pt3dadd( -51.0618, 624.487, -35.6962, 0.36 ) }
    apic_15 { pt3dadd( -51.2124, 624.514, -35.5823, 0.36 ) }
    apic_15 { pt3dadd( -52.3574, 624.728, -34.6662, 0.36 ) }
    apic_15 { pt3dadd( -53.1228, 624.888, -34.1197, 0.36 ) }
    apic_15 { pt3dadd( -54.4144, 625.17, -33.3988, 0.36 ) }
    apic_15 { pt3dadd( -54.5307, 625.197, -33.3479, 0.36 ) }
    apic_15 { pt3dadd( -55.5865, 625.492, -32.9608, 0.36 ) }
    apic_15 { pt3dadd( -56.2299, 625.681, -32.7651, 0.36 ) }
    apic_15 { pt3dadd( -57.8044, 626.156, -32.4415, 0.36 ) }
    apic_15 { pt3dadd( -59.3016, 626.583, -32.2402, 0.36 ) }
    apic_15 { pt3dadd( -59.7388, 626.69, -32.1899, 0.36 ) }
    apic_15 { pt3dadd( -60.7853, 627.0, -32.0333, 0.36 ) }
    apic_15 { pt3dadd( -61.1395, 627.123, -31.9622, 0.36 ) }
    apic_15 { pt3dadd( -62.1442, 627.572, -31.683, 0.36 ) }
    apic_15 { pt3dadd( -62.2349, 627.624, -31.6468, 0.36 ) }
    apic_15 { pt3dadd( -63.6571, 628.568, -30.9748, 0.36 ) }
    apic_15 { pt3dadd( -65.176, 629.626, -30.2073, 0.36 ) }
    apic_15 { pt3dadd( -65.7014, 630.056, -29.9342, 0.36 ) }
    apic_15 { pt3dadd( -66.1885, 630.518, -29.681, 0.36 ) }
    apic_15 { pt3dadd( -66.4613, 630.814, -29.5372, 0.36 ) }
    apic_15 { pt3dadd( -66.9741, 631.394, -29.2735, 0.36 ) }
    apic_15 { pt3dadd( -67.136, 631.579, -29.1911, 0.36 ) }
    apic_15 { pt3dadd( -68.2687, 632.627, -28.6415, 0.36 ) }
    apic_15 { pt3dadd( -68.634, 632.861, -28.4903, 0.36 ) }
    apic_15 { pt3dadd( -69.3196, 633.154, -28.2414, 0.36 ) }
    apic_15 { pt3dadd( -70.0936, 633.381, -27.9517, 0.36 ) }
    apic_15 { pt3dadd( -71.0358, 633.559, -27.5608, 0.36 ) }
    apic_15 { pt3dadd( -71.3373, 633.59, -27.4351, 0.36 ) }
    apic_15 { pt3dadd( -72.5579, 633.61, -26.8866, 0.36 ) }
    apic_15 { pt3dadd( -73.0504, 633.616, -26.6646, 0.36 ) }
    apic_15 { pt3dadd( -74.1788, 633.653, -26.1606, 0.36 ) }
    apic_15 { pt3dadd( -74.4669, 633.68, -26.0417, 0.36 ) }
    apic_15 { pt3dadd( -75.8626, 633.876, -25.4645, 0.36 ) }
    apic_15 { pt3dadd( -76.0852, 633.911, -25.3701, 0.36 ) }
    apic_15 { pt3dadd( -77.051, 634.086, -24.9044, 0.36 ) }
    apic_15 { pt3dadd( -77.2556, 634.118, -24.8024, 0.36 ) }
    apic_15 { pt3dadd( -78.1864, 634.233, -24.3826, 0.36 ) }
    apic_15 { pt3dadd( -78.2488, 634.242, -24.3555, 0.36 ) }
    apic_15 { pt3dadd( -85.0187, 634.841, -20.8849, 0.36 ) }
    apic_15 { pt3dadd( -91.7065, 636.972, -17.8899, 0.36 ) }
    apic_15 { pt3dadd( -98.882, 637.962, -15.4882, 0.36 ) }
    apic_15 { pt3dadd( -106.208, 638.731, -13.4948, 0.36 ) }
    apic_15 { pt3dadd( -113.818, 639.286, -13.375, 0.36 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 74/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -10.5392, 532.98, -37.6663, 0.72 ) }
    apic_10 { pt3dadd( -10.5875, 535.835, -39.3071, 0.72 ) }
    apic_10 { pt3dadd( -10.5959, 535.92, -39.3576, 0.72 ) }
    apic_10 { pt3dadd( -10.8717, 538.099, -40.6427, 0.72 ) }
    apic_10 { pt3dadd( -11.0025, 539.096, -41.1816, 0.72 ) }
    apic_10 { pt3dadd( -11.1731, 540.495, -41.8966, 0.72 ) }
    apic_10 { pt3dadd( -11.187, 540.654, -41.9732, 0.72 ) }
    apic_10 { pt3dadd( -11.276, 543.792, -43.1744, 0.72 ) }
    apic_10 { pt3dadd( -11.2735, 543.92, -43.2195, 0.72 ) }
    apic_10 { pt3dadd( -11.1469, 546.386, -44.0145, 0.72 ) }
    apic_10 { pt3dadd( -11.0964, 547.109, -44.2234, 0.72 ) }
    apic_10 { pt3dadd( -10.9257, 549.4, -44.8955, 0.72 ) }
    apic_10 { pt3dadd( -10.6553, 553.781, -46.1229, 0.72 ) }
    apic_10 { pt3dadd( -10.6517, 553.964, -46.1677, 0.72 ) }
    apic_10 { pt3dadd( -10.742, 555.302, -46.4871, 0.72 ) }
    apic_10 { pt3dadd( -10.8079, 555.751, -46.5919, 0.72 ) }
    apic_10 { pt3dadd( -11.252, 557.633, -47.0074, 0.72 ) }
    apic_10 { pt3dadd( -12.0628, 560.103, -47.4876, 0.6 ) }
    apic_10 { pt3dadd( -13.5445, 563.872, -48.1643, 0.6 ) }
    apic_10 { pt3dadd( -14.4743, 566.307, -48.546, 0.6 ) }
    apic_10 { pt3dadd( -14.6041, 566.658, -48.5929, 0.6 ) }
    apic_10 { pt3dadd( -15.1026, 568.203, -48.7447, 0.6 ) }
    apic_10 { pt3dadd( -15.9739, 571.345, -48.9487, 0.48 ) }
    apic_10 { pt3dadd( -16.0019, 571.502, -48.9621, 0.48 ) }
    apic_10 { pt3dadd( -16.1137, 573.896, -49.2021, 0.48 ) }
    apic_10 { pt3dadd( -16.0875, 574.191, -49.2336, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    apic_10 { pt3dadd( -15.6979, 576.485, -49.5116, 0.48 ) }
    apic_10 { pt3dadd( -15.6761, 576.57, -49.5262, 0.48 ) }
    apic_10 { pt3dadd( -14.7819, 579.491, -50.1376, 0.48 ) }
    apic_10 { pt3dadd( -14.733, 579.669, -50.175, 0.48 ) }
    apic_10 { pt3dadd( -14.3427, 581.59, -50.5502, 0.48 ) }
    apic_10 { pt3dadd( -14.3226, 581.72, -50.5738, 0.48 ) }
    apic_10 { pt3dadd( -13.8465, 586.016, -51.2706, 0.48 ) }
    apic_10 { pt3dadd( -13.7975, 586.559, -51.3461, 0.48 ) }
    apic_10 { pt3dadd( -13.5768, 589.354, -51.6453, 0.48 ) }
    apic_10 { pt3dadd( -13.1608, 594.438, -52.1329, 0.48 ) }
    apic_10 { pt3dadd( -13.1508, 594.571, -52.1434, 0.48 ) }
    apic_10 { pt3dadd( -12.9865, 596.746, -52.2687, 0.48 ) }
    apic_10 { pt3dadd( -12.9534, 597.227, -52.2807, 0.48 ) }
    apic_10 { pt3dadd( -12.6708, 600.816, -52.3529, 0.48 ) }
    apic_10 { pt3dadd( -12.6251, 601.225, -52.3581, 0.48 ) }
    apic_10 { pt3dadd( -12.2195, 604.27, -52.3623, 0.48 ) }
    apic_10 { pt3dadd( -12.1285, 604.956, -52.3637, 0.48 ) }
    apic_10 { pt3dadd( -11.8522, 607.076, -52.374, 0.48 ) }
    apic_10 { pt3dadd( -11.6388, 608.806, -52.3834, 0.48 ) }
    apic_10 { pt3dadd( -11.5043, 610.199, -52.3915, 0.48 ) }
    apic_10 { pt3dadd( -11.2538, 613.15, -52.4123, 0.48 ) }
    apic_10 { pt3dadd( -11.247, 613.283, -52.4145, 0.48 ) }
    apic_10 { pt3dadd( -11.2046, 617.115, -52.5138, 0.48 ) }
    apic_10 { pt3dadd( -11.2262, 617.649, -52.5332, 0.48 ) }
    apic_10 { pt3dadd( -11.3937, 619.986, -52.6583, 0.48 ) }
    apic_10 { pt3dadd( -11.4303, 620.36, -52.6866, 0.48 ) }
    apic_10 { pt3dadd( -11.5376, 621.9, -52.8753, 0.48 ) }
    apic_10 { pt3dadd( -11.539, 621.985, -52.9004, 0.48 ) }
    apic_10 { pt3dadd( -11.5147, 623.969, -53.7056, 0.48 ) }
    apic_10 { pt3dadd( -11.3601, 625.88, -54.6152, 0.48 ) }
    apic_10 { pt3dadd( -11.3112, 626.115, -54.7547, 0.48 ) }
    apic_10 { pt3dadd( -10.9212, 627.459, -55.634, 0.48 ) }
    apic_10 { pt3dadd( -9.7121, 630.39, -57.8501, 0.48 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 33/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -9.7121, 630.39, -57.8501, 0.48 ) }
    apic_12 { pt3dadd( -9.0104, 630.473, -59.6119, 0.48 ) }
    apic_12 { pt3dadd( -8.28603, 630.636, -61.445, 0.48 ) }
    apic_12 { pt3dadd( -8.19123, 630.666, -61.6987, 0.48 ) }
    apic_12 { pt3dadd( -7.87418, 630.82, -62.5967, 0.48 ) }
    apic_12 { pt3dadd( -7.67798, 630.932, -63.1636, 0.48 ) }
    apic_12 { pt3dadd( -5.45921, 632.611, -68.773, 0.48 ) }
    apic_12 { pt3dadd( -4.98576, 633.061, -69.9979, 0.48 ) }
    apic_12 { pt3dadd( -4.39824, 633.62, -71.2773, 0.48 ) }
    apic_12 { pt3dadd( -3.64491, 634.394, -72.6887, 0.48 ) }
    apic_12 { pt3dadd( -3.53727, 634.518, -72.8517, 0.48 ) }
    apic_12 { pt3dadd( -1.55394, 636.971, -75.0695, 0.48 ) }
    apic_12 { pt3dadd( -1.41086, 637.18, -75.1723, 0.48 ) }
    apic_12 { pt3dadd( -0.173283, 639.096, -75.9991, 0.48 ) }
    apic_12 { pt3dadd( -0.0455852, 639.32, -76.0881, 0.48 ) }
    apic_12 { pt3dadd( 0.966653, 641.299, -76.8835, 0.48 ) }
    apic_12 { pt3dadd( 1.04, 641.464, -76.9522, 0.48 ) }
    apic_12 { pt3dadd( 2.44581, 645.091, -78.4834, 0.48 ) }
    apic_12 { pt3dadd( 2.61765, 645.567, -78.6872, 0.48 ) }
    apic_12 { pt3dadd( 3.35596, 647.88, -79.8365, 0.48 ) }
    apic_12 { pt3dadd( 3.46358, 648.219, -80.0208, 0.48 ) }
    apic_12 { pt3dadd( 4.27797, 650.762, -81.5452, 0.48 ) }
    apic_12 { pt3dadd( 4.89257, 652.656, -82.814, 0.48 ) }
    apic_12 { pt3dadd( 4.96561, 652.882, -82.9774, 0.48 ) }
    apic_12 { pt3dadd( 5.98178, 656.189, -85.4508, 0.48 ) }
    apic_12 { pt3dadd( 6.07065, 656.527, -85.7036, 0.48 ) }
    apic_12 { pt3dadd( 6.48128, 658.505, -87.1745, 0.48 ) }
    apic_12 { pt3dadd( 6.64724, 660.026, -88.3937, 0.48 ) }
    apic_12 { pt3dadd( 6.69803, 661.428, -89.5464, 0.48 ) }
    apic_12 { pt3dadd( 6.68998, 661.68, -89.7445, 0.48 ) }
    apic_12 { pt3dadd( 6.35547, 664.622, -91.9135, 0.48 ) }
    apic_12 { pt3dadd( 6.24901, 665.108, -92.2927, 0.48 ) }
    apic_12 { pt3dadd( 5.57252, 667.173, -93.9894, 0.48 ) }
    apic_12 { pt3dadd( 5.35319, 667.677, -94.4151, 0.48 ) }
    apic_12 { pt3dadd( 4.76413, 668.725, -95.3901, 0.48 ) }
    apic_12 { pt3dadd( 4.68095, 668.852, -95.5091, 0.48 ) }
    apic_12 { pt3dadd( 2.88716, 671.063, -97.7232, 0.48 ) }
    apic_12 { pt3dadd( 2.69691, 671.301, -97.9831, 0.48 ) }
    apic_12 { pt3dadd( 1.72555, 672.587, -99.4161, 0.48 ) }
    apic_12 { pt3dadd( 1.58183, 672.807, -99.682, 0.48 ) }
    apic_12 { pt3dadd( 1.19451, 673.495, -100.613, 0.48 ) }
    apic_12 { pt3dadd( 1.04578, 673.805, -101.035, 0.48 ) }
    apic_12 { pt3dadd( 0.0599568, 676.409, -104.557, 0.48 ) }
    apic_12 { pt3dadd( 0.00817278, 676.573, -104.769, 0.48 ) }
    apic_12 { pt3dadd( -0.314876, 677.876, -106.446, 0.48 ) }
    apic_12 { pt3dadd( -0.605042, 679.058, -108.004, 0.48 ) }
    apic_12 { pt3dadd( -0.832612, 680.014, -109.337, 0.48 ) }
    apic_12 { pt3dadd( -0.902532, 680.281, -109.732, 0.48 ) }
    apic_12 { pt3dadd( -1.13654, 681.024, -110.835, 0.48 ) }
    apic_12 { pt3dadd( -1.34329, 681.614, -111.731, 0.48 ) }
    apic_12 { pt3dadd( -2.01303, 683.409, -114.479, 0.48 ) }
    apic_12 { pt3dadd( -2.46255, 684.56, -116.335, 0.48 ) }
    apic_12 { pt3dadd( -2.88053, 685.574, -118.011, 0.48 ) }
    apic_12 { pt3dadd( -3.60022, 687.269, -120.778, 0.48 ) }
    apic_12 { pt3dadd( -3.64455, 687.372, -120.937, 0.48 ) }
    apic_12 { pt3dadd( -4.41992, 689.12, -123.501, 0.48 ) }
    apic_12 { pt3dadd( -4.83553, 689.931, -124.66, 0.48 ) }
    apic_12 { pt3dadd( -5.48278, 691.047, -126.247, 0.48 ) }
    apic_12 { pt3dadd( -5.54672, 691.15, -126.397, 0.48 ) }
    apic_12 { pt3dadd( -6.01054, 691.852, -127.505, 0.48 ) }
    apic_12 { pt3dadd( -6.90118, 693.21, -129.631, 0.48 ) }
    apic_12 { pt3dadd( -8.1277, 695.08, -132.464, 0.48 ) }
    apic_12 { pt3dadd( -8.43243, 695.586, -133.138, 0.48 ) }
    apic_12 { pt3dadd( -8.98954, 696.715, -134.522, 0.48 ) }
    apic_12 { pt3dadd( -9.32809, 697.689, -135.618, 0.48 ) }
    apic_12 { pt3dadd( -9.5283, 698.596, -136.583, 0.48 ) }
    apic_12 { pt3dadd( -9.588, 699.196, -137.169, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    apic_12 { pt3dadd( -9.5992, 700.787, -138.713, 0.48 ) }
    apic_12 { pt3dadd( -9.5595, 703.278, -141.148, 0.48 ) }
    apic_12 { pt3dadd( -9.5204, 704.71, -142.803, 0.48 ) }
    apic_12 { pt3dadd( -9.47673, 705.818, -144.153, 0.48 ) }
    apic_12 { pt3dadd( -9.40033, 707.104, -145.849, 0.48 ) }
    apic_12 { pt3dadd( -9.38056, 707.356, -146.215, 0.48 ) }
    apic_12 { pt3dadd( -9.284, 708.437, -148.018, 0.48 ) }
    apic_12 { pt3dadd( -9.33389, 711.631, -153.7, 0.48 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 8/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -9.7121, 630.39, -57.8501, 0.48 ) }
    apic_11 { pt3dadd( -9.6882, 632.464, -57.6209, 0.48 ) }
    apic_11 { pt3dadd( -9.757, 634.466, -57.3638, 0.48 ) }
    apic_11 { pt3dadd( -9.7618, 634.584, -57.3478, 0.48 ) }
    apic_11 { pt3dadd( -9.8371, 637.039, -56.9946, 0.48 ) }
    apic_11 { pt3dadd( -9.8377, 637.312, -56.946, 0.48 ) }
    apic_11 { pt3dadd( -9.7919, 640.004, -56.4159, 0.48 ) }
    apic_11 { pt3dadd( -9.7902, 640.146, -56.3949, 0.48 ) }
    apic_11 { pt3dadd( -9.7715, 641.77, -56.2577, 0.48 ) }
    apic_11 { pt3dadd( -9.7692, 642.497, -56.2845, 0.48 ) }
    apic_11 { pt3dadd( -9.7774, 644.077, -56.5747, 0.48 ) }
    apic_11 { pt3dadd( -9.7856, 644.19, -56.6136, 0.48 ) }
    apic_11 { pt3dadd( -10.0855, 647.121, -57.9363, 0.48 ) }
    apic_11 { pt3dadd( -10.1911, 647.666, -58.1939, 0.48 ) }
    apic_11 { pt3dadd( -10.7567, 649.751, -59.2429, 0.48 ) }
    apic_11 { pt3dadd( -10.8765, 650.118, -59.4301, 0.48 ) }
    apic_11 { pt3dadd( -12.1883, 653.67, -61.2753, 0.48 ) }
    apic_11 { pt3dadd( -12.3373, 654.095, -61.4675, 0.48 ) }
    apic_11 { pt3dadd( -13.0576, 656.263, -62.3088, 0.48 ) }
    apic_11 { pt3dadd( -13.1976, 656.718, -62.488, 0.48 ) }
    apic_11 { pt3dadd( -13.6268, 658.228, -63.0803, 0.48 ) }
    apic_11 { pt3dadd( -13.7166, 658.561, -63.2054, 0.48 ) }
    apic_11 { pt3dadd( -14.5362, 661.727, -64.3027, 0.48 ) }
    apic_11 { pt3dadd( -14.7307, 662.525, -64.5551, 0.48 ) }
    apic_11 { pt3dadd( -14.7787, 662.77, -64.6141, 0.48 ) }
    apic_11 { pt3dadd( -15.0462, 664.542, -64.8242, 0.48 ) }
    apic_11 { pt3dadd( -15.1626, 665.264, -64.8249, 0.48 ) }
    apic_11 { pt3dadd( -15.3959, 666.585, -64.7362, 0.48 ) }
    apic_11 { pt3dadd( -15.5641, 667.513, -64.6237, 0.48 ) }
    apic_11 { pt3dadd( -15.8369, 669.098, -64.4051, 0.48 ) }
    apic_11 { pt3dadd( -16.455, 672.869, -63.8742, 0.48 ) }
    apic_11 { pt3dadd( -16.8328, 675.36, -63.5135, 0.48 ) }
    apic_11 { pt3dadd( -16.8493, 675.478, -63.498, 0.48 ) }
    apic_11 { pt3dadd( -17.4099, 679.632, -63.0218, 0.48 ) }
    apic_11 { pt3dadd( -17.4509, 680.007, -62.9816, 0.48 ) }
    apic_11 { pt3dadd( -17.7186, 682.552, -62.6724, 0.48 ) }
    apic_11 { pt3dadd( -17.7613, 683.025, -62.6003, 0.48 ) }
    apic_11 { pt3dadd( -17.855, 684.345, -62.3762, 0.48 ) }
    apic_11 { pt3dadd( -17.8743, 684.689, -62.3136, 0.48 ) }
    apic_11 { pt3dadd( -18.0312, 688.535, -61.5488, 0.48 ) }
    apic_11 { pt3dadd( -18.0808, 690.737, -61.1511, 0.48 ) }
    apic_11 { pt3dadd( -18.0817, 690.904, -61.1227, 0.48 ) }
    apic_11 { pt3dadd( -18.0309, 692.89, -60.773, 0.48 ) }
    apic_11 { pt3dadd( -17.8952, 695.966, -60.255, 0.48 ) }
    apic_11 { pt3dadd( -17.8732, 696.455, -60.2143, 0.48 ) }
    apic_11 { pt3dadd( -17.751, 698.674, -60.2405, 0.48 ) }
    apic_11 { pt3dadd( -17.7364, 698.823, -60.2533, 0.48 ) }
    apic_11 { pt3dadd( -17.4905, 701.291, -60.5978, 0.48 ) }
    apic_11 { pt3dadd( -17.449, 701.699, -60.6847, 0.48 ) }
    apic_11 { pt3dadd( -17.2343, 704.922, -61.5883, 0.48 ) }
    apic_11 { pt3dadd( -17.226, 705.036, -61.6239, 0.48 ) }
    apic_11 { pt3dadd( -17.0948, 706.883, -62.2159, 0.48 ) }
    apic_11 { pt3dadd( -17.0736, 707.109, -62.2946, 0.48 ) }
    apic_11 { pt3dadd( -16.8536, 708.702, -62.93, 0.48 ) }
    apic_11 { pt3dadd( -16.8229, 708.858, -62.9904, 0.48 ) }
    apic_11 { pt3dadd( -16.6302, 709.648, -63.286, 0.48 ) }
    apic_11 { pt3dadd( -16.1785, 711.499, -64.0774, 0.48 ) }
    apic_11 { pt3dadd( -15.7383, 713.411, -64.91, 0.48 ) }
    apic_11 { pt3dadd( -15.41, 714.967, -65.5667, 0.48 ) }
    apic_11 { pt3dadd( -15.3212, 715.568, -65.8187, 0.48 ) }
    apic_11 { pt3dadd( -15.2139, 716.669, -66.2707, 0.48 ) }
    apic_11 { pt3dadd( -15.207, 716.827, -66.3325, 0.48 ) }
    apic_11 { pt3dadd( -15.1772, 720.163, -67.5778, 0.48 ) }
    apic_11 { pt3dadd( -15.1779, 720.391, -67.6519, 0.48 ) }
    apic_11 { pt3dadd( -15.1709, 723.162, -68.5048, 0.48 ) }
    apic_11 { pt3dadd( -15.164, 723.426, -68.5887, 0.48 ) }
    apic_11 { pt3dadd( -15.1066, 724.708, -69.0332, 0.48 ) }
    apic_11 { pt3dadd( -15.0968, 724.867, -69.0927, 0.48 ) }
    apic_11 { pt3dadd( -14.8859, 727.356, -70.1168, 0.48 ) }
    apic_11 { pt3dadd( -14.842, 727.787, -70.2765, 0.48 ) }
    apic_11 { pt3dadd( -14.6483, 729.394, -70.8295, 0.48 ) }
    apic_11 { pt3dadd( -14.6305, 729.575, -70.8904, 0.48 ) }
    apic_11 { pt3dadd( -14.394, 732.589, -71.9159, 0.48 ) }
    apic_11 { pt3dadd( -14.3741, 732.957, -72.0399, 0.48 ) }
    apic_11 { pt3dadd( -14.3784, 735.11, -72.7956, 0.48 ) }
    apic_11 { pt3dadd( -14.3945, 735.555, -72.9592, 0.48 ) }
    apic_11 { pt3dadd( -14.5136, 737.389, -73.6743, 0.48 ) }
    apic_11 { pt3dadd( -14.5398, 737.668, -73.786, 0.48 ) }
    apic_11 { pt3dadd( -15.0372, 740.93, -75.2148, 0.48 ) }
    apic_11 { pt3dadd( -15.3306, 742.599, -75.9783, 0.48 ) }
    apic_11 { pt3dadd( -15.7217, 744.631, -76.8713, 0.48 ) }
    apic_11 { pt3dadd( -15.8017, 745.037, -77.0358, 0.48 ) }
    apic_11 { pt3dadd( -16.1514, 746.592, -77.5888, 0.48 ) }
    apic_11 { pt3dadd( -16.8595, 749.479, -78.4863, 0.48 ) }
    apic_11 { pt3dadd( -16.9267, 749.732, -78.5473, 0.48 ) }
    apic_11 { pt3dadd( -17.6343, 752.625, -79.0566, 0.48 ) }
    apic_11 { pt3dadd( -17.6918, 752.885, -79.0911, 0.48 ) }
    apic_11 { pt3dadd( -18.0761, 754.891, -79.2967, 0.48 ) }
    apic_11 { pt3dadd( -18.0946, 755.009, -79.3051, 0.48 ) }
    apic_11 { pt3dadd( -18.2962, 757.055, -79.3078, 0.48 ) }
    apic_11 { pt3dadd( -18.3099, 757.238, -79.3238, 0.48 ) }
    apic_11 { pt3dadd( -18.2893, 758.399, -79.5503, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    apic_11 { pt3dadd( -18.2829, 758.467, -79.5646, 0.48 ) }
    apic_11 { pt3dadd( -18.1886, 759.059, -79.6965, 0.48 ) }
    apic_11 { pt3dadd( -18.1779, 759.127, -79.7097, 0.48 ) }
    apic_11 { pt3dadd( -17.6647, 762.395, -80.2982, 0.48 ) }
    apic_11 { pt3dadd( -17.4217, 764.731, -80.6179, 0.48 ) }
    apic_11 { pt3dadd( -17.2883, 766.797, -80.8298, 0.48 ) }
    apic_11 { pt3dadd( -17.2769, 767.045, -80.8482, 0.48 ) }
    apic_11 { pt3dadd( -17.2115, 769.095, -80.934, 0.48 ) }
    apic_11 { pt3dadd( -17.2071, 769.265, -80.9263, 0.48 ) }
    apic_11 { pt3dadd( -17.1879, 771.382, -80.5461, 0.48 ) }
    apic_11 { pt3dadd( -17.193, 771.499, -80.5189, 0.48 ) }
    apic_11 { pt3dadd( -17.3188, 772.919, -80.1618, 0.48 ) }
    apic_11 { pt3dadd( -17.3254, 772.986, -80.1443, 0.48 ) }
    apic_11 { pt3dadd( -17.5532, 775.334, -79.5348, 0.48 ) }
    apic_11 { pt3dadd( -17.6056, 775.935, -79.3871, 0.48 ) }
    apic_11 { pt3dadd( -17.7042, 776.881, -79.2102, 0.48 ) }
    apic_11 { pt3dadd( -17.9283, 778.361, -79.0174, 0.48 ) }
    apic_11 { pt3dadd( -17.9678, 778.525, -79.01, 0.48 ) }
    apic_11 { pt3dadd( -18.6602, 780.703, -79.1724, 0.48 ) }
    apic_11 { pt3dadd( -18.7086, 780.808, -79.2027, 0.48 ) }
    apic_11 { pt3dadd( -19.4603, 782.224, -79.7912, 0.48 ) }
    apic_11 { pt3dadd( -19.6177, 782.487, -79.936, 0.48 ) }
    apic_11 { pt3dadd( -20.3942, 783.689, -80.739, 0.48 ) }
    apic_11 { pt3dadd( -20.8038, 784.279, -81.1681, 0.48 ) }
    apic_11 { pt3dadd( -21.7568, 785.464, -82.2098, 0.48 ) }
    apic_11 { pt3dadd( -21.8572, 785.59, -82.327, 0.48 ) }
    apic_11 { pt3dadd( -22.5323, 786.45, -83.1474, 0.48 ) }
    apic_11 { pt3dadd( -22.651, 786.604, -83.2873, 0.48 ) }
    apic_11 { pt3dadd( -23.0738, 787.17, -83.7873, 0.48 ) }
    apic_11 { pt3dadd( -23.5701, 787.851, -84.3197, 0.48 ) }
    apic_11 { pt3dadd( -24.6559, 789.28, -85.466, 0.48 ) }
    apic_11 { pt3dadd( -24.9506, 789.635, -85.7739, 0.48 ) }
    apic_11 { pt3dadd( -25.5221, 790.258, -86.3707, 0.48 ) }
    apic_11 { pt3dadd( -25.5894, 790.329, -86.44, 0.48 ) }
    apic_11 { pt3dadd( -25.9611, 790.712, -86.8109, 0.48 ) }
    apic_11 { pt3dadd( -26.6482, 791.425, -87.4259, 0.48 ) }
    apic_11 { pt3dadd( -27.4085, 792.112, -88.0741, 0.48 ) }
    apic_11 { pt3dadd( -27.4628, 792.158, -88.129, 0.48 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 38/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -9.33389, 711.631, -153.7, 0.48 ) }
    apic_14 { pt3dadd( -7.49866, 711.922, -153.149, 0.48 ) }
    apic_14 { pt3dadd( -6.97122, 712.015, -153.015, 0.48 ) }
    apic_14 { pt3dadd( -5.70055, 712.281, -152.777, 0.48 ) }
    apic_14 { pt3dadd( -4.24821, 712.627, -152.689, 0.48 ) }
    apic_14 { pt3dadd( -4.15195, 712.651, -152.689, 0.48 ) }
    apic_14 { pt3dadd( -3.47814, 712.819, -152.712, 0.48 ) }
    apic_14 { pt3dadd( -2.96797, 712.961, -152.784, 0.48 ) }
    apic_14 { pt3dadd( -1.50687, 713.374, -153.06, 0.48 ) }
    apic_14 { pt3dadd( 0.117837, 713.845, -153.341, 0.48 ) }
    apic_14 { pt3dadd( 0.180467, 713.864, -153.349, 0.48 ) }
    apic_14 { pt3dadd( 1.50015, 714.267, -153.531, 0.48 ) }
    apic_14 { pt3dadd( 1.88741, 714.387, -153.585, 0.48 ) }
    apic_14 { pt3dadd( 3.08271, 714.752, -153.733, 0.48 ) }
    apic_14 { pt3dadd( 4.53077, 715.192, -153.856, 0.48 ) }
    apic_14 { pt3dadd( 4.5937, 715.212, -153.857, 0.48 ) }
    apic_14 { pt3dadd( 6.11004, 715.708, -153.877, 0.48 ) }
    apic_14 { pt3dadd( 6.30333, 715.779, -153.879, 0.48 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 56/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -9.33389, 711.631, -153.7, 0.48 ) }
    apic_13 { pt3dadd( -9.31679, 713.002, -154.322, 0.48 ) }
    apic_13 { pt3dadd( -9.3155, 713.054, -154.346, 0.48 ) }
    apic_13 { pt3dadd( -9.27036, 714.387, -154.912, 0.48 ) }
    apic_13 { pt3dadd( -9.26677, 714.487, -154.953, 0.48 ) }
    apic_13 { pt3dadd( -9.19862, 715.748, -155.436, 0.48 ) }
    apic_13 { pt3dadd( -9.11787, 717.076, -155.932, 0.48 ) }
    apic_13 { pt3dadd( -9.10928, 717.178, -155.967, 0.48 ) }
    apic_13 { pt3dadd( -9.03882, 717.968, -156.264, 0.48 ) }
    apic_13 { pt3dadd( -9.02088, 718.117, -156.325, 0.48 ) }
    apic_13 { pt3dadd( -8.83951, 719.457, -156.888, 0.48 ) }
    apic_13 { pt3dadd( -8.82147, 719.577, -156.939, 0.48 ) }
    apic_13 { pt3dadd( -8.67816, 720.492, -157.315, 0.48 ) }
    apic_13 { pt3dadd( -8.67034, 720.544, -157.336, 0.48 ) }
    apic_13 { pt3dadd( -8.56904, 721.403, -157.673, 0.48 ) }
    apic_13 { pt3dadd( -8.45472, 722.718, -158.167, 0.48 ) }
    apic_13 { pt3dadd( -8.44698, 722.887, -158.228, 0.48 ) }
    apic_13 { pt3dadd( -8.41089, 724.485, -158.774, 0.48 ) }
    apic_13 { pt3dadd( -8.4101, 724.558, -158.796, 0.48 ) }
    apic_13 { pt3dadd( -8.41111, 726.046, -159.21, 0.48 ) }
    apic_13 { pt3dadd( -8.41394, 726.406, -159.309, 0.48 ) }
    apic_13 { pt3dadd( -8.40311, 727.245, -159.542, 0.48 ) }
    apic_13 { pt3dadd( -8.38399, 727.541, -159.636, 0.48 ) }
    apic_13 { pt3dadd( -8.2637, 728.513, -160.007, 0.48 ) }
    apic_13 { pt3dadd( -8.24085, 728.624, -160.053, 0.48 ) }
    apic_13 { pt3dadd( -7.92793, 729.658, -160.626, 0.48 ) }
    apic_13 { pt3dadd( -7.87365, 729.818, -160.729, 0.48 ) }
    apic_13 { pt3dadd( -7.56679, 730.639, -161.303, 0.48 ) }
    apic_13 { pt3dadd( -7.47821, 730.874, -161.485, 0.48 ) }
    apic_13 { pt3dadd( -7.24892, 731.498, -162.051, 0.48 ) }
    apic_13 { pt3dadd( -6.80056, 732.856, -163.347, 0.48 ) }
    apic_13 { pt3dadd( -6.79224, 732.896, -163.386, 0.48 ) }
    apic_13 { pt3dadd( -6.70476, 733.645, -164.084, 0.48 ) }
    apic_13 { pt3dadd( -6.70116, 733.967, -164.361, 0.48 ) }
    apic_13 { pt3dadd( -6.75179, 734.914, -165.115, 0.48 ) }
    apic_13 { pt3dadd( -6.93076, 736.28, -166.103, 0.48 ) }
    apic_13 { pt3dadd( -7.248, 738.008, -167.213, 0.48 ) }
    apic_13 { pt3dadd( -7.31867, 738.307, -167.383, 0.48 ) }
    apic_13 { pt3dadd( -7.6566, 739.364, -167.916, 0.48 ) }
    apic_13 { pt3dadd( -7.71232, 739.518, -167.98, 0.48 ) }
    apic_13 { pt3dadd( -7.91847, 740.041, -168.13, 0.48 ) }
    apic_13 { pt3dadd( -7.94067, 740.093, -168.141, 0.48 ) }
    apic_13 { pt3dadd( -8.40273, 741.215, -168.349, 0.48 ) }
    apic_13 { pt3dadd( -8.81241, 742.242, -168.572, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    apic_13 { pt3dadd( -8.92678, 742.531, -168.639, 0.48 ) }
    apic_13 { pt3dadd( -9.30257, 743.46, -168.848, 0.48 ) }
    apic_13 { pt3dadd( -9.45282, 743.811, -168.918, 0.48 ) }
    apic_13 { pt3dadd( -10.0558, 745.164, -169.16, 0.48 ) }
    apic_13 { pt3dadd( -10.2165, 745.507, -169.207, 0.48 ) }
    apic_13 { pt3dadd( -10.6658, 746.427, -169.28, 0.48 ) }
    apic_13 { pt3dadd( -10.84, 746.765, -169.291, 0.48 ) }
    apic_13 { pt3dadd( -11.1999, 747.433, -169.288, 0.48 ) }
    apic_13 { pt3dadd( -11.2452, 747.517, -169.283, 0.48 ) }
    apic_13 { pt3dadd( -12.3981, 749.613, -169.091, 0.48 ) }
    apic_13 { pt3dadd( -12.4714, 749.747, -169.08, 0.48 ) }
    apic_13 { pt3dadd( -13.2682, 751.214, -168.975, 0.48 ) }
    apic_13 { pt3dadd( -13.3952, 751.456, -168.959, 0.48 ) }
    apic_13 { pt3dadd( -14.0644, 752.76, -168.874, 0.48 ) }
    apic_13 { pt3dadd( -14.0991, 752.828, -168.869, 0.48 ) }
    apic_13 { pt3dadd( -14.9541, 754.525, -168.72, 0.48 ) }
    apic_13 { pt3dadd( -15.0282, 754.678, -168.708, 0.48 ) }
    apic_13 { pt3dadd( -15.6128, 756.078, -168.633, 0.48 ) }
    apic_13 { pt3dadd( -15.6487, 756.18, -168.63, 0.48 ) }
    apic_13 { pt3dadd( -15.8815, 757.073, -168.635, 0.48 ) }
    apic_13 { pt3dadd( -16.085, 758.066, -168.653, 0.48 ) }
    apic_13 { pt3dadd( -16.0911, 758.16, -168.661, 0.48 ) }
    apic_13 { pt3dadd( -16.0897, 759.359, -168.828, 0.48 ) }
    apic_13 { pt3dadd( -16.0638, 759.667, -168.884, 0.48 ) }
    apic_13 { pt3dadd( -15.9396, 760.578, -169.04, 0.48 ) }
    apic_13 { pt3dadd( -15.9227, 760.651, -169.052, 0.48 ) }
    apic_13 { pt3dadd( -15.2112, 763.222, -169.451, 0.48 ) }
    apic_13 { pt3dadd( -15.1401, 763.449, -169.484, 0.48 ) }
    apic_13 { pt3dadd( -14.6926, 764.741, -169.659, 0.48 ) }
    apic_13 { pt3dadd( -14.4345, 765.387, -169.728, 0.48 ) }
    apic_13 { pt3dadd( -13.4088, 767.654, -169.924, 0.48 ) }
    apic_13 { pt3dadd( -13.335, 767.801, -169.934, 0.48 ) }
    apic_13 { pt3dadd( -12.8197, 768.695, -169.971, 0.48 ) }
    apic_13 { pt3dadd( -12.7649, 768.787, -169.975, 0.48 ) }
    apic_13 { pt3dadd( -12.155, 769.825, -170.024, 0.48 ) }
    apic_13 { pt3dadd( -12.1273, 769.874, -170.026, 0.48 ) }
    apic_13 { pt3dadd( -11.2585, 771.583, -169.982, 0.48 ) }
    apic_13 { pt3dadd( -11.2345, 771.635, -169.978, 0.48 ) }
    apic_13 { pt3dadd( -10.7865, 772.704, -169.888, 0.48 ) }
    apic_13 { pt3dadd( -10.2915, 773.986, -169.772, 0.48 ) }
    apic_13 { pt3dadd( -10.1639, 774.364, -169.738, 0.48 ) }
    apic_13 { pt3dadd( -9.6943, 775.804, -169.586, 0.48 ) }
    apic_13 { pt3dadd( -9.5242, 776.372, -169.508, 0.48 ) }
    apic_13 { pt3dadd( -9.25189, 777.318, -169.376, 0.48 ) }
    apic_13 { pt3dadd( -9.19143, 777.556, -169.343, 0.48 ) }
    apic_13 { pt3dadd( -8.91332, 778.681, -169.178, 0.48 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_26, apic_1, axon_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_26 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_28 ModelViewParmSubset_1.append()
    apic_27 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_25 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_30, dend_19, dend_10, dend_0, apic_26, apic_1, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, apic_28, apic_27, apic_23, apic_2, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, apic_25, apic_24, apic_22, apic_3, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_26 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_28 ModelViewParmSubset_3.append()
    apic_27 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_25 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_20 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_19 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_26, apic_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_26 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_28 ModelViewParmSubset_4.append()
    apic_27 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_25 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_26, apic_1, apic_28, apic_27, apic_23, apic_2, apic_25, apic_24, apic_22, apic_3, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_26 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_28 ModelViewParmSubset_6.append()
    apic_27 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_25 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_30, dend_19, dend_10, dend_0, apic_26, apic_1, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, apic_28, apic_27, apic_23, apic_2, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, apic_25, apic_24, apic_22, apic_3, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7, apic_21, apic_4, apic_20, apic_5, apic_7, apic_6, apic_17, apic_8, apic_19, apic_18, apic_16, apic_9, apic_15, apic_10, apic_12, apic_11, apic_14, apic_13]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_26 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_28 ModelViewParmSubset_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_27 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_51 ModelViewParmSubset_7.append()
    dend_50 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_25 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_53 ModelViewParmSubset_7.append()
    dend_52 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    apic_21 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_30, dend_19, dend_10, dend_0, dend_49, dend_44, dend_38, dend_31, dend_25, dend_20, dend_12, dend_11, dend_9, dend_4, dend_1, dend_51, dend_50, dend_48, dend_45, dend_42, dend_39, dend_35, dend_32, dend_29, dend_26, dend_24, dend_21, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_53, dend_52, dend_47, dend_46, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_8, dend_7]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_51 ModelViewParmSubset_8.append()
    dend_50 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_53 ModelViewParmSubset_8.append()
    dend_52 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_21 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_4 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_74 = new SectionList()
    apic_6 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_75 = new SectionList()
    apic_17 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_76 = new SectionList()
    apic_8 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_77 = new SectionList()
    apic_19 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_78 = new SectionList()
    apic_18 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_79 = new SectionList()
    apic_16 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_81 = new SectionList()
    apic_15 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_82 = new SectionList()
    apic_10 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_83 = new SectionList()
    apic_12 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_84 = new SectionList()
    apic_11 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_86 = new SectionList()
    apic_13 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_72 = new SectionList()
    apic_5 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_73 = new SectionList()
    apic_7 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_80 = new SectionList()
    apic_9 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_85 = new SectionList()
    apic_14 OneSecGrp_SectionRef_85.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26, apic_27, apic_28], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()
    apic_25 apical.append()
    apic_26 apical.append()
    apic_27 apical.append()
    apic_28 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.025689999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039763  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.288755  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.029455999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 6.71E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.098377  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.957198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 1.936176  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.072928995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0038689997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.97688496  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 6.8399997E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 6.9999996E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 4.59E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0055919997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_231_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_231_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_26 nseg = 5
    apic_1 nseg = 3
    dend_11 nseg = 9
    dend_9 nseg = 7
    apic_27 nseg = 7
    apic_23 nseg = 3
    apic_2 nseg = 3
    dend_48 nseg = 15
    dend_45 nseg = 5
    dend_35 nseg = 3
    dend_29 nseg = 9
    dend_26 nseg = 3
    dend_24 nseg = 11
    dend_21 nseg = 11
    dend_16 nseg = 7
    dend_13 nseg = 3
    dend_5 nseg = 9
    dend_3 nseg = 7
    dend_2 nseg = 5
    apic_25 nseg = 7
    apic_24 nseg = 5
    apic_22 nseg = 11
    apic_3 nseg = 5
    dend_53 nseg = 7
    dend_52 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 5
    dend_33 nseg = 9
    dend_28 nseg = 3
    dend_23 nseg = 7
    dend_22 nseg = 5
    dend_17 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 5
    apic_21 nseg = 11
    apic_4 nseg = 5
    apic_20 nseg = 13
    apic_6 nseg = 9
    apic_17 nseg = 9
    apic_8 nseg = 7
    apic_19 nseg = 7
    apic_18 nseg = 3
    apic_16 nseg = 11
    apic_15 nseg = 9
    apic_10 nseg = 5
    apic_12 nseg = 7
    apic_11 nseg = 9
    apic_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr231_L6_TPC_L1_f2d985e7ff_0_0


