// Cell: dSTUT214_L5_LBC_bf8ea1e366_0_0
/*
{
  "id" : "dSTUT214_L5_LBC_bf8ea1e366_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.291345, -11.9572, -0.745668, 2.83924", "0.329834, -10.8055, -0.67345, 4.66212", "0.368323, -9.65383, -0.601232, 6.28225", "0.406811, -8.50213, -0.529013, 7.64969", "0.4453, -7.35043, -0.456795, 8.93084", "0.483789, -6.19873, -0.384577, 10.0574", "0.522278, -5.04703, -0.312359, 10.8977", "0.560767, -3.89533, -0.24014, 11.5145", "0.599255, -2.74363, -0.167922, 11.78", "0.637744, -1.59192, -0.0957039, 11.9272", "0.676233, -0.440222, -0.0234857, 12.0017", "0.714722, 0.711479, 0.0487325, 11.8836", "0.75321, 1.86318, 0.120951, 11.6932", "0.791699, 3.01488, 0.193169, 11.3303", "0.830188, 4.16658, 0.265387, 10.9521", "0.868677, 5.31828, 0.337605, 9.94576", "0.907166, 6.46999, 0.409824, 8.97095", "0.945654, 7.62169, 0.482042, 7.75467", "0.984143, 8.77339, 0.55426, 5.92032", "1.02263, 9.92509, 0.626478, 4.15016", "1.06112, 11.0768, 0.698697, 2.55961" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13709, 10.0606, -8.92677, 1.08", "-2.01002, 10.3083, -8.87754, 0.96", "-2.93797, 10.5521, -8.77368, 1.44", "-3.5209, 10.7025, -8.69634, 1.68", "-4.23408, 10.8691, -8.59841, 1.68", "-5.54059, 11.1518, -8.42282, 1.2", "-6.62631, 11.3622, -8.30585, 0.72", "-7.45284, 11.5018, -8.25991, 0.6", "-7.716, 11.5464, -8.27743, 0.6", "-8.53542, 11.7057, -8.41175, 1.44", "-9.21724, 11.8674, -8.60449, 2.28", "-10.2119, 12.1779, -9.03878, 2.16", "-11.3425, 12.6671, -9.82258, 1.08", "-12.4431, 13.3442, -10.9286, 0.48", "-12.7003, 13.5822, -11.2953, 0.48", "-12.9614, 13.9751, -11.8707, 1.08", "-13.1177, 14.3731, -12.4206, 1.68", "-13.3379, 15.6808, -14.0964, 1.8", "-13.3495, 16.2583, -14.7826, 1.44", "-13.3151, 16.9356, -15.5298, 0.72", "-13.3065, 17.3522, -15.9774, 0.12", "-13.3355, 17.6167, -16.2284, 0.12", "-13.3963, 17.8052, -16.367, 0.12", "-13.6115, 18.1505, -16.4813, 0.48", "-13.6909, 18.2453, -16.5055, 0.12", "-14.2007, 18.7717, -16.6151, 0.12", "-14.8653, 19.4371, -16.761, 1.8", "-15.4325, 20.0129, -16.8902, 2.76", "-15.882, 20.4762, -16.9895, 3.0", "-16.5398, 21.1765, -17.1293, 1.92", "-17.2146, 21.8797, -17.2548, 0.48", "-17.7753, 22.4642, -17.3312, 0.36", "-18.3591, 23.0821, -17.3741, 0.84", "-18.9113, 23.6833, -17.3907, 0.6", "-19.3486, 24.1513, -17.3818, 0.36", "-20.0297, 24.8724, -17.3605, 0.36", "-20.5282, 25.3898, -17.3734, 1.56", "-21.372, 26.2316, -17.4265, 3.49", "-21.6279, 26.4832, -17.4556, 3.85", "-22.2561, 27.1087, -17.5208, 4.33", "-22.9883, 27.8438, -17.5943, 3.25", "-24.2067, 29.1205, -17.7075, 0.12", "-24.6726, 29.6137, -17.7457, 0.12", "-24.9132, 29.8798, -17.7553, 0.12", "-25.6104, 30.7016, -17.7521, 0.96", "-25.8102, 30.9613, -17.7382, 1.08", "-26.4125, 31.7884, -17.647, 0.72", "-26.9349, 32.5503, -17.6609, 0.12", "-27.5483, 33.4346, -17.7856, 0.12", "-27.7826, 33.7705, -17.8673, 1.2", "-28.1507, 34.3018, -18.048, 2.16", "-28.5569, 34.8727, -18.2976, 1.92", "-29.799, 36.5728, -19.1769, 0.12", "-30.0193, 36.8726, -19.3608, 0.24", "-30.3881, 37.3779, -19.6955, 0.24", "-30.6518, 37.7399, -19.9461, 0.24", "-31.5016, 38.912, -20.7905, 3.25", "-31.766, 39.2842, -21.0521, 3.97", "-32.2377, 39.9663, -21.4342, 3.97", "-32.5819, 40.4635, -21.7433, 3.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.302907, 10.6305, 4.01323, 1.8", "-0.0770466, 11.294, 4.47757, 1.32", "-0.514529, 11.9825, 5.29027, 0.72", "-0.763804, 12.4188, 5.9415, 0.48", "-0.999987, 12.9152, 6.79589, 0.48", "-1.18031, 13.4715, 7.83361, 0.6", "-1.27976, 14.2659, 9.42351, 1.68", "-1.20671, 14.9391, 11.0518, 1.68", "-1.0427, 15.2694, 12.0244, 1.56", "-0.724465, 15.5676, 13.0471, 1.44", "-0.229398, 15.8141, 14.0844, 0.72", "0.59801, 16.0334, 15.238, 0.84", "0.897922, 16.0619, 15.5256, 0.84", "1.79906, 16.0319, 16.2377, 0.6", "2.4795, 15.9654, 16.87, 0.84", "3.22685, 15.824, 17.6248, 1.08", "3.95538, 15.6594, 18.4384, 1.08", "4.60697, 15.5096, 19.2301, 1.2", "5.74665, 15.2795, 20.6537, 1.32", "7.73936, 15.0393, 23.2889, 1.32", "8.25402, 15.0379, 23.9952, 0.6", "8.62621, 15.0816, 24.5367, 0.96", "8.81824, 15.1373, 24.8414, 1.92", "9.25407, 15.3723, 25.4951, 2.16", "10.3905, 16.2989, 26.708, 1.44", "11.0224, 16.9648, 27.036, 0.84", "11.5303, 17.5132, 27.2554, 0.84", "12.156, 18.1421, 27.491, 0.84", "12.6849, 18.7854, 27.6685, 0.84", "13.0285, 19.3341, 27.7595, 0.48", "13.5441, 20.2193, 27.7579, 0.48", "14.0321, 21.0175, 27.7599, 1.32", "14.0766, 21.077, 27.7604, 1.56", "14.8613, 21.9026, 27.7809, 1.2", "15.216, 22.2927, 27.8066, 1.68", "21.1733, 25.5213, 36.379, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.672909, -10.925, -3.94677, 2.52", "0.712795, -12.365, -4.56091, 1.8", "0.731642, -14.2795, -5.36778, 1.92", "0.738411, -17.0885, -6.43231, 1.68", "0.734147, -19.957, -7.4196, 2.64", "0.710828, -22.4876, -8.21747, 4.09", "0.656888, -25.8246, -9.18893, 3.49", "0.535537, -28.7241, -9.94889, 2.16", "0.390132, -30.5665, -10.3572, 1.56", "0.195921, -32.2215, -10.6158, 1.32", "-0.0379016, -33.7718, -10.7563, 1.2", "-0.274935, -35.1462, -10.822, 1.44", "-0.742184, -37.4043, -10.8612, 1.92", "-1.1715, -39.1641, -10.8584, 2.88", "-1.65985, -40.9088, -10.9258, 3.0", "-1.94284, -41.8054, -10.9655, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.06112, 11.0768, 0.698697, 0.837299", "1.56213, 26.0684, 0.698697, 0.837299", "2.06313, 41.0601, 0.698697, 0.837299" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-32.5819, 40.4635, -21.7433, 0.12", "-33.9634, 40.9459, -21.7025, 0.12", "-34.9717, 41.2705, -21.6737, 0.12", "-35.9061, 41.5405, -21.6476, 0.12", "-36.278, 41.6464, -21.6244, 1.08", "-36.642, 41.7501, -21.5956, 0.12", "-37.4585, 41.9811, -21.4988, 0.12", "-37.9471, 42.1047, -21.4126, 1.8", "-38.5787, 42.2527, -21.266, 2.76", "-39.6561, 42.507, -20.9507, 0.12", "-39.8516, 42.5601, -20.8872, 0.12", "-40.4251, 42.7333, -20.6885, 0.12", "-40.7853, 42.8555, -20.5987, 0.12", "-41.3502, 43.0471, -20.5419, 0.96", "-41.7032, 43.1642, -20.5604, 0.12", "-42.3827, 43.381, -20.6971, 0.12", "-42.7452, 43.4938, -20.7903, 0.96", "-43.9884, 43.8748, -21.1577, 0.12", "-44.606, 44.0604, -21.3421, 0.12", "-44.9578, 44.1599, -21.4441, 0.96", "-45.4018, 44.2783, -21.5922, 0.12", "-45.7498, 44.3706, -21.713, 0.12", "-46.4073, 44.5339, -21.8505, 0.12", "-46.9979, 44.6571, -21.8692, 1.56", "-47.4649, 44.7455, -21.859, 2.4", "-48.3548, 44.8814, -21.7942, 2.4", "-48.5632, 44.9084, -21.7608, 2.16", "-50.0374, 45.0753, -21.4286, 0.12", "-50.667, 45.1237, -21.1951, 0.12", "-50.9409, 45.1445, -21.0718, 0.24", "-51.4618, 45.1891, -20.8227, 0.24", "-52.1571, 45.2504, -20.4753, 1.92", "-52.4296, 45.2729, -20.3552, 2.16", "-53.7316, 45.4152, -19.875, 0.12", "-54.4138, 45.4988, -19.6317, 0.12", "-55.0484, 45.5745, -19.4206, 0.96", "-55.34, 45.614, -19.3356, 0.12", "-56.0798, 45.7185, -19.1614, 0.12", "-56.5361, 45.7899, -19.0477, 0.84", "-56.9015, 45.8528, -18.9626, 0.12", "-57.7579, 46.0139, -18.7293, 0.12", "-58.3586, 46.1466, -18.5621, 1.8", "-58.6432, 46.2203, -18.4884, 2.04", "-59.4711, 46.4837, -18.3006, 1.92", "-60.1171, 46.7096, -18.1781, 0.12", "-60.9769, 47.0429, -18.0431, 0.12", "-61.8787, 47.4239, -17.9384, 2.52", "-62.7321, 47.7937, -17.9096, 0.12", "-64.0427, 48.3808, -17.9664, 0.12", "-64.6136, 48.6528, -18.0262, 1.08", "-64.8477, 48.7652, -18.0555, 0.12", "-65.6092, 49.1279, -18.1676, 0.12", "-66.6346, 49.5887, -18.2944, 0.12", "-67.0284, 49.7402, -18.3267, 0.12", "-67.764, 49.9773, -18.3445, 1.68", "-68.2567, 50.1128, -18.3348, 2.28", "-68.5485, 50.1817, -18.3169, 2.4", "-69.6006, 50.4009, -18.1971, 0.12", "-70.1461, 50.5233, -18.085, 0.12", "-70.5998, 50.6312, -17.9951, 0.84", "-71.0286, 50.7505, -17.8941, 0.12", "-71.468, 50.9112, -17.7744, 0.12", "-71.9192, 51.1021, -17.6463, 0.48", "-72.8667, 51.5449, -17.3686, 2.4", "-73.2288, 51.7258, -17.2488, 2.64", "-74.334, 52.2994, -16.8394, 0.12", "-74.9843, 52.6651, -16.5674, 0.12", "-75.5606, 53.0061, -16.3105, 1.08" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-32.5819, 40.4635, -21.7433, 0.72", "-33.338, 41.9889, -22.4989, 0.72", "-33.6482, 42.6494, -22.8364, 0.72", "-34.0439, 43.4798, -23.2895, 0.72", "-34.4059, 44.2225, -23.6902, 0.36", "-34.6996, 44.8314, -24.0245, 0.24", "-34.8362, 45.1319, -24.1832, 0.24", "-35.1075, 45.8672, -24.546, 0.6", "-35.3131, 46.4675, -24.8138, 0.84", "-35.5396, 47.1215, -25.0374, 0.48", "-35.7111, 47.5816, -25.192, 0.24", "-35.9323, 48.1643, -25.3867, 0.24", "-36.0639, 48.5088, -25.4962, 0.36", "-36.3839, 49.3688, -25.7405, 0.6", "-36.7016, 50.2235, -25.9677, 0.6", "-37.0509, 51.1543, -26.2745, 0.12", "-37.2636, 51.7113, -26.4999, 0.12", "-37.6288, 52.6053, -26.9136, 2.04", "-37.7241, 52.842, -27.0293, 2.64", "-37.9628, 53.5086, -27.3615, 2.76", "-38.2516, 54.3758, -27.7638, 2.64", "-38.687, 55.8105, -28.2732, 0.12", "-38.9452, 56.7101, -28.5354, 0.12", "-39.0363, 57.0527, -28.6102, 0.12", "-39.2195, 57.7418, -28.7356, 0.12", "-39.4567, 58.5871, -28.8597, 0.12", "-39.7331, 59.5547, -28.9441, 1.68", "-39.912, 60.1868, -28.9924, 2.64", "-40.0185, 60.5625, -29.0314, 2.64", "-40.1844, 61.1218, -29.0982, 2.4", "-40.593, 62.4504, -29.2717, 0.36", "-41.0119, 63.858, -29.5302, 0.36", "-41.0891, 64.1152, -29.6034, 0.36", "-41.1674, 64.3742, -29.6682, 0.12", "-41.598, 65.7711, -29.9679, 0.12", "-41.8667, 66.6076, -30.141, 1.92", "-42.2475, 67.7329, -30.4991, 2.76", "-42.8767, 69.4833, -31.1946, 0.12", "-43.6177, 71.5125, -32.0627, 0.12", "-43.9701, 72.417, -32.4889, 2.04", "-44.2867, 73.1796, -32.8881, 2.76", "-45.4281, 75.7842, -34.2787, 0.12", "-45.7877, 76.5612, -34.6931, 0.12", "-46.3565, 77.7058, -35.3198, 0.12", "-46.8849, 78.709, -35.9513, 0.48", "-47.1233, 79.1282, -36.2154, 0.12", "-47.7831, 80.2528, -36.8543, 0.12", "-48.5181, 81.4768, -37.461, 2.88", "-48.8217, 81.9669, -37.7153, 3.12", "-49.4366, 82.9523, -38.2241, 2.16", "-50.2327, 84.2876, -38.843, 0.12", "-50.6457, 84.9827, -39.1901, 0.12", "-50.8829, 85.3893, -39.4095, 0.12", "-51.2876, 86.0965, -39.7974, 0.12", "-51.5698, 86.6046, -40.0697, 1.2", "-51.8608, 87.1456, -40.3299, 1.44", "-52.6526, 88.6158, -41.0263, 0.12", "-52.897, 89.057, -41.277, 0.12", "-53.4518, 90.0716, -41.8892, 0.12", "-53.741, 90.6222, -42.23, 1.56", "-54.0224, 91.1404, -42.5459, 2.16", "-54.2185, 91.4969, -42.7475, 2.28", "-55.188, 93.2549, -43.5434, 0.48", "-55.5007, 93.8069, -43.7784, 0.48", "-55.6607, 94.0977, -43.9055, 0.48", "-55.8713, 94.5028, -44.1697, 0.24", "-56.0429, 94.8407, -44.4224, 0.24", "-56.3964, 95.5727, -45.0229, 1.8", "-56.5495, 95.9041, -45.2961, 2.64", "-56.9918, 96.9298, -46.1715, 2.88", "-57.8257, 99.1049, -48.0671, 0.36", "-58.053, 99.7778, -48.6376, 0.36", "-58.1983, 100.265, -49.0291, 0.12", "-58.4111, 101.075, -49.6248, 1.56", "-58.4603, 101.28, -49.7601, 1.68", "-58.6807, 102.257, -50.3039, 0.24", "-58.8936, 103.272, -50.7892, 0.24", "-59.1402, 104.504, -51.3963, 2.64", "-59.2758, 105.165, -51.7233, 3.0", "-59.7069, 107.221, -52.8016, 0.24", "-59.9443, 108.301, -53.3774, 1.68", "-60.0579, 108.783, -53.6367, 1.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "21.1733, 25.5213, 36.379, 0.12", "26.2203, 29.0321, 43.3235, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "21.1733, 25.5213, 36.379, 0.12", "27.4263, 29.7296, 45.0774, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.94284, -41.8054, -10.9655, 0.12", "-1.35285, -42.7414, -11.5962, 0.12", "-0.98603, -43.4043, -12.0617, 0.12", "-0.705667, -43.9758, -12.4484, 0.12", "-0.145539, -45.2216, -13.2585, 1.56", "-0.00147714, -45.565, -13.487, 1.56", "0.558071, -46.9128, -14.3282, 0.12", "0.770011, -47.5132, -14.741, 0.12", "0.935631, -47.9903, -15.0743, 0.12", "1.02208, -48.2208, -15.2272, 0.12", "1.36808, -49.0749, -15.7319, 1.44", "1.75948, -49.8255, -16.2337, 1.68", "2.53742, -51.0238, -17.0677, 0.12", "3.01234, -51.6387, -17.4979, 0.12", "3.38996, -52.0699, -17.7779, 0.12", "3.68462, -52.374, -17.9516, 0.12", "4.92284, -53.5291, -18.6458, 1.56", "5.3627, -53.913, -18.8864, 1.56", "6.29879, -54.6637, -19.2887, 0.12", "7.10283, -55.2994, -19.6425, 0.12", "7.65758, -55.7583, -19.8802, 1.08", "8.85348, -56.8438, -20.3164, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.94284, -41.8054, -10.9655, 1.32", "-3.08102, -44.1707, -11.6038, 1.32", "-3.7985, -45.6617, -12.0061, 1.32", "-4.32296, -46.7515, -12.3003, 2.04", "-5.05143, -48.2654, -12.7088, 2.52", "-5.38862, -48.9661, -12.8979, 2.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.06313, 41.0601, 0.698697, 0.72405", "2.56414, 56.0517, 0.698697, 0.72405", "3.06515, 71.0433, 0.698697, 0.72405" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-60.0579, 108.783, -53.6367, 0.12", "-60.4269, 109.267, -53.8515, 0.12", "-60.6251, 109.613, -54.0265, 0.12", "-60.8586, 110.037, -54.2344, 0.72", "-61.0442, 110.394, -54.4765, 0.12", "-61.2983, 110.88, -54.8196, 0.12", "-61.8204, 111.904, -55.529, 0.12", "-62.1542, 112.637, -56.0672, 2.28", "-62.3066, 112.981, -56.3208, 2.52", "-63.0651, 114.71, -57.5886, 0.12", "-63.2849, 115.178, -57.9264, 0.12", "-63.4514, 115.479, -58.1596, 0.48", "-63.7321, 115.913, -58.4909, 0.12", "-64.0576, 116.368, -58.8689, 0.12", "-64.2107, 116.576, -59.0962, 1.2", "-64.4299, 116.842, -59.448, 1.56", "-65.1778, 117.692, -60.6725, 0.24", "-65.3867, 117.919, -61.0101, 0.24", "-65.5705, 118.148, -61.3825, 0.96", "-66.4638, 119.445, -63.55, 0.12", "-66.5715, 119.62, -63.8221, 0.12", "-66.9198, 120.235, -64.712, 2.52", "-66.992, 120.368, -64.8983, 2.52", "-67.8293, 121.944, -67.0592, 0.12", "-67.9337, 122.137, -67.3062, 0.12", "-68.2522, 122.712, -67.9712, 0.84", "-68.3737, 122.937, -68.2511, 0.96", "-68.8477, 123.855, -69.3837, 0.12", "-68.9484, 124.044, -69.5972, 0.12", "-69.0884, 124.301, -69.8346, 0.6", "-69.5684, 125.337, -70.7938, 0.12", "-69.6592, 125.581, -71.0063, 0.12", "-69.8745, 126.333, -71.5432, 0.12", "-69.9875, 126.904, -71.8279, 1.08", "-70.0407, 127.3, -71.9899, 1.08", "-70.0989, 128.003, -72.2344, 0.12", "-70.1199, 128.6, -72.3822, 0.12", "-70.1187, 128.963, -72.496, 0.24", "-70.0943, 129.554, -72.7032, 0.12", "-70.0681, 129.949, -72.8374, 0.12", "-69.9892, 130.608, -73.0496, 0.96", "-69.9289, 130.929, -73.0953, 0.96", "-69.6989, 131.917, -73.1121, 0.12", "-69.5652, 132.429, -73.1543, 0.12", "-69.4822, 132.738, -73.1921, 0.36", "-69.259, 133.669, -73.3895, 0.36", "-69.0062, 135.173, -74.1259, 0.72", "-68.9885, 135.368, -74.2569, 0.72", "-68.9261, 137.041, -75.5025, 1.56", "-68.9219, 137.453, -75.8359, 2.04", "-68.9626, 138.198, -76.4533, 2.52", "-69.1579, 139.8, -77.905, 0.12", "-69.2239, 140.272, -78.3289, 0.24", "-69.2848, 140.706, -78.6516, 0.12", "-69.3286, 141.032, -78.8404, 0.12", "-69.4348, 141.823, -79.2478, 0.12", "-69.5587, 142.608, -79.5629, 0.12", "-69.7001, 143.311, -79.7847, 1.56", "-69.7609, 143.601, -79.8891, 1.92", "-70.1188, 145.09, -80.4423, 0.12", "-70.3828, 146.09, -80.7975, 0.12", "-70.5909, 146.851, -81.0666, 1.56", "-70.7194, 147.242, -81.1952, 1.92", "-71.0836, 148.267, -81.555, 0.12", "-71.3701, 149.1, -81.846, 0.12", "-71.5312, 149.607, -82.0031, 0.48", "-71.659, 150.057, -82.164, 0.12", "-71.7833, 150.66, -82.429, 0.12", "-71.8806, 151.323, -82.7324, 0.12", "-71.9405, 151.947, -83.0012, 0.12", "-71.9628, 152.609, -83.2952, 1.32", "-71.965, 152.907, -83.4167, 1.56", "-71.968, 154.461, -83.9806, 0.12", "-71.9779, 155.069, -84.2438, 0.12", "-72.0119, 155.643, -84.4959, 0.12", "-72.0366, 156.007, -84.6518, 0.12", "-72.1105, 156.868, -85.0087, 1.68", "-72.1337, 157.075, -85.0956, 1.8", "-72.3791, 158.877, -85.7715, 0.12", "-72.5215, 160.032, -86.2292, 0.12", "-72.6012, 160.603, -86.4519, 1.08", "-72.6615, 161.014, -86.6077, 1.2", "-72.7715, 161.908, -86.9155, 0.12", "-72.8966, 162.998, -87.233, 0.12", "-73.0095, 164.022, -87.4631, 1.8", "-73.0738, 164.627, -87.6132, 2.04", "-73.1537, 165.558, -87.8401, 0.12", "-73.2004, 166.514, -88.0428, 0.12", "-73.2122, 166.95, -88.1016, 0.48" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-60.0579, 108.783, -53.6367, 0.12", "-59.8282, 109.709, -53.5067, 0.12", "-59.6212, 110.6, -53.3812, 0.12", "-59.4146, 111.595, -53.1918, 0.72", "-59.2856, 112.487, -53.0228, 0.12", "-59.1043, 113.983, -52.7498, 0.12", "-59.0596, 114.427, -52.6721, 1.2", "-59.0359, 114.8, -52.5864, 0.72", "-59.0166, 115.792, -52.3476, 0.12", "-59.0635, 118.018, -51.825, 0.12", "-59.084, 118.646, -51.6914, 0.96", "-59.1045, 119.157, -51.5578, 1.44", "-59.1642, 120.48, -51.1903, 0.12", "-59.2083, 121.358, -50.9067, 0.12", "-59.2417, 122.087, -50.6582, 0.24", "-59.2595, 122.699, -50.424, 0.24", "-59.2725, 123.683, -50.0479, 0.24", "-59.2714, 124.977, -49.4837, 2.52", "-59.2468, 126.692, -48.7095, 0.24", "-59.2106, 127.736, -48.2154, 0.24", "-59.1912, 128.155, -48.0154, 0.48", "-59.1746, 128.423, -47.8978, 0.12", "-58.9436, 131.4, -46.7036, 0.12", "-58.877, 132.126, -46.4162, 1.92", "-58.7994, 132.733, -46.2114, 2.16", "-58.5981, 134.013, -45.7994, 0.12", "-58.2792, 135.732, -45.3007, 0.12", "-58.2497, 135.854, -45.2754, 0.36", "-58.1298, 136.219, -45.2423, 0.12", "-57.4992, 137.997, -45.1205, 0.12", "-57.0638, 139.209, -45.0037, 2.04", "-56.8611, 139.749, -44.9418, 1.56", "-56.3536, 141.066, -44.7431, 0.12", "-56.1251, 141.65, -44.6439, 0.12", "-55.8831, 142.248, -44.5216, 0.12", "-55.3576, 143.581, -44.2003, 0.12", "-55.1029, 144.259, -44.0378, 1.56", "-54.9758, 144.585, -43.9354, 2.16", "-54.6464, 145.393, -43.6045, 1.32", "-54.2979, 146.171, -43.285, 0.12", "-54.0799, 146.599, -43.1226, 0.12", "-53.7185, 147.302, -42.9088, 0.12", "-53.316, 148.117, -42.6636, 0.12", "-53.0197, 148.723, -42.491, 1.08", "-52.7835, 149.224, -42.3634, 1.8", "-52.3002, 150.227, -42.0495, 0.12", "-51.8668, 151.089, -41.6752, 0.12", "-51.6027, 151.622, -41.4151, 0.12", "-51.3433, 152.152, -41.1494, 0.12", "-50.9637, 152.891, -40.7825, 0.12", "-50.2335, 154.241, -40.0971, 1.32", "-49.5595, 155.437, -39.5282, 0.12", "-48.858, 156.682, -39.0429, 0.12", "-48.6945, 156.998, -38.9572, 0.96", "-48.2961, 157.851, -38.861, 0.48", "-48.1199, 158.28, -38.8762, 0.48", "-47.8498, 159.093, -39.006, 0.12", "-47.5324, 160.316, -39.2575, 2.04", "-47.359, 161.08, -39.3915, 2.28", "-47.0936, 162.388, -39.5637, 0.12", "-46.9344, 163.258, -39.5956, 0.12", "-46.7909, 164.023, -39.5741, 0.12", "-46.6835, 164.528, -39.5295, 0.12", "-46.349, 165.749, -39.3864, 0.12", "-46.0574, 166.59, -39.2679, 0.12", "-45.587, 167.668, -39.0912, 1.32", "-45.3758, 168.067, -39.0247, 1.32", "-45.0015, 168.67, -38.9322, 0.12", "-44.2221, 169.833, -38.8766, 0.12", "-43.8567, 170.357, -38.9197, 0.12", "-43.4205, 170.941, -39.0282, 1.2", "-43.1351, 171.293, -39.1434, 1.56", "-42.3892, 172.178, -39.4832, 0.12", "-41.3055, 173.421, -40.0118, 0.12", "-40.6658, 174.164, -40.3655, 1.44", "-40.3024, 174.576, -40.5694, 2.16", "-39.2295, 175.732, -41.1997, 0.12", "-38.9254, 176.036, -41.3776, 0.12", "-38.4693, 176.432, -41.6427, 0.12", "-38.051, 176.743, -41.8528, 0.12", "-37.3339, 177.267, -42.2201, 0.12", "-36.5268, 177.839, -42.6192, 1.2", "-36.326, 177.98, -42.7184, 1.2", "-35.4574, 178.585, -43.1629, 0.12", "-35.1887, 178.78, -43.3376, 0.12", "-34.7241, 179.127, -43.6645, 0.12", "-34.0024, 179.726, -44.2222, 0.12", "-33.5365, 180.176, -44.6336, 1.32", "-33.3301, 180.397, -44.8527, 1.44", "-32.4154, 181.463, -45.9319, 0.12", "-32.127, 181.813, -46.3107, 0.12", "-31.988, 181.983, -46.5086, 0.12", "-31.3579, 182.822, -47.4768, 0.12", "-30.8768, 183.495, -48.1723, 1.44", "-30.6705, 183.795, -48.4629, 1.92", "-30.2803, 184.374, -48.9596, 1.44", "-29.7198, 185.28, -49.7171, 0.12", "-29.5085, 185.613, -49.9771, 0.12", "-28.9436, 186.364, -50.4899, 0.12", "-28.3354, 187.131, -50.9661, 1.44", "-28.0106, 187.513, -51.1889, 1.92", "-26.9084, 188.701, -51.8468, 0.12", "-26.3343, 189.296, -52.1512, 0.12", "-25.2059, 190.366, -52.7351, 0.12", "-24.9936, 190.543, -52.8398, 0.84", "-24.553, 190.888, -53.0289, 0.96", "-23.6763, 191.532, -53.3967, 0.12", "-23.0195, 191.986, -53.65, 0.12", "-22.4095, 192.449, -53.9499, 0.72", "-21.7776, 193.035, -54.3714, 0.12", "-21.2248, 193.649, -54.7978, 0.12", "-20.8992, 194.1, -55.087, 1.2", "-20.7034, 194.466, -55.3329, 1.44", "-20.2345, 195.525, -56.0617, 0.12", "-19.8108, 196.724, -56.8468, 0.12", "-19.5595, 197.571, -57.3948, 2.52", "-19.4301, 198.083, -57.7867, 2.52", "-18.9777, 200.026, -59.3596, 0.24", "-18.8287, 200.579, -59.827, 0.24", "-18.677, 201.051, -60.2578, 0.24", "-18.4341, 201.617, -60.8212, 1.32", "-17.4673, 203.282, -62.7196, 0.12", "-17.1337, 203.712, -63.3438, 0.12", "-16.6444, 204.21, -64.1572, 0.72", "-15.8935, 204.888, -65.3582, 0.12", "-15.5975, 205.127, -65.8261, 0.12", "-14.5705, 205.915, -67.3914, 2.76", "-12.5661, 207.434, -70.314, 0.12", "-12.1359, 207.784, -71.0296, 0.12", "-12.0079, 207.906, -71.2696, 1.32", "-11.0798, 208.919, -73.1028, 0.12", "-10.8289, 209.255, -73.634, 0.12", "-10.6413, 209.564, -74.0275, 0.96", "-9.8434, 211.02, -75.5014, 0.12", "-9.50171, 211.624, -76.1029, 0.12", "-8.83915, 212.71, -77.0672, 2.4", "-7.95957, 214.022, -78.0912, 0.12", "-7.44675, 214.717, -78.6277, 0.12", "-7.08794, 215.157, -78.9581, 1.44", "-6.0735, 216.315, -79.7735, 0.12", "-5.11619, 217.339, -80.5417, 0.12", "-4.95547, 217.502, -80.6713, 0.84", "-4.36569, 218.075, -81.1661, 0.12", "-3.52762, 218.855, -81.8797, 0.48", "-2.92042, 219.411, -82.3741, 0.12", "-2.49282, 219.794, -82.7011, 0.12", "-1.58336, 220.594, -83.3807, 1.8", "-0.84396, 221.253, -83.8566, 0.12", "-0.313656, 221.732, -84.1232, 0.12", "0.1486, 222.168, -84.2924, 0.72", "0.664084, 222.656, -84.3943, 0.12", "1.47302, 223.418, -84.465, 0.12", "1.99076, 223.92, -84.4864, 0.72", "2.43943, 224.296, -84.55, 0.12", "2.90068, 224.653, -84.6405, 0.12", "4.74027, 225.956, -85.3103, 0.12", "5.4861, 226.451, -85.6468, 1.92", "6.56492, 227.097, -86.322, 0.12", "9.01397, 228.441, -88.2408, 0.12", "10.0587, 228.988, -89.1732, 0.12", "12.2298, 230.061, -91.3213, 0.12", "13.1379, 230.499, -92.3648, 2.28", "14.9666, 231.332, -94.8589, 0.72", "15.5945, 231.568, -96.2406, 0.12", "15.5251, 231.588, -95.3933, 0.12", "15.5703, 231.665, -94.6956, 1.2", "15.7413, 231.856, -93.5633, 0.6", "17.5164, 233.972, -82.6954, 0.12", "17.6268, 234.115, -82.0356, 0.12", "17.6913, 234.203, -81.6258, 0.6", "17.7403, 234.271, -81.2634, 0.12", "17.8781, 234.463, -79.4982, 0.12", "17.737, 234.11, -78.5602, 0.12", "18.2002, 235.102, -79.3105, 1.56", "18.3005, 235.322, -79.4751, 1.8", "18.9714, 236.706, -80.4367, 0.12", "19.6256, 237.953, -81.2327, 0.12", "20.0169, 238.624, -81.6353, 0.12", "20.6989, 239.668, -82.2348, 1.8", "21.582, 240.841, -82.8308, 0.12", "22.5989, 242.038, -83.394, 0.12", "23.0276, 242.475, -83.6129, 1.08", "23.9113, 243.26, -84.0704, 0.12", "24.6458, 243.858, -84.4566, 0.12", "25.4699, 244.481, -84.9259, 0.12", "25.8268, 244.729, -85.1476, 1.08", "27.5359, 245.828, -86.3551, 0.12", "28.0522, 246.159, -86.7251, 0.12", "28.5562, 246.49, -87.1036, 1.44", "29.3613, 247.074, -87.9088, 1.92", "29.5149, 247.196, -88.0884, 1.92", "30.2608, 247.831, -89.0007, 0.12", "30.7731, 248.294, -89.637, 0.12", "31.3122, 248.812, -90.3621, 1.08", "32.5899, 250.101, -92.1882, 0.12", "32.7883, 250.302, -92.4943, 0.12", "33.0036, 250.507, -92.8718, 0.6", "33.4338, 250.871, -93.6687, 0.12", "33.5673, 250.973, -93.9158, 0.12", "33.9233, 251.206, -94.516, 1.2", "34.7412, 251.729, -95.7049, 1.2", "35.7012, 252.387, -97.0675, 0.24", "36.0204, 252.621, -97.514, 0.24", "36.1569, 252.733, -97.6982, 0.84", "36.7049, 253.233, -98.4012, 0.12", "37.4631, 253.951, -99.2644, 0.12", "37.6729, 254.175, -99.4776, 0.12", "38.3603, 254.987, -100.189, 0.96", "38.5574, 255.231, -100.411, 0.96", "38.7025, 255.429, -100.59, 0.96", "39.1269, 256.103, -101.239, 0.48", "39.3056, 256.405, -101.559, 0.48", "39.5903, 256.961, -102.137, 0.12", "39.796, 257.374, -102.498, 0.12", "40.423, 258.616, -103.449, 0.12", "40.8025, 259.356, -103.921, 0.84", "40.9847, 259.731, -104.137, 1.08", "41.4529, 260.644, -104.642, 0.12", "42.031, 261.81, -105.219, 0.12", "42.2636, 262.252, -105.413, 1.08", "42.6488, 262.875, -105.529, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.38862, -48.9661, -12.8979, 0.48", "-6.44796, -49.2964, -12.9666, 0.48", "-7.02712, -49.4884, -13.0156, 0.48", "-7.9465, -49.8058, -13.1037, 0.84", "-8.72284, -50.091, -13.183, 0.96", "-9.29824, -50.3086, -13.243, 0.96", "-9.88774, -50.5387, -13.3039, 0.12", "-10.1539, -50.6551, -13.3636, 0.12", "-10.3, -50.7205, -13.4136, 0.12", "-10.5487, -50.8285, -13.5483, 0.48", "-10.7461, -50.9153, -13.6786, 0.48", "-10.9825, -51.0157, -13.8394, 0.6", "-11.8498, -51.3463, -14.4248, 0.12", "-12.1489, -51.4523, -14.6214, 0.12", "-12.7692, -51.6695, -15.0096, 2.16", "-12.9872, -51.7466, -15.1413, 3.0", "-13.4556, -51.9181, -15.405, 3.12", "-14.7666, -52.4198, -16.0541, 0.12", "-15.009, -52.5183, -16.1477, 0.12", "-15.2748, -52.6282, -16.2419, 0.12", "-15.4861, -52.7167, -16.3041, 0.12", "-15.7903, -52.8471, -16.3987, 0.12", "-16.1032, -52.9855, -16.4965, 0.12", "-17.0274, -53.4265, -16.7518, 2.28", "-17.2562, -53.5404, -16.8207, 3.25", "-17.5479, -53.6965, -16.9117, 3.25", "-18.1556, -54.0459, -17.115, 2.52", "-18.9513, -54.5369, -17.3886, 0.12", "-19.1814, -54.6818, -17.518, 0.12", "-19.3141, -54.7714, -17.6141, 0.12", "-19.7585, -55.0795, -17.9778, 1.68", "-20.1029, -55.3259, -18.2688, 2.04", "-20.3504, -55.5076, -18.4756, 2.04", "-21.8542, -56.6133, -19.8688, 0.12", "-22.0466, -56.7496, -20.0567, 0.12", "-22.1925, -56.8492, -20.2071, 0.12", "-22.6631, -57.1582, -20.7364, 2.4", "-22.9117, -57.3253, -21.0214, 3.12" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.38862, -48.9661, -12.8979, 0.96", "-5.02245, -50.1273, -12.938, 0.96", "-4.86347, -50.6466, -12.955, 0.48", "-4.74307, -51.067, -12.984, 0.48", "-4.59074, -51.6887, -13.0525, 0.6", "-4.42586, -52.5194, -13.199, 0.6", "-4.31321, -53.3227, -13.3756, 0.6", "-4.24577, -54.2487, -13.6357, 0.6", "-4.23781, -55.0567, -13.8928, 1.44", "-4.28142, -55.7206, -14.1142, 2.04", "-4.44191, -56.6914, -14.4528, 1.92", "-4.72751, -57.7322, -14.8354, 1.08", "-5.05568, -58.6024, -15.1574, 0.48", "-5.30249, -59.1474, -15.3456, 0.36", "-5.51658, -59.5696, -15.4765, 0.36", "-5.68248, -59.8728, -15.5545, 0.36", "-5.97364, -60.3402, -15.6359, 0.36", "-6.39029, -60.9164, -15.7126, 2.04", "-7.00592, -61.7, -15.7778, 3.97" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-73.2122, 166.95, -88.1016, 0.12", "-72.7413, 167.149, -88.4448, 0.12", "-71.378, 167.723, -89.4386, 0.12", "-71.0375, 167.867, -89.6868, 0.84", "-69.2232, 168.632, -91.0094, 0.12", "-68.7793, 168.819, -91.333, 0.12", "-68.5639, 168.91, -91.4899, 0.6" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-73.2122, 166.95, -88.1016, 0.24", "-73.5988, 167.831, -88.4636, 0.24", "-73.9052, 168.47, -88.7309, 0.24", "-74.2011, 169.057, -88.9616, 0.24", "-74.4127, 169.452, -89.104, 1.44", "-74.6639, 169.921, -89.2729, 2.04", "-75.3484, 171.198, -89.7334, 0.12", "-75.7739, 171.951, -89.9722, 0.24", "-76.1137, 172.533, -90.1828, 0.24", "-76.5021, 173.191, -90.4439, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-22.9117, -57.3253, -21.0214, 1.68", "-23.7921, -58.2147, -21.1897, 1.68", "-24.2567, -58.7022, -21.267, 2.28", "-24.92, -59.3523, -21.3707, 0.12", "-25.2317, -59.6271, -21.4161, 0.12", "-25.618, -59.9423, -21.4701, 0.12", "-25.768, -60.0534, -21.4906, 0.12", "-26.5336, -60.4988, -21.543, 2.04", "-27.0433, -60.7643, -21.5436, 2.28", "-27.9594, -61.2205, -21.492, 0.12", "-28.3391, -61.4046, -21.4653, 0.12", "-29.1808, -61.7966, -21.385, 0.12", "-30.168, -62.2285, -21.2824, 1.68", "-30.7276, -62.4542, -21.2144, 2.04", "-31.3473, -62.7147, -21.1184, 0.12", "-32.0827, -63.0245, -20.9768, 0.12", "-32.6028, -63.2523, -20.8693, 1.2" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-22.9117, -57.3253, -21.0214, 0.12", "-24.1373, -58.4208, -23.0897, 0.12", "-24.3502, -58.5931, -23.3906, 0.12", "-24.6292, -58.7973, -23.7365, 0.84", "-24.9454, -59.0021, -24.0479, 0.84", "-26.4151, -59.9164, -25.3107, 0.12", "-26.7338, -60.0979, -25.5523, 0.12", "-27.5936, -60.5223, -26.0767, 0.12", "-27.9246, -60.666, -26.2654, 0.12", "-29.0968, -61.1155, -26.8696, 2.28", "-29.3616, -61.2075, -26.9868, 2.64", "-29.9823, -61.4048, -27.2244, 2.76", "-31.579, -61.9189, -27.9218, 0.12", "-32.5284, -62.2218, -28.3799, 0.12", "-32.9411, -62.3593, -28.6068, 0.48", "-33.2488, -62.4685, -28.8107, 0.48", "-33.8635, -62.7187, -29.2322, 0.12", "-34.3829, -62.9817, -29.6994, 0.84", "-34.6638, -63.1485, -29.989, 1.2", "-35.1457, -63.4755, -30.5113, 1.2", "-35.7619, -63.9108, -31.1526, 0.12", "-36.4433, -64.4024, -31.7806, 0.12", "-37.9792, -65.5258, -33.0127, 0.12", "-38.4453, -65.8743, -33.3525, 1.92", "-39.2474, -66.5022, -33.8884, 2.88", "-40.645, -67.631, -34.6682, 0.12", "-41.661, -68.4967, -35.1406, 0.12", "-42.2777, -69.0543, -35.3745, 1.68", "-42.6748, -69.4412, -35.4807, 2.04", "-43.4723, -70.2872, -35.7013, 1.44", "-43.9989, -70.9097, -35.8408, 0.12", "-44.3981, -71.4318, -35.9238, 0.12", "-44.6735, -71.8141, -35.9881, 0.6", "-45.1819, -72.5355, -36.0989, 0.12", "-45.3603, -72.7667, -36.1434, 0.12", "-45.9189, -73.3906, -36.283, 0.12", "-46.1826, -73.648, -36.3598, 0.36", "-46.3997, -73.832, -36.4341, 0.12", "-47.26, -74.5032, -36.7434, 0.12", "-48.2428, -75.2031, -37.0929, 1.2", "-48.7169, -75.5159, -37.2918, 1.92", "-49.1463, -75.7914, -37.5125, 1.92", "-50.2286, -76.4657, -38.1177, 0.12", "-50.5269, -76.6339, -38.2881, 0.12", "-50.8552, -76.7994, -38.5088, 0.12", "-51.9245, -77.302, -39.2742, 0.72", "-52.4497, -77.5342, -39.6983, 0.12", "-53.0808, -77.7826, -40.2347, 0.12", "-53.6924, -77.9976, -40.936, 1.32", "-54.7122, -78.3147, -42.2624, 0.12", "-55.103, -78.4234, -42.812, 0.12", "-55.9436, -78.6262, -44.0419, 1.92", "-56.2221, -78.719, -44.5292, 1.92", "-57.8159, -79.4205, -47.7462, 0.12", "-58.1401, -79.6046, -48.4756, 0.12", "-58.8716, -80.0753, -50.1065, 2.4", "-58.9766, -80.1526, -50.3461, 2.64", "-60.6983, -81.5182, -54.1623, 0.12", "-61.3061, -82.0171, -55.4356, 0.84", "-61.8277, -82.4574, -56.4124, 0.12", "-62.359, -82.923, -57.3956, 0.12", "-63.1032, -83.5823, -58.7141, 1.44", "-63.3869, -83.8152, -59.1511, 1.68", "-64.4817, -84.5278, -60.3415, 0.12", "-64.8699, -84.7683, -60.7253, 0.12", "-65.0763, -84.8879, -60.9289, 0.48", "-65.61, -85.1842, -61.5349, 0.12", "-66.0926, -85.4273, -62.0719, 0.12", "-66.823, -85.7527, -62.8803, 1.68", "-67.0078, -85.8175, -63.0701, 1.8", "-67.9329, -86.0544, -64.0119, 1.08", "-68.8294, -86.2402, -64.8811, 0.12", "-69.2609, -86.3125, -65.3077, 0.12", "-70.1826, -86.4291, -66.2476, 2.16", "-70.5738, -86.4653, -66.6516, 2.4", "-72.1691, -86.5255, -68.2527, 0.48", "-72.5753, -86.5142, -68.6433, 0.48", "-73.7884, -86.3972, -69.8029, 0.12", "-74.1376, -86.3378, -70.1448, 0.12", "-74.4862, -86.2443, -70.4789, 0.12", "-75.1039, -85.9999, -71.0345, 0.12", "-75.6365, -85.7341, -71.5306, 0.6", "-75.9244, -85.5909, -71.8262, 0.96", "-76.7609, -85.212, -72.669, 0.12", "-77.1681, -85.0747, -73.1978, 0.12", "-77.9881, -84.8713, -74.3712, 2.4", "-79.3062, -84.6582, -76.4428, 0.12", "-79.8353, -84.5993, -77.4657, 0.36", "-80.0574, -84.5892, -77.9833, 0.72", "-81.3711, -84.6598, -81.4751, 1.44", "-81.5157, -84.6799, -81.882, 1.68", "-81.7023, -84.7199, -82.4123, 1.92", "-83.0369, -85.0285, -86.2464, 0.48", "-83.4247, -85.1093, -87.3198, 0.12", "-83.6063, -85.1394, -87.777, 0.12", "-83.8713, -85.1732, -88.2918, 0.12", "-84.2183, -85.2397, -88.8926, 0.48", "-84.9341, -85.4078, -89.9474, 0.12", "-85.1967, -85.4963, -90.2487, 0.12", "-85.9682, -85.7866, -91.0768, 1.68", "-86.4613, -86.0037, -91.6165, 2.64", "-88.8175, -87.2537, -94.168, 0.24", "-89.1273, -87.4414, -94.4973, 0.24", "-89.6743, -87.7976, -95.0591, 0.24", "-90.1741, -88.1384, -95.5673, 0.36", "-90.7156, -88.5113, -96.0893, 0.12", "-91.2092, -88.8177, -96.5129, 0.12", "-92.155, -89.3476, -97.1611, 0.6", "-92.7017, -89.61, -97.5237, 0.12", "-94.2872, -90.241, -98.5217, 2.16", "-94.6476, -90.354, -98.7281, 2.64", "-96.1366, -90.6664, -99.4505, 0.12", "-96.7592, -90.7376, -99.7187, 0.12", "-97.3875, -90.7685, -100.014, 0.96", "-97.8654, -90.7643, -100.279, 0.96", "-98.3314, -90.7271, -100.589, 0.12", "-99.0974, -90.6531, -101.22, 0.12", "-99.99, -90.5878, -102.158, 1.68", "-101.328, -90.5088, -103.912, 1.68", "-101.965, -90.4719, -104.856, 0.12", "-102.268, -90.4548, -105.33, 0.12", "-102.749, -90.4314, -106.111, 0.12", "-103.538, -90.3846, -107.404, 1.68", "-104.645, -90.3077, -109.149, 0.12", "-104.938, -90.2877, -109.546, 0.12", "-105.372, -90.2518, -110.089, 0.12", "-106.503, -90.1099, -111.34, 1.8", "-106.86, -90.0487, -111.674, 1.8", "-108.171, -89.7808, -112.692, 0.12", "-108.749, -89.6709, -113.084, 0.12", "-109.607, -89.5126, -113.65, 0.12", "-110.585, -89.3011, -114.25, 1.2", "-110.703, -89.2717, -114.311, 1.68", "-111.063, -89.1812, -114.483, 1.68", "-112.342, -88.8352, -115.0, 0.12", "-112.849, -88.716, -115.206, 0.12", "-113.651, -88.5695, -115.523, 0.12", "-114.028, -88.4974, -115.665, 0.12", "-114.488, -88.4095, -115.818, 1.08", "-115.008, -88.3185, -115.96, 1.08", "-115.978, -88.1826, -116.032, 0.12", "-116.408, -88.1411, -116.023, 0.12", "-117.204, -88.0917, -115.954, 0.24", "-117.937, -88.0556, -115.896, 0.24", "-118.632, -88.0459, -115.848, 0.24", "-120.461, -88.1021, -115.783, 1.68", "-121.028, -88.1406, -115.78, 2.52", "-121.707, -88.2029, -115.801, 2.52", "-123.278, -88.3443, -115.922, 0.12", "-124.248, -88.3844, -116.047, 0.48", "-124.955, -88.371, -116.189, 0.12", "-125.349, -88.3398, -116.3, 0.12", "-125.822, -88.2797, -116.422, 0.12", "-126.556, -88.1848, -116.632, 0.36", "-127.083, -88.1083, -116.79, 0.12", "-128.134, -88.0176, -117.107, 0.12", "-128.561, -88.0448, -117.228, 1.56", "-128.908, -88.1608, -117.344, 1.56", "-130.06, -88.9644, -117.748, 1.2", "-130.201, -89.1032, -117.797, 0.12", "-130.754, -89.767, -117.985, 0.12", "-130.9, -89.9728, -118.065, 0.12", "-131.053, -90.1692, -118.158, 0.12", "-131.612, -90.8314, -118.56, 0.12", "-131.841, -91.06, -118.758, 1.2", "-132.124, -91.3335, -119.042, 1.44", "-133.14, -92.2493, -120.234, 0.12", "-133.544, -92.598, -120.73, 0.96", "-134.099, -93.0447, -121.404, 1.2", "-135.076, -93.745, -122.554, 0.12", "-135.407, -93.9731, -122.943, 0.12", "-136.169, -94.4682, -123.814, 0.12", "-136.483, -94.6544, -124.131, 0.12", "-137.048, -94.9752, -124.693, 0.12", "-138.373, -95.6021, -125.779, 2.64" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.00592, -61.7, -15.7778, 0.12", "-8.61151, -62.5221, -15.8611, 0.12", "-8.78312, -62.6125, -15.8629, 0.12", "-9.38561, -62.9373, -15.8593, 0.12", "-9.81293, -63.1662, -15.8533, 0.12", "-10.55, -63.5607, -15.842, 0.12", "-11.2581, -63.9398, -15.8323, 1.32", "-11.5635, -64.1088, -15.818, 1.68", "-12.165, -64.4536, -15.7921, 0.72", "-12.6073, -64.7326, -15.7685, 0.12", "-12.8971, -64.9248, -15.7545, 0.12", "-13.1721, -65.1292, -15.7461, 0.12", "-13.4346, -65.3527, -15.7176, 0.6", "-13.6846, -65.5836, -15.6583, 0.6", "-14.0419, -65.9153, -15.5401, 0.12", "-14.2049, -66.0498, -15.5014, 0.12", "-14.3809, -66.1732, -15.4862, 0.12", "-15.4397, -66.8013, -15.5167, 1.92", "-15.8873, -67.0078, -15.5703, 2.76", "-16.3367, -67.1788, -15.6514, 3.0", "-17.4321, -67.5296, -15.9036, 1.68", "-18.1523, -67.7252, -16.1097, 0.12", "-18.6415, -67.8365, -16.273, 0.12", "-19.4518, -67.9942, -16.5855, 0.12", "-19.8564, -68.0759, -16.7335, 0.6", "-20.0338, -68.1159, -16.8066, 0.84", "-20.6536, -68.2687, -17.0699, 0.12", "-21.365, -68.4642, -17.3981, 0.12", "-21.7332, -68.5803, -17.6042, 0.6", "-21.9878, -68.6769, -17.7662, 0.12", "-23.0007, -69.0939, -18.4414, 0.12", "-23.2175, -69.1989, -18.5871, 0.12", "-23.3848, -69.2877, -18.6944, 0.12", "-23.9412, -69.5947, -19.0678, 1.32", "-24.3062, -69.8144, -19.301, 2.4", "-24.6425, -70.0303, -19.4963, 2.88", "-25.0438, -70.3017, -19.6885, 1.92", "-25.5508, -70.679, -19.954, 1.2", "-26.2643, -71.2655, -20.3384, 0.12", "-26.7394, -71.7035, -20.5864, 0.12", "-26.9238, -71.887, -20.6817, 0.72", "-27.274, -72.2576, -20.8653, 0.96", "-27.821, -72.8637, -21.1224, 0.12", "-28.115, -73.2113, -21.2415, 0.12", "-28.6364, -73.8239, -21.4, 0.12", "-28.9356, -74.1692, -21.5136, 0.12", "-29.4234, -74.74, -21.7194, 1.44", "-29.8476, -75.2417, -21.9096, 2.4", "-29.9805, -75.3977, -21.9692, 2.4", "-30.3096, -75.7867, -22.1309, 1.32", "-31.0716, -76.7087, -22.5667, 0.12", "-31.4352, -77.1482, -22.7883, 0.12", "-31.6391, -77.3876, -22.9129, 0.48", "-31.7216, -77.4802, -22.9675, 0.12", "-32.1046, -77.8969, -23.2047, 0.12", "-32.5536, -78.3489, -23.448, 0.96", "-32.7612, -78.5398, -23.5617, 1.56", "-33.0413, -78.791, -23.7729, 1.56", "-33.4946, -79.2075, -24.2301, 0.12", "-33.6873, -79.3872, -24.4594, 0.12", "-33.8431, -79.5543, -24.6629, 0.12", "-34.4508, -80.2693, -25.4616, 0.48", "-34.8448, -80.7789, -25.9938, 0.48", "-35.4393, -81.5864, -26.8399, 2.64", "-35.7736, -82.0592, -27.3305, 3.61", "-36.4198, -83.0067, -28.2919, 0.12", "-36.6806, -83.4147, -28.6709, 0.12", "-36.7646, -83.5539, -28.7714, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.00592, -61.7, -15.7778, 3.25", "-6.87831, -62.1983, -15.9411, 3.25", "-6.59545, -63.4146, -16.2415, 0.36", "-6.54891, -63.6423, -16.2849, 0.36", "-6.48403, -63.9947, -16.3365, 0.36", "-6.39843, -64.4623, -16.3949, 0.36", "-6.32837, -64.948, -16.4278, 0.36", "-6.25307, -65.6759, -16.4335, 2.64", "-6.2152, -66.2392, -16.4024, 3.85", "-6.18254, -66.9553, -16.3595, 4.21", "-6.173, -67.3919, -16.3326, 3.61", "-6.15068, -68.7335, -16.2499, 0.24", "-6.14937, -68.827, -16.2497, 0.24", "-6.13955, -69.5509, -16.2843, 0.36", "-6.10961, -70.1932, -16.3306, 1.08", "-6.04361, -70.9817, -16.4056, 2.04", "-5.97048, -71.6202, -16.4788, 1.56", "-5.79758, -72.761, -16.5963, 0.48", "-5.74143, -73.1177, -16.6172, 0.48", "-5.6208, -73.9379, -16.6277, 0.48", "-5.56721, -74.4392, -16.6061, 0.48", "-5.53312, -75.0007, -16.5577, 0.48", "-5.53539, -75.733, -16.5173, 0.48", "-5.56831, -76.2117, -16.4978, 2.04", "-5.6503, -76.818, -16.5216, 3.0", "-5.74344, -77.318, -16.5814, 3.49", "-5.87129, -77.9827, -16.6925, 2.52", "-6.05923, -79.1092, -16.9283, 0.48", "-6.10469, -79.509, -17.0226, 0.36", "-6.12297, -79.7885, -17.082, 0.36", "-6.13021, -80.2649, -17.1752, 0.6", "-6.12716, -80.7378, -17.2481, 0.6", "-6.12093, -81.2991, -17.3107, 0.36", "-6.10024, -82.1336, -17.371, 0.36", "-6.08985, -82.4577, -17.4113, 0.36", "-6.07666, -83.0693, -17.5203, 1.68", "-6.07712, -83.8636, -17.6904, 3.49", "-6.1051, -84.3755, -17.8162, 4.09", "-6.16428, -84.9197, -17.9629, 3.49", "-6.37461, -86.2675, -18.3299, 0.96", "-6.46158, -86.7844, -18.4739, 0.36", "-6.5028, -87.0332, -18.5407, 0.36", "-6.58718, -87.584, -18.6848, 0.36", "-6.64945, -87.9664, -18.7793, 0.36", "-6.76422, -88.589, -18.9219, 1.2", "-6.88809, -89.2547, -19.0217, 2.88", "-6.95428, -89.8063, -19.0881, 2.76", "-6.97317, -90.2142, -19.1447, 2.64" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-76.5021, 173.191, -90.4439, 0.24", "-76.9632, 173.133, -91.303, 0.24", "-77.2665, 173.131, -91.7508, 0.24", "-78.5465, 173.074, -93.3383, 1.2", "-78.7966, 173.032, -93.6653, 1.2", "-79.4426, 172.843, -94.5117, 0.12", "-79.9026, 172.668, -95.152, 0.12", "-80.3918, 172.428, -95.9029, 0.12", "-80.835, 172.148, -96.5683, 0.12", "-81.7042, 171.49, -97.7656, 0.12", "-82.0449, 171.177, -98.3036, 0.12", "-82.361, 170.817, -98.862, 0.96", "-82.4708, 170.655, -99.1026, 1.08", "-82.5578, 170.504, -99.3207, 1.08", "-82.7701, 170.189, -99.8933, 0.48", "-82.9842, 169.932, -100.431, 0.48", "-83.0315, 169.881, -100.547, 0.48", "-83.1472, 169.759, -100.813, 0.48", "-83.2947, 169.598, -101.174, 0.12", "-83.7412, 169.111, -102.225, 0.12", "-83.8283, 169.022, -102.418, 0.12", "-84.0825, 168.767, -102.976, 1.44", "-84.4099, 168.442, -103.699, 1.8", "-84.8817, 167.98, -104.731, 0.12", "-85.0468, 167.809, -105.079, 0.12", "-85.3263, 167.519, -105.605, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-76.5021, 173.191, -90.4439, 0.12", "-76.4835, 173.611, -90.6246, 0.12", "-76.4548, 174.063, -90.8177, 0.12", "-76.4126, 174.764, -91.0848, 2.4", "-76.4029, 174.977, -91.169, 2.4", "-76.3881, 175.463, -91.3518, 2.16", "-76.3695, 176.336, -91.663, 0.12", "-76.3611, 176.794, -91.8384, 0.12", "-76.3739, 177.183, -91.9875, 0.12", "-76.4031, 177.563, -92.144, 0.12", "-76.4478, 177.936, -92.3471, 1.08", "-76.4792, 178.131, -92.4673, 1.08", "-76.6053, 178.745, -92.948, 0.12", "-76.6806, 179.039, -93.207, 0.12", "-76.8278, 179.514, -93.6906, 0.84", "-77.0623, 180.214, -94.4312, 0.12", "-77.1665, 180.529, -94.7797, 0.12", "-77.2993, 180.95, -95.2395, 1.32", "-77.3459, 181.099, -95.4047, 1.32", "-77.5467, 181.83, -96.213, 0.12", "-77.5994, 182.048, -96.4419, 0.12", "-77.6574, 182.33, -96.7112, 0.12", "-77.7439, 182.845, -97.1876, 0.12", "-77.8854, 183.884, -98.1396, 1.8", "-77.8981, 184.017, -98.2536, 1.8", "-77.9224, 184.48, -98.6025, 0.12", "-77.9404, 185.051, -99.0269, 0.12", "-77.9433, 185.307, -99.2013, 0.6", "-77.9289, 185.936, -99.5477, 0.12", "-77.8928, 186.579, -99.8337, 0.12", "-77.8664, 187.087, -100.039, 1.32", "-77.8263, 187.901, -100.324, 0.12", "-77.8184, 188.42, -100.478, 0.12", "-77.8418, 189.192, -100.646, 0.12", "-77.8471, 189.269, -100.655, 0.12", "-77.9176, 189.804, -100.683, 1.44", "-77.9954, 190.218, -100.659, 1.92", "-78.1706, 190.932, -100.525, 0.12", "-78.2857, 191.321, -100.43, 0.12", "-78.4156, 191.708, -100.286, 0.12", "-78.5563, 192.075, -100.121, 0.12", "-78.7655, 192.542, -99.8736, 0.12", "-78.9998, 193.021, -99.5991, 1.68", "-79.0985, 193.202, -99.4965, 1.68", "-79.5714, 193.948, -99.1142, 0.12", "-79.8142, 194.299, -98.9687, 0.12", "-80.0592, 194.654, -98.857, 1.08", "-80.223, 194.886, -98.8134, 1.08", "-80.4648, 195.205, -98.7787, 0.12", "-80.8082, 195.65, -98.7419, 0.12", "-81.058, 195.962, -98.7343, 0.12", "-81.2163, 196.158, -98.7175, 0.12", "-81.4758, 196.497, -98.6826, 0.12", "-81.9432, 197.124, -98.6091, 0.12", "-82.2306, 197.507, -98.5383, 1.32", "-82.3636, 197.68, -98.5024, 1.68", "-82.865, 198.28, -98.386, 0.24", "-83.3508, 198.84, -98.2912, 0.12", "-83.6431, 199.18, -98.234, 0.12", "-84.1895, 199.819, -98.0975, 1.8", "-84.408, 200.071, -98.0392, 2.04", "-84.9679, 200.726, -97.8482, 0.12", "-85.4134, 201.269, -97.6399, 0.12", "-85.7569, 201.705, -97.45, 0.72", "-86.1166, 202.212, -97.2296, 0.12", "-86.5601, 202.93, -96.9304, 0.12", "-86.8087, 203.414, -96.72, 1.32", "-87.0106, 203.931, -96.4675, 0.12", "-87.2621, 204.763, -96.0584, 0.12", "-87.3203, 205.04, -95.9349, 1.32", "-87.3512, 205.341, -95.8188, 1.44", "-87.355, 205.88, -95.6236, 0.96", "-87.3315, 206.644, -95.3879, 0.12", "-87.3154, 206.947, -95.3102, 0.12", "-87.2664, 207.498, -95.2066, 0.24", "-87.217, 208.081, -95.1461, 0.24", "-87.1746, 208.636, -95.1334, 0.24", "-87.1302, 209.263, -95.169, 1.68", "-87.1006, 209.65, -95.2104, 1.92", "-87.0426, 210.358, -95.2866, 0.12", "-86.9843, 211.064, -95.3619, 0.12", "-86.9429, 211.521, -95.4192, 0.96", "-86.8714, 212.13, -95.5031, 0.12", "-86.7716, 212.972, -95.6217, 0.12", "-86.7343, 213.283, -95.6605, 1.32", "-86.6928, 213.669, -95.697, 1.32", "-86.6558, 214.107, -95.741, 0.24", "-86.6078, 214.719, -95.8036, 0.24", "-86.5835, 215.107, -95.8424, 0.24", "-86.5548, 215.666, -95.8924, 0.24", "-86.5394, 216.437, -95.9872, 1.08", "-86.5411, 216.673, -96.0292, 0.12", "-86.5618, 217.207, -96.141, 0.12", "-86.5916, 217.585, -96.2421, 0.96", "-86.6294, 217.893, -96.3337, 0.12", "-86.851, 219.149, -96.7235, 0.12", "-86.988, 219.821, -96.9364, 1.44", "-87.0611, 220.15, -97.0369, 1.8", "-87.2233, 220.781, -97.2359, 0.12", "-87.3901, 221.398, -97.4212, 0.12", "-87.5721, 222.047, -97.5943, 0.12", "-87.631, 222.264, -97.6371, 0.84", "-87.7098, 222.576, -97.666, 0.84", "-87.8412, 223.15, -97.6775, 0.12", "-87.9494, 223.764, -97.649, 0.12", "-87.991, 224.073, -97.6348, 0.12", "-88.039, 224.539, -97.6034, 1.08", "-88.1163, 225.415, -97.5283, 0.12", "-88.1732, 226.217, -97.4435, 0.12", "-88.1882, 226.65, -97.3508, 0.12", "-88.194, 227.155, -97.218, 0.48", "-88.1937, 227.539, -97.109, 0.12", "-88.1946, 227.908, -96.9968, 0.12", "-88.1832, 228.359, -96.8651, 1.8", "-88.1365, 229.369, -96.4795, 0.12", "-88.1193, 229.726, -96.3302, 0.12", "-88.0919, 230.017, -96.206, 0.36", "-88.0354, 230.421, -96.0586, 0.12", "-87.9464, 230.883, -95.8968, 0.12", "-87.8476, 231.306, -95.7692, 0.12", "-87.7457, 231.751, -95.6532, 0.12", "-87.6296, 232.283, -95.5055, 1.08", "-87.5402, 232.684, -95.3991, 0.12", "-87.4039, 233.326, -95.2457, 0.12", "-87.3389, 233.696, -95.1621, 0.12", "-87.2048, 234.526, -95.0328, 2.04", "-87.118, 235.293, -94.9603, 0.12", "-87.0523, 235.95, -94.936, 0.12", "-87.0004, 236.487, -94.9483, 1.8", "-86.9829, 236.66, -94.9567, 1.8", "-86.887, 237.529, -94.9977, 0.12", "-86.7718, 238.499, -95.0536, 0.12", "-86.7221, 238.996, -95.067, 0.12", "-86.6904, 239.54, -95.0563, 0.72", "-86.6728, 240.222, -94.9872, 0.12", "-86.676, 240.912, -94.8638, 0.12", "-86.6954, 241.283, -94.7626, 1.44", "-86.7331, 241.613, -94.6485, 1.44", "-86.813, 241.982, -94.5144, 0.72", "-86.9876, 242.566, -94.2968, 0.12", "-87.1433, 242.989, -94.1513, 0.12", "-87.2626, 243.266, -94.0453, 0.12", "-87.4769, 243.737, -93.8525, 0.12", "-87.6684, 244.19, -93.6705, 0.96", "-87.7694, 244.455, -93.5745, 0.12", "-87.8663, 244.699, -93.4778, 0.12", "-87.9541, 244.912, -93.3796, 0.12", "-88.072, 245.195, -93.2519, 0.36", "-88.2143, 245.562, -93.1078, 0.36", "-88.2847, 245.765, -93.0069, 0.36", "-88.4765, 246.408, -92.6693, 0.96", "-88.5408, 246.649, -92.5426, 0.96", "-88.6433, 247.047, -92.3403, 0.12", "-88.7388, 247.395, -92.1754, 0.12", "-88.9571, 248.172, -91.8135, 0.12", "-89.0446, 248.528, -91.6607, 1.8", "-89.1119, 248.885, -91.5278, 2.04", "-89.2812, 249.991, -91.1418, 0.12", "-89.3169, 250.356, -91.0167, 0.24", "-89.3195, 250.399, -91.0036, 0.36", "-89.3288, 250.714, -90.9323, 0.12", "-89.3233, 250.95, -90.8828, 0.12", "-89.2677, 251.562, -90.7826, 1.32", "-89.1415, 252.232, -90.6143, 0.12", "-89.0504, 252.681, -90.4801, 0.12", "-89.0099, 252.897, -90.4186, 1.2", "-88.9147, 253.35, -90.3056, 1.92", "-88.8339, 253.698, -90.2258, 1.92", "-88.5022, 255.076, -89.9118, 0.12", "-88.1669, 256.482, -89.6097, 0.12", "-87.8813, 257.664, -89.3513, 0.12", "-87.5639, 258.953, -89.0746, 0.12", "-87.5209, 259.125, -89.0401, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-138.373, -95.6021, -125.779, 0.96", "-139.868, -95.239, -129.618, 0.96", "-140.488, -95.097, -131.093, 0.12", "-140.767, -95.0522, -131.862, 0.12", "-140.998, -95.0152, -132.498, 0.12", "-141.15, -94.9908, -132.916, 1.56", "-142.416, -94.7878, -136.399, 0.84", "-142.699, -94.785, -137.198, 1.08", "-143.72, -94.7554, -140.448, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-138.373, -95.6021, -125.779, 0.36", "-139.536, -96.8804, -126.304, 0.36", "-139.804, -97.1977, -126.442, 0.36", "-140.282, -97.8149, -126.749, 0.36", "-140.766, -98.4793, -127.092, 0.36", "-140.992, -98.8015, -127.253, 0.96", "-141.472, -99.5072, -127.622, 1.44", "-141.577, -99.6681, -127.708, 1.44", "-142.073, -100.396, -128.14, 0.36", "-142.236, -100.621, -128.275, 0.36", "-142.726, -101.249, -128.641, 0.12", "-143.555, -102.242, -129.18, 1.68", "-143.936, -102.684, -129.372, 2.52", "-145.141, -104.034, -129.913, 0.12", "-145.724, -104.667, -130.131, 0.12", "-146.336, -105.323, -130.328, 0.12", "-146.675, -105.679, -130.42, 0.12", "-147.415, -106.437, -130.559, 0.84", "-147.851, -106.899, -130.624, 0.12", "-148.601, -107.682, -130.693, 0.12", "-149.214, -108.315, -130.785, 0.72", "-149.539, -108.65, -130.852, 0.12", "-150.012, -109.143, -130.97, 0.12", "-151.062, -110.239, -131.342, 0.12", "-151.345, -110.556, -131.449, 1.44", "-151.865, -111.181, -131.673, 1.92", "-152.029, -111.39, -131.749, 1.92", "-152.378, -111.878, -131.861, 1.92", "-153.04, -112.892, -131.976, 0.12", "-153.491, -113.616, -132.063, 0.12", "-154.029, -114.492, -132.166, 0.12", "-154.402, -115.066, -132.225, 0.12", "-155.43, -116.506, -132.539, 1.56", "-155.912, -117.128, -132.708, 1.56", "-156.92, -118.081, -133.615, 1.56", "-157.326, -118.393, -134.085, 0.12", "-158.067, -118.894, -135.038, 0.12", "-158.878, -119.433, -136.156, 0.12", "-159.673, -119.953, -137.325, 2.76", "-162.175, -121.639, -141.24, 0.48", "-162.429, -121.826, -141.638, 0.48", "-162.583, -121.944, -141.899, 0.12", "-162.913, -122.21, -142.47, 0.12", "-163.362, -122.604, -143.219, 1.08", "-164.124, -123.305, -144.47, 0.12", "-164.593, -123.807, -145.028, 0.12", "-165.22, -124.499, -145.743, 0.84", "-165.657, -124.995, -146.204, 0.84", "-166.004, -125.372, -146.496, 0.12", "-166.379, -125.798, -146.745, 0.12", "-167.117, -126.644, -147.116, 0.12", "-167.448, -127.043, -147.273, 0.12", "-167.702, -127.383, -147.37, 0.12", "-168.289, -128.222, -147.594, 0.12", "-168.917, -129.131, -147.792, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.97317, -90.2142, -19.1447, 0.12", "-6.3595, -91.0407, -19.1919, 0.12", "-6.03242, -91.4573, -19.2188, 0.12", "-5.71733, -91.8516, -19.2457, 0.96", "-5.18939, -92.4413, -19.1958, 0.36", "-4.7507, -92.8684, -19.0909, 0.12", "-4.21793, -93.322, -18.9104, 0.12", "-3.88431, -93.5946, -18.778, 0.48", "-3.67112, -93.7565, -18.684, 0.12", "-2.41128, -94.6171, -18.0758, 0.12", "-1.04307, -95.4516, -17.3395, 2.76", "-0.0843027, -95.9987, -16.7637, 1.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.97317, -90.2142, -19.1447, 0.48", "-7.39894, -91.4352, -19.3854, 0.48", "-7.5933, -92.2516, -19.5108, 0.48", "-7.70858, -92.9059, -19.6654, 0.48", "-7.73755, -93.109, -19.7163, 0.48", "-7.79138, -93.5619, -19.8203, 0.48", "-7.84107, -93.9731, -19.9032, 0.48", "-7.93941, -94.8045, -20.117, 0.48", "-8.07495, -95.8427, -20.4274, 2.04", "-8.17247, -96.5544, -20.6631, 3.49", "-8.24763, -97.0178, -20.8189, 3.85", "-8.40326, -97.7725, -21.0696, 3.49", "-8.84815, -99.678, -21.6838, 0.48", "-9.03172, -100.461, -21.9361, 0.48", "-9.21452, -101.287, -22.1813, 0.48", "-9.27058, -101.586, -22.2782, 0.48", "-9.34515, -102.099, -22.4703, 0.48", "-9.39711, -102.54, -22.6422, 0.48", "-9.44793, -103.057, -22.8226, 1.32", "-9.5059, -103.523, -23.0257, 1.44", "-9.62233, -104.339, -23.4446, 0.24", "-9.71649, -104.963, -23.759, 0.24", "-9.82828, -105.686, -24.1276, 0.24", "-9.91392, -106.137, -24.3403, 0.24", "-10.0689, -106.9, -24.6437, 1.8", "-10.2319, -107.667, -24.91, 2.76", "-10.4053, -108.527, -25.1506, 3.12", "-10.5689, -109.572, -25.3773, 1.92", "-10.6492, -110.381, -25.5299, 0.24", "-10.7159, -111.217, -25.6545, 0.24", "-10.7159, -111.217, -25.6545, 0.96", "-10.7494, -111.588, -25.6762, 1.32", "-10.8165, -112.151, -25.7176, 1.44", "-10.9205, -112.898, -25.7209, 0.48", "-10.9508, -113.092, -25.7292, 0.24", "-11.0039, -113.362, -25.7491, 0.36", "-11.1532, -114.075, -25.8109, 0.36", "-11.2133, -114.367, -25.8316, 0.36", "-11.3481, -115.003, -25.8962, 0.36", "-11.4359, -115.45, -25.9469, 1.08", "-11.5334, -116.007, -26.0069, 2.04", "-11.6033, -116.481, -26.0583, 2.64", "-11.7027, -117.248, -26.169, 1.56", "-11.8112, -117.968, -26.3082, 0.12", "-11.8884, -118.417, -26.3992, 0.12", "-12.0014, -119.066, -26.5238, 0.12", "-12.0656, -119.426, -26.6055, 0.12", "-12.1672, -120.001, -26.7807, 1.32", "-12.3179, -120.832, -27.0792, 2.4", "-12.3978, -121.326, -27.2378, 3.25", "-12.4754, -121.856, -27.4009, 3.37", "-12.5692, -122.625, -27.6155, 2.28", "-12.6793, -123.781, -27.882, 0.48", "-12.6982, -124.079, -27.9347, 0.48", "-12.7387, -124.858, -28.0509, 0.48", "-12.7638, -125.628, -28.1629, 0.6", "-12.7682, -126.19, -28.2247, 0.6", "-12.7662, -126.653, -28.2453, 0.48", "-12.7676, -126.841, -28.2565, 0.48", "-12.7841, -127.347, -28.3326, 0.36", "-12.8134, -127.805, -28.4443, 0.24", "-12.8399, -128.083, -28.5295, 0.24", "-12.8977, -128.603, -28.7079, 0.24", "-12.9891, -129.571, -29.0043, 0.36", "-13.0285, -130.117, -29.1525, 0.36", "-13.0502, -130.485, -29.2381, 1.56", "-13.113, -131.372, -29.4115, 2.88", "-13.1499, -131.92, -29.5069, 2.88", "-13.2135, -133.046, -29.6947, 0.24", "-13.2373, -133.431, -29.7459, 0.12", "-13.2791, -133.991, -29.8157, 0.12", "-13.3202, -134.406, -29.8803, 0.12", "-13.3792, -134.976, -29.9791, 1.8", "-13.4586, -135.682, -30.1124, 2.64", "-13.5329, -136.333, -30.24, 2.64", "-13.6414, -137.362, -30.4303, 0.36", "-13.6958, -138.059, -30.5425, 0.12", "-13.7296, -138.729, -30.6488, 0.12", "-13.7492, -139.208, -30.728, 0.36", "-13.7847, -139.943, -30.8607, 0.36", "-13.7938, -140.15, -30.9069, 0.84", "-13.8085, -140.773, -31.1075, 1.2", "-13.809, -141.497, -31.3119, 0.48", "-13.8032, -141.927, -31.435, 0.12", "-13.7814, -142.409, -31.5708, 0.12", "-13.7074, -143.252, -31.7414, 0.12", "-13.6058, -144.065, -31.8476, 0.12", "-13.477, -144.923, -31.9034, 1.68", "-13.3545, -145.665, -31.9284, 2.64", "-13.2864, -146.048, -31.9383, 3.0", "-13.0912, -147.158, -32.0364, 0.12", "-13.0494, -147.451, -32.0792, 0.12", "-12.9956, -147.997, -32.1826, 0.12", "-12.964, -148.559, -32.362, 0.48", "-12.9579, -148.916, -32.5004, 0.48", "-12.9474, -149.646, -32.8443, 0.48", "-12.9271, -150.142, -33.1105, 0.48", "-12.8867, -150.445, -33.267, 0.48", "-12.8327, -150.708, -33.4031, 0.48", "-12.7647, -150.967, -33.5226, 0.48", "-12.5914, -151.616, -33.7999, 1.2", "-12.4434, -152.153, -34.0031, 1.8", "-12.158, -153.214, -34.4049, 0.6", "-12.003, -153.81, -34.633, 0.12", "-11.9013, -154.285, -34.7979, 0.12", "-11.8311, -154.805, -34.9463, 0.12", "-11.8212, -155.082, -35.0003, 0.24", "-11.8342, -155.459, -35.0534, 0.24", "-11.8744, -155.862, -35.0794, 1.32", "-11.9508, -156.5, -35.0943, 1.8", "-12.0263, -157.06, -35.112, 2.88", "-12.0851, -157.622, -35.1323, 3.25", "-12.1592, -158.313, -35.1542, 2.64" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.1592, -158.313, -35.1542, 1.08", "-12.0645, -159.36, -40.1853, 1.08", "-11.8632, -160.306, -44.2927, 0.48", "-11.7581, -160.703, -45.8242, 1.32", "-11.5853, -161.205, -47.6735, 1.08", "-11.4782, -161.457, -48.5827, 1.44", "-11.0486, -162.255, -51.3813, 1.2", "-10.581, -162.843, -53.1156, 1.2", "-10.3389, -163.112, -53.8082, 1.56", "-9.72028, -163.788, -55.6941, 1.32", "-9.36037, -164.189, -56.8839, 0.72", "-8.94612, -164.716, -58.3585, 0.72", "-8.47333, -165.456, -60.1969, 0.72", "-8.24041, -165.882, -61.3425, 1.92", "-7.65496, -167.608, -67.1026, 0.84", "-7.5501, -168.312, -69.6248, 0.6", "-7.55533, -168.691, -71.053, 1.44", "-7.58668, -168.883, -71.7988, 1.44", "-8.16312, -170.552, -78.7795, 2.52", "-8.98916, -172.045, -85.7781, 0.96", "-9.07102, -172.152, -86.3145, 0.96", "-9.17068, -172.255, -86.8602, 0.96", "-9.29111, -172.364, -87.4649, 0.96", "-10.0216, -172.991, -90.8516, 1.56", "-10.6444, -173.542, -93.5194, 1.56", "-11.317, -174.246, -96.7412, 1.2", "-11.6964, -174.694, -98.8247, 1.92", "-12.7545, -176.17, -106.045, 1.8", "-13.4773, -177.4, -112.279, 1.32", "-13.7513, -178.134, -116.056, 1.8", "-13.7755, -178.322, -117.093, 0.96", "-13.7185, -178.547, -118.493, 0.96", "-13.2528, -178.998, -122.006, 0.84", "-13.1115, -179.036, -122.479, 0.84", "-12.013, -179.129, -124.965, 0.12", "-11.3657, -179.144, -126.303, 0.12", "-10.7714, -179.177, -127.615, 1.08", "-9.62753, -179.361, -130.142, 0.36", "-9.02127, -179.587, -131.408, 1.44", "-8.67822, -179.85, -132.215, 0.12", "-8.58597, -179.993, -132.457, 0.12", "-8.42768, -180.501, -133.03, 0.12", "-8.31844, -181.2, -133.605, 1.2", "-8.31474, -181.572, -133.867, 1.2", "-8.46026, -183.249, -135.195, 0.12", "-8.49702, -183.597, -135.487, 0.12", "-8.57359, -184.161, -135.972, 0.12", "-8.74047, -185.139, -136.795, 1.08", "-8.99531, -186.378, -137.912, 1.68", "-9.28667, -187.713, -139.094, 0.12", "-9.39806, -188.183, -139.474, 0.12", "-9.45703, -188.454, -139.68, 0.12", "-9.62572, -189.311, -140.338, 1.08", "-9.90276, -191.38, -141.785, 0.12", "-9.94396, -191.887, -142.112, 0.12", "-9.97597, -192.573, -142.524, 0.12", "-10.0005, -193.754, -143.183, 1.68", "-10.004, -195.332, -144.045, 0.12", "-9.96946, -197.008, -144.899, 0.12", "-9.93954, -197.862, -145.234, 0.12", "-9.91266, -198.424, -145.468, 0.12", "-9.84243, -199.377, -145.882, 1.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.1592, -158.313, -35.1542, 0.12", "-12.5011, -159.95, -35.6822, 0.12", "-12.6223, -160.557, -35.8561, 0.24", "-12.7858, -161.442, -36.1755, 0.24", "-12.9258, -162.264, -36.4923, 0.24", "-12.9644, -162.53, -36.5931, 0.72", "-13.0127, -162.982, -36.7522, 1.08", "-13.0274, -163.421, -36.8784, 1.08", "-13.0074, -164.561, -37.2527, 0.24", "-12.9676, -164.979, -37.4378, 0.24", "-12.8734, -165.613, -37.7527, 0.36", "-12.7381, -166.349, -38.1505, 0.36", "-12.563, -167.162, -38.6374, 0.36", "-12.3473, -168.226, -39.2842, 1.8", "-12.2103, -169.079, -39.7718, 2.76", "-12.1566, -169.563, -40.111, 2.76", "-12.0375, -170.957, -41.1659, 0.6", "-11.9919, -171.483, -41.5615, 0.12", "-11.8904, -172.23, -42.0523, 0.12", "-11.7537, -172.917, -42.4277, 0.48", "-11.2212, -174.985, -43.4535, 0.48", "-10.9617, -175.835, -43.8442, 2.04", "-10.6959, -176.587, -44.1361, 2.28", "-10.1642, -178.012, -44.5971, 0.48", "-9.84227, -178.849, -44.8191, 0.12", "-9.71655, -179.192, -44.8813, 0.12", "-9.61507, -179.536, -44.9153, 0.12", "-9.54993, -179.893, -44.9798, 0.12", "-9.47476, -180.715, -45.1386, 0.12", "-9.41765, -181.611, -45.3519, 0.12", "-9.38565, -181.963, -45.458, 0.12", "-9.27098, -183.077, -45.8585, 1.44", "-9.16804, -183.934, -46.1976, 2.52", "-9.05084, -184.699, -46.5219, 2.4", "-8.82546, -185.913, -47.0775, 1.2", "-8.65924, -186.93, -47.5579, 0.12", "-8.58993, -187.452, -47.7987, 0.12", "-8.55132, -187.88, -47.9844, 0.12", "-8.52855, -188.263, -48.1629, 0.12", "-8.51246, -188.977, -48.4921, 1.2", "-8.5153, -189.952, -48.8757, 2.16", "-8.51097, -190.819, -49.1771, 1.08", "-8.47443, -191.873, -49.583, 0.36", "-8.44106, -192.488, -49.8455, 0.12", "-8.42123, -192.91, -50.0504, 0.12", "-8.40237, -193.233, -50.2114, 0.48", "-8.36124, -193.862, -50.5263, 0.6", "-8.31424, -194.963, -51.0535, 0.48", "-8.32145, -195.687, -51.3722, 0.36", "-8.39159, -196.523, -51.7148, 0.72", "-8.49262, -197.212, -51.9884, 1.8", "-8.62559, -197.9, -52.2377, 2.52", "-8.7747, -198.56, -52.4205, 2.76", "-9.14474, -199.994, -52.6431, 0.6", "-9.28471, -200.504, -52.6849, 0.24", "-9.42377, -201.037, -52.6968, 0.36", "-9.57218, -201.603, -52.7039, 0.36", "-9.75436, -202.329, -52.6826, 0.36", "-9.91447, -203.009, -52.6544, 0.36", "-9.97877, -203.331, -52.6427, 1.08", "-10.1195, -204.015, -52.645, 1.68", "-10.2004, -204.364, -52.6586, 1.92", "-10.3454, -204.938, -52.7107, 2.04", "-10.5483, -205.768, -52.8251, 1.32", "-10.6819, -206.392, -52.9107, 0.36", "-10.7778, -206.962, -52.9766, 0.36", "-10.8658, -207.642, -53.0373, 0.36", "-10.9, -207.988, -53.0565, 0.6", "-10.9453, -208.456, -53.0658, 0.72", "-10.9967, -208.918, -53.0578, 0.72", "-11.0851, -209.509, -53.0266, 0.36", "-11.21, -210.185, -52.9849, 0.36", "-11.3595, -210.875, -52.9385, 0.36", "-11.4555, -211.35, -52.8956, 0.6", "-11.545, -211.864, -52.8417, 0.48", "-11.6735, -212.767, -52.7394, 0.36", "-11.7014, -213.131, -52.6974, 0.36", "-11.723, -213.638, -52.6322, 0.36", "-11.7081, -214.651, -52.4882, 1.68", "-11.6393, -215.452, -52.3666, 3.12", "-11.5853, -215.792, -52.3124, 3.37", "-11.3545, -216.743, -52.1783, 2.16" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.3545, -216.743, -52.1783, 0.24", "-12.1545, -217.972, -52.4622, 0.24", "-12.4544, -218.438, -52.4966, 0.24", "-12.6695, -218.766, -52.4915, 0.24", "-12.8668, -219.091, -52.451, 0.24", "-13.1035, -219.518, -52.3717, 0.24", "-13.3526, -220.001, -52.267, 0.24", "-13.6166, -220.599, -52.0568, 0.96", "-13.7522, -220.902, -51.9474, 1.32", "-13.975, -221.383, -51.7543, 0.72", "-14.1914, -221.808, -51.5685, 0.12", "-14.4475, -222.256, -51.3619, 0.12", "-14.6848, -222.712, -51.1661, 0.12", "-14.841, -223.03, -51.0541, 0.12", "-15.1719, -223.824, -50.83, 1.44", "-15.3406, -224.278, -50.7416, 1.68", "-15.5438, -224.909, -50.6433, 1.08", "-15.6934, -225.491, -50.5262, 0.48", "-15.7529, -225.867, -50.4171, 0.12", "-15.8455, -226.617, -50.2069, 0.12", "-15.9031, -227.337, -49.9161, 0.48", "-15.9194, -227.583, -49.7925, 0.48", "-15.9725, -228.434, -49.2441, 0.48", "-16.0725, -229.195, -48.6832, 0.96", "-16.155, -229.733, -48.2532, 0.96", "-16.3456, -230.781, -47.4045, 0.12", "-16.4006, -231.126, -47.1226, 0.12", "-16.4995, -231.769, -46.6329, 1.2", "-16.5947, -232.361, -46.2286, 1.68", "-16.657, -232.711, -45.9908, 2.16", "-16.7167, -233.054, -45.7605, 2.16", "-16.9837, -234.396, -45.0492, 0.36", "-17.0689, -234.8, -44.7946, 0.36", "-17.1475, -235.099, -44.5862, 1.08", "-17.3073, -235.63, -44.1825, 1.32", "-17.411, -235.921, -43.9541, 1.2", "-17.6632, -236.506, -43.4858, 1.2", "-18.5008, -237.998, -42.167, 0.12", "-18.7027, -238.279, -41.8821, 0.24", "-18.9625, -238.577, -41.5587, 0.24", "-19.1172, -238.741, -41.3889, 0.36", "-19.465, -239.091, -41.0034, 0.36", "-19.9427, -239.555, -40.4762, 0.12", "-20.3138, -239.844, -40.2508, 0.12", "-20.6337, -240.083, -40.0279, 0.96", "-21.0733, -240.38, -39.6741, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.3545, -216.743, -52.1783, 0.12", "-10.8849, -217.684, -52.5701, 0.12", "-10.6403, -218.15, -52.7099, 0.12", "-10.2132, -218.963, -52.9223, 0.84", "-9.70509, -219.973, -53.1456, 0.84", "-9.36589, -220.671, -53.2931, 0.12", "-9.05735, -221.35, -53.4255, 0.12", "-8.72014, -222.184, -53.5648, 0.48", "-8.51223, -222.799, -53.6414, 0.6", "-8.30899, -223.566, -53.6965, 0.24", "-8.21626, -224.025, -53.7084, 0.12", "-8.1219, -224.789, -53.7685, 0.24", "-8.0755, -225.562, -53.8874, 0.24", "-8.06423, -226.32, -54.0421, 0.24", "-8.07159, -226.705, -54.1158, 0.84", "-8.1182, -227.613, -54.3217, 1.32", "-8.16103, -228.346, -54.518, 1.8", "-8.2237, -229.519, -54.8819, 2.4", "-8.27723, -230.264, -55.1272, 1.92", "-8.40166, -231.366, -55.5236, 0.48", "-8.50313, -232.061, -55.7858, 0.12", "-8.62344, -232.751, -56.0417, 0.12", "-8.68465, -233.14, -56.1717, 0.12", "-8.76267, -233.925, -56.4451, 0.6", "-8.78961, -234.667, -56.7316, 0.24", "-8.77489, -235.311, -56.9746, 0.24", "-8.7488, -235.815, -57.1353, 0.96", "-8.66197, -236.999, -57.4705, 1.8", "-8.50863, -238.266, -57.7975, 0.96", "-8.31818, -239.21, -58.0115, 0.36", "-8.09374, -240.082, -58.1748, 0.36", "-7.77232, -241.197, -58.3601, 0.36", "-7.54954, -241.947, -58.4328, 0.36", "-7.41273, -242.453, -58.4413, 0.36", "-7.16984, -243.436, -58.4048, 1.92", "-6.95218, -244.387, -58.3401, 3.12", "-6.7961, -245.191, -58.2835, 3.12", "-6.51111, -247.003, -58.0419, 0.36", "-6.3364, -248.523, -57.7218, 0.36", "-6.28958, -249.208, -57.5361, 0.96", "-6.27085, -249.967, -57.2796, 1.56", "-6.27349, -250.828, -56.9346, 1.68", "-6.30068, -252.377, -56.2632, 0.84", "-6.3175, -253.156, -55.8443, 0.36", "-6.31325, -253.591, -55.5645, 0.36", "-6.29007, -254.143, -55.2006, 0.6", "-6.24391, -254.709, -54.8594, 0.36", "-6.12874, -255.541, -54.4848, 0.36", "-5.84034, -256.896, -54.1444, 0.12", "-5.64464, -257.556, -54.0445, 0.12", "-5.35707, -258.285, -53.9736, 1.32", "-4.99243, -258.998, -53.9539, 1.8", "-4.36306, -260.049, -54.0063, 1.68", "-3.9439, -260.67, -54.0884, 1.32", "-3.55419, -261.191, -54.1809, 0.36", "-3.31828, -261.481, -54.2196, 0.36", "-2.74842, -262.104, -54.2427, 0.48", "-2.17086, -262.673, -54.1755, 0.12", "-1.44122, -263.382, -53.9786, 0.12", "-0.917914, -263.903, -53.7723, 1.08", "-0.708091, -264.11, -53.678, 1.32", "-0.112402, -264.697, -53.3176, 0.84", "0.36454, -265.169, -52.954, 0.12", "1.06864, -265.9, -52.3281, 0.12", "1.74263, -266.688, -51.607, 1.2", "2.03196, -267.056, -51.283, 1.68", "2.88043, -268.18, -50.2617, 0.6", "3.18347, -268.598, -49.8827, 0.48", "3.44424, -268.939, -49.5501, 0.48", "3.87581, -269.433, -49.0136, 0.12", "4.43555, -270.01, -48.4533, 0.12", "4.81129, -270.362, -48.1947, 0.48", "5.2476, -270.738, -48.0442, 0.6", "5.84416, -271.313, -47.9596, 0.36", "6.16842, -271.667, -47.9333, 0.36", "6.79618, -272.563, -47.932, 1.32", "7.29056, -273.522, -47.9478, 2.4", "7.43771, -273.899, -47.9605, 2.52", "7.8652, -275.247, -47.9925, 1.2", "8.16468, -276.242, -48.0419, 0.12", "8.43752, -277.075, -48.0951, 0.12", "8.56836, -277.434, -48.1157, 0.12", "8.72222, -277.817, -48.1571, 0.48", "9.32643, -279.167, -48.3423, 0.48", "9.72177, -280.025, -48.5137, 0.48", "10.1402, -281.034, -48.79, 0.48", "10.3254, -281.566, -48.9427, 0.12", "10.4127, -282.067, -49.0922, 0.12", "10.4047, -282.697, -49.2754, 1.44", "10.1957, -283.708, -49.5603, 2.52", "9.95769, -284.48, -49.767, 2.64", "9.66926, -285.274, -50.0031, 2.4", "9.16093, -286.821, -50.4887, 0.6", "8.92308, -287.582, -50.7328, 0.36", "8.61309, -288.632, -51.0646, 0.48", "8.4211, -289.422, -51.2956, 0.48", "8.23626, -290.382, -51.5702, 0.36", "8.04548, -291.881, -51.9673, 0.36", "8.0215, -292.263, -52.0541, 1.32", "7.99343, -292.953, -52.1904, 1.68", "7.93247, -293.726, -52.3001, 1.92", "7.88691, -294.114, -52.3352, 2.04", "7.66732, -295.551, -52.3953, 0.36", "7.59803, -295.937, -52.4098, 0.36", "7.51895, -296.505, -52.4275, 0.36", "7.40472, -297.403, -52.6194, 0.36", "7.31817, -298.035, -52.7736, 0.36", "7.17064, -299.152, -53.0844, 0.36", "7.08584, -299.883, -53.3316, 1.68", "7.00885, -300.74, -53.6823, 2.64", "6.90534, -303.635, -55.2035, 2.64" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.90534, -303.635, -55.2035, 0.12", "7.70441, -305.434, -55.4833, 0.12", "7.87459, -305.833, -55.5882, 0.12", "7.98895, -306.106, -55.6707, 0.12", "8.25999, -306.761, -55.9303, 0.6", "8.45356, -307.32, -56.2254, 0.12", "8.53483, -307.577, -56.3739, 0.12", "8.71495, -308.363, -56.9642, 0.96", "8.83684, -308.961, -57.5391, 1.56", "8.99712, -309.859, -58.5108, 1.2", "9.14341, -310.877, -59.6293, 0.24", "9.15425, -311.181, -60.0203, 0.72", "9.09917, -311.774, -60.9237, 1.08", "8.88253, -312.682, -62.5888, 0.12", "8.821, -312.897, -63.0079, 0.12", "8.65346, -313.467, -64.1106, 1.8", "8.2011, -315.325, -67.5618, 1.68", "7.9975, -316.431, -69.4894, 1.32", "7.8171, -317.898, -71.8381, 0.84", "7.77541, -318.578, -72.8404, 1.44", "7.7889, -319.137, -73.5979, 2.16", "7.90693, -319.961, -74.5288, 0.24", "8.22806, -320.822, -75.1434, 0.24", "8.45611, -321.223, -75.3258, 0.72", "8.74155, -321.605, -75.4309, 0.96", "9.52371, -322.479, -75.6888, 0.12", "10.0725, -323.01, -75.8534, 0.12", "11.2942, -324.157, -76.1782, 0.12", "12.5628, -325.443, -76.5177, 1.2", "13.1465, -326.075, -76.6698, 1.92", "14.1622, -327.222, -76.928, 0.12", "14.5751, -327.708, -77.0434, 0.12", "15.0275, -328.351, -77.3195, 0.12", "15.5059, -329.202, -78.0261, 0.24", "15.8037, -329.743, -78.8119, 0.24", "15.9409, -329.953, -79.2448, 0.24", "16.39, -330.554, -80.8324, 1.8", "17.0569, -331.391, -83.2683, 1.8", "17.5724, -332.024, -85.5788, 0.24", "17.8331, -332.341, -87.0912, 0.48", "17.9541, -332.51, -88.0462, 0.72", "18.0997, -332.705, -89.2936, 1.68", "18.1821, -332.803, -90.0684, 1.68", "18.6646, -333.254, -93.8046, 1.68", "19.1604, -333.673, -97.4258, 1.44", "19.3547, -333.826, -98.7274, 1.8", "19.4846, -333.917, -99.5265, 1.92", "19.8964, -334.149, -101.605, 1.68", "20.1715, -334.295, -102.725, 0.24", "20.3878, -334.439, -103.308, 0.24", "20.7238, -334.752, -104.019, 0.24", "20.9324, -334.975, -104.421, 0.72", "21.1355, -335.212, -104.794, 0.96", "21.6531, -335.783, -105.514, 0.84", "22.172, -336.152, -106.263, 0.12", "22.3989, -336.196, -106.641, 0.12", "22.7981, -336.186, -107.324, 0.24", "23.0953, -336.173, -107.818, 0.24", "23.2057, -336.188, -108.157, 0.24", "23.4283, -336.352, -110.037, 0.84", "23.3866, -336.475, -111.75, 1.32", "23.2433, -336.555, -113.23, 2.28", "23.1364, -336.571, -113.936, 2.76", "22.13, -336.555, -119.24, 2.88", "21.4, -336.457, -122.619, 2.16", "20.6192, -336.277, -126.033, 1.08", "20.4303, -336.219, -126.871, 1.08", "20.0433, -336.078, -128.643, 2.04", "19.9495, -336.037, -129.125, 2.04", "18.8139, -335.344, -136.993, 0.6", "18.7201, -335.301, -137.958, 0.48", "18.6154, -335.362, -139.928, 0.96", "18.5645, -335.499, -141.36, 0.12", "18.5622, -335.558, -141.674, 0.12", "18.5626, -335.629, -141.971, 0.12", "18.6611, -336.103, -142.865, 0.6", "18.7178, -336.604, -143.703, 0.12", "18.7744, -336.791, -143.949, 0.12", "19.179, -337.523, -144.851, 1.32" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "6.90534, -303.635, -55.2035, 0.12", "6.98194, -304.715, -55.1468, 0.12", "7.03652, -305.292, -55.1605, 0.12", "7.10101, -305.845, -55.1942, 0.6", "7.14698, -306.177, -55.222, 0.36", "7.24172, -306.726, -55.238, 0.36", "7.35438, -307.295, -55.2672, 0.36", "7.54039, -307.989, -55.3396, 0.36", "7.6198, -308.221, -55.3486, 0.84", "7.74633, -308.543, -55.3391, 0.84", "8.10051, -309.357, -55.2792, 0.24", "8.51504, -310.241, -55.1556, 0.24", "8.80045, -310.816, -55.0482, 0.24", "9.32465, -311.781, -54.85, 0.84", "9.61659, -312.293, -54.7431, 1.44", "10.0863, -313.086, -54.5853, 0.72", "10.4217, -313.649, -54.4638, 0.12", "10.5441, -313.856, -54.4036, 0.12", "10.8384, -314.38, -54.2581, 0.12", "11.0923, -314.896, -54.1097, 0.72", "11.2314, -315.19, -53.983, 0.72", "11.4886, -315.789, -53.6865, 0.12", "11.6262, -316.172, -53.5137, 0.12", "11.7241, -316.451, -53.3876, 0.12", "12.0322, -317.35, -53.0071, 1.44", "12.2544, -317.95, -52.7646, 2.04", "12.4955, -318.576, -52.5223, 2.16", "12.8069, -319.356, -52.2553, 1.44", "13.1137, -320.076, -52.0329, 0.96", "13.35, -320.6, -51.9104, 0.48", "13.5595, -321.071, -51.8406, 0.12", "13.7256, -321.435, -51.8046, 0.12", "13.8643, -321.723, -51.7742, 0.12", "14.1436, -322.284, -51.7219, 0.12", "14.4473, -322.946, -51.6971, 0.12", "14.6292, -323.299, -51.698, 0.84", "14.9866, -323.898, -51.7079, 1.56", "15.2612, -324.3, -51.7146, 1.8", "15.6783, -324.875, -51.7331, 1.32", "16.0238, -325.351, -51.751, 0.12", "16.4306, -325.923, -51.7784, 0.12", "16.776, -326.431, -51.8103, 0.84", "17.1208, -326.968, -51.8516, 0.96", "17.3455, -327.347, -51.8914, 0.12", "17.4937, -327.639, -51.9308, 0.12", "17.7069, -328.138, -52.0319, 0.12", "17.8273, -328.441, -52.0803, 0.12", "18.0158, -328.881, -52.1459, 1.56", "18.2522, -329.375, -52.2018, 1.92", "18.4561, -329.769, -52.2356, 2.28", "18.9908, -330.777, -52.3093, 1.2", "19.4936, -331.742, -52.3804, 0.12", "19.7472, -332.3, -52.4339, 0.12", "19.8687, -332.623, -52.4685, 0.12", "19.9987, -333.039, -52.5204, 1.08", "20.1334, -333.566, -52.5957, 1.56", "20.1998, -334.032, -52.6754, 1.44", "20.2458, -334.647, -52.8325, 0.12", "20.2604, -334.859, -52.8865, 0.12", "20.3218, -335.467, -53.0431, 0.12", "20.3908, -335.986, -53.208, 0.12", "20.5151, -336.756, -53.4737, 0.12", "20.5715, -337.072, -53.5822, 0.84", "20.68, -337.621, -53.7744, 1.2", "20.7459, -337.933, -53.8911, 1.2", "20.9753, -338.886, -54.2723, 0.12", "21.1222, -339.368, -54.4722, 0.12", "21.1911, -339.563, -54.5497, 0.12", "21.3998, -340.114, -54.725, 0.72", "21.5969, -340.616, -54.832, 0.72", "21.7752, -341.044, -54.8775, 0.12", "21.9634, -341.498, -54.8638, 0.12", "22.1039, -341.903, -54.845, 0.12", "22.3281, -342.669, -54.7896, 1.44", "22.4567, -343.193, -54.7407, 1.92", "22.519, -343.533, -54.7196, 1.92", "22.6468, -344.506, -54.6897, 0.12", "22.7643, -345.427, -54.7058, 0.12", "22.7922, -345.592, -54.7199, 0.6", "22.8914, -346.157, -54.8085, 0.72", "23.0236, -346.889, -54.9556, 0.48", "23.1178, -347.426, -55.0766, 0.24", "23.2144, -348.013, -55.2268, 0.36", "23.324, -348.831, -55.4237, 0.36", "23.3491, -349.633, -55.59, 0.36", "23.2993, -350.166, -55.6671, 0.48", "23.2378, -350.61, -55.7179, 0.72", "23.1173, -351.178, -55.774, 0.72", "22.9707, -351.625, -55.8011, 0.72", "22.5194, -352.633, -55.8119, 2.04", "22.1639, -353.344, -55.7751, 3.25" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.1639, -353.344, -55.7751, 0.12", "23.5984, -353.998, -56.3925, 0.12", "24.0897, -354.197, -56.605, 0.12", "24.1818, -354.231, -56.6469, 0.48", "24.4533, -354.33, -56.7848, 0.48", "24.6593, -354.409, -56.8953, 0.12", "25.1363, -354.597, -57.1556, 0.12", "25.4144, -354.699, -57.3177, 0.72", "25.7327, -354.823, -57.429, 0.72", "26.1495, -355.007, -57.5052, 0.12", "27.0407, -355.448, -57.564, 0.12", "27.4586, -355.672, -57.5546, 0.96", "27.72, -355.815, -57.5284, 0.96", "29.3496, -356.729, -57.2325, 0.12", "29.8714, -357.023, -57.0817, 0.12", "30.1115, -357.157, -56.9786, 0.12", "30.4083, -357.327, -56.792, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.1639, -353.344, -55.7751, 2.64", "21.265, -353.936, -55.7294, 2.64", "19.5481, -355.086, -55.4355, 0.24", "19.261, -355.301, -55.3604, 0.24", "18.8884, -355.617, -55.2368, 0.24", "18.0929, -356.385, -54.877, 0.24", "17.8676, -356.635, -54.7674, 0.24", "17.6706, -356.956, -54.5733, 0.24", "17.4494, -357.504, -54.1937, 0.24", "17.3042, -357.925, -53.9375, 1.08", "17.1482, -358.505, -53.6558, 1.56", "16.9918, -359.197, -53.3986, 1.68", "16.8211, -360.295, -53.035, 0.12", "16.8004, -360.515, -52.9708, 0.12", "16.7854, -360.86, -52.8906, 0.48", "16.7794, -361.315, -52.8257, 0.48", "16.7813, -361.448, -52.8192, 0.12", "16.8357, -362.354, -52.8089, 0.12", "16.8781, -362.814, -52.8402, 0.12", "16.9526, -363.717, -52.9017, 0.12", "16.971, -364.078, -52.9355, 1.32", "16.9735, -364.548, -52.9838, 1.08", "16.9449, -365.002, -53.024, 0.12", "16.8836, -365.471, -53.0546, 0.12", "16.7924, -365.912, -53.0639, 0.12", "16.6581, -366.446, -53.0522, 0.12", "16.4201, -367.281, -52.9974, 0.12", "16.1911, -368.0, -52.9434, 1.2", "16.0039, -368.545, -52.8985, 1.44", "15.7863, -369.152, -52.838, 0.12", "15.507, -369.904, -52.7386, 0.12", "15.3461, -370.36, -52.6531, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_LBC_bf8ea1e366_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.4999990498682201)
    connect dend_21(0), soma_0(0.4999990498682201)
    connect dend_0(0), soma_0(0.4999990498682201)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.291345, -11.9572, -0.745668, 2.83924 ) }
    soma_0 { pt3dadd( 0.329834, -10.8055, -0.67345, 4.66212 ) }
    soma_0 { pt3dadd( 0.368323, -9.65383, -0.601232, 6.28225 ) }
    soma_0 { pt3dadd( 0.406811, -8.50213, -0.529013, 7.64969 ) }
    soma_0 { pt3dadd( 0.4453, -7.35043, -0.456795, 8.93084 ) }
    soma_0 { pt3dadd( 0.483789, -6.19873, -0.384577, 10.0574 ) }
    soma_0 { pt3dadd( 0.522278, -5.04703, -0.312359, 10.8977 ) }
    soma_0 { pt3dadd( 0.560767, -3.89533, -0.24014, 11.5145 ) }
    soma_0 { pt3dadd( 0.599255, -2.74363, -0.167922, 11.78 ) }
    soma_0 { pt3dadd( 0.637744, -1.59192, -0.0957039, 11.9272 ) }
    soma_0 { pt3dadd( 0.676233, -0.440222, -0.0234857, 12.0017 ) }
    soma_0 { pt3dadd( 0.714722, 0.711479, 0.0487325, 11.8836 ) }
    soma_0 { pt3dadd( 0.75321, 1.86318, 0.120951, 11.6932 ) }
    soma_0 { pt3dadd( 0.791699, 3.01488, 0.193169, 11.3303 ) }
    soma_0 { pt3dadd( 0.830188, 4.16658, 0.265387, 10.9521 ) }
    soma_0 { pt3dadd( 0.868677, 5.31828, 0.337605, 9.94576 ) }
    soma_0 { pt3dadd( 0.907166, 6.46999, 0.409824, 8.97095 ) }
    soma_0 { pt3dadd( 0.945654, 7.62169, 0.482042, 7.75467 ) }
    soma_0 { pt3dadd( 0.984143, 8.77339, 0.55426, 5.92032 ) }
    soma_0 { pt3dadd( 1.02263, 9.92509, 0.626478, 4.15016 ) }
    soma_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 2.55961 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13709, 10.0606, -8.92677, 1.08 ) }
    dend_24 { pt3dadd( -2.01002, 10.3083, -8.87754, 0.96 ) }
    dend_24 { pt3dadd( -2.93797, 10.5521, -8.77368, 1.44 ) }
    dend_24 { pt3dadd( -3.5209, 10.7025, -8.69634, 1.68 ) }
    dend_24 { pt3dadd( -4.23408, 10.8691, -8.59841, 1.68 ) }
    dend_24 { pt3dadd( -5.54059, 11.1518, -8.42282, 1.2 ) }
    dend_24 { pt3dadd( -6.62631, 11.3622, -8.30585, 0.72 ) }
    dend_24 { pt3dadd( -7.45284, 11.5018, -8.25991, 0.6 ) }
    dend_24 { pt3dadd( -7.716, 11.5464, -8.27743, 0.6 ) }
    dend_24 { pt3dadd( -8.53542, 11.7057, -8.41175, 1.44 ) }
    dend_24 { pt3dadd( -9.21724, 11.8674, -8.60449, 2.28 ) }
    dend_24 { pt3dadd( -10.2119, 12.1779, -9.03878, 2.16 ) }
    dend_24 { pt3dadd( -11.3425, 12.6671, -9.82258, 1.08 ) }
    dend_24 { pt3dadd( -12.4431, 13.3442, -10.9286, 0.48 ) }
    dend_24 { pt3dadd( -12.7003, 13.5822, -11.2953, 0.48 ) }
    dend_24 { pt3dadd( -12.9614, 13.9751, -11.8707, 1.08 ) }
    dend_24 { pt3dadd( -13.1177, 14.3731, -12.4206, 1.68 ) }
    dend_24 { pt3dadd( -13.3379, 15.6808, -14.0964, 1.8 ) }
    dend_24 { pt3dadd( -13.3495, 16.2583, -14.7826, 1.44 ) }
    dend_24 { pt3dadd( -13.3151, 16.9356, -15.5298, 0.72 ) }
    dend_24 { pt3dadd( -13.3065, 17.3522, -15.9774, 0.12 ) }
    dend_24 { pt3dadd( -13.3355, 17.6167, -16.2284, 0.12 ) }
    dend_24 { pt3dadd( -13.3963, 17.8052, -16.367, 0.12 ) }
    dend_24 { pt3dadd( -13.6115, 18.1505, -16.4813, 0.48 ) }
    dend_24 { pt3dadd( -13.6909, 18.2453, -16.5055, 0.12 ) }
    dend_24 { pt3dadd( -14.2007, 18.7717, -16.6151, 0.12 ) }
    dend_24 { pt3dadd( -14.8653, 19.4371, -16.761, 1.8 ) }
    dend_24 { pt3dadd( -15.4325, 20.0129, -16.8902, 2.76 ) }
    dend_24 { pt3dadd( -15.882, 20.4762, -16.9895, 3.0 ) }
    dend_24 { pt3dadd( -16.5398, 21.1765, -17.1293, 1.92 ) }
    dend_24 { pt3dadd( -17.2146, 21.8797, -17.2548, 0.48 ) }
    dend_24 { pt3dadd( -17.7753, 22.4642, -17.3312, 0.36 ) }
    dend_24 { pt3dadd( -18.3591, 23.0821, -17.3741, 0.84 ) }
    dend_24 { pt3dadd( -18.9113, 23.6833, -17.3907, 0.6 ) }
    dend_24 { pt3dadd( -19.3486, 24.1513, -17.3818, 0.36 ) }
    dend_24 { pt3dadd( -20.0297, 24.8724, -17.3605, 0.36 ) }
    dend_24 { pt3dadd( -20.5282, 25.3898, -17.3734, 1.56 ) }
    dend_24 { pt3dadd( -21.372, 26.2316, -17.4265, 3.49 ) }
    dend_24 { pt3dadd( -21.6279, 26.4832, -17.4556, 3.85 ) }
    dend_24 { pt3dadd( -22.2561, 27.1087, -17.5208, 4.33 ) }
    dend_24 { pt3dadd( -22.9883, 27.8438, -17.5943, 3.25 ) }
    dend_24 { pt3dadd( -24.2067, 29.1205, -17.7075, 0.12 ) }
    dend_24 { pt3dadd( -24.6726, 29.6137, -17.7457, 0.12 ) }
    dend_24 { pt3dadd( -24.9132, 29.8798, -17.7553, 0.12 ) }
    dend_24 { pt3dadd( -25.6104, 30.7016, -17.7521, 0.96 ) }
    dend_24 { pt3dadd( -25.8102, 30.9613, -17.7382, 1.08 ) }
    dend_24 { pt3dadd( -26.4125, 31.7884, -17.647, 0.72 ) }
    dend_24 { pt3dadd( -26.9349, 32.5503, -17.6609, 0.12 ) }
    dend_24 { pt3dadd( -27.5483, 33.4346, -17.7856, 0.12 ) }
    dend_24 { pt3dadd( -27.7826, 33.7705, -17.8673, 1.2 ) }
    dend_24 { pt3dadd( -28.1507, 34.3018, -18.048, 2.16 ) }
    dend_24 { pt3dadd( -28.5569, 34.8727, -18.2976, 1.92 ) }
    dend_24 { pt3dadd( -29.799, 36.5728, -19.1769, 0.12 ) }
    dend_24 { pt3dadd( -30.0193, 36.8726, -19.3608, 0.24 ) }
    dend_24 { pt3dadd( -30.3881, 37.3779, -19.6955, 0.24 ) }
    dend_24 { pt3dadd( -30.6518, 37.7399, -19.9461, 0.24 ) }
    dend_24 { pt3dadd( -31.5016, 38.912, -20.7905, 3.25 ) }
    dend_24 { pt3dadd( -31.766, 39.2842, -21.0521, 3.97 ) }
    dend_24 { pt3dadd( -32.2377, 39.9663, -21.4342, 3.97 ) }
    dend_24 { pt3dadd( -32.5819, 40.4635, -21.7433, 3.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.302907, 10.6305, 4.01323, 1.8 ) }
    dend_21 { pt3dadd( -0.0770466, 11.294, 4.47757, 1.32 ) }
    dend_21 { pt3dadd( -0.514529, 11.9825, 5.29027, 0.72 ) }
    dend_21 { pt3dadd( -0.763804, 12.4188, 5.9415, 0.48 ) }
    dend_21 { pt3dadd( -0.999987, 12.9152, 6.79589, 0.48 ) }
    dend_21 { pt3dadd( -1.18031, 13.4715, 7.83361, 0.6 ) }
    dend_21 { pt3dadd( -1.27976, 14.2659, 9.42351, 1.68 ) }
    dend_21 { pt3dadd( -1.20671, 14.9391, 11.0518, 1.68 ) }
    dend_21 { pt3dadd( -1.0427, 15.2694, 12.0244, 1.56 ) }
    dend_21 { pt3dadd( -0.724465, 15.5676, 13.0471, 1.44 ) }
    dend_21 { pt3dadd( -0.229398, 15.8141, 14.0844, 0.72 ) }
    dend_21 { pt3dadd( 0.59801, 16.0334, 15.238, 0.84 ) }
    dend_21 { pt3dadd( 0.897922, 16.0619, 15.5256, 0.84 ) }
    dend_21 { pt3dadd( 1.79906, 16.0319, 16.2377, 0.6 ) }
    dend_21 { pt3dadd( 2.4795, 15.9654, 16.87, 0.84 ) }
    dend_21 { pt3dadd( 3.22685, 15.824, 17.6248, 1.08 ) }
    dend_21 { pt3dadd( 3.95538, 15.6594, 18.4384, 1.08 ) }
    dend_21 { pt3dadd( 4.60697, 15.5096, 19.2301, 1.2 ) }
    dend_21 { pt3dadd( 5.74665, 15.2795, 20.6537, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( 7.73936, 15.0393, 23.2889, 1.32 ) }
    dend_21 { pt3dadd( 8.25402, 15.0379, 23.9952, 0.6 ) }
    dend_21 { pt3dadd( 8.62621, 15.0816, 24.5367, 0.96 ) }
    dend_21 { pt3dadd( 8.81824, 15.1373, 24.8414, 1.92 ) }
    dend_21 { pt3dadd( 9.25407, 15.3723, 25.4951, 2.16 ) }
    dend_21 { pt3dadd( 10.3905, 16.2989, 26.708, 1.44 ) }
    dend_21 { pt3dadd( 11.0224, 16.9648, 27.036, 0.84 ) }
    dend_21 { pt3dadd( 11.5303, 17.5132, 27.2554, 0.84 ) }
    dend_21 { pt3dadd( 12.156, 18.1421, 27.491, 0.84 ) }
    dend_21 { pt3dadd( 12.6849, 18.7854, 27.6685, 0.84 ) }
    dend_21 { pt3dadd( 13.0285, 19.3341, 27.7595, 0.48 ) }
    dend_21 { pt3dadd( 13.5441, 20.2193, 27.7579, 0.48 ) }
    dend_21 { pt3dadd( 14.0321, 21.0175, 27.7599, 1.32 ) }
    dend_21 { pt3dadd( 14.0766, 21.077, 27.7604, 1.56 ) }
    dend_21 { pt3dadd( 14.8613, 21.9026, 27.7809, 1.2 ) }
    dend_21 { pt3dadd( 15.216, 22.2927, 27.8066, 1.68 ) }
    dend_21 { pt3dadd( 21.1733, 25.5213, 36.379, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.672909, -10.925, -3.94677, 2.52 ) }
    dend_0 { pt3dadd( 0.712795, -12.365, -4.56091, 1.8 ) }
    dend_0 { pt3dadd( 0.731642, -14.2795, -5.36778, 1.92 ) }
    dend_0 { pt3dadd( 0.738411, -17.0885, -6.43231, 1.68 ) }
    dend_0 { pt3dadd( 0.734147, -19.957, -7.4196, 2.64 ) }
    dend_0 { pt3dadd( 0.710828, -22.4876, -8.21747, 4.09 ) }
    dend_0 { pt3dadd( 0.656888, -25.8246, -9.18893, 3.49 ) }
    dend_0 { pt3dadd( 0.535537, -28.7241, -9.94889, 2.16 ) }
    dend_0 { pt3dadd( 0.390132, -30.5665, -10.3572, 1.56 ) }
    dend_0 { pt3dadd( 0.195921, -32.2215, -10.6158, 1.32 ) }
    dend_0 { pt3dadd( -0.0379016, -33.7718, -10.7563, 1.2 ) }
    dend_0 { pt3dadd( -0.274935, -35.1462, -10.822, 1.44 ) }
    dend_0 { pt3dadd( -0.742184, -37.4043, -10.8612, 1.92 ) }
    dend_0 { pt3dadd( -1.1715, -39.1641, -10.8584, 2.88 ) }
    dend_0 { pt3dadd( -1.65985, -40.9088, -10.9258, 3.0 ) }
    dend_0 { pt3dadd( -1.94284, -41.8054, -10.9655, 2.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 0.837299 ) }
    axon_0 { pt3dadd( 1.56213, 26.0684, 0.698697, 0.837299 ) }
    axon_0 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.837299 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -32.5819, 40.4635, -21.7433, 0.12 ) }
    dend_32 { pt3dadd( -33.9634, 40.9459, -21.7025, 0.12 ) }
    dend_32 { pt3dadd( -34.9717, 41.2705, -21.6737, 0.12 ) }
    dend_32 { pt3dadd( -35.9061, 41.5405, -21.6476, 0.12 ) }
    dend_32 { pt3dadd( -36.278, 41.6464, -21.6244, 1.08 ) }
    dend_32 { pt3dadd( -36.642, 41.7501, -21.5956, 0.12 ) }
    dend_32 { pt3dadd( -37.4585, 41.9811, -21.4988, 0.12 ) }
    dend_32 { pt3dadd( -37.9471, 42.1047, -21.4126, 1.8 ) }
    dend_32 { pt3dadd( -38.5787, 42.2527, -21.266, 2.76 ) }
    dend_32 { pt3dadd( -39.6561, 42.507, -20.9507, 0.12 ) }
    dend_32 { pt3dadd( -39.8516, 42.5601, -20.8872, 0.12 ) }
    dend_32 { pt3dadd( -40.4251, 42.7333, -20.6885, 0.12 ) }
    dend_32 { pt3dadd( -40.7853, 42.8555, -20.5987, 0.12 ) }
    dend_32 { pt3dadd( -41.3502, 43.0471, -20.5419, 0.96 ) }
    dend_32 { pt3dadd( -41.7032, 43.1642, -20.5604, 0.12 ) }
    dend_32 { pt3dadd( -42.3827, 43.381, -20.6971, 0.12 ) }
    dend_32 { pt3dadd( -42.7452, 43.4938, -20.7903, 0.96 ) }
    dend_32 { pt3dadd( -43.9884, 43.8748, -21.1577, 0.12 ) }
    dend_32 { pt3dadd( -44.606, 44.0604, -21.3421, 0.12 ) }
    dend_32 { pt3dadd( -44.9578, 44.1599, -21.4441, 0.96 ) }
    dend_32 { pt3dadd( -45.4018, 44.2783, -21.5922, 0.12 ) }
    dend_32 { pt3dadd( -45.7498, 44.3706, -21.713, 0.12 ) }
    dend_32 { pt3dadd( -46.4073, 44.5339, -21.8505, 0.12 ) }
    dend_32 { pt3dadd( -46.9979, 44.6571, -21.8692, 1.56 ) }
    dend_32 { pt3dadd( -47.4649, 44.7455, -21.859, 2.4 ) }
    dend_32 { pt3dadd( -48.3548, 44.8814, -21.7942, 2.4 ) }
    dend_32 { pt3dadd( -48.5632, 44.9084, -21.7608, 2.16 ) }
    dend_32 { pt3dadd( -50.0374, 45.0753, -21.4286, 0.12 ) }
    dend_32 { pt3dadd( -50.667, 45.1237, -21.1951, 0.12 ) }
    dend_32 { pt3dadd( -50.9409, 45.1445, -21.0718, 0.24 ) }
    dend_32 { pt3dadd( -51.4618, 45.1891, -20.8227, 0.24 ) }
    dend_32 { pt3dadd( -52.1571, 45.2504, -20.4753, 1.92 ) }
    dend_32 { pt3dadd( -52.4296, 45.2729, -20.3552, 2.16 ) }
    dend_32 { pt3dadd( -53.7316, 45.4152, -19.875, 0.12 ) }
    dend_32 { pt3dadd( -54.4138, 45.4988, -19.6317, 0.12 ) }
    dend_32 { pt3dadd( -55.0484, 45.5745, -19.4206, 0.96 ) }
    dend_32 { pt3dadd( -55.34, 45.614, -19.3356, 0.12 ) }
    dend_32 { pt3dadd( -56.0798, 45.7185, -19.1614, 0.12 ) }
    dend_32 { pt3dadd( -56.5361, 45.7899, -19.0477, 0.84 ) }
    dend_32 { pt3dadd( -56.9015, 45.8528, -18.9626, 0.12 ) }
    dend_32 { pt3dadd( -57.7579, 46.0139, -18.7293, 0.12 ) }
    dend_32 { pt3dadd( -58.3586, 46.1466, -18.5621, 1.8 ) }
    dend_32 { pt3dadd( -58.6432, 46.2203, -18.4884, 2.04 ) }
    dend_32 { pt3dadd( -59.4711, 46.4837, -18.3006, 1.92 ) }
    dend_32 { pt3dadd( -60.1171, 46.7096, -18.1781, 0.12 ) }
    dend_32 { pt3dadd( -60.9769, 47.0429, -18.0431, 0.12 ) }
    dend_32 { pt3dadd( -61.8787, 47.4239, -17.9384, 2.52 ) }
    dend_32 { pt3dadd( -62.7321, 47.7937, -17.9096, 0.12 ) }
    dend_32 { pt3dadd( -64.0427, 48.3808, -17.9664, 0.12 ) }
    dend_32 { pt3dadd( -64.6136, 48.6528, -18.0262, 1.08 ) }
    dend_32 { pt3dadd( -64.8477, 48.7652, -18.0555, 0.12 ) }
    dend_32 { pt3dadd( -65.6092, 49.1279, -18.1676, 0.12 ) }
    dend_32 { pt3dadd( -66.6346, 49.5887, -18.2944, 0.12 ) }
    dend_32 { pt3dadd( -67.0284, 49.7402, -18.3267, 0.12 ) }
    dend_32 { pt3dadd( -67.764, 49.9773, -18.3445, 1.68 ) }
    dend_32 { pt3dadd( -68.2567, 50.1128, -18.3348, 2.28 ) }
    dend_32 { pt3dadd( -68.5485, 50.1817, -18.3169, 2.4 ) }
    dend_32 { pt3dadd( -69.6006, 50.4009, -18.1971, 0.12 ) }
    dend_32 { pt3dadd( -70.1461, 50.5233, -18.085, 0.12 ) }
    dend_32 { pt3dadd( -70.5998, 50.6312, -17.9951, 0.84 ) }
    dend_32 { pt3dadd( -71.0286, 50.7505, -17.8941, 0.12 ) }
    dend_32 { pt3dadd( -71.468, 50.9112, -17.7744, 0.12 ) }
    dend_32 { pt3dadd( -71.9192, 51.1021, -17.6463, 0.48 ) }
    dend_32 { pt3dadd( -72.8667, 51.5449, -17.3686, 2.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -73.2288, 51.7258, -17.2488, 2.64 ) }
    dend_32 { pt3dadd( -74.334, 52.2994, -16.8394, 0.12 ) }
    dend_32 { pt3dadd( -74.9843, 52.6651, -16.5674, 0.12 ) }
    dend_32 { pt3dadd( -75.5606, 53.0061, -16.3105, 1.08 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -32.5819, 40.4635, -21.7433, 0.72 ) }
    dend_25 { pt3dadd( -33.338, 41.9889, -22.4989, 0.72 ) }
    dend_25 { pt3dadd( -33.6482, 42.6494, -22.8364, 0.72 ) }
    dend_25 { pt3dadd( -34.0439, 43.4798, -23.2895, 0.72 ) }
    dend_25 { pt3dadd( -34.4059, 44.2225, -23.6902, 0.36 ) }
    dend_25 { pt3dadd( -34.6996, 44.8314, -24.0245, 0.24 ) }
    dend_25 { pt3dadd( -34.8362, 45.1319, -24.1832, 0.24 ) }
    dend_25 { pt3dadd( -35.1075, 45.8672, -24.546, 0.6 ) }
    dend_25 { pt3dadd( -35.3131, 46.4675, -24.8138, 0.84 ) }
    dend_25 { pt3dadd( -35.5396, 47.1215, -25.0374, 0.48 ) }
    dend_25 { pt3dadd( -35.7111, 47.5816, -25.192, 0.24 ) }
    dend_25 { pt3dadd( -35.9323, 48.1643, -25.3867, 0.24 ) }
    dend_25 { pt3dadd( -36.0639, 48.5088, -25.4962, 0.36 ) }
    dend_25 { pt3dadd( -36.3839, 49.3688, -25.7405, 0.6 ) }
    dend_25 { pt3dadd( -36.7016, 50.2235, -25.9677, 0.6 ) }
    dend_25 { pt3dadd( -37.0509, 51.1543, -26.2745, 0.12 ) }
    dend_25 { pt3dadd( -37.2636, 51.7113, -26.4999, 0.12 ) }
    dend_25 { pt3dadd( -37.6288, 52.6053, -26.9136, 2.04 ) }
    dend_25 { pt3dadd( -37.7241, 52.842, -27.0293, 2.64 ) }
    dend_25 { pt3dadd( -37.9628, 53.5086, -27.3615, 2.76 ) }
    dend_25 { pt3dadd( -38.2516, 54.3758, -27.7638, 2.64 ) }
    dend_25 { pt3dadd( -38.687, 55.8105, -28.2732, 0.12 ) }
    dend_25 { pt3dadd( -38.9452, 56.7101, -28.5354, 0.12 ) }
    dend_25 { pt3dadd( -39.0363, 57.0527, -28.6102, 0.12 ) }
    dend_25 { pt3dadd( -39.2195, 57.7418, -28.7356, 0.12 ) }
    dend_25 { pt3dadd( -39.4567, 58.5871, -28.8597, 0.12 ) }
    dend_25 { pt3dadd( -39.7331, 59.5547, -28.9441, 1.68 ) }
    dend_25 { pt3dadd( -39.912, 60.1868, -28.9924, 2.64 ) }
    dend_25 { pt3dadd( -40.0185, 60.5625, -29.0314, 2.64 ) }
    dend_25 { pt3dadd( -40.1844, 61.1218, -29.0982, 2.4 ) }
    dend_25 { pt3dadd( -40.593, 62.4504, -29.2717, 0.36 ) }
    dend_25 { pt3dadd( -41.0119, 63.858, -29.5302, 0.36 ) }
    dend_25 { pt3dadd( -41.0891, 64.1152, -29.6034, 0.36 ) }
    dend_25 { pt3dadd( -41.1674, 64.3742, -29.6682, 0.12 ) }
    dend_25 { pt3dadd( -41.598, 65.7711, -29.9679, 0.12 ) }
    dend_25 { pt3dadd( -41.8667, 66.6076, -30.141, 1.92 ) }
    dend_25 { pt3dadd( -42.2475, 67.7329, -30.4991, 2.76 ) }
    dend_25 { pt3dadd( -42.8767, 69.4833, -31.1946, 0.12 ) }
    dend_25 { pt3dadd( -43.6177, 71.5125, -32.0627, 0.12 ) }
    dend_25 { pt3dadd( -43.9701, 72.417, -32.4889, 2.04 ) }
    dend_25 { pt3dadd( -44.2867, 73.1796, -32.8881, 2.76 ) }
    dend_25 { pt3dadd( -45.4281, 75.7842, -34.2787, 0.12 ) }
    dend_25 { pt3dadd( -45.7877, 76.5612, -34.6931, 0.12 ) }
    dend_25 { pt3dadd( -46.3565, 77.7058, -35.3198, 0.12 ) }
    dend_25 { pt3dadd( -46.8849, 78.709, -35.9513, 0.48 ) }
    dend_25 { pt3dadd( -47.1233, 79.1282, -36.2154, 0.12 ) }
    dend_25 { pt3dadd( -47.7831, 80.2528, -36.8543, 0.12 ) }
    dend_25 { pt3dadd( -48.5181, 81.4768, -37.461, 2.88 ) }
    dend_25 { pt3dadd( -48.8217, 81.9669, -37.7153, 3.12 ) }
    dend_25 { pt3dadd( -49.4366, 82.9523, -38.2241, 2.16 ) }
    dend_25 { pt3dadd( -50.2327, 84.2876, -38.843, 0.12 ) }
    dend_25 { pt3dadd( -50.6457, 84.9827, -39.1901, 0.12 ) }
    dend_25 { pt3dadd( -50.8829, 85.3893, -39.4095, 0.12 ) }
    dend_25 { pt3dadd( -51.2876, 86.0965, -39.7974, 0.12 ) }
    dend_25 { pt3dadd( -51.5698, 86.6046, -40.0697, 1.2 ) }
    dend_25 { pt3dadd( -51.8608, 87.1456, -40.3299, 1.44 ) }
    dend_25 { pt3dadd( -52.6526, 88.6158, -41.0263, 0.12 ) }
    dend_25 { pt3dadd( -52.897, 89.057, -41.277, 0.12 ) }
    dend_25 { pt3dadd( -53.4518, 90.0716, -41.8892, 0.12 ) }
    dend_25 { pt3dadd( -53.741, 90.6222, -42.23, 1.56 ) }
    dend_25 { pt3dadd( -54.0224, 91.1404, -42.5459, 2.16 ) }
    dend_25 { pt3dadd( -54.2185, 91.4969, -42.7475, 2.28 ) }
    dend_25 { pt3dadd( -55.188, 93.2549, -43.5434, 0.48 ) }
    dend_25 { pt3dadd( -55.5007, 93.8069, -43.7784, 0.48 ) }
    dend_25 { pt3dadd( -55.6607, 94.0977, -43.9055, 0.48 ) }
    dend_25 { pt3dadd( -55.8713, 94.5028, -44.1697, 0.24 ) }
    dend_25 { pt3dadd( -56.0429, 94.8407, -44.4224, 0.24 ) }
    dend_25 { pt3dadd( -56.3964, 95.5727, -45.0229, 1.8 ) }
    dend_25 { pt3dadd( -56.5495, 95.9041, -45.2961, 2.64 ) }
    dend_25 { pt3dadd( -56.9918, 96.9298, -46.1715, 2.88 ) }
    dend_25 { pt3dadd( -57.8257, 99.1049, -48.0671, 0.36 ) }
    dend_25 { pt3dadd( -58.053, 99.7778, -48.6376, 0.36 ) }
    dend_25 { pt3dadd( -58.1983, 100.265, -49.0291, 0.12 ) }
    dend_25 { pt3dadd( -58.4111, 101.075, -49.6248, 1.56 ) }
    dend_25 { pt3dadd( -58.4603, 101.28, -49.7601, 1.68 ) }
    dend_25 { pt3dadd( -58.6807, 102.257, -50.3039, 0.24 ) }
    dend_25 { pt3dadd( -58.8936, 103.272, -50.7892, 0.24 ) }
    dend_25 { pt3dadd( -59.1402, 104.504, -51.3963, 2.64 ) }
    dend_25 { pt3dadd( -59.2758, 105.165, -51.7233, 3.0 ) }
    dend_25 { pt3dadd( -59.7069, 107.221, -52.8016, 0.24 ) }
    dend_25 { pt3dadd( -59.9443, 108.301, -53.3774, 1.68 ) }
    dend_25 { pt3dadd( -60.0579, 108.783, -53.6367, 1.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 86/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 21.1733, 25.5213, 36.379, 0.12 ) }
    dend_23 { pt3dadd( 26.2203, 29.0321, 43.3235, 0.12 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 88/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 21.1733, 25.5213, 36.379, 0.12 ) }
    dend_22 { pt3dadd( 27.4263, 29.7296, 45.0774, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.94284, -41.8054, -10.9655, 0.12 ) }
    dend_20 { pt3dadd( -1.35285, -42.7414, -11.5962, 0.12 ) }
    dend_20 { pt3dadd( -0.98603, -43.4043, -12.0617, 0.12 ) }
    dend_20 { pt3dadd( -0.705667, -43.9758, -12.4484, 0.12 ) }
    dend_20 { pt3dadd( -0.145539, -45.2216, -13.2585, 1.56 ) }
    dend_20 { pt3dadd( -0.00147714, -45.565, -13.487, 1.56 ) }
    dend_20 { pt3dadd( 0.558071, -46.9128, -14.3282, 0.12 ) }
    dend_20 { pt3dadd( 0.770011, -47.5132, -14.741, 0.12 ) }
    dend_20 { pt3dadd( 0.935631, -47.9903, -15.0743, 0.12 ) }
    dend_20 { pt3dadd( 1.02208, -48.2208, -15.2272, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 1.36808, -49.0749, -15.7319, 1.44 ) }
    dend_20 { pt3dadd( 1.75948, -49.8255, -16.2337, 1.68 ) }
    dend_20 { pt3dadd( 2.53742, -51.0238, -17.0677, 0.12 ) }
    dend_20 { pt3dadd( 3.01234, -51.6387, -17.4979, 0.12 ) }
    dend_20 { pt3dadd( 3.38996, -52.0699, -17.7779, 0.12 ) }
    dend_20 { pt3dadd( 3.68462, -52.374, -17.9516, 0.12 ) }
    dend_20 { pt3dadd( 4.92284, -53.5291, -18.6458, 1.56 ) }
    dend_20 { pt3dadd( 5.3627, -53.913, -18.8864, 1.56 ) }
    dend_20 { pt3dadd( 6.29879, -54.6637, -19.2887, 0.12 ) }
    dend_20 { pt3dadd( 7.10283, -55.2994, -19.6425, 0.12 ) }
    dend_20 { pt3dadd( 7.65758, -55.7583, -19.8802, 1.08 ) }
    dend_20 { pt3dadd( 8.85348, -56.8438, -20.3164, 0.72 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.94284, -41.8054, -10.9655, 1.32 ) }
    dend_1 { pt3dadd( -3.08102, -44.1707, -11.6038, 1.32 ) }
    dend_1 { pt3dadd( -3.7985, -45.6617, -12.0061, 1.32 ) }
    dend_1 { pt3dadd( -4.32296, -46.7515, -12.3003, 2.04 ) }
    dend_1 { pt3dadd( -5.05143, -48.2654, -12.7088, 2.52 ) }
    dend_1 { pt3dadd( -5.38862, -48.9661, -12.8979, 2.52 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.72405 ) }
    axon_1 { pt3dadd( 2.56414, 56.0517, 0.698697, 0.72405 ) }
    axon_1 { pt3dadd( 3.06515, 71.0433, 0.698697, 0.72405 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 21/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -60.0579, 108.783, -53.6367, 0.12 ) }
    dend_27 { pt3dadd( -60.4269, 109.267, -53.8515, 0.12 ) }
    dend_27 { pt3dadd( -60.6251, 109.613, -54.0265, 0.12 ) }
    dend_27 { pt3dadd( -60.8586, 110.037, -54.2344, 0.72 ) }
    dend_27 { pt3dadd( -61.0442, 110.394, -54.4765, 0.12 ) }
    dend_27 { pt3dadd( -61.2983, 110.88, -54.8196, 0.12 ) }
    dend_27 { pt3dadd( -61.8204, 111.904, -55.529, 0.12 ) }
    dend_27 { pt3dadd( -62.1542, 112.637, -56.0672, 2.28 ) }
    dend_27 { pt3dadd( -62.3066, 112.981, -56.3208, 2.52 ) }
    dend_27 { pt3dadd( -63.0651, 114.71, -57.5886, 0.12 ) }
    dend_27 { pt3dadd( -63.2849, 115.178, -57.9264, 0.12 ) }
    dend_27 { pt3dadd( -63.4514, 115.479, -58.1596, 0.48 ) }
    dend_27 { pt3dadd( -63.7321, 115.913, -58.4909, 0.12 ) }
    dend_27 { pt3dadd( -64.0576, 116.368, -58.8689, 0.12 ) }
    dend_27 { pt3dadd( -64.2107, 116.576, -59.0962, 1.2 ) }
    dend_27 { pt3dadd( -64.4299, 116.842, -59.448, 1.56 ) }
    dend_27 { pt3dadd( -65.1778, 117.692, -60.6725, 0.24 ) }
    dend_27 { pt3dadd( -65.3867, 117.919, -61.0101, 0.24 ) }
    dend_27 { pt3dadd( -65.5705, 118.148, -61.3825, 0.96 ) }
    dend_27 { pt3dadd( -66.4638, 119.445, -63.55, 0.12 ) }
    dend_27 { pt3dadd( -66.5715, 119.62, -63.8221, 0.12 ) }
    dend_27 { pt3dadd( -66.9198, 120.235, -64.712, 2.52 ) }
    dend_27 { pt3dadd( -66.992, 120.368, -64.8983, 2.52 ) }
    dend_27 { pt3dadd( -67.8293, 121.944, -67.0592, 0.12 ) }
    dend_27 { pt3dadd( -67.9337, 122.137, -67.3062, 0.12 ) }
    dend_27 { pt3dadd( -68.2522, 122.712, -67.9712, 0.84 ) }
    dend_27 { pt3dadd( -68.3737, 122.937, -68.2511, 0.96 ) }
    dend_27 { pt3dadd( -68.8477, 123.855, -69.3837, 0.12 ) }
    dend_27 { pt3dadd( -68.9484, 124.044, -69.5972, 0.12 ) }
    dend_27 { pt3dadd( -69.0884, 124.301, -69.8346, 0.6 ) }
    dend_27 { pt3dadd( -69.5684, 125.337, -70.7938, 0.12 ) }
    dend_27 { pt3dadd( -69.6592, 125.581, -71.0063, 0.12 ) }
    dend_27 { pt3dadd( -69.8745, 126.333, -71.5432, 0.12 ) }
    dend_27 { pt3dadd( -69.9875, 126.904, -71.8279, 1.08 ) }
    dend_27 { pt3dadd( -70.0407, 127.3, -71.9899, 1.08 ) }
    dend_27 { pt3dadd( -70.0989, 128.003, -72.2344, 0.12 ) }
    dend_27 { pt3dadd( -70.1199, 128.6, -72.3822, 0.12 ) }
    dend_27 { pt3dadd( -70.1187, 128.963, -72.496, 0.24 ) }
    dend_27 { pt3dadd( -70.0943, 129.554, -72.7032, 0.12 ) }
    dend_27 { pt3dadd( -70.0681, 129.949, -72.8374, 0.12 ) }
    dend_27 { pt3dadd( -69.9892, 130.608, -73.0496, 0.96 ) }
    dend_27 { pt3dadd( -69.9289, 130.929, -73.0953, 0.96 ) }
    dend_27 { pt3dadd( -69.6989, 131.917, -73.1121, 0.12 ) }
    dend_27 { pt3dadd( -69.5652, 132.429, -73.1543, 0.12 ) }
    dend_27 { pt3dadd( -69.4822, 132.738, -73.1921, 0.36 ) }
    dend_27 { pt3dadd( -69.259, 133.669, -73.3895, 0.36 ) }
    dend_27 { pt3dadd( -69.0062, 135.173, -74.1259, 0.72 ) }
    dend_27 { pt3dadd( -68.9885, 135.368, -74.2569, 0.72 ) }
    dend_27 { pt3dadd( -68.9261, 137.041, -75.5025, 1.56 ) }
    dend_27 { pt3dadd( -68.9219, 137.453, -75.8359, 2.04 ) }
    dend_27 { pt3dadd( -68.9626, 138.198, -76.4533, 2.52 ) }
    dend_27 { pt3dadd( -69.1579, 139.8, -77.905, 0.12 ) }
    dend_27 { pt3dadd( -69.2239, 140.272, -78.3289, 0.24 ) }
    dend_27 { pt3dadd( -69.2848, 140.706, -78.6516, 0.12 ) }
    dend_27 { pt3dadd( -69.3286, 141.032, -78.8404, 0.12 ) }
    dend_27 { pt3dadd( -69.4348, 141.823, -79.2478, 0.12 ) }
    dend_27 { pt3dadd( -69.5587, 142.608, -79.5629, 0.12 ) }
    dend_27 { pt3dadd( -69.7001, 143.311, -79.7847, 1.56 ) }
    dend_27 { pt3dadd( -69.7609, 143.601, -79.8891, 1.92 ) }
    dend_27 { pt3dadd( -70.1188, 145.09, -80.4423, 0.12 ) }
    dend_27 { pt3dadd( -70.3828, 146.09, -80.7975, 0.12 ) }
    dend_27 { pt3dadd( -70.5909, 146.851, -81.0666, 1.56 ) }
    dend_27 { pt3dadd( -70.7194, 147.242, -81.1952, 1.92 ) }
    dend_27 { pt3dadd( -71.0836, 148.267, -81.555, 0.12 ) }
    dend_27 { pt3dadd( -71.3701, 149.1, -81.846, 0.12 ) }
    dend_27 { pt3dadd( -71.5312, 149.607, -82.0031, 0.48 ) }
    dend_27 { pt3dadd( -71.659, 150.057, -82.164, 0.12 ) }
    dend_27 { pt3dadd( -71.7833, 150.66, -82.429, 0.12 ) }
    dend_27 { pt3dadd( -71.8806, 151.323, -82.7324, 0.12 ) }
    dend_27 { pt3dadd( -71.9405, 151.947, -83.0012, 0.12 ) }
    dend_27 { pt3dadd( -71.9628, 152.609, -83.2952, 1.32 ) }
    dend_27 { pt3dadd( -71.965, 152.907, -83.4167, 1.56 ) }
    dend_27 { pt3dadd( -71.968, 154.461, -83.9806, 0.12 ) }
    dend_27 { pt3dadd( -71.9779, 155.069, -84.2438, 0.12 ) }
    dend_27 { pt3dadd( -72.0119, 155.643, -84.4959, 0.12 ) }
    dend_27 { pt3dadd( -72.0366, 156.007, -84.6518, 0.12 ) }
    dend_27 { pt3dadd( -72.1105, 156.868, -85.0087, 1.68 ) }
    dend_27 { pt3dadd( -72.1337, 157.075, -85.0956, 1.8 ) }
    dend_27 { pt3dadd( -72.3791, 158.877, -85.7715, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( -72.5215, 160.032, -86.2292, 0.12 ) }
    dend_27 { pt3dadd( -72.6012, 160.603, -86.4519, 1.08 ) }
    dend_27 { pt3dadd( -72.6615, 161.014, -86.6077, 1.2 ) }
    dend_27 { pt3dadd( -72.7715, 161.908, -86.9155, 0.12 ) }
    dend_27 { pt3dadd( -72.8966, 162.998, -87.233, 0.12 ) }
    dend_27 { pt3dadd( -73.0095, 164.022, -87.4631, 1.8 ) }
    dend_27 { pt3dadd( -73.0738, 164.627, -87.6132, 2.04 ) }
    dend_27 { pt3dadd( -73.1537, 165.558, -87.8401, 0.12 ) }
    dend_27 { pt3dadd( -73.2004, 166.514, -88.0428, 0.12 ) }
    dend_27 { pt3dadd( -73.2122, 166.95, -88.1016, 0.48 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -60.0579, 108.783, -53.6367, 0.12 ) }
    dend_26 { pt3dadd( -59.8282, 109.709, -53.5067, 0.12 ) }
    dend_26 { pt3dadd( -59.6212, 110.6, -53.3812, 0.12 ) }
    dend_26 { pt3dadd( -59.4146, 111.595, -53.1918, 0.72 ) }
    dend_26 { pt3dadd( -59.2856, 112.487, -53.0228, 0.12 ) }
    dend_26 { pt3dadd( -59.1043, 113.983, -52.7498, 0.12 ) }
    dend_26 { pt3dadd( -59.0596, 114.427, -52.6721, 1.2 ) }
    dend_26 { pt3dadd( -59.0359, 114.8, -52.5864, 0.72 ) }
    dend_26 { pt3dadd( -59.0166, 115.792, -52.3476, 0.12 ) }
    dend_26 { pt3dadd( -59.0635, 118.018, -51.825, 0.12 ) }
    dend_26 { pt3dadd( -59.084, 118.646, -51.6914, 0.96 ) }
    dend_26 { pt3dadd( -59.1045, 119.157, -51.5578, 1.44 ) }
    dend_26 { pt3dadd( -59.1642, 120.48, -51.1903, 0.12 ) }
    dend_26 { pt3dadd( -59.2083, 121.358, -50.9067, 0.12 ) }
    dend_26 { pt3dadd( -59.2417, 122.087, -50.6582, 0.24 ) }
    dend_26 { pt3dadd( -59.2595, 122.699, -50.424, 0.24 ) }
    dend_26 { pt3dadd( -59.2725, 123.683, -50.0479, 0.24 ) }
    dend_26 { pt3dadd( -59.2714, 124.977, -49.4837, 2.52 ) }
    dend_26 { pt3dadd( -59.2468, 126.692, -48.7095, 0.24 ) }
    dend_26 { pt3dadd( -59.2106, 127.736, -48.2154, 0.24 ) }
    dend_26 { pt3dadd( -59.1912, 128.155, -48.0154, 0.48 ) }
    dend_26 { pt3dadd( -59.1746, 128.423, -47.8978, 0.12 ) }
    dend_26 { pt3dadd( -58.9436, 131.4, -46.7036, 0.12 ) }
    dend_26 { pt3dadd( -58.877, 132.126, -46.4162, 1.92 ) }
    dend_26 { pt3dadd( -58.7994, 132.733, -46.2114, 2.16 ) }
    dend_26 { pt3dadd( -58.5981, 134.013, -45.7994, 0.12 ) }
    dend_26 { pt3dadd( -58.2792, 135.732, -45.3007, 0.12 ) }
    dend_26 { pt3dadd( -58.2497, 135.854, -45.2754, 0.36 ) }
    dend_26 { pt3dadd( -58.1298, 136.219, -45.2423, 0.12 ) }
    dend_26 { pt3dadd( -57.4992, 137.997, -45.1205, 0.12 ) }
    dend_26 { pt3dadd( -57.0638, 139.209, -45.0037, 2.04 ) }
    dend_26 { pt3dadd( -56.8611, 139.749, -44.9418, 1.56 ) }
    dend_26 { pt3dadd( -56.3536, 141.066, -44.7431, 0.12 ) }
    dend_26 { pt3dadd( -56.1251, 141.65, -44.6439, 0.12 ) }
    dend_26 { pt3dadd( -55.8831, 142.248, -44.5216, 0.12 ) }
    dend_26 { pt3dadd( -55.3576, 143.581, -44.2003, 0.12 ) }
    dend_26 { pt3dadd( -55.1029, 144.259, -44.0378, 1.56 ) }
    dend_26 { pt3dadd( -54.9758, 144.585, -43.9354, 2.16 ) }
    dend_26 { pt3dadd( -54.6464, 145.393, -43.6045, 1.32 ) }
    dend_26 { pt3dadd( -54.2979, 146.171, -43.285, 0.12 ) }
    dend_26 { pt3dadd( -54.0799, 146.599, -43.1226, 0.12 ) }
    dend_26 { pt3dadd( -53.7185, 147.302, -42.9088, 0.12 ) }
    dend_26 { pt3dadd( -53.316, 148.117, -42.6636, 0.12 ) }
    dend_26 { pt3dadd( -53.0197, 148.723, -42.491, 1.08 ) }
    dend_26 { pt3dadd( -52.7835, 149.224, -42.3634, 1.8 ) }
    dend_26 { pt3dadd( -52.3002, 150.227, -42.0495, 0.12 ) }
    dend_26 { pt3dadd( -51.8668, 151.089, -41.6752, 0.12 ) }
    dend_26 { pt3dadd( -51.6027, 151.622, -41.4151, 0.12 ) }
    dend_26 { pt3dadd( -51.3433, 152.152, -41.1494, 0.12 ) }
    dend_26 { pt3dadd( -50.9637, 152.891, -40.7825, 0.12 ) }
    dend_26 { pt3dadd( -50.2335, 154.241, -40.0971, 1.32 ) }
    dend_26 { pt3dadd( -49.5595, 155.437, -39.5282, 0.12 ) }
    dend_26 { pt3dadd( -48.858, 156.682, -39.0429, 0.12 ) }
    dend_26 { pt3dadd( -48.6945, 156.998, -38.9572, 0.96 ) }
    dend_26 { pt3dadd( -48.2961, 157.851, -38.861, 0.48 ) }
    dend_26 { pt3dadd( -48.1199, 158.28, -38.8762, 0.48 ) }
    dend_26 { pt3dadd( -47.8498, 159.093, -39.006, 0.12 ) }
    dend_26 { pt3dadd( -47.5324, 160.316, -39.2575, 2.04 ) }
    dend_26 { pt3dadd( -47.359, 161.08, -39.3915, 2.28 ) }
    dend_26 { pt3dadd( -47.0936, 162.388, -39.5637, 0.12 ) }
    dend_26 { pt3dadd( -46.9344, 163.258, -39.5956, 0.12 ) }
    dend_26 { pt3dadd( -46.7909, 164.023, -39.5741, 0.12 ) }
    dend_26 { pt3dadd( -46.6835, 164.528, -39.5295, 0.12 ) }
    dend_26 { pt3dadd( -46.349, 165.749, -39.3864, 0.12 ) }
    dend_26 { pt3dadd( -46.0574, 166.59, -39.2679, 0.12 ) }
    dend_26 { pt3dadd( -45.587, 167.668, -39.0912, 1.32 ) }
    dend_26 { pt3dadd( -45.3758, 168.067, -39.0247, 1.32 ) }
    dend_26 { pt3dadd( -45.0015, 168.67, -38.9322, 0.12 ) }
    dend_26 { pt3dadd( -44.2221, 169.833, -38.8766, 0.12 ) }
    dend_26 { pt3dadd( -43.8567, 170.357, -38.9197, 0.12 ) }
    dend_26 { pt3dadd( -43.4205, 170.941, -39.0282, 1.2 ) }
    dend_26 { pt3dadd( -43.1351, 171.293, -39.1434, 1.56 ) }
    dend_26 { pt3dadd( -42.3892, 172.178, -39.4832, 0.12 ) }
    dend_26 { pt3dadd( -41.3055, 173.421, -40.0118, 0.12 ) }
    dend_26 { pt3dadd( -40.6658, 174.164, -40.3655, 1.44 ) }
    dend_26 { pt3dadd( -40.3024, 174.576, -40.5694, 2.16 ) }
    dend_26 { pt3dadd( -39.2295, 175.732, -41.1997, 0.12 ) }
    dend_26 { pt3dadd( -38.9254, 176.036, -41.3776, 0.12 ) }
    dend_26 { pt3dadd( -38.4693, 176.432, -41.6427, 0.12 ) }
    dend_26 { pt3dadd( -38.051, 176.743, -41.8528, 0.12 ) }
    dend_26 { pt3dadd( -37.3339, 177.267, -42.2201, 0.12 ) }
    dend_26 { pt3dadd( -36.5268, 177.839, -42.6192, 1.2 ) }
    dend_26 { pt3dadd( -36.326, 177.98, -42.7184, 1.2 ) }
    dend_26 { pt3dadd( -35.4574, 178.585, -43.1629, 0.12 ) }
    dend_26 { pt3dadd( -35.1887, 178.78, -43.3376, 0.12 ) }
    dend_26 { pt3dadd( -34.7241, 179.127, -43.6645, 0.12 ) }
    dend_26 { pt3dadd( -34.0024, 179.726, -44.2222, 0.12 ) }
    dend_26 { pt3dadd( -33.5365, 180.176, -44.6336, 1.32 ) }
    dend_26 { pt3dadd( -33.3301, 180.397, -44.8527, 1.44 ) }
    dend_26 { pt3dadd( -32.4154, 181.463, -45.9319, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -32.127, 181.813, -46.3107, 0.12 ) }
    dend_26 { pt3dadd( -31.988, 181.983, -46.5086, 0.12 ) }
    dend_26 { pt3dadd( -31.3579, 182.822, -47.4768, 0.12 ) }
    dend_26 { pt3dadd( -30.8768, 183.495, -48.1723, 1.44 ) }
    dend_26 { pt3dadd( -30.6705, 183.795, -48.4629, 1.92 ) }
    dend_26 { pt3dadd( -30.2803, 184.374, -48.9596, 1.44 ) }
    dend_26 { pt3dadd( -29.7198, 185.28, -49.7171, 0.12 ) }
    dend_26 { pt3dadd( -29.5085, 185.613, -49.9771, 0.12 ) }
    dend_26 { pt3dadd( -28.9436, 186.364, -50.4899, 0.12 ) }
    dend_26 { pt3dadd( -28.3354, 187.131, -50.9661, 1.44 ) }
    dend_26 { pt3dadd( -28.0106, 187.513, -51.1889, 1.92 ) }
    dend_26 { pt3dadd( -26.9084, 188.701, -51.8468, 0.12 ) }
    dend_26 { pt3dadd( -26.3343, 189.296, -52.1512, 0.12 ) }
    dend_26 { pt3dadd( -25.2059, 190.366, -52.7351, 0.12 ) }
    dend_26 { pt3dadd( -24.9936, 190.543, -52.8398, 0.84 ) }
    dend_26 { pt3dadd( -24.553, 190.888, -53.0289, 0.96 ) }
    dend_26 { pt3dadd( -23.6763, 191.532, -53.3967, 0.12 ) }
    dend_26 { pt3dadd( -23.0195, 191.986, -53.65, 0.12 ) }
    dend_26 { pt3dadd( -22.4095, 192.449, -53.9499, 0.72 ) }
    dend_26 { pt3dadd( -21.7776, 193.035, -54.3714, 0.12 ) }
    dend_26 { pt3dadd( -21.2248, 193.649, -54.7978, 0.12 ) }
    dend_26 { pt3dadd( -20.8992, 194.1, -55.087, 1.2 ) }
    dend_26 { pt3dadd( -20.7034, 194.466, -55.3329, 1.44 ) }
    dend_26 { pt3dadd( -20.2345, 195.525, -56.0617, 0.12 ) }
    dend_26 { pt3dadd( -19.8108, 196.724, -56.8468, 0.12 ) }
    dend_26 { pt3dadd( -19.5595, 197.571, -57.3948, 2.52 ) }
    dend_26 { pt3dadd( -19.4301, 198.083, -57.7867, 2.52 ) }
    dend_26 { pt3dadd( -18.9777, 200.026, -59.3596, 0.24 ) }
    dend_26 { pt3dadd( -18.8287, 200.579, -59.827, 0.24 ) }
    dend_26 { pt3dadd( -18.677, 201.051, -60.2578, 0.24 ) }
    dend_26 { pt3dadd( -18.4341, 201.617, -60.8212, 1.32 ) }
    dend_26 { pt3dadd( -17.4673, 203.282, -62.7196, 0.12 ) }
    dend_26 { pt3dadd( -17.1337, 203.712, -63.3438, 0.12 ) }
    dend_26 { pt3dadd( -16.6444, 204.21, -64.1572, 0.72 ) }
    dend_26 { pt3dadd( -15.8935, 204.888, -65.3582, 0.12 ) }
    dend_26 { pt3dadd( -15.5975, 205.127, -65.8261, 0.12 ) }
    dend_26 { pt3dadd( -14.5705, 205.915, -67.3914, 2.76 ) }
    dend_26 { pt3dadd( -12.5661, 207.434, -70.314, 0.12 ) }
    dend_26 { pt3dadd( -12.1359, 207.784, -71.0296, 0.12 ) }
    dend_26 { pt3dadd( -12.0079, 207.906, -71.2696, 1.32 ) }
    dend_26 { pt3dadd( -11.0798, 208.919, -73.1028, 0.12 ) }
    dend_26 { pt3dadd( -10.8289, 209.255, -73.634, 0.12 ) }
    dend_26 { pt3dadd( -10.6413, 209.564, -74.0275, 0.96 ) }
    dend_26 { pt3dadd( -9.8434, 211.02, -75.5014, 0.12 ) }
    dend_26 { pt3dadd( -9.50171, 211.624, -76.1029, 0.12 ) }
    dend_26 { pt3dadd( -8.83915, 212.71, -77.0672, 2.4 ) }
    dend_26 { pt3dadd( -7.95957, 214.022, -78.0912, 0.12 ) }
    dend_26 { pt3dadd( -7.44675, 214.717, -78.6277, 0.12 ) }
    dend_26 { pt3dadd( -7.08794, 215.157, -78.9581, 1.44 ) }
    dend_26 { pt3dadd( -6.0735, 216.315, -79.7735, 0.12 ) }
    dend_26 { pt3dadd( -5.11619, 217.339, -80.5417, 0.12 ) }
    dend_26 { pt3dadd( -4.95547, 217.502, -80.6713, 0.84 ) }
    dend_26 { pt3dadd( -4.36569, 218.075, -81.1661, 0.12 ) }
    dend_26 { pt3dadd( -3.52762, 218.855, -81.8797, 0.48 ) }
    dend_26 { pt3dadd( -2.92042, 219.411, -82.3741, 0.12 ) }
    dend_26 { pt3dadd( -2.49282, 219.794, -82.7011, 0.12 ) }
    dend_26 { pt3dadd( -1.58336, 220.594, -83.3807, 1.8 ) }
    dend_26 { pt3dadd( -0.84396, 221.253, -83.8566, 0.12 ) }
    dend_26 { pt3dadd( -0.313656, 221.732, -84.1232, 0.12 ) }
    dend_26 { pt3dadd( 0.1486, 222.168, -84.2924, 0.72 ) }
    dend_26 { pt3dadd( 0.664084, 222.656, -84.3943, 0.12 ) }
    dend_26 { pt3dadd( 1.47302, 223.418, -84.465, 0.12 ) }
    dend_26 { pt3dadd( 1.99076, 223.92, -84.4864, 0.72 ) }
    dend_26 { pt3dadd( 2.43943, 224.296, -84.55, 0.12 ) }
    dend_26 { pt3dadd( 2.90068, 224.653, -84.6405, 0.12 ) }
    dend_26 { pt3dadd( 4.74027, 225.956, -85.3103, 0.12 ) }
    dend_26 { pt3dadd( 5.4861, 226.451, -85.6468, 1.92 ) }
    dend_26 { pt3dadd( 6.56492, 227.097, -86.322, 0.12 ) }
    dend_26 { pt3dadd( 9.01397, 228.441, -88.2408, 0.12 ) }
    dend_26 { pt3dadd( 10.0587, 228.988, -89.1732, 0.12 ) }
    dend_26 { pt3dadd( 12.2298, 230.061, -91.3213, 0.12 ) }
    dend_26 { pt3dadd( 13.1379, 230.499, -92.3648, 2.28 ) }
    dend_26 { pt3dadd( 14.9666, 231.332, -94.8589, 0.72 ) }
    dend_26 { pt3dadd( 15.5945, 231.568, -96.2406, 0.12 ) }
    dend_26 { pt3dadd( 15.5251, 231.588, -95.3933, 0.12 ) }
    dend_26 { pt3dadd( 15.5703, 231.665, -94.6956, 1.2 ) }
    dend_26 { pt3dadd( 15.7413, 231.856, -93.5633, 0.6 ) }
    dend_26 { pt3dadd( 17.5164, 233.972, -82.6954, 0.12 ) }
    dend_26 { pt3dadd( 17.6268, 234.115, -82.0356, 0.12 ) }
    dend_26 { pt3dadd( 17.6913, 234.203, -81.6258, 0.6 ) }
    dend_26 { pt3dadd( 17.7403, 234.271, -81.2634, 0.12 ) }
    dend_26 { pt3dadd( 17.8781, 234.463, -79.4982, 0.12 ) }
    dend_26 { pt3dadd( 17.737, 234.11, -78.5602, 0.12 ) }
    dend_26 { pt3dadd( 18.2002, 235.102, -79.3105, 1.56 ) }
    dend_26 { pt3dadd( 18.3005, 235.322, -79.4751, 1.8 ) }
    dend_26 { pt3dadd( 18.9714, 236.706, -80.4367, 0.12 ) }
    dend_26 { pt3dadd( 19.6256, 237.953, -81.2327, 0.12 ) }
    dend_26 { pt3dadd( 20.0169, 238.624, -81.6353, 0.12 ) }
    dend_26 { pt3dadd( 20.6989, 239.668, -82.2348, 1.8 ) }
    dend_26 { pt3dadd( 21.582, 240.841, -82.8308, 0.12 ) }
    dend_26 { pt3dadd( 22.5989, 242.038, -83.394, 0.12 ) }
    dend_26 { pt3dadd( 23.0276, 242.475, -83.6129, 1.08 ) }
    dend_26 { pt3dadd( 23.9113, 243.26, -84.0704, 0.12 ) }
    dend_26 { pt3dadd( 24.6458, 243.858, -84.4566, 0.12 ) }
    dend_26 { pt3dadd( 25.4699, 244.481, -84.9259, 0.12 ) }
    dend_26 { pt3dadd( 25.8268, 244.729, -85.1476, 1.08 ) }
    dend_26 { pt3dadd( 27.5359, 245.828, -86.3551, 0.12 ) }
    dend_26 { pt3dadd( 28.0522, 246.159, -86.7251, 0.12 ) }
    dend_26 { pt3dadd( 28.5562, 246.49, -87.1036, 1.44 ) }
    dend_26 { pt3dadd( 29.3613, 247.074, -87.9088, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 29.5149, 247.196, -88.0884, 1.92 ) }
    dend_26 { pt3dadd( 30.2608, 247.831, -89.0007, 0.12 ) }
    dend_26 { pt3dadd( 30.7731, 248.294, -89.637, 0.12 ) }
    dend_26 { pt3dadd( 31.3122, 248.812, -90.3621, 1.08 ) }
    dend_26 { pt3dadd( 32.5899, 250.101, -92.1882, 0.12 ) }
    dend_26 { pt3dadd( 32.7883, 250.302, -92.4943, 0.12 ) }
    dend_26 { pt3dadd( 33.0036, 250.507, -92.8718, 0.6 ) }
    dend_26 { pt3dadd( 33.4338, 250.871, -93.6687, 0.12 ) }
    dend_26 { pt3dadd( 33.5673, 250.973, -93.9158, 0.12 ) }
    dend_26 { pt3dadd( 33.9233, 251.206, -94.516, 1.2 ) }
    dend_26 { pt3dadd( 34.7412, 251.729, -95.7049, 1.2 ) }
    dend_26 { pt3dadd( 35.7012, 252.387, -97.0675, 0.24 ) }
    dend_26 { pt3dadd( 36.0204, 252.621, -97.514, 0.24 ) }
    dend_26 { pt3dadd( 36.1569, 252.733, -97.6982, 0.84 ) }
    dend_26 { pt3dadd( 36.7049, 253.233, -98.4012, 0.12 ) }
    dend_26 { pt3dadd( 37.4631, 253.951, -99.2644, 0.12 ) }
    dend_26 { pt3dadd( 37.6729, 254.175, -99.4776, 0.12 ) }
    dend_26 { pt3dadd( 38.3603, 254.987, -100.189, 0.96 ) }
    dend_26 { pt3dadd( 38.5574, 255.231, -100.411, 0.96 ) }
    dend_26 { pt3dadd( 38.7025, 255.429, -100.59, 0.96 ) }
    dend_26 { pt3dadd( 39.1269, 256.103, -101.239, 0.48 ) }
    dend_26 { pt3dadd( 39.3056, 256.405, -101.559, 0.48 ) }
    dend_26 { pt3dadd( 39.5903, 256.961, -102.137, 0.12 ) }
    dend_26 { pt3dadd( 39.796, 257.374, -102.498, 0.12 ) }
    dend_26 { pt3dadd( 40.423, 258.616, -103.449, 0.12 ) }
    dend_26 { pt3dadd( 40.8025, 259.356, -103.921, 0.84 ) }
    dend_26 { pt3dadd( 40.9847, 259.731, -104.137, 1.08 ) }
    dend_26 { pt3dadd( 41.4529, 260.644, -104.642, 0.12 ) }
    dend_26 { pt3dadd( 42.031, 261.81, -105.219, 0.12 ) }
    dend_26 { pt3dadd( 42.2636, 262.252, -105.413, 1.08 ) }
    dend_26 { pt3dadd( 42.6488, 262.875, -105.529, 1.08 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.38862, -48.9661, -12.8979, 0.48 ) }
    dend_15 { pt3dadd( -6.44796, -49.2964, -12.9666, 0.48 ) }
    dend_15 { pt3dadd( -7.02712, -49.4884, -13.0156, 0.48 ) }
    dend_15 { pt3dadd( -7.9465, -49.8058, -13.1037, 0.84 ) }
    dend_15 { pt3dadd( -8.72284, -50.091, -13.183, 0.96 ) }
    dend_15 { pt3dadd( -9.29824, -50.3086, -13.243, 0.96 ) }
    dend_15 { pt3dadd( -9.88774, -50.5387, -13.3039, 0.12 ) }
    dend_15 { pt3dadd( -10.1539, -50.6551, -13.3636, 0.12 ) }
    dend_15 { pt3dadd( -10.3, -50.7205, -13.4136, 0.12 ) }
    dend_15 { pt3dadd( -10.5487, -50.8285, -13.5483, 0.48 ) }
    dend_15 { pt3dadd( -10.7461, -50.9153, -13.6786, 0.48 ) }
    dend_15 { pt3dadd( -10.9825, -51.0157, -13.8394, 0.6 ) }
    dend_15 { pt3dadd( -11.8498, -51.3463, -14.4248, 0.12 ) }
    dend_15 { pt3dadd( -12.1489, -51.4523, -14.6214, 0.12 ) }
    dend_15 { pt3dadd( -12.7692, -51.6695, -15.0096, 2.16 ) }
    dend_15 { pt3dadd( -12.9872, -51.7466, -15.1413, 3.0 ) }
    dend_15 { pt3dadd( -13.4556, -51.9181, -15.405, 3.12 ) }
    dend_15 { pt3dadd( -14.7666, -52.4198, -16.0541, 0.12 ) }
    dend_15 { pt3dadd( -15.009, -52.5183, -16.1477, 0.12 ) }
    dend_15 { pt3dadd( -15.2748, -52.6282, -16.2419, 0.12 ) }
    dend_15 { pt3dadd( -15.4861, -52.7167, -16.3041, 0.12 ) }
    dend_15 { pt3dadd( -15.7903, -52.8471, -16.3987, 0.12 ) }
    dend_15 { pt3dadd( -16.1032, -52.9855, -16.4965, 0.12 ) }
    dend_15 { pt3dadd( -17.0274, -53.4265, -16.7518, 2.28 ) }
    dend_15 { pt3dadd( -17.2562, -53.5404, -16.8207, 3.25 ) }
    dend_15 { pt3dadd( -17.5479, -53.6965, -16.9117, 3.25 ) }
    dend_15 { pt3dadd( -18.1556, -54.0459, -17.115, 2.52 ) }
    dend_15 { pt3dadd( -18.9513, -54.5369, -17.3886, 0.12 ) }
    dend_15 { pt3dadd( -19.1814, -54.6818, -17.518, 0.12 ) }
    dend_15 { pt3dadd( -19.3141, -54.7714, -17.6141, 0.12 ) }
    dend_15 { pt3dadd( -19.7585, -55.0795, -17.9778, 1.68 ) }
    dend_15 { pt3dadd( -20.1029, -55.3259, -18.2688, 2.04 ) }
    dend_15 { pt3dadd( -20.3504, -55.5076, -18.4756, 2.04 ) }
    dend_15 { pt3dadd( -21.8542, -56.6133, -19.8688, 0.12 ) }
    dend_15 { pt3dadd( -22.0466, -56.7496, -20.0567, 0.12 ) }
    dend_15 { pt3dadd( -22.1925, -56.8492, -20.2071, 0.12 ) }
    dend_15 { pt3dadd( -22.6631, -57.1582, -20.7364, 2.4 ) }
    dend_15 { pt3dadd( -22.9117, -57.3253, -21.0214, 3.12 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.38862, -48.9661, -12.8979, 0.96 ) }
    dend_2 { pt3dadd( -5.02245, -50.1273, -12.938, 0.96 ) }
    dend_2 { pt3dadd( -4.86347, -50.6466, -12.955, 0.48 ) }
    dend_2 { pt3dadd( -4.74307, -51.067, -12.984, 0.48 ) }
    dend_2 { pt3dadd( -4.59074, -51.6887, -13.0525, 0.6 ) }
    dend_2 { pt3dadd( -4.42586, -52.5194, -13.199, 0.6 ) }
    dend_2 { pt3dadd( -4.31321, -53.3227, -13.3756, 0.6 ) }
    dend_2 { pt3dadd( -4.24577, -54.2487, -13.6357, 0.6 ) }
    dend_2 { pt3dadd( -4.23781, -55.0567, -13.8928, 1.44 ) }
    dend_2 { pt3dadd( -4.28142, -55.7206, -14.1142, 2.04 ) }
    dend_2 { pt3dadd( -4.44191, -56.6914, -14.4528, 1.92 ) }
    dend_2 { pt3dadd( -4.72751, -57.7322, -14.8354, 1.08 ) }
    dend_2 { pt3dadd( -5.05568, -58.6024, -15.1574, 0.48 ) }
    dend_2 { pt3dadd( -5.30249, -59.1474, -15.3456, 0.36 ) }
    dend_2 { pt3dadd( -5.51658, -59.5696, -15.4765, 0.36 ) }
    dend_2 { pt3dadd( -5.68248, -59.8728, -15.5545, 0.36 ) }
    dend_2 { pt3dadd( -5.97364, -60.3402, -15.6359, 0.36 ) }
    dend_2 { pt3dadd( -6.39029, -60.9164, -15.7126, 2.04 ) }
    dend_2 { pt3dadd( -7.00592, -61.7, -15.7778, 3.97 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -73.2122, 166.95, -88.1016, 0.12 ) }
    dend_31 { pt3dadd( -72.7413, 167.149, -88.4448, 0.12 ) }
    dend_31 { pt3dadd( -71.378, 167.723, -89.4386, 0.12 ) }
    dend_31 { pt3dadd( -71.0375, 167.867, -89.6868, 0.84 ) }
    dend_31 { pt3dadd( -69.2232, 168.632, -91.0094, 0.12 ) }
    dend_31 { pt3dadd( -68.7793, 168.819, -91.333, 0.12 ) }
    dend_31 { pt3dadd( -68.5639, 168.91, -91.4899, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -73.2122, 166.95, -88.1016, 0.24 ) }
    dend_28 { pt3dadd( -73.5988, 167.831, -88.4636, 0.24 ) }
    dend_28 { pt3dadd( -73.9052, 168.47, -88.7309, 0.24 ) }
    dend_28 { pt3dadd( -74.2011, 169.057, -88.9616, 0.24 ) }
    dend_28 { pt3dadd( -74.4127, 169.452, -89.104, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( -74.6639, 169.921, -89.2729, 2.04 ) }
    dend_28 { pt3dadd( -75.3484, 171.198, -89.7334, 0.12 ) }
    dend_28 { pt3dadd( -75.7739, 171.951, -89.9722, 0.24 ) }
    dend_28 { pt3dadd( -76.1137, 172.533, -90.1828, 0.24 ) }
    dend_28 { pt3dadd( -76.5021, 173.191, -90.4439, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -22.9117, -57.3253, -21.0214, 1.68 ) }
    dend_19 { pt3dadd( -23.7921, -58.2147, -21.1897, 1.68 ) }
    dend_19 { pt3dadd( -24.2567, -58.7022, -21.267, 2.28 ) }
    dend_19 { pt3dadd( -24.92, -59.3523, -21.3707, 0.12 ) }
    dend_19 { pt3dadd( -25.2317, -59.6271, -21.4161, 0.12 ) }
    dend_19 { pt3dadd( -25.618, -59.9423, -21.4701, 0.12 ) }
    dend_19 { pt3dadd( -25.768, -60.0534, -21.4906, 0.12 ) }
    dend_19 { pt3dadd( -26.5336, -60.4988, -21.543, 2.04 ) }
    dend_19 { pt3dadd( -27.0433, -60.7643, -21.5436, 2.28 ) }
    dend_19 { pt3dadd( -27.9594, -61.2205, -21.492, 0.12 ) }
    dend_19 { pt3dadd( -28.3391, -61.4046, -21.4653, 0.12 ) }
    dend_19 { pt3dadd( -29.1808, -61.7966, -21.385, 0.12 ) }
    dend_19 { pt3dadd( -30.168, -62.2285, -21.2824, 1.68 ) }
    dend_19 { pt3dadd( -30.7276, -62.4542, -21.2144, 2.04 ) }
    dend_19 { pt3dadd( -31.3473, -62.7147, -21.1184, 0.12 ) }
    dend_19 { pt3dadd( -32.0827, -63.0245, -20.9768, 0.12 ) }
    dend_19 { pt3dadd( -32.6028, -63.2523, -20.8693, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -22.9117, -57.3253, -21.0214, 0.12 ) }
    dend_16 { pt3dadd( -24.1373, -58.4208, -23.0897, 0.12 ) }
    dend_16 { pt3dadd( -24.3502, -58.5931, -23.3906, 0.12 ) }
    dend_16 { pt3dadd( -24.6292, -58.7973, -23.7365, 0.84 ) }
    dend_16 { pt3dadd( -24.9454, -59.0021, -24.0479, 0.84 ) }
    dend_16 { pt3dadd( -26.4151, -59.9164, -25.3107, 0.12 ) }
    dend_16 { pt3dadd( -26.7338, -60.0979, -25.5523, 0.12 ) }
    dend_16 { pt3dadd( -27.5936, -60.5223, -26.0767, 0.12 ) }
    dend_16 { pt3dadd( -27.9246, -60.666, -26.2654, 0.12 ) }
    dend_16 { pt3dadd( -29.0968, -61.1155, -26.8696, 2.28 ) }
    dend_16 { pt3dadd( -29.3616, -61.2075, -26.9868, 2.64 ) }
    dend_16 { pt3dadd( -29.9823, -61.4048, -27.2244, 2.76 ) }
    dend_16 { pt3dadd( -31.579, -61.9189, -27.9218, 0.12 ) }
    dend_16 { pt3dadd( -32.5284, -62.2218, -28.3799, 0.12 ) }
    dend_16 { pt3dadd( -32.9411, -62.3593, -28.6068, 0.48 ) }
    dend_16 { pt3dadd( -33.2488, -62.4685, -28.8107, 0.48 ) }
    dend_16 { pt3dadd( -33.8635, -62.7187, -29.2322, 0.12 ) }
    dend_16 { pt3dadd( -34.3829, -62.9817, -29.6994, 0.84 ) }
    dend_16 { pt3dadd( -34.6638, -63.1485, -29.989, 1.2 ) }
    dend_16 { pt3dadd( -35.1457, -63.4755, -30.5113, 1.2 ) }
    dend_16 { pt3dadd( -35.7619, -63.9108, -31.1526, 0.12 ) }
    dend_16 { pt3dadd( -36.4433, -64.4024, -31.7806, 0.12 ) }
    dend_16 { pt3dadd( -37.9792, -65.5258, -33.0127, 0.12 ) }
    dend_16 { pt3dadd( -38.4453, -65.8743, -33.3525, 1.92 ) }
    dend_16 { pt3dadd( -39.2474, -66.5022, -33.8884, 2.88 ) }
    dend_16 { pt3dadd( -40.645, -67.631, -34.6682, 0.12 ) }
    dend_16 { pt3dadd( -41.661, -68.4967, -35.1406, 0.12 ) }
    dend_16 { pt3dadd( -42.2777, -69.0543, -35.3745, 1.68 ) }
    dend_16 { pt3dadd( -42.6748, -69.4412, -35.4807, 2.04 ) }
    dend_16 { pt3dadd( -43.4723, -70.2872, -35.7013, 1.44 ) }
    dend_16 { pt3dadd( -43.9989, -70.9097, -35.8408, 0.12 ) }
    dend_16 { pt3dadd( -44.3981, -71.4318, -35.9238, 0.12 ) }
    dend_16 { pt3dadd( -44.6735, -71.8141, -35.9881, 0.6 ) }
    dend_16 { pt3dadd( -45.1819, -72.5355, -36.0989, 0.12 ) }
    dend_16 { pt3dadd( -45.3603, -72.7667, -36.1434, 0.12 ) }
    dend_16 { pt3dadd( -45.9189, -73.3906, -36.283, 0.12 ) }
    dend_16 { pt3dadd( -46.1826, -73.648, -36.3598, 0.36 ) }
    dend_16 { pt3dadd( -46.3997, -73.832, -36.4341, 0.12 ) }
    dend_16 { pt3dadd( -47.26, -74.5032, -36.7434, 0.12 ) }
    dend_16 { pt3dadd( -48.2428, -75.2031, -37.0929, 1.2 ) }
    dend_16 { pt3dadd( -48.7169, -75.5159, -37.2918, 1.92 ) }
    dend_16 { pt3dadd( -49.1463, -75.7914, -37.5125, 1.92 ) }
    dend_16 { pt3dadd( -50.2286, -76.4657, -38.1177, 0.12 ) }
    dend_16 { pt3dadd( -50.5269, -76.6339, -38.2881, 0.12 ) }
    dend_16 { pt3dadd( -50.8552, -76.7994, -38.5088, 0.12 ) }
    dend_16 { pt3dadd( -51.9245, -77.302, -39.2742, 0.72 ) }
    dend_16 { pt3dadd( -52.4497, -77.5342, -39.6983, 0.12 ) }
    dend_16 { pt3dadd( -53.0808, -77.7826, -40.2347, 0.12 ) }
    dend_16 { pt3dadd( -53.6924, -77.9976, -40.936, 1.32 ) }
    dend_16 { pt3dadd( -54.7122, -78.3147, -42.2624, 0.12 ) }
    dend_16 { pt3dadd( -55.103, -78.4234, -42.812, 0.12 ) }
    dend_16 { pt3dadd( -55.9436, -78.6262, -44.0419, 1.92 ) }
    dend_16 { pt3dadd( -56.2221, -78.719, -44.5292, 1.92 ) }
    dend_16 { pt3dadd( -57.8159, -79.4205, -47.7462, 0.12 ) }
    dend_16 { pt3dadd( -58.1401, -79.6046, -48.4756, 0.12 ) }
    dend_16 { pt3dadd( -58.8716, -80.0753, -50.1065, 2.4 ) }
    dend_16 { pt3dadd( -58.9766, -80.1526, -50.3461, 2.64 ) }
    dend_16 { pt3dadd( -60.6983, -81.5182, -54.1623, 0.12 ) }
    dend_16 { pt3dadd( -61.3061, -82.0171, -55.4356, 0.84 ) }
    dend_16 { pt3dadd( -61.8277, -82.4574, -56.4124, 0.12 ) }
    dend_16 { pt3dadd( -62.359, -82.923, -57.3956, 0.12 ) }
    dend_16 { pt3dadd( -63.1032, -83.5823, -58.7141, 1.44 ) }
    dend_16 { pt3dadd( -63.3869, -83.8152, -59.1511, 1.68 ) }
    dend_16 { pt3dadd( -64.4817, -84.5278, -60.3415, 0.12 ) }
    dend_16 { pt3dadd( -64.8699, -84.7683, -60.7253, 0.12 ) }
    dend_16 { pt3dadd( -65.0763, -84.8879, -60.9289, 0.48 ) }
    dend_16 { pt3dadd( -65.61, -85.1842, -61.5349, 0.12 ) }
    dend_16 { pt3dadd( -66.0926, -85.4273, -62.0719, 0.12 ) }
    dend_16 { pt3dadd( -66.823, -85.7527, -62.8803, 1.68 ) }
    dend_16 { pt3dadd( -67.0078, -85.8175, -63.0701, 1.8 ) }
    dend_16 { pt3dadd( -67.9329, -86.0544, -64.0119, 1.08 ) }
    dend_16 { pt3dadd( -68.8294, -86.2402, -64.8811, 0.12 ) }
    dend_16 { pt3dadd( -69.2609, -86.3125, -65.3077, 0.12 ) }
    dend_16 { pt3dadd( -70.1826, -86.4291, -66.2476, 2.16 ) }
    dend_16 { pt3dadd( -70.5738, -86.4653, -66.6516, 2.4 ) }
    dend_16 { pt3dadd( -72.1691, -86.5255, -68.2527, 0.48 ) }
    dend_16 { pt3dadd( -72.5753, -86.5142, -68.6433, 0.48 ) }
    dend_16 { pt3dadd( -73.7884, -86.3972, -69.8029, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -74.1376, -86.3378, -70.1448, 0.12 ) }
    dend_16 { pt3dadd( -74.4862, -86.2443, -70.4789, 0.12 ) }
    dend_16 { pt3dadd( -75.1039, -85.9999, -71.0345, 0.12 ) }
    dend_16 { pt3dadd( -75.6365, -85.7341, -71.5306, 0.6 ) }
    dend_16 { pt3dadd( -75.9244, -85.5909, -71.8262, 0.96 ) }
    dend_16 { pt3dadd( -76.7609, -85.212, -72.669, 0.12 ) }
    dend_16 { pt3dadd( -77.1681, -85.0747, -73.1978, 0.12 ) }
    dend_16 { pt3dadd( -77.9881, -84.8713, -74.3712, 2.4 ) }
    dend_16 { pt3dadd( -79.3062, -84.6582, -76.4428, 0.12 ) }
    dend_16 { pt3dadd( -79.8353, -84.5993, -77.4657, 0.36 ) }
    dend_16 { pt3dadd( -80.0574, -84.5892, -77.9833, 0.72 ) }
    dend_16 { pt3dadd( -81.3711, -84.6598, -81.4751, 1.44 ) }
    dend_16 { pt3dadd( -81.5157, -84.6799, -81.882, 1.68 ) }
    dend_16 { pt3dadd( -81.7023, -84.7199, -82.4123, 1.92 ) }
    dend_16 { pt3dadd( -83.0369, -85.0285, -86.2464, 0.48 ) }
    dend_16 { pt3dadd( -83.4247, -85.1093, -87.3198, 0.12 ) }
    dend_16 { pt3dadd( -83.6063, -85.1394, -87.777, 0.12 ) }
    dend_16 { pt3dadd( -83.8713, -85.1732, -88.2918, 0.12 ) }
    dend_16 { pt3dadd( -84.2183, -85.2397, -88.8926, 0.48 ) }
    dend_16 { pt3dadd( -84.9341, -85.4078, -89.9474, 0.12 ) }
    dend_16 { pt3dadd( -85.1967, -85.4963, -90.2487, 0.12 ) }
    dend_16 { pt3dadd( -85.9682, -85.7866, -91.0768, 1.68 ) }
    dend_16 { pt3dadd( -86.4613, -86.0037, -91.6165, 2.64 ) }
    dend_16 { pt3dadd( -88.8175, -87.2537, -94.168, 0.24 ) }
    dend_16 { pt3dadd( -89.1273, -87.4414, -94.4973, 0.24 ) }
    dend_16 { pt3dadd( -89.6743, -87.7976, -95.0591, 0.24 ) }
    dend_16 { pt3dadd( -90.1741, -88.1384, -95.5673, 0.36 ) }
    dend_16 { pt3dadd( -90.7156, -88.5113, -96.0893, 0.12 ) }
    dend_16 { pt3dadd( -91.2092, -88.8177, -96.5129, 0.12 ) }
    dend_16 { pt3dadd( -92.155, -89.3476, -97.1611, 0.6 ) }
    dend_16 { pt3dadd( -92.7017, -89.61, -97.5237, 0.12 ) }
    dend_16 { pt3dadd( -94.2872, -90.241, -98.5217, 2.16 ) }
    dend_16 { pt3dadd( -94.6476, -90.354, -98.7281, 2.64 ) }
    dend_16 { pt3dadd( -96.1366, -90.6664, -99.4505, 0.12 ) }
    dend_16 { pt3dadd( -96.7592, -90.7376, -99.7187, 0.12 ) }
    dend_16 { pt3dadd( -97.3875, -90.7685, -100.014, 0.96 ) }
    dend_16 { pt3dadd( -97.8654, -90.7643, -100.279, 0.96 ) }
    dend_16 { pt3dadd( -98.3314, -90.7271, -100.589, 0.12 ) }
    dend_16 { pt3dadd( -99.0974, -90.6531, -101.22, 0.12 ) }
    dend_16 { pt3dadd( -99.99, -90.5878, -102.158, 1.68 ) }
    dend_16 { pt3dadd( -101.328, -90.5088, -103.912, 1.68 ) }
    dend_16 { pt3dadd( -101.965, -90.4719, -104.856, 0.12 ) }
    dend_16 { pt3dadd( -102.268, -90.4548, -105.33, 0.12 ) }
    dend_16 { pt3dadd( -102.749, -90.4314, -106.111, 0.12 ) }
    dend_16 { pt3dadd( -103.538, -90.3846, -107.404, 1.68 ) }
    dend_16 { pt3dadd( -104.645, -90.3077, -109.149, 0.12 ) }
    dend_16 { pt3dadd( -104.938, -90.2877, -109.546, 0.12 ) }
    dend_16 { pt3dadd( -105.372, -90.2518, -110.089, 0.12 ) }
    dend_16 { pt3dadd( -106.503, -90.1099, -111.34, 1.8 ) }
    dend_16 { pt3dadd( -106.86, -90.0487, -111.674, 1.8 ) }
    dend_16 { pt3dadd( -108.171, -89.7808, -112.692, 0.12 ) }
    dend_16 { pt3dadd( -108.749, -89.6709, -113.084, 0.12 ) }
    dend_16 { pt3dadd( -109.607, -89.5126, -113.65, 0.12 ) }
    dend_16 { pt3dadd( -110.585, -89.3011, -114.25, 1.2 ) }
    dend_16 { pt3dadd( -110.703, -89.2717, -114.311, 1.68 ) }
    dend_16 { pt3dadd( -111.063, -89.1812, -114.483, 1.68 ) }
    dend_16 { pt3dadd( -112.342, -88.8352, -115.0, 0.12 ) }
    dend_16 { pt3dadd( -112.849, -88.716, -115.206, 0.12 ) }
    dend_16 { pt3dadd( -113.651, -88.5695, -115.523, 0.12 ) }
    dend_16 { pt3dadd( -114.028, -88.4974, -115.665, 0.12 ) }
    dend_16 { pt3dadd( -114.488, -88.4095, -115.818, 1.08 ) }
    dend_16 { pt3dadd( -115.008, -88.3185, -115.96, 1.08 ) }
    dend_16 { pt3dadd( -115.978, -88.1826, -116.032, 0.12 ) }
    dend_16 { pt3dadd( -116.408, -88.1411, -116.023, 0.12 ) }
    dend_16 { pt3dadd( -117.204, -88.0917, -115.954, 0.24 ) }
    dend_16 { pt3dadd( -117.937, -88.0556, -115.896, 0.24 ) }
    dend_16 { pt3dadd( -118.632, -88.0459, -115.848, 0.24 ) }
    dend_16 { pt3dadd( -120.461, -88.1021, -115.783, 1.68 ) }
    dend_16 { pt3dadd( -121.028, -88.1406, -115.78, 2.52 ) }
    dend_16 { pt3dadd( -121.707, -88.2029, -115.801, 2.52 ) }
    dend_16 { pt3dadd( -123.278, -88.3443, -115.922, 0.12 ) }
    dend_16 { pt3dadd( -124.248, -88.3844, -116.047, 0.48 ) }
    dend_16 { pt3dadd( -124.955, -88.371, -116.189, 0.12 ) }
    dend_16 { pt3dadd( -125.349, -88.3398, -116.3, 0.12 ) }
    dend_16 { pt3dadd( -125.822, -88.2797, -116.422, 0.12 ) }
    dend_16 { pt3dadd( -126.556, -88.1848, -116.632, 0.36 ) }
    dend_16 { pt3dadd( -127.083, -88.1083, -116.79, 0.12 ) }
    dend_16 { pt3dadd( -128.134, -88.0176, -117.107, 0.12 ) }
    dend_16 { pt3dadd( -128.561, -88.0448, -117.228, 1.56 ) }
    dend_16 { pt3dadd( -128.908, -88.1608, -117.344, 1.56 ) }
    dend_16 { pt3dadd( -130.06, -88.9644, -117.748, 1.2 ) }
    dend_16 { pt3dadd( -130.201, -89.1032, -117.797, 0.12 ) }
    dend_16 { pt3dadd( -130.754, -89.767, -117.985, 0.12 ) }
    dend_16 { pt3dadd( -130.9, -89.9728, -118.065, 0.12 ) }
    dend_16 { pt3dadd( -131.053, -90.1692, -118.158, 0.12 ) }
    dend_16 { pt3dadd( -131.612, -90.8314, -118.56, 0.12 ) }
    dend_16 { pt3dadd( -131.841, -91.06, -118.758, 1.2 ) }
    dend_16 { pt3dadd( -132.124, -91.3335, -119.042, 1.44 ) }
    dend_16 { pt3dadd( -133.14, -92.2493, -120.234, 0.12 ) }
    dend_16 { pt3dadd( -133.544, -92.598, -120.73, 0.96 ) }
    dend_16 { pt3dadd( -134.099, -93.0447, -121.404, 1.2 ) }
    dend_16 { pt3dadd( -135.076, -93.745, -122.554, 0.12 ) }
    dend_16 { pt3dadd( -135.407, -93.9731, -122.943, 0.12 ) }
    dend_16 { pt3dadd( -136.169, -94.4682, -123.814, 0.12 ) }
    dend_16 { pt3dadd( -136.483, -94.6544, -124.131, 0.12 ) }
    dend_16 { pt3dadd( -137.048, -94.9752, -124.693, 0.12 ) }
    dend_16 { pt3dadd( -138.373, -95.6021, -125.779, 2.64 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.00592, -61.7, -15.7778, 0.12 ) }
    dend_14 { pt3dadd( -8.61151, -62.5221, -15.8611, 0.12 ) }
    dend_14 { pt3dadd( -8.78312, -62.6125, -15.8629, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -9.38561, -62.9373, -15.8593, 0.12 ) }
    dend_14 { pt3dadd( -9.81293, -63.1662, -15.8533, 0.12 ) }
    dend_14 { pt3dadd( -10.55, -63.5607, -15.842, 0.12 ) }
    dend_14 { pt3dadd( -11.2581, -63.9398, -15.8323, 1.32 ) }
    dend_14 { pt3dadd( -11.5635, -64.1088, -15.818, 1.68 ) }
    dend_14 { pt3dadd( -12.165, -64.4536, -15.7921, 0.72 ) }
    dend_14 { pt3dadd( -12.6073, -64.7326, -15.7685, 0.12 ) }
    dend_14 { pt3dadd( -12.8971, -64.9248, -15.7545, 0.12 ) }
    dend_14 { pt3dadd( -13.1721, -65.1292, -15.7461, 0.12 ) }
    dend_14 { pt3dadd( -13.4346, -65.3527, -15.7176, 0.6 ) }
    dend_14 { pt3dadd( -13.6846, -65.5836, -15.6583, 0.6 ) }
    dend_14 { pt3dadd( -14.0419, -65.9153, -15.5401, 0.12 ) }
    dend_14 { pt3dadd( -14.2049, -66.0498, -15.5014, 0.12 ) }
    dend_14 { pt3dadd( -14.3809, -66.1732, -15.4862, 0.12 ) }
    dend_14 { pt3dadd( -15.4397, -66.8013, -15.5167, 1.92 ) }
    dend_14 { pt3dadd( -15.8873, -67.0078, -15.5703, 2.76 ) }
    dend_14 { pt3dadd( -16.3367, -67.1788, -15.6514, 3.0 ) }
    dend_14 { pt3dadd( -17.4321, -67.5296, -15.9036, 1.68 ) }
    dend_14 { pt3dadd( -18.1523, -67.7252, -16.1097, 0.12 ) }
    dend_14 { pt3dadd( -18.6415, -67.8365, -16.273, 0.12 ) }
    dend_14 { pt3dadd( -19.4518, -67.9942, -16.5855, 0.12 ) }
    dend_14 { pt3dadd( -19.8564, -68.0759, -16.7335, 0.6 ) }
    dend_14 { pt3dadd( -20.0338, -68.1159, -16.8066, 0.84 ) }
    dend_14 { pt3dadd( -20.6536, -68.2687, -17.0699, 0.12 ) }
    dend_14 { pt3dadd( -21.365, -68.4642, -17.3981, 0.12 ) }
    dend_14 { pt3dadd( -21.7332, -68.5803, -17.6042, 0.6 ) }
    dend_14 { pt3dadd( -21.9878, -68.6769, -17.7662, 0.12 ) }
    dend_14 { pt3dadd( -23.0007, -69.0939, -18.4414, 0.12 ) }
    dend_14 { pt3dadd( -23.2175, -69.1989, -18.5871, 0.12 ) }
    dend_14 { pt3dadd( -23.3848, -69.2877, -18.6944, 0.12 ) }
    dend_14 { pt3dadd( -23.9412, -69.5947, -19.0678, 1.32 ) }
    dend_14 { pt3dadd( -24.3062, -69.8144, -19.301, 2.4 ) }
    dend_14 { pt3dadd( -24.6425, -70.0303, -19.4963, 2.88 ) }
    dend_14 { pt3dadd( -25.0438, -70.3017, -19.6885, 1.92 ) }
    dend_14 { pt3dadd( -25.5508, -70.679, -19.954, 1.2 ) }
    dend_14 { pt3dadd( -26.2643, -71.2655, -20.3384, 0.12 ) }
    dend_14 { pt3dadd( -26.7394, -71.7035, -20.5864, 0.12 ) }
    dend_14 { pt3dadd( -26.9238, -71.887, -20.6817, 0.72 ) }
    dend_14 { pt3dadd( -27.274, -72.2576, -20.8653, 0.96 ) }
    dend_14 { pt3dadd( -27.821, -72.8637, -21.1224, 0.12 ) }
    dend_14 { pt3dadd( -28.115, -73.2113, -21.2415, 0.12 ) }
    dend_14 { pt3dadd( -28.6364, -73.8239, -21.4, 0.12 ) }
    dend_14 { pt3dadd( -28.9356, -74.1692, -21.5136, 0.12 ) }
    dend_14 { pt3dadd( -29.4234, -74.74, -21.7194, 1.44 ) }
    dend_14 { pt3dadd( -29.8476, -75.2417, -21.9096, 2.4 ) }
    dend_14 { pt3dadd( -29.9805, -75.3977, -21.9692, 2.4 ) }
    dend_14 { pt3dadd( -30.3096, -75.7867, -22.1309, 1.32 ) }
    dend_14 { pt3dadd( -31.0716, -76.7087, -22.5667, 0.12 ) }
    dend_14 { pt3dadd( -31.4352, -77.1482, -22.7883, 0.12 ) }
    dend_14 { pt3dadd( -31.6391, -77.3876, -22.9129, 0.48 ) }
    dend_14 { pt3dadd( -31.7216, -77.4802, -22.9675, 0.12 ) }
    dend_14 { pt3dadd( -32.1046, -77.8969, -23.2047, 0.12 ) }
    dend_14 { pt3dadd( -32.5536, -78.3489, -23.448, 0.96 ) }
    dend_14 { pt3dadd( -32.7612, -78.5398, -23.5617, 1.56 ) }
    dend_14 { pt3dadd( -33.0413, -78.791, -23.7729, 1.56 ) }
    dend_14 { pt3dadd( -33.4946, -79.2075, -24.2301, 0.12 ) }
    dend_14 { pt3dadd( -33.6873, -79.3872, -24.4594, 0.12 ) }
    dend_14 { pt3dadd( -33.8431, -79.5543, -24.6629, 0.12 ) }
    dend_14 { pt3dadd( -34.4508, -80.2693, -25.4616, 0.48 ) }
    dend_14 { pt3dadd( -34.8448, -80.7789, -25.9938, 0.48 ) }
    dend_14 { pt3dadd( -35.4393, -81.5864, -26.8399, 2.64 ) }
    dend_14 { pt3dadd( -35.7736, -82.0592, -27.3305, 3.61 ) }
    dend_14 { pt3dadd( -36.4198, -83.0067, -28.2919, 0.12 ) }
    dend_14 { pt3dadd( -36.6806, -83.4147, -28.6709, 0.12 ) }
    dend_14 { pt3dadd( -36.7646, -83.5539, -28.7714, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 65/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.00592, -61.7, -15.7778, 3.25 ) }
    dend_3 { pt3dadd( -6.87831, -62.1983, -15.9411, 3.25 ) }
    dend_3 { pt3dadd( -6.59545, -63.4146, -16.2415, 0.36 ) }
    dend_3 { pt3dadd( -6.54891, -63.6423, -16.2849, 0.36 ) }
    dend_3 { pt3dadd( -6.48403, -63.9947, -16.3365, 0.36 ) }
    dend_3 { pt3dadd( -6.39843, -64.4623, -16.3949, 0.36 ) }
    dend_3 { pt3dadd( -6.32837, -64.948, -16.4278, 0.36 ) }
    dend_3 { pt3dadd( -6.25307, -65.6759, -16.4335, 2.64 ) }
    dend_3 { pt3dadd( -6.2152, -66.2392, -16.4024, 3.85 ) }
    dend_3 { pt3dadd( -6.18254, -66.9553, -16.3595, 4.21 ) }
    dend_3 { pt3dadd( -6.173, -67.3919, -16.3326, 3.61 ) }
    dend_3 { pt3dadd( -6.15068, -68.7335, -16.2499, 0.24 ) }
    dend_3 { pt3dadd( -6.14937, -68.827, -16.2497, 0.24 ) }
    dend_3 { pt3dadd( -6.13955, -69.5509, -16.2843, 0.36 ) }
    dend_3 { pt3dadd( -6.10961, -70.1932, -16.3306, 1.08 ) }
    dend_3 { pt3dadd( -6.04361, -70.9817, -16.4056, 2.04 ) }
    dend_3 { pt3dadd( -5.97048, -71.6202, -16.4788, 1.56 ) }
    dend_3 { pt3dadd( -5.79758, -72.761, -16.5963, 0.48 ) }
    dend_3 { pt3dadd( -5.74143, -73.1177, -16.6172, 0.48 ) }
    dend_3 { pt3dadd( -5.6208, -73.9379, -16.6277, 0.48 ) }
    dend_3 { pt3dadd( -5.56721, -74.4392, -16.6061, 0.48 ) }
    dend_3 { pt3dadd( -5.53312, -75.0007, -16.5577, 0.48 ) }
    dend_3 { pt3dadd( -5.53539, -75.733, -16.5173, 0.48 ) }
    dend_3 { pt3dadd( -5.56831, -76.2117, -16.4978, 2.04 ) }
    dend_3 { pt3dadd( -5.6503, -76.818, -16.5216, 3.0 ) }
    dend_3 { pt3dadd( -5.74344, -77.318, -16.5814, 3.49 ) }
    dend_3 { pt3dadd( -5.87129, -77.9827, -16.6925, 2.52 ) }
    dend_3 { pt3dadd( -6.05923, -79.1092, -16.9283, 0.48 ) }
    dend_3 { pt3dadd( -6.10469, -79.509, -17.0226, 0.36 ) }
    dend_3 { pt3dadd( -6.12297, -79.7885, -17.082, 0.36 ) }
    dend_3 { pt3dadd( -6.13021, -80.2649, -17.1752, 0.6 ) }
    dend_3 { pt3dadd( -6.12716, -80.7378, -17.2481, 0.6 ) }
    dend_3 { pt3dadd( -6.12093, -81.2991, -17.3107, 0.36 ) }
    dend_3 { pt3dadd( -6.10024, -82.1336, -17.371, 0.36 ) }
    dend_3 { pt3dadd( -6.08985, -82.4577, -17.4113, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( -6.07666, -83.0693, -17.5203, 1.68 ) }
    dend_3 { pt3dadd( -6.07712, -83.8636, -17.6904, 3.49 ) }
    dend_3 { pt3dadd( -6.1051, -84.3755, -17.8162, 4.09 ) }
    dend_3 { pt3dadd( -6.16428, -84.9197, -17.9629, 3.49 ) }
    dend_3 { pt3dadd( -6.37461, -86.2675, -18.3299, 0.96 ) }
    dend_3 { pt3dadd( -6.46158, -86.7844, -18.4739, 0.36 ) }
    dend_3 { pt3dadd( -6.5028, -87.0332, -18.5407, 0.36 ) }
    dend_3 { pt3dadd( -6.58718, -87.584, -18.6848, 0.36 ) }
    dend_3 { pt3dadd( -6.64945, -87.9664, -18.7793, 0.36 ) }
    dend_3 { pt3dadd( -6.76422, -88.589, -18.9219, 1.2 ) }
    dend_3 { pt3dadd( -6.88809, -89.2547, -19.0217, 2.88 ) }
    dend_3 { pt3dadd( -6.95428, -89.8063, -19.0881, 2.76 ) }
    dend_3 { pt3dadd( -6.97317, -90.2142, -19.1447, 2.64 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -76.5021, 173.191, -90.4439, 0.24 ) }
    dend_30 { pt3dadd( -76.9632, 173.133, -91.303, 0.24 ) }
    dend_30 { pt3dadd( -77.2665, 173.131, -91.7508, 0.24 ) }
    dend_30 { pt3dadd( -78.5465, 173.074, -93.3383, 1.2 ) }
    dend_30 { pt3dadd( -78.7966, 173.032, -93.6653, 1.2 ) }
    dend_30 { pt3dadd( -79.4426, 172.843, -94.5117, 0.12 ) }
    dend_30 { pt3dadd( -79.9026, 172.668, -95.152, 0.12 ) }
    dend_30 { pt3dadd( -80.3918, 172.428, -95.9029, 0.12 ) }
    dend_30 { pt3dadd( -80.835, 172.148, -96.5683, 0.12 ) }
    dend_30 { pt3dadd( -81.7042, 171.49, -97.7656, 0.12 ) }
    dend_30 { pt3dadd( -82.0449, 171.177, -98.3036, 0.12 ) }
    dend_30 { pt3dadd( -82.361, 170.817, -98.862, 0.96 ) }
    dend_30 { pt3dadd( -82.4708, 170.655, -99.1026, 1.08 ) }
    dend_30 { pt3dadd( -82.5578, 170.504, -99.3207, 1.08 ) }
    dend_30 { pt3dadd( -82.7701, 170.189, -99.8933, 0.48 ) }
    dend_30 { pt3dadd( -82.9842, 169.932, -100.431, 0.48 ) }
    dend_30 { pt3dadd( -83.0315, 169.881, -100.547, 0.48 ) }
    dend_30 { pt3dadd( -83.1472, 169.759, -100.813, 0.48 ) }
    dend_30 { pt3dadd( -83.2947, 169.598, -101.174, 0.12 ) }
    dend_30 { pt3dadd( -83.7412, 169.111, -102.225, 0.12 ) }
    dend_30 { pt3dadd( -83.8283, 169.022, -102.418, 0.12 ) }
    dend_30 { pt3dadd( -84.0825, 168.767, -102.976, 1.44 ) }
    dend_30 { pt3dadd( -84.4099, 168.442, -103.699, 1.8 ) }
    dend_30 { pt3dadd( -84.8817, 167.98, -104.731, 0.12 ) }
    dend_30 { pt3dadd( -85.0468, 167.809, -105.079, 0.12 ) }
    dend_30 { pt3dadd( -85.3263, 167.519, -105.605, 1.08 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 39/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -76.5021, 173.191, -90.4439, 0.12 ) }
    dend_29 { pt3dadd( -76.4835, 173.611, -90.6246, 0.12 ) }
    dend_29 { pt3dadd( -76.4548, 174.063, -90.8177, 0.12 ) }
    dend_29 { pt3dadd( -76.4126, 174.764, -91.0848, 2.4 ) }
    dend_29 { pt3dadd( -76.4029, 174.977, -91.169, 2.4 ) }
    dend_29 { pt3dadd( -76.3881, 175.463, -91.3518, 2.16 ) }
    dend_29 { pt3dadd( -76.3695, 176.336, -91.663, 0.12 ) }
    dend_29 { pt3dadd( -76.3611, 176.794, -91.8384, 0.12 ) }
    dend_29 { pt3dadd( -76.3739, 177.183, -91.9875, 0.12 ) }
    dend_29 { pt3dadd( -76.4031, 177.563, -92.144, 0.12 ) }
    dend_29 { pt3dadd( -76.4478, 177.936, -92.3471, 1.08 ) }
    dend_29 { pt3dadd( -76.4792, 178.131, -92.4673, 1.08 ) }
    dend_29 { pt3dadd( -76.6053, 178.745, -92.948, 0.12 ) }
    dend_29 { pt3dadd( -76.6806, 179.039, -93.207, 0.12 ) }
    dend_29 { pt3dadd( -76.8278, 179.514, -93.6906, 0.84 ) }
    dend_29 { pt3dadd( -77.0623, 180.214, -94.4312, 0.12 ) }
    dend_29 { pt3dadd( -77.1665, 180.529, -94.7797, 0.12 ) }
    dend_29 { pt3dadd( -77.2993, 180.95, -95.2395, 1.32 ) }
    dend_29 { pt3dadd( -77.3459, 181.099, -95.4047, 1.32 ) }
    dend_29 { pt3dadd( -77.5467, 181.83, -96.213, 0.12 ) }
    dend_29 { pt3dadd( -77.5994, 182.048, -96.4419, 0.12 ) }
    dend_29 { pt3dadd( -77.6574, 182.33, -96.7112, 0.12 ) }
    dend_29 { pt3dadd( -77.7439, 182.845, -97.1876, 0.12 ) }
    dend_29 { pt3dadd( -77.8854, 183.884, -98.1396, 1.8 ) }
    dend_29 { pt3dadd( -77.8981, 184.017, -98.2536, 1.8 ) }
    dend_29 { pt3dadd( -77.9224, 184.48, -98.6025, 0.12 ) }
    dend_29 { pt3dadd( -77.9404, 185.051, -99.0269, 0.12 ) }
    dend_29 { pt3dadd( -77.9433, 185.307, -99.2013, 0.6 ) }
    dend_29 { pt3dadd( -77.9289, 185.936, -99.5477, 0.12 ) }
    dend_29 { pt3dadd( -77.8928, 186.579, -99.8337, 0.12 ) }
    dend_29 { pt3dadd( -77.8664, 187.087, -100.039, 1.32 ) }
    dend_29 { pt3dadd( -77.8263, 187.901, -100.324, 0.12 ) }
    dend_29 { pt3dadd( -77.8184, 188.42, -100.478, 0.12 ) }
    dend_29 { pt3dadd( -77.8418, 189.192, -100.646, 0.12 ) }
    dend_29 { pt3dadd( -77.8471, 189.269, -100.655, 0.12 ) }
    dend_29 { pt3dadd( -77.9176, 189.804, -100.683, 1.44 ) }
    dend_29 { pt3dadd( -77.9954, 190.218, -100.659, 1.92 ) }
    dend_29 { pt3dadd( -78.1706, 190.932, -100.525, 0.12 ) }
    dend_29 { pt3dadd( -78.2857, 191.321, -100.43, 0.12 ) }
    dend_29 { pt3dadd( -78.4156, 191.708, -100.286, 0.12 ) }
    dend_29 { pt3dadd( -78.5563, 192.075, -100.121, 0.12 ) }
    dend_29 { pt3dadd( -78.7655, 192.542, -99.8736, 0.12 ) }
    dend_29 { pt3dadd( -78.9998, 193.021, -99.5991, 1.68 ) }
    dend_29 { pt3dadd( -79.0985, 193.202, -99.4965, 1.68 ) }
    dend_29 { pt3dadd( -79.5714, 193.948, -99.1142, 0.12 ) }
    dend_29 { pt3dadd( -79.8142, 194.299, -98.9687, 0.12 ) }
    dend_29 { pt3dadd( -80.0592, 194.654, -98.857, 1.08 ) }
    dend_29 { pt3dadd( -80.223, 194.886, -98.8134, 1.08 ) }
    dend_29 { pt3dadd( -80.4648, 195.205, -98.7787, 0.12 ) }
    dend_29 { pt3dadd( -80.8082, 195.65, -98.7419, 0.12 ) }
    dend_29 { pt3dadd( -81.058, 195.962, -98.7343, 0.12 ) }
    dend_29 { pt3dadd( -81.2163, 196.158, -98.7175, 0.12 ) }
    dend_29 { pt3dadd( -81.4758, 196.497, -98.6826, 0.12 ) }
    dend_29 { pt3dadd( -81.9432, 197.124, -98.6091, 0.12 ) }
    dend_29 { pt3dadd( -82.2306, 197.507, -98.5383, 1.32 ) }
    dend_29 { pt3dadd( -82.3636, 197.68, -98.5024, 1.68 ) }
    dend_29 { pt3dadd( -82.865, 198.28, -98.386, 0.24 ) }
    dend_29 { pt3dadd( -83.3508, 198.84, -98.2912, 0.12 ) }
    dend_29 { pt3dadd( -83.6431, 199.18, -98.234, 0.12 ) }
    dend_29 { pt3dadd( -84.1895, 199.819, -98.0975, 1.8 ) }
    dend_29 { pt3dadd( -84.408, 200.071, -98.0392, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_29 { pt3dadd( -84.9679, 200.726, -97.8482, 0.12 ) }
    dend_29 { pt3dadd( -85.4134, 201.269, -97.6399, 0.12 ) }
    dend_29 { pt3dadd( -85.7569, 201.705, -97.45, 0.72 ) }
    dend_29 { pt3dadd( -86.1166, 202.212, -97.2296, 0.12 ) }
    dend_29 { pt3dadd( -86.5601, 202.93, -96.9304, 0.12 ) }
    dend_29 { pt3dadd( -86.8087, 203.414, -96.72, 1.32 ) }
    dend_29 { pt3dadd( -87.0106, 203.931, -96.4675, 0.12 ) }
    dend_29 { pt3dadd( -87.2621, 204.763, -96.0584, 0.12 ) }
    dend_29 { pt3dadd( -87.3203, 205.04, -95.9349, 1.32 ) }
    dend_29 { pt3dadd( -87.3512, 205.341, -95.8188, 1.44 ) }
    dend_29 { pt3dadd( -87.355, 205.88, -95.6236, 0.96 ) }
    dend_29 { pt3dadd( -87.3315, 206.644, -95.3879, 0.12 ) }
    dend_29 { pt3dadd( -87.3154, 206.947, -95.3102, 0.12 ) }
    dend_29 { pt3dadd( -87.2664, 207.498, -95.2066, 0.24 ) }
    dend_29 { pt3dadd( -87.217, 208.081, -95.1461, 0.24 ) }
    dend_29 { pt3dadd( -87.1746, 208.636, -95.1334, 0.24 ) }
    dend_29 { pt3dadd( -87.1302, 209.263, -95.169, 1.68 ) }
    dend_29 { pt3dadd( -87.1006, 209.65, -95.2104, 1.92 ) }
    dend_29 { pt3dadd( -87.0426, 210.358, -95.2866, 0.12 ) }
    dend_29 { pt3dadd( -86.9843, 211.064, -95.3619, 0.12 ) }
    dend_29 { pt3dadd( -86.9429, 211.521, -95.4192, 0.96 ) }
    dend_29 { pt3dadd( -86.8714, 212.13, -95.5031, 0.12 ) }
    dend_29 { pt3dadd( -86.7716, 212.972, -95.6217, 0.12 ) }
    dend_29 { pt3dadd( -86.7343, 213.283, -95.6605, 1.32 ) }
    dend_29 { pt3dadd( -86.6928, 213.669, -95.697, 1.32 ) }
    dend_29 { pt3dadd( -86.6558, 214.107, -95.741, 0.24 ) }
    dend_29 { pt3dadd( -86.6078, 214.719, -95.8036, 0.24 ) }
    dend_29 { pt3dadd( -86.5835, 215.107, -95.8424, 0.24 ) }
    dend_29 { pt3dadd( -86.5548, 215.666, -95.8924, 0.24 ) }
    dend_29 { pt3dadd( -86.5394, 216.437, -95.9872, 1.08 ) }
    dend_29 { pt3dadd( -86.5411, 216.673, -96.0292, 0.12 ) }
    dend_29 { pt3dadd( -86.5618, 217.207, -96.141, 0.12 ) }
    dend_29 { pt3dadd( -86.5916, 217.585, -96.2421, 0.96 ) }
    dend_29 { pt3dadd( -86.6294, 217.893, -96.3337, 0.12 ) }
    dend_29 { pt3dadd( -86.851, 219.149, -96.7235, 0.12 ) }
    dend_29 { pt3dadd( -86.988, 219.821, -96.9364, 1.44 ) }
    dend_29 { pt3dadd( -87.0611, 220.15, -97.0369, 1.8 ) }
    dend_29 { pt3dadd( -87.2233, 220.781, -97.2359, 0.12 ) }
    dend_29 { pt3dadd( -87.3901, 221.398, -97.4212, 0.12 ) }
    dend_29 { pt3dadd( -87.5721, 222.047, -97.5943, 0.12 ) }
    dend_29 { pt3dadd( -87.631, 222.264, -97.6371, 0.84 ) }
    dend_29 { pt3dadd( -87.7098, 222.576, -97.666, 0.84 ) }
    dend_29 { pt3dadd( -87.8412, 223.15, -97.6775, 0.12 ) }
    dend_29 { pt3dadd( -87.9494, 223.764, -97.649, 0.12 ) }
    dend_29 { pt3dadd( -87.991, 224.073, -97.6348, 0.12 ) }
    dend_29 { pt3dadd( -88.039, 224.539, -97.6034, 1.08 ) }
    dend_29 { pt3dadd( -88.1163, 225.415, -97.5283, 0.12 ) }
    dend_29 { pt3dadd( -88.1732, 226.217, -97.4435, 0.12 ) }
    dend_29 { pt3dadd( -88.1882, 226.65, -97.3508, 0.12 ) }
    dend_29 { pt3dadd( -88.194, 227.155, -97.218, 0.48 ) }
    dend_29 { pt3dadd( -88.1937, 227.539, -97.109, 0.12 ) }
    dend_29 { pt3dadd( -88.1946, 227.908, -96.9968, 0.12 ) }
    dend_29 { pt3dadd( -88.1832, 228.359, -96.8651, 1.8 ) }
    dend_29 { pt3dadd( -88.1365, 229.369, -96.4795, 0.12 ) }
    dend_29 { pt3dadd( -88.1193, 229.726, -96.3302, 0.12 ) }
    dend_29 { pt3dadd( -88.0919, 230.017, -96.206, 0.36 ) }
    dend_29 { pt3dadd( -88.0354, 230.421, -96.0586, 0.12 ) }
    dend_29 { pt3dadd( -87.9464, 230.883, -95.8968, 0.12 ) }
    dend_29 { pt3dadd( -87.8476, 231.306, -95.7692, 0.12 ) }
    dend_29 { pt3dadd( -87.7457, 231.751, -95.6532, 0.12 ) }
    dend_29 { pt3dadd( -87.6296, 232.283, -95.5055, 1.08 ) }
    dend_29 { pt3dadd( -87.5402, 232.684, -95.3991, 0.12 ) }
    dend_29 { pt3dadd( -87.4039, 233.326, -95.2457, 0.12 ) }
    dend_29 { pt3dadd( -87.3389, 233.696, -95.1621, 0.12 ) }
    dend_29 { pt3dadd( -87.2048, 234.526, -95.0328, 2.04 ) }
    dend_29 { pt3dadd( -87.118, 235.293, -94.9603, 0.12 ) }
    dend_29 { pt3dadd( -87.0523, 235.95, -94.936, 0.12 ) }
    dend_29 { pt3dadd( -87.0004, 236.487, -94.9483, 1.8 ) }
    dend_29 { pt3dadd( -86.9829, 236.66, -94.9567, 1.8 ) }
    dend_29 { pt3dadd( -86.887, 237.529, -94.9977, 0.12 ) }
    dend_29 { pt3dadd( -86.7718, 238.499, -95.0536, 0.12 ) }
    dend_29 { pt3dadd( -86.7221, 238.996, -95.067, 0.12 ) }
    dend_29 { pt3dadd( -86.6904, 239.54, -95.0563, 0.72 ) }
    dend_29 { pt3dadd( -86.6728, 240.222, -94.9872, 0.12 ) }
    dend_29 { pt3dadd( -86.676, 240.912, -94.8638, 0.12 ) }
    dend_29 { pt3dadd( -86.6954, 241.283, -94.7626, 1.44 ) }
    dend_29 { pt3dadd( -86.7331, 241.613, -94.6485, 1.44 ) }
    dend_29 { pt3dadd( -86.813, 241.982, -94.5144, 0.72 ) }
    dend_29 { pt3dadd( -86.9876, 242.566, -94.2968, 0.12 ) }
    dend_29 { pt3dadd( -87.1433, 242.989, -94.1513, 0.12 ) }
    dend_29 { pt3dadd( -87.2626, 243.266, -94.0453, 0.12 ) }
    dend_29 { pt3dadd( -87.4769, 243.737, -93.8525, 0.12 ) }
    dend_29 { pt3dadd( -87.6684, 244.19, -93.6705, 0.96 ) }
    dend_29 { pt3dadd( -87.7694, 244.455, -93.5745, 0.12 ) }
    dend_29 { pt3dadd( -87.8663, 244.699, -93.4778, 0.12 ) }
    dend_29 { pt3dadd( -87.9541, 244.912, -93.3796, 0.12 ) }
    dend_29 { pt3dadd( -88.072, 245.195, -93.2519, 0.36 ) }
    dend_29 { pt3dadd( -88.2143, 245.562, -93.1078, 0.36 ) }
    dend_29 { pt3dadd( -88.2847, 245.765, -93.0069, 0.36 ) }
    dend_29 { pt3dadd( -88.4765, 246.408, -92.6693, 0.96 ) }
    dend_29 { pt3dadd( -88.5408, 246.649, -92.5426, 0.96 ) }
    dend_29 { pt3dadd( -88.6433, 247.047, -92.3403, 0.12 ) }
    dend_29 { pt3dadd( -88.7388, 247.395, -92.1754, 0.12 ) }
    dend_29 { pt3dadd( -88.9571, 248.172, -91.8135, 0.12 ) }
    dend_29 { pt3dadd( -89.0446, 248.528, -91.6607, 1.8 ) }
    dend_29 { pt3dadd( -89.1119, 248.885, -91.5278, 2.04 ) }
    dend_29 { pt3dadd( -89.2812, 249.991, -91.1418, 0.12 ) }
    dend_29 { pt3dadd( -89.3169, 250.356, -91.0167, 0.24 ) }
    dend_29 { pt3dadd( -89.3195, 250.399, -91.0036, 0.36 ) }
    dend_29 { pt3dadd( -89.3288, 250.714, -90.9323, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -89.3233, 250.95, -90.8828, 0.12 ) }
    dend_29 { pt3dadd( -89.2677, 251.562, -90.7826, 1.32 ) }
    dend_29 { pt3dadd( -89.1415, 252.232, -90.6143, 0.12 ) }
    dend_29 { pt3dadd( -89.0504, 252.681, -90.4801, 0.12 ) }
    dend_29 { pt3dadd( -89.0099, 252.897, -90.4186, 1.2 ) }
    dend_29 { pt3dadd( -88.9147, 253.35, -90.3056, 1.92 ) }
    dend_29 { pt3dadd( -88.8339, 253.698, -90.2258, 1.92 ) }
    dend_29 { pt3dadd( -88.5022, 255.076, -89.9118, 0.12 ) }
    dend_29 { pt3dadd( -88.1669, 256.482, -89.6097, 0.12 ) }
    dend_29 { pt3dadd( -87.8813, 257.664, -89.3513, 0.12 ) }
    dend_29 { pt3dadd( -87.5639, 258.953, -89.0746, 0.12 ) }
    dend_29 { pt3dadd( -87.5209, 259.125, -89.0401, 1.08 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -138.373, -95.6021, -125.779, 0.96 ) }
    dend_18 { pt3dadd( -139.868, -95.239, -129.618, 0.96 ) }
    dend_18 { pt3dadd( -140.488, -95.097, -131.093, 0.12 ) }
    dend_18 { pt3dadd( -140.767, -95.0522, -131.862, 0.12 ) }
    dend_18 { pt3dadd( -140.998, -95.0152, -132.498, 0.12 ) }
    dend_18 { pt3dadd( -141.15, -94.9908, -132.916, 1.56 ) }
    dend_18 { pt3dadd( -142.416, -94.7878, -136.399, 0.84 ) }
    dend_18 { pt3dadd( -142.699, -94.785, -137.198, 1.08 ) }
    dend_18 { pt3dadd( -143.72, -94.7554, -140.448, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -138.373, -95.6021, -125.779, 0.36 ) }
    dend_17 { pt3dadd( -139.536, -96.8804, -126.304, 0.36 ) }
    dend_17 { pt3dadd( -139.804, -97.1977, -126.442, 0.36 ) }
    dend_17 { pt3dadd( -140.282, -97.8149, -126.749, 0.36 ) }
    dend_17 { pt3dadd( -140.766, -98.4793, -127.092, 0.36 ) }
    dend_17 { pt3dadd( -140.992, -98.8015, -127.253, 0.96 ) }
    dend_17 { pt3dadd( -141.472, -99.5072, -127.622, 1.44 ) }
    dend_17 { pt3dadd( -141.577, -99.6681, -127.708, 1.44 ) }
    dend_17 { pt3dadd( -142.073, -100.396, -128.14, 0.36 ) }
    dend_17 { pt3dadd( -142.236, -100.621, -128.275, 0.36 ) }
    dend_17 { pt3dadd( -142.726, -101.249, -128.641, 0.12 ) }
    dend_17 { pt3dadd( -143.555, -102.242, -129.18, 1.68 ) }
    dend_17 { pt3dadd( -143.936, -102.684, -129.372, 2.52 ) }
    dend_17 { pt3dadd( -145.141, -104.034, -129.913, 0.12 ) }
    dend_17 { pt3dadd( -145.724, -104.667, -130.131, 0.12 ) }
    dend_17 { pt3dadd( -146.336, -105.323, -130.328, 0.12 ) }
    dend_17 { pt3dadd( -146.675, -105.679, -130.42, 0.12 ) }
    dend_17 { pt3dadd( -147.415, -106.437, -130.559, 0.84 ) }
    dend_17 { pt3dadd( -147.851, -106.899, -130.624, 0.12 ) }
    dend_17 { pt3dadd( -148.601, -107.682, -130.693, 0.12 ) }
    dend_17 { pt3dadd( -149.214, -108.315, -130.785, 0.72 ) }
    dend_17 { pt3dadd( -149.539, -108.65, -130.852, 0.12 ) }
    dend_17 { pt3dadd( -150.012, -109.143, -130.97, 0.12 ) }
    dend_17 { pt3dadd( -151.062, -110.239, -131.342, 0.12 ) }
    dend_17 { pt3dadd( -151.345, -110.556, -131.449, 1.44 ) }
    dend_17 { pt3dadd( -151.865, -111.181, -131.673, 1.92 ) }
    dend_17 { pt3dadd( -152.029, -111.39, -131.749, 1.92 ) }
    dend_17 { pt3dadd( -152.378, -111.878, -131.861, 1.92 ) }
    dend_17 { pt3dadd( -153.04, -112.892, -131.976, 0.12 ) }
    dend_17 { pt3dadd( -153.491, -113.616, -132.063, 0.12 ) }
    dend_17 { pt3dadd( -154.029, -114.492, -132.166, 0.12 ) }
    dend_17 { pt3dadd( -154.402, -115.066, -132.225, 0.12 ) }
    dend_17 { pt3dadd( -155.43, -116.506, -132.539, 1.56 ) }
    dend_17 { pt3dadd( -155.912, -117.128, -132.708, 1.56 ) }
    dend_17 { pt3dadd( -156.92, -118.081, -133.615, 1.56 ) }
    dend_17 { pt3dadd( -157.326, -118.393, -134.085, 0.12 ) }
    dend_17 { pt3dadd( -158.067, -118.894, -135.038, 0.12 ) }
    dend_17 { pt3dadd( -158.878, -119.433, -136.156, 0.12 ) }
    dend_17 { pt3dadd( -159.673, -119.953, -137.325, 2.76 ) }
    dend_17 { pt3dadd( -162.175, -121.639, -141.24, 0.48 ) }
    dend_17 { pt3dadd( -162.429, -121.826, -141.638, 0.48 ) }
    dend_17 { pt3dadd( -162.583, -121.944, -141.899, 0.12 ) }
    dend_17 { pt3dadd( -162.913, -122.21, -142.47, 0.12 ) }
    dend_17 { pt3dadd( -163.362, -122.604, -143.219, 1.08 ) }
    dend_17 { pt3dadd( -164.124, -123.305, -144.47, 0.12 ) }
    dend_17 { pt3dadd( -164.593, -123.807, -145.028, 0.12 ) }
    dend_17 { pt3dadd( -165.22, -124.499, -145.743, 0.84 ) }
    dend_17 { pt3dadd( -165.657, -124.995, -146.204, 0.84 ) }
    dend_17 { pt3dadd( -166.004, -125.372, -146.496, 0.12 ) }
    dend_17 { pt3dadd( -166.379, -125.798, -146.745, 0.12 ) }
    dend_17 { pt3dadd( -167.117, -126.644, -147.116, 0.12 ) }
    dend_17 { pt3dadd( -167.448, -127.043, -147.273, 0.12 ) }
    dend_17 { pt3dadd( -167.702, -127.383, -147.37, 0.12 ) }
    dend_17 { pt3dadd( -168.289, -128.222, -147.594, 0.12 ) }
    dend_17 { pt3dadd( -168.917, -129.131, -147.792, 1.32 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.97317, -90.2142, -19.1447, 0.12 ) }
    dend_13 { pt3dadd( -6.3595, -91.0407, -19.1919, 0.12 ) }
    dend_13 { pt3dadd( -6.03242, -91.4573, -19.2188, 0.12 ) }
    dend_13 { pt3dadd( -5.71733, -91.8516, -19.2457, 0.96 ) }
    dend_13 { pt3dadd( -5.18939, -92.4413, -19.1958, 0.36 ) }
    dend_13 { pt3dadd( -4.7507, -92.8684, -19.0909, 0.12 ) }
    dend_13 { pt3dadd( -4.21793, -93.322, -18.9104, 0.12 ) }
    dend_13 { pt3dadd( -3.88431, -93.5946, -18.778, 0.48 ) }
    dend_13 { pt3dadd( -3.67112, -93.7565, -18.684, 0.12 ) }
    dend_13 { pt3dadd( -2.41128, -94.6171, -18.0758, 0.12 ) }
    dend_13 { pt3dadd( -1.04307, -95.4516, -17.3395, 2.76 ) }
    dend_13 { pt3dadd( -0.0843027, -95.9987, -16.7637, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.97317, -90.2142, -19.1447, 0.48 ) }
    dend_4 { pt3dadd( -7.39894, -91.4352, -19.3854, 0.48 ) }
    dend_4 { pt3dadd( -7.5933, -92.2516, -19.5108, 0.48 ) }
    dend_4 { pt3dadd( -7.70858, -92.9059, -19.6654, 0.48 ) }
    dend_4 { pt3dadd( -7.73755, -93.109, -19.7163, 0.48 ) }
    dend_4 { pt3dadd( -7.79138, -93.5619, -19.8203, 0.48 ) }
    dend_4 { pt3dadd( -7.84107, -93.9731, -19.9032, 0.48 ) }
    dend_4 { pt3dadd( -7.93941, -94.8045, -20.117, 0.48 ) }
    dend_4 { pt3dadd( -8.07495, -95.8427, -20.4274, 2.04 ) }
    dend_4 { pt3dadd( -8.17247, -96.5544, -20.6631, 3.49 ) }
    dend_4 { pt3dadd( -8.24763, -97.0178, -20.8189, 3.85 ) }
    dend_4 { pt3dadd( -8.40326, -97.7725, -21.0696, 3.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -8.84815, -99.678, -21.6838, 0.48 ) }
    dend_4 { pt3dadd( -9.03172, -100.461, -21.9361, 0.48 ) }
    dend_4 { pt3dadd( -9.21452, -101.287, -22.1813, 0.48 ) }
    dend_4 { pt3dadd( -9.27058, -101.586, -22.2782, 0.48 ) }
    dend_4 { pt3dadd( -9.34515, -102.099, -22.4703, 0.48 ) }
    dend_4 { pt3dadd( -9.39711, -102.54, -22.6422, 0.48 ) }
    dend_4 { pt3dadd( -9.44793, -103.057, -22.8226, 1.32 ) }
    dend_4 { pt3dadd( -9.5059, -103.523, -23.0257, 1.44 ) }
    dend_4 { pt3dadd( -9.62233, -104.339, -23.4446, 0.24 ) }
    dend_4 { pt3dadd( -9.71649, -104.963, -23.759, 0.24 ) }
    dend_4 { pt3dadd( -9.82828, -105.686, -24.1276, 0.24 ) }
    dend_4 { pt3dadd( -9.91392, -106.137, -24.3403, 0.24 ) }
    dend_4 { pt3dadd( -10.0689, -106.9, -24.6437, 1.8 ) }
    dend_4 { pt3dadd( -10.2319, -107.667, -24.91, 2.76 ) }
    dend_4 { pt3dadd( -10.4053, -108.527, -25.1506, 3.12 ) }
    dend_4 { pt3dadd( -10.5689, -109.572, -25.3773, 1.92 ) }
    dend_4 { pt3dadd( -10.6492, -110.381, -25.5299, 0.24 ) }
    dend_4 { pt3dadd( -10.7159, -111.217, -25.6545, 0.24 ) }
    dend_4 { pt3dadd( -10.7159, -111.217, -25.6545, 0.96 ) }
    dend_4 { pt3dadd( -10.7494, -111.588, -25.6762, 1.32 ) }
    dend_4 { pt3dadd( -10.8165, -112.151, -25.7176, 1.44 ) }
    dend_4 { pt3dadd( -10.9205, -112.898, -25.7209, 0.48 ) }
    dend_4 { pt3dadd( -10.9508, -113.092, -25.7292, 0.24 ) }
    dend_4 { pt3dadd( -11.0039, -113.362, -25.7491, 0.36 ) }
    dend_4 { pt3dadd( -11.1532, -114.075, -25.8109, 0.36 ) }
    dend_4 { pt3dadd( -11.2133, -114.367, -25.8316, 0.36 ) }
    dend_4 { pt3dadd( -11.3481, -115.003, -25.8962, 0.36 ) }
    dend_4 { pt3dadd( -11.4359, -115.45, -25.9469, 1.08 ) }
    dend_4 { pt3dadd( -11.5334, -116.007, -26.0069, 2.04 ) }
    dend_4 { pt3dadd( -11.6033, -116.481, -26.0583, 2.64 ) }
    dend_4 { pt3dadd( -11.7027, -117.248, -26.169, 1.56 ) }
    dend_4 { pt3dadd( -11.8112, -117.968, -26.3082, 0.12 ) }
    dend_4 { pt3dadd( -11.8884, -118.417, -26.3992, 0.12 ) }
    dend_4 { pt3dadd( -12.0014, -119.066, -26.5238, 0.12 ) }
    dend_4 { pt3dadd( -12.0656, -119.426, -26.6055, 0.12 ) }
    dend_4 { pt3dadd( -12.1672, -120.001, -26.7807, 1.32 ) }
    dend_4 { pt3dadd( -12.3179, -120.832, -27.0792, 2.4 ) }
    dend_4 { pt3dadd( -12.3978, -121.326, -27.2378, 3.25 ) }
    dend_4 { pt3dadd( -12.4754, -121.856, -27.4009, 3.37 ) }
    dend_4 { pt3dadd( -12.5692, -122.625, -27.6155, 2.28 ) }
    dend_4 { pt3dadd( -12.6793, -123.781, -27.882, 0.48 ) }
    dend_4 { pt3dadd( -12.6982, -124.079, -27.9347, 0.48 ) }
    dend_4 { pt3dadd( -12.7387, -124.858, -28.0509, 0.48 ) }
    dend_4 { pt3dadd( -12.7638, -125.628, -28.1629, 0.6 ) }
    dend_4 { pt3dadd( -12.7682, -126.19, -28.2247, 0.6 ) }
    dend_4 { pt3dadd( -12.7662, -126.653, -28.2453, 0.48 ) }
    dend_4 { pt3dadd( -12.7676, -126.841, -28.2565, 0.48 ) }
    dend_4 { pt3dadd( -12.7841, -127.347, -28.3326, 0.36 ) }
    dend_4 { pt3dadd( -12.8134, -127.805, -28.4443, 0.24 ) }
    dend_4 { pt3dadd( -12.8399, -128.083, -28.5295, 0.24 ) }
    dend_4 { pt3dadd( -12.8977, -128.603, -28.7079, 0.24 ) }
    dend_4 { pt3dadd( -12.9891, -129.571, -29.0043, 0.36 ) }
    dend_4 { pt3dadd( -13.0285, -130.117, -29.1525, 0.36 ) }
    dend_4 { pt3dadd( -13.0502, -130.485, -29.2381, 1.56 ) }
    dend_4 { pt3dadd( -13.113, -131.372, -29.4115, 2.88 ) }
    dend_4 { pt3dadd( -13.1499, -131.92, -29.5069, 2.88 ) }
    dend_4 { pt3dadd( -13.2135, -133.046, -29.6947, 0.24 ) }
    dend_4 { pt3dadd( -13.2373, -133.431, -29.7459, 0.12 ) }
    dend_4 { pt3dadd( -13.2791, -133.991, -29.8157, 0.12 ) }
    dend_4 { pt3dadd( -13.3202, -134.406, -29.8803, 0.12 ) }
    dend_4 { pt3dadd( -13.3792, -134.976, -29.9791, 1.8 ) }
    dend_4 { pt3dadd( -13.4586, -135.682, -30.1124, 2.64 ) }
    dend_4 { pt3dadd( -13.5329, -136.333, -30.24, 2.64 ) }
    dend_4 { pt3dadd( -13.6414, -137.362, -30.4303, 0.36 ) }
    dend_4 { pt3dadd( -13.6958, -138.059, -30.5425, 0.12 ) }
    dend_4 { pt3dadd( -13.7296, -138.729, -30.6488, 0.12 ) }
    dend_4 { pt3dadd( -13.7492, -139.208, -30.728, 0.36 ) }
    dend_4 { pt3dadd( -13.7847, -139.943, -30.8607, 0.36 ) }
    dend_4 { pt3dadd( -13.7938, -140.15, -30.9069, 0.84 ) }
    dend_4 { pt3dadd( -13.8085, -140.773, -31.1075, 1.2 ) }
    dend_4 { pt3dadd( -13.809, -141.497, -31.3119, 0.48 ) }
    dend_4 { pt3dadd( -13.8032, -141.927, -31.435, 0.12 ) }
    dend_4 { pt3dadd( -13.7814, -142.409, -31.5708, 0.12 ) }
    dend_4 { pt3dadd( -13.7074, -143.252, -31.7414, 0.12 ) }
    dend_4 { pt3dadd( -13.6058, -144.065, -31.8476, 0.12 ) }
    dend_4 { pt3dadd( -13.477, -144.923, -31.9034, 1.68 ) }
    dend_4 { pt3dadd( -13.3545, -145.665, -31.9284, 2.64 ) }
    dend_4 { pt3dadd( -13.2864, -146.048, -31.9383, 3.0 ) }
    dend_4 { pt3dadd( -13.0912, -147.158, -32.0364, 0.12 ) }
    dend_4 { pt3dadd( -13.0494, -147.451, -32.0792, 0.12 ) }
    dend_4 { pt3dadd( -12.9956, -147.997, -32.1826, 0.12 ) }
    dend_4 { pt3dadd( -12.964, -148.559, -32.362, 0.48 ) }
    dend_4 { pt3dadd( -12.9579, -148.916, -32.5004, 0.48 ) }
    dend_4 { pt3dadd( -12.9474, -149.646, -32.8443, 0.48 ) }
    dend_4 { pt3dadd( -12.9271, -150.142, -33.1105, 0.48 ) }
    dend_4 { pt3dadd( -12.8867, -150.445, -33.267, 0.48 ) }
    dend_4 { pt3dadd( -12.8327, -150.708, -33.4031, 0.48 ) }
    dend_4 { pt3dadd( -12.7647, -150.967, -33.5226, 0.48 ) }
    dend_4 { pt3dadd( -12.5914, -151.616, -33.7999, 1.2 ) }
    dend_4 { pt3dadd( -12.4434, -152.153, -34.0031, 1.8 ) }
    dend_4 { pt3dadd( -12.158, -153.214, -34.4049, 0.6 ) }
    dend_4 { pt3dadd( -12.003, -153.81, -34.633, 0.12 ) }
    dend_4 { pt3dadd( -11.9013, -154.285, -34.7979, 0.12 ) }
    dend_4 { pt3dadd( -11.8311, -154.805, -34.9463, 0.12 ) }
    dend_4 { pt3dadd( -11.8212, -155.082, -35.0003, 0.24 ) }
    dend_4 { pt3dadd( -11.8342, -155.459, -35.0534, 0.24 ) }
    dend_4 { pt3dadd( -11.8744, -155.862, -35.0794, 1.32 ) }
    dend_4 { pt3dadd( -11.9508, -156.5, -35.0943, 1.8 ) }
    dend_4 { pt3dadd( -12.0263, -157.06, -35.112, 2.88 ) }
    dend_4 { pt3dadd( -12.0851, -157.622, -35.1323, 3.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( -12.1592, -158.313, -35.1542, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.1592, -158.313, -35.1542, 1.08 ) }
    dend_12 { pt3dadd( -12.0645, -159.36, -40.1853, 1.08 ) }
    dend_12 { pt3dadd( -11.8632, -160.306, -44.2927, 0.48 ) }
    dend_12 { pt3dadd( -11.7581, -160.703, -45.8242, 1.32 ) }
    dend_12 { pt3dadd( -11.5853, -161.205, -47.6735, 1.08 ) }
    dend_12 { pt3dadd( -11.4782, -161.457, -48.5827, 1.44 ) }
    dend_12 { pt3dadd( -11.0486, -162.255, -51.3813, 1.2 ) }
    dend_12 { pt3dadd( -10.581, -162.843, -53.1156, 1.2 ) }
    dend_12 { pt3dadd( -10.3389, -163.112, -53.8082, 1.56 ) }
    dend_12 { pt3dadd( -9.72028, -163.788, -55.6941, 1.32 ) }
    dend_12 { pt3dadd( -9.36037, -164.189, -56.8839, 0.72 ) }
    dend_12 { pt3dadd( -8.94612, -164.716, -58.3585, 0.72 ) }
    dend_12 { pt3dadd( -8.47333, -165.456, -60.1969, 0.72 ) }
    dend_12 { pt3dadd( -8.24041, -165.882, -61.3425, 1.92 ) }
    dend_12 { pt3dadd( -7.65496, -167.608, -67.1026, 0.84 ) }
    dend_12 { pt3dadd( -7.5501, -168.312, -69.6248, 0.6 ) }
    dend_12 { pt3dadd( -7.55533, -168.691, -71.053, 1.44 ) }
    dend_12 { pt3dadd( -7.58668, -168.883, -71.7988, 1.44 ) }
    dend_12 { pt3dadd( -8.16312, -170.552, -78.7795, 2.52 ) }
    dend_12 { pt3dadd( -8.98916, -172.045, -85.7781, 0.96 ) }
    dend_12 { pt3dadd( -9.07102, -172.152, -86.3145, 0.96 ) }
    dend_12 { pt3dadd( -9.17068, -172.255, -86.8602, 0.96 ) }
    dend_12 { pt3dadd( -9.29111, -172.364, -87.4649, 0.96 ) }
    dend_12 { pt3dadd( -10.0216, -172.991, -90.8516, 1.56 ) }
    dend_12 { pt3dadd( -10.6444, -173.542, -93.5194, 1.56 ) }
    dend_12 { pt3dadd( -11.317, -174.246, -96.7412, 1.2 ) }
    dend_12 { pt3dadd( -11.6964, -174.694, -98.8247, 1.92 ) }
    dend_12 { pt3dadd( -12.7545, -176.17, -106.045, 1.8 ) }
    dend_12 { pt3dadd( -13.4773, -177.4, -112.279, 1.32 ) }
    dend_12 { pt3dadd( -13.7513, -178.134, -116.056, 1.8 ) }
    dend_12 { pt3dadd( -13.7755, -178.322, -117.093, 0.96 ) }
    dend_12 { pt3dadd( -13.7185, -178.547, -118.493, 0.96 ) }
    dend_12 { pt3dadd( -13.2528, -178.998, -122.006, 0.84 ) }
    dend_12 { pt3dadd( -13.1115, -179.036, -122.479, 0.84 ) }
    dend_12 { pt3dadd( -12.013, -179.129, -124.965, 0.12 ) }
    dend_12 { pt3dadd( -11.3657, -179.144, -126.303, 0.12 ) }
    dend_12 { pt3dadd( -10.7714, -179.177, -127.615, 1.08 ) }
    dend_12 { pt3dadd( -9.62753, -179.361, -130.142, 0.36 ) }
    dend_12 { pt3dadd( -9.02127, -179.587, -131.408, 1.44 ) }
    dend_12 { pt3dadd( -8.67822, -179.85, -132.215, 0.12 ) }
    dend_12 { pt3dadd( -8.58597, -179.993, -132.457, 0.12 ) }
    dend_12 { pt3dadd( -8.42768, -180.501, -133.03, 0.12 ) }
    dend_12 { pt3dadd( -8.31844, -181.2, -133.605, 1.2 ) }
    dend_12 { pt3dadd( -8.31474, -181.572, -133.867, 1.2 ) }
    dend_12 { pt3dadd( -8.46026, -183.249, -135.195, 0.12 ) }
    dend_12 { pt3dadd( -8.49702, -183.597, -135.487, 0.12 ) }
    dend_12 { pt3dadd( -8.57359, -184.161, -135.972, 0.12 ) }
    dend_12 { pt3dadd( -8.74047, -185.139, -136.795, 1.08 ) }
    dend_12 { pt3dadd( -8.99531, -186.378, -137.912, 1.68 ) }
    dend_12 { pt3dadd( -9.28667, -187.713, -139.094, 0.12 ) }
    dend_12 { pt3dadd( -9.39806, -188.183, -139.474, 0.12 ) }
    dend_12 { pt3dadd( -9.45703, -188.454, -139.68, 0.12 ) }
    dend_12 { pt3dadd( -9.62572, -189.311, -140.338, 1.08 ) }
    dend_12 { pt3dadd( -9.90276, -191.38, -141.785, 0.12 ) }
    dend_12 { pt3dadd( -9.94396, -191.887, -142.112, 0.12 ) }
    dend_12 { pt3dadd( -9.97597, -192.573, -142.524, 0.12 ) }
    dend_12 { pt3dadd( -10.0005, -193.754, -143.183, 1.68 ) }
    dend_12 { pt3dadd( -10.004, -195.332, -144.045, 0.12 ) }
    dend_12 { pt3dadd( -9.96946, -197.008, -144.899, 0.12 ) }
    dend_12 { pt3dadd( -9.93954, -197.862, -145.234, 0.12 ) }
    dend_12 { pt3dadd( -9.91266, -198.424, -145.468, 0.12 ) }
    dend_12 { pt3dadd( -9.84243, -199.377, -145.882, 1.56 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.1592, -158.313, -35.1542, 0.12 ) }
    dend_5 { pt3dadd( -12.5011, -159.95, -35.6822, 0.12 ) }
    dend_5 { pt3dadd( -12.6223, -160.557, -35.8561, 0.24 ) }
    dend_5 { pt3dadd( -12.7858, -161.442, -36.1755, 0.24 ) }
    dend_5 { pt3dadd( -12.9258, -162.264, -36.4923, 0.24 ) }
    dend_5 { pt3dadd( -12.9644, -162.53, -36.5931, 0.72 ) }
    dend_5 { pt3dadd( -13.0127, -162.982, -36.7522, 1.08 ) }
    dend_5 { pt3dadd( -13.0274, -163.421, -36.8784, 1.08 ) }
    dend_5 { pt3dadd( -13.0074, -164.561, -37.2527, 0.24 ) }
    dend_5 { pt3dadd( -12.9676, -164.979, -37.4378, 0.24 ) }
    dend_5 { pt3dadd( -12.8734, -165.613, -37.7527, 0.36 ) }
    dend_5 { pt3dadd( -12.7381, -166.349, -38.1505, 0.36 ) }
    dend_5 { pt3dadd( -12.563, -167.162, -38.6374, 0.36 ) }
    dend_5 { pt3dadd( -12.3473, -168.226, -39.2842, 1.8 ) }
    dend_5 { pt3dadd( -12.2103, -169.079, -39.7718, 2.76 ) }
    dend_5 { pt3dadd( -12.1566, -169.563, -40.111, 2.76 ) }
    dend_5 { pt3dadd( -12.0375, -170.957, -41.1659, 0.6 ) }
    dend_5 { pt3dadd( -11.9919, -171.483, -41.5615, 0.12 ) }
    dend_5 { pt3dadd( -11.8904, -172.23, -42.0523, 0.12 ) }
    dend_5 { pt3dadd( -11.7537, -172.917, -42.4277, 0.48 ) }
    dend_5 { pt3dadd( -11.2212, -174.985, -43.4535, 0.48 ) }
    dend_5 { pt3dadd( -10.9617, -175.835, -43.8442, 2.04 ) }
    dend_5 { pt3dadd( -10.6959, -176.587, -44.1361, 2.28 ) }
    dend_5 { pt3dadd( -10.1642, -178.012, -44.5971, 0.48 ) }
    dend_5 { pt3dadd( -9.84227, -178.849, -44.8191, 0.12 ) }
    dend_5 { pt3dadd( -9.71655, -179.192, -44.8813, 0.12 ) }
    dend_5 { pt3dadd( -9.61507, -179.536, -44.9153, 0.12 ) }
    dend_5 { pt3dadd( -9.54993, -179.893, -44.9798, 0.12 ) }
    dend_5 { pt3dadd( -9.47476, -180.715, -45.1386, 0.12 ) }
    dend_5 { pt3dadd( -9.41765, -181.611, -45.3519, 0.12 ) }
    dend_5 { pt3dadd( -9.38565, -181.963, -45.458, 0.12 ) }
    dend_5 { pt3dadd( -9.27098, -183.077, -45.8585, 1.44 ) }
    dend_5 { pt3dadd( -9.16804, -183.934, -46.1976, 2.52 ) }
    dend_5 { pt3dadd( -9.05084, -184.699, -46.5219, 2.4 ) }
    dend_5 { pt3dadd( -8.82546, -185.913, -47.0775, 1.2 ) }
    dend_5 { pt3dadd( -8.65924, -186.93, -47.5579, 0.12 ) }
    dend_5 { pt3dadd( -8.58993, -187.452, -47.7987, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -8.55132, -187.88, -47.9844, 0.12 ) }
    dend_5 { pt3dadd( -8.52855, -188.263, -48.1629, 0.12 ) }
    dend_5 { pt3dadd( -8.51246, -188.977, -48.4921, 1.2 ) }
    dend_5 { pt3dadd( -8.5153, -189.952, -48.8757, 2.16 ) }
    dend_5 { pt3dadd( -8.51097, -190.819, -49.1771, 1.08 ) }
    dend_5 { pt3dadd( -8.47443, -191.873, -49.583, 0.36 ) }
    dend_5 { pt3dadd( -8.44106, -192.488, -49.8455, 0.12 ) }
    dend_5 { pt3dadd( -8.42123, -192.91, -50.0504, 0.12 ) }
    dend_5 { pt3dadd( -8.40237, -193.233, -50.2114, 0.48 ) }
    dend_5 { pt3dadd( -8.36124, -193.862, -50.5263, 0.6 ) }
    dend_5 { pt3dadd( -8.31424, -194.963, -51.0535, 0.48 ) }
    dend_5 { pt3dadd( -8.32145, -195.687, -51.3722, 0.36 ) }
    dend_5 { pt3dadd( -8.39159, -196.523, -51.7148, 0.72 ) }
    dend_5 { pt3dadd( -8.49262, -197.212, -51.9884, 1.8 ) }
    dend_5 { pt3dadd( -8.62559, -197.9, -52.2377, 2.52 ) }
    dend_5 { pt3dadd( -8.7747, -198.56, -52.4205, 2.76 ) }
    dend_5 { pt3dadd( -9.14474, -199.994, -52.6431, 0.6 ) }
    dend_5 { pt3dadd( -9.28471, -200.504, -52.6849, 0.24 ) }
    dend_5 { pt3dadd( -9.42377, -201.037, -52.6968, 0.36 ) }
    dend_5 { pt3dadd( -9.57218, -201.603, -52.7039, 0.36 ) }
    dend_5 { pt3dadd( -9.75436, -202.329, -52.6826, 0.36 ) }
    dend_5 { pt3dadd( -9.91447, -203.009, -52.6544, 0.36 ) }
    dend_5 { pt3dadd( -9.97877, -203.331, -52.6427, 1.08 ) }
    dend_5 { pt3dadd( -10.1195, -204.015, -52.645, 1.68 ) }
    dend_5 { pt3dadd( -10.2004, -204.364, -52.6586, 1.92 ) }
    dend_5 { pt3dadd( -10.3454, -204.938, -52.7107, 2.04 ) }
    dend_5 { pt3dadd( -10.5483, -205.768, -52.8251, 1.32 ) }
    dend_5 { pt3dadd( -10.6819, -206.392, -52.9107, 0.36 ) }
    dend_5 { pt3dadd( -10.7778, -206.962, -52.9766, 0.36 ) }
    dend_5 { pt3dadd( -10.8658, -207.642, -53.0373, 0.36 ) }
    dend_5 { pt3dadd( -10.9, -207.988, -53.0565, 0.6 ) }
    dend_5 { pt3dadd( -10.9453, -208.456, -53.0658, 0.72 ) }
    dend_5 { pt3dadd( -10.9967, -208.918, -53.0578, 0.72 ) }
    dend_5 { pt3dadd( -11.0851, -209.509, -53.0266, 0.36 ) }
    dend_5 { pt3dadd( -11.21, -210.185, -52.9849, 0.36 ) }
    dend_5 { pt3dadd( -11.3595, -210.875, -52.9385, 0.36 ) }
    dend_5 { pt3dadd( -11.4555, -211.35, -52.8956, 0.6 ) }
    dend_5 { pt3dadd( -11.545, -211.864, -52.8417, 0.48 ) }
    dend_5 { pt3dadd( -11.6735, -212.767, -52.7394, 0.36 ) }
    dend_5 { pt3dadd( -11.7014, -213.131, -52.6974, 0.36 ) }
    dend_5 { pt3dadd( -11.723, -213.638, -52.6322, 0.36 ) }
    dend_5 { pt3dadd( -11.7081, -214.651, -52.4882, 1.68 ) }
    dend_5 { pt3dadd( -11.6393, -215.452, -52.3666, 3.12 ) }
    dend_5 { pt3dadd( -11.5853, -215.792, -52.3124, 3.37 ) }
    dend_5 { pt3dadd( -11.3545, -216.743, -52.1783, 2.16 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.3545, -216.743, -52.1783, 0.24 ) }
    dend_11 { pt3dadd( -12.1545, -217.972, -52.4622, 0.24 ) }
    dend_11 { pt3dadd( -12.4544, -218.438, -52.4966, 0.24 ) }
    dend_11 { pt3dadd( -12.6695, -218.766, -52.4915, 0.24 ) }
    dend_11 { pt3dadd( -12.8668, -219.091, -52.451, 0.24 ) }
    dend_11 { pt3dadd( -13.1035, -219.518, -52.3717, 0.24 ) }
    dend_11 { pt3dadd( -13.3526, -220.001, -52.267, 0.24 ) }
    dend_11 { pt3dadd( -13.6166, -220.599, -52.0568, 0.96 ) }
    dend_11 { pt3dadd( -13.7522, -220.902, -51.9474, 1.32 ) }
    dend_11 { pt3dadd( -13.975, -221.383, -51.7543, 0.72 ) }
    dend_11 { pt3dadd( -14.1914, -221.808, -51.5685, 0.12 ) }
    dend_11 { pt3dadd( -14.4475, -222.256, -51.3619, 0.12 ) }
    dend_11 { pt3dadd( -14.6848, -222.712, -51.1661, 0.12 ) }
    dend_11 { pt3dadd( -14.841, -223.03, -51.0541, 0.12 ) }
    dend_11 { pt3dadd( -15.1719, -223.824, -50.83, 1.44 ) }
    dend_11 { pt3dadd( -15.3406, -224.278, -50.7416, 1.68 ) }
    dend_11 { pt3dadd( -15.5438, -224.909, -50.6433, 1.08 ) }
    dend_11 { pt3dadd( -15.6934, -225.491, -50.5262, 0.48 ) }
    dend_11 { pt3dadd( -15.7529, -225.867, -50.4171, 0.12 ) }
    dend_11 { pt3dadd( -15.8455, -226.617, -50.2069, 0.12 ) }
    dend_11 { pt3dadd( -15.9031, -227.337, -49.9161, 0.48 ) }
    dend_11 { pt3dadd( -15.9194, -227.583, -49.7925, 0.48 ) }
    dend_11 { pt3dadd( -15.9725, -228.434, -49.2441, 0.48 ) }
    dend_11 { pt3dadd( -16.0725, -229.195, -48.6832, 0.96 ) }
    dend_11 { pt3dadd( -16.155, -229.733, -48.2532, 0.96 ) }
    dend_11 { pt3dadd( -16.3456, -230.781, -47.4045, 0.12 ) }
    dend_11 { pt3dadd( -16.4006, -231.126, -47.1226, 0.12 ) }
    dend_11 { pt3dadd( -16.4995, -231.769, -46.6329, 1.2 ) }
    dend_11 { pt3dadd( -16.5947, -232.361, -46.2286, 1.68 ) }
    dend_11 { pt3dadd( -16.657, -232.711, -45.9908, 2.16 ) }
    dend_11 { pt3dadd( -16.7167, -233.054, -45.7605, 2.16 ) }
    dend_11 { pt3dadd( -16.9837, -234.396, -45.0492, 0.36 ) }
    dend_11 { pt3dadd( -17.0689, -234.8, -44.7946, 0.36 ) }
    dend_11 { pt3dadd( -17.1475, -235.099, -44.5862, 1.08 ) }
    dend_11 { pt3dadd( -17.3073, -235.63, -44.1825, 1.32 ) }
    dend_11 { pt3dadd( -17.411, -235.921, -43.9541, 1.2 ) }
    dend_11 { pt3dadd( -17.6632, -236.506, -43.4858, 1.2 ) }
    dend_11 { pt3dadd( -18.5008, -237.998, -42.167, 0.12 ) }
    dend_11 { pt3dadd( -18.7027, -238.279, -41.8821, 0.24 ) }
    dend_11 { pt3dadd( -18.9625, -238.577, -41.5587, 0.24 ) }
    dend_11 { pt3dadd( -19.1172, -238.741, -41.3889, 0.36 ) }
    dend_11 { pt3dadd( -19.465, -239.091, -41.0034, 0.36 ) }
    dend_11 { pt3dadd( -19.9427, -239.555, -40.4762, 0.12 ) }
    dend_11 { pt3dadd( -20.3138, -239.844, -40.2508, 0.12 ) }
    dend_11 { pt3dadd( -20.6337, -240.083, -40.0279, 0.96 ) }
    dend_11 { pt3dadd( -21.0733, -240.38, -39.6741, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 91/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.3545, -216.743, -52.1783, 0.12 ) }
    dend_6 { pt3dadd( -10.8849, -217.684, -52.5701, 0.12 ) }
    dend_6 { pt3dadd( -10.6403, -218.15, -52.7099, 0.12 ) }
    dend_6 { pt3dadd( -10.2132, -218.963, -52.9223, 0.84 ) }
    dend_6 { pt3dadd( -9.70509, -219.973, -53.1456, 0.84 ) }
    dend_6 { pt3dadd( -9.36589, -220.671, -53.2931, 0.12 ) }
    dend_6 { pt3dadd( -9.05735, -221.35, -53.4255, 0.12 ) }
    dend_6 { pt3dadd( -8.72014, -222.184, -53.5648, 0.48 ) }
    dend_6 { pt3dadd( -8.51223, -222.799, -53.6414, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_6 { pt3dadd( -8.30899, -223.566, -53.6965, 0.24 ) }
    dend_6 { pt3dadd( -8.21626, -224.025, -53.7084, 0.12 ) }
    dend_6 { pt3dadd( -8.1219, -224.789, -53.7685, 0.24 ) }
    dend_6 { pt3dadd( -8.0755, -225.562, -53.8874, 0.24 ) }
    dend_6 { pt3dadd( -8.06423, -226.32, -54.0421, 0.24 ) }
    dend_6 { pt3dadd( -8.07159, -226.705, -54.1158, 0.84 ) }
    dend_6 { pt3dadd( -8.1182, -227.613, -54.3217, 1.32 ) }
    dend_6 { pt3dadd( -8.16103, -228.346, -54.518, 1.8 ) }
    dend_6 { pt3dadd( -8.2237, -229.519, -54.8819, 2.4 ) }
    dend_6 { pt3dadd( -8.27723, -230.264, -55.1272, 1.92 ) }
    dend_6 { pt3dadd( -8.40166, -231.366, -55.5236, 0.48 ) }
    dend_6 { pt3dadd( -8.50313, -232.061, -55.7858, 0.12 ) }
    dend_6 { pt3dadd( -8.62344, -232.751, -56.0417, 0.12 ) }
    dend_6 { pt3dadd( -8.68465, -233.14, -56.1717, 0.12 ) }
    dend_6 { pt3dadd( -8.76267, -233.925, -56.4451, 0.6 ) }
    dend_6 { pt3dadd( -8.78961, -234.667, -56.7316, 0.24 ) }
    dend_6 { pt3dadd( -8.77489, -235.311, -56.9746, 0.24 ) }
    dend_6 { pt3dadd( -8.7488, -235.815, -57.1353, 0.96 ) }
    dend_6 { pt3dadd( -8.66197, -236.999, -57.4705, 1.8 ) }
    dend_6 { pt3dadd( -8.50863, -238.266, -57.7975, 0.96 ) }
    dend_6 { pt3dadd( -8.31818, -239.21, -58.0115, 0.36 ) }
    dend_6 { pt3dadd( -8.09374, -240.082, -58.1748, 0.36 ) }
    dend_6 { pt3dadd( -7.77232, -241.197, -58.3601, 0.36 ) }
    dend_6 { pt3dadd( -7.54954, -241.947, -58.4328, 0.36 ) }
    dend_6 { pt3dadd( -7.41273, -242.453, -58.4413, 0.36 ) }
    dend_6 { pt3dadd( -7.16984, -243.436, -58.4048, 1.92 ) }
    dend_6 { pt3dadd( -6.95218, -244.387, -58.3401, 3.12 ) }
    dend_6 { pt3dadd( -6.7961, -245.191, -58.2835, 3.12 ) }
    dend_6 { pt3dadd( -6.51111, -247.003, -58.0419, 0.36 ) }
    dend_6 { pt3dadd( -6.3364, -248.523, -57.7218, 0.36 ) }
    dend_6 { pt3dadd( -6.28958, -249.208, -57.5361, 0.96 ) }
    dend_6 { pt3dadd( -6.27085, -249.967, -57.2796, 1.56 ) }
    dend_6 { pt3dadd( -6.27349, -250.828, -56.9346, 1.68 ) }
    dend_6 { pt3dadd( -6.30068, -252.377, -56.2632, 0.84 ) }
    dend_6 { pt3dadd( -6.3175, -253.156, -55.8443, 0.36 ) }
    dend_6 { pt3dadd( -6.31325, -253.591, -55.5645, 0.36 ) }
    dend_6 { pt3dadd( -6.29007, -254.143, -55.2006, 0.6 ) }
    dend_6 { pt3dadd( -6.24391, -254.709, -54.8594, 0.36 ) }
    dend_6 { pt3dadd( -6.12874, -255.541, -54.4848, 0.36 ) }
    dend_6 { pt3dadd( -5.84034, -256.896, -54.1444, 0.12 ) }
    dend_6 { pt3dadd( -5.64464, -257.556, -54.0445, 0.12 ) }
    dend_6 { pt3dadd( -5.35707, -258.285, -53.9736, 1.32 ) }
    dend_6 { pt3dadd( -4.99243, -258.998, -53.9539, 1.8 ) }
    dend_6 { pt3dadd( -4.36306, -260.049, -54.0063, 1.68 ) }
    dend_6 { pt3dadd( -3.9439, -260.67, -54.0884, 1.32 ) }
    dend_6 { pt3dadd( -3.55419, -261.191, -54.1809, 0.36 ) }
    dend_6 { pt3dadd( -3.31828, -261.481, -54.2196, 0.36 ) }
    dend_6 { pt3dadd( -2.74842, -262.104, -54.2427, 0.48 ) }
    dend_6 { pt3dadd( -2.17086, -262.673, -54.1755, 0.12 ) }
    dend_6 { pt3dadd( -1.44122, -263.382, -53.9786, 0.12 ) }
    dend_6 { pt3dadd( -0.917914, -263.903, -53.7723, 1.08 ) }
    dend_6 { pt3dadd( -0.708091, -264.11, -53.678, 1.32 ) }
    dend_6 { pt3dadd( -0.112402, -264.697, -53.3176, 0.84 ) }
    dend_6 { pt3dadd( 0.36454, -265.169, -52.954, 0.12 ) }
    dend_6 { pt3dadd( 1.06864, -265.9, -52.3281, 0.12 ) }
    dend_6 { pt3dadd( 1.74263, -266.688, -51.607, 1.2 ) }
    dend_6 { pt3dadd( 2.03196, -267.056, -51.283, 1.68 ) }
    dend_6 { pt3dadd( 2.88043, -268.18, -50.2617, 0.6 ) }
    dend_6 { pt3dadd( 3.18347, -268.598, -49.8827, 0.48 ) }
    dend_6 { pt3dadd( 3.44424, -268.939, -49.5501, 0.48 ) }
    dend_6 { pt3dadd( 3.87581, -269.433, -49.0136, 0.12 ) }
    dend_6 { pt3dadd( 4.43555, -270.01, -48.4533, 0.12 ) }
    dend_6 { pt3dadd( 4.81129, -270.362, -48.1947, 0.48 ) }
    dend_6 { pt3dadd( 5.2476, -270.738, -48.0442, 0.6 ) }
    dend_6 { pt3dadd( 5.84416, -271.313, -47.9596, 0.36 ) }
    dend_6 { pt3dadd( 6.16842, -271.667, -47.9333, 0.36 ) }
    dend_6 { pt3dadd( 6.79618, -272.563, -47.932, 1.32 ) }
    dend_6 { pt3dadd( 7.29056, -273.522, -47.9478, 2.4 ) }
    dend_6 { pt3dadd( 7.43771, -273.899, -47.9605, 2.52 ) }
    dend_6 { pt3dadd( 7.8652, -275.247, -47.9925, 1.2 ) }
    dend_6 { pt3dadd( 8.16468, -276.242, -48.0419, 0.12 ) }
    dend_6 { pt3dadd( 8.43752, -277.075, -48.0951, 0.12 ) }
    dend_6 { pt3dadd( 8.56836, -277.434, -48.1157, 0.12 ) }
    dend_6 { pt3dadd( 8.72222, -277.817, -48.1571, 0.48 ) }
    dend_6 { pt3dadd( 9.32643, -279.167, -48.3423, 0.48 ) }
    dend_6 { pt3dadd( 9.72177, -280.025, -48.5137, 0.48 ) }
    dend_6 { pt3dadd( 10.1402, -281.034, -48.79, 0.48 ) }
    dend_6 { pt3dadd( 10.3254, -281.566, -48.9427, 0.12 ) }
    dend_6 { pt3dadd( 10.4127, -282.067, -49.0922, 0.12 ) }
    dend_6 { pt3dadd( 10.4047, -282.697, -49.2754, 1.44 ) }
    dend_6 { pt3dadd( 10.1957, -283.708, -49.5603, 2.52 ) }
    dend_6 { pt3dadd( 9.95769, -284.48, -49.767, 2.64 ) }
    dend_6 { pt3dadd( 9.66926, -285.274, -50.0031, 2.4 ) }
    dend_6 { pt3dadd( 9.16093, -286.821, -50.4887, 0.6 ) }
    dend_6 { pt3dadd( 8.92308, -287.582, -50.7328, 0.36 ) }
    dend_6 { pt3dadd( 8.61309, -288.632, -51.0646, 0.48 ) }
    dend_6 { pt3dadd( 8.4211, -289.422, -51.2956, 0.48 ) }
    dend_6 { pt3dadd( 8.23626, -290.382, -51.5702, 0.36 ) }
    dend_6 { pt3dadd( 8.04548, -291.881, -51.9673, 0.36 ) }
    dend_6 { pt3dadd( 8.0215, -292.263, -52.0541, 1.32 ) }
    dend_6 { pt3dadd( 7.99343, -292.953, -52.1904, 1.68 ) }
    dend_6 { pt3dadd( 7.93247, -293.726, -52.3001, 1.92 ) }
    dend_6 { pt3dadd( 7.88691, -294.114, -52.3352, 2.04 ) }
    dend_6 { pt3dadd( 7.66732, -295.551, -52.3953, 0.36 ) }
    dend_6 { pt3dadd( 7.59803, -295.937, -52.4098, 0.36 ) }
    dend_6 { pt3dadd( 7.51895, -296.505, -52.4275, 0.36 ) }
    dend_6 { pt3dadd( 7.40472, -297.403, -52.6194, 0.36 ) }
    dend_6 { pt3dadd( 7.31817, -298.035, -52.7736, 0.36 ) }
    dend_6 { pt3dadd( 7.17064, -299.152, -53.0844, 0.36 ) }
    dend_6 { pt3dadd( 7.08584, -299.883, -53.3316, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_6 { pt3dadd( 7.00885, -300.74, -53.6823, 2.64 ) }
    dend_6 { pt3dadd( 6.90534, -303.635, -55.2035, 2.64 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.90534, -303.635, -55.2035, 0.12 ) }
    dend_10 { pt3dadd( 7.70441, -305.434, -55.4833, 0.12 ) }
    dend_10 { pt3dadd( 7.87459, -305.833, -55.5882, 0.12 ) }
    dend_10 { pt3dadd( 7.98895, -306.106, -55.6707, 0.12 ) }
    dend_10 { pt3dadd( 8.25999, -306.761, -55.9303, 0.6 ) }
    dend_10 { pt3dadd( 8.45356, -307.32, -56.2254, 0.12 ) }
    dend_10 { pt3dadd( 8.53483, -307.577, -56.3739, 0.12 ) }
    dend_10 { pt3dadd( 8.71495, -308.363, -56.9642, 0.96 ) }
    dend_10 { pt3dadd( 8.83684, -308.961, -57.5391, 1.56 ) }
    dend_10 { pt3dadd( 8.99712, -309.859, -58.5108, 1.2 ) }
    dend_10 { pt3dadd( 9.14341, -310.877, -59.6293, 0.24 ) }
    dend_10 { pt3dadd( 9.15425, -311.181, -60.0203, 0.72 ) }
    dend_10 { pt3dadd( 9.09917, -311.774, -60.9237, 1.08 ) }
    dend_10 { pt3dadd( 8.88253, -312.682, -62.5888, 0.12 ) }
    dend_10 { pt3dadd( 8.821, -312.897, -63.0079, 0.12 ) }
    dend_10 { pt3dadd( 8.65346, -313.467, -64.1106, 1.8 ) }
    dend_10 { pt3dadd( 8.2011, -315.325, -67.5618, 1.68 ) }
    dend_10 { pt3dadd( 7.9975, -316.431, -69.4894, 1.32 ) }
    dend_10 { pt3dadd( 7.8171, -317.898, -71.8381, 0.84 ) }
    dend_10 { pt3dadd( 7.77541, -318.578, -72.8404, 1.44 ) }
    dend_10 { pt3dadd( 7.7889, -319.137, -73.5979, 2.16 ) }
    dend_10 { pt3dadd( 7.90693, -319.961, -74.5288, 0.24 ) }
    dend_10 { pt3dadd( 8.22806, -320.822, -75.1434, 0.24 ) }
    dend_10 { pt3dadd( 8.45611, -321.223, -75.3258, 0.72 ) }
    dend_10 { pt3dadd( 8.74155, -321.605, -75.4309, 0.96 ) }
    dend_10 { pt3dadd( 9.52371, -322.479, -75.6888, 0.12 ) }
    dend_10 { pt3dadd( 10.0725, -323.01, -75.8534, 0.12 ) }
    dend_10 { pt3dadd( 11.2942, -324.157, -76.1782, 0.12 ) }
    dend_10 { pt3dadd( 12.5628, -325.443, -76.5177, 1.2 ) }
    dend_10 { pt3dadd( 13.1465, -326.075, -76.6698, 1.92 ) }
    dend_10 { pt3dadd( 14.1622, -327.222, -76.928, 0.12 ) }
    dend_10 { pt3dadd( 14.5751, -327.708, -77.0434, 0.12 ) }
    dend_10 { pt3dadd( 15.0275, -328.351, -77.3195, 0.12 ) }
    dend_10 { pt3dadd( 15.5059, -329.202, -78.0261, 0.24 ) }
    dend_10 { pt3dadd( 15.8037, -329.743, -78.8119, 0.24 ) }
    dend_10 { pt3dadd( 15.9409, -329.953, -79.2448, 0.24 ) }
    dend_10 { pt3dadd( 16.39, -330.554, -80.8324, 1.8 ) }
    dend_10 { pt3dadd( 17.0569, -331.391, -83.2683, 1.8 ) }
    dend_10 { pt3dadd( 17.5724, -332.024, -85.5788, 0.24 ) }
    dend_10 { pt3dadd( 17.8331, -332.341, -87.0912, 0.48 ) }
    dend_10 { pt3dadd( 17.9541, -332.51, -88.0462, 0.72 ) }
    dend_10 { pt3dadd( 18.0997, -332.705, -89.2936, 1.68 ) }
    dend_10 { pt3dadd( 18.1821, -332.803, -90.0684, 1.68 ) }
    dend_10 { pt3dadd( 18.6646, -333.254, -93.8046, 1.68 ) }
    dend_10 { pt3dadd( 19.1604, -333.673, -97.4258, 1.44 ) }
    dend_10 { pt3dadd( 19.3547, -333.826, -98.7274, 1.8 ) }
    dend_10 { pt3dadd( 19.4846, -333.917, -99.5265, 1.92 ) }
    dend_10 { pt3dadd( 19.8964, -334.149, -101.605, 1.68 ) }
    dend_10 { pt3dadd( 20.1715, -334.295, -102.725, 0.24 ) }
    dend_10 { pt3dadd( 20.3878, -334.439, -103.308, 0.24 ) }
    dend_10 { pt3dadd( 20.7238, -334.752, -104.019, 0.24 ) }
    dend_10 { pt3dadd( 20.9324, -334.975, -104.421, 0.72 ) }
    dend_10 { pt3dadd( 21.1355, -335.212, -104.794, 0.96 ) }
    dend_10 { pt3dadd( 21.6531, -335.783, -105.514, 0.84 ) }
    dend_10 { pt3dadd( 22.172, -336.152, -106.263, 0.12 ) }
    dend_10 { pt3dadd( 22.3989, -336.196, -106.641, 0.12 ) }
    dend_10 { pt3dadd( 22.7981, -336.186, -107.324, 0.24 ) }
    dend_10 { pt3dadd( 23.0953, -336.173, -107.818, 0.24 ) }
    dend_10 { pt3dadd( 23.2057, -336.188, -108.157, 0.24 ) }
    dend_10 { pt3dadd( 23.4283, -336.352, -110.037, 0.84 ) }
    dend_10 { pt3dadd( 23.3866, -336.475, -111.75, 1.32 ) }
    dend_10 { pt3dadd( 23.2433, -336.555, -113.23, 2.28 ) }
    dend_10 { pt3dadd( 23.1364, -336.571, -113.936, 2.76 ) }
    dend_10 { pt3dadd( 22.13, -336.555, -119.24, 2.88 ) }
    dend_10 { pt3dadd( 21.4, -336.457, -122.619, 2.16 ) }
    dend_10 { pt3dadd( 20.6192, -336.277, -126.033, 1.08 ) }
    dend_10 { pt3dadd( 20.4303, -336.219, -126.871, 1.08 ) }
    dend_10 { pt3dadd( 20.0433, -336.078, -128.643, 2.04 ) }
    dend_10 { pt3dadd( 19.9495, -336.037, -129.125, 2.04 ) }
    dend_10 { pt3dadd( 18.8139, -335.344, -136.993, 0.6 ) }
    dend_10 { pt3dadd( 18.7201, -335.301, -137.958, 0.48 ) }
    dend_10 { pt3dadd( 18.6154, -335.362, -139.928, 0.96 ) }
    dend_10 { pt3dadd( 18.5645, -335.499, -141.36, 0.12 ) }
    dend_10 { pt3dadd( 18.5622, -335.558, -141.674, 0.12 ) }
    dend_10 { pt3dadd( 18.5626, -335.629, -141.971, 0.12 ) }
    dend_10 { pt3dadd( 18.6611, -336.103, -142.865, 0.6 ) }
    dend_10 { pt3dadd( 18.7178, -336.604, -143.703, 0.12 ) }
    dend_10 { pt3dadd( 18.7744, -336.791, -143.949, 0.12 ) }
    dend_10 { pt3dadd( 19.179, -337.523, -144.851, 1.32 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 6.90534, -303.635, -55.2035, 0.12 ) }
    dend_7 { pt3dadd( 6.98194, -304.715, -55.1468, 0.12 ) }
    dend_7 { pt3dadd( 7.03652, -305.292, -55.1605, 0.12 ) }
    dend_7 { pt3dadd( 7.10101, -305.845, -55.1942, 0.6 ) }
    dend_7 { pt3dadd( 7.14698, -306.177, -55.222, 0.36 ) }
    dend_7 { pt3dadd( 7.24172, -306.726, -55.238, 0.36 ) }
    dend_7 { pt3dadd( 7.35438, -307.295, -55.2672, 0.36 ) }
    dend_7 { pt3dadd( 7.54039, -307.989, -55.3396, 0.36 ) }
    dend_7 { pt3dadd( 7.6198, -308.221, -55.3486, 0.84 ) }
    dend_7 { pt3dadd( 7.74633, -308.543, -55.3391, 0.84 ) }
    dend_7 { pt3dadd( 8.10051, -309.357, -55.2792, 0.24 ) }
    dend_7 { pt3dadd( 8.51504, -310.241, -55.1556, 0.24 ) }
    dend_7 { pt3dadd( 8.80045, -310.816, -55.0482, 0.24 ) }
    dend_7 { pt3dadd( 9.32465, -311.781, -54.85, 0.84 ) }
    dend_7 { pt3dadd( 9.61659, -312.293, -54.7431, 1.44 ) }
    dend_7 { pt3dadd( 10.0863, -313.086, -54.5853, 0.72 ) }
    dend_7 { pt3dadd( 10.4217, -313.649, -54.4638, 0.12 ) }
    dend_7 { pt3dadd( 10.5441, -313.856, -54.4036, 0.12 ) }
    dend_7 { pt3dadd( 10.8384, -314.38, -54.2581, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( 11.0923, -314.896, -54.1097, 0.72 ) }
    dend_7 { pt3dadd( 11.2314, -315.19, -53.983, 0.72 ) }
    dend_7 { pt3dadd( 11.4886, -315.789, -53.6865, 0.12 ) }
    dend_7 { pt3dadd( 11.6262, -316.172, -53.5137, 0.12 ) }
    dend_7 { pt3dadd( 11.7241, -316.451, -53.3876, 0.12 ) }
    dend_7 { pt3dadd( 12.0322, -317.35, -53.0071, 1.44 ) }
    dend_7 { pt3dadd( 12.2544, -317.95, -52.7646, 2.04 ) }
    dend_7 { pt3dadd( 12.4955, -318.576, -52.5223, 2.16 ) }
    dend_7 { pt3dadd( 12.8069, -319.356, -52.2553, 1.44 ) }
    dend_7 { pt3dadd( 13.1137, -320.076, -52.0329, 0.96 ) }
    dend_7 { pt3dadd( 13.35, -320.6, -51.9104, 0.48 ) }
    dend_7 { pt3dadd( 13.5595, -321.071, -51.8406, 0.12 ) }
    dend_7 { pt3dadd( 13.7256, -321.435, -51.8046, 0.12 ) }
    dend_7 { pt3dadd( 13.8643, -321.723, -51.7742, 0.12 ) }
    dend_7 { pt3dadd( 14.1436, -322.284, -51.7219, 0.12 ) }
    dend_7 { pt3dadd( 14.4473, -322.946, -51.6971, 0.12 ) }
    dend_7 { pt3dadd( 14.6292, -323.299, -51.698, 0.84 ) }
    dend_7 { pt3dadd( 14.9866, -323.898, -51.7079, 1.56 ) }
    dend_7 { pt3dadd( 15.2612, -324.3, -51.7146, 1.8 ) }
    dend_7 { pt3dadd( 15.6783, -324.875, -51.7331, 1.32 ) }
    dend_7 { pt3dadd( 16.0238, -325.351, -51.751, 0.12 ) }
    dend_7 { pt3dadd( 16.4306, -325.923, -51.7784, 0.12 ) }
    dend_7 { pt3dadd( 16.776, -326.431, -51.8103, 0.84 ) }
    dend_7 { pt3dadd( 17.1208, -326.968, -51.8516, 0.96 ) }
    dend_7 { pt3dadd( 17.3455, -327.347, -51.8914, 0.12 ) }
    dend_7 { pt3dadd( 17.4937, -327.639, -51.9308, 0.12 ) }
    dend_7 { pt3dadd( 17.7069, -328.138, -52.0319, 0.12 ) }
    dend_7 { pt3dadd( 17.8273, -328.441, -52.0803, 0.12 ) }
    dend_7 { pt3dadd( 18.0158, -328.881, -52.1459, 1.56 ) }
    dend_7 { pt3dadd( 18.2522, -329.375, -52.2018, 1.92 ) }
    dend_7 { pt3dadd( 18.4561, -329.769, -52.2356, 2.28 ) }
    dend_7 { pt3dadd( 18.9908, -330.777, -52.3093, 1.2 ) }
    dend_7 { pt3dadd( 19.4936, -331.742, -52.3804, 0.12 ) }
    dend_7 { pt3dadd( 19.7472, -332.3, -52.4339, 0.12 ) }
    dend_7 { pt3dadd( 19.8687, -332.623, -52.4685, 0.12 ) }
    dend_7 { pt3dadd( 19.9987, -333.039, -52.5204, 1.08 ) }
    dend_7 { pt3dadd( 20.1334, -333.566, -52.5957, 1.56 ) }
    dend_7 { pt3dadd( 20.1998, -334.032, -52.6754, 1.44 ) }
    dend_7 { pt3dadd( 20.2458, -334.647, -52.8325, 0.12 ) }
    dend_7 { pt3dadd( 20.2604, -334.859, -52.8865, 0.12 ) }
    dend_7 { pt3dadd( 20.3218, -335.467, -53.0431, 0.12 ) }
    dend_7 { pt3dadd( 20.3908, -335.986, -53.208, 0.12 ) }
    dend_7 { pt3dadd( 20.5151, -336.756, -53.4737, 0.12 ) }
    dend_7 { pt3dadd( 20.5715, -337.072, -53.5822, 0.84 ) }
    dend_7 { pt3dadd( 20.68, -337.621, -53.7744, 1.2 ) }
    dend_7 { pt3dadd( 20.7459, -337.933, -53.8911, 1.2 ) }
    dend_7 { pt3dadd( 20.9753, -338.886, -54.2723, 0.12 ) }
    dend_7 { pt3dadd( 21.1222, -339.368, -54.4722, 0.12 ) }
    dend_7 { pt3dadd( 21.1911, -339.563, -54.5497, 0.12 ) }
    dend_7 { pt3dadd( 21.3998, -340.114, -54.725, 0.72 ) }
    dend_7 { pt3dadd( 21.5969, -340.616, -54.832, 0.72 ) }
    dend_7 { pt3dadd( 21.7752, -341.044, -54.8775, 0.12 ) }
    dend_7 { pt3dadd( 21.9634, -341.498, -54.8638, 0.12 ) }
    dend_7 { pt3dadd( 22.1039, -341.903, -54.845, 0.12 ) }
    dend_7 { pt3dadd( 22.3281, -342.669, -54.7896, 1.44 ) }
    dend_7 { pt3dadd( 22.4567, -343.193, -54.7407, 1.92 ) }
    dend_7 { pt3dadd( 22.519, -343.533, -54.7196, 1.92 ) }
    dend_7 { pt3dadd( 22.6468, -344.506, -54.6897, 0.12 ) }
    dend_7 { pt3dadd( 22.7643, -345.427, -54.7058, 0.12 ) }
    dend_7 { pt3dadd( 22.7922, -345.592, -54.7199, 0.6 ) }
    dend_7 { pt3dadd( 22.8914, -346.157, -54.8085, 0.72 ) }
    dend_7 { pt3dadd( 23.0236, -346.889, -54.9556, 0.48 ) }
    dend_7 { pt3dadd( 23.1178, -347.426, -55.0766, 0.24 ) }
    dend_7 { pt3dadd( 23.2144, -348.013, -55.2268, 0.36 ) }
    dend_7 { pt3dadd( 23.324, -348.831, -55.4237, 0.36 ) }
    dend_7 { pt3dadd( 23.3491, -349.633, -55.59, 0.36 ) }
    dend_7 { pt3dadd( 23.2993, -350.166, -55.6671, 0.48 ) }
    dend_7 { pt3dadd( 23.2378, -350.61, -55.7179, 0.72 ) }
    dend_7 { pt3dadd( 23.1173, -351.178, -55.774, 0.72 ) }
    dend_7 { pt3dadd( 22.9707, -351.625, -55.8011, 0.72 ) }
    dend_7 { pt3dadd( 22.5194, -352.633, -55.8119, 2.04 ) }
    dend_7 { pt3dadd( 22.1639, -353.344, -55.7751, 3.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.1639, -353.344, -55.7751, 0.12 ) }
    dend_9 { pt3dadd( 23.5984, -353.998, -56.3925, 0.12 ) }
    dend_9 { pt3dadd( 24.0897, -354.197, -56.605, 0.12 ) }
    dend_9 { pt3dadd( 24.1818, -354.231, -56.6469, 0.48 ) }
    dend_9 { pt3dadd( 24.4533, -354.33, -56.7848, 0.48 ) }
    dend_9 { pt3dadd( 24.6593, -354.409, -56.8953, 0.12 ) }
    dend_9 { pt3dadd( 25.1363, -354.597, -57.1556, 0.12 ) }
    dend_9 { pt3dadd( 25.4144, -354.699, -57.3177, 0.72 ) }
    dend_9 { pt3dadd( 25.7327, -354.823, -57.429, 0.72 ) }
    dend_9 { pt3dadd( 26.1495, -355.007, -57.5052, 0.12 ) }
    dend_9 { pt3dadd( 27.0407, -355.448, -57.564, 0.12 ) }
    dend_9 { pt3dadd( 27.4586, -355.672, -57.5546, 0.96 ) }
    dend_9 { pt3dadd( 27.72, -355.815, -57.5284, 0.96 ) }
    dend_9 { pt3dadd( 29.3496, -356.729, -57.2325, 0.12 ) }
    dend_9 { pt3dadd( 29.8714, -357.023, -57.0817, 0.12 ) }
    dend_9 { pt3dadd( 30.1115, -357.157, -56.9786, 0.12 ) }
    dend_9 { pt3dadd( 30.4083, -357.327, -56.792, 0.6 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.1639, -353.344, -55.7751, 2.64 ) }
    dend_8 { pt3dadd( 21.265, -353.936, -55.7294, 2.64 ) }
    dend_8 { pt3dadd( 19.5481, -355.086, -55.4355, 0.24 ) }
    dend_8 { pt3dadd( 19.261, -355.301, -55.3604, 0.24 ) }
    dend_8 { pt3dadd( 18.8884, -355.617, -55.2368, 0.24 ) }
    dend_8 { pt3dadd( 18.0929, -356.385, -54.877, 0.24 ) }
    dend_8 { pt3dadd( 17.8676, -356.635, -54.7674, 0.24 ) }
    dend_8 { pt3dadd( 17.6706, -356.956, -54.5733, 0.24 ) }
    dend_8 { pt3dadd( 17.4494, -357.504, -54.1937, 0.24 ) }
    dend_8 { pt3dadd( 17.3042, -357.925, -53.9375, 1.08 ) }
    dend_8 { pt3dadd( 17.1482, -358.505, -53.6558, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_8 { pt3dadd( 16.9918, -359.197, -53.3986, 1.68 ) }
    dend_8 { pt3dadd( 16.8211, -360.295, -53.035, 0.12 ) }
    dend_8 { pt3dadd( 16.8004, -360.515, -52.9708, 0.12 ) }
    dend_8 { pt3dadd( 16.7854, -360.86, -52.8906, 0.48 ) }
    dend_8 { pt3dadd( 16.7794, -361.315, -52.8257, 0.48 ) }
    dend_8 { pt3dadd( 16.7813, -361.448, -52.8192, 0.12 ) }
    dend_8 { pt3dadd( 16.8357, -362.354, -52.8089, 0.12 ) }
    dend_8 { pt3dadd( 16.8781, -362.814, -52.8402, 0.12 ) }
    dend_8 { pt3dadd( 16.9526, -363.717, -52.9017, 0.12 ) }
    dend_8 { pt3dadd( 16.971, -364.078, -52.9355, 1.32 ) }
    dend_8 { pt3dadd( 16.9735, -364.548, -52.9838, 1.08 ) }
    dend_8 { pt3dadd( 16.9449, -365.002, -53.024, 0.12 ) }
    dend_8 { pt3dadd( 16.8836, -365.471, -53.0546, 0.12 ) }
    dend_8 { pt3dadd( 16.7924, -365.912, -53.0639, 0.12 ) }
    dend_8 { pt3dadd( 16.6581, -366.446, -53.0522, 0.12 ) }
    dend_8 { pt3dadd( 16.4201, -367.281, -52.9974, 0.12 ) }
    dend_8 { pt3dadd( 16.1911, -368.0, -52.9434, 1.2 ) }
    dend_8 { pt3dadd( 16.0039, -368.545, -52.8985, 1.44 ) }
    dend_8 { pt3dadd( 15.7863, -369.152, -52.838, 0.12 ) }
    dend_8 { pt3dadd( 15.507, -369.904, -52.7386, 0.12 ) }
    dend_8 { pt3dadd( 15.3461, -370.36, -52.6531, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_26 nseg = 13
    dend_16 nseg = 9
    dend_14 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 3
    dend_4 nseg = 3
    dend_12 nseg = 7
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_LBC_bf8ea1e366_0_0


