// Cell: cACint209_L4_LBC_852c3c018f_0_0
/*
{
  "id" : "cACint209_L4_LBC_852c3c018f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.162869, -11.0647, -2.58105, 2.87216", "-0.134852, -10.0555, -2.3364, 4.81021", "-0.106835, -9.04625, -2.09174, 6.29865", "-0.0788176, -8.037, -1.84709, 7.78708", "-0.0508004, -7.02776, -1.60244, 9.27866", "-0.0227833, -6.01852, -1.35779, 10.8108", "0.00523389, -5.00927, -1.11314, 12.351", "0.033251, -4.00003, -0.868484, 13.0944", "0.0612682, -2.99079, -0.623832, 13.4108", "0.0892853, -1.98154, -0.37918, 13.7272", "0.117302, -0.972301, -0.134529, 13.7558", "0.14532, 0.0369421, 0.110123, 13.5627", "0.173337, 1.04619, 0.354775, 13.3661", "0.201354, 2.05543, 0.599427, 13.1696", "0.229371, 3.06467, 0.844079, 12.973", "0.257388, 4.07391, 1.08873, 12.4764", "0.285405, 5.08316, 1.33338, 11.5304", "0.313423, 6.0924, 1.57803, 10.5843", "0.34144, 7.10164, 1.82269, 9.63824", "0.369457, 8.11089, 2.06734, 7.56191", "0.397474, 9.12013, 2.31199, 4.12248" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-1.32254, 0.627652, -22.8114, 1.33", "-2.07766, 3.78104, -31.9316, 0.67", "-2.57558, 5.45647, -35.8718, 0.67", "-3.44585, 8.68921, -42.2729, 0.67", "-4.07635, 11.4838, -47.4221, 0.67", "-4.9227, 16.9018, -57.2857, 0.67", "-5.3272, 20.5501, -63.8203, 0.33", "-5.19259, 21.9251, -66.3244, 0.33", "-4.65068, 24.3806, -70.325, 1.33", "-3.32205, 29.3717, -76.398, 0.33", "-2.68007, 31.1506, -78.1595, 0.33", "-2.37743, 31.5989, -78.578, 0.67", "-0.0143326, 34.7369, -80.8927, 0.33", "1.44941, 36.7022, -82.328, 2.0", "5.26967, 42.4833, -85.9167, 0.33", "6.29223, 44.4664, -86.9629, 1.33", "9.35019, 52.612, -91.6385, 0.33", "9.78229, 54.2848, -92.6331, 0.33", "10.3066, 57.6477, -95.7407, 1.33", "10.7593, 60.7172, -99.6792, 0.33", "11.0494, 62.6504, -102.502, 0.33", "11.569, 65.2697, -106.619, 0.33", "12.0004, 66.6923, -109.062, 2.0", "15.986, 74.7625, -125.735, 0.33", "16.9105, 76.2454, -129.332, 1.33", "18.3097, 78.1588, -134.57, 0.33", "19.4183, 79.6241, -138.431, 1.33", "20.7594, 81.7151, -143.24, 0.33", "22.3048, 84.5773, -149.113, 1.33", "24.411, 90.3339, -157.767, 0.33", "24.661, 91.3579, -159.133, 0.67", "25.3257, 95.6245, -164.298, 0.33", "25.436, 99.4897, -167.974, 0.33", "25.3353, 100.881, -169.028, 1.33", "24.5979, 106.904, -172.063, 0.33", "24.3012, 108.53, -172.609, 0.33", "24.1916, 108.984, -172.731, 0.67", "22.8815, 113.566, -173.601, 0.33", "22.5961, 114.696, -173.881, 0.67", "21.1656, 122.099, -175.726, 0.33", "21.1029, 123.013, -176.028, 1.33", "21.2899, 127.221, -177.49, 0.33", "21.4679, 128.734, -178.132, 1.33", "22.7228, 135.694, -181.501, 0.33", "23.5722, 138.929, -183.17, 1.33", "26.1575, 146.553, -187.728, 0.33", "27.219, 149.697, -189.793, 1.33", "29.086, 155.435, -193.81, 0.33", "29.4206, 156.537, -194.561, 0.67", "30.8865, 162.204, -198.213, 0.33", "31.3999, 164.456, -199.791, 1.33", "32.347, 169.531, -203.38, 0.33", "32.5627, 170.735, -204.288, 0.67", "33.5542, 175.715, -207.669, 0.33", "33.7531, 177.036, -208.613, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.70254, -6.0246, -3.1514, 2.0", "-7.42653, -7.25361, -1.22844, 1.33", "-10.9568, -9.77034, 2.70933, 1.33", "-13.2143, -11.3796, 5.22735, 1.33", "-15.3053, -12.8703, 7.55969, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.99746, -5.6146, -19.3514, 2.0", "0.284883, -6.9199, -19.3514, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.82254, -11.5083, -5.4014, 1.33", "-3.0926, -10.2134, -7.5982, 1.33", "-5.36584, -8.68375, -9.95566, 1.33", "-10.5065, -5.38546, -14.9984, 1.33", "-12.9488, -3.97809, -17.0321, 1.33", "-16.9627, -1.66503, -20.3745, 1.33", "-19.723, -0.0744179, -22.673, 0.67", "-20.1682, 0.250677, -23.0718, 0.67", "-22.0508, 1.91918, -24.8934, 1.33", "-26.8916, 6.48033, -28.9865, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.00253968, -9.70434, 5.9486, 2.0", "2.90861, -11.9614, 4.40909, 1.33", "6.34947, -14.6291, 2.58945, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.05746, 3.8359, 19.0286, 1.33", "3.48105, 5.10555, 19.0286, 1.33", "7.02428, 6.96175, 19.0286, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.92746, 9.23765, -8.1714, 2.0", "5.50529, 10.3693, -8.1714, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.397474, 9.12013, 2.31199, 0.67", "0.813722, 24.1144, 2.31199, 0.67", "1.22997, 39.1086, 2.31199, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-15.3053, -12.8703, 7.55969, 0.67", "-19.3976, -14.1134, 6.87079, 0.67", "-21.4019, -14.7329, 6.78677, 0.67", "-23.0358, -15.2337, 6.77642, 0.67", "-24.4859, -15.7066, 6.7394, 0.67", "-26.3931, -16.3347, 6.66366, 0.67", "-28.0346, -16.9237, 6.59313, 0.67", "-29.9847, -17.7512, 6.59491, 0.67", "-31.9015, -18.7036, 6.64307, 0.67", "-33.3958, -19.5265, 6.58061, 0.67", "-35.9895, -21.303, 6.30058, 0.67", "-36.8824, -22.0272, 6.07867, 0.67", "-37.9726, -23.0298, 5.67439, 0.67", "-38.619, -23.6415, 5.36667, 0.67", "-40.1464, -25.1114, 4.61456, 0.67", "-41.434, -26.3614, 3.94911, 0.67", "-42.8502, -27.7259, 3.19571, 0.67", "-43.9841, -28.7478, 2.65638, 0.67", "-45.7125, -30.0708, 2.12138, 1.33", "-47.0173, -31.0794, 1.76333, 0.33", "-47.5413, -31.4977, 1.65346, 0.33", "-49.3707, -32.9088, 1.40616, 0.67", "-50.6102, -33.9252, 1.34945, 0.67", "-53.718, -36.7355, 1.34375, 0.67", "-55.4939, -38.4195, 1.35903, 0.67", "-56.7651, -39.6366, 1.3821, 0.33", "-57.8519, -40.6599, 1.40192, 0.67", "-59.0429, -41.8257, 1.43097, 0.67", "-59.7541, -42.5365, 1.44971, 0.33", "-60.5221, -43.3504, 1.47739, 0.33", "-61.6722, -44.3762, 1.57183, 0.67", "-62.1827, -44.8119, 1.59687, 0.67", "-63.0085, -45.467, 1.60529, 0.33", "-63.6381, -45.8912, 1.60107, 0.67", "-66.7266, -47.8584, 1.55985, 0.33", "-67.8387, -48.547, 1.53958, 0.33", "-68.7586, -49.1026, 1.51754, 0.33", "-69.4316, -49.4735, 1.49575, 0.67", "-70.7695, -50.1364, 1.44031, 0.33", "-71.7422, -50.6053, 1.39554, 0.33", "-72.5979, -50.9574, 1.3545, 0.67", "-73.3632, -51.2644, 1.32328, 0.67", "-74.9013, -51.8808, 1.19252, 0.33", "-75.4384, -52.1092, 1.14652, 0.33", "-76.1329, -52.4166, 1.08519, 0.33", "-78.539, -53.3665, 0.847037, 0.67", "-80.27, -54.0324, 0.661752, 0.33", "-81.4168, -54.4328, 0.524703, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-15.3053, -12.8703, 7.55969, 0.67", "-16.3791, -12.2844, 9.38673, 0.67", "-17.136, -11.6295, 10.8841, 0.67", "-20.2987, -8.61856, 16.8087, 0.67", "-21.2416, -7.89783, 18.4115, 0.67", "-23.044, -6.71661, 21.0899, 0.67", "-24.8686, -5.52072, 23.8016, 0.67", "-26.817, -4.21662, 26.6465, 0.67", "-27.9583, -3.34015, 28.3491, 0.67", "-30.2552, -1.18786, 31.3341, 0.33", "-31.8675, -0.160673, 33.2251, 0.33", "-36.3039, 3.39004, 41.4184, 0.33", "-41.8344, 6.95147, 48.911, 0.33", "-48.0208, 10.6348, 55.8109, 0.33", "-54.0988, 13.5771, 63.1326, 0.33", "-58.4622, 17.7229, 71.0962, 0.33", "-63.1546, 22.7867, 78.3345, 0.33", "-68.8938, 28.2242, 84.4761, 0.33", "-73.981, 32.4007, 91.9812, 0.33", "-77.9745, 34.8077, 100.776, 0.33", "-82.4462, 36.075, 109.565, 0.33", "-85.5292, 37.6771, 118.884, 0.33", "-88.0905, 37.6989, 128.486, 0.33", "-92.5609, 35.8437, 137.174, 0.33", "-95.6383, 34.2807, 146.497, 0.33", "-99.3796, 31.889, 155.401, 0.33", "-101.232, 28.5551, 164.604, 0.33", "-101.743, 22.7742, 172.763, 0.33", "-101.933, 15.4747, 179.683, 0.33", "-102.515, 9.76906, 187.888, 0.33", "-102.902, 4.20009, 196.193, 0.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.284883, -6.9199, -19.3514, 1.33", "-7.97853, -9.99413, -17.3262, 1.33", "-11.9629, -11.4764, -16.3497, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.284883, -6.9199, -19.3514, 0.67", "-5.72384, -14.4748, -15.1287, 0.67", "-9.70173, -19.4763, -12.3331, 0.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-26.8916, 6.48033, -28.9865, 0.67", "-28.7745, 7.23808, -29.5125, 0.67", "-29.5771, 7.50965, -29.8084, 1.33", "-32.2237, 8.32047, -30.5429, 0.67", "-33.6342, 8.7154, -30.8722, 0.67", "-34.786, 8.99553, -31.2826, 0.33", "-36.5858, 9.4225, -32.0773, 0.67", "-39.4133, 9.87156, -33.4063, 0.67", "-41.4523, 10.1458, -34.6048, 0.33", "-42.081, 10.2416, -35.0102, 0.33", "-45.7774, 10.6304, -37.4022, 1.33", "-46.8553, 10.7566, -38.218, 0.67", "-48.903, 11.0562, -40.05, 0.67", "-50.985, 11.4093, -42.023, 1.33", "-52.2865, 11.6938, -43.2934, 0.33", "-53.0811, 11.9449, -44.0431, 0.33", "-56.0221, 13.0405, -46.595, 0.67", "-58.2982, 14.0459, -48.6138, 0.33", "-59.4185, 14.6625, -49.5889, 0.67", "-60.4616, 15.2809, -50.4185, 0.33", "-62.7528, 16.8016, -52.23, 0.67", "-65.2686, 18.4802, -53.9551, 0.33", "-66.3948, 19.187, -54.5726, 1.33", "-68.9359, 20.4902, -55.6836, 0.33", "-69.4345, 20.6808, -55.8677, 0.67", "-71.5467, 21.1687, -56.4281, 0.33", "-74.5356, 21.534, -56.8259, 0.33", "-76.0005, 21.6317, -56.8959, 1.33", "-80.1769, 21.6418, -57.206, 0.33", "-80.8882, 21.6118, -57.2674, 0.67", "-83.3799, 21.5161, -57.5105, 0.33", "-84.577, 21.4954, -57.6881, 0.67", "-85.7865, 21.584, -57.983, 0.33", "-88.6952, 22.1076, -58.8949, 0.67", "-89.6933, 22.4359, -59.3109, 0.33", "-90.3715, 22.7004, -59.6051, 0.67", "-92.9223, 23.8914, -60.761, 0.33", "-93.3261, 24.1303, -60.9487, 1.33", "-94.606, 25.0477, -61.4715, 0.33", "-95.4044, 25.7162, -61.7274, 0.67", "-96.1514, 26.4127, -61.9768, 0.33", "-96.5286, 26.8026, -62.1262, 0.67", "-99.0876, 29.5798, -63.2013, 0.33", "-99.6725, 30.2293, -63.4581, 1.33", "-100.632, 31.2768, -63.8931, 0.33", "-101.013, 31.6762, -64.0479, 0.67", "-104.196, 34.8508, -65.0917, 0.33", "-104.558, 35.1908, -65.1786, 0.67", "-106.824, 37.0627, -65.4751, 0.33", "-107.277, 37.3924, -65.5014, 0.67", "-109.703, 38.9417, -65.4665, 0.33", "-110.802, 39.5375, -65.3771, 0.67", "-112.023, 40.0738, -65.1832, 0.33", "-113.404, 40.6363, -64.9591, 1.33", "-115.191, 41.2726, -64.674, 0.33", "-115.702, 41.4915, -64.6036, 0.67", "-118.593, 42.8801, -64.2546, 0.33", "-119.295, 43.2511, -64.1887, 0.67", "-122.035, 44.811, -63.9463, 0.33", "-122.711, 45.2341, -63.8911, 0.67", "-127.485, 48.3631, -63.5594, 0.33", "-127.695, 48.4999, -63.5553, 1.33", "-130.278, 50.1704, -63.6188, 0.33", "-131.048, 50.6454, -63.669, 0.67", "-132.425, 51.4355, -63.8247, 0.33", "-133.414, 51.9494, -63.936, 0.67", "-137.567, 53.8296, -64.429, 0.33", "-138.265, 54.1111, -64.503, 0.67", "-140.808, 55.0109, -64.7335, 0.33", "-141.534, 55.2324, -64.7863, 0.67", "-145.212, 56.2058, -64.9598, 0.33", "-145.549, 56.2909, -64.9567, 1.33", "-147.521, 56.7472, -64.8218, 1.33", "-149.695, 57.2616, -64.6586, 0.33", "-150.386, 57.4209, -64.5996, 0.67", "-152.821, 57.96, -64.3806, 0.33", "-154.586, 58.2425, -64.2455, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-26.8916, 6.48033, -28.9865, 0.67", "-29.2677, 0.44633, -39.8868, 0.67", "-30.2691, -1.65512, -43.4992, 0.67", "-31.6185, -4.25874, -47.0795, 0.33", "-32.223, -5.36167, -48.3198, 2.0", "-33.6336, -7.96229, -50.8195, 0.33", "-35.3023, -10.7877, -53.1288, 0.33", "-36.1056, -11.8926, -53.5589, 0.33", "-39.4068, -15.8551, -54.7879, 0.67", "-41.1193, -17.6445, -55.3328, 0.33", "-42.3036, -18.6652, -55.7092, 0.33", "-45.7399, -20.9253, -56.7103, 2.0", "-48.1739, -22.2067, -57.3258, 0.33", "-49.9226, -22.8323, -57.9402, 0.33", "-56.2413, -23.9166, -60.7084, 0.67", "-58.9056, -24.1989, -61.9813, 1.33", "-61.1056, -24.2753, -63.1575, 0.33", "-62.3009, -24.2902, -63.8896, 0.67", "-67.103, -24.2192, -66.9621, 0.33", "-69.9359, -24.2489, -68.7799, 1.33", "-72.898, -24.2663, -70.6452, 0.33", "-75.7529, -24.3577, -72.5092, 0.67", "-79.1443, -24.6039, -74.8818, 0.33", "-80.9168, -24.8535, -76.2814, 0.33", "-81.994, -25.0702, -77.1681, 0.33", "-83.6619, -25.611, -78.8035, 0.67", "-86.1253, -26.7451, -81.5825, 0.33", "-88.6502, -28.2819, -84.613, 0.67", "-92.1235, -30.524, -89.0553, 0.33", "-93.0379, -31.0498, -90.326, 0.67", "-94.7856, -31.8145, -92.6432, 0.33", "-96.1748, -32.358, -94.4474, 0.33", "-96.9821, -32.6222, -95.3431, 0.33", "-98.8515, -33.1504, -97.0935, 1.33", "-104.695, -34.6856, -102.053, 0.33", "-107.335, -35.3908, -104.264, 0.67", "-111.813, -36.6868, -107.871, 0.33", "-113.863, -37.3457, -109.586, 1.33", "-116.434, -38.3059, -111.761, 0.33", "-118.153, -39.0346, -113.177, 0.33", "-120.845, -40.3288, -115.431, 0.67", "-124.537, -41.8728, -118.569, 0.33", "-125.781, -42.1942, -119.57, 0.67", "-127.222, -42.3628, -120.864, 0.33", "-128.247, -42.3458, -121.811, 2.0", "-133.023, -41.9032, -126.257, 0.33", "-136.171, -41.4311, -129.254, 0.67", "-139.207, -40.6848, -132.25, 0.33", "-142.344, -39.8886, -135.38, 0.33", "-142.596, -39.8203, -135.666, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.34947, -14.6291, 2.58945, 0.67", "7.47059, -17.8622, 3.75278, 0.67", "8.72831, -22.2193, 5.13972, 0.67", "10.35, -29.0876, 6.92179, 0.67", "11.0908, -34.082, 8.11935, 0.67", "11.4498, -37.4247, 8.86903, 0.67", "11.5527, -38.6756, 9.13409, 0.67", "11.5812, -41.0706, 9.56234, 0.67", "11.5899, -45.6712, 10.3112, 0.67", "11.6685, -50.9762, 10.9024, 0.67", "11.8943, -54.1205, 11.4444, 0.67", "12.0681, -55.3406, 11.7501, 0.67", "12.7413, -58.6005, 12.7254, 0.67", "13.9776, -62.646, 14.1641, 0.67", "15.9138, -67.7917, 16.2252, 0.67", "17.5949, -71.355, 17.7441, 0.67", "19.3498, -74.8577, 19.4207, 0.67", "19.9401, -75.9637, 20.0111, 0.67", "20.7828, -77.4431, 20.9541, 0.33", "22.9852, -85.8797, 24.1592, 0.33", "24.592, -94.8584, 26.0556, 0.33", "24.4141, -104.074, 27.4752, 0.33", "23.6984, -112.798, 30.6115, 0.33", "23.6486, -121.473, 33.955, 0.33", "24.4255, -129.073, 39.1698, 0.33", "24.0471, -136.25, 44.9638, 0.33", "24.9138, -141.855, 52.1835, 0.33", "26.1891, -148.555, 58.3815, 0.33", "27.163, -154.774, 65.0906, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.34947, -14.6291, 2.58945, 1.33", "5.84945, -16.557, 2.65651, 1.33", "4.66285, -20.9334, 2.81783, 1.33", "2.61839, -28.3542, 3.10032, 0.67", "0.383227, -36.1436, 3.53181, 0.67", "-0.695679, -39.8191, 3.77812, 0.67", "-1.56718, -43.0036, 4.01111, 0.67", "-2.09817, -45.4742, 4.25418, 0.67", "-2.41637, -47.2744, 4.52187, 0.67", "-2.75945, -49.7863, 5.02986, 0.67", "-2.94931, -52.1255, 5.58667, 0.67", "-3.26028, -56.0017, 6.39535, 0.67", "-3.66111, -63.5466, 8.11216, 0.67", "-3.873, -67.9389, 9.13554, 0.67", "-3.97071, -69.4119, 9.51205, 0.67", "-4.23925, -73.0905, 10.474, 0.67", "-4.87619, -78.223, 11.8557, 0.67", "-5.79361, -82.732, 12.9793, 0.67", "-6.45042, -85.4278, 13.6039, 0.67", "-7.3923, -89.5774, 14.5395, 0.67", "-7.99055, -92.0237, 15.1435, 0.67", "-8.74401, -94.8758, 15.9435, 0.33", "-9.56816, -98.3523, 17.016, 0.33", "-10.1049, -100.222, 17.3321, 0.33", "-10.8467, -102.994, 17.7174, 0.33", "-13.3008, -109.894, 19.7384, 0.33", "-15.7736, -116.424, 22.6946, 0.33", "-19.3836, -121.833, 26.5112, 0.33", "-21.9605, -126.57, 31.7506, 0.33", "-23.7155, -130.073, 38.1291, 0.33", "-25.1572, -133.867, 44.4267, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "7.02428, 6.96175, 19.0286, 0.67", "8.811, 2.98633, 19.3307, 0.67", "10.9204, -1.17401, 20.7044, 0.67", "12.1446, -2.99164, 21.7817, 1.33", "14.6043, -5.76507, 24.0688, 1.33", "15.7138, -6.62956, 25.018, 0.67", "18.2546, -8.2167, 27.0183, 0.67", "19.1874, -8.49016, 28.1854, 0.67", "20.2498, -8.11624, 29.4533, 0.33", "20.7522, -7.81372, 29.9272, 0.67", "22.1548, -6.89148, 30.3592, 0.33", "25.2946, -5.26031, 30.7493, 0.33", "32.4633, -11.6525, 34.2925, 0.33", "38.2063, -18.8058, 38.8905, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "7.02428, 6.96175, 19.0286, 1.33", "5.61233, 8.73312, 18.6156, 1.33", "3.99632, 11.1117, 18.0658, 0.67", "2.10252, 14.1132, 17.3907, 0.67", "0.134033, 17.4945, 16.474, 0.67", "-1.43632, 20.6475, 15.5694, 0.33", "-2.68709, 23.5261, 14.737, 0.67", "-3.27293, 25.5351, 14.0831, 0.33", "-3.50438, 26.8003, 13.652, 0.33", "-3.73557, 29.6632, 12.5237, 0.67", "-3.65212, 32.3237, 11.4085, 0.33", "-3.47814, 34.0716, 10.6222, 0.67", "-3.09964, 36.9142, 9.35772, 0.33", "-2.91018, 38.1345, 8.78542, 0.33", "-2.45627, 40.5741, 7.68888, 0.33", "-2.37646, 41.1018, 7.50628, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.50529, 10.3693, -8.1714, 1.33", "5.05149, 15.0199, -11.1195, 1.33", "4.44744, 21.2101, -15.0435, 1.33", "3.49037, 31.018, -21.2609, 1.33", "3.21034, 33.8877, -23.0801, 1.33", "2.41736, 42.014, -28.2315, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.50529, 10.3693, -8.1714, 1.33", "7.47812, 10.469, -8.3648, 1.33", "11.4868, 10.8529, -8.83611, 1.33", "14.3674, 11.3129, -8.96818, 1.33", "17.1859, 11.9462, -9.00391, 1.33", "23.4263, 13.7513, -9.33125, 0.67", "26.7137, 14.7446, -9.59947, 0.67", "29.6498, 15.7425, -10.0617, 0.67", "33.1948, 17.0746, -10.9576, 0.67", "34.7254, 17.8192, -11.3796, 0.67", "38.0305, 19.8512, -12.6102, 0.67", "41.0466, 21.9278, -14.019, 0.67", "44.3801, 24.271, -15.9937, 0.67", "47.5277, 26.4766, -18.0963, 0.67", "50.8171, 28.7926, -20.4393, 0.67", "55.6559, 32.2075, -23.7813, 0.67", "58.5, 34.2999, -25.6594, 0.67", "60.3741, 35.7592, -26.9411, 0.67", "61.0112, 36.2154, -27.356, 0.33", "63.0871, 37.4258, -28.5672, 0.33", "64.5542, 37.9276, -29.2727, 1.33", "66.2417, 38.1054, -29.8672, 0.67", "67.4328, 38.0812, -30.3734, 0.67", "69.2259, 37.9133, -31.2811, 0.33", "71.9348, 37.5733, -32.7356, 0.33", "72.6355, 37.5074, -33.1645, 1.33", "76.3907, 37.4169, -35.6483, 0.33", "77.7579, 37.4637, -36.5482, 0.67", "79.2327, 37.618, -37.486, 0.33", "80.2358, 37.7993, -38.122, 1.33", "83.6627, 38.742, -40.1908, 0.33", "83.9037, 38.8248, -40.3286, 0.67", "86.1523, 39.8438, -41.5296, 0.33", "86.8656, 40.2219, -41.8894, 1.33", "89.4934, 41.8465, -43.1485, 0.33", "92.0582, 43.6891, -44.3337, 0.33", "93.6572, 44.8482, -44.9701, 0.33", "95.3044, 46.0011, -45.6506, 1.33", "98.4392, 48.2406, -47.0107, 0.33", "98.6749, 48.4003, -47.109, 1.33", "101.517, 49.9622, -48.1861, 0.33", "104.196, 51.0276, -49.1735, 0.67", "107.409, 51.9093, -50.3406, 0.33", "108.24, 52.042, -50.6319, 1.33", "110.398, 52.1354, -51.3307, 0.33", "113.295, 52.1223, -52.1048, 0.33", "114.976, 52.039, -52.5346, 0.67", "116.942, 51.9804, -53.146, 0.33", "117.555, 51.9651, -53.3504, 1.33", "120.571, 51.8183, -54.7136, 0.33", "121.492, 51.7716, -55.2218, 1.33", "125.404, 51.7452, -57.8977, 0.33", "127.074, 51.7698, -59.1856, 0.33", "127.388, 51.777, -59.4386, 0.67", "131.476, 51.8897, -62.8663, 0.33", "131.969, 51.9083, -63.2788, 0.67", "134.892, 51.8961, -65.6341, 0.33", "136.392, 51.8515, -66.7594, 0.33", "138.366, 51.7705, -68.0995, 0.33", "140.542, 51.7034, -69.5695, 0.33", "142.081, 51.729, -70.5279, 0.67", "145.56, 51.5935, -72.6668, 0.33", "145.56, 51.5935, -72.6668, 0.67", "147.061, 51.407, -73.5382, 0.33", "149.128, 51.1115, -74.8142, 0.67", "150.689, 50.8476, -75.7571, 0.33", "152.221, 50.4843, -76.7085, 0.33", "154.209, 49.9741, -77.8312, 0.33", "155.049, 49.7371, -78.3083, 0.67", "158.275, 48.6749, -80.1617, 0.33", "158.617, 48.5462, -80.3477, 0.67", "161.825, 47.2141, -82.2765, 0.33", "162.488, 46.9581, -82.7041, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.22997, 39.1086, 2.31199, 0.67", "1.64622, 54.1028, 2.31199, 0.67", "2.06247, 69.097, 2.31199, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-11.9629, -11.4764, -16.3497, 1.33", "-15.5722, -15.835, -28.6411, 1.33", "-16.5281, -17.4082, -31.9542, 0.67", "-17.5657, -18.8299, -34.7954, 0.67", "-17.9919, -19.3185, -35.7912, 0.67", "-20.5741, -21.7913, -40.8032, 0.67", "-21.3473, -22.5173, -42.3756, 1.33", "-24.9214, -25.4076, -48.1446, 0.33", "-26.808, -26.9073, -51.0948, 1.33", "-27.7943, -27.6045, -52.5467, 0.67", "-30.4845, -29.1384, -56.2791, 2.0", "-34.1336, -30.5816, -60.8515, 0.33", "-37.0828, -31.5236, -64.4797, 0.33", "-38.3502, -31.8378, -65.7942, 1.33", "-42.5936, -32.9713, -69.7547, 0.33", "-43.0087, -33.0866, -70.0571, 0.67", "-45.488, -33.8711, -71.4234, 0.33", "-46.6817, -34.2903, -71.8889, 0.67", "-51.1121, -36.0003, -73.4638, 0.33", "-52.8214, -36.7303, -73.9524, 2.0", "-56.4576, -38.3471, -75.0062, 0.67", "-59.8125, -39.8591, -76.5826, 0.67", "-61.6519, -40.7644, -77.7709, 0.33", "-63.1113, -41.5527, -79.2829, 1.33", "-64.3649, -42.2065, -81.2124, 0.33", "-66.4399, -43.3363, -85.3274, 0.67", "-68.2619, -44.3271, -89.3452, 0.33", "-69.2166, -44.7718, -91.449, 1.33", "-71.7209, -45.8386, -97.4652, 0.33", "-73.4217, -46.5153, -101.527, 0.33", "-75.2351, -47.0595, -105.574, 0.67", "-77.1155, -47.4659, -109.067, 0.33", "-78.4905, -47.6139, -111.15, 0.33", "-81.2926, -47.5533, -114.647, 0.33", "-83.0677, -47.1997, -116.19, 0.33", "-84.6006, -46.8263, -117.235, 0.33", "-86.0852, -46.2957, -118.071, 1.33", "-88.498, -45.2889, -119.53, 0.33", "-90.261, -44.6522, -120.607, 0.33", "-93.3795, -43.515, -122.497, 0.33", "-96.0244, -42.3075, -124.733, 0.33", "-97.1734, -41.6986, -126.023, 0.67", "-100.212, -39.9214, -130.079, 0.33", "-100.923, -39.4772, -131.13, 0.67", "-101.89, -38.8775, -132.599, 0.33", "-104.593, -37.6423, -137.047, 2.0", "-106.442, -36.7707, -140.078, 0.33", "-107.245, -36.4867, -141.347, 1.33", "-109.266, -35.886, -144.29, 0.33", "-109.739, -35.7731, -144.964, 0.67", "-114.382, -35.2237, -150.79, 0.33", "-116.545, -35.2281, -153.365, 1.33", "-118.258, -35.4124, -155.444, 0.33", "-119.526, -35.6357, -157.2, 0.33", "-121.915, -36.1456, -160.569, 1.33", "-123.378, -36.3697, -162.571, 0.33", "-126.308, -36.7162, -166.564, 1.33", "-128.103, -36.9109, -169.202, 0.67", "-131.014, -36.9779, -173.55, 0.33", "-132.555, -37.0032, -175.766, 0.67", "-134.086, -36.9591, -177.743, 0.67", "-137.551, -36.6439, -182.401, 0.33", "-138.268, -36.4941, -183.32, 0.67", "-139.644, -36.0646, -185.211, 0.33", "-140.645, -35.7713, -186.518, 0.67", "-141.897, -35.3992, -188.24, 0.33", "-143.932, -34.8438, -190.898, 0.67", "-145.017, -34.4681, -192.363, 0.33", "-145.715, -34.2675, -193.274, 1.33", "-149.033, -33.4316, -197.807, 0.33", "-150.336, -33.1296, -199.517, 0.33", "-151.021, -33.0059, -200.38, 0.67", "-153.587, -32.8112, -203.361, 0.33", "-155.765, -32.8893, -205.862, 0.67", "-158.433, -33.1239, -208.8, 0.33", "-159.897, -33.4583, -210.649, 0.33", "-160.114, -33.5278, -210.94, 0.67", "-162.227, -34.4572, -213.724, 0.33", "-163.079, -34.9589, -214.871, 0.67", "-164.12, -35.7765, -216.675, 0.67", "-167.661, -38.8358, -223.172, 0.33", "-168.561, -39.6763, -225.025, 0.33", "-169.849, -40.9332, -227.849, 0.33", "-170.824, -42.0, -230.251, 0.67", "-172.756, -44.3166, -235.65, 0.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.9629, -11.4764, -16.3497, 1.33", "-13.4689, -11.387, -17.984, 1.33", "-15.4081, -10.8715, -20.1226, 0.67", "-16.1278, -10.6223, -20.8321, 1.33", "-18.8991, -9.91409, -23.3068, 1.33", "-20.2829, -9.40471, -24.3787, 0.67", "-22.0513, -8.78516, -25.6042, 0.67", "-23.789, -8.25233, -26.7209, 0.67", "-25.2145, -7.84403, -27.7644, 1.33", "-26.839, -7.186, -29.0401, 0.67", "-29.5709, -5.73266, -31.4343, 0.33", "-30.5405, -5.18349, -32.3766, 0.33", "-33.0132, -3.80572, -34.8901, 1.33", "-35.8574, -2.15453, -38.0493, 0.67", "-37.1184, -1.30936, -39.5667, 0.33", "-38.492, -0.25513, -41.2984, 1.33", "-39.3228, 0.413534, -42.3958, 0.33", "-39.7325, 0.779054, -42.9067, 1.33", "-41.6538, 2.63822, -44.8745, 0.33", "-43.242, 4.21766, -46.1105, 0.33", "-44.0827, 4.99357, -46.6344, 0.33", "-44.5769, 5.42006, -46.9259, 1.33", "-45.9644, 6.61729, -47.7909, 0.33", "-47.5092, 7.90533, -48.7309, 0.67", "-48.7967, 8.88599, -49.5928, 0.33", "-50.0527, 9.74831, -50.6488, 1.33", "-52.387, 11.1886, -52.8662, 0.33", "-52.6096, 11.3304, -53.0996, 0.67", "-53.5516, 11.9776, -54.2119, 0.33", "-55.0428, 13.1313, -56.3346, 0.67", "-55.7467, 13.8245, -57.4724, 0.33", "-55.9928, 14.1502, -57.8605, 0.67", "-56.9476, 15.7522, -59.2628, 0.33", "-57.2845, 16.376, -59.8133, 0.67", "-58.1778, 18.2098, -61.3734, 0.33", "-58.4216, 18.7394, -61.7897, 0.67", "-59.4073, 20.8533, -63.7321, 0.33", "-59.5341, 21.0878, -63.9745, 1.33", "-60.7494, 23.0007, -66.0548, 0.33", "-61.0022, 23.3438, -66.4238, 0.33", "-61.0022, 23.3438, -66.4238, 0.67", "-63.1956, 25.723, -68.7911, 0.33", "-63.649, 26.18, -69.2082, 0.67", "-65.2259, 27.729, -70.4025, 0.33", "-65.7023, 28.2488, -70.6799, 0.67", "-66.8704, 29.6384, -71.2916, 0.33", "-67.1961, 30.0698, -71.439, 0.67", "-68.6094, 32.2073, -71.9029, 0.33", "-68.8733, 32.6973, -72.0005, 1.33", "-70.1739, 35.7078, -72.5385, 0.33", "-70.2478, 35.9431, -72.5929, 0.67", "-70.4562, 36.9359, -72.8671, 0.33", "-70.5524, 37.4619, -73.0405, 0.67", "-70.7742, 38.9468, -73.6262, 0.33", "-70.8386, 39.2667, -73.7724, 1.33", "-71.5479, 41.7572, -75.1679, 0.33", "-71.7221, 42.2228, -75.4327, 1.33", "-72.3178, 43.4706, -76.106, 0.33", "-72.4297, 43.676, -76.1979, 0.67", "-73.0716, 44.6963, -76.5616, 0.33", "-73.0716, 44.6963, -76.5616, 0.67", "-74.0492, 45.9756, -76.6826, 0.33", "-74.6821, 46.8503, -76.7374, 0.67", "-75.7388, 48.5966, -76.7626, 0.33", "-75.8628, 48.8145, -76.7605, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-9.70173, -19.4763, -12.3331, 0.67", "-11.3394, -23.4, -16.8128, 0.67", "-12.2322, -25.7776, -19.2811, 0.67", "-13.5629, -29.4639, -23.0377, 0.67", "-14.3146, -31.6118, -25.1915, 1.33", "-16.3491, -37.0706, -30.9113, 0.67", "-17.1985, -39.1541, -33.182, 0.33", "-17.8319, -40.7088, -34.9554, 0.33", "-18.8259, -42.9346, -37.7838, 2.0", "-20.6392, -46.6414, -42.6656, 0.67", "-22.0837, -49.3642, -46.3433, 0.33", "-23.7697, -52.1835, -49.9191, 1.33", "-26.3405, -55.9948, -54.5977, 0.33", "-26.6503, -56.4468, -55.135, 0.67", "-27.5808, -57.7963, -56.5464, 0.33", "-28.4608, -59.0549, -57.6395, 0.67", "-30.2141, -61.7101, -59.4511, 0.33", "-31.8779, -64.2906, -60.8611, 0.33", "-33.4384, -66.7549, -62.0422, 0.67", "-34.0945, -67.8481, -62.6403, 0.33", "-34.6996, -68.9849, -63.3, 0.67", "-35.9602, -71.56, -64.891, 0.33", "-36.2371, -72.1493, -65.289, 1.33", "-37.3921, -74.6899, -66.9615, 0.33", "-37.5764, -75.0884, -67.179, 0.67", "-38.6504, -77.3574, -68.4678, 0.33", "-39.5928, -79.1289, -69.3997, 1.33", "-40.8037, -81.1169, -70.5027, 0.33", "-41.1563, -81.6142, -70.8009, 0.67", "-42.7716, -83.6033, -72.1526, 0.33", "-43.8611, -84.8488, -73.059, 0.67", "-46.3512, -87.4065, -75.1374, 0.33", "-48.2077, -89.2296, -76.6358, 0.67", "-49.9077, -90.7402, -77.9801, 0.33", "-51.4183, -92.0492, -79.2555, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.70173, -19.4763, -12.3331, 0.33", "-10.2767, -22.5298, -12.1519, 0.33", "-10.5598, -25.4213, -11.9963, 0.67", "-10.6633, -26.7437, -11.9339, 0.67", "-10.9832, -30.7906, -11.6026, 0.67", "-11.1981, -34.2068, -11.3191, 0.67", "-11.6983, -39.3917, -10.7507, 0.67", "-12.3794, -44.2034, -10.0707, 0.67", "-12.8145, -46.9099, -9.63916, 1.33", "-13.7616, -52.4655, -8.7108, 0.67", "-14.6549, -57.2135, -7.87045, 0.67", "-16.1987, -63.6421, -6.71235, 0.67", "-17.1634, -66.7284, -6.03276, 0.33", "-17.4376, -67.3944, -5.85503, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-142.596, -39.8203, -135.666, 0.33", "-143.412, -39.0465, -137.359, 0.33", "-143.61, -38.8765, -137.678, 0.67", "-144.887, -37.9706, -139.804, 0.33", "-147.696, -35.9953, -144.438, 0.67", "-150.57, -33.9241, -149.352, 0.33", "-152.612, -32.3939, -152.772, 1.33", "-153.586, -31.6578, -154.436, 1.33", "-157.331, -28.7359, -160.694, 0.33", "-158.27, -28.0691, -162.143, 0.33", "-159.726, -27.0136, -164.15, 0.67", "-161.024, -26.124, -165.94, 0.33", "-161.024, -26.124, -165.94, 0.67", "-162.773, -24.6752, -168.91, 0.33", "-164.78, -22.8132, -170.956, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-142.596, -39.8203, -135.666, 0.33", "-140.279, -38.5778, -134.276, 0.33", "-139.117, -37.9552, -133.579, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "27.163, -154.774, 65.0906, 0.67", "28.4814, -161.435, 68.3712, 0.67", "29.7208, -167.63, 72.453, 0.67", "31.5482, -173.406, 76.8833, 0.67", "34.4277, -178.652, 81.3836, 0.67", "37.0802, -183.602, 86.3207, 0.67", "39.4655, -189.259, 90.6311, 0.67", "42.7578, -194.082, 95.2957, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "27.163, -154.774, 65.0906, 0.33", "28.1932, -163.625, 68.6922, 0.67", "29.7962, -172.415, 72.2329, 0.67", "33.1213, -180.905, 75.249, 0.67", "36.5259, -189.82, 76.5298, 0.67", "39.3212, -198.546, 79.436, 0.67", "43.5334, -206.418, 82.9101, 0.67", "47.4511, -214.173, 86.9312, 0.67", "50.4321, -223.104, 88.9299, 0.67", "53.9753, -231.976, 90.1163, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-25.1572, -133.867, 44.4267, 0.67", "-29.612, -145.883, 43.0555, 0.67", "-32.7082, -158.402, 42.4141, 0.67", "-36.4606, -170.749, 42.5888, 0.67", "-40.4092, -183.007, 43.3726, 0.67", "-43.0174, -195.508, 45.3009, 0.67", "-43.5061, -208.129, 48.0277, 0.67", "-43.8578, -220.998, 49.2352, 0.67", "-43.4587, -233.889, 48.3414, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.1572, -133.867, 44.4267, 0.33", "-26.7099, -140.534, 50.6701, 0.67", "-27.7098, -147.244, 56.9829, 0.67", "-29.1097, -155.174, 61.6557, 0.67", "-31.6127, -162.797, 66.3514, 0.67", "-34.8318, -169.833, 71.4613, 0.67", "-38.0821, -175.927, 77.6027, 0.67", "-42.3071, -181.175, 83.8897, 0.67", "-47.5097, -186.288, 89.5108, 0.67", "-53.5907, -190.679, 94.8191, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "38.2063, -18.8058, 38.8905, 0.67", "45.5233, -22.9822, 42.4068, 0.67", "51.8622, -27.5302, 47.1556, 0.67", "57.4643, -33.2072, 51.6665, 0.67", "63.7914, -39.461, 53.9731, 0.67", "70.2442, -45.1196, 57.1985, 0.67", "75.865, -51.2771, 61.041, 0.67", "81.7485, -57.6792, 64.0222, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "38.2063, -18.8058, 38.8905, 0.33", "44.6935, -24.695, 43.2594, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.37646, 41.1018, 7.50628, 0.67", "-2.71213, 45.5868, 5.8926, 0.67", "-2.90269, 48.1327, 4.97657, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.37646, 41.1018, 7.50628, 0.33", "-4.37037, 43.7986, 11.9838, 0.33", "-5.12182, 44.8149, 13.6712, 0.33", "-6.19945, 46.2724, 16.0911, 0.33", "-8.92126, 54.0182, 25.7499, 0.33", "-12.6875, 62.9867, 33.936, 0.33", "-14.625, 73.4834, 40.9485, 0.33", "-14.5127, 83.5021, 48.8425, 0.33", "-13.7676, 93.0076, 57.2884, 0.33", "-10.9074, 101.392, 66.3929, 0.33", "-7.4475, 110.784, 74.2732, 0.33", "-2.34661, 121.387, 79.2891, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.41736, 42.014, -28.2315, 0.67", "1.0564, 44.7263, -28.5646, 0.67", "0.178512, 46.4723, -28.6096, 0.67", "-1.28188, 49.2298, -28.5954, 0.67", "-2.31465, 51.1349, -28.579, 0.67", "-3.66296, 53.571, -28.5717, 0.67", "-5.38862, 56.8603, -28.5889, 0.67", "-6.40615, 58.9441, -28.6192, 0.67", "-6.94692, 60.2807, -28.6314, 0.67", "-7.93725, 63.0617, -28.6539, 0.67", "-8.41918, 64.3992, -28.6625, 0.67", "-9.72004, 68.0478, -28.6469, 0.67", "-10.2439, 69.6194, -28.7426, 0.67", "-10.6667, 70.9853, -28.8405, 0.67", "-10.929, 71.8447, -28.8893, 0.67", "-11.631, 74.0497, -28.9993, 0.67", "-12.4704, 76.6208, -29.1179, 0.67", "-13.3685, 79.0839, -29.1695, 0.67", "-14.3927, 81.6601, -29.1872, 0.67", "-15.2749, 83.7448, -29.189, 0.67", "-16.1814, 86.0345, -29.2373, 0.33", "-16.8319, 87.8387, -29.2802, 0.67", "-17.4456, 89.6333, -29.2829, 0.33", "-17.7194, 90.5453, -29.2583, 0.67", "-18.283, 92.6138, -29.1192, 0.33", "-18.7342, 94.9003, -28.8646, 1.33", "-18.9782, 97.0125, -28.3725, 0.33", "-18.9766, 97.8749, -28.0768, 0.33", "-18.9378, 98.634, -27.8004, 0.67", "-18.8804, 100.094, -27.2327, 0.33", "-18.8396, 102.351, -26.2629, 0.33", "-18.979, 104.597, -25.2018, 0.33", "-19.0808, 105.623, -24.7705, 0.33", "-19.4528, 108.269, -23.844, 0.33", "-19.7392, 109.759, -23.4508, 0.33", "-19.8918, 110.476, -23.3009, 0.67", "-20.1863, 112.068, -23.0278, 0.33", "-20.3178, 112.866, -22.9471, 0.67", "-20.7029, 115.168, -22.7578, 0.33", "-20.8793, 117.273, -22.5774, 0.33", "-21.0268, 119.477, -22.4397, 0.33", "-21.1083, 121.137, -22.3743, 0.67", "-21.1326, 124.567, -22.2734, 0.67", "-21.114, 125.775, -22.2346, 0.67", "-20.9989, 129.319, -22.1268, 0.67", "-20.8966, 131.597, -22.0748, 0.67", "-20.9009, 133.034, -22.0573, 0.67", "-20.9527, 134.614, -22.0754, 0.33", "-21.0258, 135.612, -22.1194, 0.33", "-21.157, 137.237, -22.2152, 0.67", "-21.7477, 141.944, -22.599, 0.67", "-22.0831, 144.555, -22.8218, 0.67", "-22.4502, 146.976, -23.059, 0.67", "-22.8759, 149.436, -23.3259, 0.67", "-23.6541, 153.699, -23.8071, 0.67", "-24.2303, 156.577, -24.1174, 0.67", "-24.6847, 158.583, -24.3246, 0.67", "-24.9817, 159.986, -24.4379, 0.67", "-25.2038, 160.965, -24.483, 1.33", "-25.8807, 164.266, -24.4985, 0.67", "-26.495, 167.23, -24.4191, 0.33", "-26.6223, 168.041, -24.3634, 0.67", "-26.901, 170.242, -24.1972, 0.33", "-27.1101, 172.469, -23.9794, 0.33", "-27.2828, 175.453, -23.6325, 0.33", "-27.2934, 176.563, -23.475, 0.33", "-27.2901, 177.069, -23.407, 0.33", "-27.346, 180.071, -23.0375, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.41736, 42.014, -28.2315, 1.33", "2.42888, 45.0389, -31.1823, 1.33", "2.44921, 50.3794, -36.3921, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.90269, 48.1327, 4.97657, 0.67", "-3.09975, 46.9069, -0.551924, 0.67", "-3.08211, 46.5085, -2.04655, 0.67", "-3.07432, 46.0909, -3.42928, 1.33", "-3.21359, 45.3559, -6.82363, 0.33", "-3.27783, 44.6186, -10.1248, 0.33", "-3.28992, 44.3676, -11.1692, 0.33", "-3.21689, 44.0926, -12.1795, 0.67", "-3.20108, 43.8346, -13.1952, 0.67", "-3.30865, 42.6309, -19.355, 0.67", "-3.32519, 42.4049, -21.0746, 0.67", "-3.47663, 42.127, -22.8246, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.90269, 48.1327, 4.97657, 0.33", "-3.34372, 51.0076, 10.5093, 0.33", "-3.61122, 51.5652, 12.1017, 0.33", "-3.87345, 51.8715, 13.5476, 1.33", "-5.08888, 52.7551, 21.9838, 0.67", "-5.44156, 53.0115, 24.4317, 0.67", "-6.14521, 53.523, 29.3157, 1.33", "-6.29629, 53.5391, 32.6511, 0.33", "-6.38879, 53.4988, 35.2493, 0.33", "-6.63619, 53.2213, 38.0386, 0.67", "-5.89176, 54.6352, 50.3613, 0.67", "-5.64889, 55.2486, 62.7702, 0.67", "-6.36588, 56.1507, 75.1426, 0.67", "-6.36581, 57.1658, 87.5268, 0.67", "-6.83613, 59.39, 99.745, 0.67", "-10.3776, 60.0763, 111.636, 0.67", "-13.1758, 58.958, 123.701, 0.67", "-18.3076, 60.5668, 134.903, 0.67", "-23.2825, 62.8773, 146.056, 0.67", "-26.5315, 65.1154, 157.842, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.44921, 50.3794, -36.3921, 0.67", "4.91436, 57.4237, -37.5224, 0.67", "5.47417, 59.2524, -37.8987, 0.67", "5.9681, 61.144, -38.3507, 0.33", "6.19786, 62.2591, -38.649, 1.33", "6.77297, 65.9412, -39.6, 0.33", "6.90411, 67.1924, -39.8433, 0.33", "6.93982, 68.6197, -40.1002, 1.33", "6.93262, 70.9444, -40.3688, 0.67", "6.9327, 75.3242, -40.8306, 0.33", "6.91313, 79.0114, -41.1392, 1.33", "6.89976, 82.8551, -41.3079, 0.33", "6.91135, 83.7102, -41.3487, 0.67", "6.9708, 87.542, -41.5503, 0.33", "7.03797, 90.4231, -41.6997, 0.33", "7.15005, 92.6066, -41.8333, 0.33", "7.32141, 94.3994, -42.0425, 0.67", "7.65397, 96.1251, -42.4433, 0.33", "7.85188, 97.0277, -42.6684, 0.33", "8.02113, 97.6963, -42.8535, 0.33", "8.29212, 98.681, -43.1147, 0.33", "8.72368, 99.8296, -43.484, 0.67", "10.1758, 103.218, -44.7409, 0.33", "10.7207, 104.424, -45.2446, 0.33", "11.3099, 105.688, -45.7857, 0.67", "11.7596, 106.659, -46.2044, 0.33", "12.352, 107.838, -46.773, 0.33", "12.6507, 108.373, -47.036, 1.33", "13.8774, 110.539, -48.1965, 0.33", "14.2121, 111.106, -48.523, 0.33", "14.4231, 111.474, -48.7218, 0.67", "15.5755, 113.614, -49.8545, 0.33", "15.8423, 114.165, -50.158, 1.33", "17.5982, 118.002, -52.2825, 0.33", "17.9473, 118.868, -52.7679, 1.33", "18.5266, 120.542, -53.7018, 0.33", "18.5823, 120.747, -53.8035, 0.67", "19.0482, 122.805, -54.5634, 0.33", "19.1399, 123.251, -54.6864, 0.67", "19.6702, 125.891, -55.0191, 0.33", "19.7784, 126.41, -55.057, 0.67", "20.1948, 128.458, -55.1475, 0.33", "20.834, 131.434, -55.1204, 0.33", "21.0849, 132.525, -55.0055, 0.67", "21.6713, 134.777, -54.6382, 0.33", "21.768, 135.093, -54.5493, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.44921, 50.3794, -36.3921, 0.67", "-0.13588, 51.865, -38.3381, 0.67", "-2.18362, 52.7814, -39.6583, 0.67", "-4.1012, 53.4018, -41.0584, 0.67", "-6.58288, 54.229, -43.1414, 1.33", "-7.73618, 54.6629, -44.0341, 0.33", "-9.51643, 55.3875, -45.3338, 0.33", "-11.5695, 56.1654, -46.6486, 1.33", "-15.1497, 57.5621, -49.0501, 0.33", "-16.9329, 58.3903, -50.2756, 1.33", "-20.2328, 60.2113, -52.7116, 0.67", "-21.2832, 60.874, -53.5909, 1.33", "-23.018, 62.0891, -55.1374, 0.33", "-24.3914, 63.2365, -56.3727, 0.67", "-25.4841, 64.21, -57.2974, 0.33", "-25.6721, 64.3684, -57.4777, 0.67", "-27.3788, 65.9655, -59.5871, 0.33", "-27.9292, 66.544, -60.3531, 0.67", "-29.1852, 67.9744, -62.1751, 0.33", "-29.7755, 68.7138, -63.1572, 1.33", "-31.4928, 71.1798, -66.4741, 0.33", "-32.3826, 72.6664, -68.514, 1.33", "-33.4559, 74.6399, -71.3057, 0.33", "-33.6553, 75.1676, -72.1009, 0.67", "-34.4569, 78.2794, -77.1285, 0.33", "-34.5263, 78.7969, -78.0991, 0.67", "-34.5202, 80.2093, -81.2549, 0.33", "-34.4962, 80.3868, -81.8405, 0.67", "-34.13, 81.3399, -86.9432, 0.33", "-34.0481, 81.4454, -88.1811, 1.33", "-33.8261, 81.2405, -92.1552, 0.33", "-33.8134, 81.2086, -92.4623, 0.67", "-33.6755, 80.4768, -96.5728, 0.33", "-33.6542, 80.2712, -97.5251, 1.33", "-33.7127, 79.8003, -98.9914, 0.33", "-33.797, 78.6894, -102.88, 1.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-26.5315, 65.1154, 157.842, 0.67", "-25.6376, 66.6199, 167.972, 0.67", "-25.5151, 66.7682, 178.254, 0.67", "-27.0007, 64.4999, 188.195, 0.67", "-28.1107, 62.0549, 198.146, 0.67", "-28.6562, 60.5376, 208.316, 0.67", "-29.7062, 60.1353, 218.539, 0.67", "-30.5547, 57.8291, 228.548, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-26.5315, 65.1154, 157.842, 0.33", "-29.8049, 65.9998, 166.081, 0.67", "-33.795, 68.3251, 173.708, 0.67", "-38.2216, 72.4079, 180.317, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-33.797, 78.6894, -102.88, 0.33", "-33.8666, 82.1477, -106.739, 0.33", "-33.8925, 83.4343, -108.174, 0.67", "-33.9208, 84.8422, -109.745, 0.33", "-33.9566, 86.6219, -111.731, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.797, 78.6894, -102.88, 0.33", "-33.9588, 74.7727, -104.159, 0.33", "-34.0572, 72.3896, -104.936, 0.33", "-34.0943, 71.4913, -105.23, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_39", "dend_32", "dend_27", "dend_20", "dend_9", "dend_0", "dend_41", "dend_40", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_2", "dend_1", "dend_38", "dend_37", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_3", "dend_16", "dend_13", "dend_7", "dend_4", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_39", "dend_32", "dend_27", "dend_20", "dend_9", "dend_0", "dend_41", "dend_40", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_2", "dend_1", "dend_38", "dend_37", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_3", "dend_16", "dend_13", "dend_7", "dend_4", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_39", "dend_32", "dend_27", "dend_20", "dend_9", "dend_0", "axon_0", "dend_41", "dend_40", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_2", "dend_1", "axon_1", "dend_38", "dend_37", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_3", "dend_16", "dend_13", "dend_7", "dend_4", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_9", "dend_9", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_LBC_852c3c018f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, axon_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, axon_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_9, dend_9, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4999992625513693)
    connect dend_39(0), soma_0(0.4999992625513693)
    connect dend_32(0), soma_0(0.4999992625513693)
    connect dend_27(0), soma_0(0.4999992625513693)
    connect dend_20(0), soma_0(0.4999992625513693)
    connect dend_9(0), soma_0(0.4999992625513693)
    connect dend_0(0), soma_0(0.4999992625513693)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.162869, -11.0647, -2.58105, 2.87216 ) }
    soma_0 { pt3dadd( -0.134852, -10.0555, -2.3364, 4.81021 ) }
    soma_0 { pt3dadd( -0.106835, -9.04625, -2.09174, 6.29865 ) }
    soma_0 { pt3dadd( -0.0788176, -8.037, -1.84709, 7.78708 ) }
    soma_0 { pt3dadd( -0.0508004, -7.02776, -1.60244, 9.27866 ) }
    soma_0 { pt3dadd( -0.0227833, -6.01852, -1.35779, 10.8108 ) }
    soma_0 { pt3dadd( 0.00523389, -5.00927, -1.11314, 12.351 ) }
    soma_0 { pt3dadd( 0.033251, -4.00003, -0.868484, 13.0944 ) }
    soma_0 { pt3dadd( 0.0612682, -2.99079, -0.623832, 13.4108 ) }
    soma_0 { pt3dadd( 0.0892853, -1.98154, -0.37918, 13.7272 ) }
    soma_0 { pt3dadd( 0.117302, -0.972301, -0.134529, 13.7558 ) }
    soma_0 { pt3dadd( 0.14532, 0.0369421, 0.110123, 13.5627 ) }
    soma_0 { pt3dadd( 0.173337, 1.04619, 0.354775, 13.3661 ) }
    soma_0 { pt3dadd( 0.201354, 2.05543, 0.599427, 13.1696 ) }
    soma_0 { pt3dadd( 0.229371, 3.06467, 0.844079, 12.973 ) }
    soma_0 { pt3dadd( 0.257388, 4.07391, 1.08873, 12.4764 ) }
    soma_0 { pt3dadd( 0.285405, 5.08316, 1.33338, 11.5304 ) }
    soma_0 { pt3dadd( 0.313423, 6.0924, 1.57803, 10.5843 ) }
    soma_0 { pt3dadd( 0.34144, 7.10164, 1.82269, 9.63824 ) }
    soma_0 { pt3dadd( 0.369457, 8.11089, 2.06734, 7.56191 ) }
    soma_0 { pt3dadd( 0.397474, 9.12013, 2.31199, 4.12248 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -1.32254, 0.627652, -22.8114, 1.33 ) }
    dend_42 { pt3dadd( -2.07766, 3.78104, -31.9316, 0.67 ) }
    dend_42 { pt3dadd( -2.57558, 5.45647, -35.8718, 0.67 ) }
    dend_42 { pt3dadd( -3.44585, 8.68921, -42.2729, 0.67 ) }
    dend_42 { pt3dadd( -4.07635, 11.4838, -47.4221, 0.67 ) }
    dend_42 { pt3dadd( -4.9227, 16.9018, -57.2857, 0.67 ) }
    dend_42 { pt3dadd( -5.3272, 20.5501, -63.8203, 0.33 ) }
    dend_42 { pt3dadd( -5.19259, 21.9251, -66.3244, 0.33 ) }
    dend_42 { pt3dadd( -4.65068, 24.3806, -70.325, 1.33 ) }
    dend_42 { pt3dadd( -3.32205, 29.3717, -76.398, 0.33 ) }
    dend_42 { pt3dadd( -2.68007, 31.1506, -78.1595, 0.33 ) }
    dend_42 { pt3dadd( -2.37743, 31.5989, -78.578, 0.67 ) }
    dend_42 { pt3dadd( -0.0143326, 34.7369, -80.8927, 0.33 ) }
    dend_42 { pt3dadd( 1.44941, 36.7022, -82.328, 2.0 ) }
    dend_42 { pt3dadd( 5.26967, 42.4833, -85.9167, 0.33 ) }
    dend_42 { pt3dadd( 6.29223, 44.4664, -86.9629, 1.33 ) }
    dend_42 { pt3dadd( 9.35019, 52.612, -91.6385, 0.33 ) }
    dend_42 { pt3dadd( 9.78229, 54.2848, -92.6331, 0.33 ) }
    dend_42 { pt3dadd( 10.3066, 57.6477, -95.7407, 1.33 ) }
    dend_42 { pt3dadd( 10.7593, 60.7172, -99.6792, 0.33 ) }
    dend_42 { pt3dadd( 11.0494, 62.6504, -102.502, 0.33 ) }
    dend_42 { pt3dadd( 11.569, 65.2697, -106.619, 0.33 ) }
    dend_42 { pt3dadd( 12.0004, 66.6923, -109.062, 2.0 ) }
    dend_42 { pt3dadd( 15.986, 74.7625, -125.735, 0.33 ) }
    dend_42 { pt3dadd( 16.9105, 76.2454, -129.332, 1.33 ) }
    dend_42 { pt3dadd( 18.3097, 78.1588, -134.57, 0.33 ) }
    dend_42 { pt3dadd( 19.4183, 79.6241, -138.431, 1.33 ) }
    dend_42 { pt3dadd( 20.7594, 81.7151, -143.24, 0.33 ) }
    dend_42 { pt3dadd( 22.3048, 84.5773, -149.113, 1.33 ) }
    dend_42 { pt3dadd( 24.411, 90.3339, -157.767, 0.33 ) }
    dend_42 { pt3dadd( 24.661, 91.3579, -159.133, 0.67 ) }
    dend_42 { pt3dadd( 25.3257, 95.6245, -164.298, 0.33 ) }
    dend_42 { pt3dadd( 25.436, 99.4897, -167.974, 0.33 ) }
    dend_42 { pt3dadd( 25.3353, 100.881, -169.028, 1.33 ) }
    dend_42 { pt3dadd( 24.5979, 106.904, -172.063, 0.33 ) }
    dend_42 { pt3dadd( 24.3012, 108.53, -172.609, 0.33 ) }
    dend_42 { pt3dadd( 24.1916, 108.984, -172.731, 0.67 ) }
    dend_42 { pt3dadd( 22.8815, 113.566, -173.601, 0.33 ) }
    dend_42 { pt3dadd( 22.5961, 114.696, -173.881, 0.67 ) }
    dend_42 { pt3dadd( 21.1656, 122.099, -175.726, 0.33 ) }
    dend_42 { pt3dadd( 21.1029, 123.013, -176.028, 1.33 ) }
    dend_42 { pt3dadd( 21.2899, 127.221, -177.49, 0.33 ) }
    dend_42 { pt3dadd( 21.4679, 128.734, -178.132, 1.33 ) }
    dend_42 { pt3dadd( 22.7228, 135.694, -181.501, 0.33 ) }
    dend_42 { pt3dadd( 23.5722, 138.929, -183.17, 1.33 ) }
    dend_42 { pt3dadd( 26.1575, 146.553, -187.728, 0.33 ) }
    dend_42 { pt3dadd( 27.219, 149.697, -189.793, 1.33 ) }
    dend_42 { pt3dadd( 29.086, 155.435, -193.81, 0.33 ) }
    dend_42 { pt3dadd( 29.4206, 156.537, -194.561, 0.67 ) }
    dend_42 { pt3dadd( 30.8865, 162.204, -198.213, 0.33 ) }
    dend_42 { pt3dadd( 31.3999, 164.456, -199.791, 1.33 ) }
    dend_42 { pt3dadd( 32.347, 169.531, -203.38, 0.33 ) }
    dend_42 { pt3dadd( 32.5627, 170.735, -204.288, 0.67 ) }
    dend_42 { pt3dadd( 33.5542, 175.715, -207.669, 0.33 ) }
    dend_42 { pt3dadd( 33.7531, 177.036, -208.613, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 76/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.70254, -6.0246, -3.1514, 2.0 ) }
    dend_39 { pt3dadd( -7.42653, -7.25361, -1.22844, 1.33 ) }
    dend_39 { pt3dadd( -10.9568, -9.77034, 2.70933, 1.33 ) }
    dend_39 { pt3dadd( -13.2143, -11.3796, 5.22735, 1.33 ) }
    dend_39 { pt3dadd( -15.3053, -12.8703, 7.55969, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 81/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.99746, -5.6146, -19.3514, 2.0 ) }
    dend_32 { pt3dadd( 0.284883, -6.9199, -19.3514, 2.0 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 83/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.82254, -11.5083, -5.4014, 1.33 ) }
    dend_27 { pt3dadd( -3.0926, -10.2134, -7.5982, 1.33 ) }
    dend_27 { pt3dadd( -5.36584, -8.68375, -9.95566, 1.33 ) }
    dend_27 { pt3dadd( -10.5065, -5.38546, -14.9984, 1.33 ) }
    dend_27 { pt3dadd( -12.9488, -3.97809, -17.0321, 1.33 ) }
    dend_27 { pt3dadd( -16.9627, -1.66503, -20.3745, 1.33 ) }
    dend_27 { pt3dadd( -19.723, -0.0744179, -22.673, 0.67 ) }
    dend_27 { pt3dadd( -20.1682, 0.250677, -23.0718, 0.67 ) }
    dend_27 { pt3dadd( -22.0508, 1.91918, -24.8934, 1.33 ) }
    dend_27 { pt3dadd( -26.8916, 6.48033, -28.9865, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 93/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.00253968, -9.70434, 5.9486, 2.0 ) }
    dend_20 { pt3dadd( 2.90861, -11.9614, 4.40909, 1.33 ) }
    dend_20 { pt3dadd( 6.34947, -14.6291, 2.58945, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 96/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.05746, 3.8359, 19.0286, 1.33 ) }
    dend_9 { pt3dadd( 3.48105, 5.10555, 19.0286, 1.33 ) }
    dend_9 { pt3dadd( 7.02428, 6.96175, 19.0286, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 99/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.92746, 9.23765, -8.1714, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 5.50529, 10.3693, -8.1714, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.397474, 9.12013, 2.31199, 0.67 ) }
    axon_0 { pt3dadd( 0.813722, 24.1144, 2.31199, 0.67 ) }
    axon_0 { pt3dadd( 1.22997, 39.1086, 2.31199, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -15.3053, -12.8703, 7.55969, 0.67 ) }
    dend_41 { pt3dadd( -19.3976, -14.1134, 6.87079, 0.67 ) }
    dend_41 { pt3dadd( -21.4019, -14.7329, 6.78677, 0.67 ) }
    dend_41 { pt3dadd( -23.0358, -15.2337, 6.77642, 0.67 ) }
    dend_41 { pt3dadd( -24.4859, -15.7066, 6.7394, 0.67 ) }
    dend_41 { pt3dadd( -26.3931, -16.3347, 6.66366, 0.67 ) }
    dend_41 { pt3dadd( -28.0346, -16.9237, 6.59313, 0.67 ) }
    dend_41 { pt3dadd( -29.9847, -17.7512, 6.59491, 0.67 ) }
    dend_41 { pt3dadd( -31.9015, -18.7036, 6.64307, 0.67 ) }
    dend_41 { pt3dadd( -33.3958, -19.5265, 6.58061, 0.67 ) }
    dend_41 { pt3dadd( -35.9895, -21.303, 6.30058, 0.67 ) }
    dend_41 { pt3dadd( -36.8824, -22.0272, 6.07867, 0.67 ) }
    dend_41 { pt3dadd( -37.9726, -23.0298, 5.67439, 0.67 ) }
    dend_41 { pt3dadd( -38.619, -23.6415, 5.36667, 0.67 ) }
    dend_41 { pt3dadd( -40.1464, -25.1114, 4.61456, 0.67 ) }
    dend_41 { pt3dadd( -41.434, -26.3614, 3.94911, 0.67 ) }
    dend_41 { pt3dadd( -42.8502, -27.7259, 3.19571, 0.67 ) }
    dend_41 { pt3dadd( -43.9841, -28.7478, 2.65638, 0.67 ) }
    dend_41 { pt3dadd( -45.7125, -30.0708, 2.12138, 1.33 ) }
    dend_41 { pt3dadd( -47.0173, -31.0794, 1.76333, 0.33 ) }
    dend_41 { pt3dadd( -47.5413, -31.4977, 1.65346, 0.33 ) }
    dend_41 { pt3dadd( -49.3707, -32.9088, 1.40616, 0.67 ) }
    dend_41 { pt3dadd( -50.6102, -33.9252, 1.34945, 0.67 ) }
    dend_41 { pt3dadd( -53.718, -36.7355, 1.34375, 0.67 ) }
    dend_41 { pt3dadd( -55.4939, -38.4195, 1.35903, 0.67 ) }
    dend_41 { pt3dadd( -56.7651, -39.6366, 1.3821, 0.33 ) }
    dend_41 { pt3dadd( -57.8519, -40.6599, 1.40192, 0.67 ) }
    dend_41 { pt3dadd( -59.0429, -41.8257, 1.43097, 0.67 ) }
    dend_41 { pt3dadd( -59.7541, -42.5365, 1.44971, 0.33 ) }
    dend_41 { pt3dadd( -60.5221, -43.3504, 1.47739, 0.33 ) }
    dend_41 { pt3dadd( -61.6722, -44.3762, 1.57183, 0.67 ) }
    dend_41 { pt3dadd( -62.1827, -44.8119, 1.59687, 0.67 ) }
    dend_41 { pt3dadd( -63.0085, -45.467, 1.60529, 0.33 ) }
    dend_41 { pt3dadd( -63.6381, -45.8912, 1.60107, 0.67 ) }
    dend_41 { pt3dadd( -66.7266, -47.8584, 1.55985, 0.33 ) }
    dend_41 { pt3dadd( -67.8387, -48.547, 1.53958, 0.33 ) }
    dend_41 { pt3dadd( -68.7586, -49.1026, 1.51754, 0.33 ) }
    dend_41 { pt3dadd( -69.4316, -49.4735, 1.49575, 0.67 ) }
    dend_41 { pt3dadd( -70.7695, -50.1364, 1.44031, 0.33 ) }
    dend_41 { pt3dadd( -71.7422, -50.6053, 1.39554, 0.33 ) }
    dend_41 { pt3dadd( -72.5979, -50.9574, 1.3545, 0.67 ) }
    dend_41 { pt3dadd( -73.3632, -51.2644, 1.32328, 0.67 ) }
    dend_41 { pt3dadd( -74.9013, -51.8808, 1.19252, 0.33 ) }
    dend_41 { pt3dadd( -75.4384, -52.1092, 1.14652, 0.33 ) }
    dend_41 { pt3dadd( -76.1329, -52.4166, 1.08519, 0.33 ) }
    dend_41 { pt3dadd( -78.539, -53.3665, 0.847037, 0.67 ) }
    dend_41 { pt3dadd( -80.27, -54.0324, 0.661752, 0.33 ) }
    dend_41 { pt3dadd( -81.4168, -54.4328, 0.524703, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -15.3053, -12.8703, 7.55969, 0.67 ) }
    dend_40 { pt3dadd( -16.3791, -12.2844, 9.38673, 0.67 ) }
    dend_40 { pt3dadd( -17.136, -11.6295, 10.8841, 0.67 ) }
    dend_40 { pt3dadd( -20.2987, -8.61856, 16.8087, 0.67 ) }
    dend_40 { pt3dadd( -21.2416, -7.89783, 18.4115, 0.67 ) }
    dend_40 { pt3dadd( -23.044, -6.71661, 21.0899, 0.67 ) }
    dend_40 { pt3dadd( -24.8686, -5.52072, 23.8016, 0.67 ) }
    dend_40 { pt3dadd( -26.817, -4.21662, 26.6465, 0.67 ) }
    dend_40 { pt3dadd( -27.9583, -3.34015, 28.3491, 0.67 ) }
    dend_40 { pt3dadd( -30.2552, -1.18786, 31.3341, 0.33 ) }
    dend_40 { pt3dadd( -31.8675, -0.160673, 33.2251, 0.33 ) }
    dend_40 { pt3dadd( -36.3039, 3.39004, 41.4184, 0.33 ) }
    dend_40 { pt3dadd( -41.8344, 6.95147, 48.911, 0.33 ) }
    dend_40 { pt3dadd( -48.0208, 10.6348, 55.8109, 0.33 ) }
    dend_40 { pt3dadd( -54.0988, 13.5771, 63.1326, 0.33 ) }
    dend_40 { pt3dadd( -58.4622, 17.7229, 71.0962, 0.33 ) }
    dend_40 { pt3dadd( -63.1546, 22.7867, 78.3345, 0.33 ) }
    dend_40 { pt3dadd( -68.8938, 28.2242, 84.4761, 0.33 ) }
    dend_40 { pt3dadd( -73.981, 32.4007, 91.9812, 0.33 ) }
    dend_40 { pt3dadd( -77.9745, 34.8077, 100.776, 0.33 ) }
    dend_40 { pt3dadd( -82.4462, 36.075, 109.565, 0.33 ) }
    dend_40 { pt3dadd( -85.5292, 37.6771, 118.884, 0.33 ) }
    dend_40 { pt3dadd( -88.0905, 37.6989, 128.486, 0.33 ) }
    dend_40 { pt3dadd( -92.5609, 35.8437, 137.174, 0.33 ) }
    dend_40 { pt3dadd( -95.6383, 34.2807, 146.497, 0.33 ) }
    dend_40 { pt3dadd( -99.3796, 31.889, 155.401, 0.33 ) }
    dend_40 { pt3dadd( -101.232, 28.5551, 164.604, 0.33 ) }
    dend_40 { pt3dadd( -101.743, 22.7742, 172.763, 0.33 ) }
    dend_40 { pt3dadd( -101.933, 15.4747, 179.683, 0.33 ) }
    dend_40 { pt3dadd( -102.515, 9.76906, 187.888, 0.33 ) }
    dend_40 { pt3dadd( -102.902, 4.20009, 196.193, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 83/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.284883, -6.9199, -19.3514, 1.33 ) }
    dend_36 { pt3dadd( -7.97853, -9.99413, -17.3262, 1.33 ) }
    dend_36 { pt3dadd( -11.9629, -11.4764, -16.3497, 1.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.284883, -6.9199, -19.3514, 0.67 ) }
    dend_33 { pt3dadd( -5.72384, -14.4748, -15.1287, 0.67 ) }
    dend_33 { pt3dadd( -9.70173, -19.4763, -12.3331, 0.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -26.8916, 6.48033, -28.9865, 0.67 ) }
    dend_31 { pt3dadd( -28.7745, 7.23808, -29.5125, 0.67 ) }
    dend_31 { pt3dadd( -29.5771, 7.50965, -29.8084, 1.33 ) }
    dend_31 { pt3dadd( -32.2237, 8.32047, -30.5429, 0.67 ) }
    dend_31 { pt3dadd( -33.6342, 8.7154, -30.8722, 0.67 ) }
    dend_31 { pt3dadd( -34.786, 8.99553, -31.2826, 0.33 ) }
    dend_31 { pt3dadd( -36.5858, 9.4225, -32.0773, 0.67 ) }
    dend_31 { pt3dadd( -39.4133, 9.87156, -33.4063, 0.67 ) }
    dend_31 { pt3dadd( -41.4523, 10.1458, -34.6048, 0.33 ) }
    dend_31 { pt3dadd( -42.081, 10.2416, -35.0102, 0.33 ) }
    dend_31 { pt3dadd( -45.7774, 10.6304, -37.4022, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( -46.8553, 10.7566, -38.218, 0.67 ) }
    dend_31 { pt3dadd( -48.903, 11.0562, -40.05, 0.67 ) }
    dend_31 { pt3dadd( -50.985, 11.4093, -42.023, 1.33 ) }
    dend_31 { pt3dadd( -52.2865, 11.6938, -43.2934, 0.33 ) }
    dend_31 { pt3dadd( -53.0811, 11.9449, -44.0431, 0.33 ) }
    dend_31 { pt3dadd( -56.0221, 13.0405, -46.595, 0.67 ) }
    dend_31 { pt3dadd( -58.2982, 14.0459, -48.6138, 0.33 ) }
    dend_31 { pt3dadd( -59.4185, 14.6625, -49.5889, 0.67 ) }
    dend_31 { pt3dadd( -60.4616, 15.2809, -50.4185, 0.33 ) }
    dend_31 { pt3dadd( -62.7528, 16.8016, -52.23, 0.67 ) }
    dend_31 { pt3dadd( -65.2686, 18.4802, -53.9551, 0.33 ) }
    dend_31 { pt3dadd( -66.3948, 19.187, -54.5726, 1.33 ) }
    dend_31 { pt3dadd( -68.9359, 20.4902, -55.6836, 0.33 ) }
    dend_31 { pt3dadd( -69.4345, 20.6808, -55.8677, 0.67 ) }
    dend_31 { pt3dadd( -71.5467, 21.1687, -56.4281, 0.33 ) }
    dend_31 { pt3dadd( -74.5356, 21.534, -56.8259, 0.33 ) }
    dend_31 { pt3dadd( -76.0005, 21.6317, -56.8959, 1.33 ) }
    dend_31 { pt3dadd( -80.1769, 21.6418, -57.206, 0.33 ) }
    dend_31 { pt3dadd( -80.8882, 21.6118, -57.2674, 0.67 ) }
    dend_31 { pt3dadd( -83.3799, 21.5161, -57.5105, 0.33 ) }
    dend_31 { pt3dadd( -84.577, 21.4954, -57.6881, 0.67 ) }
    dend_31 { pt3dadd( -85.7865, 21.584, -57.983, 0.33 ) }
    dend_31 { pt3dadd( -88.6952, 22.1076, -58.8949, 0.67 ) }
    dend_31 { pt3dadd( -89.6933, 22.4359, -59.3109, 0.33 ) }
    dend_31 { pt3dadd( -90.3715, 22.7004, -59.6051, 0.67 ) }
    dend_31 { pt3dadd( -92.9223, 23.8914, -60.761, 0.33 ) }
    dend_31 { pt3dadd( -93.3261, 24.1303, -60.9487, 1.33 ) }
    dend_31 { pt3dadd( -94.606, 25.0477, -61.4715, 0.33 ) }
    dend_31 { pt3dadd( -95.4044, 25.7162, -61.7274, 0.67 ) }
    dend_31 { pt3dadd( -96.1514, 26.4127, -61.9768, 0.33 ) }
    dend_31 { pt3dadd( -96.5286, 26.8026, -62.1262, 0.67 ) }
    dend_31 { pt3dadd( -99.0876, 29.5798, -63.2013, 0.33 ) }
    dend_31 { pt3dadd( -99.6725, 30.2293, -63.4581, 1.33 ) }
    dend_31 { pt3dadd( -100.632, 31.2768, -63.8931, 0.33 ) }
    dend_31 { pt3dadd( -101.013, 31.6762, -64.0479, 0.67 ) }
    dend_31 { pt3dadd( -104.196, 34.8508, -65.0917, 0.33 ) }
    dend_31 { pt3dadd( -104.558, 35.1908, -65.1786, 0.67 ) }
    dend_31 { pt3dadd( -106.824, 37.0627, -65.4751, 0.33 ) }
    dend_31 { pt3dadd( -107.277, 37.3924, -65.5014, 0.67 ) }
    dend_31 { pt3dadd( -109.703, 38.9417, -65.4665, 0.33 ) }
    dend_31 { pt3dadd( -110.802, 39.5375, -65.3771, 0.67 ) }
    dend_31 { pt3dadd( -112.023, 40.0738, -65.1832, 0.33 ) }
    dend_31 { pt3dadd( -113.404, 40.6363, -64.9591, 1.33 ) }
    dend_31 { pt3dadd( -115.191, 41.2726, -64.674, 0.33 ) }
    dend_31 { pt3dadd( -115.702, 41.4915, -64.6036, 0.67 ) }
    dend_31 { pt3dadd( -118.593, 42.8801, -64.2546, 0.33 ) }
    dend_31 { pt3dadd( -119.295, 43.2511, -64.1887, 0.67 ) }
    dend_31 { pt3dadd( -122.035, 44.811, -63.9463, 0.33 ) }
    dend_31 { pt3dadd( -122.711, 45.2341, -63.8911, 0.67 ) }
    dend_31 { pt3dadd( -127.485, 48.3631, -63.5594, 0.33 ) }
    dend_31 { pt3dadd( -127.695, 48.4999, -63.5553, 1.33 ) }
    dend_31 { pt3dadd( -130.278, 50.1704, -63.6188, 0.33 ) }
    dend_31 { pt3dadd( -131.048, 50.6454, -63.669, 0.67 ) }
    dend_31 { pt3dadd( -132.425, 51.4355, -63.8247, 0.33 ) }
    dend_31 { pt3dadd( -133.414, 51.9494, -63.936, 0.67 ) }
    dend_31 { pt3dadd( -137.567, 53.8296, -64.429, 0.33 ) }
    dend_31 { pt3dadd( -138.265, 54.1111, -64.503, 0.67 ) }
    dend_31 { pt3dadd( -140.808, 55.0109, -64.7335, 0.33 ) }
    dend_31 { pt3dadd( -141.534, 55.2324, -64.7863, 0.67 ) }
    dend_31 { pt3dadd( -145.212, 56.2058, -64.9598, 0.33 ) }
    dend_31 { pt3dadd( -145.549, 56.2909, -64.9567, 1.33 ) }
    dend_31 { pt3dadd( -147.521, 56.7472, -64.8218, 1.33 ) }
    dend_31 { pt3dadd( -149.695, 57.2616, -64.6586, 0.33 ) }
    dend_31 { pt3dadd( -150.386, 57.4209, -64.5996, 0.67 ) }
    dend_31 { pt3dadd( -152.821, 57.96, -64.3806, 0.33 ) }
    dend_31 { pt3dadd( -154.586, 58.2425, -64.2455, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -26.8916, 6.48033, -28.9865, 0.67 ) }
    dend_28 { pt3dadd( -29.2677, 0.44633, -39.8868, 0.67 ) }
    dend_28 { pt3dadd( -30.2691, -1.65512, -43.4992, 0.67 ) }
    dend_28 { pt3dadd( -31.6185, -4.25874, -47.0795, 0.33 ) }
    dend_28 { pt3dadd( -32.223, -5.36167, -48.3198, 2.0 ) }
    dend_28 { pt3dadd( -33.6336, -7.96229, -50.8195, 0.33 ) }
    dend_28 { pt3dadd( -35.3023, -10.7877, -53.1288, 0.33 ) }
    dend_28 { pt3dadd( -36.1056, -11.8926, -53.5589, 0.33 ) }
    dend_28 { pt3dadd( -39.4068, -15.8551, -54.7879, 0.67 ) }
    dend_28 { pt3dadd( -41.1193, -17.6445, -55.3328, 0.33 ) }
    dend_28 { pt3dadd( -42.3036, -18.6652, -55.7092, 0.33 ) }
    dend_28 { pt3dadd( -45.7399, -20.9253, -56.7103, 2.0 ) }
    dend_28 { pt3dadd( -48.1739, -22.2067, -57.3258, 0.33 ) }
    dend_28 { pt3dadd( -49.9226, -22.8323, -57.9402, 0.33 ) }
    dend_28 { pt3dadd( -56.2413, -23.9166, -60.7084, 0.67 ) }
    dend_28 { pt3dadd( -58.9056, -24.1989, -61.9813, 1.33 ) }
    dend_28 { pt3dadd( -61.1056, -24.2753, -63.1575, 0.33 ) }
    dend_28 { pt3dadd( -62.3009, -24.2902, -63.8896, 0.67 ) }
    dend_28 { pt3dadd( -67.103, -24.2192, -66.9621, 0.33 ) }
    dend_28 { pt3dadd( -69.9359, -24.2489, -68.7799, 1.33 ) }
    dend_28 { pt3dadd( -72.898, -24.2663, -70.6452, 0.33 ) }
    dend_28 { pt3dadd( -75.7529, -24.3577, -72.5092, 0.67 ) }
    dend_28 { pt3dadd( -79.1443, -24.6039, -74.8818, 0.33 ) }
    dend_28 { pt3dadd( -80.9168, -24.8535, -76.2814, 0.33 ) }
    dend_28 { pt3dadd( -81.994, -25.0702, -77.1681, 0.33 ) }
    dend_28 { pt3dadd( -83.6619, -25.611, -78.8035, 0.67 ) }
    dend_28 { pt3dadd( -86.1253, -26.7451, -81.5825, 0.33 ) }
    dend_28 { pt3dadd( -88.6502, -28.2819, -84.613, 0.67 ) }
    dend_28 { pt3dadd( -92.1235, -30.524, -89.0553, 0.33 ) }
    dend_28 { pt3dadd( -93.0379, -31.0498, -90.326, 0.67 ) }
    dend_28 { pt3dadd( -94.7856, -31.8145, -92.6432, 0.33 ) }
    dend_28 { pt3dadd( -96.1748, -32.358, -94.4474, 0.33 ) }
    dend_28 { pt3dadd( -96.9821, -32.6222, -95.3431, 0.33 ) }
    dend_28 { pt3dadd( -98.8515, -33.1504, -97.0935, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -104.695, -34.6856, -102.053, 0.33 ) }
    dend_28 { pt3dadd( -107.335, -35.3908, -104.264, 0.67 ) }
    dend_28 { pt3dadd( -111.813, -36.6868, -107.871, 0.33 ) }
    dend_28 { pt3dadd( -113.863, -37.3457, -109.586, 1.33 ) }
    dend_28 { pt3dadd( -116.434, -38.3059, -111.761, 0.33 ) }
    dend_28 { pt3dadd( -118.153, -39.0346, -113.177, 0.33 ) }
    dend_28 { pt3dadd( -120.845, -40.3288, -115.431, 0.67 ) }
    dend_28 { pt3dadd( -124.537, -41.8728, -118.569, 0.33 ) }
    dend_28 { pt3dadd( -125.781, -42.1942, -119.57, 0.67 ) }
    dend_28 { pt3dadd( -127.222, -42.3628, -120.864, 0.33 ) }
    dend_28 { pt3dadd( -128.247, -42.3458, -121.811, 2.0 ) }
    dend_28 { pt3dadd( -133.023, -41.9032, -126.257, 0.33 ) }
    dend_28 { pt3dadd( -136.171, -41.4311, -129.254, 0.67 ) }
    dend_28 { pt3dadd( -139.207, -40.6848, -132.25, 0.33 ) }
    dend_28 { pt3dadd( -142.344, -39.8886, -135.38, 0.33 ) }
    dend_28 { pt3dadd( -142.596, -39.8203, -135.666, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 16/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.34947, -14.6291, 2.58945, 0.67 ) }
    dend_24 { pt3dadd( 7.47059, -17.8622, 3.75278, 0.67 ) }
    dend_24 { pt3dadd( 8.72831, -22.2193, 5.13972, 0.67 ) }
    dend_24 { pt3dadd( 10.35, -29.0876, 6.92179, 0.67 ) }
    dend_24 { pt3dadd( 11.0908, -34.082, 8.11935, 0.67 ) }
    dend_24 { pt3dadd( 11.4498, -37.4247, 8.86903, 0.67 ) }
    dend_24 { pt3dadd( 11.5527, -38.6756, 9.13409, 0.67 ) }
    dend_24 { pt3dadd( 11.5812, -41.0706, 9.56234, 0.67 ) }
    dend_24 { pt3dadd( 11.5899, -45.6712, 10.3112, 0.67 ) }
    dend_24 { pt3dadd( 11.6685, -50.9762, 10.9024, 0.67 ) }
    dend_24 { pt3dadd( 11.8943, -54.1205, 11.4444, 0.67 ) }
    dend_24 { pt3dadd( 12.0681, -55.3406, 11.7501, 0.67 ) }
    dend_24 { pt3dadd( 12.7413, -58.6005, 12.7254, 0.67 ) }
    dend_24 { pt3dadd( 13.9776, -62.646, 14.1641, 0.67 ) }
    dend_24 { pt3dadd( 15.9138, -67.7917, 16.2252, 0.67 ) }
    dend_24 { pt3dadd( 17.5949, -71.355, 17.7441, 0.67 ) }
    dend_24 { pt3dadd( 19.3498, -74.8577, 19.4207, 0.67 ) }
    dend_24 { pt3dadd( 19.9401, -75.9637, 20.0111, 0.67 ) }
    dend_24 { pt3dadd( 20.7828, -77.4431, 20.9541, 0.33 ) }
    dend_24 { pt3dadd( 22.9852, -85.8797, 24.1592, 0.33 ) }
    dend_24 { pt3dadd( 24.592, -94.8584, 26.0556, 0.33 ) }
    dend_24 { pt3dadd( 24.4141, -104.074, 27.4752, 0.33 ) }
    dend_24 { pt3dadd( 23.6984, -112.798, 30.6115, 0.33 ) }
    dend_24 { pt3dadd( 23.6486, -121.473, 33.955, 0.33 ) }
    dend_24 { pt3dadd( 24.4255, -129.073, 39.1698, 0.33 ) }
    dend_24 { pt3dadd( 24.0471, -136.25, 44.9638, 0.33 ) }
    dend_24 { pt3dadd( 24.9138, -141.855, 52.1835, 0.33 ) }
    dend_24 { pt3dadd( 26.1891, -148.555, 58.3815, 0.33 ) }
    dend_24 { pt3dadd( 27.163, -154.774, 65.0906, 0.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.34947, -14.6291, 2.58945, 1.33 ) }
    dend_21 { pt3dadd( 5.84945, -16.557, 2.65651, 1.33 ) }
    dend_21 { pt3dadd( 4.66285, -20.9334, 2.81783, 1.33 ) }
    dend_21 { pt3dadd( 2.61839, -28.3542, 3.10032, 0.67 ) }
    dend_21 { pt3dadd( 0.383227, -36.1436, 3.53181, 0.67 ) }
    dend_21 { pt3dadd( -0.695679, -39.8191, 3.77812, 0.67 ) }
    dend_21 { pt3dadd( -1.56718, -43.0036, 4.01111, 0.67 ) }
    dend_21 { pt3dadd( -2.09817, -45.4742, 4.25418, 0.67 ) }
    dend_21 { pt3dadd( -2.41637, -47.2744, 4.52187, 0.67 ) }
    dend_21 { pt3dadd( -2.75945, -49.7863, 5.02986, 0.67 ) }
    dend_21 { pt3dadd( -2.94931, -52.1255, 5.58667, 0.67 ) }
    dend_21 { pt3dadd( -3.26028, -56.0017, 6.39535, 0.67 ) }
    dend_21 { pt3dadd( -3.66111, -63.5466, 8.11216, 0.67 ) }
    dend_21 { pt3dadd( -3.873, -67.9389, 9.13554, 0.67 ) }
    dend_21 { pt3dadd( -3.97071, -69.4119, 9.51205, 0.67 ) }
    dend_21 { pt3dadd( -4.23925, -73.0905, 10.474, 0.67 ) }
    dend_21 { pt3dadd( -4.87619, -78.223, 11.8557, 0.67 ) }
    dend_21 { pt3dadd( -5.79361, -82.732, 12.9793, 0.67 ) }
    dend_21 { pt3dadd( -6.45042, -85.4278, 13.6039, 0.67 ) }
    dend_21 { pt3dadd( -7.3923, -89.5774, 14.5395, 0.67 ) }
    dend_21 { pt3dadd( -7.99055, -92.0237, 15.1435, 0.67 ) }
    dend_21 { pt3dadd( -8.74401, -94.8758, 15.9435, 0.33 ) }
    dend_21 { pt3dadd( -9.56816, -98.3523, 17.016, 0.33 ) }
    dend_21 { pt3dadd( -10.1049, -100.222, 17.3321, 0.33 ) }
    dend_21 { pt3dadd( -10.8467, -102.994, 17.7174, 0.33 ) }
    dend_21 { pt3dadd( -13.3008, -109.894, 19.7384, 0.33 ) }
    dend_21 { pt3dadd( -15.7736, -116.424, 22.6946, 0.33 ) }
    dend_21 { pt3dadd( -19.3836, -121.833, 26.5112, 0.33 ) }
    dend_21 { pt3dadd( -21.9605, -126.57, 31.7506, 0.33 ) }
    dend_21 { pt3dadd( -23.7155, -130.073, 38.1291, 0.33 ) }
    dend_21 { pt3dadd( -25.1572, -133.867, 44.4267, 0.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 76/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 7.02428, 6.96175, 19.0286, 0.67 ) }
    dend_17 { pt3dadd( 8.811, 2.98633, 19.3307, 0.67 ) }
    dend_17 { pt3dadd( 10.9204, -1.17401, 20.7044, 0.67 ) }
    dend_17 { pt3dadd( 12.1446, -2.99164, 21.7817, 1.33 ) }
    dend_17 { pt3dadd( 14.6043, -5.76507, 24.0688, 1.33 ) }
    dend_17 { pt3dadd( 15.7138, -6.62956, 25.018, 0.67 ) }
    dend_17 { pt3dadd( 18.2546, -8.2167, 27.0183, 0.67 ) }
    dend_17 { pt3dadd( 19.1874, -8.49016, 28.1854, 0.67 ) }
    dend_17 { pt3dadd( 20.2498, -8.11624, 29.4533, 0.33 ) }
    dend_17 { pt3dadd( 20.7522, -7.81372, 29.9272, 0.67 ) }
    dend_17 { pt3dadd( 22.1548, -6.89148, 30.3592, 0.33 ) }
    dend_17 { pt3dadd( 25.2946, -5.26031, 30.7493, 0.33 ) }
    dend_17 { pt3dadd( 32.4633, -11.6525, 34.2925, 0.33 ) }
    dend_17 { pt3dadd( 38.2063, -18.8058, 38.8905, 0.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 7.02428, 6.96175, 19.0286, 1.33 ) }
    dend_10 { pt3dadd( 5.61233, 8.73312, 18.6156, 1.33 ) }
    dend_10 { pt3dadd( 3.99632, 11.1117, 18.0658, 0.67 ) }
    dend_10 { pt3dadd( 2.10252, 14.1132, 17.3907, 0.67 ) }
    dend_10 { pt3dadd( 0.134033, 17.4945, 16.474, 0.67 ) }
    dend_10 { pt3dadd( -1.43632, 20.6475, 15.5694, 0.33 ) }
    dend_10 { pt3dadd( -2.68709, 23.5261, 14.737, 0.67 ) }
    dend_10 { pt3dadd( -3.27293, 25.5351, 14.0831, 0.33 ) }
    dend_10 { pt3dadd( -3.50438, 26.8003, 13.652, 0.33 ) }
    dend_10 { pt3dadd( -3.73557, 29.6632, 12.5237, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( -3.65212, 32.3237, 11.4085, 0.33 ) }
    dend_10 { pt3dadd( -3.47814, 34.0716, 10.6222, 0.67 ) }
    dend_10 { pt3dadd( -3.09964, 36.9142, 9.35772, 0.33 ) }
    dend_10 { pt3dadd( -2.91018, 38.1345, 8.78542, 0.33 ) }
    dend_10 { pt3dadd( -2.45627, 40.5741, 7.68888, 0.33 ) }
    dend_10 { pt3dadd( -2.37646, 41.1018, 7.50628, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 6/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.50529, 10.3693, -8.1714, 1.33 ) }
    dend_2 { pt3dadd( 5.05149, 15.0199, -11.1195, 1.33 ) }
    dend_2 { pt3dadd( 4.44744, 21.2101, -15.0435, 1.33 ) }
    dend_2 { pt3dadd( 3.49037, 31.018, -21.2609, 1.33 ) }
    dend_2 { pt3dadd( 3.21034, 33.8877, -23.0801, 1.33 ) }
    dend_2 { pt3dadd( 2.41736, 42.014, -28.2315, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.50529, 10.3693, -8.1714, 1.33 ) }
    dend_1 { pt3dadd( 7.47812, 10.469, -8.3648, 1.33 ) }
    dend_1 { pt3dadd( 11.4868, 10.8529, -8.83611, 1.33 ) }
    dend_1 { pt3dadd( 14.3674, 11.3129, -8.96818, 1.33 ) }
    dend_1 { pt3dadd( 17.1859, 11.9462, -9.00391, 1.33 ) }
    dend_1 { pt3dadd( 23.4263, 13.7513, -9.33125, 0.67 ) }
    dend_1 { pt3dadd( 26.7137, 14.7446, -9.59947, 0.67 ) }
    dend_1 { pt3dadd( 29.6498, 15.7425, -10.0617, 0.67 ) }
    dend_1 { pt3dadd( 33.1948, 17.0746, -10.9576, 0.67 ) }
    dend_1 { pt3dadd( 34.7254, 17.8192, -11.3796, 0.67 ) }
    dend_1 { pt3dadd( 38.0305, 19.8512, -12.6102, 0.67 ) }
    dend_1 { pt3dadd( 41.0466, 21.9278, -14.019, 0.67 ) }
    dend_1 { pt3dadd( 44.3801, 24.271, -15.9937, 0.67 ) }
    dend_1 { pt3dadd( 47.5277, 26.4766, -18.0963, 0.67 ) }
    dend_1 { pt3dadd( 50.8171, 28.7926, -20.4393, 0.67 ) }
    dend_1 { pt3dadd( 55.6559, 32.2075, -23.7813, 0.67 ) }
    dend_1 { pt3dadd( 58.5, 34.2999, -25.6594, 0.67 ) }
    dend_1 { pt3dadd( 60.3741, 35.7592, -26.9411, 0.67 ) }
    dend_1 { pt3dadd( 61.0112, 36.2154, -27.356, 0.33 ) }
    dend_1 { pt3dadd( 63.0871, 37.4258, -28.5672, 0.33 ) }
    dend_1 { pt3dadd( 64.5542, 37.9276, -29.2727, 1.33 ) }
    dend_1 { pt3dadd( 66.2417, 38.1054, -29.8672, 0.67 ) }
    dend_1 { pt3dadd( 67.4328, 38.0812, -30.3734, 0.67 ) }
    dend_1 { pt3dadd( 69.2259, 37.9133, -31.2811, 0.33 ) }
    dend_1 { pt3dadd( 71.9348, 37.5733, -32.7356, 0.33 ) }
    dend_1 { pt3dadd( 72.6355, 37.5074, -33.1645, 1.33 ) }
    dend_1 { pt3dadd( 76.3907, 37.4169, -35.6483, 0.33 ) }
    dend_1 { pt3dadd( 77.7579, 37.4637, -36.5482, 0.67 ) }
    dend_1 { pt3dadd( 79.2327, 37.618, -37.486, 0.33 ) }
    dend_1 { pt3dadd( 80.2358, 37.7993, -38.122, 1.33 ) }
    dend_1 { pt3dadd( 83.6627, 38.742, -40.1908, 0.33 ) }
    dend_1 { pt3dadd( 83.9037, 38.8248, -40.3286, 0.67 ) }
    dend_1 { pt3dadd( 86.1523, 39.8438, -41.5296, 0.33 ) }
    dend_1 { pt3dadd( 86.8656, 40.2219, -41.8894, 1.33 ) }
    dend_1 { pt3dadd( 89.4934, 41.8465, -43.1485, 0.33 ) }
    dend_1 { pt3dadd( 92.0582, 43.6891, -44.3337, 0.33 ) }
    dend_1 { pt3dadd( 93.6572, 44.8482, -44.9701, 0.33 ) }
    dend_1 { pt3dadd( 95.3044, 46.0011, -45.6506, 1.33 ) }
    dend_1 { pt3dadd( 98.4392, 48.2406, -47.0107, 0.33 ) }
    dend_1 { pt3dadd( 98.6749, 48.4003, -47.109, 1.33 ) }
    dend_1 { pt3dadd( 101.517, 49.9622, -48.1861, 0.33 ) }
    dend_1 { pt3dadd( 104.196, 51.0276, -49.1735, 0.67 ) }
    dend_1 { pt3dadd( 107.409, 51.9093, -50.3406, 0.33 ) }
    dend_1 { pt3dadd( 108.24, 52.042, -50.6319, 1.33 ) }
    dend_1 { pt3dadd( 110.398, 52.1354, -51.3307, 0.33 ) }
    dend_1 { pt3dadd( 113.295, 52.1223, -52.1048, 0.33 ) }
    dend_1 { pt3dadd( 114.976, 52.039, -52.5346, 0.67 ) }
    dend_1 { pt3dadd( 116.942, 51.9804, -53.146, 0.33 ) }
    dend_1 { pt3dadd( 117.555, 51.9651, -53.3504, 1.33 ) }
    dend_1 { pt3dadd( 120.571, 51.8183, -54.7136, 0.33 ) }
    dend_1 { pt3dadd( 121.492, 51.7716, -55.2218, 1.33 ) }
    dend_1 { pt3dadd( 125.404, 51.7452, -57.8977, 0.33 ) }
    dend_1 { pt3dadd( 127.074, 51.7698, -59.1856, 0.33 ) }
    dend_1 { pt3dadd( 127.388, 51.777, -59.4386, 0.67 ) }
    dend_1 { pt3dadd( 131.476, 51.8897, -62.8663, 0.33 ) }
    dend_1 { pt3dadd( 131.969, 51.9083, -63.2788, 0.67 ) }
    dend_1 { pt3dadd( 134.892, 51.8961, -65.6341, 0.33 ) }
    dend_1 { pt3dadd( 136.392, 51.8515, -66.7594, 0.33 ) }
    dend_1 { pt3dadd( 138.366, 51.7705, -68.0995, 0.33 ) }
    dend_1 { pt3dadd( 140.542, 51.7034, -69.5695, 0.33 ) }
    dend_1 { pt3dadd( 142.081, 51.729, -70.5279, 0.67 ) }
    dend_1 { pt3dadd( 145.56, 51.5935, -72.6668, 0.33 ) }
    dend_1 { pt3dadd( 145.56, 51.5935, -72.6668, 0.67 ) }
    dend_1 { pt3dadd( 147.061, 51.407, -73.5382, 0.33 ) }
    dend_1 { pt3dadd( 149.128, 51.1115, -74.8142, 0.67 ) }
    dend_1 { pt3dadd( 150.689, 50.8476, -75.7571, 0.33 ) }
    dend_1 { pt3dadd( 152.221, 50.4843, -76.7085, 0.33 ) }
    dend_1 { pt3dadd( 154.209, 49.9741, -77.8312, 0.33 ) }
    dend_1 { pt3dadd( 155.049, 49.7371, -78.3083, 0.67 ) }
    dend_1 { pt3dadd( 158.275, 48.6749, -80.1617, 0.33 ) }
    dend_1 { pt3dadd( 158.617, 48.5462, -80.3477, 0.67 ) }
    dend_1 { pt3dadd( 161.825, 47.2141, -82.2765, 0.33 ) }
    dend_1 { pt3dadd( 162.488, 46.9581, -82.7041, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.22997, 39.1086, 2.31199, 0.67 ) }
    axon_1 { pt3dadd( 1.64622, 54.1028, 2.31199, 0.67 ) }
    axon_1 { pt3dadd( 2.06247, 69.097, 2.31199, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 88/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -11.9629, -11.4764, -16.3497, 1.33 ) }
    dend_38 { pt3dadd( -15.5722, -15.835, -28.6411, 1.33 ) }
    dend_38 { pt3dadd( -16.5281, -17.4082, -31.9542, 0.67 ) }
    dend_38 { pt3dadd( -17.5657, -18.8299, -34.7954, 0.67 ) }
    dend_38 { pt3dadd( -17.9919, -19.3185, -35.7912, 0.67 ) }
    dend_38 { pt3dadd( -20.5741, -21.7913, -40.8032, 0.67 ) }
    dend_38 { pt3dadd( -21.3473, -22.5173, -42.3756, 1.33 ) }
    dend_38 { pt3dadd( -24.9214, -25.4076, -48.1446, 0.33 ) }
    dend_38 { pt3dadd( -26.808, -26.9073, -51.0948, 1.33 ) }
    dend_38 { pt3dadd( -27.7943, -27.6045, -52.5467, 0.67 ) }
    dend_38 { pt3dadd( -30.4845, -29.1384, -56.2791, 2.0 ) }
    dend_38 { pt3dadd( -34.1336, -30.5816, -60.8515, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_38 { pt3dadd( -37.0828, -31.5236, -64.4797, 0.33 ) }
    dend_38 { pt3dadd( -38.3502, -31.8378, -65.7942, 1.33 ) }
    dend_38 { pt3dadd( -42.5936, -32.9713, -69.7547, 0.33 ) }
    dend_38 { pt3dadd( -43.0087, -33.0866, -70.0571, 0.67 ) }
    dend_38 { pt3dadd( -45.488, -33.8711, -71.4234, 0.33 ) }
    dend_38 { pt3dadd( -46.6817, -34.2903, -71.8889, 0.67 ) }
    dend_38 { pt3dadd( -51.1121, -36.0003, -73.4638, 0.33 ) }
    dend_38 { pt3dadd( -52.8214, -36.7303, -73.9524, 2.0 ) }
    dend_38 { pt3dadd( -56.4576, -38.3471, -75.0062, 0.67 ) }
    dend_38 { pt3dadd( -59.8125, -39.8591, -76.5826, 0.67 ) }
    dend_38 { pt3dadd( -61.6519, -40.7644, -77.7709, 0.33 ) }
    dend_38 { pt3dadd( -63.1113, -41.5527, -79.2829, 1.33 ) }
    dend_38 { pt3dadd( -64.3649, -42.2065, -81.2124, 0.33 ) }
    dend_38 { pt3dadd( -66.4399, -43.3363, -85.3274, 0.67 ) }
    dend_38 { pt3dadd( -68.2619, -44.3271, -89.3452, 0.33 ) }
    dend_38 { pt3dadd( -69.2166, -44.7718, -91.449, 1.33 ) }
    dend_38 { pt3dadd( -71.7209, -45.8386, -97.4652, 0.33 ) }
    dend_38 { pt3dadd( -73.4217, -46.5153, -101.527, 0.33 ) }
    dend_38 { pt3dadd( -75.2351, -47.0595, -105.574, 0.67 ) }
    dend_38 { pt3dadd( -77.1155, -47.4659, -109.067, 0.33 ) }
    dend_38 { pt3dadd( -78.4905, -47.6139, -111.15, 0.33 ) }
    dend_38 { pt3dadd( -81.2926, -47.5533, -114.647, 0.33 ) }
    dend_38 { pt3dadd( -83.0677, -47.1997, -116.19, 0.33 ) }
    dend_38 { pt3dadd( -84.6006, -46.8263, -117.235, 0.33 ) }
    dend_38 { pt3dadd( -86.0852, -46.2957, -118.071, 1.33 ) }
    dend_38 { pt3dadd( -88.498, -45.2889, -119.53, 0.33 ) }
    dend_38 { pt3dadd( -90.261, -44.6522, -120.607, 0.33 ) }
    dend_38 { pt3dadd( -93.3795, -43.515, -122.497, 0.33 ) }
    dend_38 { pt3dadd( -96.0244, -42.3075, -124.733, 0.33 ) }
    dend_38 { pt3dadd( -97.1734, -41.6986, -126.023, 0.67 ) }
    dend_38 { pt3dadd( -100.212, -39.9214, -130.079, 0.33 ) }
    dend_38 { pt3dadd( -100.923, -39.4772, -131.13, 0.67 ) }
    dend_38 { pt3dadd( -101.89, -38.8775, -132.599, 0.33 ) }
    dend_38 { pt3dadd( -104.593, -37.6423, -137.047, 2.0 ) }
    dend_38 { pt3dadd( -106.442, -36.7707, -140.078, 0.33 ) }
    dend_38 { pt3dadd( -107.245, -36.4867, -141.347, 1.33 ) }
    dend_38 { pt3dadd( -109.266, -35.886, -144.29, 0.33 ) }
    dend_38 { pt3dadd( -109.739, -35.7731, -144.964, 0.67 ) }
    dend_38 { pt3dadd( -114.382, -35.2237, -150.79, 0.33 ) }
    dend_38 { pt3dadd( -116.545, -35.2281, -153.365, 1.33 ) }
    dend_38 { pt3dadd( -118.258, -35.4124, -155.444, 0.33 ) }
    dend_38 { pt3dadd( -119.526, -35.6357, -157.2, 0.33 ) }
    dend_38 { pt3dadd( -121.915, -36.1456, -160.569, 1.33 ) }
    dend_38 { pt3dadd( -123.378, -36.3697, -162.571, 0.33 ) }
    dend_38 { pt3dadd( -126.308, -36.7162, -166.564, 1.33 ) }
    dend_38 { pt3dadd( -128.103, -36.9109, -169.202, 0.67 ) }
    dend_38 { pt3dadd( -131.014, -36.9779, -173.55, 0.33 ) }
    dend_38 { pt3dadd( -132.555, -37.0032, -175.766, 0.67 ) }
    dend_38 { pt3dadd( -134.086, -36.9591, -177.743, 0.67 ) }
    dend_38 { pt3dadd( -137.551, -36.6439, -182.401, 0.33 ) }
    dend_38 { pt3dadd( -138.268, -36.4941, -183.32, 0.67 ) }
    dend_38 { pt3dadd( -139.644, -36.0646, -185.211, 0.33 ) }
    dend_38 { pt3dadd( -140.645, -35.7713, -186.518, 0.67 ) }
    dend_38 { pt3dadd( -141.897, -35.3992, -188.24, 0.33 ) }
    dend_38 { pt3dadd( -143.932, -34.8438, -190.898, 0.67 ) }
    dend_38 { pt3dadd( -145.017, -34.4681, -192.363, 0.33 ) }
    dend_38 { pt3dadd( -145.715, -34.2675, -193.274, 1.33 ) }
    dend_38 { pt3dadd( -149.033, -33.4316, -197.807, 0.33 ) }
    dend_38 { pt3dadd( -150.336, -33.1296, -199.517, 0.33 ) }
    dend_38 { pt3dadd( -151.021, -33.0059, -200.38, 0.67 ) }
    dend_38 { pt3dadd( -153.587, -32.8112, -203.361, 0.33 ) }
    dend_38 { pt3dadd( -155.765, -32.8893, -205.862, 0.67 ) }
    dend_38 { pt3dadd( -158.433, -33.1239, -208.8, 0.33 ) }
    dend_38 { pt3dadd( -159.897, -33.4583, -210.649, 0.33 ) }
    dend_38 { pt3dadd( -160.114, -33.5278, -210.94, 0.67 ) }
    dend_38 { pt3dadd( -162.227, -34.4572, -213.724, 0.33 ) }
    dend_38 { pt3dadd( -163.079, -34.9589, -214.871, 0.67 ) }
    dend_38 { pt3dadd( -164.12, -35.7765, -216.675, 0.67 ) }
    dend_38 { pt3dadd( -167.661, -38.8358, -223.172, 0.33 ) }
    dend_38 { pt3dadd( -168.561, -39.6763, -225.025, 0.33 ) }
    dend_38 { pt3dadd( -169.849, -40.9332, -227.849, 0.33 ) }
    dend_38 { pt3dadd( -170.824, -42.0, -230.251, 0.67 ) }
    dend_38 { pt3dadd( -172.756, -44.3166, -235.65, 0.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.9629, -11.4764, -16.3497, 1.33 ) }
    dend_37 { pt3dadd( -13.4689, -11.387, -17.984, 1.33 ) }
    dend_37 { pt3dadd( -15.4081, -10.8715, -20.1226, 0.67 ) }
    dend_37 { pt3dadd( -16.1278, -10.6223, -20.8321, 1.33 ) }
    dend_37 { pt3dadd( -18.8991, -9.91409, -23.3068, 1.33 ) }
    dend_37 { pt3dadd( -20.2829, -9.40471, -24.3787, 0.67 ) }
    dend_37 { pt3dadd( -22.0513, -8.78516, -25.6042, 0.67 ) }
    dend_37 { pt3dadd( -23.789, -8.25233, -26.7209, 0.67 ) }
    dend_37 { pt3dadd( -25.2145, -7.84403, -27.7644, 1.33 ) }
    dend_37 { pt3dadd( -26.839, -7.186, -29.0401, 0.67 ) }
    dend_37 { pt3dadd( -29.5709, -5.73266, -31.4343, 0.33 ) }
    dend_37 { pt3dadd( -30.5405, -5.18349, -32.3766, 0.33 ) }
    dend_37 { pt3dadd( -33.0132, -3.80572, -34.8901, 1.33 ) }
    dend_37 { pt3dadd( -35.8574, -2.15453, -38.0493, 0.67 ) }
    dend_37 { pt3dadd( -37.1184, -1.30936, -39.5667, 0.33 ) }
    dend_37 { pt3dadd( -38.492, -0.25513, -41.2984, 1.33 ) }
    dend_37 { pt3dadd( -39.3228, 0.413534, -42.3958, 0.33 ) }
    dend_37 { pt3dadd( -39.7325, 0.779054, -42.9067, 1.33 ) }
    dend_37 { pt3dadd( -41.6538, 2.63822, -44.8745, 0.33 ) }
    dend_37 { pt3dadd( -43.242, 4.21766, -46.1105, 0.33 ) }
    dend_37 { pt3dadd( -44.0827, 4.99357, -46.6344, 0.33 ) }
    dend_37 { pt3dadd( -44.5769, 5.42006, -46.9259, 1.33 ) }
    dend_37 { pt3dadd( -45.9644, 6.61729, -47.7909, 0.33 ) }
    dend_37 { pt3dadd( -47.5092, 7.90533, -48.7309, 0.67 ) }
    dend_37 { pt3dadd( -48.7967, 8.88599, -49.5928, 0.33 ) }
    dend_37 { pt3dadd( -50.0527, 9.74831, -50.6488, 1.33 ) }
    dend_37 { pt3dadd( -52.387, 11.1886, -52.8662, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_37 { pt3dadd( -52.6096, 11.3304, -53.0996, 0.67 ) }
    dend_37 { pt3dadd( -53.5516, 11.9776, -54.2119, 0.33 ) }
    dend_37 { pt3dadd( -55.0428, 13.1313, -56.3346, 0.67 ) }
    dend_37 { pt3dadd( -55.7467, 13.8245, -57.4724, 0.33 ) }
    dend_37 { pt3dadd( -55.9928, 14.1502, -57.8605, 0.67 ) }
    dend_37 { pt3dadd( -56.9476, 15.7522, -59.2628, 0.33 ) }
    dend_37 { pt3dadd( -57.2845, 16.376, -59.8133, 0.67 ) }
    dend_37 { pt3dadd( -58.1778, 18.2098, -61.3734, 0.33 ) }
    dend_37 { pt3dadd( -58.4216, 18.7394, -61.7897, 0.67 ) }
    dend_37 { pt3dadd( -59.4073, 20.8533, -63.7321, 0.33 ) }
    dend_37 { pt3dadd( -59.5341, 21.0878, -63.9745, 1.33 ) }
    dend_37 { pt3dadd( -60.7494, 23.0007, -66.0548, 0.33 ) }
    dend_37 { pt3dadd( -61.0022, 23.3438, -66.4238, 0.33 ) }
    dend_37 { pt3dadd( -61.0022, 23.3438, -66.4238, 0.67 ) }
    dend_37 { pt3dadd( -63.1956, 25.723, -68.7911, 0.33 ) }
    dend_37 { pt3dadd( -63.649, 26.18, -69.2082, 0.67 ) }
    dend_37 { pt3dadd( -65.2259, 27.729, -70.4025, 0.33 ) }
    dend_37 { pt3dadd( -65.7023, 28.2488, -70.6799, 0.67 ) }
    dend_37 { pt3dadd( -66.8704, 29.6384, -71.2916, 0.33 ) }
    dend_37 { pt3dadd( -67.1961, 30.0698, -71.439, 0.67 ) }
    dend_37 { pt3dadd( -68.6094, 32.2073, -71.9029, 0.33 ) }
    dend_37 { pt3dadd( -68.8733, 32.6973, -72.0005, 1.33 ) }
    dend_37 { pt3dadd( -70.1739, 35.7078, -72.5385, 0.33 ) }
    dend_37 { pt3dadd( -70.2478, 35.9431, -72.5929, 0.67 ) }
    dend_37 { pt3dadd( -70.4562, 36.9359, -72.8671, 0.33 ) }
    dend_37 { pt3dadd( -70.5524, 37.4619, -73.0405, 0.67 ) }
    dend_37 { pt3dadd( -70.7742, 38.9468, -73.6262, 0.33 ) }
    dend_37 { pt3dadd( -70.8386, 39.2667, -73.7724, 1.33 ) }
    dend_37 { pt3dadd( -71.5479, 41.7572, -75.1679, 0.33 ) }
    dend_37 { pt3dadd( -71.7221, 42.2228, -75.4327, 1.33 ) }
    dend_37 { pt3dadd( -72.3178, 43.4706, -76.106, 0.33 ) }
    dend_37 { pt3dadd( -72.4297, 43.676, -76.1979, 0.67 ) }
    dend_37 { pt3dadd( -73.0716, 44.6963, -76.5616, 0.33 ) }
    dend_37 { pt3dadd( -73.0716, 44.6963, -76.5616, 0.67 ) }
    dend_37 { pt3dadd( -74.0492, 45.9756, -76.6826, 0.33 ) }
    dend_37 { pt3dadd( -74.6821, 46.8503, -76.7374, 0.67 ) }
    dend_37 { pt3dadd( -75.7388, 48.5966, -76.7626, 0.33 ) }
    dend_37 { pt3dadd( -75.8628, 48.8145, -76.7605, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 38/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -9.70173, -19.4763, -12.3331, 0.67 ) }
    dend_35 { pt3dadd( -11.3394, -23.4, -16.8128, 0.67 ) }
    dend_35 { pt3dadd( -12.2322, -25.7776, -19.2811, 0.67 ) }
    dend_35 { pt3dadd( -13.5629, -29.4639, -23.0377, 0.67 ) }
    dend_35 { pt3dadd( -14.3146, -31.6118, -25.1915, 1.33 ) }
    dend_35 { pt3dadd( -16.3491, -37.0706, -30.9113, 0.67 ) }
    dend_35 { pt3dadd( -17.1985, -39.1541, -33.182, 0.33 ) }
    dend_35 { pt3dadd( -17.8319, -40.7088, -34.9554, 0.33 ) }
    dend_35 { pt3dadd( -18.8259, -42.9346, -37.7838, 2.0 ) }
    dend_35 { pt3dadd( -20.6392, -46.6414, -42.6656, 0.67 ) }
    dend_35 { pt3dadd( -22.0837, -49.3642, -46.3433, 0.33 ) }
    dend_35 { pt3dadd( -23.7697, -52.1835, -49.9191, 1.33 ) }
    dend_35 { pt3dadd( -26.3405, -55.9948, -54.5977, 0.33 ) }
    dend_35 { pt3dadd( -26.6503, -56.4468, -55.135, 0.67 ) }
    dend_35 { pt3dadd( -27.5808, -57.7963, -56.5464, 0.33 ) }
    dend_35 { pt3dadd( -28.4608, -59.0549, -57.6395, 0.67 ) }
    dend_35 { pt3dadd( -30.2141, -61.7101, -59.4511, 0.33 ) }
    dend_35 { pt3dadd( -31.8779, -64.2906, -60.8611, 0.33 ) }
    dend_35 { pt3dadd( -33.4384, -66.7549, -62.0422, 0.67 ) }
    dend_35 { pt3dadd( -34.0945, -67.8481, -62.6403, 0.33 ) }
    dend_35 { pt3dadd( -34.6996, -68.9849, -63.3, 0.67 ) }
    dend_35 { pt3dadd( -35.9602, -71.56, -64.891, 0.33 ) }
    dend_35 { pt3dadd( -36.2371, -72.1493, -65.289, 1.33 ) }
    dend_35 { pt3dadd( -37.3921, -74.6899, -66.9615, 0.33 ) }
    dend_35 { pt3dadd( -37.5764, -75.0884, -67.179, 0.67 ) }
    dend_35 { pt3dadd( -38.6504, -77.3574, -68.4678, 0.33 ) }
    dend_35 { pt3dadd( -39.5928, -79.1289, -69.3997, 1.33 ) }
    dend_35 { pt3dadd( -40.8037, -81.1169, -70.5027, 0.33 ) }
    dend_35 { pt3dadd( -41.1563, -81.6142, -70.8009, 0.67 ) }
    dend_35 { pt3dadd( -42.7716, -83.6033, -72.1526, 0.33 ) }
    dend_35 { pt3dadd( -43.8611, -84.8488, -73.059, 0.67 ) }
    dend_35 { pt3dadd( -46.3512, -87.4065, -75.1374, 0.33 ) }
    dend_35 { pt3dadd( -48.2077, -89.2296, -76.6358, 0.67 ) }
    dend_35 { pt3dadd( -49.9077, -90.7402, -77.9801, 0.33 ) }
    dend_35 { pt3dadd( -51.4183, -92.0492, -79.2555, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 73/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.70173, -19.4763, -12.3331, 0.33 ) }
    dend_34 { pt3dadd( -10.2767, -22.5298, -12.1519, 0.33 ) }
    dend_34 { pt3dadd( -10.5598, -25.4213, -11.9963, 0.67 ) }
    dend_34 { pt3dadd( -10.6633, -26.7437, -11.9339, 0.67 ) }
    dend_34 { pt3dadd( -10.9832, -30.7906, -11.6026, 0.67 ) }
    dend_34 { pt3dadd( -11.1981, -34.2068, -11.3191, 0.67 ) }
    dend_34 { pt3dadd( -11.6983, -39.3917, -10.7507, 0.67 ) }
    dend_34 { pt3dadd( -12.3794, -44.2034, -10.0707, 0.67 ) }
    dend_34 { pt3dadd( -12.8145, -46.9099, -9.63916, 1.33 ) }
    dend_34 { pt3dadd( -13.7616, -52.4655, -8.7108, 0.67 ) }
    dend_34 { pt3dadd( -14.6549, -57.2135, -7.87045, 0.67 ) }
    dend_34 { pt3dadd( -16.1987, -63.6421, -6.71235, 0.67 ) }
    dend_34 { pt3dadd( -17.1634, -66.7284, -6.03276, 0.33 ) }
    dend_34 { pt3dadd( -17.4376, -67.3944, -5.85503, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -142.596, -39.8203, -135.666, 0.33 ) }
    dend_30 { pt3dadd( -143.412, -39.0465, -137.359, 0.33 ) }
    dend_30 { pt3dadd( -143.61, -38.8765, -137.678, 0.67 ) }
    dend_30 { pt3dadd( -144.887, -37.9706, -139.804, 0.33 ) }
    dend_30 { pt3dadd( -147.696, -35.9953, -144.438, 0.67 ) }
    dend_30 { pt3dadd( -150.57, -33.9241, -149.352, 0.33 ) }
    dend_30 { pt3dadd( -152.612, -32.3939, -152.772, 1.33 ) }
    dend_30 { pt3dadd( -153.586, -31.6578, -154.436, 1.33 ) }
    dend_30 { pt3dadd( -157.331, -28.7359, -160.694, 0.33 ) }
    dend_30 { pt3dadd( -158.27, -28.0691, -162.143, 0.33 ) }
    dend_30 { pt3dadd( -159.726, -27.0136, -164.15, 0.67 ) }
    dend_30 { pt3dadd( -161.024, -26.124, -165.94, 0.33 ) }
    dend_30 { pt3dadd( -161.024, -26.124, -165.94, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( -162.773, -24.6752, -168.91, 0.33 ) }
    dend_30 { pt3dadd( -164.78, -22.8132, -170.956, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 2/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -142.596, -39.8203, -135.666, 0.33 ) }
    dend_29 { pt3dadd( -140.279, -38.5778, -134.276, 0.33 ) }
    dend_29 { pt3dadd( -139.117, -37.9552, -133.579, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 5/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 27.163, -154.774, 65.0906, 0.67 ) }
    dend_26 { pt3dadd( 28.4814, -161.435, 68.3712, 0.67 ) }
    dend_26 { pt3dadd( 29.7208, -167.63, 72.453, 0.67 ) }
    dend_26 { pt3dadd( 31.5482, -173.406, 76.8833, 0.67 ) }
    dend_26 { pt3dadd( 34.4277, -178.652, 81.3836, 0.67 ) }
    dend_26 { pt3dadd( 37.0802, -183.602, 86.3207, 0.67 ) }
    dend_26 { pt3dadd( 39.4655, -189.259, 90.6311, 0.67 ) }
    dend_26 { pt3dadd( 42.7578, -194.082, 95.2957, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 27.163, -154.774, 65.0906, 0.33 ) }
    dend_25 { pt3dadd( 28.1932, -163.625, 68.6922, 0.67 ) }
    dend_25 { pt3dadd( 29.7962, -172.415, 72.2329, 0.67 ) }
    dend_25 { pt3dadd( 33.1213, -180.905, 75.249, 0.67 ) }
    dend_25 { pt3dadd( 36.5259, -189.82, 76.5298, 0.67 ) }
    dend_25 { pt3dadd( 39.3212, -198.546, 79.436, 0.67 ) }
    dend_25 { pt3dadd( 43.5334, -206.418, 82.9101, 0.67 ) }
    dend_25 { pt3dadd( 47.4511, -214.173, 86.9312, 0.67 ) }
    dend_25 { pt3dadd( 50.4321, -223.104, 88.9299, 0.67 ) }
    dend_25 { pt3dadd( 53.9753, -231.976, 90.1163, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -25.1572, -133.867, 44.4267, 0.67 ) }
    dend_23 { pt3dadd( -29.612, -145.883, 43.0555, 0.67 ) }
    dend_23 { pt3dadd( -32.7082, -158.402, 42.4141, 0.67 ) }
    dend_23 { pt3dadd( -36.4606, -170.749, 42.5888, 0.67 ) }
    dend_23 { pt3dadd( -40.4092, -183.007, 43.3726, 0.67 ) }
    dend_23 { pt3dadd( -43.0174, -195.508, 45.3009, 0.67 ) }
    dend_23 { pt3dadd( -43.5061, -208.129, 48.0277, 0.67 ) }
    dend_23 { pt3dadd( -43.8578, -220.998, 49.2352, 0.67 ) }
    dend_23 { pt3dadd( -43.4587, -233.889, 48.3414, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.1572, -133.867, 44.4267, 0.33 ) }
    dend_22 { pt3dadd( -26.7099, -140.534, 50.6701, 0.67 ) }
    dend_22 { pt3dadd( -27.7098, -147.244, 56.9829, 0.67 ) }
    dend_22 { pt3dadd( -29.1097, -155.174, 61.6557, 0.67 ) }
    dend_22 { pt3dadd( -31.6127, -162.797, 66.3514, 0.67 ) }
    dend_22 { pt3dadd( -34.8318, -169.833, 71.4613, 0.67 ) }
    dend_22 { pt3dadd( -38.0821, -175.927, 77.6027, 0.67 ) }
    dend_22 { pt3dadd( -42.3071, -181.175, 83.8897, 0.67 ) }
    dend_22 { pt3dadd( -47.5097, -186.288, 89.5108, 0.67 ) }
    dend_22 { pt3dadd( -53.5907, -190.679, 94.8191, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 38.2063, -18.8058, 38.8905, 0.67 ) }
    dend_19 { pt3dadd( 45.5233, -22.9822, 42.4068, 0.67 ) }
    dend_19 { pt3dadd( 51.8622, -27.5302, 47.1556, 0.67 ) }
    dend_19 { pt3dadd( 57.4643, -33.2072, 51.6665, 0.67 ) }
    dend_19 { pt3dadd( 63.7914, -39.461, 53.9731, 0.67 ) }
    dend_19 { pt3dadd( 70.2442, -45.1196, 57.1985, 0.67 ) }
    dend_19 { pt3dadd( 75.865, -51.2771, 61.041, 0.67 ) }
    dend_19 { pt3dadd( 81.7485, -57.6792, 64.0222, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 50/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 38.2063, -18.8058, 38.8905, 0.33 ) }
    dend_18 { pt3dadd( 44.6935, -24.695, 43.2594, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.37646, 41.1018, 7.50628, 0.67 ) }
    dend_12 { pt3dadd( -2.71213, 45.5868, 5.8926, 0.67 ) }
    dend_12 { pt3dadd( -2.90269, 48.1327, 4.97657, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.37646, 41.1018, 7.50628, 0.33 ) }
    dend_11 { pt3dadd( -4.37037, 43.7986, 11.9838, 0.33 ) }
    dend_11 { pt3dadd( -5.12182, 44.8149, 13.6712, 0.33 ) }
    dend_11 { pt3dadd( -6.19945, 46.2724, 16.0911, 0.33 ) }
    dend_11 { pt3dadd( -8.92126, 54.0182, 25.7499, 0.33 ) }
    dend_11 { pt3dadd( -12.6875, 62.9867, 33.936, 0.33 ) }
    dend_11 { pt3dadd( -14.625, 73.4834, 40.9485, 0.33 ) }
    dend_11 { pt3dadd( -14.5127, 83.5021, 48.8425, 0.33 ) }
    dend_11 { pt3dadd( -13.7676, 93.0076, 57.2884, 0.33 ) }
    dend_11 { pt3dadd( -10.9074, 101.392, 66.3929, 0.33 ) }
    dend_11 { pt3dadd( -7.4475, 110.784, 74.2732, 0.33 ) }
    dend_11 { pt3dadd( -2.34661, 121.387, 79.2891, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.41736, 42.014, -28.2315, 0.67 ) }
    dend_8 { pt3dadd( 1.0564, 44.7263, -28.5646, 0.67 ) }
    dend_8 { pt3dadd( 0.178512, 46.4723, -28.6096, 0.67 ) }
    dend_8 { pt3dadd( -1.28188, 49.2298, -28.5954, 0.67 ) }
    dend_8 { pt3dadd( -2.31465, 51.1349, -28.579, 0.67 ) }
    dend_8 { pt3dadd( -3.66296, 53.571, -28.5717, 0.67 ) }
    dend_8 { pt3dadd( -5.38862, 56.8603, -28.5889, 0.67 ) }
    dend_8 { pt3dadd( -6.40615, 58.9441, -28.6192, 0.67 ) }
    dend_8 { pt3dadd( -6.94692, 60.2807, -28.6314, 0.67 ) }
    dend_8 { pt3dadd( -7.93725, 63.0617, -28.6539, 0.67 ) }
    dend_8 { pt3dadd( -8.41918, 64.3992, -28.6625, 0.67 ) }
    dend_8 { pt3dadd( -9.72004, 68.0478, -28.6469, 0.67 ) }
    dend_8 { pt3dadd( -10.2439, 69.6194, -28.7426, 0.67 ) }
    dend_8 { pt3dadd( -10.6667, 70.9853, -28.8405, 0.67 ) }
    dend_8 { pt3dadd( -10.929, 71.8447, -28.8893, 0.67 ) }
    dend_8 { pt3dadd( -11.631, 74.0497, -28.9993, 0.67 ) }
    dend_8 { pt3dadd( -12.4704, 76.6208, -29.1179, 0.67 ) }
    dend_8 { pt3dadd( -13.3685, 79.0839, -29.1695, 0.67 ) }
    dend_8 { pt3dadd( -14.3927, 81.6601, -29.1872, 0.67 ) }
    dend_8 { pt3dadd( -15.2749, 83.7448, -29.189, 0.67 ) }
    dend_8 { pt3dadd( -16.1814, 86.0345, -29.2373, 0.33 ) }
    dend_8 { pt3dadd( -16.8319, 87.8387, -29.2802, 0.67 ) }
    dend_8 { pt3dadd( -17.4456, 89.6333, -29.2829, 0.33 ) }
    dend_8 { pt3dadd( -17.7194, 90.5453, -29.2583, 0.67 ) }
    dend_8 { pt3dadd( -18.283, 92.6138, -29.1192, 0.33 ) }
    dend_8 { pt3dadd( -18.7342, 94.9003, -28.8646, 1.33 ) }
    dend_8 { pt3dadd( -18.9782, 97.0125, -28.3725, 0.33 ) }
    dend_8 { pt3dadd( -18.9766, 97.8749, -28.0768, 0.33 ) }
    dend_8 { pt3dadd( -18.9378, 98.634, -27.8004, 0.67 ) }
    dend_8 { pt3dadd( -18.8804, 100.094, -27.2327, 0.33 ) }
    dend_8 { pt3dadd( -18.8396, 102.351, -26.2629, 0.33 ) }
    dend_8 { pt3dadd( -18.979, 104.597, -25.2018, 0.33 ) }
    dend_8 { pt3dadd( -19.0808, 105.623, -24.7705, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_8 { pt3dadd( -19.4528, 108.269, -23.844, 0.33 ) }
    dend_8 { pt3dadd( -19.7392, 109.759, -23.4508, 0.33 ) }
    dend_8 { pt3dadd( -19.8918, 110.476, -23.3009, 0.67 ) }
    dend_8 { pt3dadd( -20.1863, 112.068, -23.0278, 0.33 ) }
    dend_8 { pt3dadd( -20.3178, 112.866, -22.9471, 0.67 ) }
    dend_8 { pt3dadd( -20.7029, 115.168, -22.7578, 0.33 ) }
    dend_8 { pt3dadd( -20.8793, 117.273, -22.5774, 0.33 ) }
    dend_8 { pt3dadd( -21.0268, 119.477, -22.4397, 0.33 ) }
    dend_8 { pt3dadd( -21.1083, 121.137, -22.3743, 0.67 ) }
    dend_8 { pt3dadd( -21.1326, 124.567, -22.2734, 0.67 ) }
    dend_8 { pt3dadd( -21.114, 125.775, -22.2346, 0.67 ) }
    dend_8 { pt3dadd( -20.9989, 129.319, -22.1268, 0.67 ) }
    dend_8 { pt3dadd( -20.8966, 131.597, -22.0748, 0.67 ) }
    dend_8 { pt3dadd( -20.9009, 133.034, -22.0573, 0.67 ) }
    dend_8 { pt3dadd( -20.9527, 134.614, -22.0754, 0.33 ) }
    dend_8 { pt3dadd( -21.0258, 135.612, -22.1194, 0.33 ) }
    dend_8 { pt3dadd( -21.157, 137.237, -22.2152, 0.67 ) }
    dend_8 { pt3dadd( -21.7477, 141.944, -22.599, 0.67 ) }
    dend_8 { pt3dadd( -22.0831, 144.555, -22.8218, 0.67 ) }
    dend_8 { pt3dadd( -22.4502, 146.976, -23.059, 0.67 ) }
    dend_8 { pt3dadd( -22.8759, 149.436, -23.3259, 0.67 ) }
    dend_8 { pt3dadd( -23.6541, 153.699, -23.8071, 0.67 ) }
    dend_8 { pt3dadd( -24.2303, 156.577, -24.1174, 0.67 ) }
    dend_8 { pt3dadd( -24.6847, 158.583, -24.3246, 0.67 ) }
    dend_8 { pt3dadd( -24.9817, 159.986, -24.4379, 0.67 ) }
    dend_8 { pt3dadd( -25.2038, 160.965, -24.483, 1.33 ) }
    dend_8 { pt3dadd( -25.8807, 164.266, -24.4985, 0.67 ) }
    dend_8 { pt3dadd( -26.495, 167.23, -24.4191, 0.33 ) }
    dend_8 { pt3dadd( -26.6223, 168.041, -24.3634, 0.67 ) }
    dend_8 { pt3dadd( -26.901, 170.242, -24.1972, 0.33 ) }
    dend_8 { pt3dadd( -27.1101, 172.469, -23.9794, 0.33 ) }
    dend_8 { pt3dadd( -27.2828, 175.453, -23.6325, 0.33 ) }
    dend_8 { pt3dadd( -27.2934, 176.563, -23.475, 0.33 ) }
    dend_8 { pt3dadd( -27.2901, 177.069, -23.407, 0.33 ) }
    dend_8 { pt3dadd( -27.346, 180.071, -23.0375, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.41736, 42.014, -28.2315, 1.33 ) }
    dend_3 { pt3dadd( 2.42888, 45.0389, -31.1823, 1.33 ) }
    dend_3 { pt3dadd( 2.44921, 50.3794, -36.3921, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.90269, 48.1327, 4.97657, 0.67 ) }
    dend_16 { pt3dadd( -3.09975, 46.9069, -0.551924, 0.67 ) }
    dend_16 { pt3dadd( -3.08211, 46.5085, -2.04655, 0.67 ) }
    dend_16 { pt3dadd( -3.07432, 46.0909, -3.42928, 1.33 ) }
    dend_16 { pt3dadd( -3.21359, 45.3559, -6.82363, 0.33 ) }
    dend_16 { pt3dadd( -3.27783, 44.6186, -10.1248, 0.33 ) }
    dend_16 { pt3dadd( -3.28992, 44.3676, -11.1692, 0.33 ) }
    dend_16 { pt3dadd( -3.21689, 44.0926, -12.1795, 0.67 ) }
    dend_16 { pt3dadd( -3.20108, 43.8346, -13.1952, 0.67 ) }
    dend_16 { pt3dadd( -3.30865, 42.6309, -19.355, 0.67 ) }
    dend_16 { pt3dadd( -3.32519, 42.4049, -21.0746, 0.67 ) }
    dend_16 { pt3dadd( -3.47663, 42.127, -22.8246, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 50/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.90269, 48.1327, 4.97657, 0.33 ) }
    dend_13 { pt3dadd( -3.34372, 51.0076, 10.5093, 0.33 ) }
    dend_13 { pt3dadd( -3.61122, 51.5652, 12.1017, 0.33 ) }
    dend_13 { pt3dadd( -3.87345, 51.8715, 13.5476, 1.33 ) }
    dend_13 { pt3dadd( -5.08888, 52.7551, 21.9838, 0.67 ) }
    dend_13 { pt3dadd( -5.44156, 53.0115, 24.4317, 0.67 ) }
    dend_13 { pt3dadd( -6.14521, 53.523, 29.3157, 1.33 ) }
    dend_13 { pt3dadd( -6.29629, 53.5391, 32.6511, 0.33 ) }
    dend_13 { pt3dadd( -6.38879, 53.4988, 35.2493, 0.33 ) }
    dend_13 { pt3dadd( -6.63619, 53.2213, 38.0386, 0.67 ) }
    dend_13 { pt3dadd( -5.89176, 54.6352, 50.3613, 0.67 ) }
    dend_13 { pt3dadd( -5.64889, 55.2486, 62.7702, 0.67 ) }
    dend_13 { pt3dadd( -6.36588, 56.1507, 75.1426, 0.67 ) }
    dend_13 { pt3dadd( -6.36581, 57.1658, 87.5268, 0.67 ) }
    dend_13 { pt3dadd( -6.83613, 59.39, 99.745, 0.67 ) }
    dend_13 { pt3dadd( -10.3776, 60.0763, 111.636, 0.67 ) }
    dend_13 { pt3dadd( -13.1758, 58.958, 123.701, 0.67 ) }
    dend_13 { pt3dadd( -18.3076, 60.5668, 134.903, 0.67 ) }
    dend_13 { pt3dadd( -23.2825, 62.8773, 146.056, 0.67 ) }
    dend_13 { pt3dadd( -26.5315, 65.1154, 157.842, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 70/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.44921, 50.3794, -36.3921, 0.67 ) }
    dend_7 { pt3dadd( 4.91436, 57.4237, -37.5224, 0.67 ) }
    dend_7 { pt3dadd( 5.47417, 59.2524, -37.8987, 0.67 ) }
    dend_7 { pt3dadd( 5.9681, 61.144, -38.3507, 0.33 ) }
    dend_7 { pt3dadd( 6.19786, 62.2591, -38.649, 1.33 ) }
    dend_7 { pt3dadd( 6.77297, 65.9412, -39.6, 0.33 ) }
    dend_7 { pt3dadd( 6.90411, 67.1924, -39.8433, 0.33 ) }
    dend_7 { pt3dadd( 6.93982, 68.6197, -40.1002, 1.33 ) }
    dend_7 { pt3dadd( 6.93262, 70.9444, -40.3688, 0.67 ) }
    dend_7 { pt3dadd( 6.9327, 75.3242, -40.8306, 0.33 ) }
    dend_7 { pt3dadd( 6.91313, 79.0114, -41.1392, 1.33 ) }
    dend_7 { pt3dadd( 6.89976, 82.8551, -41.3079, 0.33 ) }
    dend_7 { pt3dadd( 6.91135, 83.7102, -41.3487, 0.67 ) }
    dend_7 { pt3dadd( 6.9708, 87.542, -41.5503, 0.33 ) }
    dend_7 { pt3dadd( 7.03797, 90.4231, -41.6997, 0.33 ) }
    dend_7 { pt3dadd( 7.15005, 92.6066, -41.8333, 0.33 ) }
    dend_7 { pt3dadd( 7.32141, 94.3994, -42.0425, 0.67 ) }
    dend_7 { pt3dadd( 7.65397, 96.1251, -42.4433, 0.33 ) }
    dend_7 { pt3dadd( 7.85188, 97.0277, -42.6684, 0.33 ) }
    dend_7 { pt3dadd( 8.02113, 97.6963, -42.8535, 0.33 ) }
    dend_7 { pt3dadd( 8.29212, 98.681, -43.1147, 0.33 ) }
    dend_7 { pt3dadd( 8.72368, 99.8296, -43.484, 0.67 ) }
    dend_7 { pt3dadd( 10.1758, 103.218, -44.7409, 0.33 ) }
    dend_7 { pt3dadd( 10.7207, 104.424, -45.2446, 0.33 ) }
    dend_7 { pt3dadd( 11.3099, 105.688, -45.7857, 0.67 ) }
    dend_7 { pt3dadd( 11.7596, 106.659, -46.2044, 0.33 ) }
    dend_7 { pt3dadd( 12.352, 107.838, -46.773, 0.33 ) }
    dend_7 { pt3dadd( 12.6507, 108.373, -47.036, 1.33 ) }
    dend_7 { pt3dadd( 13.8774, 110.539, -48.1965, 0.33 ) }
    dend_7 { pt3dadd( 14.2121, 111.106, -48.523, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_7 { pt3dadd( 14.4231, 111.474, -48.7218, 0.67 ) }
    dend_7 { pt3dadd( 15.5755, 113.614, -49.8545, 0.33 ) }
    dend_7 { pt3dadd( 15.8423, 114.165, -50.158, 1.33 ) }
    dend_7 { pt3dadd( 17.5982, 118.002, -52.2825, 0.33 ) }
    dend_7 { pt3dadd( 17.9473, 118.868, -52.7679, 1.33 ) }
    dend_7 { pt3dadd( 18.5266, 120.542, -53.7018, 0.33 ) }
    dend_7 { pt3dadd( 18.5823, 120.747, -53.8035, 0.67 ) }
    dend_7 { pt3dadd( 19.0482, 122.805, -54.5634, 0.33 ) }
    dend_7 { pt3dadd( 19.1399, 123.251, -54.6864, 0.67 ) }
    dend_7 { pt3dadd( 19.6702, 125.891, -55.0191, 0.33 ) }
    dend_7 { pt3dadd( 19.7784, 126.41, -55.057, 0.67 ) }
    dend_7 { pt3dadd( 20.1948, 128.458, -55.1475, 0.33 ) }
    dend_7 { pt3dadd( 20.834, 131.434, -55.1204, 0.33 ) }
    dend_7 { pt3dadd( 21.0849, 132.525, -55.0055, 0.67 ) }
    dend_7 { pt3dadd( 21.6713, 134.777, -54.6382, 0.33 ) }
    dend_7 { pt3dadd( 21.768, 135.093, -54.5493, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.44921, 50.3794, -36.3921, 0.67 ) }
    dend_4 { pt3dadd( -0.13588, 51.865, -38.3381, 0.67 ) }
    dend_4 { pt3dadd( -2.18362, 52.7814, -39.6583, 0.67 ) }
    dend_4 { pt3dadd( -4.1012, 53.4018, -41.0584, 0.67 ) }
    dend_4 { pt3dadd( -6.58288, 54.229, -43.1414, 1.33 ) }
    dend_4 { pt3dadd( -7.73618, 54.6629, -44.0341, 0.33 ) }
    dend_4 { pt3dadd( -9.51643, 55.3875, -45.3338, 0.33 ) }
    dend_4 { pt3dadd( -11.5695, 56.1654, -46.6486, 1.33 ) }
    dend_4 { pt3dadd( -15.1497, 57.5621, -49.0501, 0.33 ) }
    dend_4 { pt3dadd( -16.9329, 58.3903, -50.2756, 1.33 ) }
    dend_4 { pt3dadd( -20.2328, 60.2113, -52.7116, 0.67 ) }
    dend_4 { pt3dadd( -21.2832, 60.874, -53.5909, 1.33 ) }
    dend_4 { pt3dadd( -23.018, 62.0891, -55.1374, 0.33 ) }
    dend_4 { pt3dadd( -24.3914, 63.2365, -56.3727, 0.67 ) }
    dend_4 { pt3dadd( -25.4841, 64.21, -57.2974, 0.33 ) }
    dend_4 { pt3dadd( -25.6721, 64.3684, -57.4777, 0.67 ) }
    dend_4 { pt3dadd( -27.3788, 65.9655, -59.5871, 0.33 ) }
    dend_4 { pt3dadd( -27.9292, 66.544, -60.3531, 0.67 ) }
    dend_4 { pt3dadd( -29.1852, 67.9744, -62.1751, 0.33 ) }
    dend_4 { pt3dadd( -29.7755, 68.7138, -63.1572, 1.33 ) }
    dend_4 { pt3dadd( -31.4928, 71.1798, -66.4741, 0.33 ) }
    dend_4 { pt3dadd( -32.3826, 72.6664, -68.514, 1.33 ) }
    dend_4 { pt3dadd( -33.4559, 74.6399, -71.3057, 0.33 ) }
    dend_4 { pt3dadd( -33.6553, 75.1676, -72.1009, 0.67 ) }
    dend_4 { pt3dadd( -34.4569, 78.2794, -77.1285, 0.33 ) }
    dend_4 { pt3dadd( -34.5263, 78.7969, -78.0991, 0.67 ) }
    dend_4 { pt3dadd( -34.5202, 80.2093, -81.2549, 0.33 ) }
    dend_4 { pt3dadd( -34.4962, 80.3868, -81.8405, 0.67 ) }
    dend_4 { pt3dadd( -34.13, 81.3399, -86.9432, 0.33 ) }
    dend_4 { pt3dadd( -34.0481, 81.4454, -88.1811, 1.33 ) }
    dend_4 { pt3dadd( -33.8261, 81.2405, -92.1552, 0.33 ) }
    dend_4 { pt3dadd( -33.8134, 81.2086, -92.4623, 0.67 ) }
    dend_4 { pt3dadd( -33.6755, 80.4768, -96.5728, 0.33 ) }
    dend_4 { pt3dadd( -33.6542, 80.2712, -97.5251, 1.33 ) }
    dend_4 { pt3dadd( -33.7127, 79.8003, -98.9914, 0.33 ) }
    dend_4 { pt3dadd( -33.797, 78.6894, -102.88, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 52/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -26.5315, 65.1154, 157.842, 0.67 ) }
    dend_15 { pt3dadd( -25.6376, 66.6199, 167.972, 0.67 ) }
    dend_15 { pt3dadd( -25.5151, 66.7682, 178.254, 0.67 ) }
    dend_15 { pt3dadd( -27.0007, 64.4999, 188.195, 0.67 ) }
    dend_15 { pt3dadd( -28.1107, 62.0549, 198.146, 0.67 ) }
    dend_15 { pt3dadd( -28.6562, 60.5376, 208.316, 0.67 ) }
    dend_15 { pt3dadd( -29.7062, 60.1353, 218.539, 0.67 ) }
    dend_15 { pt3dadd( -30.5547, 57.8291, 228.548, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 60/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -26.5315, 65.1154, 157.842, 0.33 ) }
    dend_14 { pt3dadd( -29.8049, 65.9998, 166.081, 0.67 ) }
    dend_14 { pt3dadd( -33.795, 68.3251, 173.708, 0.67 ) }
    dend_14 { pt3dadd( -38.2216, 72.4079, 180.317, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -33.797, 78.6894, -102.88, 0.33 ) }
    dend_6 { pt3dadd( -33.8666, 82.1477, -106.739, 0.33 ) }
    dend_6 { pt3dadd( -33.8925, 83.4343, -108.174, 0.67 ) }
    dend_6 { pt3dadd( -33.9208, 84.8422, -109.745, 0.33 ) }
    dend_6 { pt3dadd( -33.9566, 86.6219, -111.731, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.797, 78.6894, -102.88, 0.33 ) }
    dend_5 { pt3dadd( -33.9588, 74.7727, -104.159, 0.33 ) }
    dend_5 { pt3dadd( -34.0572, 72.3896, -104.936, 0.33 ) }
    dend_5 { pt3dadd( -34.0943, 71.4913, -105.23, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, axon_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, axon_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
    ModelViewParmSubset_5 = new SectionList()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_21 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_38 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_9 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_6 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_9, dend_9, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 13
    dend_41 nseg = 5
    dend_40 nseg = 11
    dend_31 nseg = 7
    dend_28 nseg = 9
    dend_24 nseg = 9
    dend_21 nseg = 7
    dend_17 nseg = 3
    dend_1 nseg = 9
    dend_38 nseg = 15
    dend_37 nseg = 5
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_30 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 5
    dend_19 nseg = 3
    dend_11 nseg = 5
    dend_8 nseg = 7
    dend_13 nseg = 7
    dend_7 nseg = 5
    dend_4 nseg = 5
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_LBC_852c3c018f_0_0


