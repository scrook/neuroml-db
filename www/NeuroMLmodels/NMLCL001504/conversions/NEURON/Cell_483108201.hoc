// Cell: Cell_483108201
/*
{
  "id" : "Cell_483108201",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "784.265, 497.314, 22.853, 12.2838", "790.407, 497.314, 22.853, 12.2838", "796.549, 497.314, 22.853, 12.2838" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "790.407, 497.314, 22.853, 1.0", "796.248, 511.13, 22.853, 1.0", "802.09, 524.946, 22.853, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "786.058, 500.939, 24.8503, 0.3918", "785.528, 501.724, 25.8545, 0.5444", "785.252, 502.803, 26.2849, 0.5176", "784.724, 503.765, 26.5264, 0.6018", "784.122, 504.718, 26.7936, 0.5652", "783.146, 505.139, 27.15, 0.5168", "782.082, 505.56, 27.4052, 0.562", "781.148, 506.187, 27.6498, 0.6778", "780.177, 506.718, 27.7334, 0.737", "779.222, 507.274, 27.7098, 0.6838", "778.418, 508.016, 27.8167, 0.6924", "777.657, 508.799, 28.0302, 0.6448", "776.896, 509.651, 28.2369, 0.6362", "776.254, 510.599, 28.4144, 0.6912", "775.504, 511.462, 28.5793, 0.6778", "774.885, 512.424, 28.7188, 0.7546", "774.336, 513.427, 28.8271, 0.634", "773.545, 514.255, 28.9428, 0.5414", "772.737, 515.064, 29.099, 0.4212", "771.928, 515.872, 29.3037, 0.4054", "771.118, 516.681, 29.5532, 0.5154" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "792.366, 502.397, 23.8392, 0.3718", "793.16, 503.088, 24.7146, 0.507", "793.651, 503.837, 25.1676, 0.4522", "794.107, 504.792, 25.7446, 0.461", "794.672, 505.694, 26.404, 0.3982", "795.263, 506.656, 27.0105, 0.439", "795.892, 507.6, 27.5481, 0.434", "796.549, 508.529, 27.9943, 0.3616", "797.328, 509.342, 28.3674, 0.304", "798.303, 509.761, 28.756, 0.2822", "799.297, 510.302, 29.055, 0.2886", "800.246, 510.931, 29.1906, 0.3002", "801.195, 511.56, 29.178, 0.3244", "802.142, 512.189, 29.0475, 0.3564", "803.006, 512.935, 28.8406, 0.4776", "803.777, 513.761, 28.5538, 0.4026", "804.616, 514.505, 28.2212, 0.3428", "805.519, 515.16, 27.8681, 0.3066", "806.44, 515.832, 27.5687, 0.3348", "807.356, 516.517, 27.349, 0.383", "808.135, 517.355, 27.2003, 0.4914", "808.832, 518.262, 27.113, 0.5994", "809.482, 519.203, 27.0685, 0.5646", "810.112, 520.157, 27.0462, 0.4976", "810.703, 521.114, 26.9493, 0.3862", "811.291, 522.062, 26.9548, 0.3446", "812.215, 522.696, 27.0197, 0.383", "813.042, 523.454, 26.9539, 0.3516", "813.683, 524.402, 26.8516, 0.3326" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "793.85, 500.627, 30.4688, 0.3076", "794.179, 501.527, 31.4289, 0.3364", "794.268, 502.607, 31.8452, 0.385", "794.434, 503.729, 32.1958, 0.5", "794.59, 504.862, 32.4428, 0.5914", "794.766, 505.987, 32.5629, 0.6664", "795.265, 506.934, 32.4996, 0.8062", "795.97, 507.803, 32.3515, 0.8354", "796.743, 508.624, 32.312, 0.6322", "797.675, 509.172, 32.4582, 0.5882", "798.655, 509.591, 32.7698, 0.4924", "799.724, 509.974, 33.045, 0.3852", "800.735, 510.211, 33.119, 0.3012", "801.699, 510.723, 33.2828, 0.2766", "802.451, 511.431, 33.584, 0.2782", "803.16, 512.327, 33.8027, 0.2814" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "793.84, 501.604, 24.7064, 0.3244", "794.205, 502.583, 23.6797, 0.364", "794.687, 503.562, 23.222, 0.4554", "795.55, 504.311, 22.8327, 0.537", "796.597, 504.736, 22.4458, 0.4284", "797.597, 505.161, 22.0188, 0.3438", "798.514, 505.807, 21.6353, 0.3082", "799.375, 506.561, 21.3837, 0.339", "800.18, 507.35, 21.2987, 0.3832", "800.953, 508.18, 21.3094, 0.5292", "801.737, 509.008, 21.3071, 0.4882", "802.482, 509.856, 21.2641, 0.5526", "803.082, 510.828, 21.2522, 0.4476", "803.539, 511.861, 21.3106, 0.4276", "803.747, 512.984, 21.3315, 0.4564", "803.914, 514.116, 21.3536, 0.6494" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "790.89, 502.351, 22.9342, 0.3648", "790.875, 503.494, 22.6623, 0.4688", "790.658, 504.576, 22.4812, 0.502", "791.128, 505.618, 22.312, 0.6542", "791.871, 506.456, 22.2507, 0.725", "792.377, 507.468, 22.2354, 0.739", "792.866, 508.501, 22.1724, 0.6468", "793.298, 509.538, 22.0003, 0.5922", "793.799, 510.535, 21.7362, 0.6128", "794.35, 511.497, 21.385, 0.5174", "795.095, 512.32, 20.9789, 0.5312" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "784.572, 496.322, 24.2844, 0.5306", "783.524, 496.68, 23.7944, 0.528", "782.4, 496.61, 23.5707, 0.4458", "781.258, 496.668, 23.3801, 0.44", "780.168, 497.012, 23.2539, 0.4048", "779.046, 497.085, 23.2404, 0.4576", "777.918, 496.908, 23.2116, 0.4396", "776.922, 496.372, 23.1426, 0.512" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "794.133, 494.541, 25.486, 0.2814", "794.998, 493.884, 26.4882, 0.2872", "795.864, 493.226, 27.4453, 0.2978", "796.729, 492.569, 28.3184, 0.3184", "797.339, 491.673, 29.0774, 0.3518", "797.429, 490.553, 29.6377, 0.4392", "797.729, 489.449, 29.9264, 0.476" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "788.786, 501.935, 27.4627, 0.2828", "788.416, 502.939, 28.2957, 0.2902", "788.044, 503.945, 28.6756, 0.303", "787.674, 504.951, 29.101, 0.3294", "787.669, 506.093, 29.3796, 0.3656" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "786.891, 497.097, 31.3054, 0.2822", "786.062, 497.055, 32.3201, 0.288", "785.139, 497.015, 32.8619, 0.3004", "784.162, 497.404, 33.0926, 0.3174", "783.118, 497.718, 33.0826, 0.3796" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "789.502, 493.731, 13.0539, 0.3692", "789.748, 492.879, 11.6507, 0.5024", "790.575, 492.089, 11.1491, 0.4438" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000047
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "802.09, 524.946, 22.853, 1.0", "807.931, 538.762, 22.853, 1.0", "813.772, 552.578, 22.853, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "771.118, 516.681, 29.5532, 0.5154", "770.842, 517.655, 30.0328, 0.3982", "771.294, 518.36, 30.7437, 0.3242", "771.542, 519.308, 31.4986, 0.3204", "771.223, 520.327, 32.0869, 0.3556", "770.238, 520.454, 32.4932, 0.4448", "769.3, 519.833, 32.6914, 0.4936", "768.422, 519.218, 32.6175, 0.4626", "767.578, 518.513, 32.3924, 0.5372", "766.649, 517.866, 32.2529, 0.492", "765.778, 517.39, 32.3761, 0.3848", "764.758, 516.951, 32.597, 0.3", "763.955, 516.203, 32.6911, 0.2746", "762.971, 515.773, 32.6609, 0.2746", "762.029, 515.147, 32.6136, 0.2746", "761.099, 514.626, 32.7516, 0.2746" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "771.118, 516.681, 29.5532, 0.5154", "770.324, 517.469, 28.4836, 0.4576", "769.505, 518.257, 27.6828, 0.5324", "768.599, 518.889, 27.3048, 0.687", "767.626, 519.49, 26.9114, 0.6712" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "813.683, 524.402, 26.8516, 0.3326", "813.518, 524.824, 26.6768, 0.3368", "813.198, 525.917, 26.4683, 0.3804", "812.843, 527.003, 26.2228, 0.517", "812.438, 527.981, 25.8346, 0.5018", "811.931, 528.999, 25.4906, 0.403", "811.002, 529.656, 25.209, 0.3332", "810.158, 530.398, 24.8839, 0.3384", "809.308, 531.15, 24.5925, 0.382", "808.844, 532.172, 24.2501, 0.5272", "808.573, 533.274, 23.8935, 0.4846", "808.108, 534.293, 23.495, 0.5456", "807.381, 535.116, 23.0273, 0.436", "806.902, 535.978, 22.4528, 0.4004", "806.829, 536.982, 21.8453, 0.4338", "806.447, 538.046, 21.4381, 0.4728", "806.082, 539.108, 21.1968, 0.4276", "805.744, 540.197, 21.0091, 0.453", "805.461, 541.289, 20.781, 0.431", "805.217, 542.376, 20.47, 0.4948", "804.914, 543.461, 20.1056, 0.5644", "804.428, 544.48, 19.6861, 0.474", "803.953, 545.451, 19.1701, 0.4546", "803.589, 546.418, 18.5566, 0.3848", "803.016, 547.306, 17.9878, 0.42", "802.157, 548.045, 17.5813, 0.3738", "801.306, 548.722, 17.1871, 0.3698", "800.84, 549.622, 16.83, 0.4244", "800.606, 550.73, 16.613, 0.454", "800.079, 551.708, 16.4228, 0.3984", "799.293, 552.527, 16.2159, 0.3744", "798.431, 553.276, 16.0127, 0.4032", "797.527, 553.967, 15.7992, 0.5586", "796.717, 554.74, 15.5383, 0.5802", "796.112, 555.69, 15.2476, 0.5396", "795.591, 556.699, 14.9614, 0.6286", "794.989, 557.653, 14.6734, 0.6826", "794.239, 558.501, 14.4056, 0.635", "793.437, 559.315, 14.1972, 0.578", "792.815, 560.258, 14.0552, 0.5492", "792.52, 561.348, 13.956, 0.579", "792.259, 562.435, 13.8416, 0.4604", "791.65, 563.358, 13.7338, 0.3986", "790.849, 564.152, 13.726, 0.4304", "790.078, 564.977, 13.794, 0.4646", "789.426, 565.911, 13.8725, 0.421", "788.892, 566.921, 13.9506, 0.4034", "788.409, 567.953, 14.0439, 0.5186", "787.921, 568.98, 14.1385, 0.4736", "787.384, 569.981, 14.157, 0.5018", "786.823, 570.967, 14.0777, 0.4692", "786.267, 571.962, 13.9486, 0.5914", "785.768, 572.986, 13.7854, 0.618", "785.307, 574.017, 13.5736, 0.4948", "784.886, 575.068, 13.3531, 0.4156", "784.614, 576.173, 13.18, 0.463", "784.404, 577.298, 13.066, 0.521", "783.947, 578.322, 13.012, 0.544", "783.172, 579.131, 13.0213, 0.54", "782.268, 579.821, 13.0257, 0.5326", "781.296, 580.4, 12.9448, 0.517", "780.261, 580.874, 12.812, 0.4956", "779.249, 581.345, 12.5883, 0.4232", "778.312, 581.872, 12.237, 0.4448", "777.365, 582.448, 11.8588, 0.415", "776.322, 582.879, 11.5912, 0.4702", "775.226, 583.195, 11.416, 0.4936", "774.219, 583.715, 11.2972, 0.4626", "773.308, 584.393, 11.2687, 0.5372", "772.381, 585.057, 11.2876, 0.492", "771.458, 585.729, 11.2773, 0.3848", "770.53, 586.396, 11.2298, 0.3", "769.581, 587.032, 11.1442, 0.2746", "768.592, 587.606, 11.0337, 0.2748", "767.569, 588.117, 10.9071, 0.2748", "766.559, 588.653, 10.7563, 0.2752", "765.577, 589.237, 10.557, 0.2758", "764.637, 589.854, 10.2627, 0.2766", "763.567, 590.154, 9.8937, 0.2782", "762.526, 589.778, 9.4971, 0.2814", "761.595, 589.181, 9.0125, 0.287", "760.771, 588.552, 8.4021, 0.2988", "759.829, 587.953, 7.8088, 0.3142", "758.744, 587.859, 7.2188, 0.3734", "757.643, 587.797, 6.653, 0.3338", "756.528, 587.573, 6.1888, 0.3", "755.388, 587.617, 5.8572, 0.2746", "754.33, 588.042, 5.641, 0.2746", "753.465, 588.769, 5.4447, 0.2746", "752.655, 589.556, 5.262, 0.2746", "751.903, 590.417, 5.1495, 0.2746", "751.218, 591.323, 5.1288, 0.2746", "750.888, 592.403, 5.1791, 0.2746", "750.296, 593.379, 5.2382, 0.2748", "750.0, 594.483, 5.2797, 0.275", "750.065, 595.624, 5.2909, 0.2752", "750.764, 596.472, 5.1608, 0.2758", "751.457, 597.37, 4.9862, 0.277", "751.958, 598.399, 4.8427, 0.2792", "752.197, 599.517, 4.735, 0.2828", "752.225, 600.661, 4.6672, 0.291", "751.966, 601.754, 4.7072, 0.2994", "751.671, 602.836, 4.829, 0.3474", "750.954, 603.72, 4.8685, 0.2796", "750.864, 604.811, 4.5178, 0.2288" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "813.683, 524.402, 26.8516, 0.3326", "814.036, 524.779, 26.9984, 0.2288", "814.851, 525.567, 26.6942, 0.3918", "815.778, 526.214, 26.5515, 0.478", "816.807, 526.713, 26.4428, 0.7198", "817.753, 527.326, 26.3526, 0.77", "818.502, 528.167, 26.2025, 0.737", "819.218, 529.045, 26.0403, 0.5996", "819.888, 529.961, 25.9538, 0.4868", "820.52, 530.88, 25.9333, 0.5042", "821.345, 531.653, 25.842, 0.581", "822.266, 532.305, 25.6872, 0.5062", "823.202, 532.947, 25.5003, 0.508", "824.103, 533.637, 25.3166, 0.515", "824.937, 534.409, 25.1958, 0.5098", "825.806, 535.144, 25.0899, 0.5894", "826.722, 535.804, 24.9353, 0.7616", "827.611, 536.487, 24.7255, 0.7318", "828.432, 537.253, 24.4964, 0.7688", "829.123, 538.162, 24.3275, 0.6196", "829.83, 539.053, 24.2197, 0.4852", "830.575, 539.903, 24.123, 0.4594", "831.118, 540.895, 23.9847, 0.4714", "831.711, 541.868, 23.8403, 0.4326", "832.412, 542.765, 23.6887, 0.4276", "833.197, 543.592, 23.5229, 0.5516", "833.917, 544.469, 23.348, 0.5912", "834.442, 545.461, 23.1917, 0.4448", "834.704, 546.571, 23.1301, 0.3264", "834.914, 547.688, 23.1505, 0.2768", "835.022, 548.818, 23.1804, 0.279", "835.215, 549.905, 23.1467, 0.2826", "835.602, 550.949, 23.1241, 0.2894", "835.167, 551.741, 23.237, 0.302", "834.451, 552.591, 23.3853, 0.326", "833.912, 553.596, 23.53, 0.367", "833.164, 554.438, 23.6682, 0.461", "832.198, 555.04, 23.7936, 0.5472", "831.202, 555.603, 23.898, 0.4476", "830.429, 556.418, 24.006, 0.3796", "830.041, 557.466, 24.1546, 0.372", "829.782, 558.576, 24.3023, 0.4702", "829.508, 559.683, 24.4009, 0.5642", "829.313, 560.806, 24.4687, 0.4808", "829.326, 561.942, 24.5701, 0.4312", "829.454, 563.062, 24.7418, 0.5168", "829.414, 564.188, 24.9633, 0.501", "829.148, 565.293, 25.1916, 0.4016", "828.734, 566.358, 25.3974, 0.3306", "828.385, 567.431, 25.6307, 0.3336", "828.427, 568.558, 25.8499, 0.3734", "828.922, 569.576, 26.0035, 0.51", "829.393, 570.618, 26.1372, 0.4578", "829.57, 571.739, 26.2934, 0.4716", "829.544, 572.866, 26.4916, 0.4172", "829.308, 573.976, 26.6931, 0.4756", "828.937, 575.055, 26.878, 0.4974", "828.537, 576.106, 27.0885, 0.4994", "828.249, 577.198, 27.1786, 0.4614", "827.976, 578.282, 27.1413, 0.3652", "827.621, 579.363, 27.1379, 0.311", "827.273, 580.451, 27.1613, 0.2946", "826.993, 581.559, 27.193, 0.3132", "826.863, 582.695, 27.2357, 0.3418", "826.65, 583.819, 27.311, 0.4196", "825.89, 584.623, 27.4891, 0.445", "825.05, 585.396, 27.6097, 0.383", "824.269, 586.219, 27.6645, 0.3386", "823.587, 587.121, 27.7896, 0.3716", "823.14, 588.167, 27.9565, 0.3304", "822.698, 589.222, 28.1044, 0.2938", "821.748, 589.837, 28.1859, 0.2626", "820.718, 590.283, 28.3615, 0.2542", "820.366, 591.3, 28.6521, 0.2288", "820.164, 592.426, 29.1687, 0.2288" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "803.16, 512.327, 33.8027, 0.2814", "803.079, 513.197, 36.19, 0.2746", "803.06, 514.273, 37.126, 0.2746", "803.078, 515.412, 37.4906, 0.2746", "803.348, 516.521, 37.879, 0.2746", "803.741, 517.588, 38.3379, 0.2746", "803.731, 518.706, 38.9052, 0.2746", "803.345, 519.764, 39.5606, 0.2746", "802.964, 520.722, 40.402, 0.2746", "802.515, 521.49, 41.4837, 0.2746", "801.986, 522.308, 42.6896, 0.2746", "801.453, 523.22, 43.9054, 0.2746", "800.893, 523.923, 45.1923, 0.2746", "800.416, 524.703, 46.4912, 0.2746", "800.046, 525.707, 47.6535, 0.2746", "799.754, 526.783, 48.6422, 0.2744", "799.298, 527.778, 49.5272, 0.2744", "798.779, 528.755, 50.3166, 0.2742", "798.152, 529.701, 50.9687, 0.2742", "797.187, 530.15, 51.6194, 0.2736", "797.106, 531.215, 52.2654, 0.2728", "797.106, 532.3, 52.8878, 0.2712", "797.188, 533.421, 53.415, 0.2684", "797.376, 534.55, 53.7813, 0.2626", "797.564, 535.678, 54.0182, 0.2542", "797.564, 536.822, 54.1464, 0.2288", "797.564, 537.966, 54.2142, 0.2288" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "803.16, 512.327, 33.8027, 0.2814", "803.81, 512.348, 33.8486, 0.287", "804.751, 512.84, 33.8262, 0.2988", "805.616, 513.502, 34.0637, 0.3142", "806.266, 514.361, 34.5125, 0.3734", "806.698, 515.353, 35.1436, 0.3338", "807.077, 516.396, 35.9103, 0.3" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "803.914, 514.116, 21.3536, 0.6494", "804.098, 515.205, 21.4119, 0.7876", "804.693, 516.182, 21.4745, 0.7356", "805.35, 517.119, 21.5257, 0.534", "806.067, 518.01, 21.5751, 0.442", "806.793, 518.893, 21.6334, 0.5064", "807.53, 519.757, 21.7346, 0.6286", "808.191, 520.687, 21.8437, 0.6132", "808.575, 521.754, 21.881, 0.6132", "808.932, 522.836, 21.8863, 0.4764", "809.219, 523.943, 21.9186, 0.4292", "809.508, 525.049, 21.9806, 0.483", "809.935, 526.084, 22.1533, 0.5828", "810.349, 527.122, 22.4156, 0.5388", "810.54, 528.229, 22.7285, 0.4252", "810.734, 529.337, 23.0537, 0.3708", "811.309, 530.326, 23.2887, 0.426" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "803.914, 514.116, 21.3536, 0.6494", "804.045, 513.759, 20.3087, 0.2288", "804.249, 513.29, 18.1861, 0.3512", "804.75, 512.748, 17.2453, 0.4382", "803.707, 512.648, 16.4023, 0.4744", "803.016, 513.44, 15.6621, 0.4618", "802.943, 514.332, 14.9158, 0.3664", "803.177, 515.276, 14.528, 0.3124", "803.325, 516.19, 14.462, 0.2988", "802.661, 516.627, 14.3591, 0.3142", "801.857, 516.564, 14.426, 0.3736", "800.985, 517.12, 14.4172, 0.334", "800.349, 517.839, 14.0302, 0.3004", "799.458, 518.309, 13.3386, 0.2752", "799.313, 518.612, 12.341, 0.2758", "799.313, 519.033, 11.0897, 0.2768", "799.435, 520.291, 10.0367, 0.2822", "800.285, 520.863, 9.1845, 0.2886", "800.686, 521.837, 8.5007, 0.3", "800.738, 522.922, 7.9248, 0.324", "800.914, 523.808, 7.3399, 0.3556", "800.914, 524.211, 6.4035, 0.476", "800.914, 524.753, 5.2227, 0.4", "800.914, 524.638, 3.8272, 0.3378", "801.366, 524.703, 2.727, 0.2986", "802.402, 524.524, 1.9284, 0.314", "803.431, 524.562, 1.3815, 0.3728", "804.554, 524.753, 1.0317, 0.333", "805.307, 525.248, 0.7156, 0.2982", "805.002, 526.299, 0.5204, 0.2712", "804.364, 527.235, 0.3674, 0.2684", "805.051, 527.865, 0.2122, 0.2626", "805.698, 528.776, 0.1074, 0.2542", "805.599, 529.916, 0.0467, 0.2288", "805.5, 531.055, 0.0, 0.2288" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "795.095, 512.32, 20.9789, 0.5312", "795.911, 513.221, 20.5685, 0.6242", "796.367, 514.243, 20.3615, 0.5322", "796.445, 515.373, 20.2976, 0.5892", "796.407, 516.509, 20.2408, 0.5052", "796.163, 517.605, 20.1584, 0.5848", "795.909, 518.718, 20.1209, 0.5046", "796.501, 519.696, 20.1391, 0.5462", "797.128, 520.654, 20.2053, 0.6128", "797.949, 521.449, 20.3497, 0.561", "798.696, 522.258, 20.6767, 0.6296" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "795.095, 512.32, 20.9789, 0.5312", "795.265, 512.672, 19.6731, 0.2288", "794.802, 513.324, 18.6315, 0.3664", "793.93, 513.988, 18.1588, 0.4658", "793.134, 514.657, 17.8976, 0.5274", "792.424, 515.504, 17.7349, 0.5498", "791.904, 516.185, 17.2726, 0.5814", "790.99, 516.685, 16.6732, 0.4582" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "776.922, 496.372, 23.1426, 0.512", "776.251, 496.815, 20.6534, 0.493", "775.598, 497.465, 19.5534, 0.4326", "775.22, 498.424, 19.152, 0.3944", "775.124, 499.133, 18.4372, 0.4226", "775.0, 500.021, 17.5824, 0.4506", "774.79, 501.125, 16.8115, 0.3934", "774.49, 502.225, 16.1621, 0.3576", "773.927, 503.206, 15.5997, 0.4082", "772.923, 503.577, 15.0631, 0.393", "772.111, 503.232, 14.3373, 0.435", "771.747, 502.812, 13.3234, 0.4016", "770.987, 502.329, 12.2167, 0.4222", "770.13, 502.764, 11.1434, 0.5182", "769.532, 503.727, 10.2908, 0.6426", "768.927, 504.696, 9.706, 0.6774", "768.225, 505.598, 9.3443, 0.5478", "767.399, 506.35, 9.1125, 0.5638", "766.382, 506.856, 8.9307, 0.494", "765.367, 507.342, 8.8004, 0.3886", "764.273, 507.46, 8.7456, 0.3068", "763.221, 507.086, 8.6916, 0.2872", "762.367, 506.366, 8.5531, 0.299", "761.743, 505.491, 8.2536, 0.3144", "761.403, 504.447, 7.8504, 0.374", "761.343, 503.346, 7.4262, 0.335", "761.306, 502.227, 7.07, 0.302", "761.253, 501.218, 6.6006, 0.2784", "761.245, 500.286, 5.9938, 0.2818", "760.778, 499.356, 5.4236, 0.2876", "760.557, 498.376, 5.1418, 0.2998", "759.868, 497.545, 5.0141, 0.3162", "759.051, 496.748, 4.8942, 0.3772", "758.176, 496.014, 4.7743, 0.341", "757.334, 495.24, 4.6515, 0.313", "756.949, 494.175, 4.4395, 0.2994", "757.5, 493.29, 4.0226, 0.3164", "757.996, 492.319, 3.5286, 0.3728", "758.282, 491.215, 3.1033, 0.356", "758.607, 490.142, 2.2436, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "776.922, 496.372, 23.1426, 0.512", "775.913, 496.304, 23.1016, 0.5894", "774.824, 495.955, 23.0715, 0.551", "773.811, 495.448, 23.0079, 0.449", "772.857, 494.829, 22.9456, 0.4096", "771.916, 494.28, 23.0709, 0.5234", "770.902, 493.939, 23.3479, 0.5136", "769.769, 494.092, 23.5777, 0.4258", "768.651, 494.336, 23.7506, 0.3704", "767.516, 494.48, 23.8654, 0.4328", "766.41, 494.189, 23.9153, 0.4336", "765.267, 494.129, 23.8982, 0.5368" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "797.729, 489.449, 29.9264, 0.476", "797.925, 488.442, 28.32, 0.367", "797.966, 487.487, 26.5141, 0.3142", "797.904, 486.39, 25.8295, 0.3004", "797.474, 485.772, 24.9246, 0.3248", "796.852, 485.205, 23.8948, 0.357", "796.056, 484.475, 22.9787, 0.4786", "795.099, 483.859, 22.2829, 0.405", "793.979, 483.738, 21.8304, 0.347", "793.095, 484.362, 21.6267, 0.316", "792.213, 485.087, 21.5185, 0.347", "791.22, 485.285, 21.2495, 0.429", "790.157, 485.661, 20.9349, 0.4638", "789.239, 486.284, 20.7214, 0.4114", "788.334, 486.954, 20.403, 0.423", "787.273, 487.206, 19.9475, 0.3734", "786.217, 487.628, 19.4859, 0.399", "785.155, 488.042, 19.0996, 0.334", "784.312, 488.481, 18.4855, 0.3002", "783.473, 488.977, 17.7202, 0.275" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "797.729, 489.449, 29.9264, 0.476", "798.368, 488.562, 30.0037, 0.465", "799.138, 487.728, 29.9286, 0.3718", "799.9, 486.875, 29.7998, 0.3242", "800.828, 486.468, 29.479, 0.3142", "801.752, 485.9, 29.1194, 0.3734", "802.466, 485.016, 28.9503, 0.334" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "787.669, 506.093, 29.3796, 0.3656", "787.55, 506.565, 30.5782, 0.2288", "787.271, 507.582, 31.682, 0.5154", "786.906, 508.604, 32.163, 0.499", "786.497, 509.661, 32.6172, 0.3972", "786.158, 510.634, 33.164, 0.3242", "786.177, 511.725, 33.6792, 0.3144", "786.568, 512.779, 34.0337, 0.374", "787.024, 513.821, 34.244, 0.3348", "787.098, 514.858, 34.5338, 0.3016", "787.149, 515.974, 34.8236, 0.2776", "786.977, 517.098, 35.0448, 0.2802", "786.189, 517.874, 35.1966, 0.285", "785.094, 518.143, 35.3438, 0.2938", "784.318, 518.933, 35.5365, 0.3112", "783.936, 519.993, 35.6292, 0.3382", "783.794, 521.074, 35.8366, 0.413", "783.736, 522.188, 36.101, 0.4328", "783.794, 523.309, 36.2443, 0.3594", "783.888, 524.444, 36.3538, 0.3", "783.798, 525.578, 36.5294, 0.2746", "783.698, 526.685, 36.65, 0.2746", "783.761, 527.776, 36.7872, 0.2746", "783.789, 528.662, 37.2397, 0.2748", "783.977, 529.069, 38.0486, 0.2748", "784.425, 529.515, 38.9712, 0.2752", "784.297, 530.6, 39.6354, 0.2758", "784.209, 531.676, 40.0184, 0.2766", "784.358, 532.773, 40.1982, 0.2784", "784.628, 533.876, 40.2928, 0.2816", "784.778, 534.917, 40.5082, 0.2874", "784.528, 535.869, 40.9301, 0.2994", "784.092, 536.869, 41.4565, 0.3152", "783.963, 537.973, 41.9919, 0.3756", "784.119, 539.097, 42.4864, 0.3378", "784.52, 540.158, 42.9164, 0.3076", "784.844, 541.246, 43.2799, 0.2882", "785.165, 542.282, 43.6929, 0.2994", "785.556, 543.322, 44.1353, 0.3228", "786.022, 544.363, 44.562, 0.3534", "786.419, 545.419, 45.0089, 0.4722", "786.683, 546.51, 45.4868, 0.3934", "786.999, 547.587, 45.9847, 0.3254", "787.31, 548.636, 46.5226, 0.2746", "787.399, 549.689, 47.1192, 0.2746", "787.321, 550.792, 47.6921, 0.2746", "787.262, 551.929, 48.174, 0.2746", "787.499, 553.031, 48.5517, 0.2746", "788.113, 553.975, 48.8443, 0.2748", "788.963, 554.723, 49.0823, 0.275", "789.25, 555.645, 49.399, 0.2754", "789.06, 556.73, 49.6776, 0.2762", "788.261, 557.468, 49.8954, 0.2776", "788.138, 558.099, 49.7958, 0.2802", "788.554, 558.994, 49.5606, 0.285", "788.095, 559.799, 49.6712, 0.2938", "788.114, 560.759, 50.0545, 0.3112", "788.507, 561.826, 50.4798, 0.3382", "789.093, 562.75, 51.0322, 0.413", "789.63, 563.661, 51.6928, 0.4328", "789.608, 564.758, 52.3225, 0.3594", "789.498, 565.894, 52.7556, 0.3", "789.371, 566.985, 53.107, 0.2746", "788.86, 567.922, 53.4836, 0.2746", "788.54, 568.992, 53.7023, 0.2746", "788.393, 570.056, 53.7362, 0.2746", "788.451, 571.068, 53.8465, 0.2746", "788.679, 572.095, 54.0985, 0.2744", "788.806, 573.221, 54.3673, 0.2744", "788.742, 574.299, 54.7534, 0.2742", "788.734, 575.308, 55.3224, 0.2742", "788.779, 576.41, 55.7847, 0.2736", "788.307, 577.405, 56.2248, 0.2728", "787.776, 578.31, 56.7238, 0.2712", "787.207, 579.286, 57.1539, 0.2684", "786.966, 580.387, 57.5126, 0.2626", "786.494, 581.427, 57.7618, 0.2542", "785.632, 582.176, 57.9214, 0.2288", "784.924, 583.044, 57.7769, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "787.669, 506.093, 29.3796, 0.3656", "787.732, 506.648, 29.4176, 0.4942", "787.67, 507.739, 29.2712, 0.4348", "787.391, 508.848, 29.1015, 0.3984", "787.098, 509.954, 28.9537, 0.4304", "786.791, 511.056, 28.8481, 0.4646" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "783.118, 497.718, 33.0826, 0.3796", "781.998, 497.574, 32.9482, 0.3452", "780.877, 497.43, 32.723, 0.321", "779.75, 497.301, 32.4439, 0.3132", "778.614, 497.219, 32.2129, 0.3478", "777.478, 497.156, 32.1275, 0.402", "776.345, 497.171, 32.1493, 0.5514", "775.206, 497.209, 32.2252, 0.591", "774.069, 497.132, 32.3056, 0.4442", "772.96, 496.887, 32.3672, 0.3254", "771.914, 496.441, 32.4285, 0.2746", "770.915, 495.887, 32.4677, 0.2746", "769.896, 495.376, 32.4537, 0.2746", "768.81, 495.053, 32.3826, 0.2746", "767.686, 494.87, 32.3089, 0.2746", "766.599, 494.565, 32.2146, 0.2746", "765.524, 494.211, 32.0723, 0.2748", "764.404, 494.043, 31.9396, 0.2748", "763.264, 493.943, 31.8517, 0.2752", "762.148, 493.708, 31.7974, 0.2758", "761.044, 493.413, 31.7716, 0.2766", "759.932, 493.142, 31.7822, 0.2782", "758.818, 492.887, 31.8237, 0.2814", "757.704, 492.627, 31.8797, 0.287", "756.622, 492.266, 31.9376, 0.2988", "755.628, 491.712, 31.9878, 0.3142", "754.669, 491.088, 32.0247, 0.3734", "753.699, 490.481, 32.0491, 0.3338", "752.726, 489.881, 32.0639, 0.3", "751.79, 489.226, 32.0737, 0.2746", "750.964, 488.44, 32.0816, 0.2746", "750.225, 487.567, 32.0911, 0.2746", "749.509, 486.675, 32.1042, 0.2746", "748.779, 485.795, 32.1227, 0.2748", "748.014, 484.944, 32.1488, 0.2748", "747.224, 484.117, 32.1849, 0.2752", "746.429, 483.294, 32.2339, 0.2758", "745.657, 482.451, 32.3036, 0.2766", "744.944, 481.559, 32.408, 0.2782", "744.271, 480.637, 32.5514, 0.2814", "743.606, 479.71, 32.7286, 0.287", "742.918, 478.802, 32.9378, 0.2988", "742.189, 477.934, 33.1814, 0.3142", "741.437, 477.088, 33.4505, 0.3736", "740.659, 476.264, 33.7246, 0.3342", "739.811, 475.506, 33.9724, 0.3004", "738.89, 474.831, 34.1692, 0.2754", "737.938, 474.196, 34.3132, 0.2762", "736.98, 473.571, 34.4176, 0.2776", "736.012, 472.962, 34.5005, 0.2802", "735.033, 472.371, 34.5803, 0.285", "734.047, 471.79, 34.673, 0.2942", "733.013, 471.31, 34.8023, 0.3108", "731.909, 471.086, 34.9992, 0.3432", "730.783, 471.026, 35.2671, 0.3922", "729.656, 471.003, 35.5883, 0.5396", "728.528, 470.985, 35.9419, 0.5384", "727.394, 471.0, 36.2942, 0.4962", "726.255, 471.073, 36.608, 0.3824", "725.115, 471.176, 36.8771, 0.3436", "723.977, 471.284, 37.1255, 0.351", "722.846, 471.405, 37.403, 0.4376", "721.736, 471.543, 37.758, 0.4734", "720.64, 471.688, 38.197, 0.4604", "719.544, 471.836, 38.6982, 0.3632", "718.441, 472.0, 39.2182, 0.3076", "717.329, 472.193, 39.7076, 0.2882", "716.214, 472.4, 40.1411, 0.2994", "715.098, 472.609, 40.5171, 0.3232", "713.97, 472.747, 40.8369, 0.3542", "712.833, 472.709, 41.0976, 0.4732", "711.703, 472.539, 41.3087, 0.395", "710.578, 472.33, 41.4929, 0.3284", "709.454, 472.117, 41.6727, 0.2802", "708.332, 471.908, 41.8869, 0.2854", "707.221, 471.707, 42.1845, 0.2942", "706.119, 471.511, 42.5802, 0.3118", "705.02, 471.315, 43.0584, 0.3394", "703.91, 471.193, 43.596, 0.415", "702.795, 471.238, 44.1689, 0.4364", "701.685, 471.398, 44.7569, 0.3664", "700.579, 471.589, 45.3502, 0.3124", "699.466, 471.702, 45.9516, 0.2988", "698.36, 471.59, 46.5716, 0.3142", "697.294, 471.273, 47.215, 0.3734", "696.245, 470.892, 47.8834, 0.3338", "695.237, 470.444, 48.5904, 0.3", "694.321, 469.881, 49.3553, 0.2746", "693.461, 469.257, 50.1724, 0.2746", "692.635, 468.587, 51.0138, 0.2746", "691.885, 467.816, 51.8414, 0.2746", "691.212, 466.959, 52.6229, 0.2746", "690.562, 466.078, 53.3436, 0.2746", "689.837, 465.23, 53.9683, 0.2746", "688.997, 464.465, 54.4558, 0.2746", "688.118, 463.733, 54.8178, 0.2746", "687.149, 463.14, 55.1065, 0.2746", "686.065, 462.894, 55.3876, 0.2746", "684.936, 462.799, 55.6542, 0.2746", "683.809, 462.62, 55.8603, 0.2746", "682.691, 462.383, 56.019, 0.2746", "681.579, 462.12, 56.173, 0.2746", "680.561, 461.721, 56.4147, 0.2746", "679.55, 461.275, 56.7157, 0.2746", "678.506, 461.448, 56.8585, 0.2746", "677.568, 461.064, 57.1183, 0.2746", "676.836, 460.376, 57.2953, 0.2746", "675.931, 460.018, 57.3784, 0.2746", "674.888, 459.778, 57.5988, 0.2746", "673.802, 459.554, 57.8682, 0.2746", "672.68, 459.339, 58.1123, 0.2746", "671.574, 459.057, 58.3058, 0.2746", "670.494, 458.679, 58.4766, 0.2746", "669.391, 458.411, 58.63, 0.2746", "668.258, 458.34, 58.7882, 0.2746", "667.128, 458.336, 58.9929, 0.2746", "665.992, 458.363, 59.2178, 0.2746", "664.853, 458.443, 59.423, 0.2746", "663.712, 458.526, 59.6058, 0.2746", "662.576, 458.56, 59.7962, 0.2746", "661.447, 458.564, 60.0093, 0.2746", "660.312, 458.564, 60.207, 0.2746", "659.168, 458.564, 60.3576, 0.2746", "658.024, 458.564, 60.4629, 0.2746", "656.88, 458.564, 60.5282, 0.2746", "655.736, 458.545, 60.5595, 0.2746", "654.594, 458.487, 60.5685, 0.2746", "653.452, 458.46, 60.5637, 0.2746", "652.312, 458.517, 60.5441, 0.2746", "651.181, 458.668, 60.5326, 0.2746", "650.059, 458.879, 60.5662, 0.2746", "648.932, 459.06, 60.6388, 0.2746", "647.942, 459.537, 60.7326, 0.2746", "647.401, 460.506, 60.8471, 0.2746", "646.736, 461.408, 60.9868, 0.2746", "645.783, 462.014, 61.1747, 0.2746", "644.891, 462.687, 61.4401, 0.2746", "644.352, 463.63, 61.7904, 0.2746", "643.946, 464.679, 62.1726, 0.2746", "643.157, 465.462, 62.4694, 0.2746", "642.216, 466.093, 62.6662, 0.2746", "641.346, 466.777, 62.925, 0.2746", "640.626, 467.379, 63.3632, 0.2746", "639.931, 468.236, 63.7865, 0.2746", "639.35, 469.2, 64.0324, 0.2746", "638.749, 470.173, 64.204, 0.2746", "638.616, 471.305, 64.3154, 0.2744", "638.473, 472.41, 64.2975, 0.2744", "638.174, 473.514, 64.2939, 0.2742", "637.761, 474.576, 64.3863, 0.2742", "637.272, 475.597, 64.5932, 0.2736", "636.785, 476.518, 64.9849, 0.2728", "636.512, 477.515, 65.4948, 0.2712", "636.38, 478.648, 65.872, 0.2684", "635.868, 479.665, 66.1758, 0.2626", "635.12, 480.527, 66.3891, 0.2542", "634.533, 481.504, 66.5288, 0.2288", "633.888, 482.362, 66.1909, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "783.118, 497.718, 33.0826, 0.3796", "782.017, 497.964, 33.0655, 0.6864", "781.042, 498.561, 33.4208, 0.7626", "780.473, 499.552, 33.5555, 0.6836", "780.07, 500.53, 33.8638, 0.6946", "779.236, 501.312, 34.1505, 0.6362" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "790.575, 492.089, 11.1491, 0.4438", "790.027, 492.533, 10.6171, 0.4444", "789.055, 493.018, 10.0509, 0.3722", "788.128, 493.135, 9.4048, 0.367", "787.351, 493.344, 8.7196, 0.419", "786.338, 493.8, 8.2885, 0.4438", "785.499, 494.387, 8.2813, 0.3796", "785.292, 494.978, 8.811, 0.339", "785.388, 495.69, 9.687, 0.341", "784.794, 496.514, 10.5828, 0.4256", "783.894, 497.196, 11.3666, 0.42", "783.217, 497.988, 12.094, 0.511", "782.607, 498.842, 12.7104, 0.4184", "781.972, 499.671, 12.9888, 0.3668", "781.375, 500.415, 13.2778, 0.377", "780.716, 501.191, 13.6549, 0.3404", "780.019, 502.064, 13.861, 0.312", "779.371, 502.983, 13.8771, 0.2966", "778.519, 503.698, 13.8938, 0.3164", "777.642, 504.427, 13.8318, 0.348", "776.953, 505.316, 13.6113, 0.4312", "776.433, 506.316, 13.2908, 0.466", "776.183, 507.392, 12.883, 0.423", "775.793, 508.412, 12.4064, 0.4086", "775.102, 509.313, 11.9374, 0.5218", "774.483, 510.258, 11.504, 0.5104", "774.295, 511.37, 11.1429, 0.4198", "774.569, 512.473, 10.848, 0.3594", "774.893, 513.544, 10.4933, 0.4116", "775.171, 514.511, 9.9416, 0.3988", "775.443, 515.451, 9.2512, 0.4482", "775.174, 516.522, 8.628, 0.4148", "774.59, 517.393, 7.952, 0.5014", "774.023, 518.163, 7.2208, 0.3998", "773.283, 518.818, 6.5257, 0.3374", "772.735, 519.601, 5.913, 0.2966", "772.229, 520.135, 5.8225, 0.3164", "771.262, 520.422, 6.031, 0.3468", "770.369, 520.78, 6.5234, 0.435", "769.312, 521.134, 7.0547, 0.4434", "768.238, 521.105, 7.3511, 0.5254", "767.14, 521.367, 7.61, 0.5848", "766.281, 522.117, 7.7053, 0.6864", "765.701, 523.093, 7.8532, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "790.575, 492.089, 11.1491, 0.4438", "791.057, 490.993, 10.0271, 0.4894", "791.062, 489.891, 10.134, 0.4182", "790.669, 488.859, 10.2236, 0.4046", "789.957, 487.983, 10.272, 0.4906", "789.135, 487.199, 10.2267, 0.5686", "788.36, 486.392, 10.0667, 0.6514", "787.753, 485.462, 9.8169, 0.646", "787.414, 484.389, 9.5809, 0.4932", "787.261, 483.261, 9.4042, 0.4422", "787.034, 482.146, 9.2414, 0.3666", "786.603, 481.107, 9.0462, 0.3632", "786.084, 480.101, 8.8227, 0.3804", "785.56, 479.088, 8.6028, 0.5242", "784.982, 478.104, 8.4109, 0.4792", "784.336, 477.162, 8.2366, 0.5356", "783.737, 476.215, 7.9941, 0.4174", "783.214, 475.244, 7.6566, 0.3652", "782.717, 474.243, 7.2633, 0.3738", "782.296, 473.19, 6.8528, 0.3346", "781.728, 472.212, 6.4969, 0.3012", "780.74, 471.757, 6.1823, 0.2766", "779.657, 471.945, 5.8016, 0.2784", "778.689, 472.328, 5.2632, 0.2816", "777.744, 472.27, 4.5468, 0.2874", "776.675, 472.074, 3.8035, 0.2994", "775.625, 471.637, 3.1748, 0.3152", "774.739, 470.98, 2.5794, 0.3756", "773.872, 470.575, 1.9309, 0.339", "773.643, 469.536, 1.3761, 0.305", "773.755, 468.398, 1.0203, 0.305", "774.215, 467.458, 1.1295, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "761.099, 514.626, 32.7516, 0.2746", "760.089, 514.104, 32.9879, 0.2746", "759.276, 513.383, 33.3001, 0.2746", "758.629, 512.453, 33.6213, 0.2746", "757.863, 511.608, 33.9192, 0.2748", "757.072, 510.798, 34.1998, 0.2748", "756.127, 510.176, 34.4369, 0.2752", "755.099, 509.683, 34.6506, 0.2758", "754.077, 509.173, 34.837, 0.2766", "753.076, 508.764, 35.0826, 0.2782", "752.085, 508.436, 35.3578, 0.2814", "751.061, 507.974, 35.481, 0.287", "750.03, 507.524, 35.532, 0.2988", "748.916, 507.277, 35.581, 0.3142", "747.818, 506.985, 35.6126, 0.3734", "746.753, 506.578, 35.6152, 0.3338", "745.669, 506.211, 35.6367, 0.3", "744.579, 505.865, 35.714, 0.2746", "743.472, 505.638, 35.8588, 0.2746", "742.365, 505.458, 36.0847, 0.2746", "741.253, 505.274, 36.3479, 0.2746", "740.113, 505.236, 36.6134, 0.2746", "738.995, 505.135, 36.9079, 0.2746", "737.926, 504.805, 37.205, 0.2746", "736.846, 504.457, 37.4489, 0.2746", "735.712, 504.339, 37.6429, 0.2746", "734.568, 504.329, 37.8084, 0.2746", "733.426, 504.284, 37.961, 0.2746", "732.37, 503.942, 38.1296, 0.2746", "731.527, 503.246, 38.3953, 0.2746", "730.499, 503.01, 38.7436, 0.2746", "729.444, 502.623, 39.0883, 0.2748", "728.379, 502.219, 39.3982, 0.275", "727.247, 502.183, 39.6505, 0.2754", "726.229, 502.567, 39.7384, 0.276", "725.099, 502.539, 39.8163, 0.2774", "724.112, 501.984, 39.9661, 0.2792", "723.156, 501.48, 40.2752, 0.2834", "722.136, 501.231, 40.7366, 0.2906", "721.022, 501.053, 41.2082, 0.3056", "719.902, 500.879, 41.554, 0.3264", "718.778, 500.713, 41.8743, 0.3976", "717.691, 500.471, 42.2066, 0.3734", "716.647, 500.06, 42.5247, 0.3988", "715.517, 499.913, 42.789, 0.3338", "714.404, 500.08, 42.9276, 0.3", "713.262, 500.041, 43.0422, 0.2746", "712.173, 499.775, 43.2239, 0.2746", "711.045, 499.677, 43.4372, 0.2746", "709.911, 499.69, 43.6626, 0.2746", "708.78, 499.862, 43.8819, 0.2746", "707.648, 500.007, 44.1123, 0.2746", "706.503, 500.034, 44.35, 0.2746", "705.359, 500.034, 44.5992, 0.2746", "704.304, 500.08, 44.9515, 0.2746", "703.415, 500.214, 45.5549, 0.2746", "702.375, 500.263, 46.2515, 0.2746", "701.298, 500.103, 46.9098, 0.2746", "700.352, 499.483, 47.439, 0.2746", "699.379, 498.984, 47.845, 0.2746", "698.253, 498.847, 48.1746, 0.2746", "697.412, 498.538, 48.5906, 0.2746", "696.36, 498.286, 48.9308, 0.2746", "695.236, 498.075, 49.1795, 0.2746", "694.152, 497.714, 49.3562, 0.2746", "693.078, 497.321, 49.4676, 0.2746", "691.947, 497.178, 49.5205, 0.2746", "690.803, 497.165, 49.5281, 0.2746", "689.659, 497.165, 49.5281, 0.2746", "688.516, 497.118, 49.5281, 0.2746", "687.375, 497.061, 49.5281, 0.2746", "686.244, 496.887, 49.5281, 0.2746", "685.224, 496.382, 49.5281, 0.2746", "684.219, 495.835, 49.5281, 0.2746", "683.227, 495.267, 49.5281, 0.2746", "682.232, 494.701, 49.5281, 0.2746", "681.226, 494.158, 49.5281, 0.2746", "680.235, 493.585, 49.5281, 0.2744", "679.517, 492.705, 49.5281, 0.2744", "678.731, 491.874, 49.5281, 0.2742", "677.746, 491.3, 49.5281, 0.2742", "676.617, 491.118, 49.5281, 0.2736", "675.501, 490.866, 49.5281, 0.2728", "674.387, 490.604, 49.5281, 0.2712", "673.292, 490.273, 49.5281, 0.2684", "672.229, 489.849, 49.5281, 0.2626", "671.136, 489.517, 49.5281, 0.2542", "669.993, 489.45, 49.5281, 0.2288", "668.851, 489.383, 49.5281, 0.2288" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "761.099, 514.626, 32.7516, 0.2746", "760.455, 514.341, 33.1257, 0.2288", "759.445, 513.937, 33.6006, 0.2762", "758.371, 513.817, 33.8148, 0.2776", "757.237, 513.914, 33.9735, 0.28", "756.094, 513.95, 34.0505, 0.2846", "755.033, 514.172, 33.9732, 0.2934", "754.011, 514.386, 33.7044, 0.3092", "752.921, 514.44, 33.3376, 0.3404", "751.9, 514.773, 33.0736, 0.3874", "750.941, 515.349, 32.9521, 0.5294", "749.973, 515.953, 32.8734, 0.5256", "748.972, 516.491, 32.8121, 0.4416", "747.908, 516.897, 32.7886, 0.4306", "746.847, 517.311, 32.8098, 0.3946", "745.795, 517.755, 32.8292, 0.4032", "744.72, 518.135, 32.8174, 0.5118", "743.692, 518.607, 32.7914, 0.492", "742.795, 519.304, 32.7662, 0.3848", "741.992, 520.089, 32.804, 0.3", "741.231, 520.883, 32.94, 0.2746", "740.444, 521.675, 33.105, 0.2746", "739.877, 522.612, 33.178, 0.2746", "739.795, 523.622, 33.0506, 0.2748", "739.482, 524.585, 32.8082, 0.2748", "738.723, 525.407, 32.5878, 0.2752", "737.831, 526.121, 32.4526, 0.2758", "736.804, 526.536, 32.4808, 0.2764", "735.849, 526.605, 32.8076, 0.278", "734.981, 527.08, 33.3161, 0.281", "734.211, 527.899, 33.7879, 0.2866", "733.373, 528.676, 34.1463, 0.2968", "732.44, 529.331, 34.3608, 0.3168", "731.447, 529.895, 34.4588, 0.3476", "730.409, 530.313, 34.5425, 0.4364", "729.334, 530.691, 34.5783, 0.447", "728.252, 530.981, 34.4957, 0.5266", "727.129, 531.152, 34.3661, 0.6116", "726.045, 531.502, 34.2577, 0.6182", "725.024, 531.995, 34.0962, 0.4474", "723.999, 532.479, 33.882, 0.3316", "722.97, 532.977, 33.675, 0.2862", "722.008, 533.594, 33.495, 0.296", "721.173, 534.369, 33.3127, 0.3152", "720.626, 535.367, 33.1307, 0.3458", "720.078, 536.353, 32.9104, 0.427", "719.292, 537.167, 32.6816, 0.4582", "718.343, 537.785, 32.4531, 0.409", "717.386, 538.393, 32.23, 0.3816", "716.386, 538.943, 32.0676, 0.4768", "715.672, 539.828, 31.995, 0.4014", "715.152, 540.845, 32.0046, 0.3418", "714.144, 541.326, 32.1185, 0.2994", "713.02, 541.509, 32.2577, 0.3474", "712.611, 542.565, 32.3772, 0.2796", "712.381, 543.686, 32.5346, 0.2288" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "767.626, 519.49, 26.9114, 0.6712", "766.755, 520.494, 26.2214, 0.5852", "766.141, 521.43, 25.6156, 0.4574", "765.548, 522.405, 25.4152, 0.4624", "764.89, 523.271, 25.1475, 0.4408", "763.943, 523.612, 24.723, 0.5504", "762.883, 523.683, 24.2307, 0.4868", "761.999, 524.323, 23.7249, 0.5202", "761.234, 525.105, 23.2348, 0.532", "760.178, 525.367, 22.8099, 0.5716", "759.074, 525.081, 22.4372, 0.5568", "758.016, 524.686, 22.0604, 0.7274", "757.045, 524.166, 21.6173, 0.7716", "756.223, 523.44, 21.1049, 0.571", "755.482, 522.67, 20.4992, 0.4248", "754.611, 522.003, 19.893, 0.4318", "753.52, 521.744, 19.3476, 0.4686", "752.393, 521.846, 18.8321, 0.4208", "751.313, 522.108, 18.286, 0.439", "750.328, 522.548, 17.6834, 0.4104", "749.447, 523.222, 17.0515, 0.4318", "748.493, 523.763, 16.3955, 0.567", "747.458, 524.125, 15.7072, 0.5838", "746.536, 524.64, 14.9799, 0.6068", "745.688, 525.244, 14.2299, 0.4586", "744.752, 525.827, 13.5509, 0.4252", "743.711, 526.229, 12.9863, 0.3354", "742.592, 526.191, 12.531, 0.3028", "741.482, 525.953, 12.2203, 0.2798", "740.373, 525.952, 11.9769, 0.2842", "739.362, 526.317, 11.6391, 0.2924", "738.449, 526.852, 11.1734, 0.3086", "737.458, 527.327, 10.6738, 0.3326", "736.384, 527.671, 10.1941, 0.4072", "735.314, 527.812, 9.6907, 0.3986", "734.212, 527.748, 9.2487, 0.409", "733.125, 527.835, 9.035, 0.53", "732.136, 528.319, 8.9599, 0.4898", "731.213, 528.903, 8.8238, 0.555", "730.306, 529.561, 8.6782, 0.4546", "729.605, 530.424, 8.6432, 0.4284", "729.087, 531.43, 8.6484, 0.5176", "728.601, 532.464, 8.6316, 0.473", "728.156, 533.516, 8.5635, 0.4936", "727.728, 534.566, 8.4212, 0.4884", "727.108, 535.514, 8.2172, 0.4596", "726.292, 536.31, 7.9602, 0.5008", "725.405, 537.014, 7.6367, 0.575", "724.346, 537.336, 7.2448, 0.4946", "723.28, 537.034, 6.8199, 0.4876", "722.261, 536.557, 6.3669, 0.4718", "721.231, 536.144, 5.8772, 0.4572", "720.146, 535.966, 5.3651, 0.3574", "719.068, 536.208, 4.8495, 0.2966", "718.45, 537.062, 4.3137, 0.2684", "718.768, 538.109, 3.9859, 0.2626", "719.648, 538.54, 3.9486, 0.2542", "720.698, 538.397, 3.7677, 0.2288", "721.635, 538.481, 2.8, 0.2288" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "767.626, 519.49, 26.9114, 0.6712", "766.372, 519.464, 26.4209, 0.3942", "765.336, 519.109, 25.8365, 0.4296", "764.289, 518.801, 25.1857, 0.4278", "763.276, 518.46, 24.4824, 0.5262", "762.295, 517.972, 23.7843, 0.4408", "761.261, 517.515, 23.157, 0.4392", "760.204, 517.167, 22.5721, 0.3612", "759.1, 517.036, 22.032, 0.3526", "757.966, 517.181, 21.6325, 0.3618", "756.838, 517.345, 21.3002, 0.4868", "755.741, 517.291, 20.9453, 0.4216", "754.795, 516.696, 20.6148, 0.3728", "753.865, 516.052, 20.3412, 0.3878", "752.799, 516.289, 20.0632, 0.3618" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "807.077, 516.396, 35.9103, 0.3", "806.9, 517.143, 36.9354, 0.2746", "806.784, 518.051, 38.0789, 0.2746", "806.801, 519.069, 39.1854, 0.2746", "807.03, 520.127, 40.1817, 0.2746", "807.419, 521.178, 41.0278, 0.2746", "807.757, 522.26, 41.7189, 0.2746", "807.958, 523.381, 42.2719, 0.2746", "808.118, 524.505, 42.7703, 0.2746", "808.385, 525.586, 43.2928, 0.2746", "808.956, 526.525, 43.8558, 0.2746", "809.792, 527.211, 44.4822, 0.2746", "810.631, 527.747, 45.2253, 0.2746", "811.335, 528.483, 46.0118, 0.2746", "811.877, 529.457, 46.6914, 0.2746", "812.337, 530.503, 47.2223, 0.2746", "812.709, 531.579, 47.6434, 0.2746", "813.04, 532.665, 47.992, 0.2746", "813.449, 533.724, 48.284, 0.2746", "813.988, 534.729, 48.5316, 0.2746", "814.867, 535.417, 48.7558, 0.2746", "815.96, 535.704, 48.9726, 0.2746", "816.945, 536.251, 49.1938, 0.2746", "817.229, 537.262, 49.4998, 0.2746", "817.609, 538.273, 49.9338, 0.2746", "818.28, 539.142, 50.4409, 0.2746", "819.209, 539.737, 50.9802, 0.2746", "820.215, 540.217, 51.5259, 0.2746", "821.199, 540.635, 52.1058, 0.2746", "822.267, 540.98, 52.5423, 0.2746", "823.379, 541.241, 52.8637, 0.2746", "824.499, 541.472, 53.1283, 0.2746", "825.301, 542.237, 53.3758, 0.2746", "826.121, 543.032, 53.6452, 0.2746", "827.041, 543.673, 54.0184, 0.2746", "827.777, 544.471, 54.549, 0.2746", "828.523, 545.076, 55.2773, 0.2746", "828.723, 546.07, 56.1103, 0.2746", "829.055, 547.144, 56.8845, 0.2746", "829.177, 548.228, 57.6232, 0.2746", "828.994, 549.266, 58.3442, 0.2746", "828.905, 550.391, 58.9089, 0.2746", "828.874, 551.492, 59.3214, 0.2746", "828.602, 552.53, 59.738, 0.2746", "828.814, 553.589, 60.1446, 0.2746", "829.398, 554.556, 60.466, 0.2746", "830.089, 555.457, 60.7429, 0.2746", "830.036, 555.918, 60.9736, 0.2746", "830.333, 556.879, 61.1506, 0.2746", "830.745, 557.946, 61.2769, 0.2746", "831.156, 559.012, 61.3746, 0.2746", "831.568, 560.08, 61.4594, 0.2746", "831.98, 561.146, 61.5345, 0.2746", "832.392, 562.213, 61.6053, 0.2746", "832.803, 563.28, 61.6742, 0.2746", "833.215, 564.347, 61.7403, 0.2746", "833.88, 565.205, 61.7991, 0.2746", "834.85, 565.811, 61.8475, 0.2746", "835.82, 566.416, 61.8906, 0.2746", "836.791, 567.021, 61.9335, 0.2746", "837.761, 567.628, 61.9811, 0.2746", "838.481, 568.41, 62.0452, 0.2746", "838.728, 569.524, 62.1424, 0.2746", "838.976, 570.64, 62.2675, 0.2746", "839.224, 571.755, 62.4148, 0.2746", "839.471, 572.869, 62.5811, 0.2746", "839.718, 573.985, 62.7626, 0.2746", "839.966, 575.1, 62.9574, 0.2746", "840.213, 576.216, 63.1649, 0.2746", "840.469, 577.325, 63.387, 0.2746", "841.168, 578.216, 63.6591, 0.2746", "841.867, 579.107, 63.9691, 0.2746", "842.566, 579.998, 64.3042, 0.2746", "843.264, 580.889, 64.6531, 0.2746", "843.963, 581.779, 65.004, 0.2746", "844.662, 582.67, 65.3472, 0.2746", "845.096, 583.678, 65.6578, 0.2746", "845.255, 584.809, 65.9224, 0.2746", "845.413, 585.941, 66.152, 0.2746", "845.572, 587.071, 66.3558, 0.2746", "845.729, 588.203, 66.544, 0.2746", "845.888, 589.333, 66.7251, 0.2746", "846.046, 590.464, 66.9071, 0.2746", "846.205, 591.596, 67.0939, 0.2744", "846.647, 592.613, 67.293, 0.2744", "847.3, 593.546, 67.5077, 0.2742", "847.953, 594.48, 67.734, 0.2742", "848.607, 595.413, 67.9678, 0.2736", "849.261, 596.347, 68.2058, 0.2728", "849.914, 597.28, 68.4482, 0.2712", "850.567, 598.214, 68.6874, 0.2684", "851.221, 599.147, 68.917, 0.2626", "851.875, 600.081, 69.1328, 0.2542", "852.528, 601.014, 69.3316, 0.2288", "853.182, 601.948, 69.7189, 0.2288" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "807.077, 516.396, 35.9103, 0.3", "807.904, 516.143, 35.9531, 0.2288", "809.025, 516.016, 36.5238, 0.2746", "810.151, 516.151, 36.764, 0.2746", "811.268, 516.355, 37.0356, 0.2746", "812.32, 516.774, 37.3279, 0.2746", "813.325, 517.296, 37.6261, 0.2746", "814.43, 517.576, 37.8913, 0.2746", "815.557, 517.76, 38.1105, 0.2746", "816.688, 517.929, 38.2816, 0.2746", "817.819, 518.095, 38.4034, 0.2746", "818.952, 518.256, 38.4908, 0.2746", "820.078, 518.4, 38.5958, 0.2746", "821.198, 518.537, 38.7257, 0.2746", "822.336, 518.627, 38.7786, 0.2746", "823.465, 518.696, 38.7377, 0.2746", "824.604, 518.731, 38.6576, 0.2748", "825.748, 518.737, 38.5776, 0.2748", "826.892, 518.737, 38.507, 0.2752", "827.981, 519.087, 38.4552, 0.2758", "829.012, 519.582, 38.4331, 0.2768", "829.92, 520.276, 38.4356, 0.2786", "830.755, 521.06, 38.4468, 0.2822", "831.728, 521.659, 38.4569, 0.2882", "832.758, 522.158, 38.4625, 0.2994", "833.605, 522.882, 38.5518, 0.323", "834.567, 523.491, 38.6459, 0.354", "835.533, 523.984, 38.5655, 0.473", "836.664, 523.958, 38.4247, 0.3946", "837.795, 523.795, 38.3284, 0.3278", "838.936, 523.801, 38.2578, 0.2792", "840.064, 523.989, 38.1741, 0.2828", "841.193, 524.176, 38.0957, 0.291", "842.315, 524.38, 37.9954, 0.2994", "843.43, 524.589, 37.8498, 0.3474", "844.539, 524.846, 37.6746, 0.2796", "845.638, 525.146, 37.2722, 0.2288" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "811.309, 530.326, 23.2887, 0.426", "810.959, 530.877, 23.5785, 0.2288", "810.275, 531.612, 22.7074, 0.318", "809.929, 532.673, 22.36, 0.3804", "809.57, 533.745, 22.0272, 0.3474", "809.068, 534.76, 21.6758, 0.3248", "808.56, 535.766, 21.3102, 0.3214", "808.117, 536.782, 20.9157, 0.3566", "807.717, 537.822, 20.5341, 0.4486", "807.396, 538.904, 20.1943, 0.4932", "807.367, 540.029, 19.9293, 0.498", "807.43, 541.159, 19.7864, 0.4278", "807.4, 542.279, 19.7733, 0.4534", "807.289, 543.402, 19.8122, 0.4304", "807.066, 544.503, 19.7708, 0.5014", "806.772, 545.559, 19.587, 0.5388", "806.418, 546.602, 19.3033, 0.6076", "806.005, 547.653, 19.0033, 0.5084", "805.66, 548.738, 18.77, 0.5132", "805.413, 549.845, 18.655, 0.5186", "805.148, 550.953, 18.6137, 0.5462", "804.815, 552.043, 18.5812, 0.5126", "804.476, 553.133, 18.5425, 0.6326", "804.207, 554.244, 18.5015, 0.654", "804.0, 555.367, 18.4663, 0.756", "803.854, 556.501, 18.4353, 0.6444", "803.789, 557.639, 18.386, 0.5244", "803.766, 558.774, 18.2993, 0.5636", "803.711, 559.911, 18.2064, 0.5116", "803.551, 561.037, 18.1642, 0.5622", "803.294, 562.142, 18.1787, 0.6298", "803.044, 563.254, 18.2059, 0.6532", "802.901, 564.387, 18.2244, 0.507", "802.844, 565.528, 18.2133, 0.4686", "802.739, 566.644, 18.0991, 0.4118", "802.438, 567.694, 17.8611, 0.4646", "801.919, 568.671, 17.5647, 0.4824", "801.277, 569.603, 17.2959, 0.4468", "800.564, 570.489, 17.1437, 0.484", "799.901, 571.402, 17.1395, 0.5114", "799.403, 572.418, 17.2343, 0.5324", "798.912, 573.44, 17.3981, 0.4884", "798.256, 574.358, 17.5953, 0.58", "797.478, 575.187, 17.7283, 0.5968", "796.642, 575.959, 17.7681, 0.4548", "795.734, 576.65, 17.7782, 0.3452", "794.795, 577.302, 17.7668, 0.3124", "793.967, 578.079, 17.7236, 0.3404", "793.305, 579.006, 17.6863, 0.4168", "792.792, 580.024, 17.6951, 0.44", "792.434, 581.094, 17.7768, 0.3724", "792.083, 582.169, 17.8982, 0.3254", "791.53, 583.161, 17.9963, 0.3164", "790.719, 583.955, 18.0437, 0.3776", "789.805, 584.642, 18.0298, 0.3418", "788.994, 585.431, 17.9203, 0.3146", "788.295, 586.297, 17.6982, 0.3028", "787.641, 587.203, 17.4107, 0.3212", "787.066, 588.185, 17.1692, 0.3864", "786.552, 589.195, 17.0283, 0.3592", "786.116, 590.249, 16.9386, 0.3416", "785.76, 591.335, 16.8479, 0.377", "785.432, 592.418, 16.7079, 0.341", "785.069, 593.474, 16.4887, 0.3124", "784.71, 594.548, 16.238, 0.2988", "784.389, 595.645, 16.0212, 0.3142", "783.987, 596.715, 15.8473, 0.3734", "783.516, 597.757, 15.6981, 0.3338", "783.138, 598.836, 15.5615, 0.3", "782.95, 599.962, 15.4261, 0.2746", "782.756, 601.086, 15.2538, 0.2746", "782.256, 602.072, 14.9838, 0.2746", "781.596, 602.945, 14.6205, 0.2746", "781.047, 603.923, 14.2466, 0.2746", "780.725, 605.016, 13.9344, 0.2746", "780.492, 606.136, 13.6997, 0.2746", "780.234, 607.25, 13.536, 0.2746", "779.739, 608.279, 13.4299, 0.2746", "778.847, 608.975, 13.3448, 0.2746", "777.859, 609.535, 13.2258, 0.2746", "776.979, 610.26, 13.1038, 0.2746", "776.257, 611.144, 13.0197, 0.2746", "775.767, 612.168, 12.9062, 0.2746", "775.608, 613.292, 12.7776, 0.2746", "775.512, 614.43, 12.6828, 0.2746", "775.312, 615.557, 12.633, 0.2748", "775.031, 616.665, 12.6203, 0.2748", "774.608, 617.728, 12.6402, 0.2752", "774.109, 618.758, 12.6981, 0.2758", "773.593, 619.769, 12.8256, 0.2766", "773.06, 620.764, 13.0102, 0.2784", "772.472, 621.74, 13.1968, 0.2816", "772.036, 622.797, 13.3521, 0.2874", "771.755, 623.906, 13.4693, 0.2994", "771.515, 625.024, 13.5505, 0.3152", "771.278, 626.143, 13.6, 0.3756", "771.031, 627.26, 13.633, 0.3382", "770.697, 628.353, 13.6778, 0.3082", "770.311, 629.428, 13.7414, 0.2896", "769.822, 630.461, 13.7835, 0.3036", "769.214, 631.429, 13.7992, 0.323", "768.381, 632.179, 13.8943, 0.3898", "767.868, 633.196, 13.9474, 0.3652", "767.973, 634.324, 13.9374, 0.3526", "768.099, 635.459, 13.9699, 0.399", "767.933, 636.574, 14.0849, 0.3756", "767.896, 637.715, 14.1593, 0.404", "768.174, 638.815, 14.1742, 0.339", "768.218, 639.918, 14.3147, 0.3304", "767.805, 640.98, 14.6829, 0.2288" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "811.309, 530.326, 23.2887, 0.426", "811.684, 530.964, 23.4338, 0.4582", "812.278, 531.942, 23.4913, 0.401", "812.843, 532.936, 23.4802, 0.4032", "813.305, 533.981, 23.4191, 0.3418", "814.082, 534.807, 23.3045, 0.315", "815.11, 535.228, 23.0943, 0.3018", "816.111, 535.758, 22.8466, 0.3272", "816.951, 536.529, 22.6274, 0.3616", "817.743, 537.339, 22.4018, 0.4872", "818.195, 538.279, 22.0908, 0.4204", "819.002, 539.069, 21.8659, 0.378", "820.073, 539.363, 21.8621, 0.3616", "821.186, 539.591, 21.9747, 0.4868", "822.168, 540.102, 22.2173, 0.42", "822.709, 541.014, 22.5902, 0.3762", "822.745, 542.035, 23.0576, 0.3632" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "798.696, 522.258, 20.6767, 0.6296", "798.573, 523.248, 21.0712, 0.6438", "798.409, 524.357, 21.5375, 0.5316", "798.271, 525.413, 22.111, 0.5384", "798.154, 526.424, 22.7814, 0.4212", "798.081, 527.485, 23.4449, 0.3794", "798.212, 528.6, 23.9766, 0.3644", "798.445, 529.718, 24.3297, 0.492", "798.41, 530.839, 24.5317, 0.4306", "797.989, 531.893, 24.6234, 0.3904", "797.431, 532.887, 24.6311, 0.4156", "797.051, 533.951, 24.6258, 0.4372", "796.964, 535.085, 24.6574, 0.3676", "797.101, 536.216, 24.724, 0.315", "797.437, 537.3, 24.8438, 0.3036", "797.871, 538.338, 25.0399, 0.3232", "798.279, 539.386, 25.285, 0.3902", "798.604, 540.475, 25.5162, 0.366", "798.884, 541.583, 25.6912, 0.3542", "799.161, 542.693, 25.8043, 0.4018", "799.345, 543.819, 25.8594, 0.3812", "799.474, 544.955, 25.8661, 0.413", "799.737, 546.063, 25.8418, 0.3612", "800.147, 547.129, 25.7919, 0.3452", "800.615, 548.162, 25.699, 0.384", "801.099, 549.184, 25.5723, 0.3534", "801.572, 550.219, 25.4659, 0.337", "802.022, 551.27, 25.4293, 0.3388", "802.453, 552.326, 25.4911, 0.4138", "802.839, 553.394, 25.6547, 0.4348", "803.142, 554.491, 25.8944, 0.3632", "803.38, 555.605, 26.1894, 0.307", "803.594, 556.713, 26.5446, 0.2874", "803.732, 557.817, 26.9618, 0.2994", "803.662, 558.925, 27.4145, 0.3152", "803.391, 560.022, 27.8634, 0.3754", "803.031, 561.104, 28.2764, 0.3378", "802.545, 562.128, 28.6611, 0.3068", "801.89, 563.001, 29.0909, 0.287", "801.13, 563.763, 29.5795, 0.2988", "800.488, 564.659, 30.035, 0.3142", "800.032, 565.707, 30.4212, 0.3736", "799.526, 566.724, 30.767, 0.3342", "799.007, 567.734, 31.0811, 0.3006", "798.581, 568.79, 31.3513, 0.2758", "798.113, 569.823, 31.5963, 0.2766", "797.469, 570.744, 31.8556, 0.2782", "796.767, 571.633, 32.0998, 0.2814", "796.133, 572.581, 32.2689, 0.287", "795.53, 573.548, 32.3971, 0.2988", "794.882, 574.484, 32.5422, 0.3142", "794.135, 575.341, 32.6931, 0.3734", "793.326, 576.149, 32.8317, 0.3338", "792.617, 577.037, 32.9658, 0.3", "792.095, 578.051, 33.1111, 0.2746", "791.822, 579.133, 33.3152, 0.2746", "791.822, 580.248, 33.5824, 0.2746", "791.745, 581.368, 33.8534, 0.2746", "791.453, 582.471, 34.1149, 0.2746", "791.121, 583.531, 34.4193, 0.2746", "790.591, 584.488, 34.7402, 0.2746", "790.19, 585.532, 34.9835, 0.2744", "789.477, 586.358, 35.1487, 0.2744", "788.78, 587.252, 35.2556, 0.2742", "787.817, 587.781, 35.315, 0.2742", "786.838, 588.363, 35.3366, 0.2736", "786.285, 589.344, 35.3391, 0.2728", "785.258, 589.793, 35.3391, 0.2712", "784.338, 590.47, 35.3391, 0.2684", "783.341, 591.03, 35.3391, 0.2626", "782.236, 591.322, 35.3391, 0.2542", "781.212, 591.831, 35.3391, 0.2288", "780.277, 592.489, 35.3391, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "798.696, 522.258, 20.6767, 0.6296", "799.578, 521.95, 18.788, 0.4812", "800.672, 522.268, 18.5926, 0.5858", "801.726, 522.698, 18.5416, 0.5144", "802.677, 523.285, 18.4116, 0.5254", "803.448, 524.093, 18.1679, 0.5374", "804.17, 524.96, 17.8538, 0.5994", "804.947, 525.776, 17.4861, 0.5226", "805.849, 526.453, 17.1099, 0.3942", "806.873, 526.93, 16.7462, 0.3174", "807.952, 527.227, 16.3634, 0.308", "809.041, 527.459, 15.9656, 0.3314", "810.039, 527.914, 15.5838, 0.405", "810.817, 528.732, 15.2831, 0.3934", "811.479, 529.659, 15.0455, 0.4066", "812.233, 530.505, 14.8199, 0.4884", "813.122, 531.218, 14.6221, 0.5928", "814.057, 531.87, 14.4369, 0.5586", "814.978, 532.521, 14.2177, 0.457", "815.937, 533.091, 13.959, 0.4538", "816.913, 533.658, 13.7292, 0.462", "817.74, 534.429, 13.5845, 0.4086", "818.43, 535.33, 13.5233, 0.4166", "819.113, 536.232, 13.5294, 0.368", "819.75, 537.159, 13.4995, 0.3574", "820.158, 538.197, 13.3599, 0.4078", "820.56, 539.247, 13.1499, 0.392", "821.201, 540.191, 12.8895, 0.4344", "821.696, 541.146, 12.5112, 0.3942", "822.035, 542.146, 11.9929, 0.4382", "822.407, 543.17, 11.4407, 0.4026", "822.931, 544.108, 10.9037, 0.4478", "823.646, 544.856, 10.3403, 0.4502", "824.481, 545.498, 9.8686, 0.3918", "825.263, 545.67, 9.81, 0.3608", "826.206, 545.789, 10.0169, 0.3836", "827.234, 546.06, 10.1005, 0.4932", "828.306, 546.189, 10.0154, 0.602", "829.427, 546.258, 9.9365, 0.5754", "830.483, 546.589, 9.8867, 0.4888", "831.331, 547.29, 9.663, 0.509", "831.873, 548.192, 9.2629, 0.5836", "832.421, 549.089, 8.7727, 0.5416", "833.195, 549.852, 8.2624, 0.4242", "834.17, 550.437, 7.8788, 0.3988", "835.131, 551.041, 7.6401, 0.3338", "836.062, 551.693, 7.5192, 0.3", "837.002, 552.32, 7.4868, 0.2746", "837.994, 552.883, 7.4004, 0.2746", "838.939, 553.472, 7.1735, 0.2748", "839.353, 554.34, 6.6995, 0.275", "839.363, 554.422, 6.1589, 0.2752", "839.473, 553.308, 5.7101, 0.2758", "840.251, 552.666, 5.3599, 0.2768", "840.84, 552.083, 4.9928, 0.2796", "840.467, 551.179, 4.7556, 0.2796", "839.351, 551.0, 4.6203, 0.305", "838.209, 550.95, 4.48, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "790.99, 516.685, 16.6732, 0.4582", "789.842, 516.5, 17.5266, 0.505", "788.85, 516.723, 17.6396, 0.4486", "787.827, 517.156, 17.6467, 0.4546", "786.733, 517.351, 17.5293, 0.3848", "785.597, 517.374, 17.3221, 0.4198", "784.459, 517.412, 17.0615, 0.3736", "783.396, 517.431, 16.6739, 0.3696", "782.322, 517.509, 16.2039, 0.424", "781.264, 517.707, 15.7098, 0.4528", "780.258, 518.106, 15.2304, 0.3976", "779.25, 518.623, 14.8847, 0.3656", "778.203, 518.914, 14.7683, 0.4226", "777.191, 519.343, 14.8013, 0.422", "776.205, 519.904, 14.8421, 0.478", "775.148, 520.324, 14.9063, 0.5318", "774.033, 520.552, 15.0033, 0.419", "772.925, 520.836, 15.0691, 0.326", "771.873, 521.21, 15.1775, 0.2758", "770.854, 521.694, 15.2997, 0.2766", "769.995, 522.427, 15.3123, 0.2784", "769.26, 523.301, 15.2683, 0.2816", "768.856, 524.325, 15.0828, 0.2878", "768.023, 525.06, 14.8162, 0.2988", "767.028, 525.621, 14.5685, 0.32", "766.229, 526.439, 14.3769, 0.355", "765.425, 527.252, 14.238, 0.445", "764.481, 527.898, 14.1403, 0.4868", "763.516, 528.509, 14.0425, 0.486", "762.545, 529.103, 13.9082, 0.4056", "761.492, 529.545, 13.7421, 0.4112", "760.46, 530.037, 13.555, 0.3578", "759.526, 530.695, 13.3573, 0.3394", "758.689, 531.474, 13.1452, 0.3728", "758.018, 532.357, 12.8346, 0.333", "757.003, 532.859, 12.4958, 0.2982", "755.861, 532.927, 12.1801, 0.2712", "754.733, 532.929, 11.8284, 0.2684", "753.634, 532.974, 11.419, 0.2626", "752.746, 533.464, 10.9109, 0.2542", "751.81, 534.12, 10.5599, 0.2288", "750.864, 534.76, 10.1651, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "790.99, 516.685, 16.6732, 0.4582", "790.164, 516.452, 16.0973, 0.4248", "789.797, 515.44, 15.6407, 0.3348", "789.947, 514.371, 15.0398, 0.3016", "790.748, 513.7, 14.3341, 0.2776" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "765.267, 494.129, 23.8982, 0.5368", "763.831, 493.691, 23.8314, 0.3836", "763.062, 492.891, 24.2225, 0.3398", "762.152, 492.254, 24.4161, 0.374", "761.104, 491.958, 24.5623, 0.335", "760.008, 492.081, 24.5783, 0.302", "758.898, 492.328, 24.5456, 0.2782", "757.771, 492.52, 24.4938, 0.2814", "756.685, 492.849, 24.4501, 0.287", "755.654, 493.339, 24.4509, 0.2988", "754.603, 493.774, 24.5003, 0.3142", "753.585, 494.263, 24.5934, 0.3736", "752.564, 494.756, 24.6895, 0.3342", "751.471, 495.085, 24.7422, 0.3006", "750.36, 495.357, 24.7373, 0.2758", "749.248, 495.624, 24.6779, 0.2766", "748.146, 495.908, 24.5504, 0.2782", "747.057, 496.207, 24.3481, 0.2814", "745.974, 496.509, 24.0971, 0.287", "744.889, 496.812, 23.828, 0.2988", "743.777, 497.011, 23.6166, 0.3142", "742.645, 497.137, 23.5141, 0.3734", "741.52, 497.329, 23.4932, 0.3338", "740.396, 497.538, 23.5176, 0.3", "739.26, 497.657, 23.5651, 0.2746", "738.117, 497.689, 23.6222, 0.2746", "736.973, 497.693, 23.68, 0.2746", "735.829, 497.693, 23.7403, 0.2746", "734.685, 497.693, 23.812, 0.2748", "733.541, 497.693, 23.9, 0.275", "732.412, 497.72, 24.0518, 0.2754", "731.311, 497.884, 24.2893, 0.2762", "730.196, 498.007, 24.5598, 0.2774", "729.064, 497.904, 24.7918, 0.2798", "727.942, 497.688, 24.9712, 0.2844", "726.837, 497.404, 25.1303, 0.2926", "725.728, 497.15, 25.2912, 0.3092", "724.602, 497.115, 25.4549, 0.3334", "723.462, 497.169, 25.6025, 0.4088", "722.377, 496.932, 25.754, 0.4016", "721.374, 496.401, 25.898, 0.4158", "720.553, 495.641, 25.9633, 0.5364", "719.634, 495.074, 25.9375, 0.5322", "718.528, 494.829, 25.8824, 0.4846", "717.44, 494.508, 25.8477, 0.3616", "716.354, 494.155, 25.8496, 0.3038", "715.357, 493.864, 26.0294, 0.2816", "714.403, 493.504, 26.4018, 0.2874", "713.364, 493.119, 26.7842, 0.2994", "712.278, 493.089, 27.0109, 0.3158", "711.209, 493.372, 27.186, 0.3764", "710.098, 493.578, 27.3173, 0.3396", "708.996, 493.378, 27.3436, 0.3104", "707.977, 492.873, 27.3044, 0.2938", "706.993, 492.288, 27.2425, 0.3112", "706.013, 491.698, 27.1677, 0.3384", "705.048, 491.086, 27.0511, 0.4132", "704.129, 490.428, 26.8655, 0.4328", "703.248, 489.741, 26.6108, 0.36", "702.385, 489.029, 26.319, 0.3012", "701.551, 488.264, 26.0519, 0.2766", "700.764, 487.438, 25.8658, 0.2782", "700.004, 486.583, 25.7797, 0.2816", "699.213, 485.762, 25.7999, 0.2872", "698.357, 485.045, 25.9606, 0.2992", "697.579, 484.252, 26.2316, 0.3148", "697.056, 483.274, 26.4415, 0.3748", "696.336, 482.456, 26.5403, 0.3364", "695.261, 482.215, 26.6927, 0.3048", "694.241, 482.498, 27.0093, 0.2834", "693.217, 482.779, 27.4621, 0.2906", "692.173, 482.516, 27.989, 0.3056", "691.414, 481.689, 28.4144, 0.3264", "690.78, 480.738, 28.7812, 0.3976", "690.026, 479.95, 29.213, 0.3734", "689.32, 479.086, 29.6489, 0.3988", "688.693, 478.134, 30.0384, 0.3338", "687.718, 477.689, 30.5012, 0.3", "686.638, 477.504, 30.9943, 0.2746", "685.497, 477.478, 31.3911, 0.2746", "684.354, 477.478, 31.673, 0.2746", "683.211, 477.478, 31.8536, 0.2746", "682.067, 477.478, 31.9533, 0.2746", "680.922, 477.478, 31.9838, 0.2746", "679.779, 477.482, 31.9746, 0.2748", "678.635, 477.518, 31.9488, 0.2748", "677.492, 477.563, 31.9124, 0.275", "676.427, 477.154, 31.8416, 0.2754", "675.467, 476.541, 31.7338, 0.2762", "674.474, 475.974, 31.638, 0.2776", "673.353, 475.744, 31.5518, 0.2806", "672.209, 475.733, 31.4695, 0.2854", "671.127, 476.103, 31.3858, 0.2954", "670.088, 476.581, 31.2906, 0.3078", "668.988, 476.812, 31.1228, 0.3616", "667.885, 477.041, 30.9075, 0.3136", "666.854, 477.534, 30.7362, 0.2542", "666.163, 478.446, 30.4954, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "765.267, 494.129, 23.8982, 0.5368", "764.425, 494.337, 23.823, 0.4614", "763.399, 494.804, 23.6975, 0.472", "762.616, 495.607, 23.552, 0.448", "762.084, 496.613, 23.4406, 0.3876", "761.869, 497.729, 23.367, 0.353", "761.807, 498.864, 23.3951, 0.3696", "760.953, 499.477, 23.5818, 0.4656", "760.09, 500.222, 23.8005, 0.5572", "759.177, 500.912, 23.9959, 0.4606", "758.296, 501.641, 24.1627, 0.4288", "757.523, 502.427, 24.3899, 0.3426", "756.872, 503.362, 24.5714, 0.3158", "756.067, 504.173, 24.6552, 0.3038", "755.128, 504.767, 24.6001, 0.3294", "754.208, 505.443, 24.5152, 0.3732", "753.585, 506.402, 24.4358, 0.4724", "753.057, 507.402, 24.4339, 0.5692", "752.457, 508.363, 24.4953, 0.484" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_32",
    "id" : "apic_32",
    "points3d" : [ "783.473, 488.977, 17.7202, 0.275", "783.823, 488.336, 17.0598, 0.2752", "783.56, 487.377, 16.4309, 0.2758", "782.512, 487.053, 15.8612, 0.2768", "781.426, 486.764, 15.3654, 0.279", "780.346, 486.422, 14.9817, 0.2824", "779.214, 486.27, 14.7166, 0.289", "778.072, 486.263, 14.547, 0.3024", "776.94, 486.413, 14.4491, 0.321", "775.796, 486.432, 14.3829, 0.3862", "774.95, 485.694, 14.2918, 0.3574", "774.073, 485.016, 14.1082, 0.3442", "773.38, 484.108, 13.9443, 0.3526", "772.815, 483.116, 13.8374, 0.439", "772.023, 482.292, 13.7275, 0.4832", "771.186, 481.512, 13.6309, 0.4424", "770.37, 480.711, 13.5447, 0.505", "769.585, 479.878, 13.4593, 0.407", "768.91, 478.956, 13.3466, 0.3502", "768.298, 477.992, 13.1986, 0.3232", "767.752, 477.102, 12.888, 0.3544", "767.284, 476.073, 12.5639, 0.4736", "766.596, 475.175, 12.3608, 0.3954", "765.733, 474.572, 12.3462, 0.3298", "764.972, 473.812, 12.1668, 0.2824" ],
    "parent" : "apic_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "783.473, 488.977, 17.7202, 0.275", "783.625, 489.042, 16.7468, 0.2288", "784.601, 489.411, 15.5584, 0.3162", "785.652, 489.732, 15.0586, 0.3772", "786.436, 490.346, 14.5304, 0.3414", "785.548, 490.81, 13.9801, 0.314", "784.444, 491.079, 13.4553, 0.3004", "783.38, 491.33, 12.8901, 0.3232", "782.481, 491.982, 12.3525, 0.3606", "782.086, 493.042, 11.8944, 0.4554", "781.9, 494.084, 11.3465, 0.5058", "781.179, 494.884, 10.7433, 0.5222", "780.654, 495.899, 10.2271, 0.4688", "780.58, 497.039, 9.8104, 0.548", "780.615, 498.17, 9.4116, 0.517", "780.4, 499.057, 8.853, 0.4068", "779.708, 499.965, 7.9061, 0.4576" ],
    "parent" : "apic_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "802.466, 485.016, 28.9503, 0.334", "803.294, 483.971, 28.9845, 0.2748", "803.997, 483.09, 29.1651, 0.2752", "804.757, 482.262, 29.4526, 0.2758", "805.661, 481.618, 29.8183, 0.2764", "806.67, 481.141, 30.1994, 0.278", "807.703, 480.712, 30.5421, 0.281", "808.777, 480.363, 30.7924, 0.2864", "809.883, 480.234, 30.8605, 0.2966", "810.995, 480.213, 30.7502, 0.3152", "812.12, 480.167, 30.5441, 0.3516", "813.234, 479.966, 30.312, 0.409", "814.228, 479.44, 30.1126, 0.5642", "815.055, 478.659, 29.9785, 0.6158", "815.722, 477.734, 29.9149, 0.4846", "816.37, 476.792, 29.9093, 0.426", "817.056, 475.876, 29.944, 0.337", "817.747, 474.965, 30.0098, 0.306", "818.436, 474.051, 30.1036, 0.2856", "819.152, 473.159, 30.2336, 0.295", "819.954, 472.36, 30.4282, 0.3134", "820.845, 471.684, 30.7098, 0.3412", "821.758, 471.045, 31.0604, 0.4244", "822.632, 470.34, 31.4334, 0.4242", "823.409, 469.513, 31.771, 0.4884", "824.119, 468.618, 32.0466, 0.5212", "824.827, 467.719, 32.2633, 0.5448", "825.605, 466.882, 32.4383, 0.54", "826.501, 466.179, 32.5934, 0.5382", "827.447, 465.538, 32.7513, 0.4992", "828.336, 464.826, 32.9398, 0.601", "829.085, 463.985, 33.1845, 0.6304", "829.765, 463.087, 33.481, 0.543", "830.43, 462.174, 33.8022, 0.3848", "831.081, 461.239, 34.1088, 0.3002", "831.714, 460.287, 34.3736, 0.2748", "832.346, 459.333, 34.6002, 0.275", "832.999, 458.396, 34.8135, 0.2754", "833.714, 457.517, 35.0596, 0.276", "834.486, 456.708, 35.3744, 0.2774", "835.277, 455.923, 35.751, 0.2794", "836.102, 455.154, 36.1469, 0.2838", "836.98, 454.428, 36.5042, 0.2912", "837.907, 453.757, 36.8026, 0.3064", "838.83, 453.097, 37.0804, 0.3284", "839.62, 452.363, 37.4111, 0.4", "840.408, 451.605, 37.7611, 0.3836", "841.316, 450.933, 38.0156, 0.3892", "842.259, 450.284, 38.1458, 0.4548", "843.152, 449.577, 38.1492, 0.5358", "843.937, 448.766, 38.0156, 0.4268", "844.635, 447.891, 37.7625, 0.3402", "845.342, 447.018, 37.4497, 0.3014", "846.146, 446.22, 37.158, 0.3264", "847.038, 445.507, 36.9376, 0.3606", "847.952, 444.818, 36.7931, 0.485", "848.859, 444.121, 36.713, 0.418", "849.729, 443.379, 36.6814, 0.366", "850.562, 442.595, 36.6803, 0.3756", "851.384, 441.799, 36.6943, 0.3378", "852.215, 441.013, 36.7161, 0.3072", "853.081, 440.266, 36.7486, 0.2878", "853.978, 439.557, 36.7945, 0.3002", "854.883, 438.857, 36.855, 0.3168", "855.777, 438.144, 36.9281, 0.3784", "856.632, 437.384, 37.0082, 0.3434", "857.446, 436.582, 37.0936, 0.3172", "858.236, 435.754, 37.2042, 0.3078", "858.966, 434.888, 37.3822, 0.3306", "859.641, 433.998, 37.6457, 0.4052", "860.314, 433.107, 37.9666, 0.3876", "861.033, 432.234, 38.2883, 0.4246", "861.802, 431.391, 38.5568, 0.3836", "862.594, 430.566, 38.7509, 0.382", "863.392, 429.746, 38.8746, 0.4778", "864.198, 428.934, 38.9458, 0.4034", "865.014, 428.133, 38.9861, 0.3446", "865.834, 427.336, 39.0172, 0.3096", "866.657, 426.54, 39.0547, 0.3416", "867.485, 425.751, 39.1056, 0.3886", "868.344, 424.995, 39.1714, 0.536", "869.274, 424.335, 39.2633, 0.5152", "870.221, 423.72, 39.4181, 0.5328", "871.046, 422.983, 39.653, 0.7506", "871.657, 422.035, 39.8518, 0.7128", "872.087, 421.005, 39.9342, 0.5008", "872.532, 419.959, 39.9728, 0.3366", "873.096, 418.979, 40.07, 0.2952", "873.72, 418.054, 40.2514, 0.3126", "874.403, 417.164, 40.4874, 0.347", "875.213, 416.368, 40.7294, 0.399", "876.105, 415.654, 40.9352, 0.552", "877.019, 414.965, 41.0822, 0.5626", "877.915, 414.255, 41.1678, 0.5356", "878.763, 413.486, 41.2073, 0.4826", "879.57, 412.676, 41.221, 0.3992", "880.366, 411.856, 41.2252, 0.3994", "881.149, 411.021, 41.2286, 0.335", "881.896, 410.155, 41.2331, 0.302", "882.617, 409.267, 41.2395, 0.2782", "883.333, 408.374, 41.2482, 0.2814", "884.072, 407.502, 41.2605, 0.2872", "884.87, 406.683, 41.2776, 0.299", "885.705, 405.901, 41.3017, 0.3146", "886.551, 405.13, 41.335, 0.3744", "887.389, 404.353, 41.3826, 0.3356", "888.213, 403.559, 41.4487, 0.303", "889.025, 402.752, 41.5383, 0.2802", "889.808, 401.919, 41.6626, 0.285", "890.49, 401.01, 41.8499, 0.294", "891.046, 400.035, 42.1196, 0.3112", "891.55, 399.039, 42.4584, 0.3384", "892.076, 398.044, 42.8232, 0.4134", "892.66, 397.066, 43.1567, 0.4334", "893.278, 396.104, 43.4291, 0.3606", "893.906, 395.148, 43.6414, 0.3028", "894.565, 394.214, 43.8211, 0.2792", "895.287, 393.34, 44.0135, 0.2834", "896.053, 392.518, 44.2439, 0.2906", "896.832, 391.709, 44.5021, 0.3056", "897.621, 390.888, 44.73, 0.3264", "898.411, 390.067, 44.861, 0.3976", "899.194, 389.254, 44.8893, 0.3734", "899.968, 388.418, 44.8736, 0.3988", "900.708, 387.551, 44.9002, 0.3338", "901.418, 386.673, 45.0108, 0.3", "902.147, 385.813, 45.1973, 0.2746", "902.98, 385.039, 45.416, 0.2746", "903.911, 384.378, 45.6179, 0.2746", "904.873, 383.759, 45.7808, 0.2746", "905.819, 383.115, 45.9077, 0.2746", "906.726, 382.42, 46.0158, 0.2746", "907.613, 381.698, 46.1236, 0.2746", "908.494, 380.969, 46.247, 0.2746", "909.376, 380.242, 46.3954, 0.2746", "910.257, 379.513, 46.573, 0.2746", "911.133, 378.778, 46.7844, 0.2746", "911.961, 378.0, 47.0557, 0.2746", "912.718, 377.176, 47.411, 0.2746", "913.445, 376.334, 47.8386, 0.2746", "914.17, 375.492, 48.3084, 0.2746", "914.897, 374.65, 48.788, 0.2746", "915.622, 373.808, 49.2478, 0.2746", "916.355, 372.967, 49.6544, 0.2746", "917.151, 372.152, 49.9405, 0.2746", "918.002, 371.397, 50.0483, 0.2746", "918.867, 370.669, 49.994, 0.2746", "919.734, 369.942, 49.826, 0.2746", "920.599, 369.215, 49.5933, 0.2746", "921.466, 368.488, 49.3427, 0.2746", "922.331, 367.76, 49.1151, 0.2746", "923.158, 366.974, 48.972, 0.2746", "923.897, 366.109, 48.9712, 0.2746", "924.588, 365.214, 49.1109, 0.2746", "925.269, 364.316, 49.3573, 0.2746", "925.951, 363.418, 49.6709, 0.2746", "926.632, 362.519, 50.015, 0.2746", "927.314, 361.617, 50.3507, 0.2746", "928.0, 360.708, 50.6321, 0.2746", "928.688, 359.794, 50.8326, 0.2746", "929.373, 358.877, 50.96, 0.2746", "930.059, 357.962, 51.032, 0.2746", "930.746, 357.047, 51.0658, 0.2746", "931.432, 356.132, 51.0779, 0.2746", "932.117, 355.217, 51.081, 0.2746", "932.796, 354.296, 51.0829, 0.2746", "933.443, 353.352, 51.0854, 0.2746", "934.054, 352.385, 51.0888, 0.2746", "934.655, 351.412, 51.0936, 0.2746", "935.254, 350.437, 51.1, 0.2746", "935.854, 349.462, 51.1095, 0.2746", "936.452, 348.488, 51.1227, 0.2746", "937.052, 347.513, 51.1406, 0.2746", "937.653, 346.54, 51.1652, 0.2746", "938.291, 345.59, 51.2016, 0.2746", "938.974, 344.673, 51.254, 0.2746", "939.67, 343.766, 51.3237, 0.2748", "940.368, 342.86, 51.4108, 0.275", "941.067, 341.955, 51.5172, 0.2752", "941.765, 341.049, 51.6457, 0.2758", "942.463, 340.143, 51.7989, 0.277", "943.165, 339.241, 51.9848, 0.279", "943.888, 338.363, 52.232, 0.283", "944.629, 337.518, 52.5619, 0.2902", "945.376, 336.683, 52.9626, 0.3032", "946.122, 335.85, 53.4092, 0.3298", "946.869, 335.016, 53.8768, 0.3664", "947.616, 334.183, 54.341, 0.4964", "948.366, 333.349, 54.7795, 0.4328", "949.136, 332.516, 55.1496, 0.4242", "949.926, 331.69, 55.4193, 0.3338", "950.721, 330.868, 55.5979, 0.3", "951.516, 330.046, 55.7091, 0.2746", "952.312, 329.224, 55.7763, 0.2746", "953.108, 328.402, 55.8219, 0.2746", "953.904, 327.58, 55.8656, 0.2746", "954.695, 326.754, 55.9219, 0.2746", "955.462, 325.905, 56.0056, 0.2746", "956.194, 325.03, 56.1271, 0.2746", "956.917, 324.147, 56.2839, 0.2746", "957.64, 323.265, 56.4698, 0.2746", "958.362, 322.38, 56.6787, 0.2746", "959.084, 321.497, 56.9061, 0.2746", "959.806, 320.614, 57.1474, 0.2746", "960.54, 319.742, 57.4067, 0.2746", "961.302, 318.9, 57.6951, 0.2746", "962.082, 318.08, 58.0157, 0.2746", "962.867, 317.267, 58.3596, 0.2746", "963.653, 316.453, 58.7146, 0.2746", "964.437, 315.639, 59.068, 0.2746", "965.222, 314.825, 59.4084, 0.2746", "966.008, 314.01, 59.7206, 0.2746", "966.8, 313.189, 59.9768, 0.2746", "967.596, 312.368, 60.1597, 0.2746", "968.391, 311.546, 60.2778, 0.2746", "969.188, 310.724, 60.3484, 0.2746", "969.984, 309.903, 60.3879, 0.2746", "970.779, 309.08, 60.412, 0.2746", "971.575, 308.259, 60.4332, 0.2746", "972.36, 307.426, 60.461, 0.2746", "973.106, 306.559, 60.5016, 0.2746", "973.816, 305.663, 60.5584, 0.2746", "974.515, 304.758, 60.6326, 0.2746", "975.214, 303.852, 60.7247, 0.2746", "975.912, 302.946, 60.8364, 0.2746", "976.61, 302.04, 60.9711, 0.2746", "977.308, 301.134, 61.1313, 0.2746", "978.044, 300.261, 61.3312, 0.2746", "978.876, 299.491, 61.6006, 0.2746", "979.77, 298.812, 61.9492, 0.2746", "980.678, 298.156, 62.361, 0.2746", "981.586, 297.502, 62.8107, 0.2746", "982.496, 296.849, 63.2738, 0.2746", "983.405, 296.195, 63.7274, 0.2746", "984.302, 295.518, 64.1455, 0.2746", "985.136, 294.746, 64.486, 0.2746", "985.9, 293.895, 64.7259, 0.2746", "986.643, 293.025, 64.8777, 0.2746", "987.385, 292.155, 64.9639, 0.2746", "988.128, 291.284, 65.0059, 0.2746", "988.869, 290.414, 65.0236, 0.2748", "989.612, 289.543, 65.0331, 0.2748", "990.347, 288.667, 65.0437, 0.2752", "991.061, 287.773, 65.0586, 0.2758", "991.752, 286.861, 65.079, 0.2766", "992.438, 285.945, 65.1076, 0.2782", "993.125, 285.03, 65.1479, 0.2812", "993.811, 284.115, 65.2047, 0.287", "994.496, 283.199, 65.284, 0.2976", "995.183, 282.284, 65.3912, 0.318", "995.89, 281.385, 65.5402, 0.3508", "996.676, 280.564, 65.7661, 0.4372", "997.52, 279.823, 66.0876, 0.4722", "998.379, 279.106, 66.4877, 0.4582", "999.238, 278.389, 66.9404, 0.3594", "1000.1, 277.672, 67.419, 0.3", "1000.96, 276.956, 67.8992, 0.2746", "1001.82, 276.234, 68.3564, 0.2746", "1002.65, 275.47, 68.7546, 0.2748", "1003.47, 274.671, 69.0724, 0.275", "1004.27, 273.862, 69.3182, 0.2752", "1005.09, 273.065, 69.5005, 0.2758", "1005.92, 272.28, 69.6282, 0.277", "1006.76, 271.501, 69.72, 0.279", "1007.68, 270.813, 69.7981, 0.283", "1008.73, 270.373, 69.8788, 0.2898", "1009.84, 270.11, 69.9726, 0.3032", "1010.66, 269.332, 70.1072, 0.3284", "1010.6, 268.202, 70.3002, 0.3702", "1010.77, 267.082, 70.5614, 0.4728", "1011.37, 266.133, 70.8868, 0.5402", "1012.16, 265.304, 71.2121, 0.5742", "1012.95, 264.507, 71.5638, 0.6216", "1013.68, 263.774, 72.0222, 0.5586", "1014.52, 263.015, 72.427, 0.4864", "1015.43, 262.326, 72.6956, 0.3644", "1016.36, 261.663, 72.8392, 0.3094", "1017.29, 261.0, 72.8913, 0.2922", "1018.1, 260.194, 72.9221, 0.3066", "1018.86, 259.338, 72.9649, 0.3362", "1019.61, 258.48, 73.0447, 0.3792", "1020.36, 257.62, 73.1637, 0.5144", "1021.26, 256.914, 73.2864, 0.4968", "1022.17, 256.226, 73.4068, 0.3936", "1023.09, 255.54, 73.521, 0.3164", "1024.0, 254.854, 73.6308, 0.3048", "1024.88, 254.157, 73.8195, 0.3314", "1025.75, 253.461, 74.0684, 0.3764", "1026.62, 252.766, 74.3512, 0.4794", "1027.55, 252.107, 74.5679, 0.5764", "1028.51, 251.537, 74.6194, 0.527", "1029.47, 250.972, 74.5458, 0.4026", "1030.43, 250.407, 74.3868, 0.333", "1031.3, 249.681, 74.3333, 0.3378", "1032.14, 248.933, 74.4131, 0.3804", "1032.97, 248.186, 74.6091, 0.5232", "1033.74, 247.358, 74.8698, 0.4832", "1034.32, 246.374, 75.1033, 0.513", "1034.9, 245.388, 75.2914, 0.521", "1035.48, 244.403, 75.4194, 0.538", "1036.03, 243.399, 75.4978, 0.5582", "1036.48, 242.348, 75.5376, 0.4208", "1036.94, 241.298, 75.5574, 0.3294", "1037.39, 240.248, 75.5703, 0.2822", "1037.84, 239.198, 75.579, 0.2882" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "802.466, 485.016, 28.9503, 0.334", "803.049, 484.047, 28.4861, 0.2288", "803.698, 483.115, 28.8772, 0.3366", "804.347, 482.19, 29.0576, 0.416", "804.906, 481.203, 29.2541, 0.4086", "805.305, 480.137, 29.4305, 0.4588", "805.505, 479.017, 29.5719, 0.4714", "805.442, 477.879, 29.6638, 0.4268", "805.274, 476.757, 29.6187, 0.4454", "805.258, 475.668, 29.3961, 0.4458", "805.123, 474.551, 29.097, 0.3834", "804.366, 473.702, 28.8159, 0.3442", "803.366, 473.184, 28.628, 0.3584", "802.419, 472.549, 28.469, 0.421", "801.541, 471.893, 28.1781, 0.5878", "800.595, 471.351, 27.7788, 0.6528", "799.579, 470.844, 27.3623, 0.5854", "798.577, 470.348, 26.9013, 0.4592", "797.629, 469.858, 26.3627, 0.4582", "796.724, 469.295, 25.7993, 0.4704", "795.858, 468.552, 25.4193, 0.4252", "794.856, 468.105, 25.2622, 0.4422", "793.764, 467.801, 25.1959, 0.4398", "792.89, 467.123, 25.0291, 0.3722", "792.215, 466.211, 24.8307, 0.3248", "791.499, 465.399, 24.5106, 0.3156", "790.423, 465.267, 24.091, 0.3762", "789.303, 465.268, 23.8279, 0.339" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "786.791, 511.056, 28.8481, 0.4646", "786.659, 511.818, 27.0071, 1.144", "786.725, 512.84, 26.1695, 0.7482", "786.914, 513.95, 25.8168, 0.5038", "787.364, 514.979, 25.499, 0.4172", "787.682, 516.057, 25.2017, 0.5374", "787.97, 517.16, 24.9059, 0.5416", "787.878, 518.25, 24.5732, 0.4662", "787.201, 519.117, 24.2106, 0.5022", "786.197, 519.619, 23.8647, 0.4014", "785.324, 520.324, 23.4695, 0.3406", "785.283, 521.377, 22.9288, 0.3028", "785.724, 522.348, 22.2742, 0.3262", "786.103, 523.284, 21.503, 0.3724", "785.838, 524.276, 20.682, 0.446", "784.87, 524.8, 19.9205, 0.6424", "783.868, 525.316, 19.2808, 0.7138", "783.031, 526.095, 18.8119, 0.8948", "782.075, 526.724, 18.4887, 0.766", "781.103, 527.327, 18.2652, 0.7216", "780.272, 528.112, 18.0912, 0.6108", "779.452, 528.909, 17.9183, 0.5432", "778.633, 529.682, 17.6582, 0.6662", "777.983, 530.596, 17.3075, 0.602", "777.742, 531.704, 16.9124, 0.5294", "777.91, 532.833, 16.5637, 0.397", "777.967, 533.936, 16.1177, 0.3706", "777.518, 534.882, 15.5488, 0.4022", "776.895, 535.743, 14.9129, 0.528", "775.996, 536.442, 14.3478, 0.6632", "775.061, 537.101, 13.8894, 0.7032" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "786.791, 511.056, 28.8481, 0.4646", "786.409, 511.803, 28.819, 0.4198", "785.802, 512.772, 28.8576, 0.4072", "785.518, 513.877, 28.9556, 0.497", "785.473, 514.966, 29.169, 0.5726", "785.477, 516.071, 29.433, 0.6962", "785.512, 517.199, 29.5456, 0.5486", "785.998, 518.215, 29.5305, 0.5022", "786.402, 519.284, 29.4806, 0.4566", "786.779, 520.364, 29.4095, 0.4048" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "779.236, 501.312, 34.1505, 0.6362", "780.034, 501.765, 35.2122, 0.2288", "780.477, 502.491, 37.5967, 0.2746", "780.705, 503.358, 38.61, 0.2746", "781.013, 504.09, 39.8163, 0.2746", "781.606, 504.66, 41.1116, 0.2746", "781.934, 505.651, 42.2811, 0.2746", "782.28, 506.721, 43.2323, 0.2746", "782.652, 507.8, 43.8763, 0.2746", "783.452, 508.609, 44.2946, 0.2746", "784.316, 509.252, 44.721, 0.2746", "785.323, 509.711, 45.1354, 0.2746", "785.833, 510.732, 45.4919, 0.2746", "786.15, 511.803, 45.8707, 0.2746", "786.958, 512.601, 46.2445, 0.2746", "787.753, 513.332, 46.5811, 0.2746", "788.668, 513.385, 47.0604, 0.2746", "789.753, 513.584, 47.3721, 0.2746", "790.583, 514.165, 47.5513, 0.2746", "791.183, 515.038, 47.8593, 0.2746", "792.026, 515.734, 48.1846, 0.2746", "793.084, 516.135, 48.4952, 0.2746", "794.055, 516.722, 48.7962, 0.2746", "795.059, 517.253, 49.0784, 0.2746", "796.073, 517.719, 49.4396, 0.2746", "797.004, 518.218, 49.938, 0.2746", "797.647, 519.034, 50.5358, 0.2746", "798.101, 520.026, 51.1899, 0.2744", "798.739, 520.919, 51.8636, 0.2744", "799.48, 521.747, 52.4689, 0.2742", "800.203, 522.378, 53.0608, 0.2742", "800.842, 522.937, 53.7589, 0.2736", "801.418, 523.729, 54.2091, 0.2728", "801.928, 524.675, 54.3589, 0.2712", "802.162, 525.746, 54.5126, 0.2684", "802.372, 526.845, 54.6552, 0.2626", "802.741, 527.919, 54.7417, 0.2542", "803.022, 529.024, 54.7173, 0.2288", "803.088, 530.015, 54.04, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "779.236, 501.312, 34.1505, 0.6362", "778.362, 501.541, 34.4198, 0.6818", "777.475, 501.143, 34.8642, 0.4788" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "752.799, 516.289, 20.0632, 0.3618", "752.575, 516.232, 20.015, 0.3464", "751.733, 515.902, 20.2644, 0.386", "750.695, 515.604, 20.6072, 0.3584", "749.66, 515.464, 20.7409, 0.3398", "748.552, 515.409, 20.7318, 0.3738", "747.415, 515.327, 20.6661, 0.3348", "746.271, 515.335, 20.5577, 0.3016", "745.136, 515.466, 20.437, 0.2774", "744.05, 515.791, 20.3724, 0.28", "743.002, 516.215, 20.3782, 0.2846", "741.885, 516.419, 20.327, 0.2928", "740.772, 516.446, 20.1452, 0.3096", "739.661, 516.447, 19.8566, 0.334", "738.549, 516.489, 19.5041, 0.4112", "737.446, 516.631, 19.1276, 0.3998", "736.328, 516.779, 18.7975, 0.4422", "735.186, 516.797, 18.6048, 0.4398", "734.051, 516.719, 18.5783, 0.372", "732.931, 516.579, 18.7043, 0.3248", "731.828, 516.348, 18.9398, 0.3152", "730.759, 515.986, 19.2294, 0.3754", "729.665, 515.68, 19.5196, 0.3378", "728.53, 515.609, 19.7659, 0.3068", "727.388, 515.661, 19.9515, 0.287", "726.249, 515.764, 20.0704, 0.2988", "725.114, 515.901, 20.1298, 0.3142", "724.007, 516.145, 20.126, 0.3734", "722.948, 516.549, 20.0903, 0.3338", "721.959, 517.11, 20.1321, 0.3", "721.119, 517.842, 20.3007, 0.2746", "720.369, 518.643, 20.5883, 0.2746", "719.617, 519.481, 20.9124, 0.2746", "718.782, 520.26, 21.1781, 0.2748", "717.719, 520.669, 21.3779, 0.2748", "716.583, 520.793, 21.5139, 0.2752", "715.505, 521.171, 21.5978, 0.2758", "714.635, 521.904, 21.6775, 0.2766", "713.984, 522.832, 21.7835, 0.2784", "713.406, 523.807, 21.9026, 0.2816", "712.869, 524.815, 21.9771, 0.2874", "712.619, 525.93, 21.9797, 0.2994", "712.837, 527.05, 21.9041, 0.3158", "712.992, 528.164, 21.6872, 0.3764", "712.646, 529.155, 21.2786, 0.3396", "711.914, 530.005, 20.8237, 0.3104", "711.162, 530.867, 20.422, 0.2938", "710.38, 531.698, 20.0504, 0.3112", "709.545, 532.443, 19.6567, 0.3382", "708.815, 533.315, 19.2963, 0.413", "708.058, 534.163, 19.0469, 0.4328", "707.089, 534.696, 18.7143, 0.3592", "706.111, 535.185, 18.3043, 0.3", "705.076, 535.616, 17.8965, 0.2746", "704.034, 536.037, 17.5138, 0.2744", "702.953, 536.372, 17.178, 0.2744", "701.878, 536.756, 16.9212, 0.2742", "700.88, 537.291, 16.8424, 0.2742", "699.855, 537.785, 16.8802, 0.2736", "698.781, 538.183, 16.9587, 0.2728", "697.729, 538.632, 17.0646, 0.2712", "696.834, 539.343, 17.1792, 0.2684", "695.953, 540.073, 17.3037, 0.2626", "695.165, 540.86, 17.5023, 0.2542", "694.387, 541.684, 17.7163, 0.2288", "693.633, 542.544, 18.0715, 0.2288" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "752.799, 516.289, 20.0632, 0.3618", "751.853, 516.521, 18.2669, 0.2288", "750.76, 516.756, 16.9924, 0.4148", "749.672, 516.936, 16.4673, 0.436", "748.66, 517.126, 15.7648, 0.3654", "747.675, 517.345, 14.9337, 0.3114", "746.582, 517.246, 14.1029, 0.2956", "745.507, 516.974, 13.303, 0.3134", "744.414, 516.879, 12.5325, 0.347", "743.346, 517.005, 11.7893, 0.4068", "742.393, 517.486, 11.0689, 0.5304", "741.479, 518.136, 10.4235, 0.6974", "740.478, 518.662, 9.8462, 0.6222", "739.419, 518.992, 9.3135, 0.52", "738.362, 518.826, 8.7974, 0.3794", "737.377, 518.338, 8.2865, 0.338", "736.361, 518.399, 7.8399, 0.341", "735.613, 519.226, 7.4232, 0.4178", "734.923, 520.074, 6.9734, 0.4416", "733.924, 520.519, 6.5092, 0.376", "732.815, 520.752, 6.058, 0.3304", "732.186, 521.101, 5.4379, 0.333", "732.56, 521.825, 4.7207, 0.3722", "732.509, 522.87, 4.166, 0.5078", "731.976, 523.849, 3.6634, 0.454", "731.518, 524.873, 3.1841, 0.463", "730.625, 525.528, 2.8383, 0.409", "729.616, 526.051, 2.5311, 0.4238", "728.872, 526.732, 2.0879, 0.5806", "728.039, 527.429, 1.5947, 0.4702", "727.154, 528.109, 1.1293, 0.3846", "726.328, 528.849, 0.8756, 0.3318", "725.285, 529.302, 0.7277, 0.4068", "724.354, 529.967, 0.6374, 0.3926", "723.436, 530.532, 0.4561, 0.4238", "722.474, 529.936, 0.297, 0.4322", "721.512, 529.317, 0.0, 0.2288" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "822.745, 542.035, 23.0576, 0.3632", "822.924, 542.416, 24.4222, 0.2288", "823.386, 543.433, 24.0662, 0.3368", "823.778, 544.504, 23.9262, 0.4164", "824.047, 545.614, 23.808, 0.409", "824.243, 546.74, 23.7054, 0.4598", "824.419, 547.871, 23.6078, 0.4734", "824.603, 548.995, 23.498, 0.4304", "824.793, 550.112, 23.3619, 0.4522", "824.874, 551.237, 23.2094, 0.459", "824.751, 552.367, 23.0858, 0.4026", "824.411, 553.452, 23.0215, 0.4058", "823.913, 554.471, 23.0556, 0.347", "823.403, 555.478, 23.195, 0.3252", "823.049, 556.546, 23.3498, 0.316", "823.015, 557.662, 23.4667, 0.377", "823.14, 558.794, 23.6047, 0.341", "823.173, 559.901, 23.8583, 0.3124", "822.959, 560.918, 24.2733, 0.2988", "822.531, 561.898, 24.7844, 0.3142", "822.066, 562.922, 25.2864, 0.3734", "821.741, 564.011, 25.7218, 0.334", "821.661, 565.144, 26.077, 0.3", "821.728, 566.28, 26.3712, 0.2746", "821.806, 567.409, 26.6367, 0.2748", "821.947, 568.537, 26.8733, 0.275", "822.439, 569.538, 27.0718, 0.2754", "823.233, 570.353, 27.2362, 0.276", "824.045, 571.15, 27.4029, 0.2774", "824.783, 571.998, 27.6072, 0.2792", "825.385, 572.953, 27.8112, 0.2834", "825.949, 573.947, 27.9761, 0.2906", "826.631, 574.86, 28.0913, 0.3056", "827.598, 575.347, 28.1039, 0.3264", "828.584, 575.863, 28.1436, 0.3976", "829.186, 576.753, 28.278, 0.3736", "829.288, 577.869, 28.3746, 0.3992", "828.986, 578.948, 28.3788, 0.3346", "828.613, 580.011, 28.3237, 0.3012", "828.096, 580.999, 28.2092, 0.2766", "827.291, 581.799, 28.1392, 0.2782", "827.721, 582.376, 28.3702, 0.2814", "827.916, 583.478, 28.6499, 0.287", "827.973, 584.606, 28.8394, 0.2988", "828.148, 585.721, 28.9509, 0.3142", "828.239, 586.856, 29.036, 0.3738", "828.24, 587.994, 29.1645, 0.3346", "828.24, 589.12, 29.3622, 0.3012", "828.246, 590.256, 29.6293, 0.2766", "828.298, 591.388, 29.9636, 0.2782", "828.516, 592.483, 30.3772, 0.2814", "828.929, 593.512, 30.8482, 0.287", "829.447, 594.524, 31.2931, 0.2988", "829.99, 595.529, 31.6798, 0.3142", "830.392, 596.58, 32.0863, 0.3734", "830.41, 597.666, 32.5727, 0.3338", "829.845, 598.498, 33.1111, 0.3", "828.771, 598.544, 33.6907, 0.2746", "827.808, 598.565, 34.3344, 0.2746", "827.886, 599.315, 35.0241, 0.2746", "828.85, 599.845, 35.5673, 0.2746", "829.938, 600.197, 35.9666, 0.2746", "831.057, 600.422, 36.272, 0.2746", "832.178, 600.632, 36.4781, 0.2744", "833.285, 600.918, 36.6335, 0.2744", "834.41, 601.051, 36.8379, 0.2742", "835.549, 601.06, 37.107, 0.2742", "836.692, 601.071, 37.4102, 0.2736", "837.743, 601.253, 37.8652, 0.2728", "838.588, 600.877, 38.528, 0.2712", "839.143, 599.945, 39.2151, 0.2684", "839.864, 599.058, 39.7757, 0.2626", "840.493, 598.127, 40.2828, 0.2542", "841.336, 597.365, 40.6972, 0.2288", "842.442, 597.511, 41.44, 0.2288" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "822.745, 542.035, 23.0576, 0.3632", "822.994, 542.4, 23.2632, 0.467", "823.787, 543.083, 23.1755, 0.4926", "824.857, 543.406, 22.9767, 0.6664", "825.989, 543.569, 22.7491, 0.6026", "827.09, 543.869, 22.508, 0.5306", "828.067, 544.429, 22.2463, 0.3988", "828.892, 545.201, 22.0151, 0.3756", "829.677, 546.029, 21.8462, 0.4038", "830.478, 546.846, 21.7412, 0.567", "831.27, 547.656, 21.7324, 0.5602", "832.114, 548.418, 21.7824, 0.6774", "832.999, 549.072, 21.7264, 0.7204", "833.984, 549.644, 21.6563, 0.7312", "834.832, 550.193, 21.787, 0.6308", "835.752, 550.804, 21.7617, 0.569", "836.735, 551.369, 21.6741, 0.5388", "837.727, 551.938, 21.6033, 0.5302", "838.719, 552.508, 21.5567, 0.513", "839.228, 553.532, 21.5151, 0.4876" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "790.748, 513.7, 14.3341, 0.2776", "791.851, 513.465, 14.6493, 0.2288", "792.869, 512.977, 13.5869, 0.3306", "793.817, 512.574, 13.124, 0.405", "794.758, 512.517, 12.4203, 0.3874", "795.763, 512.671, 11.5943, 0.4244", "796.827, 512.898, 10.7481, 0.382", "797.932, 513.079, 9.9915, 0.3852", "799.047, 513.3, 9.3554, 0.4538", "799.406, 513.157, 8.6524, 0.5046", "798.642, 512.526, 7.9373, 0.5126", "797.633, 512.02, 7.3992, 0.4864", "796.587, 511.624, 7.0312, 0.4064", "795.594, 511.098, 6.6773, 0.4132", "794.856, 510.292, 6.3077, 0.36", "794.538, 509.345, 5.8875, 0.3502", "794.197, 509.318, 5.332, 0.3574", "793.44, 510.034, 4.8054, 0.4794", "792.587, 510.684, 4.5677, 0.4058", "791.706, 510.849, 4.7318, 0.3502", "790.645, 510.695, 5.0546, 0.3152", "789.534, 510.539, 5.369, 0.3756", "788.6, 510.31, 5.9412, 0.339", "787.483, 510.099, 6.4677, 0.305", "786.363, 509.884, 6.9131, 0.305", "785.61, 509.591, 8.414, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "790.748, 513.7, 14.3341, 0.2776", "790.284, 514.474, 13.4267, 0.2848", "789.572, 515.045, 12.458, 0.2934", "788.476, 515.089, 11.8101, 0.3108" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "752.457, 508.363, 24.4953, 0.484", "751.888, 509.657, 24.4819, 0.4386", "751.345, 510.655, 24.487, 0.3702", "750.661, 511.555, 24.518, 0.32", "749.881, 512.385, 24.5246, 0.313", "749.132, 513.249, 24.4651, 0.3404", "748.446, 514.157, 24.3204, 0.4228", "747.801, 515.039, 24.0367, 0.4222", "747.331, 515.944, 23.5715, 0.4788", "747.207, 517.009, 23.0645, 0.5334", "747.046, 518.107, 22.6509, 0.422", "746.326, 518.908, 22.3213, 0.3314", "745.259, 519.22, 22.0177, 0.2856", "744.157, 519.28, 21.6613, 0.295", "743.066, 519.382, 21.2572, 0.3132", "741.98, 519.635, 20.8312, 0.342", "740.894, 519.92, 20.4099, 0.4198", "739.779, 520.141, 20.0527, 0.4452", "738.733, 520.544, 19.7964, 0.3836", "737.885, 521.293, 19.6293, 0.3398", "737.141, 522.163, 19.5234, 0.374", "736.321, 522.953, 19.4498, 0.3348", "735.365, 523.565, 19.3748, 0.3016", "734.322, 524.013, 19.2657, 0.2776", "733.327, 524.54, 19.1449, 0.2802", "732.551, 525.345, 19.0835, 0.285", "732.099, 526.373, 19.0833, 0.2938", "731.606, 527.362, 19.0499, 0.3112", "731.013, 528.319, 18.9853, 0.337", "730.597, 529.377, 18.9586, 0.4172", "730.356, 530.49, 18.9841, 0.409", "730.165, 531.616, 19.0484, 0.4666", "729.864, 532.715, 19.1306, 0.4502", "729.374, 533.742, 19.2354, 0.5614", "728.774, 534.71, 19.3756, 0.5376", "728.282, 535.732, 19.5268, 0.4646", "728.008, 536.837, 19.667, 0.47", "727.745, 537.948, 19.7913, 0.4858", "727.258, 538.972, 19.9137, 0.4844", "726.531, 539.823, 20.1001, 0.4026", "725.73, 540.579, 20.3901, 0.4058", "725.071, 541.468, 20.7286, 0.3468", "724.687, 542.529, 21.0251, 0.3238", "724.28, 543.593, 21.2711, 0.3196", "723.611, 544.498, 21.5217, 0.354", "722.88, 545.367, 21.7865, 0.4416", "722.322, 546.354, 22.0472, 0.4878", "721.894, 547.413, 22.3153, 0.451", "721.413, 548.446, 22.6278, 0.5208", "720.911, 549.454, 23.0193, 0.4372", "720.361, 550.39, 23.522, 0.401", "719.461, 550.81, 24.1394, 0.4424", "718.354, 550.807, 24.769, 0.4526", "717.23, 550.948, 25.3528, 0.5658", "716.119, 551.188, 25.8932, 0.5456", "715.033, 551.478, 26.4141, 0.4808", "714.088, 551.956, 26.9803, 0.4932", "713.218, 552.568, 27.5727, 0.5598", "712.361, 553.278, 28.1207, 0.4714", "711.645, 554.158, 28.5664, 0.4204", "711.004, 555.103, 28.8621, 0.465", "710.077, 555.753, 29.0623, 0.5558", "709.019, 556.176, 29.1914, 0.4582", "707.961, 556.611, 29.26, 0.4242", "706.913, 557.071, 29.2922, 0.334", "705.924, 557.643, 29.3059, 0.3", "705.019, 558.341, 29.3076, 0.2748", "704.071, 558.982, 29.2944, 0.2748", "703.046, 559.489, 29.2676, 0.2752", "702.012, 559.978, 29.2286, 0.2758", "700.997, 560.505, 29.1754, 0.2766", "699.994, 561.054, 29.0993, 0.2782", "699.008, 561.63, 28.9876, 0.2814", "698.075, 562.282, 28.8341, 0.287", "697.223, 563.03, 28.642, 0.2988", "696.386, 563.8, 28.4379, 0.3142", "695.53, 564.551, 28.2484, 0.3734", "694.659, 565.284, 28.0804, 0.3338", "693.754, 565.979, 27.9573, 0.3", "692.799, 566.603, 27.9355, 0.2746", "691.762, 567.059, 28.0137, 0.2746", "690.637, 567.241, 28.1302, 0.2746", "689.499, 567.358, 28.2537, 0.2746", "688.396, 567.655, 28.3797, 0.2746", "687.529, 568.391, 28.5116, 0.2746", "687.237, 569.489, 28.6538, 0.2746", "687.044, 570.617, 28.8159, 0.2746", "686.851, 571.743, 29.0279, 0.2746", "686.778, 572.817, 29.3933, 0.2746", "686.469, 573.685, 29.9583, 0.2748", "685.732, 574.523, 30.4847, 0.275", "684.781, 575.156, 30.8742, 0.2752", "683.694, 575.47, 31.1713, 0.2758", "682.619, 575.858, 31.2875, 0.277", "681.675, 576.371, 31.1394, 0.2792", "680.56, 576.423, 30.8706, 0.2828", "679.453, 576.394, 30.5458, 0.291", "678.341, 576.138, 30.2856, 0.2994", "677.284, 575.728, 30.1739, 0.3474", "676.262, 575.234, 30.1882, 0.2796", "675.32, 574.593, 30.4954, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "752.457, 508.363, 24.4953, 0.484", "751.523, 508.802, 24.5986, 0.2288", "750.403, 508.871, 24.8292, 0.287", "749.306, 508.913, 24.9507, 0.2988", "748.262, 509.276, 25.1714, 0.3142", "747.206, 509.703, 25.3961, 0.3734", "746.185, 510.21, 25.6202, 0.3338", "745.159, 510.708, 25.8441, 0.3", "744.093, 511.116, 26.0588, 0.2746", "743.022, 511.52, 26.251, 0.2746", "741.932, 511.844, 26.4548, 0.2746", "740.821, 512.039, 26.7142, 0.2748", "739.728, 512.29, 27.0277, 0.275", "738.681, 512.692, 27.3764, 0.2752", "737.633, 513.122, 27.719, 0.2758", "736.556, 513.503, 28.0134, 0.277", "735.504, 513.936, 28.2629, 0.2792", "734.518, 514.487, 28.4936, 0.283", "733.555, 515.086, 28.6919, 0.2902", "732.571, 515.665, 28.8288, 0.3044", "731.521, 516.097, 28.8764, 0.3248", "730.422, 516.359, 28.8243, 0.393", "729.374, 516.77, 28.7118, 0.3712", "728.401, 517.364, 28.5964, 0.3648", "727.332, 517.733, 28.5113, 0.415", "726.2, 517.802, 28.4875, 0.4364", "725.08, 517.682, 28.551, 0.3664", "723.999, 517.336, 28.628, 0.3124", "722.894, 517.122, 28.6311, 0.2988", "721.785, 517.312, 28.5919, 0.3142", "720.687, 517.631, 28.5659, 0.3734", "719.56, 517.792, 28.5362, 0.3338", "718.425, 517.898, 28.5113, 0.3", "717.302, 518.102, 28.5452, 0.2746", "716.215, 518.432, 28.6905, 0.2746", "715.183, 518.846, 28.9674, 0.2746", "714.134, 519.214, 29.3395, 0.2746", "713.044, 519.49, 29.7548, 0.2746", "711.931, 519.716, 30.1636, 0.2746", "710.807, 519.918, 30.5326, 0.2746", "709.684, 520.113, 30.8652, 0.2746", "708.566, 520.304, 31.1917, 0.2746", "707.447, 520.448, 31.5302, 0.2746", "706.323, 520.47, 31.8853, 0.2746", "705.195, 520.392, 32.2423, 0.2746", "704.066, 520.235, 32.5623, 0.2748", "702.927, 520.157, 32.8373, 0.2748", "701.807, 520.295, 33.1055, 0.2752", "700.733, 520.637, 33.3659, 0.2758", "699.627, 520.915, 33.5762, 0.2766", "698.489, 521.011, 33.7302, 0.2782", "697.364, 521.211, 33.8394, 0.2814", "696.38, 521.776, 33.9007, 0.2872", "695.437, 522.422, 33.9268, 0.2978", "694.488, 523.062, 33.9357, 0.3184", "693.59, 523.77, 33.9433, 0.3518", "692.74, 524.534, 33.9576, 0.4392", "692.036, 525.428, 34.0029, 0.476", "691.418, 526.389, 34.0326, 0.465", "690.816, 527.352, 34.0077, 0.3718", "690.506, 528.408, 33.8862, 0.3242", "690.433, 529.54, 33.8212, 0.314", "690.255, 530.634, 33.8764, 0.3734", "690.072, 531.731, 34.0088, 0.3338", "690.45, 532.794, 34.1323, 0.2994", "690.823, 533.848, 34.1118, 0.2742", "690.922, 534.982, 34.0231, 0.2736", "690.968, 536.118, 33.8467, 0.2728", "690.785, 537.235, 33.593, 0.2712", "690.318, 538.253, 33.2844, 0.2684", "689.8, 539.264, 32.998, 0.2626", "689.403, 540.336, 32.7858, 0.2542", "688.844, 541.308, 32.564, 0.2288", "688.353, 542.313, 32.5346, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_34",
    "id" : "apic_34",
    "points3d" : [ "764.972, 473.812, 12.1668, 0.2824", "763.809, 473.248, 11.9085, 0.3024", "762.72, 472.963, 11.6384, 0.321", "761.585, 472.851, 11.3603, 0.3858", "760.458, 472.707, 11.0521, 0.358", "759.352, 472.482, 10.7168, 0.3396", "758.252, 472.237, 10.3983, 0.3734", "757.156, 471.979, 10.093, 0.334", "756.073, 471.646, 9.8212, 0.3002", "754.983, 471.309, 9.6156, 0.275", "753.863, 471.109, 9.5058, 0.2752", "752.769, 470.968, 9.5478, 0.276", "751.685, 471.001, 9.5945, 0.277", "750.567, 471.037, 9.5659, 0.2792", "749.44, 470.898, 9.5256, 0.2832", "748.341, 470.594, 9.5066, 0.2906", "747.238, 470.294, 9.5166, 0.3044", "746.109, 470.119, 9.5649, 0.3304", "744.987, 469.913, 9.6768, 0.3748", "743.923, 469.533, 9.8773, 0.4766", "743.011, 468.943, 10.1951, 0.5714", "742.127, 468.285, 10.5795, 0.5174", "741.115, 467.789, 10.9328, 0.3848", "739.997, 467.635, 11.2157, 0.3", "738.864, 467.754, 11.4279, 0.2746", "737.754, 468.024, 11.5831, 0.2746", "736.649, 468.318, 11.7076, 0.2746", "735.534, 468.563, 11.8322, 0.2748", "734.414, 468.787, 11.9726, 0.2748", "733.301, 469.034, 12.134, 0.275", "732.25, 469.44, 12.3409, 0.2754", "731.325, 470.074, 12.5847, 0.2762", "730.335, 470.605, 12.7548, 0.2778", "729.236, 470.598, 12.8449, 0.2806", "728.164, 470.248, 12.9768, 0.2856", "727.085, 469.974, 13.1907, 0.2946", "725.962, 469.859, 13.4315, 0.313", "724.819, 469.842, 13.6523, 0.3416", "723.676, 469.864, 13.8601, 0.419", "722.536, 469.949, 14.057, 0.4438", "721.396, 470.05, 14.2529, 0.3798", "720.262, 470.048, 14.4944, 0.3388", "719.154, 469.901, 14.8138, 0.3426", "718.12, 469.513, 15.2038, 0.4208", "717.17, 468.945, 15.6368, 0.447", "716.13, 468.579, 16.0827, 0.387", "715.001, 468.568, 16.4595, 0.3454", "713.905, 468.802, 16.6578, 0.3848", "712.777, 468.818, 16.7338, 0.3548", "711.682, 468.501, 16.7943, 0.3398", "710.871, 467.75, 16.9382, 0.343", "710.25, 466.819, 17.1513, 0.4278", "709.428, 466.032, 17.3715, 0.4312", "708.547, 465.305, 17.5851, 0.496", "707.67, 464.573, 17.7701, 0.5646", "706.848, 463.779, 17.9026, 0.4818", "706.061, 462.949, 17.9773, 0.4328", "705.278, 462.115, 18.0076, 0.5198", "704.512, 461.267, 18.0014, 0.507", "703.804, 460.367, 17.9484, 0.412", "703.13, 459.444, 17.844, 0.3526", "702.461, 458.516, 17.6896, 0.3616", "701.742, 457.629, 17.4728, 0.4868", "700.885, 456.896, 17.155, 0.421", "699.975, 456.255, 16.7369, 0.3718", "699.058, 455.623, 16.2439, 0.3858", "698.134, 454.996, 15.707, 0.358", "697.204, 454.373, 15.1518, 0.3396", "696.272, 453.75, 14.598, 0.3734", "695.326, 453.151, 14.0601, 0.3338", "694.288, 452.731, 13.5439, 0.3", "693.215, 452.413, 13.0539, 0.2746", "692.139, 452.105, 12.5942, 0.2746", "691.066, 451.77, 12.178, 0.2746", "690.04, 451.271, 11.853, 0.2746", "689.049, 450.699, 11.6234, 0.2746", "688.063, 450.118, 11.4614, 0.2746", "687.041, 449.62, 11.3735, 0.2746", "685.993, 449.215, 11.3603, 0.2746", "684.896, 448.919, 11.257, 0.2746", "683.82, 448.68, 11.0032, 0.2746", "682.747, 448.445, 10.6299, 0.2746", "681.675, 448.199, 10.1784, 0.2746", "680.63, 447.746, 9.755, 0.2746", "679.61, 447.228, 9.3955, 0.2746", "678.592, 446.707, 9.1066, 0.2746", "677.575, 446.184, 8.8701, 0.2746", "676.674, 445.493, 8.6224, 0.2748", "675.827, 444.741, 8.3373, 0.2748", "674.986, 443.984, 8.0072, 0.2752", "674.24, 443.133, 7.6422, 0.2758", "673.79, 442.087, 7.2655, 0.2764", "673.417, 441.011, 6.8838, 0.278", "673.049, 439.932, 6.4986, 0.2812", "672.725, 438.846, 6.0868, 0.2864", "672.661, 437.8, 5.5411, 0.2978", "672.87, 436.7, 4.9685, 0.3124", "673.186, 435.603, 4.4007, 0.37", "673.265, 434.463, 3.858, 0.3276", "673.27, 433.32, 3.3475, 0.2882", "673.549, 432.298, 2.7385, 0.2542", "674.143, 431.655, 1.9692, 0.2288", "675.102, 431.655, 0.0, 0.2288" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_33",
    "id" : "apic_33",
    "points3d" : [ "764.972, 473.812, 12.1668, 0.2824", "764.508, 473.317, 12.7596, 0.4576", "763.622, 472.659, 12.5011, 0.4592", "762.915, 471.835, 12.3832, 0.3612", "762.209, 470.964, 12.2827, 0.3034", "761.607, 470.018, 12.2506, 0.2812", "761.401, 468.921, 12.2984, 0.2864", "760.863, 468.175, 12.6178, 0.2978", "760.336, 467.352, 13.1929, 0.3124", "759.641, 466.542, 13.8786, 0.37", "758.807, 465.927, 14.6435, 0.3276", "758.011, 465.305, 15.4438, 0.2882", "757.155, 464.585, 16.086, 0.2542", "756.799, 463.754, 16.2738, 0.2288", "756.318, 462.912, 16.8283, 0.2288" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "1037.84, 239.198, 75.579, 0.2882", "1036.71, 238.69, 76.109, 0.3594", "1036.42, 237.731, 77.1299, 0.3", "1036.82, 236.694, 77.56, 0.2746", "1037.32, 235.665, 77.9682, 0.2746", "1037.67, 234.605, 78.4204, 0.2746", "1037.99, 233.565, 78.9284, 0.2746", "1038.57, 232.622, 79.4312, 0.2746", "1039.34, 231.773, 79.8302, 0.2746", "1040.13, 230.952, 80.1419, 0.2748", "1040.93, 230.129, 80.3939, 0.275", "1041.66, 229.247, 80.6134, 0.2752", "1042.11, 228.205, 80.8606, 0.2758", "1042.49, 227.138, 81.1594, 0.2768", "1042.87, 226.07, 81.5153, 0.279", "1043.28, 225.017, 81.9249, 0.2824", "1043.79, 224.024, 82.3964, 0.289", "1044.32, 223.043, 82.9116, 0.3024", "1044.85, 222.063, 83.4506, 0.321", "1045.48, 221.134, 83.9877, 0.386", "1046.2, 220.257, 84.5046, 0.358", "1046.92, 219.389, 85.0004, 0.3396", "1047.65, 218.522, 85.4762, 0.3736", "1048.25, 217.581, 85.9611, 0.3342", "1048.82, 216.621, 86.457, 0.3006", "1049.38, 215.66, 86.9579, 0.2758", "1050.01, 214.729, 87.4395, 0.2768", "1050.77, 213.876, 87.8623, 0.279", "1051.54, 213.04, 88.2308, 0.2822", "1052.32, 212.203, 88.5598, 0.2888", "1053.13, 211.403, 88.8619, 0.3008", "1053.95, 210.611, 89.1559, 0.3252", "1054.78, 209.821, 89.46, 0.358", "1055.48, 208.945, 89.8436, 0.4802", "1056.12, 208.046, 90.3112, 0.408", "1056.76, 207.144, 90.8393, 0.3522", "1057.38, 206.221, 91.3951, 0.3264", "1057.94, 205.254, 91.94, 0.3604", "1058.5, 204.281, 92.454, 0.4848", "1059.05, 203.307, 92.923, 0.4174", "1059.87, 202.522, 93.3136, 0.365", "1060.83, 201.899, 93.6172, 0.3734", "1061.64, 201.084, 93.8356, 0.3338", "1062.27, 200.131, 93.996, 0.3", "1062.45, 199.001, 94.1273, 0.2746", "1062.57, 197.865, 94.257, 0.2746", "1062.62, 196.722, 94.4101, 0.2746", "1062.67, 195.578, 94.6058, 0.2746", "1063.27, 194.625, 94.9278, 0.2746", "1063.99, 193.775, 95.3674, 0.2746", "1064.65, 192.888, 95.909, 0.2746", "1065.13, 191.935, 96.549, 0.2746", "1065.77, 191.242, 97.3123, 0.2746", "1066.44, 190.625, 98.138, 0.2746" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "1037.84, 239.198, 75.579, 0.2882", "1038.14, 238.948, 75.586, 0.2994", "1039.01, 238.206, 75.5944, 0.3232", "1039.88, 237.462, 75.6056, 0.354", "1040.75, 236.72, 75.6216, 0.473", "1041.59, 235.948, 75.644, 0.3946", "1042.39, 235.126, 75.6759, 0.328", "1043.18, 234.305, 75.7193, 0.2792", "1043.98, 233.484, 75.7772, 0.2834", "1044.8, 232.687, 75.864, 0.2906", "1045.66, 231.936, 75.9954, 0.3056", "1046.52, 231.185, 76.1634, 0.3264", "1047.38, 230.432, 76.3591, 0.3978", "1048.18, 229.626, 76.5912, 0.3738", "1048.93, 228.784, 76.855, 0.3994", "1049.69, 227.943, 77.1308, 0.3348", "1050.44, 227.102, 77.4029, 0.3018", "1051.36, 226.411, 77.602, 0.278", "1052.27, 225.725, 77.7367, 0.2808", "1053.18, 225.037, 77.8187, 0.2862", "1054.1, 224.351, 77.8618, 0.296", "1054.92, 223.558, 77.8817, 0.315", "1055.75, 222.762, 77.8926, 0.3454", "1056.57, 221.966, 77.9075, 0.4264", "1057.39, 221.169, 77.9282, 0.4576", "1058.3, 220.483, 77.9576, 0.4064", "1059.22, 219.797, 77.9985, 0.3818", "1060.13, 219.11, 78.0545, 0.4538", "1061.05, 218.424, 78.129, 0.4738" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "789.303, 465.268, 23.8279, 0.339", "788.192, 465.821, 23.589, 0.2918", "787.172, 466.328, 23.3951, 0.3064", "786.124, 466.777, 23.2378, 0.3354", "785.017, 467.055, 23.127, 0.3778", "783.881, 467.173, 23.0536, 0.5118", "782.74, 467.236, 22.9993, 0.4922", "781.597, 467.293, 22.979, 0.385", "780.454, 467.347, 22.985, 0.3004", "779.31, 467.382, 23.0115, 0.2752", "778.167, 467.396, 23.0528, 0.2758", "777.023, 467.397, 23.1122, 0.2768", "775.884, 467.397, 23.2031, 0.279", "774.752, 467.429, 23.3357, 0.2822", "773.639, 467.562, 23.5076, 0.2886", "772.559, 467.917, 23.6285, 0.3018", "771.605, 468.476, 23.5988, 0.3198", "770.624, 469.024, 23.4758, 0.3842", "769.569, 469.456, 23.3429, 0.3534", "768.483, 469.817, 23.2381, 0.3372", "767.392, 470.159, 23.1787, 0.3394", "766.297, 470.489, 23.1803, 0.4152", "765.182, 470.735, 23.2578, 0.4368", "764.054, 470.875, 23.405, 0.3666", "762.923, 470.976, 23.5983, 0.3136", "761.793, 471.072, 23.813, 0.2994", "760.68, 471.296, 24.022, 0.323", "759.624, 471.716, 24.1979, 0.3538", "758.6, 472.215, 24.3242, 0.4728", "757.581, 472.734, 24.3651, 0.3936", "756.58, 473.265, 24.279, 0.3262", "755.595, 473.797, 24.0691, 0.276", "754.606, 474.316, 23.7748, 0.2774", "753.54, 474.694, 23.4676, 0.2796", "752.414, 474.879, 23.2123, 0.2838", "751.277, 475.003, 23.0271, 0.2918", "750.139, 475.123, 22.9061, 0.3062", "749.002, 475.243, 22.8309, 0.3354", "747.862, 475.349, 22.7779, 0.3778", "746.722, 475.436, 22.7242, 0.5118", "745.581, 475.52, 22.6557, 0.492", "744.445, 475.657, 22.5676, 0.3848", "743.386, 476.064, 22.4286, 0.3", "742.391, 476.573, 22.2088, 0.2746", "741.341, 476.948, 21.9382, 0.2746", "740.295, 477.381, 21.6767, 0.2746", "739.27, 477.88, 21.4779, 0.2746", "738.255, 478.408, 21.3822, 0.2746", "737.226, 478.892, 21.4277, 0.2746", "736.093, 478.939, 21.5793, 0.2746", "735.065, 478.455, 21.7784, 0.2746", "734.025, 478.026, 22.0872, 0.2746", "732.969, 478.175, 22.5358, 0.2746", "731.883, 478.418, 23.0257, 0.2746", "730.786, 478.651, 23.5129, 0.2746", "729.687, 478.882, 23.9799, 0.2746", "728.588, 479.113, 24.4108, 0.2746", "727.47, 479.333, 24.739, 0.2748", "726.345, 479.547, 24.9516, 0.275", "725.221, 479.758, 25.0797, 0.2752", "724.097, 479.971, 25.1475, 0.2758", "722.972, 480.179, 25.1749, 0.277", "721.845, 480.375, 25.1793, 0.279", "720.717, 480.564, 25.1763, 0.283", "719.589, 480.751, 25.1715, 0.2898", "718.459, 480.94, 25.1652, 0.3032", "717.319, 481.019, 25.156, 0.3284", "716.197, 480.799, 25.1408, 0.3712", "715.104, 480.462, 25.1209, 0.4686", "714.015, 480.114, 25.1, 0.5626", "712.925, 479.766, 25.0813, 0.4706", "711.821, 479.466, 25.0797, 0.4484", "710.711, 479.192, 25.1002, 0.3734", "709.599, 478.922, 25.1399, 0.3988", "708.523, 478.538, 25.1917, 0.3338", "707.506, 478.013, 25.2485, 0.3", "706.511, 477.447, 25.3096, 0.2746", "705.521, 476.876, 25.3767, 0.2746", "704.497, 476.366, 25.4629, 0.2746", "703.427, 475.965, 25.5847, 0.2746", "702.345, 475.602, 25.7438, 0.2748", "701.263, 475.239, 25.9331, 0.2748", "700.169, 474.921, 26.1572, 0.2752", "699.066, 474.789, 26.457, 0.2758", "697.952, 474.729, 26.7924, 0.2766", "696.812, 474.685, 27.0735, 0.2782", "695.669, 474.63, 27.2807, 0.2814", "694.561, 474.342, 27.4259, 0.287", "693.471, 473.996, 27.522, 0.2988", "692.344, 473.805, 27.5726, 0.3142", "691.209, 473.67, 27.6019, 0.3734", "690.085, 473.466, 27.6717, 0.3338", "689.002, 473.156, 27.8349, 0.3", "687.923, 472.803, 28.051, 0.2746", "686.819, 472.506, 28.2629, 0.2744", "685.815, 471.957, 28.4665, 0.2744", "685.311, 470.978, 28.7524, 0.2742", "684.744, 469.993, 29.0231, 0.2742", "684.266, 468.953, 29.2337, 0.2736", "683.384, 468.225, 29.4006, 0.2728", "682.339, 467.761, 29.5406, 0.2712", "681.235, 467.459, 29.659, 0.2684", "680.107, 467.458, 29.8206, 0.2626", "678.979, 467.458, 30.0224, 0.2542", "677.837, 467.458, 30.2103, 0.2288", "676.693, 467.458, 30.4954, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "789.303, 465.268, 23.8279, 0.339", "788.811, 465.174, 23.3495, 0.2288", "788.013, 464.582, 21.6343, 0.3002", "787.706, 463.577, 20.896, 0.3242", "787.288, 462.557, 20.0742, 0.3562", "786.709, 461.627, 19.1876, 0.4768", "786.184, 460.76, 18.2053, 0.4016", "786.011, 459.905, 17.1094, 0.341", "786.195, 458.977, 16.002, 0.3034", "786.222, 457.93, 14.9836, 0.3288", "785.848, 456.884, 14.1386, 0.372", "785.097, 456.034, 13.4933, 0.4704", "784.169, 455.376, 12.9809, 0.5644", "783.211, 454.784, 12.5288, 0.4816", "782.249, 454.223, 12.0778, 0.4312", "781.281, 453.69, 11.5949, 0.5238", "780.271, 453.203, 11.1066, 0.4784", "779.192, 452.837, 10.6592, 0.5344", "778.07, 452.626, 10.2645, 0.4138", "776.936, 452.537, 9.8854, 0.3648", "775.86, 452.363, 9.4493, 0.343", "774.931, 451.883, 8.9112, 0.422", "774.036, 451.284, 8.3301, 0.4492", "773.026, 450.774, 7.8043, 0.3908", "771.969, 450.338, 7.3761, 0.353", "770.885, 449.98, 7.0307, 0.3998", "769.775, 449.748, 6.7249, 0.377", "768.662, 449.693, 6.4099, 0.4056", "767.619, 450.026, 6.0801, 0.3464", "766.698, 450.701, 5.7843, 0.3242", "765.706, 451.204, 5.5196, 0.3142", "764.584, 451.382, 5.2282, 0.3736", "763.521, 451.617, 4.8545, 0.334", "762.772, 452.1, 4.3218, 0.3004", "762.703, 452.886, 3.655, 0.2752", "762.937, 453.929, 3.1293, 0.2758", "763.009, 454.981, 2.9306, 0.2768", "762.657, 455.849, 3.0717, 0.279", "761.691, 456.201, 3.3565, 0.2824", "760.632, 456.154, 3.4898, 0.289", "759.554, 456.142, 3.4712, 0.3024", "758.422, 456.246, 3.421, 0.321", "757.311, 456.494, 3.4184, 0.3858", "756.26, 456.938, 3.4551, 0.358", "755.281, 457.517, 3.5244, 0.3396", "754.223, 457.904, 3.744, 0.3734", "753.393, 458.292, 4.2237, 0.3338", "753.037, 458.964, 4.8994, 0.2998", "752.413, 459.771, 5.5396, 0.2744", "751.523, 460.479, 5.8974, 0.2742", "750.837, 461.165, 5.8222, 0.2742", "750.019, 461.443, 5.3617, 0.2736", "749.211, 460.976, 4.676, 0.2728", "748.688, 460.023, 4.0147, 0.2712", "748.412, 458.914, 3.574, 0.2684", "748.276, 457.917, 3.5651, 0.2626", "747.731, 457.089, 3.8998, 0.2542", "746.93, 456.284, 4.3049, 0.2288", "746.574, 455.198, 5.04, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "775.061, 537.101, 13.8894, 0.7032", "773.847, 537.208, 14.511, 0.4524", "772.734, 537.309, 14.5836, 0.341", "771.638, 537.201, 14.634, 0.3034", "770.596, 536.8, 14.5493, 0.3288", "769.536, 536.488, 14.3672, 0.3722", "768.408, 536.525, 14.168, 0.4702", "767.297, 536.794, 13.9758, 0.5656", "766.177, 537.013, 13.7872, 0.4762", "765.037, 537.05, 13.6079, 0.459", "763.927, 536.883, 13.4052, 0.3928", "762.92, 536.437, 13.1304, 0.4354", "761.971, 535.832, 12.8309, 0.3976", "760.926, 535.401, 12.5703, 0.4384", "759.799, 535.216, 12.3523, 0.4328", "758.674, 535.053, 12.1466, 0.3596", "757.576, 534.78, 11.9348, 0.3006", "756.481, 534.47, 11.7571, 0.2758", "755.409, 534.086, 11.635, 0.2766", "754.449, 533.486, 11.5332, 0.2782", "753.497, 532.889, 11.4084, 0.2814", "752.474, 532.395, 11.2617, 0.287", "751.431, 531.987, 11.0801, 0.2988", "750.342, 531.713, 10.8279, 0.3142", "749.299, 531.29, 10.5507, 0.3734", "748.304, 530.728, 10.3002, 0.334", "747.225, 530.509, 10.0903, 0.3", "746.092, 530.449, 9.8849, 0.2746", "745.014, 530.119, 9.6788, 0.2748", "743.936, 529.745, 9.509, 0.2748", "742.878, 529.353, 9.3295, 0.2752", "741.846, 528.925, 9.1138, 0.2758", "740.749, 528.664, 8.9554, 0.2764", "739.678, 528.362, 8.9398, 0.278", "738.666, 527.88, 9.0102, 0.281", "737.563, 527.67, 9.0909, 0.2866", "736.431, 527.533, 9.1006, 0.2968", "735.828, 526.654, 9.0463, 0.3172", "735.774, 525.52, 8.8872, 0.3478", "735.975, 524.435, 8.5597, 0.4376", "735.987, 523.311, 8.1432, 0.4442", "735.39, 522.416, 7.6212, 0.55", "734.361, 521.968, 7.0874, 0.5152", "733.283, 521.587, 6.5999, 0.4296", "732.234, 521.143, 6.1418, 0.3728", "731.628, 520.234, 5.6426, 0.4604", "731.268, 519.161, 5.1769, 0.3728", "731.31, 518.207, 4.5876, 0.2796", "731.94, 517.261, 3.514, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "775.061, 537.101, 13.8894, 0.7032", "774.811, 538.23, 13.4996, 0.471", "774.663, 539.24, 13.0147, 0.37", "774.189, 540.082, 12.4311, 0.3828", "773.655, 541.059, 11.9133, 0.3512", "773.472, 542.185, 11.5474, 0.3318", "773.369, 543.322, 11.327, 0.3354", "773.27, 544.461, 11.2361, 0.3778", "773.186, 545.6, 11.2535, 0.5118", "773.229, 546.742, 11.3223, 0.492", "773.392, 547.874, 11.3876, 0.3848", "773.58, 549.002, 11.4332, 0.3", "773.767, 550.13, 11.4631, 0.2748", "773.994, 551.252, 11.484, 0.275", "774.367, 552.333, 11.5021, 0.2752", "774.845, 553.372, 11.5237, 0.2758", "775.31, 554.417, 11.5535, 0.2768", "775.559, 555.533, 11.5955, 0.279", "775.445, 556.67, 11.6528, 0.2824", "775.078, 557.753, 11.7337, 0.2894", "774.601, 558.79, 11.8437, 0.3014", "774.36, 559.891, 12.0148, 0.3264", "774.337, 560.998, 12.2464, 0.3606", "774.383, 562.117, 12.4863, 0.4848", "774.624, 563.235, 12.6258, 0.4176", "774.87, 564.309, 12.5789, 0.3654", "775.523, 565.223, 12.4273, 0.374", "775.995, 566.148, 12.1152, 0.3352" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "786.779, 520.364, 29.4095, 0.4048", "786.753, 521.423, 29.297, 0.3788", "786.779, 522.565, 29.1925, 0.4482", "786.878, 523.705, 29.141, 0.4626", "786.936, 524.847, 29.113, 0.5866", "786.843, 525.98, 29.0534, 0.5732", "786.579, 527.088, 28.9831, 0.5862", "786.164, 528.148, 28.9814, 0.4254", "785.951, 529.267, 28.9705, 0.3378", "786.371, 530.324, 28.9957, 0.2988", "787.017, 531.248, 29.1211, 0.3142", "787.675, 532.182, 29.2362, 0.3734", "787.924, 533.286, 29.3093, 0.334", "787.949, 534.344, 29.5593, 0.3", "787.949, 535.473, 29.8567, 0.2746", "787.949, 536.614, 30.1389, 0.2748", "787.949, 537.755, 30.3982, 0.2748", "787.949, 538.898, 30.6379, 0.2752", "787.949, 540.04, 30.8504, 0.2758", "787.828, 541.173, 31.0386, 0.2766", "787.626, 542.29, 31.2301, 0.2786", "787.56, 543.423, 31.4238, 0.2818", "787.699, 544.549, 31.6098, 0.2882", "787.763, 545.69, 31.7338, 0.2994", "787.688, 546.822, 31.7344, 0.323", "787.813, 547.955, 31.666, 0.3538", "788.151, 549.048, 31.5812, 0.4728", "788.407, 550.159, 31.4583, 0.3938", "788.407, 551.243, 31.2259, 0.3264" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "786.779, 520.364, 29.4095, 0.4048", "787.408, 520.542, 30.0594, 0.2288", "788.458, 520.95, 30.7793, 0.4392", "789.162, 521.834, 31.0736, 0.4824", "789.311, 522.94, 31.4524, 0.4482", "789.323, 524.08, 31.831, 0.48", "789.323, 525.184, 32.27, 0.5352", "789.323, 526.04, 32.8922, 0.4254", "789.166, 527.141, 33.4401, 0.3378", "788.463, 527.971, 33.6944, 0.2988", "788.047, 529.028, 33.794, 0.3142", "787.604, 530.07, 33.78, 0.3734", "787.164, 531.123, 33.7747, 0.3338", "786.729, 532.166, 33.8209, 0.3" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "777.475, 501.143, 34.8642, 0.4788", "777.323, 500.371, 38.085, 0.2746", "777.016, 499.787, 39.9238, 0.2746", "776.642, 498.921, 40.71, 0.2746", "776.41, 497.814, 41.4313, 0.2746", "776.232, 496.696, 42.0804, 0.2746", "776.092, 495.573, 42.6434, 0.2746", "776.037, 494.435, 43.1001, 0.2746", "775.87, 493.328, 43.4801, 0.2746", "775.346, 492.348, 43.8528, 0.2746", "774.67, 491.436, 44.2198, 0.2746", "774.044, 490.496, 44.6018, 0.2746", "773.353, 489.61, 44.9977, 0.2746", "772.525, 488.828, 45.3634, 0.2746", "771.727, 488.019, 45.7134, 0.2746", "771.162, 487.096, 46.1328, 0.2746", "770.777, 486.08, 46.6183, 0.2746", "770.38, 485.024, 47.0817, 0.2746", "770.019, 483.951, 47.5129, 0.2746", "769.735, 482.859, 47.9312, 0.2746", "769.42, 481.769, 48.3039, 0.2746", "769.043, 480.692, 48.5968, 0.2746", "768.607, 479.639, 48.8516, 0.2746", "768.126, 478.616, 49.1229, 0.2746", "767.672, 477.58, 49.4026, 0.2746", "767.314, 476.498, 49.6527, 0.2746", "766.988, 475.402, 49.873, 0.2746", "766.545, 474.352, 50.0847, 0.2746", "765.792, 473.528, 50.3166, 0.2746", "764.809, 472.996, 50.6089, 0.2746", "763.834, 472.453, 50.9617, 0.2744", "763.019, 471.798, 51.4144, 0.2744", "762.333, 471.13, 51.973, 0.2742", "761.951, 470.129, 52.428, 0.2742", "761.86, 468.998, 52.6621, 0.2736", "761.68, 467.953, 52.5916, 0.2728", "761.212, 467.159, 52.2217, 0.2712", "760.952, 466.179, 51.7087, 0.2684", "760.956, 465.061, 51.242, 0.2626", "761.282, 463.97, 50.9715, 0.2542", "761.923, 463.485, 51.144, 0.2288", "762.31, 462.422, 51.9551, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "777.475, 501.143, 34.8642, 0.4788", "776.867, 501.421, 35.1484, 0.3524", "775.928, 502.034, 35.3105, 0.2774", "775.007, 502.707, 35.4018, 0.2798", "774.051, 503.199, 35.5802, 0.2842", "773.325, 503.903, 35.8952, 0.2924", "772.699, 504.836, 36.1908, 0.3076", "772.143, 505.833, 36.4249, 0.3364", "771.845, 506.921, 36.5408, 0.386", "771.595, 508.034, 36.5803, 0.4974", "771.326, 509.137, 36.6131, 0.6088", "771.018, 510.227, 36.6562, 0.5906", "770.617, 511.295, 36.6909, 0.5046", "770.087, 512.306, 36.6764, 0.5986", "769.409, 513.211, 36.5666, 0.4562", "768.669, 514.066, 36.367, 0.3576", "767.953, 514.954, 36.1357, 0.2872", "767.232, 515.842, 35.9094, 0.2978", "766.543, 516.704, 35.6171, 0.3184", "765.698, 517.218, 35.203, 0.3522", "764.579, 517.149, 34.8827, 0.4388", "763.55, 517.23, 34.8513, 0.48", "762.538, 517.602, 34.9902, 0.45", "761.621, 518.274, 35.0689, 0.4534", "760.67, 518.885, 35.0745, 0.6298", "759.647, 519.394, 35.047, 0.5884", "758.566, 519.767, 34.9754, 0.4732", "757.457, 520.052, 34.8625, 0.4432", "756.376, 520.422, 34.7127, 0.4122", "755.495, 521.151, 34.5528, 0.4652", "754.585, 521.734, 34.2619, 0.4832", "753.726, 522.488, 33.9853, 0.4496", "752.646, 522.854, 33.7134, 0.4826", "751.55, 522.856, 33.3726, 0.5402", "750.407, 522.856, 33.0988, 0.4344" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "839.228, 553.532, 21.5151, 0.4876", "839.615, 553.971, 21.474, 0.4088", "840.516, 554.628, 21.4653, 0.4172", "841.619, 554.905, 21.4668, 0.3686", "842.737, 555.113, 21.4687, 0.359", "843.757, 555.602, 21.473, 0.4102", "844.621, 556.342, 21.4833, 0.3982", "845.28, 557.262, 21.4931, 0.4392", "845.693, 558.319, 21.4682, 0.4342", "845.939, 559.424, 21.3903, 0.362", "846.062, 560.554, 21.31, 0.305", "846.102, 561.694, 21.2828, 0.2838", "846.141, 562.832, 21.3062, 0.2914", "846.233, 563.971, 21.3498, 0.3072", "846.348, 565.11, 21.3957, 0.3298", "846.446, 566.249, 21.4313, 0.4032", "846.519, 567.391, 21.4408, 0.384", "846.563, 568.534, 21.418, 0.4182", "846.597, 569.677, 21.3668, 0.3712", "846.717, 570.81, 21.2854, 0.3632", "847.032, 571.898, 21.163, 0.4182", "847.448, 572.96, 21.0217, 0.413", "847.785, 574.048, 20.9079, 0.4666", "847.971, 575.169, 20.8036, 0.4858", "847.955, 576.306, 20.6539, 0.4546", "847.784, 577.434, 20.4701, 0.4916", "847.578, 578.556, 20.2483, 0.5568", "847.479, 579.638, 19.886, 0.4676", "847.483, 580.691, 19.3586, 0.4058", "847.583, 581.771, 18.7589, 0.4746", "847.933, 582.813, 18.1582, 0.3974", "848.604, 583.695, 17.5918, 0.3334", "849.484, 584.408, 17.1093, 0.289", "850.434, 585.035, 16.7093, 0.3024", "851.227, 585.82, 16.3679, 0.321", "851.67, 586.851, 16.0767, 0.3858", "851.885, 587.963, 15.7955, 0.358", "852.013, 589.09, 15.5146, 0.3396", "852.152, 590.219, 15.2436, 0.3734", "852.36, 591.341, 14.991, 0.3338", "852.663, 592.441, 14.7609, 0.3", "853.09, 593.499, 14.5529, 0.2746", "853.614, 594.515, 14.3566, 0.2746", "854.172, 595.508, 14.1416, 0.2748", "854.739, 596.486, 13.881, 0.2748", "855.305, 597.459, 13.5725, 0.2752", "855.855, 598.446, 13.2448, 0.2758", "856.361, 599.466, 12.9352, 0.2766", "856.755, 600.535, 12.6534, 0.2782", "856.978, 601.653, 12.402, 0.2814", "857.108, 602.787, 12.1806, 0.2872", "857.417, 603.872, 11.9536, 0.299", "857.926, 604.875, 11.6919, 0.3146", "858.35, 605.91, 11.399, 0.3744", "858.755, 606.959, 11.0905, 0.3358", "859.389, 607.892, 10.844, 0.3036", "860.127, 608.751, 10.7123, 0.2814", "860.755, 609.697, 10.6398, 0.287", "861.169, 610.744, 10.5357, 0.2988", "861.472, 611.82, 10.3728, 0.3144", "861.805, 612.903, 10.194, 0.3738", "862.193, 613.976, 10.0593, 0.3346", "862.589, 615.046, 9.9866, 0.3014", "862.971, 616.123, 9.9597, 0.277", "863.456, 617.157, 9.9617, 0.2792", "864.15, 618.057, 9.9717, 0.283", "865.005, 618.811, 9.9541, 0.2902", "865.95, 619.432, 9.8788, 0.3046", "866.976, 619.923, 9.7815, 0.3248", "868.033, 620.334, 9.7513, 0.3934", "869.001, 620.913, 9.7872, 0.3716", "869.755, 621.758, 9.8311, 0.3658", "870.396, 622.704, 9.8571, 0.4168", "870.997, 623.678, 9.8528, 0.4398", "871.521, 624.692, 9.7916, 0.3722", "872.012, 625.718, 9.6583, 0.3238", "872.647, 626.658, 9.4768, 0.3196", "873.442, 627.473, 9.2821, 0.3538", "874.284, 628.246, 9.0983, 0.4428", "875.076, 629.07, 8.9354, 0.4828", "875.63, 630.063, 8.7917, 0.4776", "875.87, 631.173, 8.6398, 0.3952", "876.142, 632.267, 8.427, 0.3672", "876.684, 633.255, 8.172, 0.3956", "877.426, 634.12, 7.9237, 0.516", "878.229, 634.933, 7.6826, 0.6398", "878.953, 635.801, 7.4096, 0.6648", "879.378, 636.84, 7.1157, 0.5596", "879.376, 637.973, 6.8541, 0.4166", "879.082, 639.075, 6.6272, 0.3538", "878.792, 640.179, 6.3994, 0.3998", "878.67, 641.305, 6.1422, 0.3834", "878.71, 642.438, 5.8688, 0.3888", "878.952, 643.553, 5.6109, 0.4542", "879.369, 644.612, 5.3503, 0.5348", "880.111, 645.422, 5.0333, 0.4242", "880.709, 646.333, 4.6734, 0.3362", "880.718, 647.463, 4.4063, 0.2938", "880.526, 648.578, 4.289, 0.3112", "880.448, 649.713, 4.2738, 0.3382", "880.55, 650.851, 4.2995, 0.413", "880.714, 651.984, 4.3395, 0.4328", "880.658, 653.126, 4.3715, 0.3594", "880.325, 654.219, 4.3768, 0.3", "880.04, 655.326, 4.3408, 0.2746", "880.004, 656.459, 4.2469, 0.2746", "880.021, 657.591, 4.1135, 0.2746", "880.126, 658.723, 4.058, 0.2746", "880.256, 659.841, 4.0895, 0.2746", "879.862, 660.911, 4.1186, 0.2746", "879.367, 661.942, 4.121, 0.2746", "878.867, 662.971, 4.0895, 0.2746", "878.367, 663.999, 4.0112, 0.2746", "877.879, 664.983, 3.7709, 0.2746", "877.61, 666.049, 3.4234, 0.2746", "877.608, 667.18, 3.0683, 0.2746", "877.783, 668.305, 2.7565, 0.2746", "878.131, 669.396, 2.5222, 0.2746", "878.541, 670.464, 2.3648, 0.2746", "878.98, 671.52, 2.2749, 0.2746", "879.662, 672.438, 2.2239, 0.2746", "880.56, 673.147, 2.1855, 0.2746", "881.537, 673.742, 2.1417, 0.2746", "882.285, 674.607, 2.0808, 0.2746", "882.912, 675.564, 1.9985, 0.2746", "883.319, 676.633, 1.8934, 0.2746", "883.656, 677.723, 1.7387, 0.2746", "883.852, 678.799, 1.4585, 0.2746", "883.615, 679.887, 1.1227, 0.2744", "882.983, 680.832, 0.8149, 0.2744", "882.343, 681.774, 0.5493, 0.2742", "881.862, 682.811, 0.3696, 0.2742", "881.418, 683.866, 0.282, 0.2736", "880.72, 684.772, 0.2794, 0.2728", "880.033, 685.687, 0.3552, 0.2712", "879.347, 686.602, 0.4811, 0.2684", "878.661, 687.518, 0.64, 0.2626", "877.97, 688.416, 0.8736, 0.2542", "877.298, 689.257, 1.2333, 0.2288", "876.625, 690.097, 2.2898, 0.2288" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "839.228, 553.532, 21.5151, 0.4876", "839.838, 554.713, 21.5684, 0.4212", "840.173, 555.795, 21.5856, 0.4478", "840.416, 556.911, 21.6257, 0.3882", "840.851, 557.933, 21.5982, 0.3484", "841.515, 558.732, 21.4288, 0.3898", "842.442, 559.297, 21.2426, 0.3652", "843.343, 559.33, 21.3646, 0.3526", "844.437, 559.278, 21.6169, 0.3986", "845.484, 559.645, 21.8066, 0.3754", "845.89, 560.681, 22.0314, 0.4026", "846.369, 561.149, 22.5403, 0.341", "846.873, 561.896, 23.0597, 0.3126", "847.689, 562.561, 23.496, 0.2988", "848.289, 563.518, 23.8298, 0.3144", "848.838, 564.521, 24.0891, 0.374", "849.461, 565.476, 24.2334, 0.335", "850.063, 566.44, 24.3214, 0.302", "850.651, 567.41, 24.4208, 0.2784", "851.295, 568.352, 24.5029, 0.2816", "851.96, 569.282, 24.5512, 0.2876", "852.561, 570.254, 24.5587, 0.2984", "853.098, 571.256, 24.5032, 0.32", "853.697, 572.209, 24.3726, 0.353", "854.543, 572.947, 24.2259, 0.4486", "855.582, 573.405, 24.1257, 0.4576", "856.578, 573.96, 24.0866, 0.6058", "857.436, 574.709, 24.1106, 0.4698", "858.315, 575.435, 24.2173, 0.3826", "859.328, 575.902, 24.4295, 0.3354", "860.396, 576.273, 24.7017, 0.3778", "861.375, 576.844, 24.9796, 0.5118", "862.244, 577.575, 25.2578, 0.492", "863.007, 578.414, 25.5323, 0.3848", "863.638, 579.365, 25.7676, 0.3", "864.262, 580.323, 25.9444, 0.2746", "864.983, 581.209, 26.1043, 0.2746", "865.684, 582.107, 26.2907, 0.2746", "866.168, 583.122, 26.5288, 0.2746", "866.485, 584.196, 26.8212, 0.2746", "866.758, 585.285, 27.1505, 0.2746", "867.06, 586.379, 27.4702, 0.2746", "867.488, 587.433, 27.6943, 0.2746", "868.035, 588.431, 27.8346, 0.2746", "868.646, 589.391, 27.9862, 0.2746", "869.214, 590.375, 28.1719, 0.2746", "869.702, 591.406, 28.3738, 0.2746", "870.213, 592.423, 28.6152, 0.2746", "870.857, 593.346, 28.9237, 0.2746", "871.739, 594.054, 29.2558, 0.2746", "872.65, 594.745, 29.5641, 0.2746", "873.06, 595.789, 29.8808, 0.2744", "873.243, 596.898, 30.2554, 0.2744", "873.652, 597.957, 30.6482, 0.2742", "874.236, 598.94, 31.0377, 0.2742", "874.923, 599.846, 31.4731, 0.2736", "875.682, 600.648, 32.0177, 0.2728", "876.434, 601.448, 32.6712, 0.2712", "876.874, 602.453, 33.3866, 0.2684", "876.917, 603.387, 34.2513, 0.2626", "877.88, 603.84, 35.1084, 0.2542", "878.791, 604.42, 35.9016, 0.2288", "879.519, 605.269, 37.2722, 0.2288" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "788.476, 515.089, 11.8101, 0.3108", "789.694, 514.89, 10.747, 0.404", "790.769, 515.251, 10.941, 0.3912", "791.736, 515.798, 11.0563, 0.403", "792.434, 516.593, 11.2211, 0.4818", "792.72, 517.683, 11.3146, 0.5806", "792.695, 518.801, 11.2701, 0.535", "792.324, 519.82, 11.0657, 0.4184", "791.693, 520.686, 10.7122, 0.357", "790.845, 521.389, 10.3541, 0.4056", "789.899, 522.015, 10.0896, 0.3954", "789.149, 522.849, 9.8694, 0.4046", "788.746, 523.901, 9.6639, 0.5142", "788.645, 525.03, 9.4872, 0.4964", "788.795, 526.126, 9.2415, 0.393", "789.146, 526.992, 8.7464, 0.3152", "789.48, 527.903, 8.0847, 0.304", "789.888, 528.898, 7.4043, 0.3238", "790.051, 530.0, 6.8548, 0.3914", "789.813, 531.111, 6.4825, 0.367", "789.589, 532.232, 6.2354, 0.3632", "789.411, 533.361, 6.0689, 0.3824", "789.472, 534.501, 5.9506, 0.5202", "789.652, 535.627, 5.8661, 0.5078", "789.796, 536.744, 5.692, 0.4148", "790.167, 537.735, 5.3614, 0.3502", "790.839, 538.63, 5.015, 0.3934", "791.221, 539.696, 4.7023, 0.3728", "790.847, 540.763, 4.453, 0.3616", "789.926, 541.424, 4.248, 0.4406", "789.169, 542.267, 4.1978, 0.3304", "788.586, 543.228, 4.4876, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "788.476, 515.089, 11.8101, 0.3108", "788.024, 515.189, 11.3266, 0.3362", "786.906, 515.306, 11.0177, 0.4156", "785.863, 515.312, 10.736, 0.4064", "784.894, 515.571, 10.3336, 0.462", "783.807, 515.827, 9.9119, 0.4414", "782.708, 516.053, 9.468, 0.5452", "781.625, 516.307, 9.0311, 0.507", "780.539, 516.593, 8.6432, 0.4118", "779.462, 516.459, 8.3049, 0.3524", "778.421, 516.195, 8.1211, 0.3612", "777.397, 515.87, 8.0793, 0.4864", "776.318, 515.63, 8.0545, 0.4194", "775.41, 516.058, 8.0942, 0.3746", "774.815, 516.776, 7.8042, 0.3626", "774.281, 517.634, 7.2414, 0.4528", "773.394, 518.282, 6.5528, 0.532", "772.456, 518.269, 5.6786, 0.4196", "771.637, 518.008, 4.6889, 0.327", "770.784, 517.699, 3.7139, 0.2776", "769.834, 517.256, 2.9427, 0.2802", "768.73, 516.962, 2.526, 0.285", "767.791, 517.034, 2.6319, 0.2938", "766.977, 517.547, 3.121, 0.3114", "766.132, 517.932, 3.8699, 0.3378", "765.21, 518.126, 4.7292, 0.4166" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "1066.44, 190.625, 98.138, 0.2746", "1066.24, 189.959, 99.6467, 0.2288", "1065.9, 188.888, 99.5162, 0.2746", "1065.45, 187.854, 99.442, 0.2746", "1064.79, 186.922, 99.426, 0.2746", "1064.14, 185.988, 99.5282, 0.2746", "1063.55, 185.029, 99.7909, 0.2746", "1062.9, 184.173, 100.245, 0.2746", "1062.37, 183.246, 100.85, 0.2746", "1062.05, 182.2, 101.516, 0.2746", "1061.8, 181.12, 102.187, 0.2746", "1061.66, 179.996, 102.787, 0.2746", "1061.6, 178.855, 103.279, 0.2746", "1061.37, 177.739, 103.72, 0.2746", "1060.71, 176.898, 104.231, 0.2746", "1060.15, 175.949, 104.78, 0.2746", "1059.93, 174.834, 105.286, 0.2746", "1059.85, 173.71, 105.799, 0.2746", "1059.83, 172.603, 106.351, 0.2746", "1059.91, 171.488, 106.898, 0.2746", "1060.06, 170.367, 107.41, 0.2746", "1060.43, 169.313, 107.93, 0.2746", "1060.59, 168.199, 108.442, 0.2746", "1060.57, 167.063, 108.924, 0.2746", "1060.53, 165.928, 109.383, 0.2746", "1060.49, 164.792, 109.837, 0.2746", "1060.43, 163.658, 110.301, 0.2746", "1060.12, 162.599, 110.836, 0.2746", "1059.74, 161.575, 111.445, 0.2746", "1059.35, 160.553, 112.107, 0.2746", "1058.93, 159.536, 112.794, 0.2746", "1058.45, 158.534, 113.47, 0.2746", "1057.95, 157.537, 114.12, 0.2746", "1057.45, 156.539, 114.736, 0.2746", "1056.91, 155.551, 115.306, 0.2746", "1056.35, 154.572, 115.833, 0.2746", "1055.78, 153.593, 116.331, 0.2746", "1055.21, 152.615, 116.815, 0.2746", "1054.74, 151.587, 117.299, 0.2744", "1054.36, 150.532, 117.805, 0.2744", "1054.14, 149.461, 118.366, 0.2742", "1053.62, 148.492, 118.947, 0.2742", "1052.79, 147.738, 119.497, 0.2736", "1051.85, 147.224, 120.065, 0.2728", "1050.8, 146.815, 120.565, 0.2712", "1049.72, 146.447, 120.92, 0.2684", "1048.95, 145.599, 121.147, 0.2626", "1048.62, 144.504, 121.278, 0.2542", "1047.99, 143.55, 121.343, 0.2288", "1047.0, 142.968, 121.363, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "1066.44, 190.625, 98.138, 0.2746", "1066.86, 189.937, 98.6765, 0.2746", "1067.45, 188.968, 98.957, 0.2746", "1068.03, 187.998, 99.034, 0.2746", "1068.62, 187.029, 98.9632, 0.2746", "1068.96, 185.937, 98.8436, 0.2746", "1069.19, 184.818, 98.7462, 0.2746", "1069.43, 183.699, 98.7165, 0.2746", "1069.67, 182.579, 98.7465, 0.2746", "1069.9, 181.46, 98.8249, 0.2746" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "1061.05, 218.424, 78.129, 0.4738", "1061.84, 217.899, 77.8554, 0.6864", "1062.79, 217.263, 77.8464, 0.4498", "1063.74, 216.628, 77.8431, 0.3362", "1064.69, 215.994, 77.838, 0.294", "1065.65, 215.359, 77.831, 0.3118", "1066.63, 214.775, 77.8215, 0.3382", "1067.72, 214.452, 77.8078, 0.418", "1068.83, 214.165, 77.7885, 0.418", "1069.94, 213.876, 77.7624, 0.4478", "1071.05, 213.588, 77.7283, 0.5888", "1072.17, 213.359, 77.6734, 0.6622", "1073.3, 213.179, 77.593, 0.5666", "1074.42, 213.005, 77.4942, 0.5994", "1075.55, 212.831, 77.3828, 0.5558", "1076.68, 212.656, 77.2626, 0.5232", "1077.66, 212.063, 77.173, 0.4582", "1078.58, 211.383, 77.1123, 0.3594", "1079.49, 210.697, 77.068, 0.3004", "1080.33, 209.942, 76.953, 0.2752", "1081.14, 209.167, 76.7558, 0.2758", "1081.95, 208.391, 76.5041, 0.2768", "1082.75, 207.596, 76.2558, 0.2786", "1083.55, 206.776, 76.0892, 0.2822", "1084.34, 205.953, 76.0141, 0.2882", "1085.14, 205.132, 76.0304, 0.3012", "1085.99, 204.372, 76.1547, 0.3182", "1086.91, 203.733, 76.4075, 0.3812", "1087.82, 203.101, 76.7402, 0.3482", "1088.74, 202.471, 77.1092, 0.3264", "1089.59, 201.703, 77.4124, 0.3236", "1090.41, 200.909, 77.6306, 0.367", "1091.23, 200.113, 77.77, 0.4386", "1092.05, 199.317, 77.8456, 0.6138", "1093.05, 198.754, 77.8803, 0.7334", "1094.07, 198.24, 77.896, 0.5796", "1095.09, 197.728, 77.9125, 0.5134", "1096.12, 197.215, 77.9352, 0.4722", "1097.07, 196.585, 77.9666, 0.4582", "1097.99, 195.901, 78.0108, 0.3594", "1098.9, 195.214, 78.0746, 0.3", "1099.82, 194.528, 78.1637, 0.2746", "1100.81, 193.955, 78.2804, 0.2746", "1101.83, 193.441, 78.4252, 0.2746", "1102.8, 192.92, 78.7063, 0.2746", "1103.75, 192.398, 79.1, 0.2746", "1104.84, 192.089, 79.5077, 0.2746", "1105.98, 191.978, 79.8613, 0.2746", "1107.12, 191.866, 80.1702, 0.2746", "1108.26, 191.755, 80.4446, 0.2746", "1109.39, 191.643, 80.6943, 0.2746" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "1061.05, 218.424, 78.129, 0.4738", "1061.72, 217.837, 78.2482, 0.601", "1062.58, 217.087, 78.4148, 0.6306", "1063.44, 216.336, 78.6229, 0.5432", "1064.29, 215.58, 78.8676, 0.3852", "1064.87, 214.607, 79.1717, 0.3008", "1065.44, 213.629, 79.5211, 0.2762", "1066.01, 212.651, 79.8997, 0.2776", "1066.6, 211.694, 80.3029, 0.2806", "1067.27, 210.797, 80.7394, 0.2854", "1067.93, 209.903, 81.1868, 0.2942", "1068.59, 209.01, 81.6234, 0.312", "1069.3, 208.111, 81.9686, 0.3396", "1070.01, 207.217, 82.2077, 0.4156", "1070.72, 206.324, 82.3609, 0.4376", "1071.44, 205.43, 82.4494, 0.3684", "1072.11, 204.506, 82.4984, 0.3168", "1072.77, 203.569, 82.5311, 0.3056", "1073.43, 202.632, 82.5692, 0.333", "1074.08, 201.696, 82.621, 0.3784", "1074.69, 200.725, 82.6986, 0.4892", "1075.27, 199.74, 82.8075, 0.5646", "1075.85, 198.755, 82.9503, 0.6508", "1076.43, 197.77, 83.1281, 0.613", "1077.02, 196.802, 83.3896, 0.5838", "1077.61, 195.849, 83.7396, 0.5614", "1078.2, 194.895, 84.1532, 0.5968", "1078.78, 193.939, 84.6059, 0.5174", "1079.31, 192.947, 85.073, 0.3848", "1079.83, 191.955, 85.5322, 0.3", "1080.35, 190.962, 85.9642, 0.2746", "1080.99, 190.026, 86.3419, 0.2746", "1081.79, 189.218, 86.6295, 0.2746", "1082.49, 188.308, 86.8207, 0.2748", "1083.14, 187.365, 86.9221, 0.2748" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "775.995, 566.148, 12.1152, 0.3352", "775.971, 566.457, 11.9231, 0.3024", "776.046, 567.531, 11.9316, 0.279", "776.279, 568.63, 12.0374, 0.2826", "776.396, 569.76, 12.1478, 0.2894", "776.339, 570.899, 12.2416, 0.302", "776.358, 572.038, 12.3057, 0.3262", "776.638, 573.131, 12.2677, 0.3658", "776.991, 574.214, 12.1543, 0.4662", "777.458, 575.248, 12.0031, 0.521", "778.0, 576.218, 11.7846, 0.5736", "778.307, 577.29, 11.5986, 0.4506", "778.577, 578.379, 11.5331, 0.3792", "778.977, 579.441, 11.5057, 0.401", "779.446, 580.474, 11.4357, 0.3798", "779.999, 581.471, 11.3644, 0.4106", "780.565, 582.458, 11.2619, 0.3558", "780.905, 583.537, 11.1709, 0.3414", "781.558, 584.442, 11.1043, 0.347", "782.213, 585.318, 10.9254, 0.429", "782.696, 586.338, 10.7545, 0.4638", "783.317, 587.279, 10.5476, 0.4112", "783.96, 588.207, 10.303, 0.423", "784.411, 589.247, 10.1171, 0.3734", "784.356, 590.312, 9.8569, 0.3986", "784.322, 591.442, 9.6588, 0.3336", "785.006, 592.265, 9.5925, 0.2994", "785.834, 593.045, 9.5344, 0.2736", "786.673, 593.817, 9.4284, 0.2728", "787.281, 594.771, 9.2674, 0.2712", "787.633, 595.841, 9.0499, 0.2684", "788.301, 596.758, 8.8253, 0.2626", "789.201, 597.295, 8.4731, 0.2542", "790.345, 597.295, 8.2066, 0.2288", "791.489, 597.295, 7.8532, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "775.995, 566.148, 12.1152, 0.3352", "775.329, 566.863, 10.7201, 0.2288", "774.813, 567.822, 10.8559, 0.3444", "774.681, 568.942, 10.9178, 0.4242", "774.672, 570.061, 10.9685, 0.4538", "774.672, 571.195, 10.8841, 0.3978", "774.734, 572.297, 10.6276, 0.3722", "774.92, 573.356, 10.1936, 0.4048", "774.908, 574.398, 9.6568, 0.5332", "774.836, 575.44, 9.1555, 0.671", "775.392, 576.433, 8.673, 0.7252", "775.941, 577.404, 8.181, 0.6608", "776.546, 578.305, 7.6483, 0.656", "777.26, 579.14, 7.0966, 0.5466", "777.857, 580.076, 6.6039, 0.6032", "778.431, 581.026, 6.1846, 0.593", "779.196, 581.828, 5.7226, 0.4476", "779.96, 582.62, 5.2231, 0.3322", "780.364, 583.607, 4.7232, 0.287", "780.136, 584.679, 4.3017, 0.2988", "780.344, 585.387, 3.7945, 0.314", "781.355, 585.632, 3.1962, 0.3734", "782.315, 586.106, 2.5775, 0.3338", "782.376, 586.957, 1.88, 0.2994", "781.589, 587.763, 1.3337, 0.2742", "781.026, 588.757, 0.9463, 0.2736", "780.944, 589.896, 0.6905, 0.2728", "781.004, 591.036, 0.5766, 0.2712", "781.415, 592.1, 0.5712, 0.2684", "782.119, 592.999, 0.5794, 0.2626", "782.961, 593.769, 0.6151, 0.2542", "783.283, 594.834, 0.5458, 0.2288", "783.64, 595.91, 0.56, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "788.407, 551.243, 31.2259, 0.3264", "788.239, 552.044, 30.7812, 0.2288", "788.627, 553.077, 30.2767, 0.2754", "789.714, 553.329, 30.0406, 0.2762", "790.633, 553.746, 29.6554, 0.2776", "791.201, 554.728, 29.2678, 0.2806", "791.687, 555.76, 28.9128, 0.2854", "792.217, 556.753, 28.6339, 0.2942", "793.086, 557.43, 28.3973, 0.3124", "794.061, 557.919, 28.0916, 0.3394", "794.975, 558.596, 27.8026, 0.4194", "795.718, 559.435, 27.4656, 0.421", "796.296, 560.402, 27.079, 0.4528", "796.849, 561.396, 26.689, 0.6006", "797.383, 562.377, 26.2789, 0.6716", "797.773, 563.352, 25.7992, 0.6446", "798.031, 564.333, 25.2405, 0.4494", "798.316, 565.284, 24.8212, 0.3354", "798.805, 566.012, 24.7737, 0.293", "799.516, 566.692, 24.8001, 0.3084", "800.342, 567.342, 24.6527, 0.3396", "801.143, 568.061, 24.4006, 0.3844", "801.838, 568.957, 24.1179, 0.53", "802.552, 569.847, 23.8136, 0.497", "803.381, 570.62, 23.4832, 0.5338", "804.306, 571.264, 23.1567, 0.583", "805.249, 571.862, 22.838, 0.5392", "806.138, 572.536, 22.5252, 0.4258", "806.767, 573.436, 22.3206, 0.372", "806.758, 574.525, 22.2253, 0.428", "806.333, 575.58, 22.1879, 0.4614", "806.011, 576.673, 22.1971, 0.4074", "805.919, 577.784, 22.1497, 0.415", "805.937, 578.921, 22.0946, 0.3648", "805.954, 580.046, 22.1192, 0.3518", "805.859, 581.161, 22.218, 0.3976", "805.776, 582.294, 22.2721, 0.3734", "805.836, 583.426, 22.261, 0.3988", "805.868, 584.568, 22.2479, 0.334", "805.865, 585.712, 22.2126, 0.3", "806.337, 586.729, 22.1978, 0.2748", "807.309, 587.298, 22.1834, 0.2748", "808.304, 587.863, 22.1526, 0.2752", "809.119, 588.661, 22.1056, 0.2758", "809.983, 589.412, 22.0287, 0.2766", "810.936, 590.029, 21.8813, 0.2782", "811.919, 590.606, 21.6828, 0.2814", "812.873, 591.212, 21.4324, 0.287", "813.86, 591.742, 21.1329, 0.2988", "814.928, 592.096, 20.8192, 0.3142", "816.039, 592.363, 20.5706, 0.3738", "817.159, 592.558, 20.4273, 0.3346", "818.289, 592.72, 20.3377, 0.3012", "819.345, 593.157, 20.2599, 0.2768", "820.183, 593.914, 20.1217, 0.2786", "820.786, 594.825, 19.864, 0.2822", "821.662, 595.547, 19.5884, 0.2882", "822.638, 596.141, 19.3749, 0.3012", "823.545, 596.836, 19.2019, 0.3184", "824.163, 597.793, 19.0112, 0.3816", "824.33, 598.913, 18.7974, 0.3502", "824.552, 600.035, 18.6073, 0.3248", "824.839, 601.139, 18.4722, 0.3474", "824.965, 602.269, 18.3014, 0.2796", "825.053, 603.346, 17.64, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "788.407, 551.243, 31.2259, 0.3264", "788.407, 552.416, 31.1276, 0.2786", "788.407, 553.544, 31.131, 0.2818", "788.407, 554.688, 31.1452, 0.2882", "788.407, 555.831, 31.1301, 0.2994", "788.405, 556.972, 31.087, 0.323", "788.097, 558.037, 30.9378, 0.3538", "787.697, 559.107, 30.7723, 0.4724", "787.231, 560.124, 30.7182, 0.3936", "786.688, 561.129, 30.6522, 0.326", "786.118, 562.078, 30.5124, 0.2758" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "786.729, 532.166, 33.8209, 0.3", "786.348, 532.959, 33.8391, 0.2746", "785.755, 533.897, 33.9363, 0.2746", "784.911, 534.575, 34.1379, 0.2746", "784.004, 535.234, 34.3403, 0.2746", "783.282, 536.104, 34.4576, 0.2746", "782.764, 537.11, 34.4705, 0.2746", "782.338, 538.159, 34.3991, 0.2746", "781.956, 539.231, 34.2877, 0.2746", "781.607, 540.32, 34.1886, 0.2746", "781.298, 541.416, 34.1118, 0.2746", "781.122, 542.535, 34.0634, 0.2746", "781.082, 543.657, 34.1365, 0.2746", "781.072, 544.752, 34.3837, 0.2746", "781.0, 545.859, 34.7281, 0.2746", "780.85, 546.981, 35.091, 0.2748", "780.698, 548.103, 35.4486, 0.275", "780.609, 549.227, 35.786, 0.2754", "780.54, 550.36, 36.0637, 0.2762", "780.416, 551.494, 36.2345, 0.2776", "780.293, 552.624, 36.2944, 0.2802", "780.336, 553.747, 36.2698, 0.285", "780.477, 554.873, 36.2099, 0.2938", "780.438, 555.995, 36.2239, 0.3114", "780.266, 557.099, 36.3686, 0.3374", "780.195, 558.219, 36.6066, 0.4174", "780.231, 559.355, 36.8903, 0.4112", "780.367, 560.487, 37.1753, 0.463", "780.581, 561.61, 37.4338, 0.481", "780.811, 562.724, 37.6849, 0.4384", "781.039, 563.82, 37.9666, 0.4978", "781.28, 564.924, 38.248, 0.3934", "781.511, 566.04, 38.5003, 0.3256", "781.685, 567.163, 38.7229, 0.2748", "781.827, 568.293, 38.9066, 0.2752", "781.938, 569.431, 39.0275, 0.2758", "781.941, 570.569, 39.0578, 0.2768", "781.669, 571.632, 38.9631, 0.2786", "781.194, 572.641, 38.8016, 0.2822", "780.672, 573.645, 38.7044, 0.288", "780.15, 574.648, 38.7075, 0.3008", "779.881, 575.734, 38.7937, 0.3178", "780.015, 576.758, 39.0292, 0.3802", "780.177, 577.87, 39.1986, 0.3464", "779.996, 578.835, 39.0905, 0.3242", "779.521, 579.819, 38.845, 0.3142", "778.688, 580.571, 38.6845, 0.3734", "777.953, 581.444, 38.5311, 0.3338", "777.412, 582.446, 38.3956, 0.3", "776.901, 583.451, 38.2766, 0.2746", "776.347, 584.443, 38.2094, 0.2746", "775.513, 584.923, 38.4118, 0.2746", "774.82, 585.723, 38.668, 0.2746", "774.566, 586.81, 38.8833, 0.2746", "774.557, 587.954, 39.055, 0.2746", "774.557, 589.098, 39.1804, 0.2746", "774.557, 590.242, 39.2518, 0.2746", "774.557, 591.386, 39.2675, 0.2746", "774.557, 592.53, 39.2683, 0.2746", "774.557, 593.674, 39.2694, 0.2746", "774.557, 594.818, 39.2711, 0.2746", "774.557, 595.962, 39.2734, 0.2746", "774.557, 597.106, 39.2764, 0.2746", "774.557, 598.25, 39.2809, 0.2746", "774.557, 599.394, 39.2871, 0.2746", "774.557, 600.538, 39.2955, 0.2746", "774.557, 601.682, 39.3075, 0.2746", "774.557, 602.826, 39.3243, 0.2746", "774.526, 603.969, 39.3478, 0.2746", "774.383, 605.102, 39.3798, 0.2746", "774.006, 606.17, 39.426, 0.2746", "773.453, 607.17, 39.4915, 0.2746", "773.116, 608.236, 39.5816, 0.2746", "772.929, 609.362, 39.7009, 0.2746", "772.623, 610.464, 39.8552, 0.2746", "772.098, 611.336, 40.1638, 0.2746", "771.496, 612.262, 40.5168, 0.2746", "770.983, 613.272, 40.9077, 0.2748", "771.029, 614.365, 41.3574, 0.2748", "771.353, 615.376, 41.8877, 0.2752", "771.427, 616.505, 42.3651, 0.2758", "771.943, 617.468, 42.8632, 0.2766", "772.582, 618.293, 43.4118, 0.2782", "772.989, 619.324, 43.9219, 0.2814", "773.653, 620.145, 44.5066, 0.2872", "774.138, 620.978, 45.2802, 0.299", "774.488, 622.02, 46.1084, 0.3144", "774.533, 623.102, 46.9857, 0.374", "774.326, 624.173, 47.9077, 0.335", "774.344, 625.238, 48.8925, 0.3022", "774.555, 626.253, 49.9321, 0.2786", "774.692, 627.197, 51.0387, 0.2818", "774.422, 628.023, 52.2354, 0.2882", "774.216, 628.828, 53.4531, 0.2994", "774.687, 629.773, 54.518, 0.3228", "775.289, 630.724, 55.3899, 0.3534", "775.552, 631.797, 56.1288, 0.4722", "775.53, 632.928, 56.7356, 0.3934", "775.367, 634.055, 57.2289, 0.3254", "775.258, 635.0, 57.7892, 0.2744", "775.279, 635.723, 58.5382, 0.2742", "775.18, 636.78, 59.1956, 0.2742", "775.142, 637.916, 59.6095, 0.2736", "775.156, 639.022, 59.7537, 0.2728", "775.463, 640.042, 59.656, 0.2712", "775.88, 641.035, 59.3886, 0.2684", "776.03, 642.158, 59.171, 0.2626", "775.629, 643.05, 59.2435, 0.2542", "774.555, 643.368, 59.4118, 0.2288", "773.756, 644.185, 59.8615, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "786.729, 532.166, 33.8209, 0.3", "786.594, 533.093, 35.35, 0.2288", "786.832, 534.141, 35.8613, 0.2752", "786.947, 535.249, 36.0906, 0.2758", "786.841, 536.231, 36.0993, 0.2768", "787.15, 537.286, 36.1721, 0.2786", "787.63, 538.212, 36.4372, 0.2822", "788.256, 539.143, 36.7564, 0.288", "788.941, 540.054, 37.0633, 0.3006", "789.449, 541.065, 37.3808, 0.3178", "789.726, 542.162, 37.7507, 0.3802", "790.053, 543.228, 38.1279, 0.3464", "790.698, 544.16, 38.4784, 0.323", "791.472, 544.986, 38.8567, 0.318", "792.236, 545.801, 39.3008, 0.3508", "792.98, 546.65, 39.7659, 0.4372", "793.478, 547.646, 40.2262, 0.4722", "793.664, 548.754, 40.74, 0.4582", "793.843, 549.843, 41.3364, 0.3594", "794.205, 550.874, 42.0048, 0.3", "794.729, 551.828, 42.7473, 0.2746", "794.994, 552.846, 43.5361, 0.2746", "794.812, 553.928, 44.3484, 0.2746", "794.728, 554.914, 45.246, 0.2746", "795.18, 555.776, 46.2011, 0.2746", "795.955, 556.58, 47.094, 0.2746", "796.586, 557.493, 47.9287, 0.2746", "797.076, 558.448, 48.7948, 0.2746", "797.362, 559.333, 49.7672, 0.2746", "797.718, 560.214, 50.7749, 0.2746", "798.394, 561.082, 51.7345, 0.2746", "799.058, 561.925, 52.6882, 0.2746", "799.552, 562.854, 53.632, 0.2746", "799.891, 563.901, 54.5023, 0.2746", "800.243, 564.948, 55.3, 0.2746", "800.612, 565.944, 56.0944, 0.2746", "800.913, 566.939, 56.9052, 0.2746", "801.068, 568.018, 57.6419, 0.2746", "801.006, 569.151, 58.2344, 0.2746", "800.658, 570.219, 58.7353, 0.2746", "800.398, 571.258, 59.2446, 0.2746", "800.537, 572.324, 59.7598, 0.2744", "800.626, 573.435, 60.1672, 0.2744", "800.249, 574.424, 60.566, 0.2742", "799.885, 575.465, 60.9655, 0.2742", "799.59, 576.563, 61.2662, 0.2736", "799.073, 577.516, 61.5854, 0.2728", "798.336, 578.333, 61.8324, 0.2712", "797.454, 579.021, 62.1001, 0.2684", "796.765, 579.846, 62.4702, 0.2626", "795.787, 580.407, 62.7511, 0.2542", "794.772, 580.861, 63.0874, 0.2288", "794.05, 581.61, 64.12, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "750.407, 522.856, 33.0988, 0.4344", "750.133, 522.942, 32.9034, 0.3546", "749.042, 523.283, 32.7746, 0.331", "747.966, 523.669, 32.6799, 0.3684", "746.913, 524.117, 32.6088, 0.5006", "745.851, 524.542, 32.5461, 0.4404", "744.763, 524.892, 32.4654, 0.4386", "743.667, 525.217, 32.3512, 0.36", "742.59, 525.572, 32.1818, 0.3502", "741.489, 525.802, 31.9542, 0.3576", "740.357, 525.85, 31.719, 0.4794", "739.215, 525.896, 31.533, 0.4062", "738.179, 526.294, 31.3356, 0.3508", "737.14, 526.755, 31.1382, 0.3164", "736.038, 526.966, 31.0394, 0.3776", "734.93, 527.211, 31.001, 0.3416", "733.833, 527.506, 30.9086, 0.3142", "732.745, 527.79, 30.7196, 0.3008", "731.723, 528.281, 30.49, 0.3242", "730.77, 528.911, 30.2495, 0.3624", "729.783, 529.49, 29.9944, 0.4574", "728.826, 530.039, 29.6369, 0.517", "727.886, 530.579, 29.185, 0.5058", "726.887, 531.103, 28.7308, 0.6208", "725.884, 531.646, 28.3086, 0.6312", "724.924, 532.268, 27.9261, 0.7188", "723.961, 532.881, 27.5535, 0.5504", "722.964, 533.371, 27.123, 0.4694", "721.945, 533.796, 26.6284, 0.5714", "720.896, 534.124, 26.0712, 0.453", "719.802, 534.271, 25.4799, 0.3518", "718.705, 534.405, 24.8779, 0.2762", "717.728, 534.933, 24.3114, 0.2776", "717.139, 535.893, 23.8392, 0.2802", "716.829, 536.984, 23.4321, 0.285", "716.65, 538.102, 23.0623, 0.294", "716.662, 539.242, 22.7419, 0.3102", "716.804, 540.376, 22.4727, 0.3426", "716.774, 541.516, 22.2099, 0.3914", "716.361, 542.559, 21.8971, 0.5368", "715.697, 543.476, 21.5622, 0.5396", "714.928, 544.321, 21.243, 0.4678", "714.19, 545.19, 20.9092, 0.4756", "713.593, 546.134, 20.5049, 0.4976", "712.929, 547.044, 20.0665, 0.4996", "711.938, 547.531, 19.5796, 0.4618", "710.834, 547.708, 19.0726, 0.3664", "709.716, 547.838, 18.5665, 0.3124", "708.587, 547.791, 18.0843, 0.2988", "707.461, 547.665, 17.6336, 0.3142", "706.352, 547.415, 17.2174, 0.3736", "705.267, 547.07, 16.8367, 0.3346", "704.257, 546.573, 16.4441, 0.3012", "703.345, 545.952, 16.0082, 0.2762", "702.349, 545.436, 15.5803, 0.2778", "701.311, 544.983, 15.1994, 0.2806", "700.432, 544.29, 14.8435, 0.2854", "699.644, 543.493, 14.5268, 0.2966", "698.835, 542.685, 14.3205, 0.305", "697.935, 541.997, 14.2757, 0.3814", "696.839, 542.087, 14.6829, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "750.407, 522.856, 33.0988, 0.4344", "749.918, 523.941, 33.3136, 0.2814", "749.49, 524.994, 33.2231, 0.287", "749.066, 526.052, 33.1657, 0.2988", "748.51, 527.039, 33.1296, 0.3142", "748.073, 528.065, 33.0798, 0.3734", "747.833, 529.17, 32.9484, 0.3338", "747.357, 530.171, 32.769, 0.3", "746.629, 531.045, 32.5668, 0.2746", "745.848, 531.872, 32.3501, 0.2746", "744.984, 532.612, 32.1404, 0.2746", "744.051, 533.271, 31.9794, 0.2746", "743.114, 533.914, 31.9066, 0.2746", "742.276, 534.433, 31.7372, 0.2746", "741.537, 535.168, 31.5277, 0.2746", "740.803, 536.041, 31.4311, 0.2748", "740.094, 536.928, 31.411, 0.2748", "739.356, 537.784, 31.5224, 0.2752", "738.859, 538.588, 31.9194, 0.2758", "738.85, 539.651, 32.4349, 0.2766", "738.638, 540.689, 33.0411, 0.2782", "738.163, 541.702, 33.6048, 0.2814", "737.782, 542.779, 34.0413, 0.2872", "737.385, 543.847, 34.3347, 0.299", "736.861, 544.859, 34.5775, 0.3146", "736.338, 545.853, 34.8471, 0.3744", "735.834, 546.863, 35.1358, 0.3358", "735.515, 547.94, 35.4631, 0.3036", "735.105, 549.002, 35.7899, 0.2812", "734.486, 549.945, 36.0102, 0.2866", "734.026, 550.989, 36.2261, 0.2972", "734.051, 552.11, 36.4974, 0.3174", "734.132, 553.21, 36.8446, 0.3498", "733.81, 554.247, 37.2602, 0.4342", "733.177, 555.182, 37.6564, 0.473", "732.385, 556.008, 37.9691, 0.4296", "731.551, 556.789, 38.1788, 0.4508", "730.69, 557.542, 38.2973, 0.457", "729.851, 558.321, 38.3454, 0.3988", "729.087, 559.172, 38.3482, 0.3988", "728.307, 560.01, 38.3303, 0.3338", "727.455, 560.772, 38.3023, 0.2994", "726.546, 561.467, 38.2623, 0.2742", "725.571, 562.065, 38.2063, 0.2736", "724.572, 562.622, 38.1312, 0.2728", "723.552, 563.142, 38.0195, 0.2712", "722.539, 563.672, 37.875, 0.2684", "721.688, 564.412, 37.6438, 0.2626", "720.872, 565.183, 37.3439, 0.2542", "719.76, 565.444, 37.0706, 0.2288", "718.815, 565.893, 36.1427, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "765.21, 518.126, 4.7292, 0.4166", "764.378, 519.241, 5.288, 0.4424", "763.701, 520.151, 5.5649, 0.5852", "762.916, 520.978, 5.6101, 0.6262", "761.973, 521.622, 5.5121, 0.6426", "760.944, 522.122, 5.3312, 0.7328", "759.81, 522.263, 5.1095, 0.612", "758.716, 522.061, 4.8203, 0.64", "757.674, 521.953, 4.4194, 0.614", "756.623, 521.917, 3.9563, 0.4866", "755.51, 521.696, 3.5812, 0.4058", "754.466, 521.334, 3.4414, 0.4158", "753.438, 521.047, 3.5227, 0.5764", "752.441, 520.67, 3.7543, 0.6394", "751.303, 520.559, 3.9062, 0.5238", "750.216, 520.363, 3.8498, 0.5244", "749.132, 520.047, 3.6307, 0.3954", "748.038, 519.752, 3.2712, 0.3298", "746.915, 519.794, 2.8017, 0.2824", "745.814, 519.98, 2.2767, 0.2882", "744.836, 520.363, 1.6821, 0.305", "743.817, 520.567, 1.0581, 0.305", "742.673, 520.568, 0.1254, 0.4576" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "765.21, 518.126, 4.7292, 0.4166", "764.06, 517.899, 5.3298, 0.2962", "762.979, 517.947, 4.4747, 0.3164", "761.875, 518.117, 4.1087, 0.3464", "760.762, 518.334, 3.7353, 0.4354", "759.637, 518.486, 3.3762, 0.4376", "758.571, 518.123, 3.0413, 0.546", "758.143, 517.088, 2.7513, 0.4722", "757.551, 516.118, 2.4862, 0.523", "756.626, 515.449, 2.2666, 0.393", "755.697, 514.857, 2.1792, 0.3252", "754.593, 514.634, 2.0033, 0.2742", "753.654, 514.981, 1.6267, 0.2736", "752.556, 515.215, 1.2235, 0.2728", "751.449, 515.199, 0.7956, 0.2712", "750.31, 515.093, 0.4617, 0.2684", "749.178, 515.262, 0.2197, 0.2626", "748.05, 515.45, 0.0802, 0.2542", "746.906, 515.459, 0.0213, 0.2288", "745.828, 515.073, 0.0, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "1069.9, 181.46, 98.8249, 0.2746", "1070.23, 180.755, 98.98, 0.2746", "1070.7, 179.727, 99.2057, 0.2746", "1071.18, 178.699, 99.4809, 0.2746", "1071.65, 177.67, 99.7903, 0.2746", "1072.08, 176.614, 100.095, 0.2746", "1072.5, 175.553, 100.388, 0.2746", "1072.92, 174.491, 100.669, 0.2746", "1073.34, 173.429, 100.942, 0.2746", "1073.64, 172.34, 101.251, 0.2746", "1073.89, 171.248, 101.601, 0.2746", "1074.14, 170.154, 101.98, 0.2746", "1074.39, 169.061, 102.368, 0.2746", "1074.48, 167.924, 102.702, 0.2746", "1074.48, 166.78, 102.955, 0.2746", "1074.48, 165.636, 103.146, 0.2746", "1074.48, 164.492, 103.299, 0.2746", "1074.48, 163.348, 103.44, 0.2746", "1074.49, 162.204, 103.591, 0.2746", "1074.79, 161.127, 103.848, 0.2746", "1075.1, 160.05, 104.19, 0.2746", "1075.41, 158.974, 104.595, 0.2746", "1075.74, 157.901, 105.036, 0.2746", "1076.4, 156.967, 105.419, 0.2746", "1077.06, 156.036, 105.754, 0.2746", "1077.59, 155.042, 106.122, 0.2746", "1078.07, 154.036, 106.545, 0.2746", "1078.54, 153.032, 107.007, 0.2746", "1079.02, 152.027, 107.493, 0.2746", "1079.49, 151.023, 107.989, 0.2746", "1079.97, 150.017, 108.464, 0.2746", "1080.42, 148.969, 108.821, 0.2746", "1080.87, 147.92, 109.071, 0.2746", "1081.32, 146.87, 109.232, 0.2746", "1081.77, 145.821, 109.324, 0.2746" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "1069.9, 181.46, 98.8249, 0.2746", "1070.74, 181.37, 99.1712, 0.2288", "1071.81, 181.254, 100.533, 0.2746", "1072.89, 181.141, 101.114, 0.2746", "1073.96, 181.024, 101.798, 0.2746", "1075.04, 180.91, 102.539, 0.2746", "1076.09, 180.725, 103.315, 0.2746", "1077.11, 180.473, 104.097, 0.2746", "1078.16, 180.03, 104.729, 0.2746", "1079.18, 179.522, 105.227, 0.2746", "1080.08, 178.813, 105.615, 0.2746", "1080.82, 177.94, 105.947, 0.2746", "1081.33, 176.919, 106.277, 0.2746", "1081.99, 175.985, 106.69, 0.2746", "1082.72, 175.107, 107.243, 0.2746", "1083.44, 174.23, 107.944, 0.2746" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "1109.39, 191.643, 80.6943, 0.2746", "1110.36, 191.449, 80.001, 0.2288", "1111.48, 191.227, 79.5242, 0.2758", "1112.6, 191.002, 79.3318, 0.2768", "1113.72, 190.836, 79.0846, 0.2786", "1114.84, 190.863, 78.7548, 0.2822", "1115.94, 191.008, 78.3432, 0.288", "1117.06, 190.949, 77.9078, 0.3008", "1118.1, 190.51, 77.4889, 0.3178", "1118.95, 189.77, 77.0658, 0.3802", "1119.67, 188.895, 76.585, 0.3464", "1120.47, 188.164, 75.9912, 0.3242", "1121.44, 187.766, 75.2606, 0.3142", "1122.33, 187.346, 74.3764, 0.3738", "1122.72, 186.55, 73.3597, 0.3346", "1122.77, 185.502, 72.3439, 0.3012", "1123.01, 184.423, 71.4204, 0.2766", "1123.8, 183.693, 70.5986, 0.2784", "1124.87, 183.637, 69.8426, 0.2818", "1125.94, 183.934, 69.1188, 0.288", "1127.04, 184.147, 68.4309, 0.3004", "1128.18, 184.199, 67.774, 0.3174", "1129.27, 184.072, 67.0513, 0.3794", "1130.12, 183.736, 66.1441, 0.3448", "1130.93, 183.422, 65.0852, 0.3204", "1131.85, 183.212, 63.978, 0.312", "1132.87, 182.823, 62.9782, 0.347", "1133.83, 182.214, 62.1762, 0.3934", "1134.85, 181.745, 61.5266, 0.5714", "1135.93, 181.553, 60.9745, 0.4528", "1137.05, 181.609, 60.5226, 0.3512", "1138.18, 181.649, 60.1658, 0.2752", "1139.27, 181.303, 59.9144, 0.2758", "1140.32, 180.856, 59.7548, 0.277", "1141.37, 180.406, 59.6753, 0.279", "1142.42, 179.956, 59.6596, 0.2828", "1143.54, 179.734, 59.687, 0.2896", "1144.69, 179.742, 59.7444, 0.3036", "1145.83, 179.816, 59.8251, 0.3232", "1146.96, 179.908, 59.9315, 0.3902", "1148.07, 180.182, 60.1059, 0.3664", "1149.13, 180.563, 60.3548, 0.3544", "1150.18, 180.957, 60.6564, 0.4022", "1151.24, 181.329, 60.9834, 0.382", "1152.36, 181.563, 61.2816, 0.4146", "1153.48, 181.767, 61.5152, 0.3642", "1154.52, 182.127, 61.6162, 0.351", "1155.65, 182.339, 61.7548, 0.3946", "1156.76, 182.372, 62.0623, 0.374", "1157.87, 182.338, 62.5114, 0.3706", "1158.99, 182.266, 63.091, 0.4254", "1159.96, 181.856, 63.8686, 0.457", "1161.01, 181.473, 64.7214, 0.3988", "1162.04, 181.037, 65.6354, 0.3988", "1162.84, 180.416, 66.6971, 0.3338", "1163.56, 179.932, 67.9451, 0.3", "1164.32, 179.688, 69.3395, 0.2746", "1165.12, 179.71, 70.7974, 0.2746", "1165.99, 179.962, 72.2128, 0.2748", "1166.89, 180.282, 73.5059, 0.275", "1167.88, 180.539, 74.5998, 0.2752", "1169.0, 180.624, 75.3959, 0.2758", "1169.99, 181.036, 75.7364, 0.2768", "1171.04, 181.436, 75.8117, 0.2796", "1172.14, 181.755, 75.7814, 0.2796", "1173.19, 182.204, 75.7025, 0.305", "1174.33, 182.376, 75.5656, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "1109.39, 191.643, 80.6943, 0.2746", "1110.46, 191.082, 81.0236, 0.2746", "1111.45, 190.559, 81.4271, 0.2746", "1112.44, 190.036, 81.8938, 0.2746", "1113.4, 189.46, 82.4096, 0.2746", "1114.32, 188.838, 82.9581, 0.2746", "1115.24, 188.207, 83.5176, 0.2746", "1116.15, 187.571, 84.065, 0.2748", "1116.77, 186.634, 84.5743, 0.2748", "1117.32, 185.651, 85.0349, 0.2752", "1117.87, 184.666, 85.4501, 0.2758", "1118.31, 183.619, 85.8133, 0.2766", "1118.42, 182.481, 86.0972, 0.2782", "1118.67, 181.382, 86.2621, 0.2814", "1119.14, 180.412, 86.2977, 0.287", "1119.91, 179.662, 86.539, 0.2988", "1120.68, 178.888, 86.9501, 0.3142", "1121.43, 178.084, 87.4854, 0.3734", "1122.2, 177.395, 88.1829, 0.3338", "1122.95, 176.583, 88.9062, 0.3", "1123.93, 176.145, 89.6473, 0.2746", "1124.97, 175.961, 90.3577, 0.2746" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "1083.14, 187.365, 86.9221, 0.2748", "1083.81, 186.485, 87.043, 0.2752", "1084.4, 185.521, 87.1198, 0.2758", "1084.89, 184.502, 87.0769, 0.2766", "1084.87, 183.593, 86.8322, 0.2782", "1084.18, 182.781, 86.4548, 0.2814", "1083.66, 181.807, 86.0838, 0.287", "1083.61, 180.693, 85.7245, 0.2988", "1083.87, 179.593, 85.3782, 0.3142", "1084.23, 178.517, 85.0752, 0.3734", "1084.52, 177.419, 84.8296, 0.3338", "1084.62, 176.293, 84.6185, 0.3", "1084.66, 175.159, 84.4402, 0.2746", "1084.79, 174.025, 84.3259, 0.2746", "1084.95, 172.896, 84.3105, 0.2746", "1085.03, 171.796, 84.4382, 0.2746", "1084.94, 170.713, 84.691, 0.2748", "1084.74, 169.607, 84.9467, 0.2748", "1084.46, 168.51, 85.092, 0.2752", "1083.96, 167.512, 85.1077, 0.2758", "1083.48, 166.488, 85.0584, 0.2766", "1083.29, 165.377, 85.02, 0.2786", "1083.26, 164.245, 85.027, 0.2818", "1083.22, 163.113, 85.0147, 0.2882", "1083.05, 162.004, 84.9324, 0.2994", "1082.77, 160.911, 84.8221, 0.3228", "1082.55, 159.792, 84.7378, 0.3534", "1082.52, 158.652, 84.6992, 0.4724", "1082.57, 157.51, 84.7092, 0.3934", "1082.56, 156.369, 84.7655, 0.3254", "1082.5, 155.226, 84.8571, 0.2746", "1082.57, 154.088, 84.9708, 0.2748", "1082.87, 152.991, 85.0998, 0.2748", "1083.54, 152.087, 85.2597, 0.2752", "1084.34, 151.324, 85.5207, 0.2758", "1084.91, 150.399, 85.8794, 0.2766", "1085.39, 149.379, 86.2546, 0.2782", "1085.78, 148.308, 86.5841, 0.2814", "1086.11, 147.213, 86.8454, 0.287", "1086.54, 146.159, 87.061, 0.2988", "1087.23, 145.265, 87.2374, 0.3142", "1088.24, 144.751, 87.3247, 0.3734", "1089.34, 144.443, 87.3933, 0.3338", "1090.36, 143.939, 87.4804, 0.3", "1091.24, 143.229, 87.5171, 0.2746", "1091.99, 142.379, 87.5162, 0.2746", "1092.6, 141.413, 87.5409, 0.2746", "1093.09, 140.386, 87.6436, 0.2746", "1093.42, 139.313, 87.8447, 0.2746", "1093.52, 138.201, 88.1227, 0.2746", "1093.49, 137.075, 88.4386, 0.2746", "1093.63, 135.945, 88.7331, 0.2746", "1093.94, 134.846, 88.9582, 0.2746", "1094.27, 133.752, 89.0918, 0.2746", "1094.53, 132.645, 89.1458, 0.2746", "1094.74, 131.52, 89.2063, 0.2746", "1094.93, 130.397, 89.315, 0.2746", "1094.95, 129.255, 89.4516, 0.2746", "1094.61, 128.168, 89.6126, 0.2746", "1094.09, 127.153, 89.8377, 0.2746", "1093.61, 126.14, 90.1547, 0.2746", "1093.26, 125.078, 90.5341, 0.2746", "1092.99, 123.984, 90.9454, 0.2746", "1092.67, 122.893, 91.3472, 0.2746", "1092.27, 121.823, 91.7031, 0.2746", "1091.81, 120.781, 92.0545, 0.2746", "1091.33, 119.783, 92.4546, 0.2746", "1090.9, 118.771, 92.9001, 0.2746", "1090.46, 117.729, 93.3304, 0.2746", "1089.78, 116.81, 93.6972, 0.2746", "1088.86, 116.14, 94.0092, 0.2746", "1087.95, 115.459, 94.3197, 0.2746", "1087.15, 114.665, 94.6576, 0.2746", "1086.36, 113.84, 94.9838, 0.2746", "1085.8, 112.898, 95.3898, 0.2746", "1085.26, 111.913, 95.8196, 0.2746", "1084.61, 110.97, 96.1786, 0.2746", "1084.13, 109.933, 96.493, 0.2746", "1083.74, 108.868, 96.8013, 0.2746", "1083.63, 107.81, 97.1998, 0.2746", "1083.27, 106.729, 97.5402, 0.2746", "1082.9, 105.651, 97.8295, 0.2746", "1082.53, 104.573, 98.0722, 0.2746", "1082.16, 103.494, 98.2598, 0.2746", "1081.68, 102.456, 98.3475, 0.2748", "1081.18, 101.427, 98.3461, 0.2748", "1080.69, 100.398, 98.2887, 0.2752", "1080.13, 99.401, 98.1739, 0.2758", "1079.56, 98.4135, 98.0129, 0.2766", "1078.99, 97.4252, 97.8205, 0.2782", "1078.41, 96.4377, 97.6116, 0.2814", "1077.87, 95.442, 97.3672, 0.287", "1077.33, 94.4464, 97.1001, 0.2988", "1076.8, 93.4499, 96.826, 0.3142", "1076.32, 92.419, 96.5636, 0.3734", "1076.32, 91.275, 96.3701, 0.3338", "1076.32, 90.131, 96.2346, 0.3", "1076.32, 88.987, 96.1447, 0.2746", "1076.28, 87.8434, 96.0831, 0.2746", "1076.02, 86.7293, 96.0322, 0.2746", "1075.76, 85.6157, 95.9745, 0.2744", "1075.5, 84.5021, 95.8964, 0.2744", "1075.24, 83.3886, 95.7944, 0.2742", "1075.03, 82.2678, 95.6337, 0.2742", "1074.89, 81.1526, 95.3893, 0.2736", "1074.75, 80.0373, 95.0888, 0.2728", "1074.61, 78.922, 94.7584, 0.2712", "1074.46, 77.8046, 94.4294, 0.2684", "1074.24, 76.6824, 94.1886, 0.2626", "1074.02, 75.5606, 94.0299, 0.2542", "1073.79, 74.4389, 93.9386, 0.2288", "1073.57, 73.3171, 93.8843, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "1083.14, 187.365, 86.9221, 0.2748", "1083.78, 186.361, 87.6991, 0.2746", "1084.37, 185.421, 88.6928, 0.2746", "1084.97, 184.481, 89.1153, 0.2746", "1085.7, 183.639, 89.6185, 0.2746", "1086.54, 182.913, 90.1734, 0.2746", "1087.38, 182.187, 90.7539, 0.2746", "1088.22, 181.46, 91.3346, 0.2746" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "786.118, 562.078, 30.5124, 0.2758", "786.809, 562.988, 30.4083, 0.2768", "787.501, 563.897, 30.3372, 0.2786", "788.099, 564.853, 30.3674, 0.2822", "788.65, 565.846, 30.4564, 0.2882", "789.548, 566.456, 30.6718, 0.2998", "790.609, 566.846, 30.7737, 0.3232", "791.693, 567.167, 30.7594, 0.3548", "792.791, 567.485, 30.718, 0.4744", "793.81, 567.808, 30.7692, 0.3968", "794.715, 568.492, 30.6919, 0.3322", "795.519, 569.198, 30.4265, 0.287", "796.396, 569.874, 30.0888, 0.2988", "797.296, 570.569, 29.7629, 0.3142", "798.227, 571.227, 29.4608, 0.3734", "799.214, 571.78, 29.171, 0.3338", "800.204, 572.35, 28.9632, 0.3", "801.15, 572.977, 28.894, 0.2746", "802.162, 573.495, 28.9058, 0.2746", "803.247, 573.861, 28.9268, 0.2748", "804.313, 574.267, 28.9237, 0.2748", "805.304, 574.823, 28.8674, 0.2752", "806.362, 575.257, 28.791, 0.2758", "807.41, 575.702, 28.7347, 0.2766", "808.362, 576.322, 28.7067, 0.2782", "809.324, 576.938, 28.6541, 0.2814", "810.264, 577.558, 28.4967, 0.287", "811.133, 578.248, 28.2279, 0.2988", "812.082, 578.874, 27.9348, 0.3144", "813.144, 579.285, 27.6421, 0.374", "814.154, 579.75, 27.2757, 0.3348", "815.153, 580.283, 26.9099, 0.3016", "816.177, 580.765, 26.5612, 0.2776", "817.116, 581.383, 26.212, 0.2802", "817.987, 582.117, 25.8983, 0.2854", "818.878, 582.83, 25.6332, 0.294", "819.85, 583.421, 25.4017, 0.3114", "820.829, 583.986, 25.1905, 0.3386", "821.558, 584.83, 25.0141, 0.4136", "821.898, 585.92, 24.8935, 0.4338", "822.242, 586.996, 24.8287, 0.3616", "822.996, 587.802, 24.8266, 0.304", "824.072, 588.112, 24.8694, 0.2818", "825.206, 588.198, 24.9182, 0.288", "826.229, 588.638, 24.9471, 0.2994", "827.05, 589.427, 24.9473, 0.3216", "827.707, 590.354, 24.9373, 0.3574", "828.256, 591.354, 24.9048, 0.4496", "829.053, 592.039, 24.8753, 0.4952", "830.098, 592.454, 24.8884, 0.5016", "830.986, 593.157, 24.9555, 0.4354", "831.734, 594.005, 25.0842, 0.4626", "832.404, 594.917, 25.1998, 0.4722", "833.121, 595.795, 25.2547, 0.4582", "833.967, 596.546, 25.3149, 0.3594", "834.931, 597.104, 25.4465, 0.3", "835.938, 597.595, 25.6154, 0.2746", "836.917, 598.176, 25.7296, 0.2746", "837.796, 598.895, 25.7871, 0.2746", "838.573, 599.732, 25.8316, 0.2746", "839.343, 600.574, 25.8609, 0.2746", "840.207, 601.31, 25.8436, 0.2746", "841.22, 601.814, 25.7686, 0.2746", "842.325, 602.084, 25.651, 0.2746", "843.453, 602.201, 25.482, 0.2746", "844.569, 602.364, 25.2687, 0.2746", "845.486, 602.953, 25.066, 0.2746", "846.299, 603.729, 24.8493, 0.2746", "847.224, 604.362, 24.5881, 0.2746", "848.112, 605.055, 24.335, 0.2746", "848.842, 605.925, 24.1262, 0.2746", "849.452, 606.892, 23.9666, 0.2746", "850.081, 607.846, 23.8571, 0.2746", "850.831, 608.697, 23.7739, 0.2748", "851.729, 609.369, 23.6863, 0.2748", "852.733, 609.89, 23.6338, 0.275", "853.645, 610.489, 23.7261, 0.2754", "854.258, 611.342, 23.9749, 0.2762", "854.613, 612.399, 24.2467, 0.2778", "854.999, 613.472, 24.4627, 0.2806", "855.387, 614.548, 24.61, 0.2854", "855.593, 615.668, 24.6839, 0.2944", "855.743, 616.801, 24.6878, 0.3124", "856.091, 617.863, 24.5975, 0.3404", "856.597, 618.83, 24.4042, 0.4172", "857.18, 619.793, 24.235, 0.4402", "857.907, 620.602, 24.2309, 0.3732", "858.818, 621.145, 24.3894, 0.3252", "859.838, 621.615, 24.574, 0.3236", "860.779, 622.176, 24.6169, 0.355", "861.728, 622.79, 24.5921, 0.4748", "862.734, 623.172, 24.4274, 0.3978", "863.825, 623.493, 24.2877, 0.3336", "864.816, 623.986, 24.3111, 0.291", "865.922, 624.151, 24.3019, 0.2994", "867.055, 624.075, 24.4145, 0.3474", "868.067, 623.653, 24.6709, 0.2796", "869.097, 623.251, 25.48, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "786.118, 562.078, 30.5124, 0.2758", "785.435, 563.029, 29.6979, 0.2776", "784.946, 564.057, 30.2767, 0.2802", "784.65, 565.157, 30.5158, 0.285", "784.365, 566.217, 30.919, 0.2938", "784.126, 567.268, 31.4751, 0.3112", "783.976, 568.344, 32.1376, 0.3382", "784.12, 569.466, 32.8084, 0.413", "784.267, 570.595, 33.4452, 0.4328", "784.222, 571.672, 34.1555, 0.3594", "783.981, 572.637, 34.9868, 0.3", "783.74, 573.698, 35.8288, 0.2746", "783.284, 574.701, 36.6212, 0.2746", "782.403, 575.294, 37.4424, 0.2746", "781.682, 575.778, 38.3944, 0.2746", "780.925, 576.306, 39.3162, 0.2746", "779.99, 576.631, 40.0417, 0.2746", "779.096, 576.267, 40.7585, 0.2746", "778.101, 575.891, 41.2602, 0.2746", "777.123, 576.259, 41.538, 0.2746", "776.586, 577.174, 41.7917, 0.2746", "776.441, 578.206, 42.1739, 0.2746", "776.191, 579.191, 42.6835, 0.2746", "775.558, 580.072, 43.1351, 0.2746", "774.836, 580.906, 43.423, 0.2746", "774.323, 581.886, 43.7038, 0.2746", "773.943, 582.893, 44.0787, 0.2746", "773.313, 583.807, 44.4522, 0.2746", "772.548, 584.651, 44.7703, 0.2746", "771.665, 585.328, 45.1651, 0.2746", "770.749, 585.949, 45.6568, 0.2746", "769.834, 586.602, 46.167, 0.2746", "768.916, 587.256, 46.6822, 0.2746", "767.994, 587.795, 47.2858, 0.2746", "766.983, 588.216, 47.9251, 0.2746", "765.901, 588.564, 48.4786, 0.2746", "765.026, 589.272, 48.9572, 0.2746", "764.328, 590.041, 49.5382, 0.2746", "763.749, 590.942, 50.1788, 0.2746", "762.975, 591.78, 50.7329, 0.2746", "762.185, 592.595, 51.2691, 0.2744", "761.397, 593.384, 51.8406, 0.2744", "760.85, 594.281, 52.4902, 0.2742", "760.414, 595.214, 53.1896, 0.2742", "760.411, 596.336, 53.8182, 0.2736", "760.411, 597.46, 54.3858, 0.2728", "760.411, 598.601, 54.8419, 0.2712", "760.411, 599.745, 55.1673, 0.2684", "760.411, 600.889, 55.3876, 0.2626", "760.411, 602.022, 55.5954, 0.2542", "760.411, 603.149, 55.818, 0.2288", "760.411, 604.288, 56.282, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "1081.77, 145.821, 109.324, 0.2746", "1081.66, 145.653, 109.246, 0.2746", "1081.23, 144.685, 109.008, 0.2746", "1081.07, 143.557, 108.823, 0.2746", "1081.29, 142.45, 108.731, 0.2746", "1081.85, 141.48, 108.75, 0.2746", "1082.32, 140.473, 108.765, 0.2746", "1082.37, 139.471, 108.681, 0.2746", "1082.05, 138.379, 108.72, 0.2746", "1081.71, 137.296, 108.848, 0.2746", "1081.47, 136.184, 109.023, 0.2746", "1081.43, 135.059, 109.292, 0.2746", "1081.43, 133.994, 109.729, 0.2746", "1081.43, 132.951, 110.291, 0.2746", "1081.45, 131.838, 110.823, 0.2746", "1081.52, 130.7, 111.249, 0.2746", "1081.8, 129.605, 111.571, 0.2746", "1082.3, 128.579, 111.79, 0.2746", "1082.72, 127.517, 111.925, 0.2746", "1083.04, 126.418, 112.018, 0.2746", "1083.45, 125.359, 112.125, 0.2746", "1084.08, 124.432, 112.274, 0.2746", "1084.9, 123.638, 112.412, 0.2746", "1085.73, 122.876, 112.544, 0.2746", "1086.7, 122.343, 112.754, 0.2746", "1087.68, 121.869, 113.037, 0.2746", "1088.58, 121.304, 113.234, 0.2746", "1089.23, 120.67, 113.159, 0.2746", "1089.69, 119.807, 113.022, 0.2746", "1090.29, 118.912, 113.109, 0.2746", "1090.79, 118.007, 113.442, 0.2746", "1091.09, 116.969, 113.951, 0.2746", "1091.54, 116.05, 114.634, 0.2746", "1091.97, 115.155, 115.455, 0.2746", "1092.04, 114.105, 116.237, 0.2746", "1091.79, 113.014, 116.851, 0.2746", "1091.3, 111.989, 117.281, 0.2744", "1090.8, 110.964, 117.555, 0.2744", "1090.49, 109.902, 117.608, 0.2742", "1090.31, 108.82, 117.473, 0.2742", "1090.02, 107.754, 117.391, 0.2736", "1089.33, 106.945, 117.453, 0.2728", "1088.42, 106.381, 117.391, 0.2712", "1087.76, 105.485, 117.267, 0.2684", "1087.26, 104.538, 117.332, 0.2626", "1086.39, 103.816, 117.311, 0.2542", "1085.69, 102.91, 117.281, 0.2288", "1084.93, 102.056, 117.236, 0.2288" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "1081.77, 145.821, 109.324, 0.2746", "1082.5, 145.073, 109.908, 0.2288", "1083.31, 144.268, 109.869, 0.2746", "1084.13, 143.471, 109.853, 0.2746", "1084.87, 142.608, 109.83, 0.2746", "1085.43, 141.617, 109.801, 0.2746", "1085.88, 140.563, 109.765, 0.2746", "1086.51, 139.643, 109.687, 0.2746", "1087.39, 138.928, 109.566, 0.2746", "1087.99, 137.998, 109.484, 0.2746", "1088.09, 136.883, 109.434, 0.2746", "1087.94, 135.764, 109.351, 0.2746", "1087.73, 134.646, 109.26, 0.2746", "1087.43, 133.556, 109.257, 0.2746", "1087.16, 132.456, 109.332, 0.2746", "1087.04, 131.321, 109.426, 0.2746", "1087.02, 130.178, 109.522, 0.2746", "1087.17, 129.046, 109.621, 0.2746", "1087.35, 127.918, 109.706, 0.2746", "1087.66, 126.818, 109.769, 0.2746", "1088.2, 125.838, 109.908, 0.2746", "1088.62, 124.812, 110.139, 0.2746", "1088.86, 123.702, 110.369, 0.2746", "1089.27, 122.637, 110.57, 0.2748", "1089.62, 121.55, 110.752, 0.2748", "1089.8, 120.422, 110.893, 0.2752", "1090.19, 119.351, 110.977, 0.2758", "1090.83, 118.405, 111.019, 0.2766", "1091.29, 117.362, 111.04, 0.2782", "1091.69, 116.29, 111.051, 0.2814", "1092.29, 115.314, 111.051, 0.287", "1092.94, 114.381, 111.027, 0.2988", "1093.66, 113.489, 111.0, 0.314", "1094.49, 112.716, 111.03, 0.3734", "1095.33, 111.979, 111.14, 0.3338", "1096.1, 111.138, 111.263, 0.2994", "1096.89, 110.311, 111.341, 0.2742", "1097.43, 109.309, 111.368, 0.2736", "1097.62, 108.319, 111.17, 0.2728", "1097.96, 107.243, 110.939, 0.2712", "1098.17, 106.172, 110.883, 0.2684", "1098.01, 105.068, 110.944, 0.2626", "1097.98, 103.998, 110.868, 0.2542", "1098.0, 102.854, 110.835, 0.2288", "1098.44, 101.827, 111.066, 0.2288" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "1083.44, 174.23, 107.944, 0.2746", "1083.62, 174.489, 108.982, 0.2746", "1083.89, 174.884, 110.404, 0.2746", "1084.16, 175.281, 112.087, 0.2746", "1084.6, 175.565, 113.901, 0.2746", "1085.45, 175.562, 115.644, 0.2746", "1086.49, 175.595, 117.186, 0.2746", "1087.54, 175.756, 118.497, 0.2746", "1088.62, 175.798, 119.604, 0.2746", "1089.69, 175.613, 120.549, 0.2746", "1090.79, 175.355, 121.358, 0.2746", "1091.91, 175.178, 122.073, 0.2746", "1093.02, 175.168, 122.791, 0.2746", "1094.08, 175.341, 123.59, 0.2746", "1095.08, 175.649, 124.49, 0.2746", "1096.09, 175.901, 125.465, 0.2746", "1097.1, 176.08, 126.509, 0.2746", "1097.5, 176.477, 127.704, 0.2746", "1097.88, 177.312, 128.885, 0.2746", "1098.63, 178.155, 129.845, 0.2746", "1099.56, 178.807, 130.593, 0.2746", "1100.52, 179.441, 131.193, 0.2746", "1101.37, 180.19, 131.721, 0.2746", "1101.83, 181.141, 132.331, 0.2746", "1102.07, 182.093, 133.105, 0.2746", "1102.77, 182.833, 134.002, 0.2746", "1103.85, 183.065, 134.887, 0.2746", "1104.95, 182.748, 135.693, 0.2746", "1106.03, 182.482, 136.502, 0.2746", "1107.04, 182.704, 137.397, 0.2746", "1107.86, 183.325, 138.363, 0.2746", "1108.68, 183.949, 139.393, 0.2746", "1109.5, 184.575, 140.477, 0.2746", "1110.33, 185.2, 141.587, 0.2746", "1111.15, 185.826, 142.683, 0.2746", "1112.0, 186.454, 143.719, 0.2746", "1112.87, 187.084, 144.688, 0.2746", "1113.74, 187.713, 145.59, 0.2746", "1114.65, 188.305, 146.412, 0.2746", "1115.66, 188.802, 147.119, 0.2746", "1116.67, 189.293, 147.732, 0.2746", "1117.67, 189.784, 148.278, 0.2746", "1118.72, 190.232, 148.737, 0.2744", "1119.79, 190.645, 149.111, 0.2744", "1120.86, 191.056, 149.442, 0.2742", "1121.92, 191.468, 149.766, 0.2742", "1122.67, 192.229, 150.252, 0.2736", "1123.31, 193.035, 150.895, 0.2728", "1124.3, 193.548, 151.593, 0.2712", "1125.3, 194.046, 152.311, 0.2684", "1126.29, 194.546, 153.012, 0.2626", "1127.32, 194.941, 153.684, 0.2542", "1128.38, 195.074, 154.335, 0.2288", "1129.44, 195.206, 155.711, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "1083.44, 174.23, 107.944, 0.2746", "1083.59, 174.223, 106.209, 0.2288", "1084.68, 174.168, 106.943, 0.2746", "1085.8, 174.129, 107.267, 0.2746", "1086.9, 173.807, 107.562, 0.2746", "1087.87, 173.197, 107.836, 0.2746", "1088.83, 172.586, 108.096, 0.2746", "1089.8, 171.975, 108.349, 0.2746", "1090.73, 171.332, 108.645, 0.2746", "1091.63, 170.67, 109.033, 0.2746", "1092.52, 170.006, 109.503, 0.2746", "1093.41, 169.343, 110.029, 0.2746" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "1124.97, 175.961, 90.3577, 0.2746", "1126.06, 175.724, 90.8872, 0.2746", "1127.04, 175.202, 91.2674, 0.2746", "1127.54, 174.229, 91.52, 0.2746", "1128.0, 173.187, 91.6874, 0.2746", "1128.78, 172.376, 91.7991, 0.2746", "1129.76, 171.803, 91.8954, 0.2746", "1130.85, 171.489, 92.0329, 0.2746", "1131.97, 171.478, 92.2334, 0.2746", "1133.1, 171.589, 92.4582, 0.2746", "1134.21, 171.856, 92.6537, 0.2746", "1135.29, 172.182, 92.8682, 0.2746", "1136.39, 172.276, 93.1162, 0.2746", "1137.53, 172.208, 93.3061, 0.2746", "1138.64, 172.011, 93.385, 0.2746", "1139.75, 171.746, 93.4018, 0.2746", "1140.87, 171.536, 93.4494, 0.2746", "1142.0, 171.488, 93.5525, 0.2746", "1143.14, 171.546, 93.6729, 0.2746", "1144.27, 171.443, 93.8235, 0.2746", "1145.32, 171.097, 94.1223, 0.2746", "1146.25, 170.58, 94.5787, 0.2746", "1147.21, 170.092, 94.9113, 0.2746", "1148.2, 169.538, 95.1966, 0.2746", "1148.95, 168.905, 95.7284, 0.2746", "1149.45, 168.007, 96.4233, 0.2746", "1149.82, 166.953, 97.1426, 0.2746", "1150.45, 166.071, 97.9261, 0.2746", "1151.25, 165.33, 98.7672, 0.2746", "1152.02, 164.508, 99.5786, 0.2746", "1152.71, 163.664, 100.396, 0.2746", "1153.51, 162.962, 101.254, 0.2746", "1154.35, 162.29, 102.14, 0.2746", "1154.83, 161.337, 103.045, 0.2746", "1154.9, 160.28, 103.972, 0.2746", "1154.52, 159.28, 104.902, 0.2746", "1154.34, 158.167, 105.747, 0.2746", "1154.19, 157.047, 106.521, 0.2746", "1154.18, 156.019, 107.354, 0.2746", "1154.03, 155.009, 108.225, 0.2746", "1153.74, 154.035, 109.106, 0.2746", "1153.11, 153.231, 109.967, 0.2746", "1152.5, 152.298, 110.693, 0.2746", "1151.85, 151.373, 111.236, 0.2746", "1150.96, 150.656, 111.548, 0.2746", "1150.03, 149.988, 111.675, 0.2748", "1149.03, 149.429, 111.639, 0.275", "1148.0, 148.971, 111.446, 0.2752", "1146.99, 148.508, 111.162, 0.2758", "1145.96, 148.052, 110.834, 0.2768", "1144.89, 147.654, 110.535, 0.279", "1143.8, 147.307, 110.306, 0.2824", "1142.71, 146.958, 110.142, 0.2882", "1141.62, 146.612, 110.036, 0.305", "1140.54, 146.231, 109.971, 0.305", "1139.52, 145.718, 109.913, 0.4576" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "1124.97, 175.961, 90.3577, 0.2746", "1126.16, 175.961, 91.8372, 0.2752", "1127.29, 175.961, 92.7688, 0.2758", "1128.41, 175.961, 93.1596, 0.2766", "1129.54, 175.963, 93.6387, 0.2782", "1130.66, 176.016, 94.204, 0.2814", "1131.77, 176.152, 94.8592, 0.287", "1132.87, 176.31, 95.5956, 0.2988", "1133.97, 176.412, 96.4048, 0.3142", "1135.06, 176.297, 97.3081, 0.3734", "1136.12, 176.127, 98.3352, 0.3338", "1137.16, 176.361, 99.4728, 0.3", "1137.17, 177.195, 100.781, 0.2746", "1137.21, 178.125, 102.286, 0.2744", "1137.58, 178.609, 104.053, 0.2744", "1138.0, 178.56, 106.052, 0.2742", "1138.4, 178.133, 108.182, 0.2742", "1138.37, 177.518, 110.379, 0.2736", "1137.64, 177.061, 112.506, 0.2728", "1136.72, 176.92, 114.573, 0.2712", "1136.35, 176.878, 116.682, 0.2684", "1136.62, 176.831, 118.779, 0.2626", "1137.32, 176.349, 120.693, 0.2542", "1137.63, 175.712, 122.464, 0.2288", "1137.69, 175.045, 125.943, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "1088.22, 181.46, 91.3346, 0.2746", "1089.26, 180.778, 91.5944, 0.2746", "1090.22, 180.149, 91.7375, 0.2746", "1091.17, 179.519, 91.7927, 0.2746", "1092.11, 178.87, 91.873, 0.2746", "1093.03, 178.193, 91.9909, 0.2746", "1093.94, 177.502, 92.148, 0.2746", "1094.84, 176.804, 92.3387, 0.2748", "1095.73, 176.087, 92.5644, 0.2748", "1096.58, 175.341, 92.8259, 0.2752", "1097.42, 174.584, 93.1109, 0.2758", "1098.25, 173.808, 93.3988, 0.2766", "1099.02, 172.972, 93.6569, 0.2782", "1099.71, 172.062, 93.8655, 0.2814", "1100.35, 171.111, 94.0358, 0.287", "1101.03, 170.193, 94.1853, 0.2988", "1101.82, 169.362, 94.3368, 0.3142", "1102.62, 168.563, 94.5378, 0.3734", "1103.41, 167.758, 94.8228, 0.3338", "1104.19, 166.954, 95.1787, 0.3", "1105.01, 166.185, 95.5755, 0.2746", "1105.96, 165.578, 95.9731, 0.2746", "1107.01, 165.152, 96.3376, 0.2746", "1108.1, 164.785, 96.6624, 0.2746", "1109.18, 164.435, 96.9578, 0.2746", "1110.28, 164.123, 97.2476, 0.2746", "1111.38, 163.86, 97.554, 0.2746", "1112.49, 163.621, 97.8888, 0.2746", "1113.6, 163.384, 98.2545, 0.2746", "1114.71, 163.144, 98.6535, 0.2746", "1115.81, 162.9, 99.0909, 0.2746", "1116.9, 162.652, 99.5627, 0.2746", "1117.99, 162.398, 100.057, 0.2746", "1119.07, 162.102, 100.562, 0.2746", "1120.12, 161.711, 101.069, 0.2746", "1121.14, 161.253, 101.567, 0.2746", "1122.17, 160.814, 102.038, 0.2746", "1123.25, 160.505, 102.452, 0.2746", "1124.39, 160.392, 102.779, 0.2746", "1125.53, 160.381, 103.02, 0.2746", "1126.67, 160.381, 103.202, 0.2746", "1127.82, 160.381, 103.352, 0.2746", "1128.96, 160.349, 103.505, 0.2746", "1130.09, 160.217, 103.706, 0.2746", "1131.21, 160.004, 103.981, 0.2746", "1132.32, 159.769, 104.327, 0.2746", "1133.42, 159.498, 104.74, 0.2744", "1134.45, 159.101, 105.243, 0.2744", "1135.39, 158.565, 105.86, 0.2742", "1136.31, 157.952, 106.531, 0.2742", "1137.23, 157.335, 107.078, 0.2736", "1138.12, 156.617, 107.6, 0.2728", "1138.89, 156.011, 108.385, 0.2712", "1139.69, 155.598, 109.391, 0.2684", "1140.35, 154.896, 110.511, 0.2626", "1140.84, 154.176, 111.731, 0.2542", "1141.76, 154.026, 112.95, 0.2288", "1142.78, 154.294, 115.205, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "1088.22, 181.46, 91.3346, 0.2746", "1087.75, 180.489, 91.8733, 0.2746", "1087.26, 179.48, 92.374, 0.2746", "1086.77, 178.471, 92.8368, 0.2746", "1086.4, 177.402, 93.247, 0.2746", "1086.42, 176.258, 93.56, 0.2746", "1086.44, 175.115, 93.8056, 0.2746", "1086.45, 173.971, 94.0125, 0.2746", "1086.47, 172.827, 94.2038, 0.2746", "1086.49, 171.684, 94.4012, 0.2746", "1086.8, 170.602, 94.6873, 0.2746", "1087.17, 169.546, 95.0648, 0.2746", "1087.54, 168.492, 95.5086, 0.2746", "1087.91, 167.436, 95.9918, 0.2746", "1088.22, 166.361, 96.4869, 0.2746", "1088.53, 165.284, 96.9696, 0.2746", "1088.83, 164.208, 97.4193, 0.2746", "1089.14, 163.131, 97.8284, 0.2746" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "1093.41, 169.343, 110.029, 0.2746", "1093.86, 168.912, 110.543, 0.2746", "1094.67, 168.134, 111.076, 0.2746", "1095.47, 167.357, 111.613, 0.2746", "1096.33, 166.643, 112.145, 0.2746", "1097.28, 166.052, 112.673, 0.2746", "1098.25, 165.513, 113.193, 0.2746", "1099.23, 164.981, 113.703, 0.2746", "1100.27, 164.506, 114.149, 0.2746", "1101.33, 164.082, 114.512, 0.2746", "1102.4, 163.67, 114.807, 0.2746", "1103.48, 163.314, 115.069, 0.2746", "1104.53, 163.6, 115.421, 0.2746", "1105.61, 163.84, 115.844, 0.2746", "1106.73, 163.781, 116.281, 0.2746", "1107.71, 163.199, 116.68, 0.2744", "1108.58, 162.453, 117.027, 0.2744", "1109.53, 161.823, 117.344, 0.2742", "1110.51, 161.28, 117.702, 0.2742", "1111.47, 160.777, 118.14, 0.2736", "1112.43, 160.205, 118.593, 0.2728", "1113.35, 159.516, 119.005, 0.2712", "1114.24, 158.799, 119.364, 0.2684", "1115.11, 158.056, 119.685, 0.2626", "1115.63, 157.074, 120.036, 0.2542", "1115.69, 156.011, 120.46, 0.2288", "1115.7, 154.883, 121.363, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "1093.41, 169.343, 110.029, 0.2746", "1094.22, 169.823, 110.546, 0.2288", "1095.19, 170.202, 112.649, 0.2736", "1095.9, 170.52, 113.6, 0.2728", "1096.66, 170.882, 114.783, 0.2712", "1097.62, 171.108, 116.022, 0.2684", "1098.71, 170.863, 116.999, 0.2626", "1099.83, 170.604, 117.775, 0.2542", "1100.64, 170.331, 118.632, 0.2288", "1101.11, 170.775, 120.852, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "1089.14, 163.131, 97.8284, 0.2746", "1089.54, 162.14, 98.1109, 0.2746", "1089.96, 161.077, 98.292, 0.2746", "1090.39, 160.016, 98.3965, 0.2746", "1090.73, 158.923, 98.4463, 0.2746", "1090.84, 157.79, 98.4614, 0.2746", "1090.77, 156.649, 98.4603, 0.2746", "1090.65, 155.511, 98.4586, 0.2746", "1090.53, 154.372, 98.4567, 0.2746", "1090.39, 153.238, 98.4536, 0.2746", "1090.18, 152.114, 98.4494, 0.2746", "1089.91, 151.003, 98.4432, 0.2746", "1089.62, 149.895, 98.4351, 0.2746", "1089.33, 148.788, 98.4234, 0.2746", "1089.0, 147.695, 98.4074, 0.2746", "1088.6, 146.623, 98.3853, 0.2746", "1088.16, 145.566, 98.352, 0.2746", "1087.72, 144.509, 98.3049, 0.2746", "1087.45, 143.399, 98.245, 0.2746", "1087.36, 142.261, 98.1775, 0.2746", "1087.34, 141.134, 98.0459, 0.2746", "1087.38, 140.075, 97.7956, 0.2746", "1087.0, 139.028, 97.5649, 0.2746", "1086.33, 138.116, 97.4873, 0.2746", "1085.78, 137.135, 97.5632, 0.2746", "1085.37, 136.081, 97.7502, 0.2746", "1085.01, 134.995, 97.9714, 0.2746", "1084.62, 133.922, 98.2002, 0.2746", "1084.13, 132.896, 98.4774, 0.2746", "1084.09, 131.784, 98.8361, 0.2746", "1084.3, 130.687, 99.2754, 0.2746", "1084.15, 129.558, 99.7248, 0.2746", "1083.79, 128.476, 100.195, 0.2746", "1083.36, 127.526, 100.815, 0.2746", "1082.89, 126.624, 101.553, 0.2746", "1082.42, 125.618, 102.273, 0.2746", "1082.01, 124.552, 102.908, 0.2746", "1081.9, 123.455, 103.549, 0.2746", "1081.85, 122.368, 104.192, 0.2746", "1081.37, 121.366, 104.789, 0.2746", "1080.85, 120.374, 105.335, 0.2746", "1080.51, 119.287, 105.804, 0.2746", "1080.2, 118.189, 106.214, 0.2746", "1079.74, 117.139, 106.566, 0.2746", "1079.26, 116.1, 106.901, 0.2746", "1078.76, 115.074, 107.262, 0.2746", "1078.24, 114.057, 107.703, 0.2746", "1077.72, 113.2, 108.403, 0.2746", "1077.28, 112.381, 109.338, 0.2746", "1077.23, 111.599, 110.483, 0.2746", "1077.15, 110.695, 111.697, 0.2746", "1076.98, 109.661, 112.823, 0.2746", "1076.65, 108.574, 113.713, 0.2746", "1076.27, 107.493, 114.346, 0.2746", "1075.87, 106.423, 114.782, 0.2744", "1075.33, 105.425, 115.142, 0.2744", "1074.74, 104.483, 115.506, 0.2742", "1074.14, 103.543, 115.9, 0.2742", "1073.56, 102.586, 116.322, 0.2736", "1073.17, 101.511, 116.674, 0.2728", "1072.79, 100.433, 116.968, 0.2712", "1072.41, 99.3548, 117.209, 0.2684", "1071.89, 98.3966, 117.545, 0.2626", "1071.48, 97.4678, 118.007, 0.2542", "1070.99, 96.4432, 118.423, 0.2288", "1070.82, 95.3124, 119.073, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "1089.14, 163.131, 97.8284, 0.2746", "1089.67, 162.193, 99.1967, 0.2288", "1090.21, 161.232, 100.346, 0.2746", "1090.75, 160.271, 100.835, 0.2746", "1091.29, 159.31, 101.417, 0.2746", "1091.95, 158.43, 102.059, 0.2746", "1092.79, 157.689, 102.72, 0.2746", "1093.61, 156.913, 103.361, 0.2746", "1094.26, 155.988, 103.983, 0.2746", "1094.73, 154.978, 104.664, 0.2746", "1095.36, 154.21, 105.488, 0.2746", "1096.29, 153.898, 106.47, 0.2746", "1097.28, 153.655, 107.565, 0.2746", "1098.26, 153.354, 108.73, 0.2746", "1099.29, 153.195, 109.928, 0.2746", "1100.32, 153.28, 111.126, 0.2746", "1101.22, 153.621, 112.342, 0.2746", "1102.07, 154.067, 113.571, 0.2746", "1103.0, 154.482, 114.769, 0.2746", "1104.03, 154.766, 115.884, 0.2746", "1105.15, 154.868, 116.876, 0.2746", "1106.28, 154.869, 117.778, 0.2746", "1107.38, 154.806, 118.669, 0.2746", "1108.4, 154.492, 119.606, 0.2746", "1108.69, 153.885, 120.758, 0.2746", "1108.04, 153.126, 121.982, 0.2746", "1107.83, 152.067, 123.219, 0.2746", "1108.01, 151.038, 124.494, 0.2744", "1108.19, 150.096, 125.839, 0.2744", "1108.37, 149.405, 127.311, 0.2742", "1108.43, 148.654, 128.838, 0.2742", "1108.28, 147.704, 130.304, 0.2736", "1107.34, 147.146, 131.592, 0.2728", "1106.6, 146.38, 132.743, 0.2712", "1105.9, 145.629, 133.777, 0.2684", "1105.07, 145.01, 134.694, 0.2626", "1104.18, 144.361, 135.445, 0.2542", "1103.25, 143.698, 135.991, 0.2288", "1102.49, 142.847, 136.665, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_376",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_377",
    "groups" : [ ],
    "sections" : [ "dend_66", "dend_63", "dend_58", "dend_49", "dend_36", "dend_29", "apic_0", "dend_12", "dend_3", "dend_0", "dend_72", "dend_67", "dend_65", "dend_64", "dend_62", "dend_59", "dend_51", "dend_50", "dend_46", "dend_37", "dend_35", "dend_30", "apic_30", "apic_1", "dend_28", "dend_13", "dend_11", "dend_4", "dend_2", "dend_1", "dend_74", "dend_73", "dend_71", "dend_68", "dend_61", "dend_60", "dend_57", "dend_52", "dend_48", "dend_47", "dend_45", "dend_38", "dend_34", "dend_31", "apic_32", "apic_31", "apic_5", "apic_2", "dend_23", "dend_14", "dend_10", "dend_5", "dend_70", "dend_69", "dend_56", "dend_53", "dend_44", "dend_39", "dend_33", "dend_32", "apic_34", "apic_33", "apic_19", "apic_6", "apic_4", "apic_3", "dend_27", "dend_24", "dend_18", "dend_15", "dend_9", "dend_6", "dend_55", "dend_54", "dend_43", "dend_40", "apic_29", "apic_20", "apic_14", "apic_7", "dend_26", "dend_25", "dend_22", "dend_19", "dend_17", "dend_16", "dend_8", "dend_7", "dend_42", "dend_41", "apic_26", "apic_21", "apic_18", "apic_15", "apic_13", "apic_8", "dend_21", "dend_20", "apic_28", "apic_27", "apic_25", "apic_22", "apic_17", "apic_16", "apic_12", "apic_9", "apic_24", "apic_23", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_66", "dend_63", "dend_58", "dend_49", "dend_36", "dend_29", "dend_12", "dend_3", "dend_0", "dend_72", "dend_67", "dend_65", "dend_64", "dend_62", "dend_59", "dend_51", "dend_50", "dend_46", "dend_37", "dend_35", "dend_30", "dend_28", "dend_13", "dend_11", "dend_4", "dend_2", "dend_1", "dend_74", "dend_73", "dend_71", "dend_68", "dend_61", "dend_60", "dend_57", "dend_52", "dend_48", "dend_47", "dend_45", "dend_38", "dend_34", "dend_31", "dend_23", "dend_14", "dend_10", "dend_5", "dend_70", "dend_69", "dend_56", "dend_53", "dend_44", "dend_39", "dend_33", "dend_32", "dend_27", "dend_24", "dend_18", "dend_15", "dend_9", "dend_6", "dend_55", "dend_54", "dend_43", "dend_40", "dend_26", "dend_25", "dend_22", "dend_19", "dend_17", "dend_16", "dend_8", "dend_7", "dend_42", "dend_41", "dend_21", "dend_20" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_30", "apic_1", "apic_32", "apic_31", "apic_5", "apic_2", "apic_34", "apic_33", "apic_19", "apic_6", "apic_4", "apic_3", "apic_29", "apic_20", "apic_14", "apic_7", "apic_26", "apic_21", "apic_18", "apic_15", "apic_13", "apic_8", "apic_28", "apic_27", "apic_25", "apic_22", "apic_17", "apic_16", "apic_12", "apic_9", "apic_24", "apic_23", "apic_11", "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15761",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "axon_1", "axon_1", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "4.330086"
  }, {
    "group" : "apic",
    "value" : "4.330086"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "59.94484"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.023329811",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "9.6928716E-8",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.34482312",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.002399534",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.133303E-4",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.5555198E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.001099541",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.305103E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "7.93169E-4",
    "erev" : "-88.22792"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.1905488E-4",
    "erev" : "-88.22792"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.8711227E-5",
    "erev" : "-88.22792"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.041789E-4",
    "erev" : "-88.22792"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.4532313E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0047123698",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_483108201",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_483108201

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_66, id: dend_66, parent: soma_0
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: soma_0
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_72, id: dend_72, parent: dend_66
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_36
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: apic_30, id: apic_30, parent: apic_0
create apic_30
public apic_30
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_51
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: apic_32, id: apic_32, parent: apic_30
create apic_32
public apic_32
// Section: apic_31, id: apic_31, parent: apic_30
create apic_31
public apic_31
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: apic_34, id: apic_34, parent: apic_32
create apic_34
public apic_34
// Section: apic_33, id: apic_33, parent: apic_32
create apic_33
public apic_33
// Section: apic_19, id: apic_19, parent: apic_5
create apic_19
public apic_19
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: apic_29, id: apic_29, parent: apic_19
create apic_29
public apic_29
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_14, id: apic_14, parent: apic_6
create apic_14
public apic_14
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: apic_26, id: apic_26, parent: apic_20
create apic_26
public apic_26
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_18, id: apic_18, parent: apic_14
create apic_18
public apic_18
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_28, id: apic_28, parent: apic_26
create apic_28
public apic_28
// Section: apic_27, id: apic_27, parent: apic_26
create apic_27
public apic_27
// Section: apic_25, id: apic_25, parent: apic_21
create apic_25
public apic_25
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_376, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_376
// Group: {name=ModelViewParmSubset_377, groups=[], sections=[dend_66, dend_63, dend_58, dend_49, dend_36, dend_29, apic_0, dend_12, dend_3, dend_0, dend_72, dend_67, dend_65, dend_64, dend_62, dend_59, dend_51, dend_50, dend_46, dend_37, dend_35, dend_30, apic_30, apic_1, dend_28, dend_13, dend_11, dend_4, dend_2, dend_1, dend_74, dend_73, dend_71, dend_68, dend_61, dend_60, dend_57, dend_52, dend_48, dend_47, dend_45, dend_38, dend_34, dend_31, apic_32, apic_31, apic_5, apic_2, dend_23, dend_14, dend_10, dend_5, dend_70, dend_69, dend_56, dend_53, dend_44, dend_39, dend_33, dend_32, apic_34, apic_33, apic_19, apic_6, apic_4, apic_3, dend_27, dend_24, dend_18, dend_15, dend_9, dend_6, dend_55, dend_54, dend_43, dend_40, apic_29, apic_20, apic_14, apic_7, dend_26, dend_25, dend_22, dend_19, dend_17, dend_16, dend_8, dend_7, dend_42, dend_41, apic_26, apic_21, apic_18, apic_15, apic_13, apic_8, dend_21, dend_20, apic_28, apic_27, apic_25, apic_22, apic_17, apic_16, apic_12, apic_9, apic_24, apic_23, apic_11, apic_10]}
objref ModelViewParmSubset_377
// Group: {name=dend, groups=[], sections=[dend_66, dend_63, dend_58, dend_49, dend_36, dend_29, dend_12, dend_3, dend_0, dend_72, dend_67, dend_65, dend_64, dend_62, dend_59, dend_51, dend_50, dend_46, dend_37, dend_35, dend_30, dend_28, dend_13, dend_11, dend_4, dend_2, dend_1, dend_74, dend_73, dend_71, dend_68, dend_61, dend_60, dend_57, dend_52, dend_48, dend_47, dend_45, dend_38, dend_34, dend_31, dend_23, dend_14, dend_10, dend_5, dend_70, dend_69, dend_56, dend_53, dend_44, dend_39, dend_33, dend_32, dend_27, dend_24, dend_18, dend_15, dend_9, dend_6, dend_55, dend_54, dend_43, dend_40, dend_26, dend_25, dend_22, dend_19, dend_17, dend_16, dend_8, dend_7, dend_42, dend_41, dend_21, dend_20]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_30, apic_1, apic_32, apic_31, apic_5, apic_2, apic_34, apic_33, apic_19, apic_6, apic_4, apic_3, apic_29, apic_20, apic_14, apic_7, apic_26, apic_21, apic_18, apic_15, apic_13, apic_8, apic_28, apic_27, apic_25, apic_22, apic_17, apic_16, apic_12, apic_9, apic_24, apic_23, apic_11, apic_10]}
objref apic
// Group: {name=OneSecGrp_SectionRef_15761, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_15761
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, axon_1, axon_1, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_483108201
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000047)
    connect dend_66(0), soma_0(0.5000000000000047)
    connect dend_63(0), soma_0(0.5000000000000047)
    connect dend_58(0), soma_0(0.5000000000000047)
    connect dend_49(0), soma_0(0.5000000000000047)
    connect dend_36(0), soma_0(0.5000000000000047)
    connect dend_29(0), soma_0(0.5000000000000047)
    connect apic_0(0), soma_0(0.5000000000000047)
    connect dend_12(0), soma_0(0.5000000000000047)
    connect dend_3(0), soma_0(0.5000000000000047)
    connect dend_0(0), soma_0(0.5000000000000047)
    connect axon_1(0), axon_0(1.0)
    connect dend_72(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect apic_30(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_57(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect apic_32(0), apic_30(1.0)
    connect apic_31(0), apic_30(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect apic_34(0), apic_32(1.0)
    connect apic_33(0), apic_32(1.0)
    connect apic_19(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect apic_29(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_14(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect apic_26(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_18(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_28(0), apic_26(1.0)
    connect apic_27(0), apic_26(1.0)
    connect apic_25(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 784.265, 497.314, 22.853, 12.2838 ) }
    soma_0 { pt3dadd( 790.407, 497.314, 22.853, 12.2838 ) }
    soma_0 { pt3dadd( 796.549, 497.314, 22.853, 12.2838 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 790.407, 497.314, 22.853, 1.0 ) }
    axon_0 { pt3dadd( 796.248, 511.13, 22.853, 1.0 ) }
    axon_0 { pt3dadd( 802.09, 524.946, 22.853, 1.0 ) }
    // Section: dend_66, id: dend_66, parent: soma_0 (entry count 6/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 786.058, 500.939, 24.8503, 0.3918 ) }
    dend_66 { pt3dadd( 785.528, 501.724, 25.8545, 0.5444 ) }
    dend_66 { pt3dadd( 785.252, 502.803, 26.2849, 0.5176 ) }
    dend_66 { pt3dadd( 784.724, 503.765, 26.5264, 0.6018 ) }
    dend_66 { pt3dadd( 784.122, 504.718, 26.7936, 0.5652 ) }
    dend_66 { pt3dadd( 783.146, 505.139, 27.15, 0.5168 ) }
    dend_66 { pt3dadd( 782.082, 505.56, 27.4052, 0.562 ) }
    dend_66 { pt3dadd( 781.148, 506.187, 27.6498, 0.6778 ) }
    dend_66 { pt3dadd( 780.177, 506.718, 27.7334, 0.737 ) }
    dend_66 { pt3dadd( 779.222, 507.274, 27.7098, 0.6838 ) }
    dend_66 { pt3dadd( 778.418, 508.016, 27.8167, 0.6924 ) }
    dend_66 { pt3dadd( 777.657, 508.799, 28.0302, 0.6448 ) }
    dend_66 { pt3dadd( 776.896, 509.651, 28.2369, 0.6362 ) }
    dend_66 { pt3dadd( 776.254, 510.599, 28.4144, 0.6912 ) }
    dend_66 { pt3dadd( 775.504, 511.462, 28.5793, 0.6778 ) }
    dend_66 { pt3dadd( 774.885, 512.424, 28.7188, 0.7546 ) }
    dend_66 { pt3dadd( 774.336, 513.427, 28.8271, 0.634 ) }
    dend_66 { pt3dadd( 773.545, 514.255, 28.9428, 0.5414 ) }
    dend_66 { pt3dadd( 772.737, 515.064, 29.099, 0.4212 ) }
    dend_66 { pt3dadd( 771.928, 515.872, 29.3037, 0.4054 ) }
    dend_66 { pt3dadd( 771.118, 516.681, 29.5532, 0.5154 ) }
    // Section: dend_63, id: dend_63, parent: soma_0 (entry count 27/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 792.366, 502.397, 23.8392, 0.3718 ) }
    dend_63 { pt3dadd( 793.16, 503.088, 24.7146, 0.507 ) }
    dend_63 { pt3dadd( 793.651, 503.837, 25.1676, 0.4522 ) }
    dend_63 { pt3dadd( 794.107, 504.792, 25.7446, 0.461 ) }
    dend_63 { pt3dadd( 794.672, 505.694, 26.404, 0.3982 ) }
    dend_63 { pt3dadd( 795.263, 506.656, 27.0105, 0.439 ) }
    dend_63 { pt3dadd( 795.892, 507.6, 27.5481, 0.434 ) }
    dend_63 { pt3dadd( 796.549, 508.529, 27.9943, 0.3616 ) }
    dend_63 { pt3dadd( 797.328, 509.342, 28.3674, 0.304 ) }
    dend_63 { pt3dadd( 798.303, 509.761, 28.756, 0.2822 ) }
    dend_63 { pt3dadd( 799.297, 510.302, 29.055, 0.2886 ) }
    dend_63 { pt3dadd( 800.246, 510.931, 29.1906, 0.3002 ) }
    dend_63 { pt3dadd( 801.195, 511.56, 29.178, 0.3244 ) }
    dend_63 { pt3dadd( 802.142, 512.189, 29.0475, 0.3564 ) }
    dend_63 { pt3dadd( 803.006, 512.935, 28.8406, 0.4776 ) }
    dend_63 { pt3dadd( 803.777, 513.761, 28.5538, 0.4026 ) }
    dend_63 { pt3dadd( 804.616, 514.505, 28.2212, 0.3428 ) }
    dend_63 { pt3dadd( 805.519, 515.16, 27.8681, 0.3066 ) }
    dend_63 { pt3dadd( 806.44, 515.832, 27.5687, 0.3348 ) }
    dend_63 { pt3dadd( 807.356, 516.517, 27.349, 0.383 ) }
    dend_63 { pt3dadd( 808.135, 517.355, 27.2003, 0.4914 ) }
    dend_63 { pt3dadd( 808.832, 518.262, 27.113, 0.5994 ) }
    dend_63 { pt3dadd( 809.482, 519.203, 27.0685, 0.5646 ) }
    dend_63 { pt3dadd( 810.112, 520.157, 27.0462, 0.4976 ) }
    dend_63 { pt3dadd( 810.703, 521.114, 26.9493, 0.3862 ) }
    dend_63 { pt3dadd( 811.291, 522.062, 26.9548, 0.3446 ) }
    dend_63 { pt3dadd( 812.215, 522.696, 27.0197, 0.383 ) }
    dend_63 { pt3dadd( 813.042, 523.454, 26.9539, 0.3516 ) }
    dend_63 { pt3dadd( 813.683, 524.402, 26.8516, 0.3326 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 56/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 793.85, 500.627, 30.4688, 0.3076 ) }
    dend_58 { pt3dadd( 794.179, 501.527, 31.4289, 0.3364 ) }
    dend_58 { pt3dadd( 794.268, 502.607, 31.8452, 0.385 ) }
    dend_58 { pt3dadd( 794.434, 503.729, 32.1958, 0.5 ) }
    dend_58 { pt3dadd( 794.59, 504.862, 32.4428, 0.5914 ) }
    dend_58 { pt3dadd( 794.766, 505.987, 32.5629, 0.6664 ) }
    dend_58 { pt3dadd( 795.265, 506.934, 32.4996, 0.8062 ) }
    dend_58 { pt3dadd( 795.97, 507.803, 32.3515, 0.8354 ) }
    dend_58 { pt3dadd( 796.743, 508.624, 32.312, 0.6322 ) }
    dend_58 { pt3dadd( 797.675, 509.172, 32.4582, 0.5882 ) }
    dend_58 { pt3dadd( 798.655, 509.591, 32.7698, 0.4924 ) }
    dend_58 { pt3dadd( 799.724, 509.974, 33.045, 0.3852 ) }
    dend_58 { pt3dadd( 800.735, 510.211, 33.119, 0.3012 ) }
    dend_58 { pt3dadd( 801.699, 510.723, 33.2828, 0.2766 ) }
    dend_58 { pt3dadd( 802.451, 511.431, 33.584, 0.2782 ) }
    dend_58 { pt3dadd( 803.16, 512.327, 33.8027, 0.2814 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 72/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 793.84, 501.604, 24.7064, 0.3244 ) }
    dend_49 { pt3dadd( 794.205, 502.583, 23.6797, 0.364 ) }
    dend_49 { pt3dadd( 794.687, 503.562, 23.222, 0.4554 ) }
    dend_49 { pt3dadd( 795.55, 504.311, 22.8327, 0.537 ) }
    dend_49 { pt3dadd( 796.597, 504.736, 22.4458, 0.4284 ) }
    dend_49 { pt3dadd( 797.597, 505.161, 22.0188, 0.3438 ) }
    dend_49 { pt3dadd( 798.514, 505.807, 21.6353, 0.3082 ) }
    dend_49 { pt3dadd( 799.375, 506.561, 21.3837, 0.339 ) }
    dend_49 { pt3dadd( 800.18, 507.35, 21.2987, 0.3832 ) }
    dend_49 { pt3dadd( 800.953, 508.18, 21.3094, 0.5292 ) }
    dend_49 { pt3dadd( 801.737, 509.008, 21.3071, 0.4882 ) }
    dend_49 { pt3dadd( 802.482, 509.856, 21.2641, 0.5526 ) }
    dend_49 { pt3dadd( 803.082, 510.828, 21.2522, 0.4476 ) }
    dend_49 { pt3dadd( 803.539, 511.861, 21.3106, 0.4276 ) }
    dend_49 { pt3dadd( 803.747, 512.984, 21.3315, 0.4564 ) }
    dend_49 { pt3dadd( 803.914, 514.116, 21.3536, 0.6494 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 88/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 790.89, 502.351, 22.9342, 0.3648 ) }
    dend_36 { pt3dadd( 790.875, 503.494, 22.6623, 0.4688 ) }
    dend_36 { pt3dadd( 790.658, 504.576, 22.4812, 0.502 ) }
    dend_36 { pt3dadd( 791.128, 505.618, 22.312, 0.6542 ) }
    dend_36 { pt3dadd( 791.871, 506.456, 22.2507, 0.725 ) }
    dend_36 { pt3dadd( 792.377, 507.468, 22.2354, 0.739 ) }
    dend_36 { pt3dadd( 792.866, 508.501, 22.1724, 0.6468 ) }
    dend_36 { pt3dadd( 793.298, 509.538, 22.0003, 0.5922 ) }
    dend_36 { pt3dadd( 793.799, 510.535, 21.7362, 0.6128 ) }
    dend_36 { pt3dadd( 794.35, 511.497, 21.385, 0.5174 ) }
    dend_36 { pt3dadd( 795.095, 512.32, 20.9789, 0.5312 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 784.572, 496.322, 24.2844, 0.5306 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 783.524, 496.68, 23.7944, 0.528 ) }
    dend_29 { pt3dadd( 782.4, 496.61, 23.5707, 0.4458 ) }
    dend_29 { pt3dadd( 781.258, 496.668, 23.3801, 0.44 ) }
    dend_29 { pt3dadd( 780.168, 497.012, 23.2539, 0.4048 ) }
    dend_29 { pt3dadd( 779.046, 497.085, 23.2404, 0.4576 ) }
    dend_29 { pt3dadd( 777.918, 496.908, 23.2116, 0.4396 ) }
    dend_29 { pt3dadd( 776.922, 496.372, 23.1426, 0.512 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 7/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 794.133, 494.541, 25.486, 0.2814 ) }
    apic_0 { pt3dadd( 794.998, 493.884, 26.4882, 0.2872 ) }
    apic_0 { pt3dadd( 795.864, 493.226, 27.4453, 0.2978 ) }
    apic_0 { pt3dadd( 796.729, 492.569, 28.3184, 0.3184 ) }
    apic_0 { pt3dadd( 797.339, 491.673, 29.0774, 0.3518 ) }
    apic_0 { pt3dadd( 797.429, 490.553, 29.6377, 0.4392 ) }
    apic_0 { pt3dadd( 797.729, 489.449, 29.9264, 0.476 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 14/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 788.786, 501.935, 27.4627, 0.2828 ) }
    dend_12 { pt3dadd( 788.416, 502.939, 28.2957, 0.2902 ) }
    dend_12 { pt3dadd( 788.044, 503.945, 28.6756, 0.303 ) }
    dend_12 { pt3dadd( 787.674, 504.951, 29.101, 0.3294 ) }
    dend_12 { pt3dadd( 787.669, 506.093, 29.3796, 0.3656 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 19/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 786.891, 497.097, 31.3054, 0.2822 ) }
    dend_3 { pt3dadd( 786.062, 497.055, 32.3201, 0.288 ) }
    dend_3 { pt3dadd( 785.139, 497.015, 32.8619, 0.3004 ) }
    dend_3 { pt3dadd( 784.162, 497.404, 33.0926, 0.3174 ) }
    dend_3 { pt3dadd( 783.118, 497.718, 33.0826, 0.3796 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 789.502, 493.731, 13.0539, 0.3692 ) }
    dend_0 { pt3dadd( 789.748, 492.879, 11.6507, 0.5024 ) }
    dend_0 { pt3dadd( 790.575, 492.089, 11.1491, 0.4438 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 27/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 802.09, 524.946, 22.853, 1.0 ) }
    axon_1 { pt3dadd( 807.931, 538.762, 22.853, 1.0 ) }
    axon_1 { pt3dadd( 813.772, 552.578, 22.853, 1.0 ) }
    // Section: dend_72, id: dend_72, parent: dend_66 (entry count 30/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 771.118, 516.681, 29.5532, 0.5154 ) }
    dend_72 { pt3dadd( 770.842, 517.655, 30.0328, 0.3982 ) }
    dend_72 { pt3dadd( 771.294, 518.36, 30.7437, 0.3242 ) }
    dend_72 { pt3dadd( 771.542, 519.308, 31.4986, 0.3204 ) }
    dend_72 { pt3dadd( 771.223, 520.327, 32.0869, 0.3556 ) }
    dend_72 { pt3dadd( 770.238, 520.454, 32.4932, 0.4448 ) }
    dend_72 { pt3dadd( 769.3, 519.833, 32.6914, 0.4936 ) }
    dend_72 { pt3dadd( 768.422, 519.218, 32.6175, 0.4626 ) }
    dend_72 { pt3dadd( 767.578, 518.513, 32.3924, 0.5372 ) }
    dend_72 { pt3dadd( 766.649, 517.866, 32.2529, 0.492 ) }
    dend_72 { pt3dadd( 765.778, 517.39, 32.3761, 0.3848 ) }
    dend_72 { pt3dadd( 764.758, 516.951, 32.597, 0.3 ) }
    dend_72 { pt3dadd( 763.955, 516.203, 32.6911, 0.2746 ) }
    dend_72 { pt3dadd( 762.971, 515.773, 32.6609, 0.2746 ) }
    dend_72 { pt3dadd( 762.029, 515.147, 32.6136, 0.2746 ) }
    dend_72 { pt3dadd( 761.099, 514.626, 32.7516, 0.2746 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 771.118, 516.681, 29.5532, 0.5154 ) }
    dend_67 { pt3dadd( 770.324, 517.469, 28.4836, 0.4576 ) }
    dend_67 { pt3dadd( 769.505, 518.257, 27.6828, 0.5324 ) }
    dend_67 { pt3dadd( 768.599, 518.889, 27.3048, 0.687 ) }
    dend_67 { pt3dadd( 767.626, 519.49, 26.9114, 0.6712 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 51/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 813.683, 524.402, 26.8516, 0.3326 ) }
    dend_65 { pt3dadd( 813.518, 524.824, 26.6768, 0.3368 ) }
    dend_65 { pt3dadd( 813.198, 525.917, 26.4683, 0.3804 ) }
    dend_65 { pt3dadd( 812.843, 527.003, 26.2228, 0.517 ) }
    dend_65 { pt3dadd( 812.438, 527.981, 25.8346, 0.5018 ) }
    dend_65 { pt3dadd( 811.931, 528.999, 25.4906, 0.403 ) }
    dend_65 { pt3dadd( 811.002, 529.656, 25.209, 0.3332 ) }
    dend_65 { pt3dadd( 810.158, 530.398, 24.8839, 0.3384 ) }
    dend_65 { pt3dadd( 809.308, 531.15, 24.5925, 0.382 ) }
    dend_65 { pt3dadd( 808.844, 532.172, 24.2501, 0.5272 ) }
    dend_65 { pt3dadd( 808.573, 533.274, 23.8935, 0.4846 ) }
    dend_65 { pt3dadd( 808.108, 534.293, 23.495, 0.5456 ) }
    dend_65 { pt3dadd( 807.381, 535.116, 23.0273, 0.436 ) }
    dend_65 { pt3dadd( 806.902, 535.978, 22.4528, 0.4004 ) }
    dend_65 { pt3dadd( 806.829, 536.982, 21.8453, 0.4338 ) }
    dend_65 { pt3dadd( 806.447, 538.046, 21.4381, 0.4728 ) }
    dend_65 { pt3dadd( 806.082, 539.108, 21.1968, 0.4276 ) }
    dend_65 { pt3dadd( 805.744, 540.197, 21.0091, 0.453 ) }
    dend_65 { pt3dadd( 805.461, 541.289, 20.781, 0.431 ) }
    dend_65 { pt3dadd( 805.217, 542.376, 20.47, 0.4948 ) }
    dend_65 { pt3dadd( 804.914, 543.461, 20.1056, 0.5644 ) }
    dend_65 { pt3dadd( 804.428, 544.48, 19.6861, 0.474 ) }
    dend_65 { pt3dadd( 803.953, 545.451, 19.1701, 0.4546 ) }
    dend_65 { pt3dadd( 803.589, 546.418, 18.5566, 0.3848 ) }
    dend_65 { pt3dadd( 803.016, 547.306, 17.9878, 0.42 ) }
    dend_65 { pt3dadd( 802.157, 548.045, 17.5813, 0.3738 ) }
    dend_65 { pt3dadd( 801.306, 548.722, 17.1871, 0.3698 ) }
    dend_65 { pt3dadd( 800.84, 549.622, 16.83, 0.4244 ) }
    dend_65 { pt3dadd( 800.606, 550.73, 16.613, 0.454 ) }
    dend_65 { pt3dadd( 800.079, 551.708, 16.4228, 0.3984 ) }
    dend_65 { pt3dadd( 799.293, 552.527, 16.2159, 0.3744 ) }
    dend_65 { pt3dadd( 798.431, 553.276, 16.0127, 0.4032 ) }
    dend_65 { pt3dadd( 797.527, 553.967, 15.7992, 0.5586 ) }
    dend_65 { pt3dadd( 796.717, 554.74, 15.5383, 0.5802 ) }
    dend_65 { pt3dadd( 796.112, 555.69, 15.2476, 0.5396 ) }
    dend_65 { pt3dadd( 795.591, 556.699, 14.9614, 0.6286 ) }
    dend_65 { pt3dadd( 794.989, 557.653, 14.6734, 0.6826 ) }
    dend_65 { pt3dadd( 794.239, 558.501, 14.4056, 0.635 ) }
    dend_65 { pt3dadd( 793.437, 559.315, 14.1972, 0.578 ) }
    dend_65 { pt3dadd( 792.815, 560.258, 14.0552, 0.5492 ) }
    dend_65 { pt3dadd( 792.52, 561.348, 13.956, 0.579 ) }
    dend_65 { pt3dadd( 792.259, 562.435, 13.8416, 0.4604 ) }
    dend_65 { pt3dadd( 791.65, 563.358, 13.7338, 0.3986 ) }
    dend_65 { pt3dadd( 790.849, 564.152, 13.726, 0.4304 ) }
    dend_65 { pt3dadd( 790.078, 564.977, 13.794, 0.4646 ) }
    dend_65 { pt3dadd( 789.426, 565.911, 13.8725, 0.421 ) }
    dend_65 { pt3dadd( 788.892, 566.921, 13.9506, 0.4034 ) }
    dend_65 { pt3dadd( 788.409, 567.953, 14.0439, 0.5186 ) }
    dend_65 { pt3dadd( 787.921, 568.98, 14.1385, 0.4736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_65 { pt3dadd( 787.384, 569.981, 14.157, 0.5018 ) }
    dend_65 { pt3dadd( 786.823, 570.967, 14.0777, 0.4692 ) }
    dend_65 { pt3dadd( 786.267, 571.962, 13.9486, 0.5914 ) }
    dend_65 { pt3dadd( 785.768, 572.986, 13.7854, 0.618 ) }
    dend_65 { pt3dadd( 785.307, 574.017, 13.5736, 0.4948 ) }
    dend_65 { pt3dadd( 784.886, 575.068, 13.3531, 0.4156 ) }
    dend_65 { pt3dadd( 784.614, 576.173, 13.18, 0.463 ) }
    dend_65 { pt3dadd( 784.404, 577.298, 13.066, 0.521 ) }
    dend_65 { pt3dadd( 783.947, 578.322, 13.012, 0.544 ) }
    dend_65 { pt3dadd( 783.172, 579.131, 13.0213, 0.54 ) }
    dend_65 { pt3dadd( 782.268, 579.821, 13.0257, 0.5326 ) }
    dend_65 { pt3dadd( 781.296, 580.4, 12.9448, 0.517 ) }
    dend_65 { pt3dadd( 780.261, 580.874, 12.812, 0.4956 ) }
    dend_65 { pt3dadd( 779.249, 581.345, 12.5883, 0.4232 ) }
    dend_65 { pt3dadd( 778.312, 581.872, 12.237, 0.4448 ) }
    dend_65 { pt3dadd( 777.365, 582.448, 11.8588, 0.415 ) }
    dend_65 { pt3dadd( 776.322, 582.879, 11.5912, 0.4702 ) }
    dend_65 { pt3dadd( 775.226, 583.195, 11.416, 0.4936 ) }
    dend_65 { pt3dadd( 774.219, 583.715, 11.2972, 0.4626 ) }
    dend_65 { pt3dadd( 773.308, 584.393, 11.2687, 0.5372 ) }
    dend_65 { pt3dadd( 772.381, 585.057, 11.2876, 0.492 ) }
    dend_65 { pt3dadd( 771.458, 585.729, 11.2773, 0.3848 ) }
    dend_65 { pt3dadd( 770.53, 586.396, 11.2298, 0.3 ) }
    dend_65 { pt3dadd( 769.581, 587.032, 11.1442, 0.2746 ) }
    dend_65 { pt3dadd( 768.592, 587.606, 11.0337, 0.2748 ) }
    dend_65 { pt3dadd( 767.569, 588.117, 10.9071, 0.2748 ) }
    dend_65 { pt3dadd( 766.559, 588.653, 10.7563, 0.2752 ) }
    dend_65 { pt3dadd( 765.577, 589.237, 10.557, 0.2758 ) }
    dend_65 { pt3dadd( 764.637, 589.854, 10.2627, 0.2766 ) }
    dend_65 { pt3dadd( 763.567, 590.154, 9.8937, 0.2782 ) }
    dend_65 { pt3dadd( 762.526, 589.778, 9.4971, 0.2814 ) }
    dend_65 { pt3dadd( 761.595, 589.181, 9.0125, 0.287 ) }
    dend_65 { pt3dadd( 760.771, 588.552, 8.4021, 0.2988 ) }
    dend_65 { pt3dadd( 759.829, 587.953, 7.8088, 0.3142 ) }
    dend_65 { pt3dadd( 758.744, 587.859, 7.2188, 0.3734 ) }
    dend_65 { pt3dadd( 757.643, 587.797, 6.653, 0.3338 ) }
    dend_65 { pt3dadd( 756.528, 587.573, 6.1888, 0.3 ) }
    dend_65 { pt3dadd( 755.388, 587.617, 5.8572, 0.2746 ) }
    dend_65 { pt3dadd( 754.33, 588.042, 5.641, 0.2746 ) }
    dend_65 { pt3dadd( 753.465, 588.769, 5.4447, 0.2746 ) }
    dend_65 { pt3dadd( 752.655, 589.556, 5.262, 0.2746 ) }
    dend_65 { pt3dadd( 751.903, 590.417, 5.1495, 0.2746 ) }
    dend_65 { pt3dadd( 751.218, 591.323, 5.1288, 0.2746 ) }
    dend_65 { pt3dadd( 750.888, 592.403, 5.1791, 0.2746 ) }
    dend_65 { pt3dadd( 750.296, 593.379, 5.2382, 0.2748 ) }
    dend_65 { pt3dadd( 750.0, 594.483, 5.2797, 0.275 ) }
    dend_65 { pt3dadd( 750.065, 595.624, 5.2909, 0.2752 ) }
    dend_65 { pt3dadd( 750.764, 596.472, 5.1608, 0.2758 ) }
    dend_65 { pt3dadd( 751.457, 597.37, 4.9862, 0.277 ) }
    dend_65 { pt3dadd( 751.958, 598.399, 4.8427, 0.2792 ) }
    dend_65 { pt3dadd( 752.197, 599.517, 4.735, 0.2828 ) }
    dend_65 { pt3dadd( 752.225, 600.661, 4.6672, 0.291 ) }
    dend_65 { pt3dadd( 751.966, 601.754, 4.7072, 0.2994 ) }
    dend_65 { pt3dadd( 751.671, 602.836, 4.829, 0.3474 ) }
    dend_65 { pt3dadd( 750.954, 603.72, 4.8685, 0.2796 ) }
    dend_65 { pt3dadd( 750.864, 604.811, 4.5178, 0.2288 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 56/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 813.683, 524.402, 26.8516, 0.3326 ) }
    dend_64 { pt3dadd( 814.036, 524.779, 26.9984, 0.2288 ) }
    dend_64 { pt3dadd( 814.851, 525.567, 26.6942, 0.3918 ) }
    dend_64 { pt3dadd( 815.778, 526.214, 26.5515, 0.478 ) }
    dend_64 { pt3dadd( 816.807, 526.713, 26.4428, 0.7198 ) }
    dend_64 { pt3dadd( 817.753, 527.326, 26.3526, 0.77 ) }
    dend_64 { pt3dadd( 818.502, 528.167, 26.2025, 0.737 ) }
    dend_64 { pt3dadd( 819.218, 529.045, 26.0403, 0.5996 ) }
    dend_64 { pt3dadd( 819.888, 529.961, 25.9538, 0.4868 ) }
    dend_64 { pt3dadd( 820.52, 530.88, 25.9333, 0.5042 ) }
    dend_64 { pt3dadd( 821.345, 531.653, 25.842, 0.581 ) }
    dend_64 { pt3dadd( 822.266, 532.305, 25.6872, 0.5062 ) }
    dend_64 { pt3dadd( 823.202, 532.947, 25.5003, 0.508 ) }
    dend_64 { pt3dadd( 824.103, 533.637, 25.3166, 0.515 ) }
    dend_64 { pt3dadd( 824.937, 534.409, 25.1958, 0.5098 ) }
    dend_64 { pt3dadd( 825.806, 535.144, 25.0899, 0.5894 ) }
    dend_64 { pt3dadd( 826.722, 535.804, 24.9353, 0.7616 ) }
    dend_64 { pt3dadd( 827.611, 536.487, 24.7255, 0.7318 ) }
    dend_64 { pt3dadd( 828.432, 537.253, 24.4964, 0.7688 ) }
    dend_64 { pt3dadd( 829.123, 538.162, 24.3275, 0.6196 ) }
    dend_64 { pt3dadd( 829.83, 539.053, 24.2197, 0.4852 ) }
    dend_64 { pt3dadd( 830.575, 539.903, 24.123, 0.4594 ) }
    dend_64 { pt3dadd( 831.118, 540.895, 23.9847, 0.4714 ) }
    dend_64 { pt3dadd( 831.711, 541.868, 23.8403, 0.4326 ) }
    dend_64 { pt3dadd( 832.412, 542.765, 23.6887, 0.4276 ) }
    dend_64 { pt3dadd( 833.197, 543.592, 23.5229, 0.5516 ) }
    dend_64 { pt3dadd( 833.917, 544.469, 23.348, 0.5912 ) }
    dend_64 { pt3dadd( 834.442, 545.461, 23.1917, 0.4448 ) }
    dend_64 { pt3dadd( 834.704, 546.571, 23.1301, 0.3264 ) }
    dend_64 { pt3dadd( 834.914, 547.688, 23.1505, 0.2768 ) }
    dend_64 { pt3dadd( 835.022, 548.818, 23.1804, 0.279 ) }
    dend_64 { pt3dadd( 835.215, 549.905, 23.1467, 0.2826 ) }
    dend_64 { pt3dadd( 835.602, 550.949, 23.1241, 0.2894 ) }
    dend_64 { pt3dadd( 835.167, 551.741, 23.237, 0.302 ) }
    dend_64 { pt3dadd( 834.451, 552.591, 23.3853, 0.326 ) }
    dend_64 { pt3dadd( 833.912, 553.596, 23.53, 0.367 ) }
    dend_64 { pt3dadd( 833.164, 554.438, 23.6682, 0.461 ) }
    dend_64 { pt3dadd( 832.198, 555.04, 23.7936, 0.5472 ) }
    dend_64 { pt3dadd( 831.202, 555.603, 23.898, 0.4476 ) }
    dend_64 { pt3dadd( 830.429, 556.418, 24.006, 0.3796 ) }
    dend_64 { pt3dadd( 830.041, 557.466, 24.1546, 0.372 ) }
    dend_64 { pt3dadd( 829.782, 558.576, 24.3023, 0.4702 ) }
    dend_64 { pt3dadd( 829.508, 559.683, 24.4009, 0.5642 ) }
    dend_64 { pt3dadd( 829.313, 560.806, 24.4687, 0.4808 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_64 { pt3dadd( 829.326, 561.942, 24.5701, 0.4312 ) }
    dend_64 { pt3dadd( 829.454, 563.062, 24.7418, 0.5168 ) }
    dend_64 { pt3dadd( 829.414, 564.188, 24.9633, 0.501 ) }
    dend_64 { pt3dadd( 829.148, 565.293, 25.1916, 0.4016 ) }
    dend_64 { pt3dadd( 828.734, 566.358, 25.3974, 0.3306 ) }
    dend_64 { pt3dadd( 828.385, 567.431, 25.6307, 0.3336 ) }
    dend_64 { pt3dadd( 828.427, 568.558, 25.8499, 0.3734 ) }
    dend_64 { pt3dadd( 828.922, 569.576, 26.0035, 0.51 ) }
    dend_64 { pt3dadd( 829.393, 570.618, 26.1372, 0.4578 ) }
    dend_64 { pt3dadd( 829.57, 571.739, 26.2934, 0.4716 ) }
    dend_64 { pt3dadd( 829.544, 572.866, 26.4916, 0.4172 ) }
    dend_64 { pt3dadd( 829.308, 573.976, 26.6931, 0.4756 ) }
    dend_64 { pt3dadd( 828.937, 575.055, 26.878, 0.4974 ) }
    dend_64 { pt3dadd( 828.537, 576.106, 27.0885, 0.4994 ) }
    dend_64 { pt3dadd( 828.249, 577.198, 27.1786, 0.4614 ) }
    dend_64 { pt3dadd( 827.976, 578.282, 27.1413, 0.3652 ) }
    dend_64 { pt3dadd( 827.621, 579.363, 27.1379, 0.311 ) }
    dend_64 { pt3dadd( 827.273, 580.451, 27.1613, 0.2946 ) }
    dend_64 { pt3dadd( 826.993, 581.559, 27.193, 0.3132 ) }
    dend_64 { pt3dadd( 826.863, 582.695, 27.2357, 0.3418 ) }
    dend_64 { pt3dadd( 826.65, 583.819, 27.311, 0.4196 ) }
    dend_64 { pt3dadd( 825.89, 584.623, 27.4891, 0.445 ) }
    dend_64 { pt3dadd( 825.05, 585.396, 27.6097, 0.383 ) }
    dend_64 { pt3dadd( 824.269, 586.219, 27.6645, 0.3386 ) }
    dend_64 { pt3dadd( 823.587, 587.121, 27.7896, 0.3716 ) }
    dend_64 { pt3dadd( 823.14, 588.167, 27.9565, 0.3304 ) }
    dend_64 { pt3dadd( 822.698, 589.222, 28.1044, 0.2938 ) }
    dend_64 { pt3dadd( 821.748, 589.837, 28.1859, 0.2626 ) }
    dend_64 { pt3dadd( 820.718, 590.283, 28.3615, 0.2542 ) }
    dend_64 { pt3dadd( 820.366, 591.3, 28.6521, 0.2288 ) }
    dend_64 { pt3dadd( 820.164, 592.426, 29.1687, 0.2288 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 31/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 803.16, 512.327, 33.8027, 0.2814 ) }
    dend_62 { pt3dadd( 803.079, 513.197, 36.19, 0.2746 ) }
    dend_62 { pt3dadd( 803.06, 514.273, 37.126, 0.2746 ) }
    dend_62 { pt3dadd( 803.078, 515.412, 37.4906, 0.2746 ) }
    dend_62 { pt3dadd( 803.348, 516.521, 37.879, 0.2746 ) }
    dend_62 { pt3dadd( 803.741, 517.588, 38.3379, 0.2746 ) }
    dend_62 { pt3dadd( 803.731, 518.706, 38.9052, 0.2746 ) }
    dend_62 { pt3dadd( 803.345, 519.764, 39.5606, 0.2746 ) }
    dend_62 { pt3dadd( 802.964, 520.722, 40.402, 0.2746 ) }
    dend_62 { pt3dadd( 802.515, 521.49, 41.4837, 0.2746 ) }
    dend_62 { pt3dadd( 801.986, 522.308, 42.6896, 0.2746 ) }
    dend_62 { pt3dadd( 801.453, 523.22, 43.9054, 0.2746 ) }
    dend_62 { pt3dadd( 800.893, 523.923, 45.1923, 0.2746 ) }
    dend_62 { pt3dadd( 800.416, 524.703, 46.4912, 0.2746 ) }
    dend_62 { pt3dadd( 800.046, 525.707, 47.6535, 0.2746 ) }
    dend_62 { pt3dadd( 799.754, 526.783, 48.6422, 0.2744 ) }
    dend_62 { pt3dadd( 799.298, 527.778, 49.5272, 0.2744 ) }
    dend_62 { pt3dadd( 798.779, 528.755, 50.3166, 0.2742 ) }
    dend_62 { pt3dadd( 798.152, 529.701, 50.9687, 0.2742 ) }
    dend_62 { pt3dadd( 797.187, 530.15, 51.6194, 0.2736 ) }
    dend_62 { pt3dadd( 797.106, 531.215, 52.2654, 0.2728 ) }
    dend_62 { pt3dadd( 797.106, 532.3, 52.8878, 0.2712 ) }
    dend_62 { pt3dadd( 797.188, 533.421, 53.415, 0.2684 ) }
    dend_62 { pt3dadd( 797.376, 534.55, 53.7813, 0.2626 ) }
    dend_62 { pt3dadd( 797.564, 535.678, 54.0182, 0.2542 ) }
    dend_62 { pt3dadd( 797.564, 536.822, 54.1464, 0.2288 ) }
    dend_62 { pt3dadd( 797.564, 537.966, 54.2142, 0.2288 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 803.16, 512.327, 33.8027, 0.2814 ) }
    dend_59 { pt3dadd( 803.81, 512.348, 33.8486, 0.287 ) }
    dend_59 { pt3dadd( 804.751, 512.84, 33.8262, 0.2988 ) }
    dend_59 { pt3dadd( 805.616, 513.502, 34.0637, 0.3142 ) }
    dend_59 { pt3dadd( 806.266, 514.361, 34.5125, 0.3734 ) }
    dend_59 { pt3dadd( 806.698, 515.353, 35.1436, 0.3338 ) }
    dend_59 { pt3dadd( 807.077, 516.396, 35.9103, 0.3 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 65/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 803.914, 514.116, 21.3536, 0.6494 ) }
    dend_51 { pt3dadd( 804.098, 515.205, 21.4119, 0.7876 ) }
    dend_51 { pt3dadd( 804.693, 516.182, 21.4745, 0.7356 ) }
    dend_51 { pt3dadd( 805.35, 517.119, 21.5257, 0.534 ) }
    dend_51 { pt3dadd( 806.067, 518.01, 21.5751, 0.442 ) }
    dend_51 { pt3dadd( 806.793, 518.893, 21.6334, 0.5064 ) }
    dend_51 { pt3dadd( 807.53, 519.757, 21.7346, 0.6286 ) }
    dend_51 { pt3dadd( 808.191, 520.687, 21.8437, 0.6132 ) }
    dend_51 { pt3dadd( 808.575, 521.754, 21.881, 0.6132 ) }
    dend_51 { pt3dadd( 808.932, 522.836, 21.8863, 0.4764 ) }
    dend_51 { pt3dadd( 809.219, 523.943, 21.9186, 0.4292 ) }
    dend_51 { pt3dadd( 809.508, 525.049, 21.9806, 0.483 ) }
    dend_51 { pt3dadd( 809.935, 526.084, 22.1533, 0.5828 ) }
    dend_51 { pt3dadd( 810.349, 527.122, 22.4156, 0.5388 ) }
    dend_51 { pt3dadd( 810.54, 528.229, 22.7285, 0.4252 ) }
    dend_51 { pt3dadd( 810.734, 529.337, 23.0537, 0.3708 ) }
    dend_51 { pt3dadd( 811.309, 530.326, 23.2887, 0.426 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 803.914, 514.116, 21.3536, 0.6494 ) }
    dend_50 { pt3dadd( 804.045, 513.759, 20.3087, 0.2288 ) }
    dend_50 { pt3dadd( 804.249, 513.29, 18.1861, 0.3512 ) }
    dend_50 { pt3dadd( 804.75, 512.748, 17.2453, 0.4382 ) }
    dend_50 { pt3dadd( 803.707, 512.648, 16.4023, 0.4744 ) }
    dend_50 { pt3dadd( 803.016, 513.44, 15.6621, 0.4618 ) }
    dend_50 { pt3dadd( 802.943, 514.332, 14.9158, 0.3664 ) }
    dend_50 { pt3dadd( 803.177, 515.276, 14.528, 0.3124 ) }
    dend_50 { pt3dadd( 803.325, 516.19, 14.462, 0.2988 ) }
    dend_50 { pt3dadd( 802.661, 516.627, 14.3591, 0.3142 ) }
    dend_50 { pt3dadd( 801.857, 516.564, 14.426, 0.3736 ) }
    dend_50 { pt3dadd( 800.985, 517.12, 14.4172, 0.334 ) }
    dend_50 { pt3dadd( 800.349, 517.839, 14.0302, 0.3004 ) }
    dend_50 { pt3dadd( 799.458, 518.309, 13.3386, 0.2752 ) }
    dend_50 { pt3dadd( 799.313, 518.612, 12.341, 0.2758 ) }
    dend_50 { pt3dadd( 799.313, 519.033, 11.0897, 0.2768 ) }
    dend_50 { pt3dadd( 799.435, 520.291, 10.0367, 0.2822 ) }
    dend_50 { pt3dadd( 800.285, 520.863, 9.1845, 0.2886 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 800.686, 521.837, 8.5007, 0.3 ) }
    dend_50 { pt3dadd( 800.738, 522.922, 7.9248, 0.324 ) }
    dend_50 { pt3dadd( 800.914, 523.808, 7.3399, 0.3556 ) }
    dend_50 { pt3dadd( 800.914, 524.211, 6.4035, 0.476 ) }
    dend_50 { pt3dadd( 800.914, 524.753, 5.2227, 0.4 ) }
    dend_50 { pt3dadd( 800.914, 524.638, 3.8272, 0.3378 ) }
    dend_50 { pt3dadd( 801.366, 524.703, 2.727, 0.2986 ) }
    dend_50 { pt3dadd( 802.402, 524.524, 1.9284, 0.314 ) }
    dend_50 { pt3dadd( 803.431, 524.562, 1.3815, 0.3728 ) }
    dend_50 { pt3dadd( 804.554, 524.753, 1.0317, 0.333 ) }
    dend_50 { pt3dadd( 805.307, 525.248, 0.7156, 0.2982 ) }
    dend_50 { pt3dadd( 805.002, 526.299, 0.5204, 0.2712 ) }
    dend_50 { pt3dadd( 804.364, 527.235, 0.3674, 0.2684 ) }
    dend_50 { pt3dadd( 805.051, 527.865, 0.2122, 0.2626 ) }
    dend_50 { pt3dadd( 805.698, 528.776, 0.1074, 0.2542 ) }
    dend_50 { pt3dadd( 805.599, 529.916, 0.0467, 0.2288 ) }
    dend_50 { pt3dadd( 805.5, 531.055, 0.0, 0.2288 ) }
    // Section: dend_46, id: dend_46, parent: dend_36 (entry count 17/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 795.095, 512.32, 20.9789, 0.5312 ) }
    dend_46 { pt3dadd( 795.911, 513.221, 20.5685, 0.6242 ) }
    dend_46 { pt3dadd( 796.367, 514.243, 20.3615, 0.5322 ) }
    dend_46 { pt3dadd( 796.445, 515.373, 20.2976, 0.5892 ) }
    dend_46 { pt3dadd( 796.407, 516.509, 20.2408, 0.5052 ) }
    dend_46 { pt3dadd( 796.163, 517.605, 20.1584, 0.5848 ) }
    dend_46 { pt3dadd( 795.909, 518.718, 20.1209, 0.5046 ) }
    dend_46 { pt3dadd( 796.501, 519.696, 20.1391, 0.5462 ) }
    dend_46 { pt3dadd( 797.128, 520.654, 20.2053, 0.6128 ) }
    dend_46 { pt3dadd( 797.949, 521.449, 20.3497, 0.561 ) }
    dend_46 { pt3dadd( 798.696, 522.258, 20.6767, 0.6296 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 28/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 795.095, 512.32, 20.9789, 0.5312 ) }
    dend_37 { pt3dadd( 795.265, 512.672, 19.6731, 0.2288 ) }
    dend_37 { pt3dadd( 794.802, 513.324, 18.6315, 0.3664 ) }
    dend_37 { pt3dadd( 793.93, 513.988, 18.1588, 0.4658 ) }
    dend_37 { pt3dadd( 793.134, 514.657, 17.8976, 0.5274 ) }
    dend_37 { pt3dadd( 792.424, 515.504, 17.7349, 0.5498 ) }
    dend_37 { pt3dadd( 791.904, 516.185, 17.2726, 0.5814 ) }
    dend_37 { pt3dadd( 790.99, 516.685, 16.6732, 0.4582 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 36/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 776.922, 496.372, 23.1426, 0.512 ) }
    dend_35 { pt3dadd( 776.251, 496.815, 20.6534, 0.493 ) }
    dend_35 { pt3dadd( 775.598, 497.465, 19.5534, 0.4326 ) }
    dend_35 { pt3dadd( 775.22, 498.424, 19.152, 0.3944 ) }
    dend_35 { pt3dadd( 775.124, 499.133, 18.4372, 0.4226 ) }
    dend_35 { pt3dadd( 775.0, 500.021, 17.5824, 0.4506 ) }
    dend_35 { pt3dadd( 774.79, 501.125, 16.8115, 0.3934 ) }
    dend_35 { pt3dadd( 774.49, 502.225, 16.1621, 0.3576 ) }
    dend_35 { pt3dadd( 773.927, 503.206, 15.5997, 0.4082 ) }
    dend_35 { pt3dadd( 772.923, 503.577, 15.0631, 0.393 ) }
    dend_35 { pt3dadd( 772.111, 503.232, 14.3373, 0.435 ) }
    dend_35 { pt3dadd( 771.747, 502.812, 13.3234, 0.4016 ) }
    dend_35 { pt3dadd( 770.987, 502.329, 12.2167, 0.4222 ) }
    dend_35 { pt3dadd( 770.13, 502.764, 11.1434, 0.5182 ) }
    dend_35 { pt3dadd( 769.532, 503.727, 10.2908, 0.6426 ) }
    dend_35 { pt3dadd( 768.927, 504.696, 9.706, 0.6774 ) }
    dend_35 { pt3dadd( 768.225, 505.598, 9.3443, 0.5478 ) }
    dend_35 { pt3dadd( 767.399, 506.35, 9.1125, 0.5638 ) }
    dend_35 { pt3dadd( 766.382, 506.856, 8.9307, 0.494 ) }
    dend_35 { pt3dadd( 765.367, 507.342, 8.8004, 0.3886 ) }
    dend_35 { pt3dadd( 764.273, 507.46, 8.7456, 0.3068 ) }
    dend_35 { pt3dadd( 763.221, 507.086, 8.6916, 0.2872 ) }
    dend_35 { pt3dadd( 762.367, 506.366, 8.5531, 0.299 ) }
    dend_35 { pt3dadd( 761.743, 505.491, 8.2536, 0.3144 ) }
    dend_35 { pt3dadd( 761.403, 504.447, 7.8504, 0.374 ) }
    dend_35 { pt3dadd( 761.343, 503.346, 7.4262, 0.335 ) }
    dend_35 { pt3dadd( 761.306, 502.227, 7.07, 0.302 ) }
    dend_35 { pt3dadd( 761.253, 501.218, 6.6006, 0.2784 ) }
    dend_35 { pt3dadd( 761.245, 500.286, 5.9938, 0.2818 ) }
    dend_35 { pt3dadd( 760.778, 499.356, 5.4236, 0.2876 ) }
    dend_35 { pt3dadd( 760.557, 498.376, 5.1418, 0.2998 ) }
    dend_35 { pt3dadd( 759.868, 497.545, 5.0141, 0.3162 ) }
    dend_35 { pt3dadd( 759.051, 496.748, 4.8942, 0.3772 ) }
    dend_35 { pt3dadd( 758.176, 496.014, 4.7743, 0.341 ) }
    dend_35 { pt3dadd( 757.334, 495.24, 4.6515, 0.313 ) }
    dend_35 { pt3dadd( 756.949, 494.175, 4.4395, 0.2994 ) }
    dend_35 { pt3dadd( 757.5, 493.29, 4.0226, 0.3164 ) }
    dend_35 { pt3dadd( 757.996, 492.319, 3.5286, 0.3728 ) }
    dend_35 { pt3dadd( 758.282, 491.215, 3.1033, 0.356 ) }
    dend_35 { pt3dadd( 758.607, 490.142, 2.2436, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 76/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 776.922, 496.372, 23.1426, 0.512 ) }
    dend_30 { pt3dadd( 775.913, 496.304, 23.1016, 0.5894 ) }
    dend_30 { pt3dadd( 774.824, 495.955, 23.0715, 0.551 ) }
    dend_30 { pt3dadd( 773.811, 495.448, 23.0079, 0.449 ) }
    dend_30 { pt3dadd( 772.857, 494.829, 22.9456, 0.4096 ) }
    dend_30 { pt3dadd( 771.916, 494.28, 23.0709, 0.5234 ) }
    dend_30 { pt3dadd( 770.902, 493.939, 23.3479, 0.5136 ) }
    dend_30 { pt3dadd( 769.769, 494.092, 23.5777, 0.4258 ) }
    dend_30 { pt3dadd( 768.651, 494.336, 23.7506, 0.3704 ) }
    dend_30 { pt3dadd( 767.516, 494.48, 23.8654, 0.4328 ) }
    dend_30 { pt3dadd( 766.41, 494.189, 23.9153, 0.4336 ) }
    dend_30 { pt3dadd( 765.267, 494.129, 23.8982, 0.5368 ) }
    // Section: apic_30, id: apic_30, parent: apic_0 (entry count 88/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 797.729, 489.449, 29.9264, 0.476 ) }
    apic_30 { pt3dadd( 797.925, 488.442, 28.32, 0.367 ) }
    apic_30 { pt3dadd( 797.966, 487.487, 26.5141, 0.3142 ) }
    apic_30 { pt3dadd( 797.904, 486.39, 25.8295, 0.3004 ) }
    apic_30 { pt3dadd( 797.474, 485.772, 24.9246, 0.3248 ) }
    apic_30 { pt3dadd( 796.852, 485.205, 23.8948, 0.357 ) }
    apic_30 { pt3dadd( 796.056, 484.475, 22.9787, 0.4786 ) }
    apic_30 { pt3dadd( 795.099, 483.859, 22.2829, 0.405 ) }
    apic_30 { pt3dadd( 793.979, 483.738, 21.8304, 0.347 ) }
    apic_30 { pt3dadd( 793.095, 484.362, 21.6267, 0.316 ) }
    apic_30 { pt3dadd( 792.213, 485.087, 21.5185, 0.347 ) }
    apic_30 { pt3dadd( 791.22, 485.285, 21.2495, 0.429 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_30 { pt3dadd( 790.157, 485.661, 20.9349, 0.4638 ) }
    apic_30 { pt3dadd( 789.239, 486.284, 20.7214, 0.4114 ) }
    apic_30 { pt3dadd( 788.334, 486.954, 20.403, 0.423 ) }
    apic_30 { pt3dadd( 787.273, 487.206, 19.9475, 0.3734 ) }
    apic_30 { pt3dadd( 786.217, 487.628, 19.4859, 0.399 ) }
    apic_30 { pt3dadd( 785.155, 488.042, 19.0996, 0.334 ) }
    apic_30 { pt3dadd( 784.312, 488.481, 18.4855, 0.3002 ) }
    apic_30 { pt3dadd( 783.473, 488.977, 17.7202, 0.275 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 8/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 797.729, 489.449, 29.9264, 0.476 ) }
    apic_1 { pt3dadd( 798.368, 488.562, 30.0037, 0.465 ) }
    apic_1 { pt3dadd( 799.138, 487.728, 29.9286, 0.3718 ) }
    apic_1 { pt3dadd( 799.9, 486.875, 29.7998, 0.3242 ) }
    apic_1 { pt3dadd( 800.828, 486.468, 29.479, 0.3142 ) }
    apic_1 { pt3dadd( 801.752, 485.9, 29.1194, 0.3734 ) }
    apic_1 { pt3dadd( 802.466, 485.016, 28.9503, 0.334 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 15/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 787.669, 506.093, 29.3796, 0.3656 ) }
    dend_28 { pt3dadd( 787.55, 506.565, 30.5782, 0.2288 ) }
    dend_28 { pt3dadd( 787.271, 507.582, 31.682, 0.5154 ) }
    dend_28 { pt3dadd( 786.906, 508.604, 32.163, 0.499 ) }
    dend_28 { pt3dadd( 786.497, 509.661, 32.6172, 0.3972 ) }
    dend_28 { pt3dadd( 786.158, 510.634, 33.164, 0.3242 ) }
    dend_28 { pt3dadd( 786.177, 511.725, 33.6792, 0.3144 ) }
    dend_28 { pt3dadd( 786.568, 512.779, 34.0337, 0.374 ) }
    dend_28 { pt3dadd( 787.024, 513.821, 34.244, 0.3348 ) }
    dend_28 { pt3dadd( 787.098, 514.858, 34.5338, 0.3016 ) }
    dend_28 { pt3dadd( 787.149, 515.974, 34.8236, 0.2776 ) }
    dend_28 { pt3dadd( 786.977, 517.098, 35.0448, 0.2802 ) }
    dend_28 { pt3dadd( 786.189, 517.874, 35.1966, 0.285 ) }
    dend_28 { pt3dadd( 785.094, 518.143, 35.3438, 0.2938 ) }
    dend_28 { pt3dadd( 784.318, 518.933, 35.5365, 0.3112 ) }
    dend_28 { pt3dadd( 783.936, 519.993, 35.6292, 0.3382 ) }
    dend_28 { pt3dadd( 783.794, 521.074, 35.8366, 0.413 ) }
    dend_28 { pt3dadd( 783.736, 522.188, 36.101, 0.4328 ) }
    dend_28 { pt3dadd( 783.794, 523.309, 36.2443, 0.3594 ) }
    dend_28 { pt3dadd( 783.888, 524.444, 36.3538, 0.3 ) }
    dend_28 { pt3dadd( 783.798, 525.578, 36.5294, 0.2746 ) }
    dend_28 { pt3dadd( 783.698, 526.685, 36.65, 0.2746 ) }
    dend_28 { pt3dadd( 783.761, 527.776, 36.7872, 0.2746 ) }
    dend_28 { pt3dadd( 783.789, 528.662, 37.2397, 0.2748 ) }
    dend_28 { pt3dadd( 783.977, 529.069, 38.0486, 0.2748 ) }
    dend_28 { pt3dadd( 784.425, 529.515, 38.9712, 0.2752 ) }
    dend_28 { pt3dadd( 784.297, 530.6, 39.6354, 0.2758 ) }
    dend_28 { pt3dadd( 784.209, 531.676, 40.0184, 0.2766 ) }
    dend_28 { pt3dadd( 784.358, 532.773, 40.1982, 0.2784 ) }
    dend_28 { pt3dadd( 784.628, 533.876, 40.2928, 0.2816 ) }
    dend_28 { pt3dadd( 784.778, 534.917, 40.5082, 0.2874 ) }
    dend_28 { pt3dadd( 784.528, 535.869, 40.9301, 0.2994 ) }
    dend_28 { pt3dadd( 784.092, 536.869, 41.4565, 0.3152 ) }
    dend_28 { pt3dadd( 783.963, 537.973, 41.9919, 0.3756 ) }
    dend_28 { pt3dadd( 784.119, 539.097, 42.4864, 0.3378 ) }
    dend_28 { pt3dadd( 784.52, 540.158, 42.9164, 0.3076 ) }
    dend_28 { pt3dadd( 784.844, 541.246, 43.2799, 0.2882 ) }
    dend_28 { pt3dadd( 785.165, 542.282, 43.6929, 0.2994 ) }
    dend_28 { pt3dadd( 785.556, 543.322, 44.1353, 0.3228 ) }
    dend_28 { pt3dadd( 786.022, 544.363, 44.562, 0.3534 ) }
    dend_28 { pt3dadd( 786.419, 545.419, 45.0089, 0.4722 ) }
    dend_28 { pt3dadd( 786.683, 546.51, 45.4868, 0.3934 ) }
    dend_28 { pt3dadd( 786.999, 547.587, 45.9847, 0.3254 ) }
    dend_28 { pt3dadd( 787.31, 548.636, 46.5226, 0.2746 ) }
    dend_28 { pt3dadd( 787.399, 549.689, 47.1192, 0.2746 ) }
    dend_28 { pt3dadd( 787.321, 550.792, 47.6921, 0.2746 ) }
    dend_28 { pt3dadd( 787.262, 551.929, 48.174, 0.2746 ) }
    dend_28 { pt3dadd( 787.499, 553.031, 48.5517, 0.2746 ) }
    dend_28 { pt3dadd( 788.113, 553.975, 48.8443, 0.2748 ) }
    dend_28 { pt3dadd( 788.963, 554.723, 49.0823, 0.275 ) }
    dend_28 { pt3dadd( 789.25, 555.645, 49.399, 0.2754 ) }
    dend_28 { pt3dadd( 789.06, 556.73, 49.6776, 0.2762 ) }
    dend_28 { pt3dadd( 788.261, 557.468, 49.8954, 0.2776 ) }
    dend_28 { pt3dadd( 788.138, 558.099, 49.7958, 0.2802 ) }
    dend_28 { pt3dadd( 788.554, 558.994, 49.5606, 0.285 ) }
    dend_28 { pt3dadd( 788.095, 559.799, 49.6712, 0.2938 ) }
    dend_28 { pt3dadd( 788.114, 560.759, 50.0545, 0.3112 ) }
    dend_28 { pt3dadd( 788.507, 561.826, 50.4798, 0.3382 ) }
    dend_28 { pt3dadd( 789.093, 562.75, 51.0322, 0.413 ) }
    dend_28 { pt3dadd( 789.63, 563.661, 51.6928, 0.4328 ) }
    dend_28 { pt3dadd( 789.608, 564.758, 52.3225, 0.3594 ) }
    dend_28 { pt3dadd( 789.498, 565.894, 52.7556, 0.3 ) }
    dend_28 { pt3dadd( 789.371, 566.985, 53.107, 0.2746 ) }
    dend_28 { pt3dadd( 788.86, 567.922, 53.4836, 0.2746 ) }
    dend_28 { pt3dadd( 788.54, 568.992, 53.7023, 0.2746 ) }
    dend_28 { pt3dadd( 788.393, 570.056, 53.7362, 0.2746 ) }
    dend_28 { pt3dadd( 788.451, 571.068, 53.8465, 0.2746 ) }
    dend_28 { pt3dadd( 788.679, 572.095, 54.0985, 0.2744 ) }
    dend_28 { pt3dadd( 788.806, 573.221, 54.3673, 0.2744 ) }
    dend_28 { pt3dadd( 788.742, 574.299, 54.7534, 0.2742 ) }
    dend_28 { pt3dadd( 788.734, 575.308, 55.3224, 0.2742 ) }
    dend_28 { pt3dadd( 788.779, 576.41, 55.7847, 0.2736 ) }
    dend_28 { pt3dadd( 788.307, 577.405, 56.2248, 0.2728 ) }
    dend_28 { pt3dadd( 787.776, 578.31, 56.7238, 0.2712 ) }
    dend_28 { pt3dadd( 787.207, 579.286, 57.1539, 0.2684 ) }
    dend_28 { pt3dadd( 786.966, 580.387, 57.5126, 0.2626 ) }
    dend_28 { pt3dadd( 786.494, 581.427, 57.7618, 0.2542 ) }
    dend_28 { pt3dadd( 785.632, 582.176, 57.9214, 0.2288 ) }
    dend_28 { pt3dadd( 784.924, 583.044, 57.7769, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 787.669, 506.093, 29.3796, 0.3656 ) }
    dend_13 { pt3dadd( 787.732, 506.648, 29.4176, 0.4942 ) }
    dend_13 { pt3dadd( 787.67, 507.739, 29.2712, 0.4348 ) }
    dend_13 { pt3dadd( 787.391, 508.848, 29.1015, 0.3984 ) }
    dend_13 { pt3dadd( 787.098, 509.954, 28.9537, 0.4304 ) }
    dend_13 { pt3dadd( 786.791, 511.056, 28.8481, 0.4646 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 0/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 783.118, 497.718, 33.0826, 0.3796 ) }
    dend_11 { pt3dadd( 781.998, 497.574, 32.9482, 0.3452 ) }
    dend_11 { pt3dadd( 780.877, 497.43, 32.723, 0.321 ) }
    dend_11 { pt3dadd( 779.75, 497.301, 32.4439, 0.3132 ) }
    dend_11 { pt3dadd( 778.614, 497.219, 32.2129, 0.3478 ) }
    dend_11 { pt3dadd( 777.478, 497.156, 32.1275, 0.402 ) }
    dend_11 { pt3dadd( 776.345, 497.171, 32.1493, 0.5514 ) }
    dend_11 { pt3dadd( 775.206, 497.209, 32.2252, 0.591 ) }
    dend_11 { pt3dadd( 774.069, 497.132, 32.3056, 0.4442 ) }
    dend_11 { pt3dadd( 772.96, 496.887, 32.3672, 0.3254 ) }
    dend_11 { pt3dadd( 771.914, 496.441, 32.4285, 0.2746 ) }
    dend_11 { pt3dadd( 770.915, 495.887, 32.4677, 0.2746 ) }
    dend_11 { pt3dadd( 769.896, 495.376, 32.4537, 0.2746 ) }
    dend_11 { pt3dadd( 768.81, 495.053, 32.3826, 0.2746 ) }
    dend_11 { pt3dadd( 767.686, 494.87, 32.3089, 0.2746 ) }
    dend_11 { pt3dadd( 766.599, 494.565, 32.2146, 0.2746 ) }
    dend_11 { pt3dadd( 765.524, 494.211, 32.0723, 0.2748 ) }
    dend_11 { pt3dadd( 764.404, 494.043, 31.9396, 0.2748 ) }
    dend_11 { pt3dadd( 763.264, 493.943, 31.8517, 0.2752 ) }
    dend_11 { pt3dadd( 762.148, 493.708, 31.7974, 0.2758 ) }
    dend_11 { pt3dadd( 761.044, 493.413, 31.7716, 0.2766 ) }
    dend_11 { pt3dadd( 759.932, 493.142, 31.7822, 0.2782 ) }
    dend_11 { pt3dadd( 758.818, 492.887, 31.8237, 0.2814 ) }
    dend_11 { pt3dadd( 757.704, 492.627, 31.8797, 0.287 ) }
    dend_11 { pt3dadd( 756.622, 492.266, 31.9376, 0.2988 ) }
    dend_11 { pt3dadd( 755.628, 491.712, 31.9878, 0.3142 ) }
    dend_11 { pt3dadd( 754.669, 491.088, 32.0247, 0.3734 ) }
    dend_11 { pt3dadd( 753.699, 490.481, 32.0491, 0.3338 ) }
    dend_11 { pt3dadd( 752.726, 489.881, 32.0639, 0.3 ) }
    dend_11 { pt3dadd( 751.79, 489.226, 32.0737, 0.2746 ) }
    dend_11 { pt3dadd( 750.964, 488.44, 32.0816, 0.2746 ) }
    dend_11 { pt3dadd( 750.225, 487.567, 32.0911, 0.2746 ) }
    dend_11 { pt3dadd( 749.509, 486.675, 32.1042, 0.2746 ) }
    dend_11 { pt3dadd( 748.779, 485.795, 32.1227, 0.2748 ) }
    dend_11 { pt3dadd( 748.014, 484.944, 32.1488, 0.2748 ) }
    dend_11 { pt3dadd( 747.224, 484.117, 32.1849, 0.2752 ) }
    dend_11 { pt3dadd( 746.429, 483.294, 32.2339, 0.2758 ) }
    dend_11 { pt3dadd( 745.657, 482.451, 32.3036, 0.2766 ) }
    dend_11 { pt3dadd( 744.944, 481.559, 32.408, 0.2782 ) }
    dend_11 { pt3dadd( 744.271, 480.637, 32.5514, 0.2814 ) }
    dend_11 { pt3dadd( 743.606, 479.71, 32.7286, 0.287 ) }
    dend_11 { pt3dadd( 742.918, 478.802, 32.9378, 0.2988 ) }
    dend_11 { pt3dadd( 742.189, 477.934, 33.1814, 0.3142 ) }
    dend_11 { pt3dadd( 741.437, 477.088, 33.4505, 0.3736 ) }
    dend_11 { pt3dadd( 740.659, 476.264, 33.7246, 0.3342 ) }
    dend_11 { pt3dadd( 739.811, 475.506, 33.9724, 0.3004 ) }
    dend_11 { pt3dadd( 738.89, 474.831, 34.1692, 0.2754 ) }
    dend_11 { pt3dadd( 737.938, 474.196, 34.3132, 0.2762 ) }
    dend_11 { pt3dadd( 736.98, 473.571, 34.4176, 0.2776 ) }
    dend_11 { pt3dadd( 736.012, 472.962, 34.5005, 0.2802 ) }
    dend_11 { pt3dadd( 735.033, 472.371, 34.5803, 0.285 ) }
    dend_11 { pt3dadd( 734.047, 471.79, 34.673, 0.2942 ) }
    dend_11 { pt3dadd( 733.013, 471.31, 34.8023, 0.3108 ) }
    dend_11 { pt3dadd( 731.909, 471.086, 34.9992, 0.3432 ) }
    dend_11 { pt3dadd( 730.783, 471.026, 35.2671, 0.3922 ) }
    dend_11 { pt3dadd( 729.656, 471.003, 35.5883, 0.5396 ) }
    dend_11 { pt3dadd( 728.528, 470.985, 35.9419, 0.5384 ) }
    dend_11 { pt3dadd( 727.394, 471.0, 36.2942, 0.4962 ) }
    dend_11 { pt3dadd( 726.255, 471.073, 36.608, 0.3824 ) }
    dend_11 { pt3dadd( 725.115, 471.176, 36.8771, 0.3436 ) }
    dend_11 { pt3dadd( 723.977, 471.284, 37.1255, 0.351 ) }
    dend_11 { pt3dadd( 722.846, 471.405, 37.403, 0.4376 ) }
    dend_11 { pt3dadd( 721.736, 471.543, 37.758, 0.4734 ) }
    dend_11 { pt3dadd( 720.64, 471.688, 38.197, 0.4604 ) }
    dend_11 { pt3dadd( 719.544, 471.836, 38.6982, 0.3632 ) }
    dend_11 { pt3dadd( 718.441, 472.0, 39.2182, 0.3076 ) }
    dend_11 { pt3dadd( 717.329, 472.193, 39.7076, 0.2882 ) }
    dend_11 { pt3dadd( 716.214, 472.4, 40.1411, 0.2994 ) }
    dend_11 { pt3dadd( 715.098, 472.609, 40.5171, 0.3232 ) }
    dend_11 { pt3dadd( 713.97, 472.747, 40.8369, 0.3542 ) }
    dend_11 { pt3dadd( 712.833, 472.709, 41.0976, 0.4732 ) }
    dend_11 { pt3dadd( 711.703, 472.539, 41.3087, 0.395 ) }
    dend_11 { pt3dadd( 710.578, 472.33, 41.4929, 0.3284 ) }
    dend_11 { pt3dadd( 709.454, 472.117, 41.6727, 0.2802 ) }
    dend_11 { pt3dadd( 708.332, 471.908, 41.8869, 0.2854 ) }
    dend_11 { pt3dadd( 707.221, 471.707, 42.1845, 0.2942 ) }
    dend_11 { pt3dadd( 706.119, 471.511, 42.5802, 0.3118 ) }
    dend_11 { pt3dadd( 705.02, 471.315, 43.0584, 0.3394 ) }
    dend_11 { pt3dadd( 703.91, 471.193, 43.596, 0.415 ) }
    dend_11 { pt3dadd( 702.795, 471.238, 44.1689, 0.4364 ) }
    dend_11 { pt3dadd( 701.685, 471.398, 44.7569, 0.3664 ) }
    dend_11 { pt3dadd( 700.579, 471.589, 45.3502, 0.3124 ) }
    dend_11 { pt3dadd( 699.466, 471.702, 45.9516, 0.2988 ) }
    dend_11 { pt3dadd( 698.36, 471.59, 46.5716, 0.3142 ) }
    dend_11 { pt3dadd( 697.294, 471.273, 47.215, 0.3734 ) }
    dend_11 { pt3dadd( 696.245, 470.892, 47.8834, 0.3338 ) }
    dend_11 { pt3dadd( 695.237, 470.444, 48.5904, 0.3 ) }
    dend_11 { pt3dadd( 694.321, 469.881, 49.3553, 0.2746 ) }
    dend_11 { pt3dadd( 693.461, 469.257, 50.1724, 0.2746 ) }
    dend_11 { pt3dadd( 692.635, 468.587, 51.0138, 0.2746 ) }
    dend_11 { pt3dadd( 691.885, 467.816, 51.8414, 0.2746 ) }
    dend_11 { pt3dadd( 691.212, 466.959, 52.6229, 0.2746 ) }
    dend_11 { pt3dadd( 690.562, 466.078, 53.3436, 0.2746 ) }
    dend_11 { pt3dadd( 689.837, 465.23, 53.9683, 0.2746 ) }
    dend_11 { pt3dadd( 688.997, 464.465, 54.4558, 0.2746 ) }
    dend_11 { pt3dadd( 688.118, 463.733, 54.8178, 0.2746 ) }
    dend_11 { pt3dadd( 687.149, 463.14, 55.1065, 0.2746 ) }
    dend_11 { pt3dadd( 686.065, 462.894, 55.3876, 0.2746 ) }
    dend_11 { pt3dadd( 684.936, 462.799, 55.6542, 0.2746 ) }
    dend_11 { pt3dadd( 683.809, 462.62, 55.8603, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 682.691, 462.383, 56.019, 0.2746 ) }
    dend_11 { pt3dadd( 681.579, 462.12, 56.173, 0.2746 ) }
    dend_11 { pt3dadd( 680.561, 461.721, 56.4147, 0.2746 ) }
    dend_11 { pt3dadd( 679.55, 461.275, 56.7157, 0.2746 ) }
    dend_11 { pt3dadd( 678.506, 461.448, 56.8585, 0.2746 ) }
    dend_11 { pt3dadd( 677.568, 461.064, 57.1183, 0.2746 ) }
    dend_11 { pt3dadd( 676.836, 460.376, 57.2953, 0.2746 ) }
    dend_11 { pt3dadd( 675.931, 460.018, 57.3784, 0.2746 ) }
    dend_11 { pt3dadd( 674.888, 459.778, 57.5988, 0.2746 ) }
    dend_11 { pt3dadd( 673.802, 459.554, 57.8682, 0.2746 ) }
    dend_11 { pt3dadd( 672.68, 459.339, 58.1123, 0.2746 ) }
    dend_11 { pt3dadd( 671.574, 459.057, 58.3058, 0.2746 ) }
    dend_11 { pt3dadd( 670.494, 458.679, 58.4766, 0.2746 ) }
    dend_11 { pt3dadd( 669.391, 458.411, 58.63, 0.2746 ) }
    dend_11 { pt3dadd( 668.258, 458.34, 58.7882, 0.2746 ) }
    dend_11 { pt3dadd( 667.128, 458.336, 58.9929, 0.2746 ) }
    dend_11 { pt3dadd( 665.992, 458.363, 59.2178, 0.2746 ) }
    dend_11 { pt3dadd( 664.853, 458.443, 59.423, 0.2746 ) }
    dend_11 { pt3dadd( 663.712, 458.526, 59.6058, 0.2746 ) }
    dend_11 { pt3dadd( 662.576, 458.56, 59.7962, 0.2746 ) }
    dend_11 { pt3dadd( 661.447, 458.564, 60.0093, 0.2746 ) }
    dend_11 { pt3dadd( 660.312, 458.564, 60.207, 0.2746 ) }
    dend_11 { pt3dadd( 659.168, 458.564, 60.3576, 0.2746 ) }
    dend_11 { pt3dadd( 658.024, 458.564, 60.4629, 0.2746 ) }
    dend_11 { pt3dadd( 656.88, 458.564, 60.5282, 0.2746 ) }
    dend_11 { pt3dadd( 655.736, 458.545, 60.5595, 0.2746 ) }
    dend_11 { pt3dadd( 654.594, 458.487, 60.5685, 0.2746 ) }
    dend_11 { pt3dadd( 653.452, 458.46, 60.5637, 0.2746 ) }
    dend_11 { pt3dadd( 652.312, 458.517, 60.5441, 0.2746 ) }
    dend_11 { pt3dadd( 651.181, 458.668, 60.5326, 0.2746 ) }
    dend_11 { pt3dadd( 650.059, 458.879, 60.5662, 0.2746 ) }
    dend_11 { pt3dadd( 648.932, 459.06, 60.6388, 0.2746 ) }
    dend_11 { pt3dadd( 647.942, 459.537, 60.7326, 0.2746 ) }
    dend_11 { pt3dadd( 647.401, 460.506, 60.8471, 0.2746 ) }
    dend_11 { pt3dadd( 646.736, 461.408, 60.9868, 0.2746 ) }
    dend_11 { pt3dadd( 645.783, 462.014, 61.1747, 0.2746 ) }
    dend_11 { pt3dadd( 644.891, 462.687, 61.4401, 0.2746 ) }
    dend_11 { pt3dadd( 644.352, 463.63, 61.7904, 0.2746 ) }
    dend_11 { pt3dadd( 643.946, 464.679, 62.1726, 0.2746 ) }
    dend_11 { pt3dadd( 643.157, 465.462, 62.4694, 0.2746 ) }
    dend_11 { pt3dadd( 642.216, 466.093, 62.6662, 0.2746 ) }
    dend_11 { pt3dadd( 641.346, 466.777, 62.925, 0.2746 ) }
    dend_11 { pt3dadd( 640.626, 467.379, 63.3632, 0.2746 ) }
    dend_11 { pt3dadd( 639.931, 468.236, 63.7865, 0.2746 ) }
    dend_11 { pt3dadd( 639.35, 469.2, 64.0324, 0.2746 ) }
    dend_11 { pt3dadd( 638.749, 470.173, 64.204, 0.2746 ) }
    dend_11 { pt3dadd( 638.616, 471.305, 64.3154, 0.2744 ) }
    dend_11 { pt3dadd( 638.473, 472.41, 64.2975, 0.2744 ) }
    dend_11 { pt3dadd( 638.174, 473.514, 64.2939, 0.2742 ) }
    dend_11 { pt3dadd( 637.761, 474.576, 64.3863, 0.2742 ) }
    dend_11 { pt3dadd( 637.272, 475.597, 64.5932, 0.2736 ) }
    dend_11 { pt3dadd( 636.785, 476.518, 64.9849, 0.2728 ) }
    dend_11 { pt3dadd( 636.512, 477.515, 65.4948, 0.2712 ) }
    dend_11 { pt3dadd( 636.38, 478.648, 65.872, 0.2684 ) }
    dend_11 { pt3dadd( 635.868, 479.665, 66.1758, 0.2626 ) }
    dend_11 { pt3dadd( 635.12, 480.527, 66.3891, 0.2542 ) }
    dend_11 { pt3dadd( 634.533, 481.504, 66.5288, 0.2288 ) }
    dend_11 { pt3dadd( 633.888, 482.362, 66.1909, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 58/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 783.118, 497.718, 33.0826, 0.3796 ) }
    dend_4 { pt3dadd( 782.017, 497.964, 33.0655, 0.6864 ) }
    dend_4 { pt3dadd( 781.042, 498.561, 33.4208, 0.7626 ) }
    dend_4 { pt3dadd( 780.473, 499.552, 33.5555, 0.6836 ) }
    dend_4 { pt3dadd( 780.07, 500.53, 33.8638, 0.6946 ) }
    dend_4 { pt3dadd( 779.236, 501.312, 34.1505, 0.6362 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 64/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 790.575, 492.089, 11.1491, 0.4438 ) }
    dend_2 { pt3dadd( 790.027, 492.533, 10.6171, 0.4444 ) }
    dend_2 { pt3dadd( 789.055, 493.018, 10.0509, 0.3722 ) }
    dend_2 { pt3dadd( 788.128, 493.135, 9.4048, 0.367 ) }
    dend_2 { pt3dadd( 787.351, 493.344, 8.7196, 0.419 ) }
    dend_2 { pt3dadd( 786.338, 493.8, 8.2885, 0.4438 ) }
    dend_2 { pt3dadd( 785.499, 494.387, 8.2813, 0.3796 ) }
    dend_2 { pt3dadd( 785.292, 494.978, 8.811, 0.339 ) }
    dend_2 { pt3dadd( 785.388, 495.69, 9.687, 0.341 ) }
    dend_2 { pt3dadd( 784.794, 496.514, 10.5828, 0.4256 ) }
    dend_2 { pt3dadd( 783.894, 497.196, 11.3666, 0.42 ) }
    dend_2 { pt3dadd( 783.217, 497.988, 12.094, 0.511 ) }
    dend_2 { pt3dadd( 782.607, 498.842, 12.7104, 0.4184 ) }
    dend_2 { pt3dadd( 781.972, 499.671, 12.9888, 0.3668 ) }
    dend_2 { pt3dadd( 781.375, 500.415, 13.2778, 0.377 ) }
    dend_2 { pt3dadd( 780.716, 501.191, 13.6549, 0.3404 ) }
    dend_2 { pt3dadd( 780.019, 502.064, 13.861, 0.312 ) }
    dend_2 { pt3dadd( 779.371, 502.983, 13.8771, 0.2966 ) }
    dend_2 { pt3dadd( 778.519, 503.698, 13.8938, 0.3164 ) }
    dend_2 { pt3dadd( 777.642, 504.427, 13.8318, 0.348 ) }
    dend_2 { pt3dadd( 776.953, 505.316, 13.6113, 0.4312 ) }
    dend_2 { pt3dadd( 776.433, 506.316, 13.2908, 0.466 ) }
    dend_2 { pt3dadd( 776.183, 507.392, 12.883, 0.423 ) }
    dend_2 { pt3dadd( 775.793, 508.412, 12.4064, 0.4086 ) }
    dend_2 { pt3dadd( 775.102, 509.313, 11.9374, 0.5218 ) }
    dend_2 { pt3dadd( 774.483, 510.258, 11.504, 0.5104 ) }
    dend_2 { pt3dadd( 774.295, 511.37, 11.1429, 0.4198 ) }
    dend_2 { pt3dadd( 774.569, 512.473, 10.848, 0.3594 ) }
    dend_2 { pt3dadd( 774.893, 513.544, 10.4933, 0.4116 ) }
    dend_2 { pt3dadd( 775.171, 514.511, 9.9416, 0.3988 ) }
    dend_2 { pt3dadd( 775.443, 515.451, 9.2512, 0.4482 ) }
    dend_2 { pt3dadd( 775.174, 516.522, 8.628, 0.4148 ) }
    dend_2 { pt3dadd( 774.59, 517.393, 7.952, 0.5014 ) }
    dend_2 { pt3dadd( 774.023, 518.163, 7.2208, 0.3998 ) }
    dend_2 { pt3dadd( 773.283, 518.818, 6.5257, 0.3374 ) }
    dend_2 { pt3dadd( 772.735, 519.601, 5.913, 0.2966 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 772.229, 520.135, 5.8225, 0.3164 ) }
    dend_2 { pt3dadd( 771.262, 520.422, 6.031, 0.3468 ) }
    dend_2 { pt3dadd( 770.369, 520.78, 6.5234, 0.435 ) }
    dend_2 { pt3dadd( 769.312, 521.134, 7.0547, 0.4434 ) }
    dend_2 { pt3dadd( 768.238, 521.105, 7.3511, 0.5254 ) }
    dend_2 { pt3dadd( 767.14, 521.367, 7.61, 0.5848 ) }
    dend_2 { pt3dadd( 766.281, 522.117, 7.7053, 0.6864 ) }
    dend_2 { pt3dadd( 765.701, 523.093, 7.8532, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 8/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 790.575, 492.089, 11.1491, 0.4438 ) }
    dend_1 { pt3dadd( 791.057, 490.993, 10.0271, 0.4894 ) }
    dend_1 { pt3dadd( 791.062, 489.891, 10.134, 0.4182 ) }
    dend_1 { pt3dadd( 790.669, 488.859, 10.2236, 0.4046 ) }
    dend_1 { pt3dadd( 789.957, 487.983, 10.272, 0.4906 ) }
    dend_1 { pt3dadd( 789.135, 487.199, 10.2267, 0.5686 ) }
    dend_1 { pt3dadd( 788.36, 486.392, 10.0667, 0.6514 ) }
    dend_1 { pt3dadd( 787.753, 485.462, 9.8169, 0.646 ) }
    dend_1 { pt3dadd( 787.414, 484.389, 9.5809, 0.4932 ) }
    dend_1 { pt3dadd( 787.261, 483.261, 9.4042, 0.4422 ) }
    dend_1 { pt3dadd( 787.034, 482.146, 9.2414, 0.3666 ) }
    dend_1 { pt3dadd( 786.603, 481.107, 9.0462, 0.3632 ) }
    dend_1 { pt3dadd( 786.084, 480.101, 8.8227, 0.3804 ) }
    dend_1 { pt3dadd( 785.56, 479.088, 8.6028, 0.5242 ) }
    dend_1 { pt3dadd( 784.982, 478.104, 8.4109, 0.4792 ) }
    dend_1 { pt3dadd( 784.336, 477.162, 8.2366, 0.5356 ) }
    dend_1 { pt3dadd( 783.737, 476.215, 7.9941, 0.4174 ) }
    dend_1 { pt3dadd( 783.214, 475.244, 7.6566, 0.3652 ) }
    dend_1 { pt3dadd( 782.717, 474.243, 7.2633, 0.3738 ) }
    dend_1 { pt3dadd( 782.296, 473.19, 6.8528, 0.3346 ) }
    dend_1 { pt3dadd( 781.728, 472.212, 6.4969, 0.3012 ) }
    dend_1 { pt3dadd( 780.74, 471.757, 6.1823, 0.2766 ) }
    dend_1 { pt3dadd( 779.657, 471.945, 5.8016, 0.2784 ) }
    dend_1 { pt3dadd( 778.689, 472.328, 5.2632, 0.2816 ) }
    dend_1 { pt3dadd( 777.744, 472.27, 4.5468, 0.2874 ) }
    dend_1 { pt3dadd( 776.675, 472.074, 3.8035, 0.2994 ) }
    dend_1 { pt3dadd( 775.625, 471.637, 3.1748, 0.3152 ) }
    dend_1 { pt3dadd( 774.739, 470.98, 2.5794, 0.3756 ) }
    dend_1 { pt3dadd( 773.872, 470.575, 1.9309, 0.339 ) }
    dend_1 { pt3dadd( 773.643, 469.536, 1.3761, 0.305 ) }
    dend_1 { pt3dadd( 773.755, 468.398, 1.0203, 0.305 ) }
    dend_1 { pt3dadd( 774.215, 467.458, 1.1295, 0.2288 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 40/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 761.099, 514.626, 32.7516, 0.2746 ) }
    dend_74 { pt3dadd( 760.089, 514.104, 32.9879, 0.2746 ) }
    dend_74 { pt3dadd( 759.276, 513.383, 33.3001, 0.2746 ) }
    dend_74 { pt3dadd( 758.629, 512.453, 33.6213, 0.2746 ) }
    dend_74 { pt3dadd( 757.863, 511.608, 33.9192, 0.2748 ) }
    dend_74 { pt3dadd( 757.072, 510.798, 34.1998, 0.2748 ) }
    dend_74 { pt3dadd( 756.127, 510.176, 34.4369, 0.2752 ) }
    dend_74 { pt3dadd( 755.099, 509.683, 34.6506, 0.2758 ) }
    dend_74 { pt3dadd( 754.077, 509.173, 34.837, 0.2766 ) }
    dend_74 { pt3dadd( 753.076, 508.764, 35.0826, 0.2782 ) }
    dend_74 { pt3dadd( 752.085, 508.436, 35.3578, 0.2814 ) }
    dend_74 { pt3dadd( 751.061, 507.974, 35.481, 0.287 ) }
    dend_74 { pt3dadd( 750.03, 507.524, 35.532, 0.2988 ) }
    dend_74 { pt3dadd( 748.916, 507.277, 35.581, 0.3142 ) }
    dend_74 { pt3dadd( 747.818, 506.985, 35.6126, 0.3734 ) }
    dend_74 { pt3dadd( 746.753, 506.578, 35.6152, 0.3338 ) }
    dend_74 { pt3dadd( 745.669, 506.211, 35.6367, 0.3 ) }
    dend_74 { pt3dadd( 744.579, 505.865, 35.714, 0.2746 ) }
    dend_74 { pt3dadd( 743.472, 505.638, 35.8588, 0.2746 ) }
    dend_74 { pt3dadd( 742.365, 505.458, 36.0847, 0.2746 ) }
    dend_74 { pt3dadd( 741.253, 505.274, 36.3479, 0.2746 ) }
    dend_74 { pt3dadd( 740.113, 505.236, 36.6134, 0.2746 ) }
    dend_74 { pt3dadd( 738.995, 505.135, 36.9079, 0.2746 ) }
    dend_74 { pt3dadd( 737.926, 504.805, 37.205, 0.2746 ) }
    dend_74 { pt3dadd( 736.846, 504.457, 37.4489, 0.2746 ) }
    dend_74 { pt3dadd( 735.712, 504.339, 37.6429, 0.2746 ) }
    dend_74 { pt3dadd( 734.568, 504.329, 37.8084, 0.2746 ) }
    dend_74 { pt3dadd( 733.426, 504.284, 37.961, 0.2746 ) }
    dend_74 { pt3dadd( 732.37, 503.942, 38.1296, 0.2746 ) }
    dend_74 { pt3dadd( 731.527, 503.246, 38.3953, 0.2746 ) }
    dend_74 { pt3dadd( 730.499, 503.01, 38.7436, 0.2746 ) }
    dend_74 { pt3dadd( 729.444, 502.623, 39.0883, 0.2748 ) }
    dend_74 { pt3dadd( 728.379, 502.219, 39.3982, 0.275 ) }
    dend_74 { pt3dadd( 727.247, 502.183, 39.6505, 0.2754 ) }
    dend_74 { pt3dadd( 726.229, 502.567, 39.7384, 0.276 ) }
    dend_74 { pt3dadd( 725.099, 502.539, 39.8163, 0.2774 ) }
    dend_74 { pt3dadd( 724.112, 501.984, 39.9661, 0.2792 ) }
    dend_74 { pt3dadd( 723.156, 501.48, 40.2752, 0.2834 ) }
    dend_74 { pt3dadd( 722.136, 501.231, 40.7366, 0.2906 ) }
    dend_74 { pt3dadd( 721.022, 501.053, 41.2082, 0.3056 ) }
    dend_74 { pt3dadd( 719.902, 500.879, 41.554, 0.3264 ) }
    dend_74 { pt3dadd( 718.778, 500.713, 41.8743, 0.3976 ) }
    dend_74 { pt3dadd( 717.691, 500.471, 42.2066, 0.3734 ) }
    dend_74 { pt3dadd( 716.647, 500.06, 42.5247, 0.3988 ) }
    dend_74 { pt3dadd( 715.517, 499.913, 42.789, 0.3338 ) }
    dend_74 { pt3dadd( 714.404, 500.08, 42.9276, 0.3 ) }
    dend_74 { pt3dadd( 713.262, 500.041, 43.0422, 0.2746 ) }
    dend_74 { pt3dadd( 712.173, 499.775, 43.2239, 0.2746 ) }
    dend_74 { pt3dadd( 711.045, 499.677, 43.4372, 0.2746 ) }
    dend_74 { pt3dadd( 709.911, 499.69, 43.6626, 0.2746 ) }
    dend_74 { pt3dadd( 708.78, 499.862, 43.8819, 0.2746 ) }
    dend_74 { pt3dadd( 707.648, 500.007, 44.1123, 0.2746 ) }
    dend_74 { pt3dadd( 706.503, 500.034, 44.35, 0.2746 ) }
    dend_74 { pt3dadd( 705.359, 500.034, 44.5992, 0.2746 ) }
    dend_74 { pt3dadd( 704.304, 500.08, 44.9515, 0.2746 ) }
    dend_74 { pt3dadd( 703.415, 500.214, 45.5549, 0.2746 ) }
    dend_74 { pt3dadd( 702.375, 500.263, 46.2515, 0.2746 ) }
    dend_74 { pt3dadd( 701.298, 500.103, 46.9098, 0.2746 ) }
    dend_74 { pt3dadd( 700.352, 499.483, 47.439, 0.2746 ) }
    dend_74 { pt3dadd( 699.379, 498.984, 47.845, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_74 { pt3dadd( 698.253, 498.847, 48.1746, 0.2746 ) }
    dend_74 { pt3dadd( 697.412, 498.538, 48.5906, 0.2746 ) }
    dend_74 { pt3dadd( 696.36, 498.286, 48.9308, 0.2746 ) }
    dend_74 { pt3dadd( 695.236, 498.075, 49.1795, 0.2746 ) }
    dend_74 { pt3dadd( 694.152, 497.714, 49.3562, 0.2746 ) }
    dend_74 { pt3dadd( 693.078, 497.321, 49.4676, 0.2746 ) }
    dend_74 { pt3dadd( 691.947, 497.178, 49.5205, 0.2746 ) }
    dend_74 { pt3dadd( 690.803, 497.165, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 689.659, 497.165, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 688.516, 497.118, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 687.375, 497.061, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 686.244, 496.887, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 685.224, 496.382, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 684.219, 495.835, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 683.227, 495.267, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 682.232, 494.701, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 681.226, 494.158, 49.5281, 0.2746 ) }
    dend_74 { pt3dadd( 680.235, 493.585, 49.5281, 0.2744 ) }
    dend_74 { pt3dadd( 679.517, 492.705, 49.5281, 0.2744 ) }
    dend_74 { pt3dadd( 678.731, 491.874, 49.5281, 0.2742 ) }
    dend_74 { pt3dadd( 677.746, 491.3, 49.5281, 0.2742 ) }
    dend_74 { pt3dadd( 676.617, 491.118, 49.5281, 0.2736 ) }
    dend_74 { pt3dadd( 675.501, 490.866, 49.5281, 0.2728 ) }
    dend_74 { pt3dadd( 674.387, 490.604, 49.5281, 0.2712 ) }
    dend_74 { pt3dadd( 673.292, 490.273, 49.5281, 0.2684 ) }
    dend_74 { pt3dadd( 672.229, 489.849, 49.5281, 0.2626 ) }
    dend_74 { pt3dadd( 671.136, 489.517, 49.5281, 0.2542 ) }
    dend_74 { pt3dadd( 669.993, 489.45, 49.5281, 0.2288 ) }
    dend_74 { pt3dadd( 668.851, 489.383, 49.5281, 0.2288 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 29/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 761.099, 514.626, 32.7516, 0.2746 ) }
    dend_73 { pt3dadd( 760.455, 514.341, 33.1257, 0.2288 ) }
    dend_73 { pt3dadd( 759.445, 513.937, 33.6006, 0.2762 ) }
    dend_73 { pt3dadd( 758.371, 513.817, 33.8148, 0.2776 ) }
    dend_73 { pt3dadd( 757.237, 513.914, 33.9735, 0.28 ) }
    dend_73 { pt3dadd( 756.094, 513.95, 34.0505, 0.2846 ) }
    dend_73 { pt3dadd( 755.033, 514.172, 33.9732, 0.2934 ) }
    dend_73 { pt3dadd( 754.011, 514.386, 33.7044, 0.3092 ) }
    dend_73 { pt3dadd( 752.921, 514.44, 33.3376, 0.3404 ) }
    dend_73 { pt3dadd( 751.9, 514.773, 33.0736, 0.3874 ) }
    dend_73 { pt3dadd( 750.941, 515.349, 32.9521, 0.5294 ) }
    dend_73 { pt3dadd( 749.973, 515.953, 32.8734, 0.5256 ) }
    dend_73 { pt3dadd( 748.972, 516.491, 32.8121, 0.4416 ) }
    dend_73 { pt3dadd( 747.908, 516.897, 32.7886, 0.4306 ) }
    dend_73 { pt3dadd( 746.847, 517.311, 32.8098, 0.3946 ) }
    dend_73 { pt3dadd( 745.795, 517.755, 32.8292, 0.4032 ) }
    dend_73 { pt3dadd( 744.72, 518.135, 32.8174, 0.5118 ) }
    dend_73 { pt3dadd( 743.692, 518.607, 32.7914, 0.492 ) }
    dend_73 { pt3dadd( 742.795, 519.304, 32.7662, 0.3848 ) }
    dend_73 { pt3dadd( 741.992, 520.089, 32.804, 0.3 ) }
    dend_73 { pt3dadd( 741.231, 520.883, 32.94, 0.2746 ) }
    dend_73 { pt3dadd( 740.444, 521.675, 33.105, 0.2746 ) }
    dend_73 { pt3dadd( 739.877, 522.612, 33.178, 0.2746 ) }
    dend_73 { pt3dadd( 739.795, 523.622, 33.0506, 0.2748 ) }
    dend_73 { pt3dadd( 739.482, 524.585, 32.8082, 0.2748 ) }
    dend_73 { pt3dadd( 738.723, 525.407, 32.5878, 0.2752 ) }
    dend_73 { pt3dadd( 737.831, 526.121, 32.4526, 0.2758 ) }
    dend_73 { pt3dadd( 736.804, 526.536, 32.4808, 0.2764 ) }
    dend_73 { pt3dadd( 735.849, 526.605, 32.8076, 0.278 ) }
    dend_73 { pt3dadd( 734.981, 527.08, 33.3161, 0.281 ) }
    dend_73 { pt3dadd( 734.211, 527.899, 33.7879, 0.2866 ) }
    dend_73 { pt3dadd( 733.373, 528.676, 34.1463, 0.2968 ) }
    dend_73 { pt3dadd( 732.44, 529.331, 34.3608, 0.3168 ) }
    dend_73 { pt3dadd( 731.447, 529.895, 34.4588, 0.3476 ) }
    dend_73 { pt3dadd( 730.409, 530.313, 34.5425, 0.4364 ) }
    dend_73 { pt3dadd( 729.334, 530.691, 34.5783, 0.447 ) }
    dend_73 { pt3dadd( 728.252, 530.981, 34.4957, 0.5266 ) }
    dend_73 { pt3dadd( 727.129, 531.152, 34.3661, 0.6116 ) }
    dend_73 { pt3dadd( 726.045, 531.502, 34.2577, 0.6182 ) }
    dend_73 { pt3dadd( 725.024, 531.995, 34.0962, 0.4474 ) }
    dend_73 { pt3dadd( 723.999, 532.479, 33.882, 0.3316 ) }
    dend_73 { pt3dadd( 722.97, 532.977, 33.675, 0.2862 ) }
    dend_73 { pt3dadd( 722.008, 533.594, 33.495, 0.296 ) }
    dend_73 { pt3dadd( 721.173, 534.369, 33.3127, 0.3152 ) }
    dend_73 { pt3dadd( 720.626, 535.367, 33.1307, 0.3458 ) }
    dend_73 { pt3dadd( 720.078, 536.353, 32.9104, 0.427 ) }
    dend_73 { pt3dadd( 719.292, 537.167, 32.6816, 0.4582 ) }
    dend_73 { pt3dadd( 718.343, 537.785, 32.4531, 0.409 ) }
    dend_73 { pt3dadd( 717.386, 538.393, 32.23, 0.3816 ) }
    dend_73 { pt3dadd( 716.386, 538.943, 32.0676, 0.4768 ) }
    dend_73 { pt3dadd( 715.672, 539.828, 31.995, 0.4014 ) }
    dend_73 { pt3dadd( 715.152, 540.845, 32.0046, 0.3418 ) }
    dend_73 { pt3dadd( 714.144, 541.326, 32.1185, 0.2994 ) }
    dend_73 { pt3dadd( 713.02, 541.509, 32.2577, 0.3474 ) }
    dend_73 { pt3dadd( 712.611, 542.565, 32.3772, 0.2796 ) }
    dend_73 { pt3dadd( 712.381, 543.686, 32.5346, 0.2288 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 85/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 767.626, 519.49, 26.9114, 0.6712 ) }
    dend_71 { pt3dadd( 766.755, 520.494, 26.2214, 0.5852 ) }
    dend_71 { pt3dadd( 766.141, 521.43, 25.6156, 0.4574 ) }
    dend_71 { pt3dadd( 765.548, 522.405, 25.4152, 0.4624 ) }
    dend_71 { pt3dadd( 764.89, 523.271, 25.1475, 0.4408 ) }
    dend_71 { pt3dadd( 763.943, 523.612, 24.723, 0.5504 ) }
    dend_71 { pt3dadd( 762.883, 523.683, 24.2307, 0.4868 ) }
    dend_71 { pt3dadd( 761.999, 524.323, 23.7249, 0.5202 ) }
    dend_71 { pt3dadd( 761.234, 525.105, 23.2348, 0.532 ) }
    dend_71 { pt3dadd( 760.178, 525.367, 22.8099, 0.5716 ) }
    dend_71 { pt3dadd( 759.074, 525.081, 22.4372, 0.5568 ) }
    dend_71 { pt3dadd( 758.016, 524.686, 22.0604, 0.7274 ) }
    dend_71 { pt3dadd( 757.045, 524.166, 21.6173, 0.7716 ) }
    dend_71 { pt3dadd( 756.223, 523.44, 21.1049, 0.571 ) }
    dend_71 { pt3dadd( 755.482, 522.67, 20.4992, 0.4248 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_71 { pt3dadd( 754.611, 522.003, 19.893, 0.4318 ) }
    dend_71 { pt3dadd( 753.52, 521.744, 19.3476, 0.4686 ) }
    dend_71 { pt3dadd( 752.393, 521.846, 18.8321, 0.4208 ) }
    dend_71 { pt3dadd( 751.313, 522.108, 18.286, 0.439 ) }
    dend_71 { pt3dadd( 750.328, 522.548, 17.6834, 0.4104 ) }
    dend_71 { pt3dadd( 749.447, 523.222, 17.0515, 0.4318 ) }
    dend_71 { pt3dadd( 748.493, 523.763, 16.3955, 0.567 ) }
    dend_71 { pt3dadd( 747.458, 524.125, 15.7072, 0.5838 ) }
    dend_71 { pt3dadd( 746.536, 524.64, 14.9799, 0.6068 ) }
    dend_71 { pt3dadd( 745.688, 525.244, 14.2299, 0.4586 ) }
    dend_71 { pt3dadd( 744.752, 525.827, 13.5509, 0.4252 ) }
    dend_71 { pt3dadd( 743.711, 526.229, 12.9863, 0.3354 ) }
    dend_71 { pt3dadd( 742.592, 526.191, 12.531, 0.3028 ) }
    dend_71 { pt3dadd( 741.482, 525.953, 12.2203, 0.2798 ) }
    dend_71 { pt3dadd( 740.373, 525.952, 11.9769, 0.2842 ) }
    dend_71 { pt3dadd( 739.362, 526.317, 11.6391, 0.2924 ) }
    dend_71 { pt3dadd( 738.449, 526.852, 11.1734, 0.3086 ) }
    dend_71 { pt3dadd( 737.458, 527.327, 10.6738, 0.3326 ) }
    dend_71 { pt3dadd( 736.384, 527.671, 10.1941, 0.4072 ) }
    dend_71 { pt3dadd( 735.314, 527.812, 9.6907, 0.3986 ) }
    dend_71 { pt3dadd( 734.212, 527.748, 9.2487, 0.409 ) }
    dend_71 { pt3dadd( 733.125, 527.835, 9.035, 0.53 ) }
    dend_71 { pt3dadd( 732.136, 528.319, 8.9599, 0.4898 ) }
    dend_71 { pt3dadd( 731.213, 528.903, 8.8238, 0.555 ) }
    dend_71 { pt3dadd( 730.306, 529.561, 8.6782, 0.4546 ) }
    dend_71 { pt3dadd( 729.605, 530.424, 8.6432, 0.4284 ) }
    dend_71 { pt3dadd( 729.087, 531.43, 8.6484, 0.5176 ) }
    dend_71 { pt3dadd( 728.601, 532.464, 8.6316, 0.473 ) }
    dend_71 { pt3dadd( 728.156, 533.516, 8.5635, 0.4936 ) }
    dend_71 { pt3dadd( 727.728, 534.566, 8.4212, 0.4884 ) }
    dend_71 { pt3dadd( 727.108, 535.514, 8.2172, 0.4596 ) }
    dend_71 { pt3dadd( 726.292, 536.31, 7.9602, 0.5008 ) }
    dend_71 { pt3dadd( 725.405, 537.014, 7.6367, 0.575 ) }
    dend_71 { pt3dadd( 724.346, 537.336, 7.2448, 0.4946 ) }
    dend_71 { pt3dadd( 723.28, 537.034, 6.8199, 0.4876 ) }
    dend_71 { pt3dadd( 722.261, 536.557, 6.3669, 0.4718 ) }
    dend_71 { pt3dadd( 721.231, 536.144, 5.8772, 0.4572 ) }
    dend_71 { pt3dadd( 720.146, 535.966, 5.3651, 0.3574 ) }
    dend_71 { pt3dadd( 719.068, 536.208, 4.8495, 0.2966 ) }
    dend_71 { pt3dadd( 718.45, 537.062, 4.3137, 0.2684 ) }
    dend_71 { pt3dadd( 718.768, 538.109, 3.9859, 0.2626 ) }
    dend_71 { pt3dadd( 719.648, 538.54, 3.9486, 0.2542 ) }
    dend_71 { pt3dadd( 720.698, 538.397, 3.7677, 0.2288 ) }
    dend_71 { pt3dadd( 721.635, 538.481, 2.8, 0.2288 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 44/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 767.626, 519.49, 26.9114, 0.6712 ) }
    dend_68 { pt3dadd( 766.372, 519.464, 26.4209, 0.3942 ) }
    dend_68 { pt3dadd( 765.336, 519.109, 25.8365, 0.4296 ) }
    dend_68 { pt3dadd( 764.289, 518.801, 25.1857, 0.4278 ) }
    dend_68 { pt3dadd( 763.276, 518.46, 24.4824, 0.5262 ) }
    dend_68 { pt3dadd( 762.295, 517.972, 23.7843, 0.4408 ) }
    dend_68 { pt3dadd( 761.261, 517.515, 23.157, 0.4392 ) }
    dend_68 { pt3dadd( 760.204, 517.167, 22.5721, 0.3612 ) }
    dend_68 { pt3dadd( 759.1, 517.036, 22.032, 0.3526 ) }
    dend_68 { pt3dadd( 757.966, 517.181, 21.6325, 0.3618 ) }
    dend_68 { pt3dadd( 756.838, 517.345, 21.3002, 0.4868 ) }
    dend_68 { pt3dadd( 755.741, 517.291, 20.9453, 0.4216 ) }
    dend_68 { pt3dadd( 754.795, 516.696, 20.6148, 0.3728 ) }
    dend_68 { pt3dadd( 753.865, 516.052, 20.3412, 0.3878 ) }
    dend_68 { pt3dadd( 752.799, 516.289, 20.0632, 0.3618 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 59/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 807.077, 516.396, 35.9103, 0.3 ) }
    dend_61 { pt3dadd( 806.9, 517.143, 36.9354, 0.2746 ) }
    dend_61 { pt3dadd( 806.784, 518.051, 38.0789, 0.2746 ) }
    dend_61 { pt3dadd( 806.801, 519.069, 39.1854, 0.2746 ) }
    dend_61 { pt3dadd( 807.03, 520.127, 40.1817, 0.2746 ) }
    dend_61 { pt3dadd( 807.419, 521.178, 41.0278, 0.2746 ) }
    dend_61 { pt3dadd( 807.757, 522.26, 41.7189, 0.2746 ) }
    dend_61 { pt3dadd( 807.958, 523.381, 42.2719, 0.2746 ) }
    dend_61 { pt3dadd( 808.118, 524.505, 42.7703, 0.2746 ) }
    dend_61 { pt3dadd( 808.385, 525.586, 43.2928, 0.2746 ) }
    dend_61 { pt3dadd( 808.956, 526.525, 43.8558, 0.2746 ) }
    dend_61 { pt3dadd( 809.792, 527.211, 44.4822, 0.2746 ) }
    dend_61 { pt3dadd( 810.631, 527.747, 45.2253, 0.2746 ) }
    dend_61 { pt3dadd( 811.335, 528.483, 46.0118, 0.2746 ) }
    dend_61 { pt3dadd( 811.877, 529.457, 46.6914, 0.2746 ) }
    dend_61 { pt3dadd( 812.337, 530.503, 47.2223, 0.2746 ) }
    dend_61 { pt3dadd( 812.709, 531.579, 47.6434, 0.2746 ) }
    dend_61 { pt3dadd( 813.04, 532.665, 47.992, 0.2746 ) }
    dend_61 { pt3dadd( 813.449, 533.724, 48.284, 0.2746 ) }
    dend_61 { pt3dadd( 813.988, 534.729, 48.5316, 0.2746 ) }
    dend_61 { pt3dadd( 814.867, 535.417, 48.7558, 0.2746 ) }
    dend_61 { pt3dadd( 815.96, 535.704, 48.9726, 0.2746 ) }
    dend_61 { pt3dadd( 816.945, 536.251, 49.1938, 0.2746 ) }
    dend_61 { pt3dadd( 817.229, 537.262, 49.4998, 0.2746 ) }
    dend_61 { pt3dadd( 817.609, 538.273, 49.9338, 0.2746 ) }
    dend_61 { pt3dadd( 818.28, 539.142, 50.4409, 0.2746 ) }
    dend_61 { pt3dadd( 819.209, 539.737, 50.9802, 0.2746 ) }
    dend_61 { pt3dadd( 820.215, 540.217, 51.5259, 0.2746 ) }
    dend_61 { pt3dadd( 821.199, 540.635, 52.1058, 0.2746 ) }
    dend_61 { pt3dadd( 822.267, 540.98, 52.5423, 0.2746 ) }
    dend_61 { pt3dadd( 823.379, 541.241, 52.8637, 0.2746 ) }
    dend_61 { pt3dadd( 824.499, 541.472, 53.1283, 0.2746 ) }
    dend_61 { pt3dadd( 825.301, 542.237, 53.3758, 0.2746 ) }
    dend_61 { pt3dadd( 826.121, 543.032, 53.6452, 0.2746 ) }
    dend_61 { pt3dadd( 827.041, 543.673, 54.0184, 0.2746 ) }
    dend_61 { pt3dadd( 827.777, 544.471, 54.549, 0.2746 ) }
    dend_61 { pt3dadd( 828.523, 545.076, 55.2773, 0.2746 ) }
    dend_61 { pt3dadd( 828.723, 546.07, 56.1103, 0.2746 ) }
    dend_61 { pt3dadd( 829.055, 547.144, 56.8845, 0.2746 ) }
    dend_61 { pt3dadd( 829.177, 548.228, 57.6232, 0.2746 ) }
    dend_61 { pt3dadd( 828.994, 549.266, 58.3442, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_61 { pt3dadd( 828.905, 550.391, 58.9089, 0.2746 ) }
    dend_61 { pt3dadd( 828.874, 551.492, 59.3214, 0.2746 ) }
    dend_61 { pt3dadd( 828.602, 552.53, 59.738, 0.2746 ) }
    dend_61 { pt3dadd( 828.814, 553.589, 60.1446, 0.2746 ) }
    dend_61 { pt3dadd( 829.398, 554.556, 60.466, 0.2746 ) }
    dend_61 { pt3dadd( 830.089, 555.457, 60.7429, 0.2746 ) }
    dend_61 { pt3dadd( 830.036, 555.918, 60.9736, 0.2746 ) }
    dend_61 { pt3dadd( 830.333, 556.879, 61.1506, 0.2746 ) }
    dend_61 { pt3dadd( 830.745, 557.946, 61.2769, 0.2746 ) }
    dend_61 { pt3dadd( 831.156, 559.012, 61.3746, 0.2746 ) }
    dend_61 { pt3dadd( 831.568, 560.08, 61.4594, 0.2746 ) }
    dend_61 { pt3dadd( 831.98, 561.146, 61.5345, 0.2746 ) }
    dend_61 { pt3dadd( 832.392, 562.213, 61.6053, 0.2746 ) }
    dend_61 { pt3dadd( 832.803, 563.28, 61.6742, 0.2746 ) }
    dend_61 { pt3dadd( 833.215, 564.347, 61.7403, 0.2746 ) }
    dend_61 { pt3dadd( 833.88, 565.205, 61.7991, 0.2746 ) }
    dend_61 { pt3dadd( 834.85, 565.811, 61.8475, 0.2746 ) }
    dend_61 { pt3dadd( 835.82, 566.416, 61.8906, 0.2746 ) }
    dend_61 { pt3dadd( 836.791, 567.021, 61.9335, 0.2746 ) }
    dend_61 { pt3dadd( 837.761, 567.628, 61.9811, 0.2746 ) }
    dend_61 { pt3dadd( 838.481, 568.41, 62.0452, 0.2746 ) }
    dend_61 { pt3dadd( 838.728, 569.524, 62.1424, 0.2746 ) }
    dend_61 { pt3dadd( 838.976, 570.64, 62.2675, 0.2746 ) }
    dend_61 { pt3dadd( 839.224, 571.755, 62.4148, 0.2746 ) }
    dend_61 { pt3dadd( 839.471, 572.869, 62.5811, 0.2746 ) }
    dend_61 { pt3dadd( 839.718, 573.985, 62.7626, 0.2746 ) }
    dend_61 { pt3dadd( 839.966, 575.1, 62.9574, 0.2746 ) }
    dend_61 { pt3dadd( 840.213, 576.216, 63.1649, 0.2746 ) }
    dend_61 { pt3dadd( 840.469, 577.325, 63.387, 0.2746 ) }
    dend_61 { pt3dadd( 841.168, 578.216, 63.6591, 0.2746 ) }
    dend_61 { pt3dadd( 841.867, 579.107, 63.9691, 0.2746 ) }
    dend_61 { pt3dadd( 842.566, 579.998, 64.3042, 0.2746 ) }
    dend_61 { pt3dadd( 843.264, 580.889, 64.6531, 0.2746 ) }
    dend_61 { pt3dadd( 843.963, 581.779, 65.004, 0.2746 ) }
    dend_61 { pt3dadd( 844.662, 582.67, 65.3472, 0.2746 ) }
    dend_61 { pt3dadd( 845.096, 583.678, 65.6578, 0.2746 ) }
    dend_61 { pt3dadd( 845.255, 584.809, 65.9224, 0.2746 ) }
    dend_61 { pt3dadd( 845.413, 585.941, 66.152, 0.2746 ) }
    dend_61 { pt3dadd( 845.572, 587.071, 66.3558, 0.2746 ) }
    dend_61 { pt3dadd( 845.729, 588.203, 66.544, 0.2746 ) }
    dend_61 { pt3dadd( 845.888, 589.333, 66.7251, 0.2746 ) }
    dend_61 { pt3dadd( 846.046, 590.464, 66.9071, 0.2746 ) }
    dend_61 { pt3dadd( 846.205, 591.596, 67.0939, 0.2744 ) }
    dend_61 { pt3dadd( 846.647, 592.613, 67.293, 0.2744 ) }
    dend_61 { pt3dadd( 847.3, 593.546, 67.5077, 0.2742 ) }
    dend_61 { pt3dadd( 847.953, 594.48, 67.734, 0.2742 ) }
    dend_61 { pt3dadd( 848.607, 595.413, 67.9678, 0.2736 ) }
    dend_61 { pt3dadd( 849.261, 596.347, 68.2058, 0.2728 ) }
    dend_61 { pt3dadd( 849.914, 597.28, 68.4482, 0.2712 ) }
    dend_61 { pt3dadd( 850.567, 598.214, 68.6874, 0.2684 ) }
    dend_61 { pt3dadd( 851.221, 599.147, 68.917, 0.2626 ) }
    dend_61 { pt3dadd( 851.875, 600.081, 69.1328, 0.2542 ) }
    dend_61 { pt3dadd( 852.528, 601.014, 69.3316, 0.2288 ) }
    dend_61 { pt3dadd( 853.182, 601.948, 69.7189, 0.2288 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 54/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 807.077, 516.396, 35.9103, 0.3 ) }
    dend_60 { pt3dadd( 807.904, 516.143, 35.9531, 0.2288 ) }
    dend_60 { pt3dadd( 809.025, 516.016, 36.5238, 0.2746 ) }
    dend_60 { pt3dadd( 810.151, 516.151, 36.764, 0.2746 ) }
    dend_60 { pt3dadd( 811.268, 516.355, 37.0356, 0.2746 ) }
    dend_60 { pt3dadd( 812.32, 516.774, 37.3279, 0.2746 ) }
    dend_60 { pt3dadd( 813.325, 517.296, 37.6261, 0.2746 ) }
    dend_60 { pt3dadd( 814.43, 517.576, 37.8913, 0.2746 ) }
    dend_60 { pt3dadd( 815.557, 517.76, 38.1105, 0.2746 ) }
    dend_60 { pt3dadd( 816.688, 517.929, 38.2816, 0.2746 ) }
    dend_60 { pt3dadd( 817.819, 518.095, 38.4034, 0.2746 ) }
    dend_60 { pt3dadd( 818.952, 518.256, 38.4908, 0.2746 ) }
    dend_60 { pt3dadd( 820.078, 518.4, 38.5958, 0.2746 ) }
    dend_60 { pt3dadd( 821.198, 518.537, 38.7257, 0.2746 ) }
    dend_60 { pt3dadd( 822.336, 518.627, 38.7786, 0.2746 ) }
    dend_60 { pt3dadd( 823.465, 518.696, 38.7377, 0.2746 ) }
    dend_60 { pt3dadd( 824.604, 518.731, 38.6576, 0.2748 ) }
    dend_60 { pt3dadd( 825.748, 518.737, 38.5776, 0.2748 ) }
    dend_60 { pt3dadd( 826.892, 518.737, 38.507, 0.2752 ) }
    dend_60 { pt3dadd( 827.981, 519.087, 38.4552, 0.2758 ) }
    dend_60 { pt3dadd( 829.012, 519.582, 38.4331, 0.2768 ) }
    dend_60 { pt3dadd( 829.92, 520.276, 38.4356, 0.2786 ) }
    dend_60 { pt3dadd( 830.755, 521.06, 38.4468, 0.2822 ) }
    dend_60 { pt3dadd( 831.728, 521.659, 38.4569, 0.2882 ) }
    dend_60 { pt3dadd( 832.758, 522.158, 38.4625, 0.2994 ) }
    dend_60 { pt3dadd( 833.605, 522.882, 38.5518, 0.323 ) }
    dend_60 { pt3dadd( 834.567, 523.491, 38.6459, 0.354 ) }
    dend_60 { pt3dadd( 835.533, 523.984, 38.5655, 0.473 ) }
    dend_60 { pt3dadd( 836.664, 523.958, 38.4247, 0.3946 ) }
    dend_60 { pt3dadd( 837.795, 523.795, 38.3284, 0.3278 ) }
    dend_60 { pt3dadd( 838.936, 523.801, 38.2578, 0.2792 ) }
    dend_60 { pt3dadd( 840.064, 523.989, 38.1741, 0.2828 ) }
    dend_60 { pt3dadd( 841.193, 524.176, 38.0957, 0.291 ) }
    dend_60 { pt3dadd( 842.315, 524.38, 37.9954, 0.2994 ) }
    dend_60 { pt3dadd( 843.43, 524.589, 37.8498, 0.3474 ) }
    dend_60 { pt3dadd( 844.539, 524.846, 37.6746, 0.2796 ) }
    dend_60 { pt3dadd( 845.638, 525.146, 37.2722, 0.2288 ) }
    // Section: dend_57, id: dend_57, parent: dend_51 (entry count 91/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 811.309, 530.326, 23.2887, 0.426 ) }
    dend_57 { pt3dadd( 810.959, 530.877, 23.5785, 0.2288 ) }
    dend_57 { pt3dadd( 810.275, 531.612, 22.7074, 0.318 ) }
    dend_57 { pt3dadd( 809.929, 532.673, 22.36, 0.3804 ) }
    dend_57 { pt3dadd( 809.57, 533.745, 22.0272, 0.3474 ) }
    dend_57 { pt3dadd( 809.068, 534.76, 21.6758, 0.3248 ) }
    dend_57 { pt3dadd( 808.56, 535.766, 21.3102, 0.3214 ) }
    dend_57 { pt3dadd( 808.117, 536.782, 20.9157, 0.3566 ) }
    dend_57 { pt3dadd( 807.717, 537.822, 20.5341, 0.4486 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_57 { pt3dadd( 807.396, 538.904, 20.1943, 0.4932 ) }
    dend_57 { pt3dadd( 807.367, 540.029, 19.9293, 0.498 ) }
    dend_57 { pt3dadd( 807.43, 541.159, 19.7864, 0.4278 ) }
    dend_57 { pt3dadd( 807.4, 542.279, 19.7733, 0.4534 ) }
    dend_57 { pt3dadd( 807.289, 543.402, 19.8122, 0.4304 ) }
    dend_57 { pt3dadd( 807.066, 544.503, 19.7708, 0.5014 ) }
    dend_57 { pt3dadd( 806.772, 545.559, 19.587, 0.5388 ) }
    dend_57 { pt3dadd( 806.418, 546.602, 19.3033, 0.6076 ) }
    dend_57 { pt3dadd( 806.005, 547.653, 19.0033, 0.5084 ) }
    dend_57 { pt3dadd( 805.66, 548.738, 18.77, 0.5132 ) }
    dend_57 { pt3dadd( 805.413, 549.845, 18.655, 0.5186 ) }
    dend_57 { pt3dadd( 805.148, 550.953, 18.6137, 0.5462 ) }
    dend_57 { pt3dadd( 804.815, 552.043, 18.5812, 0.5126 ) }
    dend_57 { pt3dadd( 804.476, 553.133, 18.5425, 0.6326 ) }
    dend_57 { pt3dadd( 804.207, 554.244, 18.5015, 0.654 ) }
    dend_57 { pt3dadd( 804.0, 555.367, 18.4663, 0.756 ) }
    dend_57 { pt3dadd( 803.854, 556.501, 18.4353, 0.6444 ) }
    dend_57 { pt3dadd( 803.789, 557.639, 18.386, 0.5244 ) }
    dend_57 { pt3dadd( 803.766, 558.774, 18.2993, 0.5636 ) }
    dend_57 { pt3dadd( 803.711, 559.911, 18.2064, 0.5116 ) }
    dend_57 { pt3dadd( 803.551, 561.037, 18.1642, 0.5622 ) }
    dend_57 { pt3dadd( 803.294, 562.142, 18.1787, 0.6298 ) }
    dend_57 { pt3dadd( 803.044, 563.254, 18.2059, 0.6532 ) }
    dend_57 { pt3dadd( 802.901, 564.387, 18.2244, 0.507 ) }
    dend_57 { pt3dadd( 802.844, 565.528, 18.2133, 0.4686 ) }
    dend_57 { pt3dadd( 802.739, 566.644, 18.0991, 0.4118 ) }
    dend_57 { pt3dadd( 802.438, 567.694, 17.8611, 0.4646 ) }
    dend_57 { pt3dadd( 801.919, 568.671, 17.5647, 0.4824 ) }
    dend_57 { pt3dadd( 801.277, 569.603, 17.2959, 0.4468 ) }
    dend_57 { pt3dadd( 800.564, 570.489, 17.1437, 0.484 ) }
    dend_57 { pt3dadd( 799.901, 571.402, 17.1395, 0.5114 ) }
    dend_57 { pt3dadd( 799.403, 572.418, 17.2343, 0.5324 ) }
    dend_57 { pt3dadd( 798.912, 573.44, 17.3981, 0.4884 ) }
    dend_57 { pt3dadd( 798.256, 574.358, 17.5953, 0.58 ) }
    dend_57 { pt3dadd( 797.478, 575.187, 17.7283, 0.5968 ) }
    dend_57 { pt3dadd( 796.642, 575.959, 17.7681, 0.4548 ) }
    dend_57 { pt3dadd( 795.734, 576.65, 17.7782, 0.3452 ) }
    dend_57 { pt3dadd( 794.795, 577.302, 17.7668, 0.3124 ) }
    dend_57 { pt3dadd( 793.967, 578.079, 17.7236, 0.3404 ) }
    dend_57 { pt3dadd( 793.305, 579.006, 17.6863, 0.4168 ) }
    dend_57 { pt3dadd( 792.792, 580.024, 17.6951, 0.44 ) }
    dend_57 { pt3dadd( 792.434, 581.094, 17.7768, 0.3724 ) }
    dend_57 { pt3dadd( 792.083, 582.169, 17.8982, 0.3254 ) }
    dend_57 { pt3dadd( 791.53, 583.161, 17.9963, 0.3164 ) }
    dend_57 { pt3dadd( 790.719, 583.955, 18.0437, 0.3776 ) }
    dend_57 { pt3dadd( 789.805, 584.642, 18.0298, 0.3418 ) }
    dend_57 { pt3dadd( 788.994, 585.431, 17.9203, 0.3146 ) }
    dend_57 { pt3dadd( 788.295, 586.297, 17.6982, 0.3028 ) }
    dend_57 { pt3dadd( 787.641, 587.203, 17.4107, 0.3212 ) }
    dend_57 { pt3dadd( 787.066, 588.185, 17.1692, 0.3864 ) }
    dend_57 { pt3dadd( 786.552, 589.195, 17.0283, 0.3592 ) }
    dend_57 { pt3dadd( 786.116, 590.249, 16.9386, 0.3416 ) }
    dend_57 { pt3dadd( 785.76, 591.335, 16.8479, 0.377 ) }
    dend_57 { pt3dadd( 785.432, 592.418, 16.7079, 0.341 ) }
    dend_57 { pt3dadd( 785.069, 593.474, 16.4887, 0.3124 ) }
    dend_57 { pt3dadd( 784.71, 594.548, 16.238, 0.2988 ) }
    dend_57 { pt3dadd( 784.389, 595.645, 16.0212, 0.3142 ) }
    dend_57 { pt3dadd( 783.987, 596.715, 15.8473, 0.3734 ) }
    dend_57 { pt3dadd( 783.516, 597.757, 15.6981, 0.3338 ) }
    dend_57 { pt3dadd( 783.138, 598.836, 15.5615, 0.3 ) }
    dend_57 { pt3dadd( 782.95, 599.962, 15.4261, 0.2746 ) }
    dend_57 { pt3dadd( 782.756, 601.086, 15.2538, 0.2746 ) }
    dend_57 { pt3dadd( 782.256, 602.072, 14.9838, 0.2746 ) }
    dend_57 { pt3dadd( 781.596, 602.945, 14.6205, 0.2746 ) }
    dend_57 { pt3dadd( 781.047, 603.923, 14.2466, 0.2746 ) }
    dend_57 { pt3dadd( 780.725, 605.016, 13.9344, 0.2746 ) }
    dend_57 { pt3dadd( 780.492, 606.136, 13.6997, 0.2746 ) }
    dend_57 { pt3dadd( 780.234, 607.25, 13.536, 0.2746 ) }
    dend_57 { pt3dadd( 779.739, 608.279, 13.4299, 0.2746 ) }
    dend_57 { pt3dadd( 778.847, 608.975, 13.3448, 0.2746 ) }
    dend_57 { pt3dadd( 777.859, 609.535, 13.2258, 0.2746 ) }
    dend_57 { pt3dadd( 776.979, 610.26, 13.1038, 0.2746 ) }
    dend_57 { pt3dadd( 776.257, 611.144, 13.0197, 0.2746 ) }
    dend_57 { pt3dadd( 775.767, 612.168, 12.9062, 0.2746 ) }
    dend_57 { pt3dadd( 775.608, 613.292, 12.7776, 0.2746 ) }
    dend_57 { pt3dadd( 775.512, 614.43, 12.6828, 0.2746 ) }
    dend_57 { pt3dadd( 775.312, 615.557, 12.633, 0.2748 ) }
    dend_57 { pt3dadd( 775.031, 616.665, 12.6203, 0.2748 ) }
    dend_57 { pt3dadd( 774.608, 617.728, 12.6402, 0.2752 ) }
    dend_57 { pt3dadd( 774.109, 618.758, 12.6981, 0.2758 ) }
    dend_57 { pt3dadd( 773.593, 619.769, 12.8256, 0.2766 ) }
    dend_57 { pt3dadd( 773.06, 620.764, 13.0102, 0.2784 ) }
    dend_57 { pt3dadd( 772.472, 621.74, 13.1968, 0.2816 ) }
    dend_57 { pt3dadd( 772.036, 622.797, 13.3521, 0.2874 ) }
    dend_57 { pt3dadd( 771.755, 623.906, 13.4693, 0.2994 ) }
    dend_57 { pt3dadd( 771.515, 625.024, 13.5505, 0.3152 ) }
    dend_57 { pt3dadd( 771.278, 626.143, 13.6, 0.3756 ) }
    dend_57 { pt3dadd( 771.031, 627.26, 13.633, 0.3382 ) }
    dend_57 { pt3dadd( 770.697, 628.353, 13.6778, 0.3082 ) }
    dend_57 { pt3dadd( 770.311, 629.428, 13.7414, 0.2896 ) }
    dend_57 { pt3dadd( 769.822, 630.461, 13.7835, 0.3036 ) }
    dend_57 { pt3dadd( 769.214, 631.429, 13.7992, 0.323 ) }
    dend_57 { pt3dadd( 768.381, 632.179, 13.8943, 0.3898 ) }
    dend_57 { pt3dadd( 767.868, 633.196, 13.9474, 0.3652 ) }
    dend_57 { pt3dadd( 767.973, 634.324, 13.9374, 0.3526 ) }
    dend_57 { pt3dadd( 768.099, 635.459, 13.9699, 0.399 ) }
    dend_57 { pt3dadd( 767.933, 636.574, 14.0849, 0.3756 ) }
    dend_57 { pt3dadd( 767.896, 637.715, 14.1593, 0.404 ) }
    dend_57 { pt3dadd( 768.174, 638.815, 14.1742, 0.339 ) }
    dend_57 { pt3dadd( 768.218, 639.918, 14.3147, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_57 { pt3dadd( 767.805, 640.98, 14.6829, 0.2288 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 1/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 811.309, 530.326, 23.2887, 0.426 ) }
    dend_52 { pt3dadd( 811.684, 530.964, 23.4338, 0.4582 ) }
    dend_52 { pt3dadd( 812.278, 531.942, 23.4913, 0.401 ) }
    dend_52 { pt3dadd( 812.843, 532.936, 23.4802, 0.4032 ) }
    dend_52 { pt3dadd( 813.305, 533.981, 23.4191, 0.3418 ) }
    dend_52 { pt3dadd( 814.082, 534.807, 23.3045, 0.315 ) }
    dend_52 { pt3dadd( 815.11, 535.228, 23.0943, 0.3018 ) }
    dend_52 { pt3dadd( 816.111, 535.758, 22.8466, 0.3272 ) }
    dend_52 { pt3dadd( 816.951, 536.529, 22.6274, 0.3616 ) }
    dend_52 { pt3dadd( 817.743, 537.339, 22.4018, 0.4872 ) }
    dend_52 { pt3dadd( 818.195, 538.279, 22.0908, 0.4204 ) }
    dend_52 { pt3dadd( 819.002, 539.069, 21.8659, 0.378 ) }
    dend_52 { pt3dadd( 820.073, 539.363, 21.8621, 0.3616 ) }
    dend_52 { pt3dadd( 821.186, 539.591, 21.9747, 0.4868 ) }
    dend_52 { pt3dadd( 822.168, 540.102, 22.2173, 0.42 ) }
    dend_52 { pt3dadd( 822.709, 541.014, 22.5902, 0.3762 ) }
    dend_52 { pt3dadd( 822.745, 542.035, 23.0576, 0.3632 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 18/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 798.696, 522.258, 20.6767, 0.6296 ) }
    dend_48 { pt3dadd( 798.573, 523.248, 21.0712, 0.6438 ) }
    dend_48 { pt3dadd( 798.409, 524.357, 21.5375, 0.5316 ) }
    dend_48 { pt3dadd( 798.271, 525.413, 22.111, 0.5384 ) }
    dend_48 { pt3dadd( 798.154, 526.424, 22.7814, 0.4212 ) }
    dend_48 { pt3dadd( 798.081, 527.485, 23.4449, 0.3794 ) }
    dend_48 { pt3dadd( 798.212, 528.6, 23.9766, 0.3644 ) }
    dend_48 { pt3dadd( 798.445, 529.718, 24.3297, 0.492 ) }
    dend_48 { pt3dadd( 798.41, 530.839, 24.5317, 0.4306 ) }
    dend_48 { pt3dadd( 797.989, 531.893, 24.6234, 0.3904 ) }
    dend_48 { pt3dadd( 797.431, 532.887, 24.6311, 0.4156 ) }
    dend_48 { pt3dadd( 797.051, 533.951, 24.6258, 0.4372 ) }
    dend_48 { pt3dadd( 796.964, 535.085, 24.6574, 0.3676 ) }
    dend_48 { pt3dadd( 797.101, 536.216, 24.724, 0.315 ) }
    dend_48 { pt3dadd( 797.437, 537.3, 24.8438, 0.3036 ) }
    dend_48 { pt3dadd( 797.871, 538.338, 25.0399, 0.3232 ) }
    dend_48 { pt3dadd( 798.279, 539.386, 25.285, 0.3902 ) }
    dend_48 { pt3dadd( 798.604, 540.475, 25.5162, 0.366 ) }
    dend_48 { pt3dadd( 798.884, 541.583, 25.6912, 0.3542 ) }
    dend_48 { pt3dadd( 799.161, 542.693, 25.8043, 0.4018 ) }
    dend_48 { pt3dadd( 799.345, 543.819, 25.8594, 0.3812 ) }
    dend_48 { pt3dadd( 799.474, 544.955, 25.8661, 0.413 ) }
    dend_48 { pt3dadd( 799.737, 546.063, 25.8418, 0.3612 ) }
    dend_48 { pt3dadd( 800.147, 547.129, 25.7919, 0.3452 ) }
    dend_48 { pt3dadd( 800.615, 548.162, 25.699, 0.384 ) }
    dend_48 { pt3dadd( 801.099, 549.184, 25.5723, 0.3534 ) }
    dend_48 { pt3dadd( 801.572, 550.219, 25.4659, 0.337 ) }
    dend_48 { pt3dadd( 802.022, 551.27, 25.4293, 0.3388 ) }
    dend_48 { pt3dadd( 802.453, 552.326, 25.4911, 0.4138 ) }
    dend_48 { pt3dadd( 802.839, 553.394, 25.6547, 0.4348 ) }
    dend_48 { pt3dadd( 803.142, 554.491, 25.8944, 0.3632 ) }
    dend_48 { pt3dadd( 803.38, 555.605, 26.1894, 0.307 ) }
    dend_48 { pt3dadd( 803.594, 556.713, 26.5446, 0.2874 ) }
    dend_48 { pt3dadd( 803.732, 557.817, 26.9618, 0.2994 ) }
    dend_48 { pt3dadd( 803.662, 558.925, 27.4145, 0.3152 ) }
    dend_48 { pt3dadd( 803.391, 560.022, 27.8634, 0.3754 ) }
    dend_48 { pt3dadd( 803.031, 561.104, 28.2764, 0.3378 ) }
    dend_48 { pt3dadd( 802.545, 562.128, 28.6611, 0.3068 ) }
    dend_48 { pt3dadd( 801.89, 563.001, 29.0909, 0.287 ) }
    dend_48 { pt3dadd( 801.13, 563.763, 29.5795, 0.2988 ) }
    dend_48 { pt3dadd( 800.488, 564.659, 30.035, 0.3142 ) }
    dend_48 { pt3dadd( 800.032, 565.707, 30.4212, 0.3736 ) }
    dend_48 { pt3dadd( 799.526, 566.724, 30.767, 0.3342 ) }
    dend_48 { pt3dadd( 799.007, 567.734, 31.0811, 0.3006 ) }
    dend_48 { pt3dadd( 798.581, 568.79, 31.3513, 0.2758 ) }
    dend_48 { pt3dadd( 798.113, 569.823, 31.5963, 0.2766 ) }
    dend_48 { pt3dadd( 797.469, 570.744, 31.8556, 0.2782 ) }
    dend_48 { pt3dadd( 796.767, 571.633, 32.0998, 0.2814 ) }
    dend_48 { pt3dadd( 796.133, 572.581, 32.2689, 0.287 ) }
    dend_48 { pt3dadd( 795.53, 573.548, 32.3971, 0.2988 ) }
    dend_48 { pt3dadd( 794.882, 574.484, 32.5422, 0.3142 ) }
    dend_48 { pt3dadd( 794.135, 575.341, 32.6931, 0.3734 ) }
    dend_48 { pt3dadd( 793.326, 576.149, 32.8317, 0.3338 ) }
    dend_48 { pt3dadd( 792.617, 577.037, 32.9658, 0.3 ) }
    dend_48 { pt3dadd( 792.095, 578.051, 33.1111, 0.2746 ) }
    dend_48 { pt3dadd( 791.822, 579.133, 33.3152, 0.2746 ) }
    dend_48 { pt3dadd( 791.822, 580.248, 33.5824, 0.2746 ) }
    dend_48 { pt3dadd( 791.745, 581.368, 33.8534, 0.2746 ) }
    dend_48 { pt3dadd( 791.453, 582.471, 34.1149, 0.2746 ) }
    dend_48 { pt3dadd( 791.121, 583.531, 34.4193, 0.2746 ) }
    dend_48 { pt3dadd( 790.591, 584.488, 34.7402, 0.2746 ) }
    dend_48 { pt3dadd( 790.19, 585.532, 34.9835, 0.2744 ) }
    dend_48 { pt3dadd( 789.477, 586.358, 35.1487, 0.2744 ) }
    dend_48 { pt3dadd( 788.78, 587.252, 35.2556, 0.2742 ) }
    dend_48 { pt3dadd( 787.817, 587.781, 35.315, 0.2742 ) }
    dend_48 { pt3dadd( 786.838, 588.363, 35.3366, 0.2736 ) }
    dend_48 { pt3dadd( 786.285, 589.344, 35.3391, 0.2728 ) }
    dend_48 { pt3dadd( 785.258, 589.793, 35.3391, 0.2712 ) }
    dend_48 { pt3dadd( 784.338, 590.47, 35.3391, 0.2684 ) }
    dend_48 { pt3dadd( 783.341, 591.03, 35.3391, 0.2626 ) }
    dend_48 { pt3dadd( 782.236, 591.322, 35.3391, 0.2542 ) }
    dend_48 { pt3dadd( 781.212, 591.831, 35.3391, 0.2288 ) }
    dend_48 { pt3dadd( 780.277, 592.489, 35.3391, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 798.696, 522.258, 20.6767, 0.6296 ) }
    dend_47 { pt3dadd( 799.578, 521.95, 18.788, 0.4812 ) }
    dend_47 { pt3dadd( 800.672, 522.268, 18.5926, 0.5858 ) }
    dend_47 { pt3dadd( 801.726, 522.698, 18.5416, 0.5144 ) }
    dend_47 { pt3dadd( 802.677, 523.285, 18.4116, 0.5254 ) }
    dend_47 { pt3dadd( 803.448, 524.093, 18.1679, 0.5374 ) }
    dend_47 { pt3dadd( 804.17, 524.96, 17.8538, 0.5994 ) }
    dend_47 { pt3dadd( 804.947, 525.776, 17.4861, 0.5226 ) }
    dend_47 { pt3dadd( 805.849, 526.453, 17.1099, 0.3942 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_47 { pt3dadd( 806.873, 526.93, 16.7462, 0.3174 ) }
    dend_47 { pt3dadd( 807.952, 527.227, 16.3634, 0.308 ) }
    dend_47 { pt3dadd( 809.041, 527.459, 15.9656, 0.3314 ) }
    dend_47 { pt3dadd( 810.039, 527.914, 15.5838, 0.405 ) }
    dend_47 { pt3dadd( 810.817, 528.732, 15.2831, 0.3934 ) }
    dend_47 { pt3dadd( 811.479, 529.659, 15.0455, 0.4066 ) }
    dend_47 { pt3dadd( 812.233, 530.505, 14.8199, 0.4884 ) }
    dend_47 { pt3dadd( 813.122, 531.218, 14.6221, 0.5928 ) }
    dend_47 { pt3dadd( 814.057, 531.87, 14.4369, 0.5586 ) }
    dend_47 { pt3dadd( 814.978, 532.521, 14.2177, 0.457 ) }
    dend_47 { pt3dadd( 815.937, 533.091, 13.959, 0.4538 ) }
    dend_47 { pt3dadd( 816.913, 533.658, 13.7292, 0.462 ) }
    dend_47 { pt3dadd( 817.74, 534.429, 13.5845, 0.4086 ) }
    dend_47 { pt3dadd( 818.43, 535.33, 13.5233, 0.4166 ) }
    dend_47 { pt3dadd( 819.113, 536.232, 13.5294, 0.368 ) }
    dend_47 { pt3dadd( 819.75, 537.159, 13.4995, 0.3574 ) }
    dend_47 { pt3dadd( 820.158, 538.197, 13.3599, 0.4078 ) }
    dend_47 { pt3dadd( 820.56, 539.247, 13.1499, 0.392 ) }
    dend_47 { pt3dadd( 821.201, 540.191, 12.8895, 0.4344 ) }
    dend_47 { pt3dadd( 821.696, 541.146, 12.5112, 0.3942 ) }
    dend_47 { pt3dadd( 822.035, 542.146, 11.9929, 0.4382 ) }
    dend_47 { pt3dadd( 822.407, 543.17, 11.4407, 0.4026 ) }
    dend_47 { pt3dadd( 822.931, 544.108, 10.9037, 0.4478 ) }
    dend_47 { pt3dadd( 823.646, 544.856, 10.3403, 0.4502 ) }
    dend_47 { pt3dadd( 824.481, 545.498, 9.8686, 0.3918 ) }
    dend_47 { pt3dadd( 825.263, 545.67, 9.81, 0.3608 ) }
    dend_47 { pt3dadd( 826.206, 545.789, 10.0169, 0.3836 ) }
    dend_47 { pt3dadd( 827.234, 546.06, 10.1005, 0.4932 ) }
    dend_47 { pt3dadd( 828.306, 546.189, 10.0154, 0.602 ) }
    dend_47 { pt3dadd( 829.427, 546.258, 9.9365, 0.5754 ) }
    dend_47 { pt3dadd( 830.483, 546.589, 9.8867, 0.4888 ) }
    dend_47 { pt3dadd( 831.331, 547.29, 9.663, 0.509 ) }
    dend_47 { pt3dadd( 831.873, 548.192, 9.2629, 0.5836 ) }
    dend_47 { pt3dadd( 832.421, 549.089, 8.7727, 0.5416 ) }
    dend_47 { pt3dadd( 833.195, 549.852, 8.2624, 0.4242 ) }
    dend_47 { pt3dadd( 834.17, 550.437, 7.8788, 0.3988 ) }
    dend_47 { pt3dadd( 835.131, 551.041, 7.6401, 0.3338 ) }
    dend_47 { pt3dadd( 836.062, 551.693, 7.5192, 0.3 ) }
    dend_47 { pt3dadd( 837.002, 552.32, 7.4868, 0.2746 ) }
    dend_47 { pt3dadd( 837.994, 552.883, 7.4004, 0.2746 ) }
    dend_47 { pt3dadd( 838.939, 553.472, 7.1735, 0.2748 ) }
    dend_47 { pt3dadd( 839.353, 554.34, 6.6995, 0.275 ) }
    dend_47 { pt3dadd( 839.363, 554.422, 6.1589, 0.2752 ) }
    dend_47 { pt3dadd( 839.473, 553.308, 5.7101, 0.2758 ) }
    dend_47 { pt3dadd( 840.251, 552.666, 5.3599, 0.2768 ) }
    dend_47 { pt3dadd( 840.84, 552.083, 4.9928, 0.2796 ) }
    dend_47 { pt3dadd( 840.467, 551.179, 4.7556, 0.2796 ) }
    dend_47 { pt3dadd( 839.351, 551.0, 4.6203, 0.305 ) }
    dend_47 { pt3dadd( 838.209, 550.95, 4.48, 0.2288 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 49/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 790.99, 516.685, 16.6732, 0.4582 ) }
    dend_45 { pt3dadd( 789.842, 516.5, 17.5266, 0.505 ) }
    dend_45 { pt3dadd( 788.85, 516.723, 17.6396, 0.4486 ) }
    dend_45 { pt3dadd( 787.827, 517.156, 17.6467, 0.4546 ) }
    dend_45 { pt3dadd( 786.733, 517.351, 17.5293, 0.3848 ) }
    dend_45 { pt3dadd( 785.597, 517.374, 17.3221, 0.4198 ) }
    dend_45 { pt3dadd( 784.459, 517.412, 17.0615, 0.3736 ) }
    dend_45 { pt3dadd( 783.396, 517.431, 16.6739, 0.3696 ) }
    dend_45 { pt3dadd( 782.322, 517.509, 16.2039, 0.424 ) }
    dend_45 { pt3dadd( 781.264, 517.707, 15.7098, 0.4528 ) }
    dend_45 { pt3dadd( 780.258, 518.106, 15.2304, 0.3976 ) }
    dend_45 { pt3dadd( 779.25, 518.623, 14.8847, 0.3656 ) }
    dend_45 { pt3dadd( 778.203, 518.914, 14.7683, 0.4226 ) }
    dend_45 { pt3dadd( 777.191, 519.343, 14.8013, 0.422 ) }
    dend_45 { pt3dadd( 776.205, 519.904, 14.8421, 0.478 ) }
    dend_45 { pt3dadd( 775.148, 520.324, 14.9063, 0.5318 ) }
    dend_45 { pt3dadd( 774.033, 520.552, 15.0033, 0.419 ) }
    dend_45 { pt3dadd( 772.925, 520.836, 15.0691, 0.326 ) }
    dend_45 { pt3dadd( 771.873, 521.21, 15.1775, 0.2758 ) }
    dend_45 { pt3dadd( 770.854, 521.694, 15.2997, 0.2766 ) }
    dend_45 { pt3dadd( 769.995, 522.427, 15.3123, 0.2784 ) }
    dend_45 { pt3dadd( 769.26, 523.301, 15.2683, 0.2816 ) }
    dend_45 { pt3dadd( 768.856, 524.325, 15.0828, 0.2878 ) }
    dend_45 { pt3dadd( 768.023, 525.06, 14.8162, 0.2988 ) }
    dend_45 { pt3dadd( 767.028, 525.621, 14.5685, 0.32 ) }
    dend_45 { pt3dadd( 766.229, 526.439, 14.3769, 0.355 ) }
    dend_45 { pt3dadd( 765.425, 527.252, 14.238, 0.445 ) }
    dend_45 { pt3dadd( 764.481, 527.898, 14.1403, 0.4868 ) }
    dend_45 { pt3dadd( 763.516, 528.509, 14.0425, 0.486 ) }
    dend_45 { pt3dadd( 762.545, 529.103, 13.9082, 0.4056 ) }
    dend_45 { pt3dadd( 761.492, 529.545, 13.7421, 0.4112 ) }
    dend_45 { pt3dadd( 760.46, 530.037, 13.555, 0.3578 ) }
    dend_45 { pt3dadd( 759.526, 530.695, 13.3573, 0.3394 ) }
    dend_45 { pt3dadd( 758.689, 531.474, 13.1452, 0.3728 ) }
    dend_45 { pt3dadd( 758.018, 532.357, 12.8346, 0.333 ) }
    dend_45 { pt3dadd( 757.003, 532.859, 12.4958, 0.2982 ) }
    dend_45 { pt3dadd( 755.861, 532.927, 12.1801, 0.2712 ) }
    dend_45 { pt3dadd( 754.733, 532.929, 11.8284, 0.2684 ) }
    dend_45 { pt3dadd( 753.634, 532.974, 11.419, 0.2626 ) }
    dend_45 { pt3dadd( 752.746, 533.464, 10.9109, 0.2542 ) }
    dend_45 { pt3dadd( 751.81, 534.12, 10.5599, 0.2288 ) }
    dend_45 { pt3dadd( 750.864, 534.76, 10.1651, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 91/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 790.99, 516.685, 16.6732, 0.4582 ) }
    dend_38 { pt3dadd( 790.164, 516.452, 16.0973, 0.4248 ) }
    dend_38 { pt3dadd( 789.797, 515.44, 15.6407, 0.3348 ) }
    dend_38 { pt3dadd( 789.947, 514.371, 15.0398, 0.3016 ) }
    dend_38 { pt3dadd( 790.748, 513.7, 14.3341, 0.2776 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 765.267, 494.129, 23.8982, 0.5368 ) }
    dend_34 { pt3dadd( 763.831, 493.691, 23.8314, 0.3836 ) }
    dend_34 { pt3dadd( 763.062, 492.891, 24.2225, 0.3398 ) }
    dend_34 { pt3dadd( 762.152, 492.254, 24.4161, 0.374 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_34 { pt3dadd( 761.104, 491.958, 24.5623, 0.335 ) }
    dend_34 { pt3dadd( 760.008, 492.081, 24.5783, 0.302 ) }
    dend_34 { pt3dadd( 758.898, 492.328, 24.5456, 0.2782 ) }
    dend_34 { pt3dadd( 757.771, 492.52, 24.4938, 0.2814 ) }
    dend_34 { pt3dadd( 756.685, 492.849, 24.4501, 0.287 ) }
    dend_34 { pt3dadd( 755.654, 493.339, 24.4509, 0.2988 ) }
    dend_34 { pt3dadd( 754.603, 493.774, 24.5003, 0.3142 ) }
    dend_34 { pt3dadd( 753.585, 494.263, 24.5934, 0.3736 ) }
    dend_34 { pt3dadd( 752.564, 494.756, 24.6895, 0.3342 ) }
    dend_34 { pt3dadd( 751.471, 495.085, 24.7422, 0.3006 ) }
    dend_34 { pt3dadd( 750.36, 495.357, 24.7373, 0.2758 ) }
    dend_34 { pt3dadd( 749.248, 495.624, 24.6779, 0.2766 ) }
    dend_34 { pt3dadd( 748.146, 495.908, 24.5504, 0.2782 ) }
    dend_34 { pt3dadd( 747.057, 496.207, 24.3481, 0.2814 ) }
    dend_34 { pt3dadd( 745.974, 496.509, 24.0971, 0.287 ) }
    dend_34 { pt3dadd( 744.889, 496.812, 23.828, 0.2988 ) }
    dend_34 { pt3dadd( 743.777, 497.011, 23.6166, 0.3142 ) }
    dend_34 { pt3dadd( 742.645, 497.137, 23.5141, 0.3734 ) }
    dend_34 { pt3dadd( 741.52, 497.329, 23.4932, 0.3338 ) }
    dend_34 { pt3dadd( 740.396, 497.538, 23.5176, 0.3 ) }
    dend_34 { pt3dadd( 739.26, 497.657, 23.5651, 0.2746 ) }
    dend_34 { pt3dadd( 738.117, 497.689, 23.6222, 0.2746 ) }
    dend_34 { pt3dadd( 736.973, 497.693, 23.68, 0.2746 ) }
    dend_34 { pt3dadd( 735.829, 497.693, 23.7403, 0.2746 ) }
    dend_34 { pt3dadd( 734.685, 497.693, 23.812, 0.2748 ) }
    dend_34 { pt3dadd( 733.541, 497.693, 23.9, 0.275 ) }
    dend_34 { pt3dadd( 732.412, 497.72, 24.0518, 0.2754 ) }
    dend_34 { pt3dadd( 731.311, 497.884, 24.2893, 0.2762 ) }
    dend_34 { pt3dadd( 730.196, 498.007, 24.5598, 0.2774 ) }
    dend_34 { pt3dadd( 729.064, 497.904, 24.7918, 0.2798 ) }
    dend_34 { pt3dadd( 727.942, 497.688, 24.9712, 0.2844 ) }
    dend_34 { pt3dadd( 726.837, 497.404, 25.1303, 0.2926 ) }
    dend_34 { pt3dadd( 725.728, 497.15, 25.2912, 0.3092 ) }
    dend_34 { pt3dadd( 724.602, 497.115, 25.4549, 0.3334 ) }
    dend_34 { pt3dadd( 723.462, 497.169, 25.6025, 0.4088 ) }
    dend_34 { pt3dadd( 722.377, 496.932, 25.754, 0.4016 ) }
    dend_34 { pt3dadd( 721.374, 496.401, 25.898, 0.4158 ) }
    dend_34 { pt3dadd( 720.553, 495.641, 25.9633, 0.5364 ) }
    dend_34 { pt3dadd( 719.634, 495.074, 25.9375, 0.5322 ) }
    dend_34 { pt3dadd( 718.528, 494.829, 25.8824, 0.4846 ) }
    dend_34 { pt3dadd( 717.44, 494.508, 25.8477, 0.3616 ) }
    dend_34 { pt3dadd( 716.354, 494.155, 25.8496, 0.3038 ) }
    dend_34 { pt3dadd( 715.357, 493.864, 26.0294, 0.2816 ) }
    dend_34 { pt3dadd( 714.403, 493.504, 26.4018, 0.2874 ) }
    dend_34 { pt3dadd( 713.364, 493.119, 26.7842, 0.2994 ) }
    dend_34 { pt3dadd( 712.278, 493.089, 27.0109, 0.3158 ) }
    dend_34 { pt3dadd( 711.209, 493.372, 27.186, 0.3764 ) }
    dend_34 { pt3dadd( 710.098, 493.578, 27.3173, 0.3396 ) }
    dend_34 { pt3dadd( 708.996, 493.378, 27.3436, 0.3104 ) }
    dend_34 { pt3dadd( 707.977, 492.873, 27.3044, 0.2938 ) }
    dend_34 { pt3dadd( 706.993, 492.288, 27.2425, 0.3112 ) }
    dend_34 { pt3dadd( 706.013, 491.698, 27.1677, 0.3384 ) }
    dend_34 { pt3dadd( 705.048, 491.086, 27.0511, 0.4132 ) }
    dend_34 { pt3dadd( 704.129, 490.428, 26.8655, 0.4328 ) }
    dend_34 { pt3dadd( 703.248, 489.741, 26.6108, 0.36 ) }
    dend_34 { pt3dadd( 702.385, 489.029, 26.319, 0.3012 ) }
    dend_34 { pt3dadd( 701.551, 488.264, 26.0519, 0.2766 ) }
    dend_34 { pt3dadd( 700.764, 487.438, 25.8658, 0.2782 ) }
    dend_34 { pt3dadd( 700.004, 486.583, 25.7797, 0.2816 ) }
    dend_34 { pt3dadd( 699.213, 485.762, 25.7999, 0.2872 ) }
    dend_34 { pt3dadd( 698.357, 485.045, 25.9606, 0.2992 ) }
    dend_34 { pt3dadd( 697.579, 484.252, 26.2316, 0.3148 ) }
    dend_34 { pt3dadd( 697.056, 483.274, 26.4415, 0.3748 ) }
    dend_34 { pt3dadd( 696.336, 482.456, 26.5403, 0.3364 ) }
    dend_34 { pt3dadd( 695.261, 482.215, 26.6927, 0.3048 ) }
    dend_34 { pt3dadd( 694.241, 482.498, 27.0093, 0.2834 ) }
    dend_34 { pt3dadd( 693.217, 482.779, 27.4621, 0.2906 ) }
    dend_34 { pt3dadd( 692.173, 482.516, 27.989, 0.3056 ) }
    dend_34 { pt3dadd( 691.414, 481.689, 28.4144, 0.3264 ) }
    dend_34 { pt3dadd( 690.78, 480.738, 28.7812, 0.3976 ) }
    dend_34 { pt3dadd( 690.026, 479.95, 29.213, 0.3734 ) }
    dend_34 { pt3dadd( 689.32, 479.086, 29.6489, 0.3988 ) }
    dend_34 { pt3dadd( 688.693, 478.134, 30.0384, 0.3338 ) }
    dend_34 { pt3dadd( 687.718, 477.689, 30.5012, 0.3 ) }
    dend_34 { pt3dadd( 686.638, 477.504, 30.9943, 0.2746 ) }
    dend_34 { pt3dadd( 685.497, 477.478, 31.3911, 0.2746 ) }
    dend_34 { pt3dadd( 684.354, 477.478, 31.673, 0.2746 ) }
    dend_34 { pt3dadd( 683.211, 477.478, 31.8536, 0.2746 ) }
    dend_34 { pt3dadd( 682.067, 477.478, 31.9533, 0.2746 ) }
    dend_34 { pt3dadd( 680.922, 477.478, 31.9838, 0.2746 ) }
    dend_34 { pt3dadd( 679.779, 477.482, 31.9746, 0.2748 ) }
    dend_34 { pt3dadd( 678.635, 477.518, 31.9488, 0.2748 ) }
    dend_34 { pt3dadd( 677.492, 477.563, 31.9124, 0.275 ) }
    dend_34 { pt3dadd( 676.427, 477.154, 31.8416, 0.2754 ) }
    dend_34 { pt3dadd( 675.467, 476.541, 31.7338, 0.2762 ) }
    dend_34 { pt3dadd( 674.474, 475.974, 31.638, 0.2776 ) }
    dend_34 { pt3dadd( 673.353, 475.744, 31.5518, 0.2806 ) }
    dend_34 { pt3dadd( 672.209, 475.733, 31.4695, 0.2854 ) }
    dend_34 { pt3dadd( 671.127, 476.103, 31.3858, 0.2954 ) }
    dend_34 { pt3dadd( 670.088, 476.581, 31.2906, 0.3078 ) }
    dend_34 { pt3dadd( 668.988, 476.812, 31.1228, 0.3616 ) }
    dend_34 { pt3dadd( 667.885, 477.041, 30.9075, 0.3136 ) }
    dend_34 { pt3dadd( 666.854, 477.534, 30.7362, 0.2542 ) }
    dend_34 { pt3dadd( 666.163, 478.446, 30.4954, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 765.267, 494.129, 23.8982, 0.5368 ) }
    dend_31 { pt3dadd( 764.425, 494.337, 23.823, 0.4614 ) }
    dend_31 { pt3dadd( 763.399, 494.804, 23.6975, 0.472 ) }
    dend_31 { pt3dadd( 762.616, 495.607, 23.552, 0.448 ) }
    dend_31 { pt3dadd( 762.084, 496.613, 23.4406, 0.3876 ) }
    dend_31 { pt3dadd( 761.869, 497.729, 23.367, 0.353 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_31 { pt3dadd( 761.807, 498.864, 23.3951, 0.3696 ) }
    dend_31 { pt3dadd( 760.953, 499.477, 23.5818, 0.4656 ) }
    dend_31 { pt3dadd( 760.09, 500.222, 23.8005, 0.5572 ) }
    dend_31 { pt3dadd( 759.177, 500.912, 23.9959, 0.4606 ) }
    dend_31 { pt3dadd( 758.296, 501.641, 24.1627, 0.4288 ) }
    dend_31 { pt3dadd( 757.523, 502.427, 24.3899, 0.3426 ) }
    dend_31 { pt3dadd( 756.872, 503.362, 24.5714, 0.3158 ) }
    dend_31 { pt3dadd( 756.067, 504.173, 24.6552, 0.3038 ) }
    dend_31 { pt3dadd( 755.128, 504.767, 24.6001, 0.3294 ) }
    dend_31 { pt3dadd( 754.208, 505.443, 24.5152, 0.3732 ) }
    dend_31 { pt3dadd( 753.585, 506.402, 24.4358, 0.4724 ) }
    dend_31 { pt3dadd( 753.057, 507.402, 24.4339, 0.5692 ) }
    dend_31 { pt3dadd( 752.457, 508.363, 24.4953, 0.484 ) }
    // Section: apic_32, id: apic_32, parent: apic_30 (entry count 13/100)
    apic_32 { pt3dclear() }
    apic_32 { pt3dadd( 783.473, 488.977, 17.7202, 0.275 ) }
    apic_32 { pt3dadd( 783.823, 488.336, 17.0598, 0.2752 ) }
    apic_32 { pt3dadd( 783.56, 487.377, 16.4309, 0.2758 ) }
    apic_32 { pt3dadd( 782.512, 487.053, 15.8612, 0.2768 ) }
    apic_32 { pt3dadd( 781.426, 486.764, 15.3654, 0.279 ) }
    apic_32 { pt3dadd( 780.346, 486.422, 14.9817, 0.2824 ) }
    apic_32 { pt3dadd( 779.214, 486.27, 14.7166, 0.289 ) }
    apic_32 { pt3dadd( 778.072, 486.263, 14.547, 0.3024 ) }
    apic_32 { pt3dadd( 776.94, 486.413, 14.4491, 0.321 ) }
    apic_32 { pt3dadd( 775.796, 486.432, 14.3829, 0.3862 ) }
    apic_32 { pt3dadd( 774.95, 485.694, 14.2918, 0.3574 ) }
    apic_32 { pt3dadd( 774.073, 485.016, 14.1082, 0.3442 ) }
    apic_32 { pt3dadd( 773.38, 484.108, 13.9443, 0.3526 ) }
    apic_32 { pt3dadd( 772.815, 483.116, 13.8374, 0.439 ) }
    apic_32 { pt3dadd( 772.023, 482.292, 13.7275, 0.4832 ) }
    apic_32 { pt3dadd( 771.186, 481.512, 13.6309, 0.4424 ) }
    apic_32 { pt3dadd( 770.37, 480.711, 13.5447, 0.505 ) }
    apic_32 { pt3dadd( 769.585, 479.878, 13.4593, 0.407 ) }
    apic_32 { pt3dadd( 768.91, 478.956, 13.3466, 0.3502 ) }
    apic_32 { pt3dadd( 768.298, 477.992, 13.1986, 0.3232 ) }
    apic_32 { pt3dadd( 767.752, 477.102, 12.888, 0.3544 ) }
    apic_32 { pt3dadd( 767.284, 476.073, 12.5639, 0.4736 ) }
    apic_32 { pt3dadd( 766.596, 475.175, 12.3608, 0.3954 ) }
    apic_32 { pt3dadd( 765.733, 474.572, 12.3462, 0.3298 ) }
    apic_32 { pt3dadd( 764.972, 473.812, 12.1668, 0.2824 ) }
    // Section: apic_31, id: apic_31, parent: apic_30 (entry count 38/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 783.473, 488.977, 17.7202, 0.275 ) }
    apic_31 { pt3dadd( 783.625, 489.042, 16.7468, 0.2288 ) }
    apic_31 { pt3dadd( 784.601, 489.411, 15.5584, 0.3162 ) }
    apic_31 { pt3dadd( 785.652, 489.732, 15.0586, 0.3772 ) }
    apic_31 { pt3dadd( 786.436, 490.346, 14.5304, 0.3414 ) }
    apic_31 { pt3dadd( 785.548, 490.81, 13.9801, 0.314 ) }
    apic_31 { pt3dadd( 784.444, 491.079, 13.4553, 0.3004 ) }
    apic_31 { pt3dadd( 783.38, 491.33, 12.8901, 0.3232 ) }
    apic_31 { pt3dadd( 782.481, 491.982, 12.3525, 0.3606 ) }
    apic_31 { pt3dadd( 782.086, 493.042, 11.8944, 0.4554 ) }
    apic_31 { pt3dadd( 781.9, 494.084, 11.3465, 0.5058 ) }
    apic_31 { pt3dadd( 781.179, 494.884, 10.7433, 0.5222 ) }
    apic_31 { pt3dadd( 780.654, 495.899, 10.2271, 0.4688 ) }
    apic_31 { pt3dadd( 780.58, 497.039, 9.8104, 0.548 ) }
    apic_31 { pt3dadd( 780.615, 498.17, 9.4116, 0.517 ) }
    apic_31 { pt3dadd( 780.4, 499.057, 8.853, 0.4068 ) }
    apic_31 { pt3dadd( 779.708, 499.965, 7.9061, 0.4576 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 55/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 802.466, 485.016, 28.9503, 0.334 ) }
    apic_5 { pt3dadd( 803.294, 483.971, 28.9845, 0.2748 ) }
    apic_5 { pt3dadd( 803.997, 483.09, 29.1651, 0.2752 ) }
    apic_5 { pt3dadd( 804.757, 482.262, 29.4526, 0.2758 ) }
    apic_5 { pt3dadd( 805.661, 481.618, 29.8183, 0.2764 ) }
    apic_5 { pt3dadd( 806.67, 481.141, 30.1994, 0.278 ) }
    apic_5 { pt3dadd( 807.703, 480.712, 30.5421, 0.281 ) }
    apic_5 { pt3dadd( 808.777, 480.363, 30.7924, 0.2864 ) }
    apic_5 { pt3dadd( 809.883, 480.234, 30.8605, 0.2966 ) }
    apic_5 { pt3dadd( 810.995, 480.213, 30.7502, 0.3152 ) }
    apic_5 { pt3dadd( 812.12, 480.167, 30.5441, 0.3516 ) }
    apic_5 { pt3dadd( 813.234, 479.966, 30.312, 0.409 ) }
    apic_5 { pt3dadd( 814.228, 479.44, 30.1126, 0.5642 ) }
    apic_5 { pt3dadd( 815.055, 478.659, 29.9785, 0.6158 ) }
    apic_5 { pt3dadd( 815.722, 477.734, 29.9149, 0.4846 ) }
    apic_5 { pt3dadd( 816.37, 476.792, 29.9093, 0.426 ) }
    apic_5 { pt3dadd( 817.056, 475.876, 29.944, 0.337 ) }
    apic_5 { pt3dadd( 817.747, 474.965, 30.0098, 0.306 ) }
    apic_5 { pt3dadd( 818.436, 474.051, 30.1036, 0.2856 ) }
    apic_5 { pt3dadd( 819.152, 473.159, 30.2336, 0.295 ) }
    apic_5 { pt3dadd( 819.954, 472.36, 30.4282, 0.3134 ) }
    apic_5 { pt3dadd( 820.845, 471.684, 30.7098, 0.3412 ) }
    apic_5 { pt3dadd( 821.758, 471.045, 31.0604, 0.4244 ) }
    apic_5 { pt3dadd( 822.632, 470.34, 31.4334, 0.4242 ) }
    apic_5 { pt3dadd( 823.409, 469.513, 31.771, 0.4884 ) }
    apic_5 { pt3dadd( 824.119, 468.618, 32.0466, 0.5212 ) }
    apic_5 { pt3dadd( 824.827, 467.719, 32.2633, 0.5448 ) }
    apic_5 { pt3dadd( 825.605, 466.882, 32.4383, 0.54 ) }
    apic_5 { pt3dadd( 826.501, 466.179, 32.5934, 0.5382 ) }
    apic_5 { pt3dadd( 827.447, 465.538, 32.7513, 0.4992 ) }
    apic_5 { pt3dadd( 828.336, 464.826, 32.9398, 0.601 ) }
    apic_5 { pt3dadd( 829.085, 463.985, 33.1845, 0.6304 ) }
    apic_5 { pt3dadd( 829.765, 463.087, 33.481, 0.543 ) }
    apic_5 { pt3dadd( 830.43, 462.174, 33.8022, 0.3848 ) }
    apic_5 { pt3dadd( 831.081, 461.239, 34.1088, 0.3002 ) }
    apic_5 { pt3dadd( 831.714, 460.287, 34.3736, 0.2748 ) }
    apic_5 { pt3dadd( 832.346, 459.333, 34.6002, 0.275 ) }
    apic_5 { pt3dadd( 832.999, 458.396, 34.8135, 0.2754 ) }
    apic_5 { pt3dadd( 833.714, 457.517, 35.0596, 0.276 ) }
    apic_5 { pt3dadd( 834.486, 456.708, 35.3744, 0.2774 ) }
    apic_5 { pt3dadd( 835.277, 455.923, 35.751, 0.2794 ) }
    apic_5 { pt3dadd( 836.102, 455.154, 36.1469, 0.2838 ) }
    apic_5 { pt3dadd( 836.98, 454.428, 36.5042, 0.2912 ) }
    apic_5 { pt3dadd( 837.907, 453.757, 36.8026, 0.3064 ) }
    apic_5 { pt3dadd( 838.83, 453.097, 37.0804, 0.3284 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_5 { pt3dadd( 839.62, 452.363, 37.4111, 0.4 ) }
    apic_5 { pt3dadd( 840.408, 451.605, 37.7611, 0.3836 ) }
    apic_5 { pt3dadd( 841.316, 450.933, 38.0156, 0.3892 ) }
    apic_5 { pt3dadd( 842.259, 450.284, 38.1458, 0.4548 ) }
    apic_5 { pt3dadd( 843.152, 449.577, 38.1492, 0.5358 ) }
    apic_5 { pt3dadd( 843.937, 448.766, 38.0156, 0.4268 ) }
    apic_5 { pt3dadd( 844.635, 447.891, 37.7625, 0.3402 ) }
    apic_5 { pt3dadd( 845.342, 447.018, 37.4497, 0.3014 ) }
    apic_5 { pt3dadd( 846.146, 446.22, 37.158, 0.3264 ) }
    apic_5 { pt3dadd( 847.038, 445.507, 36.9376, 0.3606 ) }
    apic_5 { pt3dadd( 847.952, 444.818, 36.7931, 0.485 ) }
    apic_5 { pt3dadd( 848.859, 444.121, 36.713, 0.418 ) }
    apic_5 { pt3dadd( 849.729, 443.379, 36.6814, 0.366 ) }
    apic_5 { pt3dadd( 850.562, 442.595, 36.6803, 0.3756 ) }
    apic_5 { pt3dadd( 851.384, 441.799, 36.6943, 0.3378 ) }
    apic_5 { pt3dadd( 852.215, 441.013, 36.7161, 0.3072 ) }
    apic_5 { pt3dadd( 853.081, 440.266, 36.7486, 0.2878 ) }
    apic_5 { pt3dadd( 853.978, 439.557, 36.7945, 0.3002 ) }
    apic_5 { pt3dadd( 854.883, 438.857, 36.855, 0.3168 ) }
    apic_5 { pt3dadd( 855.777, 438.144, 36.9281, 0.3784 ) }
    apic_5 { pt3dadd( 856.632, 437.384, 37.0082, 0.3434 ) }
    apic_5 { pt3dadd( 857.446, 436.582, 37.0936, 0.3172 ) }
    apic_5 { pt3dadd( 858.236, 435.754, 37.2042, 0.3078 ) }
    apic_5 { pt3dadd( 858.966, 434.888, 37.3822, 0.3306 ) }
    apic_5 { pt3dadd( 859.641, 433.998, 37.6457, 0.4052 ) }
    apic_5 { pt3dadd( 860.314, 433.107, 37.9666, 0.3876 ) }
    apic_5 { pt3dadd( 861.033, 432.234, 38.2883, 0.4246 ) }
    apic_5 { pt3dadd( 861.802, 431.391, 38.5568, 0.3836 ) }
    apic_5 { pt3dadd( 862.594, 430.566, 38.7509, 0.382 ) }
    apic_5 { pt3dadd( 863.392, 429.746, 38.8746, 0.4778 ) }
    apic_5 { pt3dadd( 864.198, 428.934, 38.9458, 0.4034 ) }
    apic_5 { pt3dadd( 865.014, 428.133, 38.9861, 0.3446 ) }
    apic_5 { pt3dadd( 865.834, 427.336, 39.0172, 0.3096 ) }
    apic_5 { pt3dadd( 866.657, 426.54, 39.0547, 0.3416 ) }
    apic_5 { pt3dadd( 867.485, 425.751, 39.1056, 0.3886 ) }
    apic_5 { pt3dadd( 868.344, 424.995, 39.1714, 0.536 ) }
    apic_5 { pt3dadd( 869.274, 424.335, 39.2633, 0.5152 ) }
    apic_5 { pt3dadd( 870.221, 423.72, 39.4181, 0.5328 ) }
    apic_5 { pt3dadd( 871.046, 422.983, 39.653, 0.7506 ) }
    apic_5 { pt3dadd( 871.657, 422.035, 39.8518, 0.7128 ) }
    apic_5 { pt3dadd( 872.087, 421.005, 39.9342, 0.5008 ) }
    apic_5 { pt3dadd( 872.532, 419.959, 39.9728, 0.3366 ) }
    apic_5 { pt3dadd( 873.096, 418.979, 40.07, 0.2952 ) }
    apic_5 { pt3dadd( 873.72, 418.054, 40.2514, 0.3126 ) }
    apic_5 { pt3dadd( 874.403, 417.164, 40.4874, 0.347 ) }
    apic_5 { pt3dadd( 875.213, 416.368, 40.7294, 0.399 ) }
    apic_5 { pt3dadd( 876.105, 415.654, 40.9352, 0.552 ) }
    apic_5 { pt3dadd( 877.019, 414.965, 41.0822, 0.5626 ) }
    apic_5 { pt3dadd( 877.915, 414.255, 41.1678, 0.5356 ) }
    apic_5 { pt3dadd( 878.763, 413.486, 41.2073, 0.4826 ) }
    apic_5 { pt3dadd( 879.57, 412.676, 41.221, 0.3992 ) }
    apic_5 { pt3dadd( 880.366, 411.856, 41.2252, 0.3994 ) }
    apic_5 { pt3dadd( 881.149, 411.021, 41.2286, 0.335 ) }
    apic_5 { pt3dadd( 881.896, 410.155, 41.2331, 0.302 ) }
    apic_5 { pt3dadd( 882.617, 409.267, 41.2395, 0.2782 ) }
    apic_5 { pt3dadd( 883.333, 408.374, 41.2482, 0.2814 ) }
    apic_5 { pt3dadd( 884.072, 407.502, 41.2605, 0.2872 ) }
    apic_5 { pt3dadd( 884.87, 406.683, 41.2776, 0.299 ) }
    apic_5 { pt3dadd( 885.705, 405.901, 41.3017, 0.3146 ) }
    apic_5 { pt3dadd( 886.551, 405.13, 41.335, 0.3744 ) }
    apic_5 { pt3dadd( 887.389, 404.353, 41.3826, 0.3356 ) }
    apic_5 { pt3dadd( 888.213, 403.559, 41.4487, 0.303 ) }
    apic_5 { pt3dadd( 889.025, 402.752, 41.5383, 0.2802 ) }
    apic_5 { pt3dadd( 889.808, 401.919, 41.6626, 0.285 ) }
    apic_5 { pt3dadd( 890.49, 401.01, 41.8499, 0.294 ) }
    apic_5 { pt3dadd( 891.046, 400.035, 42.1196, 0.3112 ) }
    apic_5 { pt3dadd( 891.55, 399.039, 42.4584, 0.3384 ) }
    apic_5 { pt3dadd( 892.076, 398.044, 42.8232, 0.4134 ) }
    apic_5 { pt3dadd( 892.66, 397.066, 43.1567, 0.4334 ) }
    apic_5 { pt3dadd( 893.278, 396.104, 43.4291, 0.3606 ) }
    apic_5 { pt3dadd( 893.906, 395.148, 43.6414, 0.3028 ) }
    apic_5 { pt3dadd( 894.565, 394.214, 43.8211, 0.2792 ) }
    apic_5 { pt3dadd( 895.287, 393.34, 44.0135, 0.2834 ) }
    apic_5 { pt3dadd( 896.053, 392.518, 44.2439, 0.2906 ) }
    apic_5 { pt3dadd( 896.832, 391.709, 44.5021, 0.3056 ) }
    apic_5 { pt3dadd( 897.621, 390.888, 44.73, 0.3264 ) }
    apic_5 { pt3dadd( 898.411, 390.067, 44.861, 0.3976 ) }
    apic_5 { pt3dadd( 899.194, 389.254, 44.8893, 0.3734 ) }
    apic_5 { pt3dadd( 899.968, 388.418, 44.8736, 0.3988 ) }
    apic_5 { pt3dadd( 900.708, 387.551, 44.9002, 0.3338 ) }
    apic_5 { pt3dadd( 901.418, 386.673, 45.0108, 0.3 ) }
    apic_5 { pt3dadd( 902.147, 385.813, 45.1973, 0.2746 ) }
    apic_5 { pt3dadd( 902.98, 385.039, 45.416, 0.2746 ) }
    apic_5 { pt3dadd( 903.911, 384.378, 45.6179, 0.2746 ) }
    apic_5 { pt3dadd( 904.873, 383.759, 45.7808, 0.2746 ) }
    apic_5 { pt3dadd( 905.819, 383.115, 45.9077, 0.2746 ) }
    apic_5 { pt3dadd( 906.726, 382.42, 46.0158, 0.2746 ) }
    apic_5 { pt3dadd( 907.613, 381.698, 46.1236, 0.2746 ) }
    apic_5 { pt3dadd( 908.494, 380.969, 46.247, 0.2746 ) }
    apic_5 { pt3dadd( 909.376, 380.242, 46.3954, 0.2746 ) }
    apic_5 { pt3dadd( 910.257, 379.513, 46.573, 0.2746 ) }
    apic_5 { pt3dadd( 911.133, 378.778, 46.7844, 0.2746 ) }
    apic_5 { pt3dadd( 911.961, 378.0, 47.0557, 0.2746 ) }
    apic_5 { pt3dadd( 912.718, 377.176, 47.411, 0.2746 ) }
    apic_5 { pt3dadd( 913.445, 376.334, 47.8386, 0.2746 ) }
    apic_5 { pt3dadd( 914.17, 375.492, 48.3084, 0.2746 ) }
    apic_5 { pt3dadd( 914.897, 374.65, 48.788, 0.2746 ) }
    apic_5 { pt3dadd( 915.622, 373.808, 49.2478, 0.2746 ) }
    apic_5 { pt3dadd( 916.355, 372.967, 49.6544, 0.2746 ) }
    apic_5 { pt3dadd( 917.151, 372.152, 49.9405, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_5 { pt3dadd( 918.002, 371.397, 50.0483, 0.2746 ) }
    apic_5 { pt3dadd( 918.867, 370.669, 49.994, 0.2746 ) }
    apic_5 { pt3dadd( 919.734, 369.942, 49.826, 0.2746 ) }
    apic_5 { pt3dadd( 920.599, 369.215, 49.5933, 0.2746 ) }
    apic_5 { pt3dadd( 921.466, 368.488, 49.3427, 0.2746 ) }
    apic_5 { pt3dadd( 922.331, 367.76, 49.1151, 0.2746 ) }
    apic_5 { pt3dadd( 923.158, 366.974, 48.972, 0.2746 ) }
    apic_5 { pt3dadd( 923.897, 366.109, 48.9712, 0.2746 ) }
    apic_5 { pt3dadd( 924.588, 365.214, 49.1109, 0.2746 ) }
    apic_5 { pt3dadd( 925.269, 364.316, 49.3573, 0.2746 ) }
    apic_5 { pt3dadd( 925.951, 363.418, 49.6709, 0.2746 ) }
    apic_5 { pt3dadd( 926.632, 362.519, 50.015, 0.2746 ) }
    apic_5 { pt3dadd( 927.314, 361.617, 50.3507, 0.2746 ) }
    apic_5 { pt3dadd( 928.0, 360.708, 50.6321, 0.2746 ) }
    apic_5 { pt3dadd( 928.688, 359.794, 50.8326, 0.2746 ) }
    apic_5 { pt3dadd( 929.373, 358.877, 50.96, 0.2746 ) }
    apic_5 { pt3dadd( 930.059, 357.962, 51.032, 0.2746 ) }
    apic_5 { pt3dadd( 930.746, 357.047, 51.0658, 0.2746 ) }
    apic_5 { pt3dadd( 931.432, 356.132, 51.0779, 0.2746 ) }
    apic_5 { pt3dadd( 932.117, 355.217, 51.081, 0.2746 ) }
    apic_5 { pt3dadd( 932.796, 354.296, 51.0829, 0.2746 ) }
    apic_5 { pt3dadd( 933.443, 353.352, 51.0854, 0.2746 ) }
    apic_5 { pt3dadd( 934.054, 352.385, 51.0888, 0.2746 ) }
    apic_5 { pt3dadd( 934.655, 351.412, 51.0936, 0.2746 ) }
    apic_5 { pt3dadd( 935.254, 350.437, 51.1, 0.2746 ) }
    apic_5 { pt3dadd( 935.854, 349.462, 51.1095, 0.2746 ) }
    apic_5 { pt3dadd( 936.452, 348.488, 51.1227, 0.2746 ) }
    apic_5 { pt3dadd( 937.052, 347.513, 51.1406, 0.2746 ) }
    apic_5 { pt3dadd( 937.653, 346.54, 51.1652, 0.2746 ) }
    apic_5 { pt3dadd( 938.291, 345.59, 51.2016, 0.2746 ) }
    apic_5 { pt3dadd( 938.974, 344.673, 51.254, 0.2746 ) }
    apic_5 { pt3dadd( 939.67, 343.766, 51.3237, 0.2748 ) }
    apic_5 { pt3dadd( 940.368, 342.86, 51.4108, 0.275 ) }
    apic_5 { pt3dadd( 941.067, 341.955, 51.5172, 0.2752 ) }
    apic_5 { pt3dadd( 941.765, 341.049, 51.6457, 0.2758 ) }
    apic_5 { pt3dadd( 942.463, 340.143, 51.7989, 0.277 ) }
    apic_5 { pt3dadd( 943.165, 339.241, 51.9848, 0.279 ) }
    apic_5 { pt3dadd( 943.888, 338.363, 52.232, 0.283 ) }
    apic_5 { pt3dadd( 944.629, 337.518, 52.5619, 0.2902 ) }
    apic_5 { pt3dadd( 945.376, 336.683, 52.9626, 0.3032 ) }
    apic_5 { pt3dadd( 946.122, 335.85, 53.4092, 0.3298 ) }
    apic_5 { pt3dadd( 946.869, 335.016, 53.8768, 0.3664 ) }
    apic_5 { pt3dadd( 947.616, 334.183, 54.341, 0.4964 ) }
    apic_5 { pt3dadd( 948.366, 333.349, 54.7795, 0.4328 ) }
    apic_5 { pt3dadd( 949.136, 332.516, 55.1496, 0.4242 ) }
    apic_5 { pt3dadd( 949.926, 331.69, 55.4193, 0.3338 ) }
    apic_5 { pt3dadd( 950.721, 330.868, 55.5979, 0.3 ) }
    apic_5 { pt3dadd( 951.516, 330.046, 55.7091, 0.2746 ) }
    apic_5 { pt3dadd( 952.312, 329.224, 55.7763, 0.2746 ) }
    apic_5 { pt3dadd( 953.108, 328.402, 55.8219, 0.2746 ) }
    apic_5 { pt3dadd( 953.904, 327.58, 55.8656, 0.2746 ) }
    apic_5 { pt3dadd( 954.695, 326.754, 55.9219, 0.2746 ) }
    apic_5 { pt3dadd( 955.462, 325.905, 56.0056, 0.2746 ) }
    apic_5 { pt3dadd( 956.194, 325.03, 56.1271, 0.2746 ) }
    apic_5 { pt3dadd( 956.917, 324.147, 56.2839, 0.2746 ) }
    apic_5 { pt3dadd( 957.64, 323.265, 56.4698, 0.2746 ) }
    apic_5 { pt3dadd( 958.362, 322.38, 56.6787, 0.2746 ) }
    apic_5 { pt3dadd( 959.084, 321.497, 56.9061, 0.2746 ) }
    apic_5 { pt3dadd( 959.806, 320.614, 57.1474, 0.2746 ) }
    apic_5 { pt3dadd( 960.54, 319.742, 57.4067, 0.2746 ) }
    apic_5 { pt3dadd( 961.302, 318.9, 57.6951, 0.2746 ) }
    apic_5 { pt3dadd( 962.082, 318.08, 58.0157, 0.2746 ) }
    apic_5 { pt3dadd( 962.867, 317.267, 58.3596, 0.2746 ) }
    apic_5 { pt3dadd( 963.653, 316.453, 58.7146, 0.2746 ) }
    apic_5 { pt3dadd( 964.437, 315.639, 59.068, 0.2746 ) }
    apic_5 { pt3dadd( 965.222, 314.825, 59.4084, 0.2746 ) }
    apic_5 { pt3dadd( 966.008, 314.01, 59.7206, 0.2746 ) }
    apic_5 { pt3dadd( 966.8, 313.189, 59.9768, 0.2746 ) }
    apic_5 { pt3dadd( 967.596, 312.368, 60.1597, 0.2746 ) }
    apic_5 { pt3dadd( 968.391, 311.546, 60.2778, 0.2746 ) }
    apic_5 { pt3dadd( 969.188, 310.724, 60.3484, 0.2746 ) }
    apic_5 { pt3dadd( 969.984, 309.903, 60.3879, 0.2746 ) }
    apic_5 { pt3dadd( 970.779, 309.08, 60.412, 0.2746 ) }
    apic_5 { pt3dadd( 971.575, 308.259, 60.4332, 0.2746 ) }
    apic_5 { pt3dadd( 972.36, 307.426, 60.461, 0.2746 ) }
    apic_5 { pt3dadd( 973.106, 306.559, 60.5016, 0.2746 ) }
    apic_5 { pt3dadd( 973.816, 305.663, 60.5584, 0.2746 ) }
    apic_5 { pt3dadd( 974.515, 304.758, 60.6326, 0.2746 ) }
    apic_5 { pt3dadd( 975.214, 303.852, 60.7247, 0.2746 ) }
    apic_5 { pt3dadd( 975.912, 302.946, 60.8364, 0.2746 ) }
    apic_5 { pt3dadd( 976.61, 302.04, 60.9711, 0.2746 ) }
    apic_5 { pt3dadd( 977.308, 301.134, 61.1313, 0.2746 ) }
    apic_5 { pt3dadd( 978.044, 300.261, 61.3312, 0.2746 ) }
    apic_5 { pt3dadd( 978.876, 299.491, 61.6006, 0.2746 ) }
    apic_5 { pt3dadd( 979.77, 298.812, 61.9492, 0.2746 ) }
    apic_5 { pt3dadd( 980.678, 298.156, 62.361, 0.2746 ) }
    apic_5 { pt3dadd( 981.586, 297.502, 62.8107, 0.2746 ) }
    apic_5 { pt3dadd( 982.496, 296.849, 63.2738, 0.2746 ) }
    apic_5 { pt3dadd( 983.405, 296.195, 63.7274, 0.2746 ) }
    apic_5 { pt3dadd( 984.302, 295.518, 64.1455, 0.2746 ) }
    apic_5 { pt3dadd( 985.136, 294.746, 64.486, 0.2746 ) }
    apic_5 { pt3dadd( 985.9, 293.895, 64.7259, 0.2746 ) }
    apic_5 { pt3dadd( 986.643, 293.025, 64.8777, 0.2746 ) }
    apic_5 { pt3dadd( 987.385, 292.155, 64.9639, 0.2746 ) }
    apic_5 { pt3dadd( 988.128, 291.284, 65.0059, 0.2746 ) }
    apic_5 { pt3dadd( 988.869, 290.414, 65.0236, 0.2748 ) }
    apic_5 { pt3dadd( 989.612, 289.543, 65.0331, 0.2748 ) }
    apic_5 { pt3dadd( 990.347, 288.667, 65.0437, 0.2752 ) }
    apic_5 { pt3dadd( 991.061, 287.773, 65.0586, 0.2758 ) }
    apic_5 { pt3dadd( 991.752, 286.861, 65.079, 0.2766 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_5 { pt3dadd( 992.438, 285.945, 65.1076, 0.2782 ) }
    apic_5 { pt3dadd( 993.125, 285.03, 65.1479, 0.2812 ) }
    apic_5 { pt3dadd( 993.811, 284.115, 65.2047, 0.287 ) }
    apic_5 { pt3dadd( 994.496, 283.199, 65.284, 0.2976 ) }
    apic_5 { pt3dadd( 995.183, 282.284, 65.3912, 0.318 ) }
    apic_5 { pt3dadd( 995.89, 281.385, 65.5402, 0.3508 ) }
    apic_5 { pt3dadd( 996.676, 280.564, 65.7661, 0.4372 ) }
    apic_5 { pt3dadd( 997.52, 279.823, 66.0876, 0.4722 ) }
    apic_5 { pt3dadd( 998.379, 279.106, 66.4877, 0.4582 ) }
    apic_5 { pt3dadd( 999.238, 278.389, 66.9404, 0.3594 ) }
    apic_5 { pt3dadd( 1000.1, 277.672, 67.419, 0.3 ) }
    apic_5 { pt3dadd( 1000.96, 276.956, 67.8992, 0.2746 ) }
    apic_5 { pt3dadd( 1001.82, 276.234, 68.3564, 0.2746 ) }
    apic_5 { pt3dadd( 1002.65, 275.47, 68.7546, 0.2748 ) }
    apic_5 { pt3dadd( 1003.47, 274.671, 69.0724, 0.275 ) }
    apic_5 { pt3dadd( 1004.27, 273.862, 69.3182, 0.2752 ) }
    apic_5 { pt3dadd( 1005.09, 273.065, 69.5005, 0.2758 ) }
    apic_5 { pt3dadd( 1005.92, 272.28, 69.6282, 0.277 ) }
    apic_5 { pt3dadd( 1006.76, 271.501, 69.72, 0.279 ) }
    apic_5 { pt3dadd( 1007.68, 270.813, 69.7981, 0.283 ) }
    apic_5 { pt3dadd( 1008.73, 270.373, 69.8788, 0.2898 ) }
    apic_5 { pt3dadd( 1009.84, 270.11, 69.9726, 0.3032 ) }
    apic_5 { pt3dadd( 1010.66, 269.332, 70.1072, 0.3284 ) }
    apic_5 { pt3dadd( 1010.6, 268.202, 70.3002, 0.3702 ) }
    apic_5 { pt3dadd( 1010.77, 267.082, 70.5614, 0.4728 ) }
    apic_5 { pt3dadd( 1011.37, 266.133, 70.8868, 0.5402 ) }
    apic_5 { pt3dadd( 1012.16, 265.304, 71.2121, 0.5742 ) }
    apic_5 { pt3dadd( 1012.95, 264.507, 71.5638, 0.6216 ) }
    apic_5 { pt3dadd( 1013.68, 263.774, 72.0222, 0.5586 ) }
    apic_5 { pt3dadd( 1014.52, 263.015, 72.427, 0.4864 ) }
    apic_5 { pt3dadd( 1015.43, 262.326, 72.6956, 0.3644 ) }
    apic_5 { pt3dadd( 1016.36, 261.663, 72.8392, 0.3094 ) }
    apic_5 { pt3dadd( 1017.29, 261.0, 72.8913, 0.2922 ) }
    apic_5 { pt3dadd( 1018.1, 260.194, 72.9221, 0.3066 ) }
    apic_5 { pt3dadd( 1018.86, 259.338, 72.9649, 0.3362 ) }
    apic_5 { pt3dadd( 1019.61, 258.48, 73.0447, 0.3792 ) }
    apic_5 { pt3dadd( 1020.36, 257.62, 73.1637, 0.5144 ) }
    apic_5 { pt3dadd( 1021.26, 256.914, 73.2864, 0.4968 ) }
    apic_5 { pt3dadd( 1022.17, 256.226, 73.4068, 0.3936 ) }
    apic_5 { pt3dadd( 1023.09, 255.54, 73.521, 0.3164 ) }
    apic_5 { pt3dadd( 1024.0, 254.854, 73.6308, 0.3048 ) }
    apic_5 { pt3dadd( 1024.88, 254.157, 73.8195, 0.3314 ) }
    apic_5 { pt3dadd( 1025.75, 253.461, 74.0684, 0.3764 ) }
    apic_5 { pt3dadd( 1026.62, 252.766, 74.3512, 0.4794 ) }
    apic_5 { pt3dadd( 1027.55, 252.107, 74.5679, 0.5764 ) }
    apic_5 { pt3dadd( 1028.51, 251.537, 74.6194, 0.527 ) }
    apic_5 { pt3dadd( 1029.47, 250.972, 74.5458, 0.4026 ) }
    apic_5 { pt3dadd( 1030.43, 250.407, 74.3868, 0.333 ) }
    apic_5 { pt3dadd( 1031.3, 249.681, 74.3333, 0.3378 ) }
    apic_5 { pt3dadd( 1032.14, 248.933, 74.4131, 0.3804 ) }
    apic_5 { pt3dadd( 1032.97, 248.186, 74.6091, 0.5232 ) }
    apic_5 { pt3dadd( 1033.74, 247.358, 74.8698, 0.4832 ) }
    apic_5 { pt3dadd( 1034.32, 246.374, 75.1033, 0.513 ) }
    apic_5 { pt3dadd( 1034.9, 245.388, 75.2914, 0.521 ) }
    apic_5 { pt3dadd( 1035.48, 244.403, 75.4194, 0.538 ) }
    apic_5 { pt3dadd( 1036.03, 243.399, 75.4978, 0.5582 ) }
    apic_5 { pt3dadd( 1036.48, 242.348, 75.5376, 0.4208 ) }
    apic_5 { pt3dadd( 1036.94, 241.298, 75.5574, 0.3294 ) }
    apic_5 { pt3dadd( 1037.39, 240.248, 75.5703, 0.2822 ) }
    apic_5 { pt3dadd( 1037.84, 239.198, 75.579, 0.2882 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 60/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 802.466, 485.016, 28.9503, 0.334 ) }
    apic_2 { pt3dadd( 803.049, 484.047, 28.4861, 0.2288 ) }
    apic_2 { pt3dadd( 803.698, 483.115, 28.8772, 0.3366 ) }
    apic_2 { pt3dadd( 804.347, 482.19, 29.0576, 0.416 ) }
    apic_2 { pt3dadd( 804.906, 481.203, 29.2541, 0.4086 ) }
    apic_2 { pt3dadd( 805.305, 480.137, 29.4305, 0.4588 ) }
    apic_2 { pt3dadd( 805.505, 479.017, 29.5719, 0.4714 ) }
    apic_2 { pt3dadd( 805.442, 477.879, 29.6638, 0.4268 ) }
    apic_2 { pt3dadd( 805.274, 476.757, 29.6187, 0.4454 ) }
    apic_2 { pt3dadd( 805.258, 475.668, 29.3961, 0.4458 ) }
    apic_2 { pt3dadd( 805.123, 474.551, 29.097, 0.3834 ) }
    apic_2 { pt3dadd( 804.366, 473.702, 28.8159, 0.3442 ) }
    apic_2 { pt3dadd( 803.366, 473.184, 28.628, 0.3584 ) }
    apic_2 { pt3dadd( 802.419, 472.549, 28.469, 0.421 ) }
    apic_2 { pt3dadd( 801.541, 471.893, 28.1781, 0.5878 ) }
    apic_2 { pt3dadd( 800.595, 471.351, 27.7788, 0.6528 ) }
    apic_2 { pt3dadd( 799.579, 470.844, 27.3623, 0.5854 ) }
    apic_2 { pt3dadd( 798.577, 470.348, 26.9013, 0.4592 ) }
    apic_2 { pt3dadd( 797.629, 469.858, 26.3627, 0.4582 ) }
    apic_2 { pt3dadd( 796.724, 469.295, 25.7993, 0.4704 ) }
    apic_2 { pt3dadd( 795.858, 468.552, 25.4193, 0.4252 ) }
    apic_2 { pt3dadd( 794.856, 468.105, 25.2622, 0.4422 ) }
    apic_2 { pt3dadd( 793.764, 467.801, 25.1959, 0.4398 ) }
    apic_2 { pt3dadd( 792.89, 467.123, 25.0291, 0.3722 ) }
    apic_2 { pt3dadd( 792.215, 466.211, 24.8307, 0.3248 ) }
    apic_2 { pt3dadd( 791.499, 465.399, 24.5106, 0.3156 ) }
    apic_2 { pt3dadd( 790.423, 465.267, 24.091, 0.3762 ) }
    apic_2 { pt3dadd( 789.303, 465.268, 23.8279, 0.339 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 88/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 786.791, 511.056, 28.8481, 0.4646 ) }
    dend_23 { pt3dadd( 786.659, 511.818, 27.0071, 1.144 ) }
    dend_23 { pt3dadd( 786.725, 512.84, 26.1695, 0.7482 ) }
    dend_23 { pt3dadd( 786.914, 513.95, 25.8168, 0.5038 ) }
    dend_23 { pt3dadd( 787.364, 514.979, 25.499, 0.4172 ) }
    dend_23 { pt3dadd( 787.682, 516.057, 25.2017, 0.5374 ) }
    dend_23 { pt3dadd( 787.97, 517.16, 24.9059, 0.5416 ) }
    dend_23 { pt3dadd( 787.878, 518.25, 24.5732, 0.4662 ) }
    dend_23 { pt3dadd( 787.201, 519.117, 24.2106, 0.5022 ) }
    dend_23 { pt3dadd( 786.197, 519.619, 23.8647, 0.4014 ) }
    dend_23 { pt3dadd( 785.324, 520.324, 23.4695, 0.3406 ) }
    dend_23 { pt3dadd( 785.283, 521.377, 22.9288, 0.3028 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_23 { pt3dadd( 785.724, 522.348, 22.2742, 0.3262 ) }
    dend_23 { pt3dadd( 786.103, 523.284, 21.503, 0.3724 ) }
    dend_23 { pt3dadd( 785.838, 524.276, 20.682, 0.446 ) }
    dend_23 { pt3dadd( 784.87, 524.8, 19.9205, 0.6424 ) }
    dend_23 { pt3dadd( 783.868, 525.316, 19.2808, 0.7138 ) }
    dend_23 { pt3dadd( 783.031, 526.095, 18.8119, 0.8948 ) }
    dend_23 { pt3dadd( 782.075, 526.724, 18.4887, 0.766 ) }
    dend_23 { pt3dadd( 781.103, 527.327, 18.2652, 0.7216 ) }
    dend_23 { pt3dadd( 780.272, 528.112, 18.0912, 0.6108 ) }
    dend_23 { pt3dadd( 779.452, 528.909, 17.9183, 0.5432 ) }
    dend_23 { pt3dadd( 778.633, 529.682, 17.6582, 0.6662 ) }
    dend_23 { pt3dadd( 777.983, 530.596, 17.3075, 0.602 ) }
    dend_23 { pt3dadd( 777.742, 531.704, 16.9124, 0.5294 ) }
    dend_23 { pt3dadd( 777.91, 532.833, 16.5637, 0.397 ) }
    dend_23 { pt3dadd( 777.967, 533.936, 16.1177, 0.3706 ) }
    dend_23 { pt3dadd( 777.518, 534.882, 15.5488, 0.4022 ) }
    dend_23 { pt3dadd( 776.895, 535.743, 14.9129, 0.528 ) }
    dend_23 { pt3dadd( 775.996, 536.442, 14.3478, 0.6632 ) }
    dend_23 { pt3dadd( 775.061, 537.101, 13.8894, 0.7032 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 19/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 786.791, 511.056, 28.8481, 0.4646 ) }
    dend_14 { pt3dadd( 786.409, 511.803, 28.819, 0.4198 ) }
    dend_14 { pt3dadd( 785.802, 512.772, 28.8576, 0.4072 ) }
    dend_14 { pt3dadd( 785.518, 513.877, 28.9556, 0.497 ) }
    dend_14 { pt3dadd( 785.473, 514.966, 29.169, 0.5726 ) }
    dend_14 { pt3dadd( 785.477, 516.071, 29.433, 0.6962 ) }
    dend_14 { pt3dadd( 785.512, 517.199, 29.5456, 0.5486 ) }
    dend_14 { pt3dadd( 785.998, 518.215, 29.5305, 0.5022 ) }
    dend_14 { pt3dadd( 786.402, 519.284, 29.4806, 0.4566 ) }
    dend_14 { pt3dadd( 786.779, 520.364, 29.4095, 0.4048 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 779.236, 501.312, 34.1505, 0.6362 ) }
    dend_10 { pt3dadd( 780.034, 501.765, 35.2122, 0.2288 ) }
    dend_10 { pt3dadd( 780.477, 502.491, 37.5967, 0.2746 ) }
    dend_10 { pt3dadd( 780.705, 503.358, 38.61, 0.2746 ) }
    dend_10 { pt3dadd( 781.013, 504.09, 39.8163, 0.2746 ) }
    dend_10 { pt3dadd( 781.606, 504.66, 41.1116, 0.2746 ) }
    dend_10 { pt3dadd( 781.934, 505.651, 42.2811, 0.2746 ) }
    dend_10 { pt3dadd( 782.28, 506.721, 43.2323, 0.2746 ) }
    dend_10 { pt3dadd( 782.652, 507.8, 43.8763, 0.2746 ) }
    dend_10 { pt3dadd( 783.452, 508.609, 44.2946, 0.2746 ) }
    dend_10 { pt3dadd( 784.316, 509.252, 44.721, 0.2746 ) }
    dend_10 { pt3dadd( 785.323, 509.711, 45.1354, 0.2746 ) }
    dend_10 { pt3dadd( 785.833, 510.732, 45.4919, 0.2746 ) }
    dend_10 { pt3dadd( 786.15, 511.803, 45.8707, 0.2746 ) }
    dend_10 { pt3dadd( 786.958, 512.601, 46.2445, 0.2746 ) }
    dend_10 { pt3dadd( 787.753, 513.332, 46.5811, 0.2746 ) }
    dend_10 { pt3dadd( 788.668, 513.385, 47.0604, 0.2746 ) }
    dend_10 { pt3dadd( 789.753, 513.584, 47.3721, 0.2746 ) }
    dend_10 { pt3dadd( 790.583, 514.165, 47.5513, 0.2746 ) }
    dend_10 { pt3dadd( 791.183, 515.038, 47.8593, 0.2746 ) }
    dend_10 { pt3dadd( 792.026, 515.734, 48.1846, 0.2746 ) }
    dend_10 { pt3dadd( 793.084, 516.135, 48.4952, 0.2746 ) }
    dend_10 { pt3dadd( 794.055, 516.722, 48.7962, 0.2746 ) }
    dend_10 { pt3dadd( 795.059, 517.253, 49.0784, 0.2746 ) }
    dend_10 { pt3dadd( 796.073, 517.719, 49.4396, 0.2746 ) }
    dend_10 { pt3dadd( 797.004, 518.218, 49.938, 0.2746 ) }
    dend_10 { pt3dadd( 797.647, 519.034, 50.5358, 0.2746 ) }
    dend_10 { pt3dadd( 798.101, 520.026, 51.1899, 0.2744 ) }
    dend_10 { pt3dadd( 798.739, 520.919, 51.8636, 0.2744 ) }
    dend_10 { pt3dadd( 799.48, 521.747, 52.4689, 0.2742 ) }
    dend_10 { pt3dadd( 800.203, 522.378, 53.0608, 0.2742 ) }
    dend_10 { pt3dadd( 800.842, 522.937, 53.7589, 0.2736 ) }
    dend_10 { pt3dadd( 801.418, 523.729, 54.2091, 0.2728 ) }
    dend_10 { pt3dadd( 801.928, 524.675, 54.3589, 0.2712 ) }
    dend_10 { pt3dadd( 802.162, 525.746, 54.5126, 0.2684 ) }
    dend_10 { pt3dadd( 802.372, 526.845, 54.6552, 0.2626 ) }
    dend_10 { pt3dadd( 802.741, 527.919, 54.7417, 0.2542 ) }
    dend_10 { pt3dadd( 803.022, 529.024, 54.7173, 0.2288 ) }
    dend_10 { pt3dadd( 803.088, 530.015, 54.04, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 68/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 779.236, 501.312, 34.1505, 0.6362 ) }
    dend_5 { pt3dadd( 778.362, 501.541, 34.4198, 0.6818 ) }
    dend_5 { pt3dadd( 777.475, 501.143, 34.8642, 0.4788 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 71/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 752.799, 516.289, 20.0632, 0.3618 ) }
    dend_70 { pt3dadd( 752.575, 516.232, 20.015, 0.3464 ) }
    dend_70 { pt3dadd( 751.733, 515.902, 20.2644, 0.386 ) }
    dend_70 { pt3dadd( 750.695, 515.604, 20.6072, 0.3584 ) }
    dend_70 { pt3dadd( 749.66, 515.464, 20.7409, 0.3398 ) }
    dend_70 { pt3dadd( 748.552, 515.409, 20.7318, 0.3738 ) }
    dend_70 { pt3dadd( 747.415, 515.327, 20.6661, 0.3348 ) }
    dend_70 { pt3dadd( 746.271, 515.335, 20.5577, 0.3016 ) }
    dend_70 { pt3dadd( 745.136, 515.466, 20.437, 0.2774 ) }
    dend_70 { pt3dadd( 744.05, 515.791, 20.3724, 0.28 ) }
    dend_70 { pt3dadd( 743.002, 516.215, 20.3782, 0.2846 ) }
    dend_70 { pt3dadd( 741.885, 516.419, 20.327, 0.2928 ) }
    dend_70 { pt3dadd( 740.772, 516.446, 20.1452, 0.3096 ) }
    dend_70 { pt3dadd( 739.661, 516.447, 19.8566, 0.334 ) }
    dend_70 { pt3dadd( 738.549, 516.489, 19.5041, 0.4112 ) }
    dend_70 { pt3dadd( 737.446, 516.631, 19.1276, 0.3998 ) }
    dend_70 { pt3dadd( 736.328, 516.779, 18.7975, 0.4422 ) }
    dend_70 { pt3dadd( 735.186, 516.797, 18.6048, 0.4398 ) }
    dend_70 { pt3dadd( 734.051, 516.719, 18.5783, 0.372 ) }
    dend_70 { pt3dadd( 732.931, 516.579, 18.7043, 0.3248 ) }
    dend_70 { pt3dadd( 731.828, 516.348, 18.9398, 0.3152 ) }
    dend_70 { pt3dadd( 730.759, 515.986, 19.2294, 0.3754 ) }
    dend_70 { pt3dadd( 729.665, 515.68, 19.5196, 0.3378 ) }
    dend_70 { pt3dadd( 728.53, 515.609, 19.7659, 0.3068 ) }
    dend_70 { pt3dadd( 727.388, 515.661, 19.9515, 0.287 ) }
    dend_70 { pt3dadd( 726.249, 515.764, 20.0704, 0.2988 ) }
    dend_70 { pt3dadd( 725.114, 515.901, 20.1298, 0.3142 ) }
    dend_70 { pt3dadd( 724.007, 516.145, 20.126, 0.3734 ) }
    dend_70 { pt3dadd( 722.948, 516.549, 20.0903, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_70 { pt3dadd( 721.959, 517.11, 20.1321, 0.3 ) }
    dend_70 { pt3dadd( 721.119, 517.842, 20.3007, 0.2746 ) }
    dend_70 { pt3dadd( 720.369, 518.643, 20.5883, 0.2746 ) }
    dend_70 { pt3dadd( 719.617, 519.481, 20.9124, 0.2746 ) }
    dend_70 { pt3dadd( 718.782, 520.26, 21.1781, 0.2748 ) }
    dend_70 { pt3dadd( 717.719, 520.669, 21.3779, 0.2748 ) }
    dend_70 { pt3dadd( 716.583, 520.793, 21.5139, 0.2752 ) }
    dend_70 { pt3dadd( 715.505, 521.171, 21.5978, 0.2758 ) }
    dend_70 { pt3dadd( 714.635, 521.904, 21.6775, 0.2766 ) }
    dend_70 { pt3dadd( 713.984, 522.832, 21.7835, 0.2784 ) }
    dend_70 { pt3dadd( 713.406, 523.807, 21.9026, 0.2816 ) }
    dend_70 { pt3dadd( 712.869, 524.815, 21.9771, 0.2874 ) }
    dend_70 { pt3dadd( 712.619, 525.93, 21.9797, 0.2994 ) }
    dend_70 { pt3dadd( 712.837, 527.05, 21.9041, 0.3158 ) }
    dend_70 { pt3dadd( 712.992, 528.164, 21.6872, 0.3764 ) }
    dend_70 { pt3dadd( 712.646, 529.155, 21.2786, 0.3396 ) }
    dend_70 { pt3dadd( 711.914, 530.005, 20.8237, 0.3104 ) }
    dend_70 { pt3dadd( 711.162, 530.867, 20.422, 0.2938 ) }
    dend_70 { pt3dadd( 710.38, 531.698, 20.0504, 0.3112 ) }
    dend_70 { pt3dadd( 709.545, 532.443, 19.6567, 0.3382 ) }
    dend_70 { pt3dadd( 708.815, 533.315, 19.2963, 0.413 ) }
    dend_70 { pt3dadd( 708.058, 534.163, 19.0469, 0.4328 ) }
    dend_70 { pt3dadd( 707.089, 534.696, 18.7143, 0.3592 ) }
    dend_70 { pt3dadd( 706.111, 535.185, 18.3043, 0.3 ) }
    dend_70 { pt3dadd( 705.076, 535.616, 17.8965, 0.2746 ) }
    dend_70 { pt3dadd( 704.034, 536.037, 17.5138, 0.2744 ) }
    dend_70 { pt3dadd( 702.953, 536.372, 17.178, 0.2744 ) }
    dend_70 { pt3dadd( 701.878, 536.756, 16.9212, 0.2742 ) }
    dend_70 { pt3dadd( 700.88, 537.291, 16.8424, 0.2742 ) }
    dend_70 { pt3dadd( 699.855, 537.785, 16.8802, 0.2736 ) }
    dend_70 { pt3dadd( 698.781, 538.183, 16.9587, 0.2728 ) }
    dend_70 { pt3dadd( 697.729, 538.632, 17.0646, 0.2712 ) }
    dend_70 { pt3dadd( 696.834, 539.343, 17.1792, 0.2684 ) }
    dend_70 { pt3dadd( 695.953, 540.073, 17.3037, 0.2626 ) }
    dend_70 { pt3dadd( 695.165, 540.86, 17.5023, 0.2542 ) }
    dend_70 { pt3dadd( 694.387, 541.684, 17.7163, 0.2288 ) }
    dend_70 { pt3dadd( 693.633, 542.544, 18.0715, 0.2288 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 37/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 752.799, 516.289, 20.0632, 0.3618 ) }
    dend_69 { pt3dadd( 751.853, 516.521, 18.2669, 0.2288 ) }
    dend_69 { pt3dadd( 750.76, 516.756, 16.9924, 0.4148 ) }
    dend_69 { pt3dadd( 749.672, 516.936, 16.4673, 0.436 ) }
    dend_69 { pt3dadd( 748.66, 517.126, 15.7648, 0.3654 ) }
    dend_69 { pt3dadd( 747.675, 517.345, 14.9337, 0.3114 ) }
    dend_69 { pt3dadd( 746.582, 517.246, 14.1029, 0.2956 ) }
    dend_69 { pt3dadd( 745.507, 516.974, 13.303, 0.3134 ) }
    dend_69 { pt3dadd( 744.414, 516.879, 12.5325, 0.347 ) }
    dend_69 { pt3dadd( 743.346, 517.005, 11.7893, 0.4068 ) }
    dend_69 { pt3dadd( 742.393, 517.486, 11.0689, 0.5304 ) }
    dend_69 { pt3dadd( 741.479, 518.136, 10.4235, 0.6974 ) }
    dend_69 { pt3dadd( 740.478, 518.662, 9.8462, 0.6222 ) }
    dend_69 { pt3dadd( 739.419, 518.992, 9.3135, 0.52 ) }
    dend_69 { pt3dadd( 738.362, 518.826, 8.7974, 0.3794 ) }
    dend_69 { pt3dadd( 737.377, 518.338, 8.2865, 0.338 ) }
    dend_69 { pt3dadd( 736.361, 518.399, 7.8399, 0.341 ) }
    dend_69 { pt3dadd( 735.613, 519.226, 7.4232, 0.4178 ) }
    dend_69 { pt3dadd( 734.923, 520.074, 6.9734, 0.4416 ) }
    dend_69 { pt3dadd( 733.924, 520.519, 6.5092, 0.376 ) }
    dend_69 { pt3dadd( 732.815, 520.752, 6.058, 0.3304 ) }
    dend_69 { pt3dadd( 732.186, 521.101, 5.4379, 0.333 ) }
    dend_69 { pt3dadd( 732.56, 521.825, 4.7207, 0.3722 ) }
    dend_69 { pt3dadd( 732.509, 522.87, 4.166, 0.5078 ) }
    dend_69 { pt3dadd( 731.976, 523.849, 3.6634, 0.454 ) }
    dend_69 { pt3dadd( 731.518, 524.873, 3.1841, 0.463 ) }
    dend_69 { pt3dadd( 730.625, 525.528, 2.8383, 0.409 ) }
    dend_69 { pt3dadd( 729.616, 526.051, 2.5311, 0.4238 ) }
    dend_69 { pt3dadd( 728.872, 526.732, 2.0879, 0.5806 ) }
    dend_69 { pt3dadd( 728.039, 527.429, 1.5947, 0.4702 ) }
    dend_69 { pt3dadd( 727.154, 528.109, 1.1293, 0.3846 ) }
    dend_69 { pt3dadd( 726.328, 528.849, 0.8756, 0.3318 ) }
    dend_69 { pt3dadd( 725.285, 529.302, 0.7277, 0.4068 ) }
    dend_69 { pt3dadd( 724.354, 529.967, 0.6374, 0.3926 ) }
    dend_69 { pt3dadd( 723.436, 530.532, 0.4561, 0.4238 ) }
    dend_69 { pt3dadd( 722.474, 529.936, 0.297, 0.4322 ) }
    dend_69 { pt3dadd( 721.512, 529.317, 0.0, 0.2288 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 74/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 822.745, 542.035, 23.0576, 0.3632 ) }
    dend_56 { pt3dadd( 822.924, 542.416, 24.4222, 0.2288 ) }
    dend_56 { pt3dadd( 823.386, 543.433, 24.0662, 0.3368 ) }
    dend_56 { pt3dadd( 823.778, 544.504, 23.9262, 0.4164 ) }
    dend_56 { pt3dadd( 824.047, 545.614, 23.808, 0.409 ) }
    dend_56 { pt3dadd( 824.243, 546.74, 23.7054, 0.4598 ) }
    dend_56 { pt3dadd( 824.419, 547.871, 23.6078, 0.4734 ) }
    dend_56 { pt3dadd( 824.603, 548.995, 23.498, 0.4304 ) }
    dend_56 { pt3dadd( 824.793, 550.112, 23.3619, 0.4522 ) }
    dend_56 { pt3dadd( 824.874, 551.237, 23.2094, 0.459 ) }
    dend_56 { pt3dadd( 824.751, 552.367, 23.0858, 0.4026 ) }
    dend_56 { pt3dadd( 824.411, 553.452, 23.0215, 0.4058 ) }
    dend_56 { pt3dadd( 823.913, 554.471, 23.0556, 0.347 ) }
    dend_56 { pt3dadd( 823.403, 555.478, 23.195, 0.3252 ) }
    dend_56 { pt3dadd( 823.049, 556.546, 23.3498, 0.316 ) }
    dend_56 { pt3dadd( 823.015, 557.662, 23.4667, 0.377 ) }
    dend_56 { pt3dadd( 823.14, 558.794, 23.6047, 0.341 ) }
    dend_56 { pt3dadd( 823.173, 559.901, 23.8583, 0.3124 ) }
    dend_56 { pt3dadd( 822.959, 560.918, 24.2733, 0.2988 ) }
    dend_56 { pt3dadd( 822.531, 561.898, 24.7844, 0.3142 ) }
    dend_56 { pt3dadd( 822.066, 562.922, 25.2864, 0.3734 ) }
    dend_56 { pt3dadd( 821.741, 564.011, 25.7218, 0.334 ) }
    dend_56 { pt3dadd( 821.661, 565.144, 26.077, 0.3 ) }
    dend_56 { pt3dadd( 821.728, 566.28, 26.3712, 0.2746 ) }
    dend_56 { pt3dadd( 821.806, 567.409, 26.6367, 0.2748 ) }
    dend_56 { pt3dadd( 821.947, 568.537, 26.8733, 0.275 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( 822.439, 569.538, 27.0718, 0.2754 ) }
    dend_56 { pt3dadd( 823.233, 570.353, 27.2362, 0.276 ) }
    dend_56 { pt3dadd( 824.045, 571.15, 27.4029, 0.2774 ) }
    dend_56 { pt3dadd( 824.783, 571.998, 27.6072, 0.2792 ) }
    dend_56 { pt3dadd( 825.385, 572.953, 27.8112, 0.2834 ) }
    dend_56 { pt3dadd( 825.949, 573.947, 27.9761, 0.2906 ) }
    dend_56 { pt3dadd( 826.631, 574.86, 28.0913, 0.3056 ) }
    dend_56 { pt3dadd( 827.598, 575.347, 28.1039, 0.3264 ) }
    dend_56 { pt3dadd( 828.584, 575.863, 28.1436, 0.3976 ) }
    dend_56 { pt3dadd( 829.186, 576.753, 28.278, 0.3736 ) }
    dend_56 { pt3dadd( 829.288, 577.869, 28.3746, 0.3992 ) }
    dend_56 { pt3dadd( 828.986, 578.948, 28.3788, 0.3346 ) }
    dend_56 { pt3dadd( 828.613, 580.011, 28.3237, 0.3012 ) }
    dend_56 { pt3dadd( 828.096, 580.999, 28.2092, 0.2766 ) }
    dend_56 { pt3dadd( 827.291, 581.799, 28.1392, 0.2782 ) }
    dend_56 { pt3dadd( 827.721, 582.376, 28.3702, 0.2814 ) }
    dend_56 { pt3dadd( 827.916, 583.478, 28.6499, 0.287 ) }
    dend_56 { pt3dadd( 827.973, 584.606, 28.8394, 0.2988 ) }
    dend_56 { pt3dadd( 828.148, 585.721, 28.9509, 0.3142 ) }
    dend_56 { pt3dadd( 828.239, 586.856, 29.036, 0.3738 ) }
    dend_56 { pt3dadd( 828.24, 587.994, 29.1645, 0.3346 ) }
    dend_56 { pt3dadd( 828.24, 589.12, 29.3622, 0.3012 ) }
    dend_56 { pt3dadd( 828.246, 590.256, 29.6293, 0.2766 ) }
    dend_56 { pt3dadd( 828.298, 591.388, 29.9636, 0.2782 ) }
    dend_56 { pt3dadd( 828.516, 592.483, 30.3772, 0.2814 ) }
    dend_56 { pt3dadd( 828.929, 593.512, 30.8482, 0.287 ) }
    dend_56 { pt3dadd( 829.447, 594.524, 31.2931, 0.2988 ) }
    dend_56 { pt3dadd( 829.99, 595.529, 31.6798, 0.3142 ) }
    dend_56 { pt3dadd( 830.392, 596.58, 32.0863, 0.3734 ) }
    dend_56 { pt3dadd( 830.41, 597.666, 32.5727, 0.3338 ) }
    dend_56 { pt3dadd( 829.845, 598.498, 33.1111, 0.3 ) }
    dend_56 { pt3dadd( 828.771, 598.544, 33.6907, 0.2746 ) }
    dend_56 { pt3dadd( 827.808, 598.565, 34.3344, 0.2746 ) }
    dend_56 { pt3dadd( 827.886, 599.315, 35.0241, 0.2746 ) }
    dend_56 { pt3dadd( 828.85, 599.845, 35.5673, 0.2746 ) }
    dend_56 { pt3dadd( 829.938, 600.197, 35.9666, 0.2746 ) }
    dend_56 { pt3dadd( 831.057, 600.422, 36.272, 0.2746 ) }
    dend_56 { pt3dadd( 832.178, 600.632, 36.4781, 0.2744 ) }
    dend_56 { pt3dadd( 833.285, 600.918, 36.6335, 0.2744 ) }
    dend_56 { pt3dadd( 834.41, 601.051, 36.8379, 0.2742 ) }
    dend_56 { pt3dadd( 835.549, 601.06, 37.107, 0.2742 ) }
    dend_56 { pt3dadd( 836.692, 601.071, 37.4102, 0.2736 ) }
    dend_56 { pt3dadd( 837.743, 601.253, 37.8652, 0.2728 ) }
    dend_56 { pt3dadd( 838.588, 600.877, 38.528, 0.2712 ) }
    dend_56 { pt3dadd( 839.143, 599.945, 39.2151, 0.2684 ) }
    dend_56 { pt3dadd( 839.864, 599.058, 39.7757, 0.2626 ) }
    dend_56 { pt3dadd( 840.493, 598.127, 40.2828, 0.2542 ) }
    dend_56 { pt3dadd( 841.336, 597.365, 40.6972, 0.2288 ) }
    dend_56 { pt3dadd( 842.442, 597.511, 41.44, 0.2288 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 822.745, 542.035, 23.0576, 0.3632 ) }
    dend_53 { pt3dadd( 822.994, 542.4, 23.2632, 0.467 ) }
    dend_53 { pt3dadd( 823.787, 543.083, 23.1755, 0.4926 ) }
    dend_53 { pt3dadd( 824.857, 543.406, 22.9767, 0.6664 ) }
    dend_53 { pt3dadd( 825.989, 543.569, 22.7491, 0.6026 ) }
    dend_53 { pt3dadd( 827.09, 543.869, 22.508, 0.5306 ) }
    dend_53 { pt3dadd( 828.067, 544.429, 22.2463, 0.3988 ) }
    dend_53 { pt3dadd( 828.892, 545.201, 22.0151, 0.3756 ) }
    dend_53 { pt3dadd( 829.677, 546.029, 21.8462, 0.4038 ) }
    dend_53 { pt3dadd( 830.478, 546.846, 21.7412, 0.567 ) }
    dend_53 { pt3dadd( 831.27, 547.656, 21.7324, 0.5602 ) }
    dend_53 { pt3dadd( 832.114, 548.418, 21.7824, 0.6774 ) }
    dend_53 { pt3dadd( 832.999, 549.072, 21.7264, 0.7204 ) }
    dend_53 { pt3dadd( 833.984, 549.644, 21.6563, 0.7312 ) }
    dend_53 { pt3dadd( 834.832, 550.193, 21.787, 0.6308 ) }
    dend_53 { pt3dadd( 835.752, 550.804, 21.7617, 0.569 ) }
    dend_53 { pt3dadd( 836.735, 551.369, 21.6741, 0.5388 ) }
    dend_53 { pt3dadd( 837.727, 551.938, 21.6033, 0.5302 ) }
    dend_53 { pt3dadd( 838.719, 552.508, 21.5567, 0.513 ) }
    dend_53 { pt3dadd( 839.228, 553.532, 21.5151, 0.4876 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 69/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 790.748, 513.7, 14.3341, 0.2776 ) }
    dend_44 { pt3dadd( 791.851, 513.465, 14.6493, 0.2288 ) }
    dend_44 { pt3dadd( 792.869, 512.977, 13.5869, 0.3306 ) }
    dend_44 { pt3dadd( 793.817, 512.574, 13.124, 0.405 ) }
    dend_44 { pt3dadd( 794.758, 512.517, 12.4203, 0.3874 ) }
    dend_44 { pt3dadd( 795.763, 512.671, 11.5943, 0.4244 ) }
    dend_44 { pt3dadd( 796.827, 512.898, 10.7481, 0.382 ) }
    dend_44 { pt3dadd( 797.932, 513.079, 9.9915, 0.3852 ) }
    dend_44 { pt3dadd( 799.047, 513.3, 9.3554, 0.4538 ) }
    dend_44 { pt3dadd( 799.406, 513.157, 8.6524, 0.5046 ) }
    dend_44 { pt3dadd( 798.642, 512.526, 7.9373, 0.5126 ) }
    dend_44 { pt3dadd( 797.633, 512.02, 7.3992, 0.4864 ) }
    dend_44 { pt3dadd( 796.587, 511.624, 7.0312, 0.4064 ) }
    dend_44 { pt3dadd( 795.594, 511.098, 6.6773, 0.4132 ) }
    dend_44 { pt3dadd( 794.856, 510.292, 6.3077, 0.36 ) }
    dend_44 { pt3dadd( 794.538, 509.345, 5.8875, 0.3502 ) }
    dend_44 { pt3dadd( 794.197, 509.318, 5.332, 0.3574 ) }
    dend_44 { pt3dadd( 793.44, 510.034, 4.8054, 0.4794 ) }
    dend_44 { pt3dadd( 792.587, 510.684, 4.5677, 0.4058 ) }
    dend_44 { pt3dadd( 791.706, 510.849, 4.7318, 0.3502 ) }
    dend_44 { pt3dadd( 790.645, 510.695, 5.0546, 0.3152 ) }
    dend_44 { pt3dadd( 789.534, 510.539, 5.369, 0.3756 ) }
    dend_44 { pt3dadd( 788.6, 510.31, 5.9412, 0.339 ) }
    dend_44 { pt3dadd( 787.483, 510.099, 6.4677, 0.305 ) }
    dend_44 { pt3dadd( 786.363, 509.884, 6.9131, 0.305 ) }
    dend_44 { pt3dadd( 785.61, 509.591, 8.414, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 95/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 790.748, 513.7, 14.3341, 0.2776 ) }
    dend_39 { pt3dadd( 790.284, 514.474, 13.4267, 0.2848 ) }
    dend_39 { pt3dadd( 789.572, 515.045, 12.458, 0.2934 ) }
    dend_39 { pt3dadd( 788.476, 515.089, 11.8101, 0.3108 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 99/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 752.457, 508.363, 24.4953, 0.484 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_33 { pt3dadd( 751.888, 509.657, 24.4819, 0.4386 ) }
    dend_33 { pt3dadd( 751.345, 510.655, 24.487, 0.3702 ) }
    dend_33 { pt3dadd( 750.661, 511.555, 24.518, 0.32 ) }
    dend_33 { pt3dadd( 749.881, 512.385, 24.5246, 0.313 ) }
    dend_33 { pt3dadd( 749.132, 513.249, 24.4651, 0.3404 ) }
    dend_33 { pt3dadd( 748.446, 514.157, 24.3204, 0.4228 ) }
    dend_33 { pt3dadd( 747.801, 515.039, 24.0367, 0.4222 ) }
    dend_33 { pt3dadd( 747.331, 515.944, 23.5715, 0.4788 ) }
    dend_33 { pt3dadd( 747.207, 517.009, 23.0645, 0.5334 ) }
    dend_33 { pt3dadd( 747.046, 518.107, 22.6509, 0.422 ) }
    dend_33 { pt3dadd( 746.326, 518.908, 22.3213, 0.3314 ) }
    dend_33 { pt3dadd( 745.259, 519.22, 22.0177, 0.2856 ) }
    dend_33 { pt3dadd( 744.157, 519.28, 21.6613, 0.295 ) }
    dend_33 { pt3dadd( 743.066, 519.382, 21.2572, 0.3132 ) }
    dend_33 { pt3dadd( 741.98, 519.635, 20.8312, 0.342 ) }
    dend_33 { pt3dadd( 740.894, 519.92, 20.4099, 0.4198 ) }
    dend_33 { pt3dadd( 739.779, 520.141, 20.0527, 0.4452 ) }
    dend_33 { pt3dadd( 738.733, 520.544, 19.7964, 0.3836 ) }
    dend_33 { pt3dadd( 737.885, 521.293, 19.6293, 0.3398 ) }
    dend_33 { pt3dadd( 737.141, 522.163, 19.5234, 0.374 ) }
    dend_33 { pt3dadd( 736.321, 522.953, 19.4498, 0.3348 ) }
    dend_33 { pt3dadd( 735.365, 523.565, 19.3748, 0.3016 ) }
    dend_33 { pt3dadd( 734.322, 524.013, 19.2657, 0.2776 ) }
    dend_33 { pt3dadd( 733.327, 524.54, 19.1449, 0.2802 ) }
    dend_33 { pt3dadd( 732.551, 525.345, 19.0835, 0.285 ) }
    dend_33 { pt3dadd( 732.099, 526.373, 19.0833, 0.2938 ) }
    dend_33 { pt3dadd( 731.606, 527.362, 19.0499, 0.3112 ) }
    dend_33 { pt3dadd( 731.013, 528.319, 18.9853, 0.337 ) }
    dend_33 { pt3dadd( 730.597, 529.377, 18.9586, 0.4172 ) }
    dend_33 { pt3dadd( 730.356, 530.49, 18.9841, 0.409 ) }
    dend_33 { pt3dadd( 730.165, 531.616, 19.0484, 0.4666 ) }
    dend_33 { pt3dadd( 729.864, 532.715, 19.1306, 0.4502 ) }
    dend_33 { pt3dadd( 729.374, 533.742, 19.2354, 0.5614 ) }
    dend_33 { pt3dadd( 728.774, 534.71, 19.3756, 0.5376 ) }
    dend_33 { pt3dadd( 728.282, 535.732, 19.5268, 0.4646 ) }
    dend_33 { pt3dadd( 728.008, 536.837, 19.667, 0.47 ) }
    dend_33 { pt3dadd( 727.745, 537.948, 19.7913, 0.4858 ) }
    dend_33 { pt3dadd( 727.258, 538.972, 19.9137, 0.4844 ) }
    dend_33 { pt3dadd( 726.531, 539.823, 20.1001, 0.4026 ) }
    dend_33 { pt3dadd( 725.73, 540.579, 20.3901, 0.4058 ) }
    dend_33 { pt3dadd( 725.071, 541.468, 20.7286, 0.3468 ) }
    dend_33 { pt3dadd( 724.687, 542.529, 21.0251, 0.3238 ) }
    dend_33 { pt3dadd( 724.28, 543.593, 21.2711, 0.3196 ) }
    dend_33 { pt3dadd( 723.611, 544.498, 21.5217, 0.354 ) }
    dend_33 { pt3dadd( 722.88, 545.367, 21.7865, 0.4416 ) }
    dend_33 { pt3dadd( 722.322, 546.354, 22.0472, 0.4878 ) }
    dend_33 { pt3dadd( 721.894, 547.413, 22.3153, 0.451 ) }
    dend_33 { pt3dadd( 721.413, 548.446, 22.6278, 0.5208 ) }
    dend_33 { pt3dadd( 720.911, 549.454, 23.0193, 0.4372 ) }
    dend_33 { pt3dadd( 720.361, 550.39, 23.522, 0.401 ) }
    dend_33 { pt3dadd( 719.461, 550.81, 24.1394, 0.4424 ) }
    dend_33 { pt3dadd( 718.354, 550.807, 24.769, 0.4526 ) }
    dend_33 { pt3dadd( 717.23, 550.948, 25.3528, 0.5658 ) }
    dend_33 { pt3dadd( 716.119, 551.188, 25.8932, 0.5456 ) }
    dend_33 { pt3dadd( 715.033, 551.478, 26.4141, 0.4808 ) }
    dend_33 { pt3dadd( 714.088, 551.956, 26.9803, 0.4932 ) }
    dend_33 { pt3dadd( 713.218, 552.568, 27.5727, 0.5598 ) }
    dend_33 { pt3dadd( 712.361, 553.278, 28.1207, 0.4714 ) }
    dend_33 { pt3dadd( 711.645, 554.158, 28.5664, 0.4204 ) }
    dend_33 { pt3dadd( 711.004, 555.103, 28.8621, 0.465 ) }
    dend_33 { pt3dadd( 710.077, 555.753, 29.0623, 0.5558 ) }
    dend_33 { pt3dadd( 709.019, 556.176, 29.1914, 0.4582 ) }
    dend_33 { pt3dadd( 707.961, 556.611, 29.26, 0.4242 ) }
    dend_33 { pt3dadd( 706.913, 557.071, 29.2922, 0.334 ) }
    dend_33 { pt3dadd( 705.924, 557.643, 29.3059, 0.3 ) }
    dend_33 { pt3dadd( 705.019, 558.341, 29.3076, 0.2748 ) }
    dend_33 { pt3dadd( 704.071, 558.982, 29.2944, 0.2748 ) }
    dend_33 { pt3dadd( 703.046, 559.489, 29.2676, 0.2752 ) }
    dend_33 { pt3dadd( 702.012, 559.978, 29.2286, 0.2758 ) }
    dend_33 { pt3dadd( 700.997, 560.505, 29.1754, 0.2766 ) }
    dend_33 { pt3dadd( 699.994, 561.054, 29.0993, 0.2782 ) }
    dend_33 { pt3dadd( 699.008, 561.63, 28.9876, 0.2814 ) }
    dend_33 { pt3dadd( 698.075, 562.282, 28.8341, 0.287 ) }
    dend_33 { pt3dadd( 697.223, 563.03, 28.642, 0.2988 ) }
    dend_33 { pt3dadd( 696.386, 563.8, 28.4379, 0.3142 ) }
    dend_33 { pt3dadd( 695.53, 564.551, 28.2484, 0.3734 ) }
    dend_33 { pt3dadd( 694.659, 565.284, 28.0804, 0.3338 ) }
    dend_33 { pt3dadd( 693.754, 565.979, 27.9573, 0.3 ) }
    dend_33 { pt3dadd( 692.799, 566.603, 27.9355, 0.2746 ) }
    dend_33 { pt3dadd( 691.762, 567.059, 28.0137, 0.2746 ) }
    dend_33 { pt3dadd( 690.637, 567.241, 28.1302, 0.2746 ) }
    dend_33 { pt3dadd( 689.499, 567.358, 28.2537, 0.2746 ) }
    dend_33 { pt3dadd( 688.396, 567.655, 28.3797, 0.2746 ) }
    dend_33 { pt3dadd( 687.529, 568.391, 28.5116, 0.2746 ) }
    dend_33 { pt3dadd( 687.237, 569.489, 28.6538, 0.2746 ) }
    dend_33 { pt3dadd( 687.044, 570.617, 28.8159, 0.2746 ) }
    dend_33 { pt3dadd( 686.851, 571.743, 29.0279, 0.2746 ) }
    dend_33 { pt3dadd( 686.778, 572.817, 29.3933, 0.2746 ) }
    dend_33 { pt3dadd( 686.469, 573.685, 29.9583, 0.2748 ) }
    dend_33 { pt3dadd( 685.732, 574.523, 30.4847, 0.275 ) }
    dend_33 { pt3dadd( 684.781, 575.156, 30.8742, 0.2752 ) }
    dend_33 { pt3dadd( 683.694, 575.47, 31.1713, 0.2758 ) }
    dend_33 { pt3dadd( 682.619, 575.858, 31.2875, 0.277 ) }
    dend_33 { pt3dadd( 681.675, 576.371, 31.1394, 0.2792 ) }
    dend_33 { pt3dadd( 680.56, 576.423, 30.8706, 0.2828 ) }
    dend_33 { pt3dadd( 679.453, 576.394, 30.5458, 0.291 ) }
    dend_33 { pt3dadd( 678.341, 576.138, 30.2856, 0.2994 ) }
    dend_33 { pt3dadd( 677.284, 575.728, 30.1739, 0.3474 ) }
    dend_33 { pt3dadd( 676.262, 575.234, 30.1882, 0.2796 ) }
    dend_33 { pt3dadd( 675.32, 574.593, 30.4954, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 0/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 752.457, 508.363, 24.4953, 0.484 ) }
    dend_32 { pt3dadd( 751.523, 508.802, 24.5986, 0.2288 ) }
    dend_32 { pt3dadd( 750.403, 508.871, 24.8292, 0.287 ) }
    dend_32 { pt3dadd( 749.306, 508.913, 24.9507, 0.2988 ) }
    dend_32 { pt3dadd( 748.262, 509.276, 25.1714, 0.3142 ) }
    dend_32 { pt3dadd( 747.206, 509.703, 25.3961, 0.3734 ) }
    dend_32 { pt3dadd( 746.185, 510.21, 25.6202, 0.3338 ) }
    dend_32 { pt3dadd( 745.159, 510.708, 25.8441, 0.3 ) }
    dend_32 { pt3dadd( 744.093, 511.116, 26.0588, 0.2746 ) }
    dend_32 { pt3dadd( 743.022, 511.52, 26.251, 0.2746 ) }
    dend_32 { pt3dadd( 741.932, 511.844, 26.4548, 0.2746 ) }
    dend_32 { pt3dadd( 740.821, 512.039, 26.7142, 0.2748 ) }
    dend_32 { pt3dadd( 739.728, 512.29, 27.0277, 0.275 ) }
    dend_32 { pt3dadd( 738.681, 512.692, 27.3764, 0.2752 ) }
    dend_32 { pt3dadd( 737.633, 513.122, 27.719, 0.2758 ) }
    dend_32 { pt3dadd( 736.556, 513.503, 28.0134, 0.277 ) }
    dend_32 { pt3dadd( 735.504, 513.936, 28.2629, 0.2792 ) }
    dend_32 { pt3dadd( 734.518, 514.487, 28.4936, 0.283 ) }
    dend_32 { pt3dadd( 733.555, 515.086, 28.6919, 0.2902 ) }
    dend_32 { pt3dadd( 732.571, 515.665, 28.8288, 0.3044 ) }
    dend_32 { pt3dadd( 731.521, 516.097, 28.8764, 0.3248 ) }
    dend_32 { pt3dadd( 730.422, 516.359, 28.8243, 0.393 ) }
    dend_32 { pt3dadd( 729.374, 516.77, 28.7118, 0.3712 ) }
    dend_32 { pt3dadd( 728.401, 517.364, 28.5964, 0.3648 ) }
    dend_32 { pt3dadd( 727.332, 517.733, 28.5113, 0.415 ) }
    dend_32 { pt3dadd( 726.2, 517.802, 28.4875, 0.4364 ) }
    dend_32 { pt3dadd( 725.08, 517.682, 28.551, 0.3664 ) }
    dend_32 { pt3dadd( 723.999, 517.336, 28.628, 0.3124 ) }
    dend_32 { pt3dadd( 722.894, 517.122, 28.6311, 0.2988 ) }
    dend_32 { pt3dadd( 721.785, 517.312, 28.5919, 0.3142 ) }
    dend_32 { pt3dadd( 720.687, 517.631, 28.5659, 0.3734 ) }
    dend_32 { pt3dadd( 719.56, 517.792, 28.5362, 0.3338 ) }
    dend_32 { pt3dadd( 718.425, 517.898, 28.5113, 0.3 ) }
    dend_32 { pt3dadd( 717.302, 518.102, 28.5452, 0.2746 ) }
    dend_32 { pt3dadd( 716.215, 518.432, 28.6905, 0.2746 ) }
    dend_32 { pt3dadd( 715.183, 518.846, 28.9674, 0.2746 ) }
    dend_32 { pt3dadd( 714.134, 519.214, 29.3395, 0.2746 ) }
    dend_32 { pt3dadd( 713.044, 519.49, 29.7548, 0.2746 ) }
    dend_32 { pt3dadd( 711.931, 519.716, 30.1636, 0.2746 ) }
    dend_32 { pt3dadd( 710.807, 519.918, 30.5326, 0.2746 ) }
    dend_32 { pt3dadd( 709.684, 520.113, 30.8652, 0.2746 ) }
    dend_32 { pt3dadd( 708.566, 520.304, 31.1917, 0.2746 ) }
    dend_32 { pt3dadd( 707.447, 520.448, 31.5302, 0.2746 ) }
    dend_32 { pt3dadd( 706.323, 520.47, 31.8853, 0.2746 ) }
    dend_32 { pt3dadd( 705.195, 520.392, 32.2423, 0.2746 ) }
    dend_32 { pt3dadd( 704.066, 520.235, 32.5623, 0.2748 ) }
    dend_32 { pt3dadd( 702.927, 520.157, 32.8373, 0.2748 ) }
    dend_32 { pt3dadd( 701.807, 520.295, 33.1055, 0.2752 ) }
    dend_32 { pt3dadd( 700.733, 520.637, 33.3659, 0.2758 ) }
    dend_32 { pt3dadd( 699.627, 520.915, 33.5762, 0.2766 ) }
    dend_32 { pt3dadd( 698.489, 521.011, 33.7302, 0.2782 ) }
    dend_32 { pt3dadd( 697.364, 521.211, 33.8394, 0.2814 ) }
    dend_32 { pt3dadd( 696.38, 521.776, 33.9007, 0.2872 ) }
    dend_32 { pt3dadd( 695.437, 522.422, 33.9268, 0.2978 ) }
    dend_32 { pt3dadd( 694.488, 523.062, 33.9357, 0.3184 ) }
    dend_32 { pt3dadd( 693.59, 523.77, 33.9433, 0.3518 ) }
    dend_32 { pt3dadd( 692.74, 524.534, 33.9576, 0.4392 ) }
    dend_32 { pt3dadd( 692.036, 525.428, 34.0029, 0.476 ) }
    dend_32 { pt3dadd( 691.418, 526.389, 34.0326, 0.465 ) }
    dend_32 { pt3dadd( 690.816, 527.352, 34.0077, 0.3718 ) }
    dend_32 { pt3dadd( 690.506, 528.408, 33.8862, 0.3242 ) }
    dend_32 { pt3dadd( 690.433, 529.54, 33.8212, 0.314 ) }
    dend_32 { pt3dadd( 690.255, 530.634, 33.8764, 0.3734 ) }
    dend_32 { pt3dadd( 690.072, 531.731, 34.0088, 0.3338 ) }
    dend_32 { pt3dadd( 690.45, 532.794, 34.1323, 0.2994 ) }
    dend_32 { pt3dadd( 690.823, 533.848, 34.1118, 0.2742 ) }
    dend_32 { pt3dadd( 690.922, 534.982, 34.0231, 0.2736 ) }
    dend_32 { pt3dadd( 690.968, 536.118, 33.8467, 0.2728 ) }
    dend_32 { pt3dadd( 690.785, 537.235, 33.593, 0.2712 ) }
    dend_32 { pt3dadd( 690.318, 538.253, 33.2844, 0.2684 ) }
    dend_32 { pt3dadd( 689.8, 539.264, 32.998, 0.2626 ) }
    dend_32 { pt3dadd( 689.403, 540.336, 32.7858, 0.2542 ) }
    dend_32 { pt3dadd( 688.844, 541.308, 32.564, 0.2288 ) }
    dend_32 { pt3dadd( 688.353, 542.313, 32.5346, 0.2288 ) }
    // Section: apic_34, id: apic_34, parent: apic_32 (entry count 74/100)
    apic_34 { pt3dclear() }
    apic_34 { pt3dadd( 764.972, 473.812, 12.1668, 0.2824 ) }
    apic_34 { pt3dadd( 763.809, 473.248, 11.9085, 0.3024 ) }
    apic_34 { pt3dadd( 762.72, 472.963, 11.6384, 0.321 ) }
    apic_34 { pt3dadd( 761.585, 472.851, 11.3603, 0.3858 ) }
    apic_34 { pt3dadd( 760.458, 472.707, 11.0521, 0.358 ) }
    apic_34 { pt3dadd( 759.352, 472.482, 10.7168, 0.3396 ) }
    apic_34 { pt3dadd( 758.252, 472.237, 10.3983, 0.3734 ) }
    apic_34 { pt3dadd( 757.156, 471.979, 10.093, 0.334 ) }
    apic_34 { pt3dadd( 756.073, 471.646, 9.8212, 0.3002 ) }
    apic_34 { pt3dadd( 754.983, 471.309, 9.6156, 0.275 ) }
    apic_34 { pt3dadd( 753.863, 471.109, 9.5058, 0.2752 ) }
    apic_34 { pt3dadd( 752.769, 470.968, 9.5478, 0.276 ) }
    apic_34 { pt3dadd( 751.685, 471.001, 9.5945, 0.277 ) }
    apic_34 { pt3dadd( 750.567, 471.037, 9.5659, 0.2792 ) }
    apic_34 { pt3dadd( 749.44, 470.898, 9.5256, 0.2832 ) }
    apic_34 { pt3dadd( 748.341, 470.594, 9.5066, 0.2906 ) }
    apic_34 { pt3dadd( 747.238, 470.294, 9.5166, 0.3044 ) }
    apic_34 { pt3dadd( 746.109, 470.119, 9.5649, 0.3304 ) }
    apic_34 { pt3dadd( 744.987, 469.913, 9.6768, 0.3748 ) }
    apic_34 { pt3dadd( 743.923, 469.533, 9.8773, 0.4766 ) }
    apic_34 { pt3dadd( 743.011, 468.943, 10.1951, 0.5714 ) }
    apic_34 { pt3dadd( 742.127, 468.285, 10.5795, 0.5174 ) }
    apic_34 { pt3dadd( 741.115, 467.789, 10.9328, 0.3848 ) }
    apic_34 { pt3dadd( 739.997, 467.635, 11.2157, 0.3 ) }
    apic_34 { pt3dadd( 738.864, 467.754, 11.4279, 0.2746 ) }
    apic_34 { pt3dadd( 737.754, 468.024, 11.5831, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_34 { pt3dadd( 736.649, 468.318, 11.7076, 0.2746 ) }
    apic_34 { pt3dadd( 735.534, 468.563, 11.8322, 0.2748 ) }
    apic_34 { pt3dadd( 734.414, 468.787, 11.9726, 0.2748 ) }
    apic_34 { pt3dadd( 733.301, 469.034, 12.134, 0.275 ) }
    apic_34 { pt3dadd( 732.25, 469.44, 12.3409, 0.2754 ) }
    apic_34 { pt3dadd( 731.325, 470.074, 12.5847, 0.2762 ) }
    apic_34 { pt3dadd( 730.335, 470.605, 12.7548, 0.2778 ) }
    apic_34 { pt3dadd( 729.236, 470.598, 12.8449, 0.2806 ) }
    apic_34 { pt3dadd( 728.164, 470.248, 12.9768, 0.2856 ) }
    apic_34 { pt3dadd( 727.085, 469.974, 13.1907, 0.2946 ) }
    apic_34 { pt3dadd( 725.962, 469.859, 13.4315, 0.313 ) }
    apic_34 { pt3dadd( 724.819, 469.842, 13.6523, 0.3416 ) }
    apic_34 { pt3dadd( 723.676, 469.864, 13.8601, 0.419 ) }
    apic_34 { pt3dadd( 722.536, 469.949, 14.057, 0.4438 ) }
    apic_34 { pt3dadd( 721.396, 470.05, 14.2529, 0.3798 ) }
    apic_34 { pt3dadd( 720.262, 470.048, 14.4944, 0.3388 ) }
    apic_34 { pt3dadd( 719.154, 469.901, 14.8138, 0.3426 ) }
    apic_34 { pt3dadd( 718.12, 469.513, 15.2038, 0.4208 ) }
    apic_34 { pt3dadd( 717.17, 468.945, 15.6368, 0.447 ) }
    apic_34 { pt3dadd( 716.13, 468.579, 16.0827, 0.387 ) }
    apic_34 { pt3dadd( 715.001, 468.568, 16.4595, 0.3454 ) }
    apic_34 { pt3dadd( 713.905, 468.802, 16.6578, 0.3848 ) }
    apic_34 { pt3dadd( 712.777, 468.818, 16.7338, 0.3548 ) }
    apic_34 { pt3dadd( 711.682, 468.501, 16.7943, 0.3398 ) }
    apic_34 { pt3dadd( 710.871, 467.75, 16.9382, 0.343 ) }
    apic_34 { pt3dadd( 710.25, 466.819, 17.1513, 0.4278 ) }
    apic_34 { pt3dadd( 709.428, 466.032, 17.3715, 0.4312 ) }
    apic_34 { pt3dadd( 708.547, 465.305, 17.5851, 0.496 ) }
    apic_34 { pt3dadd( 707.67, 464.573, 17.7701, 0.5646 ) }
    apic_34 { pt3dadd( 706.848, 463.779, 17.9026, 0.4818 ) }
    apic_34 { pt3dadd( 706.061, 462.949, 17.9773, 0.4328 ) }
    apic_34 { pt3dadd( 705.278, 462.115, 18.0076, 0.5198 ) }
    apic_34 { pt3dadd( 704.512, 461.267, 18.0014, 0.507 ) }
    apic_34 { pt3dadd( 703.804, 460.367, 17.9484, 0.412 ) }
    apic_34 { pt3dadd( 703.13, 459.444, 17.844, 0.3526 ) }
    apic_34 { pt3dadd( 702.461, 458.516, 17.6896, 0.3616 ) }
    apic_34 { pt3dadd( 701.742, 457.629, 17.4728, 0.4868 ) }
    apic_34 { pt3dadd( 700.885, 456.896, 17.155, 0.421 ) }
    apic_34 { pt3dadd( 699.975, 456.255, 16.7369, 0.3718 ) }
    apic_34 { pt3dadd( 699.058, 455.623, 16.2439, 0.3858 ) }
    apic_34 { pt3dadd( 698.134, 454.996, 15.707, 0.358 ) }
    apic_34 { pt3dadd( 697.204, 454.373, 15.1518, 0.3396 ) }
    apic_34 { pt3dadd( 696.272, 453.75, 14.598, 0.3734 ) }
    apic_34 { pt3dadd( 695.326, 453.151, 14.0601, 0.3338 ) }
    apic_34 { pt3dadd( 694.288, 452.731, 13.5439, 0.3 ) }
    apic_34 { pt3dadd( 693.215, 452.413, 13.0539, 0.2746 ) }
    apic_34 { pt3dadd( 692.139, 452.105, 12.5942, 0.2746 ) }
    apic_34 { pt3dadd( 691.066, 451.77, 12.178, 0.2746 ) }
    apic_34 { pt3dadd( 690.04, 451.271, 11.853, 0.2746 ) }
    apic_34 { pt3dadd( 689.049, 450.699, 11.6234, 0.2746 ) }
    apic_34 { pt3dadd( 688.063, 450.118, 11.4614, 0.2746 ) }
    apic_34 { pt3dadd( 687.041, 449.62, 11.3735, 0.2746 ) }
    apic_34 { pt3dadd( 685.993, 449.215, 11.3603, 0.2746 ) }
    apic_34 { pt3dadd( 684.896, 448.919, 11.257, 0.2746 ) }
    apic_34 { pt3dadd( 683.82, 448.68, 11.0032, 0.2746 ) }
    apic_34 { pt3dadd( 682.747, 448.445, 10.6299, 0.2746 ) }
    apic_34 { pt3dadd( 681.675, 448.199, 10.1784, 0.2746 ) }
    apic_34 { pt3dadd( 680.63, 447.746, 9.755, 0.2746 ) }
    apic_34 { pt3dadd( 679.61, 447.228, 9.3955, 0.2746 ) }
    apic_34 { pt3dadd( 678.592, 446.707, 9.1066, 0.2746 ) }
    apic_34 { pt3dadd( 677.575, 446.184, 8.8701, 0.2746 ) }
    apic_34 { pt3dadd( 676.674, 445.493, 8.6224, 0.2748 ) }
    apic_34 { pt3dadd( 675.827, 444.741, 8.3373, 0.2748 ) }
    apic_34 { pt3dadd( 674.986, 443.984, 8.0072, 0.2752 ) }
    apic_34 { pt3dadd( 674.24, 443.133, 7.6422, 0.2758 ) }
    apic_34 { pt3dadd( 673.79, 442.087, 7.2655, 0.2764 ) }
    apic_34 { pt3dadd( 673.417, 441.011, 6.8838, 0.278 ) }
    apic_34 { pt3dadd( 673.049, 439.932, 6.4986, 0.2812 ) }
    apic_34 { pt3dadd( 672.725, 438.846, 6.0868, 0.2864 ) }
    apic_34 { pt3dadd( 672.661, 437.8, 5.5411, 0.2978 ) }
    apic_34 { pt3dadd( 672.87, 436.7, 4.9685, 0.3124 ) }
    apic_34 { pt3dadd( 673.186, 435.603, 4.4007, 0.37 ) }
    apic_34 { pt3dadd( 673.265, 434.463, 3.858, 0.3276 ) }
    apic_34 { pt3dadd( 673.27, 433.32, 3.3475, 0.2882 ) }
    apic_34 { pt3dadd( 673.549, 432.298, 2.7385, 0.2542 ) }
    apic_34 { pt3dadd( 674.143, 431.655, 1.9692, 0.2288 ) }
    apic_34 { pt3dadd( 675.102, 431.655, 0.0, 0.2288 ) }
    // Section: apic_33, id: apic_33, parent: apic_32 (entry count 77/100)
    apic_33 { pt3dclear() }
    apic_33 { pt3dadd( 764.972, 473.812, 12.1668, 0.2824 ) }
    apic_33 { pt3dadd( 764.508, 473.317, 12.7596, 0.4576 ) }
    apic_33 { pt3dadd( 763.622, 472.659, 12.5011, 0.4592 ) }
    apic_33 { pt3dadd( 762.915, 471.835, 12.3832, 0.3612 ) }
    apic_33 { pt3dadd( 762.209, 470.964, 12.2827, 0.3034 ) }
    apic_33 { pt3dadd( 761.607, 470.018, 12.2506, 0.2812 ) }
    apic_33 { pt3dadd( 761.401, 468.921, 12.2984, 0.2864 ) }
    apic_33 { pt3dadd( 760.863, 468.175, 12.6178, 0.2978 ) }
    apic_33 { pt3dadd( 760.336, 467.352, 13.1929, 0.3124 ) }
    apic_33 { pt3dadd( 759.641, 466.542, 13.8786, 0.37 ) }
    apic_33 { pt3dadd( 758.807, 465.927, 14.6435, 0.3276 ) }
    apic_33 { pt3dadd( 758.011, 465.305, 15.4438, 0.2882 ) }
    apic_33 { pt3dadd( 757.155, 464.585, 16.086, 0.2542 ) }
    apic_33 { pt3dadd( 756.799, 463.754, 16.2738, 0.2288 ) }
    apic_33 { pt3dadd( 756.318, 462.912, 16.8283, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_5 (entry count 92/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 1037.84, 239.198, 75.579, 0.2882 ) }
    apic_19 { pt3dadd( 1036.71, 238.69, 76.109, 0.3594 ) }
    apic_19 { pt3dadd( 1036.42, 237.731, 77.1299, 0.3 ) }
    apic_19 { pt3dadd( 1036.82, 236.694, 77.56, 0.2746 ) }
    apic_19 { pt3dadd( 1037.32, 235.665, 77.9682, 0.2746 ) }
    apic_19 { pt3dadd( 1037.67, 234.605, 78.4204, 0.2746 ) }
    apic_19 { pt3dadd( 1037.99, 233.565, 78.9284, 0.2746 ) }
    apic_19 { pt3dadd( 1038.57, 232.622, 79.4312, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_19 { pt3dadd( 1039.34, 231.773, 79.8302, 0.2746 ) }
    apic_19 { pt3dadd( 1040.13, 230.952, 80.1419, 0.2748 ) }
    apic_19 { pt3dadd( 1040.93, 230.129, 80.3939, 0.275 ) }
    apic_19 { pt3dadd( 1041.66, 229.247, 80.6134, 0.2752 ) }
    apic_19 { pt3dadd( 1042.11, 228.205, 80.8606, 0.2758 ) }
    apic_19 { pt3dadd( 1042.49, 227.138, 81.1594, 0.2768 ) }
    apic_19 { pt3dadd( 1042.87, 226.07, 81.5153, 0.279 ) }
    apic_19 { pt3dadd( 1043.28, 225.017, 81.9249, 0.2824 ) }
    apic_19 { pt3dadd( 1043.79, 224.024, 82.3964, 0.289 ) }
    apic_19 { pt3dadd( 1044.32, 223.043, 82.9116, 0.3024 ) }
    apic_19 { pt3dadd( 1044.85, 222.063, 83.4506, 0.321 ) }
    apic_19 { pt3dadd( 1045.48, 221.134, 83.9877, 0.386 ) }
    apic_19 { pt3dadd( 1046.2, 220.257, 84.5046, 0.358 ) }
    apic_19 { pt3dadd( 1046.92, 219.389, 85.0004, 0.3396 ) }
    apic_19 { pt3dadd( 1047.65, 218.522, 85.4762, 0.3736 ) }
    apic_19 { pt3dadd( 1048.25, 217.581, 85.9611, 0.3342 ) }
    apic_19 { pt3dadd( 1048.82, 216.621, 86.457, 0.3006 ) }
    apic_19 { pt3dadd( 1049.38, 215.66, 86.9579, 0.2758 ) }
    apic_19 { pt3dadd( 1050.01, 214.729, 87.4395, 0.2768 ) }
    apic_19 { pt3dadd( 1050.77, 213.876, 87.8623, 0.279 ) }
    apic_19 { pt3dadd( 1051.54, 213.04, 88.2308, 0.2822 ) }
    apic_19 { pt3dadd( 1052.32, 212.203, 88.5598, 0.2888 ) }
    apic_19 { pt3dadd( 1053.13, 211.403, 88.8619, 0.3008 ) }
    apic_19 { pt3dadd( 1053.95, 210.611, 89.1559, 0.3252 ) }
    apic_19 { pt3dadd( 1054.78, 209.821, 89.46, 0.358 ) }
    apic_19 { pt3dadd( 1055.48, 208.945, 89.8436, 0.4802 ) }
    apic_19 { pt3dadd( 1056.12, 208.046, 90.3112, 0.408 ) }
    apic_19 { pt3dadd( 1056.76, 207.144, 90.8393, 0.3522 ) }
    apic_19 { pt3dadd( 1057.38, 206.221, 91.3951, 0.3264 ) }
    apic_19 { pt3dadd( 1057.94, 205.254, 91.94, 0.3604 ) }
    apic_19 { pt3dadd( 1058.5, 204.281, 92.454, 0.4848 ) }
    apic_19 { pt3dadd( 1059.05, 203.307, 92.923, 0.4174 ) }
    apic_19 { pt3dadd( 1059.87, 202.522, 93.3136, 0.365 ) }
    apic_19 { pt3dadd( 1060.83, 201.899, 93.6172, 0.3734 ) }
    apic_19 { pt3dadd( 1061.64, 201.084, 93.8356, 0.3338 ) }
    apic_19 { pt3dadd( 1062.27, 200.131, 93.996, 0.3 ) }
    apic_19 { pt3dadd( 1062.45, 199.001, 94.1273, 0.2746 ) }
    apic_19 { pt3dadd( 1062.57, 197.865, 94.257, 0.2746 ) }
    apic_19 { pt3dadd( 1062.62, 196.722, 94.4101, 0.2746 ) }
    apic_19 { pt3dadd( 1062.67, 195.578, 94.6058, 0.2746 ) }
    apic_19 { pt3dadd( 1063.27, 194.625, 94.9278, 0.2746 ) }
    apic_19 { pt3dadd( 1063.99, 193.775, 95.3674, 0.2746 ) }
    apic_19 { pt3dadd( 1064.65, 192.888, 95.909, 0.2746 ) }
    apic_19 { pt3dadd( 1065.13, 191.935, 96.549, 0.2746 ) }
    apic_19 { pt3dadd( 1065.77, 191.242, 97.3123, 0.2746 ) }
    apic_19 { pt3dadd( 1066.44, 190.625, 98.138, 0.2746 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 46/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 1037.84, 239.198, 75.579, 0.2882 ) }
    apic_6 { pt3dadd( 1038.14, 238.948, 75.586, 0.2994 ) }
    apic_6 { pt3dadd( 1039.01, 238.206, 75.5944, 0.3232 ) }
    apic_6 { pt3dadd( 1039.88, 237.462, 75.6056, 0.354 ) }
    apic_6 { pt3dadd( 1040.75, 236.72, 75.6216, 0.473 ) }
    apic_6 { pt3dadd( 1041.59, 235.948, 75.644, 0.3946 ) }
    apic_6 { pt3dadd( 1042.39, 235.126, 75.6759, 0.328 ) }
    apic_6 { pt3dadd( 1043.18, 234.305, 75.7193, 0.2792 ) }
    apic_6 { pt3dadd( 1043.98, 233.484, 75.7772, 0.2834 ) }
    apic_6 { pt3dadd( 1044.8, 232.687, 75.864, 0.2906 ) }
    apic_6 { pt3dadd( 1045.66, 231.936, 75.9954, 0.3056 ) }
    apic_6 { pt3dadd( 1046.52, 231.185, 76.1634, 0.3264 ) }
    apic_6 { pt3dadd( 1047.38, 230.432, 76.3591, 0.3978 ) }
    apic_6 { pt3dadd( 1048.18, 229.626, 76.5912, 0.3738 ) }
    apic_6 { pt3dadd( 1048.93, 228.784, 76.855, 0.3994 ) }
    apic_6 { pt3dadd( 1049.69, 227.943, 77.1308, 0.3348 ) }
    apic_6 { pt3dadd( 1050.44, 227.102, 77.4029, 0.3018 ) }
    apic_6 { pt3dadd( 1051.36, 226.411, 77.602, 0.278 ) }
    apic_6 { pt3dadd( 1052.27, 225.725, 77.7367, 0.2808 ) }
    apic_6 { pt3dadd( 1053.18, 225.037, 77.8187, 0.2862 ) }
    apic_6 { pt3dadd( 1054.1, 224.351, 77.8618, 0.296 ) }
    apic_6 { pt3dadd( 1054.92, 223.558, 77.8817, 0.315 ) }
    apic_6 { pt3dadd( 1055.75, 222.762, 77.8926, 0.3454 ) }
    apic_6 { pt3dadd( 1056.57, 221.966, 77.9075, 0.4264 ) }
    apic_6 { pt3dadd( 1057.39, 221.169, 77.9282, 0.4576 ) }
    apic_6 { pt3dadd( 1058.3, 220.483, 77.9576, 0.4064 ) }
    apic_6 { pt3dadd( 1059.22, 219.797, 77.9985, 0.3818 ) }
    apic_6 { pt3dadd( 1060.13, 219.11, 78.0545, 0.4538 ) }
    apic_6 { pt3dadd( 1061.05, 218.424, 78.129, 0.4738 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 75/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 789.303, 465.268, 23.8279, 0.339 ) }
    apic_4 { pt3dadd( 788.192, 465.821, 23.589, 0.2918 ) }
    apic_4 { pt3dadd( 787.172, 466.328, 23.3951, 0.3064 ) }
    apic_4 { pt3dadd( 786.124, 466.777, 23.2378, 0.3354 ) }
    apic_4 { pt3dadd( 785.017, 467.055, 23.127, 0.3778 ) }
    apic_4 { pt3dadd( 783.881, 467.173, 23.0536, 0.5118 ) }
    apic_4 { pt3dadd( 782.74, 467.236, 22.9993, 0.4922 ) }
    apic_4 { pt3dadd( 781.597, 467.293, 22.979, 0.385 ) }
    apic_4 { pt3dadd( 780.454, 467.347, 22.985, 0.3004 ) }
    apic_4 { pt3dadd( 779.31, 467.382, 23.0115, 0.2752 ) }
    apic_4 { pt3dadd( 778.167, 467.396, 23.0528, 0.2758 ) }
    apic_4 { pt3dadd( 777.023, 467.397, 23.1122, 0.2768 ) }
    apic_4 { pt3dadd( 775.884, 467.397, 23.2031, 0.279 ) }
    apic_4 { pt3dadd( 774.752, 467.429, 23.3357, 0.2822 ) }
    apic_4 { pt3dadd( 773.639, 467.562, 23.5076, 0.2886 ) }
    apic_4 { pt3dadd( 772.559, 467.917, 23.6285, 0.3018 ) }
    apic_4 { pt3dadd( 771.605, 468.476, 23.5988, 0.3198 ) }
    apic_4 { pt3dadd( 770.624, 469.024, 23.4758, 0.3842 ) }
    apic_4 { pt3dadd( 769.569, 469.456, 23.3429, 0.3534 ) }
    apic_4 { pt3dadd( 768.483, 469.817, 23.2381, 0.3372 ) }
    apic_4 { pt3dadd( 767.392, 470.159, 23.1787, 0.3394 ) }
    apic_4 { pt3dadd( 766.297, 470.489, 23.1803, 0.4152 ) }
    apic_4 { pt3dadd( 765.182, 470.735, 23.2578, 0.4368 ) }
    apic_4 { pt3dadd( 764.054, 470.875, 23.405, 0.3666 ) }
    apic_4 { pt3dadd( 762.923, 470.976, 23.5983, 0.3136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_4 { pt3dadd( 761.793, 471.072, 23.813, 0.2994 ) }
    apic_4 { pt3dadd( 760.68, 471.296, 24.022, 0.323 ) }
    apic_4 { pt3dadd( 759.624, 471.716, 24.1979, 0.3538 ) }
    apic_4 { pt3dadd( 758.6, 472.215, 24.3242, 0.4728 ) }
    apic_4 { pt3dadd( 757.581, 472.734, 24.3651, 0.3936 ) }
    apic_4 { pt3dadd( 756.58, 473.265, 24.279, 0.3262 ) }
    apic_4 { pt3dadd( 755.595, 473.797, 24.0691, 0.276 ) }
    apic_4 { pt3dadd( 754.606, 474.316, 23.7748, 0.2774 ) }
    apic_4 { pt3dadd( 753.54, 474.694, 23.4676, 0.2796 ) }
    apic_4 { pt3dadd( 752.414, 474.879, 23.2123, 0.2838 ) }
    apic_4 { pt3dadd( 751.277, 475.003, 23.0271, 0.2918 ) }
    apic_4 { pt3dadd( 750.139, 475.123, 22.9061, 0.3062 ) }
    apic_4 { pt3dadd( 749.002, 475.243, 22.8309, 0.3354 ) }
    apic_4 { pt3dadd( 747.862, 475.349, 22.7779, 0.3778 ) }
    apic_4 { pt3dadd( 746.722, 475.436, 22.7242, 0.5118 ) }
    apic_4 { pt3dadd( 745.581, 475.52, 22.6557, 0.492 ) }
    apic_4 { pt3dadd( 744.445, 475.657, 22.5676, 0.3848 ) }
    apic_4 { pt3dadd( 743.386, 476.064, 22.4286, 0.3 ) }
    apic_4 { pt3dadd( 742.391, 476.573, 22.2088, 0.2746 ) }
    apic_4 { pt3dadd( 741.341, 476.948, 21.9382, 0.2746 ) }
    apic_4 { pt3dadd( 740.295, 477.381, 21.6767, 0.2746 ) }
    apic_4 { pt3dadd( 739.27, 477.88, 21.4779, 0.2746 ) }
    apic_4 { pt3dadd( 738.255, 478.408, 21.3822, 0.2746 ) }
    apic_4 { pt3dadd( 737.226, 478.892, 21.4277, 0.2746 ) }
    apic_4 { pt3dadd( 736.093, 478.939, 21.5793, 0.2746 ) }
    apic_4 { pt3dadd( 735.065, 478.455, 21.7784, 0.2746 ) }
    apic_4 { pt3dadd( 734.025, 478.026, 22.0872, 0.2746 ) }
    apic_4 { pt3dadd( 732.969, 478.175, 22.5358, 0.2746 ) }
    apic_4 { pt3dadd( 731.883, 478.418, 23.0257, 0.2746 ) }
    apic_4 { pt3dadd( 730.786, 478.651, 23.5129, 0.2746 ) }
    apic_4 { pt3dadd( 729.687, 478.882, 23.9799, 0.2746 ) }
    apic_4 { pt3dadd( 728.588, 479.113, 24.4108, 0.2746 ) }
    apic_4 { pt3dadd( 727.47, 479.333, 24.739, 0.2748 ) }
    apic_4 { pt3dadd( 726.345, 479.547, 24.9516, 0.275 ) }
    apic_4 { pt3dadd( 725.221, 479.758, 25.0797, 0.2752 ) }
    apic_4 { pt3dadd( 724.097, 479.971, 25.1475, 0.2758 ) }
    apic_4 { pt3dadd( 722.972, 480.179, 25.1749, 0.277 ) }
    apic_4 { pt3dadd( 721.845, 480.375, 25.1793, 0.279 ) }
    apic_4 { pt3dadd( 720.717, 480.564, 25.1763, 0.283 ) }
    apic_4 { pt3dadd( 719.589, 480.751, 25.1715, 0.2898 ) }
    apic_4 { pt3dadd( 718.459, 480.94, 25.1652, 0.3032 ) }
    apic_4 { pt3dadd( 717.319, 481.019, 25.156, 0.3284 ) }
    apic_4 { pt3dadd( 716.197, 480.799, 25.1408, 0.3712 ) }
    apic_4 { pt3dadd( 715.104, 480.462, 25.1209, 0.4686 ) }
    apic_4 { pt3dadd( 714.015, 480.114, 25.1, 0.5626 ) }
    apic_4 { pt3dadd( 712.925, 479.766, 25.0813, 0.4706 ) }
    apic_4 { pt3dadd( 711.821, 479.466, 25.0797, 0.4484 ) }
    apic_4 { pt3dadd( 710.711, 479.192, 25.1002, 0.3734 ) }
    apic_4 { pt3dadd( 709.599, 478.922, 25.1399, 0.3988 ) }
    apic_4 { pt3dadd( 708.523, 478.538, 25.1917, 0.3338 ) }
    apic_4 { pt3dadd( 707.506, 478.013, 25.2485, 0.3 ) }
    apic_4 { pt3dadd( 706.511, 477.447, 25.3096, 0.2746 ) }
    apic_4 { pt3dadd( 705.521, 476.876, 25.3767, 0.2746 ) }
    apic_4 { pt3dadd( 704.497, 476.366, 25.4629, 0.2746 ) }
    apic_4 { pt3dadd( 703.427, 475.965, 25.5847, 0.2746 ) }
    apic_4 { pt3dadd( 702.345, 475.602, 25.7438, 0.2748 ) }
    apic_4 { pt3dadd( 701.263, 475.239, 25.9331, 0.2748 ) }
    apic_4 { pt3dadd( 700.169, 474.921, 26.1572, 0.2752 ) }
    apic_4 { pt3dadd( 699.066, 474.789, 26.457, 0.2758 ) }
    apic_4 { pt3dadd( 697.952, 474.729, 26.7924, 0.2766 ) }
    apic_4 { pt3dadd( 696.812, 474.685, 27.0735, 0.2782 ) }
    apic_4 { pt3dadd( 695.669, 474.63, 27.2807, 0.2814 ) }
    apic_4 { pt3dadd( 694.561, 474.342, 27.4259, 0.287 ) }
    apic_4 { pt3dadd( 693.471, 473.996, 27.522, 0.2988 ) }
    apic_4 { pt3dadd( 692.344, 473.805, 27.5726, 0.3142 ) }
    apic_4 { pt3dadd( 691.209, 473.67, 27.6019, 0.3734 ) }
    apic_4 { pt3dadd( 690.085, 473.466, 27.6717, 0.3338 ) }
    apic_4 { pt3dadd( 689.002, 473.156, 27.8349, 0.3 ) }
    apic_4 { pt3dadd( 687.923, 472.803, 28.051, 0.2746 ) }
    apic_4 { pt3dadd( 686.819, 472.506, 28.2629, 0.2744 ) }
    apic_4 { pt3dadd( 685.815, 471.957, 28.4665, 0.2744 ) }
    apic_4 { pt3dadd( 685.311, 470.978, 28.7524, 0.2742 ) }
    apic_4 { pt3dadd( 684.744, 469.993, 29.0231, 0.2742 ) }
    apic_4 { pt3dadd( 684.266, 468.953, 29.2337, 0.2736 ) }
    apic_4 { pt3dadd( 683.384, 468.225, 29.4006, 0.2728 ) }
    apic_4 { pt3dadd( 682.339, 467.761, 29.5406, 0.2712 ) }
    apic_4 { pt3dadd( 681.235, 467.459, 29.659, 0.2684 ) }
    apic_4 { pt3dadd( 680.107, 467.458, 29.8206, 0.2626 ) }
    apic_4 { pt3dadd( 678.979, 467.458, 30.0224, 0.2542 ) }
    apic_4 { pt3dadd( 677.837, 467.458, 30.2103, 0.2288 ) }
    apic_4 { pt3dadd( 676.693, 467.458, 30.4954, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 81/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 789.303, 465.268, 23.8279, 0.339 ) }
    apic_3 { pt3dadd( 788.811, 465.174, 23.3495, 0.2288 ) }
    apic_3 { pt3dadd( 788.013, 464.582, 21.6343, 0.3002 ) }
    apic_3 { pt3dadd( 787.706, 463.577, 20.896, 0.3242 ) }
    apic_3 { pt3dadd( 787.288, 462.557, 20.0742, 0.3562 ) }
    apic_3 { pt3dadd( 786.709, 461.627, 19.1876, 0.4768 ) }
    apic_3 { pt3dadd( 786.184, 460.76, 18.2053, 0.4016 ) }
    apic_3 { pt3dadd( 786.011, 459.905, 17.1094, 0.341 ) }
    apic_3 { pt3dadd( 786.195, 458.977, 16.002, 0.3034 ) }
    apic_3 { pt3dadd( 786.222, 457.93, 14.9836, 0.3288 ) }
    apic_3 { pt3dadd( 785.848, 456.884, 14.1386, 0.372 ) }
    apic_3 { pt3dadd( 785.097, 456.034, 13.4933, 0.4704 ) }
    apic_3 { pt3dadd( 784.169, 455.376, 12.9809, 0.5644 ) }
    apic_3 { pt3dadd( 783.211, 454.784, 12.5288, 0.4816 ) }
    apic_3 { pt3dadd( 782.249, 454.223, 12.0778, 0.4312 ) }
    apic_3 { pt3dadd( 781.281, 453.69, 11.5949, 0.5238 ) }
    apic_3 { pt3dadd( 780.271, 453.203, 11.1066, 0.4784 ) }
    apic_3 { pt3dadd( 779.192, 452.837, 10.6592, 0.5344 ) }
    apic_3 { pt3dadd( 778.07, 452.626, 10.2645, 0.4138 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_3 { pt3dadd( 776.936, 452.537, 9.8854, 0.3648 ) }
    apic_3 { pt3dadd( 775.86, 452.363, 9.4493, 0.343 ) }
    apic_3 { pt3dadd( 774.931, 451.883, 8.9112, 0.422 ) }
    apic_3 { pt3dadd( 774.036, 451.284, 8.3301, 0.4492 ) }
    apic_3 { pt3dadd( 773.026, 450.774, 7.8043, 0.3908 ) }
    apic_3 { pt3dadd( 771.969, 450.338, 7.3761, 0.353 ) }
    apic_3 { pt3dadd( 770.885, 449.98, 7.0307, 0.3998 ) }
    apic_3 { pt3dadd( 769.775, 449.748, 6.7249, 0.377 ) }
    apic_3 { pt3dadd( 768.662, 449.693, 6.4099, 0.4056 ) }
    apic_3 { pt3dadd( 767.619, 450.026, 6.0801, 0.3464 ) }
    apic_3 { pt3dadd( 766.698, 450.701, 5.7843, 0.3242 ) }
    apic_3 { pt3dadd( 765.706, 451.204, 5.5196, 0.3142 ) }
    apic_3 { pt3dadd( 764.584, 451.382, 5.2282, 0.3736 ) }
    apic_3 { pt3dadd( 763.521, 451.617, 4.8545, 0.334 ) }
    apic_3 { pt3dadd( 762.772, 452.1, 4.3218, 0.3004 ) }
    apic_3 { pt3dadd( 762.703, 452.886, 3.655, 0.2752 ) }
    apic_3 { pt3dadd( 762.937, 453.929, 3.1293, 0.2758 ) }
    apic_3 { pt3dadd( 763.009, 454.981, 2.9306, 0.2768 ) }
    apic_3 { pt3dadd( 762.657, 455.849, 3.0717, 0.279 ) }
    apic_3 { pt3dadd( 761.691, 456.201, 3.3565, 0.2824 ) }
    apic_3 { pt3dadd( 760.632, 456.154, 3.4898, 0.289 ) }
    apic_3 { pt3dadd( 759.554, 456.142, 3.4712, 0.3024 ) }
    apic_3 { pt3dadd( 758.422, 456.246, 3.421, 0.321 ) }
    apic_3 { pt3dadd( 757.311, 456.494, 3.4184, 0.3858 ) }
    apic_3 { pt3dadd( 756.26, 456.938, 3.4551, 0.358 ) }
    apic_3 { pt3dadd( 755.281, 457.517, 3.5244, 0.3396 ) }
    apic_3 { pt3dadd( 754.223, 457.904, 3.744, 0.3734 ) }
    apic_3 { pt3dadd( 753.393, 458.292, 4.2237, 0.3338 ) }
    apic_3 { pt3dadd( 753.037, 458.964, 4.8994, 0.2998 ) }
    apic_3 { pt3dadd( 752.413, 459.771, 5.5396, 0.2744 ) }
    apic_3 { pt3dadd( 751.523, 460.479, 5.8974, 0.2742 ) }
    apic_3 { pt3dadd( 750.837, 461.165, 5.8222, 0.2742 ) }
    apic_3 { pt3dadd( 750.019, 461.443, 5.3617, 0.2736 ) }
    apic_3 { pt3dadd( 749.211, 460.976, 4.676, 0.2728 ) }
    apic_3 { pt3dadd( 748.688, 460.023, 4.0147, 0.2712 ) }
    apic_3 { pt3dadd( 748.412, 458.914, 3.574, 0.2684 ) }
    apic_3 { pt3dadd( 748.276, 457.917, 3.5651, 0.2626 ) }
    apic_3 { pt3dadd( 747.731, 457.089, 3.8998, 0.2542 ) }
    apic_3 { pt3dadd( 746.93, 456.284, 4.3049, 0.2288 ) }
    apic_3 { pt3dadd( 746.574, 455.198, 5.04, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 775.061, 537.101, 13.8894, 0.7032 ) }
    dend_27 { pt3dadd( 773.847, 537.208, 14.511, 0.4524 ) }
    dend_27 { pt3dadd( 772.734, 537.309, 14.5836, 0.341 ) }
    dend_27 { pt3dadd( 771.638, 537.201, 14.634, 0.3034 ) }
    dend_27 { pt3dadd( 770.596, 536.8, 14.5493, 0.3288 ) }
    dend_27 { pt3dadd( 769.536, 536.488, 14.3672, 0.3722 ) }
    dend_27 { pt3dadd( 768.408, 536.525, 14.168, 0.4702 ) }
    dend_27 { pt3dadd( 767.297, 536.794, 13.9758, 0.5656 ) }
    dend_27 { pt3dadd( 766.177, 537.013, 13.7872, 0.4762 ) }
    dend_27 { pt3dadd( 765.037, 537.05, 13.6079, 0.459 ) }
    dend_27 { pt3dadd( 763.927, 536.883, 13.4052, 0.3928 ) }
    dend_27 { pt3dadd( 762.92, 536.437, 13.1304, 0.4354 ) }
    dend_27 { pt3dadd( 761.971, 535.832, 12.8309, 0.3976 ) }
    dend_27 { pt3dadd( 760.926, 535.401, 12.5703, 0.4384 ) }
    dend_27 { pt3dadd( 759.799, 535.216, 12.3523, 0.4328 ) }
    dend_27 { pt3dadd( 758.674, 535.053, 12.1466, 0.3596 ) }
    dend_27 { pt3dadd( 757.576, 534.78, 11.9348, 0.3006 ) }
    dend_27 { pt3dadd( 756.481, 534.47, 11.7571, 0.2758 ) }
    dend_27 { pt3dadd( 755.409, 534.086, 11.635, 0.2766 ) }
    dend_27 { pt3dadd( 754.449, 533.486, 11.5332, 0.2782 ) }
    dend_27 { pt3dadd( 753.497, 532.889, 11.4084, 0.2814 ) }
    dend_27 { pt3dadd( 752.474, 532.395, 11.2617, 0.287 ) }
    dend_27 { pt3dadd( 751.431, 531.987, 11.0801, 0.2988 ) }
    dend_27 { pt3dadd( 750.342, 531.713, 10.8279, 0.3142 ) }
    dend_27 { pt3dadd( 749.299, 531.29, 10.5507, 0.3734 ) }
    dend_27 { pt3dadd( 748.304, 530.728, 10.3002, 0.334 ) }
    dend_27 { pt3dadd( 747.225, 530.509, 10.0903, 0.3 ) }
    dend_27 { pt3dadd( 746.092, 530.449, 9.8849, 0.2746 ) }
    dend_27 { pt3dadd( 745.014, 530.119, 9.6788, 0.2748 ) }
    dend_27 { pt3dadd( 743.936, 529.745, 9.509, 0.2748 ) }
    dend_27 { pt3dadd( 742.878, 529.353, 9.3295, 0.2752 ) }
    dend_27 { pt3dadd( 741.846, 528.925, 9.1138, 0.2758 ) }
    dend_27 { pt3dadd( 740.749, 528.664, 8.9554, 0.2764 ) }
    dend_27 { pt3dadd( 739.678, 528.362, 8.9398, 0.278 ) }
    dend_27 { pt3dadd( 738.666, 527.88, 9.0102, 0.281 ) }
    dend_27 { pt3dadd( 737.563, 527.67, 9.0909, 0.2866 ) }
    dend_27 { pt3dadd( 736.431, 527.533, 9.1006, 0.2968 ) }
    dend_27 { pt3dadd( 735.828, 526.654, 9.0463, 0.3172 ) }
    dend_27 { pt3dadd( 735.774, 525.52, 8.8872, 0.3478 ) }
    dend_27 { pt3dadd( 735.975, 524.435, 8.5597, 0.4376 ) }
    dend_27 { pt3dadd( 735.987, 523.311, 8.1432, 0.4442 ) }
    dend_27 { pt3dadd( 735.39, 522.416, 7.6212, 0.55 ) }
    dend_27 { pt3dadd( 734.361, 521.968, 7.0874, 0.5152 ) }
    dend_27 { pt3dadd( 733.283, 521.587, 6.5999, 0.4296 ) }
    dend_27 { pt3dadd( 732.234, 521.143, 6.1418, 0.3728 ) }
    dend_27 { pt3dadd( 731.628, 520.234, 5.6426, 0.4604 ) }
    dend_27 { pt3dadd( 731.268, 519.161, 5.1769, 0.3728 ) }
    dend_27 { pt3dadd( 731.31, 518.207, 4.5876, 0.2796 ) }
    dend_27 { pt3dadd( 731.94, 517.261, 3.514, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 775.061, 537.101, 13.8894, 0.7032 ) }
    dend_24 { pt3dadd( 774.811, 538.23, 13.4996, 0.471 ) }
    dend_24 { pt3dadd( 774.663, 539.24, 13.0147, 0.37 ) }
    dend_24 { pt3dadd( 774.189, 540.082, 12.4311, 0.3828 ) }
    dend_24 { pt3dadd( 773.655, 541.059, 11.9133, 0.3512 ) }
    dend_24 { pt3dadd( 773.472, 542.185, 11.5474, 0.3318 ) }
    dend_24 { pt3dadd( 773.369, 543.322, 11.327, 0.3354 ) }
    dend_24 { pt3dadd( 773.27, 544.461, 11.2361, 0.3778 ) }
    dend_24 { pt3dadd( 773.186, 545.6, 11.2535, 0.5118 ) }
    dend_24 { pt3dadd( 773.229, 546.742, 11.3223, 0.492 ) }
    dend_24 { pt3dadd( 773.392, 547.874, 11.3876, 0.3848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_24 { pt3dadd( 773.58, 549.002, 11.4332, 0.3 ) }
    dend_24 { pt3dadd( 773.767, 550.13, 11.4631, 0.2748 ) }
    dend_24 { pt3dadd( 773.994, 551.252, 11.484, 0.275 ) }
    dend_24 { pt3dadd( 774.367, 552.333, 11.5021, 0.2752 ) }
    dend_24 { pt3dadd( 774.845, 553.372, 11.5237, 0.2758 ) }
    dend_24 { pt3dadd( 775.31, 554.417, 11.5535, 0.2768 ) }
    dend_24 { pt3dadd( 775.559, 555.533, 11.5955, 0.279 ) }
    dend_24 { pt3dadd( 775.445, 556.67, 11.6528, 0.2824 ) }
    dend_24 { pt3dadd( 775.078, 557.753, 11.7337, 0.2894 ) }
    dend_24 { pt3dadd( 774.601, 558.79, 11.8437, 0.3014 ) }
    dend_24 { pt3dadd( 774.36, 559.891, 12.0148, 0.3264 ) }
    dend_24 { pt3dadd( 774.337, 560.998, 12.2464, 0.3606 ) }
    dend_24 { pt3dadd( 774.383, 562.117, 12.4863, 0.4848 ) }
    dend_24 { pt3dadd( 774.624, 563.235, 12.6258, 0.4176 ) }
    dend_24 { pt3dadd( 774.87, 564.309, 12.5789, 0.3654 ) }
    dend_24 { pt3dadd( 775.523, 565.223, 12.4273, 0.374 ) }
    dend_24 { pt3dadd( 775.995, 566.148, 12.1152, 0.3352 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 17/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 786.779, 520.364, 29.4095, 0.4048 ) }
    dend_18 { pt3dadd( 786.753, 521.423, 29.297, 0.3788 ) }
    dend_18 { pt3dadd( 786.779, 522.565, 29.1925, 0.4482 ) }
    dend_18 { pt3dadd( 786.878, 523.705, 29.141, 0.4626 ) }
    dend_18 { pt3dadd( 786.936, 524.847, 29.113, 0.5866 ) }
    dend_18 { pt3dadd( 786.843, 525.98, 29.0534, 0.5732 ) }
    dend_18 { pt3dadd( 786.579, 527.088, 28.9831, 0.5862 ) }
    dend_18 { pt3dadd( 786.164, 528.148, 28.9814, 0.4254 ) }
    dend_18 { pt3dadd( 785.951, 529.267, 28.9705, 0.3378 ) }
    dend_18 { pt3dadd( 786.371, 530.324, 28.9957, 0.2988 ) }
    dend_18 { pt3dadd( 787.017, 531.248, 29.1211, 0.3142 ) }
    dend_18 { pt3dadd( 787.675, 532.182, 29.2362, 0.3734 ) }
    dend_18 { pt3dadd( 787.924, 533.286, 29.3093, 0.334 ) }
    dend_18 { pt3dadd( 787.949, 534.344, 29.5593, 0.3 ) }
    dend_18 { pt3dadd( 787.949, 535.473, 29.8567, 0.2746 ) }
    dend_18 { pt3dadd( 787.949, 536.614, 30.1389, 0.2748 ) }
    dend_18 { pt3dadd( 787.949, 537.755, 30.3982, 0.2748 ) }
    dend_18 { pt3dadd( 787.949, 538.898, 30.6379, 0.2752 ) }
    dend_18 { pt3dadd( 787.949, 540.04, 30.8504, 0.2758 ) }
    dend_18 { pt3dadd( 787.828, 541.173, 31.0386, 0.2766 ) }
    dend_18 { pt3dadd( 787.626, 542.29, 31.2301, 0.2786 ) }
    dend_18 { pt3dadd( 787.56, 543.423, 31.4238, 0.2818 ) }
    dend_18 { pt3dadd( 787.699, 544.549, 31.6098, 0.2882 ) }
    dend_18 { pt3dadd( 787.763, 545.69, 31.7338, 0.2994 ) }
    dend_18 { pt3dadd( 787.688, 546.822, 31.7344, 0.323 ) }
    dend_18 { pt3dadd( 787.813, 547.955, 31.666, 0.3538 ) }
    dend_18 { pt3dadd( 788.151, 549.048, 31.5812, 0.4728 ) }
    dend_18 { pt3dadd( 788.407, 550.159, 31.4583, 0.3938 ) }
    dend_18 { pt3dadd( 788.407, 551.243, 31.2259, 0.3264 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 46/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 786.779, 520.364, 29.4095, 0.4048 ) }
    dend_15 { pt3dadd( 787.408, 520.542, 30.0594, 0.2288 ) }
    dend_15 { pt3dadd( 788.458, 520.95, 30.7793, 0.4392 ) }
    dend_15 { pt3dadd( 789.162, 521.834, 31.0736, 0.4824 ) }
    dend_15 { pt3dadd( 789.311, 522.94, 31.4524, 0.4482 ) }
    dend_15 { pt3dadd( 789.323, 524.08, 31.831, 0.48 ) }
    dend_15 { pt3dadd( 789.323, 525.184, 32.27, 0.5352 ) }
    dend_15 { pt3dadd( 789.323, 526.04, 32.8922, 0.4254 ) }
    dend_15 { pt3dadd( 789.166, 527.141, 33.4401, 0.3378 ) }
    dend_15 { pt3dadd( 788.463, 527.971, 33.6944, 0.2988 ) }
    dend_15 { pt3dadd( 788.047, 529.028, 33.794, 0.3142 ) }
    dend_15 { pt3dadd( 787.604, 530.07, 33.78, 0.3734 ) }
    dend_15 { pt3dadd( 787.164, 531.123, 33.7747, 0.3338 ) }
    dend_15 { pt3dadd( 786.729, 532.166, 33.8209, 0.3 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 777.475, 501.143, 34.8642, 0.4788 ) }
    dend_9 { pt3dadd( 777.323, 500.371, 38.085, 0.2746 ) }
    dend_9 { pt3dadd( 777.016, 499.787, 39.9238, 0.2746 ) }
    dend_9 { pt3dadd( 776.642, 498.921, 40.71, 0.2746 ) }
    dend_9 { pt3dadd( 776.41, 497.814, 41.4313, 0.2746 ) }
    dend_9 { pt3dadd( 776.232, 496.696, 42.0804, 0.2746 ) }
    dend_9 { pt3dadd( 776.092, 495.573, 42.6434, 0.2746 ) }
    dend_9 { pt3dadd( 776.037, 494.435, 43.1001, 0.2746 ) }
    dend_9 { pt3dadd( 775.87, 493.328, 43.4801, 0.2746 ) }
    dend_9 { pt3dadd( 775.346, 492.348, 43.8528, 0.2746 ) }
    dend_9 { pt3dadd( 774.67, 491.436, 44.2198, 0.2746 ) }
    dend_9 { pt3dadd( 774.044, 490.496, 44.6018, 0.2746 ) }
    dend_9 { pt3dadd( 773.353, 489.61, 44.9977, 0.2746 ) }
    dend_9 { pt3dadd( 772.525, 488.828, 45.3634, 0.2746 ) }
    dend_9 { pt3dadd( 771.727, 488.019, 45.7134, 0.2746 ) }
    dend_9 { pt3dadd( 771.162, 487.096, 46.1328, 0.2746 ) }
    dend_9 { pt3dadd( 770.777, 486.08, 46.6183, 0.2746 ) }
    dend_9 { pt3dadd( 770.38, 485.024, 47.0817, 0.2746 ) }
    dend_9 { pt3dadd( 770.019, 483.951, 47.5129, 0.2746 ) }
    dend_9 { pt3dadd( 769.735, 482.859, 47.9312, 0.2746 ) }
    dend_9 { pt3dadd( 769.42, 481.769, 48.3039, 0.2746 ) }
    dend_9 { pt3dadd( 769.043, 480.692, 48.5968, 0.2746 ) }
    dend_9 { pt3dadd( 768.607, 479.639, 48.8516, 0.2746 ) }
    dend_9 { pt3dadd( 768.126, 478.616, 49.1229, 0.2746 ) }
    dend_9 { pt3dadd( 767.672, 477.58, 49.4026, 0.2746 ) }
    dend_9 { pt3dadd( 767.314, 476.498, 49.6527, 0.2746 ) }
    dend_9 { pt3dadd( 766.988, 475.402, 49.873, 0.2746 ) }
    dend_9 { pt3dadd( 766.545, 474.352, 50.0847, 0.2746 ) }
    dend_9 { pt3dadd( 765.792, 473.528, 50.3166, 0.2746 ) }
    dend_9 { pt3dadd( 764.809, 472.996, 50.6089, 0.2746 ) }
    dend_9 { pt3dadd( 763.834, 472.453, 50.9617, 0.2744 ) }
    dend_9 { pt3dadd( 763.019, 471.798, 51.4144, 0.2744 ) }
    dend_9 { pt3dadd( 762.333, 471.13, 51.973, 0.2742 ) }
    dend_9 { pt3dadd( 761.951, 470.129, 52.428, 0.2742 ) }
    dend_9 { pt3dadd( 761.86, 468.998, 52.6621, 0.2736 ) }
    dend_9 { pt3dadd( 761.68, 467.953, 52.5916, 0.2728 ) }
    dend_9 { pt3dadd( 761.212, 467.159, 52.2217, 0.2712 ) }
    dend_9 { pt3dadd( 760.952, 466.179, 51.7087, 0.2684 ) }
    dend_9 { pt3dadd( 760.956, 465.061, 51.242, 0.2626 ) }
    dend_9 { pt3dadd( 761.282, 463.97, 50.9715, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_9 { pt3dadd( 761.923, 463.485, 51.144, 0.2288 ) }
    dend_9 { pt3dadd( 762.31, 462.422, 51.9551, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 2/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 777.475, 501.143, 34.8642, 0.4788 ) }
    dend_6 { pt3dadd( 776.867, 501.421, 35.1484, 0.3524 ) }
    dend_6 { pt3dadd( 775.928, 502.034, 35.3105, 0.2774 ) }
    dend_6 { pt3dadd( 775.007, 502.707, 35.4018, 0.2798 ) }
    dend_6 { pt3dadd( 774.051, 503.199, 35.5802, 0.2842 ) }
    dend_6 { pt3dadd( 773.325, 503.903, 35.8952, 0.2924 ) }
    dend_6 { pt3dadd( 772.699, 504.836, 36.1908, 0.3076 ) }
    dend_6 { pt3dadd( 772.143, 505.833, 36.4249, 0.3364 ) }
    dend_6 { pt3dadd( 771.845, 506.921, 36.5408, 0.386 ) }
    dend_6 { pt3dadd( 771.595, 508.034, 36.5803, 0.4974 ) }
    dend_6 { pt3dadd( 771.326, 509.137, 36.6131, 0.6088 ) }
    dend_6 { pt3dadd( 771.018, 510.227, 36.6562, 0.5906 ) }
    dend_6 { pt3dadd( 770.617, 511.295, 36.6909, 0.5046 ) }
    dend_6 { pt3dadd( 770.087, 512.306, 36.6764, 0.5986 ) }
    dend_6 { pt3dadd( 769.409, 513.211, 36.5666, 0.4562 ) }
    dend_6 { pt3dadd( 768.669, 514.066, 36.367, 0.3576 ) }
    dend_6 { pt3dadd( 767.953, 514.954, 36.1357, 0.2872 ) }
    dend_6 { pt3dadd( 767.232, 515.842, 35.9094, 0.2978 ) }
    dend_6 { pt3dadd( 766.543, 516.704, 35.6171, 0.3184 ) }
    dend_6 { pt3dadd( 765.698, 517.218, 35.203, 0.3522 ) }
    dend_6 { pt3dadd( 764.579, 517.149, 34.8827, 0.4388 ) }
    dend_6 { pt3dadd( 763.55, 517.23, 34.8513, 0.48 ) }
    dend_6 { pt3dadd( 762.538, 517.602, 34.9902, 0.45 ) }
    dend_6 { pt3dadd( 761.621, 518.274, 35.0689, 0.4534 ) }
    dend_6 { pt3dadd( 760.67, 518.885, 35.0745, 0.6298 ) }
    dend_6 { pt3dadd( 759.647, 519.394, 35.047, 0.5884 ) }
    dend_6 { pt3dadd( 758.566, 519.767, 34.9754, 0.4732 ) }
    dend_6 { pt3dadd( 757.457, 520.052, 34.8625, 0.4432 ) }
    dend_6 { pt3dadd( 756.376, 520.422, 34.7127, 0.4122 ) }
    dend_6 { pt3dadd( 755.495, 521.151, 34.5528, 0.4652 ) }
    dend_6 { pt3dadd( 754.585, 521.734, 34.2619, 0.4832 ) }
    dend_6 { pt3dadd( 753.726, 522.488, 33.9853, 0.4496 ) }
    dend_6 { pt3dadd( 752.646, 522.854, 33.7134, 0.4826 ) }
    dend_6 { pt3dadd( 751.55, 522.856, 33.3726, 0.5402 ) }
    dend_6 { pt3dadd( 750.407, 522.856, 33.0988, 0.4344 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 37/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 839.228, 553.532, 21.5151, 0.4876 ) }
    dend_55 { pt3dadd( 839.615, 553.971, 21.474, 0.4088 ) }
    dend_55 { pt3dadd( 840.516, 554.628, 21.4653, 0.4172 ) }
    dend_55 { pt3dadd( 841.619, 554.905, 21.4668, 0.3686 ) }
    dend_55 { pt3dadd( 842.737, 555.113, 21.4687, 0.359 ) }
    dend_55 { pt3dadd( 843.757, 555.602, 21.473, 0.4102 ) }
    dend_55 { pt3dadd( 844.621, 556.342, 21.4833, 0.3982 ) }
    dend_55 { pt3dadd( 845.28, 557.262, 21.4931, 0.4392 ) }
    dend_55 { pt3dadd( 845.693, 558.319, 21.4682, 0.4342 ) }
    dend_55 { pt3dadd( 845.939, 559.424, 21.3903, 0.362 ) }
    dend_55 { pt3dadd( 846.062, 560.554, 21.31, 0.305 ) }
    dend_55 { pt3dadd( 846.102, 561.694, 21.2828, 0.2838 ) }
    dend_55 { pt3dadd( 846.141, 562.832, 21.3062, 0.2914 ) }
    dend_55 { pt3dadd( 846.233, 563.971, 21.3498, 0.3072 ) }
    dend_55 { pt3dadd( 846.348, 565.11, 21.3957, 0.3298 ) }
    dend_55 { pt3dadd( 846.446, 566.249, 21.4313, 0.4032 ) }
    dend_55 { pt3dadd( 846.519, 567.391, 21.4408, 0.384 ) }
    dend_55 { pt3dadd( 846.563, 568.534, 21.418, 0.4182 ) }
    dend_55 { pt3dadd( 846.597, 569.677, 21.3668, 0.3712 ) }
    dend_55 { pt3dadd( 846.717, 570.81, 21.2854, 0.3632 ) }
    dend_55 { pt3dadd( 847.032, 571.898, 21.163, 0.4182 ) }
    dend_55 { pt3dadd( 847.448, 572.96, 21.0217, 0.413 ) }
    dend_55 { pt3dadd( 847.785, 574.048, 20.9079, 0.4666 ) }
    dend_55 { pt3dadd( 847.971, 575.169, 20.8036, 0.4858 ) }
    dend_55 { pt3dadd( 847.955, 576.306, 20.6539, 0.4546 ) }
    dend_55 { pt3dadd( 847.784, 577.434, 20.4701, 0.4916 ) }
    dend_55 { pt3dadd( 847.578, 578.556, 20.2483, 0.5568 ) }
    dend_55 { pt3dadd( 847.479, 579.638, 19.886, 0.4676 ) }
    dend_55 { pt3dadd( 847.483, 580.691, 19.3586, 0.4058 ) }
    dend_55 { pt3dadd( 847.583, 581.771, 18.7589, 0.4746 ) }
    dend_55 { pt3dadd( 847.933, 582.813, 18.1582, 0.3974 ) }
    dend_55 { pt3dadd( 848.604, 583.695, 17.5918, 0.3334 ) }
    dend_55 { pt3dadd( 849.484, 584.408, 17.1093, 0.289 ) }
    dend_55 { pt3dadd( 850.434, 585.035, 16.7093, 0.3024 ) }
    dend_55 { pt3dadd( 851.227, 585.82, 16.3679, 0.321 ) }
    dend_55 { pt3dadd( 851.67, 586.851, 16.0767, 0.3858 ) }
    dend_55 { pt3dadd( 851.885, 587.963, 15.7955, 0.358 ) }
    dend_55 { pt3dadd( 852.013, 589.09, 15.5146, 0.3396 ) }
    dend_55 { pt3dadd( 852.152, 590.219, 15.2436, 0.3734 ) }
    dend_55 { pt3dadd( 852.36, 591.341, 14.991, 0.3338 ) }
    dend_55 { pt3dadd( 852.663, 592.441, 14.7609, 0.3 ) }
    dend_55 { pt3dadd( 853.09, 593.499, 14.5529, 0.2746 ) }
    dend_55 { pt3dadd( 853.614, 594.515, 14.3566, 0.2746 ) }
    dend_55 { pt3dadd( 854.172, 595.508, 14.1416, 0.2748 ) }
    dend_55 { pt3dadd( 854.739, 596.486, 13.881, 0.2748 ) }
    dend_55 { pt3dadd( 855.305, 597.459, 13.5725, 0.2752 ) }
    dend_55 { pt3dadd( 855.855, 598.446, 13.2448, 0.2758 ) }
    dend_55 { pt3dadd( 856.361, 599.466, 12.9352, 0.2766 ) }
    dend_55 { pt3dadd( 856.755, 600.535, 12.6534, 0.2782 ) }
    dend_55 { pt3dadd( 856.978, 601.653, 12.402, 0.2814 ) }
    dend_55 { pt3dadd( 857.108, 602.787, 12.1806, 0.2872 ) }
    dend_55 { pt3dadd( 857.417, 603.872, 11.9536, 0.299 ) }
    dend_55 { pt3dadd( 857.926, 604.875, 11.6919, 0.3146 ) }
    dend_55 { pt3dadd( 858.35, 605.91, 11.399, 0.3744 ) }
    dend_55 { pt3dadd( 858.755, 606.959, 11.0905, 0.3358 ) }
    dend_55 { pt3dadd( 859.389, 607.892, 10.844, 0.3036 ) }
    dend_55 { pt3dadd( 860.127, 608.751, 10.7123, 0.2814 ) }
    dend_55 { pt3dadd( 860.755, 609.697, 10.6398, 0.287 ) }
    dend_55 { pt3dadd( 861.169, 610.744, 10.5357, 0.2988 ) }
    dend_55 { pt3dadd( 861.472, 611.82, 10.3728, 0.3144 ) }
    dend_55 { pt3dadd( 861.805, 612.903, 10.194, 0.3738 ) }
    dend_55 { pt3dadd( 862.193, 613.976, 10.0593, 0.3346 ) }
    dend_55 { pt3dadd( 862.589, 615.046, 9.9866, 0.3014 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_55 { pt3dadd( 862.971, 616.123, 9.9597, 0.277 ) }
    dend_55 { pt3dadd( 863.456, 617.157, 9.9617, 0.2792 ) }
    dend_55 { pt3dadd( 864.15, 618.057, 9.9717, 0.283 ) }
    dend_55 { pt3dadd( 865.005, 618.811, 9.9541, 0.2902 ) }
    dend_55 { pt3dadd( 865.95, 619.432, 9.8788, 0.3046 ) }
    dend_55 { pt3dadd( 866.976, 619.923, 9.7815, 0.3248 ) }
    dend_55 { pt3dadd( 868.033, 620.334, 9.7513, 0.3934 ) }
    dend_55 { pt3dadd( 869.001, 620.913, 9.7872, 0.3716 ) }
    dend_55 { pt3dadd( 869.755, 621.758, 9.8311, 0.3658 ) }
    dend_55 { pt3dadd( 870.396, 622.704, 9.8571, 0.4168 ) }
    dend_55 { pt3dadd( 870.997, 623.678, 9.8528, 0.4398 ) }
    dend_55 { pt3dadd( 871.521, 624.692, 9.7916, 0.3722 ) }
    dend_55 { pt3dadd( 872.012, 625.718, 9.6583, 0.3238 ) }
    dend_55 { pt3dadd( 872.647, 626.658, 9.4768, 0.3196 ) }
    dend_55 { pt3dadd( 873.442, 627.473, 9.2821, 0.3538 ) }
    dend_55 { pt3dadd( 874.284, 628.246, 9.0983, 0.4428 ) }
    dend_55 { pt3dadd( 875.076, 629.07, 8.9354, 0.4828 ) }
    dend_55 { pt3dadd( 875.63, 630.063, 8.7917, 0.4776 ) }
    dend_55 { pt3dadd( 875.87, 631.173, 8.6398, 0.3952 ) }
    dend_55 { pt3dadd( 876.142, 632.267, 8.427, 0.3672 ) }
    dend_55 { pt3dadd( 876.684, 633.255, 8.172, 0.3956 ) }
    dend_55 { pt3dadd( 877.426, 634.12, 7.9237, 0.516 ) }
    dend_55 { pt3dadd( 878.229, 634.933, 7.6826, 0.6398 ) }
    dend_55 { pt3dadd( 878.953, 635.801, 7.4096, 0.6648 ) }
    dend_55 { pt3dadd( 879.378, 636.84, 7.1157, 0.5596 ) }
    dend_55 { pt3dadd( 879.376, 637.973, 6.8541, 0.4166 ) }
    dend_55 { pt3dadd( 879.082, 639.075, 6.6272, 0.3538 ) }
    dend_55 { pt3dadd( 878.792, 640.179, 6.3994, 0.3998 ) }
    dend_55 { pt3dadd( 878.67, 641.305, 6.1422, 0.3834 ) }
    dend_55 { pt3dadd( 878.71, 642.438, 5.8688, 0.3888 ) }
    dend_55 { pt3dadd( 878.952, 643.553, 5.6109, 0.4542 ) }
    dend_55 { pt3dadd( 879.369, 644.612, 5.3503, 0.5348 ) }
    dend_55 { pt3dadd( 880.111, 645.422, 5.0333, 0.4242 ) }
    dend_55 { pt3dadd( 880.709, 646.333, 4.6734, 0.3362 ) }
    dend_55 { pt3dadd( 880.718, 647.463, 4.4063, 0.2938 ) }
    dend_55 { pt3dadd( 880.526, 648.578, 4.289, 0.3112 ) }
    dend_55 { pt3dadd( 880.448, 649.713, 4.2738, 0.3382 ) }
    dend_55 { pt3dadd( 880.55, 650.851, 4.2995, 0.413 ) }
    dend_55 { pt3dadd( 880.714, 651.984, 4.3395, 0.4328 ) }
    dend_55 { pt3dadd( 880.658, 653.126, 4.3715, 0.3594 ) }
    dend_55 { pt3dadd( 880.325, 654.219, 4.3768, 0.3 ) }
    dend_55 { pt3dadd( 880.04, 655.326, 4.3408, 0.2746 ) }
    dend_55 { pt3dadd( 880.004, 656.459, 4.2469, 0.2746 ) }
    dend_55 { pt3dadd( 880.021, 657.591, 4.1135, 0.2746 ) }
    dend_55 { pt3dadd( 880.126, 658.723, 4.058, 0.2746 ) }
    dend_55 { pt3dadd( 880.256, 659.841, 4.0895, 0.2746 ) }
    dend_55 { pt3dadd( 879.862, 660.911, 4.1186, 0.2746 ) }
    dend_55 { pt3dadd( 879.367, 661.942, 4.121, 0.2746 ) }
    dend_55 { pt3dadd( 878.867, 662.971, 4.0895, 0.2746 ) }
    dend_55 { pt3dadd( 878.367, 663.999, 4.0112, 0.2746 ) }
    dend_55 { pt3dadd( 877.879, 664.983, 3.7709, 0.2746 ) }
    dend_55 { pt3dadd( 877.61, 666.049, 3.4234, 0.2746 ) }
    dend_55 { pt3dadd( 877.608, 667.18, 3.0683, 0.2746 ) }
    dend_55 { pt3dadd( 877.783, 668.305, 2.7565, 0.2746 ) }
    dend_55 { pt3dadd( 878.131, 669.396, 2.5222, 0.2746 ) }
    dend_55 { pt3dadd( 878.541, 670.464, 2.3648, 0.2746 ) }
    dend_55 { pt3dadd( 878.98, 671.52, 2.2749, 0.2746 ) }
    dend_55 { pt3dadd( 879.662, 672.438, 2.2239, 0.2746 ) }
    dend_55 { pt3dadd( 880.56, 673.147, 2.1855, 0.2746 ) }
    dend_55 { pt3dadd( 881.537, 673.742, 2.1417, 0.2746 ) }
    dend_55 { pt3dadd( 882.285, 674.607, 2.0808, 0.2746 ) }
    dend_55 { pt3dadd( 882.912, 675.564, 1.9985, 0.2746 ) }
    dend_55 { pt3dadd( 883.319, 676.633, 1.8934, 0.2746 ) }
    dend_55 { pt3dadd( 883.656, 677.723, 1.7387, 0.2746 ) }
    dend_55 { pt3dadd( 883.852, 678.799, 1.4585, 0.2746 ) }
    dend_55 { pt3dadd( 883.615, 679.887, 1.1227, 0.2744 ) }
    dend_55 { pt3dadd( 882.983, 680.832, 0.8149, 0.2744 ) }
    dend_55 { pt3dadd( 882.343, 681.774, 0.5493, 0.2742 ) }
    dend_55 { pt3dadd( 881.862, 682.811, 0.3696, 0.2742 ) }
    dend_55 { pt3dadd( 881.418, 683.866, 0.282, 0.2736 ) }
    dend_55 { pt3dadd( 880.72, 684.772, 0.2794, 0.2728 ) }
    dend_55 { pt3dadd( 880.033, 685.687, 0.3552, 0.2712 ) }
    dend_55 { pt3dadd( 879.347, 686.602, 0.4811, 0.2684 ) }
    dend_55 { pt3dadd( 878.661, 687.518, 0.64, 0.2626 ) }
    dend_55 { pt3dadd( 877.97, 688.416, 0.8736, 0.2542 ) }
    dend_55 { pt3dadd( 877.298, 689.257, 1.2333, 0.2288 ) }
    dend_55 { pt3dadd( 876.625, 690.097, 2.2898, 0.2288 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 839.228, 553.532, 21.5151, 0.4876 ) }
    dend_54 { pt3dadd( 839.838, 554.713, 21.5684, 0.4212 ) }
    dend_54 { pt3dadd( 840.173, 555.795, 21.5856, 0.4478 ) }
    dend_54 { pt3dadd( 840.416, 556.911, 21.6257, 0.3882 ) }
    dend_54 { pt3dadd( 840.851, 557.933, 21.5982, 0.3484 ) }
    dend_54 { pt3dadd( 841.515, 558.732, 21.4288, 0.3898 ) }
    dend_54 { pt3dadd( 842.442, 559.297, 21.2426, 0.3652 ) }
    dend_54 { pt3dadd( 843.343, 559.33, 21.3646, 0.3526 ) }
    dend_54 { pt3dadd( 844.437, 559.278, 21.6169, 0.3986 ) }
    dend_54 { pt3dadd( 845.484, 559.645, 21.8066, 0.3754 ) }
    dend_54 { pt3dadd( 845.89, 560.681, 22.0314, 0.4026 ) }
    dend_54 { pt3dadd( 846.369, 561.149, 22.5403, 0.341 ) }
    dend_54 { pt3dadd( 846.873, 561.896, 23.0597, 0.3126 ) }
    dend_54 { pt3dadd( 847.689, 562.561, 23.496, 0.2988 ) }
    dend_54 { pt3dadd( 848.289, 563.518, 23.8298, 0.3144 ) }
    dend_54 { pt3dadd( 848.838, 564.521, 24.0891, 0.374 ) }
    dend_54 { pt3dadd( 849.461, 565.476, 24.2334, 0.335 ) }
    dend_54 { pt3dadd( 850.063, 566.44, 24.3214, 0.302 ) }
    dend_54 { pt3dadd( 850.651, 567.41, 24.4208, 0.2784 ) }
    dend_54 { pt3dadd( 851.295, 568.352, 24.5029, 0.2816 ) }
    dend_54 { pt3dadd( 851.96, 569.282, 24.5512, 0.2876 ) }
    dend_54 { pt3dadd( 852.561, 570.254, 24.5587, 0.2984 ) }
    dend_54 { pt3dadd( 853.098, 571.256, 24.5032, 0.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_54 { pt3dadd( 853.697, 572.209, 24.3726, 0.353 ) }
    dend_54 { pt3dadd( 854.543, 572.947, 24.2259, 0.4486 ) }
    dend_54 { pt3dadd( 855.582, 573.405, 24.1257, 0.4576 ) }
    dend_54 { pt3dadd( 856.578, 573.96, 24.0866, 0.6058 ) }
    dend_54 { pt3dadd( 857.436, 574.709, 24.1106, 0.4698 ) }
    dend_54 { pt3dadd( 858.315, 575.435, 24.2173, 0.3826 ) }
    dend_54 { pt3dadd( 859.328, 575.902, 24.4295, 0.3354 ) }
    dend_54 { pt3dadd( 860.396, 576.273, 24.7017, 0.3778 ) }
    dend_54 { pt3dadd( 861.375, 576.844, 24.9796, 0.5118 ) }
    dend_54 { pt3dadd( 862.244, 577.575, 25.2578, 0.492 ) }
    dend_54 { pt3dadd( 863.007, 578.414, 25.5323, 0.3848 ) }
    dend_54 { pt3dadd( 863.638, 579.365, 25.7676, 0.3 ) }
    dend_54 { pt3dadd( 864.262, 580.323, 25.9444, 0.2746 ) }
    dend_54 { pt3dadd( 864.983, 581.209, 26.1043, 0.2746 ) }
    dend_54 { pt3dadd( 865.684, 582.107, 26.2907, 0.2746 ) }
    dend_54 { pt3dadd( 866.168, 583.122, 26.5288, 0.2746 ) }
    dend_54 { pt3dadd( 866.485, 584.196, 26.8212, 0.2746 ) }
    dend_54 { pt3dadd( 866.758, 585.285, 27.1505, 0.2746 ) }
    dend_54 { pt3dadd( 867.06, 586.379, 27.4702, 0.2746 ) }
    dend_54 { pt3dadd( 867.488, 587.433, 27.6943, 0.2746 ) }
    dend_54 { pt3dadd( 868.035, 588.431, 27.8346, 0.2746 ) }
    dend_54 { pt3dadd( 868.646, 589.391, 27.9862, 0.2746 ) }
    dend_54 { pt3dadd( 869.214, 590.375, 28.1719, 0.2746 ) }
    dend_54 { pt3dadd( 869.702, 591.406, 28.3738, 0.2746 ) }
    dend_54 { pt3dadd( 870.213, 592.423, 28.6152, 0.2746 ) }
    dend_54 { pt3dadd( 870.857, 593.346, 28.9237, 0.2746 ) }
    dend_54 { pt3dadd( 871.739, 594.054, 29.2558, 0.2746 ) }
    dend_54 { pt3dadd( 872.65, 594.745, 29.5641, 0.2746 ) }
    dend_54 { pt3dadd( 873.06, 595.789, 29.8808, 0.2744 ) }
    dend_54 { pt3dadd( 873.243, 596.898, 30.2554, 0.2744 ) }
    dend_54 { pt3dadd( 873.652, 597.957, 30.6482, 0.2742 ) }
    dend_54 { pt3dadd( 874.236, 598.94, 31.0377, 0.2742 ) }
    dend_54 { pt3dadd( 874.923, 599.846, 31.4731, 0.2736 ) }
    dend_54 { pt3dadd( 875.682, 600.648, 32.0177, 0.2728 ) }
    dend_54 { pt3dadd( 876.434, 601.448, 32.6712, 0.2712 ) }
    dend_54 { pt3dadd( 876.874, 602.453, 33.3866, 0.2684 ) }
    dend_54 { pt3dadd( 876.917, 603.387, 34.2513, 0.2626 ) }
    dend_54 { pt3dadd( 877.88, 603.84, 35.1084, 0.2542 ) }
    dend_54 { pt3dadd( 878.791, 604.42, 35.9016, 0.2288 ) }
    dend_54 { pt3dadd( 879.519, 605.269, 37.2722, 0.2288 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 40/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 788.476, 515.089, 11.8101, 0.3108 ) }
    dend_43 { pt3dadd( 789.694, 514.89, 10.747, 0.404 ) }
    dend_43 { pt3dadd( 790.769, 515.251, 10.941, 0.3912 ) }
    dend_43 { pt3dadd( 791.736, 515.798, 11.0563, 0.403 ) }
    dend_43 { pt3dadd( 792.434, 516.593, 11.2211, 0.4818 ) }
    dend_43 { pt3dadd( 792.72, 517.683, 11.3146, 0.5806 ) }
    dend_43 { pt3dadd( 792.695, 518.801, 11.2701, 0.535 ) }
    dend_43 { pt3dadd( 792.324, 519.82, 11.0657, 0.4184 ) }
    dend_43 { pt3dadd( 791.693, 520.686, 10.7122, 0.357 ) }
    dend_43 { pt3dadd( 790.845, 521.389, 10.3541, 0.4056 ) }
    dend_43 { pt3dadd( 789.899, 522.015, 10.0896, 0.3954 ) }
    dend_43 { pt3dadd( 789.149, 522.849, 9.8694, 0.4046 ) }
    dend_43 { pt3dadd( 788.746, 523.901, 9.6639, 0.5142 ) }
    dend_43 { pt3dadd( 788.645, 525.03, 9.4872, 0.4964 ) }
    dend_43 { pt3dadd( 788.795, 526.126, 9.2415, 0.393 ) }
    dend_43 { pt3dadd( 789.146, 526.992, 8.7464, 0.3152 ) }
    dend_43 { pt3dadd( 789.48, 527.903, 8.0847, 0.304 ) }
    dend_43 { pt3dadd( 789.888, 528.898, 7.4043, 0.3238 ) }
    dend_43 { pt3dadd( 790.051, 530.0, 6.8548, 0.3914 ) }
    dend_43 { pt3dadd( 789.813, 531.111, 6.4825, 0.367 ) }
    dend_43 { pt3dadd( 789.589, 532.232, 6.2354, 0.3632 ) }
    dend_43 { pt3dadd( 789.411, 533.361, 6.0689, 0.3824 ) }
    dend_43 { pt3dadd( 789.472, 534.501, 5.9506, 0.5202 ) }
    dend_43 { pt3dadd( 789.652, 535.627, 5.8661, 0.5078 ) }
    dend_43 { pt3dadd( 789.796, 536.744, 5.692, 0.4148 ) }
    dend_43 { pt3dadd( 790.167, 537.735, 5.3614, 0.3502 ) }
    dend_43 { pt3dadd( 790.839, 538.63, 5.015, 0.3934 ) }
    dend_43 { pt3dadd( 791.221, 539.696, 4.7023, 0.3728 ) }
    dend_43 { pt3dadd( 790.847, 540.763, 4.453, 0.3616 ) }
    dend_43 { pt3dadd( 789.926, 541.424, 4.248, 0.4406 ) }
    dend_43 { pt3dadd( 789.169, 542.267, 4.1978, 0.3304 ) }
    dend_43 { pt3dadd( 788.586, 543.228, 4.4876, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 72/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 788.476, 515.089, 11.8101, 0.3108 ) }
    dend_40 { pt3dadd( 788.024, 515.189, 11.3266, 0.3362 ) }
    dend_40 { pt3dadd( 786.906, 515.306, 11.0177, 0.4156 ) }
    dend_40 { pt3dadd( 785.863, 515.312, 10.736, 0.4064 ) }
    dend_40 { pt3dadd( 784.894, 515.571, 10.3336, 0.462 ) }
    dend_40 { pt3dadd( 783.807, 515.827, 9.9119, 0.4414 ) }
    dend_40 { pt3dadd( 782.708, 516.053, 9.468, 0.5452 ) }
    dend_40 { pt3dadd( 781.625, 516.307, 9.0311, 0.507 ) }
    dend_40 { pt3dadd( 780.539, 516.593, 8.6432, 0.4118 ) }
    dend_40 { pt3dadd( 779.462, 516.459, 8.3049, 0.3524 ) }
    dend_40 { pt3dadd( 778.421, 516.195, 8.1211, 0.3612 ) }
    dend_40 { pt3dadd( 777.397, 515.87, 8.0793, 0.4864 ) }
    dend_40 { pt3dadd( 776.318, 515.63, 8.0545, 0.4194 ) }
    dend_40 { pt3dadd( 775.41, 516.058, 8.0942, 0.3746 ) }
    dend_40 { pt3dadd( 774.815, 516.776, 7.8042, 0.3626 ) }
    dend_40 { pt3dadd( 774.281, 517.634, 7.2414, 0.4528 ) }
    dend_40 { pt3dadd( 773.394, 518.282, 6.5528, 0.532 ) }
    dend_40 { pt3dadd( 772.456, 518.269, 5.6786, 0.4196 ) }
    dend_40 { pt3dadd( 771.637, 518.008, 4.6889, 0.327 ) }
    dend_40 { pt3dadd( 770.784, 517.699, 3.7139, 0.2776 ) }
    dend_40 { pt3dadd( 769.834, 517.256, 2.9427, 0.2802 ) }
    dend_40 { pt3dadd( 768.73, 516.962, 2.526, 0.285 ) }
    dend_40 { pt3dadd( 767.791, 517.034, 2.6319, 0.2938 ) }
    dend_40 { pt3dadd( 766.977, 517.547, 3.121, 0.3114 ) }
    dend_40 { pt3dadd( 766.132, 517.932, 3.8699, 0.3378 ) }
    dend_40 { pt3dadd( 765.21, 518.126, 4.7292, 0.4166 ) }
    // Section: apic_29, id: apic_29, parent: apic_19 (entry count 98/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 1066.44, 190.625, 98.138, 0.2746 ) }
    apic_29 { pt3dadd( 1066.24, 189.959, 99.6467, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_29 { pt3dadd( 1065.9, 188.888, 99.5162, 0.2746 ) }
    apic_29 { pt3dadd( 1065.45, 187.854, 99.442, 0.2746 ) }
    apic_29 { pt3dadd( 1064.79, 186.922, 99.426, 0.2746 ) }
    apic_29 { pt3dadd( 1064.14, 185.988, 99.5282, 0.2746 ) }
    apic_29 { pt3dadd( 1063.55, 185.029, 99.7909, 0.2746 ) }
    apic_29 { pt3dadd( 1062.9, 184.173, 100.245, 0.2746 ) }
    apic_29 { pt3dadd( 1062.37, 183.246, 100.85, 0.2746 ) }
    apic_29 { pt3dadd( 1062.05, 182.2, 101.516, 0.2746 ) }
    apic_29 { pt3dadd( 1061.8, 181.12, 102.187, 0.2746 ) }
    apic_29 { pt3dadd( 1061.66, 179.996, 102.787, 0.2746 ) }
    apic_29 { pt3dadd( 1061.6, 178.855, 103.279, 0.2746 ) }
    apic_29 { pt3dadd( 1061.37, 177.739, 103.72, 0.2746 ) }
    apic_29 { pt3dadd( 1060.71, 176.898, 104.231, 0.2746 ) }
    apic_29 { pt3dadd( 1060.15, 175.949, 104.78, 0.2746 ) }
    apic_29 { pt3dadd( 1059.93, 174.834, 105.286, 0.2746 ) }
    apic_29 { pt3dadd( 1059.85, 173.71, 105.799, 0.2746 ) }
    apic_29 { pt3dadd( 1059.83, 172.603, 106.351, 0.2746 ) }
    apic_29 { pt3dadd( 1059.91, 171.488, 106.898, 0.2746 ) }
    apic_29 { pt3dadd( 1060.06, 170.367, 107.41, 0.2746 ) }
    apic_29 { pt3dadd( 1060.43, 169.313, 107.93, 0.2746 ) }
    apic_29 { pt3dadd( 1060.59, 168.199, 108.442, 0.2746 ) }
    apic_29 { pt3dadd( 1060.57, 167.063, 108.924, 0.2746 ) }
    apic_29 { pt3dadd( 1060.53, 165.928, 109.383, 0.2746 ) }
    apic_29 { pt3dadd( 1060.49, 164.792, 109.837, 0.2746 ) }
    apic_29 { pt3dadd( 1060.43, 163.658, 110.301, 0.2746 ) }
    apic_29 { pt3dadd( 1060.12, 162.599, 110.836, 0.2746 ) }
    apic_29 { pt3dadd( 1059.74, 161.575, 111.445, 0.2746 ) }
    apic_29 { pt3dadd( 1059.35, 160.553, 112.107, 0.2746 ) }
    apic_29 { pt3dadd( 1058.93, 159.536, 112.794, 0.2746 ) }
    apic_29 { pt3dadd( 1058.45, 158.534, 113.47, 0.2746 ) }
    apic_29 { pt3dadd( 1057.95, 157.537, 114.12, 0.2746 ) }
    apic_29 { pt3dadd( 1057.45, 156.539, 114.736, 0.2746 ) }
    apic_29 { pt3dadd( 1056.91, 155.551, 115.306, 0.2746 ) }
    apic_29 { pt3dadd( 1056.35, 154.572, 115.833, 0.2746 ) }
    apic_29 { pt3dadd( 1055.78, 153.593, 116.331, 0.2746 ) }
    apic_29 { pt3dadd( 1055.21, 152.615, 116.815, 0.2746 ) }
    apic_29 { pt3dadd( 1054.74, 151.587, 117.299, 0.2744 ) }
    apic_29 { pt3dadd( 1054.36, 150.532, 117.805, 0.2744 ) }
    apic_29 { pt3dadd( 1054.14, 149.461, 118.366, 0.2742 ) }
    apic_29 { pt3dadd( 1053.62, 148.492, 118.947, 0.2742 ) }
    apic_29 { pt3dadd( 1052.79, 147.738, 119.497, 0.2736 ) }
    apic_29 { pt3dadd( 1051.85, 147.224, 120.065, 0.2728 ) }
    apic_29 { pt3dadd( 1050.8, 146.815, 120.565, 0.2712 ) }
    apic_29 { pt3dadd( 1049.72, 146.447, 120.92, 0.2684 ) }
    apic_29 { pt3dadd( 1048.95, 145.599, 121.147, 0.2626 ) }
    apic_29 { pt3dadd( 1048.62, 144.504, 121.278, 0.2542 ) }
    apic_29 { pt3dadd( 1047.99, 143.55, 121.343, 0.2288 ) }
    apic_29 { pt3dadd( 1047.0, 142.968, 121.363, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 48/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 1066.44, 190.625, 98.138, 0.2746 ) }
    apic_20 { pt3dadd( 1066.86, 189.937, 98.6765, 0.2746 ) }
    apic_20 { pt3dadd( 1067.45, 188.968, 98.957, 0.2746 ) }
    apic_20 { pt3dadd( 1068.03, 187.998, 99.034, 0.2746 ) }
    apic_20 { pt3dadd( 1068.62, 187.029, 98.9632, 0.2746 ) }
    apic_20 { pt3dadd( 1068.96, 185.937, 98.8436, 0.2746 ) }
    apic_20 { pt3dadd( 1069.19, 184.818, 98.7462, 0.2746 ) }
    apic_20 { pt3dadd( 1069.43, 183.699, 98.7165, 0.2746 ) }
    apic_20 { pt3dadd( 1069.67, 182.579, 98.7465, 0.2746 ) }
    apic_20 { pt3dadd( 1069.9, 181.46, 98.8249, 0.2746 ) }
    // Section: apic_14, id: apic_14, parent: apic_6 (entry count 58/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 1061.05, 218.424, 78.129, 0.4738 ) }
    apic_14 { pt3dadd( 1061.84, 217.899, 77.8554, 0.6864 ) }
    apic_14 { pt3dadd( 1062.79, 217.263, 77.8464, 0.4498 ) }
    apic_14 { pt3dadd( 1063.74, 216.628, 77.8431, 0.3362 ) }
    apic_14 { pt3dadd( 1064.69, 215.994, 77.838, 0.294 ) }
    apic_14 { pt3dadd( 1065.65, 215.359, 77.831, 0.3118 ) }
    apic_14 { pt3dadd( 1066.63, 214.775, 77.8215, 0.3382 ) }
    apic_14 { pt3dadd( 1067.72, 214.452, 77.8078, 0.418 ) }
    apic_14 { pt3dadd( 1068.83, 214.165, 77.7885, 0.418 ) }
    apic_14 { pt3dadd( 1069.94, 213.876, 77.7624, 0.4478 ) }
    apic_14 { pt3dadd( 1071.05, 213.588, 77.7283, 0.5888 ) }
    apic_14 { pt3dadd( 1072.17, 213.359, 77.6734, 0.6622 ) }
    apic_14 { pt3dadd( 1073.3, 213.179, 77.593, 0.5666 ) }
    apic_14 { pt3dadd( 1074.42, 213.005, 77.4942, 0.5994 ) }
    apic_14 { pt3dadd( 1075.55, 212.831, 77.3828, 0.5558 ) }
    apic_14 { pt3dadd( 1076.68, 212.656, 77.2626, 0.5232 ) }
    apic_14 { pt3dadd( 1077.66, 212.063, 77.173, 0.4582 ) }
    apic_14 { pt3dadd( 1078.58, 211.383, 77.1123, 0.3594 ) }
    apic_14 { pt3dadd( 1079.49, 210.697, 77.068, 0.3004 ) }
    apic_14 { pt3dadd( 1080.33, 209.942, 76.953, 0.2752 ) }
    apic_14 { pt3dadd( 1081.14, 209.167, 76.7558, 0.2758 ) }
    apic_14 { pt3dadd( 1081.95, 208.391, 76.5041, 0.2768 ) }
    apic_14 { pt3dadd( 1082.75, 207.596, 76.2558, 0.2786 ) }
    apic_14 { pt3dadd( 1083.55, 206.776, 76.0892, 0.2822 ) }
    apic_14 { pt3dadd( 1084.34, 205.953, 76.0141, 0.2882 ) }
    apic_14 { pt3dadd( 1085.14, 205.132, 76.0304, 0.3012 ) }
    apic_14 { pt3dadd( 1085.99, 204.372, 76.1547, 0.3182 ) }
    apic_14 { pt3dadd( 1086.91, 203.733, 76.4075, 0.3812 ) }
    apic_14 { pt3dadd( 1087.82, 203.101, 76.7402, 0.3482 ) }
    apic_14 { pt3dadd( 1088.74, 202.471, 77.1092, 0.3264 ) }
    apic_14 { pt3dadd( 1089.59, 201.703, 77.4124, 0.3236 ) }
    apic_14 { pt3dadd( 1090.41, 200.909, 77.6306, 0.367 ) }
    apic_14 { pt3dadd( 1091.23, 200.113, 77.77, 0.4386 ) }
    apic_14 { pt3dadd( 1092.05, 199.317, 77.8456, 0.6138 ) }
    apic_14 { pt3dadd( 1093.05, 198.754, 77.8803, 0.7334 ) }
    apic_14 { pt3dadd( 1094.07, 198.24, 77.896, 0.5796 ) }
    apic_14 { pt3dadd( 1095.09, 197.728, 77.9125, 0.5134 ) }
    apic_14 { pt3dadd( 1096.12, 197.215, 77.9352, 0.4722 ) }
    apic_14 { pt3dadd( 1097.07, 196.585, 77.9666, 0.4582 ) }
    apic_14 { pt3dadd( 1097.99, 195.901, 78.0108, 0.3594 ) }
    apic_14 { pt3dadd( 1098.9, 195.214, 78.0746, 0.3 ) }
    apic_14 { pt3dadd( 1099.82, 194.528, 78.1637, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_14 { pt3dadd( 1100.81, 193.955, 78.2804, 0.2746 ) }
    apic_14 { pt3dadd( 1101.83, 193.441, 78.4252, 0.2746 ) }
    apic_14 { pt3dadd( 1102.8, 192.92, 78.7063, 0.2746 ) }
    apic_14 { pt3dadd( 1103.75, 192.398, 79.1, 0.2746 ) }
    apic_14 { pt3dadd( 1104.84, 192.089, 79.5077, 0.2746 ) }
    apic_14 { pt3dadd( 1105.98, 191.978, 79.8613, 0.2746 ) }
    apic_14 { pt3dadd( 1107.12, 191.866, 80.1702, 0.2746 ) }
    apic_14 { pt3dadd( 1108.26, 191.755, 80.4446, 0.2746 ) }
    apic_14 { pt3dadd( 1109.39, 191.643, 80.6943, 0.2746 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 9/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 1061.05, 218.424, 78.129, 0.4738 ) }
    apic_7 { pt3dadd( 1061.72, 217.837, 78.2482, 0.601 ) }
    apic_7 { pt3dadd( 1062.58, 217.087, 78.4148, 0.6306 ) }
    apic_7 { pt3dadd( 1063.44, 216.336, 78.6229, 0.5432 ) }
    apic_7 { pt3dadd( 1064.29, 215.58, 78.8676, 0.3852 ) }
    apic_7 { pt3dadd( 1064.87, 214.607, 79.1717, 0.3008 ) }
    apic_7 { pt3dadd( 1065.44, 213.629, 79.5211, 0.2762 ) }
    apic_7 { pt3dadd( 1066.01, 212.651, 79.8997, 0.2776 ) }
    apic_7 { pt3dadd( 1066.6, 211.694, 80.3029, 0.2806 ) }
    apic_7 { pt3dadd( 1067.27, 210.797, 80.7394, 0.2854 ) }
    apic_7 { pt3dadd( 1067.93, 209.903, 81.1868, 0.2942 ) }
    apic_7 { pt3dadd( 1068.59, 209.01, 81.6234, 0.312 ) }
    apic_7 { pt3dadd( 1069.3, 208.111, 81.9686, 0.3396 ) }
    apic_7 { pt3dadd( 1070.01, 207.217, 82.2077, 0.4156 ) }
    apic_7 { pt3dadd( 1070.72, 206.324, 82.3609, 0.4376 ) }
    apic_7 { pt3dadd( 1071.44, 205.43, 82.4494, 0.3684 ) }
    apic_7 { pt3dadd( 1072.11, 204.506, 82.4984, 0.3168 ) }
    apic_7 { pt3dadd( 1072.77, 203.569, 82.5311, 0.3056 ) }
    apic_7 { pt3dadd( 1073.43, 202.632, 82.5692, 0.333 ) }
    apic_7 { pt3dadd( 1074.08, 201.696, 82.621, 0.3784 ) }
    apic_7 { pt3dadd( 1074.69, 200.725, 82.6986, 0.4892 ) }
    apic_7 { pt3dadd( 1075.27, 199.74, 82.8075, 0.5646 ) }
    apic_7 { pt3dadd( 1075.85, 198.755, 82.9503, 0.6508 ) }
    apic_7 { pt3dadd( 1076.43, 197.77, 83.1281, 0.613 ) }
    apic_7 { pt3dadd( 1077.02, 196.802, 83.3896, 0.5838 ) }
    apic_7 { pt3dadd( 1077.61, 195.849, 83.7396, 0.5614 ) }
    apic_7 { pt3dadd( 1078.2, 194.895, 84.1532, 0.5968 ) }
    apic_7 { pt3dadd( 1078.78, 193.939, 84.6059, 0.5174 ) }
    apic_7 { pt3dadd( 1079.31, 192.947, 85.073, 0.3848 ) }
    apic_7 { pt3dadd( 1079.83, 191.955, 85.5322, 0.3 ) }
    apic_7 { pt3dadd( 1080.35, 190.962, 85.9642, 0.2746 ) }
    apic_7 { pt3dadd( 1080.99, 190.026, 86.3419, 0.2746 ) }
    apic_7 { pt3dadd( 1081.79, 189.218, 86.6295, 0.2746 ) }
    apic_7 { pt3dadd( 1082.49, 188.308, 86.8207, 0.2748 ) }
    apic_7 { pt3dadd( 1083.14, 187.365, 86.9221, 0.2748 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 775.995, 566.148, 12.1152, 0.3352 ) }
    dend_26 { pt3dadd( 775.971, 566.457, 11.9231, 0.3024 ) }
    dend_26 { pt3dadd( 776.046, 567.531, 11.9316, 0.279 ) }
    dend_26 { pt3dadd( 776.279, 568.63, 12.0374, 0.2826 ) }
    dend_26 { pt3dadd( 776.396, 569.76, 12.1478, 0.2894 ) }
    dend_26 { pt3dadd( 776.339, 570.899, 12.2416, 0.302 ) }
    dend_26 { pt3dadd( 776.358, 572.038, 12.3057, 0.3262 ) }
    dend_26 { pt3dadd( 776.638, 573.131, 12.2677, 0.3658 ) }
    dend_26 { pt3dadd( 776.991, 574.214, 12.1543, 0.4662 ) }
    dend_26 { pt3dadd( 777.458, 575.248, 12.0031, 0.521 ) }
    dend_26 { pt3dadd( 778.0, 576.218, 11.7846, 0.5736 ) }
    dend_26 { pt3dadd( 778.307, 577.29, 11.5986, 0.4506 ) }
    dend_26 { pt3dadd( 778.577, 578.379, 11.5331, 0.3792 ) }
    dend_26 { pt3dadd( 778.977, 579.441, 11.5057, 0.401 ) }
    dend_26 { pt3dadd( 779.446, 580.474, 11.4357, 0.3798 ) }
    dend_26 { pt3dadd( 779.999, 581.471, 11.3644, 0.4106 ) }
    dend_26 { pt3dadd( 780.565, 582.458, 11.2619, 0.3558 ) }
    dend_26 { pt3dadd( 780.905, 583.537, 11.1709, 0.3414 ) }
    dend_26 { pt3dadd( 781.558, 584.442, 11.1043, 0.347 ) }
    dend_26 { pt3dadd( 782.213, 585.318, 10.9254, 0.429 ) }
    dend_26 { pt3dadd( 782.696, 586.338, 10.7545, 0.4638 ) }
    dend_26 { pt3dadd( 783.317, 587.279, 10.5476, 0.4112 ) }
    dend_26 { pt3dadd( 783.96, 588.207, 10.303, 0.423 ) }
    dend_26 { pt3dadd( 784.411, 589.247, 10.1171, 0.3734 ) }
    dend_26 { pt3dadd( 784.356, 590.312, 9.8569, 0.3986 ) }
    dend_26 { pt3dadd( 784.322, 591.442, 9.6588, 0.3336 ) }
    dend_26 { pt3dadd( 785.006, 592.265, 9.5925, 0.2994 ) }
    dend_26 { pt3dadd( 785.834, 593.045, 9.5344, 0.2736 ) }
    dend_26 { pt3dadd( 786.673, 593.817, 9.4284, 0.2728 ) }
    dend_26 { pt3dadd( 787.281, 594.771, 9.2674, 0.2712 ) }
    dend_26 { pt3dadd( 787.633, 595.841, 9.0499, 0.2684 ) }
    dend_26 { pt3dadd( 788.301, 596.758, 8.8253, 0.2626 ) }
    dend_26 { pt3dadd( 789.201, 597.295, 8.4731, 0.2542 ) }
    dend_26 { pt3dadd( 790.345, 597.295, 8.2066, 0.2288 ) }
    dend_26 { pt3dadd( 791.489, 597.295, 7.8532, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 775.995, 566.148, 12.1152, 0.3352 ) }
    dend_25 { pt3dadd( 775.329, 566.863, 10.7201, 0.2288 ) }
    dend_25 { pt3dadd( 774.813, 567.822, 10.8559, 0.3444 ) }
    dend_25 { pt3dadd( 774.681, 568.942, 10.9178, 0.4242 ) }
    dend_25 { pt3dadd( 774.672, 570.061, 10.9685, 0.4538 ) }
    dend_25 { pt3dadd( 774.672, 571.195, 10.8841, 0.3978 ) }
    dend_25 { pt3dadd( 774.734, 572.297, 10.6276, 0.3722 ) }
    dend_25 { pt3dadd( 774.92, 573.356, 10.1936, 0.4048 ) }
    dend_25 { pt3dadd( 774.908, 574.398, 9.6568, 0.5332 ) }
    dend_25 { pt3dadd( 774.836, 575.44, 9.1555, 0.671 ) }
    dend_25 { pt3dadd( 775.392, 576.433, 8.673, 0.7252 ) }
    dend_25 { pt3dadd( 775.941, 577.404, 8.181, 0.6608 ) }
    dend_25 { pt3dadd( 776.546, 578.305, 7.6483, 0.656 ) }
    dend_25 { pt3dadd( 777.26, 579.14, 7.0966, 0.5466 ) }
    dend_25 { pt3dadd( 777.857, 580.076, 6.6039, 0.6032 ) }
    dend_25 { pt3dadd( 778.431, 581.026, 6.1846, 0.593 ) }
    dend_25 { pt3dadd( 779.196, 581.828, 5.7226, 0.4476 ) }
    dend_25 { pt3dadd( 779.96, 582.62, 5.2231, 0.3322 ) }
    dend_25 { pt3dadd( 780.364, 583.607, 4.7232, 0.287 ) }
    dend_25 { pt3dadd( 780.136, 584.679, 4.3017, 0.2988 ) }
    dend_25 { pt3dadd( 780.344, 585.387, 3.7945, 0.314 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_25 { pt3dadd( 781.355, 585.632, 3.1962, 0.3734 ) }
    dend_25 { pt3dadd( 782.315, 586.106, 2.5775, 0.3338 ) }
    dend_25 { pt3dadd( 782.376, 586.957, 1.88, 0.2994 ) }
    dend_25 { pt3dadd( 781.589, 587.763, 1.3337, 0.2742 ) }
    dend_25 { pt3dadd( 781.026, 588.757, 0.9463, 0.2736 ) }
    dend_25 { pt3dadd( 780.944, 589.896, 0.6905, 0.2728 ) }
    dend_25 { pt3dadd( 781.004, 591.036, 0.5766, 0.2712 ) }
    dend_25 { pt3dadd( 781.415, 592.1, 0.5712, 0.2684 ) }
    dend_25 { pt3dadd( 782.119, 592.999, 0.5794, 0.2626 ) }
    dend_25 { pt3dadd( 782.961, 593.769, 0.6151, 0.2542 ) }
    dend_25 { pt3dadd( 783.283, 594.834, 0.5458, 0.2288 ) }
    dend_25 { pt3dadd( 783.64, 595.91, 0.56, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 788.407, 551.243, 31.2259, 0.3264 ) }
    dend_22 { pt3dadd( 788.239, 552.044, 30.7812, 0.2288 ) }
    dend_22 { pt3dadd( 788.627, 553.077, 30.2767, 0.2754 ) }
    dend_22 { pt3dadd( 789.714, 553.329, 30.0406, 0.2762 ) }
    dend_22 { pt3dadd( 790.633, 553.746, 29.6554, 0.2776 ) }
    dend_22 { pt3dadd( 791.201, 554.728, 29.2678, 0.2806 ) }
    dend_22 { pt3dadd( 791.687, 555.76, 28.9128, 0.2854 ) }
    dend_22 { pt3dadd( 792.217, 556.753, 28.6339, 0.2942 ) }
    dend_22 { pt3dadd( 793.086, 557.43, 28.3973, 0.3124 ) }
    dend_22 { pt3dadd( 794.061, 557.919, 28.0916, 0.3394 ) }
    dend_22 { pt3dadd( 794.975, 558.596, 27.8026, 0.4194 ) }
    dend_22 { pt3dadd( 795.718, 559.435, 27.4656, 0.421 ) }
    dend_22 { pt3dadd( 796.296, 560.402, 27.079, 0.4528 ) }
    dend_22 { pt3dadd( 796.849, 561.396, 26.689, 0.6006 ) }
    dend_22 { pt3dadd( 797.383, 562.377, 26.2789, 0.6716 ) }
    dend_22 { pt3dadd( 797.773, 563.352, 25.7992, 0.6446 ) }
    dend_22 { pt3dadd( 798.031, 564.333, 25.2405, 0.4494 ) }
    dend_22 { pt3dadd( 798.316, 565.284, 24.8212, 0.3354 ) }
    dend_22 { pt3dadd( 798.805, 566.012, 24.7737, 0.293 ) }
    dend_22 { pt3dadd( 799.516, 566.692, 24.8001, 0.3084 ) }
    dend_22 { pt3dadd( 800.342, 567.342, 24.6527, 0.3396 ) }
    dend_22 { pt3dadd( 801.143, 568.061, 24.4006, 0.3844 ) }
    dend_22 { pt3dadd( 801.838, 568.957, 24.1179, 0.53 ) }
    dend_22 { pt3dadd( 802.552, 569.847, 23.8136, 0.497 ) }
    dend_22 { pt3dadd( 803.381, 570.62, 23.4832, 0.5338 ) }
    dend_22 { pt3dadd( 804.306, 571.264, 23.1567, 0.583 ) }
    dend_22 { pt3dadd( 805.249, 571.862, 22.838, 0.5392 ) }
    dend_22 { pt3dadd( 806.138, 572.536, 22.5252, 0.4258 ) }
    dend_22 { pt3dadd( 806.767, 573.436, 22.3206, 0.372 ) }
    dend_22 { pt3dadd( 806.758, 574.525, 22.2253, 0.428 ) }
    dend_22 { pt3dadd( 806.333, 575.58, 22.1879, 0.4614 ) }
    dend_22 { pt3dadd( 806.011, 576.673, 22.1971, 0.4074 ) }
    dend_22 { pt3dadd( 805.919, 577.784, 22.1497, 0.415 ) }
    dend_22 { pt3dadd( 805.937, 578.921, 22.0946, 0.3648 ) }
    dend_22 { pt3dadd( 805.954, 580.046, 22.1192, 0.3518 ) }
    dend_22 { pt3dadd( 805.859, 581.161, 22.218, 0.3976 ) }
    dend_22 { pt3dadd( 805.776, 582.294, 22.2721, 0.3734 ) }
    dend_22 { pt3dadd( 805.836, 583.426, 22.261, 0.3988 ) }
    dend_22 { pt3dadd( 805.868, 584.568, 22.2479, 0.334 ) }
    dend_22 { pt3dadd( 805.865, 585.712, 22.2126, 0.3 ) }
    dend_22 { pt3dadd( 806.337, 586.729, 22.1978, 0.2748 ) }
    dend_22 { pt3dadd( 807.309, 587.298, 22.1834, 0.2748 ) }
    dend_22 { pt3dadd( 808.304, 587.863, 22.1526, 0.2752 ) }
    dend_22 { pt3dadd( 809.119, 588.661, 22.1056, 0.2758 ) }
    dend_22 { pt3dadd( 809.983, 589.412, 22.0287, 0.2766 ) }
    dend_22 { pt3dadd( 810.936, 590.029, 21.8813, 0.2782 ) }
    dend_22 { pt3dadd( 811.919, 590.606, 21.6828, 0.2814 ) }
    dend_22 { pt3dadd( 812.873, 591.212, 21.4324, 0.287 ) }
    dend_22 { pt3dadd( 813.86, 591.742, 21.1329, 0.2988 ) }
    dend_22 { pt3dadd( 814.928, 592.096, 20.8192, 0.3142 ) }
    dend_22 { pt3dadd( 816.039, 592.363, 20.5706, 0.3738 ) }
    dend_22 { pt3dadd( 817.159, 592.558, 20.4273, 0.3346 ) }
    dend_22 { pt3dadd( 818.289, 592.72, 20.3377, 0.3012 ) }
    dend_22 { pt3dadd( 819.345, 593.157, 20.2599, 0.2768 ) }
    dend_22 { pt3dadd( 820.183, 593.914, 20.1217, 0.2786 ) }
    dend_22 { pt3dadd( 820.786, 594.825, 19.864, 0.2822 ) }
    dend_22 { pt3dadd( 821.662, 595.547, 19.5884, 0.2882 ) }
    dend_22 { pt3dadd( 822.638, 596.141, 19.3749, 0.3012 ) }
    dend_22 { pt3dadd( 823.545, 596.836, 19.2019, 0.3184 ) }
    dend_22 { pt3dadd( 824.163, 597.793, 19.0112, 0.3816 ) }
    dend_22 { pt3dadd( 824.33, 598.913, 18.7974, 0.3502 ) }
    dend_22 { pt3dadd( 824.552, 600.035, 18.6073, 0.3248 ) }
    dend_22 { pt3dadd( 824.839, 601.139, 18.4722, 0.3474 ) }
    dend_22 { pt3dadd( 824.965, 602.269, 18.3014, 0.2796 ) }
    dend_22 { pt3dadd( 825.053, 603.346, 17.64, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 77/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 788.407, 551.243, 31.2259, 0.3264 ) }
    dend_19 { pt3dadd( 788.407, 552.416, 31.1276, 0.2786 ) }
    dend_19 { pt3dadd( 788.407, 553.544, 31.131, 0.2818 ) }
    dend_19 { pt3dadd( 788.407, 554.688, 31.1452, 0.2882 ) }
    dend_19 { pt3dadd( 788.407, 555.831, 31.1301, 0.2994 ) }
    dend_19 { pt3dadd( 788.405, 556.972, 31.087, 0.323 ) }
    dend_19 { pt3dadd( 788.097, 558.037, 30.9378, 0.3538 ) }
    dend_19 { pt3dadd( 787.697, 559.107, 30.7723, 0.4724 ) }
    dend_19 { pt3dadd( 787.231, 560.124, 30.7182, 0.3936 ) }
    dend_19 { pt3dadd( 786.688, 561.129, 30.6522, 0.326 ) }
    dend_19 { pt3dadd( 786.118, 562.078, 30.5124, 0.2758 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 88/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 786.729, 532.166, 33.8209, 0.3 ) }
    dend_17 { pt3dadd( 786.348, 532.959, 33.8391, 0.2746 ) }
    dend_17 { pt3dadd( 785.755, 533.897, 33.9363, 0.2746 ) }
    dend_17 { pt3dadd( 784.911, 534.575, 34.1379, 0.2746 ) }
    dend_17 { pt3dadd( 784.004, 535.234, 34.3403, 0.2746 ) }
    dend_17 { pt3dadd( 783.282, 536.104, 34.4576, 0.2746 ) }
    dend_17 { pt3dadd( 782.764, 537.11, 34.4705, 0.2746 ) }
    dend_17 { pt3dadd( 782.338, 538.159, 34.3991, 0.2746 ) }
    dend_17 { pt3dadd( 781.956, 539.231, 34.2877, 0.2746 ) }
    dend_17 { pt3dadd( 781.607, 540.32, 34.1886, 0.2746 ) }
    dend_17 { pt3dadd( 781.298, 541.416, 34.1118, 0.2746 ) }
    dend_17 { pt3dadd( 781.122, 542.535, 34.0634, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_17 { pt3dadd( 781.082, 543.657, 34.1365, 0.2746 ) }
    dend_17 { pt3dadd( 781.072, 544.752, 34.3837, 0.2746 ) }
    dend_17 { pt3dadd( 781.0, 545.859, 34.7281, 0.2746 ) }
    dend_17 { pt3dadd( 780.85, 546.981, 35.091, 0.2748 ) }
    dend_17 { pt3dadd( 780.698, 548.103, 35.4486, 0.275 ) }
    dend_17 { pt3dadd( 780.609, 549.227, 35.786, 0.2754 ) }
    dend_17 { pt3dadd( 780.54, 550.36, 36.0637, 0.2762 ) }
    dend_17 { pt3dadd( 780.416, 551.494, 36.2345, 0.2776 ) }
    dend_17 { pt3dadd( 780.293, 552.624, 36.2944, 0.2802 ) }
    dend_17 { pt3dadd( 780.336, 553.747, 36.2698, 0.285 ) }
    dend_17 { pt3dadd( 780.477, 554.873, 36.2099, 0.2938 ) }
    dend_17 { pt3dadd( 780.438, 555.995, 36.2239, 0.3114 ) }
    dend_17 { pt3dadd( 780.266, 557.099, 36.3686, 0.3374 ) }
    dend_17 { pt3dadd( 780.195, 558.219, 36.6066, 0.4174 ) }
    dend_17 { pt3dadd( 780.231, 559.355, 36.8903, 0.4112 ) }
    dend_17 { pt3dadd( 780.367, 560.487, 37.1753, 0.463 ) }
    dend_17 { pt3dadd( 780.581, 561.61, 37.4338, 0.481 ) }
    dend_17 { pt3dadd( 780.811, 562.724, 37.6849, 0.4384 ) }
    dend_17 { pt3dadd( 781.039, 563.82, 37.9666, 0.4978 ) }
    dend_17 { pt3dadd( 781.28, 564.924, 38.248, 0.3934 ) }
    dend_17 { pt3dadd( 781.511, 566.04, 38.5003, 0.3256 ) }
    dend_17 { pt3dadd( 781.685, 567.163, 38.7229, 0.2748 ) }
    dend_17 { pt3dadd( 781.827, 568.293, 38.9066, 0.2752 ) }
    dend_17 { pt3dadd( 781.938, 569.431, 39.0275, 0.2758 ) }
    dend_17 { pt3dadd( 781.941, 570.569, 39.0578, 0.2768 ) }
    dend_17 { pt3dadd( 781.669, 571.632, 38.9631, 0.2786 ) }
    dend_17 { pt3dadd( 781.194, 572.641, 38.8016, 0.2822 ) }
    dend_17 { pt3dadd( 780.672, 573.645, 38.7044, 0.288 ) }
    dend_17 { pt3dadd( 780.15, 574.648, 38.7075, 0.3008 ) }
    dend_17 { pt3dadd( 779.881, 575.734, 38.7937, 0.3178 ) }
    dend_17 { pt3dadd( 780.015, 576.758, 39.0292, 0.3802 ) }
    dend_17 { pt3dadd( 780.177, 577.87, 39.1986, 0.3464 ) }
    dend_17 { pt3dadd( 779.996, 578.835, 39.0905, 0.3242 ) }
    dend_17 { pt3dadd( 779.521, 579.819, 38.845, 0.3142 ) }
    dend_17 { pt3dadd( 778.688, 580.571, 38.6845, 0.3734 ) }
    dend_17 { pt3dadd( 777.953, 581.444, 38.5311, 0.3338 ) }
    dend_17 { pt3dadd( 777.412, 582.446, 38.3956, 0.3 ) }
    dend_17 { pt3dadd( 776.901, 583.451, 38.2766, 0.2746 ) }
    dend_17 { pt3dadd( 776.347, 584.443, 38.2094, 0.2746 ) }
    dend_17 { pt3dadd( 775.513, 584.923, 38.4118, 0.2746 ) }
    dend_17 { pt3dadd( 774.82, 585.723, 38.668, 0.2746 ) }
    dend_17 { pt3dadd( 774.566, 586.81, 38.8833, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 587.954, 39.055, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 589.098, 39.1804, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 590.242, 39.2518, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 591.386, 39.2675, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 592.53, 39.2683, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 593.674, 39.2694, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 594.818, 39.2711, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 595.962, 39.2734, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 597.106, 39.2764, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 598.25, 39.2809, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 599.394, 39.2871, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 600.538, 39.2955, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 601.682, 39.3075, 0.2746 ) }
    dend_17 { pt3dadd( 774.557, 602.826, 39.3243, 0.2746 ) }
    dend_17 { pt3dadd( 774.526, 603.969, 39.3478, 0.2746 ) }
    dend_17 { pt3dadd( 774.383, 605.102, 39.3798, 0.2746 ) }
    dend_17 { pt3dadd( 774.006, 606.17, 39.426, 0.2746 ) }
    dend_17 { pt3dadd( 773.453, 607.17, 39.4915, 0.2746 ) }
    dend_17 { pt3dadd( 773.116, 608.236, 39.5816, 0.2746 ) }
    dend_17 { pt3dadd( 772.929, 609.362, 39.7009, 0.2746 ) }
    dend_17 { pt3dadd( 772.623, 610.464, 39.8552, 0.2746 ) }
    dend_17 { pt3dadd( 772.098, 611.336, 40.1638, 0.2746 ) }
    dend_17 { pt3dadd( 771.496, 612.262, 40.5168, 0.2746 ) }
    dend_17 { pt3dadd( 770.983, 613.272, 40.9077, 0.2748 ) }
    dend_17 { pt3dadd( 771.029, 614.365, 41.3574, 0.2748 ) }
    dend_17 { pt3dadd( 771.353, 615.376, 41.8877, 0.2752 ) }
    dend_17 { pt3dadd( 771.427, 616.505, 42.3651, 0.2758 ) }
    dend_17 { pt3dadd( 771.943, 617.468, 42.8632, 0.2766 ) }
    dend_17 { pt3dadd( 772.582, 618.293, 43.4118, 0.2782 ) }
    dend_17 { pt3dadd( 772.989, 619.324, 43.9219, 0.2814 ) }
    dend_17 { pt3dadd( 773.653, 620.145, 44.5066, 0.2872 ) }
    dend_17 { pt3dadd( 774.138, 620.978, 45.2802, 0.299 ) }
    dend_17 { pt3dadd( 774.488, 622.02, 46.1084, 0.3144 ) }
    dend_17 { pt3dadd( 774.533, 623.102, 46.9857, 0.374 ) }
    dend_17 { pt3dadd( 774.326, 624.173, 47.9077, 0.335 ) }
    dend_17 { pt3dadd( 774.344, 625.238, 48.8925, 0.3022 ) }
    dend_17 { pt3dadd( 774.555, 626.253, 49.9321, 0.2786 ) }
    dend_17 { pt3dadd( 774.692, 627.197, 51.0387, 0.2818 ) }
    dend_17 { pt3dadd( 774.422, 628.023, 52.2354, 0.2882 ) }
    dend_17 { pt3dadd( 774.216, 628.828, 53.4531, 0.2994 ) }
    dend_17 { pt3dadd( 774.687, 629.773, 54.518, 0.3228 ) }
    dend_17 { pt3dadd( 775.289, 630.724, 55.3899, 0.3534 ) }
    dend_17 { pt3dadd( 775.552, 631.797, 56.1288, 0.4722 ) }
    dend_17 { pt3dadd( 775.53, 632.928, 56.7356, 0.3934 ) }
    dend_17 { pt3dadd( 775.367, 634.055, 57.2289, 0.3254 ) }
    dend_17 { pt3dadd( 775.258, 635.0, 57.7892, 0.2744 ) }
    dend_17 { pt3dadd( 775.279, 635.723, 58.5382, 0.2742 ) }
    dend_17 { pt3dadd( 775.18, 636.78, 59.1956, 0.2742 ) }
    dend_17 { pt3dadd( 775.142, 637.916, 59.6095, 0.2736 ) }
    dend_17 { pt3dadd( 775.156, 639.022, 59.7537, 0.2728 ) }
    dend_17 { pt3dadd( 775.463, 640.042, 59.656, 0.2712 ) }
    dend_17 { pt3dadd( 775.88, 641.035, 59.3886, 0.2684 ) }
    dend_17 { pt3dadd( 776.03, 642.158, 59.171, 0.2626 ) }
    dend_17 { pt3dadd( 775.629, 643.05, 59.2435, 0.2542 ) }
    dend_17 { pt3dadd( 774.555, 643.368, 59.4118, 0.2288 ) }
    dend_17 { pt3dadd( 773.756, 644.185, 59.8615, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 98/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 786.729, 532.166, 33.8209, 0.3 ) }
    dend_16 { pt3dadd( 786.594, 533.093, 35.35, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_16 { pt3dadd( 786.832, 534.141, 35.8613, 0.2752 ) }
    dend_16 { pt3dadd( 786.947, 535.249, 36.0906, 0.2758 ) }
    dend_16 { pt3dadd( 786.841, 536.231, 36.0993, 0.2768 ) }
    dend_16 { pt3dadd( 787.15, 537.286, 36.1721, 0.2786 ) }
    dend_16 { pt3dadd( 787.63, 538.212, 36.4372, 0.2822 ) }
    dend_16 { pt3dadd( 788.256, 539.143, 36.7564, 0.288 ) }
    dend_16 { pt3dadd( 788.941, 540.054, 37.0633, 0.3006 ) }
    dend_16 { pt3dadd( 789.449, 541.065, 37.3808, 0.3178 ) }
    dend_16 { pt3dadd( 789.726, 542.162, 37.7507, 0.3802 ) }
    dend_16 { pt3dadd( 790.053, 543.228, 38.1279, 0.3464 ) }
    dend_16 { pt3dadd( 790.698, 544.16, 38.4784, 0.323 ) }
    dend_16 { pt3dadd( 791.472, 544.986, 38.8567, 0.318 ) }
    dend_16 { pt3dadd( 792.236, 545.801, 39.3008, 0.3508 ) }
    dend_16 { pt3dadd( 792.98, 546.65, 39.7659, 0.4372 ) }
    dend_16 { pt3dadd( 793.478, 547.646, 40.2262, 0.4722 ) }
    dend_16 { pt3dadd( 793.664, 548.754, 40.74, 0.4582 ) }
    dend_16 { pt3dadd( 793.843, 549.843, 41.3364, 0.3594 ) }
    dend_16 { pt3dadd( 794.205, 550.874, 42.0048, 0.3 ) }
    dend_16 { pt3dadd( 794.729, 551.828, 42.7473, 0.2746 ) }
    dend_16 { pt3dadd( 794.994, 552.846, 43.5361, 0.2746 ) }
    dend_16 { pt3dadd( 794.812, 553.928, 44.3484, 0.2746 ) }
    dend_16 { pt3dadd( 794.728, 554.914, 45.246, 0.2746 ) }
    dend_16 { pt3dadd( 795.18, 555.776, 46.2011, 0.2746 ) }
    dend_16 { pt3dadd( 795.955, 556.58, 47.094, 0.2746 ) }
    dend_16 { pt3dadd( 796.586, 557.493, 47.9287, 0.2746 ) }
    dend_16 { pt3dadd( 797.076, 558.448, 48.7948, 0.2746 ) }
    dend_16 { pt3dadd( 797.362, 559.333, 49.7672, 0.2746 ) }
    dend_16 { pt3dadd( 797.718, 560.214, 50.7749, 0.2746 ) }
    dend_16 { pt3dadd( 798.394, 561.082, 51.7345, 0.2746 ) }
    dend_16 { pt3dadd( 799.058, 561.925, 52.6882, 0.2746 ) }
    dend_16 { pt3dadd( 799.552, 562.854, 53.632, 0.2746 ) }
    dend_16 { pt3dadd( 799.891, 563.901, 54.5023, 0.2746 ) }
    dend_16 { pt3dadd( 800.243, 564.948, 55.3, 0.2746 ) }
    dend_16 { pt3dadd( 800.612, 565.944, 56.0944, 0.2746 ) }
    dend_16 { pt3dadd( 800.913, 566.939, 56.9052, 0.2746 ) }
    dend_16 { pt3dadd( 801.068, 568.018, 57.6419, 0.2746 ) }
    dend_16 { pt3dadd( 801.006, 569.151, 58.2344, 0.2746 ) }
    dend_16 { pt3dadd( 800.658, 570.219, 58.7353, 0.2746 ) }
    dend_16 { pt3dadd( 800.398, 571.258, 59.2446, 0.2746 ) }
    dend_16 { pt3dadd( 800.537, 572.324, 59.7598, 0.2744 ) }
    dend_16 { pt3dadd( 800.626, 573.435, 60.1672, 0.2744 ) }
    dend_16 { pt3dadd( 800.249, 574.424, 60.566, 0.2742 ) }
    dend_16 { pt3dadd( 799.885, 575.465, 60.9655, 0.2742 ) }
    dend_16 { pt3dadd( 799.59, 576.563, 61.2662, 0.2736 ) }
    dend_16 { pt3dadd( 799.073, 577.516, 61.5854, 0.2728 ) }
    dend_16 { pt3dadd( 798.336, 578.333, 61.8324, 0.2712 ) }
    dend_16 { pt3dadd( 797.454, 579.021, 62.1001, 0.2684 ) }
    dend_16 { pt3dadd( 796.765, 579.846, 62.4702, 0.2626 ) }
    dend_16 { pt3dadd( 795.787, 580.407, 62.7511, 0.2542 ) }
    dend_16 { pt3dadd( 794.772, 580.861, 63.0874, 0.2288 ) }
    dend_16 { pt3dadd( 794.05, 581.61, 64.12, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 750.407, 522.856, 33.0988, 0.4344 ) }
    dend_8 { pt3dadd( 750.133, 522.942, 32.9034, 0.3546 ) }
    dend_8 { pt3dadd( 749.042, 523.283, 32.7746, 0.331 ) }
    dend_8 { pt3dadd( 747.966, 523.669, 32.6799, 0.3684 ) }
    dend_8 { pt3dadd( 746.913, 524.117, 32.6088, 0.5006 ) }
    dend_8 { pt3dadd( 745.851, 524.542, 32.5461, 0.4404 ) }
    dend_8 { pt3dadd( 744.763, 524.892, 32.4654, 0.4386 ) }
    dend_8 { pt3dadd( 743.667, 525.217, 32.3512, 0.36 ) }
    dend_8 { pt3dadd( 742.59, 525.572, 32.1818, 0.3502 ) }
    dend_8 { pt3dadd( 741.489, 525.802, 31.9542, 0.3576 ) }
    dend_8 { pt3dadd( 740.357, 525.85, 31.719, 0.4794 ) }
    dend_8 { pt3dadd( 739.215, 525.896, 31.533, 0.4062 ) }
    dend_8 { pt3dadd( 738.179, 526.294, 31.3356, 0.3508 ) }
    dend_8 { pt3dadd( 737.14, 526.755, 31.1382, 0.3164 ) }
    dend_8 { pt3dadd( 736.038, 526.966, 31.0394, 0.3776 ) }
    dend_8 { pt3dadd( 734.93, 527.211, 31.001, 0.3416 ) }
    dend_8 { pt3dadd( 733.833, 527.506, 30.9086, 0.3142 ) }
    dend_8 { pt3dadd( 732.745, 527.79, 30.7196, 0.3008 ) }
    dend_8 { pt3dadd( 731.723, 528.281, 30.49, 0.3242 ) }
    dend_8 { pt3dadd( 730.77, 528.911, 30.2495, 0.3624 ) }
    dend_8 { pt3dadd( 729.783, 529.49, 29.9944, 0.4574 ) }
    dend_8 { pt3dadd( 728.826, 530.039, 29.6369, 0.517 ) }
    dend_8 { pt3dadd( 727.886, 530.579, 29.185, 0.5058 ) }
    dend_8 { pt3dadd( 726.887, 531.103, 28.7308, 0.6208 ) }
    dend_8 { pt3dadd( 725.884, 531.646, 28.3086, 0.6312 ) }
    dend_8 { pt3dadd( 724.924, 532.268, 27.9261, 0.7188 ) }
    dend_8 { pt3dadd( 723.961, 532.881, 27.5535, 0.5504 ) }
    dend_8 { pt3dadd( 722.964, 533.371, 27.123, 0.4694 ) }
    dend_8 { pt3dadd( 721.945, 533.796, 26.6284, 0.5714 ) }
    dend_8 { pt3dadd( 720.896, 534.124, 26.0712, 0.453 ) }
    dend_8 { pt3dadd( 719.802, 534.271, 25.4799, 0.3518 ) }
    dend_8 { pt3dadd( 718.705, 534.405, 24.8779, 0.2762 ) }
    dend_8 { pt3dadd( 717.728, 534.933, 24.3114, 0.2776 ) }
    dend_8 { pt3dadd( 717.139, 535.893, 23.8392, 0.2802 ) }
    dend_8 { pt3dadd( 716.829, 536.984, 23.4321, 0.285 ) }
    dend_8 { pt3dadd( 716.65, 538.102, 23.0623, 0.294 ) }
    dend_8 { pt3dadd( 716.662, 539.242, 22.7419, 0.3102 ) }
    dend_8 { pt3dadd( 716.804, 540.376, 22.4727, 0.3426 ) }
    dend_8 { pt3dadd( 716.774, 541.516, 22.2099, 0.3914 ) }
    dend_8 { pt3dadd( 716.361, 542.559, 21.8971, 0.5368 ) }
    dend_8 { pt3dadd( 715.697, 543.476, 21.5622, 0.5396 ) }
    dend_8 { pt3dadd( 714.928, 544.321, 21.243, 0.4678 ) }
    dend_8 { pt3dadd( 714.19, 545.19, 20.9092, 0.4756 ) }
    dend_8 { pt3dadd( 713.593, 546.134, 20.5049, 0.4976 ) }
    dend_8 { pt3dadd( 712.929, 547.044, 20.0665, 0.4996 ) }
    dend_8 { pt3dadd( 711.938, 547.531, 19.5796, 0.4618 ) }
    dend_8 { pt3dadd( 710.834, 547.708, 19.0726, 0.3664 ) }
    dend_8 { pt3dadd( 709.716, 547.838, 18.5665, 0.3124 ) }
    dend_8 { pt3dadd( 708.587, 547.791, 18.0843, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_8 { pt3dadd( 707.461, 547.665, 17.6336, 0.3142 ) }
    dend_8 { pt3dadd( 706.352, 547.415, 17.2174, 0.3736 ) }
    dend_8 { pt3dadd( 705.267, 547.07, 16.8367, 0.3346 ) }
    dend_8 { pt3dadd( 704.257, 546.573, 16.4441, 0.3012 ) }
    dend_8 { pt3dadd( 703.345, 545.952, 16.0082, 0.2762 ) }
    dend_8 { pt3dadd( 702.349, 545.436, 15.5803, 0.2778 ) }
    dend_8 { pt3dadd( 701.311, 544.983, 15.1994, 0.2806 ) }
    dend_8 { pt3dadd( 700.432, 544.29, 14.8435, 0.2854 ) }
    dend_8 { pt3dadd( 699.644, 543.493, 14.5268, 0.2966 ) }
    dend_8 { pt3dadd( 698.835, 542.685, 14.3205, 0.305 ) }
    dend_8 { pt3dadd( 697.935, 541.997, 14.2757, 0.3814 ) }
    dend_8 { pt3dadd( 696.839, 542.087, 14.6829, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 750.407, 522.856, 33.0988, 0.4344 ) }
    dend_7 { pt3dadd( 749.918, 523.941, 33.3136, 0.2814 ) }
    dend_7 { pt3dadd( 749.49, 524.994, 33.2231, 0.287 ) }
    dend_7 { pt3dadd( 749.066, 526.052, 33.1657, 0.2988 ) }
    dend_7 { pt3dadd( 748.51, 527.039, 33.1296, 0.3142 ) }
    dend_7 { pt3dadd( 748.073, 528.065, 33.0798, 0.3734 ) }
    dend_7 { pt3dadd( 747.833, 529.17, 32.9484, 0.3338 ) }
    dend_7 { pt3dadd( 747.357, 530.171, 32.769, 0.3 ) }
    dend_7 { pt3dadd( 746.629, 531.045, 32.5668, 0.2746 ) }
    dend_7 { pt3dadd( 745.848, 531.872, 32.3501, 0.2746 ) }
    dend_7 { pt3dadd( 744.984, 532.612, 32.1404, 0.2746 ) }
    dend_7 { pt3dadd( 744.051, 533.271, 31.9794, 0.2746 ) }
    dend_7 { pt3dadd( 743.114, 533.914, 31.9066, 0.2746 ) }
    dend_7 { pt3dadd( 742.276, 534.433, 31.7372, 0.2746 ) }
    dend_7 { pt3dadd( 741.537, 535.168, 31.5277, 0.2746 ) }
    dend_7 { pt3dadd( 740.803, 536.041, 31.4311, 0.2748 ) }
    dend_7 { pt3dadd( 740.094, 536.928, 31.411, 0.2748 ) }
    dend_7 { pt3dadd( 739.356, 537.784, 31.5224, 0.2752 ) }
    dend_7 { pt3dadd( 738.859, 538.588, 31.9194, 0.2758 ) }
    dend_7 { pt3dadd( 738.85, 539.651, 32.4349, 0.2766 ) }
    dend_7 { pt3dadd( 738.638, 540.689, 33.0411, 0.2782 ) }
    dend_7 { pt3dadd( 738.163, 541.702, 33.6048, 0.2814 ) }
    dend_7 { pt3dadd( 737.782, 542.779, 34.0413, 0.2872 ) }
    dend_7 { pt3dadd( 737.385, 543.847, 34.3347, 0.299 ) }
    dend_7 { pt3dadd( 736.861, 544.859, 34.5775, 0.3146 ) }
    dend_7 { pt3dadd( 736.338, 545.853, 34.8471, 0.3744 ) }
    dend_7 { pt3dadd( 735.834, 546.863, 35.1358, 0.3358 ) }
    dend_7 { pt3dadd( 735.515, 547.94, 35.4631, 0.3036 ) }
    dend_7 { pt3dadd( 735.105, 549.002, 35.7899, 0.2812 ) }
    dend_7 { pt3dadd( 734.486, 549.945, 36.0102, 0.2866 ) }
    dend_7 { pt3dadd( 734.026, 550.989, 36.2261, 0.2972 ) }
    dend_7 { pt3dadd( 734.051, 552.11, 36.4974, 0.3174 ) }
    dend_7 { pt3dadd( 734.132, 553.21, 36.8446, 0.3498 ) }
    dend_7 { pt3dadd( 733.81, 554.247, 37.2602, 0.4342 ) }
    dend_7 { pt3dadd( 733.177, 555.182, 37.6564, 0.473 ) }
    dend_7 { pt3dadd( 732.385, 556.008, 37.9691, 0.4296 ) }
    dend_7 { pt3dadd( 731.551, 556.789, 38.1788, 0.4508 ) }
    dend_7 { pt3dadd( 730.69, 557.542, 38.2973, 0.457 ) }
    dend_7 { pt3dadd( 729.851, 558.321, 38.3454, 0.3988 ) }
    dend_7 { pt3dadd( 729.087, 559.172, 38.3482, 0.3988 ) }
    dend_7 { pt3dadd( 728.307, 560.01, 38.3303, 0.3338 ) }
    dend_7 { pt3dadd( 727.455, 560.772, 38.3023, 0.2994 ) }
    dend_7 { pt3dadd( 726.546, 561.467, 38.2623, 0.2742 ) }
    dend_7 { pt3dadd( 725.571, 562.065, 38.2063, 0.2736 ) }
    dend_7 { pt3dadd( 724.572, 562.622, 38.1312, 0.2728 ) }
    dend_7 { pt3dadd( 723.552, 563.142, 38.0195, 0.2712 ) }
    dend_7 { pt3dadd( 722.539, 563.672, 37.875, 0.2684 ) }
    dend_7 { pt3dadd( 721.688, 564.412, 37.6438, 0.2626 ) }
    dend_7 { pt3dadd( 720.872, 565.183, 37.3439, 0.2542 ) }
    dend_7 { pt3dadd( 719.76, 565.444, 37.0706, 0.2288 ) }
    dend_7 { pt3dadd( 718.815, 565.893, 36.1427, 0.2288 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 765.21, 518.126, 4.7292, 0.4166 ) }
    dend_42 { pt3dadd( 764.378, 519.241, 5.288, 0.4424 ) }
    dend_42 { pt3dadd( 763.701, 520.151, 5.5649, 0.5852 ) }
    dend_42 { pt3dadd( 762.916, 520.978, 5.6101, 0.6262 ) }
    dend_42 { pt3dadd( 761.973, 521.622, 5.5121, 0.6426 ) }
    dend_42 { pt3dadd( 760.944, 522.122, 5.3312, 0.7328 ) }
    dend_42 { pt3dadd( 759.81, 522.263, 5.1095, 0.612 ) }
    dend_42 { pt3dadd( 758.716, 522.061, 4.8203, 0.64 ) }
    dend_42 { pt3dadd( 757.674, 521.953, 4.4194, 0.614 ) }
    dend_42 { pt3dadd( 756.623, 521.917, 3.9563, 0.4866 ) }
    dend_42 { pt3dadd( 755.51, 521.696, 3.5812, 0.4058 ) }
    dend_42 { pt3dadd( 754.466, 521.334, 3.4414, 0.4158 ) }
    dend_42 { pt3dadd( 753.438, 521.047, 3.5227, 0.5764 ) }
    dend_42 { pt3dadd( 752.441, 520.67, 3.7543, 0.6394 ) }
    dend_42 { pt3dadd( 751.303, 520.559, 3.9062, 0.5238 ) }
    dend_42 { pt3dadd( 750.216, 520.363, 3.8498, 0.5244 ) }
    dend_42 { pt3dadd( 749.132, 520.047, 3.6307, 0.3954 ) }
    dend_42 { pt3dadd( 748.038, 519.752, 3.2712, 0.3298 ) }
    dend_42 { pt3dadd( 746.915, 519.794, 2.8017, 0.2824 ) }
    dend_42 { pt3dadd( 745.814, 519.98, 2.2767, 0.2882 ) }
    dend_42 { pt3dadd( 744.836, 520.363, 1.6821, 0.305 ) }
    dend_42 { pt3dadd( 743.817, 520.567, 1.0581, 0.305 ) }
    dend_42 { pt3dadd( 742.673, 520.568, 0.1254, 0.4576 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 86/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 765.21, 518.126, 4.7292, 0.4166 ) }
    dend_41 { pt3dadd( 764.06, 517.899, 5.3298, 0.2962 ) }
    dend_41 { pt3dadd( 762.979, 517.947, 4.4747, 0.3164 ) }
    dend_41 { pt3dadd( 761.875, 518.117, 4.1087, 0.3464 ) }
    dend_41 { pt3dadd( 760.762, 518.334, 3.7353, 0.4354 ) }
    dend_41 { pt3dadd( 759.637, 518.486, 3.3762, 0.4376 ) }
    dend_41 { pt3dadd( 758.571, 518.123, 3.0413, 0.546 ) }
    dend_41 { pt3dadd( 758.143, 517.088, 2.7513, 0.4722 ) }
    dend_41 { pt3dadd( 757.551, 516.118, 2.4862, 0.523 ) }
    dend_41 { pt3dadd( 756.626, 515.449, 2.2666, 0.393 ) }
    dend_41 { pt3dadd( 755.697, 514.857, 2.1792, 0.3252 ) }
    dend_41 { pt3dadd( 754.593, 514.634, 2.0033, 0.2742 ) }
    dend_41 { pt3dadd( 753.654, 514.981, 1.6267, 0.2736 ) }
    dend_41 { pt3dadd( 752.556, 515.215, 1.2235, 0.2728 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_41 { pt3dadd( 751.449, 515.199, 0.7956, 0.2712 ) }
    dend_41 { pt3dadd( 750.31, 515.093, 0.4617, 0.2684 ) }
    dend_41 { pt3dadd( 749.178, 515.262, 0.2197, 0.2626 ) }
    dend_41 { pt3dadd( 748.05, 515.45, 0.0802, 0.2542 ) }
    dend_41 { pt3dadd( 746.906, 515.459, 0.0213, 0.2288 ) }
    dend_41 { pt3dadd( 745.828, 515.073, 0.0, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_20 (entry count 6/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 1069.9, 181.46, 98.8249, 0.2746 ) }
    apic_26 { pt3dadd( 1070.23, 180.755, 98.98, 0.2746 ) }
    apic_26 { pt3dadd( 1070.7, 179.727, 99.2057, 0.2746 ) }
    apic_26 { pt3dadd( 1071.18, 178.699, 99.4809, 0.2746 ) }
    apic_26 { pt3dadd( 1071.65, 177.67, 99.7903, 0.2746 ) }
    apic_26 { pt3dadd( 1072.08, 176.614, 100.095, 0.2746 ) }
    apic_26 { pt3dadd( 1072.5, 175.553, 100.388, 0.2746 ) }
    apic_26 { pt3dadd( 1072.92, 174.491, 100.669, 0.2746 ) }
    apic_26 { pt3dadd( 1073.34, 173.429, 100.942, 0.2746 ) }
    apic_26 { pt3dadd( 1073.64, 172.34, 101.251, 0.2746 ) }
    apic_26 { pt3dadd( 1073.89, 171.248, 101.601, 0.2746 ) }
    apic_26 { pt3dadd( 1074.14, 170.154, 101.98, 0.2746 ) }
    apic_26 { pt3dadd( 1074.39, 169.061, 102.368, 0.2746 ) }
    apic_26 { pt3dadd( 1074.48, 167.924, 102.702, 0.2746 ) }
    apic_26 { pt3dadd( 1074.48, 166.78, 102.955, 0.2746 ) }
    apic_26 { pt3dadd( 1074.48, 165.636, 103.146, 0.2746 ) }
    apic_26 { pt3dadd( 1074.48, 164.492, 103.299, 0.2746 ) }
    apic_26 { pt3dadd( 1074.48, 163.348, 103.44, 0.2746 ) }
    apic_26 { pt3dadd( 1074.49, 162.204, 103.591, 0.2746 ) }
    apic_26 { pt3dadd( 1074.79, 161.127, 103.848, 0.2746 ) }
    apic_26 { pt3dadd( 1075.1, 160.05, 104.19, 0.2746 ) }
    apic_26 { pt3dadd( 1075.41, 158.974, 104.595, 0.2746 ) }
    apic_26 { pt3dadd( 1075.74, 157.901, 105.036, 0.2746 ) }
    apic_26 { pt3dadd( 1076.4, 156.967, 105.419, 0.2746 ) }
    apic_26 { pt3dadd( 1077.06, 156.036, 105.754, 0.2746 ) }
    apic_26 { pt3dadd( 1077.59, 155.042, 106.122, 0.2746 ) }
    apic_26 { pt3dadd( 1078.07, 154.036, 106.545, 0.2746 ) }
    apic_26 { pt3dadd( 1078.54, 153.032, 107.007, 0.2746 ) }
    apic_26 { pt3dadd( 1079.02, 152.027, 107.493, 0.2746 ) }
    apic_26 { pt3dadd( 1079.49, 151.023, 107.989, 0.2746 ) }
    apic_26 { pt3dadd( 1079.97, 150.017, 108.464, 0.2746 ) }
    apic_26 { pt3dadd( 1080.42, 148.969, 108.821, 0.2746 ) }
    apic_26 { pt3dadd( 1080.87, 147.92, 109.071, 0.2746 ) }
    apic_26 { pt3dadd( 1081.32, 146.87, 109.232, 0.2746 ) }
    apic_26 { pt3dadd( 1081.77, 145.821, 109.324, 0.2746 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 41/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 1069.9, 181.46, 98.8249, 0.2746 ) }
    apic_21 { pt3dadd( 1070.74, 181.37, 99.1712, 0.2288 ) }
    apic_21 { pt3dadd( 1071.81, 181.254, 100.533, 0.2746 ) }
    apic_21 { pt3dadd( 1072.89, 181.141, 101.114, 0.2746 ) }
    apic_21 { pt3dadd( 1073.96, 181.024, 101.798, 0.2746 ) }
    apic_21 { pt3dadd( 1075.04, 180.91, 102.539, 0.2746 ) }
    apic_21 { pt3dadd( 1076.09, 180.725, 103.315, 0.2746 ) }
    apic_21 { pt3dadd( 1077.11, 180.473, 104.097, 0.2746 ) }
    apic_21 { pt3dadd( 1078.16, 180.03, 104.729, 0.2746 ) }
    apic_21 { pt3dadd( 1079.18, 179.522, 105.227, 0.2746 ) }
    apic_21 { pt3dadd( 1080.08, 178.813, 105.615, 0.2746 ) }
    apic_21 { pt3dadd( 1080.82, 177.94, 105.947, 0.2746 ) }
    apic_21 { pt3dadd( 1081.33, 176.919, 106.277, 0.2746 ) }
    apic_21 { pt3dadd( 1081.99, 175.985, 106.69, 0.2746 ) }
    apic_21 { pt3dadd( 1082.72, 175.107, 107.243, 0.2746 ) }
    apic_21 { pt3dadd( 1083.44, 174.23, 107.944, 0.2746 ) }
    // Section: apic_18, id: apic_18, parent: apic_14 (entry count 57/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 1109.39, 191.643, 80.6943, 0.2746 ) }
    apic_18 { pt3dadd( 1110.36, 191.449, 80.001, 0.2288 ) }
    apic_18 { pt3dadd( 1111.48, 191.227, 79.5242, 0.2758 ) }
    apic_18 { pt3dadd( 1112.6, 191.002, 79.3318, 0.2768 ) }
    apic_18 { pt3dadd( 1113.72, 190.836, 79.0846, 0.2786 ) }
    apic_18 { pt3dadd( 1114.84, 190.863, 78.7548, 0.2822 ) }
    apic_18 { pt3dadd( 1115.94, 191.008, 78.3432, 0.288 ) }
    apic_18 { pt3dadd( 1117.06, 190.949, 77.9078, 0.3008 ) }
    apic_18 { pt3dadd( 1118.1, 190.51, 77.4889, 0.3178 ) }
    apic_18 { pt3dadd( 1118.95, 189.77, 77.0658, 0.3802 ) }
    apic_18 { pt3dadd( 1119.67, 188.895, 76.585, 0.3464 ) }
    apic_18 { pt3dadd( 1120.47, 188.164, 75.9912, 0.3242 ) }
    apic_18 { pt3dadd( 1121.44, 187.766, 75.2606, 0.3142 ) }
    apic_18 { pt3dadd( 1122.33, 187.346, 74.3764, 0.3738 ) }
    apic_18 { pt3dadd( 1122.72, 186.55, 73.3597, 0.3346 ) }
    apic_18 { pt3dadd( 1122.77, 185.502, 72.3439, 0.3012 ) }
    apic_18 { pt3dadd( 1123.01, 184.423, 71.4204, 0.2766 ) }
    apic_18 { pt3dadd( 1123.8, 183.693, 70.5986, 0.2784 ) }
    apic_18 { pt3dadd( 1124.87, 183.637, 69.8426, 0.2818 ) }
    apic_18 { pt3dadd( 1125.94, 183.934, 69.1188, 0.288 ) }
    apic_18 { pt3dadd( 1127.04, 184.147, 68.4309, 0.3004 ) }
    apic_18 { pt3dadd( 1128.18, 184.199, 67.774, 0.3174 ) }
    apic_18 { pt3dadd( 1129.27, 184.072, 67.0513, 0.3794 ) }
    apic_18 { pt3dadd( 1130.12, 183.736, 66.1441, 0.3448 ) }
    apic_18 { pt3dadd( 1130.93, 183.422, 65.0852, 0.3204 ) }
    apic_18 { pt3dadd( 1131.85, 183.212, 63.978, 0.312 ) }
    apic_18 { pt3dadd( 1132.87, 182.823, 62.9782, 0.347 ) }
    apic_18 { pt3dadd( 1133.83, 182.214, 62.1762, 0.3934 ) }
    apic_18 { pt3dadd( 1134.85, 181.745, 61.5266, 0.5714 ) }
    apic_18 { pt3dadd( 1135.93, 181.553, 60.9745, 0.4528 ) }
    apic_18 { pt3dadd( 1137.05, 181.609, 60.5226, 0.3512 ) }
    apic_18 { pt3dadd( 1138.18, 181.649, 60.1658, 0.2752 ) }
    apic_18 { pt3dadd( 1139.27, 181.303, 59.9144, 0.2758 ) }
    apic_18 { pt3dadd( 1140.32, 180.856, 59.7548, 0.277 ) }
    apic_18 { pt3dadd( 1141.37, 180.406, 59.6753, 0.279 ) }
    apic_18 { pt3dadd( 1142.42, 179.956, 59.6596, 0.2828 ) }
    apic_18 { pt3dadd( 1143.54, 179.734, 59.687, 0.2896 ) }
    apic_18 { pt3dadd( 1144.69, 179.742, 59.7444, 0.3036 ) }
    apic_18 { pt3dadd( 1145.83, 179.816, 59.8251, 0.3232 ) }
    apic_18 { pt3dadd( 1146.96, 179.908, 59.9315, 0.3902 ) }
    apic_18 { pt3dadd( 1148.07, 180.182, 60.1059, 0.3664 ) }
    apic_18 { pt3dadd( 1149.13, 180.563, 60.3548, 0.3544 ) }
    apic_18 { pt3dadd( 1150.18, 180.957, 60.6564, 0.4022 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    apic_18 { pt3dadd( 1151.24, 181.329, 60.9834, 0.382 ) }
    apic_18 { pt3dadd( 1152.36, 181.563, 61.2816, 0.4146 ) }
    apic_18 { pt3dadd( 1153.48, 181.767, 61.5152, 0.3642 ) }
    apic_18 { pt3dadd( 1154.52, 182.127, 61.6162, 0.351 ) }
    apic_18 { pt3dadd( 1155.65, 182.339, 61.7548, 0.3946 ) }
    apic_18 { pt3dadd( 1156.76, 182.372, 62.0623, 0.374 ) }
    apic_18 { pt3dadd( 1157.87, 182.338, 62.5114, 0.3706 ) }
    apic_18 { pt3dadd( 1158.99, 182.266, 63.091, 0.4254 ) }
    apic_18 { pt3dadd( 1159.96, 181.856, 63.8686, 0.457 ) }
    apic_18 { pt3dadd( 1161.01, 181.473, 64.7214, 0.3988 ) }
    apic_18 { pt3dadd( 1162.04, 181.037, 65.6354, 0.3988 ) }
    apic_18 { pt3dadd( 1162.84, 180.416, 66.6971, 0.3338 ) }
    apic_18 { pt3dadd( 1163.56, 179.932, 67.9451, 0.3 ) }
    apic_18 { pt3dadd( 1164.32, 179.688, 69.3395, 0.2746 ) }
    apic_18 { pt3dadd( 1165.12, 179.71, 70.7974, 0.2746 ) }
    apic_18 { pt3dadd( 1165.99, 179.962, 72.2128, 0.2748 ) }
    apic_18 { pt3dadd( 1166.89, 180.282, 73.5059, 0.275 ) }
    apic_18 { pt3dadd( 1167.88, 180.539, 74.5998, 0.2752 ) }
    apic_18 { pt3dadd( 1169.0, 180.624, 75.3959, 0.2758 ) }
    apic_18 { pt3dadd( 1169.99, 181.036, 75.7364, 0.2768 ) }
    apic_18 { pt3dadd( 1171.04, 181.436, 75.8117, 0.2796 ) }
    apic_18 { pt3dadd( 1172.14, 181.755, 75.7814, 0.2796 ) }
    apic_18 { pt3dadd( 1173.19, 182.204, 75.7025, 0.305 ) }
    apic_18 { pt3dadd( 1174.33, 182.376, 75.5656, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 24/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 1109.39, 191.643, 80.6943, 0.2746 ) }
    apic_15 { pt3dadd( 1110.46, 191.082, 81.0236, 0.2746 ) }
    apic_15 { pt3dadd( 1111.45, 190.559, 81.4271, 0.2746 ) }
    apic_15 { pt3dadd( 1112.44, 190.036, 81.8938, 0.2746 ) }
    apic_15 { pt3dadd( 1113.4, 189.46, 82.4096, 0.2746 ) }
    apic_15 { pt3dadd( 1114.32, 188.838, 82.9581, 0.2746 ) }
    apic_15 { pt3dadd( 1115.24, 188.207, 83.5176, 0.2746 ) }
    apic_15 { pt3dadd( 1116.15, 187.571, 84.065, 0.2748 ) }
    apic_15 { pt3dadd( 1116.77, 186.634, 84.5743, 0.2748 ) }
    apic_15 { pt3dadd( 1117.32, 185.651, 85.0349, 0.2752 ) }
    apic_15 { pt3dadd( 1117.87, 184.666, 85.4501, 0.2758 ) }
    apic_15 { pt3dadd( 1118.31, 183.619, 85.8133, 0.2766 ) }
    apic_15 { pt3dadd( 1118.42, 182.481, 86.0972, 0.2782 ) }
    apic_15 { pt3dadd( 1118.67, 181.382, 86.2621, 0.2814 ) }
    apic_15 { pt3dadd( 1119.14, 180.412, 86.2977, 0.287 ) }
    apic_15 { pt3dadd( 1119.91, 179.662, 86.539, 0.2988 ) }
    apic_15 { pt3dadd( 1120.68, 178.888, 86.9501, 0.3142 ) }
    apic_15 { pt3dadd( 1121.43, 178.084, 87.4854, 0.3734 ) }
    apic_15 { pt3dadd( 1122.2, 177.395, 88.1829, 0.3338 ) }
    apic_15 { pt3dadd( 1122.95, 176.583, 88.9062, 0.3 ) }
    apic_15 { pt3dadd( 1123.93, 176.145, 89.6473, 0.2746 ) }
    apic_15 { pt3dadd( 1124.97, 175.961, 90.3577, 0.2746 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 46/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 1083.14, 187.365, 86.9221, 0.2748 ) }
    apic_13 { pt3dadd( 1083.81, 186.485, 87.043, 0.2752 ) }
    apic_13 { pt3dadd( 1084.4, 185.521, 87.1198, 0.2758 ) }
    apic_13 { pt3dadd( 1084.89, 184.502, 87.0769, 0.2766 ) }
    apic_13 { pt3dadd( 1084.87, 183.593, 86.8322, 0.2782 ) }
    apic_13 { pt3dadd( 1084.18, 182.781, 86.4548, 0.2814 ) }
    apic_13 { pt3dadd( 1083.66, 181.807, 86.0838, 0.287 ) }
    apic_13 { pt3dadd( 1083.61, 180.693, 85.7245, 0.2988 ) }
    apic_13 { pt3dadd( 1083.87, 179.593, 85.3782, 0.3142 ) }
    apic_13 { pt3dadd( 1084.23, 178.517, 85.0752, 0.3734 ) }
    apic_13 { pt3dadd( 1084.52, 177.419, 84.8296, 0.3338 ) }
    apic_13 { pt3dadd( 1084.62, 176.293, 84.6185, 0.3 ) }
    apic_13 { pt3dadd( 1084.66, 175.159, 84.4402, 0.2746 ) }
    apic_13 { pt3dadd( 1084.79, 174.025, 84.3259, 0.2746 ) }
    apic_13 { pt3dadd( 1084.95, 172.896, 84.3105, 0.2746 ) }
    apic_13 { pt3dadd( 1085.03, 171.796, 84.4382, 0.2746 ) }
    apic_13 { pt3dadd( 1084.94, 170.713, 84.691, 0.2748 ) }
    apic_13 { pt3dadd( 1084.74, 169.607, 84.9467, 0.2748 ) }
    apic_13 { pt3dadd( 1084.46, 168.51, 85.092, 0.2752 ) }
    apic_13 { pt3dadd( 1083.96, 167.512, 85.1077, 0.2758 ) }
    apic_13 { pt3dadd( 1083.48, 166.488, 85.0584, 0.2766 ) }
    apic_13 { pt3dadd( 1083.29, 165.377, 85.02, 0.2786 ) }
    apic_13 { pt3dadd( 1083.26, 164.245, 85.027, 0.2818 ) }
    apic_13 { pt3dadd( 1083.22, 163.113, 85.0147, 0.2882 ) }
    apic_13 { pt3dadd( 1083.05, 162.004, 84.9324, 0.2994 ) }
    apic_13 { pt3dadd( 1082.77, 160.911, 84.8221, 0.3228 ) }
    apic_13 { pt3dadd( 1082.55, 159.792, 84.7378, 0.3534 ) }
    apic_13 { pt3dadd( 1082.52, 158.652, 84.6992, 0.4724 ) }
    apic_13 { pt3dadd( 1082.57, 157.51, 84.7092, 0.3934 ) }
    apic_13 { pt3dadd( 1082.56, 156.369, 84.7655, 0.3254 ) }
    apic_13 { pt3dadd( 1082.5, 155.226, 84.8571, 0.2746 ) }
    apic_13 { pt3dadd( 1082.57, 154.088, 84.9708, 0.2748 ) }
    apic_13 { pt3dadd( 1082.87, 152.991, 85.0998, 0.2748 ) }
    apic_13 { pt3dadd( 1083.54, 152.087, 85.2597, 0.2752 ) }
    apic_13 { pt3dadd( 1084.34, 151.324, 85.5207, 0.2758 ) }
    apic_13 { pt3dadd( 1084.91, 150.399, 85.8794, 0.2766 ) }
    apic_13 { pt3dadd( 1085.39, 149.379, 86.2546, 0.2782 ) }
    apic_13 { pt3dadd( 1085.78, 148.308, 86.5841, 0.2814 ) }
    apic_13 { pt3dadd( 1086.11, 147.213, 86.8454, 0.287 ) }
    apic_13 { pt3dadd( 1086.54, 146.159, 87.061, 0.2988 ) }
    apic_13 { pt3dadd( 1087.23, 145.265, 87.2374, 0.3142 ) }
    apic_13 { pt3dadd( 1088.24, 144.751, 87.3247, 0.3734 ) }
    apic_13 { pt3dadd( 1089.34, 144.443, 87.3933, 0.3338 ) }
    apic_13 { pt3dadd( 1090.36, 143.939, 87.4804, 0.3 ) }
    apic_13 { pt3dadd( 1091.24, 143.229, 87.5171, 0.2746 ) }
    apic_13 { pt3dadd( 1091.99, 142.379, 87.5162, 0.2746 ) }
    apic_13 { pt3dadd( 1092.6, 141.413, 87.5409, 0.2746 ) }
    apic_13 { pt3dadd( 1093.09, 140.386, 87.6436, 0.2746 ) }
    apic_13 { pt3dadd( 1093.42, 139.313, 87.8447, 0.2746 ) }
    apic_13 { pt3dadd( 1093.52, 138.201, 88.1227, 0.2746 ) }
    apic_13 { pt3dadd( 1093.49, 137.075, 88.4386, 0.2746 ) }
    apic_13 { pt3dadd( 1093.63, 135.945, 88.7331, 0.2746 ) }
    apic_13 { pt3dadd( 1093.94, 134.846, 88.9582, 0.2746 ) }
    apic_13 { pt3dadd( 1094.27, 133.752, 89.0918, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    apic_13 { pt3dadd( 1094.53, 132.645, 89.1458, 0.2746 ) }
    apic_13 { pt3dadd( 1094.74, 131.52, 89.2063, 0.2746 ) }
    apic_13 { pt3dadd( 1094.93, 130.397, 89.315, 0.2746 ) }
    apic_13 { pt3dadd( 1094.95, 129.255, 89.4516, 0.2746 ) }
    apic_13 { pt3dadd( 1094.61, 128.168, 89.6126, 0.2746 ) }
    apic_13 { pt3dadd( 1094.09, 127.153, 89.8377, 0.2746 ) }
    apic_13 { pt3dadd( 1093.61, 126.14, 90.1547, 0.2746 ) }
    apic_13 { pt3dadd( 1093.26, 125.078, 90.5341, 0.2746 ) }
    apic_13 { pt3dadd( 1092.99, 123.984, 90.9454, 0.2746 ) }
    apic_13 { pt3dadd( 1092.67, 122.893, 91.3472, 0.2746 ) }
    apic_13 { pt3dadd( 1092.27, 121.823, 91.7031, 0.2746 ) }
    apic_13 { pt3dadd( 1091.81, 120.781, 92.0545, 0.2746 ) }
    apic_13 { pt3dadd( 1091.33, 119.783, 92.4546, 0.2746 ) }
    apic_13 { pt3dadd( 1090.9, 118.771, 92.9001, 0.2746 ) }
    apic_13 { pt3dadd( 1090.46, 117.729, 93.3304, 0.2746 ) }
    apic_13 { pt3dadd( 1089.78, 116.81, 93.6972, 0.2746 ) }
    apic_13 { pt3dadd( 1088.86, 116.14, 94.0092, 0.2746 ) }
    apic_13 { pt3dadd( 1087.95, 115.459, 94.3197, 0.2746 ) }
    apic_13 { pt3dadd( 1087.15, 114.665, 94.6576, 0.2746 ) }
    apic_13 { pt3dadd( 1086.36, 113.84, 94.9838, 0.2746 ) }
    apic_13 { pt3dadd( 1085.8, 112.898, 95.3898, 0.2746 ) }
    apic_13 { pt3dadd( 1085.26, 111.913, 95.8196, 0.2746 ) }
    apic_13 { pt3dadd( 1084.61, 110.97, 96.1786, 0.2746 ) }
    apic_13 { pt3dadd( 1084.13, 109.933, 96.493, 0.2746 ) }
    apic_13 { pt3dadd( 1083.74, 108.868, 96.8013, 0.2746 ) }
    apic_13 { pt3dadd( 1083.63, 107.81, 97.1998, 0.2746 ) }
    apic_13 { pt3dadd( 1083.27, 106.729, 97.5402, 0.2746 ) }
    apic_13 { pt3dadd( 1082.9, 105.651, 97.8295, 0.2746 ) }
    apic_13 { pt3dadd( 1082.53, 104.573, 98.0722, 0.2746 ) }
    apic_13 { pt3dadd( 1082.16, 103.494, 98.2598, 0.2746 ) }
    apic_13 { pt3dadd( 1081.68, 102.456, 98.3475, 0.2748 ) }
    apic_13 { pt3dadd( 1081.18, 101.427, 98.3461, 0.2748 ) }
    apic_13 { pt3dadd( 1080.69, 100.398, 98.2887, 0.2752 ) }
    apic_13 { pt3dadd( 1080.13, 99.401, 98.1739, 0.2758 ) }
    apic_13 { pt3dadd( 1079.56, 98.4135, 98.0129, 0.2766 ) }
    apic_13 { pt3dadd( 1078.99, 97.4252, 97.8205, 0.2782 ) }
    apic_13 { pt3dadd( 1078.41, 96.4377, 97.6116, 0.2814 ) }
    apic_13 { pt3dadd( 1077.87, 95.442, 97.3672, 0.287 ) }
    apic_13 { pt3dadd( 1077.33, 94.4464, 97.1001, 0.2988 ) }
    apic_13 { pt3dadd( 1076.8, 93.4499, 96.826, 0.3142 ) }
    apic_13 { pt3dadd( 1076.32, 92.419, 96.5636, 0.3734 ) }
    apic_13 { pt3dadd( 1076.32, 91.275, 96.3701, 0.3338 ) }
    apic_13 { pt3dadd( 1076.32, 90.131, 96.2346, 0.3 ) }
    apic_13 { pt3dadd( 1076.32, 88.987, 96.1447, 0.2746 ) }
    apic_13 { pt3dadd( 1076.28, 87.8434, 96.0831, 0.2746 ) }
    apic_13 { pt3dadd( 1076.02, 86.7293, 96.0322, 0.2746 ) }
    apic_13 { pt3dadd( 1075.76, 85.6157, 95.9745, 0.2744 ) }
    apic_13 { pt3dadd( 1075.5, 84.5021, 95.8964, 0.2744 ) }
    apic_13 { pt3dadd( 1075.24, 83.3886, 95.7944, 0.2742 ) }
    apic_13 { pt3dadd( 1075.03, 82.2678, 95.6337, 0.2742 ) }
    apic_13 { pt3dadd( 1074.89, 81.1526, 95.3893, 0.2736 ) }
    apic_13 { pt3dadd( 1074.75, 80.0373, 95.0888, 0.2728 ) }
    apic_13 { pt3dadd( 1074.61, 78.922, 94.7584, 0.2712 ) }
    apic_13 { pt3dadd( 1074.46, 77.8046, 94.4294, 0.2684 ) }
    apic_13 { pt3dadd( 1074.24, 76.6824, 94.1886, 0.2626 ) }
    apic_13 { pt3dadd( 1074.02, 75.5606, 94.0299, 0.2542 ) }
    apic_13 { pt3dadd( 1073.79, 74.4389, 93.9386, 0.2288 ) }
    apic_13 { pt3dadd( 1073.57, 73.3171, 93.8843, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 58/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 1083.14, 187.365, 86.9221, 0.2748 ) }
    apic_8 { pt3dadd( 1083.78, 186.361, 87.6991, 0.2746 ) }
    apic_8 { pt3dadd( 1084.37, 185.421, 88.6928, 0.2746 ) }
    apic_8 { pt3dadd( 1084.97, 184.481, 89.1153, 0.2746 ) }
    apic_8 { pt3dadd( 1085.7, 183.639, 89.6185, 0.2746 ) }
    apic_8 { pt3dadd( 1086.54, 182.913, 90.1734, 0.2746 ) }
    apic_8 { pt3dadd( 1087.38, 182.187, 90.7539, 0.2746 ) }
    apic_8 { pt3dadd( 1088.22, 181.46, 91.3346, 0.2746 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 786.118, 562.078, 30.5124, 0.2758 ) }
    dend_21 { pt3dadd( 786.809, 562.988, 30.4083, 0.2768 ) }
    dend_21 { pt3dadd( 787.501, 563.897, 30.3372, 0.2786 ) }
    dend_21 { pt3dadd( 788.099, 564.853, 30.3674, 0.2822 ) }
    dend_21 { pt3dadd( 788.65, 565.846, 30.4564, 0.2882 ) }
    dend_21 { pt3dadd( 789.548, 566.456, 30.6718, 0.2998 ) }
    dend_21 { pt3dadd( 790.609, 566.846, 30.7737, 0.3232 ) }
    dend_21 { pt3dadd( 791.693, 567.167, 30.7594, 0.3548 ) }
    dend_21 { pt3dadd( 792.791, 567.485, 30.718, 0.4744 ) }
    dend_21 { pt3dadd( 793.81, 567.808, 30.7692, 0.3968 ) }
    dend_21 { pt3dadd( 794.715, 568.492, 30.6919, 0.3322 ) }
    dend_21 { pt3dadd( 795.519, 569.198, 30.4265, 0.287 ) }
    dend_21 { pt3dadd( 796.396, 569.874, 30.0888, 0.2988 ) }
    dend_21 { pt3dadd( 797.296, 570.569, 29.7629, 0.3142 ) }
    dend_21 { pt3dadd( 798.227, 571.227, 29.4608, 0.3734 ) }
    dend_21 { pt3dadd( 799.214, 571.78, 29.171, 0.3338 ) }
    dend_21 { pt3dadd( 800.204, 572.35, 28.9632, 0.3 ) }
    dend_21 { pt3dadd( 801.15, 572.977, 28.894, 0.2746 ) }
    dend_21 { pt3dadd( 802.162, 573.495, 28.9058, 0.2746 ) }
    dend_21 { pt3dadd( 803.247, 573.861, 28.9268, 0.2748 ) }
    dend_21 { pt3dadd( 804.313, 574.267, 28.9237, 0.2748 ) }
    dend_21 { pt3dadd( 805.304, 574.823, 28.8674, 0.2752 ) }
    dend_21 { pt3dadd( 806.362, 575.257, 28.791, 0.2758 ) }
    dend_21 { pt3dadd( 807.41, 575.702, 28.7347, 0.2766 ) }
    dend_21 { pt3dadd( 808.362, 576.322, 28.7067, 0.2782 ) }
    dend_21 { pt3dadd( 809.324, 576.938, 28.6541, 0.2814 ) }
    dend_21 { pt3dadd( 810.264, 577.558, 28.4967, 0.287 ) }
    dend_21 { pt3dadd( 811.133, 578.248, 28.2279, 0.2988 ) }
    dend_21 { pt3dadd( 812.082, 578.874, 27.9348, 0.3144 ) }
    dend_21 { pt3dadd( 813.144, 579.285, 27.6421, 0.374 ) }
    dend_21 { pt3dadd( 814.154, 579.75, 27.2757, 0.3348 ) }
    dend_21 { pt3dadd( 815.153, 580.283, 26.9099, 0.3016 ) }
    dend_21 { pt3dadd( 816.177, 580.765, 26.5612, 0.2776 ) }
    dend_21 { pt3dadd( 817.116, 581.383, 26.212, 0.2802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_21 { pt3dadd( 817.987, 582.117, 25.8983, 0.2854 ) }
    dend_21 { pt3dadd( 818.878, 582.83, 25.6332, 0.294 ) }
    dend_21 { pt3dadd( 819.85, 583.421, 25.4017, 0.3114 ) }
    dend_21 { pt3dadd( 820.829, 583.986, 25.1905, 0.3386 ) }
    dend_21 { pt3dadd( 821.558, 584.83, 25.0141, 0.4136 ) }
    dend_21 { pt3dadd( 821.898, 585.92, 24.8935, 0.4338 ) }
    dend_21 { pt3dadd( 822.242, 586.996, 24.8287, 0.3616 ) }
    dend_21 { pt3dadd( 822.996, 587.802, 24.8266, 0.304 ) }
    dend_21 { pt3dadd( 824.072, 588.112, 24.8694, 0.2818 ) }
    dend_21 { pt3dadd( 825.206, 588.198, 24.9182, 0.288 ) }
    dend_21 { pt3dadd( 826.229, 588.638, 24.9471, 0.2994 ) }
    dend_21 { pt3dadd( 827.05, 589.427, 24.9473, 0.3216 ) }
    dend_21 { pt3dadd( 827.707, 590.354, 24.9373, 0.3574 ) }
    dend_21 { pt3dadd( 828.256, 591.354, 24.9048, 0.4496 ) }
    dend_21 { pt3dadd( 829.053, 592.039, 24.8753, 0.4952 ) }
    dend_21 { pt3dadd( 830.098, 592.454, 24.8884, 0.5016 ) }
    dend_21 { pt3dadd( 830.986, 593.157, 24.9555, 0.4354 ) }
    dend_21 { pt3dadd( 831.734, 594.005, 25.0842, 0.4626 ) }
    dend_21 { pt3dadd( 832.404, 594.917, 25.1998, 0.4722 ) }
    dend_21 { pt3dadd( 833.121, 595.795, 25.2547, 0.4582 ) }
    dend_21 { pt3dadd( 833.967, 596.546, 25.3149, 0.3594 ) }
    dend_21 { pt3dadd( 834.931, 597.104, 25.4465, 0.3 ) }
    dend_21 { pt3dadd( 835.938, 597.595, 25.6154, 0.2746 ) }
    dend_21 { pt3dadd( 836.917, 598.176, 25.7296, 0.2746 ) }
    dend_21 { pt3dadd( 837.796, 598.895, 25.7871, 0.2746 ) }
    dend_21 { pt3dadd( 838.573, 599.732, 25.8316, 0.2746 ) }
    dend_21 { pt3dadd( 839.343, 600.574, 25.8609, 0.2746 ) }
    dend_21 { pt3dadd( 840.207, 601.31, 25.8436, 0.2746 ) }
    dend_21 { pt3dadd( 841.22, 601.814, 25.7686, 0.2746 ) }
    dend_21 { pt3dadd( 842.325, 602.084, 25.651, 0.2746 ) }
    dend_21 { pt3dadd( 843.453, 602.201, 25.482, 0.2746 ) }
    dend_21 { pt3dadd( 844.569, 602.364, 25.2687, 0.2746 ) }
    dend_21 { pt3dadd( 845.486, 602.953, 25.066, 0.2746 ) }
    dend_21 { pt3dadd( 846.299, 603.729, 24.8493, 0.2746 ) }
    dend_21 { pt3dadd( 847.224, 604.362, 24.5881, 0.2746 ) }
    dend_21 { pt3dadd( 848.112, 605.055, 24.335, 0.2746 ) }
    dend_21 { pt3dadd( 848.842, 605.925, 24.1262, 0.2746 ) }
    dend_21 { pt3dadd( 849.452, 606.892, 23.9666, 0.2746 ) }
    dend_21 { pt3dadd( 850.081, 607.846, 23.8571, 0.2746 ) }
    dend_21 { pt3dadd( 850.831, 608.697, 23.7739, 0.2748 ) }
    dend_21 { pt3dadd( 851.729, 609.369, 23.6863, 0.2748 ) }
    dend_21 { pt3dadd( 852.733, 609.89, 23.6338, 0.275 ) }
    dend_21 { pt3dadd( 853.645, 610.489, 23.7261, 0.2754 ) }
    dend_21 { pt3dadd( 854.258, 611.342, 23.9749, 0.2762 ) }
    dend_21 { pt3dadd( 854.613, 612.399, 24.2467, 0.2778 ) }
    dend_21 { pt3dadd( 854.999, 613.472, 24.4627, 0.2806 ) }
    dend_21 { pt3dadd( 855.387, 614.548, 24.61, 0.2854 ) }
    dend_21 { pt3dadd( 855.593, 615.668, 24.6839, 0.2944 ) }
    dend_21 { pt3dadd( 855.743, 616.801, 24.6878, 0.3124 ) }
    dend_21 { pt3dadd( 856.091, 617.863, 24.5975, 0.3404 ) }
    dend_21 { pt3dadd( 856.597, 618.83, 24.4042, 0.4172 ) }
    dend_21 { pt3dadd( 857.18, 619.793, 24.235, 0.4402 ) }
    dend_21 { pt3dadd( 857.907, 620.602, 24.2309, 0.3732 ) }
    dend_21 { pt3dadd( 858.818, 621.145, 24.3894, 0.3252 ) }
    dend_21 { pt3dadd( 859.838, 621.615, 24.574, 0.3236 ) }
    dend_21 { pt3dadd( 860.779, 622.176, 24.6169, 0.355 ) }
    dend_21 { pt3dadd( 861.728, 622.79, 24.5921, 0.4748 ) }
    dend_21 { pt3dadd( 862.734, 623.172, 24.4274, 0.3978 ) }
    dend_21 { pt3dadd( 863.825, 623.493, 24.2877, 0.3336 ) }
    dend_21 { pt3dadd( 864.816, 623.986, 24.3111, 0.291 ) }
    dend_21 { pt3dadd( 865.922, 624.151, 24.3019, 0.2994 ) }
    dend_21 { pt3dadd( 867.055, 624.075, 24.4145, 0.3474 ) }
    dend_21 { pt3dadd( 868.067, 623.653, 24.6709, 0.2796 ) }
    dend_21 { pt3dadd( 869.097, 623.251, 25.48, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 64/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 786.118, 562.078, 30.5124, 0.2758 ) }
    dend_20 { pt3dadd( 785.435, 563.029, 29.6979, 0.2776 ) }
    dend_20 { pt3dadd( 784.946, 564.057, 30.2767, 0.2802 ) }
    dend_20 { pt3dadd( 784.65, 565.157, 30.5158, 0.285 ) }
    dend_20 { pt3dadd( 784.365, 566.217, 30.919, 0.2938 ) }
    dend_20 { pt3dadd( 784.126, 567.268, 31.4751, 0.3112 ) }
    dend_20 { pt3dadd( 783.976, 568.344, 32.1376, 0.3382 ) }
    dend_20 { pt3dadd( 784.12, 569.466, 32.8084, 0.413 ) }
    dend_20 { pt3dadd( 784.267, 570.595, 33.4452, 0.4328 ) }
    dend_20 { pt3dadd( 784.222, 571.672, 34.1555, 0.3594 ) }
    dend_20 { pt3dadd( 783.981, 572.637, 34.9868, 0.3 ) }
    dend_20 { pt3dadd( 783.74, 573.698, 35.8288, 0.2746 ) }
    dend_20 { pt3dadd( 783.284, 574.701, 36.6212, 0.2746 ) }
    dend_20 { pt3dadd( 782.403, 575.294, 37.4424, 0.2746 ) }
    dend_20 { pt3dadd( 781.682, 575.778, 38.3944, 0.2746 ) }
    dend_20 { pt3dadd( 780.925, 576.306, 39.3162, 0.2746 ) }
    dend_20 { pt3dadd( 779.99, 576.631, 40.0417, 0.2746 ) }
    dend_20 { pt3dadd( 779.096, 576.267, 40.7585, 0.2746 ) }
    dend_20 { pt3dadd( 778.101, 575.891, 41.2602, 0.2746 ) }
    dend_20 { pt3dadd( 777.123, 576.259, 41.538, 0.2746 ) }
    dend_20 { pt3dadd( 776.586, 577.174, 41.7917, 0.2746 ) }
    dend_20 { pt3dadd( 776.441, 578.206, 42.1739, 0.2746 ) }
    dend_20 { pt3dadd( 776.191, 579.191, 42.6835, 0.2746 ) }
    dend_20 { pt3dadd( 775.558, 580.072, 43.1351, 0.2746 ) }
    dend_20 { pt3dadd( 774.836, 580.906, 43.423, 0.2746 ) }
    dend_20 { pt3dadd( 774.323, 581.886, 43.7038, 0.2746 ) }
    dend_20 { pt3dadd( 773.943, 582.893, 44.0787, 0.2746 ) }
    dend_20 { pt3dadd( 773.313, 583.807, 44.4522, 0.2746 ) }
    dend_20 { pt3dadd( 772.548, 584.651, 44.7703, 0.2746 ) }
    dend_20 { pt3dadd( 771.665, 585.328, 45.1651, 0.2746 ) }
    dend_20 { pt3dadd( 770.749, 585.949, 45.6568, 0.2746 ) }
    dend_20 { pt3dadd( 769.834, 586.602, 46.167, 0.2746 ) }
    dend_20 { pt3dadd( 768.916, 587.256, 46.6822, 0.2746 ) }
    dend_20 { pt3dadd( 767.994, 587.795, 47.2858, 0.2746 ) }
    dend_20 { pt3dadd( 766.983, 588.216, 47.9251, 0.2746 ) }
    dend_20 { pt3dadd( 765.901, 588.564, 48.4786, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_20 { pt3dadd( 765.026, 589.272, 48.9572, 0.2746 ) }
    dend_20 { pt3dadd( 764.328, 590.041, 49.5382, 0.2746 ) }
    dend_20 { pt3dadd( 763.749, 590.942, 50.1788, 0.2746 ) }
    dend_20 { pt3dadd( 762.975, 591.78, 50.7329, 0.2746 ) }
    dend_20 { pt3dadd( 762.185, 592.595, 51.2691, 0.2744 ) }
    dend_20 { pt3dadd( 761.397, 593.384, 51.8406, 0.2744 ) }
    dend_20 { pt3dadd( 760.85, 594.281, 52.4902, 0.2742 ) }
    dend_20 { pt3dadd( 760.414, 595.214, 53.1896, 0.2742 ) }
    dend_20 { pt3dadd( 760.411, 596.336, 53.8182, 0.2736 ) }
    dend_20 { pt3dadd( 760.411, 597.46, 54.3858, 0.2728 ) }
    dend_20 { pt3dadd( 760.411, 598.601, 54.8419, 0.2712 ) }
    dend_20 { pt3dadd( 760.411, 599.745, 55.1673, 0.2684 ) }
    dend_20 { pt3dadd( 760.411, 600.889, 55.3876, 0.2626 ) }
    dend_20 { pt3dadd( 760.411, 602.022, 55.5954, 0.2542 ) }
    dend_20 { pt3dadd( 760.411, 603.149, 55.818, 0.2288 ) }
    dend_20 { pt3dadd( 760.411, 604.288, 56.282, 0.2288 ) }
    // Section: apic_28, id: apic_28, parent: apic_26 (entry count 16/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 1081.77, 145.821, 109.324, 0.2746 ) }
    apic_28 { pt3dadd( 1081.66, 145.653, 109.246, 0.2746 ) }
    apic_28 { pt3dadd( 1081.23, 144.685, 109.008, 0.2746 ) }
    apic_28 { pt3dadd( 1081.07, 143.557, 108.823, 0.2746 ) }
    apic_28 { pt3dadd( 1081.29, 142.45, 108.731, 0.2746 ) }
    apic_28 { pt3dadd( 1081.85, 141.48, 108.75, 0.2746 ) }
    apic_28 { pt3dadd( 1082.32, 140.473, 108.765, 0.2746 ) }
    apic_28 { pt3dadd( 1082.37, 139.471, 108.681, 0.2746 ) }
    apic_28 { pt3dadd( 1082.05, 138.379, 108.72, 0.2746 ) }
    apic_28 { pt3dadd( 1081.71, 137.296, 108.848, 0.2746 ) }
    apic_28 { pt3dadd( 1081.47, 136.184, 109.023, 0.2746 ) }
    apic_28 { pt3dadd( 1081.43, 135.059, 109.292, 0.2746 ) }
    apic_28 { pt3dadd( 1081.43, 133.994, 109.729, 0.2746 ) }
    apic_28 { pt3dadd( 1081.43, 132.951, 110.291, 0.2746 ) }
    apic_28 { pt3dadd( 1081.45, 131.838, 110.823, 0.2746 ) }
    apic_28 { pt3dadd( 1081.52, 130.7, 111.249, 0.2746 ) }
    apic_28 { pt3dadd( 1081.8, 129.605, 111.571, 0.2746 ) }
    apic_28 { pt3dadd( 1082.3, 128.579, 111.79, 0.2746 ) }
    apic_28 { pt3dadd( 1082.72, 127.517, 111.925, 0.2746 ) }
    apic_28 { pt3dadd( 1083.04, 126.418, 112.018, 0.2746 ) }
    apic_28 { pt3dadd( 1083.45, 125.359, 112.125, 0.2746 ) }
    apic_28 { pt3dadd( 1084.08, 124.432, 112.274, 0.2746 ) }
    apic_28 { pt3dadd( 1084.9, 123.638, 112.412, 0.2746 ) }
    apic_28 { pt3dadd( 1085.73, 122.876, 112.544, 0.2746 ) }
    apic_28 { pt3dadd( 1086.7, 122.343, 112.754, 0.2746 ) }
    apic_28 { pt3dadd( 1087.68, 121.869, 113.037, 0.2746 ) }
    apic_28 { pt3dadd( 1088.58, 121.304, 113.234, 0.2746 ) }
    apic_28 { pt3dadd( 1089.23, 120.67, 113.159, 0.2746 ) }
    apic_28 { pt3dadd( 1089.69, 119.807, 113.022, 0.2746 ) }
    apic_28 { pt3dadd( 1090.29, 118.912, 113.109, 0.2746 ) }
    apic_28 { pt3dadd( 1090.79, 118.007, 113.442, 0.2746 ) }
    apic_28 { pt3dadd( 1091.09, 116.969, 113.951, 0.2746 ) }
    apic_28 { pt3dadd( 1091.54, 116.05, 114.634, 0.2746 ) }
    apic_28 { pt3dadd( 1091.97, 115.155, 115.455, 0.2746 ) }
    apic_28 { pt3dadd( 1092.04, 114.105, 116.237, 0.2746 ) }
    apic_28 { pt3dadd( 1091.79, 113.014, 116.851, 0.2746 ) }
    apic_28 { pt3dadd( 1091.3, 111.989, 117.281, 0.2744 ) }
    apic_28 { pt3dadd( 1090.8, 110.964, 117.555, 0.2744 ) }
    apic_28 { pt3dadd( 1090.49, 109.902, 117.608, 0.2742 ) }
    apic_28 { pt3dadd( 1090.31, 108.82, 117.473, 0.2742 ) }
    apic_28 { pt3dadd( 1090.02, 107.754, 117.391, 0.2736 ) }
    apic_28 { pt3dadd( 1089.33, 106.945, 117.453, 0.2728 ) }
    apic_28 { pt3dadd( 1088.42, 106.381, 117.391, 0.2712 ) }
    apic_28 { pt3dadd( 1087.76, 105.485, 117.267, 0.2684 ) }
    apic_28 { pt3dadd( 1087.26, 104.538, 117.332, 0.2626 ) }
    apic_28 { pt3dadd( 1086.39, 103.816, 117.311, 0.2542 ) }
    apic_28 { pt3dadd( 1085.69, 102.91, 117.281, 0.2288 ) }
    apic_28 { pt3dadd( 1084.93, 102.056, 117.236, 0.2288 ) }
    // Section: apic_27, id: apic_27, parent: apic_26 (entry count 64/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 1081.77, 145.821, 109.324, 0.2746 ) }
    apic_27 { pt3dadd( 1082.5, 145.073, 109.908, 0.2288 ) }
    apic_27 { pt3dadd( 1083.31, 144.268, 109.869, 0.2746 ) }
    apic_27 { pt3dadd( 1084.13, 143.471, 109.853, 0.2746 ) }
    apic_27 { pt3dadd( 1084.87, 142.608, 109.83, 0.2746 ) }
    apic_27 { pt3dadd( 1085.43, 141.617, 109.801, 0.2746 ) }
    apic_27 { pt3dadd( 1085.88, 140.563, 109.765, 0.2746 ) }
    apic_27 { pt3dadd( 1086.51, 139.643, 109.687, 0.2746 ) }
    apic_27 { pt3dadd( 1087.39, 138.928, 109.566, 0.2746 ) }
    apic_27 { pt3dadd( 1087.99, 137.998, 109.484, 0.2746 ) }
    apic_27 { pt3dadd( 1088.09, 136.883, 109.434, 0.2746 ) }
    apic_27 { pt3dadd( 1087.94, 135.764, 109.351, 0.2746 ) }
    apic_27 { pt3dadd( 1087.73, 134.646, 109.26, 0.2746 ) }
    apic_27 { pt3dadd( 1087.43, 133.556, 109.257, 0.2746 ) }
    apic_27 { pt3dadd( 1087.16, 132.456, 109.332, 0.2746 ) }
    apic_27 { pt3dadd( 1087.04, 131.321, 109.426, 0.2746 ) }
    apic_27 { pt3dadd( 1087.02, 130.178, 109.522, 0.2746 ) }
    apic_27 { pt3dadd( 1087.17, 129.046, 109.621, 0.2746 ) }
    apic_27 { pt3dadd( 1087.35, 127.918, 109.706, 0.2746 ) }
    apic_27 { pt3dadd( 1087.66, 126.818, 109.769, 0.2746 ) }
    apic_27 { pt3dadd( 1088.2, 125.838, 109.908, 0.2746 ) }
    apic_27 { pt3dadd( 1088.62, 124.812, 110.139, 0.2746 ) }
    apic_27 { pt3dadd( 1088.86, 123.702, 110.369, 0.2746 ) }
    apic_27 { pt3dadd( 1089.27, 122.637, 110.57, 0.2748 ) }
    apic_27 { pt3dadd( 1089.62, 121.55, 110.752, 0.2748 ) }
    apic_27 { pt3dadd( 1089.8, 120.422, 110.893, 0.2752 ) }
    apic_27 { pt3dadd( 1090.19, 119.351, 110.977, 0.2758 ) }
    apic_27 { pt3dadd( 1090.83, 118.405, 111.019, 0.2766 ) }
    apic_27 { pt3dadd( 1091.29, 117.362, 111.04, 0.2782 ) }
    apic_27 { pt3dadd( 1091.69, 116.29, 111.051, 0.2814 ) }
    apic_27 { pt3dadd( 1092.29, 115.314, 111.051, 0.287 ) }
    apic_27 { pt3dadd( 1092.94, 114.381, 111.027, 0.2988 ) }
    apic_27 { pt3dadd( 1093.66, 113.489, 111.0, 0.314 ) }
    apic_27 { pt3dadd( 1094.49, 112.716, 111.03, 0.3734 ) }
    apic_27 { pt3dadd( 1095.33, 111.979, 111.14, 0.3338 ) }
    apic_27 { pt3dadd( 1096.1, 111.138, 111.263, 0.2994 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    apic_27 { pt3dadd( 1096.89, 110.311, 111.341, 0.2742 ) }
    apic_27 { pt3dadd( 1097.43, 109.309, 111.368, 0.2736 ) }
    apic_27 { pt3dadd( 1097.62, 108.319, 111.17, 0.2728 ) }
    apic_27 { pt3dadd( 1097.96, 107.243, 110.939, 0.2712 ) }
    apic_27 { pt3dadd( 1098.17, 106.172, 110.883, 0.2684 ) }
    apic_27 { pt3dadd( 1098.01, 105.068, 110.944, 0.2626 ) }
    apic_27 { pt3dadd( 1097.98, 103.998, 110.868, 0.2542 ) }
    apic_27 { pt3dadd( 1098.0, 102.854, 110.835, 0.2288 ) }
    apic_27 { pt3dadd( 1098.44, 101.827, 111.066, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_21 (entry count 9/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 1083.44, 174.23, 107.944, 0.2746 ) }
    apic_25 { pt3dadd( 1083.62, 174.489, 108.982, 0.2746 ) }
    apic_25 { pt3dadd( 1083.89, 174.884, 110.404, 0.2746 ) }
    apic_25 { pt3dadd( 1084.16, 175.281, 112.087, 0.2746 ) }
    apic_25 { pt3dadd( 1084.6, 175.565, 113.901, 0.2746 ) }
    apic_25 { pt3dadd( 1085.45, 175.562, 115.644, 0.2746 ) }
    apic_25 { pt3dadd( 1086.49, 175.595, 117.186, 0.2746 ) }
    apic_25 { pt3dadd( 1087.54, 175.756, 118.497, 0.2746 ) }
    apic_25 { pt3dadd( 1088.62, 175.798, 119.604, 0.2746 ) }
    apic_25 { pt3dadd( 1089.69, 175.613, 120.549, 0.2746 ) }
    apic_25 { pt3dadd( 1090.79, 175.355, 121.358, 0.2746 ) }
    apic_25 { pt3dadd( 1091.91, 175.178, 122.073, 0.2746 ) }
    apic_25 { pt3dadd( 1093.02, 175.168, 122.791, 0.2746 ) }
    apic_25 { pt3dadd( 1094.08, 175.341, 123.59, 0.2746 ) }
    apic_25 { pt3dadd( 1095.08, 175.649, 124.49, 0.2746 ) }
    apic_25 { pt3dadd( 1096.09, 175.901, 125.465, 0.2746 ) }
    apic_25 { pt3dadd( 1097.1, 176.08, 126.509, 0.2746 ) }
    apic_25 { pt3dadd( 1097.5, 176.477, 127.704, 0.2746 ) }
    apic_25 { pt3dadd( 1097.88, 177.312, 128.885, 0.2746 ) }
    apic_25 { pt3dadd( 1098.63, 178.155, 129.845, 0.2746 ) }
    apic_25 { pt3dadd( 1099.56, 178.807, 130.593, 0.2746 ) }
    apic_25 { pt3dadd( 1100.52, 179.441, 131.193, 0.2746 ) }
    apic_25 { pt3dadd( 1101.37, 180.19, 131.721, 0.2746 ) }
    apic_25 { pt3dadd( 1101.83, 181.141, 132.331, 0.2746 ) }
    apic_25 { pt3dadd( 1102.07, 182.093, 133.105, 0.2746 ) }
    apic_25 { pt3dadd( 1102.77, 182.833, 134.002, 0.2746 ) }
    apic_25 { pt3dadd( 1103.85, 183.065, 134.887, 0.2746 ) }
    apic_25 { pt3dadd( 1104.95, 182.748, 135.693, 0.2746 ) }
    apic_25 { pt3dadd( 1106.03, 182.482, 136.502, 0.2746 ) }
    apic_25 { pt3dadd( 1107.04, 182.704, 137.397, 0.2746 ) }
    apic_25 { pt3dadd( 1107.86, 183.325, 138.363, 0.2746 ) }
    apic_25 { pt3dadd( 1108.68, 183.949, 139.393, 0.2746 ) }
    apic_25 { pt3dadd( 1109.5, 184.575, 140.477, 0.2746 ) }
    apic_25 { pt3dadd( 1110.33, 185.2, 141.587, 0.2746 ) }
    apic_25 { pt3dadd( 1111.15, 185.826, 142.683, 0.2746 ) }
    apic_25 { pt3dadd( 1112.0, 186.454, 143.719, 0.2746 ) }
    apic_25 { pt3dadd( 1112.87, 187.084, 144.688, 0.2746 ) }
    apic_25 { pt3dadd( 1113.74, 187.713, 145.59, 0.2746 ) }
    apic_25 { pt3dadd( 1114.65, 188.305, 146.412, 0.2746 ) }
    apic_25 { pt3dadd( 1115.66, 188.802, 147.119, 0.2746 ) }
    apic_25 { pt3dadd( 1116.67, 189.293, 147.732, 0.2746 ) }
    apic_25 { pt3dadd( 1117.67, 189.784, 148.278, 0.2746 ) }
    apic_25 { pt3dadd( 1118.72, 190.232, 148.737, 0.2744 ) }
    apic_25 { pt3dadd( 1119.79, 190.645, 149.111, 0.2744 ) }
    apic_25 { pt3dadd( 1120.86, 191.056, 149.442, 0.2742 ) }
    apic_25 { pt3dadd( 1121.92, 191.468, 149.766, 0.2742 ) }
    apic_25 { pt3dadd( 1122.67, 192.229, 150.252, 0.2736 ) }
    apic_25 { pt3dadd( 1123.31, 193.035, 150.895, 0.2728 ) }
    apic_25 { pt3dadd( 1124.3, 193.548, 151.593, 0.2712 ) }
    apic_25 { pt3dadd( 1125.3, 194.046, 152.311, 0.2684 ) }
    apic_25 { pt3dadd( 1126.29, 194.546, 153.012, 0.2626 ) }
    apic_25 { pt3dadd( 1127.32, 194.941, 153.684, 0.2542 ) }
    apic_25 { pt3dadd( 1128.38, 195.074, 154.335, 0.2288 ) }
    apic_25 { pt3dadd( 1129.44, 195.206, 155.711, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 63/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 1083.44, 174.23, 107.944, 0.2746 ) }
    apic_22 { pt3dadd( 1083.59, 174.223, 106.209, 0.2288 ) }
    apic_22 { pt3dadd( 1084.68, 174.168, 106.943, 0.2746 ) }
    apic_22 { pt3dadd( 1085.8, 174.129, 107.267, 0.2746 ) }
    apic_22 { pt3dadd( 1086.9, 173.807, 107.562, 0.2746 ) }
    apic_22 { pt3dadd( 1087.87, 173.197, 107.836, 0.2746 ) }
    apic_22 { pt3dadd( 1088.83, 172.586, 108.096, 0.2746 ) }
    apic_22 { pt3dadd( 1089.8, 171.975, 108.349, 0.2746 ) }
    apic_22 { pt3dadd( 1090.73, 171.332, 108.645, 0.2746 ) }
    apic_22 { pt3dadd( 1091.63, 170.67, 109.033, 0.2746 ) }
    apic_22 { pt3dadd( 1092.52, 170.006, 109.503, 0.2746 ) }
    apic_22 { pt3dadd( 1093.41, 169.343, 110.029, 0.2746 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 75/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 1124.97, 175.961, 90.3577, 0.2746 ) }
    apic_17 { pt3dadd( 1126.06, 175.724, 90.8872, 0.2746 ) }
    apic_17 { pt3dadd( 1127.04, 175.202, 91.2674, 0.2746 ) }
    apic_17 { pt3dadd( 1127.54, 174.229, 91.52, 0.2746 ) }
    apic_17 { pt3dadd( 1128.0, 173.187, 91.6874, 0.2746 ) }
    apic_17 { pt3dadd( 1128.78, 172.376, 91.7991, 0.2746 ) }
    apic_17 { pt3dadd( 1129.76, 171.803, 91.8954, 0.2746 ) }
    apic_17 { pt3dadd( 1130.85, 171.489, 92.0329, 0.2746 ) }
    apic_17 { pt3dadd( 1131.97, 171.478, 92.2334, 0.2746 ) }
    apic_17 { pt3dadd( 1133.1, 171.589, 92.4582, 0.2746 ) }
    apic_17 { pt3dadd( 1134.21, 171.856, 92.6537, 0.2746 ) }
    apic_17 { pt3dadd( 1135.29, 172.182, 92.8682, 0.2746 ) }
    apic_17 { pt3dadd( 1136.39, 172.276, 93.1162, 0.2746 ) }
    apic_17 { pt3dadd( 1137.53, 172.208, 93.3061, 0.2746 ) }
    apic_17 { pt3dadd( 1138.64, 172.011, 93.385, 0.2746 ) }
    apic_17 { pt3dadd( 1139.75, 171.746, 93.4018, 0.2746 ) }
    apic_17 { pt3dadd( 1140.87, 171.536, 93.4494, 0.2746 ) }
    apic_17 { pt3dadd( 1142.0, 171.488, 93.5525, 0.2746 ) }
    apic_17 { pt3dadd( 1143.14, 171.546, 93.6729, 0.2746 ) }
    apic_17 { pt3dadd( 1144.27, 171.443, 93.8235, 0.2746 ) }
    apic_17 { pt3dadd( 1145.32, 171.097, 94.1223, 0.2746 ) }
    apic_17 { pt3dadd( 1146.25, 170.58, 94.5787, 0.2746 ) }
    apic_17 { pt3dadd( 1147.21, 170.092, 94.9113, 0.2746 ) }
    apic_17 { pt3dadd( 1148.2, 169.538, 95.1966, 0.2746 ) }
    apic_17 { pt3dadd( 1148.95, 168.905, 95.7284, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    apic_17 { pt3dadd( 1149.45, 168.007, 96.4233, 0.2746 ) }
    apic_17 { pt3dadd( 1149.82, 166.953, 97.1426, 0.2746 ) }
    apic_17 { pt3dadd( 1150.45, 166.071, 97.9261, 0.2746 ) }
    apic_17 { pt3dadd( 1151.25, 165.33, 98.7672, 0.2746 ) }
    apic_17 { pt3dadd( 1152.02, 164.508, 99.5786, 0.2746 ) }
    apic_17 { pt3dadd( 1152.71, 163.664, 100.396, 0.2746 ) }
    apic_17 { pt3dadd( 1153.51, 162.962, 101.254, 0.2746 ) }
    apic_17 { pt3dadd( 1154.35, 162.29, 102.14, 0.2746 ) }
    apic_17 { pt3dadd( 1154.83, 161.337, 103.045, 0.2746 ) }
    apic_17 { pt3dadd( 1154.9, 160.28, 103.972, 0.2746 ) }
    apic_17 { pt3dadd( 1154.52, 159.28, 104.902, 0.2746 ) }
    apic_17 { pt3dadd( 1154.34, 158.167, 105.747, 0.2746 ) }
    apic_17 { pt3dadd( 1154.19, 157.047, 106.521, 0.2746 ) }
    apic_17 { pt3dadd( 1154.18, 156.019, 107.354, 0.2746 ) }
    apic_17 { pt3dadd( 1154.03, 155.009, 108.225, 0.2746 ) }
    apic_17 { pt3dadd( 1153.74, 154.035, 109.106, 0.2746 ) }
    apic_17 { pt3dadd( 1153.11, 153.231, 109.967, 0.2746 ) }
    apic_17 { pt3dadd( 1152.5, 152.298, 110.693, 0.2746 ) }
    apic_17 { pt3dadd( 1151.85, 151.373, 111.236, 0.2746 ) }
    apic_17 { pt3dadd( 1150.96, 150.656, 111.548, 0.2746 ) }
    apic_17 { pt3dadd( 1150.03, 149.988, 111.675, 0.2748 ) }
    apic_17 { pt3dadd( 1149.03, 149.429, 111.639, 0.275 ) }
    apic_17 { pt3dadd( 1148.0, 148.971, 111.446, 0.2752 ) }
    apic_17 { pt3dadd( 1146.99, 148.508, 111.162, 0.2758 ) }
    apic_17 { pt3dadd( 1145.96, 148.052, 110.834, 0.2768 ) }
    apic_17 { pt3dadd( 1144.89, 147.654, 110.535, 0.279 ) }
    apic_17 { pt3dadd( 1143.8, 147.307, 110.306, 0.2824 ) }
    apic_17 { pt3dadd( 1142.71, 146.958, 110.142, 0.2882 ) }
    apic_17 { pt3dadd( 1141.62, 146.612, 110.036, 0.305 ) }
    apic_17 { pt3dadd( 1140.54, 146.231, 109.971, 0.305 ) }
    apic_17 { pt3dadd( 1139.52, 145.718, 109.913, 0.4576 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 31/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 1124.97, 175.961, 90.3577, 0.2746 ) }
    apic_16 { pt3dadd( 1126.16, 175.961, 91.8372, 0.2752 ) }
    apic_16 { pt3dadd( 1127.29, 175.961, 92.7688, 0.2758 ) }
    apic_16 { pt3dadd( 1128.41, 175.961, 93.1596, 0.2766 ) }
    apic_16 { pt3dadd( 1129.54, 175.963, 93.6387, 0.2782 ) }
    apic_16 { pt3dadd( 1130.66, 176.016, 94.204, 0.2814 ) }
    apic_16 { pt3dadd( 1131.77, 176.152, 94.8592, 0.287 ) }
    apic_16 { pt3dadd( 1132.87, 176.31, 95.5956, 0.2988 ) }
    apic_16 { pt3dadd( 1133.97, 176.412, 96.4048, 0.3142 ) }
    apic_16 { pt3dadd( 1135.06, 176.297, 97.3081, 0.3734 ) }
    apic_16 { pt3dadd( 1136.12, 176.127, 98.3352, 0.3338 ) }
    apic_16 { pt3dadd( 1137.16, 176.361, 99.4728, 0.3 ) }
    apic_16 { pt3dadd( 1137.17, 177.195, 100.781, 0.2746 ) }
    apic_16 { pt3dadd( 1137.21, 178.125, 102.286, 0.2744 ) }
    apic_16 { pt3dadd( 1137.58, 178.609, 104.053, 0.2744 ) }
    apic_16 { pt3dadd( 1138.0, 178.56, 106.052, 0.2742 ) }
    apic_16 { pt3dadd( 1138.4, 178.133, 108.182, 0.2742 ) }
    apic_16 { pt3dadd( 1138.37, 177.518, 110.379, 0.2736 ) }
    apic_16 { pt3dadd( 1137.64, 177.061, 112.506, 0.2728 ) }
    apic_16 { pt3dadd( 1136.72, 176.92, 114.573, 0.2712 ) }
    apic_16 { pt3dadd( 1136.35, 176.878, 116.682, 0.2684 ) }
    apic_16 { pt3dadd( 1136.62, 176.831, 118.779, 0.2626 ) }
    apic_16 { pt3dadd( 1137.32, 176.349, 120.693, 0.2542 ) }
    apic_16 { pt3dadd( 1137.63, 175.712, 122.464, 0.2288 ) }
    apic_16 { pt3dadd( 1137.69, 175.045, 125.943, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 56/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 1088.22, 181.46, 91.3346, 0.2746 ) }
    apic_12 { pt3dadd( 1089.26, 180.778, 91.5944, 0.2746 ) }
    apic_12 { pt3dadd( 1090.22, 180.149, 91.7375, 0.2746 ) }
    apic_12 { pt3dadd( 1091.17, 179.519, 91.7927, 0.2746 ) }
    apic_12 { pt3dadd( 1092.11, 178.87, 91.873, 0.2746 ) }
    apic_12 { pt3dadd( 1093.03, 178.193, 91.9909, 0.2746 ) }
    apic_12 { pt3dadd( 1093.94, 177.502, 92.148, 0.2746 ) }
    apic_12 { pt3dadd( 1094.84, 176.804, 92.3387, 0.2748 ) }
    apic_12 { pt3dadd( 1095.73, 176.087, 92.5644, 0.2748 ) }
    apic_12 { pt3dadd( 1096.58, 175.341, 92.8259, 0.2752 ) }
    apic_12 { pt3dadd( 1097.42, 174.584, 93.1109, 0.2758 ) }
    apic_12 { pt3dadd( 1098.25, 173.808, 93.3988, 0.2766 ) }
    apic_12 { pt3dadd( 1099.02, 172.972, 93.6569, 0.2782 ) }
    apic_12 { pt3dadd( 1099.71, 172.062, 93.8655, 0.2814 ) }
    apic_12 { pt3dadd( 1100.35, 171.111, 94.0358, 0.287 ) }
    apic_12 { pt3dadd( 1101.03, 170.193, 94.1853, 0.2988 ) }
    apic_12 { pt3dadd( 1101.82, 169.362, 94.3368, 0.3142 ) }
    apic_12 { pt3dadd( 1102.62, 168.563, 94.5378, 0.3734 ) }
    apic_12 { pt3dadd( 1103.41, 167.758, 94.8228, 0.3338 ) }
    apic_12 { pt3dadd( 1104.19, 166.954, 95.1787, 0.3 ) }
    apic_12 { pt3dadd( 1105.01, 166.185, 95.5755, 0.2746 ) }
    apic_12 { pt3dadd( 1105.96, 165.578, 95.9731, 0.2746 ) }
    apic_12 { pt3dadd( 1107.01, 165.152, 96.3376, 0.2746 ) }
    apic_12 { pt3dadd( 1108.1, 164.785, 96.6624, 0.2746 ) }
    apic_12 { pt3dadd( 1109.18, 164.435, 96.9578, 0.2746 ) }
    apic_12 { pt3dadd( 1110.28, 164.123, 97.2476, 0.2746 ) }
    apic_12 { pt3dadd( 1111.38, 163.86, 97.554, 0.2746 ) }
    apic_12 { pt3dadd( 1112.49, 163.621, 97.8888, 0.2746 ) }
    apic_12 { pt3dadd( 1113.6, 163.384, 98.2545, 0.2746 ) }
    apic_12 { pt3dadd( 1114.71, 163.144, 98.6535, 0.2746 ) }
    apic_12 { pt3dadd( 1115.81, 162.9, 99.0909, 0.2746 ) }
    apic_12 { pt3dadd( 1116.9, 162.652, 99.5627, 0.2746 ) }
    apic_12 { pt3dadd( 1117.99, 162.398, 100.057, 0.2746 ) }
    apic_12 { pt3dadd( 1119.07, 162.102, 100.562, 0.2746 ) }
    apic_12 { pt3dadd( 1120.12, 161.711, 101.069, 0.2746 ) }
    apic_12 { pt3dadd( 1121.14, 161.253, 101.567, 0.2746 ) }
    apic_12 { pt3dadd( 1122.17, 160.814, 102.038, 0.2746 ) }
    apic_12 { pt3dadd( 1123.25, 160.505, 102.452, 0.2746 ) }
    apic_12 { pt3dadd( 1124.39, 160.392, 102.779, 0.2746 ) }
    apic_12 { pt3dadd( 1125.53, 160.381, 103.02, 0.2746 ) }
    apic_12 { pt3dadd( 1126.67, 160.381, 103.202, 0.2746 ) }
    apic_12 { pt3dadd( 1127.82, 160.381, 103.352, 0.2746 ) }
    apic_12 { pt3dadd( 1128.96, 160.349, 103.505, 0.2746 ) }
    apic_12 { pt3dadd( 1130.09, 160.217, 103.706, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    apic_12 { pt3dadd( 1131.21, 160.004, 103.981, 0.2746 ) }
    apic_12 { pt3dadd( 1132.32, 159.769, 104.327, 0.2746 ) }
    apic_12 { pt3dadd( 1133.42, 159.498, 104.74, 0.2744 ) }
    apic_12 { pt3dadd( 1134.45, 159.101, 105.243, 0.2744 ) }
    apic_12 { pt3dadd( 1135.39, 158.565, 105.86, 0.2742 ) }
    apic_12 { pt3dadd( 1136.31, 157.952, 106.531, 0.2742 ) }
    apic_12 { pt3dadd( 1137.23, 157.335, 107.078, 0.2736 ) }
    apic_12 { pt3dadd( 1138.12, 156.617, 107.6, 0.2728 ) }
    apic_12 { pt3dadd( 1138.89, 156.011, 108.385, 0.2712 ) }
    apic_12 { pt3dadd( 1139.69, 155.598, 109.391, 0.2684 ) }
    apic_12 { pt3dadd( 1140.35, 154.896, 110.511, 0.2626 ) }
    apic_12 { pt3dadd( 1140.84, 154.176, 111.731, 0.2542 ) }
    apic_12 { pt3dadd( 1141.76, 154.026, 112.95, 0.2288 ) }
    apic_12 { pt3dadd( 1142.78, 154.294, 115.205, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 14/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 1088.22, 181.46, 91.3346, 0.2746 ) }
    apic_9 { pt3dadd( 1087.75, 180.489, 91.8733, 0.2746 ) }
    apic_9 { pt3dadd( 1087.26, 179.48, 92.374, 0.2746 ) }
    apic_9 { pt3dadd( 1086.77, 178.471, 92.8368, 0.2746 ) }
    apic_9 { pt3dadd( 1086.4, 177.402, 93.247, 0.2746 ) }
    apic_9 { pt3dadd( 1086.42, 176.258, 93.56, 0.2746 ) }
    apic_9 { pt3dadd( 1086.44, 175.115, 93.8056, 0.2746 ) }
    apic_9 { pt3dadd( 1086.45, 173.971, 94.0125, 0.2746 ) }
    apic_9 { pt3dadd( 1086.47, 172.827, 94.2038, 0.2746 ) }
    apic_9 { pt3dadd( 1086.49, 171.684, 94.4012, 0.2746 ) }
    apic_9 { pt3dadd( 1086.8, 170.602, 94.6873, 0.2746 ) }
    apic_9 { pt3dadd( 1087.17, 169.546, 95.0648, 0.2746 ) }
    apic_9 { pt3dadd( 1087.54, 168.492, 95.5086, 0.2746 ) }
    apic_9 { pt3dadd( 1087.91, 167.436, 95.9918, 0.2746 ) }
    apic_9 { pt3dadd( 1088.22, 166.361, 96.4869, 0.2746 ) }
    apic_9 { pt3dadd( 1088.53, 165.284, 96.9696, 0.2746 ) }
    apic_9 { pt3dadd( 1088.83, 164.208, 97.4193, 0.2746 ) }
    apic_9 { pt3dadd( 1089.14, 163.131, 97.8284, 0.2746 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 32/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 1093.41, 169.343, 110.029, 0.2746 ) }
    apic_24 { pt3dadd( 1093.86, 168.912, 110.543, 0.2746 ) }
    apic_24 { pt3dadd( 1094.67, 168.134, 111.076, 0.2746 ) }
    apic_24 { pt3dadd( 1095.47, 167.357, 111.613, 0.2746 ) }
    apic_24 { pt3dadd( 1096.33, 166.643, 112.145, 0.2746 ) }
    apic_24 { pt3dadd( 1097.28, 166.052, 112.673, 0.2746 ) }
    apic_24 { pt3dadd( 1098.25, 165.513, 113.193, 0.2746 ) }
    apic_24 { pt3dadd( 1099.23, 164.981, 113.703, 0.2746 ) }
    apic_24 { pt3dadd( 1100.27, 164.506, 114.149, 0.2746 ) }
    apic_24 { pt3dadd( 1101.33, 164.082, 114.512, 0.2746 ) }
    apic_24 { pt3dadd( 1102.4, 163.67, 114.807, 0.2746 ) }
    apic_24 { pt3dadd( 1103.48, 163.314, 115.069, 0.2746 ) }
    apic_24 { pt3dadd( 1104.53, 163.6, 115.421, 0.2746 ) }
    apic_24 { pt3dadd( 1105.61, 163.84, 115.844, 0.2746 ) }
    apic_24 { pt3dadd( 1106.73, 163.781, 116.281, 0.2746 ) }
    apic_24 { pt3dadd( 1107.71, 163.199, 116.68, 0.2744 ) }
    apic_24 { pt3dadd( 1108.58, 162.453, 117.027, 0.2744 ) }
    apic_24 { pt3dadd( 1109.53, 161.823, 117.344, 0.2742 ) }
    apic_24 { pt3dadd( 1110.51, 161.28, 117.702, 0.2742 ) }
    apic_24 { pt3dadd( 1111.47, 160.777, 118.14, 0.2736 ) }
    apic_24 { pt3dadd( 1112.43, 160.205, 118.593, 0.2728 ) }
    apic_24 { pt3dadd( 1113.35, 159.516, 119.005, 0.2712 ) }
    apic_24 { pt3dadd( 1114.24, 158.799, 119.364, 0.2684 ) }
    apic_24 { pt3dadd( 1115.11, 158.056, 119.685, 0.2626 ) }
    apic_24 { pt3dadd( 1115.63, 157.074, 120.036, 0.2542 ) }
    apic_24 { pt3dadd( 1115.69, 156.011, 120.46, 0.2288 ) }
    apic_24 { pt3dadd( 1115.7, 154.883, 121.363, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 59/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 1093.41, 169.343, 110.029, 0.2746 ) }
    apic_23 { pt3dadd( 1094.22, 169.823, 110.546, 0.2288 ) }
    apic_23 { pt3dadd( 1095.19, 170.202, 112.649, 0.2736 ) }
    apic_23 { pt3dadd( 1095.9, 170.52, 113.6, 0.2728 ) }
    apic_23 { pt3dadd( 1096.66, 170.882, 114.783, 0.2712 ) }
    apic_23 { pt3dadd( 1097.62, 171.108, 116.022, 0.2684 ) }
    apic_23 { pt3dadd( 1098.71, 170.863, 116.999, 0.2626 ) }
    apic_23 { pt3dadd( 1099.83, 170.604, 117.775, 0.2542 ) }
    apic_23 { pt3dadd( 1100.64, 170.331, 118.632, 0.2288 ) }
    apic_23 { pt3dadd( 1101.11, 170.775, 120.852, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 69/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 1089.14, 163.131, 97.8284, 0.2746 ) }
    apic_11 { pt3dadd( 1089.54, 162.14, 98.1109, 0.2746 ) }
    apic_11 { pt3dadd( 1089.96, 161.077, 98.292, 0.2746 ) }
    apic_11 { pt3dadd( 1090.39, 160.016, 98.3965, 0.2746 ) }
    apic_11 { pt3dadd( 1090.73, 158.923, 98.4463, 0.2746 ) }
    apic_11 { pt3dadd( 1090.84, 157.79, 98.4614, 0.2746 ) }
    apic_11 { pt3dadd( 1090.77, 156.649, 98.4603, 0.2746 ) }
    apic_11 { pt3dadd( 1090.65, 155.511, 98.4586, 0.2746 ) }
    apic_11 { pt3dadd( 1090.53, 154.372, 98.4567, 0.2746 ) }
    apic_11 { pt3dadd( 1090.39, 153.238, 98.4536, 0.2746 ) }
    apic_11 { pt3dadd( 1090.18, 152.114, 98.4494, 0.2746 ) }
    apic_11 { pt3dadd( 1089.91, 151.003, 98.4432, 0.2746 ) }
    apic_11 { pt3dadd( 1089.62, 149.895, 98.4351, 0.2746 ) }
    apic_11 { pt3dadd( 1089.33, 148.788, 98.4234, 0.2746 ) }
    apic_11 { pt3dadd( 1089.0, 147.695, 98.4074, 0.2746 ) }
    apic_11 { pt3dadd( 1088.6, 146.623, 98.3853, 0.2746 ) }
    apic_11 { pt3dadd( 1088.16, 145.566, 98.352, 0.2746 ) }
    apic_11 { pt3dadd( 1087.72, 144.509, 98.3049, 0.2746 ) }
    apic_11 { pt3dadd( 1087.45, 143.399, 98.245, 0.2746 ) }
    apic_11 { pt3dadd( 1087.36, 142.261, 98.1775, 0.2746 ) }
    apic_11 { pt3dadd( 1087.34, 141.134, 98.0459, 0.2746 ) }
    apic_11 { pt3dadd( 1087.38, 140.075, 97.7956, 0.2746 ) }
    apic_11 { pt3dadd( 1087.0, 139.028, 97.5649, 0.2746 ) }
    apic_11 { pt3dadd( 1086.33, 138.116, 97.4873, 0.2746 ) }
    apic_11 { pt3dadd( 1085.78, 137.135, 97.5632, 0.2746 ) }
    apic_11 { pt3dadd( 1085.37, 136.081, 97.7502, 0.2746 ) }
    apic_11 { pt3dadd( 1085.01, 134.995, 97.9714, 0.2746 ) }
    apic_11 { pt3dadd( 1084.62, 133.922, 98.2002, 0.2746 ) }
    apic_11 { pt3dadd( 1084.13, 132.896, 98.4774, 0.2746 ) }
    apic_11 { pt3dadd( 1084.09, 131.784, 98.8361, 0.2746 ) }
    apic_11 { pt3dadd( 1084.3, 130.687, 99.2754, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    apic_11 { pt3dadd( 1084.15, 129.558, 99.7248, 0.2746 ) }
    apic_11 { pt3dadd( 1083.79, 128.476, 100.195, 0.2746 ) }
    apic_11 { pt3dadd( 1083.36, 127.526, 100.815, 0.2746 ) }
    apic_11 { pt3dadd( 1082.89, 126.624, 101.553, 0.2746 ) }
    apic_11 { pt3dadd( 1082.42, 125.618, 102.273, 0.2746 ) }
    apic_11 { pt3dadd( 1082.01, 124.552, 102.908, 0.2746 ) }
    apic_11 { pt3dadd( 1081.9, 123.455, 103.549, 0.2746 ) }
    apic_11 { pt3dadd( 1081.85, 122.368, 104.192, 0.2746 ) }
    apic_11 { pt3dadd( 1081.37, 121.366, 104.789, 0.2746 ) }
    apic_11 { pt3dadd( 1080.85, 120.374, 105.335, 0.2746 ) }
    apic_11 { pt3dadd( 1080.51, 119.287, 105.804, 0.2746 ) }
    apic_11 { pt3dadd( 1080.2, 118.189, 106.214, 0.2746 ) }
    apic_11 { pt3dadd( 1079.74, 117.139, 106.566, 0.2746 ) }
    apic_11 { pt3dadd( 1079.26, 116.1, 106.901, 0.2746 ) }
    apic_11 { pt3dadd( 1078.76, 115.074, 107.262, 0.2746 ) }
    apic_11 { pt3dadd( 1078.24, 114.057, 107.703, 0.2746 ) }
    apic_11 { pt3dadd( 1077.72, 113.2, 108.403, 0.2746 ) }
    apic_11 { pt3dadd( 1077.28, 112.381, 109.338, 0.2746 ) }
    apic_11 { pt3dadd( 1077.23, 111.599, 110.483, 0.2746 ) }
    apic_11 { pt3dadd( 1077.15, 110.695, 111.697, 0.2746 ) }
    apic_11 { pt3dadd( 1076.98, 109.661, 112.823, 0.2746 ) }
    apic_11 { pt3dadd( 1076.65, 108.574, 113.713, 0.2746 ) }
    apic_11 { pt3dadd( 1076.27, 107.493, 114.346, 0.2746 ) }
    apic_11 { pt3dadd( 1075.87, 106.423, 114.782, 0.2744 ) }
    apic_11 { pt3dadd( 1075.33, 105.425, 115.142, 0.2744 ) }
    apic_11 { pt3dadd( 1074.74, 104.483, 115.506, 0.2742 ) }
    apic_11 { pt3dadd( 1074.14, 103.543, 115.9, 0.2742 ) }
    apic_11 { pt3dadd( 1073.56, 102.586, 116.322, 0.2736 ) }
    apic_11 { pt3dadd( 1073.17, 101.511, 116.674, 0.2728 ) }
    apic_11 { pt3dadd( 1072.79, 100.433, 116.968, 0.2712 ) }
    apic_11 { pt3dadd( 1072.41, 99.3548, 117.209, 0.2684 ) }
    apic_11 { pt3dadd( 1071.89, 98.3966, 117.545, 0.2626 ) }
    apic_11 { pt3dadd( 1071.48, 97.4678, 118.007, 0.2542 ) }
    apic_11 { pt3dadd( 1070.99, 96.4432, 118.423, 0.2288 ) }
    apic_11 { pt3dadd( 1070.82, 95.3124, 119.073, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 35/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 1089.14, 163.131, 97.8284, 0.2746 ) }
    apic_10 { pt3dadd( 1089.67, 162.193, 99.1967, 0.2288 ) }
    apic_10 { pt3dadd( 1090.21, 161.232, 100.346, 0.2746 ) }
    apic_10 { pt3dadd( 1090.75, 160.271, 100.835, 0.2746 ) }
    apic_10 { pt3dadd( 1091.29, 159.31, 101.417, 0.2746 ) }
    apic_10 { pt3dadd( 1091.95, 158.43, 102.059, 0.2746 ) }
    apic_10 { pt3dadd( 1092.79, 157.689, 102.72, 0.2746 ) }
    apic_10 { pt3dadd( 1093.61, 156.913, 103.361, 0.2746 ) }
    apic_10 { pt3dadd( 1094.26, 155.988, 103.983, 0.2746 ) }
    apic_10 { pt3dadd( 1094.73, 154.978, 104.664, 0.2746 ) }
    apic_10 { pt3dadd( 1095.36, 154.21, 105.488, 0.2746 ) }
    apic_10 { pt3dadd( 1096.29, 153.898, 106.47, 0.2746 ) }
    apic_10 { pt3dadd( 1097.28, 153.655, 107.565, 0.2746 ) }
    apic_10 { pt3dadd( 1098.26, 153.354, 108.73, 0.2746 ) }
    apic_10 { pt3dadd( 1099.29, 153.195, 109.928, 0.2746 ) }
    apic_10 { pt3dadd( 1100.32, 153.28, 111.126, 0.2746 ) }
    apic_10 { pt3dadd( 1101.22, 153.621, 112.342, 0.2746 ) }
    apic_10 { pt3dadd( 1102.07, 154.067, 113.571, 0.2746 ) }
    apic_10 { pt3dadd( 1103.0, 154.482, 114.769, 0.2746 ) }
    apic_10 { pt3dadd( 1104.03, 154.766, 115.884, 0.2746 ) }
    apic_10 { pt3dadd( 1105.15, 154.868, 116.876, 0.2746 ) }
    apic_10 { pt3dadd( 1106.28, 154.869, 117.778, 0.2746 ) }
    apic_10 { pt3dadd( 1107.38, 154.806, 118.669, 0.2746 ) }
    apic_10 { pt3dadd( 1108.4, 154.492, 119.606, 0.2746 ) }
    apic_10 { pt3dadd( 1108.69, 153.885, 120.758, 0.2746 ) }
    apic_10 { pt3dadd( 1108.04, 153.126, 121.982, 0.2746 ) }
    apic_10 { pt3dadd( 1107.83, 152.067, 123.219, 0.2746 ) }
    apic_10 { pt3dadd( 1108.01, 151.038, 124.494, 0.2744 ) }
    apic_10 { pt3dadd( 1108.19, 150.096, 125.839, 0.2744 ) }
    apic_10 { pt3dadd( 1108.37, 149.405, 127.311, 0.2742 ) }
    apic_10 { pt3dadd( 1108.43, 148.654, 128.838, 0.2742 ) }
    apic_10 { pt3dadd( 1108.28, 147.704, 130.304, 0.2736 ) }
    apic_10 { pt3dadd( 1107.34, 147.146, 131.592, 0.2728 ) }
    apic_10 { pt3dadd( 1106.6, 146.38, 132.743, 0.2712 ) }
    apic_10 { pt3dadd( 1105.9, 145.629, 133.777, 0.2684 ) }
    apic_10 { pt3dadd( 1105.07, 145.01, 134.694, 0.2626 ) }
    apic_10 { pt3dadd( 1104.18, 144.361, 135.445, 0.2542 ) }
    apic_10 { pt3dadd( 1103.25, 143.698, 135.991, 0.2288 ) }
    apic_10 { pt3dadd( 1102.49, 142.847, 136.665, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_376, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_376 = new SectionList()
    soma_0 ModelViewParmSubset_376.append()
    axon_0 ModelViewParmSubset_376.append()
    axon_1 ModelViewParmSubset_376.append()

    // Group: {name=ModelViewParmSubset_377, groups=[], sections=[dend_66, dend_63, dend_58, dend_49, dend_36, dend_29, apic_0, dend_12, dend_3, dend_0, dend_72, dend_67, dend_65, dend_64, dend_62, dend_59, dend_51, dend_50, dend_46, dend_37, dend_35, dend_30, apic_30, apic_1, dend_28, dend_13, dend_11, dend_4, dend_2, dend_1, dend_74, dend_73, dend_71, dend_68, dend_61, dend_60, dend_57, dend_52, dend_48, dend_47, dend_45, dend_38, dend_34, dend_31, apic_32, apic_31, apic_5, apic_2, dend_23, dend_14, dend_10, dend_5, dend_70, dend_69, dend_56, dend_53, dend_44, dend_39, dend_33, dend_32, apic_34, apic_33, apic_19, apic_6, apic_4, apic_3, dend_27, dend_24, dend_18, dend_15, dend_9, dend_6, dend_55, dend_54, dend_43, dend_40, apic_29, apic_20, apic_14, apic_7, dend_26, dend_25, dend_22, dend_19, dend_17, dend_16, dend_8, dend_7, dend_42, dend_41, apic_26, apic_21, apic_18, apic_15, apic_13, apic_8, dend_21, dend_20, apic_28, apic_27, apic_25, apic_22, apic_17, apic_16, apic_12, apic_9, apic_24, apic_23, apic_11, apic_10]}
    ModelViewParmSubset_377 = new SectionList()
    dend_66 ModelViewParmSubset_377.append()
    dend_63 ModelViewParmSubset_377.append()
    dend_58 ModelViewParmSubset_377.append()
    dend_49 ModelViewParmSubset_377.append()
    dend_36 ModelViewParmSubset_377.append()
    dend_29 ModelViewParmSubset_377.append()
    apic_0 ModelViewParmSubset_377.append()
    dend_12 ModelViewParmSubset_377.append()
    dend_3 ModelViewParmSubset_377.append()
    dend_0 ModelViewParmSubset_377.append()
    dend_72 ModelViewParmSubset_377.append()
    dend_67 ModelViewParmSubset_377.append()
    dend_65 ModelViewParmSubset_377.append()
    dend_64 ModelViewParmSubset_377.append()
    dend_62 ModelViewParmSubset_377.append()
    dend_59 ModelViewParmSubset_377.append()
    dend_51 ModelViewParmSubset_377.append()
    dend_50 ModelViewParmSubset_377.append()
    dend_46 ModelViewParmSubset_377.append()
    dend_37 ModelViewParmSubset_377.append()
    dend_35 ModelViewParmSubset_377.append()
    dend_30 ModelViewParmSubset_377.append()
    apic_30 ModelViewParmSubset_377.append()
    apic_1 ModelViewParmSubset_377.append()
    dend_28 ModelViewParmSubset_377.append()
    dend_13 ModelViewParmSubset_377.append()
    dend_11 ModelViewParmSubset_377.append()
    dend_4 ModelViewParmSubset_377.append()
    dend_2 ModelViewParmSubset_377.append()
    dend_1 ModelViewParmSubset_377.append()
    dend_74 ModelViewParmSubset_377.append()
    dend_73 ModelViewParmSubset_377.append()
    dend_71 ModelViewParmSubset_377.append()
    dend_68 ModelViewParmSubset_377.append()
    dend_61 ModelViewParmSubset_377.append()
    dend_60 ModelViewParmSubset_377.append()
    dend_57 ModelViewParmSubset_377.append()
    dend_52 ModelViewParmSubset_377.append()
    dend_48 ModelViewParmSubset_377.append()
    dend_47 ModelViewParmSubset_377.append()
    dend_45 ModelViewParmSubset_377.append()
    dend_38 ModelViewParmSubset_377.append()
    dend_34 ModelViewParmSubset_377.append()
    dend_31 ModelViewParmSubset_377.append()
    apic_32 ModelViewParmSubset_377.append()
    apic_31 ModelViewParmSubset_377.append()
    apic_5 ModelViewParmSubset_377.append()
    apic_2 ModelViewParmSubset_377.append()
    dend_23 ModelViewParmSubset_377.append()
    dend_14 ModelViewParmSubset_377.append()
    dend_10 ModelViewParmSubset_377.append()
    dend_5 ModelViewParmSubset_377.append()
    dend_70 ModelViewParmSubset_377.append()
    dend_69 ModelViewParmSubset_377.append()
    dend_56 ModelViewParmSubset_377.append()
    dend_53 ModelViewParmSubset_377.append()
    dend_44 ModelViewParmSubset_377.append()
    dend_39 ModelViewParmSubset_377.append()
    dend_33 ModelViewParmSubset_377.append()
    dend_32 ModelViewParmSubset_377.append()
    apic_34 ModelViewParmSubset_377.append()
    apic_33 ModelViewParmSubset_377.append()
    apic_19 ModelViewParmSubset_377.append()
    apic_6 ModelViewParmSubset_377.append()
    apic_4 ModelViewParmSubset_377.append()
    apic_3 ModelViewParmSubset_377.append()
    dend_27 ModelViewParmSubset_377.append()
    dend_24 ModelViewParmSubset_377.append()
    dend_18 ModelViewParmSubset_377.append()
    dend_15 ModelViewParmSubset_377.append()
    dend_9 ModelViewParmSubset_377.append()
    dend_6 ModelViewParmSubset_377.append()
    dend_55 ModelViewParmSubset_377.append()
    dend_54 ModelViewParmSubset_377.append()
    dend_43 ModelViewParmSubset_377.append()
    dend_40 ModelViewParmSubset_377.append()
    apic_29 ModelViewParmSubset_377.append()
    apic_20 ModelViewParmSubset_377.append()
    apic_14 ModelViewParmSubset_377.append()
    apic_7 ModelViewParmSubset_377.append()
    dend_26 ModelViewParmSubset_377.append()
    dend_25 ModelViewParmSubset_377.append()
    dend_22 ModelViewParmSubset_377.append()
    dend_19 ModelViewParmSubset_377.append()
    dend_17 ModelViewParmSubset_377.append()
    dend_16 ModelViewParmSubset_377.append()
    dend_8 ModelViewParmSubset_377.append()
    dend_7 ModelViewParmSubset_377.append()
    dend_42 ModelViewParmSubset_377.append()
    dend_41 ModelViewParmSubset_377.append()
    apic_26 ModelViewParmSubset_377.append()
    apic_21 ModelViewParmSubset_377.append()
    apic_18 ModelViewParmSubset_377.append()
    apic_15 ModelViewParmSubset_377.append()
    apic_13 ModelViewParmSubset_377.append()
    apic_8 ModelViewParmSubset_377.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 ModelViewParmSubset_377.append()
    dend_20 ModelViewParmSubset_377.append()
    apic_28 ModelViewParmSubset_377.append()
    apic_27 ModelViewParmSubset_377.append()
    apic_25 ModelViewParmSubset_377.append()
    apic_22 ModelViewParmSubset_377.append()
    apic_17 ModelViewParmSubset_377.append()
    apic_16 ModelViewParmSubset_377.append()
    apic_12 ModelViewParmSubset_377.append()
    apic_9 ModelViewParmSubset_377.append()
    apic_24 ModelViewParmSubset_377.append()
    apic_23 ModelViewParmSubset_377.append()
    apic_11 ModelViewParmSubset_377.append()
    apic_10 ModelViewParmSubset_377.append()

    // Group: {name=dend, groups=[], sections=[dend_66, dend_63, dend_58, dend_49, dend_36, dend_29, dend_12, dend_3, dend_0, dend_72, dend_67, dend_65, dend_64, dend_62, dend_59, dend_51, dend_50, dend_46, dend_37, dend_35, dend_30, dend_28, dend_13, dend_11, dend_4, dend_2, dend_1, dend_74, dend_73, dend_71, dend_68, dend_61, dend_60, dend_57, dend_52, dend_48, dend_47, dend_45, dend_38, dend_34, dend_31, dend_23, dend_14, dend_10, dend_5, dend_70, dend_69, dend_56, dend_53, dend_44, dend_39, dend_33, dend_32, dend_27, dend_24, dend_18, dend_15, dend_9, dend_6, dend_55, dend_54, dend_43, dend_40, dend_26, dend_25, dend_22, dend_19, dend_17, dend_16, dend_8, dend_7, dend_42, dend_41, dend_21, dend_20]}
    dend = new SectionList()
    dend_66 dend.append()
    dend_63 dend.append()
    dend_58 dend.append()
    dend_49 dend.append()
    dend_36 dend.append()
    dend_29 dend.append()
    dend_12 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_72 dend.append()
    dend_67 dend.append()
    dend_65 dend.append()
    dend_64 dend.append()
    dend_62 dend.append()
    dend_59 dend.append()
    dend_51 dend.append()
    dend_50 dend.append()
    dend_46 dend.append()
    dend_37 dend.append()
    dend_35 dend.append()
    dend_30 dend.append()
    dend_28 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_74 dend.append()
    dend_73 dend.append()
    dend_71 dend.append()
    dend_68 dend.append()
    dend_61 dend.append()
    dend_60 dend.append()
    dend_57 dend.append()
    dend_52 dend.append()
    dend_48 dend.append()
    dend_47 dend.append()
    dend_45 dend.append()
    dend_38 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_23 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_70 dend.append()
    dend_69 dend.append()
    dend_56 dend.append()
    dend_53 dend.append()
    dend_44 dend.append()
    dend_39 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_55 dend.append()
    dend_54 dend.append()
    dend_43 dend.append()
    dend_40 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_30, apic_1, apic_32, apic_31, apic_5, apic_2, apic_34, apic_33, apic_19, apic_6, apic_4, apic_3, apic_29, apic_20, apic_14, apic_7, apic_26, apic_21, apic_18, apic_15, apic_13, apic_8, apic_28, apic_27, apic_25, apic_22, apic_17, apic_16, apic_12, apic_9, apic_24, apic_23, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_30 apic.append()
    apic_1 apic.append()
    apic_32 apic.append()
    apic_31 apic.append()
    apic_5 apic.append()
    apic_2 apic.append()
    apic_34 apic.append()
    apic_33 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_19 apic.append()
    apic_6 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()
    apic_29 apic.append()
    apic_20 apic.append()
    apic_14 apic.append()
    apic_7 apic.append()
    apic_26 apic.append()
    apic_21 apic.append()
    apic_18 apic.append()
    apic_15 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()
    apic_28 apic.append()
    apic_27 apic.append()
    apic_25 apic.append()
    apic_22 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=OneSecGrp_SectionRef_15761, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_15761 = new SectionList()
    soma_0 OneSecGrp_SectionRef_15761.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, axon_1, axon_1, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 4.330086  // units: uF/cm2
    forsec apic cm = 4.330086  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 59.94484  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.023329811  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 9.6928716E-8  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.34482312  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.002399534  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 5.133303E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 3.5555198E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.001099541  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.305103E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 7.93169E-4  // units: S cm-2
        e_pas_nml2 = -88.22792  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.1905488E-4  // units: S cm-2
        e_pas_nml2 = -88.22792  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.8711227E-5  // units: S cm-2
        e_pas_nml2 = -88.22792  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.041789E-4  // units: S cm-2
        e_pas_nml2 = -88.22792  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.4532313E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0047123698  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_483108201
    forsec soma {
        insert CaDynamics_483108201
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_65 nseg = 5
    dend_64 nseg = 5
    dend_50 nseg = 3
    dend_35 nseg = 3
    dend_28 nseg = 5
    dend_11 nseg = 9
    dend_2 nseg = 3
    dend_74 nseg = 5
    dend_73 nseg = 3
    dend_71 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_57 nseg = 7
    dend_48 nseg = 5
    dend_47 nseg = 3
    dend_45 nseg = 3
    dend_34 nseg = 5
    apic_5 nseg = 17
    dend_10 nseg = 3
    dend_70 nseg = 3
    dend_69 nseg = 3
    dend_56 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 5
    apic_34 nseg = 7
    apic_19 nseg = 3
    apic_4 nseg = 7
    apic_3 nseg = 3
    dend_27 nseg = 3
    dend_9 nseg = 3
    dend_55 nseg = 9
    dend_54 nseg = 3
    apic_29 nseg = 3
    apic_14 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 7
    dend_16 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 3
    apic_18 nseg = 5
    apic_13 nseg = 7
    dend_21 nseg = 5
    dend_20 nseg = 3
    apic_28 nseg = 3
    apic_27 nseg = 3
    apic_25 nseg = 3
    apic_17 nseg = 3
    apic_16 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 3
    apic_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_483108201


