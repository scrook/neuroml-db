// Cell: bAC217_L5_LBC_01750e1e18_0_0
/*
{
  "id" : "bAC217_L5_LBC_01750e1e18_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250194, 4.43561, 0.96", "-4.93641, -0.239034, 5.21782, 0.96", "-5.32182, -0.544676, 5.77182, 0.88", "-6.59159, -1.39483, 7.37449, 0.81", "-7.14192, -1.74416, 7.99672, 0.74", "-8.00854, -2.318, 8.91471, 0.66", "-8.5337, -2.68055, 9.55005, 0.59", "-8.95647, -3.0148, 10.1637, 0.81", "-9.28222, -3.25873, 10.6435, 0.81", "-9.97427, -3.68092, 11.6303, 0.59", "-10.5686, -3.99385, 12.5121, 1.33", "-11.9964, -4.64799, 14.7453, 1.55", "-13.0406, -5.08568, 16.5362, 0.74", "-13.4112, -5.20708, 17.1892, 0.59", "-13.9262, -5.33216, 18.0943, 1.03", "-14.1345, -5.35612, 18.4504, 1.47", "-14.7183, -5.35126, 19.407, 1.47", "-15.8701, -5.25616, 21.304, 0.81", "-16.2841, -5.22847, 22.1363, 0.59", "-16.6664, -5.26733, 23.1091, 0.59", "-16.9052, -5.35267, 23.8105, 0.96", "-17.1222, -5.50241, 24.5635, 0.96", "-17.696, -6.06604, 26.9381, 0.59", "-17.933, -6.44261, 28.382, 0.59", "-18.0446, -6.74699, 29.5012, 0.44", "-18.0853, -6.95477, 30.2038, 1.18", "-18.1059, -7.19512, 30.8226, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 7.9902, 1.68561, 3.24", "-1.51955, 8.60012, 1.80175, 3.24", "-1.53953, 10.6716, 2.19619, 2.58", "-1.55516, 12.2927, 2.50487, 2.36", "-1.5679, 13.6133, 2.75632, 2.36", "-1.58264, 15.1408, 3.0472, 2.36", "-1.58976, 15.8789, 3.18773, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.3398, 3.06561, 1.18", "5.72494, -6.39872, 3.21829, 1.18", "6.75502, -6.84587, 3.96569, 0.88", "7.32115, -7.09404, 4.28739, 1.11", "8.89656, -7.74381, 4.99646, 1.33", "9.68137, -8.04301, 5.27364, 1.33", "10.5723, -8.37336, 5.58868, 1.25", "11.6483, -8.76204, 5.91348, 0.96", "12.5229, -9.09079, 6.1104, 0.96", "13.2519, -9.3804, 6.22854, 1.25", "14.1477, -9.71112, 6.35, 1.25", "15.4104, -10.0997, 6.59594, 1.47", "16.2528, -10.3091, 6.82336, 0.74", "16.9021, -10.4216, 7.08464, 0.74", "17.8582, -10.5478, 7.54481, 0.59", "19.0957, -10.6943, 8.16373, 0.59", "19.5898, -10.748, 8.40073, 0.81", "20.1579, -10.8084, 8.62197, 0.81", "21.4874, -10.9049, 9.18313, 0.52", "21.9949, -10.9133, 9.40503, 0.52", "22.8183, -10.8913, 9.75712, 0.52", "23.4598, -10.9636, 9.95125, 0.59", "24.4561, -11.2442, 10.1384, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -9.79978, 1.87561, 2.43", "1.77634, -9.79978, 1.87561, 2.43", "1.84608, -10.9181, 1.60171, 2.06", "1.95026, -12.5884, 1.1926, 1.33", "2.05255, -14.2285, 0.790892, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58976, 15.8789, 3.18773, 2.06", "-0.741844, 16.804, 4.02812, 2.06", "0.888356, 18.7225, 5.53453, 1.92", "2.40037, 20.6274, 6.89319, 1.47", "3.05674, 21.5295, 7.47598, 1.47", "4.05354, 23.0312, 8.34781, 1.25", "4.79002, 24.1407, 8.99195, 1.77", "5.53405, 25.3404, 9.65379, 1.55", "6.31764, 26.8135, 10.2556, 1.62", "6.78611, 27.849, 10.5843, 2.21", "7.25128, 29.0049, 10.9107, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58976, 15.8789, 3.18773, 0.59", "-3.32738, 16.1831, 2.42024, 0.59", "-4.28786, 16.2767, 2.02783, 0.59", "-5.11536, 16.2928, 1.63988, 0.59", "-6.76705, 16.2552, 0.699307, 0.52", "-7.84875, 16.2262, 0.0124148, 0.81", "-8.67332, 16.2131, -0.535125, 1.18", "-9.29762, 16.1724, -0.947969, 1.18", "-10.8083, 16.0458, -1.98646, 0.66", "-12.1419, 15.9625, -2.89063, 0.66", "-13.0298, 15.9404, -3.45629, 1.25", "-13.5392, 15.9464, -3.75372, 1.47", "-14.6999, 16.0025, -4.39755, 0.52", "-15.5621, 16.0694, -4.81356, 0.52", "-17.0147, 16.2081, -5.2966, 0.52", "-17.9578, 16.275, -5.50613, 1.03", "-18.6397, 16.2936, -5.63199, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "24.4561, -11.2442, 10.1384, 0.52", "25.3537, -12.3622, 8.4826, 0.52", "25.5782, -12.8515, 7.74949, 0.37", "25.9053, -13.9526, 5.95409, 0.37", "26.0457, -14.6337, 4.52107, 0.59", "26.1005, -14.963, 3.68879, 0.22", "26.1741, -15.6811, 1.8219, 0.22", "26.1596, -16.1077, 0.51323, 0.22", "26.0392, -16.7731, -1.68028, 0.74", "25.7044, -17.6828, -4.76698, 0.29", "25.4809, -18.2577, -6.81401, 0.07", "25.4166, -18.508, -7.85726, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "24.4561, -11.2442, 10.1384, 1.03", "26.3058, -11.65, 11.9771, 1.03", "27.2135, -11.7052, 12.3971, 0.52", "28.6547, -11.5925, 12.9437, 0.52", "31.5515, -11.1993, 13.9949, 0.37", "33.2262, -10.9208, 14.4898, 0.37", "37.3088, -10.1769, 15.5271, 0.37", "48.0133, -8.03502, 17.4392, 0.37", "54.3326, -6.67486, 18.2719, 0.66", "55.9976, -6.27672, 18.4182, 0.66", "60.0653, -5.13567, 18.5063, 0.74", "61.8672, -4.54472, 18.4441, 0.74", "64.2024, -3.63175, 18.1388, 0.37", "65.6626, -2.99912, 17.8115, 0.37", "67.088, -2.50652, 17.5319, 0.37", "68.4141, -2.06772, 17.4901, 0.81", "70.0294, -1.51518, 17.8161, 0.81", "71.264, -1.10093, 18.1817, 0.81", "73.2227, -0.618211, 18.8759, 0.37", "74.7067, -0.452659, 19.352, 0.29", "76.3877, -0.495517, 19.8399, 0.29", "78.4684, -0.773605, 20.4723, 0.44", "80.0229, -1.12837, 21.0383, 0.44", "82.4233, -1.79974, 21.9966, 0.44", "84.5383, -2.4273, 22.8544, 0.88", "85.4248, -2.68122, 23.2737, 0.88", "87.481, -3.17853, 24.5848, 0.52", "89.2268, -3.40983, 26.16, 0.74", "90.5784, -3.34845, 27.6536, 0.81", "91.3795, -3.15358, 28.6186, 0.81", "92.3848, -2.78659, 29.8307, 0.52", "93.7022, -2.24108, 31.2991, 0.52", "94.4035, -1.95886, 31.9671, 0.74", "95.5676, -1.57867, 32.8659, 0.74", "96.8858, -1.30412, 33.7035, 0.59", "98.2262, -1.17601, 34.3602, 0.59", "100.018, -1.15961, 35.0108, 0.66", "101.406, -1.24703, 35.3236, 0.88", "102.367, -1.36994, 35.4379, 0.88", "103.544, -1.64265, 35.4258, 0.52", "105.048, -2.17305, 35.216, 0.52", "106.125, -2.71121, 34.8872, 0.52", "107.815, -3.87262, 34.0867, 0.44", "108.919, -4.69252, 33.3951, 0.44", "110.375, -5.78001, 32.3074, 0.59", "110.99, -6.21166, 31.7904, 0.74", "111.971, -6.73741, 30.9524, 0.52", "112.754, -6.72107, 30.5123, 0.37", "115.207, -5.41617, 29.9973, 0.52", "116.16, -4.87986, 29.8706, 0.52", "117.299, -4.29033, 29.7704, 0.52", "119.232, -3.42483, 29.6618, 0.52", "121.062, -2.6384, 29.6379, 0.52", "122.861, -1.90274, 29.6659, 0.66", "124.351, -1.38428, 29.7362, 0.66", "125.862, -0.863875, 29.8069, 0.37", "127.284, -0.413188, 29.8727, 0.37", "128.866, 0.0117103, 29.9536, 0.37", "129.951, 0.288267, 29.9744, 0.66", "130.516, 0.42926, 29.9469, 0.66", "131.23, 0.612919, 29.8023, 0.66", "131.965, 0.783193, 29.5395, 0.66", "133.13, 1.0008, 28.9978, 0.37", "134.75, 1.20275, 28.1751, 0.37", "136.423, 1.3873, 27.4193, 0.37", "137.822, 1.57284, 26.8928, 0.22", "139.137, 1.75616, 26.5282, 0.37", "140.168, 1.9479, 26.4073, 0.44", "141.129, 2.21319, 26.5021, 0.44", "143.066, 2.9092, 27.1299, 0.52", "143.673, 3.16481, 27.4035, 0.37", "144.611, 3.59439, 27.8887, 0.37", "145.531, 4.02782, 28.3277, 0.52", "146.196, 4.39703, 28.5491, 0.66", "146.753, 4.75487, 28.6257, 0.88", "147.149, 5.06108, 28.6195, 0.88", "147.658, 5.50182, 28.6053, 1.03", "148.296, 6.1215, 28.5817, 1.03", "149.282, 7.0827, 28.5257, 0.52", "150.474, 8.18026, 28.413, 0.29", "151.516, 8.96539, 28.3082, 0.66", "152.337, 9.50253, 28.2124, 0.81", "153.154, 9.96409, 28.1064, 0.81", "153.899, 10.3504, 28.0038, 0.81", "155.118, 10.9074, 27.8579, 0.37", "157.493, 11.7987, 27.5382, 0.37", "158.683, 12.1673, 27.3948, 0.44", "159.698, 12.4857, 27.298, 0.59", "160.618, 12.8177, 27.2485, 0.59", "161.941, 13.3839, 27.2496, 0.59", "163.123, 13.9925, 27.3337, 0.52", "164.429, 14.7638, 27.4905, 0.74", "165.329, 15.248, 27.6339, 0.74", "166.65, 15.8775, 27.7641, 0.37", "167.675, 16.3137, 27.8003, 0.44", "168.819, 16.7586, 27.7781, 0.66", "169.686, 17.0527, 27.7271, 0.74", "170.659, 17.2904, 27.6384, 0.74", "172.714, 17.6959, 27.3949, 0.59", "173.304, 17.8025, 27.3072, 0.59", "174.165, 17.9861, 27.1572, 0.59", "175.027, 18.1911, 26.9618, 0.37", "176.355, 18.5665, 26.6402, 0.59", "177.51, 18.9571, 26.3375, 0.81", "178.37, 19.2674, 26.1612, 0.81", "179.68, 19.7009, 25.9516, 0.52", "181.115, 20.1774, 25.8065, 0.37", "182.084, 20.5064, 25.7788, 0.29", "182.8, 20.7528, 25.8256, 0.29", "184.364, 21.3585, 26.125, 0.52", "185.877, 22.0214, 26.5622, 0.52", "186.882, 22.441, 26.9085, 0.88", "187.715, 22.7467, 27.1581, 0.88", "188.378, 22.9609, 27.2568, 0.88", "189.873, 23.4249, 27.2691, 0.37", "190.935, 23.7891, 27.098, 0.37", "192.456, 24.3371, 26.6879, 0.37", "194.29, 24.9168, 26.1475, 0.29", "195.711, 25.3583, 25.6063, 0.29", "196.587, 25.6679, 25.2368, 0.52", "197.035, 25.8527, 25.0273, 0.74", "197.797, 26.2405, 24.6303, 0.44", "199.302, 27.103, 23.8624, 0.37", "201.733, 28.5463, 22.7471, 0.44", "203.111, 29.3339, 22.1057, 0.44", "204.499, 30.1088, 21.3876, 1.03", "205.897, 30.8825, 20.5926, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.05255, -14.2285, 0.790892, 1.18", "1.80369, -15.7557, 2.38875, 1.18", "1.61212, -16.4483, 3.09358, 1.18", "1.12623, -18.2049, 4.88135, 1.18", "0.779719, -19.4577, 6.15626, 0.88", "0.564077, -20.2373, 6.94969, 0.74", "0.375949, -20.9174, 7.64187, 1.03", "-0.173819, -22.1763, 8.73524, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.05255, -14.2285, 0.790892, 0.96", "2.4156, -15.2887, -1.55563, 0.96", "2.7171, -16.2596, -3.31888, 0.96", "2.7483, -16.4001, -3.54688, 1.4", "3.17624, -18.2197, -6.31572, 0.88", "3.28514, -18.6079, -6.86929, 0.88", "3.51141, -19.2924, -7.80371, 0.52", "3.87196, -20.2002, -8.92708, 0.52", "4.50084, -21.7115, -10.6799, 0.88", "5.32627, -23.6105, -12.7353, 0.52", "6.016, -25.0616, -14.1976, 0.52", "6.47342, -25.9166, -15.0616, 0.52", "6.99543, -26.8497, -15.9711, 0.52", "7.42904, -27.627, -16.6797, 0.52", "7.98817, -28.6559, -17.4844, 0.88", "8.33326, -29.44, -17.992, 1.11", "8.92094, -31.1207, -18.9323, 0.44", "9.25005, -32.2122, -19.5091, 0.74", "9.47753, -32.9917, -19.8877, 0.96", "9.72037, -33.7664, -20.231, 0.96", "10.1116, -34.9782, -20.7936, 0.66", "10.2973, -35.5599, -21.0882, 0.66", "10.7818, -36.9817, -21.8647, 0.44", "11.093, -37.7189, -22.4658, 0.59", "11.4726, -38.4307, -23.2121, 0.44", "12.2717, -39.5691, -25.0724, 0.37", "12.805, -40.1628, -26.5325, 0.96", "13.005, -40.3595, -27.1406, 1.33", "14.1943, -41.5141, -31.3792, 0.81", "14.4642, -41.7889, -32.48, 1.11", "15.6212, -43.0966, -37.8496, 0.66", "16.3848, -44.1465, -41.9798, 1.55", "16.9914, -45.2263, -45.7392, 0.96", "17.4412, -46.3754, -49.2219, 0.81", "17.5488, -46.888, -50.4866, 0.96", "17.5764, -47.5235, -51.6795, 0.37", "17.4735, -48.6402, -53.0177, 0.29", "17.2581, -49.9577, -54.0087, 0.29", "17.099, -50.7674, -54.383, 0.52", "17.0256, -51.2347, -54.5105, 0.52", "16.7885, -53.2564, -55.049, 0.29", "16.7425, -53.8144, -55.2124, 0.59", "16.7182, -54.3192, -55.364, 0.59", "16.6887, -54.9618, -55.5786, 0.29", "16.6355, -56.2702, -56.0811, 0.29", "16.597, -57.548, -56.6623, 0.59", "16.5747, -57.9835, -56.8968, 0.81", "16.4158, -59.9703, -58.0778, 0.22", "16.3262, -60.9685, -58.748, 0.22", "16.1998, -62.3544, -59.7702, 0.22", "16.048, -63.9816, -61.0363, 0.81", "15.9041, -65.4419, -62.272, 0.44", "15.8236, -66.2803, -63.0295, 0.44", "15.6969, -67.6879, -64.3771, 0.88", "15.6507, -68.6612, -65.2646, 0.74", "15.6427, -69.0657, -65.6093, 0.74", "15.5707, -71.0703, -67.1487, 0.44", "15.5311, -71.9539, -67.7444, 0.44", "15.4522, -72.6895, -68.2118, 0.29", "15.2505, -73.8015, -68.8377, 0.29", "14.7627, -75.6594, -69.8092, 0.29", "14.417, -76.7325, -70.3291, 0.74", "14.0877, -77.625, -70.69, 0.74", "13.3935, -79.3256, -71.3744, 0.44", "13.0597, -80.1071, -71.6685, 0.44", "12.7005, -80.9594, -71.9442, 0.29", "12.5547, -81.3273, -72.0255, 0.66", "12.171, -82.3025, -72.2129, 0.37", "11.8515, -83.0965, -72.3339, 0.88", "11.5208, -83.8173, -72.4436, 0.88", "11.0203, -84.7831, -72.648, 0.59", "10.4865, -85.7124, -72.8836, 0.29", "9.90707, -86.6302, -73.2467, 0.66", "9.63282, -87.0423, -73.4821, 0.66", "8.83843, -88.3728, -74.5154, 0.22", "8.59798, -88.8657, -74.9737, 0.22", "8.43266, -89.2519, -75.3746, 0.74", "8.01514, -90.6131, -76.9204, 0.44", "7.87107, -91.4346, -77.9205, 0.44", "7.80468, -92.5499, -79.3698, 0.29", "7.85142, -92.8796, -79.836, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "7.25128, 29.0049, 10.9107, 0.81", "8.61486, 30.2347, 10.3197, 0.81", "9.17289, 30.7461, 10.0073, 0.81", "10.1681, 31.5789, 9.38134, 0.81", "11.5019, 32.597, 8.511, 0.96", "12.2051, 33.1027, 8.04516, 1.25", "12.8226, 33.5262, 7.63727, 1.25", "13.9557, 34.2974, 6.84713, 0.96", "14.885, 34.9447, 6.17242, 0.81", "15.7231, 35.5265, 5.54153, 1.33", "16.2603, 35.8921, 5.09783, 1.62", "17.0738, 36.4023, 4.43029, 0.74", "17.8285, 36.8344, 3.83458, 0.59", "18.5868, 37.281, 3.22681, 0.52", "19.4177, 37.8606, 2.41229, 0.44", "19.897, 38.2141, 1.80132, 0.44", "20.6999, 38.7486, 0.490948, 0.74", "21.1503, 38.9828, -0.394752, 0.74", "21.8675, 39.1955, -1.91761, 0.52", "22.4997, 39.2623, -3.20257, 0.88", "23.1492, 39.2892, -4.5631, 0.88", "23.6688, 39.3876, -5.82575, 0.59", "23.9111, 39.4632, -6.4748, 0.59", "24.214, 39.5572, -7.22501, 0.44", "24.7671, 39.7348, -8.16438, 0.44", "25.2752, 39.9714, -8.79867, 0.44", "26.4127, 40.7025, -9.87348, 0.44", "27.3722, 41.4822, -10.6733, 0.74", "28.1796, 42.3152, -11.3059, 0.96", "29.6945, 44.2408, -12.3897, 0.44", "30.0389, 44.7504, -12.6188, 0.96", "30.6452, 45.7374, -12.9948, 0.37", "31.2214, 46.8094, -13.3306, 0.37", "31.7042, 48.0359, -13.8429, 0.37", "31.9655, 49.0346, -14.3791, 0.74", "32.0887, 49.7441, -14.8681, 0.44", "32.2153, 50.6475, -15.5227, 0.52", "32.278, 51.3449, -16.0425, 1.11", "32.4125, 53.4188, -17.5916, 0.44", "32.4592, 54.533, -18.395, 0.29", "32.455, 55.5701, -19.1127, 0.29", "32.4356, 56.3446, -19.6081, 0.81", "32.4197, 57.0164, -20.0073, 0.81", "32.4248, 58.0414, -20.564, 0.52", "32.4561, 59.4192, -21.2226, 0.52", "32.4523, 61.0131, -22.0418, 0.44", "32.4317, 61.4447, -22.2739, 0.88", "32.3946, 62.1566, -22.686, 0.88", "32.3899, 63.1496, -23.2917, 0.37", "32.4444, 63.8905, -23.8366, 0.22", "32.5434, 64.5983, -24.4046, 0.22", "32.6863, 65.3015, -25.0056, 0.22", "32.9234, 66.1762, -25.8132, 0.22", "33.3155, 67.329, -26.8456, 0.22", "34.0201, 68.9689, -28.2571, 0.81", "34.2839, 69.4549, -28.6443, 0.81", "34.8676, 70.3585, -29.3294, 0.81", "35.4199, 71.1346, -29.8703, 0.44", "36.1788, 72.1684, -30.5228, 0.44", "36.4674, 72.5606, -30.7295, 0.96", "37.0005, 73.2784, -31.0352, 0.52", "37.6784, 74.1472, -31.4161, 0.37", "38.2783, 74.9167, -31.7462, 0.66", "38.7518, 75.5434, -32.0481, 0.66", "39.2198, 76.196, -32.3927, 0.29", "39.9089, 77.1537, -32.8975, 0.29", "40.587, 78.0778, -33.3789, 0.59", "41.0619, 78.6886, -33.6973, 0.37", "41.6482, 79.3875, -34.0911, 0.66", "42.1382, 79.9473, -34.4194, 0.66", "43.0029, 80.9267, -34.9934, 0.29", "43.6454, 81.6789, -35.4093, 0.29", "44.055, 82.1607, -35.677, 0.29", "44.4357, 82.5625, -35.9324, 0.66", "44.7174, 82.8407, -36.124, 0.66", "45.0628, 83.2054, -36.4219, 0.66", "45.6048, 83.8317, -36.9896, 0.37", "46.1846, 84.5387, -37.7242, 0.37", "46.8386, 85.3443, -38.7086, 0.96", "47.1967, 85.7479, -39.2792, 0.96", "48.1182, 86.6861, -40.7789, 0.29", "48.7177, 87.2571, -41.7911, 0.29", "49.2812, 87.7761, -42.702, 0.29", "50.1402, 88.4927, -43.9019, 0.29", "50.6351, 88.8575, -44.4877, 0.74", "51.0983, 89.1759, -44.9724, 0.74", "52.3994, 90.048, -46.0666, 0.29", "54.0244, 91.2051, -47.2485, 0.29", "55.7734, 92.5131, -48.3057, 0.29", "56.615, 93.1913, -48.74, 0.29", "57.3734, 93.8442, -49.0997, 0.29", "58.6365, 94.9718, -49.593, 0.66", "59.2613, 95.5034, -49.8256, 0.66", "60.0312, 96.0762, -50.1531, 0.37", "60.8032, 96.6028, -50.5897, 1.03", "61.5088, 97.0148, -51.0514, 1.03", "62.5855, 97.5458, -51.8725, 0.66", "64.6596, 98.4436, -53.7239, 0.22", "66.3746, 99.1405, -55.3767, 0.52", "67.8474, 99.7397, -56.8981, 0.29", "68.8049, 100.141, -57.9653, 0.29", "69.6635, 100.568, -59.0132, 0.66", "70.0245, 100.81, -59.4843, 0.66", "70.8031, 101.494, -60.297, 0.22", "71.28, 101.989, -60.738, 0.52", "71.6907, 102.449, -61.0634, 0.52", "73.5397, 104.616, -62.2996, 0.22", "74.9563, 106.277, -63.1242, 0.22", "77.0929, 108.768, -64.2534, 0.22", "78.2158, 110.081, -64.7985, 0.52", "78.8513, 110.816, -65.0688, 0.22", "79.7124, 111.794, -65.3318, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "7.25128, 29.0049, 10.9107, 0.66", "6.80205, 30.741, 11.2409, 0.66", "6.74192, 31.2935, 11.3214, 0.74", "6.7349, 32.0339, 11.4374, 0.74", "6.70294, 32.7486, 11.4521, 1.03", "6.66768, 33.4279, 11.4325, 1.03", "6.616, 34.2252, 11.3906, 0.74", "6.65348, 35.1723, 11.3525, 1.11", "6.70126, 36.0151, 11.263, 1.47", "6.76501, 37.7318, 10.9146, 1.62", "6.75364, 38.2564, 10.7606, 1.62", "6.718, 38.5798, 10.6463, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.6397, 16.2936, -5.63199, 0.29", "-19.7432, 16.6528, -4.57386, 0.29", "-20.6093, 16.9354, -3.87637, 0.88", "-21.5265, 17.2102, -3.19766, 1.11", "-24.656, 18.1018, -1.02671, 1.03", "-25.634, 18.3523, -0.378716, 0.59", "-26.4226, 18.536, 0.161835, 0.29", "-27.4781, 18.7678, 0.967549, 0.29", "-28.0703, 18.9073, 1.43122, 0.52", "-28.4364, 19.0044, 1.70748, 0.74", "-29.233, 19.2367, 2.16201, 0.74", "-30.832, 19.7405, 3.11845, 0.37", "-31.4765, 19.9655, 3.52742, 0.59", "-31.9053, 20.141, 3.78272, 0.59", "-32.7566, 20.5289, 4.21758, 0.29", "-33.9044, 21.0723, 4.73669, 0.59", "-34.4227, 21.3148, 4.90267, 0.37", "-35.6229, 21.8215, 5.11916, 0.29", "-36.6986, 22.2318, 5.24135, 1.25", "-37.1386, 22.3822, 5.26243, 1.62", "-37.6159, 22.5506, 5.24054, 1.62", "-39.0212, 23.0802, 5.08596, 0.29", "-39.9205, 23.4143, 4.9624, 0.29", "-40.9252, 23.7886, 4.79774, 0.52", "-41.4595, 23.9914, 4.70598, 0.59", "-43.0707, 24.6166, 4.41441, 0.22", "-43.854, 24.9346, 4.26145, 0.74", "-44.5741, 25.2482, 4.12946, 0.74", "-45.3372, 25.591, 3.98905, 0.22", "-45.8261, 25.8103, 3.89911, 0.37", "-46.2974, 26.0355, 3.81173, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.6397, 16.2936, -5.63199, 0.44", "-20.0791, 15.7787, -6.33296, 0.44", "-21.0705, 15.4006, -6.79942, 0.44", "-22.0112, 15.0382, -7.22651, 0.96", "-22.8968, 14.6732, -7.64549, 1.25", "-24.1161, 14.1376, -8.2151, 0.74", "-24.9511, 13.7591, -8.58304, 0.59", "-25.7527, 13.3807, -8.94974, 0.59", "-26.5062, 13.0212, -9.33186, 0.59", "-27.6663, 12.4892, -9.97916, 0.44", "-29.2027, 11.8257, -10.9018, 0.81", "-31.0954, 11.058, -12.2114, 0.81", "-31.967, 10.6936, -12.9699, 0.81", "-32.789, 10.3249, -13.8719, 0.44", "-33.3938, 10.063, -14.6255, 0.44", "-34.1563, 9.76722, -15.5901, 0.44", "-35.367, 9.36075, -17.136, 0.44", "-36.8407, 8.96535, -18.9346, 0.88", "-37.979, 8.7202, -20.137, 0.88", "-39.1466, 8.5198, -21.1908, 0.52", "-41.0782, 8.29343, -22.6577, 0.52", "-41.8016, 8.24282, -23.1174, 0.52", "-43.099, 8.19421, -23.6961, 0.88", "-44.108, 8.16759, -24.0109, 0.88", "-45.2021, 8.10842, -24.2796, 1.18", "-46.2387, 7.99358, -24.5052, 1.18", "-47.8192, 7.68793, -24.7507, 0.74", "-49.4884, 7.24676, -24.8447, 0.52", "-51.1509, 6.73057, -24.8153, 0.52", "-52.4534, 6.3345, -24.7444, 0.88", "-54.2277, 5.85639, -24.6196, 0.88", "-56.1583, 5.39588, -24.4711, 0.88", "-58.4407, 4.91952, -24.3002, 1.03", "-59.6612, 4.65815, -24.2437, 0.96", "-61.2656, 4.30899, -24.1903, 0.74", "-63.4404, 3.86494, -24.1867, 0.52", "-64.3229, 3.68209, -24.2424, 0.81", "-65.3032, 3.45257, -24.3994, 0.81", "-66.81, 2.99877, -24.7496, 0.52", "-67.3017, 2.81078, -24.8673, 0.88", "-67.9011, 2.52307, -25.0141, 1.18", "-69.2768, 1.84183, -25.3402, 1.18", "-70.983, 1.07705, -25.7218, 0.59", "-71.7612, 0.767168, -25.8872, 0.74", "-72.6787, 0.452695, -26.0744, 0.74", "-73.9789, 0.0347343, -26.2709, 0.44", "-74.911, -0.266055, -26.3755, 0.44", "-75.8324, -0.585237, -26.4528, 0.74", "-76.8589, -0.966615, -26.5776, 0.74", "-77.8427, -1.32997, -26.6242, 0.74", "-79.9956, -2.11269, -26.5993, 0.29", "-81.3672, -2.64175, -26.5105, 0.37", "-82.8103, -3.25247, -26.3686, 0.37", "-84.5988, -4.04198, -26.155, 0.37", "-87.7301, -5.47296, -25.8494, 0.74", "-88.7034, -5.94743, -25.8092, 1.03", "-90.7372, -7.01911, -25.7909, 0.59", "-92.4531, -7.9641, -25.7507, 0.44", "-93.5429, -8.57218, -25.7239, 0.88", "-95.0557, -9.41671, -25.7145, 0.74", "-96.493, -10.2149, -25.8837, 0.37", "-98.1891, -11.016, -26.1078, 0.37", "-99.0641, -11.3059, -26.2461, 0.81", "-99.7935, -11.4355, -26.3572, 1.03", "-100.492, -11.4694, -26.4369, 1.03", "-101.414, -11.4181, -26.503, 0.66", "-102.784, -11.2492, -26.631, 0.37", "-104.023, -11.0573, -26.8362, 0.59", "-105.126, -10.8633, -27.0475, 0.59", "-106.191, -10.6696, -27.2323, 0.37", "-107.389, -10.4761, -27.3826, 0.66", "-108.326, -10.3525, -27.5476, 0.88", "-108.746, -10.3019, -27.6632, 0.88", "-110.699, -10.0221, -28.3958, 0.29", "-111.866, -9.84719, -28.9669, 0.29", "-113.354, -9.61644, -29.8958, 0.29", "-115.569, -9.29766, -31.5471, 0.44", "-117.147, -9.15342, -32.8792, 0.44", "-117.766, -9.15661, -33.484, 0.44", "-118.108, -9.20541, -33.8826, 0.59", "-118.743, -9.33922, -34.6734, 0.59", "-119.2, -9.44779, -35.2048, 0.59", "-120.129, -9.69419, -36.0418, 0.37", "-120.903, -9.94049, -36.7487, 0.37", "-121.588, -10.169, -37.4106, 0.66", "-122.223, -10.3997, -38.1243, 0.66", "-122.815, -10.6496, -38.8568, 0.66", "-123.877, -11.158, -40.2927, 0.44", "-124.778, -11.6208, -41.5697, 0.66", "-125.278, -11.9154, -42.377, 0.66", "-126.495, -12.6737, -44.5089, 0.29", "-127.203, -13.1093, -45.7561, 0.29", "-127.844, -13.4977, -46.8594, 0.66", "-128.334, -13.7626, -47.6164, 0.88", "-130.151, -14.6082, -50.161, 0.44", "-130.793, -14.862, -51.0355, 0.29", "-131.822, -15.171, -52.2217, 0.29", "-132.65, -15.394, -53.087, 0.66", "-133.438, -15.6303, -53.8755, 0.66", "-134.048, -15.8495, -54.3961, 0.66", "-135.338, -16.4303, -55.5535, 0.37", "-136.595, -17.0653, -56.9226, 0.29", "-137.071, -17.2985, -57.5191, 0.29", "-138.258, -17.82, -59.2363, 0.29", "-139.341, -18.2176, -60.9585, 1.25", "-141.628, -18.7723, -64.7776, 0.29", "-142.314, -18.8614, -66.0002, 0.29", "-142.699, -18.8648, -66.7258, 0.59", "-143.499, -18.7942, -68.1629, 0.44", "-143.973, -18.7164, -68.9194, 0.22", "-144.544, -18.5982, -69.7127, 0.81", "-146.254, -18.2742, -71.3048, 0.44", "-147.235, -18.1358, -72.0417, 0.59", "-147.824, -18.0758, -72.4135, 0.59", "-149.37, -17.9549, -73.1049, 0.29", "-150.763, -17.8521, -73.5447, 0.59", "-151.629, -17.7863, -73.6622, 0.59", "-153.297, -17.6439, -73.6493, 0.29", "-154.624, -17.5251, -73.5331, 0.29", "-156.951, -17.2741, -73.1357, 0.74", "-158.042, -17.1337, -72.8614, 0.74", "-159.922, -16.8316, -72.3054, 0.37", "-161.298, -16.5219, -71.8572, 0.37", "-162.452, -16.1492, -71.443, 0.44", "-163.713, -15.5924, -71.0075, 0.74", "-164.473, -15.1521, -70.7957, 0.74", "-165.318, -14.5593, -70.6045, 0.37", "-166.083, -13.8912, -70.4818, 0.59", "-166.937, -13.0029, -70.349, 0.37", "-167.586, -12.2581, -70.278, 0.29", "-168.036, -11.7106, -70.2456, 0.52", "-168.634, -11.0068, -70.216, 0.74", "-169.564, -10.0128, -70.1871, 0.29", "-170.068, -9.53314, -70.183, 0.74", "-170.791, -8.9161, -70.201, 0.74", "-171.795, -8.11803, -70.2766, 0.29", "-172.831, -7.35067, -70.4076, 0.29", "-173.875, -6.65542, -70.612, 0.29", "-175.036, -5.95292, -70.9061, 0.29", "-176.179, -5.29165, -71.2793, 0.29", "-177.377, -4.63401, -71.7601, 0.96", "-177.953, -4.34761, -72.0268, 0.96", "-179.666, -3.56327, -72.8889, 0.29", "-180.153, -3.36097, -73.1497, 0.66", "-181.163, -2.99381, -73.6912, 0.66", "-182.302, -2.63461, -74.2649, 0.29", "-183.18, -2.41443, -74.6395, 0.29", "-183.736, -2.29039, -74.8631, 0.66", "-184.35, -2.16237, -75.0927, 0.88", "-185.342, -1.96141, -75.4459, 0.66", "-186.07, -1.78079, -75.7029, 0.15", "-187.098, -1.45717, -76.0755, 0.15", "-188.067, -1.08916, -76.4594, 0.15", "-188.847, -0.743177, -76.7872, 0.81", "-189.485, -0.41632, -77.1097, 1.03", "-191.148, 0.467137, -78.0496, 0.29", "-192.011, 0.930326, -78.5607, 0.81", "-192.661, 1.29938, -78.981, 0.81", "-193.885, 1.97293, -79.785, 0.29", "-195.119, 2.60016, -80.6995, 0.29", "-196.016, 2.98553, -81.405, 0.29", "-197.1, 3.34429, -82.3251, 0.29", "-197.822, 3.51315, -83.1135, 1.18", "-198.425, 3.56555, -83.9614, 1.18", "-199.235, 3.45718, -85.5085, 0.52", "-199.656, 3.31365, -86.4831, 0.88", "-199.998, 3.12164, -87.498, 0.88", "-200.792, 2.45701, -90.5167, 0.44", "-201.147, 2.13982, -91.9411, 0.44", "-201.419, 1.91141, -93.1507, 0.74", "-201.594, 1.81142, -93.9028, 0.74", "-202.076, 1.65829, -95.7974, 0.44", "-202.488, 1.61419, -97.0503, 0.44", "-202.923, 1.6409, -97.9752, 0.88", "-203.399, 1.69978, -98.8247, 0.88", "-203.929, 1.77217, -99.6727, 0.88", "-204.98, 1.86027, -101.375, 0.52", "-205.888, 1.85712, -102.832, 0.52", "-206.446, 1.78715, -103.71, 0.59", "-207.034, 1.63073, -104.633, 0.44", "-207.673, 1.40899, -105.582, 0.44", "-208.5, 1.13829, -106.725, 0.44", "-209.342, 0.919249, -107.802, 0.88", "-209.891, 0.789467, -108.504, 0.88", "-210.605, 0.628586, -109.433, 0.37", "-211.345, 0.5134, -110.415, 0.37", "-212.422, 0.417731, -111.781, 0.59", "-213.811, 0.400315, -113.413, 0.37", "-214.303, 0.40565, -113.972, 0.74", "-215.17, 0.45576, -114.936, 0.74", "-216.629, 0.621768, -116.452, 0.37", "-217.2, 0.690941, -116.989, 0.59", "-218.574, 0.874737, -118.133, 0.29", "-219.627, 1.03471, -118.873, 0.29", "-220.611, 1.13975, -119.493, 0.29", "-222.037, 1.23095, -120.325, 0.59", "-222.52, 1.24059, -120.582, 1.11", "-222.901, 1.2416, -120.783, 1.4", "-224.082, 1.16911, -121.384, 0.81", "-225.313, 1.03503, -122.022, 0.37", "-226.437, 0.809435, -122.623, 0.22", "-227.276, 0.575178, -123.072, 0.22", "-228.642, 0.0926103, -123.863, 0.22", "-230.131, -0.561474, -124.794, 0.22", "-230.423, -0.717193, -124.991, 0.44", "-230.934, -1.04231, -125.365, 0.44", "-231.442, -1.44865, -125.813, 0.22", "-232.247, -2.21579, -126.708, 0.44", "-232.581, -2.5626, -127.198, 0.44", "-233.17, -3.12534, -128.127, 0.22", "-233.774, -3.60676, -129.001, 0.22", "-234.655, -4.16983, -130.149, 0.59", "-234.917, -4.30275, -130.466, 0.59", "-236.565, -4.88508, -132.564, 0.29", "-237.15, -5.06666, -133.306, 0.29", "-238.035, -5.29732, -134.417, 0.29", "-238.653, -5.43229, -135.145, 0.81", "-239.222, -5.53267, -135.75, 0.81", "-241.458, -5.76965, -138.195, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "205.897, 30.8825, 20.5926, 0.29", "207.118, 30.045, 20.4457, 0.29", "207.903, 29.6379, 20.2421, 0.29", "209.085, 29.2008, 19.684, 0.52", "209.388, 29.0517, 19.5846, 0.52", "209.751, 28.8474, 19.4965, 0.37", "210.43, 28.465, 19.3314, 0.52", "211.935, 27.7395, 18.9614, 0.37", "213.394, 27.0614, 18.5807, 0.88", "216.291, 25.6021, 17.784, 0.29", "216.666, 25.3717, 17.7065, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "205.897, 30.8825, 20.5926, 0.29", "207.013, 32.0288, 20.6786, 0.29", "207.505, 32.4424, 20.6999, 0.44", "208.219, 33.0028, 20.7435, 0.44", "208.971, 33.5768, 20.8248, 0.74", "209.989, 34.3499, 20.9737, 0.74", "210.989, 35.114, 21.1527, 0.44", "212.103, 35.907, 21.3758, 0.66", "212.676, 36.3255, 21.5172, 0.66", "213.595, 37.1257, 21.8084, 0.74", "213.994, 37.5434, 21.977, 0.29", "214.415, 38.0776, 22.2117, 0.37", "214.908, 38.7162, 22.5648, 0.81", "215.177, 39.0512, 22.7892, 1.03", "216.555, 40.5863, 23.989, 0.29", "217.331, 41.3842, 24.7006, 0.29", "218.467, 42.4849, 25.7969, 0.29", "219.455, 43.4328, 26.7595, 0.29", "220.277, 44.2389, 27.557, 1.03", "220.738, 44.7248, 27.9992, 1.03", "221.216, 45.2443, 28.4407, 1.03", "221.611, 45.7409, 28.7296, 0.66", "222.4, 46.9187, 29.1721, 0.52", "222.844, 47.8202, 29.4241, 0.52", "223.219, 48.8006, 29.6862, 0.37", "223.562, 49.7768, 29.9807, 0.37", "223.844, 50.492, 30.2143, 0.29", "224.359, 51.6413, 30.5988, 0.29", "225.078, 53.0738, 31.1415, 0.29", "225.355, 53.6558, 31.3532, 0.29", "225.673, 54.4663, 31.6304, 0.29", "226.047, 55.566, 31.969, 0.81", "226.459, 56.7044, 32.2874, 1.03", "226.791, 57.3635, 32.4532, 1.03", "227.59, 58.5215, 32.755, 0.29", "228.249, 59.3438, 33.0523, 0.74", "228.621, 59.7704, 33.2674, 1.11", "229.066, 60.2198, 33.5674, 1.11", "230.23, 61.1872, 34.3591, 0.29", "231.127, 61.792, 34.9082, 0.29", "232.181, 62.3398, 35.4083, 0.29", "233.032, 62.7267, 35.7219, 0.29", "233.765, 63.0514, 35.9323, 0.74", "234.621, 63.4613, 36.1062, 0.74", "235.775, 64.045, 36.2405, 0.37", "237.259, 64.8108, 36.2992, 0.96", "237.859, 65.155, 36.2746, 0.96", "238.92, 65.8117, 36.1744, 0.29", "240.027, 66.623, 36.014, 0.29", "240.441, 66.9605, 35.9468, 0.59", "241.066, 67.5413, 35.8449, 0.59", "242.172, 68.715, 35.7161, 0.29", "242.836, 69.4556, 35.6372, 0.29", "244.034, 70.8494, 35.4474, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.173819, -22.1763, 8.73524, 1.03", "1.15257, -25.0212, 9.77671, 1.03", "2.13189, -26.7952, 10.4317, 1.03", "2.77897, -27.8366, 10.8186, 0.74", "3.68747, -29.1522, 11.2978, 0.74", "4.36693, -30.097, 11.6253, 1.03", "4.94319, -30.9091, 11.885, 1.25", "5.42067, -31.5657, 12.1319, 1.33", "5.66811, -31.9513, 12.2188, 1.62", "6.13867, -32.8241, 12.3595, 1.62", "6.54117, -33.744, 12.4544, 1.62", "7.01521, -35.1161, 12.5562, 1.47", "7.37626, -36.4694, 12.6742, 0.59", "7.64441, -37.7924, 12.7817, 0.59", "7.83484, -39.0059, 12.8717, 0.88", "7.95785, -39.8953, 12.9324, 1.25", "8.08682, -40.6806, 12.9785, 1.55", "8.32883, -41.9593, 13.0398, 1.55", "8.60114, -43.2655, 13.0895, 0.96", "8.86159, -44.4919, 13.1307, 0.74", "8.9927, -45.1706, 13.1495, 0.74", "9.23567, -46.4269, 13.176, 0.74", "9.50406, -47.8066, 13.1903, 1.33", "9.88267, -49.6169, 13.1783, 1.18", "10.2112, -51.1441, 13.2056, 1.18", "10.3791, -52.0325, 13.2266, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.173819, -22.1763, 8.73524, 1.03", "0.106152, -23.6526, 11.9049, 1.03", "0.277428, -24.7001, 13.9001, 1.03", "0.484643, -26.5749, 17.2496, 0.81", "0.623793, -28.376, 20.3939, 0.66", "0.660612, -29.002, 21.4444, 0.66", "0.690989, -29.6241, 22.431, 0.66", "0.782455, -30.5322, 23.6511, 0.52", "0.926584, -31.5964, 24.8354, 0.52", "1.10936, -32.9996, 26.043, 0.81", "1.24011, -34.0208, 26.7233, 0.66", "1.33546, -34.9126, 27.259, 0.96", "1.53513, -36.9089, 28.3928, 0.52", "1.71764, -38.1262, 29.0227, 1.11", "1.91662, -39.2268, 29.4662, 1.03", "2.0548, -40.068, 29.7147, 0.88", "2.14361, -40.7694, 29.9002, 0.88", "2.17057, -41.9139, 30.1909, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.718, 38.5798, 10.6463, 0.74", "8.35763, 41.2555, 12.564, 0.74", "9.1783, 42.8135, 13.5828, 0.59", "9.64645, 43.86, 14.2359, 0.59", "10.2897, 45.6346, 15.2585, 0.59", "10.6606, 46.9258, 15.9292, 0.59", "10.9576, 48.2448, 16.5282, 0.59", "11.2732, 50.6827, 17.2581, 0.66", "11.3566, 51.7725, 17.5021, 0.66", "11.3347, 53.3808, 17.8123, 1.03", "11.2042, 54.8879, 18.0375, 1.03", "10.9505, 56.6992, 18.2362, 0.44", "10.7716, 57.5165, 18.238, 0.59", "10.3425, 58.7722, 18.0148, 0.59", "9.91026, 59.8059, 17.7068, 1.11", "9.69297, 60.2715, 17.5122, 1.33", "9.36904, 60.9745, 17.1709, 1.33", "8.72123, 62.4723, 16.3681, 0.81", "8.36348, 63.7036, 15.7019, 0.44", "8.31584, 64.7222, 15.0768, 0.44", "8.46677, 65.753, 14.2602, 0.74", "8.72976, 66.7455, 13.4015, 0.66", "8.89413, 67.2305, 12.9659, 0.66", "9.22729, 68.3476, 12.0774, 0.52", "9.48226, 69.6983, 11.0823, 0.37", "9.58117, 71.439, 9.88719, 0.37", "9.57987, 72.2076, 9.46168, 0.37", "9.5599, 73.51, 8.89711, 0.37", "9.59803, 75.6488, 8.17076, 0.37", "9.74361, 76.9793, 7.94119, 0.88", "9.97878, 77.8556, 7.96454, 0.88", "10.7026, 79.663, 8.2911, 0.74", "11.2733, 80.8282, 8.62439, 0.59", "12.0604, 82.1716, 9.20435, 0.59", "13.5328, 84.3591, 10.4127, 0.81", "14.6666, 85.9792, 11.4528, 0.59", "15.1772, 86.7523, 12.0004, 0.59", "15.5972, 87.4859, 12.5537, 1.11", "16.1437, 88.7054, 13.5104, 0.88", "16.4472, 89.7667, 14.3168, 0.88", "16.5961, 90.9795, 15.0217, 0.74", "16.6676, 92.2187, 15.5795, 0.59", "16.7306, 93.1806, 15.916, 0.44", "16.7972, 94.1566, 16.1418, 0.81", "16.8576, 95.112, 16.2435, 1.03", "16.9282, 96.7782, 16.3229, 0.52", "16.9443, 97.6908, 16.3297, 0.52", "16.95, 98.6032, 16.3281, 0.96", "16.9371, 99.6487, 16.3424, 0.96", "16.8817, 100.721, 16.3797, 0.66", "16.7369, 102.239, 16.4625, 0.37", "16.6087, 103.19, 16.5272, 0.37", "16.5291, 103.831, 16.5611, 0.37", "16.4037, 104.953, 16.6122, 0.37", "16.3265, 105.857, 16.6413, 0.66", "16.2992, 106.825, 16.6424, 0.66", "16.3652, 107.754, 16.6064, 0.81", "16.4978, 108.759, 16.576, 0.52", "16.6299, 109.762, 16.5727, 0.37", "16.691, 110.599, 16.6068, 0.37", "16.6935, 111.286, 16.6601, 0.66", "16.6388, 112.3, 16.7596, 0.66", "16.5765, 113.48, 16.8568, 0.37", "16.5688, 114.216, 16.8869, 0.37", "16.674, 115.651, 16.8557, 0.96", "16.7653, 116.372, 16.817, 1.33", "16.8942, 117.337, 16.7401, 1.33", "17.1012, 118.721, 16.6427, 1.03", "17.3306, 119.986, 16.5541, 0.74", "17.5904, 121.184, 16.489, 0.44", "17.8003, 122.084, 16.4659, 0.44", "17.99, 122.95, 16.4431, 0.44", "18.2858, 124.526, 16.401, 0.66", "18.4054, 125.273, 16.4052, 0.96", "18.4484, 125.669, 16.4162, 0.96", "18.546, 127.145, 16.403, 0.52", "18.6027, 128.378, 16.3393, 0.52", "18.6605, 129.787, 16.2102, 0.52", "18.7165, 130.942, 16.0325, 0.52", "18.8568, 132.889, 15.7907, 0.74", "18.9589, 134.136, 15.7164, 0.52", "19.0433, 135.043, 15.7212, 0.52", "19.1552, 136.052, 15.7824, 0.52", "19.3007, 137.288, 15.8126, 0.81", "19.5123, 139.044, 15.7511, 0.81", "19.6645, 140.179, 15.6812, 0.59", "19.7579, 141.114, 15.5826, 0.37", "19.8605, 142.265, 15.4462, 0.37", "19.9849, 144.048, 15.2157, 0.37", "20.0357, 144.94, 15.0827, 0.52", "20.1364, 145.965, 14.8785, 0.52", "20.3826, 147.672, 14.544, 0.52", "20.6893, 149.488, 14.2772, 0.74", "20.9158, 150.657, 14.1706, 0.96", "21.184, 151.894, 14.1297, 0.37", "21.4916, 153.273, 14.1072, 0.29", "21.7036, 154.14, 14.0953, 0.29", "22.0161, 155.399, 14.0729, 0.81", "22.1203, 155.944, 14.0143, 0.81", "22.205, 156.543, 13.9576, 0.96", "22.2266, 157.023, 13.9342, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.718, 38.5798, 10.6463, 0.66", "5.04615, 39.7521, 9.40848, 0.66", "3.99669, 40.4183, 8.65033, 0.66", "3.4932, 40.7467, 8.25023, 0.66", "2.73561, 41.2565, 7.59901, 0.52", "1.60651, 42.0226, 6.62049, 0.81", "1.09743, 42.3978, 6.16029, 0.81", "0.423822, 42.9699, 5.46678, 0.59", "-0.275886, 43.5853, 4.62801, 0.59", "-0.828094, 44.0964, 3.89929, 0.44", "-1.15796, 44.4393, 3.45013, 0.44", "-1.70442, 45.1106, 2.65965, 0.96", "-2.00684, 45.4955, 2.18387, 1.18", "-2.75434, 46.4486, 0.942157, 0.88", "-3.34849, 47.2034, -0.0836785, 0.37", "-3.71342, 47.6972, -0.801659, 1.03", "-4.04462, 48.1936, -1.5789, 1.03", "-4.61273, 49.0215, -3.0317, 0.52", "-4.8214, 49.3538, -3.61947, 0.52", "-4.96835, 49.6087, -4.06624, 0.81", "-5.16827, 49.9271, -4.62768, 0.81", "-5.4369, 50.2653, -5.22998, 0.74", "-6.20037, 51.0709, -6.49472, 1.03", "-6.74565, 51.5374, -7.11971, 1.03", "-7.66535, 52.1314, -7.86622, 0.59", "-8.32984, 52.4985, -8.30139, 0.81", "-9.13018, 52.8493, -8.74888, 0.81", "-9.44263, 52.9662, -8.90093, 0.66", "-9.99605, 53.1567, -9.14307, 0.66", "-11.3974, 53.5844, -9.76046, 0.52", "-12.3192, 53.853, -10.1749, 0.37", "-13.9777, 54.3545, -11.0301, 0.29", "-14.3496, 54.4658, -11.235, 0.29", "-14.9522, 54.6387, -11.5679, 0.29", "-15.5958, 54.8327, -11.9152, 0.29", "-16.5888, 55.1644, -12.3685, 0.81", "-17.4072, 55.4662, -12.691, 0.81", "-18.6432, 56.0456, -13.1147, 0.59", "-18.909, 56.1846, -13.201, 0.59", "-19.5845, 56.5926, -13.379, 0.29", "-20.3494, 56.9969, -13.7416, 0.52", "-20.4956, 57.0617, -13.8337, 0.81", "-20.9975, 57.247, -14.1841, 0.81", "-21.6281, 57.439, -14.6595, 0.74", "-21.939, 57.5065, -14.8955, 0.88", "-25.8805, 58.0448, -17.8661, 0.88", "-26.9797, 58.1201, -18.6728, 0.66", "-27.6923, 58.1436, -19.164, 0.88", "-28.7543, 58.1478, -19.8551, 0.96", "-29.5571, 58.1539, -20.3241, 0.52", "-30.144, 58.171, -20.6062, 0.74", "-31.3191, 58.2829, -20.8302, 0.44", "-31.9663, 58.3996, -20.8946, 0.29", "-32.5603, 58.5491, -20.9117, 0.29", "-33.5594, 58.8179, -20.8762, 1.18", "-33.9993, 58.9221, -20.8624, 1.92", "-34.8517, 59.0224, -20.8933, 1.47", "-36.1197, 59.0448, -20.991, 0.37", "-36.6802, 58.9977, -21.0458, 0.29", "-37.7267, 58.786, -21.1298, 0.29", "-38.9186, 58.3944, -21.2314, 0.29", "-40.6845, 57.5754, -21.4618, 0.29", "-41.5605, 57.0491, -21.6004, 0.29", "-42.2357, 56.6054, -21.7191, 0.29", "-43.1084, 56.0706, -21.8924, 0.29", "-43.7071, 55.758, -22.0046, 0.29", "-45.0908, 55.1635, -22.2402, 0.29", "-45.7408, 54.909, -22.3595, 0.29", "-46.7961, 54.6012, -22.6003, 0.29", "-47.3889, 54.5257, -22.7361, 0.52", "-48.0174, 54.5627, -22.8529, 0.52", "-48.9672, 54.7437, -22.9727, 0.52", "-50.0109, 55.0546, -23.0433, 0.66", "-50.5472, 55.2389, -23.07, 0.96", "-51.0391, 55.4184, -23.0762, 1.18", "-52.4642, 56.0182, -23.0656, 0.52", "-53.4355, 56.4954, -23.091, 0.29", "-53.9686, 56.807, -23.1393, 0.52", "-54.1931, 56.9699, -23.1759, 0.74", "-54.662, 57.3332, -23.2825, 0.74", "-55.4655, 57.9494, -23.4926, 0.44", "-56.3266, 58.5886, -23.7504, 0.44", "-57.246, 59.2341, -24.0424, 0.37", "-57.9839, 59.7127, -24.2594, 0.37", "-58.8911, 60.2156, -24.505, 0.37", "-60.1592, 60.8364, -24.8948, 0.37", "-60.994, 61.2107, -25.1438, 0.88", "-61.2168, 61.3099, -25.2002, 0.88", "-61.9723, 61.6312, -25.3402, 0.66", "-63.2659, 62.1414, -25.4999, 0.96", "-64.7755, 62.6882, -25.484, 0.81", "-65.6922, 62.96, -25.3186, 1.11", "-66.6316, 63.17, -24.9687, 0.59", "-67.7474, 63.3919, -24.4368, 0.59", "-68.4349, 63.5412, -24.0242, 0.74", "-69.2879, 63.7445, -23.3999, 0.52", "-69.7487, 63.8411, -23.0448, 0.52", "-70.4257, 63.9871, -22.5829, 0.52", "-71.1578, 64.1696, -22.1334, 0.52", "-71.8278, 64.4021, -21.815, 0.52", "-72.8855, 64.8751, -21.4003, 1.33", "-73.3655, 65.148, -21.2339, 2.28", "-73.9432, 65.5013, -21.047, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.3791, -52.0325, 13.2266, 0.59", "11.498, -52.6316, 14.2192, 0.59", "12.0666, -52.996, 14.6839, 0.59", "13.9007, -54.4864, 16.1594, 0.44", "14.2271, -54.8353, 16.4531, 0.44", "14.6971, -55.4285, 16.8992, 0.44", "15.3078, -56.2883, 17.5288, 0.44", "15.6337, -56.8808, 17.9077, 0.44", "16.0678, -57.7654, 18.4531, 0.44", "16.622, -58.9496, 19.1497, 0.44", "16.9063, -59.6095, 19.6205, 0.81", "17.3771, -60.7929, 20.6251, 0.59", "17.5047, -61.126, 20.9462, 0.59", "17.8454, -62.0444, 22.0604, 0.29", "17.9649, -62.4531, 22.6167, 0.29", "18.1839, -63.5801, 24.1236, 0.29", "18.2324, -64.2908, 24.9766, 0.29", "18.1756, -65.0977, 25.8275, 1.03", "17.7353, -67.5143, 27.9442, 1.11", "17.4558, -68.5316, 28.7563, 1.33", "17.0703, -69.7004, 29.5485, 0.66", "16.1999, -71.8597, 30.302, 0.15", "15.8493, -72.5205, 30.0818, 0.15", "15.4679, -73.1394, 29.481, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.3791, -52.0325, 13.2266, 1.33", "10.1357, -53.293, 12.9905, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-73.9432, 65.5013, -21.047, 0.37", "-75.5562, 65.4407, -21.0946, 0.37", "-76.2765, 65.3703, -21.1288, 0.37", "-77.2415, 65.1846, -21.1943, 0.37", "-78.3271, 64.8679, -21.3751, 0.88", "-78.7943, 64.7181, -21.475, 0.88", "-79.6011, 64.4776, -21.6543, 0.52", "-80.2298, 64.3086, -21.8261, 0.29", "-81.049, 64.1397, -22.0976, 0.29", "-82.2699, 64.0235, -22.5563, 0.37", "-82.6975, 64.0677, -22.7015, 0.37", "-83.3762, 64.2441, -22.91, 0.37", "-84.0547, 64.4753, -23.0566, 0.37", "-85.2222, 64.8548, -23.2787, 0.66", "-85.9371, 65.0462, -23.3936, 0.66", "-86.9684, 65.2199, -23.4981, 0.37", "-87.6367, 65.2629, -23.5477, 0.29", "-88.8212, 65.2373, -23.5936, 0.29", "-89.9655, 65.1502, -23.5249, 0.29", "-90.9595, 65.0309, -23.341, 0.29", "-92.0256, 64.901, -23.123, 0.29", "-92.7806, 64.8275, -22.968, 0.88", "-93.1841, 64.8069, -22.8931, 1.03", "-94.4119, 64.8681, -22.7351, 0.29", "-95.4177, 64.9967, -22.6347, 0.29", "-96.8042, 65.1632, -22.5892, 0.96", "-97.4663, 65.2239, -22.6239, 1.25", "-97.7294, 65.2372, -22.6704, 1.47", "-98.9164, 65.2329, -22.9364, 0.96", "-100.001, 65.2084, -23.3776, 0.52", "-101.339, 65.2215, -24.0301, 0.44", "-102.388, 65.2531, -24.5744, 0.44", "-104.143, 65.344, -25.5388, 1.11", "-104.822, 65.406, -25.9172, 1.11", "-108.498, 65.9089, -27.988, 0.29", "-109.406, 66.0674, -28.5358, 0.29", "-110.038, 66.1854, -28.9453, 0.96", "-110.649, 66.289, -29.3362, 1.18", "-111.653, 66.4604, -29.8962, 0.88", "-112.76, 66.6241, -30.4306, 0.52", "-113.45, 66.6528, -30.6854, 0.52", "-114.252, 66.6022, -31.0238, 0.52", "-115.923, 66.4159, -31.8365, 0.37", "-116.837, 66.2996, -32.293, 0.37", "-117.807, 66.1791, -32.777, 0.37", "-119.16, 66.0361, -33.4447, 0.37", "-120.156, 65.9642, -33.9099, 0.37", "-121.25, 65.8851, -34.4017, 0.37", "-122.023, 65.7427, -34.8038, 1.11", "-122.272, 65.6781, -34.9612, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-73.9432, 65.5013, -21.047, 0.29", "-77.3837, 69.49, -22.1662, 0.29", "-78.4691, 70.7329, -22.3138, 0.29", "-79.1157, 71.4942, -22.3354, 0.29", "-80.6468, 73.1847, -22.3323, 0.29", "-81.1472, 73.7116, -22.3051, 0.52", "-82.023, 74.6134, -22.2035, 0.37", "-82.7793, 75.3034, -21.8961, 0.66", "-83.2324, 75.6823, -21.6787, 0.81", "-84.7084, 76.9055, -20.8418, 0.29", "-85.8173, 77.7907, -20.1472, 0.52", "-86.5147, 78.3092, -19.6815, 0.74", "-88.0976, 79.3582, -18.5433, 0.29", "-89.458, 80.1777, -17.4661, 0.29", "-90.211, 80.5703, -16.787, 1.25", "-90.6466, 80.788, -16.3226, 1.84", "-91.1712, 81.0281, -15.7178, 1.84", "-93.0005, 81.6871, -13.5788, 0.29", "-93.5877, 81.8348, -12.8585, 0.29", "-95.3336, 82.0154, -10.5204, 0.29", "-96.0345, 82.0259, -9.43413, 0.52", "-96.4152, 82.0134, -8.76446, 0.29", "-97.2701, 81.9782, -7.00648, 0.29", "-97.6586, 81.9723, -6.05918, 0.29", "-98.6943, 82.0336, -3.53167, 0.88", "-99.6572, 82.0569, -1.26556, 0.29", "-100.084, 82.0561, -0.368756, 0.29", "-100.94, 82.1097, 1.28703, 0.81", "-101.389, 82.2001, 2.1384, 0.81", "-102.092, 82.4252, 3.47067, 0.37", "-102.999, 82.8266, 5.14232, 0.29", "-103.556, 83.0905, 6.19044, 0.29", "-104.155, 83.4103, 7.36348, 0.29", "-104.614, 83.7003, 8.32442, 0.29", "-105.603, 84.4879, 10.6505, 0.88", "-105.82, 84.7047, 11.2543, 1.25", "-106.201, 85.0969, 12.305, 1.25", "-106.806, 85.6495, 13.6313, 0.29", "-107.423, 86.1067, 14.6274, 0.22", "-108.308, 86.6231, 15.5398, 0.88", "-109.718, 87.3737, 16.3657, 0.88", "-110.849, 87.9567, 16.9624, 0.59", "-114.331, 89.6755, 18.6507, 0.59", "-114.938, 89.9721, 18.919, 0.59", "-116.315, 90.6232, 19.4966, 0.29", "-117.538, 91.1996, 20.0429, 0.37", "-119.401, 92.0467, 21.0132, 0.37", "-120.452, 92.509, 21.7309, 0.37", "-120.889, 92.7012, 22.0934, 0.44", "-121.28, 92.8568, 22.3897, 0.44", "-122.569, 93.3078, 23.2517, 0.22", "-123.563, 93.6347, 23.8167, 0.37", "-124.726, 93.9715, 24.3582, 0.29", "-126.052, 94.3061, 24.9475, 0.29", "-127.555, 94.63, 25.607, 0.29", "-129.082, 94.9425, 26.2744, 0.29", "-130.074, 95.1815, 26.7134, 0.29", "-131.261, 95.5629, 27.2596, 0.29", "-132.45, 96.0865, 27.8225, 0.52", "-132.956, 96.4133, 28.0742, 0.74", "-133.754, 97.1733, 28.5973, 0.52", "-134.761, 98.3563, 29.4345, 0.29", "-135.304, 99.0299, 29.9378, 0.29", "-135.762, 99.5799, 30.3561, 0.37", "-136.212, 100.042, 30.744, 0.37", "-137.659, 101.21, 31.8928, 0.59", "-138.771, 101.907, 32.7039, 0.29", "-140.865, 102.964, 34.1163, 0.29", "-143.292, 104.017, 35.628, 0.29", "-144.406, 104.477, 36.3018, 0.29", "-145.713, 104.993, 37.0346, 0.29", "-146.825, 105.413, 37.5676, 0.59", "-147.851, 105.737, 38.0482, 0.59", "-149.664, 106.056, 38.8653, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.1357, -53.293, 12.9905, 0.74", "10.563, -54.7708, 12.9695, 0.74", "10.832, -55.5863, 12.9883, 0.74", "11.1424, -56.5366, 13.0597, 0.96", "11.4454, -57.4129, 13.2197, 0.74", "11.8091, -58.4281, 13.4564, 0.59", "12.085, -59.1984, 13.636, 0.59", "12.5132, -60.2846, 13.9661, 0.59", "13.0534, -61.5866, 14.4281, 0.52", "13.7853, -63.2653, 15.1063, 0.52", "13.9752, -63.7217, 15.3146, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.1357, -53.293, 12.9905, 0.59", "8.90934, -54.5655, 13.53, 0.59", "8.09229, -55.3388, 14.0948, 0.88", "7.17989, -56.1813, 14.8847, 0.88", "6.12998, -57.1408, 15.8514, 0.59", "4.6865, -58.3558, 17.1562, 0.59", "4.06767, -58.898, 17.7668, 1.4", "3.0129, -59.8586, 18.9902, 1.4", "2.10102, -60.6982, 20.0938, 1.03", "1.47226, -61.2538, 20.8342, 1.55", "0.719135, -61.9039, 21.6568, 1.55", "-0.560234, -63.0307, 22.8305, 1.03", "-1.305, -63.7206, 23.4537, 0.81", "-2.31074, -64.6844, 24.2489, 0.81", "-3.16992, -65.5081, 24.8457, 0.37", "-3.83537, -66.1184, 25.2171, 0.37", "-4.00387, -66.2651, 25.2936, 0.96", "-4.49329, -66.6691, 25.4738, 1.4", "-6.6084, -68.5518, 26.2246, 0.59", "-8.30935, -70.1202, 26.8205, 0.52", "-9.63567, -71.3235, 27.2782, 0.52", "-11.185, -72.617, 27.7987, 0.37", "-12.4908, -73.5983, 28.1737, 0.29", "-14.0729, -74.6569, 28.4865, 1.25", "-14.5015, -74.9158, 28.5304, 1.4", "-15.9511, -75.7675, 28.6853, 0.52", "-17.0495, -76.3753, 28.7789, 0.81", "-18.4842, -77.0468, 28.8269, 1.03", "-20.4664, -77.7355, 28.887, 0.52", "-21.6935, -78.0854, 28.9481, 0.52", "-22.6528, -78.4009, 29.0477, 0.37", "-23.9834, -79.0371, 29.386, 0.29", "-24.3765, -79.294, 29.5654, 0.74", "-25.0915, -79.8239, 30.0529, 1.03", "-25.5203, -80.1285, 30.4005, 0.81", "-26.4791, -80.7529, 31.1554, 0.59", "-27.9482, -81.6777, 32.272, 0.37", "-28.6561, -82.1135, 32.7109, 0.29", "-29.2794, -82.4123, 33.0201, 0.29", "-29.8863, -82.6354, 33.243, 0.96", "-30.5748, -82.8232, 33.3754, 0.96", "-31.4734, -83.0208, 33.4445, 0.81", "-33.1648, -83.4482, 33.5278, 0.44", "-34.0877, -83.8153, 33.6128, 0.29", "-35.2271, -84.4845, 33.7893, 0.29", "-36.4173, -85.4079, 34.0658, 1.4", "-37.0852, -86.0295, 34.2721, 1.4", "-38.2186, -87.2357, 34.7639, 0.44", "-38.811, -87.9339, 35.1029, 0.29", "-39.1799, -88.3923, 35.3516, 0.88", "-39.8955, -89.27, 35.8625, 0.96", "-40.4739, -89.9495, 36.2825, 0.59", "-41.5082, -91.1388, 36.9944, 0.44", "-42.5279, -92.3131, 37.6859, 0.37", "-43.5515, -93.4475, 38.3688, 0.22", "-44.4701, -94.403, 38.9545, 0.59", "-45.3607, -95.2611, 39.4866, 0.29", "-45.6395, -95.5056, 39.637, 0.74", "-46.22, -95.94, 39.8991, 0.96", "-46.8802, -96.3355, 40.1618, 0.59", "-48.0236, -96.8822, 40.5698, 0.44", "-48.8062, -97.2303, 40.8569, 0.74", "-49.478, -97.545, 41.1022, 0.96", "-50.8837, -98.2768, 41.6214, 0.37", "-51.9249, -98.9307, 42.0149, 0.29", "-52.5999, -99.4593, 42.2351, 0.29", "-53.3697, -100.175, 42.4376, 0.52", "-53.8466, -100.656, 42.5331, 0.52", "-54.2668, -101.07, 42.6439, 0.52", "-55.2546, -101.902, 42.9706, 0.52", "-56.4443, -102.72, 43.4305, 0.52", "-56.9549, -102.978, 43.6448, 0.88", "-58.0103, -103.363, 44.1112, 0.88", "-60.0281, -103.896, 44.9265, 0.37", "-61.4819, -104.226, 45.4165, 0.29", "-62.2296, -104.403, 45.6337, 0.96", "-63.4793, -104.794, 45.9404, 1.03", "-64.9387, -105.413, 46.1856, 0.52", "-66.2541, -106.153, 46.2168, 0.52", "-67.5993, -107.102, 46.0637, 0.52", "-68.8995, -108.22, 45.8013, 0.52", "-69.923, -109.226, 45.5395, 0.52", "-71.27, -110.72, 45.1416, 0.44", "-72.624, -112.379, 44.6534, 0.74", "-73.4211, -113.466, 44.3222, 0.81", "-74.2656, -114.68, 43.911, 0.52", "-74.744, -115.364, 43.6457, 0.88", "-75.0947, -115.861, 43.4513, 0.88", "-76.2888, -117.554, 42.8275, 0.44", "-77.3679, -118.923, 42.3485, 0.37", "-77.8646, -119.521, 42.1281, 0.37", "-78.7881, -120.598, 41.7219, 0.37", "-79.539, -121.455, 41.4218, 0.59", "-80.2267, -122.213, 41.205, 0.59", "-82.0928, -124.079, 40.8942, 0.29", "-82.902, -124.832, 40.83, 0.29", "-83.6211, -125.499, 40.7838, 0.59", "-84.6791, -126.539, 40.6941, 0.59", "-85.3838, -127.257, 40.6326, 0.37", "-86.4024, -128.314, 40.5973, 0.37", "-87.052, -128.967, 40.6517, 0.81", "-87.574, -129.448, 40.6976, 0.81", "-88.2967, -130.054, 40.7369, 0.81", "-89.333, -130.954, 40.6458, 0.37", "-90.1066, -131.686, 40.4975, 0.37", "-91.0734, -132.624, 40.2702, 0.66", "-91.6073, -133.111, 40.1522, 0.96", "-92.6645, -133.975, 39.9467, 0.96", "-94.3747, -135.17, 39.6007, 0.29", "-95.2067, -135.661, 39.3542, 0.29", "-96.3279, -136.316, 38.9368, 0.44", "-96.8006, -136.618, 38.7536, 0.81", "-97.5356, -137.144, 38.4221, 0.81", "-98.2458, -137.686, 38.0604, 0.81", "-100.148, -139.097, 37.108, 0.52", "-101.081, -139.804, 36.6155, 0.59", "-102.205, -140.73, 35.9801, 0.59", "-104.023, -142.3, 35.0204, 0.29", "-105.182, -143.344, 34.4539, 0.96", "-105.867, -143.962, 34.1659, 1.25", "-106.296, -144.323, 34.0276, 1.25", "-107.888, -145.464, 33.6673, 0.37", "-108.992, -146.17, 33.5138, 0.37", "-109.917, -146.72, 33.5083, 1.03", "-110.778, -147.207, 33.56, 1.25", "-111.67, -147.67, 33.6449, 1.25", "-113.36, -148.424, 33.9705, 0.29", "-114.223, -148.73, 34.2392, 0.44", "-115.106, -148.998, 34.5673, 0.59", "-116.239, -149.302, 34.9769, 0.59", "-117.627, -149.642, 35.4402, 0.29", "-119.399, -150.049, 35.9219, 0.29", "-121.15, -150.473, 36.2623, 0.29", "-122.293, -150.776, 36.4321, 0.29", "-124.155, -151.345, 36.6147, 0.81", "-124.767, -151.555, 36.6523, 0.81", "-126.688, -152.292, 36.7172, 0.52", "-128.502, -153.099, 36.8189, 0.52", "-130.021, -153.881, 37.0212, 0.44", "-131.03, -154.475, 37.3063, 0.81", "-132.194, -155.258, 37.9053, 0.81", "-132.887, -155.814, 38.511, 0.81", "-134.024, -156.872, 39.9749, 0.37", "-134.453, -157.334, 40.7237, 0.37", "-134.993, -157.973, 41.8246, 0.81", "-135.584, -158.677, 43.0934, 0.81", "-136.736, -159.963, 45.5533, 0.44", "-137.298, -160.449, 46.6577, 0.37", "-137.937, -160.907, 47.7772, 0.29", "-138.451, -161.248, 48.5898, 0.29", "-138.979, -161.619, 49.3526, 0.74", "-139.865, -162.368, 50.6664, 0.29", "-141.054, -163.512, 52.3843, 0.29", "-141.699, -164.183, 53.3216, 0.66", "-142.343, -164.866, 54.1904, 0.81", "-142.993, -165.645, 55.058, 0.81", "-144.251, -167.273, 56.6319, 0.44", "-144.83, -168.055, 57.262, 0.29", "-145.705, -169.261, 58.1279, 0.29", "-146.356, -170.07, 58.7339, 0.29", "-147.088, -170.913, 59.3797, 0.29", "-147.666, -171.498, 59.8073, 0.96", "-148.363, -172.123, 60.1198, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-122.272, 65.6781, -34.9612, 0.37", "-123.175, 64.5579, -34.6057, 0.37", "-123.933, 63.7115, -34.2238, 0.37", "-125.198, 62.5272, -33.493, 0.37", "-125.899, 61.9801, -33.0603, 0.22", "-126.568, 61.5366, -32.6373, 0.22", "-127.644, 60.8983, -31.9533, 0.37", "-128.249, 60.6578, -31.5457, 0.37", "-129.115, 60.4173, -30.9529, 0.22", "-129.92, 60.2731, -30.4729, 0.22", "-130.634, 60.1529, -30.1295, 0.81", "-131.037, 60.0676, -29.9782, 0.88", "-131.646, 59.8934, -29.8157, 0.66", "-132.797, 59.5221, -29.5439, 0.29", "-134.325, 59.0181, -29.1966, 0.29", "-135.378, 58.6939, -28.957, 0.29", "-136.82, 58.2809, -28.6347, 0.29", "-138.669, 57.7677, -28.2156, 0.29", "-139.54, 57.5295, -28.0183, 0.66", "-140.222, 57.34, -27.8602, 0.88", "-140.558, 57.2396, -27.7862, 0.88", "-141.52, 56.9618, -27.5948, 0.29", "-142.402, 56.6864, -27.4424, 0.29", "-143.476, 56.3247, -27.2804, 1.33", "-143.874, 56.1758, -27.2319, 1.77", "-145.55, 55.5717, -27.0501, 0.29", "-146.716, 55.1657, -26.9331, 0.29", "-148.2, 54.663, -26.7797, 0.29", "-148.924, 54.4374, -26.6905, 0.29", "-149.653, 54.2356, -26.5327, 0.74", "-150.785, 53.9359, -26.1475, 0.29", "-151.928, 53.6383, -25.5194, 0.29", "-152.884, 53.3923, -24.8325, 0.81", "-153.369, 53.2604, -24.4205, 0.81", "-154.806, 52.8426, -22.9843, 0.22", "-155.716, 52.5497, -21.9896, 0.22", "-156.676, 52.1852, -20.9129, 0.88", "-157.222, 51.9698, -20.3404, 1.18", "-158.484, 51.4434, -19.2159, 0.29", "-159.296, 51.0587, -18.6372, 0.29", "-160.563, 50.38, -17.9282, 0.29", "-161.671, 49.7848, -17.4088, 0.29", "-162.76, 49.2297, -16.9696, 0.81", "-164.203, 48.5835, -16.4125, 0.22", "-165.416, 48.1423, -15.9632, 0.22", "-166.207, 47.9227, -15.6891, 0.29", "-167.404, 47.7568, -15.2644, 0.29", "-168.401, 47.7291, -14.8153, 0.29", "-169.478, 47.7877, -14.2016, 0.52", "-170.179, 47.879, -13.7339, 0.59", "-171.106, 48.0661, -13.0356, 0.29", "-171.595, 48.1881, -12.6409, 0.29", "-172.917, 48.5024, -11.4495, 0.29", "-173.663, 48.6309, -10.7467, 0.29", "-174.488, 48.695, -9.93585, 0.59", "-175.271, 48.7196, -9.22185, 0.74", "-176.422, 48.7698, -8.35368, 0.44", "-177.387, 48.8314, -7.77873, 1.55", "-178.066, 48.8699, -7.50852, 1.99", "-179.954, 48.8418, -6.96696, 0.29", "-181.235, 48.6898, -6.71968, 0.29", "-183.023, 48.3404, -6.53466, 0.29", "-183.686, 48.1706, -6.50914, 0.29", "-185.066, 47.7607, -6.53646, 0.44", "-185.933, 47.4674, -6.57837, 0.44", "-186.938, 47.0659, -6.64002, 0.29", "-188.224, 46.4675, -6.63106, 0.29", "-189.062, 46.0674, -6.58799, 0.29", "-189.923, 45.6988, -6.55055, 0.37", "-190.703, 45.4184, -6.50677, 0.59", "-191.611, 45.1322, -6.44397, 0.59", "-192.697, 44.8081, -6.33399, 0.44", "-193.594, 44.5893, -6.13024, 0.29", "-193.945, 44.543, -6.01622, 0.88", "-194.715, 44.4887, -5.71971, 0.88", "-195.177, 44.4513, -5.52554, 0.88", "-196.194, 44.3105, -5.08457, 0.29", "-197.401, 44.0865, -4.56562, 0.29", "-198.339, 43.936, -4.16101, 0.29", "-199.205, 43.873, -3.79101, 0.29", "-199.987, 43.8853, -3.45873, 0.52", "-201.003, 43.9751, -3.03327, 0.52", "-202.395, 44.1528, -2.48505, 0.29", "-203.445, 44.3074, -2.11162, 0.29", "-204.507, 44.5064, -1.73234, 0.74", "-205.18, 44.675, -1.52294, 1.03", "-206.054, 44.9607, -1.30247, 0.37", "-206.932, 45.2666, -1.13934, 0.37", "-207.685, 45.4849, -1.04227, 0.96", "-208.258, 45.6008, -0.983689, 1.18", "-209.741, 45.8757, -0.828319, 0.29", "-210.621, 46.075, -0.716116, 0.29", "-211.553, 46.3024, -0.590853, 0.29", "-212.468, 46.5033, -0.441895, 0.37", "-213.527, 46.6911, -0.239313, 0.37", "-214.783, 46.9038, 0.0507674, 0.37", "-215.781, 47.0336, 0.312784, 0.37", "-216.837, 47.1633, 0.583992, 0.37", "-218.25, 47.4089, 0.946345, 0.37", "-219.376, 47.6464, 1.22678, 0.37", "-220.371, 47.8729, 1.47507, 0.37", "-221.568, 48.1108, 1.82192, 0.37", "-222.756, 48.3115, 2.22584, 0.37", "-224.134, 48.484, 2.77186, 1.4", "-224.393, 48.5058, 2.88317, 2.06", "-225.016, 48.521, 3.16968, 2.28", "-226.509, 48.4553, 3.86885, 0.29", "-227.496, 48.3322, 4.37261, 0.29", "-228.969, 47.9732, 5.18614, 0.29", "-229.919, 47.6556, 5.74742, 0.29", "-230.967, 47.2375, 6.39275, 0.29", "-232.021, 46.7494, 7.05097, 0.29", "-233.032, 46.235, 7.68267, 0.29", "-233.731, 45.8705, 8.14152, 0.29", "-234.42, 45.5119, 8.61161, 0.44", "-235.441, 45.0131, 9.2532, 0.44", "-236.31, 44.6996, 9.74303, 0.29", "-236.947, 44.6006, 10.0611, 0.29", "-237.603, 44.6132, 10.3504, 0.74", "-238.264, 44.6688, 10.6233, 0.74", "-239.751, 44.8818, 11.2093, 0.29", "-241.058, 45.1785, 11.727, 0.29", "-242.463, 45.5718, 12.2848, 0.29", "-243.526, 45.8875, 12.7063, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-122.272, 65.6781, -34.9612, 0.44", "-123.196, 65.6123, -34.9493, 0.44", "-123.729, 65.558, -34.9154, 0.44", "-124.441, 65.5049, -34.8383, 0.44", "-124.927, 65.4932, -34.7669, 0.44", "-125.489, 65.5194, -34.6593, 0.44", "-125.963, 65.5649, -34.5482, 0.44", "-126.315, 65.6234, -34.4221, 0.44", "-126.682, 65.7387, -34.2674, 0.66", "-127.007, 65.8884, -34.1189, 0.66", "-127.455, 66.1394, -33.9174, 0.29", "-127.942, 66.4605, -33.7021, 0.29", "-128.422, 66.8206, -33.491, 1.11", "-128.564, 66.9353, -33.4291, 1.11", "-128.976, 67.2472, -33.2551, 0.29", "-129.226, 67.446, -33.1478, 0.29", "-129.389, 67.5981, -33.073, 1.03", "-129.517, 67.742, -33.0073, 1.03", "-129.705, 67.9594, -32.9055, 1.03", "-130.237, 68.5956, -32.597, 0.29", "-130.539, 68.9706, -32.4032, 0.29", "-130.815, 69.3032, -32.2225, 0.29", "-131.057, 69.5572, -32.066, 0.29", "-131.501, 69.9777, -31.781, 1.33", "-131.658, 70.1154, -31.6838, 1.69", "-132.275, 70.587, -31.3266, 0.37", "-132.636, 70.8108, -31.1381, 0.37", "-133.274, 71.1363, -30.8314, 0.37", "-133.796, 71.3775, -30.5928, 0.37", "-134.324, 71.6185, -30.3585, 0.37", "-134.737, 71.8259, -30.1817, 0.37", "-134.937, 71.9431, -30.1024, 0.81", "-135.242, 72.1718, -30.0044, 0.81", "-135.574, 72.5011, -29.9438, 0.52", "-135.853, 72.7962, -29.9147, 0.52", "-136.26, 73.1947, -29.886, 1.03", "-136.46, 73.3861, -29.8787, 1.03", "-136.835, 73.7132, -29.8685, 0.88", "-137.391, 74.1408, -29.8531, 0.37", "-138.031, 74.5687, -29.8255, 0.37", "-138.709, 74.9921, -29.7446, 0.37", "-139.049, 75.2039, -29.6796, 0.37", "-139.612, 75.5587, -29.5309, 0.37", "-139.985, 75.7975, -29.402, 1.18", "-140.261, 75.9779, -29.2882, 1.69", "-141.272, 76.7156, -28.8257, 0.44", "-141.813, 77.1854, -28.5553, 0.44", "-142.304, 77.6631, -28.3001, 0.44", "-142.496, 77.8716, -28.1996, 0.96", "-142.69, 78.0935, -28.1018, 1.33", "-143.166, 78.6369, -27.8725, 0.37", "-143.597, 79.1519, -27.6776, 0.37", "-143.87, 79.4996, -27.5519, 0.37", "-144.178, 79.9362, -27.404, 0.37", "-144.563, 80.4778, -27.227, 0.37", "-144.925, 80.9503, -27.0856, 0.37", "-145.209, 81.2857, -26.9745, 0.59", "-145.495, 81.6082, -26.8511, 0.59", "-145.876, 82.0481, -26.7187, 0.29", "-146.046, 82.2532, -26.671, 0.29", "-146.666, 82.9468, -26.5332, 1.33", "-146.918, 83.2029, -26.4815, 2.14", "-147.136, 83.4005, -26.4412, 2.28", "-147.873, 83.9777, -26.3354, 1.11", "-148.419, 84.3338, -26.2854, 0.29", "-149.077, 84.7408, -26.2327, 0.29", "-149.521, 85.0061, -26.2002, 0.29", "-149.934, 85.2657, -26.1785, 0.44", "-150.352, 85.5559, -26.1657, 0.44", "-150.857, 85.9472, -26.1403, 0.44", "-151.326, 86.3716, -26.1266, 0.66", "-151.556, 86.6258, -26.1158, 0.66", "-151.869, 87.0238, -26.0829, 0.29", "-152.183, 87.4985, -25.9834, 0.29", "-152.408, 87.8869, -25.8555, 0.29", "-152.607, 88.2604, -25.7167, 0.29", "-152.91, 88.7847, -25.5003, 0.44", "-153.13, 89.1333, -25.3322, 0.44", "-153.489, 89.6655, -25.0081, 1.03", "-153.655, 89.9278, -24.7966, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "13.9752, -63.7217, 15.3146, 0.59", "14.3515, -65.2583, 15.0935, 0.59", "14.5069, -66.3203, 14.9192, 0.59", "14.6418, -67.6324, 14.7092, 0.59", "14.7392, -68.5976, 14.5639, 0.59", "14.8655, -70.0541, 14.3985, 0.88", "14.9344, -71.4168, 14.2783, 0.88", "14.9039, -72.4293, 14.2191, 0.66", "14.735, -73.5987, 14.2195, 0.81", "14.4447, -74.8291, 14.2992, 0.74", "14.1773, -75.811, 14.4329, 0.96", "13.934, -76.7809, 14.6425, 0.74", "13.6977, -77.8342, 14.9183, 0.59", "13.4708, -78.9952, 15.235, 0.52", "13.4072, -79.3865, 15.3411, 1.03", "13.3217, -80.4556, 15.5771, 0.52", "13.3913, -81.6743, 15.7391, 0.81", "13.532, -82.4113, 15.7843, 1.03", "13.7114, -83.1146, 15.774, 1.03", "13.9509, -84.0438, 15.7075, 0.88", "14.1789, -85.0597, 15.6084, 0.74", "14.3035, -85.723, 15.5331, 0.74", "14.4345, -86.5339, 15.4368, 0.44", "14.6681, -87.8668, 15.2498, 0.44", "14.8098, -88.6868, 15.1299, 0.66", "14.9169, -89.2944, 15.0519, 0.66", "15.0591, -90.1001, 14.9493, 0.52", "15.2182, -91.0923, 14.8086, 0.81", "15.3559, -91.9765, 14.6449, 1.03", "15.4507, -92.5754, 14.5069, 1.03", "15.5541, -93.4052, 14.2983, 0.66", "15.6158, -94.3853, 14.0165, 0.52", "15.6256, -95.1841, 13.7687, 0.52", "15.5978, -95.8626, 13.5703, 0.52", "15.5488, -96.6869, 13.3597, 0.74", "15.5041, -97.3204, 13.213, 0.74", "15.3699, -98.8694, 12.9187, 0.59", "15.3031, -99.8072, 12.815, 0.59", "15.2859, -100.697, 12.7573, 0.96", "15.2976, -101.175, 12.7534, 0.96", "15.3365, -102.125, 12.8117, 0.59", "15.3729, -103.334, 12.9175, 0.44", "15.3906, -104.427, 13.0567, 0.44", "15.3996, -105.364, 13.1719, 0.44", "15.4249, -106.356, 13.2683, 0.44", "15.4877, -107.366, 13.3393, 0.44", "15.6576, -108.751, 13.3936, 0.59", "15.7517, -109.292, 13.4179, 0.81", "15.9414, -110.164, 13.4492, 0.44", "16.2046, -111.326, 13.5167, 0.44", "16.3798, -112.032, 13.5774, 0.81", "16.5756, -112.729, 13.6702, 0.81", "16.8905, -113.744, 13.8035, 0.81", "17.137, -114.483, 13.8593, 0.52", "17.4531, -115.396, 13.8741, 0.52", "17.6751, -116.123, 13.83, 0.81", "17.8496, -117.0, 13.7197, 1.03", "17.9597, -118.276, 13.5013, 0.52", "17.9705, -119.204, 13.3097, 0.52", "17.9224, -120.077, 13.1414, 0.88", "17.8214, -121.152, 12.9571, 0.88", "17.6455, -122.422, 12.7818, 0.44", "17.416, -123.724, 12.6473, 0.74", "17.3095, -124.333, 12.654, 0.74", "17.119, -125.446, 12.6939, 0.37", "16.9987, -126.263, 12.7425, 0.66", "16.9346, -127.044, 12.8097, 0.96", "16.9354, -127.964, 12.8852, 0.96", "17.0545, -129.993, 13.0108, 0.37", "17.1848, -131.234, 13.128, 0.37", "17.2658, -131.772, 13.2074, 0.88", "17.3434, -132.242, 13.2822, 0.88", "17.47, -133.104, 13.3814, 0.88", "17.5653, -133.999, 13.4292, 0.52", "17.6307, -135.257, 13.5303, 0.52", "17.6775, -136.562, 13.743, 0.44", "17.7087, -137.638, 13.9564, 0.52", "17.7336, -139.154, 14.2892, 0.74", "17.7336, -140.339, 14.5666, 0.74", "17.6636, -142.3, 15.0078, 0.59", "17.6006, -143.261, 15.1968, 0.59", "17.5059, -144.241, 15.4069, 0.44", "17.4137, -145.115, 15.6003, 0.44", "17.3649, -145.585, 15.6958, 0.81", "17.2845, -146.479, 15.7891, 0.81", "17.2256, -147.204, 15.7708, 0.74", "17.1462, -147.943, 15.7689, 0.59", "17.0122, -149.035, 15.803, 0.29", "16.9393, -149.577, 15.845, 0.52", "16.778, -150.932, 15.9704, 0.52", "16.7001, -151.772, 16.0682, 0.52", "16.5854, -153.108, 16.2718, 0.74", "16.523, -153.796, 16.4206, 1.11", "16.4404, -154.329, 16.597, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.9752, -63.7217, 15.3146, 0.52", "14.8865, -62.8069, 16.1301, 0.52", "15.3816, -62.3098, 16.5733, 0.52", "15.7956, -61.8942, 16.9438, 0.52", "16.1542, -61.5342, 17.2646, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-153.655, 89.9278, -24.7966, 0.22", "-155.243, 92.0958, -25.0453, 0.22", "-155.825, 92.7449, -25.235, 0.22", "-156.307, 93.1636, -25.4344, 0.22", "-156.849, 93.6345, -25.6441, 0.22", "-158.055, 94.8325, -26.0672, 0.22", "-158.986, 95.9343, -26.3853, 1.25", "-159.364, 96.3805, -26.528, 1.55", "-160.684, 98.0567, -26.9594, 0.37", "-161.155, 98.7077, -27.0597, 0.37", "-161.943, 99.8954, -27.1293, 0.37", "-162.59, 101.038, -27.0614, 0.37", "-163.044, 101.986, -26.9714, 0.66", "-163.351, 102.704, -26.8986, 1.33", "-163.938, 104.199, -26.7005, 0.52", "-164.489, 105.498, -26.5441, 0.52", "-164.918, 106.427, -26.434, 0.37", "-165.328, 107.384, -26.2967, 0.37", "-165.62, 108.201, -26.1687, 0.37", "-166.107, 109.784, -25.8904, 2.65", "-166.187, 110.079, -25.8322, 3.32", "-166.325, 110.498, -25.7763, 3.32", "-167.358, 112.882, -25.5454, 0.44", "-168.064, 114.274, -25.4416, 0.44", "-168.416, 114.94, -25.4132, 0.59", "-168.729, 115.527, -25.4111, 0.59", "-170.326, 118.44, -25.4986, 0.29", "-171.009, 119.626, -25.587, 0.29", "-171.674, 120.691, -25.7228, 0.29", "-172.411, 121.819, -25.8621, 0.29", "-172.68, 122.276, -25.9005, 0.29", "-173.354, 123.591, -25.9214, 1.11", "-173.713, 124.418, -25.848, 1.11", "-174.003, 125.063, -25.793, 0.88", "-174.766, 126.42, -25.6298, 0.52", "-175.694, 127.729, -25.3739, 0.29", "-176.297, 128.465, -25.1858, 0.29", "-176.665, 128.881, -25.042, 0.66", "-177.518, 129.789, -24.6703, 0.66", "-178.217, 130.468, -24.3519, 0.29", "-178.818, 130.93, -24.0793, 0.29", "-180.025, 131.531, -23.6089, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-153.655, 89.9278, -24.7966, 0.37", "-153.521, 90.7694, -23.8578, 0.37", "-153.388, 91.7275, -22.7426, 0.37", "-153.322, 92.3689, -21.9657, 0.37", "-153.238, 93.6148, -20.3976, 0.37", "-153.215, 94.5144, -19.2633, 0.52", "-153.232, 95.4274, -18.1474, 1.18", "-153.27, 96.0203, -17.4098, 1.18", "-153.329, 96.4439, -16.9454, 1.18", "-153.365, 96.7277, -16.6774, 1.03", "-153.43, 97.3807, -16.1808, 0.44", "-153.428, 98.2765, -15.5257, 0.88", "-153.358, 99.6621, -14.5545, 0.37", "-153.277, 100.936, -13.6534, 0.29", "-153.223, 101.779, -13.0218, 0.29", "-153.185, 102.4, -12.5089, 0.66", "-153.112, 103.951, -11.1077, 0.37", "-153.099, 104.827, -10.2603, 0.37", "-153.141, 105.748, -9.35132, 0.29", "-153.261, 106.609, -8.49127, 0.29", "-153.486, 107.349, -7.75335, 0.29", "-153.89, 108.294, -6.8695, 0.88", "-154.118, 108.79, -6.46986, 0.88", "-154.594, 109.908, -5.68477, 0.37", "-155.09, 111.088, -4.97633, 0.37", "-155.742, 112.735, -4.14367, 0.37", "-156.238, 114.093, -3.50831, 0.37", "-156.689, 115.381, -2.90055, 0.37", "-157.007, 116.334, -2.44813, 0.37", "-157.519, 117.895, -1.69166, 0.37", "-158.04, 119.702, -0.8235, 0.37", "-158.432, 121.205, -0.104716, 1.47", "-158.612, 121.784, 0.189188, 1.69", "-158.808, 122.373, 0.52727, 1.69", "-159.287, 123.839, 1.43811, 0.44", "-159.653, 124.984, 2.18873, 0.44", "-160.036, 126.036, 2.90806, 0.44", "-160.623, 127.494, 3.91102, 0.44", "-161.201, 128.87, 4.87662, 0.37", "-161.625, 129.894, 5.61431, 0.37", "-161.837, 130.396, 5.99524, 0.37", "-162.215, 131.165, 6.63441, 0.96", "-162.616, 131.896, 7.2936, 1.25", "-162.764, 132.114, 7.50479, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "16.4404, -154.329, 16.597, 0.44", "15.5923, -154.723, 16.7971, 0.44", "14.9147, -154.921, 16.9177, 0.29", "13.9934, -155.128, 17.0633, 0.22", "13.3414, -155.242, 17.1598, 0.59", "12.9592, -155.294, 17.2143, 0.59", "11.8624, -155.445, 17.3706, 0.29", "10.7707, -155.483, 17.5121, 0.29", "10.5301, -155.474, 17.536, 0.52", "10.1272, -155.441, 17.5529, 0.52", "9.79783, -155.403, 17.5644, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.4404, -154.329, 16.597, 0.37", "16.6036, -156.287, 16.3645, 0.37", "16.6573, -157.391, 16.247, 0.81", "16.6564, -158.029, 16.1903, 0.88", "16.6294, -158.699, 16.1426, 0.66", "16.5331, -159.941, 16.0718, 0.37", "16.4886, -160.408, 16.0505, 0.37", "16.3913, -161.215, 16.0611, 0.37", "16.3259, -162.191, 16.0764, 0.37", "16.3085, -163.075, 16.0863, 0.74", "16.3162, -163.931, 16.0725, 1.11", "16.3248, -164.677, 16.0468, 0.81", "16.3827, -166.084, 15.9827, 0.37", "16.4757, -167.712, 15.8821, 0.37", "16.4871, -168.756, 15.7972, 0.37", "16.4365, -169.831, 15.6917, 0.37", "16.3737, -170.457, 15.6185, 0.96", "16.2829, -170.956, 15.5525, 0.96", "16.0086, -171.965, 15.414, 0.44", "15.6116, -173.25, 15.2399, 0.37", "15.4555, -173.961, 15.133, 0.37", "15.4028, -174.506, 15.0538, 1.11", "15.387, -175.31, 14.9319, 0.88", "15.4083, -176.441, 14.7652, 0.66", "15.4869, -177.898, 14.5657, 0.52", "15.5773, -179.181, 14.4015, 0.52", "15.627, -180.332, 14.2666, 0.52", "15.6312, -181.718, 14.1073, 0.81", "15.5979, -182.404, 14.0282, 0.96", "15.5126, -183.208, 13.9412, 0.96", "15.3762, -184.071, 13.8554, 0.81", "15.1847, -185.124, 13.7344, 0.44", "14.9942, -186.293, 13.5547, 0.29", "14.9187, -186.982, 13.4185, 0.29", "14.8406, -187.7, 13.2574, 0.29", "14.707, -188.605, 13.0341, 0.29", "14.5196, -189.655, 12.722, 1.03", "14.461, -189.941, 12.6219, 1.47", "14.1775, -191.428, 12.059, 0.44", "13.9927, -192.481, 11.6354, 0.37", "13.7964, -193.551, 11.1996, 0.37", "13.5641, -194.8, 10.6848, 0.29", "13.3456, -196.004, 10.1833, 0.29", "13.231, -196.717, 9.87881, 0.29", "13.0697, -197.896, 9.35824, 0.29", "12.9458, -199.355, 8.70283, 0.66", "12.9073, -200.236, 8.32338, 1.18", "12.8787, -201.013, 8.03118, 1.18", "12.858, -201.546, 7.84399, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.1542, -61.5342, 17.2646, 0.44", "16.317, -61.6913, 18.3193, 0.44", "16.5768, -62.0452, 20.4552, 1.11", "17.0668, -62.6733, 23.8428, 0.44", "18.1496, -63.8645, 29.9764, 0.88", "18.5616, -64.2733, 31.9622, 1.25", "18.8456, -64.5551, 33.331, 0.88", "19.1263, -64.8277, 34.7237, 0.74", "20.1757, -65.7383, 39.3242, 0.37", "20.4911, -65.9962, 40.3988, 0.66", "20.799, -66.2878, 41.2109, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.1542, -61.5342, 17.2646, 0.44", "16.4001, -61.6196, 18.2149, 0.44", "18.5302, -62.3588, 26.4456, 0.44", "18.8086, -62.4554, 27.5211, 0.37", "18.9831, -62.5159, 28.1954, 0.37", "19.1128, -62.5609, 28.6965, 0.74", "19.2176, -62.5973, 29.1015, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-180.025, 131.531, -23.6089, 0.59", "-180.84, 132.369, -23.2438, 0.59", "-181.884, 133.076, -22.8491, 0.37", "-182.882, 133.584, -22.5066, 0.37", "-183.954, 134.085, -22.1386, 0.37", "-185.443, 134.778, -21.6133, 0.37", "-186.628, 135.335, -21.183, 0.37", "-187.993, 135.929, -20.6355, 0.37", "-189.05, 136.352, -20.2173, 0.37", "-190.216, 136.811, -19.7426, 0.37", "-190.989, 137.167, -19.4448, 0.37", "-191.498, 137.525, -19.2475, 1.03", "-191.785, 137.799, -19.1282, 1.33", "-192.406, 138.495, -18.8469, 1.11", "-193.259, 139.48, -18.4583, 0.37", "-194.194, 140.564, -18.0336, 0.37", "-195.377, 141.966, -17.5032, 0.29", "-196.292, 143.076, -17.0952, 0.29", "-197.052, 144.018, -16.7553, 0.52", "-197.793, 144.966, -16.4174, 1.55", "-198.098, 145.378, -16.2654, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-180.025, 131.531, -23.6089, 0.52", "-180.654, 132.833, -24.2555, 0.52", "-181.156, 134.132, -24.9887, 0.52", "-181.544, 135.345, -25.6442, 0.52", "-181.85, 136.434, -26.1843, 1.25", "-182.719, 139.697, -27.6695, 2.28", "-182.926, 140.434, -27.9916, 2.28", "-183.666, 143.042, -29.2103, 0.29", "-183.984, 144.177, -29.7719, 0.44", "-184.239, 145.154, -30.2306, 0.44", "-184.486, 146.128, -30.6216, 0.44", "-184.681, 146.978, -30.8395, 0.44", "-185.202, 148.705, -31.2828, 0.29", "-185.578, 149.572, -31.4759, 1.03", "-185.969, 150.346, -31.6312, 1.55", "-186.572, 151.548, -31.853, 0.88", "-187.2, 152.951, -32.0721, 0.52", "-187.694, 154.196, -32.21, 0.52", "-188.11, 155.18, -32.2381, 0.52", "-188.747, 156.636, -32.2169, 0.52", "-189.132, 157.607, -32.1509, 0.52", "-189.484, 158.548, -32.0519, 0.52", "-189.781, 159.469, -31.9369, 0.52", "-190.192, 161.135, -31.6926, 0.52", "-190.55, 162.86, -31.4459, 0.52", "-190.901, 164.465, -31.1785, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-162.764, 132.114, 7.50479, 0.29", "-164.635, 133.003, 8.62873, 0.29", "-165.545, 133.435, 9.17538, 0.29", "-166.21, 133.752, 9.57527, 0.29", "-166.71, 133.989, 9.87583, 0.74", "-167.121, 134.185, 10.1226, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-162.764, 132.114, 7.50479, 0.29", "-163.033, 132.537, 7.9545, 0.29", "-163.178, 132.773, 8.19144, 0.29", "-163.475, 133.44, 8.77028, 0.29", "-163.561, 133.701, 8.97215, 0.74", "-163.662, 133.975, 9.17761, 0.74", "-163.92, 134.595, 9.63189, 0.37", "-164.107, 135.038, 9.93185, 0.29", "-164.379, 135.76, 10.3742, 0.37", "-164.554, 136.273, 10.6571, 0.37", "-164.876, 137.178, 11.1786, 0.29", "-165.106, 137.766, 11.5435, 0.29", "-165.407, 138.409, 11.9875, 0.29", "-165.779, 138.999, 12.4564, 0.29", "-166.081, 139.38, 12.8002, 0.29", "-166.485, 139.853, 13.2854, 0.29", "-166.775, 140.203, 13.6848, 0.29", "-167.067, 140.561, 14.1271, 0.29", "-167.279, 140.822, 14.4921, 0.29", "-167.54, 141.18, 14.9957, 1.03", "-167.714, 141.5, 15.4043, 1.33", "-167.834, 141.832, 15.7712, 1.33", "-168.007, 142.479, 16.4487, 0.29", "-168.165, 143.071, 17.0857, 0.29", "-168.342, 143.591, 17.6996, 0.29", "-168.499, 143.939, 18.1657, 0.29", "-168.739, 144.342, 18.7789, 0.29", "-168.875, 144.532, 19.1094, 0.29", "-169.181, 144.907, 19.8436, 0.29", "-169.488, 145.257, 20.5557, 0.74", "-169.7, 145.478, 21.0684, 0.88", "-170.0, 145.799, 21.8177, 0.44", "-170.162, 145.992, 22.2442, 0.44", "-170.374, 146.322, 22.8607, 0.96", "-170.537, 146.624, 23.3225, 1.25", "-170.924, 147.33, 24.2343, 0.29", "-171.163, 147.729, 24.6719, 0.37", "-171.327, 147.988, 24.9477, 0.37", "-171.606, 148.415, 25.4756, 0.37", "-171.941, 148.915, 26.0871, 0.37", "-172.137, 149.22, 26.4476, 0.37", "-172.37, 149.567, 26.8459, 0.37", "-172.984, 150.363, 27.9405, 1.33", "-173.439, 150.942, 28.9259, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.858, -201.546, 7.84399, 0.29", "11.7456, -202.611, 7.87078, 0.29", "11.0668, -203.398, 7.98793, 0.29", "10.7348, -203.922, 8.07471, 0.74", "10.3346, -204.617, 8.18982, 0.29", "10.0376, -205.182, 8.24843, 0.29", "9.31404, -206.558, 8.39124, 0.59", "9.14881, -206.971, 8.44656, 0.74", "8.59083, -208.523, 8.70223, 0.37", "8.27604, -209.333, 8.83711, 0.96", "7.91526, -210.146, 8.94781, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "12.858, -201.546, 7.84399, 0.37", "13.9356, -201.723, 8.14649, 0.37", "14.678, -201.934, 8.37731, 0.37", "15.4192, -202.216, 8.78459, 0.37", "15.9214, -202.428, 9.29557, 0.29", "16.4892, -202.636, 10.0927, 0.29", "17.024, -202.831, 10.8434, 0.52", "17.2776, -202.938, 11.3503, 0.52", "17.9037, -203.308, 13.1558, 1.11", "18.3238, -203.677, 15.0706, 0.59", "18.3957, -203.763, 15.7971, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-198.098, 145.378, -16.2654, 0.37", "-198.811, 146.343, -15.4531, 0.37", "-199.462, 147.223, -14.712, 0.37", "-199.943, 147.874, -14.1638, 0.37", "-200.763, 148.984, -13.2295, 1.18", "-201.154, 149.513, -12.7839, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-198.098, 145.378, -16.2654, 0.29", "-199.716, 145.381, -17.0808, 0.29", "-200.979, 145.403, -17.6802, 0.52", "-202.911, 145.401, -18.492, 1.03", "-203.944, 145.396, -18.8763, 1.03", "-204.899, 145.407, -19.2033, 0.88", "-206.263, 145.485, -19.631, 0.81", "-207.11, 145.598, -19.9062, 0.29", "-208.078, 145.777, -20.1668, 0.29", "-209.011, 145.944, -20.3479, 0.29", "-209.507, 145.978, -20.5201, 0.52", "-210.651, 146.026, -21.0223, 0.52", "-212.05, 146.054, -21.6905, 1.18", "-212.551, 146.051, -21.9318, 1.47", "-213.272, 146.051, -22.2607, 1.47", "-216.592, 146.019, -23.6127, 0.52", "-217.658, 145.97, -23.9691, 0.29", "-218.94, 145.892, -24.3073, 0.29", "-220.849, 145.845, -24.6177, 0.29", "-222.443, 145.837, -24.7509, 0.29", "-223.566, 145.817, -24.7603, 0.29", "-225.271, 145.733, -24.6167, 0.29", "-225.993, 145.679, -24.5565, 0.29", "-227.201, 145.607, -24.4368, 0.88", "-227.841, 145.584, -24.3614, 1.25", "-229.826, 145.504, -24.1719, 0.37", "-230.796, 145.453, -24.2212, 0.29", "-231.664, 145.407, -24.3811, 0.74", "-232.302, 145.364, -24.52, 0.74", "-233.551, 145.279, -24.8111, 0.37", "-234.728, 145.2, -25.1172, 0.37", "-237.342, 145.033, -25.8903, 0.37", "-238.165, 144.953, -26.1286, 0.37", "-239.788, 144.739, -26.5416, 0.29", "-240.559, 144.603, -26.6966, 0.29", "-242.264, 144.172, -26.878, 0.66", "-243.731, 143.724, -26.9178, 0.74", "-245.175, 143.247, -26.8371, 0.52", "-246.195, 142.889, -26.7725, 0.96", "-247.139, 142.55, -26.7258, 0.96", "-248.818, 141.957, -26.584, 0.29", "-250.053, 141.548, -26.3947, 0.96", "-250.779, 141.333, -26.2679, 1.11", "-252.015, 141.12, -26.0804, 0.44", "-252.957, 141.109, -25.9333, 0.44", "-254.133, 141.31, -25.7446, 0.44", "-255.154, 141.617, -25.5606, 0.44", "-255.922, 141.866, -25.3993, 0.44", "-257.185, 142.196, -25.1524, 0.44", "-258.088, 142.347, -25.0203, 0.44", "-259.68, 142.518, -24.8076, 0.44", "-260.619, 142.597, -24.6989, 0.81", "-261.775, 142.654, -24.5809, 0.81", "-263.36, 142.681, -24.4287, 0.52", "-264.99, 142.697, -24.2784, 0.37", "-265.791, 142.727, -24.2312, 0.37", "-266.681, 142.789, -24.2143, 1.03", "-267.997, 142.938, -24.2785, 1.47", "-268.779, 143.075, -24.3633, 1.47", "-269.731, 143.329, -24.5186, 0.44", "-271.661, 143.805, -24.9768, 0.29", "-273.293, 144.066, -25.4968, 0.29", "-275.267, 144.208, -26.315, 0.29", "-276.649, 144.243, -26.9717, 0.52", "-278.343, 144.274, -27.7784, 0.74", "-280.432, 144.385, -28.7483, 0.59", "-281.704, 144.547, -29.3467, 0.59", "-283.721, 144.894, -30.2782, 0.37", "-285.111, 145.11, -30.8307, 0.37", "-286.57, 145.274, -31.2934, 0.37", "-288.142, 145.353, -31.6529, 0.37", "-290.068, 145.401, -31.8958, 0.59", "-291.238, 145.277, -31.9479, 0.59", "-292.86, 144.711, -31.8384, 2.06", "-293.441, 144.346, -31.7656, 2.87", "-294.563, 143.311, -31.5715, 2.5", "-295.405, 142.314, -31.3488, 1.55", "-296.223, 141.154, -31.0471, 0.37", "-296.632, 140.484, -30.8867, 0.37", "-297.289, 139.272, -30.6182, 0.37", "-297.994, 138.007, -30.3331, 0.37", "-298.859, 136.38, -29.9952, 0.37", "-299.081, 135.955, -29.9226, 0.66", "-299.514, 135.147, -29.7997, 0.44", "-300.004, 134.259, -29.6782, 0.37", "-300.692, 133.073, -29.4495, 0.37", "-301.308, 132.129, -29.213, 0.37", "-302.077, 131.01, -28.881, 0.37", "-302.661, 130.225, -28.5987, 0.59", "-303.241, 129.521, -28.3068, 0.59", "-304.226, 128.402, -27.7817, 0.37", "-305.036, 127.526, -27.3155, 0.66", "-305.668, 126.944, -26.9173, 0.66", "-306.179, 126.521, -26.5373, 0.66", "-306.695, 126.144, -26.1184, 0.37", "-307.207, 125.833, -25.6903, 0.74", "-307.667, 125.61, -25.3073, 0.74", "-308.628, 125.213, -24.4315, 0.52", "-309.992, 124.743, -23.2026, 0.29", "-310.867, 124.402, -22.4289, 0.29", "-311.579, 124.053, -21.8206, 1.47", "-312.093, 123.736, -21.4149, 1.99", "-312.639, 123.293, -21.023, 1.99", "-314.019, 121.979, -20.154, 0.29", "-315.19, 120.808, -19.5319, 0.29", "-316.246, 119.667, -19.0129, 0.29", "-317.15, 118.678, -18.5935, 0.29", "-318.457, 117.325, -18.0353, 0.29", "-319.224, 116.566, -17.7612, 0.44", "-320.376, 115.481, -17.467, 0.44", "-321.49, 114.577, -17.2479, 0.44", "-322.802, 113.648, -17.0181, 0.44", "-324.057, 112.844, -16.7976, 0.44", "-325.418, 111.993, -16.5578, 0.44", "-327.062, 110.912, -16.2466, 0.44", "-328.29, 110.079, -15.9961, 0.44", "-329.927, 108.967, -15.7226, 0.44", "-331.003, 108.166, -15.5934, 1.62", "-331.598, 107.707, -15.5255, 2.5", "-332.03, 107.387, -15.4675, 2.5", "-334.345, 105.621, -15.1699, 0.37", "-335.448, 104.681, -15.0781, 0.37", "-336.576, 103.653, -15.0436, 0.37", "-337.496, 102.764, -14.9833, 0.81", "-338.341, 101.969, -14.8492, 0.37", "-339.002, 101.407, -14.6558, 0.52", "-339.478, 101.069, -14.3999, 0.81", "-340.096, 100.7, -13.9747, 0.81", "-341.406, 100.032, -13.084, 0.37", "-342.523, 99.4159, -12.3618, 0.37", "-343.666, 98.7091, -11.659, 0.37", "-344.51, 98.1363, -11.1108, 0.37", "-345.502, 97.4144, -10.447, 0.37", "-347.239, 96.0078, -9.27011, 0.29", "-348.181, 95.0712, -8.66, 0.29", "-348.971, 93.9933, -8.12972, 0.29", "-349.634, 92.6665, -7.61031, 0.88", "-349.905, 91.8509, -7.31969, 0.88", "-350.154, 90.6639, -6.90514, 0.29", "-350.373, 88.9143, -6.29086, 0.29", "-350.59, 86.9969, -5.61823, 0.37", "-350.86, 84.5577, -4.78544, 0.66", "-351.073, 83.0076, -4.29216, 0.66", "-351.229, 82.004, -3.96253, 0.22", "-351.347, 81.289, -3.71966, 0.59", "-351.508, 80.5082, -3.4393, 0.81", "-351.629, 80.0403, -3.27024, 0.81", "-352.192, 78.0973, -2.52193, 0.29", "-352.316, 77.5621, -2.32759, 0.29", "-352.486, 76.3212, -1.90388, 0.52", "-352.508, 75.5714, -1.62309, 0.52", "-352.496, 74.5237, -1.19757, 0.52", "-352.484, 72.3678, -0.22996, 0.66", "-352.526, 70.9918, 0.46078, 0.52", "-352.599, 70.079, 1.01706, 0.96", "-352.862, 68.4259, 2.20883, 0.66", "-353.109, 67.3564, 3.07818, 0.29", "-353.603, 65.9687, 4.33511, 0.29", "-354.072, 65.0516, 5.22589, 0.29", "-355.075, 63.3784, 6.93736, 0.29", "-355.454, 62.7954, 7.52704, 1.47", "-355.725, 62.3955, 7.91367, 1.77", "-356.677, 61.0159, 9.30026, 0.37", "-357.659, 59.6567, 10.667, 0.37", "-358.193, 58.9065, 11.4006, 0.66", "-358.728, 58.122, 12.1768, 0.66", "-359.114, 57.4904, 12.8523, 0.59", "-359.933, 56.1525, 14.4935, 0.37", "-360.465, 55.3051, 15.7122, 0.37", "-361.009, 54.4413, 17.075, 0.37", "-361.566, 53.4772, 18.6842, 0.96", "-361.922, 52.7172, 19.9691, 0.22", "-362.243, 51.8595, 21.3703, 0.22", "-362.378, 51.3912, 22.0738, 0.22", "-362.59, 50.6755, 23.1025, 0.52", "-363.008, 49.4575, 24.6353, 0.74", "-363.376, 48.6344, 25.571, 0.66", "-363.978, 47.4394, 26.8661, 0.29", "-364.452, 46.5639, 27.7551, 0.96", "-364.687, 46.2073, 28.1237, 1.33", "-365.802, 44.9176, 29.6085, 0.37", "-366.842, 43.7922, 30.9249, 0.37", "-367.366, 43.207, 31.6127, 0.37", "-368.391, 42.0378, 33.0941, 0.37", "-369.044, 41.2503, 34.1452, 0.37", "-370.187, 39.6722, 36.2421, 0.37", "-370.857, 38.5507, 37.6725, 0.37", "-371.259, 37.5908, 38.8635, 0.37", "-371.594, 36.4455, 40.3849, 1.11", "-371.702, 35.9577, 41.0955, 1.11", "-371.812, 35.0843, 42.3012, 0.44", "-371.89, 34.4384, 43.2046, 0.29", "-372.163, 33.1929, 45.0474, 0.29", "-372.374, 32.0194, 46.7669, 0.81", "-372.552, 30.5823, 48.6978, 0.52", "-372.702, 29.3301, 50.2452, 0.52", "-372.772, 28.2619, 51.5084, 0.52", "-372.759, 27.6624, 52.2428, 0.81", "-372.667, 26.1729, 54.0162, 0.44", "-372.579, 25.3321, 55.0519, 0.37", "-372.457, 24.4197, 56.3713, 0.37", "-372.315, 22.907, 58.7277, 0.37", "-372.161, 21.1647, 61.3156, 1.55", "-372.109, 20.4706, 62.3228, 2.36", "-372.089, 20.1059, 62.8468, 2.58", "-371.85, 18.0909, 65.5544, 0.52", "-371.662, 17.3725, 66.3766, 0.74", "-371.29, 16.2325, 67.3441, 0.74", "-370.787, 15.0117, 68.2671, 0.44", "-370.195, 13.8142, 69.2826, 0.37", "-369.744, 12.9282, 70.0868, 0.44", "-369.098, 11.705, 71.1912, 0.44", "-368.583, 10.7793, 72.1968, 0.44", "-367.766, 9.30636, 73.9983, 0.81", "-367.302, 8.3807, 75.155, 1.11", "-366.953, 7.40486, 76.235, 0.37", "-366.653, 6.39294, 77.1675, 0.37", "-365.826, 3.56404, 79.2344, 1.4", "-365.547, 2.64984, 79.8232, 1.99", "-365.28, 1.70378, 80.354, 1.99", "-364.511, -1.08972, 81.7686, 0.52", "-363.969, -3.03504, 82.6799, 0.52", "-363.583, -4.58403, 83.3178, 0.52", "-363.096, -7.08417, 84.0985, 0.52", "-362.792, -8.50116, 84.511, 0.74", "-362.375, -9.99648, 84.9731, 0.74", "-362.072, -10.9758, 85.3155, 0.52", "-361.761, -12.1349, 85.7327, 0.52", "-361.39, -13.8737, 86.3786, 0.44", "-361.057, -15.9246, 87.1422, 0.44", "-360.839, -17.4282, 87.7892, 0.52", "-360.638, -19.2296, 88.6885, 0.44", "-360.494, -20.6682, 89.4844, 0.44", "-360.362, -21.7643, 90.1423, 2.36", "-360.22, -22.9069, 90.8607, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-190.901, 164.465, -31.1785, 0.37", "-191.787, 165.818, -30.8313, 0.37", "-192.282, 166.569, -30.6291, 0.37", "-192.636, 167.129, -30.4797, 0.59", "-193.028, 167.802, -30.3146, 0.44", "-193.264, 168.232, -30.2169, 0.37", "-193.501, 168.685, -30.125, 0.37", "-193.898, 169.533, -29.9988, 0.29", "-194.161, 170.121, -29.9189, 0.29", "-194.402, 170.721, -29.8448, 0.29", "-194.69, 171.51, -29.7425, 0.88", "-194.837, 171.925, -29.6982, 1.11", "-194.946, 172.265, -29.6773, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-190.901, 164.465, -31.1785, 0.29", "-190.934, 166.207, -31.6322, 0.29", "-190.965, 167.124, -31.8355, 0.29", "-191.028, 167.9, -32.0803, 0.44", "-191.073, 168.319, -32.2229, 0.44", "-191.171, 169.14, -32.4874, 0.37", "-191.28, 169.973, -32.7295, 0.37", "-191.41, 170.943, -32.984, 0.37", "-191.669, 172.588, -33.4339, 0.81", "-191.792, 173.236, -33.6043, 0.59", "-192.037, 174.369, -33.8772, 1.33", "-192.245, 175.186, -34.0606, 1.92", "-192.333, 175.538, -34.1423, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-173.439, 150.942, 28.9259, 0.52", "-174.515, 152.377, 30.7817, 0.52", "-175.171, 153.154, 31.8322, 0.52", "-175.992, 154.014, 33.0715, 0.52", "-176.539, 154.573, 33.883, 0.52", "-177.214, 155.283, 34.8942, 0.52", "-177.614, 155.736, 35.5171, 0.66", "-178.018, 156.173, 36.1489, 0.29", "-178.296, 156.482, 36.5642, 0.29", "-179.011, 157.363, 37.5794, 0.29", "-179.502, 157.97, 38.2921, 0.29", "-179.987, 158.642, 39.0054, 0.29", "-180.463, 159.355, 39.7406, 1.25", "-180.732, 159.767, 40.167, 1.55", "-181.24, 160.552, 40.9548, 0.22", "-181.955, 161.424, 41.9058, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-173.439, 150.942, 28.9259, 0.29", "-174.442, 151.68, 30.5577, 0.29", "-174.974, 152.092, 31.5413, 0.29", "-175.506, 152.52, 32.5732, 0.29", "-176.158, 153.071, 33.7909, 0.37", "-176.575, 153.461, 34.5353, 0.37", "-176.913, 153.814, 35.1209, 0.29", "-177.5, 154.579, 36.1695, 0.29", "-177.907, 155.152, 36.8802, 0.29", "-178.495, 156.024, 37.8337, 0.29", "-179.103, 156.994, 38.8754, 0.29", "-179.547, 157.733, 39.6559, 0.52", "-179.838, 158.217, 40.1582, 0.29", "-180.434, 159.229, 41.1979, 0.29", "-180.857, 160.012, 42.02, 0.29", "-181.354, 161.009, 43.0925, 0.59", "-181.722, 161.75, 43.9012, 0.74", "-182.086, 162.49, 44.6891, 0.22", "-182.326, 162.997, 45.1889, 0.22", "-182.72, 163.851, 45.9251, 0.22", "-183.03, 164.545, 46.4964, 0.22", "-183.305, 165.123, 46.9531, 0.74", "-183.462, 165.442, 47.2217, 0.74", "-183.692, 165.826, 47.5982, 0.29", "-184.128, 166.452, 48.2826, 0.59", "-184.652, 167.088, 49.1143, 0.29", "-185.21, 167.716, 50.0186, 0.29", "-185.741, 168.208, 50.8452, 0.29", "-186.298, 168.625, 51.6722, 0.29", "-186.894, 168.973, 52.5694, 0.29", "-187.566, 169.3, 53.6146, 0.29", "-188.056, 169.517, 54.428, 0.29", "-188.887, 169.883, 55.9351, 0.29", "-189.355, 170.106, 56.8462, 0.29", "-190.042, 170.448, 58.2594, 1.4", "-190.449, 170.641, 59.1308, 1.77", "-191.134, 171.043, 60.769, 0.37", "-191.445, 171.262, 61.6433, 0.66", "-191.544, 171.408, 62.047, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-201.154, 149.513, -12.7839, 0.29", "-200.135, 151.188, -11.3721, 0.29", "-199.667, 152.103, -10.468, 0.22", "-199.263, 153.071, -9.36533, 0.22", "-198.865, 154.275, -7.7063, 0.44", "-198.693, 154.962, -6.67107, 0.44", "-198.504, 155.979, -5.2095, 0.44", "-198.505, 156.667, -4.10409, 0.74", "-198.498, 157.228, -3.18856, 0.74", "-198.542, 158.098, -1.81687, 0.44", "-198.547, 158.83, -0.752169, 0.29", "-198.455, 159.842, 0.544341, 0.29", "-198.236, 160.966, 1.73869, 0.29", "-197.433, 163.513, 4.03306, 0.29", "-196.87, 164.902, 5.15175, 0.29", "-196.331, 165.908, 5.94061, 0.29", "-195.783, 166.881, 6.68189, 0.29", "-195.161, 168.078, 7.51397, 0.81", "-194.438, 169.624, 8.50686, 1.47", "-193.988, 170.752, 9.14023, 1.84", "-192.495, 174.815, 11.2113, 0.29", "-191.952, 176.573, 12.0592, 0.29", "-191.284, 178.689, 13.1246, 0.29", "-190.327, 181.558, 14.5586, 1.84", "-189.582, 183.769, 15.6132, 0.37", "-189.096, 185.243, 16.3191, 0.37", "-188.739, 186.34, 16.8569, 0.37", "-187.453, 189.798, 18.8517, 0.66", "-186.823, 191.184, 19.8967, 0.37", "-186.493, 191.871, 20.5788, 0.37", "-186.034, 192.86, 21.7612, 0.59", "-185.852, 193.333, 22.3136, 0.59", "-185.633, 194.137, 23.1924, 0.44", "-185.169, 197.556, 26.5023, 0.44", "-184.998, 199.245, 28.0312, 0.29", "-184.856, 200.836, 29.3605, 0.29", "-184.742, 203.074, 31.0337, 0.29", "-184.704, 204.116, 31.7684, 0.29", "-184.685, 205.548, 32.6824, 0.29", "-184.725, 207.111, 33.5767, 1.18", "-184.719, 207.691, 33.9223, 1.55", "-184.596, 209.427, 35.2486, 0.66", "-184.101, 211.489, 37.2195, 1.03", "-183.809, 212.186, 37.9729, 1.03", "-182.929, 213.729, 39.788, 0.29", "-182.496, 214.411, 40.6104, 0.29", "-181.531, 215.909, 42.3487, 0.66", "-180.157, 217.791, 44.6322, 0.37", "-179.284, 218.976, 46.0755, 0.37", "-178.771, 219.617, 46.8853, 0.37", "-178.015, 220.486, 47.9526, 1.47", "-177.205, 221.47, 48.9482, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-201.154, 149.513, -12.7839, 0.29", "-201.718, 153.795, -12.1108, 0.29", "-201.927, 156.364, -11.5823, 0.29", "-202.074, 158.808, -10.9553, 1.69", "-202.245, 162.466, -9.85738, 0.29", "-202.297, 163.822, -9.38667, 0.29", "-202.395, 165.644, -8.64405, 0.29", "-202.371, 167.25, -7.80411, 0.29", "-202.38, 168.409, -7.12679, 0.29", "-202.473, 169.981, -6.16703, 0.59", "-202.753, 171.633, -5.12696, 0.29", "-203.205, 173.384, -3.96519, 0.29", "-203.515, 174.224, -3.39039, 0.59", "-204.027, 175.246, -2.68813, 0.59", "-204.717, 176.312, -1.83224, 0.29", "-205.376, 177.139, -1.07107, 0.29", "-206.158, 178.078, -0.183608, 0.88", "-206.628, 178.653, 0.35845, 1.03", "-207.662, 179.857, 1.55758, 0.29", "-208.762, 181.099, 2.83095, 0.29", "-209.755, 182.185, 3.84685, 0.29", "-210.563, 183.083, 4.5455, 0.29", "-211.541, 184.152, 5.20886, 0.29", "-212.626, 185.258, 5.72814, 0.66", "-213.274, 185.859, 5.90078, 0.88", "-214.554, 186.983, 6.01358, 0.29", "-215.614, 187.775, 5.9942, 0.29", "-217.158, 188.778, 5.76391, 0.29", "-218.806, 189.769, 5.22477, 0.29", "-220.205, 190.543, 4.62375, 0.29", "-221.827, 191.366, 3.84318, 0.59", "-223.669, 192.192, 2.91744, 0.44", "-225.816, 193.061, 1.85116, 0.81", "-228.211, 193.91, 0.703204, 0.37", "-229.876, 194.448, 0.0325592, 0.29", "-230.983, 194.781, -0.303434, 0.29", "-232.136, 195.115, -0.539024, 0.29", "-233.873, 195.719, -0.722388, 0.59", "-236.016, 196.474, -0.72153, 0.29", "-237.787, 197.112, -0.572034, 0.22", "-238.774, 197.507, -0.484946, 0.22", "-240.314, 198.2, -0.333376, 1.25", "-241.159, 198.634, -0.248116, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-192.333, 175.538, -34.1423, 0.44", "-193.662, 176.919, -33.905, 0.44", "-194.957, 178.32, -33.7336, 0.37", "-195.775, 179.258, -33.6332, 0.37", "-196.57, 180.19, -33.5241, 0.37", "-197.233, 180.96, -33.446, 0.37", "-198.286, 182.169, -33.3136, 0.29", "-199.402, 183.583, -33.2064, 1.25", "-199.951, 184.322, -33.1883, 1.62", "-200.463, 185.007, -33.2293, 1.62", "-201.869, 186.898, -33.4193, 0.29", "-202.517, 187.813, -33.5259, 0.29", "-203.305, 189.023, -33.7223, 0.29", "-203.996, 190.181, -33.995, 0.59", "-205.186, 192.314, -34.5641, 0.29", "-205.572, 193.026, -34.7597, 0.29", "-206.13, 194.037, -35.0382, 0.29", "-206.489, 194.63, -35.1846, 0.29", "-206.987, 195.429, -35.3199, 0.59", "-207.539, 196.376, -35.4018, 0.59", "-208.587, 198.253, -35.4872, 0.29", "-209.241, 199.393, -35.5645, 0.29", "-209.967, 200.689, -35.6545, 0.29", "-210.897, 202.403, -35.7881, 0.37", "-211.369, 203.304, -35.8606, 0.37", "-212.142, 204.921, -35.9859, 0.37", "-212.729, 206.278, -36.0774, 0.37", "-213.466, 208.151, -36.1536, 0.44", "-213.904, 209.416, -36.1837, 0.66", "-214.204, 210.371, -36.1837, 0.66", "-214.708, 212.352, -36.054, 0.29", "-214.875, 213.246, -35.935, 0.74", "-215.14, 215.005, -35.5997, 0.29", "-215.417, 216.973, -35.125, 0.37", "-215.565, 218.121, -34.824, 0.37", "-215.841, 220.084, -34.2959, 0.37", "-216.044, 221.312, -33.9581, 0.37", "-216.34, 222.703, -33.578, 0.37", "-216.748, 224.225, -33.1683, 0.29", "-217.217, 225.688, -32.7838, 0.29", "-217.904, 227.767, -32.3754, 0.29", "-218.226, 228.712, -32.2601, 0.29", "-218.66, 229.999, -32.1425, 1.03", "-218.983, 230.977, -32.0727, 1.33", "-219.665, 233.004, -31.9219, 0.52", "-220.248, 234.724, -31.7786, 0.52", "-220.785, 236.39, -31.651, 0.52", "-221.217, 237.757, -31.5373, 0.81", "-221.453, 238.496, -31.4642, 0.81", "-222.145, 240.51, -31.1823, 0.37", "-222.73, 242.165, -30.8769, 0.37", "-223.214, 243.531, -30.5665, 0.96", "-223.429, 244.141, -30.4255, 1.33", "-223.716, 244.916, -30.2362, 1.4", "-224.425, 246.678, -29.7774, 0.52", "-224.975, 247.936, -29.4278, 0.44", "-225.764, 249.536, -28.9332, 0.37", "-226.483, 250.948, -28.4895, 0.37", "-227.073, 252.129, -28.1262, 0.37", "-227.47, 252.928, -27.8831, 0.37", "-228.194, 254.263, -27.4397, 0.74", "-228.382, 254.552, -27.3221, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-192.333, 175.538, -34.1423, 0.37", "-193.517, 177.399, -35.0069, 0.37", "-194.235, 178.742, -35.5369, 0.74", "-195.209, 180.929, -36.4091, 0.29", "-195.675, 182.119, -36.9462, 0.29", "-196.111, 183.375, -37.5353, 1.25", "-196.273, 183.876, -37.7741, 1.25", "-196.599, 185.187, -38.3752, 0.29", "-196.836, 186.498, -38.9772, 0.29", "-197.059, 187.929, -39.6623, 0.29", "-197.243, 188.764, -40.1292, 0.29", "-197.485, 189.482, -40.5993, 0.29", "-197.84, 190.329, -41.2029, 0.29", "-198.358, 191.26, -41.879, 1.03", "-199.478, 193.042, -43.0868, 0.37", "-200.093, 194.005, -43.7025, 0.37", "-200.61, 194.838, -44.2894, 0.37", "-201.067, 195.557, -44.8146, 1.03", "-201.874, 196.785, -45.7473, 0.52", "-202.415, 197.665, -46.4127, 0.52", "-202.874, 198.598, -47.004, 0.44", "-203.707, 200.693, -48.258, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_LBC_01750e1e18_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250194, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -4.93641, -0.239034, 5.21782, 0.96 ) }
    dend_51 { pt3dadd( -5.32182, -0.544676, 5.77182, 0.88 ) }
    dend_51 { pt3dadd( -6.59159, -1.39483, 7.37449, 0.81 ) }
    dend_51 { pt3dadd( -7.14192, -1.74416, 7.99672, 0.74 ) }
    dend_51 { pt3dadd( -8.00854, -2.318, 8.91471, 0.66 ) }
    dend_51 { pt3dadd( -8.5337, -2.68055, 9.55005, 0.59 ) }
    dend_51 { pt3dadd( -8.95647, -3.0148, 10.1637, 0.81 ) }
    dend_51 { pt3dadd( -9.28222, -3.25873, 10.6435, 0.81 ) }
    dend_51 { pt3dadd( -9.97427, -3.68092, 11.6303, 0.59 ) }
    dend_51 { pt3dadd( -10.5686, -3.99385, 12.5121, 1.33 ) }
    dend_51 { pt3dadd( -11.9964, -4.64799, 14.7453, 1.55 ) }
    dend_51 { pt3dadd( -13.0406, -5.08568, 16.5362, 0.74 ) }
    dend_51 { pt3dadd( -13.4112, -5.20708, 17.1892, 0.59 ) }
    dend_51 { pt3dadd( -13.9262, -5.33216, 18.0943, 1.03 ) }
    dend_51 { pt3dadd( -14.1345, -5.35612, 18.4504, 1.47 ) }
    dend_51 { pt3dadd( -14.7183, -5.35126, 19.407, 1.47 ) }
    dend_51 { pt3dadd( -15.8701, -5.25616, 21.304, 0.81 ) }
    dend_51 { pt3dadd( -16.2841, -5.22847, 22.1363, 0.59 ) }
    dend_51 { pt3dadd( -16.6664, -5.26733, 23.1091, 0.59 ) }
    dend_51 { pt3dadd( -16.9052, -5.35267, 23.8105, 0.96 ) }
    dend_51 { pt3dadd( -17.1222, -5.50241, 24.5635, 0.96 ) }
    dend_51 { pt3dadd( -17.696, -6.06604, 26.9381, 0.59 ) }
    dend_51 { pt3dadd( -17.933, -6.44261, 28.382, 0.59 ) }
    dend_51 { pt3dadd( -18.0446, -6.74699, 29.5012, 0.44 ) }
    dend_51 { pt3dadd( -18.0853, -6.95477, 30.2038, 1.18 ) }
    dend_51 { pt3dadd( -18.1059, -7.19512, 30.8226, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 7.9902, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51955, 8.60012, 1.80175, 3.24 ) }
    dend_22 { pt3dadd( -1.53953, 10.6716, 2.19619, 2.58 ) }
    dend_22 { pt3dadd( -1.55516, 12.2927, 2.50487, 2.36 ) }
    dend_22 { pt3dadd( -1.5679, 13.6133, 2.75632, 2.36 ) }
    dend_22 { pt3dadd( -1.58264, 15.1408, 3.0472, 2.36 ) }
    dend_22 { pt3dadd( -1.58976, 15.8789, 3.18773, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.3398, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.72494, -6.39872, 3.21829, 1.18 ) }
    dend_17 { pt3dadd( 6.75502, -6.84587, 3.96569, 0.88 ) }
    dend_17 { pt3dadd( 7.32115, -7.09404, 4.28739, 1.11 ) }
    dend_17 { pt3dadd( 8.89656, -7.74381, 4.99646, 1.33 ) }
    dend_17 { pt3dadd( 9.68137, -8.04301, 5.27364, 1.33 ) }
    dend_17 { pt3dadd( 10.5723, -8.37336, 5.58868, 1.25 ) }
    dend_17 { pt3dadd( 11.6483, -8.76204, 5.91348, 0.96 ) }
    dend_17 { pt3dadd( 12.5229, -9.09079, 6.1104, 0.96 ) }
    dend_17 { pt3dadd( 13.2519, -9.3804, 6.22854, 1.25 ) }
    dend_17 { pt3dadd( 14.1477, -9.71112, 6.35, 1.25 ) }
    dend_17 { pt3dadd( 15.4104, -10.0997, 6.59594, 1.47 ) }
    dend_17 { pt3dadd( 16.2528, -10.3091, 6.82336, 0.74 ) }
    dend_17 { pt3dadd( 16.9021, -10.4216, 7.08464, 0.74 ) }
    dend_17 { pt3dadd( 17.8582, -10.5478, 7.54481, 0.59 ) }
    dend_17 { pt3dadd( 19.0957, -10.6943, 8.16373, 0.59 ) }
    dend_17 { pt3dadd( 19.5898, -10.748, 8.40073, 0.81 ) }
    dend_17 { pt3dadd( 20.1579, -10.8084, 8.62197, 0.81 ) }
    dend_17 { pt3dadd( 21.4874, -10.9049, 9.18313, 0.52 ) }
    dend_17 { pt3dadd( 21.9949, -10.9133, 9.40503, 0.52 ) }
    dend_17 { pt3dadd( 22.8183, -10.8913, 9.75712, 0.52 ) }
    dend_17 { pt3dadd( 23.4598, -10.9636, 9.95125, 0.59 ) }
    dend_17 { pt3dadd( 24.4561, -11.2442, 10.1384, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -9.79978, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -9.79978, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.84608, -10.9181, 1.60171, 2.06 ) }
    dend_0 { pt3dadd( 1.95026, -12.5884, 1.1926, 1.33 ) }
    dend_0 { pt3dadd( 2.05255, -14.2285, 0.790892, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58976, 15.8789, 3.18773, 2.06 ) }
    dend_26 { pt3dadd( -0.741844, 16.804, 4.02812, 2.06 ) }
    dend_26 { pt3dadd( 0.888356, 18.7225, 5.53453, 1.92 ) }
    dend_26 { pt3dadd( 2.40037, 20.6274, 6.89319, 1.47 ) }
    dend_26 { pt3dadd( 3.05674, 21.5295, 7.47598, 1.47 ) }
    dend_26 { pt3dadd( 4.05354, 23.0312, 8.34781, 1.25 ) }
    dend_26 { pt3dadd( 4.79002, 24.1407, 8.99195, 1.77 ) }
    dend_26 { pt3dadd( 5.53405, 25.3404, 9.65379, 1.55 ) }
    dend_26 { pt3dadd( 6.31764, 26.8135, 10.2556, 1.62 ) }
    dend_26 { pt3dadd( 6.78611, 27.849, 10.5843, 2.21 ) }
    dend_26 { pt3dadd( 7.25128, 29.0049, 10.9107, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58976, 15.8789, 3.18773, 0.59 ) }
    dend_23 { pt3dadd( -3.32738, 16.1831, 2.42024, 0.59 ) }
    dend_23 { pt3dadd( -4.28786, 16.2767, 2.02783, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -5.11536, 16.2928, 1.63988, 0.59 ) }
    dend_23 { pt3dadd( -6.76705, 16.2552, 0.699307, 0.52 ) }
    dend_23 { pt3dadd( -7.84875, 16.2262, 0.0124148, 0.81 ) }
    dend_23 { pt3dadd( -8.67332, 16.2131, -0.535125, 1.18 ) }
    dend_23 { pt3dadd( -9.29762, 16.1724, -0.947969, 1.18 ) }
    dend_23 { pt3dadd( -10.8083, 16.0458, -1.98646, 0.66 ) }
    dend_23 { pt3dadd( -12.1419, 15.9625, -2.89063, 0.66 ) }
    dend_23 { pt3dadd( -13.0298, 15.9404, -3.45629, 1.25 ) }
    dend_23 { pt3dadd( -13.5392, 15.9464, -3.75372, 1.47 ) }
    dend_23 { pt3dadd( -14.6999, 16.0025, -4.39755, 0.52 ) }
    dend_23 { pt3dadd( -15.5621, 16.0694, -4.81356, 0.52 ) }
    dend_23 { pt3dadd( -17.0147, 16.2081, -5.2966, 0.52 ) }
    dend_23 { pt3dadd( -17.9578, 16.275, -5.50613, 1.03 ) }
    dend_23 { pt3dadd( -18.6397, 16.2936, -5.63199, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 24.4561, -11.2442, 10.1384, 0.52 ) }
    dend_21 { pt3dadd( 25.3537, -12.3622, 8.4826, 0.52 ) }
    dend_21 { pt3dadd( 25.5782, -12.8515, 7.74949, 0.37 ) }
    dend_21 { pt3dadd( 25.9053, -13.9526, 5.95409, 0.37 ) }
    dend_21 { pt3dadd( 26.0457, -14.6337, 4.52107, 0.59 ) }
    dend_21 { pt3dadd( 26.1005, -14.963, 3.68879, 0.22 ) }
    dend_21 { pt3dadd( 26.1741, -15.6811, 1.8219, 0.22 ) }
    dend_21 { pt3dadd( 26.1596, -16.1077, 0.51323, 0.22 ) }
    dend_21 { pt3dadd( 26.0392, -16.7731, -1.68028, 0.74 ) }
    dend_21 { pt3dadd( 25.7044, -17.6828, -4.76698, 0.29 ) }
    dend_21 { pt3dadd( 25.4809, -18.2577, -6.81401, 0.07 ) }
    dend_21 { pt3dadd( 25.4166, -18.508, -7.85726, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 24.4561, -11.2442, 10.1384, 1.03 ) }
    dend_18 { pt3dadd( 26.3058, -11.65, 11.9771, 1.03 ) }
    dend_18 { pt3dadd( 27.2135, -11.7052, 12.3971, 0.52 ) }
    dend_18 { pt3dadd( 28.6547, -11.5925, 12.9437, 0.52 ) }
    dend_18 { pt3dadd( 31.5515, -11.1993, 13.9949, 0.37 ) }
    dend_18 { pt3dadd( 33.2262, -10.9208, 14.4898, 0.37 ) }
    dend_18 { pt3dadd( 37.3088, -10.1769, 15.5271, 0.37 ) }
    dend_18 { pt3dadd( 48.0133, -8.03502, 17.4392, 0.37 ) }
    dend_18 { pt3dadd( 54.3326, -6.67486, 18.2719, 0.66 ) }
    dend_18 { pt3dadd( 55.9976, -6.27672, 18.4182, 0.66 ) }
    dend_18 { pt3dadd( 60.0653, -5.13567, 18.5063, 0.74 ) }
    dend_18 { pt3dadd( 61.8672, -4.54472, 18.4441, 0.74 ) }
    dend_18 { pt3dadd( 64.2024, -3.63175, 18.1388, 0.37 ) }
    dend_18 { pt3dadd( 65.6626, -2.99912, 17.8115, 0.37 ) }
    dend_18 { pt3dadd( 67.088, -2.50652, 17.5319, 0.37 ) }
    dend_18 { pt3dadd( 68.4141, -2.06772, 17.4901, 0.81 ) }
    dend_18 { pt3dadd( 70.0294, -1.51518, 17.8161, 0.81 ) }
    dend_18 { pt3dadd( 71.264, -1.10093, 18.1817, 0.81 ) }
    dend_18 { pt3dadd( 73.2227, -0.618211, 18.8759, 0.37 ) }
    dend_18 { pt3dadd( 74.7067, -0.452659, 19.352, 0.29 ) }
    dend_18 { pt3dadd( 76.3877, -0.495517, 19.8399, 0.29 ) }
    dend_18 { pt3dadd( 78.4684, -0.773605, 20.4723, 0.44 ) }
    dend_18 { pt3dadd( 80.0229, -1.12837, 21.0383, 0.44 ) }
    dend_18 { pt3dadd( 82.4233, -1.79974, 21.9966, 0.44 ) }
    dend_18 { pt3dadd( 84.5383, -2.4273, 22.8544, 0.88 ) }
    dend_18 { pt3dadd( 85.4248, -2.68122, 23.2737, 0.88 ) }
    dend_18 { pt3dadd( 87.481, -3.17853, 24.5848, 0.52 ) }
    dend_18 { pt3dadd( 89.2268, -3.40983, 26.16, 0.74 ) }
    dend_18 { pt3dadd( 90.5784, -3.34845, 27.6536, 0.81 ) }
    dend_18 { pt3dadd( 91.3795, -3.15358, 28.6186, 0.81 ) }
    dend_18 { pt3dadd( 92.3848, -2.78659, 29.8307, 0.52 ) }
    dend_18 { pt3dadd( 93.7022, -2.24108, 31.2991, 0.52 ) }
    dend_18 { pt3dadd( 94.4035, -1.95886, 31.9671, 0.74 ) }
    dend_18 { pt3dadd( 95.5676, -1.57867, 32.8659, 0.74 ) }
    dend_18 { pt3dadd( 96.8858, -1.30412, 33.7035, 0.59 ) }
    dend_18 { pt3dadd( 98.2262, -1.17601, 34.3602, 0.59 ) }
    dend_18 { pt3dadd( 100.018, -1.15961, 35.0108, 0.66 ) }
    dend_18 { pt3dadd( 101.406, -1.24703, 35.3236, 0.88 ) }
    dend_18 { pt3dadd( 102.367, -1.36994, 35.4379, 0.88 ) }
    dend_18 { pt3dadd( 103.544, -1.64265, 35.4258, 0.52 ) }
    dend_18 { pt3dadd( 105.048, -2.17305, 35.216, 0.52 ) }
    dend_18 { pt3dadd( 106.125, -2.71121, 34.8872, 0.52 ) }
    dend_18 { pt3dadd( 107.815, -3.87262, 34.0867, 0.44 ) }
    dend_18 { pt3dadd( 108.919, -4.69252, 33.3951, 0.44 ) }
    dend_18 { pt3dadd( 110.375, -5.78001, 32.3074, 0.59 ) }
    dend_18 { pt3dadd( 110.99, -6.21166, 31.7904, 0.74 ) }
    dend_18 { pt3dadd( 111.971, -6.73741, 30.9524, 0.52 ) }
    dend_18 { pt3dadd( 112.754, -6.72107, 30.5123, 0.37 ) }
    dend_18 { pt3dadd( 115.207, -5.41617, 29.9973, 0.52 ) }
    dend_18 { pt3dadd( 116.16, -4.87986, 29.8706, 0.52 ) }
    dend_18 { pt3dadd( 117.299, -4.29033, 29.7704, 0.52 ) }
    dend_18 { pt3dadd( 119.232, -3.42483, 29.6618, 0.52 ) }
    dend_18 { pt3dadd( 121.062, -2.6384, 29.6379, 0.52 ) }
    dend_18 { pt3dadd( 122.861, -1.90274, 29.6659, 0.66 ) }
    dend_18 { pt3dadd( 124.351, -1.38428, 29.7362, 0.66 ) }
    dend_18 { pt3dadd( 125.862, -0.863875, 29.8069, 0.37 ) }
    dend_18 { pt3dadd( 127.284, -0.413188, 29.8727, 0.37 ) }
    dend_18 { pt3dadd( 128.866, 0.0117103, 29.9536, 0.37 ) }
    dend_18 { pt3dadd( 129.951, 0.288267, 29.9744, 0.66 ) }
    dend_18 { pt3dadd( 130.516, 0.42926, 29.9469, 0.66 ) }
    dend_18 { pt3dadd( 131.23, 0.612919, 29.8023, 0.66 ) }
    dend_18 { pt3dadd( 131.965, 0.783193, 29.5395, 0.66 ) }
    dend_18 { pt3dadd( 133.13, 1.0008, 28.9978, 0.37 ) }
    dend_18 { pt3dadd( 134.75, 1.20275, 28.1751, 0.37 ) }
    dend_18 { pt3dadd( 136.423, 1.3873, 27.4193, 0.37 ) }
    dend_18 { pt3dadd( 137.822, 1.57284, 26.8928, 0.22 ) }
    dend_18 { pt3dadd( 139.137, 1.75616, 26.5282, 0.37 ) }
    dend_18 { pt3dadd( 140.168, 1.9479, 26.4073, 0.44 ) }
    dend_18 { pt3dadd( 141.129, 2.21319, 26.5021, 0.44 ) }
    dend_18 { pt3dadd( 143.066, 2.9092, 27.1299, 0.52 ) }
    dend_18 { pt3dadd( 143.673, 3.16481, 27.4035, 0.37 ) }
    dend_18 { pt3dadd( 144.611, 3.59439, 27.8887, 0.37 ) }
    dend_18 { pt3dadd( 145.531, 4.02782, 28.3277, 0.52 ) }
    dend_18 { pt3dadd( 146.196, 4.39703, 28.5491, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 146.753, 4.75487, 28.6257, 0.88 ) }
    dend_18 { pt3dadd( 147.149, 5.06108, 28.6195, 0.88 ) }
    dend_18 { pt3dadd( 147.658, 5.50182, 28.6053, 1.03 ) }
    dend_18 { pt3dadd( 148.296, 6.1215, 28.5817, 1.03 ) }
    dend_18 { pt3dadd( 149.282, 7.0827, 28.5257, 0.52 ) }
    dend_18 { pt3dadd( 150.474, 8.18026, 28.413, 0.29 ) }
    dend_18 { pt3dadd( 151.516, 8.96539, 28.3082, 0.66 ) }
    dend_18 { pt3dadd( 152.337, 9.50253, 28.2124, 0.81 ) }
    dend_18 { pt3dadd( 153.154, 9.96409, 28.1064, 0.81 ) }
    dend_18 { pt3dadd( 153.899, 10.3504, 28.0038, 0.81 ) }
    dend_18 { pt3dadd( 155.118, 10.9074, 27.8579, 0.37 ) }
    dend_18 { pt3dadd( 157.493, 11.7987, 27.5382, 0.37 ) }
    dend_18 { pt3dadd( 158.683, 12.1673, 27.3948, 0.44 ) }
    dend_18 { pt3dadd( 159.698, 12.4857, 27.298, 0.59 ) }
    dend_18 { pt3dadd( 160.618, 12.8177, 27.2485, 0.59 ) }
    dend_18 { pt3dadd( 161.941, 13.3839, 27.2496, 0.59 ) }
    dend_18 { pt3dadd( 163.123, 13.9925, 27.3337, 0.52 ) }
    dend_18 { pt3dadd( 164.429, 14.7638, 27.4905, 0.74 ) }
    dend_18 { pt3dadd( 165.329, 15.248, 27.6339, 0.74 ) }
    dend_18 { pt3dadd( 166.65, 15.8775, 27.7641, 0.37 ) }
    dend_18 { pt3dadd( 167.675, 16.3137, 27.8003, 0.44 ) }
    dend_18 { pt3dadd( 168.819, 16.7586, 27.7781, 0.66 ) }
    dend_18 { pt3dadd( 169.686, 17.0527, 27.7271, 0.74 ) }
    dend_18 { pt3dadd( 170.659, 17.2904, 27.6384, 0.74 ) }
    dend_18 { pt3dadd( 172.714, 17.6959, 27.3949, 0.59 ) }
    dend_18 { pt3dadd( 173.304, 17.8025, 27.3072, 0.59 ) }
    dend_18 { pt3dadd( 174.165, 17.9861, 27.1572, 0.59 ) }
    dend_18 { pt3dadd( 175.027, 18.1911, 26.9618, 0.37 ) }
    dend_18 { pt3dadd( 176.355, 18.5665, 26.6402, 0.59 ) }
    dend_18 { pt3dadd( 177.51, 18.9571, 26.3375, 0.81 ) }
    dend_18 { pt3dadd( 178.37, 19.2674, 26.1612, 0.81 ) }
    dend_18 { pt3dadd( 179.68, 19.7009, 25.9516, 0.52 ) }
    dend_18 { pt3dadd( 181.115, 20.1774, 25.8065, 0.37 ) }
    dend_18 { pt3dadd( 182.084, 20.5064, 25.7788, 0.29 ) }
    dend_18 { pt3dadd( 182.8, 20.7528, 25.8256, 0.29 ) }
    dend_18 { pt3dadd( 184.364, 21.3585, 26.125, 0.52 ) }
    dend_18 { pt3dadd( 185.877, 22.0214, 26.5622, 0.52 ) }
    dend_18 { pt3dadd( 186.882, 22.441, 26.9085, 0.88 ) }
    dend_18 { pt3dadd( 187.715, 22.7467, 27.1581, 0.88 ) }
    dend_18 { pt3dadd( 188.378, 22.9609, 27.2568, 0.88 ) }
    dend_18 { pt3dadd( 189.873, 23.4249, 27.2691, 0.37 ) }
    dend_18 { pt3dadd( 190.935, 23.7891, 27.098, 0.37 ) }
    dend_18 { pt3dadd( 192.456, 24.3371, 26.6879, 0.37 ) }
    dend_18 { pt3dadd( 194.29, 24.9168, 26.1475, 0.29 ) }
    dend_18 { pt3dadd( 195.711, 25.3583, 25.6063, 0.29 ) }
    dend_18 { pt3dadd( 196.587, 25.6679, 25.2368, 0.52 ) }
    dend_18 { pt3dadd( 197.035, 25.8527, 25.0273, 0.74 ) }
    dend_18 { pt3dadd( 197.797, 26.2405, 24.6303, 0.44 ) }
    dend_18 { pt3dadd( 199.302, 27.103, 23.8624, 0.37 ) }
    dend_18 { pt3dadd( 201.733, 28.5463, 22.7471, 0.44 ) }
    dend_18 { pt3dadd( 203.111, 29.3339, 22.1057, 0.44 ) }
    dend_18 { pt3dadd( 204.499, 30.1088, 21.3876, 1.03 ) }
    dend_18 { pt3dadd( 205.897, 30.8825, 20.5926, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.05255, -14.2285, 0.790892, 1.18 ) }
    dend_2 { pt3dadd( 1.80369, -15.7557, 2.38875, 1.18 ) }
    dend_2 { pt3dadd( 1.61212, -16.4483, 3.09358, 1.18 ) }
    dend_2 { pt3dadd( 1.12623, -18.2049, 4.88135, 1.18 ) }
    dend_2 { pt3dadd( 0.779719, -19.4577, 6.15626, 0.88 ) }
    dend_2 { pt3dadd( 0.564077, -20.2373, 6.94969, 0.74 ) }
    dend_2 { pt3dadd( 0.375949, -20.9174, 7.64187, 1.03 ) }
    dend_2 { pt3dadd( -0.173819, -22.1763, 8.73524, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.05255, -14.2285, 0.790892, 0.96 ) }
    dend_1 { pt3dadd( 2.4156, -15.2887, -1.55563, 0.96 ) }
    dend_1 { pt3dadd( 2.7171, -16.2596, -3.31888, 0.96 ) }
    dend_1 { pt3dadd( 2.7483, -16.4001, -3.54688, 1.4 ) }
    dend_1 { pt3dadd( 3.17624, -18.2197, -6.31572, 0.88 ) }
    dend_1 { pt3dadd( 3.28514, -18.6079, -6.86929, 0.88 ) }
    dend_1 { pt3dadd( 3.51141, -19.2924, -7.80371, 0.52 ) }
    dend_1 { pt3dadd( 3.87196, -20.2002, -8.92708, 0.52 ) }
    dend_1 { pt3dadd( 4.50084, -21.7115, -10.6799, 0.88 ) }
    dend_1 { pt3dadd( 5.32627, -23.6105, -12.7353, 0.52 ) }
    dend_1 { pt3dadd( 6.016, -25.0616, -14.1976, 0.52 ) }
    dend_1 { pt3dadd( 6.47342, -25.9166, -15.0616, 0.52 ) }
    dend_1 { pt3dadd( 6.99543, -26.8497, -15.9711, 0.52 ) }
    dend_1 { pt3dadd( 7.42904, -27.627, -16.6797, 0.52 ) }
    dend_1 { pt3dadd( 7.98817, -28.6559, -17.4844, 0.88 ) }
    dend_1 { pt3dadd( 8.33326, -29.44, -17.992, 1.11 ) }
    dend_1 { pt3dadd( 8.92094, -31.1207, -18.9323, 0.44 ) }
    dend_1 { pt3dadd( 9.25005, -32.2122, -19.5091, 0.74 ) }
    dend_1 { pt3dadd( 9.47753, -32.9917, -19.8877, 0.96 ) }
    dend_1 { pt3dadd( 9.72037, -33.7664, -20.231, 0.96 ) }
    dend_1 { pt3dadd( 10.1116, -34.9782, -20.7936, 0.66 ) }
    dend_1 { pt3dadd( 10.2973, -35.5599, -21.0882, 0.66 ) }
    dend_1 { pt3dadd( 10.7818, -36.9817, -21.8647, 0.44 ) }
    dend_1 { pt3dadd( 11.093, -37.7189, -22.4658, 0.59 ) }
    dend_1 { pt3dadd( 11.4726, -38.4307, -23.2121, 0.44 ) }
    dend_1 { pt3dadd( 12.2717, -39.5691, -25.0724, 0.37 ) }
    dend_1 { pt3dadd( 12.805, -40.1628, -26.5325, 0.96 ) }
    dend_1 { pt3dadd( 13.005, -40.3595, -27.1406, 1.33 ) }
    dend_1 { pt3dadd( 14.1943, -41.5141, -31.3792, 0.81 ) }
    dend_1 { pt3dadd( 14.4642, -41.7889, -32.48, 1.11 ) }
    dend_1 { pt3dadd( 15.6212, -43.0966, -37.8496, 0.66 ) }
    dend_1 { pt3dadd( 16.3848, -44.1465, -41.9798, 1.55 ) }
    dend_1 { pt3dadd( 16.9914, -45.2263, -45.7392, 0.96 ) }
    dend_1 { pt3dadd( 17.4412, -46.3754, -49.2219, 0.81 ) }
    dend_1 { pt3dadd( 17.5488, -46.888, -50.4866, 0.96 ) }
    dend_1 { pt3dadd( 17.5764, -47.5235, -51.6795, 0.37 ) }
    dend_1 { pt3dadd( 17.4735, -48.6402, -53.0177, 0.29 ) }
    dend_1 { pt3dadd( 17.2581, -49.9577, -54.0087, 0.29 ) }
    dend_1 { pt3dadd( 17.099, -50.7674, -54.383, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 17.0256, -51.2347, -54.5105, 0.52 ) }
    dend_1 { pt3dadd( 16.7885, -53.2564, -55.049, 0.29 ) }
    dend_1 { pt3dadd( 16.7425, -53.8144, -55.2124, 0.59 ) }
    dend_1 { pt3dadd( 16.7182, -54.3192, -55.364, 0.59 ) }
    dend_1 { pt3dadd( 16.6887, -54.9618, -55.5786, 0.29 ) }
    dend_1 { pt3dadd( 16.6355, -56.2702, -56.0811, 0.29 ) }
    dend_1 { pt3dadd( 16.597, -57.548, -56.6623, 0.59 ) }
    dend_1 { pt3dadd( 16.5747, -57.9835, -56.8968, 0.81 ) }
    dend_1 { pt3dadd( 16.4158, -59.9703, -58.0778, 0.22 ) }
    dend_1 { pt3dadd( 16.3262, -60.9685, -58.748, 0.22 ) }
    dend_1 { pt3dadd( 16.1998, -62.3544, -59.7702, 0.22 ) }
    dend_1 { pt3dadd( 16.048, -63.9816, -61.0363, 0.81 ) }
    dend_1 { pt3dadd( 15.9041, -65.4419, -62.272, 0.44 ) }
    dend_1 { pt3dadd( 15.8236, -66.2803, -63.0295, 0.44 ) }
    dend_1 { pt3dadd( 15.6969, -67.6879, -64.3771, 0.88 ) }
    dend_1 { pt3dadd( 15.6507, -68.6612, -65.2646, 0.74 ) }
    dend_1 { pt3dadd( 15.6427, -69.0657, -65.6093, 0.74 ) }
    dend_1 { pt3dadd( 15.5707, -71.0703, -67.1487, 0.44 ) }
    dend_1 { pt3dadd( 15.5311, -71.9539, -67.7444, 0.44 ) }
    dend_1 { pt3dadd( 15.4522, -72.6895, -68.2118, 0.29 ) }
    dend_1 { pt3dadd( 15.2505, -73.8015, -68.8377, 0.29 ) }
    dend_1 { pt3dadd( 14.7627, -75.6594, -69.8092, 0.29 ) }
    dend_1 { pt3dadd( 14.417, -76.7325, -70.3291, 0.74 ) }
    dend_1 { pt3dadd( 14.0877, -77.625, -70.69, 0.74 ) }
    dend_1 { pt3dadd( 13.3935, -79.3256, -71.3744, 0.44 ) }
    dend_1 { pt3dadd( 13.0597, -80.1071, -71.6685, 0.44 ) }
    dend_1 { pt3dadd( 12.7005, -80.9594, -71.9442, 0.29 ) }
    dend_1 { pt3dadd( 12.5547, -81.3273, -72.0255, 0.66 ) }
    dend_1 { pt3dadd( 12.171, -82.3025, -72.2129, 0.37 ) }
    dend_1 { pt3dadd( 11.8515, -83.0965, -72.3339, 0.88 ) }
    dend_1 { pt3dadd( 11.5208, -83.8173, -72.4436, 0.88 ) }
    dend_1 { pt3dadd( 11.0203, -84.7831, -72.648, 0.59 ) }
    dend_1 { pt3dadd( 10.4865, -85.7124, -72.8836, 0.29 ) }
    dend_1 { pt3dadd( 9.90707, -86.6302, -73.2467, 0.66 ) }
    dend_1 { pt3dadd( 9.63282, -87.0423, -73.4821, 0.66 ) }
    dend_1 { pt3dadd( 8.83843, -88.3728, -74.5154, 0.22 ) }
    dend_1 { pt3dadd( 8.59798, -88.8657, -74.9737, 0.22 ) }
    dend_1 { pt3dadd( 8.43266, -89.2519, -75.3746, 0.74 ) }
    dend_1 { pt3dadd( 8.01514, -90.6131, -76.9204, 0.44 ) }
    dend_1 { pt3dadd( 7.87107, -91.4346, -77.9205, 0.44 ) }
    dend_1 { pt3dadd( 7.80468, -92.5499, -79.3698, 0.29 ) }
    dend_1 { pt3dadd( 7.85142, -92.8796, -79.836, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 7.25128, 29.0049, 10.9107, 0.81 ) }
    dend_50 { pt3dadd( 8.61486, 30.2347, 10.3197, 0.81 ) }
    dend_50 { pt3dadd( 9.17289, 30.7461, 10.0073, 0.81 ) }
    dend_50 { pt3dadd( 10.1681, 31.5789, 9.38134, 0.81 ) }
    dend_50 { pt3dadd( 11.5019, 32.597, 8.511, 0.96 ) }
    dend_50 { pt3dadd( 12.2051, 33.1027, 8.04516, 1.25 ) }
    dend_50 { pt3dadd( 12.8226, 33.5262, 7.63727, 1.25 ) }
    dend_50 { pt3dadd( 13.9557, 34.2974, 6.84713, 0.96 ) }
    dend_50 { pt3dadd( 14.885, 34.9447, 6.17242, 0.81 ) }
    dend_50 { pt3dadd( 15.7231, 35.5265, 5.54153, 1.33 ) }
    dend_50 { pt3dadd( 16.2603, 35.8921, 5.09783, 1.62 ) }
    dend_50 { pt3dadd( 17.0738, 36.4023, 4.43029, 0.74 ) }
    dend_50 { pt3dadd( 17.8285, 36.8344, 3.83458, 0.59 ) }
    dend_50 { pt3dadd( 18.5868, 37.281, 3.22681, 0.52 ) }
    dend_50 { pt3dadd( 19.4177, 37.8606, 2.41229, 0.44 ) }
    dend_50 { pt3dadd( 19.897, 38.2141, 1.80132, 0.44 ) }
    dend_50 { pt3dadd( 20.6999, 38.7486, 0.490948, 0.74 ) }
    dend_50 { pt3dadd( 21.1503, 38.9828, -0.394752, 0.74 ) }
    dend_50 { pt3dadd( 21.8675, 39.1955, -1.91761, 0.52 ) }
    dend_50 { pt3dadd( 22.4997, 39.2623, -3.20257, 0.88 ) }
    dend_50 { pt3dadd( 23.1492, 39.2892, -4.5631, 0.88 ) }
    dend_50 { pt3dadd( 23.6688, 39.3876, -5.82575, 0.59 ) }
    dend_50 { pt3dadd( 23.9111, 39.4632, -6.4748, 0.59 ) }
    dend_50 { pt3dadd( 24.214, 39.5572, -7.22501, 0.44 ) }
    dend_50 { pt3dadd( 24.7671, 39.7348, -8.16438, 0.44 ) }
    dend_50 { pt3dadd( 25.2752, 39.9714, -8.79867, 0.44 ) }
    dend_50 { pt3dadd( 26.4127, 40.7025, -9.87348, 0.44 ) }
    dend_50 { pt3dadd( 27.3722, 41.4822, -10.6733, 0.74 ) }
    dend_50 { pt3dadd( 28.1796, 42.3152, -11.3059, 0.96 ) }
    dend_50 { pt3dadd( 29.6945, 44.2408, -12.3897, 0.44 ) }
    dend_50 { pt3dadd( 30.0389, 44.7504, -12.6188, 0.96 ) }
    dend_50 { pt3dadd( 30.6452, 45.7374, -12.9948, 0.37 ) }
    dend_50 { pt3dadd( 31.2214, 46.8094, -13.3306, 0.37 ) }
    dend_50 { pt3dadd( 31.7042, 48.0359, -13.8429, 0.37 ) }
    dend_50 { pt3dadd( 31.9655, 49.0346, -14.3791, 0.74 ) }
    dend_50 { pt3dadd( 32.0887, 49.7441, -14.8681, 0.44 ) }
    dend_50 { pt3dadd( 32.2153, 50.6475, -15.5227, 0.52 ) }
    dend_50 { pt3dadd( 32.278, 51.3449, -16.0425, 1.11 ) }
    dend_50 { pt3dadd( 32.4125, 53.4188, -17.5916, 0.44 ) }
    dend_50 { pt3dadd( 32.4592, 54.533, -18.395, 0.29 ) }
    dend_50 { pt3dadd( 32.455, 55.5701, -19.1127, 0.29 ) }
    dend_50 { pt3dadd( 32.4356, 56.3446, -19.6081, 0.81 ) }
    dend_50 { pt3dadd( 32.4197, 57.0164, -20.0073, 0.81 ) }
    dend_50 { pt3dadd( 32.4248, 58.0414, -20.564, 0.52 ) }
    dend_50 { pt3dadd( 32.4561, 59.4192, -21.2226, 0.52 ) }
    dend_50 { pt3dadd( 32.4523, 61.0131, -22.0418, 0.44 ) }
    dend_50 { pt3dadd( 32.4317, 61.4447, -22.2739, 0.88 ) }
    dend_50 { pt3dadd( 32.3946, 62.1566, -22.686, 0.88 ) }
    dend_50 { pt3dadd( 32.3899, 63.1496, -23.2917, 0.37 ) }
    dend_50 { pt3dadd( 32.4444, 63.8905, -23.8366, 0.22 ) }
    dend_50 { pt3dadd( 32.5434, 64.5983, -24.4046, 0.22 ) }
    dend_50 { pt3dadd( 32.6863, 65.3015, -25.0056, 0.22 ) }
    dend_50 { pt3dadd( 32.9234, 66.1762, -25.8132, 0.22 ) }
    dend_50 { pt3dadd( 33.3155, 67.329, -26.8456, 0.22 ) }
    dend_50 { pt3dadd( 34.0201, 68.9689, -28.2571, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 34.2839, 69.4549, -28.6443, 0.81 ) }
    dend_50 { pt3dadd( 34.8676, 70.3585, -29.3294, 0.81 ) }
    dend_50 { pt3dadd( 35.4199, 71.1346, -29.8703, 0.44 ) }
    dend_50 { pt3dadd( 36.1788, 72.1684, -30.5228, 0.44 ) }
    dend_50 { pt3dadd( 36.4674, 72.5606, -30.7295, 0.96 ) }
    dend_50 { pt3dadd( 37.0005, 73.2784, -31.0352, 0.52 ) }
    dend_50 { pt3dadd( 37.6784, 74.1472, -31.4161, 0.37 ) }
    dend_50 { pt3dadd( 38.2783, 74.9167, -31.7462, 0.66 ) }
    dend_50 { pt3dadd( 38.7518, 75.5434, -32.0481, 0.66 ) }
    dend_50 { pt3dadd( 39.2198, 76.196, -32.3927, 0.29 ) }
    dend_50 { pt3dadd( 39.9089, 77.1537, -32.8975, 0.29 ) }
    dend_50 { pt3dadd( 40.587, 78.0778, -33.3789, 0.59 ) }
    dend_50 { pt3dadd( 41.0619, 78.6886, -33.6973, 0.37 ) }
    dend_50 { pt3dadd( 41.6482, 79.3875, -34.0911, 0.66 ) }
    dend_50 { pt3dadd( 42.1382, 79.9473, -34.4194, 0.66 ) }
    dend_50 { pt3dadd( 43.0029, 80.9267, -34.9934, 0.29 ) }
    dend_50 { pt3dadd( 43.6454, 81.6789, -35.4093, 0.29 ) }
    dend_50 { pt3dadd( 44.055, 82.1607, -35.677, 0.29 ) }
    dend_50 { pt3dadd( 44.4357, 82.5625, -35.9324, 0.66 ) }
    dend_50 { pt3dadd( 44.7174, 82.8407, -36.124, 0.66 ) }
    dend_50 { pt3dadd( 45.0628, 83.2054, -36.4219, 0.66 ) }
    dend_50 { pt3dadd( 45.6048, 83.8317, -36.9896, 0.37 ) }
    dend_50 { pt3dadd( 46.1846, 84.5387, -37.7242, 0.37 ) }
    dend_50 { pt3dadd( 46.8386, 85.3443, -38.7086, 0.96 ) }
    dend_50 { pt3dadd( 47.1967, 85.7479, -39.2792, 0.96 ) }
    dend_50 { pt3dadd( 48.1182, 86.6861, -40.7789, 0.29 ) }
    dend_50 { pt3dadd( 48.7177, 87.2571, -41.7911, 0.29 ) }
    dend_50 { pt3dadd( 49.2812, 87.7761, -42.702, 0.29 ) }
    dend_50 { pt3dadd( 50.1402, 88.4927, -43.9019, 0.29 ) }
    dend_50 { pt3dadd( 50.6351, 88.8575, -44.4877, 0.74 ) }
    dend_50 { pt3dadd( 51.0983, 89.1759, -44.9724, 0.74 ) }
    dend_50 { pt3dadd( 52.3994, 90.048, -46.0666, 0.29 ) }
    dend_50 { pt3dadd( 54.0244, 91.2051, -47.2485, 0.29 ) }
    dend_50 { pt3dadd( 55.7734, 92.5131, -48.3057, 0.29 ) }
    dend_50 { pt3dadd( 56.615, 93.1913, -48.74, 0.29 ) }
    dend_50 { pt3dadd( 57.3734, 93.8442, -49.0997, 0.29 ) }
    dend_50 { pt3dadd( 58.6365, 94.9718, -49.593, 0.66 ) }
    dend_50 { pt3dadd( 59.2613, 95.5034, -49.8256, 0.66 ) }
    dend_50 { pt3dadd( 60.0312, 96.0762, -50.1531, 0.37 ) }
    dend_50 { pt3dadd( 60.8032, 96.6028, -50.5897, 1.03 ) }
    dend_50 { pt3dadd( 61.5088, 97.0148, -51.0514, 1.03 ) }
    dend_50 { pt3dadd( 62.5855, 97.5458, -51.8725, 0.66 ) }
    dend_50 { pt3dadd( 64.6596, 98.4436, -53.7239, 0.22 ) }
    dend_50 { pt3dadd( 66.3746, 99.1405, -55.3767, 0.52 ) }
    dend_50 { pt3dadd( 67.8474, 99.7397, -56.8981, 0.29 ) }
    dend_50 { pt3dadd( 68.8049, 100.141, -57.9653, 0.29 ) }
    dend_50 { pt3dadd( 69.6635, 100.568, -59.0132, 0.66 ) }
    dend_50 { pt3dadd( 70.0245, 100.81, -59.4843, 0.66 ) }
    dend_50 { pt3dadd( 70.8031, 101.494, -60.297, 0.22 ) }
    dend_50 { pt3dadd( 71.28, 101.989, -60.738, 0.52 ) }
    dend_50 { pt3dadd( 71.6907, 102.449, -61.0634, 0.52 ) }
    dend_50 { pt3dadd( 73.5397, 104.616, -62.2996, 0.22 ) }
    dend_50 { pt3dadd( 74.9563, 106.277, -63.1242, 0.22 ) }
    dend_50 { pt3dadd( 77.0929, 108.768, -64.2534, 0.22 ) }
    dend_50 { pt3dadd( 78.2158, 110.081, -64.7985, 0.52 ) }
    dend_50 { pt3dadd( 78.8513, 110.816, -65.0688, 0.22 ) }
    dend_50 { pt3dadd( 79.7124, 111.794, -65.3318, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 7.25128, 29.0049, 10.9107, 0.66 ) }
    dend_27 { pt3dadd( 6.80205, 30.741, 11.2409, 0.66 ) }
    dend_27 { pt3dadd( 6.74192, 31.2935, 11.3214, 0.74 ) }
    dend_27 { pt3dadd( 6.7349, 32.0339, 11.4374, 0.74 ) }
    dend_27 { pt3dadd( 6.70294, 32.7486, 11.4521, 1.03 ) }
    dend_27 { pt3dadd( 6.66768, 33.4279, 11.4325, 1.03 ) }
    dend_27 { pt3dadd( 6.616, 34.2252, 11.3906, 0.74 ) }
    dend_27 { pt3dadd( 6.65348, 35.1723, 11.3525, 1.11 ) }
    dend_27 { pt3dadd( 6.70126, 36.0151, 11.263, 1.47 ) }
    dend_27 { pt3dadd( 6.76501, 37.7318, 10.9146, 1.62 ) }
    dend_27 { pt3dadd( 6.75364, 38.2564, 10.7606, 1.62 ) }
    dend_27 { pt3dadd( 6.718, 38.5798, 10.6463, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.6397, 16.2936, -5.63199, 0.29 ) }
    dend_25 { pt3dadd( -19.7432, 16.6528, -4.57386, 0.29 ) }
    dend_25 { pt3dadd( -20.6093, 16.9354, -3.87637, 0.88 ) }
    dend_25 { pt3dadd( -21.5265, 17.2102, -3.19766, 1.11 ) }
    dend_25 { pt3dadd( -24.656, 18.1018, -1.02671, 1.03 ) }
    dend_25 { pt3dadd( -25.634, 18.3523, -0.378716, 0.59 ) }
    dend_25 { pt3dadd( -26.4226, 18.536, 0.161835, 0.29 ) }
    dend_25 { pt3dadd( -27.4781, 18.7678, 0.967549, 0.29 ) }
    dend_25 { pt3dadd( -28.0703, 18.9073, 1.43122, 0.52 ) }
    dend_25 { pt3dadd( -28.4364, 19.0044, 1.70748, 0.74 ) }
    dend_25 { pt3dadd( -29.233, 19.2367, 2.16201, 0.74 ) }
    dend_25 { pt3dadd( -30.832, 19.7405, 3.11845, 0.37 ) }
    dend_25 { pt3dadd( -31.4765, 19.9655, 3.52742, 0.59 ) }
    dend_25 { pt3dadd( -31.9053, 20.141, 3.78272, 0.59 ) }
    dend_25 { pt3dadd( -32.7566, 20.5289, 4.21758, 0.29 ) }
    dend_25 { pt3dadd( -33.9044, 21.0723, 4.73669, 0.59 ) }
    dend_25 { pt3dadd( -34.4227, 21.3148, 4.90267, 0.37 ) }
    dend_25 { pt3dadd( -35.6229, 21.8215, 5.11916, 0.29 ) }
    dend_25 { pt3dadd( -36.6986, 22.2318, 5.24135, 1.25 ) }
    dend_25 { pt3dadd( -37.1386, 22.3822, 5.26243, 1.62 ) }
    dend_25 { pt3dadd( -37.6159, 22.5506, 5.24054, 1.62 ) }
    dend_25 { pt3dadd( -39.0212, 23.0802, 5.08596, 0.29 ) }
    dend_25 { pt3dadd( -39.9205, 23.4143, 4.9624, 0.29 ) }
    dend_25 { pt3dadd( -40.9252, 23.7886, 4.79774, 0.52 ) }
    dend_25 { pt3dadd( -41.4595, 23.9914, 4.70598, 0.59 ) }
    dend_25 { pt3dadd( -43.0707, 24.6166, 4.41441, 0.22 ) }
    dend_25 { pt3dadd( -43.854, 24.9346, 4.26145, 0.74 ) }
    dend_25 { pt3dadd( -44.5741, 25.2482, 4.12946, 0.74 ) }
    dend_25 { pt3dadd( -45.3372, 25.591, 3.98905, 0.22 ) }
    dend_25 { pt3dadd( -45.8261, 25.8103, 3.89911, 0.37 ) }
    dend_25 { pt3dadd( -46.2974, 26.0355, 3.81173, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.6397, 16.2936, -5.63199, 0.44 ) }
    dend_24 { pt3dadd( -20.0791, 15.7787, -6.33296, 0.44 ) }
    dend_24 { pt3dadd( -21.0705, 15.4006, -6.79942, 0.44 ) }
    dend_24 { pt3dadd( -22.0112, 15.0382, -7.22651, 0.96 ) }
    dend_24 { pt3dadd( -22.8968, 14.6732, -7.64549, 1.25 ) }
    dend_24 { pt3dadd( -24.1161, 14.1376, -8.2151, 0.74 ) }
    dend_24 { pt3dadd( -24.9511, 13.7591, -8.58304, 0.59 ) }
    dend_24 { pt3dadd( -25.7527, 13.3807, -8.94974, 0.59 ) }
    dend_24 { pt3dadd( -26.5062, 13.0212, -9.33186, 0.59 ) }
    dend_24 { pt3dadd( -27.6663, 12.4892, -9.97916, 0.44 ) }
    dend_24 { pt3dadd( -29.2027, 11.8257, -10.9018, 0.81 ) }
    dend_24 { pt3dadd( -31.0954, 11.058, -12.2114, 0.81 ) }
    dend_24 { pt3dadd( -31.967, 10.6936, -12.9699, 0.81 ) }
    dend_24 { pt3dadd( -32.789, 10.3249, -13.8719, 0.44 ) }
    dend_24 { pt3dadd( -33.3938, 10.063, -14.6255, 0.44 ) }
    dend_24 { pt3dadd( -34.1563, 9.76722, -15.5901, 0.44 ) }
    dend_24 { pt3dadd( -35.367, 9.36075, -17.136, 0.44 ) }
    dend_24 { pt3dadd( -36.8407, 8.96535, -18.9346, 0.88 ) }
    dend_24 { pt3dadd( -37.979, 8.7202, -20.137, 0.88 ) }
    dend_24 { pt3dadd( -39.1466, 8.5198, -21.1908, 0.52 ) }
    dend_24 { pt3dadd( -41.0782, 8.29343, -22.6577, 0.52 ) }
    dend_24 { pt3dadd( -41.8016, 8.24282, -23.1174, 0.52 ) }
    dend_24 { pt3dadd( -43.099, 8.19421, -23.6961, 0.88 ) }
    dend_24 { pt3dadd( -44.108, 8.16759, -24.0109, 0.88 ) }
    dend_24 { pt3dadd( -45.2021, 8.10842, -24.2796, 1.18 ) }
    dend_24 { pt3dadd( -46.2387, 7.99358, -24.5052, 1.18 ) }
    dend_24 { pt3dadd( -47.8192, 7.68793, -24.7507, 0.74 ) }
    dend_24 { pt3dadd( -49.4884, 7.24676, -24.8447, 0.52 ) }
    dend_24 { pt3dadd( -51.1509, 6.73057, -24.8153, 0.52 ) }
    dend_24 { pt3dadd( -52.4534, 6.3345, -24.7444, 0.88 ) }
    dend_24 { pt3dadd( -54.2277, 5.85639, -24.6196, 0.88 ) }
    dend_24 { pt3dadd( -56.1583, 5.39588, -24.4711, 0.88 ) }
    dend_24 { pt3dadd( -58.4407, 4.91952, -24.3002, 1.03 ) }
    dend_24 { pt3dadd( -59.6612, 4.65815, -24.2437, 0.96 ) }
    dend_24 { pt3dadd( -61.2656, 4.30899, -24.1903, 0.74 ) }
    dend_24 { pt3dadd( -63.4404, 3.86494, -24.1867, 0.52 ) }
    dend_24 { pt3dadd( -64.3229, 3.68209, -24.2424, 0.81 ) }
    dend_24 { pt3dadd( -65.3032, 3.45257, -24.3994, 0.81 ) }
    dend_24 { pt3dadd( -66.81, 2.99877, -24.7496, 0.52 ) }
    dend_24 { pt3dadd( -67.3017, 2.81078, -24.8673, 0.88 ) }
    dend_24 { pt3dadd( -67.9011, 2.52307, -25.0141, 1.18 ) }
    dend_24 { pt3dadd( -69.2768, 1.84183, -25.3402, 1.18 ) }
    dend_24 { pt3dadd( -70.983, 1.07705, -25.7218, 0.59 ) }
    dend_24 { pt3dadd( -71.7612, 0.767168, -25.8872, 0.74 ) }
    dend_24 { pt3dadd( -72.6787, 0.452695, -26.0744, 0.74 ) }
    dend_24 { pt3dadd( -73.9789, 0.0347343, -26.2709, 0.44 ) }
    dend_24 { pt3dadd( -74.911, -0.266055, -26.3755, 0.44 ) }
    dend_24 { pt3dadd( -75.8324, -0.585237, -26.4528, 0.74 ) }
    dend_24 { pt3dadd( -76.8589, -0.966615, -26.5776, 0.74 ) }
    dend_24 { pt3dadd( -77.8427, -1.32997, -26.6242, 0.74 ) }
    dend_24 { pt3dadd( -79.9956, -2.11269, -26.5993, 0.29 ) }
    dend_24 { pt3dadd( -81.3672, -2.64175, -26.5105, 0.37 ) }
    dend_24 { pt3dadd( -82.8103, -3.25247, -26.3686, 0.37 ) }
    dend_24 { pt3dadd( -84.5988, -4.04198, -26.155, 0.37 ) }
    dend_24 { pt3dadd( -87.7301, -5.47296, -25.8494, 0.74 ) }
    dend_24 { pt3dadd( -88.7034, -5.94743, -25.8092, 1.03 ) }
    dend_24 { pt3dadd( -90.7372, -7.01911, -25.7909, 0.59 ) }
    dend_24 { pt3dadd( -92.4531, -7.9641, -25.7507, 0.44 ) }
    dend_24 { pt3dadd( -93.5429, -8.57218, -25.7239, 0.88 ) }
    dend_24 { pt3dadd( -95.0557, -9.41671, -25.7145, 0.74 ) }
    dend_24 { pt3dadd( -96.493, -10.2149, -25.8837, 0.37 ) }
    dend_24 { pt3dadd( -98.1891, -11.016, -26.1078, 0.37 ) }
    dend_24 { pt3dadd( -99.0641, -11.3059, -26.2461, 0.81 ) }
    dend_24 { pt3dadd( -99.7935, -11.4355, -26.3572, 1.03 ) }
    dend_24 { pt3dadd( -100.492, -11.4694, -26.4369, 1.03 ) }
    dend_24 { pt3dadd( -101.414, -11.4181, -26.503, 0.66 ) }
    dend_24 { pt3dadd( -102.784, -11.2492, -26.631, 0.37 ) }
    dend_24 { pt3dadd( -104.023, -11.0573, -26.8362, 0.59 ) }
    dend_24 { pt3dadd( -105.126, -10.8633, -27.0475, 0.59 ) }
    dend_24 { pt3dadd( -106.191, -10.6696, -27.2323, 0.37 ) }
    dend_24 { pt3dadd( -107.389, -10.4761, -27.3826, 0.66 ) }
    dend_24 { pt3dadd( -108.326, -10.3525, -27.5476, 0.88 ) }
    dend_24 { pt3dadd( -108.746, -10.3019, -27.6632, 0.88 ) }
    dend_24 { pt3dadd( -110.699, -10.0221, -28.3958, 0.29 ) }
    dend_24 { pt3dadd( -111.866, -9.84719, -28.9669, 0.29 ) }
    dend_24 { pt3dadd( -113.354, -9.61644, -29.8958, 0.29 ) }
    dend_24 { pt3dadd( -115.569, -9.29766, -31.5471, 0.44 ) }
    dend_24 { pt3dadd( -117.147, -9.15342, -32.8792, 0.44 ) }
    dend_24 { pt3dadd( -117.766, -9.15661, -33.484, 0.44 ) }
    dend_24 { pt3dadd( -118.108, -9.20541, -33.8826, 0.59 ) }
    dend_24 { pt3dadd( -118.743, -9.33922, -34.6734, 0.59 ) }
    dend_24 { pt3dadd( -119.2, -9.44779, -35.2048, 0.59 ) }
    dend_24 { pt3dadd( -120.129, -9.69419, -36.0418, 0.37 ) }
    dend_24 { pt3dadd( -120.903, -9.94049, -36.7487, 0.37 ) }
    dend_24 { pt3dadd( -121.588, -10.169, -37.4106, 0.66 ) }
    dend_24 { pt3dadd( -122.223, -10.3997, -38.1243, 0.66 ) }
    dend_24 { pt3dadd( -122.815, -10.6496, -38.8568, 0.66 ) }
    dend_24 { pt3dadd( -123.877, -11.158, -40.2927, 0.44 ) }
    dend_24 { pt3dadd( -124.778, -11.6208, -41.5697, 0.66 ) }
    dend_24 { pt3dadd( -125.278, -11.9154, -42.377, 0.66 ) }
    dend_24 { pt3dadd( -126.495, -12.6737, -44.5089, 0.29 ) }
    dend_24 { pt3dadd( -127.203, -13.1093, -45.7561, 0.29 ) }
    dend_24 { pt3dadd( -127.844, -13.4977, -46.8594, 0.66 ) }
    dend_24 { pt3dadd( -128.334, -13.7626, -47.6164, 0.88 ) }
    dend_24 { pt3dadd( -130.151, -14.6082, -50.161, 0.44 ) }
    dend_24 { pt3dadd( -130.793, -14.862, -51.0355, 0.29 ) }
    dend_24 { pt3dadd( -131.822, -15.171, -52.2217, 0.29 ) }
    dend_24 { pt3dadd( -132.65, -15.394, -53.087, 0.66 ) }
    dend_24 { pt3dadd( -133.438, -15.6303, -53.8755, 0.66 ) }
    dend_24 { pt3dadd( -134.048, -15.8495, -54.3961, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -135.338, -16.4303, -55.5535, 0.37 ) }
    dend_24 { pt3dadd( -136.595, -17.0653, -56.9226, 0.29 ) }
    dend_24 { pt3dadd( -137.071, -17.2985, -57.5191, 0.29 ) }
    dend_24 { pt3dadd( -138.258, -17.82, -59.2363, 0.29 ) }
    dend_24 { pt3dadd( -139.341, -18.2176, -60.9585, 1.25 ) }
    dend_24 { pt3dadd( -141.628, -18.7723, -64.7776, 0.29 ) }
    dend_24 { pt3dadd( -142.314, -18.8614, -66.0002, 0.29 ) }
    dend_24 { pt3dadd( -142.699, -18.8648, -66.7258, 0.59 ) }
    dend_24 { pt3dadd( -143.499, -18.7942, -68.1629, 0.44 ) }
    dend_24 { pt3dadd( -143.973, -18.7164, -68.9194, 0.22 ) }
    dend_24 { pt3dadd( -144.544, -18.5982, -69.7127, 0.81 ) }
    dend_24 { pt3dadd( -146.254, -18.2742, -71.3048, 0.44 ) }
    dend_24 { pt3dadd( -147.235, -18.1358, -72.0417, 0.59 ) }
    dend_24 { pt3dadd( -147.824, -18.0758, -72.4135, 0.59 ) }
    dend_24 { pt3dadd( -149.37, -17.9549, -73.1049, 0.29 ) }
    dend_24 { pt3dadd( -150.763, -17.8521, -73.5447, 0.59 ) }
    dend_24 { pt3dadd( -151.629, -17.7863, -73.6622, 0.59 ) }
    dend_24 { pt3dadd( -153.297, -17.6439, -73.6493, 0.29 ) }
    dend_24 { pt3dadd( -154.624, -17.5251, -73.5331, 0.29 ) }
    dend_24 { pt3dadd( -156.951, -17.2741, -73.1357, 0.74 ) }
    dend_24 { pt3dadd( -158.042, -17.1337, -72.8614, 0.74 ) }
    dend_24 { pt3dadd( -159.922, -16.8316, -72.3054, 0.37 ) }
    dend_24 { pt3dadd( -161.298, -16.5219, -71.8572, 0.37 ) }
    dend_24 { pt3dadd( -162.452, -16.1492, -71.443, 0.44 ) }
    dend_24 { pt3dadd( -163.713, -15.5924, -71.0075, 0.74 ) }
    dend_24 { pt3dadd( -164.473, -15.1521, -70.7957, 0.74 ) }
    dend_24 { pt3dadd( -165.318, -14.5593, -70.6045, 0.37 ) }
    dend_24 { pt3dadd( -166.083, -13.8912, -70.4818, 0.59 ) }
    dend_24 { pt3dadd( -166.937, -13.0029, -70.349, 0.37 ) }
    dend_24 { pt3dadd( -167.586, -12.2581, -70.278, 0.29 ) }
    dend_24 { pt3dadd( -168.036, -11.7106, -70.2456, 0.52 ) }
    dend_24 { pt3dadd( -168.634, -11.0068, -70.216, 0.74 ) }
    dend_24 { pt3dadd( -169.564, -10.0128, -70.1871, 0.29 ) }
    dend_24 { pt3dadd( -170.068, -9.53314, -70.183, 0.74 ) }
    dend_24 { pt3dadd( -170.791, -8.9161, -70.201, 0.74 ) }
    dend_24 { pt3dadd( -171.795, -8.11803, -70.2766, 0.29 ) }
    dend_24 { pt3dadd( -172.831, -7.35067, -70.4076, 0.29 ) }
    dend_24 { pt3dadd( -173.875, -6.65542, -70.612, 0.29 ) }
    dend_24 { pt3dadd( -175.036, -5.95292, -70.9061, 0.29 ) }
    dend_24 { pt3dadd( -176.179, -5.29165, -71.2793, 0.29 ) }
    dend_24 { pt3dadd( -177.377, -4.63401, -71.7601, 0.96 ) }
    dend_24 { pt3dadd( -177.953, -4.34761, -72.0268, 0.96 ) }
    dend_24 { pt3dadd( -179.666, -3.56327, -72.8889, 0.29 ) }
    dend_24 { pt3dadd( -180.153, -3.36097, -73.1497, 0.66 ) }
    dend_24 { pt3dadd( -181.163, -2.99381, -73.6912, 0.66 ) }
    dend_24 { pt3dadd( -182.302, -2.63461, -74.2649, 0.29 ) }
    dend_24 { pt3dadd( -183.18, -2.41443, -74.6395, 0.29 ) }
    dend_24 { pt3dadd( -183.736, -2.29039, -74.8631, 0.66 ) }
    dend_24 { pt3dadd( -184.35, -2.16237, -75.0927, 0.88 ) }
    dend_24 { pt3dadd( -185.342, -1.96141, -75.4459, 0.66 ) }
    dend_24 { pt3dadd( -186.07, -1.78079, -75.7029, 0.15 ) }
    dend_24 { pt3dadd( -187.098, -1.45717, -76.0755, 0.15 ) }
    dend_24 { pt3dadd( -188.067, -1.08916, -76.4594, 0.15 ) }
    dend_24 { pt3dadd( -188.847, -0.743177, -76.7872, 0.81 ) }
    dend_24 { pt3dadd( -189.485, -0.41632, -77.1097, 1.03 ) }
    dend_24 { pt3dadd( -191.148, 0.467137, -78.0496, 0.29 ) }
    dend_24 { pt3dadd( -192.011, 0.930326, -78.5607, 0.81 ) }
    dend_24 { pt3dadd( -192.661, 1.29938, -78.981, 0.81 ) }
    dend_24 { pt3dadd( -193.885, 1.97293, -79.785, 0.29 ) }
    dend_24 { pt3dadd( -195.119, 2.60016, -80.6995, 0.29 ) }
    dend_24 { pt3dadd( -196.016, 2.98553, -81.405, 0.29 ) }
    dend_24 { pt3dadd( -197.1, 3.34429, -82.3251, 0.29 ) }
    dend_24 { pt3dadd( -197.822, 3.51315, -83.1135, 1.18 ) }
    dend_24 { pt3dadd( -198.425, 3.56555, -83.9614, 1.18 ) }
    dend_24 { pt3dadd( -199.235, 3.45718, -85.5085, 0.52 ) }
    dend_24 { pt3dadd( -199.656, 3.31365, -86.4831, 0.88 ) }
    dend_24 { pt3dadd( -199.998, 3.12164, -87.498, 0.88 ) }
    dend_24 { pt3dadd( -200.792, 2.45701, -90.5167, 0.44 ) }
    dend_24 { pt3dadd( -201.147, 2.13982, -91.9411, 0.44 ) }
    dend_24 { pt3dadd( -201.419, 1.91141, -93.1507, 0.74 ) }
    dend_24 { pt3dadd( -201.594, 1.81142, -93.9028, 0.74 ) }
    dend_24 { pt3dadd( -202.076, 1.65829, -95.7974, 0.44 ) }
    dend_24 { pt3dadd( -202.488, 1.61419, -97.0503, 0.44 ) }
    dend_24 { pt3dadd( -202.923, 1.6409, -97.9752, 0.88 ) }
    dend_24 { pt3dadd( -203.399, 1.69978, -98.8247, 0.88 ) }
    dend_24 { pt3dadd( -203.929, 1.77217, -99.6727, 0.88 ) }
    dend_24 { pt3dadd( -204.98, 1.86027, -101.375, 0.52 ) }
    dend_24 { pt3dadd( -205.888, 1.85712, -102.832, 0.52 ) }
    dend_24 { pt3dadd( -206.446, 1.78715, -103.71, 0.59 ) }
    dend_24 { pt3dadd( -207.034, 1.63073, -104.633, 0.44 ) }
    dend_24 { pt3dadd( -207.673, 1.40899, -105.582, 0.44 ) }
    dend_24 { pt3dadd( -208.5, 1.13829, -106.725, 0.44 ) }
    dend_24 { pt3dadd( -209.342, 0.919249, -107.802, 0.88 ) }
    dend_24 { pt3dadd( -209.891, 0.789467, -108.504, 0.88 ) }
    dend_24 { pt3dadd( -210.605, 0.628586, -109.433, 0.37 ) }
    dend_24 { pt3dadd( -211.345, 0.5134, -110.415, 0.37 ) }
    dend_24 { pt3dadd( -212.422, 0.417731, -111.781, 0.59 ) }
    dend_24 { pt3dadd( -213.811, 0.400315, -113.413, 0.37 ) }
    dend_24 { pt3dadd( -214.303, 0.40565, -113.972, 0.74 ) }
    dend_24 { pt3dadd( -215.17, 0.45576, -114.936, 0.74 ) }
    dend_24 { pt3dadd( -216.629, 0.621768, -116.452, 0.37 ) }
    dend_24 { pt3dadd( -217.2, 0.690941, -116.989, 0.59 ) }
    dend_24 { pt3dadd( -218.574, 0.874737, -118.133, 0.29 ) }
    dend_24 { pt3dadd( -219.627, 1.03471, -118.873, 0.29 ) }
    dend_24 { pt3dadd( -220.611, 1.13975, -119.493, 0.29 ) }
    dend_24 { pt3dadd( -222.037, 1.23095, -120.325, 0.59 ) }
    dend_24 { pt3dadd( -222.52, 1.24059, -120.582, 1.11 ) }
    dend_24 { pt3dadd( -222.901, 1.2416, -120.783, 1.4 ) }
    dend_24 { pt3dadd( -224.082, 1.16911, -121.384, 0.81 ) }
    dend_24 { pt3dadd( -225.313, 1.03503, -122.022, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -226.437, 0.809435, -122.623, 0.22 ) }
    dend_24 { pt3dadd( -227.276, 0.575178, -123.072, 0.22 ) }
    dend_24 { pt3dadd( -228.642, 0.0926103, -123.863, 0.22 ) }
    dend_24 { pt3dadd( -230.131, -0.561474, -124.794, 0.22 ) }
    dend_24 { pt3dadd( -230.423, -0.717193, -124.991, 0.44 ) }
    dend_24 { pt3dadd( -230.934, -1.04231, -125.365, 0.44 ) }
    dend_24 { pt3dadd( -231.442, -1.44865, -125.813, 0.22 ) }
    dend_24 { pt3dadd( -232.247, -2.21579, -126.708, 0.44 ) }
    dend_24 { pt3dadd( -232.581, -2.5626, -127.198, 0.44 ) }
    dend_24 { pt3dadd( -233.17, -3.12534, -128.127, 0.22 ) }
    dend_24 { pt3dadd( -233.774, -3.60676, -129.001, 0.22 ) }
    dend_24 { pt3dadd( -234.655, -4.16983, -130.149, 0.59 ) }
    dend_24 { pt3dadd( -234.917, -4.30275, -130.466, 0.59 ) }
    dend_24 { pt3dadd( -236.565, -4.88508, -132.564, 0.29 ) }
    dend_24 { pt3dadd( -237.15, -5.06666, -133.306, 0.29 ) }
    dend_24 { pt3dadd( -238.035, -5.29732, -134.417, 0.29 ) }
    dend_24 { pt3dadd( -238.653, -5.43229, -135.145, 0.81 ) }
    dend_24 { pt3dadd( -239.222, -5.53267, -135.75, 0.81 ) }
    dend_24 { pt3dadd( -241.458, -5.76965, -138.195, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 205.897, 30.8825, 20.5926, 0.29 ) }
    dend_20 { pt3dadd( 207.118, 30.045, 20.4457, 0.29 ) }
    dend_20 { pt3dadd( 207.903, 29.6379, 20.2421, 0.29 ) }
    dend_20 { pt3dadd( 209.085, 29.2008, 19.684, 0.52 ) }
    dend_20 { pt3dadd( 209.388, 29.0517, 19.5846, 0.52 ) }
    dend_20 { pt3dadd( 209.751, 28.8474, 19.4965, 0.37 ) }
    dend_20 { pt3dadd( 210.43, 28.465, 19.3314, 0.52 ) }
    dend_20 { pt3dadd( 211.935, 27.7395, 18.9614, 0.37 ) }
    dend_20 { pt3dadd( 213.394, 27.0614, 18.5807, 0.88 ) }
    dend_20 { pt3dadd( 216.291, 25.6021, 17.784, 0.29 ) }
    dend_20 { pt3dadd( 216.666, 25.3717, 17.7065, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 205.897, 30.8825, 20.5926, 0.29 ) }
    dend_19 { pt3dadd( 207.013, 32.0288, 20.6786, 0.29 ) }
    dend_19 { pt3dadd( 207.505, 32.4424, 20.6999, 0.44 ) }
    dend_19 { pt3dadd( 208.219, 33.0028, 20.7435, 0.44 ) }
    dend_19 { pt3dadd( 208.971, 33.5768, 20.8248, 0.74 ) }
    dend_19 { pt3dadd( 209.989, 34.3499, 20.9737, 0.74 ) }
    dend_19 { pt3dadd( 210.989, 35.114, 21.1527, 0.44 ) }
    dend_19 { pt3dadd( 212.103, 35.907, 21.3758, 0.66 ) }
    dend_19 { pt3dadd( 212.676, 36.3255, 21.5172, 0.66 ) }
    dend_19 { pt3dadd( 213.595, 37.1257, 21.8084, 0.74 ) }
    dend_19 { pt3dadd( 213.994, 37.5434, 21.977, 0.29 ) }
    dend_19 { pt3dadd( 214.415, 38.0776, 22.2117, 0.37 ) }
    dend_19 { pt3dadd( 214.908, 38.7162, 22.5648, 0.81 ) }
    dend_19 { pt3dadd( 215.177, 39.0512, 22.7892, 1.03 ) }
    dend_19 { pt3dadd( 216.555, 40.5863, 23.989, 0.29 ) }
    dend_19 { pt3dadd( 217.331, 41.3842, 24.7006, 0.29 ) }
    dend_19 { pt3dadd( 218.467, 42.4849, 25.7969, 0.29 ) }
    dend_19 { pt3dadd( 219.455, 43.4328, 26.7595, 0.29 ) }
    dend_19 { pt3dadd( 220.277, 44.2389, 27.557, 1.03 ) }
    dend_19 { pt3dadd( 220.738, 44.7248, 27.9992, 1.03 ) }
    dend_19 { pt3dadd( 221.216, 45.2443, 28.4407, 1.03 ) }
    dend_19 { pt3dadd( 221.611, 45.7409, 28.7296, 0.66 ) }
    dend_19 { pt3dadd( 222.4, 46.9187, 29.1721, 0.52 ) }
    dend_19 { pt3dadd( 222.844, 47.8202, 29.4241, 0.52 ) }
    dend_19 { pt3dadd( 223.219, 48.8006, 29.6862, 0.37 ) }
    dend_19 { pt3dadd( 223.562, 49.7768, 29.9807, 0.37 ) }
    dend_19 { pt3dadd( 223.844, 50.492, 30.2143, 0.29 ) }
    dend_19 { pt3dadd( 224.359, 51.6413, 30.5988, 0.29 ) }
    dend_19 { pt3dadd( 225.078, 53.0738, 31.1415, 0.29 ) }
    dend_19 { pt3dadd( 225.355, 53.6558, 31.3532, 0.29 ) }
    dend_19 { pt3dadd( 225.673, 54.4663, 31.6304, 0.29 ) }
    dend_19 { pt3dadd( 226.047, 55.566, 31.969, 0.81 ) }
    dend_19 { pt3dadd( 226.459, 56.7044, 32.2874, 1.03 ) }
    dend_19 { pt3dadd( 226.791, 57.3635, 32.4532, 1.03 ) }
    dend_19 { pt3dadd( 227.59, 58.5215, 32.755, 0.29 ) }
    dend_19 { pt3dadd( 228.249, 59.3438, 33.0523, 0.74 ) }
    dend_19 { pt3dadd( 228.621, 59.7704, 33.2674, 1.11 ) }
    dend_19 { pt3dadd( 229.066, 60.2198, 33.5674, 1.11 ) }
    dend_19 { pt3dadd( 230.23, 61.1872, 34.3591, 0.29 ) }
    dend_19 { pt3dadd( 231.127, 61.792, 34.9082, 0.29 ) }
    dend_19 { pt3dadd( 232.181, 62.3398, 35.4083, 0.29 ) }
    dend_19 { pt3dadd( 233.032, 62.7267, 35.7219, 0.29 ) }
    dend_19 { pt3dadd( 233.765, 63.0514, 35.9323, 0.74 ) }
    dend_19 { pt3dadd( 234.621, 63.4613, 36.1062, 0.74 ) }
    dend_19 { pt3dadd( 235.775, 64.045, 36.2405, 0.37 ) }
    dend_19 { pt3dadd( 237.259, 64.8108, 36.2992, 0.96 ) }
    dend_19 { pt3dadd( 237.859, 65.155, 36.2746, 0.96 ) }
    dend_19 { pt3dadd( 238.92, 65.8117, 36.1744, 0.29 ) }
    dend_19 { pt3dadd( 240.027, 66.623, 36.014, 0.29 ) }
    dend_19 { pt3dadd( 240.441, 66.9605, 35.9468, 0.59 ) }
    dend_19 { pt3dadd( 241.066, 67.5413, 35.8449, 0.59 ) }
    dend_19 { pt3dadd( 242.172, 68.715, 35.7161, 0.29 ) }
    dend_19 { pt3dadd( 242.836, 69.4556, 35.6372, 0.29 ) }
    dend_19 { pt3dadd( 244.034, 70.8494, 35.4474, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.173819, -22.1763, 8.73524, 1.03 ) }
    dend_4 { pt3dadd( 1.15257, -25.0212, 9.77671, 1.03 ) }
    dend_4 { pt3dadd( 2.13189, -26.7952, 10.4317, 1.03 ) }
    dend_4 { pt3dadd( 2.77897, -27.8366, 10.8186, 0.74 ) }
    dend_4 { pt3dadd( 3.68747, -29.1522, 11.2978, 0.74 ) }
    dend_4 { pt3dadd( 4.36693, -30.097, 11.6253, 1.03 ) }
    dend_4 { pt3dadd( 4.94319, -30.9091, 11.885, 1.25 ) }
    dend_4 { pt3dadd( 5.42067, -31.5657, 12.1319, 1.33 ) }
    dend_4 { pt3dadd( 5.66811, -31.9513, 12.2188, 1.62 ) }
    dend_4 { pt3dadd( 6.13867, -32.8241, 12.3595, 1.62 ) }
    dend_4 { pt3dadd( 6.54117, -33.744, 12.4544, 1.62 ) }
    dend_4 { pt3dadd( 7.01521, -35.1161, 12.5562, 1.47 ) }
    dend_4 { pt3dadd( 7.37626, -36.4694, 12.6742, 0.59 ) }
    dend_4 { pt3dadd( 7.64441, -37.7924, 12.7817, 0.59 ) }
    dend_4 { pt3dadd( 7.83484, -39.0059, 12.8717, 0.88 ) }
    dend_4 { pt3dadd( 7.95785, -39.8953, 12.9324, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 8.08682, -40.6806, 12.9785, 1.55 ) }
    dend_4 { pt3dadd( 8.32883, -41.9593, 13.0398, 1.55 ) }
    dend_4 { pt3dadd( 8.60114, -43.2655, 13.0895, 0.96 ) }
    dend_4 { pt3dadd( 8.86159, -44.4919, 13.1307, 0.74 ) }
    dend_4 { pt3dadd( 8.9927, -45.1706, 13.1495, 0.74 ) }
    dend_4 { pt3dadd( 9.23567, -46.4269, 13.176, 0.74 ) }
    dend_4 { pt3dadd( 9.50406, -47.8066, 13.1903, 1.33 ) }
    dend_4 { pt3dadd( 9.88267, -49.6169, 13.1783, 1.18 ) }
    dend_4 { pt3dadd( 10.2112, -51.1441, 13.2056, 1.18 ) }
    dend_4 { pt3dadd( 10.3791, -52.0325, 13.2266, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.173819, -22.1763, 8.73524, 1.03 ) }
    dend_3 { pt3dadd( 0.106152, -23.6526, 11.9049, 1.03 ) }
    dend_3 { pt3dadd( 0.277428, -24.7001, 13.9001, 1.03 ) }
    dend_3 { pt3dadd( 0.484643, -26.5749, 17.2496, 0.81 ) }
    dend_3 { pt3dadd( 0.623793, -28.376, 20.3939, 0.66 ) }
    dend_3 { pt3dadd( 0.660612, -29.002, 21.4444, 0.66 ) }
    dend_3 { pt3dadd( 0.690989, -29.6241, 22.431, 0.66 ) }
    dend_3 { pt3dadd( 0.782455, -30.5322, 23.6511, 0.52 ) }
    dend_3 { pt3dadd( 0.926584, -31.5964, 24.8354, 0.52 ) }
    dend_3 { pt3dadd( 1.10936, -32.9996, 26.043, 0.81 ) }
    dend_3 { pt3dadd( 1.24011, -34.0208, 26.7233, 0.66 ) }
    dend_3 { pt3dadd( 1.33546, -34.9126, 27.259, 0.96 ) }
    dend_3 { pt3dadd( 1.53513, -36.9089, 28.3928, 0.52 ) }
    dend_3 { pt3dadd( 1.71764, -38.1262, 29.0227, 1.11 ) }
    dend_3 { pt3dadd( 1.91662, -39.2268, 29.4662, 1.03 ) }
    dend_3 { pt3dadd( 2.0548, -40.068, 29.7147, 0.88 ) }
    dend_3 { pt3dadd( 2.14361, -40.7694, 29.9002, 0.88 ) }
    dend_3 { pt3dadd( 2.17057, -41.9139, 30.1909, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.718, 38.5798, 10.6463, 0.74 ) }
    dend_49 { pt3dadd( 8.35763, 41.2555, 12.564, 0.74 ) }
    dend_49 { pt3dadd( 9.1783, 42.8135, 13.5828, 0.59 ) }
    dend_49 { pt3dadd( 9.64645, 43.86, 14.2359, 0.59 ) }
    dend_49 { pt3dadd( 10.2897, 45.6346, 15.2585, 0.59 ) }
    dend_49 { pt3dadd( 10.6606, 46.9258, 15.9292, 0.59 ) }
    dend_49 { pt3dadd( 10.9576, 48.2448, 16.5282, 0.59 ) }
    dend_49 { pt3dadd( 11.2732, 50.6827, 17.2581, 0.66 ) }
    dend_49 { pt3dadd( 11.3566, 51.7725, 17.5021, 0.66 ) }
    dend_49 { pt3dadd( 11.3347, 53.3808, 17.8123, 1.03 ) }
    dend_49 { pt3dadd( 11.2042, 54.8879, 18.0375, 1.03 ) }
    dend_49 { pt3dadd( 10.9505, 56.6992, 18.2362, 0.44 ) }
    dend_49 { pt3dadd( 10.7716, 57.5165, 18.238, 0.59 ) }
    dend_49 { pt3dadd( 10.3425, 58.7722, 18.0148, 0.59 ) }
    dend_49 { pt3dadd( 9.91026, 59.8059, 17.7068, 1.11 ) }
    dend_49 { pt3dadd( 9.69297, 60.2715, 17.5122, 1.33 ) }
    dend_49 { pt3dadd( 9.36904, 60.9745, 17.1709, 1.33 ) }
    dend_49 { pt3dadd( 8.72123, 62.4723, 16.3681, 0.81 ) }
    dend_49 { pt3dadd( 8.36348, 63.7036, 15.7019, 0.44 ) }
    dend_49 { pt3dadd( 8.31584, 64.7222, 15.0768, 0.44 ) }
    dend_49 { pt3dadd( 8.46677, 65.753, 14.2602, 0.74 ) }
    dend_49 { pt3dadd( 8.72976, 66.7455, 13.4015, 0.66 ) }
    dend_49 { pt3dadd( 8.89413, 67.2305, 12.9659, 0.66 ) }
    dend_49 { pt3dadd( 9.22729, 68.3476, 12.0774, 0.52 ) }
    dend_49 { pt3dadd( 9.48226, 69.6983, 11.0823, 0.37 ) }
    dend_49 { pt3dadd( 9.58117, 71.439, 9.88719, 0.37 ) }
    dend_49 { pt3dadd( 9.57987, 72.2076, 9.46168, 0.37 ) }
    dend_49 { pt3dadd( 9.5599, 73.51, 8.89711, 0.37 ) }
    dend_49 { pt3dadd( 9.59803, 75.6488, 8.17076, 0.37 ) }
    dend_49 { pt3dadd( 9.74361, 76.9793, 7.94119, 0.88 ) }
    dend_49 { pt3dadd( 9.97878, 77.8556, 7.96454, 0.88 ) }
    dend_49 { pt3dadd( 10.7026, 79.663, 8.2911, 0.74 ) }
    dend_49 { pt3dadd( 11.2733, 80.8282, 8.62439, 0.59 ) }
    dend_49 { pt3dadd( 12.0604, 82.1716, 9.20435, 0.59 ) }
    dend_49 { pt3dadd( 13.5328, 84.3591, 10.4127, 0.81 ) }
    dend_49 { pt3dadd( 14.6666, 85.9792, 11.4528, 0.59 ) }
    dend_49 { pt3dadd( 15.1772, 86.7523, 12.0004, 0.59 ) }
    dend_49 { pt3dadd( 15.5972, 87.4859, 12.5537, 1.11 ) }
    dend_49 { pt3dadd( 16.1437, 88.7054, 13.5104, 0.88 ) }
    dend_49 { pt3dadd( 16.4472, 89.7667, 14.3168, 0.88 ) }
    dend_49 { pt3dadd( 16.5961, 90.9795, 15.0217, 0.74 ) }
    dend_49 { pt3dadd( 16.6676, 92.2187, 15.5795, 0.59 ) }
    dend_49 { pt3dadd( 16.7306, 93.1806, 15.916, 0.44 ) }
    dend_49 { pt3dadd( 16.7972, 94.1566, 16.1418, 0.81 ) }
    dend_49 { pt3dadd( 16.8576, 95.112, 16.2435, 1.03 ) }
    dend_49 { pt3dadd( 16.9282, 96.7782, 16.3229, 0.52 ) }
    dend_49 { pt3dadd( 16.9443, 97.6908, 16.3297, 0.52 ) }
    dend_49 { pt3dadd( 16.95, 98.6032, 16.3281, 0.96 ) }
    dend_49 { pt3dadd( 16.9371, 99.6487, 16.3424, 0.96 ) }
    dend_49 { pt3dadd( 16.8817, 100.721, 16.3797, 0.66 ) }
    dend_49 { pt3dadd( 16.7369, 102.239, 16.4625, 0.37 ) }
    dend_49 { pt3dadd( 16.6087, 103.19, 16.5272, 0.37 ) }
    dend_49 { pt3dadd( 16.5291, 103.831, 16.5611, 0.37 ) }
    dend_49 { pt3dadd( 16.4037, 104.953, 16.6122, 0.37 ) }
    dend_49 { pt3dadd( 16.3265, 105.857, 16.6413, 0.66 ) }
    dend_49 { pt3dadd( 16.2992, 106.825, 16.6424, 0.66 ) }
    dend_49 { pt3dadd( 16.3652, 107.754, 16.6064, 0.81 ) }
    dend_49 { pt3dadd( 16.4978, 108.759, 16.576, 0.52 ) }
    dend_49 { pt3dadd( 16.6299, 109.762, 16.5727, 0.37 ) }
    dend_49 { pt3dadd( 16.691, 110.599, 16.6068, 0.37 ) }
    dend_49 { pt3dadd( 16.6935, 111.286, 16.6601, 0.66 ) }
    dend_49 { pt3dadd( 16.6388, 112.3, 16.7596, 0.66 ) }
    dend_49 { pt3dadd( 16.5765, 113.48, 16.8568, 0.37 ) }
    dend_49 { pt3dadd( 16.5688, 114.216, 16.8869, 0.37 ) }
    dend_49 { pt3dadd( 16.674, 115.651, 16.8557, 0.96 ) }
    dend_49 { pt3dadd( 16.7653, 116.372, 16.817, 1.33 ) }
    dend_49 { pt3dadd( 16.8942, 117.337, 16.7401, 1.33 ) }
    dend_49 { pt3dadd( 17.1012, 118.721, 16.6427, 1.03 ) }
    dend_49 { pt3dadd( 17.3306, 119.986, 16.5541, 0.74 ) }
    dend_49 { pt3dadd( 17.5904, 121.184, 16.489, 0.44 ) }
    dend_49 { pt3dadd( 17.8003, 122.084, 16.4659, 0.44 ) }
    dend_49 { pt3dadd( 17.99, 122.95, 16.4431, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 18.2858, 124.526, 16.401, 0.66 ) }
    dend_49 { pt3dadd( 18.4054, 125.273, 16.4052, 0.96 ) }
    dend_49 { pt3dadd( 18.4484, 125.669, 16.4162, 0.96 ) }
    dend_49 { pt3dadd( 18.546, 127.145, 16.403, 0.52 ) }
    dend_49 { pt3dadd( 18.6027, 128.378, 16.3393, 0.52 ) }
    dend_49 { pt3dadd( 18.6605, 129.787, 16.2102, 0.52 ) }
    dend_49 { pt3dadd( 18.7165, 130.942, 16.0325, 0.52 ) }
    dend_49 { pt3dadd( 18.8568, 132.889, 15.7907, 0.74 ) }
    dend_49 { pt3dadd( 18.9589, 134.136, 15.7164, 0.52 ) }
    dend_49 { pt3dadd( 19.0433, 135.043, 15.7212, 0.52 ) }
    dend_49 { pt3dadd( 19.1552, 136.052, 15.7824, 0.52 ) }
    dend_49 { pt3dadd( 19.3007, 137.288, 15.8126, 0.81 ) }
    dend_49 { pt3dadd( 19.5123, 139.044, 15.7511, 0.81 ) }
    dend_49 { pt3dadd( 19.6645, 140.179, 15.6812, 0.59 ) }
    dend_49 { pt3dadd( 19.7579, 141.114, 15.5826, 0.37 ) }
    dend_49 { pt3dadd( 19.8605, 142.265, 15.4462, 0.37 ) }
    dend_49 { pt3dadd( 19.9849, 144.048, 15.2157, 0.37 ) }
    dend_49 { pt3dadd( 20.0357, 144.94, 15.0827, 0.52 ) }
    dend_49 { pt3dadd( 20.1364, 145.965, 14.8785, 0.52 ) }
    dend_49 { pt3dadd( 20.3826, 147.672, 14.544, 0.52 ) }
    dend_49 { pt3dadd( 20.6893, 149.488, 14.2772, 0.74 ) }
    dend_49 { pt3dadd( 20.9158, 150.657, 14.1706, 0.96 ) }
    dend_49 { pt3dadd( 21.184, 151.894, 14.1297, 0.37 ) }
    dend_49 { pt3dadd( 21.4916, 153.273, 14.1072, 0.29 ) }
    dend_49 { pt3dadd( 21.7036, 154.14, 14.0953, 0.29 ) }
    dend_49 { pt3dadd( 22.0161, 155.399, 14.0729, 0.81 ) }
    dend_49 { pt3dadd( 22.1203, 155.944, 14.0143, 0.81 ) }
    dend_49 { pt3dadd( 22.205, 156.543, 13.9576, 0.96 ) }
    dend_49 { pt3dadd( 22.2266, 157.023, 13.9342, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.718, 38.5798, 10.6463, 0.66 ) }
    dend_28 { pt3dadd( 5.04615, 39.7521, 9.40848, 0.66 ) }
    dend_28 { pt3dadd( 3.99669, 40.4183, 8.65033, 0.66 ) }
    dend_28 { pt3dadd( 3.4932, 40.7467, 8.25023, 0.66 ) }
    dend_28 { pt3dadd( 2.73561, 41.2565, 7.59901, 0.52 ) }
    dend_28 { pt3dadd( 1.60651, 42.0226, 6.62049, 0.81 ) }
    dend_28 { pt3dadd( 1.09743, 42.3978, 6.16029, 0.81 ) }
    dend_28 { pt3dadd( 0.423822, 42.9699, 5.46678, 0.59 ) }
    dend_28 { pt3dadd( -0.275886, 43.5853, 4.62801, 0.59 ) }
    dend_28 { pt3dadd( -0.828094, 44.0964, 3.89929, 0.44 ) }
    dend_28 { pt3dadd( -1.15796, 44.4393, 3.45013, 0.44 ) }
    dend_28 { pt3dadd( -1.70442, 45.1106, 2.65965, 0.96 ) }
    dend_28 { pt3dadd( -2.00684, 45.4955, 2.18387, 1.18 ) }
    dend_28 { pt3dadd( -2.75434, 46.4486, 0.942157, 0.88 ) }
    dend_28 { pt3dadd( -3.34849, 47.2034, -0.0836785, 0.37 ) }
    dend_28 { pt3dadd( -3.71342, 47.6972, -0.801659, 1.03 ) }
    dend_28 { pt3dadd( -4.04462, 48.1936, -1.5789, 1.03 ) }
    dend_28 { pt3dadd( -4.61273, 49.0215, -3.0317, 0.52 ) }
    dend_28 { pt3dadd( -4.8214, 49.3538, -3.61947, 0.52 ) }
    dend_28 { pt3dadd( -4.96835, 49.6087, -4.06624, 0.81 ) }
    dend_28 { pt3dadd( -5.16827, 49.9271, -4.62768, 0.81 ) }
    dend_28 { pt3dadd( -5.4369, 50.2653, -5.22998, 0.74 ) }
    dend_28 { pt3dadd( -6.20037, 51.0709, -6.49472, 1.03 ) }
    dend_28 { pt3dadd( -6.74565, 51.5374, -7.11971, 1.03 ) }
    dend_28 { pt3dadd( -7.66535, 52.1314, -7.86622, 0.59 ) }
    dend_28 { pt3dadd( -8.32984, 52.4985, -8.30139, 0.81 ) }
    dend_28 { pt3dadd( -9.13018, 52.8493, -8.74888, 0.81 ) }
    dend_28 { pt3dadd( -9.44263, 52.9662, -8.90093, 0.66 ) }
    dend_28 { pt3dadd( -9.99605, 53.1567, -9.14307, 0.66 ) }
    dend_28 { pt3dadd( -11.3974, 53.5844, -9.76046, 0.52 ) }
    dend_28 { pt3dadd( -12.3192, 53.853, -10.1749, 0.37 ) }
    dend_28 { pt3dadd( -13.9777, 54.3545, -11.0301, 0.29 ) }
    dend_28 { pt3dadd( -14.3496, 54.4658, -11.235, 0.29 ) }
    dend_28 { pt3dadd( -14.9522, 54.6387, -11.5679, 0.29 ) }
    dend_28 { pt3dadd( -15.5958, 54.8327, -11.9152, 0.29 ) }
    dend_28 { pt3dadd( -16.5888, 55.1644, -12.3685, 0.81 ) }
    dend_28 { pt3dadd( -17.4072, 55.4662, -12.691, 0.81 ) }
    dend_28 { pt3dadd( -18.6432, 56.0456, -13.1147, 0.59 ) }
    dend_28 { pt3dadd( -18.909, 56.1846, -13.201, 0.59 ) }
    dend_28 { pt3dadd( -19.5845, 56.5926, -13.379, 0.29 ) }
    dend_28 { pt3dadd( -20.3494, 56.9969, -13.7416, 0.52 ) }
    dend_28 { pt3dadd( -20.4956, 57.0617, -13.8337, 0.81 ) }
    dend_28 { pt3dadd( -20.9975, 57.247, -14.1841, 0.81 ) }
    dend_28 { pt3dadd( -21.6281, 57.439, -14.6595, 0.74 ) }
    dend_28 { pt3dadd( -21.939, 57.5065, -14.8955, 0.88 ) }
    dend_28 { pt3dadd( -25.8805, 58.0448, -17.8661, 0.88 ) }
    dend_28 { pt3dadd( -26.9797, 58.1201, -18.6728, 0.66 ) }
    dend_28 { pt3dadd( -27.6923, 58.1436, -19.164, 0.88 ) }
    dend_28 { pt3dadd( -28.7543, 58.1478, -19.8551, 0.96 ) }
    dend_28 { pt3dadd( -29.5571, 58.1539, -20.3241, 0.52 ) }
    dend_28 { pt3dadd( -30.144, 58.171, -20.6062, 0.74 ) }
    dend_28 { pt3dadd( -31.3191, 58.2829, -20.8302, 0.44 ) }
    dend_28 { pt3dadd( -31.9663, 58.3996, -20.8946, 0.29 ) }
    dend_28 { pt3dadd( -32.5603, 58.5491, -20.9117, 0.29 ) }
    dend_28 { pt3dadd( -33.5594, 58.8179, -20.8762, 1.18 ) }
    dend_28 { pt3dadd( -33.9993, 58.9221, -20.8624, 1.92 ) }
    dend_28 { pt3dadd( -34.8517, 59.0224, -20.8933, 1.47 ) }
    dend_28 { pt3dadd( -36.1197, 59.0448, -20.991, 0.37 ) }
    dend_28 { pt3dadd( -36.6802, 58.9977, -21.0458, 0.29 ) }
    dend_28 { pt3dadd( -37.7267, 58.786, -21.1298, 0.29 ) }
    dend_28 { pt3dadd( -38.9186, 58.3944, -21.2314, 0.29 ) }
    dend_28 { pt3dadd( -40.6845, 57.5754, -21.4618, 0.29 ) }
    dend_28 { pt3dadd( -41.5605, 57.0491, -21.6004, 0.29 ) }
    dend_28 { pt3dadd( -42.2357, 56.6054, -21.7191, 0.29 ) }
    dend_28 { pt3dadd( -43.1084, 56.0706, -21.8924, 0.29 ) }
    dend_28 { pt3dadd( -43.7071, 55.758, -22.0046, 0.29 ) }
    dend_28 { pt3dadd( -45.0908, 55.1635, -22.2402, 0.29 ) }
    dend_28 { pt3dadd( -45.7408, 54.909, -22.3595, 0.29 ) }
    dend_28 { pt3dadd( -46.7961, 54.6012, -22.6003, 0.29 ) }
    dend_28 { pt3dadd( -47.3889, 54.5257, -22.7361, 0.52 ) }
    dend_28 { pt3dadd( -48.0174, 54.5627, -22.8529, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -48.9672, 54.7437, -22.9727, 0.52 ) }
    dend_28 { pt3dadd( -50.0109, 55.0546, -23.0433, 0.66 ) }
    dend_28 { pt3dadd( -50.5472, 55.2389, -23.07, 0.96 ) }
    dend_28 { pt3dadd( -51.0391, 55.4184, -23.0762, 1.18 ) }
    dend_28 { pt3dadd( -52.4642, 56.0182, -23.0656, 0.52 ) }
    dend_28 { pt3dadd( -53.4355, 56.4954, -23.091, 0.29 ) }
    dend_28 { pt3dadd( -53.9686, 56.807, -23.1393, 0.52 ) }
    dend_28 { pt3dadd( -54.1931, 56.9699, -23.1759, 0.74 ) }
    dend_28 { pt3dadd( -54.662, 57.3332, -23.2825, 0.74 ) }
    dend_28 { pt3dadd( -55.4655, 57.9494, -23.4926, 0.44 ) }
    dend_28 { pt3dadd( -56.3266, 58.5886, -23.7504, 0.44 ) }
    dend_28 { pt3dadd( -57.246, 59.2341, -24.0424, 0.37 ) }
    dend_28 { pt3dadd( -57.9839, 59.7127, -24.2594, 0.37 ) }
    dend_28 { pt3dadd( -58.8911, 60.2156, -24.505, 0.37 ) }
    dend_28 { pt3dadd( -60.1592, 60.8364, -24.8948, 0.37 ) }
    dend_28 { pt3dadd( -60.994, 61.2107, -25.1438, 0.88 ) }
    dend_28 { pt3dadd( -61.2168, 61.3099, -25.2002, 0.88 ) }
    dend_28 { pt3dadd( -61.9723, 61.6312, -25.3402, 0.66 ) }
    dend_28 { pt3dadd( -63.2659, 62.1414, -25.4999, 0.96 ) }
    dend_28 { pt3dadd( -64.7755, 62.6882, -25.484, 0.81 ) }
    dend_28 { pt3dadd( -65.6922, 62.96, -25.3186, 1.11 ) }
    dend_28 { pt3dadd( -66.6316, 63.17, -24.9687, 0.59 ) }
    dend_28 { pt3dadd( -67.7474, 63.3919, -24.4368, 0.59 ) }
    dend_28 { pt3dadd( -68.4349, 63.5412, -24.0242, 0.74 ) }
    dend_28 { pt3dadd( -69.2879, 63.7445, -23.3999, 0.52 ) }
    dend_28 { pt3dadd( -69.7487, 63.8411, -23.0448, 0.52 ) }
    dend_28 { pt3dadd( -70.4257, 63.9871, -22.5829, 0.52 ) }
    dend_28 { pt3dadd( -71.1578, 64.1696, -22.1334, 0.52 ) }
    dend_28 { pt3dadd( -71.8278, 64.4021, -21.815, 0.52 ) }
    dend_28 { pt3dadd( -72.8855, 64.8751, -21.4003, 1.33 ) }
    dend_28 { pt3dadd( -73.3655, 65.148, -21.2339, 2.28 ) }
    dend_28 { pt3dadd( -73.9432, 65.5013, -21.047, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.3791, -52.0325, 13.2266, 0.59 ) }
    dend_16 { pt3dadd( 11.498, -52.6316, 14.2192, 0.59 ) }
    dend_16 { pt3dadd( 12.0666, -52.996, 14.6839, 0.59 ) }
    dend_16 { pt3dadd( 13.9007, -54.4864, 16.1594, 0.44 ) }
    dend_16 { pt3dadd( 14.2271, -54.8353, 16.4531, 0.44 ) }
    dend_16 { pt3dadd( 14.6971, -55.4285, 16.8992, 0.44 ) }
    dend_16 { pt3dadd( 15.3078, -56.2883, 17.5288, 0.44 ) }
    dend_16 { pt3dadd( 15.6337, -56.8808, 17.9077, 0.44 ) }
    dend_16 { pt3dadd( 16.0678, -57.7654, 18.4531, 0.44 ) }
    dend_16 { pt3dadd( 16.622, -58.9496, 19.1497, 0.44 ) }
    dend_16 { pt3dadd( 16.9063, -59.6095, 19.6205, 0.81 ) }
    dend_16 { pt3dadd( 17.3771, -60.7929, 20.6251, 0.59 ) }
    dend_16 { pt3dadd( 17.5047, -61.126, 20.9462, 0.59 ) }
    dend_16 { pt3dadd( 17.8454, -62.0444, 22.0604, 0.29 ) }
    dend_16 { pt3dadd( 17.9649, -62.4531, 22.6167, 0.29 ) }
    dend_16 { pt3dadd( 18.1839, -63.5801, 24.1236, 0.29 ) }
    dend_16 { pt3dadd( 18.2324, -64.2908, 24.9766, 0.29 ) }
    dend_16 { pt3dadd( 18.1756, -65.0977, 25.8275, 1.03 ) }
    dend_16 { pt3dadd( 17.7353, -67.5143, 27.9442, 1.11 ) }
    dend_16 { pt3dadd( 17.4558, -68.5316, 28.7563, 1.33 ) }
    dend_16 { pt3dadd( 17.0703, -69.7004, 29.5485, 0.66 ) }
    dend_16 { pt3dadd( 16.1999, -71.8597, 30.302, 0.15 ) }
    dend_16 { pt3dadd( 15.8493, -72.5205, 30.0818, 0.15 ) }
    dend_16 { pt3dadd( 15.4679, -73.1394, 29.481, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.3791, -52.0325, 13.2266, 1.33 ) }
    dend_5 { pt3dadd( 10.1357, -53.293, 12.9905, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -73.9432, 65.5013, -21.047, 0.37 ) }
    dend_30 { pt3dadd( -75.5562, 65.4407, -21.0946, 0.37 ) }
    dend_30 { pt3dadd( -76.2765, 65.3703, -21.1288, 0.37 ) }
    dend_30 { pt3dadd( -77.2415, 65.1846, -21.1943, 0.37 ) }
    dend_30 { pt3dadd( -78.3271, 64.8679, -21.3751, 0.88 ) }
    dend_30 { pt3dadd( -78.7943, 64.7181, -21.475, 0.88 ) }
    dend_30 { pt3dadd( -79.6011, 64.4776, -21.6543, 0.52 ) }
    dend_30 { pt3dadd( -80.2298, 64.3086, -21.8261, 0.29 ) }
    dend_30 { pt3dadd( -81.049, 64.1397, -22.0976, 0.29 ) }
    dend_30 { pt3dadd( -82.2699, 64.0235, -22.5563, 0.37 ) }
    dend_30 { pt3dadd( -82.6975, 64.0677, -22.7015, 0.37 ) }
    dend_30 { pt3dadd( -83.3762, 64.2441, -22.91, 0.37 ) }
    dend_30 { pt3dadd( -84.0547, 64.4753, -23.0566, 0.37 ) }
    dend_30 { pt3dadd( -85.2222, 64.8548, -23.2787, 0.66 ) }
    dend_30 { pt3dadd( -85.9371, 65.0462, -23.3936, 0.66 ) }
    dend_30 { pt3dadd( -86.9684, 65.2199, -23.4981, 0.37 ) }
    dend_30 { pt3dadd( -87.6367, 65.2629, -23.5477, 0.29 ) }
    dend_30 { pt3dadd( -88.8212, 65.2373, -23.5936, 0.29 ) }
    dend_30 { pt3dadd( -89.9655, 65.1502, -23.5249, 0.29 ) }
    dend_30 { pt3dadd( -90.9595, 65.0309, -23.341, 0.29 ) }
    dend_30 { pt3dadd( -92.0256, 64.901, -23.123, 0.29 ) }
    dend_30 { pt3dadd( -92.7806, 64.8275, -22.968, 0.88 ) }
    dend_30 { pt3dadd( -93.1841, 64.8069, -22.8931, 1.03 ) }
    dend_30 { pt3dadd( -94.4119, 64.8681, -22.7351, 0.29 ) }
    dend_30 { pt3dadd( -95.4177, 64.9967, -22.6347, 0.29 ) }
    dend_30 { pt3dadd( -96.8042, 65.1632, -22.5892, 0.96 ) }
    dend_30 { pt3dadd( -97.4663, 65.2239, -22.6239, 1.25 ) }
    dend_30 { pt3dadd( -97.7294, 65.2372, -22.6704, 1.47 ) }
    dend_30 { pt3dadd( -98.9164, 65.2329, -22.9364, 0.96 ) }
    dend_30 { pt3dadd( -100.001, 65.2084, -23.3776, 0.52 ) }
    dend_30 { pt3dadd( -101.339, 65.2215, -24.0301, 0.44 ) }
    dend_30 { pt3dadd( -102.388, 65.2531, -24.5744, 0.44 ) }
    dend_30 { pt3dadd( -104.143, 65.344, -25.5388, 1.11 ) }
    dend_30 { pt3dadd( -104.822, 65.406, -25.9172, 1.11 ) }
    dend_30 { pt3dadd( -108.498, 65.9089, -27.988, 0.29 ) }
    dend_30 { pt3dadd( -109.406, 66.0674, -28.5358, 0.29 ) }
    dend_30 { pt3dadd( -110.038, 66.1854, -28.9453, 0.96 ) }
    dend_30 { pt3dadd( -110.649, 66.289, -29.3362, 1.18 ) }
    dend_30 { pt3dadd( -111.653, 66.4604, -29.8962, 0.88 ) }
    dend_30 { pt3dadd( -112.76, 66.6241, -30.4306, 0.52 ) }
    dend_30 { pt3dadd( -113.45, 66.6528, -30.6854, 0.52 ) }
    dend_30 { pt3dadd( -114.252, 66.6022, -31.0238, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -115.923, 66.4159, -31.8365, 0.37 ) }
    dend_30 { pt3dadd( -116.837, 66.2996, -32.293, 0.37 ) }
    dend_30 { pt3dadd( -117.807, 66.1791, -32.777, 0.37 ) }
    dend_30 { pt3dadd( -119.16, 66.0361, -33.4447, 0.37 ) }
    dend_30 { pt3dadd( -120.156, 65.9642, -33.9099, 0.37 ) }
    dend_30 { pt3dadd( -121.25, 65.8851, -34.4017, 0.37 ) }
    dend_30 { pt3dadd( -122.023, 65.7427, -34.8038, 1.11 ) }
    dend_30 { pt3dadd( -122.272, 65.6781, -34.9612, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -73.9432, 65.5013, -21.047, 0.29 ) }
    dend_29 { pt3dadd( -77.3837, 69.49, -22.1662, 0.29 ) }
    dend_29 { pt3dadd( -78.4691, 70.7329, -22.3138, 0.29 ) }
    dend_29 { pt3dadd( -79.1157, 71.4942, -22.3354, 0.29 ) }
    dend_29 { pt3dadd( -80.6468, 73.1847, -22.3323, 0.29 ) }
    dend_29 { pt3dadd( -81.1472, 73.7116, -22.3051, 0.52 ) }
    dend_29 { pt3dadd( -82.023, 74.6134, -22.2035, 0.37 ) }
    dend_29 { pt3dadd( -82.7793, 75.3034, -21.8961, 0.66 ) }
    dend_29 { pt3dadd( -83.2324, 75.6823, -21.6787, 0.81 ) }
    dend_29 { pt3dadd( -84.7084, 76.9055, -20.8418, 0.29 ) }
    dend_29 { pt3dadd( -85.8173, 77.7907, -20.1472, 0.52 ) }
    dend_29 { pt3dadd( -86.5147, 78.3092, -19.6815, 0.74 ) }
    dend_29 { pt3dadd( -88.0976, 79.3582, -18.5433, 0.29 ) }
    dend_29 { pt3dadd( -89.458, 80.1777, -17.4661, 0.29 ) }
    dend_29 { pt3dadd( -90.211, 80.5703, -16.787, 1.25 ) }
    dend_29 { pt3dadd( -90.6466, 80.788, -16.3226, 1.84 ) }
    dend_29 { pt3dadd( -91.1712, 81.0281, -15.7178, 1.84 ) }
    dend_29 { pt3dadd( -93.0005, 81.6871, -13.5788, 0.29 ) }
    dend_29 { pt3dadd( -93.5877, 81.8348, -12.8585, 0.29 ) }
    dend_29 { pt3dadd( -95.3336, 82.0154, -10.5204, 0.29 ) }
    dend_29 { pt3dadd( -96.0345, 82.0259, -9.43413, 0.52 ) }
    dend_29 { pt3dadd( -96.4152, 82.0134, -8.76446, 0.29 ) }
    dend_29 { pt3dadd( -97.2701, 81.9782, -7.00648, 0.29 ) }
    dend_29 { pt3dadd( -97.6586, 81.9723, -6.05918, 0.29 ) }
    dend_29 { pt3dadd( -98.6943, 82.0336, -3.53167, 0.88 ) }
    dend_29 { pt3dadd( -99.6572, 82.0569, -1.26556, 0.29 ) }
    dend_29 { pt3dadd( -100.084, 82.0561, -0.368756, 0.29 ) }
    dend_29 { pt3dadd( -100.94, 82.1097, 1.28703, 0.81 ) }
    dend_29 { pt3dadd( -101.389, 82.2001, 2.1384, 0.81 ) }
    dend_29 { pt3dadd( -102.092, 82.4252, 3.47067, 0.37 ) }
    dend_29 { pt3dadd( -102.999, 82.8266, 5.14232, 0.29 ) }
    dend_29 { pt3dadd( -103.556, 83.0905, 6.19044, 0.29 ) }
    dend_29 { pt3dadd( -104.155, 83.4103, 7.36348, 0.29 ) }
    dend_29 { pt3dadd( -104.614, 83.7003, 8.32442, 0.29 ) }
    dend_29 { pt3dadd( -105.603, 84.4879, 10.6505, 0.88 ) }
    dend_29 { pt3dadd( -105.82, 84.7047, 11.2543, 1.25 ) }
    dend_29 { pt3dadd( -106.201, 85.0969, 12.305, 1.25 ) }
    dend_29 { pt3dadd( -106.806, 85.6495, 13.6313, 0.29 ) }
    dend_29 { pt3dadd( -107.423, 86.1067, 14.6274, 0.22 ) }
    dend_29 { pt3dadd( -108.308, 86.6231, 15.5398, 0.88 ) }
    dend_29 { pt3dadd( -109.718, 87.3737, 16.3657, 0.88 ) }
    dend_29 { pt3dadd( -110.849, 87.9567, 16.9624, 0.59 ) }
    dend_29 { pt3dadd( -114.331, 89.6755, 18.6507, 0.59 ) }
    dend_29 { pt3dadd( -114.938, 89.9721, 18.919, 0.59 ) }
    dend_29 { pt3dadd( -116.315, 90.6232, 19.4966, 0.29 ) }
    dend_29 { pt3dadd( -117.538, 91.1996, 20.0429, 0.37 ) }
    dend_29 { pt3dadd( -119.401, 92.0467, 21.0132, 0.37 ) }
    dend_29 { pt3dadd( -120.452, 92.509, 21.7309, 0.37 ) }
    dend_29 { pt3dadd( -120.889, 92.7012, 22.0934, 0.44 ) }
    dend_29 { pt3dadd( -121.28, 92.8568, 22.3897, 0.44 ) }
    dend_29 { pt3dadd( -122.569, 93.3078, 23.2517, 0.22 ) }
    dend_29 { pt3dadd( -123.563, 93.6347, 23.8167, 0.37 ) }
    dend_29 { pt3dadd( -124.726, 93.9715, 24.3582, 0.29 ) }
    dend_29 { pt3dadd( -126.052, 94.3061, 24.9475, 0.29 ) }
    dend_29 { pt3dadd( -127.555, 94.63, 25.607, 0.29 ) }
    dend_29 { pt3dadd( -129.082, 94.9425, 26.2744, 0.29 ) }
    dend_29 { pt3dadd( -130.074, 95.1815, 26.7134, 0.29 ) }
    dend_29 { pt3dadd( -131.261, 95.5629, 27.2596, 0.29 ) }
    dend_29 { pt3dadd( -132.45, 96.0865, 27.8225, 0.52 ) }
    dend_29 { pt3dadd( -132.956, 96.4133, 28.0742, 0.74 ) }
    dend_29 { pt3dadd( -133.754, 97.1733, 28.5973, 0.52 ) }
    dend_29 { pt3dadd( -134.761, 98.3563, 29.4345, 0.29 ) }
    dend_29 { pt3dadd( -135.304, 99.0299, 29.9378, 0.29 ) }
    dend_29 { pt3dadd( -135.762, 99.5799, 30.3561, 0.37 ) }
    dend_29 { pt3dadd( -136.212, 100.042, 30.744, 0.37 ) }
    dend_29 { pt3dadd( -137.659, 101.21, 31.8928, 0.59 ) }
    dend_29 { pt3dadd( -138.771, 101.907, 32.7039, 0.29 ) }
    dend_29 { pt3dadd( -140.865, 102.964, 34.1163, 0.29 ) }
    dend_29 { pt3dadd( -143.292, 104.017, 35.628, 0.29 ) }
    dend_29 { pt3dadd( -144.406, 104.477, 36.3018, 0.29 ) }
    dend_29 { pt3dadd( -145.713, 104.993, 37.0346, 0.29 ) }
    dend_29 { pt3dadd( -146.825, 105.413, 37.5676, 0.59 ) }
    dend_29 { pt3dadd( -147.851, 105.737, 38.0482, 0.59 ) }
    dend_29 { pt3dadd( -149.664, 106.056, 38.8653, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.1357, -53.293, 12.9905, 0.74 ) }
    dend_7 { pt3dadd( 10.563, -54.7708, 12.9695, 0.74 ) }
    dend_7 { pt3dadd( 10.832, -55.5863, 12.9883, 0.74 ) }
    dend_7 { pt3dadd( 11.1424, -56.5366, 13.0597, 0.96 ) }
    dend_7 { pt3dadd( 11.4454, -57.4129, 13.2197, 0.74 ) }
    dend_7 { pt3dadd( 11.8091, -58.4281, 13.4564, 0.59 ) }
    dend_7 { pt3dadd( 12.085, -59.1984, 13.636, 0.59 ) }
    dend_7 { pt3dadd( 12.5132, -60.2846, 13.9661, 0.59 ) }
    dend_7 { pt3dadd( 13.0534, -61.5866, 14.4281, 0.52 ) }
    dend_7 { pt3dadd( 13.7853, -63.2653, 15.1063, 0.52 ) }
    dend_7 { pt3dadd( 13.9752, -63.7217, 15.3146, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.1357, -53.293, 12.9905, 0.59 ) }
    dend_6 { pt3dadd( 8.90934, -54.5655, 13.53, 0.59 ) }
    dend_6 { pt3dadd( 8.09229, -55.3388, 14.0948, 0.88 ) }
    dend_6 { pt3dadd( 7.17989, -56.1813, 14.8847, 0.88 ) }
    dend_6 { pt3dadd( 6.12998, -57.1408, 15.8514, 0.59 ) }
    dend_6 { pt3dadd( 4.6865, -58.3558, 17.1562, 0.59 ) }
    dend_6 { pt3dadd( 4.06767, -58.898, 17.7668, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( 3.0129, -59.8586, 18.9902, 1.4 ) }
    dend_6 { pt3dadd( 2.10102, -60.6982, 20.0938, 1.03 ) }
    dend_6 { pt3dadd( 1.47226, -61.2538, 20.8342, 1.55 ) }
    dend_6 { pt3dadd( 0.719135, -61.9039, 21.6568, 1.55 ) }
    dend_6 { pt3dadd( -0.560234, -63.0307, 22.8305, 1.03 ) }
    dend_6 { pt3dadd( -1.305, -63.7206, 23.4537, 0.81 ) }
    dend_6 { pt3dadd( -2.31074, -64.6844, 24.2489, 0.81 ) }
    dend_6 { pt3dadd( -3.16992, -65.5081, 24.8457, 0.37 ) }
    dend_6 { pt3dadd( -3.83537, -66.1184, 25.2171, 0.37 ) }
    dend_6 { pt3dadd( -4.00387, -66.2651, 25.2936, 0.96 ) }
    dend_6 { pt3dadd( -4.49329, -66.6691, 25.4738, 1.4 ) }
    dend_6 { pt3dadd( -6.6084, -68.5518, 26.2246, 0.59 ) }
    dend_6 { pt3dadd( -8.30935, -70.1202, 26.8205, 0.52 ) }
    dend_6 { pt3dadd( -9.63567, -71.3235, 27.2782, 0.52 ) }
    dend_6 { pt3dadd( -11.185, -72.617, 27.7987, 0.37 ) }
    dend_6 { pt3dadd( -12.4908, -73.5983, 28.1737, 0.29 ) }
    dend_6 { pt3dadd( -14.0729, -74.6569, 28.4865, 1.25 ) }
    dend_6 { pt3dadd( -14.5015, -74.9158, 28.5304, 1.4 ) }
    dend_6 { pt3dadd( -15.9511, -75.7675, 28.6853, 0.52 ) }
    dend_6 { pt3dadd( -17.0495, -76.3753, 28.7789, 0.81 ) }
    dend_6 { pt3dadd( -18.4842, -77.0468, 28.8269, 1.03 ) }
    dend_6 { pt3dadd( -20.4664, -77.7355, 28.887, 0.52 ) }
    dend_6 { pt3dadd( -21.6935, -78.0854, 28.9481, 0.52 ) }
    dend_6 { pt3dadd( -22.6528, -78.4009, 29.0477, 0.37 ) }
    dend_6 { pt3dadd( -23.9834, -79.0371, 29.386, 0.29 ) }
    dend_6 { pt3dadd( -24.3765, -79.294, 29.5654, 0.74 ) }
    dend_6 { pt3dadd( -25.0915, -79.8239, 30.0529, 1.03 ) }
    dend_6 { pt3dadd( -25.5203, -80.1285, 30.4005, 0.81 ) }
    dend_6 { pt3dadd( -26.4791, -80.7529, 31.1554, 0.59 ) }
    dend_6 { pt3dadd( -27.9482, -81.6777, 32.272, 0.37 ) }
    dend_6 { pt3dadd( -28.6561, -82.1135, 32.7109, 0.29 ) }
    dend_6 { pt3dadd( -29.2794, -82.4123, 33.0201, 0.29 ) }
    dend_6 { pt3dadd( -29.8863, -82.6354, 33.243, 0.96 ) }
    dend_6 { pt3dadd( -30.5748, -82.8232, 33.3754, 0.96 ) }
    dend_6 { pt3dadd( -31.4734, -83.0208, 33.4445, 0.81 ) }
    dend_6 { pt3dadd( -33.1648, -83.4482, 33.5278, 0.44 ) }
    dend_6 { pt3dadd( -34.0877, -83.8153, 33.6128, 0.29 ) }
    dend_6 { pt3dadd( -35.2271, -84.4845, 33.7893, 0.29 ) }
    dend_6 { pt3dadd( -36.4173, -85.4079, 34.0658, 1.4 ) }
    dend_6 { pt3dadd( -37.0852, -86.0295, 34.2721, 1.4 ) }
    dend_6 { pt3dadd( -38.2186, -87.2357, 34.7639, 0.44 ) }
    dend_6 { pt3dadd( -38.811, -87.9339, 35.1029, 0.29 ) }
    dend_6 { pt3dadd( -39.1799, -88.3923, 35.3516, 0.88 ) }
    dend_6 { pt3dadd( -39.8955, -89.27, 35.8625, 0.96 ) }
    dend_6 { pt3dadd( -40.4739, -89.9495, 36.2825, 0.59 ) }
    dend_6 { pt3dadd( -41.5082, -91.1388, 36.9944, 0.44 ) }
    dend_6 { pt3dadd( -42.5279, -92.3131, 37.6859, 0.37 ) }
    dend_6 { pt3dadd( -43.5515, -93.4475, 38.3688, 0.22 ) }
    dend_6 { pt3dadd( -44.4701, -94.403, 38.9545, 0.59 ) }
    dend_6 { pt3dadd( -45.3607, -95.2611, 39.4866, 0.29 ) }
    dend_6 { pt3dadd( -45.6395, -95.5056, 39.637, 0.74 ) }
    dend_6 { pt3dadd( -46.22, -95.94, 39.8991, 0.96 ) }
    dend_6 { pt3dadd( -46.8802, -96.3355, 40.1618, 0.59 ) }
    dend_6 { pt3dadd( -48.0236, -96.8822, 40.5698, 0.44 ) }
    dend_6 { pt3dadd( -48.8062, -97.2303, 40.8569, 0.74 ) }
    dend_6 { pt3dadd( -49.478, -97.545, 41.1022, 0.96 ) }
    dend_6 { pt3dadd( -50.8837, -98.2768, 41.6214, 0.37 ) }
    dend_6 { pt3dadd( -51.9249, -98.9307, 42.0149, 0.29 ) }
    dend_6 { pt3dadd( -52.5999, -99.4593, 42.2351, 0.29 ) }
    dend_6 { pt3dadd( -53.3697, -100.175, 42.4376, 0.52 ) }
    dend_6 { pt3dadd( -53.8466, -100.656, 42.5331, 0.52 ) }
    dend_6 { pt3dadd( -54.2668, -101.07, 42.6439, 0.52 ) }
    dend_6 { pt3dadd( -55.2546, -101.902, 42.9706, 0.52 ) }
    dend_6 { pt3dadd( -56.4443, -102.72, 43.4305, 0.52 ) }
    dend_6 { pt3dadd( -56.9549, -102.978, 43.6448, 0.88 ) }
    dend_6 { pt3dadd( -58.0103, -103.363, 44.1112, 0.88 ) }
    dend_6 { pt3dadd( -60.0281, -103.896, 44.9265, 0.37 ) }
    dend_6 { pt3dadd( -61.4819, -104.226, 45.4165, 0.29 ) }
    dend_6 { pt3dadd( -62.2296, -104.403, 45.6337, 0.96 ) }
    dend_6 { pt3dadd( -63.4793, -104.794, 45.9404, 1.03 ) }
    dend_6 { pt3dadd( -64.9387, -105.413, 46.1856, 0.52 ) }
    dend_6 { pt3dadd( -66.2541, -106.153, 46.2168, 0.52 ) }
    dend_6 { pt3dadd( -67.5993, -107.102, 46.0637, 0.52 ) }
    dend_6 { pt3dadd( -68.8995, -108.22, 45.8013, 0.52 ) }
    dend_6 { pt3dadd( -69.923, -109.226, 45.5395, 0.52 ) }
    dend_6 { pt3dadd( -71.27, -110.72, 45.1416, 0.44 ) }
    dend_6 { pt3dadd( -72.624, -112.379, 44.6534, 0.74 ) }
    dend_6 { pt3dadd( -73.4211, -113.466, 44.3222, 0.81 ) }
    dend_6 { pt3dadd( -74.2656, -114.68, 43.911, 0.52 ) }
    dend_6 { pt3dadd( -74.744, -115.364, 43.6457, 0.88 ) }
    dend_6 { pt3dadd( -75.0947, -115.861, 43.4513, 0.88 ) }
    dend_6 { pt3dadd( -76.2888, -117.554, 42.8275, 0.44 ) }
    dend_6 { pt3dadd( -77.3679, -118.923, 42.3485, 0.37 ) }
    dend_6 { pt3dadd( -77.8646, -119.521, 42.1281, 0.37 ) }
    dend_6 { pt3dadd( -78.7881, -120.598, 41.7219, 0.37 ) }
    dend_6 { pt3dadd( -79.539, -121.455, 41.4218, 0.59 ) }
    dend_6 { pt3dadd( -80.2267, -122.213, 41.205, 0.59 ) }
    dend_6 { pt3dadd( -82.0928, -124.079, 40.8942, 0.29 ) }
    dend_6 { pt3dadd( -82.902, -124.832, 40.83, 0.29 ) }
    dend_6 { pt3dadd( -83.6211, -125.499, 40.7838, 0.59 ) }
    dend_6 { pt3dadd( -84.6791, -126.539, 40.6941, 0.59 ) }
    dend_6 { pt3dadd( -85.3838, -127.257, 40.6326, 0.37 ) }
    dend_6 { pt3dadd( -86.4024, -128.314, 40.5973, 0.37 ) }
    dend_6 { pt3dadd( -87.052, -128.967, 40.6517, 0.81 ) }
    dend_6 { pt3dadd( -87.574, -129.448, 40.6976, 0.81 ) }
    dend_6 { pt3dadd( -88.2967, -130.054, 40.7369, 0.81 ) }
    dend_6 { pt3dadd( -89.333, -130.954, 40.6458, 0.37 ) }
    dend_6 { pt3dadd( -90.1066, -131.686, 40.4975, 0.37 ) }
    dend_6 { pt3dadd( -91.0734, -132.624, 40.2702, 0.66 ) }
    dend_6 { pt3dadd( -91.6073, -133.111, 40.1522, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -92.6645, -133.975, 39.9467, 0.96 ) }
    dend_6 { pt3dadd( -94.3747, -135.17, 39.6007, 0.29 ) }
    dend_6 { pt3dadd( -95.2067, -135.661, 39.3542, 0.29 ) }
    dend_6 { pt3dadd( -96.3279, -136.316, 38.9368, 0.44 ) }
    dend_6 { pt3dadd( -96.8006, -136.618, 38.7536, 0.81 ) }
    dend_6 { pt3dadd( -97.5356, -137.144, 38.4221, 0.81 ) }
    dend_6 { pt3dadd( -98.2458, -137.686, 38.0604, 0.81 ) }
    dend_6 { pt3dadd( -100.148, -139.097, 37.108, 0.52 ) }
    dend_6 { pt3dadd( -101.081, -139.804, 36.6155, 0.59 ) }
    dend_6 { pt3dadd( -102.205, -140.73, 35.9801, 0.59 ) }
    dend_6 { pt3dadd( -104.023, -142.3, 35.0204, 0.29 ) }
    dend_6 { pt3dadd( -105.182, -143.344, 34.4539, 0.96 ) }
    dend_6 { pt3dadd( -105.867, -143.962, 34.1659, 1.25 ) }
    dend_6 { pt3dadd( -106.296, -144.323, 34.0276, 1.25 ) }
    dend_6 { pt3dadd( -107.888, -145.464, 33.6673, 0.37 ) }
    dend_6 { pt3dadd( -108.992, -146.17, 33.5138, 0.37 ) }
    dend_6 { pt3dadd( -109.917, -146.72, 33.5083, 1.03 ) }
    dend_6 { pt3dadd( -110.778, -147.207, 33.56, 1.25 ) }
    dend_6 { pt3dadd( -111.67, -147.67, 33.6449, 1.25 ) }
    dend_6 { pt3dadd( -113.36, -148.424, 33.9705, 0.29 ) }
    dend_6 { pt3dadd( -114.223, -148.73, 34.2392, 0.44 ) }
    dend_6 { pt3dadd( -115.106, -148.998, 34.5673, 0.59 ) }
    dend_6 { pt3dadd( -116.239, -149.302, 34.9769, 0.59 ) }
    dend_6 { pt3dadd( -117.627, -149.642, 35.4402, 0.29 ) }
    dend_6 { pt3dadd( -119.399, -150.049, 35.9219, 0.29 ) }
    dend_6 { pt3dadd( -121.15, -150.473, 36.2623, 0.29 ) }
    dend_6 { pt3dadd( -122.293, -150.776, 36.4321, 0.29 ) }
    dend_6 { pt3dadd( -124.155, -151.345, 36.6147, 0.81 ) }
    dend_6 { pt3dadd( -124.767, -151.555, 36.6523, 0.81 ) }
    dend_6 { pt3dadd( -126.688, -152.292, 36.7172, 0.52 ) }
    dend_6 { pt3dadd( -128.502, -153.099, 36.8189, 0.52 ) }
    dend_6 { pt3dadd( -130.021, -153.881, 37.0212, 0.44 ) }
    dend_6 { pt3dadd( -131.03, -154.475, 37.3063, 0.81 ) }
    dend_6 { pt3dadd( -132.194, -155.258, 37.9053, 0.81 ) }
    dend_6 { pt3dadd( -132.887, -155.814, 38.511, 0.81 ) }
    dend_6 { pt3dadd( -134.024, -156.872, 39.9749, 0.37 ) }
    dend_6 { pt3dadd( -134.453, -157.334, 40.7237, 0.37 ) }
    dend_6 { pt3dadd( -134.993, -157.973, 41.8246, 0.81 ) }
    dend_6 { pt3dadd( -135.584, -158.677, 43.0934, 0.81 ) }
    dend_6 { pt3dadd( -136.736, -159.963, 45.5533, 0.44 ) }
    dend_6 { pt3dadd( -137.298, -160.449, 46.6577, 0.37 ) }
    dend_6 { pt3dadd( -137.937, -160.907, 47.7772, 0.29 ) }
    dend_6 { pt3dadd( -138.451, -161.248, 48.5898, 0.29 ) }
    dend_6 { pt3dadd( -138.979, -161.619, 49.3526, 0.74 ) }
    dend_6 { pt3dadd( -139.865, -162.368, 50.6664, 0.29 ) }
    dend_6 { pt3dadd( -141.054, -163.512, 52.3843, 0.29 ) }
    dend_6 { pt3dadd( -141.699, -164.183, 53.3216, 0.66 ) }
    dend_6 { pt3dadd( -142.343, -164.866, 54.1904, 0.81 ) }
    dend_6 { pt3dadd( -142.993, -165.645, 55.058, 0.81 ) }
    dend_6 { pt3dadd( -144.251, -167.273, 56.6319, 0.44 ) }
    dend_6 { pt3dadd( -144.83, -168.055, 57.262, 0.29 ) }
    dend_6 { pt3dadd( -145.705, -169.261, 58.1279, 0.29 ) }
    dend_6 { pt3dadd( -146.356, -170.07, 58.7339, 0.29 ) }
    dend_6 { pt3dadd( -147.088, -170.913, 59.3797, 0.29 ) }
    dend_6 { pt3dadd( -147.666, -171.498, 59.8073, 0.96 ) }
    dend_6 { pt3dadd( -148.363, -172.123, 60.1198, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -122.272, 65.6781, -34.9612, 0.37 ) }
    dend_48 { pt3dadd( -123.175, 64.5579, -34.6057, 0.37 ) }
    dend_48 { pt3dadd( -123.933, 63.7115, -34.2238, 0.37 ) }
    dend_48 { pt3dadd( -125.198, 62.5272, -33.493, 0.37 ) }
    dend_48 { pt3dadd( -125.899, 61.9801, -33.0603, 0.22 ) }
    dend_48 { pt3dadd( -126.568, 61.5366, -32.6373, 0.22 ) }
    dend_48 { pt3dadd( -127.644, 60.8983, -31.9533, 0.37 ) }
    dend_48 { pt3dadd( -128.249, 60.6578, -31.5457, 0.37 ) }
    dend_48 { pt3dadd( -129.115, 60.4173, -30.9529, 0.22 ) }
    dend_48 { pt3dadd( -129.92, 60.2731, -30.4729, 0.22 ) }
    dend_48 { pt3dadd( -130.634, 60.1529, -30.1295, 0.81 ) }
    dend_48 { pt3dadd( -131.037, 60.0676, -29.9782, 0.88 ) }
    dend_48 { pt3dadd( -131.646, 59.8934, -29.8157, 0.66 ) }
    dend_48 { pt3dadd( -132.797, 59.5221, -29.5439, 0.29 ) }
    dend_48 { pt3dadd( -134.325, 59.0181, -29.1966, 0.29 ) }
    dend_48 { pt3dadd( -135.378, 58.6939, -28.957, 0.29 ) }
    dend_48 { pt3dadd( -136.82, 58.2809, -28.6347, 0.29 ) }
    dend_48 { pt3dadd( -138.669, 57.7677, -28.2156, 0.29 ) }
    dend_48 { pt3dadd( -139.54, 57.5295, -28.0183, 0.66 ) }
    dend_48 { pt3dadd( -140.222, 57.34, -27.8602, 0.88 ) }
    dend_48 { pt3dadd( -140.558, 57.2396, -27.7862, 0.88 ) }
    dend_48 { pt3dadd( -141.52, 56.9618, -27.5948, 0.29 ) }
    dend_48 { pt3dadd( -142.402, 56.6864, -27.4424, 0.29 ) }
    dend_48 { pt3dadd( -143.476, 56.3247, -27.2804, 1.33 ) }
    dend_48 { pt3dadd( -143.874, 56.1758, -27.2319, 1.77 ) }
    dend_48 { pt3dadd( -145.55, 55.5717, -27.0501, 0.29 ) }
    dend_48 { pt3dadd( -146.716, 55.1657, -26.9331, 0.29 ) }
    dend_48 { pt3dadd( -148.2, 54.663, -26.7797, 0.29 ) }
    dend_48 { pt3dadd( -148.924, 54.4374, -26.6905, 0.29 ) }
    dend_48 { pt3dadd( -149.653, 54.2356, -26.5327, 0.74 ) }
    dend_48 { pt3dadd( -150.785, 53.9359, -26.1475, 0.29 ) }
    dend_48 { pt3dadd( -151.928, 53.6383, -25.5194, 0.29 ) }
    dend_48 { pt3dadd( -152.884, 53.3923, -24.8325, 0.81 ) }
    dend_48 { pt3dadd( -153.369, 53.2604, -24.4205, 0.81 ) }
    dend_48 { pt3dadd( -154.806, 52.8426, -22.9843, 0.22 ) }
    dend_48 { pt3dadd( -155.716, 52.5497, -21.9896, 0.22 ) }
    dend_48 { pt3dadd( -156.676, 52.1852, -20.9129, 0.88 ) }
    dend_48 { pt3dadd( -157.222, 51.9698, -20.3404, 1.18 ) }
    dend_48 { pt3dadd( -158.484, 51.4434, -19.2159, 0.29 ) }
    dend_48 { pt3dadd( -159.296, 51.0587, -18.6372, 0.29 ) }
    dend_48 { pt3dadd( -160.563, 50.38, -17.9282, 0.29 ) }
    dend_48 { pt3dadd( -161.671, 49.7848, -17.4088, 0.29 ) }
    dend_48 { pt3dadd( -162.76, 49.2297, -16.9696, 0.81 ) }
    dend_48 { pt3dadd( -164.203, 48.5835, -16.4125, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -165.416, 48.1423, -15.9632, 0.22 ) }
    dend_48 { pt3dadd( -166.207, 47.9227, -15.6891, 0.29 ) }
    dend_48 { pt3dadd( -167.404, 47.7568, -15.2644, 0.29 ) }
    dend_48 { pt3dadd( -168.401, 47.7291, -14.8153, 0.29 ) }
    dend_48 { pt3dadd( -169.478, 47.7877, -14.2016, 0.52 ) }
    dend_48 { pt3dadd( -170.179, 47.879, -13.7339, 0.59 ) }
    dend_48 { pt3dadd( -171.106, 48.0661, -13.0356, 0.29 ) }
    dend_48 { pt3dadd( -171.595, 48.1881, -12.6409, 0.29 ) }
    dend_48 { pt3dadd( -172.917, 48.5024, -11.4495, 0.29 ) }
    dend_48 { pt3dadd( -173.663, 48.6309, -10.7467, 0.29 ) }
    dend_48 { pt3dadd( -174.488, 48.695, -9.93585, 0.59 ) }
    dend_48 { pt3dadd( -175.271, 48.7196, -9.22185, 0.74 ) }
    dend_48 { pt3dadd( -176.422, 48.7698, -8.35368, 0.44 ) }
    dend_48 { pt3dadd( -177.387, 48.8314, -7.77873, 1.55 ) }
    dend_48 { pt3dadd( -178.066, 48.8699, -7.50852, 1.99 ) }
    dend_48 { pt3dadd( -179.954, 48.8418, -6.96696, 0.29 ) }
    dend_48 { pt3dadd( -181.235, 48.6898, -6.71968, 0.29 ) }
    dend_48 { pt3dadd( -183.023, 48.3404, -6.53466, 0.29 ) }
    dend_48 { pt3dadd( -183.686, 48.1706, -6.50914, 0.29 ) }
    dend_48 { pt3dadd( -185.066, 47.7607, -6.53646, 0.44 ) }
    dend_48 { pt3dadd( -185.933, 47.4674, -6.57837, 0.44 ) }
    dend_48 { pt3dadd( -186.938, 47.0659, -6.64002, 0.29 ) }
    dend_48 { pt3dadd( -188.224, 46.4675, -6.63106, 0.29 ) }
    dend_48 { pt3dadd( -189.062, 46.0674, -6.58799, 0.29 ) }
    dend_48 { pt3dadd( -189.923, 45.6988, -6.55055, 0.37 ) }
    dend_48 { pt3dadd( -190.703, 45.4184, -6.50677, 0.59 ) }
    dend_48 { pt3dadd( -191.611, 45.1322, -6.44397, 0.59 ) }
    dend_48 { pt3dadd( -192.697, 44.8081, -6.33399, 0.44 ) }
    dend_48 { pt3dadd( -193.594, 44.5893, -6.13024, 0.29 ) }
    dend_48 { pt3dadd( -193.945, 44.543, -6.01622, 0.88 ) }
    dend_48 { pt3dadd( -194.715, 44.4887, -5.71971, 0.88 ) }
    dend_48 { pt3dadd( -195.177, 44.4513, -5.52554, 0.88 ) }
    dend_48 { pt3dadd( -196.194, 44.3105, -5.08457, 0.29 ) }
    dend_48 { pt3dadd( -197.401, 44.0865, -4.56562, 0.29 ) }
    dend_48 { pt3dadd( -198.339, 43.936, -4.16101, 0.29 ) }
    dend_48 { pt3dadd( -199.205, 43.873, -3.79101, 0.29 ) }
    dend_48 { pt3dadd( -199.987, 43.8853, -3.45873, 0.52 ) }
    dend_48 { pt3dadd( -201.003, 43.9751, -3.03327, 0.52 ) }
    dend_48 { pt3dadd( -202.395, 44.1528, -2.48505, 0.29 ) }
    dend_48 { pt3dadd( -203.445, 44.3074, -2.11162, 0.29 ) }
    dend_48 { pt3dadd( -204.507, 44.5064, -1.73234, 0.74 ) }
    dend_48 { pt3dadd( -205.18, 44.675, -1.52294, 1.03 ) }
    dend_48 { pt3dadd( -206.054, 44.9607, -1.30247, 0.37 ) }
    dend_48 { pt3dadd( -206.932, 45.2666, -1.13934, 0.37 ) }
    dend_48 { pt3dadd( -207.685, 45.4849, -1.04227, 0.96 ) }
    dend_48 { pt3dadd( -208.258, 45.6008, -0.983689, 1.18 ) }
    dend_48 { pt3dadd( -209.741, 45.8757, -0.828319, 0.29 ) }
    dend_48 { pt3dadd( -210.621, 46.075, -0.716116, 0.29 ) }
    dend_48 { pt3dadd( -211.553, 46.3024, -0.590853, 0.29 ) }
    dend_48 { pt3dadd( -212.468, 46.5033, -0.441895, 0.37 ) }
    dend_48 { pt3dadd( -213.527, 46.6911, -0.239313, 0.37 ) }
    dend_48 { pt3dadd( -214.783, 46.9038, 0.0507674, 0.37 ) }
    dend_48 { pt3dadd( -215.781, 47.0336, 0.312784, 0.37 ) }
    dend_48 { pt3dadd( -216.837, 47.1633, 0.583992, 0.37 ) }
    dend_48 { pt3dadd( -218.25, 47.4089, 0.946345, 0.37 ) }
    dend_48 { pt3dadd( -219.376, 47.6464, 1.22678, 0.37 ) }
    dend_48 { pt3dadd( -220.371, 47.8729, 1.47507, 0.37 ) }
    dend_48 { pt3dadd( -221.568, 48.1108, 1.82192, 0.37 ) }
    dend_48 { pt3dadd( -222.756, 48.3115, 2.22584, 0.37 ) }
    dend_48 { pt3dadd( -224.134, 48.484, 2.77186, 1.4 ) }
    dend_48 { pt3dadd( -224.393, 48.5058, 2.88317, 2.06 ) }
    dend_48 { pt3dadd( -225.016, 48.521, 3.16968, 2.28 ) }
    dend_48 { pt3dadd( -226.509, 48.4553, 3.86885, 0.29 ) }
    dend_48 { pt3dadd( -227.496, 48.3322, 4.37261, 0.29 ) }
    dend_48 { pt3dadd( -228.969, 47.9732, 5.18614, 0.29 ) }
    dend_48 { pt3dadd( -229.919, 47.6556, 5.74742, 0.29 ) }
    dend_48 { pt3dadd( -230.967, 47.2375, 6.39275, 0.29 ) }
    dend_48 { pt3dadd( -232.021, 46.7494, 7.05097, 0.29 ) }
    dend_48 { pt3dadd( -233.032, 46.235, 7.68267, 0.29 ) }
    dend_48 { pt3dadd( -233.731, 45.8705, 8.14152, 0.29 ) }
    dend_48 { pt3dadd( -234.42, 45.5119, 8.61161, 0.44 ) }
    dend_48 { pt3dadd( -235.441, 45.0131, 9.2532, 0.44 ) }
    dend_48 { pt3dadd( -236.31, 44.6996, 9.74303, 0.29 ) }
    dend_48 { pt3dadd( -236.947, 44.6006, 10.0611, 0.29 ) }
    dend_48 { pt3dadd( -237.603, 44.6132, 10.3504, 0.74 ) }
    dend_48 { pt3dadd( -238.264, 44.6688, 10.6233, 0.74 ) }
    dend_48 { pt3dadd( -239.751, 44.8818, 11.2093, 0.29 ) }
    dend_48 { pt3dadd( -241.058, 45.1785, 11.727, 0.29 ) }
    dend_48 { pt3dadd( -242.463, 45.5718, 12.2848, 0.29 ) }
    dend_48 { pt3dadd( -243.526, 45.8875, 12.7063, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -122.272, 65.6781, -34.9612, 0.44 ) }
    dend_31 { pt3dadd( -123.196, 65.6123, -34.9493, 0.44 ) }
    dend_31 { pt3dadd( -123.729, 65.558, -34.9154, 0.44 ) }
    dend_31 { pt3dadd( -124.441, 65.5049, -34.8383, 0.44 ) }
    dend_31 { pt3dadd( -124.927, 65.4932, -34.7669, 0.44 ) }
    dend_31 { pt3dadd( -125.489, 65.5194, -34.6593, 0.44 ) }
    dend_31 { pt3dadd( -125.963, 65.5649, -34.5482, 0.44 ) }
    dend_31 { pt3dadd( -126.315, 65.6234, -34.4221, 0.44 ) }
    dend_31 { pt3dadd( -126.682, 65.7387, -34.2674, 0.66 ) }
    dend_31 { pt3dadd( -127.007, 65.8884, -34.1189, 0.66 ) }
    dend_31 { pt3dadd( -127.455, 66.1394, -33.9174, 0.29 ) }
    dend_31 { pt3dadd( -127.942, 66.4605, -33.7021, 0.29 ) }
    dend_31 { pt3dadd( -128.422, 66.8206, -33.491, 1.11 ) }
    dend_31 { pt3dadd( -128.564, 66.9353, -33.4291, 1.11 ) }
    dend_31 { pt3dadd( -128.976, 67.2472, -33.2551, 0.29 ) }
    dend_31 { pt3dadd( -129.226, 67.446, -33.1478, 0.29 ) }
    dend_31 { pt3dadd( -129.389, 67.5981, -33.073, 1.03 ) }
    dend_31 { pt3dadd( -129.517, 67.742, -33.0073, 1.03 ) }
    dend_31 { pt3dadd( -129.705, 67.9594, -32.9055, 1.03 ) }
    dend_31 { pt3dadd( -130.237, 68.5956, -32.597, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -130.539, 68.9706, -32.4032, 0.29 ) }
    dend_31 { pt3dadd( -130.815, 69.3032, -32.2225, 0.29 ) }
    dend_31 { pt3dadd( -131.057, 69.5572, -32.066, 0.29 ) }
    dend_31 { pt3dadd( -131.501, 69.9777, -31.781, 1.33 ) }
    dend_31 { pt3dadd( -131.658, 70.1154, -31.6838, 1.69 ) }
    dend_31 { pt3dadd( -132.275, 70.587, -31.3266, 0.37 ) }
    dend_31 { pt3dadd( -132.636, 70.8108, -31.1381, 0.37 ) }
    dend_31 { pt3dadd( -133.274, 71.1363, -30.8314, 0.37 ) }
    dend_31 { pt3dadd( -133.796, 71.3775, -30.5928, 0.37 ) }
    dend_31 { pt3dadd( -134.324, 71.6185, -30.3585, 0.37 ) }
    dend_31 { pt3dadd( -134.737, 71.8259, -30.1817, 0.37 ) }
    dend_31 { pt3dadd( -134.937, 71.9431, -30.1024, 0.81 ) }
    dend_31 { pt3dadd( -135.242, 72.1718, -30.0044, 0.81 ) }
    dend_31 { pt3dadd( -135.574, 72.5011, -29.9438, 0.52 ) }
    dend_31 { pt3dadd( -135.853, 72.7962, -29.9147, 0.52 ) }
    dend_31 { pt3dadd( -136.26, 73.1947, -29.886, 1.03 ) }
    dend_31 { pt3dadd( -136.46, 73.3861, -29.8787, 1.03 ) }
    dend_31 { pt3dadd( -136.835, 73.7132, -29.8685, 0.88 ) }
    dend_31 { pt3dadd( -137.391, 74.1408, -29.8531, 0.37 ) }
    dend_31 { pt3dadd( -138.031, 74.5687, -29.8255, 0.37 ) }
    dend_31 { pt3dadd( -138.709, 74.9921, -29.7446, 0.37 ) }
    dend_31 { pt3dadd( -139.049, 75.2039, -29.6796, 0.37 ) }
    dend_31 { pt3dadd( -139.612, 75.5587, -29.5309, 0.37 ) }
    dend_31 { pt3dadd( -139.985, 75.7975, -29.402, 1.18 ) }
    dend_31 { pt3dadd( -140.261, 75.9779, -29.2882, 1.69 ) }
    dend_31 { pt3dadd( -141.272, 76.7156, -28.8257, 0.44 ) }
    dend_31 { pt3dadd( -141.813, 77.1854, -28.5553, 0.44 ) }
    dend_31 { pt3dadd( -142.304, 77.6631, -28.3001, 0.44 ) }
    dend_31 { pt3dadd( -142.496, 77.8716, -28.1996, 0.96 ) }
    dend_31 { pt3dadd( -142.69, 78.0935, -28.1018, 1.33 ) }
    dend_31 { pt3dadd( -143.166, 78.6369, -27.8725, 0.37 ) }
    dend_31 { pt3dadd( -143.597, 79.1519, -27.6776, 0.37 ) }
    dend_31 { pt3dadd( -143.87, 79.4996, -27.5519, 0.37 ) }
    dend_31 { pt3dadd( -144.178, 79.9362, -27.404, 0.37 ) }
    dend_31 { pt3dadd( -144.563, 80.4778, -27.227, 0.37 ) }
    dend_31 { pt3dadd( -144.925, 80.9503, -27.0856, 0.37 ) }
    dend_31 { pt3dadd( -145.209, 81.2857, -26.9745, 0.59 ) }
    dend_31 { pt3dadd( -145.495, 81.6082, -26.8511, 0.59 ) }
    dend_31 { pt3dadd( -145.876, 82.0481, -26.7187, 0.29 ) }
    dend_31 { pt3dadd( -146.046, 82.2532, -26.671, 0.29 ) }
    dend_31 { pt3dadd( -146.666, 82.9468, -26.5332, 1.33 ) }
    dend_31 { pt3dadd( -146.918, 83.2029, -26.4815, 2.14 ) }
    dend_31 { pt3dadd( -147.136, 83.4005, -26.4412, 2.28 ) }
    dend_31 { pt3dadd( -147.873, 83.9777, -26.3354, 1.11 ) }
    dend_31 { pt3dadd( -148.419, 84.3338, -26.2854, 0.29 ) }
    dend_31 { pt3dadd( -149.077, 84.7408, -26.2327, 0.29 ) }
    dend_31 { pt3dadd( -149.521, 85.0061, -26.2002, 0.29 ) }
    dend_31 { pt3dadd( -149.934, 85.2657, -26.1785, 0.44 ) }
    dend_31 { pt3dadd( -150.352, 85.5559, -26.1657, 0.44 ) }
    dend_31 { pt3dadd( -150.857, 85.9472, -26.1403, 0.44 ) }
    dend_31 { pt3dadd( -151.326, 86.3716, -26.1266, 0.66 ) }
    dend_31 { pt3dadd( -151.556, 86.6258, -26.1158, 0.66 ) }
    dend_31 { pt3dadd( -151.869, 87.0238, -26.0829, 0.29 ) }
    dend_31 { pt3dadd( -152.183, 87.4985, -25.9834, 0.29 ) }
    dend_31 { pt3dadd( -152.408, 87.8869, -25.8555, 0.29 ) }
    dend_31 { pt3dadd( -152.607, 88.2604, -25.7167, 0.29 ) }
    dend_31 { pt3dadd( -152.91, 88.7847, -25.5003, 0.44 ) }
    dend_31 { pt3dadd( -153.13, 89.1333, -25.3322, 0.44 ) }
    dend_31 { pt3dadd( -153.489, 89.6655, -25.0081, 1.03 ) }
    dend_31 { pt3dadd( -153.655, 89.9278, -24.7966, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 13.9752, -63.7217, 15.3146, 0.59 ) }
    dend_11 { pt3dadd( 14.3515, -65.2583, 15.0935, 0.59 ) }
    dend_11 { pt3dadd( 14.5069, -66.3203, 14.9192, 0.59 ) }
    dend_11 { pt3dadd( 14.6418, -67.6324, 14.7092, 0.59 ) }
    dend_11 { pt3dadd( 14.7392, -68.5976, 14.5639, 0.59 ) }
    dend_11 { pt3dadd( 14.8655, -70.0541, 14.3985, 0.88 ) }
    dend_11 { pt3dadd( 14.9344, -71.4168, 14.2783, 0.88 ) }
    dend_11 { pt3dadd( 14.9039, -72.4293, 14.2191, 0.66 ) }
    dend_11 { pt3dadd( 14.735, -73.5987, 14.2195, 0.81 ) }
    dend_11 { pt3dadd( 14.4447, -74.8291, 14.2992, 0.74 ) }
    dend_11 { pt3dadd( 14.1773, -75.811, 14.4329, 0.96 ) }
    dend_11 { pt3dadd( 13.934, -76.7809, 14.6425, 0.74 ) }
    dend_11 { pt3dadd( 13.6977, -77.8342, 14.9183, 0.59 ) }
    dend_11 { pt3dadd( 13.4708, -78.9952, 15.235, 0.52 ) }
    dend_11 { pt3dadd( 13.4072, -79.3865, 15.3411, 1.03 ) }
    dend_11 { pt3dadd( 13.3217, -80.4556, 15.5771, 0.52 ) }
    dend_11 { pt3dadd( 13.3913, -81.6743, 15.7391, 0.81 ) }
    dend_11 { pt3dadd( 13.532, -82.4113, 15.7843, 1.03 ) }
    dend_11 { pt3dadd( 13.7114, -83.1146, 15.774, 1.03 ) }
    dend_11 { pt3dadd( 13.9509, -84.0438, 15.7075, 0.88 ) }
    dend_11 { pt3dadd( 14.1789, -85.0597, 15.6084, 0.74 ) }
    dend_11 { pt3dadd( 14.3035, -85.723, 15.5331, 0.74 ) }
    dend_11 { pt3dadd( 14.4345, -86.5339, 15.4368, 0.44 ) }
    dend_11 { pt3dadd( 14.6681, -87.8668, 15.2498, 0.44 ) }
    dend_11 { pt3dadd( 14.8098, -88.6868, 15.1299, 0.66 ) }
    dend_11 { pt3dadd( 14.9169, -89.2944, 15.0519, 0.66 ) }
    dend_11 { pt3dadd( 15.0591, -90.1001, 14.9493, 0.52 ) }
    dend_11 { pt3dadd( 15.2182, -91.0923, 14.8086, 0.81 ) }
    dend_11 { pt3dadd( 15.3559, -91.9765, 14.6449, 1.03 ) }
    dend_11 { pt3dadd( 15.4507, -92.5754, 14.5069, 1.03 ) }
    dend_11 { pt3dadd( 15.5541, -93.4052, 14.2983, 0.66 ) }
    dend_11 { pt3dadd( 15.6158, -94.3853, 14.0165, 0.52 ) }
    dend_11 { pt3dadd( 15.6256, -95.1841, 13.7687, 0.52 ) }
    dend_11 { pt3dadd( 15.5978, -95.8626, 13.5703, 0.52 ) }
    dend_11 { pt3dadd( 15.5488, -96.6869, 13.3597, 0.74 ) }
    dend_11 { pt3dadd( 15.5041, -97.3204, 13.213, 0.74 ) }
    dend_11 { pt3dadd( 15.3699, -98.8694, 12.9187, 0.59 ) }
    dend_11 { pt3dadd( 15.3031, -99.8072, 12.815, 0.59 ) }
    dend_11 { pt3dadd( 15.2859, -100.697, 12.7573, 0.96 ) }
    dend_11 { pt3dadd( 15.2976, -101.175, 12.7534, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 15.3365, -102.125, 12.8117, 0.59 ) }
    dend_11 { pt3dadd( 15.3729, -103.334, 12.9175, 0.44 ) }
    dend_11 { pt3dadd( 15.3906, -104.427, 13.0567, 0.44 ) }
    dend_11 { pt3dadd( 15.3996, -105.364, 13.1719, 0.44 ) }
    dend_11 { pt3dadd( 15.4249, -106.356, 13.2683, 0.44 ) }
    dend_11 { pt3dadd( 15.4877, -107.366, 13.3393, 0.44 ) }
    dend_11 { pt3dadd( 15.6576, -108.751, 13.3936, 0.59 ) }
    dend_11 { pt3dadd( 15.7517, -109.292, 13.4179, 0.81 ) }
    dend_11 { pt3dadd( 15.9414, -110.164, 13.4492, 0.44 ) }
    dend_11 { pt3dadd( 16.2046, -111.326, 13.5167, 0.44 ) }
    dend_11 { pt3dadd( 16.3798, -112.032, 13.5774, 0.81 ) }
    dend_11 { pt3dadd( 16.5756, -112.729, 13.6702, 0.81 ) }
    dend_11 { pt3dadd( 16.8905, -113.744, 13.8035, 0.81 ) }
    dend_11 { pt3dadd( 17.137, -114.483, 13.8593, 0.52 ) }
    dend_11 { pt3dadd( 17.4531, -115.396, 13.8741, 0.52 ) }
    dend_11 { pt3dadd( 17.6751, -116.123, 13.83, 0.81 ) }
    dend_11 { pt3dadd( 17.8496, -117.0, 13.7197, 1.03 ) }
    dend_11 { pt3dadd( 17.9597, -118.276, 13.5013, 0.52 ) }
    dend_11 { pt3dadd( 17.9705, -119.204, 13.3097, 0.52 ) }
    dend_11 { pt3dadd( 17.9224, -120.077, 13.1414, 0.88 ) }
    dend_11 { pt3dadd( 17.8214, -121.152, 12.9571, 0.88 ) }
    dend_11 { pt3dadd( 17.6455, -122.422, 12.7818, 0.44 ) }
    dend_11 { pt3dadd( 17.416, -123.724, 12.6473, 0.74 ) }
    dend_11 { pt3dadd( 17.3095, -124.333, 12.654, 0.74 ) }
    dend_11 { pt3dadd( 17.119, -125.446, 12.6939, 0.37 ) }
    dend_11 { pt3dadd( 16.9987, -126.263, 12.7425, 0.66 ) }
    dend_11 { pt3dadd( 16.9346, -127.044, 12.8097, 0.96 ) }
    dend_11 { pt3dadd( 16.9354, -127.964, 12.8852, 0.96 ) }
    dend_11 { pt3dadd( 17.0545, -129.993, 13.0108, 0.37 ) }
    dend_11 { pt3dadd( 17.1848, -131.234, 13.128, 0.37 ) }
    dend_11 { pt3dadd( 17.2658, -131.772, 13.2074, 0.88 ) }
    dend_11 { pt3dadd( 17.3434, -132.242, 13.2822, 0.88 ) }
    dend_11 { pt3dadd( 17.47, -133.104, 13.3814, 0.88 ) }
    dend_11 { pt3dadd( 17.5653, -133.999, 13.4292, 0.52 ) }
    dend_11 { pt3dadd( 17.6307, -135.257, 13.5303, 0.52 ) }
    dend_11 { pt3dadd( 17.6775, -136.562, 13.743, 0.44 ) }
    dend_11 { pt3dadd( 17.7087, -137.638, 13.9564, 0.52 ) }
    dend_11 { pt3dadd( 17.7336, -139.154, 14.2892, 0.74 ) }
    dend_11 { pt3dadd( 17.7336, -140.339, 14.5666, 0.74 ) }
    dend_11 { pt3dadd( 17.6636, -142.3, 15.0078, 0.59 ) }
    dend_11 { pt3dadd( 17.6006, -143.261, 15.1968, 0.59 ) }
    dend_11 { pt3dadd( 17.5059, -144.241, 15.4069, 0.44 ) }
    dend_11 { pt3dadd( 17.4137, -145.115, 15.6003, 0.44 ) }
    dend_11 { pt3dadd( 17.3649, -145.585, 15.6958, 0.81 ) }
    dend_11 { pt3dadd( 17.2845, -146.479, 15.7891, 0.81 ) }
    dend_11 { pt3dadd( 17.2256, -147.204, 15.7708, 0.74 ) }
    dend_11 { pt3dadd( 17.1462, -147.943, 15.7689, 0.59 ) }
    dend_11 { pt3dadd( 17.0122, -149.035, 15.803, 0.29 ) }
    dend_11 { pt3dadd( 16.9393, -149.577, 15.845, 0.52 ) }
    dend_11 { pt3dadd( 16.778, -150.932, 15.9704, 0.52 ) }
    dend_11 { pt3dadd( 16.7001, -151.772, 16.0682, 0.52 ) }
    dend_11 { pt3dadd( 16.5854, -153.108, 16.2718, 0.74 ) }
    dend_11 { pt3dadd( 16.523, -153.796, 16.4206, 1.11 ) }
    dend_11 { pt3dadd( 16.4404, -154.329, 16.597, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.9752, -63.7217, 15.3146, 0.52 ) }
    dend_8 { pt3dadd( 14.8865, -62.8069, 16.1301, 0.52 ) }
    dend_8 { pt3dadd( 15.3816, -62.3098, 16.5733, 0.52 ) }
    dend_8 { pt3dadd( 15.7956, -61.8942, 16.9438, 0.52 ) }
    dend_8 { pt3dadd( 16.1542, -61.5342, 17.2646, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -153.655, 89.9278, -24.7966, 0.22 ) }
    dend_37 { pt3dadd( -155.243, 92.0958, -25.0453, 0.22 ) }
    dend_37 { pt3dadd( -155.825, 92.7449, -25.235, 0.22 ) }
    dend_37 { pt3dadd( -156.307, 93.1636, -25.4344, 0.22 ) }
    dend_37 { pt3dadd( -156.849, 93.6345, -25.6441, 0.22 ) }
    dend_37 { pt3dadd( -158.055, 94.8325, -26.0672, 0.22 ) }
    dend_37 { pt3dadd( -158.986, 95.9343, -26.3853, 1.25 ) }
    dend_37 { pt3dadd( -159.364, 96.3805, -26.528, 1.55 ) }
    dend_37 { pt3dadd( -160.684, 98.0567, -26.9594, 0.37 ) }
    dend_37 { pt3dadd( -161.155, 98.7077, -27.0597, 0.37 ) }
    dend_37 { pt3dadd( -161.943, 99.8954, -27.1293, 0.37 ) }
    dend_37 { pt3dadd( -162.59, 101.038, -27.0614, 0.37 ) }
    dend_37 { pt3dadd( -163.044, 101.986, -26.9714, 0.66 ) }
    dend_37 { pt3dadd( -163.351, 102.704, -26.8986, 1.33 ) }
    dend_37 { pt3dadd( -163.938, 104.199, -26.7005, 0.52 ) }
    dend_37 { pt3dadd( -164.489, 105.498, -26.5441, 0.52 ) }
    dend_37 { pt3dadd( -164.918, 106.427, -26.434, 0.37 ) }
    dend_37 { pt3dadd( -165.328, 107.384, -26.2967, 0.37 ) }
    dend_37 { pt3dadd( -165.62, 108.201, -26.1687, 0.37 ) }
    dend_37 { pt3dadd( -166.107, 109.784, -25.8904, 2.65 ) }
    dend_37 { pt3dadd( -166.187, 110.079, -25.8322, 3.32 ) }
    dend_37 { pt3dadd( -166.325, 110.498, -25.7763, 3.32 ) }
    dend_37 { pt3dadd( -167.358, 112.882, -25.5454, 0.44 ) }
    dend_37 { pt3dadd( -168.064, 114.274, -25.4416, 0.44 ) }
    dend_37 { pt3dadd( -168.416, 114.94, -25.4132, 0.59 ) }
    dend_37 { pt3dadd( -168.729, 115.527, -25.4111, 0.59 ) }
    dend_37 { pt3dadd( -170.326, 118.44, -25.4986, 0.29 ) }
    dend_37 { pt3dadd( -171.009, 119.626, -25.587, 0.29 ) }
    dend_37 { pt3dadd( -171.674, 120.691, -25.7228, 0.29 ) }
    dend_37 { pt3dadd( -172.411, 121.819, -25.8621, 0.29 ) }
    dend_37 { pt3dadd( -172.68, 122.276, -25.9005, 0.29 ) }
    dend_37 { pt3dadd( -173.354, 123.591, -25.9214, 1.11 ) }
    dend_37 { pt3dadd( -173.713, 124.418, -25.848, 1.11 ) }
    dend_37 { pt3dadd( -174.003, 125.063, -25.793, 0.88 ) }
    dend_37 { pt3dadd( -174.766, 126.42, -25.6298, 0.52 ) }
    dend_37 { pt3dadd( -175.694, 127.729, -25.3739, 0.29 ) }
    dend_37 { pt3dadd( -176.297, 128.465, -25.1858, 0.29 ) }
    dend_37 { pt3dadd( -176.665, 128.881, -25.042, 0.66 ) }
    dend_37 { pt3dadd( -177.518, 129.789, -24.6703, 0.66 ) }
    dend_37 { pt3dadd( -178.217, 130.468, -24.3519, 0.29 ) }
    dend_37 { pt3dadd( -178.818, 130.93, -24.0793, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -180.025, 131.531, -23.6089, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -153.655, 89.9278, -24.7966, 0.37 ) }
    dend_32 { pt3dadd( -153.521, 90.7694, -23.8578, 0.37 ) }
    dend_32 { pt3dadd( -153.388, 91.7275, -22.7426, 0.37 ) }
    dend_32 { pt3dadd( -153.322, 92.3689, -21.9657, 0.37 ) }
    dend_32 { pt3dadd( -153.238, 93.6148, -20.3976, 0.37 ) }
    dend_32 { pt3dadd( -153.215, 94.5144, -19.2633, 0.52 ) }
    dend_32 { pt3dadd( -153.232, 95.4274, -18.1474, 1.18 ) }
    dend_32 { pt3dadd( -153.27, 96.0203, -17.4098, 1.18 ) }
    dend_32 { pt3dadd( -153.329, 96.4439, -16.9454, 1.18 ) }
    dend_32 { pt3dadd( -153.365, 96.7277, -16.6774, 1.03 ) }
    dend_32 { pt3dadd( -153.43, 97.3807, -16.1808, 0.44 ) }
    dend_32 { pt3dadd( -153.428, 98.2765, -15.5257, 0.88 ) }
    dend_32 { pt3dadd( -153.358, 99.6621, -14.5545, 0.37 ) }
    dend_32 { pt3dadd( -153.277, 100.936, -13.6534, 0.29 ) }
    dend_32 { pt3dadd( -153.223, 101.779, -13.0218, 0.29 ) }
    dend_32 { pt3dadd( -153.185, 102.4, -12.5089, 0.66 ) }
    dend_32 { pt3dadd( -153.112, 103.951, -11.1077, 0.37 ) }
    dend_32 { pt3dadd( -153.099, 104.827, -10.2603, 0.37 ) }
    dend_32 { pt3dadd( -153.141, 105.748, -9.35132, 0.29 ) }
    dend_32 { pt3dadd( -153.261, 106.609, -8.49127, 0.29 ) }
    dend_32 { pt3dadd( -153.486, 107.349, -7.75335, 0.29 ) }
    dend_32 { pt3dadd( -153.89, 108.294, -6.8695, 0.88 ) }
    dend_32 { pt3dadd( -154.118, 108.79, -6.46986, 0.88 ) }
    dend_32 { pt3dadd( -154.594, 109.908, -5.68477, 0.37 ) }
    dend_32 { pt3dadd( -155.09, 111.088, -4.97633, 0.37 ) }
    dend_32 { pt3dadd( -155.742, 112.735, -4.14367, 0.37 ) }
    dend_32 { pt3dadd( -156.238, 114.093, -3.50831, 0.37 ) }
    dend_32 { pt3dadd( -156.689, 115.381, -2.90055, 0.37 ) }
    dend_32 { pt3dadd( -157.007, 116.334, -2.44813, 0.37 ) }
    dend_32 { pt3dadd( -157.519, 117.895, -1.69166, 0.37 ) }
    dend_32 { pt3dadd( -158.04, 119.702, -0.8235, 0.37 ) }
    dend_32 { pt3dadd( -158.432, 121.205, -0.104716, 1.47 ) }
    dend_32 { pt3dadd( -158.612, 121.784, 0.189188, 1.69 ) }
    dend_32 { pt3dadd( -158.808, 122.373, 0.52727, 1.69 ) }
    dend_32 { pt3dadd( -159.287, 123.839, 1.43811, 0.44 ) }
    dend_32 { pt3dadd( -159.653, 124.984, 2.18873, 0.44 ) }
    dend_32 { pt3dadd( -160.036, 126.036, 2.90806, 0.44 ) }
    dend_32 { pt3dadd( -160.623, 127.494, 3.91102, 0.44 ) }
    dend_32 { pt3dadd( -161.201, 128.87, 4.87662, 0.37 ) }
    dend_32 { pt3dadd( -161.625, 129.894, 5.61431, 0.37 ) }
    dend_32 { pt3dadd( -161.837, 130.396, 5.99524, 0.37 ) }
    dend_32 { pt3dadd( -162.215, 131.165, 6.63441, 0.96 ) }
    dend_32 { pt3dadd( -162.616, 131.896, 7.2936, 1.25 ) }
    dend_32 { pt3dadd( -162.764, 132.114, 7.50479, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 16.4404, -154.329, 16.597, 0.44 ) }
    dend_15 { pt3dadd( 15.5923, -154.723, 16.7971, 0.44 ) }
    dend_15 { pt3dadd( 14.9147, -154.921, 16.9177, 0.29 ) }
    dend_15 { pt3dadd( 13.9934, -155.128, 17.0633, 0.22 ) }
    dend_15 { pt3dadd( 13.3414, -155.242, 17.1598, 0.59 ) }
    dend_15 { pt3dadd( 12.9592, -155.294, 17.2143, 0.59 ) }
    dend_15 { pt3dadd( 11.8624, -155.445, 17.3706, 0.29 ) }
    dend_15 { pt3dadd( 10.7707, -155.483, 17.5121, 0.29 ) }
    dend_15 { pt3dadd( 10.5301, -155.474, 17.536, 0.52 ) }
    dend_15 { pt3dadd( 10.1272, -155.441, 17.5529, 0.52 ) }
    dend_15 { pt3dadd( 9.79783, -155.403, 17.5644, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.4404, -154.329, 16.597, 0.37 ) }
    dend_12 { pt3dadd( 16.6036, -156.287, 16.3645, 0.37 ) }
    dend_12 { pt3dadd( 16.6573, -157.391, 16.247, 0.81 ) }
    dend_12 { pt3dadd( 16.6564, -158.029, 16.1903, 0.88 ) }
    dend_12 { pt3dadd( 16.6294, -158.699, 16.1426, 0.66 ) }
    dend_12 { pt3dadd( 16.5331, -159.941, 16.0718, 0.37 ) }
    dend_12 { pt3dadd( 16.4886, -160.408, 16.0505, 0.37 ) }
    dend_12 { pt3dadd( 16.3913, -161.215, 16.0611, 0.37 ) }
    dend_12 { pt3dadd( 16.3259, -162.191, 16.0764, 0.37 ) }
    dend_12 { pt3dadd( 16.3085, -163.075, 16.0863, 0.74 ) }
    dend_12 { pt3dadd( 16.3162, -163.931, 16.0725, 1.11 ) }
    dend_12 { pt3dadd( 16.3248, -164.677, 16.0468, 0.81 ) }
    dend_12 { pt3dadd( 16.3827, -166.084, 15.9827, 0.37 ) }
    dend_12 { pt3dadd( 16.4757, -167.712, 15.8821, 0.37 ) }
    dend_12 { pt3dadd( 16.4871, -168.756, 15.7972, 0.37 ) }
    dend_12 { pt3dadd( 16.4365, -169.831, 15.6917, 0.37 ) }
    dend_12 { pt3dadd( 16.3737, -170.457, 15.6185, 0.96 ) }
    dend_12 { pt3dadd( 16.2829, -170.956, 15.5525, 0.96 ) }
    dend_12 { pt3dadd( 16.0086, -171.965, 15.414, 0.44 ) }
    dend_12 { pt3dadd( 15.6116, -173.25, 15.2399, 0.37 ) }
    dend_12 { pt3dadd( 15.4555, -173.961, 15.133, 0.37 ) }
    dend_12 { pt3dadd( 15.4028, -174.506, 15.0538, 1.11 ) }
    dend_12 { pt3dadd( 15.387, -175.31, 14.9319, 0.88 ) }
    dend_12 { pt3dadd( 15.4083, -176.441, 14.7652, 0.66 ) }
    dend_12 { pt3dadd( 15.4869, -177.898, 14.5657, 0.52 ) }
    dend_12 { pt3dadd( 15.5773, -179.181, 14.4015, 0.52 ) }
    dend_12 { pt3dadd( 15.627, -180.332, 14.2666, 0.52 ) }
    dend_12 { pt3dadd( 15.6312, -181.718, 14.1073, 0.81 ) }
    dend_12 { pt3dadd( 15.5979, -182.404, 14.0282, 0.96 ) }
    dend_12 { pt3dadd( 15.5126, -183.208, 13.9412, 0.96 ) }
    dend_12 { pt3dadd( 15.3762, -184.071, 13.8554, 0.81 ) }
    dend_12 { pt3dadd( 15.1847, -185.124, 13.7344, 0.44 ) }
    dend_12 { pt3dadd( 14.9942, -186.293, 13.5547, 0.29 ) }
    dend_12 { pt3dadd( 14.9187, -186.982, 13.4185, 0.29 ) }
    dend_12 { pt3dadd( 14.8406, -187.7, 13.2574, 0.29 ) }
    dend_12 { pt3dadd( 14.707, -188.605, 13.0341, 0.29 ) }
    dend_12 { pt3dadd( 14.5196, -189.655, 12.722, 1.03 ) }
    dend_12 { pt3dadd( 14.461, -189.941, 12.6219, 1.47 ) }
    dend_12 { pt3dadd( 14.1775, -191.428, 12.059, 0.44 ) }
    dend_12 { pt3dadd( 13.9927, -192.481, 11.6354, 0.37 ) }
    dend_12 { pt3dadd( 13.7964, -193.551, 11.1996, 0.37 ) }
    dend_12 { pt3dadd( 13.5641, -194.8, 10.6848, 0.29 ) }
    dend_12 { pt3dadd( 13.3456, -196.004, 10.1833, 0.29 ) }
    dend_12 { pt3dadd( 13.231, -196.717, 9.87881, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 13.0697, -197.896, 9.35824, 0.29 ) }
    dend_12 { pt3dadd( 12.9458, -199.355, 8.70283, 0.66 ) }
    dend_12 { pt3dadd( 12.9073, -200.236, 8.32338, 1.18 ) }
    dend_12 { pt3dadd( 12.8787, -201.013, 8.03118, 1.18 ) }
    dend_12 { pt3dadd( 12.858, -201.546, 7.84399, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.1542, -61.5342, 17.2646, 0.44 ) }
    dend_10 { pt3dadd( 16.317, -61.6913, 18.3193, 0.44 ) }
    dend_10 { pt3dadd( 16.5768, -62.0452, 20.4552, 1.11 ) }
    dend_10 { pt3dadd( 17.0668, -62.6733, 23.8428, 0.44 ) }
    dend_10 { pt3dadd( 18.1496, -63.8645, 29.9764, 0.88 ) }
    dend_10 { pt3dadd( 18.5616, -64.2733, 31.9622, 1.25 ) }
    dend_10 { pt3dadd( 18.8456, -64.5551, 33.331, 0.88 ) }
    dend_10 { pt3dadd( 19.1263, -64.8277, 34.7237, 0.74 ) }
    dend_10 { pt3dadd( 20.1757, -65.7383, 39.3242, 0.37 ) }
    dend_10 { pt3dadd( 20.4911, -65.9962, 40.3988, 0.66 ) }
    dend_10 { pt3dadd( 20.799, -66.2878, 41.2109, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.1542, -61.5342, 17.2646, 0.44 ) }
    dend_9 { pt3dadd( 16.4001, -61.6196, 18.2149, 0.44 ) }
    dend_9 { pt3dadd( 18.5302, -62.3588, 26.4456, 0.44 ) }
    dend_9 { pt3dadd( 18.8086, -62.4554, 27.5211, 0.37 ) }
    dend_9 { pt3dadd( 18.9831, -62.5159, 28.1954, 0.37 ) }
    dend_9 { pt3dadd( 19.1128, -62.5609, 28.6965, 0.74 ) }
    dend_9 { pt3dadd( 19.2176, -62.5973, 29.1015, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -180.025, 131.531, -23.6089, 0.59 ) }
    dend_43 { pt3dadd( -180.84, 132.369, -23.2438, 0.59 ) }
    dend_43 { pt3dadd( -181.884, 133.076, -22.8491, 0.37 ) }
    dend_43 { pt3dadd( -182.882, 133.584, -22.5066, 0.37 ) }
    dend_43 { pt3dadd( -183.954, 134.085, -22.1386, 0.37 ) }
    dend_43 { pt3dadd( -185.443, 134.778, -21.6133, 0.37 ) }
    dend_43 { pt3dadd( -186.628, 135.335, -21.183, 0.37 ) }
    dend_43 { pt3dadd( -187.993, 135.929, -20.6355, 0.37 ) }
    dend_43 { pt3dadd( -189.05, 136.352, -20.2173, 0.37 ) }
    dend_43 { pt3dadd( -190.216, 136.811, -19.7426, 0.37 ) }
    dend_43 { pt3dadd( -190.989, 137.167, -19.4448, 0.37 ) }
    dend_43 { pt3dadd( -191.498, 137.525, -19.2475, 1.03 ) }
    dend_43 { pt3dadd( -191.785, 137.799, -19.1282, 1.33 ) }
    dend_43 { pt3dadd( -192.406, 138.495, -18.8469, 1.11 ) }
    dend_43 { pt3dadd( -193.259, 139.48, -18.4583, 0.37 ) }
    dend_43 { pt3dadd( -194.194, 140.564, -18.0336, 0.37 ) }
    dend_43 { pt3dadd( -195.377, 141.966, -17.5032, 0.29 ) }
    dend_43 { pt3dadd( -196.292, 143.076, -17.0952, 0.29 ) }
    dend_43 { pt3dadd( -197.052, 144.018, -16.7553, 0.52 ) }
    dend_43 { pt3dadd( -197.793, 144.966, -16.4174, 1.55 ) }
    dend_43 { pt3dadd( -198.098, 145.378, -16.2654, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -180.025, 131.531, -23.6089, 0.52 ) }
    dend_38 { pt3dadd( -180.654, 132.833, -24.2555, 0.52 ) }
    dend_38 { pt3dadd( -181.156, 134.132, -24.9887, 0.52 ) }
    dend_38 { pt3dadd( -181.544, 135.345, -25.6442, 0.52 ) }
    dend_38 { pt3dadd( -181.85, 136.434, -26.1843, 1.25 ) }
    dend_38 { pt3dadd( -182.719, 139.697, -27.6695, 2.28 ) }
    dend_38 { pt3dadd( -182.926, 140.434, -27.9916, 2.28 ) }
    dend_38 { pt3dadd( -183.666, 143.042, -29.2103, 0.29 ) }
    dend_38 { pt3dadd( -183.984, 144.177, -29.7719, 0.44 ) }
    dend_38 { pt3dadd( -184.239, 145.154, -30.2306, 0.44 ) }
    dend_38 { pt3dadd( -184.486, 146.128, -30.6216, 0.44 ) }
    dend_38 { pt3dadd( -184.681, 146.978, -30.8395, 0.44 ) }
    dend_38 { pt3dadd( -185.202, 148.705, -31.2828, 0.29 ) }
    dend_38 { pt3dadd( -185.578, 149.572, -31.4759, 1.03 ) }
    dend_38 { pt3dadd( -185.969, 150.346, -31.6312, 1.55 ) }
    dend_38 { pt3dadd( -186.572, 151.548, -31.853, 0.88 ) }
    dend_38 { pt3dadd( -187.2, 152.951, -32.0721, 0.52 ) }
    dend_38 { pt3dadd( -187.694, 154.196, -32.21, 0.52 ) }
    dend_38 { pt3dadd( -188.11, 155.18, -32.2381, 0.52 ) }
    dend_38 { pt3dadd( -188.747, 156.636, -32.2169, 0.52 ) }
    dend_38 { pt3dadd( -189.132, 157.607, -32.1509, 0.52 ) }
    dend_38 { pt3dadd( -189.484, 158.548, -32.0519, 0.52 ) }
    dend_38 { pt3dadd( -189.781, 159.469, -31.9369, 0.52 ) }
    dend_38 { pt3dadd( -190.192, 161.135, -31.6926, 0.52 ) }
    dend_38 { pt3dadd( -190.55, 162.86, -31.4459, 0.52 ) }
    dend_38 { pt3dadd( -190.901, 164.465, -31.1785, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -162.764, 132.114, 7.50479, 0.29 ) }
    dend_36 { pt3dadd( -164.635, 133.003, 8.62873, 0.29 ) }
    dend_36 { pt3dadd( -165.545, 133.435, 9.17538, 0.29 ) }
    dend_36 { pt3dadd( -166.21, 133.752, 9.57527, 0.29 ) }
    dend_36 { pt3dadd( -166.71, 133.989, 9.87583, 0.74 ) }
    dend_36 { pt3dadd( -167.121, 134.185, 10.1226, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -162.764, 132.114, 7.50479, 0.29 ) }
    dend_33 { pt3dadd( -163.033, 132.537, 7.9545, 0.29 ) }
    dend_33 { pt3dadd( -163.178, 132.773, 8.19144, 0.29 ) }
    dend_33 { pt3dadd( -163.475, 133.44, 8.77028, 0.29 ) }
    dend_33 { pt3dadd( -163.561, 133.701, 8.97215, 0.74 ) }
    dend_33 { pt3dadd( -163.662, 133.975, 9.17761, 0.74 ) }
    dend_33 { pt3dadd( -163.92, 134.595, 9.63189, 0.37 ) }
    dend_33 { pt3dadd( -164.107, 135.038, 9.93185, 0.29 ) }
    dend_33 { pt3dadd( -164.379, 135.76, 10.3742, 0.37 ) }
    dend_33 { pt3dadd( -164.554, 136.273, 10.6571, 0.37 ) }
    dend_33 { pt3dadd( -164.876, 137.178, 11.1786, 0.29 ) }
    dend_33 { pt3dadd( -165.106, 137.766, 11.5435, 0.29 ) }
    dend_33 { pt3dadd( -165.407, 138.409, 11.9875, 0.29 ) }
    dend_33 { pt3dadd( -165.779, 138.999, 12.4564, 0.29 ) }
    dend_33 { pt3dadd( -166.081, 139.38, 12.8002, 0.29 ) }
    dend_33 { pt3dadd( -166.485, 139.853, 13.2854, 0.29 ) }
    dend_33 { pt3dadd( -166.775, 140.203, 13.6848, 0.29 ) }
    dend_33 { pt3dadd( -167.067, 140.561, 14.1271, 0.29 ) }
    dend_33 { pt3dadd( -167.279, 140.822, 14.4921, 0.29 ) }
    dend_33 { pt3dadd( -167.54, 141.18, 14.9957, 1.03 ) }
    dend_33 { pt3dadd( -167.714, 141.5, 15.4043, 1.33 ) }
    dend_33 { pt3dadd( -167.834, 141.832, 15.7712, 1.33 ) }
    dend_33 { pt3dadd( -168.007, 142.479, 16.4487, 0.29 ) }
    dend_33 { pt3dadd( -168.165, 143.071, 17.0857, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -168.342, 143.591, 17.6996, 0.29 ) }
    dend_33 { pt3dadd( -168.499, 143.939, 18.1657, 0.29 ) }
    dend_33 { pt3dadd( -168.739, 144.342, 18.7789, 0.29 ) }
    dend_33 { pt3dadd( -168.875, 144.532, 19.1094, 0.29 ) }
    dend_33 { pt3dadd( -169.181, 144.907, 19.8436, 0.29 ) }
    dend_33 { pt3dadd( -169.488, 145.257, 20.5557, 0.74 ) }
    dend_33 { pt3dadd( -169.7, 145.478, 21.0684, 0.88 ) }
    dend_33 { pt3dadd( -170.0, 145.799, 21.8177, 0.44 ) }
    dend_33 { pt3dadd( -170.162, 145.992, 22.2442, 0.44 ) }
    dend_33 { pt3dadd( -170.374, 146.322, 22.8607, 0.96 ) }
    dend_33 { pt3dadd( -170.537, 146.624, 23.3225, 1.25 ) }
    dend_33 { pt3dadd( -170.924, 147.33, 24.2343, 0.29 ) }
    dend_33 { pt3dadd( -171.163, 147.729, 24.6719, 0.37 ) }
    dend_33 { pt3dadd( -171.327, 147.988, 24.9477, 0.37 ) }
    dend_33 { pt3dadd( -171.606, 148.415, 25.4756, 0.37 ) }
    dend_33 { pt3dadd( -171.941, 148.915, 26.0871, 0.37 ) }
    dend_33 { pt3dadd( -172.137, 149.22, 26.4476, 0.37 ) }
    dend_33 { pt3dadd( -172.37, 149.567, 26.8459, 0.37 ) }
    dend_33 { pt3dadd( -172.984, 150.363, 27.9405, 1.33 ) }
    dend_33 { pt3dadd( -173.439, 150.942, 28.9259, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.858, -201.546, 7.84399, 0.29 ) }
    dend_14 { pt3dadd( 11.7456, -202.611, 7.87078, 0.29 ) }
    dend_14 { pt3dadd( 11.0668, -203.398, 7.98793, 0.29 ) }
    dend_14 { pt3dadd( 10.7348, -203.922, 8.07471, 0.74 ) }
    dend_14 { pt3dadd( 10.3346, -204.617, 8.18982, 0.29 ) }
    dend_14 { pt3dadd( 10.0376, -205.182, 8.24843, 0.29 ) }
    dend_14 { pt3dadd( 9.31404, -206.558, 8.39124, 0.59 ) }
    dend_14 { pt3dadd( 9.14881, -206.971, 8.44656, 0.74 ) }
    dend_14 { pt3dadd( 8.59083, -208.523, 8.70223, 0.37 ) }
    dend_14 { pt3dadd( 8.27604, -209.333, 8.83711, 0.96 ) }
    dend_14 { pt3dadd( 7.91526, -210.146, 8.94781, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 12.858, -201.546, 7.84399, 0.37 ) }
    dend_13 { pt3dadd( 13.9356, -201.723, 8.14649, 0.37 ) }
    dend_13 { pt3dadd( 14.678, -201.934, 8.37731, 0.37 ) }
    dend_13 { pt3dadd( 15.4192, -202.216, 8.78459, 0.37 ) }
    dend_13 { pt3dadd( 15.9214, -202.428, 9.29557, 0.29 ) }
    dend_13 { pt3dadd( 16.4892, -202.636, 10.0927, 0.29 ) }
    dend_13 { pt3dadd( 17.024, -202.831, 10.8434, 0.52 ) }
    dend_13 { pt3dadd( 17.2776, -202.938, 11.3503, 0.52 ) }
    dend_13 { pt3dadd( 17.9037, -203.308, 13.1558, 1.11 ) }
    dend_13 { pt3dadd( 18.3238, -203.677, 15.0706, 0.59 ) }
    dend_13 { pt3dadd( 18.3957, -203.763, 15.7971, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -198.098, 145.378, -16.2654, 0.37 ) }
    dend_45 { pt3dadd( -198.811, 146.343, -15.4531, 0.37 ) }
    dend_45 { pt3dadd( -199.462, 147.223, -14.712, 0.37 ) }
    dend_45 { pt3dadd( -199.943, 147.874, -14.1638, 0.37 ) }
    dend_45 { pt3dadd( -200.763, 148.984, -13.2295, 1.18 ) }
    dend_45 { pt3dadd( -201.154, 149.513, -12.7839, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -198.098, 145.378, -16.2654, 0.29 ) }
    dend_44 { pt3dadd( -199.716, 145.381, -17.0808, 0.29 ) }
    dend_44 { pt3dadd( -200.979, 145.403, -17.6802, 0.52 ) }
    dend_44 { pt3dadd( -202.911, 145.401, -18.492, 1.03 ) }
    dend_44 { pt3dadd( -203.944, 145.396, -18.8763, 1.03 ) }
    dend_44 { pt3dadd( -204.899, 145.407, -19.2033, 0.88 ) }
    dend_44 { pt3dadd( -206.263, 145.485, -19.631, 0.81 ) }
    dend_44 { pt3dadd( -207.11, 145.598, -19.9062, 0.29 ) }
    dend_44 { pt3dadd( -208.078, 145.777, -20.1668, 0.29 ) }
    dend_44 { pt3dadd( -209.011, 145.944, -20.3479, 0.29 ) }
    dend_44 { pt3dadd( -209.507, 145.978, -20.5201, 0.52 ) }
    dend_44 { pt3dadd( -210.651, 146.026, -21.0223, 0.52 ) }
    dend_44 { pt3dadd( -212.05, 146.054, -21.6905, 1.18 ) }
    dend_44 { pt3dadd( -212.551, 146.051, -21.9318, 1.47 ) }
    dend_44 { pt3dadd( -213.272, 146.051, -22.2607, 1.47 ) }
    dend_44 { pt3dadd( -216.592, 146.019, -23.6127, 0.52 ) }
    dend_44 { pt3dadd( -217.658, 145.97, -23.9691, 0.29 ) }
    dend_44 { pt3dadd( -218.94, 145.892, -24.3073, 0.29 ) }
    dend_44 { pt3dadd( -220.849, 145.845, -24.6177, 0.29 ) }
    dend_44 { pt3dadd( -222.443, 145.837, -24.7509, 0.29 ) }
    dend_44 { pt3dadd( -223.566, 145.817, -24.7603, 0.29 ) }
    dend_44 { pt3dadd( -225.271, 145.733, -24.6167, 0.29 ) }
    dend_44 { pt3dadd( -225.993, 145.679, -24.5565, 0.29 ) }
    dend_44 { pt3dadd( -227.201, 145.607, -24.4368, 0.88 ) }
    dend_44 { pt3dadd( -227.841, 145.584, -24.3614, 1.25 ) }
    dend_44 { pt3dadd( -229.826, 145.504, -24.1719, 0.37 ) }
    dend_44 { pt3dadd( -230.796, 145.453, -24.2212, 0.29 ) }
    dend_44 { pt3dadd( -231.664, 145.407, -24.3811, 0.74 ) }
    dend_44 { pt3dadd( -232.302, 145.364, -24.52, 0.74 ) }
    dend_44 { pt3dadd( -233.551, 145.279, -24.8111, 0.37 ) }
    dend_44 { pt3dadd( -234.728, 145.2, -25.1172, 0.37 ) }
    dend_44 { pt3dadd( -237.342, 145.033, -25.8903, 0.37 ) }
    dend_44 { pt3dadd( -238.165, 144.953, -26.1286, 0.37 ) }
    dend_44 { pt3dadd( -239.788, 144.739, -26.5416, 0.29 ) }
    dend_44 { pt3dadd( -240.559, 144.603, -26.6966, 0.29 ) }
    dend_44 { pt3dadd( -242.264, 144.172, -26.878, 0.66 ) }
    dend_44 { pt3dadd( -243.731, 143.724, -26.9178, 0.74 ) }
    dend_44 { pt3dadd( -245.175, 143.247, -26.8371, 0.52 ) }
    dend_44 { pt3dadd( -246.195, 142.889, -26.7725, 0.96 ) }
    dend_44 { pt3dadd( -247.139, 142.55, -26.7258, 0.96 ) }
    dend_44 { pt3dadd( -248.818, 141.957, -26.584, 0.29 ) }
    dend_44 { pt3dadd( -250.053, 141.548, -26.3947, 0.96 ) }
    dend_44 { pt3dadd( -250.779, 141.333, -26.2679, 1.11 ) }
    dend_44 { pt3dadd( -252.015, 141.12, -26.0804, 0.44 ) }
    dend_44 { pt3dadd( -252.957, 141.109, -25.9333, 0.44 ) }
    dend_44 { pt3dadd( -254.133, 141.31, -25.7446, 0.44 ) }
    dend_44 { pt3dadd( -255.154, 141.617, -25.5606, 0.44 ) }
    dend_44 { pt3dadd( -255.922, 141.866, -25.3993, 0.44 ) }
    dend_44 { pt3dadd( -257.185, 142.196, -25.1524, 0.44 ) }
    dend_44 { pt3dadd( -258.088, 142.347, -25.0203, 0.44 ) }
    dend_44 { pt3dadd( -259.68, 142.518, -24.8076, 0.44 ) }
    dend_44 { pt3dadd( -260.619, 142.597, -24.6989, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -261.775, 142.654, -24.5809, 0.81 ) }
    dend_44 { pt3dadd( -263.36, 142.681, -24.4287, 0.52 ) }
    dend_44 { pt3dadd( -264.99, 142.697, -24.2784, 0.37 ) }
    dend_44 { pt3dadd( -265.791, 142.727, -24.2312, 0.37 ) }
    dend_44 { pt3dadd( -266.681, 142.789, -24.2143, 1.03 ) }
    dend_44 { pt3dadd( -267.997, 142.938, -24.2785, 1.47 ) }
    dend_44 { pt3dadd( -268.779, 143.075, -24.3633, 1.47 ) }
    dend_44 { pt3dadd( -269.731, 143.329, -24.5186, 0.44 ) }
    dend_44 { pt3dadd( -271.661, 143.805, -24.9768, 0.29 ) }
    dend_44 { pt3dadd( -273.293, 144.066, -25.4968, 0.29 ) }
    dend_44 { pt3dadd( -275.267, 144.208, -26.315, 0.29 ) }
    dend_44 { pt3dadd( -276.649, 144.243, -26.9717, 0.52 ) }
    dend_44 { pt3dadd( -278.343, 144.274, -27.7784, 0.74 ) }
    dend_44 { pt3dadd( -280.432, 144.385, -28.7483, 0.59 ) }
    dend_44 { pt3dadd( -281.704, 144.547, -29.3467, 0.59 ) }
    dend_44 { pt3dadd( -283.721, 144.894, -30.2782, 0.37 ) }
    dend_44 { pt3dadd( -285.111, 145.11, -30.8307, 0.37 ) }
    dend_44 { pt3dadd( -286.57, 145.274, -31.2934, 0.37 ) }
    dend_44 { pt3dadd( -288.142, 145.353, -31.6529, 0.37 ) }
    dend_44 { pt3dadd( -290.068, 145.401, -31.8958, 0.59 ) }
    dend_44 { pt3dadd( -291.238, 145.277, -31.9479, 0.59 ) }
    dend_44 { pt3dadd( -292.86, 144.711, -31.8384, 2.06 ) }
    dend_44 { pt3dadd( -293.441, 144.346, -31.7656, 2.87 ) }
    dend_44 { pt3dadd( -294.563, 143.311, -31.5715, 2.5 ) }
    dend_44 { pt3dadd( -295.405, 142.314, -31.3488, 1.55 ) }
    dend_44 { pt3dadd( -296.223, 141.154, -31.0471, 0.37 ) }
    dend_44 { pt3dadd( -296.632, 140.484, -30.8867, 0.37 ) }
    dend_44 { pt3dadd( -297.289, 139.272, -30.6182, 0.37 ) }
    dend_44 { pt3dadd( -297.994, 138.007, -30.3331, 0.37 ) }
    dend_44 { pt3dadd( -298.859, 136.38, -29.9952, 0.37 ) }
    dend_44 { pt3dadd( -299.081, 135.955, -29.9226, 0.66 ) }
    dend_44 { pt3dadd( -299.514, 135.147, -29.7997, 0.44 ) }
    dend_44 { pt3dadd( -300.004, 134.259, -29.6782, 0.37 ) }
    dend_44 { pt3dadd( -300.692, 133.073, -29.4495, 0.37 ) }
    dend_44 { pt3dadd( -301.308, 132.129, -29.213, 0.37 ) }
    dend_44 { pt3dadd( -302.077, 131.01, -28.881, 0.37 ) }
    dend_44 { pt3dadd( -302.661, 130.225, -28.5987, 0.59 ) }
    dend_44 { pt3dadd( -303.241, 129.521, -28.3068, 0.59 ) }
    dend_44 { pt3dadd( -304.226, 128.402, -27.7817, 0.37 ) }
    dend_44 { pt3dadd( -305.036, 127.526, -27.3155, 0.66 ) }
    dend_44 { pt3dadd( -305.668, 126.944, -26.9173, 0.66 ) }
    dend_44 { pt3dadd( -306.179, 126.521, -26.5373, 0.66 ) }
    dend_44 { pt3dadd( -306.695, 126.144, -26.1184, 0.37 ) }
    dend_44 { pt3dadd( -307.207, 125.833, -25.6903, 0.74 ) }
    dend_44 { pt3dadd( -307.667, 125.61, -25.3073, 0.74 ) }
    dend_44 { pt3dadd( -308.628, 125.213, -24.4315, 0.52 ) }
    dend_44 { pt3dadd( -309.992, 124.743, -23.2026, 0.29 ) }
    dend_44 { pt3dadd( -310.867, 124.402, -22.4289, 0.29 ) }
    dend_44 { pt3dadd( -311.579, 124.053, -21.8206, 1.47 ) }
    dend_44 { pt3dadd( -312.093, 123.736, -21.4149, 1.99 ) }
    dend_44 { pt3dadd( -312.639, 123.293, -21.023, 1.99 ) }
    dend_44 { pt3dadd( -314.019, 121.979, -20.154, 0.29 ) }
    dend_44 { pt3dadd( -315.19, 120.808, -19.5319, 0.29 ) }
    dend_44 { pt3dadd( -316.246, 119.667, -19.0129, 0.29 ) }
    dend_44 { pt3dadd( -317.15, 118.678, -18.5935, 0.29 ) }
    dend_44 { pt3dadd( -318.457, 117.325, -18.0353, 0.29 ) }
    dend_44 { pt3dadd( -319.224, 116.566, -17.7612, 0.44 ) }
    dend_44 { pt3dadd( -320.376, 115.481, -17.467, 0.44 ) }
    dend_44 { pt3dadd( -321.49, 114.577, -17.2479, 0.44 ) }
    dend_44 { pt3dadd( -322.802, 113.648, -17.0181, 0.44 ) }
    dend_44 { pt3dadd( -324.057, 112.844, -16.7976, 0.44 ) }
    dend_44 { pt3dadd( -325.418, 111.993, -16.5578, 0.44 ) }
    dend_44 { pt3dadd( -327.062, 110.912, -16.2466, 0.44 ) }
    dend_44 { pt3dadd( -328.29, 110.079, -15.9961, 0.44 ) }
    dend_44 { pt3dadd( -329.927, 108.967, -15.7226, 0.44 ) }
    dend_44 { pt3dadd( -331.003, 108.166, -15.5934, 1.62 ) }
    dend_44 { pt3dadd( -331.598, 107.707, -15.5255, 2.5 ) }
    dend_44 { pt3dadd( -332.03, 107.387, -15.4675, 2.5 ) }
    dend_44 { pt3dadd( -334.345, 105.621, -15.1699, 0.37 ) }
    dend_44 { pt3dadd( -335.448, 104.681, -15.0781, 0.37 ) }
    dend_44 { pt3dadd( -336.576, 103.653, -15.0436, 0.37 ) }
    dend_44 { pt3dadd( -337.496, 102.764, -14.9833, 0.81 ) }
    dend_44 { pt3dadd( -338.341, 101.969, -14.8492, 0.37 ) }
    dend_44 { pt3dadd( -339.002, 101.407, -14.6558, 0.52 ) }
    dend_44 { pt3dadd( -339.478, 101.069, -14.3999, 0.81 ) }
    dend_44 { pt3dadd( -340.096, 100.7, -13.9747, 0.81 ) }
    dend_44 { pt3dadd( -341.406, 100.032, -13.084, 0.37 ) }
    dend_44 { pt3dadd( -342.523, 99.4159, -12.3618, 0.37 ) }
    dend_44 { pt3dadd( -343.666, 98.7091, -11.659, 0.37 ) }
    dend_44 { pt3dadd( -344.51, 98.1363, -11.1108, 0.37 ) }
    dend_44 { pt3dadd( -345.502, 97.4144, -10.447, 0.37 ) }
    dend_44 { pt3dadd( -347.239, 96.0078, -9.27011, 0.29 ) }
    dend_44 { pt3dadd( -348.181, 95.0712, -8.66, 0.29 ) }
    dend_44 { pt3dadd( -348.971, 93.9933, -8.12972, 0.29 ) }
    dend_44 { pt3dadd( -349.634, 92.6665, -7.61031, 0.88 ) }
    dend_44 { pt3dadd( -349.905, 91.8509, -7.31969, 0.88 ) }
    dend_44 { pt3dadd( -350.154, 90.6639, -6.90514, 0.29 ) }
    dend_44 { pt3dadd( -350.373, 88.9143, -6.29086, 0.29 ) }
    dend_44 { pt3dadd( -350.59, 86.9969, -5.61823, 0.37 ) }
    dend_44 { pt3dadd( -350.86, 84.5577, -4.78544, 0.66 ) }
    dend_44 { pt3dadd( -351.073, 83.0076, -4.29216, 0.66 ) }
    dend_44 { pt3dadd( -351.229, 82.004, -3.96253, 0.22 ) }
    dend_44 { pt3dadd( -351.347, 81.289, -3.71966, 0.59 ) }
    dend_44 { pt3dadd( -351.508, 80.5082, -3.4393, 0.81 ) }
    dend_44 { pt3dadd( -351.629, 80.0403, -3.27024, 0.81 ) }
    dend_44 { pt3dadd( -352.192, 78.0973, -2.52193, 0.29 ) }
    dend_44 { pt3dadd( -352.316, 77.5621, -2.32759, 0.29 ) }
    dend_44 { pt3dadd( -352.486, 76.3212, -1.90388, 0.52 ) }
    dend_44 { pt3dadd( -352.508, 75.5714, -1.62309, 0.52 ) }
    dend_44 { pt3dadd( -352.496, 74.5237, -1.19757, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -352.484, 72.3678, -0.22996, 0.66 ) }
    dend_44 { pt3dadd( -352.526, 70.9918, 0.46078, 0.52 ) }
    dend_44 { pt3dadd( -352.599, 70.079, 1.01706, 0.96 ) }
    dend_44 { pt3dadd( -352.862, 68.4259, 2.20883, 0.66 ) }
    dend_44 { pt3dadd( -353.109, 67.3564, 3.07818, 0.29 ) }
    dend_44 { pt3dadd( -353.603, 65.9687, 4.33511, 0.29 ) }
    dend_44 { pt3dadd( -354.072, 65.0516, 5.22589, 0.29 ) }
    dend_44 { pt3dadd( -355.075, 63.3784, 6.93736, 0.29 ) }
    dend_44 { pt3dadd( -355.454, 62.7954, 7.52704, 1.47 ) }
    dend_44 { pt3dadd( -355.725, 62.3955, 7.91367, 1.77 ) }
    dend_44 { pt3dadd( -356.677, 61.0159, 9.30026, 0.37 ) }
    dend_44 { pt3dadd( -357.659, 59.6567, 10.667, 0.37 ) }
    dend_44 { pt3dadd( -358.193, 58.9065, 11.4006, 0.66 ) }
    dend_44 { pt3dadd( -358.728, 58.122, 12.1768, 0.66 ) }
    dend_44 { pt3dadd( -359.114, 57.4904, 12.8523, 0.59 ) }
    dend_44 { pt3dadd( -359.933, 56.1525, 14.4935, 0.37 ) }
    dend_44 { pt3dadd( -360.465, 55.3051, 15.7122, 0.37 ) }
    dend_44 { pt3dadd( -361.009, 54.4413, 17.075, 0.37 ) }
    dend_44 { pt3dadd( -361.566, 53.4772, 18.6842, 0.96 ) }
    dend_44 { pt3dadd( -361.922, 52.7172, 19.9691, 0.22 ) }
    dend_44 { pt3dadd( -362.243, 51.8595, 21.3703, 0.22 ) }
    dend_44 { pt3dadd( -362.378, 51.3912, 22.0738, 0.22 ) }
    dend_44 { pt3dadd( -362.59, 50.6755, 23.1025, 0.52 ) }
    dend_44 { pt3dadd( -363.008, 49.4575, 24.6353, 0.74 ) }
    dend_44 { pt3dadd( -363.376, 48.6344, 25.571, 0.66 ) }
    dend_44 { pt3dadd( -363.978, 47.4394, 26.8661, 0.29 ) }
    dend_44 { pt3dadd( -364.452, 46.5639, 27.7551, 0.96 ) }
    dend_44 { pt3dadd( -364.687, 46.2073, 28.1237, 1.33 ) }
    dend_44 { pt3dadd( -365.802, 44.9176, 29.6085, 0.37 ) }
    dend_44 { pt3dadd( -366.842, 43.7922, 30.9249, 0.37 ) }
    dend_44 { pt3dadd( -367.366, 43.207, 31.6127, 0.37 ) }
    dend_44 { pt3dadd( -368.391, 42.0378, 33.0941, 0.37 ) }
    dend_44 { pt3dadd( -369.044, 41.2503, 34.1452, 0.37 ) }
    dend_44 { pt3dadd( -370.187, 39.6722, 36.2421, 0.37 ) }
    dend_44 { pt3dadd( -370.857, 38.5507, 37.6725, 0.37 ) }
    dend_44 { pt3dadd( -371.259, 37.5908, 38.8635, 0.37 ) }
    dend_44 { pt3dadd( -371.594, 36.4455, 40.3849, 1.11 ) }
    dend_44 { pt3dadd( -371.702, 35.9577, 41.0955, 1.11 ) }
    dend_44 { pt3dadd( -371.812, 35.0843, 42.3012, 0.44 ) }
    dend_44 { pt3dadd( -371.89, 34.4384, 43.2046, 0.29 ) }
    dend_44 { pt3dadd( -372.163, 33.1929, 45.0474, 0.29 ) }
    dend_44 { pt3dadd( -372.374, 32.0194, 46.7669, 0.81 ) }
    dend_44 { pt3dadd( -372.552, 30.5823, 48.6978, 0.52 ) }
    dend_44 { pt3dadd( -372.702, 29.3301, 50.2452, 0.52 ) }
    dend_44 { pt3dadd( -372.772, 28.2619, 51.5084, 0.52 ) }
    dend_44 { pt3dadd( -372.759, 27.6624, 52.2428, 0.81 ) }
    dend_44 { pt3dadd( -372.667, 26.1729, 54.0162, 0.44 ) }
    dend_44 { pt3dadd( -372.579, 25.3321, 55.0519, 0.37 ) }
    dend_44 { pt3dadd( -372.457, 24.4197, 56.3713, 0.37 ) }
    dend_44 { pt3dadd( -372.315, 22.907, 58.7277, 0.37 ) }
    dend_44 { pt3dadd( -372.161, 21.1647, 61.3156, 1.55 ) }
    dend_44 { pt3dadd( -372.109, 20.4706, 62.3228, 2.36 ) }
    dend_44 { pt3dadd( -372.089, 20.1059, 62.8468, 2.58 ) }
    dend_44 { pt3dadd( -371.85, 18.0909, 65.5544, 0.52 ) }
    dend_44 { pt3dadd( -371.662, 17.3725, 66.3766, 0.74 ) }
    dend_44 { pt3dadd( -371.29, 16.2325, 67.3441, 0.74 ) }
    dend_44 { pt3dadd( -370.787, 15.0117, 68.2671, 0.44 ) }
    dend_44 { pt3dadd( -370.195, 13.8142, 69.2826, 0.37 ) }
    dend_44 { pt3dadd( -369.744, 12.9282, 70.0868, 0.44 ) }
    dend_44 { pt3dadd( -369.098, 11.705, 71.1912, 0.44 ) }
    dend_44 { pt3dadd( -368.583, 10.7793, 72.1968, 0.44 ) }
    dend_44 { pt3dadd( -367.766, 9.30636, 73.9983, 0.81 ) }
    dend_44 { pt3dadd( -367.302, 8.3807, 75.155, 1.11 ) }
    dend_44 { pt3dadd( -366.953, 7.40486, 76.235, 0.37 ) }
    dend_44 { pt3dadd( -366.653, 6.39294, 77.1675, 0.37 ) }
    dend_44 { pt3dadd( -365.826, 3.56404, 79.2344, 1.4 ) }
    dend_44 { pt3dadd( -365.547, 2.64984, 79.8232, 1.99 ) }
    dend_44 { pt3dadd( -365.28, 1.70378, 80.354, 1.99 ) }
    dend_44 { pt3dadd( -364.511, -1.08972, 81.7686, 0.52 ) }
    dend_44 { pt3dadd( -363.969, -3.03504, 82.6799, 0.52 ) }
    dend_44 { pt3dadd( -363.583, -4.58403, 83.3178, 0.52 ) }
    dend_44 { pt3dadd( -363.096, -7.08417, 84.0985, 0.52 ) }
    dend_44 { pt3dadd( -362.792, -8.50116, 84.511, 0.74 ) }
    dend_44 { pt3dadd( -362.375, -9.99648, 84.9731, 0.74 ) }
    dend_44 { pt3dadd( -362.072, -10.9758, 85.3155, 0.52 ) }
    dend_44 { pt3dadd( -361.761, -12.1349, 85.7327, 0.52 ) }
    dend_44 { pt3dadd( -361.39, -13.8737, 86.3786, 0.44 ) }
    dend_44 { pt3dadd( -361.057, -15.9246, 87.1422, 0.44 ) }
    dend_44 { pt3dadd( -360.839, -17.4282, 87.7892, 0.52 ) }
    dend_44 { pt3dadd( -360.638, -19.2296, 88.6885, 0.44 ) }
    dend_44 { pt3dadd( -360.494, -20.6682, 89.4844, 0.44 ) }
    dend_44 { pt3dadd( -360.362, -21.7643, 90.1423, 2.36 ) }
    dend_44 { pt3dadd( -360.22, -22.9069, 90.8607, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -190.901, 164.465, -31.1785, 0.37 ) }
    dend_42 { pt3dadd( -191.787, 165.818, -30.8313, 0.37 ) }
    dend_42 { pt3dadd( -192.282, 166.569, -30.6291, 0.37 ) }
    dend_42 { pt3dadd( -192.636, 167.129, -30.4797, 0.59 ) }
    dend_42 { pt3dadd( -193.028, 167.802, -30.3146, 0.44 ) }
    dend_42 { pt3dadd( -193.264, 168.232, -30.2169, 0.37 ) }
    dend_42 { pt3dadd( -193.501, 168.685, -30.125, 0.37 ) }
    dend_42 { pt3dadd( -193.898, 169.533, -29.9988, 0.29 ) }
    dend_42 { pt3dadd( -194.161, 170.121, -29.9189, 0.29 ) }
    dend_42 { pt3dadd( -194.402, 170.721, -29.8448, 0.29 ) }
    dend_42 { pt3dadd( -194.69, 171.51, -29.7425, 0.88 ) }
    dend_42 { pt3dadd( -194.837, 171.925, -29.6982, 1.11 ) }
    dend_42 { pt3dadd( -194.946, 172.265, -29.6773, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -190.901, 164.465, -31.1785, 0.29 ) }
    dend_39 { pt3dadd( -190.934, 166.207, -31.6322, 0.29 ) }
    dend_39 { pt3dadd( -190.965, 167.124, -31.8355, 0.29 ) }
    dend_39 { pt3dadd( -191.028, 167.9, -32.0803, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -191.073, 168.319, -32.2229, 0.44 ) }
    dend_39 { pt3dadd( -191.171, 169.14, -32.4874, 0.37 ) }
    dend_39 { pt3dadd( -191.28, 169.973, -32.7295, 0.37 ) }
    dend_39 { pt3dadd( -191.41, 170.943, -32.984, 0.37 ) }
    dend_39 { pt3dadd( -191.669, 172.588, -33.4339, 0.81 ) }
    dend_39 { pt3dadd( -191.792, 173.236, -33.6043, 0.59 ) }
    dend_39 { pt3dadd( -192.037, 174.369, -33.8772, 1.33 ) }
    dend_39 { pt3dadd( -192.245, 175.186, -34.0606, 1.92 ) }
    dend_39 { pt3dadd( -192.333, 175.538, -34.1423, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -173.439, 150.942, 28.9259, 0.52 ) }
    dend_35 { pt3dadd( -174.515, 152.377, 30.7817, 0.52 ) }
    dend_35 { pt3dadd( -175.171, 153.154, 31.8322, 0.52 ) }
    dend_35 { pt3dadd( -175.992, 154.014, 33.0715, 0.52 ) }
    dend_35 { pt3dadd( -176.539, 154.573, 33.883, 0.52 ) }
    dend_35 { pt3dadd( -177.214, 155.283, 34.8942, 0.52 ) }
    dend_35 { pt3dadd( -177.614, 155.736, 35.5171, 0.66 ) }
    dend_35 { pt3dadd( -178.018, 156.173, 36.1489, 0.29 ) }
    dend_35 { pt3dadd( -178.296, 156.482, 36.5642, 0.29 ) }
    dend_35 { pt3dadd( -179.011, 157.363, 37.5794, 0.29 ) }
    dend_35 { pt3dadd( -179.502, 157.97, 38.2921, 0.29 ) }
    dend_35 { pt3dadd( -179.987, 158.642, 39.0054, 0.29 ) }
    dend_35 { pt3dadd( -180.463, 159.355, 39.7406, 1.25 ) }
    dend_35 { pt3dadd( -180.732, 159.767, 40.167, 1.55 ) }
    dend_35 { pt3dadd( -181.24, 160.552, 40.9548, 0.22 ) }
    dend_35 { pt3dadd( -181.955, 161.424, 41.9058, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -173.439, 150.942, 28.9259, 0.29 ) }
    dend_34 { pt3dadd( -174.442, 151.68, 30.5577, 0.29 ) }
    dend_34 { pt3dadd( -174.974, 152.092, 31.5413, 0.29 ) }
    dend_34 { pt3dadd( -175.506, 152.52, 32.5732, 0.29 ) }
    dend_34 { pt3dadd( -176.158, 153.071, 33.7909, 0.37 ) }
    dend_34 { pt3dadd( -176.575, 153.461, 34.5353, 0.37 ) }
    dend_34 { pt3dadd( -176.913, 153.814, 35.1209, 0.29 ) }
    dend_34 { pt3dadd( -177.5, 154.579, 36.1695, 0.29 ) }
    dend_34 { pt3dadd( -177.907, 155.152, 36.8802, 0.29 ) }
    dend_34 { pt3dadd( -178.495, 156.024, 37.8337, 0.29 ) }
    dend_34 { pt3dadd( -179.103, 156.994, 38.8754, 0.29 ) }
    dend_34 { pt3dadd( -179.547, 157.733, 39.6559, 0.52 ) }
    dend_34 { pt3dadd( -179.838, 158.217, 40.1582, 0.29 ) }
    dend_34 { pt3dadd( -180.434, 159.229, 41.1979, 0.29 ) }
    dend_34 { pt3dadd( -180.857, 160.012, 42.02, 0.29 ) }
    dend_34 { pt3dadd( -181.354, 161.009, 43.0925, 0.59 ) }
    dend_34 { pt3dadd( -181.722, 161.75, 43.9012, 0.74 ) }
    dend_34 { pt3dadd( -182.086, 162.49, 44.6891, 0.22 ) }
    dend_34 { pt3dadd( -182.326, 162.997, 45.1889, 0.22 ) }
    dend_34 { pt3dadd( -182.72, 163.851, 45.9251, 0.22 ) }
    dend_34 { pt3dadd( -183.03, 164.545, 46.4964, 0.22 ) }
    dend_34 { pt3dadd( -183.305, 165.123, 46.9531, 0.74 ) }
    dend_34 { pt3dadd( -183.462, 165.442, 47.2217, 0.74 ) }
    dend_34 { pt3dadd( -183.692, 165.826, 47.5982, 0.29 ) }
    dend_34 { pt3dadd( -184.128, 166.452, 48.2826, 0.59 ) }
    dend_34 { pt3dadd( -184.652, 167.088, 49.1143, 0.29 ) }
    dend_34 { pt3dadd( -185.21, 167.716, 50.0186, 0.29 ) }
    dend_34 { pt3dadd( -185.741, 168.208, 50.8452, 0.29 ) }
    dend_34 { pt3dadd( -186.298, 168.625, 51.6722, 0.29 ) }
    dend_34 { pt3dadd( -186.894, 168.973, 52.5694, 0.29 ) }
    dend_34 { pt3dadd( -187.566, 169.3, 53.6146, 0.29 ) }
    dend_34 { pt3dadd( -188.056, 169.517, 54.428, 0.29 ) }
    dend_34 { pt3dadd( -188.887, 169.883, 55.9351, 0.29 ) }
    dend_34 { pt3dadd( -189.355, 170.106, 56.8462, 0.29 ) }
    dend_34 { pt3dadd( -190.042, 170.448, 58.2594, 1.4 ) }
    dend_34 { pt3dadd( -190.449, 170.641, 59.1308, 1.77 ) }
    dend_34 { pt3dadd( -191.134, 171.043, 60.769, 0.37 ) }
    dend_34 { pt3dadd( -191.445, 171.262, 61.6433, 0.66 ) }
    dend_34 { pt3dadd( -191.544, 171.408, 62.047, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -201.154, 149.513, -12.7839, 0.29 ) }
    dend_47 { pt3dadd( -200.135, 151.188, -11.3721, 0.29 ) }
    dend_47 { pt3dadd( -199.667, 152.103, -10.468, 0.22 ) }
    dend_47 { pt3dadd( -199.263, 153.071, -9.36533, 0.22 ) }
    dend_47 { pt3dadd( -198.865, 154.275, -7.7063, 0.44 ) }
    dend_47 { pt3dadd( -198.693, 154.962, -6.67107, 0.44 ) }
    dend_47 { pt3dadd( -198.504, 155.979, -5.2095, 0.44 ) }
    dend_47 { pt3dadd( -198.505, 156.667, -4.10409, 0.74 ) }
    dend_47 { pt3dadd( -198.498, 157.228, -3.18856, 0.74 ) }
    dend_47 { pt3dadd( -198.542, 158.098, -1.81687, 0.44 ) }
    dend_47 { pt3dadd( -198.547, 158.83, -0.752169, 0.29 ) }
    dend_47 { pt3dadd( -198.455, 159.842, 0.544341, 0.29 ) }
    dend_47 { pt3dadd( -198.236, 160.966, 1.73869, 0.29 ) }
    dend_47 { pt3dadd( -197.433, 163.513, 4.03306, 0.29 ) }
    dend_47 { pt3dadd( -196.87, 164.902, 5.15175, 0.29 ) }
    dend_47 { pt3dadd( -196.331, 165.908, 5.94061, 0.29 ) }
    dend_47 { pt3dadd( -195.783, 166.881, 6.68189, 0.29 ) }
    dend_47 { pt3dadd( -195.161, 168.078, 7.51397, 0.81 ) }
    dend_47 { pt3dadd( -194.438, 169.624, 8.50686, 1.47 ) }
    dend_47 { pt3dadd( -193.988, 170.752, 9.14023, 1.84 ) }
    dend_47 { pt3dadd( -192.495, 174.815, 11.2113, 0.29 ) }
    dend_47 { pt3dadd( -191.952, 176.573, 12.0592, 0.29 ) }
    dend_47 { pt3dadd( -191.284, 178.689, 13.1246, 0.29 ) }
    dend_47 { pt3dadd( -190.327, 181.558, 14.5586, 1.84 ) }
    dend_47 { pt3dadd( -189.582, 183.769, 15.6132, 0.37 ) }
    dend_47 { pt3dadd( -189.096, 185.243, 16.3191, 0.37 ) }
    dend_47 { pt3dadd( -188.739, 186.34, 16.8569, 0.37 ) }
    dend_47 { pt3dadd( -187.453, 189.798, 18.8517, 0.66 ) }
    dend_47 { pt3dadd( -186.823, 191.184, 19.8967, 0.37 ) }
    dend_47 { pt3dadd( -186.493, 191.871, 20.5788, 0.37 ) }
    dend_47 { pt3dadd( -186.034, 192.86, 21.7612, 0.59 ) }
    dend_47 { pt3dadd( -185.852, 193.333, 22.3136, 0.59 ) }
    dend_47 { pt3dadd( -185.633, 194.137, 23.1924, 0.44 ) }
    dend_47 { pt3dadd( -185.169, 197.556, 26.5023, 0.44 ) }
    dend_47 { pt3dadd( -184.998, 199.245, 28.0312, 0.29 ) }
    dend_47 { pt3dadd( -184.856, 200.836, 29.3605, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -184.742, 203.074, 31.0337, 0.29 ) }
    dend_47 { pt3dadd( -184.704, 204.116, 31.7684, 0.29 ) }
    dend_47 { pt3dadd( -184.685, 205.548, 32.6824, 0.29 ) }
    dend_47 { pt3dadd( -184.725, 207.111, 33.5767, 1.18 ) }
    dend_47 { pt3dadd( -184.719, 207.691, 33.9223, 1.55 ) }
    dend_47 { pt3dadd( -184.596, 209.427, 35.2486, 0.66 ) }
    dend_47 { pt3dadd( -184.101, 211.489, 37.2195, 1.03 ) }
    dend_47 { pt3dadd( -183.809, 212.186, 37.9729, 1.03 ) }
    dend_47 { pt3dadd( -182.929, 213.729, 39.788, 0.29 ) }
    dend_47 { pt3dadd( -182.496, 214.411, 40.6104, 0.29 ) }
    dend_47 { pt3dadd( -181.531, 215.909, 42.3487, 0.66 ) }
    dend_47 { pt3dadd( -180.157, 217.791, 44.6322, 0.37 ) }
    dend_47 { pt3dadd( -179.284, 218.976, 46.0755, 0.37 ) }
    dend_47 { pt3dadd( -178.771, 219.617, 46.8853, 0.37 ) }
    dend_47 { pt3dadd( -178.015, 220.486, 47.9526, 1.47 ) }
    dend_47 { pt3dadd( -177.205, 221.47, 48.9482, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -201.154, 149.513, -12.7839, 0.29 ) }
    dend_46 { pt3dadd( -201.718, 153.795, -12.1108, 0.29 ) }
    dend_46 { pt3dadd( -201.927, 156.364, -11.5823, 0.29 ) }
    dend_46 { pt3dadd( -202.074, 158.808, -10.9553, 1.69 ) }
    dend_46 { pt3dadd( -202.245, 162.466, -9.85738, 0.29 ) }
    dend_46 { pt3dadd( -202.297, 163.822, -9.38667, 0.29 ) }
    dend_46 { pt3dadd( -202.395, 165.644, -8.64405, 0.29 ) }
    dend_46 { pt3dadd( -202.371, 167.25, -7.80411, 0.29 ) }
    dend_46 { pt3dadd( -202.38, 168.409, -7.12679, 0.29 ) }
    dend_46 { pt3dadd( -202.473, 169.981, -6.16703, 0.59 ) }
    dend_46 { pt3dadd( -202.753, 171.633, -5.12696, 0.29 ) }
    dend_46 { pt3dadd( -203.205, 173.384, -3.96519, 0.29 ) }
    dend_46 { pt3dadd( -203.515, 174.224, -3.39039, 0.59 ) }
    dend_46 { pt3dadd( -204.027, 175.246, -2.68813, 0.59 ) }
    dend_46 { pt3dadd( -204.717, 176.312, -1.83224, 0.29 ) }
    dend_46 { pt3dadd( -205.376, 177.139, -1.07107, 0.29 ) }
    dend_46 { pt3dadd( -206.158, 178.078, -0.183608, 0.88 ) }
    dend_46 { pt3dadd( -206.628, 178.653, 0.35845, 1.03 ) }
    dend_46 { pt3dadd( -207.662, 179.857, 1.55758, 0.29 ) }
    dend_46 { pt3dadd( -208.762, 181.099, 2.83095, 0.29 ) }
    dend_46 { pt3dadd( -209.755, 182.185, 3.84685, 0.29 ) }
    dend_46 { pt3dadd( -210.563, 183.083, 4.5455, 0.29 ) }
    dend_46 { pt3dadd( -211.541, 184.152, 5.20886, 0.29 ) }
    dend_46 { pt3dadd( -212.626, 185.258, 5.72814, 0.66 ) }
    dend_46 { pt3dadd( -213.274, 185.859, 5.90078, 0.88 ) }
    dend_46 { pt3dadd( -214.554, 186.983, 6.01358, 0.29 ) }
    dend_46 { pt3dadd( -215.614, 187.775, 5.9942, 0.29 ) }
    dend_46 { pt3dadd( -217.158, 188.778, 5.76391, 0.29 ) }
    dend_46 { pt3dadd( -218.806, 189.769, 5.22477, 0.29 ) }
    dend_46 { pt3dadd( -220.205, 190.543, 4.62375, 0.29 ) }
    dend_46 { pt3dadd( -221.827, 191.366, 3.84318, 0.59 ) }
    dend_46 { pt3dadd( -223.669, 192.192, 2.91744, 0.44 ) }
    dend_46 { pt3dadd( -225.816, 193.061, 1.85116, 0.81 ) }
    dend_46 { pt3dadd( -228.211, 193.91, 0.703204, 0.37 ) }
    dend_46 { pt3dadd( -229.876, 194.448, 0.0325592, 0.29 ) }
    dend_46 { pt3dadd( -230.983, 194.781, -0.303434, 0.29 ) }
    dend_46 { pt3dadd( -232.136, 195.115, -0.539024, 0.29 ) }
    dend_46 { pt3dadd( -233.873, 195.719, -0.722388, 0.59 ) }
    dend_46 { pt3dadd( -236.016, 196.474, -0.72153, 0.29 ) }
    dend_46 { pt3dadd( -237.787, 197.112, -0.572034, 0.22 ) }
    dend_46 { pt3dadd( -238.774, 197.507, -0.484946, 0.22 ) }
    dend_46 { pt3dadd( -240.314, 198.2, -0.333376, 1.25 ) }
    dend_46 { pt3dadd( -241.159, 198.634, -0.248116, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -192.333, 175.538, -34.1423, 0.44 ) }
    dend_41 { pt3dadd( -193.662, 176.919, -33.905, 0.44 ) }
    dend_41 { pt3dadd( -194.957, 178.32, -33.7336, 0.37 ) }
    dend_41 { pt3dadd( -195.775, 179.258, -33.6332, 0.37 ) }
    dend_41 { pt3dadd( -196.57, 180.19, -33.5241, 0.37 ) }
    dend_41 { pt3dadd( -197.233, 180.96, -33.446, 0.37 ) }
    dend_41 { pt3dadd( -198.286, 182.169, -33.3136, 0.29 ) }
    dend_41 { pt3dadd( -199.402, 183.583, -33.2064, 1.25 ) }
    dend_41 { pt3dadd( -199.951, 184.322, -33.1883, 1.62 ) }
    dend_41 { pt3dadd( -200.463, 185.007, -33.2293, 1.62 ) }
    dend_41 { pt3dadd( -201.869, 186.898, -33.4193, 0.29 ) }
    dend_41 { pt3dadd( -202.517, 187.813, -33.5259, 0.29 ) }
    dend_41 { pt3dadd( -203.305, 189.023, -33.7223, 0.29 ) }
    dend_41 { pt3dadd( -203.996, 190.181, -33.995, 0.59 ) }
    dend_41 { pt3dadd( -205.186, 192.314, -34.5641, 0.29 ) }
    dend_41 { pt3dadd( -205.572, 193.026, -34.7597, 0.29 ) }
    dend_41 { pt3dadd( -206.13, 194.037, -35.0382, 0.29 ) }
    dend_41 { pt3dadd( -206.489, 194.63, -35.1846, 0.29 ) }
    dend_41 { pt3dadd( -206.987, 195.429, -35.3199, 0.59 ) }
    dend_41 { pt3dadd( -207.539, 196.376, -35.4018, 0.59 ) }
    dend_41 { pt3dadd( -208.587, 198.253, -35.4872, 0.29 ) }
    dend_41 { pt3dadd( -209.241, 199.393, -35.5645, 0.29 ) }
    dend_41 { pt3dadd( -209.967, 200.689, -35.6545, 0.29 ) }
    dend_41 { pt3dadd( -210.897, 202.403, -35.7881, 0.37 ) }
    dend_41 { pt3dadd( -211.369, 203.304, -35.8606, 0.37 ) }
    dend_41 { pt3dadd( -212.142, 204.921, -35.9859, 0.37 ) }
    dend_41 { pt3dadd( -212.729, 206.278, -36.0774, 0.37 ) }
    dend_41 { pt3dadd( -213.466, 208.151, -36.1536, 0.44 ) }
    dend_41 { pt3dadd( -213.904, 209.416, -36.1837, 0.66 ) }
    dend_41 { pt3dadd( -214.204, 210.371, -36.1837, 0.66 ) }
    dend_41 { pt3dadd( -214.708, 212.352, -36.054, 0.29 ) }
    dend_41 { pt3dadd( -214.875, 213.246, -35.935, 0.74 ) }
    dend_41 { pt3dadd( -215.14, 215.005, -35.5997, 0.29 ) }
    dend_41 { pt3dadd( -215.417, 216.973, -35.125, 0.37 ) }
    dend_41 { pt3dadd( -215.565, 218.121, -34.824, 0.37 ) }
    dend_41 { pt3dadd( -215.841, 220.084, -34.2959, 0.37 ) }
    dend_41 { pt3dadd( -216.044, 221.312, -33.9581, 0.37 ) }
    dend_41 { pt3dadd( -216.34, 222.703, -33.578, 0.37 ) }
    dend_41 { pt3dadd( -216.748, 224.225, -33.1683, 0.29 ) }
    dend_41 { pt3dadd( -217.217, 225.688, -32.7838, 0.29 ) }
    dend_41 { pt3dadd( -217.904, 227.767, -32.3754, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -218.226, 228.712, -32.2601, 0.29 ) }
    dend_41 { pt3dadd( -218.66, 229.999, -32.1425, 1.03 ) }
    dend_41 { pt3dadd( -218.983, 230.977, -32.0727, 1.33 ) }
    dend_41 { pt3dadd( -219.665, 233.004, -31.9219, 0.52 ) }
    dend_41 { pt3dadd( -220.248, 234.724, -31.7786, 0.52 ) }
    dend_41 { pt3dadd( -220.785, 236.39, -31.651, 0.52 ) }
    dend_41 { pt3dadd( -221.217, 237.757, -31.5373, 0.81 ) }
    dend_41 { pt3dadd( -221.453, 238.496, -31.4642, 0.81 ) }
    dend_41 { pt3dadd( -222.145, 240.51, -31.1823, 0.37 ) }
    dend_41 { pt3dadd( -222.73, 242.165, -30.8769, 0.37 ) }
    dend_41 { pt3dadd( -223.214, 243.531, -30.5665, 0.96 ) }
    dend_41 { pt3dadd( -223.429, 244.141, -30.4255, 1.33 ) }
    dend_41 { pt3dadd( -223.716, 244.916, -30.2362, 1.4 ) }
    dend_41 { pt3dadd( -224.425, 246.678, -29.7774, 0.52 ) }
    dend_41 { pt3dadd( -224.975, 247.936, -29.4278, 0.44 ) }
    dend_41 { pt3dadd( -225.764, 249.536, -28.9332, 0.37 ) }
    dend_41 { pt3dadd( -226.483, 250.948, -28.4895, 0.37 ) }
    dend_41 { pt3dadd( -227.073, 252.129, -28.1262, 0.37 ) }
    dend_41 { pt3dadd( -227.47, 252.928, -27.8831, 0.37 ) }
    dend_41 { pt3dadd( -228.194, 254.263, -27.4397, 0.74 ) }
    dend_41 { pt3dadd( -228.382, 254.552, -27.3221, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -192.333, 175.538, -34.1423, 0.37 ) }
    dend_40 { pt3dadd( -193.517, 177.399, -35.0069, 0.37 ) }
    dend_40 { pt3dadd( -194.235, 178.742, -35.5369, 0.74 ) }
    dend_40 { pt3dadd( -195.209, 180.929, -36.4091, 0.29 ) }
    dend_40 { pt3dadd( -195.675, 182.119, -36.9462, 0.29 ) }
    dend_40 { pt3dadd( -196.111, 183.375, -37.5353, 1.25 ) }
    dend_40 { pt3dadd( -196.273, 183.876, -37.7741, 1.25 ) }
    dend_40 { pt3dadd( -196.599, 185.187, -38.3752, 0.29 ) }
    dend_40 { pt3dadd( -196.836, 186.498, -38.9772, 0.29 ) }
    dend_40 { pt3dadd( -197.059, 187.929, -39.6623, 0.29 ) }
    dend_40 { pt3dadd( -197.243, 188.764, -40.1292, 0.29 ) }
    dend_40 { pt3dadd( -197.485, 189.482, -40.5993, 0.29 ) }
    dend_40 { pt3dadd( -197.84, 190.329, -41.2029, 0.29 ) }
    dend_40 { pt3dadd( -198.358, 191.26, -41.879, 1.03 ) }
    dend_40 { pt3dadd( -199.478, 193.042, -43.0868, 0.37 ) }
    dend_40 { pt3dadd( -200.093, 194.005, -43.7025, 0.37 ) }
    dend_40 { pt3dadd( -200.61, 194.838, -44.2894, 0.37 ) }
    dend_40 { pt3dadd( -201.067, 195.557, -44.8146, 1.03 ) }
    dend_40 { pt3dadd( -201.874, 196.785, -45.7473, 0.52 ) }
    dend_40 { pt3dadd( -202.415, 197.665, -46.4127, 0.52 ) }
    dend_40 { pt3dadd( -202.874, 198.598, -47.004, 0.44 ) }
    dend_40 { pt3dadd( -203.707, 200.693, -48.258, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 11
    dend_1 nseg = 7
    dend_50 nseg = 7
    dend_24 nseg = 15
    dend_19 nseg = 3
    dend_49 nseg = 7
    dend_28 nseg = 5
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_6 nseg = 11
    dend_48 nseg = 7
    dend_31 nseg = 3
    dend_11 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_44 nseg = 17
    dend_34 nseg = 3
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_41 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_LBC_01750e1e18_0_0


