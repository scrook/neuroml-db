// Cell: cNAC187_L6_NBC_81f6eae6fc_0_0
/*
{
  "id" : "cNAC187_L6_NBC_81f6eae6fc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 7.48071, -1.86, 3.64", "-2.16651, 9.31674, -1.86, 3.64", "-3.25477, 13.0392, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -7.41879, 8.54, 2.73", "-2.42038, -10.958, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.44321, -4.58, 0.68", "-5.10438, -0.382553, -5.14959, 0.68", "-5.58155, -1.62583, -5.52543, 0.45", "-6.60033, -4.03525, -6.18902, 0.45", "-7.75253, -6.71573, -6.95626, 0.45", "-8.13608, -7.57981, -7.22444, 1.14", "-9.58913, -10.8327, -8.4206, 0.23", "-10.0993, -12.0171, -8.90758, 0.23", "-10.955, -13.7975, -9.73255, 0.91", "-12.2761, -16.0371, -11.0409, 0.23", "-13.2188, -17.3116, -11.9614, 0.91", "-14.6596, -19.0979, -13.3985, 0.23", "-15.39, -19.913, -14.1942, 0.23", "-16.408, -21.0314, -15.3715, 0.68", "-18.2019, -23.0374, -17.5647, 0.23", "-18.9941, -23.985, -18.5715, 0.23", "-19.7282, -24.9867, -19.5196, 1.14", "-21.4258, -27.6917, -21.7346, 0.23", "-21.9474, -28.7513, -22.5654, 0.23", "-22.4371, -30.003, -23.5269, 1.14", "-23.2566, -32.1461, -25.2106, 0.23", "-23.7288, -33.2459, -26.2418, 0.23", "-24.341, -34.4996, -27.5769, 0.91", "-25.2848, -36.3304, -29.6378, 0.91", "-26.1406, -37.8092, -31.5125, 0.23", "-26.8897, -38.9285, -33.0243, 0.23", "-28.1164, -40.5698, -35.2946, 0.68", "-28.9568, -41.6411, -36.8795, 0.23", "-29.5446, -42.3398, -37.9381, 1.14", "-31.1251, -44.1553, -40.4791, 0.23", "-31.5735, -44.7497, -41.1849, 0.23", "-32.0306, -45.5196, -41.9529, 0.23", "-37.2137, -52.9876, -47.8657, 0.23", "-42.2182, -60.9212, -53.3694, 0.23", "-46.1517, -67.5308, -60.924, 0.23", "-50.7008, -72.2816, -69.357, 0.23", "-56.4764, -78.5933, -75.9106, 0.23", "-64.4683, -82.7381, -81.6751, 0.23", "-71.8891, -87.283, -87.9054, 0.23", "-79.1329, -90.9407, -94.8309, 0.23", "-86.6542, -95.9401, -100.612, 0.23", "-92.788, -100.979, -107.809, 0.23", "-99.3816, -107.292, -113.55, 0.23", "-106.326, -114.28, -118.05, 0.23", "-113.448, -120.521, -123.212, 0.23", "-120.245, -128.087, -127.043, 0.23", "-126.718, -136.651, -129.19, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -9.09879, 1.04, 1.14", "4.08408, -11.2473, -0.0223336, 1.14", "5.5057, -13.0942, -0.935509, 1.14", "6.88188, -14.8821, -1.8195, 1.14", "7.70769, -15.9549, -2.34995, 1.14", "8.47031, -16.9457, -2.83982, 1.59", "9.37918, -18.1264, -3.42363, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.64321, -1.12, 1.59", "3.58409, 6.91544, -1.12, 1.59", "4.252, 8.25607, -1.12, 1.59", "5.34203, 10.444, -1.12, 1.59", "5.97369, 11.7118, -1.12, 1.59", "6.89438, 13.5598, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.702174", "-4.41759, 23.203, 0.0, 0.702174", "-7.15127, 37.9518, 0.0, 0.702174" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.25477, 13.0392, -1.86, 0.68", "-5.06812, 13.6639, -1.12605, 0.68", "-6.3423, 14.1218, -0.636108, 0.68", "-8.08962, 14.7498, 0.0357636, 1.14", "-9.09484, 15.111, 0.422287, 0.23", "-11.4357, 15.9523, 1.32235, 0.23", "-12.767, 16.4307, 1.83427, 0.91", "-15.0064, 17.1771, 2.7736, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.25477, 13.0392, -1.86, 1.82", "-0.851741, 15.6663, -1.65622, 1.82", "1.45989, 18.2129, -1.45023, 1.14", "3.20199, 20.1256, -1.2647, 0.68", "4.36115, 21.3721, -1.10754, 1.14", "7.42038, 24.5675, -0.701984, 0.45", "9.16131, 26.3288, -0.491043, 0.45", "10.2385, 27.3259, -0.364038, 1.59", "11.3534, 28.307, -0.221476, 1.59", "12.9608, 29.7106, 0.0235557, 0.68", "14.8442, 31.3312, 0.309979, 0.68", "16.3448, 32.5718, 0.576721, 1.36", "17.8441, 33.758, 0.829817, 2.05", "19.2863, 34.8415, 1.03722, 0.91", "20.9126, 36.0684, 1.22789, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.42038, -10.958, 8.54, 0.68", "-6.66628, -12.0294, 7.90707, 0.68", "-11.3622, -13.1607, 7.23559, 0.68", "-14.2246, -13.8242, 6.7723, 0.23", "-16.2558, -14.2906, 6.42935, 0.91", "-18.9344, -14.9349, 5.97405, 0.91", "-21.5226, -15.569, 5.49939, 0.23", "-23.5202, -16.0533, 5.09819, 0.23", "-26.8149, -16.9159, 4.4192, 0.68", "-29.2128, -17.6222, 3.88825, 0.68", "-31.6539, -18.3915, 3.27704, 0.23", "-34.2344, -19.2696, 2.57787, 0.68", "-36.1315, -19.9631, 2.04778, 0.68", "-39.535, -21.2969, 1.11577, 0.23", "-42.2352, -22.425, 0.427219, 0.23", "-44.2215, -23.2855, -0.0573179, 0.68", "-45.7052, -23.9353, -0.320944, 0.68", "-47.826, -24.8808, -0.560235, 0.68", "-50.5998, -26.1005, -0.749355, 0.23", "-52.9837, -27.0872, -0.800504, 0.45", "-55.1639, -27.9481, -0.716956, 0.45", "-59.2192, -29.5401, -0.453212, 0.23", "-60.7215, -30.1522, -0.292297, 1.14", "-62.2186, -30.7918, -0.0874455, 1.14", "-65.3955, -32.2035, 0.415077, 0.23", "-67.7362, -33.3315, 0.795011, 0.23", "-69.8459, -34.4497, 1.1087, 0.91", "-73.5158, -36.5381, 1.53231, 0.23", "-75.2934, -37.5872, 1.71833, 1.14", "-76.0761, -38.0591, 1.78728, 1.14", "-78.5342, -39.5442, 1.92576, 0.23", "-80.7011, -40.79, 1.93996, 1.14", "-83.1331, -42.0794, 1.86853, 0.23", "-85.257, -43.0719, 1.71469, 1.14", "-86.5304, -43.6204, 1.62512, 0.23", "-89.1411, -44.6719, 1.44372, 0.23", "-90.8976, -45.3568, 1.33434, 1.14", "-92.2083, -45.8442, 1.27736, 1.14", "-95.5494, -47.1342, 1.18061, 0.23", "-96.8707, -47.6803, 1.24729, 1.14", "-98.5702, -48.4197, 1.43448, 1.14", "-100.575, -49.3141, 1.74905, 0.23", "-102.583, -50.2525, 2.20062, 0.91", "-104.753, -51.3162, 2.78933, 0.23", "-108.459, -53.2794, 3.85662, 0.23", "-109.25, -53.7191, 4.08656, 1.14", "-111.431, -54.986, 4.63925, 1.14", "-114.207, -56.6794, 5.17784, 0.23", "-115.613, -57.5606, 5.35576, 0.23", "-119.207, -59.8024, 5.71444, 0.68", "-121.69, -61.3246, 5.85325, 0.23", "-124.286, -62.9316, 5.992, 1.14", "-127.326, -64.8557, 6.12661, 0.23", "-129.906, -66.5116, 6.24971, 0.91", "-133.176, -68.6253, 6.50988, 0.23", "-135.329, -70.0201, 6.74313, 0.23", "-136.089, -70.5201, 6.86311, 0.23", "-137.302, -71.3195, 7.13158, 0.23", "-139.62, -72.8519, 7.84783, 0.91", "-141.305, -73.9885, 8.44885, 0.91", "-143.501, -75.4401, 9.18312, 0.23", "-145.599, -76.798, 9.84263, 1.14", "-146.949, -77.6144, 10.2838, 1.14", "-149.963, -79.3505, 11.2598, 0.23", "-151.561, -80.2495, 11.7434, 0.68", "-154.915, -82.2043, 12.7298, 0.23", "-157.533, -83.8326, 13.5008, 0.91", "-160.701, -86.0419, 14.3504, 0.23", "-161.633, -86.7788, 14.5781, 0.23", "-162.946, -87.933, 14.8272, 0.23", "-164.776, -89.7504, 15.1063, 1.14", "-167.027, -92.1949, 15.3437, 0.23", "-168.664, -94.1247, 15.2908, 0.68", "-171.145, -97.2125, 14.7715, 0.23", "-173.118, -99.6855, 14.1511, 0.91", "-175.38, -102.363, 13.3264, 0.23", "-176.485, -103.564, 12.9246, 0.91", "-179.256, -106.321, 11.9075, 0.23", "-181.679, -108.472, 11.128, 0.91", "-184.156, -110.465, 10.4603, 0.23", "-186.532, -112.181, 9.97742, 0.91", "-189.682, -114.105, 9.61604, 0.23", "-190.947, -114.782, 9.55298, 0.91", "-193.08, -115.729, 9.60362, 0.23", "-194.849, -116.387, 9.64885, 0.91", "-195.505, -116.592, 9.60677, 0.91", "-199.069, -117.625, 9.23509, 0.23", "-200.193, -117.908, 9.11379, 0.23", "-202.441, -118.451, 8.87192, 0.91", "-205.181, -119.09, 8.58002, 0.23", "-208.742, -119.889, 8.21013, 0.91", "-213.685, -120.995, 7.723, 0.23", "-216.702, -121.673, 7.4632, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.42038, -10.958, 8.54, 0.91", "-0.956544, -13.1692, 9.62729, 0.91", "0.151706, -14.8432, 10.4505, 0.91", "1.58968, -17.0152, 11.5185, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.37918, -18.1264, -3.42363, 0.91", "8.86848, -21.5111, -3.69225, 0.91", "8.37845, -24.7588, -3.95001, 0.91", "8.01786, -27.1486, -4.13968, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.37918, -18.1264, -3.42363, 0.23", "12.0192, -19.5708, -3.28921, 0.23", "14.093, -20.6979, -3.21989, 0.68", "16.9144, -22.2715, -3.16376, 0.68", "18.6125, -23.2989, -3.23769, 0.23", "19.5199, -23.8677, -3.32228, 0.91", "20.8716, -24.7228, -3.48909, 0.91", "22.5821, -25.8233, -3.83405, 0.23", "24.1142, -26.7463, -4.25559, 0.91", "26.7327, -28.2632, -5.0382, 0.23", "27.7415, -28.8397, -5.35841, 0.91", "29.1011, -29.5987, -5.79144, 0.23", "30.8346, -30.573, -6.31261, 1.14", "32.1225, -31.2418, -6.62154, 1.14", "34.6586, -32.4787, -7.05765, 0.23", "35.9371, -33.0551, -7.18997, 0.91", "37.2869, -33.6586, -7.28411, 0.91", "39.9851, -34.7688, -7.41662, 0.23", "42.2582, -35.5789, -7.45465, 0.68", "44.3148, -36.1878, -7.46377, 0.23", "45.4257, -36.4113, -7.46281, 0.91", "47.8721, -36.7359, -7.45446, 0.23", "50.355, -36.8867, -7.48069, 0.91", "52.4766, -36.8801, -7.54621, 0.23", "53.9299, -36.8356, -7.67218, 0.91", "56.8395, -36.7243, -8.00405, 0.23", "57.7297, -36.7005, -8.12713, 1.14", "59.5159, -36.6854, -8.41773, 1.14", "61.8058, -36.8224, -8.8353, 0.23", "64.4686, -37.1687, -9.36059, 0.68", "65.499, -37.3675, -9.53228, 1.36", "67.5244, -37.9095, -9.74703, 0.23", "68.4616, -38.1794, -9.80488, 0.45", "71.0227, -38.9395, -9.86348, 0.23", "72.7156, -39.441, -9.80884, 0.91", "75.9447, -40.4011, -9.4978, 0.23", "79.011, -41.2786, -9.13566, 1.14", "80.5244, -41.6941, -8.92963, 0.23", "81.854, -42.0254, -8.73597, 0.91", "84.4272, -42.6154, -8.30701, 0.23", "85.952, -42.9526, -8.04608, 1.14", "88.3968, -43.4936, -7.67236, 0.23", "89.8162, -43.8447, -7.45888, 0.91", "90.2608, -43.9713, -7.39257, 0.91", "92.3569, -44.6017, -7.11985, 0.23", "93.7193, -44.9911, -7.00798, 0.91", "96.0325, -45.6753, -6.89669, 0.23", "97.7261, -46.1864, -6.82411, 0.91", "99.639, -46.7549, -6.76442, 0.23", "101.053, -47.1735, -6.74421, 0.68", "104.194, -48.1483, -6.75373, 0.23", "106.22, -48.8034, -6.72273, 0.23", "107.509, -49.2051, -6.66044, 1.14", "108.371, -49.4647, -6.58265, 1.14", "110.914, -50.2495, -6.24306, 0.23", "112.4, -50.6987, -6.00068, 1.14", "114.966, -51.4357, -5.5444, 0.23", "118.677, -52.4104, -4.79021, 0.91", "120.405, -52.8584, -4.44551, 0.23", "122.317, -53.3428, -4.1084, 0.91", "125.084, -53.997, -3.70035, 0.23", "127.132, -54.5053, -3.53093, 0.91", "129.852, -55.3267, -3.50205, 0.23", "133.361, -56.6269, -3.72059, 0.23", "136.138, -57.7725, -4.04921, 0.45", "138.13, -58.6896, -4.36371, 0.23", "140.733, -60.0088, -4.89867, 0.23", "142.855, -61.1772, -5.49166, 0.91", "144.238, -62.0009, -6.03583, 0.23", "145.242, -62.6407, -6.49104, 0.45", "145.988, -63.1289, -6.84764, 0.23", "147.336, -63.9352, -7.48344, 0.91", "149.465, -64.9861, -8.47081, 0.23", "151.102, -65.6555, -9.24916, 0.91", "152.314, -66.1147, -9.82348, 0.23", "152.707, -66.2602, -10.0075, 0.91", "154.115, -66.7667, -10.6159, 0.23", "155.676, -67.392, -11.229, 0.45", "157.638, -68.217, -11.842, 0.23", "158.292, -68.5019, -12.0201, 0.91", "159.075, -68.8764, -12.2217, 0.23", "160.466, -69.6274, -12.5425, 1.14", "162.59, -70.9474, -12.8724, 0.23", "163.744, -71.7892, -13.0487, 0.68", "164.398, -72.4242, -13.1748, 0.23", "165.475, -73.8707, -13.4365, 0.23", "165.884, -75.1592, -13.6205, 0.23", "165.377, -76.952, -13.7324, 0.91", "164.132, -79.6294, -13.8383, 0.23", "162.768, -82.0505, -13.9222, 0.23", "161.871, -83.43, -13.9634, 0.23", "160.024, -85.8174, -14.0237, 0.23", "157.622, -88.5248, -14.0798, 0.68", "165.927, -93.9407, -15.7954, 0.68", "174.115, -98.6538, -19.1501, 0.68", "181.342, -103.821, -23.8299, 0.68", "188.205, -108.584, -29.3642, 0.68", "196.708, -111.65, -33.5589, 0.68", "205.585, -114.877, -36.7556, 0.68", "214.106, -118.821, -40.1807, 0.68", "223.247, -121.459, -43.1094, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "6.89438, 13.5598, -1.12, 0.23", "9.02621, 15.1337, -1.31732, 0.23", "12.3988, 17.4686, -1.49417, 0.68", "13.4106, 18.1691, -1.54723, 0.68", "15.4883, 19.6074, -1.65617, 0.23", "17.9166, 21.2885, -1.7835, 0.91", "20.1608, 22.8422, -1.90118, 0.91", "22.0288, 24.2439, -1.9923, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.89438, 13.5598, -1.12, 0.68", "6.90115, 17.4112, -0.103143, 0.68", "6.92694, 19.8673, 0.438972, 0.68", "6.97232, 21.8767, 0.83596, 0.91", "7.12527, 25.377, 1.22664, 0.23", "7.21409, 26.589, 1.30797, 0.68", "7.58821, 30.903, 1.50958, 0.23", "7.87905, 33.7669, 1.47701, 1.14", "8.07357, 35.4373, 1.4043, 1.14", "8.89508, 41.1436, 0.999804, 0.23", "9.54494, 44.6878, 0.658695, 0.91", "9.88815, 46.2332, 0.487056, 0.91", "10.4456, 48.2866, 0.208681, 0.23", "11.2666, 51.1341, -0.161407, 0.23", "11.829, 53.0178, -0.405558, 0.91", "12.4418, 54.908, -0.616977, 0.91", "13.3381, 57.6336, -0.93534, 0.23", "14.4527, 60.8636, -1.30918, 0.68", "15.6284, 64.178, -1.72706, 0.23", "16.3534, 66.2777, -1.97449, 0.91", "17.6003, 69.9974, -2.4532, 0.23", "18.1593, 71.5685, -2.66941, 0.23", "18.4991, 72.4895, -2.79089, 1.14", "19.0578, 73.8959, -2.93593, 1.14", "19.9659, 76.0241, -3.10804, 0.23", "20.5853, 77.6384, -3.20716, 0.68", "21.5666, 80.6629, -3.3642, 0.23", "22.2295, 82.9828, -3.45296, 0.91", "23.1339, 86.7013, -3.52215, 0.23", "23.6939, 89.451, -3.51291, 1.14", "24.2466, 93.6629, -3.4957, 0.23", "24.3988, 96.4127, -3.46144, 0.68", "24.3613, 97.9964, -3.46374, 0.23", "24.178, 100.368, -3.48836, 0.91", "23.9516, 101.935, -3.50252, 0.91", "22.7205, 108.286, -3.59122, 0.23", "22.3064, 110.181, -3.66227, 1.14", "21.3698, 114.152, -3.9503, 0.23", "20.7194, 116.796, -4.19772, 0.91", "20.1338, 119.004, -4.4331, 0.91", "19.1551, 122.594, -4.83888, 0.23", "17.8349, 127.205, -5.53045, 0.91", "17.1374, 129.652, -5.93558, 0.23", "16.7484, 131.154, -6.12697, 0.45", "16.2987, 133.073, -6.36308, 0.23", "15.9715, 134.605, -6.54592, 0.91", "15.2253, 138.285, -7.03296, 0.23", "14.6812, 140.921, -7.44906, 1.14", "13.5359, 146.284, -8.51341, 0.23", "12.6825, 150.022, -9.38697, 1.36", "11.6049, 154.353, -10.6781, 0.45", "10.9789, 156.615, -11.5161, 0.91", "9.93729, 160.003, -12.9646, 0.23", "9.13288, 162.233, -14.1045, 0.68", "8.39569, 163.971, -15.1592, 0.68", "6.84016, 167.473, -17.3523, 0.23", "5.98149, 169.504, -18.6416, 0.23", "5.58901, 170.569, -19.2653, 0.91", "4.99172, 172.919, -20.5924, 0.45", "4.73457, 175.07, -21.7418, 0.23", "4.80075, 176.852, -22.6686, 0.91", "5.24644, 179.105, -23.7602, 0.23", "5.61469, 180.242, -24.3149, 1.14", "6.63515, 182.374, -25.4619, 0.23", "7.69592, 184.183, -26.517, 0.91", "9.15311, 186.525, -27.9751, 0.23", "9.84663, 187.657, -28.6911, 0.23", "10.907, 189.536, -29.9066, 1.14", "12.5614, 192.999, -32.2481, 0.23", "13.708, 196.193, -34.4576, 1.14", "14.3747, 199.928, -37.2039, 0.23", "14.4648, 200.852, -37.8939, 0.23", "14.4766, 202.852, -39.4316, 0.68", "14.1978, 205.041, -41.2199, 0.23", "13.4877, 207.031, -42.8943, 1.14", "11.6492, 210.127, -45.6244, 0.23", "9.45818, 222.767, -49.9051, 0.23", "6.00606, 235.889, -50.7343, 0.23", "4.44211, 249.155, -53.2581, 0.23", "1.34499, 262.201, -55.3815, 0.23", "0.491498, 275.605, -57.5849, 0.23", "-1.88663, 288.908, -59.158, 0.23", "-5.92352, 301.785, -60.5503, 0.23", "-10.1207, 314.417, -62.9998, 0.23", "-13.8207, 326.853, -66.7616, 0.23", "-16.8455, 338.744, -72.2748, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.15", "-9.88495, 52.7006, 0.0, 0.15", "-12.6186, 67.4494, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-15.0064, 17.1771, 2.7736, 0.23", "-17.3881, 17.3314, -0.625175, 0.23", "-18.7518, 17.4197, -2.57126, 0.23", "-20.5483, 17.5361, -5.13508, 0.91", "-23.873, 17.7514, -9.87965, 0.23", "-27.4115, 17.9806, -14.9293, 0.23", "-28.7255, 18.0657, -16.8044, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-15.0064, 17.1771, 2.7736, 0.23", "-15.5596, 17.6353, 2.89566, 0.23", "-16.312, 18.2589, 3.07261, 0.91", "-17.267, 19.0411, 3.30266, 0.68", "-18.1726, 19.8031, 3.54211, 0.23", "-18.8706, 20.3965, 3.7019, 0.68", "-19.4884, 20.9238, 3.83002, 0.23", "-19.8139, 21.1972, 3.87693, 1.14", "-20.2542, 21.5449, 3.91457, 1.14", "-21.3556, 22.3708, 3.92439, 0.23", "-22.3682, 23.1114, 3.87335, 0.45", "-23.0072, 23.5611, 3.82496, 0.23", "-23.8824, 24.1398, 3.75507, 0.23", "-24.9431, 24.7967, 3.67391, 0.23", "-25.7542, 25.2674, 3.61664, 0.91", "-26.1917, 25.4979, 3.59334, 0.91", "-27.7699, 26.286, 3.60047, 0.23", "-28.742, 26.7615, 3.64126, 0.68", "-29.5377, 27.153, 3.71395, 0.23", "-29.8488, 27.3054, 3.74554, 0.91", "-30.564, 27.6347, 3.83488, 0.91", "-31.8407, 28.1993, 3.99183, 0.23", "-32.4828, 28.4661, 4.07012, 2.05", "-33.118, 28.7558, 4.15701, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "20.9126, 36.0684, 1.22789, 0.68", "22.5625, 36.6154, 1.6906, 0.68", "25.0507, 37.3529, 2.33478, 1.14", "27.4488, 38.0528, 3.01408, 0.68", "30.3837, 38.9271, 3.91149, 0.68", "32.3391, 39.5419, 4.55204, 0.68", "34.0091, 40.0669, 5.09905, 1.14", "36.6713, 40.9149, 6.04044, 0.68", "39.3801, 41.7889, 7.07592, 0.68", "41.0432, 42.3538, 7.71227, 0.68", "42.1977, 42.7273, 8.19244, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "20.9126, 36.0684, 1.22789, 0.68", "20.9232, 37.9737, 1.17195, 0.68", "20.9238, 39.0421, 1.18282, 1.14", "20.922, 40.3103, 1.22988, 0.23", "20.8841, 42.2245, 1.39063, 0.68", "20.8215, 43.6052, 1.5556, 0.68", "20.7772, 44.3137, 1.65341, 0.68", "20.607, 45.9713, 1.96398, 1.14", "20.3239, 48.2796, 2.42604, 0.23", "20.1398, 49.523, 2.6893, 0.23", "19.832, 51.2967, 3.09253, 0.68", "19.6859, 51.9617, 3.23454, 0.68", "19.3667, 53.2674, 3.50848, 0.23", "19.1037, 54.1908, 3.69417, 0.91", "18.6078, 55.7314, 3.97633, 0.23", "18.307, 56.6712, 4.09643, 0.68", "17.7078, 58.4213, 4.286, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-216.702, -121.673, 7.4632, 0.23", "-218.984, -121.858, 7.61786, 0.23", "-220.374, -121.998, 7.71423, 0.68", "-222.201, -122.215, 7.82914, 0.23", "-223.661, -122.459, 7.84723, 0.45", "-226.809, -123.095, 7.58447, 0.23", "-229.105, -123.602, 7.28473, 0.45", "-229.898, -123.817, 7.14318, 0.23", "-231.191, -124.231, 6.85943, 0.68", "-233.896, -125.19, 6.15689, 0.23", "-237.633, -126.623, 5.23018, 0.68", "-238.541, -126.972, 5.01054, 0.23", "-239.473, -127.338, 4.83788, 0.68", "-241.363, -128.106, 4.59716, 0.23", "-242.654, -128.614, 4.51685, 0.91", "-245.745, -129.792, 4.5611, 0.23", "-247.484, -130.438, 4.66815, 1.14", "-249.601, -131.177, 4.7642, 0.23", "-251.004, -131.616, 4.8268, 0.91", "-253.155, -132.216, 4.90179, 0.23", "-254.324, -132.516, 4.91623, 0.68", "-255.654, -132.824, 4.87667, 0.23", "-257.385, -133.223, 4.84398, 0.68", "-258.946, -133.557, 4.82307, 0.23", "-260.288, -133.9, 4.83065, 0.91", "-261.231, -134.192, 4.84561, 0.23", "-262.925, -134.792, 4.86829, 0.45", "-263.7, -135.085, 4.88388, 0.23", "-265.552, -135.799, 4.91369, 0.45", "-268.583, -136.915, 4.91764, 0.23", "-270.079, -137.465, 4.92848, 0.23", "-272.178, -138.228, 4.95513, 0.68", "-274.733, -139.135, 5.00257, 0.23", "-276.233, -139.636, 5.033, 0.23", "-278.627, -140.363, 5.07872, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-216.702, -121.673, 7.4632, 0.23", "-220.158, -124.345, 5.11406, 0.23", "-221.334, -125.128, 4.42005, 0.68", "-223.51, -126.429, 3.33486, 0.23", "-225.278, -127.427, 2.53221, 0.91", "-227.782, -128.84, 1.3953, 0.23", "-230.286, -130.253, 0.258644, 0.45", "-232.727, -131.48, -0.599938, 0.23", "-235.619, -132.899, -1.6477, 0.68", "-236.408, -133.275, -1.93079, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.58968, -17.0152, 11.5185, 1.14", "3.93776, -20.8083, 15.5437, 1.14", "6.73995, -25.4914, 20.0877, 1.14", "9.06758, -29.5713, 23.6523, 0.68", "10.98, -32.9235, 26.5811, 0.68", "11.9735, -34.6649, 28.1025, 0.91", "13.8126, -37.8885, 30.919, 0.68", "15.3594, -40.8109, 33.2289, 1.14", "16.425, -42.9347, 34.6016, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.58968, -17.0152, 11.5185, 0.23", "3.20371, -20.799, 10.5647, 0.23", "5.05966, -25.2726, 9.18457, 0.23", "7.26197, -30.5227, 7.52137, 0.23", "8.76122, -33.9449, 6.4669, 1.82", "9.79765, -36.407, 5.6431, 1.82", "11.108, -39.507, 4.58843, 0.68", "12.5003, -42.9055, 3.31299, 0.23", "13.6816, -46.0889, 2.22469, 0.23", "14.3603, -48.2058, 1.43027, 0.91", "15.5092, -52.0928, -0.172506, 0.23", "16.0295, -54.2332, -1.02171, 0.23", "16.6898, -57.8958, -2.32466, 0.23", "16.8761, -59.6321, -2.81444, 0.68", "17.1029, -63.9628, -3.92555, 0.23", "17.1329, -65.6674, -4.28877, 1.36", "17.1564, -68.8872, -4.74142, 0.23", "17.1502, -70.9458, -4.96277, 0.23", "17.2158, -74.0562, -5.0962, 0.91", "17.4659, -76.8508, -5.02282, 0.91", "17.7666, -78.7604, -4.91531, 0.91", "18.8566, -83.3831, -4.74186, 0.23", "19.613, -85.7192, -4.72853, 0.23", "20.836, -88.8932, -4.87982, 0.91", "22.5279, -92.7508, -5.20661, 0.23", "24.1163, -96.1005, -5.59363, 0.45", "26.2891, -100.405, -6.20535, 0.23", "28.2757, -104.281, -6.85902, 0.68", "30.5763, -108.946, -7.80997, 0.23", "31.5979, -111.245, -8.33178, 1.14", "31.8604, -111.921, -8.4807, 1.14", "32.4351, -113.573, -8.76115, 1.14", "33.617, -117.279, -9.27546, 0.23", "34.4919, -120.092, -9.58417, 0.91", "35.8969, -124.522, -9.97075, 0.23", "36.5367, -126.52, -10.1365, 1.14", "37.9878, -130.96, -10.5355, 0.23", "38.7477, -133.269, -10.7454, 1.14", "39.8366, -136.624, -11.026, 0.23", "40.361, -138.382, -11.1485, 1.14", "40.9178, -140.41, -11.2897, 1.14", "42.0857, -145.246, -11.7005, 0.23", "42.6649, -148.091, -11.9585, 1.14", "43.3366, -151.896, -12.3454, 0.23", "43.7619, -154.54, -12.6259, 1.14", "44.4478, -158.694, -13.0392, 0.23", "44.8634, -161.093, -13.2794, 1.82", "45.7015, -165.611, -13.6964, 0.23", "45.9298, -166.772, -13.8124, 0.68", "46.3533, -168.891, -14.0348, 0.23", "46.9856, -171.974, -14.3286, 0.91", "47.5966, -175.141, -14.5874, 0.23", "47.8497, -176.515, -14.5915, 1.14", "48.2846, -178.726, -14.4932, 0.23", "48.5881, -180.2, -14.3767, 0.68", "49.466, -184.32, -13.9934, 0.23", "49.7988, -185.781, -13.8341, 1.14", "51.162, -191.234, -13.1473, 0.23", "51.8413, -194.026, -12.6393, 0.91", "52.153, -195.353, -12.3467, 0.91", "52.789, -198.184, -11.648, 0.23", "53.1263, -199.868, -11.214, 1.14", "53.3539, -201.226, -10.8822, 1.14", "54.119, -207.473, -9.88595, 0.23", "54.3582, -210.025, -9.58257, 0.91", "54.4525, -211.069, -9.54198, 0.91", "54.7795, -214.315, -9.65293, 0.23", "54.9761, -215.916, -9.84979, 0.68", "55.6126, -220.001, -10.8309, 0.23", "55.8525, -221.325, -11.3179, 0.91", "56.4601, -224.734, -12.5999, 0.23", "56.7987, -226.696, -13.2876, 1.14", "56.9668, -227.707, -13.6121, 1.14", "57.1876, -229.176, -13.9928, 1.59", "57.59, -232.54, -14.5626, 0.23", "57.74, -234.142, -14.8158, 1.14", "57.9611, -236.922, -15.1867, 0.23", "58.0493, -237.804, -15.3285, 0.68", "58.245, -239.255, -15.6085, 0.23", "58.5124, -240.643, -15.8968, 0.91", "59.0375, -242.432, -16.3411, 0.23", "59.5909, -244.144, -16.6832, 1.14", "60.6048, -247.271, -16.9853, 0.23", "61.349, -249.586, -17.057, 0.23", "62.0312, -251.758, -17.0216, 0.91", "63.3136, -255.97, -16.77, 0.23", "64.4468, -259.87, -16.375, 1.14", "66.0365, -265.588, -15.5175, 0.23", "66.4554, -267.268, -15.1997, 0.91", "66.6799, -268.313, -14.9834, 0.91", "67.1846, -271.348, -14.367, 0.23", "67.4399, -273.773, -14.0018, 1.14", "67.6455, -277.369, -13.8198, 0.23", "67.6319, -278.893, -13.8581, 0.68", "67.4849, -281.698, -13.906, 0.23", "67.3656, -283.042, -13.9244, 1.14", "66.8693, -287.312, -13.9491, 0.23", "66.7138, -288.825, -13.9417, 0.91", "66.6582, -289.582, -13.9334, 0.91", "66.5366, -292.825, -13.5966, 0.23", "66.5016, -294.217, -13.286, 0.91", "66.4126, -297.249, -12.3563, 0.23", "66.3756, -298.751, -11.8029, 1.14", "66.2758, -301.251, -10.9004, 0.23", "66.1097, -304.234, -9.88666, 0.91", "66.0287, -306.972, -9.2222, 0.23", "66.0403, -308.48, -8.95008, 0.91", "66.1188, -311.309, -8.62274, 0.23", "66.2356, -314.176, -8.3985, 1.14", "66.3372, -315.233, -8.3842, 1.14", "67.1679, -320.096, -8.84754, 0.23", "67.6668, -322.142, -9.21113, 0.23", "67.9301, -322.983, -9.39662, 0.68", "69.6224, -335.101, -9.86845, 0.68", "72.4891, -346.98, -9.22064, 0.68", "76.6119, -358.281, -7.17348, 0.68", "81.4807, -369.178, -4.76593, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.01786, -27.1486, -4.13968, 1.59", "7.93205, -27.5172, -4.12339, 1.59", "7.3045, -30.2126, -4.00426, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "8.01786, -27.1486, -4.13968, 0.23", "7.99169, -28.4841, -5.56214, 0.23", "7.983, -30.4824, -7.83847, 0.68", "8.01871, -32.6574, -10.2999, 0.23", "8.13164, -34.7949, -12.8707, 0.91", "8.3444, -38.3603, -17.2123, 0.91", "8.45868, -40.4574, -19.7323, 0.23", "8.60102, -42.0598, -21.7924, 0.23", "8.72622, -42.8121, -22.8086, 1.59", "9.41839, -45.529, -26.5273, 0.23", "9.64524, -46.0909, -27.2724, 0.23", "10.0656, -46.8433, -28.0834, 0.23", "10.6653, -47.6201, -28.8719, 0.23", "11.7358, -48.7444, -30.0871, 1.14", "12.9119, -49.8242, -31.3711, 0.68", "14.0859, -50.9374, -32.6563, 0.68", "15.1474, -52.0493, -33.9247, 0.68", "16.2853, -53.4036, -35.7229, 0.23", "17.3805, -55.0547, -37.9997, 0.23", "18.0954, -56.2994, -39.7084, 0.68", "18.7796, -57.5997, -41.5612, 0.23", "19.1998, -58.4678, -42.8592, 0.91", "20.525, -61.623, -47.7485, 0.23", "20.8198, -62.665, -49.2713, 0.23", "21.0942, -63.8531, -51.0057, 0.68", "22.9285, -69.9466, -59.7254, 0.68", "24.2764, -76.6951, -68.0849, 0.68", "26.9575, -83.6058, -75.9953, 0.68", "30.1486, -91.5673, -82.7364, 0.68", "31.7477, -99.8562, -89.6724, 0.68", "32.4926, -108.937, -95.8049, 0.68", "33.3477, -118.803, -100.708, 0.68", "36.6537, -128.025, -105.725, 0.68", "39.8229, -137.549, -110.302, 0.68", "43.8268, -147.145, -114.027, 0.68", "48.3533, -156.693, -117.246, 0.68", "52.8065, -166.697, -119.01, 0.68", "57.0416, -176.842, -120.582, 0.68", "59.963, -187.397, -122.582, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "223.247, -121.459, -43.1094, 0.23", "233.206, -126.311, -45.0287, 0.23", "242.538, -132.438, -46.7825, 0.23", "251.483, -139.448, -46.4025, 0.23", "258.887, -148.201, -45.7371, 0.23", "266.774, -156.072, -43.1062, 0.23", "274.143, -164.241, -39.834, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "223.247, -121.459, -43.1094, 0.23", "234.322, -126.791, -45.086, 0.23", "245.966, -131.017, -45.7909, 0.23", "256.856, -136.572, -48.1998, 0.23", "266.888, -142.854, -52.2113, 0.23", "276.163, -149.738, -57.0703, 0.23", "286.174, -156.585, -60.1888, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "22.0288, 24.2439, -1.9923, 0.23", "24.0852, 25.6676, -2.57659, 0.23", "26.9068, 27.5605, -3.4408, 0.68", "29.8459, 29.515, -4.25675, 0.23", "31.427, 30.6089, -4.66688, 0.91", "32.4413, 31.3392, -4.94784, 0.91", "34.0864, 32.576, -5.41671, 0.23", "36.5174, 34.4816, -6.02397, 1.59", "38.6623, 36.2628, -6.55149, 0.23", "39.9278, 37.3831, -6.88564, 1.14", "42.1068, 39.2931, -7.39878, 0.23", "43.0634, 40.0961, -7.62596, 0.23", "44.8314, 41.606, -8.07464, 1.14", "46.1936, 42.7483, -8.51593, 0.23", "47.129, 43.4982, -8.88006, 1.14", "48.5355, 44.5784, -9.44855, 1.14", "51.0516, 46.4454, -10.409, 0.23", "53.1806, 47.9847, -11.1803, 1.59", "56.3144, 50.1968, -12.2544, 0.23", "58.2978, 51.6222, -12.851, 0.68", "60.9307, 53.5162, -13.4925, 0.23", "62.6311, 54.7902, -13.8176, 1.36", "64.3893, 56.1468, -14.0135, 0.23", "66.4882, 57.8421, -14.1111, 1.36", "70.0481, 60.9396, -14.0549, 0.23", "72.6989, 63.3807, -13.9932, 0.23", "74.2072, 64.9048, -13.9432, 0.23", "75.892, 66.7865, -13.9009, 2.05", "77.7563, 69.0753, -13.8511, 0.23", "79.6234, 71.6509, -13.7781, 0.23", "80.6639, 73.237, -13.7198, 1.59", "82.2685, 75.8081, -13.6348, 0.23", "82.8303, 76.7047, -13.5976, 1.14", "83.5988, 77.9799, -13.5472, 1.14", "84.3603, 79.2169, -13.5081, 0.23", "85.7101, 81.4222, -13.4753, 1.14", "86.7374, 83.0306, -13.369, 0.23", "87.4918, 84.0828, -13.2975, 0.23", "88.3921, 85.2242, -13.2415, 0.91", "89.6102, 86.6836, -13.1998, 0.23", "90.8283, 88.1002, -13.1908, 1.36", "92.94, 90.5084, -13.3894, 0.23", "95.1477, 92.9739, -13.7936, 0.23", "96.2838, 94.1371, -14.092, 0.91", "97.0228, 94.8499, -14.3267, 0.91", "98.6842, 96.3103, -15.0032, 0.23", "100.411, 97.6626, -15.8227, 0.91", "102.508, 99.2045, -16.9932, 0.23", "104.285, 100.472, -17.9597, 1.14", "105.087, 100.996, -18.3565, 1.14", "107.073, 102.232, -19.2397, 0.23", "108.296, 102.92, -19.7023, 1.14", "110.265, 104.007, -20.2331, 0.23", "111.22, 104.528, -20.4694, 1.14", "114.602, 106.391, -21.2078, 0.23", "115.842, 107.085, -21.4525, 0.23", "118.247, 108.513, -21.8317, 1.82", "120.855, 110.103, -22.2064, 0.23", "124.018, 112.076, -22.5993, 1.36", "124.893, 112.659, -22.7029, 0.23", "126.093, 113.536, -22.8203, 0.68", "128.258, 115.204, -22.993, 0.23", "129.357, 116.17, -23.0592, 0.23", "130.261, 117.02, -23.1001, 1.14", "131.17, 117.933, -23.0749, 1.14", "131.887, 118.705, -23.0756, 0.23", "132.427, 119.284, -23.1191, 0.23", "133.342, 120.325, -23.2653, 1.14", "134.048, 121.193, -23.4047, 1.14", "135.214, 122.665, -23.7533, 0.23", "135.849, 123.462, -23.9801, 0.91", "137.183, 125.167, -24.5008, 0.23", "138.611, 127.056, -25.1056, 1.14", "139.881, 128.723, -25.6418, 0.23", "141.407, 130.648, -26.3426, 1.14", "142.184, 131.598, -26.706, 0.23", "143.081, 132.681, -27.1036, 0.68", "144.5, 134.337, -27.6487, 0.23", "145.033, 134.901, -27.8631, 0.91", "147.28, 137.279, -28.783, 0.23", "148.109, 138.214, -29.1194, 0.23", "149.06, 139.382, -29.5725, 0.23", "150.11, 140.841, -30.2059, 0.91", "151.292, 142.839, -31.1109, 0.23", "152.129, 144.781, -32.0514, 1.14", "152.388, 145.712, -32.5084, 0.23", "152.627, 146.999, -33.173, 0.91", "152.878, 149.283, -34.3304, 0.23", "152.939, 150.847, -35.0861, 0.91", "152.919, 152.956, -36.0191, 0.23", "152.9, 154.216, -36.6438, 0.91", "152.886, 155.791, -37.4596, 0.23", "152.919, 157.746, -38.494, 0.23", "152.928, 158.668, -38.9734, 0.91", "152.949, 159.898, -39.6219, 0.23", "153.034, 162.34, -40.8871, 1.14", "153.064, 163.25, -41.3632, 1.14", "153.147, 166.533, -43.024, 0.23", "153.185, 168.261, -43.9147, 0.23", "153.205, 168.876, -44.2192, 0.45", "153.237, 169.677, -44.5756, 0.23", "153.25, 170.655, -44.9003, 0.23", "153.279, 172.635, -45.5248, 0.23", "161.031, 181.503, -46.2671, 0.23", "169.118, 189.675, -48.8385, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.0288, 24.2439, -1.9923, 0.23", "24.5253, 25.5034, -1.8477, 0.23", "28.9246, 27.7574, -1.61703, 0.91", "32.6755, 29.6116, -1.50628, 0.23", "34.7933, 30.6335, -1.44371, 0.91", "37.1098, 31.7283, -1.34028, 0.23", "39.2425, 32.7341, -1.20586, 0.23", "41.1271, 33.6174, -1.10288, 0.91", "43.0857, 34.5788, -1.00563, 0.23", "45.358, 35.7422, -0.744951, 0.91", "48.0979, 37.1787, -0.416666, 0.23", "50.6232, 38.5439, -0.0399823, 0.68", "52.3928, 39.5044, 0.222363, 0.23", "54.1074, 40.4605, 0.488175, 1.14", "56.586, 41.9577, 0.926263, 0.23", "58.0213, 42.8618, 1.12969, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.8455, 338.744, -72.2748, 0.23", "-17.2434, 346.389, -74.3752, 0.23", "-19.1088, 353.663, -76.8453, 0.23", "-20.0208, 361.051, -79.5234, 0.23", "-21.8474, 368.656, -80.9101, 0.23", "-25.0955, 375.826, -81.7254, 0.23", "-28.6771, 382.85, -81.0205, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.8455, 338.744, -72.2748, 0.23", "-18.1003, 351.625, -74.5759, 0.23", "-17.8013, 364.729, -75.8381, 0.23", "-16.7495, 377.86, -75.2693, 0.23", "-16.7979, 391.049, -74.898, 0.23", "-16.3806, 404.081, -72.8736, 0.23", "-14.6076, 417.062, -71.4769, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-28.7255, 18.0657, -16.8044, 0.23", "-30.5593, 16.4761, -18.5786, 0.23", "-31.6482, 15.5938, -19.6709, 0.23", "-32.6167, 14.7965, -20.6082, 0.91", "-34.4616, 13.2453, -22.2476, 0.68", "-36.1043, 11.8553, -23.5605, 0.23", "-37.3262, 10.8615, -24.4098, 0.68", "-39.3289, 9.22401, -25.7272, 0.23", "-40.2177, 8.5613, -26.1856, 0.91", "-42.0844, 7.30436, -26.9255, 0.23", "-43.2532, 6.57199, -27.2048, 1.14", "-45.6612, 5.01345, -27.5049, 0.23", "-46.6363, 4.33447, -27.5802, 0.68", "-47.6553, 3.58622, -27.6046, 0.23", "-48.443, 2.96143, -27.6235, 0.23", "-49.0653, 2.42659, -27.6237, 0.23", "-50.6049, 0.862448, -27.6761, 1.14", "-52.2001, -1.00734, -27.737, 0.23", "-53.89, -3.16155, -27.9321, 0.91", "-55.217, -4.92317, -28.1561, 0.23", "-56.1639, -6.27443, -28.351, 1.14", "-57.8743, -8.73244, -28.7484, 0.23", "-58.7595, -10.0344, -28.9881, 0.91", "-60.1777, -12.2336, -29.3918, 0.23", "-61.0103, -13.6488, -29.6716, 1.14", "-62.1016, -15.5748, -30.1739, 0.23", "-68.9561, -24.3665, -31.3967, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-28.7255, 18.0657, -16.8044, 0.23", "-27.3438, 18.0363, -18.7569, 0.23", "-25.603, 18.0945, -21.1199, 0.91", "-24.187, 18.1362, -22.9332, 0.23", "-23.7699, 18.1685, -23.4979, 0.68", "-22.7835, 18.3006, -24.9288, 0.23", "-22.1595, 18.4349, -25.953, 1.14", "-20.6656, 18.8132, -28.5863, 0.23", "-19.6522, 19.1099, -30.7897, 0.91", "-18.2631, 19.4766, -34.3792, 0.23", "-17.7175, 19.6139, -36.0429, 1.36", "-16.6906, 19.9355, -40.0986, 0.23", "-16.3458, 20.0649, -42.1101, 0.91", "-15.9085, 20.2323, -47.176, 0.23", "-15.8141, 20.2812, -49.6477, 0.68", "-15.8215, 20.2342, -52.3039, 0.91", "-15.9224, 20.0846, -55.2824, 0.23", "-16.0941, 19.951, -56.9388, 0.23", "-16.4355, 19.8645, -58.7595, 1.14", "-13.5004, 20.8211, -68.582, 1.14", "-8.57986, 23.5557, -77.2244, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-33.118, 28.7558, 4.15701, 0.23", "-34.0449, 30.5204, 4.86578, 0.23", "-34.9286, 32.0757, 5.47859, 0.23", "-35.3179, 32.7038, 5.71746, 0.91", "-36.5932, 34.6795, 6.53619, 0.23", "-37.3707, 35.8353, 7.02549, 0.91", "-39.0194, 38.2016, 8.02411, 0.23", "-40.0472, 39.5916, 8.69657, 1.14", "-41.6824, 41.6708, 9.73339, 0.23", "-42.8707, 43.1202, 10.4372, 0.91", "-43.9672, 44.3659, 11.0209, 0.23", "-44.8845, 45.3677, 11.5722, 0.91", "-46.2435, 46.7203, 12.4454, 0.23", "-47.3357, 47.7443, 13.1852, 0.68", "-48.1462, 48.4025, 13.7096, 0.23", "-49.0279, 49.0027, 14.254, 0.68", "-50.9089, 50.0752, 15.4131, 0.23", "-51.8302, 50.4976, 15.979, 1.14", "-53.3204, 51.0375, 16.8524, 0.23", "-55.147, 51.5788, 17.9439, 0.23", "-57.0376, 52.0273, 18.9867, 0.68", "-58.0041, 52.2372, 19.4519, 0.23", "-60.2799, 52.6906, 20.3561, 0.68", "-61.1292, 52.8613, 20.6702, 0.23", "-62.3651, 53.1238, 21.0825, 0.68", "-63.7747, 53.4838, 21.4933, 0.23", "-65.7306, 54.0548, 21.9899, 0.91", "-67.8674, 54.8044, 22.5262, 0.23", "-69.6798, 55.551, 22.9601, 0.91", "-71.529, 56.4269, 23.5149, 0.23", "-72.3892, 56.8668, 23.8161, 0.23", "-74.1023, 57.8431, 24.4657, 0.91", "-75.5968, 58.7927, 25.128, 0.23", "-76.563, 59.4791, 25.6012, 0.68", "-78.9656, 61.3495, 26.8819, 0.23", "-80.386, 62.5662, 27.6875, 0.68", "-82.0923, 64.155, 28.6814, 0.23", "-83.5894, 65.7802, 29.6642, 0.23", "-84.4891, 66.9109, 30.3166, 0.23", "-85.23, 68.0462, 30.9001, 0.68", "-85.6116, 68.7771, 31.2359, 0.23", "-85.8785, 69.3855, 31.5175, 0.91", "-87.0019, 72.3497, 32.9197, 0.23", "-87.4155, 73.5809, 33.4468, 0.23", "-87.9457, 75.3546, 34.2263, 0.23", "-88.4873, 77.1292, 35.0123, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-33.118, 28.7558, 4.15701, 0.45", "-35.3808, 28.3804, 3.60334, 0.45", "-38.279, 27.7897, 2.95198, 0.91", "-39.7904, 27.4399, 2.53233, 0.23", "-42.0663, 26.7854, 1.74578, 0.91", "-42.8899, 26.5199, 1.43924, 0.91", "-43.8758, 26.1876, 1.05021, 0.23", "-45.705, 25.5106, 0.267697, 0.68", "-47.7839, 24.641, -0.670388, 0.23", "-49.9041, 23.7428, -1.63152, 1.14", "-51.1036, 23.2417, -2.1955, 1.14", "-53.4738, 22.3043, -3.33603, 0.23", "-54.8892, 21.8165, -3.99685, 1.14", "-57.4518, 21.0196, -5.18933, 0.23", "-58.8948, 20.6248, -5.7773, 0.23", "-61.3164, 20.01, -6.67375, 0.23", "-61.7733, 19.8842, -6.81898, 0.91", "-63.1156, 19.5051, -7.15383, 1.59", "-66.1282, 18.6866, -7.72424, 0.23", "-69.0084, 17.9611, -8.08897, 1.36", "-71.3936, 17.3885, -8.24189, 0.91", "-74.7396, 16.6217, -8.25094, 0.23", "-77.2102, 16.0748, -8.18026, 1.14", "-79.6893, 15.5481, -8.02804, 0.23", "-81.1506, 15.2933, -7.86583, 0.23", "-83.2748, 14.9986, -7.60776, 0.68", "-84.3999, 14.8844, -7.47056, 0.68", "-85.9948, 14.7576, -7.30054, 0.23", "-88.0276, 14.5677, -7.10165, 0.91", "-89.8861, 14.3861, -6.98079, 0.23", "-90.7939, 14.2989, -6.95403, 0.91", "-92.3874, 14.1611, -6.96297, 0.23", "-95.3719, 13.9016, -7.0073, 1.14", "-96.5066, 13.8015, -7.03431, 0.23", "-98.1048, 13.6618, -7.08373, 0.68", "-100.182, 13.4616, -7.15539, 0.23", "-101.774, 13.3106, -7.15508, 0.45", "-103.164, 13.1477, -7.05735, 0.23", "-103.841, 13.0634, -6.96879, 0.23", "-105.636, 12.8143, -6.57928, 0.91", "-108.679, 12.319, -5.71781, 0.23", "-110.809, 11.9589, -5.04225, 0.91", "-114.755, 11.3079, -3.70512, 0.23", "-115.814, 11.1291, -3.3292, 0.23", "-118.511, 10.6242, -2.31747, 1.59", "-121.898, 9.90646, -0.91201, 0.23", "-122.949, 9.66518, -0.455192, 0.91", "-123.619, 9.5103, -0.159807, 0.91", "-126.234, 8.91569, 0.997591, 0.23", "-128.634, 8.3312, 2.03458, 0.91", "-130.943, 7.75421, 2.98033, 0.23", "-132.183, 7.44064, 3.48681, 1.14", "-134.597, 6.82301, 4.39717, 0.23", "-135.893, 6.48506, 4.82017, 0.91", "-136.911, 6.25115, 5.08184, 0.23", "-138.282, 5.97836, 5.29123, 0.68", "-142.004, 5.29614, 5.60828, 0.23", "-143.577, 5.00527, 5.71031, 0.91", "-145.466, 4.65725, 5.77918, 0.23", "-147.678, 4.28208, 5.80011, 0.68", "-149.96, 3.89492, 5.75676, 0.23", "-151.675, 3.5897, 5.67284, 0.23", "-153.842, 3.14434, 5.48711, 0.91", "-156.291, 2.59715, 5.27194, 0.23", "-158.019, 2.19718, 5.12662, 1.14", "-160.533, 1.5772, 4.93225, 0.23", "-161.864, 1.27241, 4.8549, 0.91", "-163.979, 0.903138, 4.72244, 0.23", "-166.473, 0.618925, 4.6048, 0.91", "-167.869, 0.522737, 4.58978, 0.23", "-169.047, 0.501915, 4.62774, 0.68", "-170.329, 0.558754, 4.6843, 0.23", "-172.666, 0.773863, 4.86936, 0.91", "-174.938, 1.03517, 5.19748, 0.23", "-176.044, 1.19379, 5.42276, 0.23", "-176.908, 1.3085, 5.63069, 0.91", "-177.829, 1.41464, 5.89269, 0.23", "-180.192, 1.6166, 6.62688, 0.91", "-182.202, 1.71615, 7.45344, 0.23", "-183.706, 1.75809, 8.26259, 0.68", "-184.891, 1.75971, 9.00379, 0.23", "-187.328, 1.64004, 10.7949, 0.91", "-188.59, 1.55695, 11.7739, 0.23", "-191.015, 1.34335, 13.7715, 0.91", "-193.244, 1.11948, 15.7329, 0.23", "-194.64, 0.902808, 17.0953, 0.91", "-196.858, 0.540813, 19.5866, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "42.1977, 42.7273, 8.19244, 0.23", "43.8015, 44.0208, 9.85435, 0.23", "44.869, 44.7898, 10.9715, 0.91", "46.2156, 45.6626, 12.4733, 0.23", "48.121, 46.8606, 14.594, 0.23", "48.696, 47.2157, 15.2276, 0.91", "49.9934, 48.05, 16.7289, 0.23", "50.9562, 48.6339, 17.9106, 0.68", "52.2849, 49.5076, 19.6248, 0.23", "53.2174, 50.2083, 20.9416, 0.68", "54.3643, 51.2644, 22.6054, 0.23", "55.4359, 52.3411, 24.1685, 0.68", "55.9599, 52.9182, 24.9092, 0.23", "56.4982, 53.5211, 25.6198, 0.91", "57.7722, 54.8172, 27.0248, 0.23", "58.7847, 55.7064, 27.9794, 0.68", "60.3175, 56.8887, 29.1982, 0.23", "61.3261, 57.53, 29.8961, 0.68", "63.455, 58.7224, 31.381, 0.23", "65.4758, 59.7552, 32.7643, 0.91", "66.878, 60.4525, 33.6191, 0.23", "67.6081, 60.8141, 34.0525, 0.23", "70.0877, 62.1622, 35.5341, 0.68", "72.086, 63.3926, 36.7596, 0.23", "73.2651, 64.2766, 37.5177, 0.91", "75.7895, 66.4886, 39.0665, 0.23", "76.5061, 67.1795, 39.4567, 0.23", "77.6913, 68.4115, 39.9872, 0.91", "79.4749, 70.3701, 40.5351, 0.23", "80.7852, 71.8781, 40.8274, 0.91", "82.7568, 74.1977, 41.2405, 0.23", "84.1984, 75.909, 41.5292, 0.68", "85.9466, 77.8966, 41.7676, 0.23", "87.1637, 79.2072, 41.8201, 0.23", "88.3442, 80.4256, 41.7214, 0.91", "96.4888, 84.5458, 44.9353, 0.91", "104.908, 86.1582, 49.2844, 0.91", "114.308, 86.6336, 51.106, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "42.1977, 42.7273, 8.19244, 0.23", "44.4899, 42.8482, 7.00961, 0.23", "46.3874, 42.9268, 6.09165, 0.68", "49.1281, 42.9984, 4.80643, 1.36", "52.2196, 43.0151, 3.45847, 0.23", "53.7258, 43.0082, 2.86955, 0.45", "56.1581, 43.0001, 1.99693, 0.45", "58.1118, 42.9972, 1.45408, 0.23", "59.7793, 42.967, 1.11152, 1.14", "61.0581, 42.9674, 0.965764, 1.14", "62.5268, 43.0352, 0.92676, 0.45", "66.2494, 43.491, 1.07277, 0.23", "67.861, 43.7718, 1.26629, 1.14", "68.9861, 43.9769, 1.4683, 0.23", "70.3608, 44.2758, 1.78989, 0.23", "72.3851, 44.7221, 2.27573, 0.91", "74.5927, 45.2104, 2.74939, 0.23", "75.1832, 45.3412, 2.8859, 0.68", "76.1451, 45.5391, 3.0638, 0.68", "77.5775, 45.8066, 3.20347, 0.23", "79.9522, 46.2137, 3.39919, 0.91", "82.8401, 46.8027, 3.609, 0.23", "84.2503, 47.0957, 3.69711, 1.14", "85.3296, 47.3052, 3.78127, 1.14", "88.8275, 47.9744, 4.10528, 0.23", "90.6436, 48.3127, 4.31486, 0.68", "91.9315, 48.5941, 4.57086, 0.23", "94.476, 49.2525, 5.29704, 1.14", "96.9116, 50.0613, 6.11947, 0.23", "98.0458, 50.5586, 6.60404, 0.91", "98.6954, 50.9238, 6.92695, 1.36", "100.685, 52.3005, 7.90772, 0.23", "101.974, 53.3451, 8.60884, 0.91", "102.855, 54.1652, 9.13114, 0.91", "104.209, 55.5212, 9.92017, 0.23", "105.571, 56.8462, 10.6965, 0.91", "107.636, 58.6951, 11.8136, 0.23", "108.985, 59.7999, 12.5012, 0.91", "110.762, 61.096, 13.4197, 0.23", "111.277, 61.4475, 13.692, 0.23", "112.719, 62.3825, 14.4664, 0.23", "114.483, 63.4639, 15.4775, 0.68", "115.802, 64.1989, 16.212, 0.23", "117.267, 65.0249, 17.0426, 0.23", "118.797, 65.8489, 17.9446, 0.68", "127.778, 67.1609, 18.1384, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "17.7078, 58.4213, 4.286, 0.23", "16.4988, 59.1994, 3.96739, 0.23", "15.3559, 60.0394, 3.59396, 0.91", "13.6809, 61.5274, 2.98543, 0.23", "13.0821, 62.2283, 2.67709, 1.14", "12.5855, 62.9588, 2.36803, 0.23", "12.0948, 63.8232, 2.02669, 0.68", "11.6913, 64.9081, 1.62725, 0.23", "11.4042, 66.2117, 1.14566, 1.36", "11.1566, 68.4015, 0.350704, 0.23", "11.0904, 69.5519, -0.0528437, 0.91", "11.0548, 70.6953, -0.441653, 0.23", "11.0351, 72.0317, -0.854619, 0.68", "11.0172, 73.1681, -1.16563, 0.23", "11.0268, 73.9647, -1.35837, 1.14", "11.108, 75.3843, -1.64956, 0.23", "11.202, 76.3665, -1.85331, 0.23", "11.3083, 77.2878, -2.03611, 0.91", "11.4556, 78.4237, -2.2346, 0.23", "11.6273, 79.688, -2.42588, 0.23", "11.8793, 81.3195, -2.64926, 1.14", "12.0119, 82.1043, -2.73407, 1.14", "12.2979, 83.5612, -2.88994, 0.23", "12.522, 84.7203, -3.00404, 0.23", "12.6924, 85.6469, -3.06792, 0.23", "12.8098, 86.4051, -3.12675, 0.23", "12.8893, 87.0932, -3.20006, 0.45", "12.9838, 88.6718, -3.56229, 0.23", "12.9678, 89.4412, -3.81867, 0.91", "12.9106, 90.1847, -4.14607, 0.91", "12.8012, 91.3043, -4.70455, 0.68", "12.6667, 92.9033, -5.56197, 1.36", "12.5401, 94.8123, -6.6314, 0.23", "12.5406, 95.5681, -7.05148, 0.23", "12.6489, 96.7223, -7.66284, 0.23", "12.8229, 97.493, -8.02997, 1.14", "13.3596, 98.8335, -8.47336, 0.23", "13.5174, 99.1068, -8.51969, 0.68", "14.6335, 100.711, -8.59306, 0.23", "14.9276, 101.121, -8.58786, 1.14", "15.6245, 102.149, -8.51276, 0.23", "16.5275, 103.484, -8.3927, 0.91", "17.0151, 104.216, -8.2937, 0.23", "17.7993, 105.442, -8.10577, 0.68", "18.3348, 106.324, -7.92084, 0.68", "18.8431, 107.216, -7.73326, 0.23", "18.1333, 114.141, -9.01829, 0.23", "18.3308, 121.227, -9.34883, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "17.7078, 58.4213, 4.286, 0.23", "18.368, 59.4739, 4.7007, 0.23", "19.5221, 61.1322, 5.22099, 1.14", "21.2316, 63.5063, 5.89463, 0.23", "22.2224, 64.9045, 6.27398, 0.68", "23.0928, 66.1521, 6.60591, 0.23", "24.0718, 67.571, 6.98017, 0.68", "25.6731, 69.9684, 7.49234, 0.23", "26.7765, 71.7446, 7.7966, 0.91", "27.8262, 73.6406, 8.09451, 0.23", "28.1497, 74.2824, 8.23337, 0.91", "29.2258, 76.6442, 8.88004, 0.23", "30.3276, 79.245, 9.70012, 0.91", "31.2832, 81.7036, 10.5992, 0.23", "31.6672, 82.7338, 11.0021, 0.91", "32.7902, 85.6193, 12.2873, 0.23", "33.1809, 86.5186, 12.788, 1.14", "33.5289, 87.177, 13.2594, 1.14", "34.1881, 88.0853, 14.1542, 0.23", "35.1859, 89.1125, 15.391, 0.91", "36.3894, 89.9843, 16.689, 0.23", "38.0366, 90.822, 18.2066, 0.23", "39.1417, 91.1817, 19.2119, 0.91", "40.8201, 91.5088, 20.6836, 0.23", "41.8286, 91.6224, 21.5346, 0.91", "44.0519, 91.7395, 23.2954, 0.23", "45.4813, 91.7809, 24.3427, 0.68", "48.4528, 91.8255, 26.3293, 0.23", "49.6567, 91.8254, 27.0925, 0.68", "50.5568, 91.8219, 27.6044, 0.23", "52.1196, 91.8126, 28.4403, 0.91", "53.1293, 91.7915, 28.9192, 0.23", "54.2647, 91.7815, 29.395, 0.23", "55.1304, 91.7897, 29.7084, 0.23", "56.9767, 91.8462, 30.4126, 0.91", "57.8311, 91.8958, 30.7522, 0.23", "59.1486, 92.0492, 31.2218, 0.68", "61.3425, 92.4403, 31.9402, 0.23", "62.2868, 92.6835, 32.1948, 0.91", "64.1177, 93.3053, 32.6127, 0.23", "65.0844, 93.6741, 32.8103, 0.91", "67.747, 94.7967, 33.2903, 0.23", "69.3489, 95.5475, 33.5206, 0.91", "71.0155, 96.32, 33.6404, 0.23", "72.5915, 97.0935, 33.6552, 0.68", "80.1178, 102.695, 36.3713, 0.68", "88.4933, 107.467, 37.5918, 0.68", "96.4017, 112.697, 39.8406, 0.68", "103.82, 118.665, 42.0909, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-236.408, -133.275, -1.93079, 0.23", "-238.4, -135.815, -1.24055, 0.23", "-239.593, -137.49, -0.887883, 0.68", "-240.636, -139.039, -0.603179, 0.23", "-242.113, -141.281, -0.221382, 0.45", "-244.673, -145.23, 0.425653, 0.23", "-246.313, -147.749, 0.821563, 0.23", "-247.865, -150.333, 1.17138, 0.91", "-249.212, -152.597, 1.55862, 0.23", "-249.777, -153.579, 1.7287, 0.23", "-250.607, -155.062, 1.99259, 0.91", "-251.731, -157.258, 2.3916, 0.23", "-252.332, -158.521, 2.69107, 0.91", "-253.833, -162.458, 3.55929, 0.23", "-254.742, -165.546, 4.10041, 0.23", "-255.525, -168.47, 4.59804, 0.23", "-256.276, -171.66, 5.11202, 0.23", "-256.866, -174.727, 5.56461, 0.68", "-257.533, -178.952, 6.07338, 0.23", "-257.84, -182.403, 6.3162, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-236.408, -133.275, -1.93079, 0.23", "-241.284, -134.389, -3.72763, 0.23", "-244.783, -135.29, -4.82695, 0.45", "-248.348, -136.252, -5.69594, 0.23", "-250.106, -136.753, -6.15066, 0.23", "-251.319, -137.112, -6.45857, 0.23", "-252.9, -137.606, -6.9322, 0.68", "-256.598, -138.967, -8.03939, 0.23", "-258.514, -139.772, -8.62742, 0.45", "-262.247, -141.483, -9.87961, 0.23", "-266.264, -143.345, -11.2725, 0.91", "-270.209, -145.137, -12.6442, 0.23", "-273.442, -146.65, -13.7988, 0.91", "-275.183, -147.453, -14.4212, 0.23", "-276.247, -147.947, -14.8095, 0.91", "-278.19, -148.794, -15.4299, 0.23", "-280.667, -149.843, -16.5063, 0.68", "-283.861, -151.171, -18.0855, 0.23", "-285.893, -152.0, -19.2478, 0.68", "-288.198, -153.005, -20.6111, 0.23", "-289.885, -153.815, -21.7271, 0.91", "-295.347, -156.623, -25.5575, 0.23", "-297.79, -157.932, -27.3699, 0.23", "-299.379, -158.768, -28.5846, 0.23", "-302.466, -160.383, -30.8985, 0.91", "-305.725, -162.133, -33.3406, 0.23", "-307.553, -163.154, -34.6589, 0.23", "-309.173, -164.059, -35.7714, 0.68", "-311.912, -165.651, -37.7953, 0.23", "-313.701, -166.714, -39.1614, 0.91", "-316.451, -168.369, -41.3298, 0.23", "-318.985, -169.913, -43.1793, 0.91", "-322.198, -172.044, -45.4772, 0.23", "-323.632, -173.044, -46.4721, 0.23", "-325.674, -174.535, -47.8013, 0.68", "-327.668, -176.047, -48.9936, 0.23", "-329.725, -177.668, -50.0691, 1.14", "-331.913, -179.421, -51.1486, 0.23", "-333.961, -181.064, -52.0233, 0.23", "-336.614, -183.279, -53.153, 0.91", "-338.971, -185.272, -54.0826, 0.23", "-341.795, -187.765, -55.3631, 1.14", "-343.014, -188.842, -55.99, 0.23", "-343.949, -189.613, -56.4849, 0.91", "-346.197, -191.488, -57.6903, 0.23", "-348.839, -193.686, -59.27, 1.14", "-352.837, -196.95, -61.8626, 0.23", "-354.335, -198.172, -62.8753, 0.23", "-356.218, -199.815, -64.2378, 0.45", "-366.814, -207.138, -68.9201, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "16.425, -42.9347, 34.6016, 0.23", "17.2567, -43.8975, 34.978, 0.23", "18.1336, -44.961, 35.4033, 0.91", "20.2499, -47.5532, 36.3966, 0.23", "21.7799, -49.4138, 37.0933, 0.91", "23.8812, -51.9886, 37.9772, 0.23", "24.5685, -52.8751, 38.2625, 0.23", "26.0043, -54.9479, 38.8598, 0.23", "26.4641, -55.6807, 39.1295, 0.68", "27.3035, -57.1775, 39.7381, 0.23", "27.9833, -58.5252, 40.4376, 0.91", "29.0307, -60.9216, 41.9471, 0.23", "29.2315, -61.3834, 42.2945, 0.91", "30.8797, -65.1364, 45.3604, 0.23", "31.2381, -65.8913, 46.0194, 0.91", "32.3017, -67.7155, 47.8116, 0.23", "32.9285, -68.498, 48.7252, 0.91", "35.2706, -70.6404, 51.5688, 0.23", "35.9156, -71.1329, 52.2098, 0.23", "36.7827, -71.7085, 52.9411, 0.91", "39.4762, -73.356, 54.9896, 0.23", "42.5023, -75.0425, 57.1789, 0.23", "45.4687, -76.6641, 59.2773, 0.23", "47.5651, -77.8488, 60.7523, 0.23", "50.1979, -79.3616, 62.6736, 0.23", "51.6446, -80.2253, 63.7477, 0.91", "55.0767, -82.3568, 66.0742, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "16.425, -42.9347, 34.6016, 0.23", "15.9374, -47.6174, 35.2683, 0.23", "15.6787, -50.4334, 35.78, 0.23", "15.2823, -54.6895, 36.6192, 0.91", "14.9437, -58.2095, 37.4544, 0.23", "14.7771, -59.7794, 37.8469, 0.23", "14.5534, -62.1826, 38.4363, 1.14", "14.2374, -66.23, 39.4855, 0.23", "14.117, -68.9395, 40.1542, 0.23", "14.1186, -71.9262, 40.7937, 0.91", "14.2609, -74.7018, 41.2323, 0.23", "14.6298, -77.9238, 41.6117, 0.23", "14.887, -79.453, 41.72, 0.91", "15.3728, -81.7339, 41.9057, 0.68", "16.1463, -84.8996, 42.3155, 0.23", "16.5751, -86.6346, 42.5948, 0.91", "17.7881, -91.4695, 43.7092, 0.23", "18.2112, -93.4984, 44.2984, 0.91", "19.1719, -99.396, 46.2533, 0.23", "19.4814, -102.483, 47.4553, 0.91", "19.5312, -104.173, 48.237, 0.91", "19.4034, -107.645, 50.0128, 0.23", "19.11, -110.145, 51.3932, 0.91", "18.6844, -112.226, 52.7049, 0.23", "18.012, -114.329, 54.2552, 0.91", "17.1235, -116.421, 56.0896, 0.23", "16.5749, -117.48, 57.1583, 1.14", "16.106, -118.226, 58.0234, 0.23", "14.2645, -121.264, 61.9888, 0.91", "13.32, -122.859, 64.1621, 0.23", "12.8452, -123.706, 65.2843, 1.14", "12.3189, -124.846, 66.759, 0.23", "11.9081, -126.063, 68.2931, 0.91", "11.4352, -128.374, 71.0432, 0.23", "11.3266, -129.447, 72.2174, 0.91", "11.2763, -130.084, 72.8896, 0.23", "11.15, -133.096, 76.1435, 0.91", "11.0913, -135.566, 78.9594, 0.23", "11.0367, -138.247, 82.0304, 0.91", "10.9805, -140.264, 84.3841, 0.23", "10.9558, -141.494, 85.8804, 1.14", "10.8745, -143.896, 88.869, 0.23", "10.6542, -146.132, 91.655, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.3045, -30.2126, -4.00426, 0.23", "7.81892, -33.5838, -2.02325, 0.23", "8.05273, -35.2143, -0.802232, 0.23", "8.4197, -37.3364, 0.928261, 0.91", "8.59194, -38.1834, 1.61864, 0.23", "9.02372, -39.9882, 3.08981, 0.68", "9.43465, -41.5944, 4.54544, 0.23", "10.1616, -44.4296, 7.31345, 0.68", "10.3646, -45.1805, 8.09991, 0.68", "10.6861, -46.2389, 9.19754, 0.23", "11.1584, -47.7909, 10.7966, 1.14", "12.0252, -50.8936, 13.6245, 0.23", "12.1582, -51.5139, 14.0969, 0.23", "12.2856, -52.177, 14.5183, 0.23", "12.5007, -53.5246, 15.3084, 1.14", "12.8668, -56.5357, 17.0794, 0.23", "13.0649, -58.6586, 18.2391, 1.14", "13.393, -62.535, 20.2739, 0.23", "13.6264, -65.3607, 21.8022, 0.23", "13.7973, -67.288, 22.8556, 0.68", "14.1316, -71.0532, 24.8618, 0.23", "14.2719, -72.683, 25.7011, 1.14", "14.5041, -75.5715, 27.193, 0.23", "14.5879, -76.7551, 27.7282, 0.23", "14.695, -77.9738, 28.1817, 0.23", "14.9002, -79.9461, 28.8703, 0.91", "15.0905, -81.7407, 29.5053, 0.23", "15.2574, -83.4023, 30.1709, 0.91", "15.4002, -85.0314, 30.9448, 0.23", "15.5364, -86.7976, 31.9851, 0.91", "15.6068, -88.9589, 33.513, 0.23", "15.6869, -92.8437, 36.5149, 0.23", "15.7373, -93.7364, 37.1469, 0.68", "16.022, -96.4626, 39.0097, 1.14", "16.5298, -99.1187, 40.7971, 0.23", "17.4943, -102.711, 43.0649, 0.23", "18.0432, -104.291, 43.9452, 0.23", "19.995, -109.126, 46.2856, 0.23", "21.0047, -111.505, 47.2995, 0.68", "23.1045, -116.416, 49.2421, 0.23", "23.9778, -118.318, 49.9433, 0.68", "25.59, -121.589, 51.1291, 0.23", "26.5395, -123.603, 51.9487, 0.23", "27.4516, -125.746, 52.9868, 0.91", "29.3032, -130.754, 55.1336, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.3045, -30.2126, -4.00426, 0.23", "5.70522, -31.96, -4.84768, 0.23", "4.12341, -34.0335, -5.63485, 0.68", "2.26899, -36.7515, -6.6552, 0.68", "1.34157, -38.2326, -7.18003, 0.68", "0.515822, -39.6637, -7.63985, 0.68", "-0.610117, -41.7017, -8.24416, 0.23", "-1.44976, -43.5249, -8.63559, 0.23", "-2.36827, -45.8811, -9.04829, 0.23", "-2.9611, -47.4858, -9.26288, 0.23", "-3.80063, -49.6535, -9.55207, 1.14", "-4.27123, -50.8246, -9.69323, 1.14", "-5.58453, -53.743, -9.86142, 0.23", "-6.62759, -55.9372, -9.84562, 0.91", "-7.69582, -58.2445, -9.75587, 0.91", "-8.09695, -59.1209, -9.72203, 0.91", "-9.44944, -62.1542, -9.69319, 0.23", "-10.7346, -65.2354, -9.67164, 0.23", "-12.0071, -68.4348, -9.65291, 0.23", "-12.8007, -70.611, -9.63918, 0.23", "-13.5693, -72.9506, -9.6962, 0.91", "-14.8478, -77.2072, -9.92127, 0.23", "-15.7909, -80.6324, -10.2153, 0.91", "-16.1211, -81.9393, -10.3683, 0.91", "-16.5308, -83.7068, -10.5515, 0.23", "-17.018, -85.9497, -10.7224, 0.68", "-17.6211, -88.6677, -10.9111, 0.23", "-17.8883, -89.8209, -10.9803, 0.68", "-18.566, -92.445, -11.1811, 0.23", "-18.9033, -93.594, -11.2563, 1.14", "-19.5009, -95.3616, -11.3422, 1.14", "-20.5766, -98.0937, -11.4348, 0.23", "-21.9059, -100.947, -11.5711, 0.23", "-22.7438, -102.435, -11.6605, 0.91", "-23.6361, -103.785, -11.7568, 0.91", "-24.9549, -105.56, -11.7883, 0.23", "-26.3439, -107.263, -11.7305, 0.91", "-27.1285, -108.142, -11.6533, 0.91", "-29.1461, -110.14, -11.369, 0.23", "-30.162, -111.122, -11.2043, 0.23", "-32.6949, -113.582, -10.7482, 0.68", "-33.8134, -114.725, -10.5306, 0.23", "-34.5558, -115.568, -10.3822, 1.14", "-35.2328, -116.402, -10.2621, 1.14", "-36.9529, -118.71, -10.0229, 0.23", "-37.7969, -119.859, -9.96696, 0.23", "-39.0496, -121.719, -9.99855, 1.14", "-40.2674, -123.745, -10.1104, 0.23", "-40.7302, -124.585, -10.2182, 0.68", "-41.3623, -125.905, -10.4564, 0.23", "-42.0422, -127.568, -10.8236, 0.23", "-42.7006, -129.742, -11.3892, 0.68", "-43.3, -132.372, -12.1405, 0.23", "-43.6415, -134.853, -12.8378, 0.23", "-43.7799, -137.384, -13.5045, 0.45", "-43.7202, -138.854, -13.8888, 1.59", "-43.2574, -142.836, -14.862, 0.23", "-43.1109, -143.701, -15.063, 0.23", "-42.5539, -146.227, -15.5622, 1.14", "-42.1468, -147.864, -15.8476, 1.14", "-41.4264, -150.644, -16.3419, 0.23", "-40.9717, -152.358, -16.6465, 0.91", "-40.0807, -155.75, -17.21, 0.23", "-39.7689, -157.138, -17.4641, 0.23", "-39.3911, -159.108, -17.8759, 1.14", "-39.1992, -160.26, -18.1268, 1.14", "-38.4896, -164.965, -19.2196, 0.23", "-38.1502, -167.221, -19.7968, 1.14", "-37.7357, -170.332, -20.7057, 0.23", "-37.4872, -172.347, -21.372, 1.14", "-37.4122, -172.932, -21.5836, 1.14", "-37.1555, -174.598, -22.1109, 0.23", "-36.9701, -175.461, -22.2862, 0.68", "-36.339, -177.422, -22.3876, 0.23", "-35.5291, -178.992, -22.094, 1.14", "-34.792, -180.195, -21.6973, 1.14", "-32.8651, -183.005, -20.5822, 0.23", "-31.7649, -184.473, -19.9402, 0.91", "-31.1221, -185.303, -19.6243, 0.91", "-29.1304, -187.822, -18.8575, 0.23", "-28.2415, -189.024, -18.6249, 1.14", "-27.2089, -190.683, -18.5559, 1.36", "-25.8797, -193.204, -18.7764, 0.23", "-24.5805, -196.04, -19.1615, 0.23", "-23.7793, -197.985, -19.4585, 0.91", "-23.19, -199.576, -19.7229, 0.91", "-21.8631, -203.273, -20.2803, 0.23", "-21.2918, -204.917, -20.5248, 1.14", "-20.188, -208.104, -20.9393, 0.23", "-19.5618, -209.981, -21.1101, 1.14", "-18.9475, -211.98, -21.2524, 0.23", "-18.6152, -213.11, -21.3316, 0.91", "-17.9452, -216.41, -21.5417, 0.23", "-17.8192, -218.505, -21.7002, 1.59", "-18.1634, -221.269, -21.937, 0.23", "-18.6039, -222.849, -21.9636, 0.91", "-18.8997, -223.533, -21.9262, 0.91", "-20.5294, -226.515, -21.5368, 0.23", "-21.544, -228.032, -21.2105, 1.14", "-22.2824, -229.039, -20.9106, 1.14", "-24.313, -231.877, -19.9364, 0.23", "-24.9115, -232.855, -19.6097, 0.91", "-25.8672, -234.658, -18.9924, 0.23", "-26.1954, -235.452, -18.7178, 0.91", "-26.8246, -237.428, -18.2278, 0.23", "-27.3516, -239.389, -17.9855, 0.91", "-28.0768, -242.267, -18.1092, 0.23", "-28.4088, -243.636, -18.3115, 0.23", "-28.9296, -245.681, -18.8663, 1.14", "-29.7011, -248.666, -19.9332, 0.23", "-30.2554, -250.897, -20.9796, 1.36", "-30.9913, -253.72, -22.4843, 0.23", "-31.3864, -255.306, -23.4043, 1.14", "-31.8599, -257.381, -24.6367, 0.23", "-32.1706, -258.725, -25.4343, 0.68", "-32.8801, -261.788, -27.1511, 0.23", "-33.1326, -263.039, -27.8172, 0.91", "-33.4609, -265.145, -28.7893, 0.23", "-33.6231, -266.529, -29.3329, 0.23", "-33.7642, -268.276, -29.9324, 0.23", "-37.18, -277.881, -29.8289, 0.23", "-41.0682, -287.275, -29.3814, 0.23", "-44.4144, -296.877, -28.6338, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "59.963, -187.397, -122.582, 0.23", "63.0011, -195.315, -128.597, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "59.963, -187.397, -122.582, 0.23", "61.0968, -196.912, -128.8, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "58.0213, 42.8618, 1.12969, 0.23", "60.7593, 41.8684, 1.73103, 0.23", "63.3664, 41.149, 2.12047, 0.68", "67.2455, 40.2469, 2.65129, 0.23", "70.1647, 39.7534, 2.98125, 0.91", "73.2251, 39.3103, 3.2275, 0.23", "75.8011, 38.9863, 3.35562, 1.14", "81.4953, 38.521, 3.55428, 0.23", "84.1515, 38.3626, 3.51055, 0.68", "91.1985, 38.078, 3.30383, 0.23", "94.473, 37.9405, 3.22556, 0.68", "100.3, 37.7495, 3.21808, 0.23", "103.981, 37.6461, 3.27074, 0.68", "111.9, 37.5356, 3.47974, 0.23", "117.717, 37.5089, 3.63447, 0.23", "122.858, 37.5308, 3.8507, 0.68", "128.229, 37.6441, 4.18097, 0.23", "131.447, 37.7845, 4.42747, 0.68", "135.4, 38.1121, 4.7484, 0.23", "139.6, 38.6809, 5.21807, 0.23", "141.5, 39.0372, 5.35102, 0.23", "142.723, 39.3597, 5.3595, 0.23", "145.189, 40.091, 5.33944, 0.23", "149.345, 41.5073, 5.39508, 0.68", "151.74, 42.4448, 5.45694, 0.23", "153.639, 43.3327, 5.47121, 0.23", "157.551, 45.2864, 5.31371, 1.36", "171.389, 44.9219, 6.79177, 1.36", "184.921, 42.4093, 9.04497, 1.36", "198.702, 42.528, 11.0084, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "58.0213, 42.8618, 1.12969, 0.23", "58.4456, 43.1294, 1.25196, 0.23", "59.6355, 43.8799, 1.59495, 1.14", "60.966, 44.7191, 1.97842, 0.23", "61.5727, 45.1017, 2.15328, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-68.9561, -24.3665, -31.3967, 0.23", "-76.5899, -31.8497, -33.0024, 0.23", "-84.2091, -39.2205, -35.0554, 0.23", "-90.8556, -47.6936, -36.5621, 0.23", "-96.4326, -57.0399, -37.6624, 0.23", "-102.773, -65.3761, -40.4865, 0.23", "-108.17, -74.3271, -43.5233, 0.23", "-113.702, -83.554, -45.397, 0.23", "-118.252, -92.9138, -48.6631, 0.23", "-121.785, -102.983, -51.1932, 0.23", "-124.875, -112.837, -54.786, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-68.9561, -24.3665, -31.3967, 0.23", "-76.5993, -32.3085, -33.8596, 0.23", "-85.2054, -39.6021, -33.5438, 0.23", "-92.8232, -48.0209, -33.3438, 0.23", "-100.555, -56.3249, -33.1062, 0.23", "-108.503, -64.1883, -34.7388, 0.23", "-117.284, -71.2509, -34.5801, 0.23", "-125.404, -79.1015, -33.7491, 0.23", "-133.692, -86.7935, -33.5784, 0.23", "-140.975, -95.3542, -35.1144, 0.23", "-148.43, -103.794, -36.4424, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-8.57986, 23.5557, -77.2244, 0.23", "-6.2248, 23.3221, -86.6323, 0.23", "-3.50228, 22.4455, -95.9052, 0.23", "1.38778, 23.0965, -104.264, 0.23", "5.04675, 24.7326, -113.114, 0.23", "10.4906, 28.0631, -120.511, 0.23", "15.1944, 32.8086, -127.712, 0.23", "21.402, 38.455, -132.942, 0.23", "27.6106, 42.7947, -139.186, 0.23", "34.5662, 47.2354, -144.525, 0.23", "41.7593, 51.1135, -149.943, 0.23", "49.663, 53.2863, -155.215, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.57986, 23.5557, -77.2244, 0.23", "-4.02119, 27.7782, -87.6022, 0.23", "0.466559, 31.6565, -98.1372, 0.23", "7.16538, 33.5556, -108.0, 0.23", "15.0, 34.1536, -117.18, 0.23", "21.7575, 33.8402, -127.206, 0.23", "29.3964, 32.2292, -136.487, 0.23", "38.2017, 30.1549, -144.593, 0.23", "46.2668, 27.1737, -153.212, 0.23", "55.0155, 22.9828, -160.659, 0.23", "62.8547, 17.1092, -168.112, 0.23", "71.6099, 10.8405, -174.132, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-88.4873, 77.1292, 35.0123, 0.23", "-89.8432, 78.9962, 35.0566, 0.23", "-90.9557, 80.521, 35.1672, 0.23", "-92.2293, 82.3748, 35.2844, 0.45", "-92.9968, 83.6167, 35.3714, 0.23", "-93.6826, 85.0045, 35.4989, 0.68", "-94.5842, 86.829, 35.6665, 0.23", "-95.5488, 89.0036, 35.9279, 0.68", "-96.0247, 90.1785, 36.0652, 0.23", "-96.5109, 91.6787, 36.2842, 0.68", "-97.1998, 94.7842, 36.7735, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-88.4873, 77.1292, 35.0123, 0.23", "-90.0128, 78.5316, 35.8509, 0.23", "-90.8747, 79.3841, 36.515, 0.23", "-91.804, 80.3032, 37.2309, 0.23", "-93.4197, 81.9014, 38.4757, 0.68", "-95.2587, 83.7203, 39.8925, 0.23", "-97.457, 85.8945, 41.5861, 0.23", "-99.3822, 87.9787, 43.3143, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "103.82, 118.665, 42.0909, 0.23", "112.165, 124.489, 45.7063, 0.23", "121.289, 129.859, 47.6597, 0.23", "129.882, 136.234, 49.2027, 0.23", "137.91, 143.488, 48.5432, 0.23", "145.602, 150.99, 50.2379, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "103.82, 118.665, 42.0909, 0.23", "112.773, 124.763, 45.3718, 0.23", "121.236, 131.736, 48.3433, 0.23", "129.408, 138.42, 52.5479, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.6542, -146.132, 91.655, 0.23", "11.2122, -149.537, 92.2796, 0.23", "11.6106, -152.663, 92.8102, 0.68", "11.9508, -156.495, 93.4171, 0.23", "12.1045, -158.973, 93.7822, 0.91", "12.2229, -160.808, 94.052, 0.23", "12.3401, -162.106, 94.2595, 0.23", "12.5925, -164.213, 94.6302, 0.68", "12.8582, -166.338, 94.92, 0.23", "13.111, -167.856, 95.1417, 0.91", "13.9185, -170.985, 95.7545, 0.23", "15.1733, -174.855, 96.6, 0.91", "15.9115, -176.78, 97.0571, 0.23", "16.8313, -178.859, 97.585, 0.91", "18.7989, -182.9, 98.7595, 0.23", "20.4041, -186.075, 99.7652, 0.23", "21.1985, -187.6, 100.273, 0.91", "22.486, -190.001, 101.125, 0.23", "23.5508, -191.946, 101.882, 0.91", "25.6871, -195.716, 103.399, 0.23", "26.4551, -197.118, 103.888, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.6542, -146.132, 91.655, 0.23", "10.1295, -148.723, 95.2243, 0.23", "9.46883, -151.692, 99.2229, 0.23", "9.07124, -153.918, 102.28, 0.68", "8.94578, -155.144, 103.969, 0.23", "8.87229, -155.932, 105.095, 0.91", "8.68439, -158.887, 109.575, 0.23", "8.6478, -159.97, 111.29, 0.91", "8.56822, -162.379, 115.306, 0.23", "8.45992, -164.602, 119.029, 0.23", "8.38789, -165.539, 120.511, 0.91", "7.91034, -168.579, 125.023, 0.23", "7.66351, -169.347, 126.101, 0.91", "7.11314, -170.56, 127.595, 0.23", "6.42704, -171.769, 128.881, 1.14", "4.78359, -174.336, 131.341, 0.23", "3.01369, -177.127, 133.798, 0.91", "0.913541, -180.226, 136.286, 0.23", "-0.790684, -182.769, 138.343, 0.68", "-2.36984, -185.057, 140.27, 0.23", "-3.59314, -186.716, 141.734, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "61.5727, 45.1017, 2.15328, 0.23", "64.5745, 44.3068, 4.85234, 0.23", "69.4734, 43.6019, 8.40182, 0.23", "73.3673, 43.3746, 10.8082, 0.91", "75.7354, 43.417, 12.1411, 0.23", "77.5633, 43.5421, 13.1297, 0.91", "81.3584, 43.8994, 14.9698, 0.23", "85.7971, 44.6484, 16.8134, 0.23", "89.6947, 45.4287, 18.1437, 0.23", "94.487, 46.3651, 19.6402, 0.23", "98.5234, 47.0872, 20.8072, 0.91", "102.177, 47.7311, 21.8801, 0.23", "104.795, 48.2225, 22.6999, 0.68", "107.928, 48.8259, 23.7886, 0.23", "110.338, 49.3634, 24.7127, 0.23", "111.401, 49.6533, 25.158, 0.23", "114.725, 50.8117, 26.8083, 0.91", "117.086, 51.8287, 28.165, 0.23", "118.748, 52.6809, 29.1903, 0.91", "122.606, 54.8792, 31.3929, 0.23", "125.923, 56.9557, 33.1058, 0.23", "128.186, 58.471, 34.1684, 0.23", "130.141, 59.8317, 34.9935, 0.68", "133.542, 62.1631, 36.2653, 0.23", "138.806, 65.6998, 38.0282, 0.23", "142.136, 67.7762, 38.872, 0.23", "143.794, 68.7099, 39.2143, 0.23", "146.182, 69.8866, 39.601, 0.23", "148.356, 70.8199, 39.93, 0.68", "149.538, 71.2062, 40.1196, 0.68", "152.493, 71.8658, 40.9443, 0.23", "154.872, 72.2278, 41.6487, 0.68", "156.57, 72.4353, 42.1722, 0.23", "158.576, 72.6931, 42.8081, 0.68", "162.348, 73.291, 44.0823, 0.23", "165.562, 73.8387, 45.3554, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "61.5727, 45.1017, 2.15328, 0.68", "62.9949, 46.0478, 2.004, 0.68", "63.9235, 46.6456, 1.9562, 0.68", "66.1001, 48.0096, 1.9213, 0.23", "67.5916, 48.9502, 1.94763, 0.23", "69.6413, 50.2332, 2.06298, 0.91", "72.0802, 51.7537, 2.26844, 0.23", "72.6738, 52.1262, 2.33797, 1.36", "73.2573, 52.5093, 2.43135, 1.36", "74.8566, 53.7451, 2.87994, 0.23", "76.3574, 55.1734, 3.40064, 0.23", "77.148, 56.051, 3.69609, 0.23", "77.7681, 56.823, 3.90619, 1.14", "78.9292, 58.2616, 4.13959, 1.14", "81.1221, 60.8688, 4.24447, 0.23", "82.3307, 62.1609, 4.07906, 0.68", "83.5559, 63.2742, 3.79589, 0.23", "85.3142, 64.5881, 3.36173, 0.68", "87.9631, 66.1899, 2.72092, 0.23", "89.6552, 66.9963, 2.38943, 0.23", "92.0298, 67.8573, 2.03946, 1.14", "94.5155, 68.5353, 1.98615, 0.23", "96.5608, 68.9445, 2.24003, 0.68", "97.4761, 69.0726, 2.51478, 0.23", "99.8778, 69.3391, 3.65832, 0.91", "100.908, 69.4499, 4.25248, 0.91", "102.592, 69.6379, 5.32601, 0.23", "103.694, 69.7809, 6.00303, 0.23", "104.344, 69.896, 6.3716, 0.23", "106.182, 70.3391, 7.29367, 0.68", "108.245, 71.016, 8.14479, 0.23", "109.271, 71.4158, 8.49419, 0.68", "110.341, 71.8971, 8.75587, 0.23", "111.358, 72.3533, 8.90463, 0.23", "112.637, 72.8846, 9.03219, 0.23", "113.567, 73.2444, 9.09927, 0.68", "116.009, 74.0886, 9.28188, 0.23", "117.819, 74.6775, 9.40359, 1.14", "120.401, 75.4415, 9.57493, 0.23", "122.666, 76.0373, 9.73954, 0.23", "124.27, 76.4309, 9.86335, 0.91", "127.002, 77.0309, 10.1565, 0.23", "135.667, 82.6742, 10.2291, 0.23", "144.884, 87.2651, 9.97711, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-124.875, -112.837, -54.786, 0.23", "-130.073, -120.586, -52.6809, 0.23", "-136.619, -127.139, -50.6194, 0.23", "-143.036, -133.139, -47.0547, 0.23", "-148.722, -139.455, -42.7856, 0.23", "-152.694, -146.16, -37.2703, 0.23", "-156.146, -152.185, -30.7701, 0.23", "-158.455, -158.678, -24.1785, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-124.875, -112.837, -54.786, 0.23", "-131.407, -122.736, -59.1407, 0.23", "-138.994, -132.435, -62.0529, 0.23", "-145.183, -142.548, -66.4456, 0.23", "-152.072, -152.676, -69.6901, 0.23", "-158.533, -161.954, -75.1977, 0.23", "-164.499, -170.658, -81.9403, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-148.43, -103.794, -36.4424, 0.23", "-153.137, -108.743, -37.0678, 0.23", "-157.725, -113.853, -37.1322, 0.23", "-162.325, -118.938, -36.8045, 0.23", "-166.854, -124.1, -36.6025, 0.23", "-171.744, -128.862, -37.1307, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-148.43, -103.794, -36.4424, 0.23", "-155.259, -110.685, -36.9299, 0.23", "-160.594, -118.875, -37.621, 0.23", "-164.738, -127.698, -38.9215, 0.23", "-169.802, -136.038, -39.8849, 0.23", "-175.978, -143.568, -40.4445, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "49.663, 53.2863, -155.215, 0.23", "55.445, 56.1906, -162.982, 0.23", "59.448, 57.7959, -172.081, 0.23", "62.6122, 58.6507, -181.591, 0.23", "65.8716, 61.3445, -190.753, 0.23", "69.6497, 64.8439, -199.461, 0.23", "74.5443, 68.3552, -207.597, 0.23", "80.3895, 71.7202, -215.148, 0.23", "86.1478, 74.961, -222.812, 0.23", "93.8478, 76.9913, -229.014, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "49.663, 53.2863, -155.215, 0.23", "56.596, 57.3666, -164.389, 0.23", "61.7447, 61.4064, -174.681, 0.23", "67.5551, 65.2598, -184.682, 0.23", "74.3754, 70.8631, -193.191, 0.23", "81.1685, 76.5285, -201.684, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "71.6099, 10.8405, -174.132, 0.23", "77.8554, 9.94046, -181.641, 0.23", "84.502, 8.26644, -188.691, 0.23", "90.9751, 7.6748, -196.028, 0.23", "96.2808, 5.30722, -203.98, 0.23", "101.386, 3.82633, -212.236, 0.23", "105.399, 1.72053, -220.96, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "71.6099, 10.8405, -174.132, 0.23", "78.2356, 9.26599, -182.599, 0.23", "83.078, 8.33569, -192.267, 0.23", "88.8539, 8.21574, -201.436, 0.23", "93.8849, 8.40232, -211.029, 0.23", "97.7542, 9.64775, -221.064, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "145.602, 150.99, 50.2379, 0.23", "156.459, 159.182, 52.4194, 0.23", "166.633, 167.633, 56.4278, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "145.602, 150.99, 50.2379, 0.23", "153.383, 157.192, 51.5292, 0.23", "160.826, 163.796, 53.01, 0.23", "166.901, 171.253, 56.2039, 0.23", "171.87, 179.412, 59.7634, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "26.4551, -197.118, 103.888, 0.23", "27.8731, -199.642, 104.369, 0.23", "28.58, -200.9, 104.609, 0.91", "30.4772, -204.277, 105.252, 0.23", "31.2117, -205.584, 105.502, 0.68", "32.6573, -208.157, 105.992, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "26.4551, -197.118, 103.888, 0.23", "26.71, -198.971, 105.008, 0.23", "27.0256, -201.265, 106.394, 0.68", "27.2257, -202.72, 107.273, 0.23", "27.3658, -203.739, 107.888, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.59314, -186.716, 141.734, 0.23", "-2.99247, -188.54, 142.736, 0.23", "-2.60705, -189.456, 143.152, 0.68", "-1.16926, -193.078, 144.268, 0.23", "-0.944866, -193.643, 144.442, 0.23", "-0.225377, -195.456, 145.0, 0.23", "0.752825, -197.92, 145.759, 0.91", "1.48113, -199.567, 146.252, 0.23", "2.56403, -201.824, 146.701, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.59314, -186.716, 141.734, 0.23", "-3.71367, -187.763, 144.974, 0.23", "-3.88061, -188.615, 147.811, 0.91", "-4.04887, -189.832, 152.045, 0.23", "-4.07319, -190.099, 153.07, 0.68", "-4.15938, -190.964, 156.377, 0.23", "-4.11795, -191.244, 157.446, 1.14", "-3.98862, -191.546, 158.634, 1.14", "-3.49493, -192.785, 162.862, 0.23", "-3.13797, -193.719, 165.82, 1.14", "-3.00307, -194.045, 166.776, 1.14", "-2.11033, -196.087, 172.372, 0.23", "-1.74026, -196.8, 174.207, 0.23", "-0.834036, -198.303, 177.83, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "165.562, 73.8387, 45.3554, 0.23", "166.466, 75.8059, 45.0183, 0.23", "166.97, 76.785, 44.8678, 0.91", "170.007, 81.9209, 44.2835, 0.23", "171.988, 84.8689, 44.1976, 0.68", "173.772, 87.1633, 44.3386, 0.23", "175.605, 89.2958, 44.5958, 0.91", "176.976, 90.6618, 44.9039, 0.23", "179.031, 92.4311, 45.4884, 0.68", "182.026, 94.5892, 46.5101, 0.23", "185.085, 96.6094, 47.7068, 0.23", "186.752, 97.6067, 48.3828, 0.23", "188.33, 98.5468, 49.0543, 0.91", "189.435, 99.184, 49.5539, 0.91", "198.881, 106.24, 52.5816, 0.91", "207.976, 113.518, 56.0817, 0.91", "215.546, 122.695, 58.905, 0.91", "224.396, 131.083, 60.2317, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "165.562, 73.8387, 45.3554, 0.23", "166.925, 73.9464, 46.0777, 0.23", "169.786, 74.1221, 47.5683, 0.45", "172.791, 74.2614, 49.1187, 0.23", "175.8, 74.4247, 50.7622, 0.68", "178.933, 74.652, 52.4964, 0.23", "182.399, 74.9273, 54.4192, 0.68", "183.835, 75.07, 55.213, 0.23", "185.327, 75.2245, 56.0328, 0.68", "188.332, 75.5241, 57.6547, 0.23", "192.244, 76.0027, 59.8379, 1.14", "194.154, 76.2736, 60.9163, 0.23", "195.046, 76.4208, 61.478, 0.91", "197.022, 76.8179, 62.7767, 0.23", "198.231, 77.086, 63.5714, 1.14", "200.774, 77.6442, 65.2198, 0.23", "203.706, 78.345, 67.3559, 0.91", "206.689, 79.0682, 69.615, 0.23", "209.583, 79.7745, 71.7954, 0.68", "213.133, 80.646, 74.4111, 0.23", "214.668, 81.0213, 75.5765, 0.68", "217.948, 81.7917, 78.1552, 0.23", "221.1, 82.5101, 80.6508, 0.68", "223.952, 83.1679, 82.9221, 0.23", "226.18, 83.6901, 84.7439, 0.23", "231.608, 84.9486, 89.1328, 0.23", "235.312, 85.803, 91.9756, 0.23", "238.102, 86.445, 93.9833, 0.68", "242.972, 87.6733, 97.5185, 0.23", "246.226, 88.5369, 99.8302, 0.23", "249.472, 89.4842, 102.124, 0.23", "252.9, 90.5196, 104.385, 0.45", "254.423, 90.9963, 105.368, 0.68", "259.538, 92.6657, 108.728, 0.23", "262.1, 93.5088, 110.402, 0.68", "266.576, 95.2586, 113.603, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "144.884, 87.2651, 9.97711, 0.23", "153.886, 91.8916, 10.3049, 0.23", "163.144, 95.7052, 11.6542, 0.23", "172.648, 99.0645, 11.8272, 0.23", "182.431, 101.301, 12.5047, 0.23", "192.34, 101.767, 14.0491, 0.23", "202.191, 100.302, 15.3971, 0.23", "211.919, 99.7555, 17.8163, 0.23", "221.373, 99.7124, 21.1923, 0.23", "231.196, 100.019, 23.2456, 0.23", "240.683, 100.001, 26.5273, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "144.884, 87.2651, 9.97711, 0.23", "154.347, 92.4682, 11.7244, 0.23", "163.647, 97.6145, 14.2346, 0.23", "172.99, 103.309, 15.0977, 0.23", "182.946, 107.839, 15.5318, 0.23", "192.58, 112.373, 17.9031, 0.23", "201.686, 117.844, 20.4737, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_NBC_81f6eae6fc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 7.48071, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.16651, 9.31674, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -3.25477, 13.0392, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -7.41879, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -2.42038, -10.958, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.44321, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -5.10438, -0.382553, -5.14959, 0.68 ) }
    dend_26 { pt3dadd( -5.58155, -1.62583, -5.52543, 0.45 ) }
    dend_26 { pt3dadd( -6.60033, -4.03525, -6.18902, 0.45 ) }
    dend_26 { pt3dadd( -7.75253, -6.71573, -6.95626, 0.45 ) }
    dend_26 { pt3dadd( -8.13608, -7.57981, -7.22444, 1.14 ) }
    dend_26 { pt3dadd( -9.58913, -10.8327, -8.4206, 0.23 ) }
    dend_26 { pt3dadd( -10.0993, -12.0171, -8.90758, 0.23 ) }
    dend_26 { pt3dadd( -10.955, -13.7975, -9.73255, 0.91 ) }
    dend_26 { pt3dadd( -12.2761, -16.0371, -11.0409, 0.23 ) }
    dend_26 { pt3dadd( -13.2188, -17.3116, -11.9614, 0.91 ) }
    dend_26 { pt3dadd( -14.6596, -19.0979, -13.3985, 0.23 ) }
    dend_26 { pt3dadd( -15.39, -19.913, -14.1942, 0.23 ) }
    dend_26 { pt3dadd( -16.408, -21.0314, -15.3715, 0.68 ) }
    dend_26 { pt3dadd( -18.2019, -23.0374, -17.5647, 0.23 ) }
    dend_26 { pt3dadd( -18.9941, -23.985, -18.5715, 0.23 ) }
    dend_26 { pt3dadd( -19.7282, -24.9867, -19.5196, 1.14 ) }
    dend_26 { pt3dadd( -21.4258, -27.6917, -21.7346, 0.23 ) }
    dend_26 { pt3dadd( -21.9474, -28.7513, -22.5654, 0.23 ) }
    dend_26 { pt3dadd( -22.4371, -30.003, -23.5269, 1.14 ) }
    dend_26 { pt3dadd( -23.2566, -32.1461, -25.2106, 0.23 ) }
    dend_26 { pt3dadd( -23.7288, -33.2459, -26.2418, 0.23 ) }
    dend_26 { pt3dadd( -24.341, -34.4996, -27.5769, 0.91 ) }
    dend_26 { pt3dadd( -25.2848, -36.3304, -29.6378, 0.91 ) }
    dend_26 { pt3dadd( -26.1406, -37.8092, -31.5125, 0.23 ) }
    dend_26 { pt3dadd( -26.8897, -38.9285, -33.0243, 0.23 ) }
    dend_26 { pt3dadd( -28.1164, -40.5698, -35.2946, 0.68 ) }
    dend_26 { pt3dadd( -28.9568, -41.6411, -36.8795, 0.23 ) }
    dend_26 { pt3dadd( -29.5446, -42.3398, -37.9381, 1.14 ) }
    dend_26 { pt3dadd( -31.1251, -44.1553, -40.4791, 0.23 ) }
    dend_26 { pt3dadd( -31.5735, -44.7497, -41.1849, 0.23 ) }
    dend_26 { pt3dadd( -32.0306, -45.5196, -41.9529, 0.23 ) }
    dend_26 { pt3dadd( -37.2137, -52.9876, -47.8657, 0.23 ) }
    dend_26 { pt3dadd( -42.2182, -60.9212, -53.3694, 0.23 ) }
    dend_26 { pt3dadd( -46.1517, -67.5308, -60.924, 0.23 ) }
    dend_26 { pt3dadd( -50.7008, -72.2816, -69.357, 0.23 ) }
    dend_26 { pt3dadd( -56.4764, -78.5933, -75.9106, 0.23 ) }
    dend_26 { pt3dadd( -64.4683, -82.7381, -81.6751, 0.23 ) }
    dend_26 { pt3dadd( -71.8891, -87.283, -87.9054, 0.23 ) }
    dend_26 { pt3dadd( -79.1329, -90.9407, -94.8309, 0.23 ) }
    dend_26 { pt3dadd( -86.6542, -95.9401, -100.612, 0.23 ) }
    dend_26 { pt3dadd( -92.788, -100.979, -107.809, 0.23 ) }
    dend_26 { pt3dadd( -99.3816, -107.292, -113.55, 0.23 ) }
    dend_26 { pt3dadd( -106.326, -114.28, -118.05, 0.23 ) }
    dend_26 { pt3dadd( -113.448, -120.521, -123.212, 0.23 ) }
    dend_26 { pt3dadd( -120.245, -128.087, -127.043, 0.23 ) }
    dend_26 { pt3dadd( -126.718, -136.651, -129.19, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -9.09879, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.08408, -11.2473, -0.0223336, 1.14 ) }
    dend_15 { pt3dadd( 5.5057, -13.0942, -0.935509, 1.14 ) }
    dend_15 { pt3dadd( 6.88188, -14.8821, -1.8195, 1.14 ) }
    dend_15 { pt3dadd( 7.70769, -15.9549, -2.34995, 1.14 ) }
    dend_15 { pt3dadd( 8.47031, -16.9457, -2.83982, 1.59 ) }
    dend_15 { pt3dadd( 9.37918, -18.1264, -3.42363, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.64321, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.58409, 6.91544, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.252, 8.25607, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 5.34203, 10.444, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 5.97369, 11.7118, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.89438, 13.5598, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.702174 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.702174 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.702174 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.25477, 13.0392, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -5.06812, 13.6639, -1.12605, 0.68 ) }
    dend_56 { pt3dadd( -6.3423, 14.1218, -0.636108, 0.68 ) }
    dend_56 { pt3dadd( -8.08962, 14.7498, 0.0357636, 1.14 ) }
    dend_56 { pt3dadd( -9.09484, 15.111, 0.422287, 0.23 ) }
    dend_56 { pt3dadd( -11.4357, 15.9523, 1.32235, 0.23 ) }
    dend_56 { pt3dadd( -12.767, 16.4307, 1.83427, 0.91 ) }
    dend_56 { pt3dadd( -15.0064, 17.1771, 2.7736, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.25477, 13.0392, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -0.851741, 15.6663, -1.65622, 1.82 ) }
    dend_45 { pt3dadd( 1.45989, 18.2129, -1.45023, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 3.20199, 20.1256, -1.2647, 0.68 ) }
    dend_45 { pt3dadd( 4.36115, 21.3721, -1.10754, 1.14 ) }
    dend_45 { pt3dadd( 7.42038, 24.5675, -0.701984, 0.45 ) }
    dend_45 { pt3dadd( 9.16131, 26.3288, -0.491043, 0.45 ) }
    dend_45 { pt3dadd( 10.2385, 27.3259, -0.364038, 1.59 ) }
    dend_45 { pt3dadd( 11.3534, 28.307, -0.221476, 1.59 ) }
    dend_45 { pt3dadd( 12.9608, 29.7106, 0.0235557, 0.68 ) }
    dend_45 { pt3dadd( 14.8442, 31.3312, 0.309979, 0.68 ) }
    dend_45 { pt3dadd( 16.3448, 32.5718, 0.576721, 1.36 ) }
    dend_45 { pt3dadd( 17.8441, 33.758, 0.829817, 2.05 ) }
    dend_45 { pt3dadd( 19.2863, 34.8415, 1.03722, 0.91 ) }
    dend_45 { pt3dadd( 20.9126, 36.0684, 1.22789, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.42038, -10.958, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -6.66628, -12.0294, 7.90707, 0.68 ) }
    dend_39 { pt3dadd( -11.3622, -13.1607, 7.23559, 0.68 ) }
    dend_39 { pt3dadd( -14.2246, -13.8242, 6.7723, 0.23 ) }
    dend_39 { pt3dadd( -16.2558, -14.2906, 6.42935, 0.91 ) }
    dend_39 { pt3dadd( -18.9344, -14.9349, 5.97405, 0.91 ) }
    dend_39 { pt3dadd( -21.5226, -15.569, 5.49939, 0.23 ) }
    dend_39 { pt3dadd( -23.5202, -16.0533, 5.09819, 0.23 ) }
    dend_39 { pt3dadd( -26.8149, -16.9159, 4.4192, 0.68 ) }
    dend_39 { pt3dadd( -29.2128, -17.6222, 3.88825, 0.68 ) }
    dend_39 { pt3dadd( -31.6539, -18.3915, 3.27704, 0.23 ) }
    dend_39 { pt3dadd( -34.2344, -19.2696, 2.57787, 0.68 ) }
    dend_39 { pt3dadd( -36.1315, -19.9631, 2.04778, 0.68 ) }
    dend_39 { pt3dadd( -39.535, -21.2969, 1.11577, 0.23 ) }
    dend_39 { pt3dadd( -42.2352, -22.425, 0.427219, 0.23 ) }
    dend_39 { pt3dadd( -44.2215, -23.2855, -0.0573179, 0.68 ) }
    dend_39 { pt3dadd( -45.7052, -23.9353, -0.320944, 0.68 ) }
    dend_39 { pt3dadd( -47.826, -24.8808, -0.560235, 0.68 ) }
    dend_39 { pt3dadd( -50.5998, -26.1005, -0.749355, 0.23 ) }
    dend_39 { pt3dadd( -52.9837, -27.0872, -0.800504, 0.45 ) }
    dend_39 { pt3dadd( -55.1639, -27.9481, -0.716956, 0.45 ) }
    dend_39 { pt3dadd( -59.2192, -29.5401, -0.453212, 0.23 ) }
    dend_39 { pt3dadd( -60.7215, -30.1522, -0.292297, 1.14 ) }
    dend_39 { pt3dadd( -62.2186, -30.7918, -0.0874455, 1.14 ) }
    dend_39 { pt3dadd( -65.3955, -32.2035, 0.415077, 0.23 ) }
    dend_39 { pt3dadd( -67.7362, -33.3315, 0.795011, 0.23 ) }
    dend_39 { pt3dadd( -69.8459, -34.4497, 1.1087, 0.91 ) }
    dend_39 { pt3dadd( -73.5158, -36.5381, 1.53231, 0.23 ) }
    dend_39 { pt3dadd( -75.2934, -37.5872, 1.71833, 1.14 ) }
    dend_39 { pt3dadd( -76.0761, -38.0591, 1.78728, 1.14 ) }
    dend_39 { pt3dadd( -78.5342, -39.5442, 1.92576, 0.23 ) }
    dend_39 { pt3dadd( -80.7011, -40.79, 1.93996, 1.14 ) }
    dend_39 { pt3dadd( -83.1331, -42.0794, 1.86853, 0.23 ) }
    dend_39 { pt3dadd( -85.257, -43.0719, 1.71469, 1.14 ) }
    dend_39 { pt3dadd( -86.5304, -43.6204, 1.62512, 0.23 ) }
    dend_39 { pt3dadd( -89.1411, -44.6719, 1.44372, 0.23 ) }
    dend_39 { pt3dadd( -90.8976, -45.3568, 1.33434, 1.14 ) }
    dend_39 { pt3dadd( -92.2083, -45.8442, 1.27736, 1.14 ) }
    dend_39 { pt3dadd( -95.5494, -47.1342, 1.18061, 0.23 ) }
    dend_39 { pt3dadd( -96.8707, -47.6803, 1.24729, 1.14 ) }
    dend_39 { pt3dadd( -98.5702, -48.4197, 1.43448, 1.14 ) }
    dend_39 { pt3dadd( -100.575, -49.3141, 1.74905, 0.23 ) }
    dend_39 { pt3dadd( -102.583, -50.2525, 2.20062, 0.91 ) }
    dend_39 { pt3dadd( -104.753, -51.3162, 2.78933, 0.23 ) }
    dend_39 { pt3dadd( -108.459, -53.2794, 3.85662, 0.23 ) }
    dend_39 { pt3dadd( -109.25, -53.7191, 4.08656, 1.14 ) }
    dend_39 { pt3dadd( -111.431, -54.986, 4.63925, 1.14 ) }
    dend_39 { pt3dadd( -114.207, -56.6794, 5.17784, 0.23 ) }
    dend_39 { pt3dadd( -115.613, -57.5606, 5.35576, 0.23 ) }
    dend_39 { pt3dadd( -119.207, -59.8024, 5.71444, 0.68 ) }
    dend_39 { pt3dadd( -121.69, -61.3246, 5.85325, 0.23 ) }
    dend_39 { pt3dadd( -124.286, -62.9316, 5.992, 1.14 ) }
    dend_39 { pt3dadd( -127.326, -64.8557, 6.12661, 0.23 ) }
    dend_39 { pt3dadd( -129.906, -66.5116, 6.24971, 0.91 ) }
    dend_39 { pt3dadd( -133.176, -68.6253, 6.50988, 0.23 ) }
    dend_39 { pt3dadd( -135.329, -70.0201, 6.74313, 0.23 ) }
    dend_39 { pt3dadd( -136.089, -70.5201, 6.86311, 0.23 ) }
    dend_39 { pt3dadd( -137.302, -71.3195, 7.13158, 0.23 ) }
    dend_39 { pt3dadd( -139.62, -72.8519, 7.84783, 0.91 ) }
    dend_39 { pt3dadd( -141.305, -73.9885, 8.44885, 0.91 ) }
    dend_39 { pt3dadd( -143.501, -75.4401, 9.18312, 0.23 ) }
    dend_39 { pt3dadd( -145.599, -76.798, 9.84263, 1.14 ) }
    dend_39 { pt3dadd( -146.949, -77.6144, 10.2838, 1.14 ) }
    dend_39 { pt3dadd( -149.963, -79.3505, 11.2598, 0.23 ) }
    dend_39 { pt3dadd( -151.561, -80.2495, 11.7434, 0.68 ) }
    dend_39 { pt3dadd( -154.915, -82.2043, 12.7298, 0.23 ) }
    dend_39 { pt3dadd( -157.533, -83.8326, 13.5008, 0.91 ) }
    dend_39 { pt3dadd( -160.701, -86.0419, 14.3504, 0.23 ) }
    dend_39 { pt3dadd( -161.633, -86.7788, 14.5781, 0.23 ) }
    dend_39 { pt3dadd( -162.946, -87.933, 14.8272, 0.23 ) }
    dend_39 { pt3dadd( -164.776, -89.7504, 15.1063, 1.14 ) }
    dend_39 { pt3dadd( -167.027, -92.1949, 15.3437, 0.23 ) }
    dend_39 { pt3dadd( -168.664, -94.1247, 15.2908, 0.68 ) }
    dend_39 { pt3dadd( -171.145, -97.2125, 14.7715, 0.23 ) }
    dend_39 { pt3dadd( -173.118, -99.6855, 14.1511, 0.91 ) }
    dend_39 { pt3dadd( -175.38, -102.363, 13.3264, 0.23 ) }
    dend_39 { pt3dadd( -176.485, -103.564, 12.9246, 0.91 ) }
    dend_39 { pt3dadd( -179.256, -106.321, 11.9075, 0.23 ) }
    dend_39 { pt3dadd( -181.679, -108.472, 11.128, 0.91 ) }
    dend_39 { pt3dadd( -184.156, -110.465, 10.4603, 0.23 ) }
    dend_39 { pt3dadd( -186.532, -112.181, 9.97742, 0.91 ) }
    dend_39 { pt3dadd( -189.682, -114.105, 9.61604, 0.23 ) }
    dend_39 { pt3dadd( -190.947, -114.782, 9.55298, 0.91 ) }
    dend_39 { pt3dadd( -193.08, -115.729, 9.60362, 0.23 ) }
    dend_39 { pt3dadd( -194.849, -116.387, 9.64885, 0.91 ) }
    dend_39 { pt3dadd( -195.505, -116.592, 9.60677, 0.91 ) }
    dend_39 { pt3dadd( -199.069, -117.625, 9.23509, 0.23 ) }
    dend_39 { pt3dadd( -200.193, -117.908, 9.11379, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -202.441, -118.451, 8.87192, 0.91 ) }
    dend_39 { pt3dadd( -205.181, -119.09, 8.58002, 0.23 ) }
    dend_39 { pt3dadd( -208.742, -119.889, 8.21013, 0.91 ) }
    dend_39 { pt3dadd( -213.685, -120.995, 7.723, 0.23 ) }
    dend_39 { pt3dadd( -216.702, -121.673, 7.4632, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.42038, -10.958, 8.54, 0.91 ) }
    dend_28 { pt3dadd( -0.956544, -13.1692, 9.62729, 0.91 ) }
    dend_28 { pt3dadd( 0.151706, -14.8432, 10.4505, 0.91 ) }
    dend_28 { pt3dadd( 1.58968, -17.0152, 11.5185, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.37918, -18.1264, -3.42363, 0.91 ) }
    dend_19 { pt3dadd( 8.86848, -21.5111, -3.69225, 0.91 ) }
    dend_19 { pt3dadd( 8.37845, -24.7588, -3.95001, 0.91 ) }
    dend_19 { pt3dadd( 8.01786, -27.1486, -4.13968, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.37918, -18.1264, -3.42363, 0.23 ) }
    dend_16 { pt3dadd( 12.0192, -19.5708, -3.28921, 0.23 ) }
    dend_16 { pt3dadd( 14.093, -20.6979, -3.21989, 0.68 ) }
    dend_16 { pt3dadd( 16.9144, -22.2715, -3.16376, 0.68 ) }
    dend_16 { pt3dadd( 18.6125, -23.2989, -3.23769, 0.23 ) }
    dend_16 { pt3dadd( 19.5199, -23.8677, -3.32228, 0.91 ) }
    dend_16 { pt3dadd( 20.8716, -24.7228, -3.48909, 0.91 ) }
    dend_16 { pt3dadd( 22.5821, -25.8233, -3.83405, 0.23 ) }
    dend_16 { pt3dadd( 24.1142, -26.7463, -4.25559, 0.91 ) }
    dend_16 { pt3dadd( 26.7327, -28.2632, -5.0382, 0.23 ) }
    dend_16 { pt3dadd( 27.7415, -28.8397, -5.35841, 0.91 ) }
    dend_16 { pt3dadd( 29.1011, -29.5987, -5.79144, 0.23 ) }
    dend_16 { pt3dadd( 30.8346, -30.573, -6.31261, 1.14 ) }
    dend_16 { pt3dadd( 32.1225, -31.2418, -6.62154, 1.14 ) }
    dend_16 { pt3dadd( 34.6586, -32.4787, -7.05765, 0.23 ) }
    dend_16 { pt3dadd( 35.9371, -33.0551, -7.18997, 0.91 ) }
    dend_16 { pt3dadd( 37.2869, -33.6586, -7.28411, 0.91 ) }
    dend_16 { pt3dadd( 39.9851, -34.7688, -7.41662, 0.23 ) }
    dend_16 { pt3dadd( 42.2582, -35.5789, -7.45465, 0.68 ) }
    dend_16 { pt3dadd( 44.3148, -36.1878, -7.46377, 0.23 ) }
    dend_16 { pt3dadd( 45.4257, -36.4113, -7.46281, 0.91 ) }
    dend_16 { pt3dadd( 47.8721, -36.7359, -7.45446, 0.23 ) }
    dend_16 { pt3dadd( 50.355, -36.8867, -7.48069, 0.91 ) }
    dend_16 { pt3dadd( 52.4766, -36.8801, -7.54621, 0.23 ) }
    dend_16 { pt3dadd( 53.9299, -36.8356, -7.67218, 0.91 ) }
    dend_16 { pt3dadd( 56.8395, -36.7243, -8.00405, 0.23 ) }
    dend_16 { pt3dadd( 57.7297, -36.7005, -8.12713, 1.14 ) }
    dend_16 { pt3dadd( 59.5159, -36.6854, -8.41773, 1.14 ) }
    dend_16 { pt3dadd( 61.8058, -36.8224, -8.8353, 0.23 ) }
    dend_16 { pt3dadd( 64.4686, -37.1687, -9.36059, 0.68 ) }
    dend_16 { pt3dadd( 65.499, -37.3675, -9.53228, 1.36 ) }
    dend_16 { pt3dadd( 67.5244, -37.9095, -9.74703, 0.23 ) }
    dend_16 { pt3dadd( 68.4616, -38.1794, -9.80488, 0.45 ) }
    dend_16 { pt3dadd( 71.0227, -38.9395, -9.86348, 0.23 ) }
    dend_16 { pt3dadd( 72.7156, -39.441, -9.80884, 0.91 ) }
    dend_16 { pt3dadd( 75.9447, -40.4011, -9.4978, 0.23 ) }
    dend_16 { pt3dadd( 79.011, -41.2786, -9.13566, 1.14 ) }
    dend_16 { pt3dadd( 80.5244, -41.6941, -8.92963, 0.23 ) }
    dend_16 { pt3dadd( 81.854, -42.0254, -8.73597, 0.91 ) }
    dend_16 { pt3dadd( 84.4272, -42.6154, -8.30701, 0.23 ) }
    dend_16 { pt3dadd( 85.952, -42.9526, -8.04608, 1.14 ) }
    dend_16 { pt3dadd( 88.3968, -43.4936, -7.67236, 0.23 ) }
    dend_16 { pt3dadd( 89.8162, -43.8447, -7.45888, 0.91 ) }
    dend_16 { pt3dadd( 90.2608, -43.9713, -7.39257, 0.91 ) }
    dend_16 { pt3dadd( 92.3569, -44.6017, -7.11985, 0.23 ) }
    dend_16 { pt3dadd( 93.7193, -44.9911, -7.00798, 0.91 ) }
    dend_16 { pt3dadd( 96.0325, -45.6753, -6.89669, 0.23 ) }
    dend_16 { pt3dadd( 97.7261, -46.1864, -6.82411, 0.91 ) }
    dend_16 { pt3dadd( 99.639, -46.7549, -6.76442, 0.23 ) }
    dend_16 { pt3dadd( 101.053, -47.1735, -6.74421, 0.68 ) }
    dend_16 { pt3dadd( 104.194, -48.1483, -6.75373, 0.23 ) }
    dend_16 { pt3dadd( 106.22, -48.8034, -6.72273, 0.23 ) }
    dend_16 { pt3dadd( 107.509, -49.2051, -6.66044, 1.14 ) }
    dend_16 { pt3dadd( 108.371, -49.4647, -6.58265, 1.14 ) }
    dend_16 { pt3dadd( 110.914, -50.2495, -6.24306, 0.23 ) }
    dend_16 { pt3dadd( 112.4, -50.6987, -6.00068, 1.14 ) }
    dend_16 { pt3dadd( 114.966, -51.4357, -5.5444, 0.23 ) }
    dend_16 { pt3dadd( 118.677, -52.4104, -4.79021, 0.91 ) }
    dend_16 { pt3dadd( 120.405, -52.8584, -4.44551, 0.23 ) }
    dend_16 { pt3dadd( 122.317, -53.3428, -4.1084, 0.91 ) }
    dend_16 { pt3dadd( 125.084, -53.997, -3.70035, 0.23 ) }
    dend_16 { pt3dadd( 127.132, -54.5053, -3.53093, 0.91 ) }
    dend_16 { pt3dadd( 129.852, -55.3267, -3.50205, 0.23 ) }
    dend_16 { pt3dadd( 133.361, -56.6269, -3.72059, 0.23 ) }
    dend_16 { pt3dadd( 136.138, -57.7725, -4.04921, 0.45 ) }
    dend_16 { pt3dadd( 138.13, -58.6896, -4.36371, 0.23 ) }
    dend_16 { pt3dadd( 140.733, -60.0088, -4.89867, 0.23 ) }
    dend_16 { pt3dadd( 142.855, -61.1772, -5.49166, 0.91 ) }
    dend_16 { pt3dadd( 144.238, -62.0009, -6.03583, 0.23 ) }
    dend_16 { pt3dadd( 145.242, -62.6407, -6.49104, 0.45 ) }
    dend_16 { pt3dadd( 145.988, -63.1289, -6.84764, 0.23 ) }
    dend_16 { pt3dadd( 147.336, -63.9352, -7.48344, 0.91 ) }
    dend_16 { pt3dadd( 149.465, -64.9861, -8.47081, 0.23 ) }
    dend_16 { pt3dadd( 151.102, -65.6555, -9.24916, 0.91 ) }
    dend_16 { pt3dadd( 152.314, -66.1147, -9.82348, 0.23 ) }
    dend_16 { pt3dadd( 152.707, -66.2602, -10.0075, 0.91 ) }
    dend_16 { pt3dadd( 154.115, -66.7667, -10.6159, 0.23 ) }
    dend_16 { pt3dadd( 155.676, -67.392, -11.229, 0.45 ) }
    dend_16 { pt3dadd( 157.638, -68.217, -11.842, 0.23 ) }
    dend_16 { pt3dadd( 158.292, -68.5019, -12.0201, 0.91 ) }
    dend_16 { pt3dadd( 159.075, -68.8764, -12.2217, 0.23 ) }
    dend_16 { pt3dadd( 160.466, -69.6274, -12.5425, 1.14 ) }
    dend_16 { pt3dadd( 162.59, -70.9474, -12.8724, 0.23 ) }
    dend_16 { pt3dadd( 163.744, -71.7892, -13.0487, 0.68 ) }
    dend_16 { pt3dadd( 164.398, -72.4242, -13.1748, 0.23 ) }
    dend_16 { pt3dadd( 165.475, -73.8707, -13.4365, 0.23 ) }
    dend_16 { pt3dadd( 165.884, -75.1592, -13.6205, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 165.377, -76.952, -13.7324, 0.91 ) }
    dend_16 { pt3dadd( 164.132, -79.6294, -13.8383, 0.23 ) }
    dend_16 { pt3dadd( 162.768, -82.0505, -13.9222, 0.23 ) }
    dend_16 { pt3dadd( 161.871, -83.43, -13.9634, 0.23 ) }
    dend_16 { pt3dadd( 160.024, -85.8174, -14.0237, 0.23 ) }
    dend_16 { pt3dadd( 157.622, -88.5248, -14.0798, 0.68 ) }
    dend_16 { pt3dadd( 165.927, -93.9407, -15.7954, 0.68 ) }
    dend_16 { pt3dadd( 174.115, -98.6538, -19.1501, 0.68 ) }
    dend_16 { pt3dadd( 181.342, -103.821, -23.8299, 0.68 ) }
    dend_16 { pt3dadd( 188.205, -108.584, -29.3642, 0.68 ) }
    dend_16 { pt3dadd( 196.708, -111.65, -33.5589, 0.68 ) }
    dend_16 { pt3dadd( 205.585, -114.877, -36.7556, 0.68 ) }
    dend_16 { pt3dadd( 214.106, -118.821, -40.1807, 0.68 ) }
    dend_16 { pt3dadd( 223.247, -121.459, -43.1094, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 6.89438, 13.5598, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 9.02621, 15.1337, -1.31732, 0.23 ) }
    dend_4 { pt3dadd( 12.3988, 17.4686, -1.49417, 0.68 ) }
    dend_4 { pt3dadd( 13.4106, 18.1691, -1.54723, 0.68 ) }
    dend_4 { pt3dadd( 15.4883, 19.6074, -1.65617, 0.23 ) }
    dend_4 { pt3dadd( 17.9166, 21.2885, -1.7835, 0.91 ) }
    dend_4 { pt3dadd( 20.1608, 22.8422, -1.90118, 0.91 ) }
    dend_4 { pt3dadd( 22.0288, 24.2439, -1.9923, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.89438, 13.5598, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 6.90115, 17.4112, -0.103143, 0.68 ) }
    dend_1 { pt3dadd( 6.92694, 19.8673, 0.438972, 0.68 ) }
    dend_1 { pt3dadd( 6.97232, 21.8767, 0.83596, 0.91 ) }
    dend_1 { pt3dadd( 7.12527, 25.377, 1.22664, 0.23 ) }
    dend_1 { pt3dadd( 7.21409, 26.589, 1.30797, 0.68 ) }
    dend_1 { pt3dadd( 7.58821, 30.903, 1.50958, 0.23 ) }
    dend_1 { pt3dadd( 7.87905, 33.7669, 1.47701, 1.14 ) }
    dend_1 { pt3dadd( 8.07357, 35.4373, 1.4043, 1.14 ) }
    dend_1 { pt3dadd( 8.89508, 41.1436, 0.999804, 0.23 ) }
    dend_1 { pt3dadd( 9.54494, 44.6878, 0.658695, 0.91 ) }
    dend_1 { pt3dadd( 9.88815, 46.2332, 0.487056, 0.91 ) }
    dend_1 { pt3dadd( 10.4456, 48.2866, 0.208681, 0.23 ) }
    dend_1 { pt3dadd( 11.2666, 51.1341, -0.161407, 0.23 ) }
    dend_1 { pt3dadd( 11.829, 53.0178, -0.405558, 0.91 ) }
    dend_1 { pt3dadd( 12.4418, 54.908, -0.616977, 0.91 ) }
    dend_1 { pt3dadd( 13.3381, 57.6336, -0.93534, 0.23 ) }
    dend_1 { pt3dadd( 14.4527, 60.8636, -1.30918, 0.68 ) }
    dend_1 { pt3dadd( 15.6284, 64.178, -1.72706, 0.23 ) }
    dend_1 { pt3dadd( 16.3534, 66.2777, -1.97449, 0.91 ) }
    dend_1 { pt3dadd( 17.6003, 69.9974, -2.4532, 0.23 ) }
    dend_1 { pt3dadd( 18.1593, 71.5685, -2.66941, 0.23 ) }
    dend_1 { pt3dadd( 18.4991, 72.4895, -2.79089, 1.14 ) }
    dend_1 { pt3dadd( 19.0578, 73.8959, -2.93593, 1.14 ) }
    dend_1 { pt3dadd( 19.9659, 76.0241, -3.10804, 0.23 ) }
    dend_1 { pt3dadd( 20.5853, 77.6384, -3.20716, 0.68 ) }
    dend_1 { pt3dadd( 21.5666, 80.6629, -3.3642, 0.23 ) }
    dend_1 { pt3dadd( 22.2295, 82.9828, -3.45296, 0.91 ) }
    dend_1 { pt3dadd( 23.1339, 86.7013, -3.52215, 0.23 ) }
    dend_1 { pt3dadd( 23.6939, 89.451, -3.51291, 1.14 ) }
    dend_1 { pt3dadd( 24.2466, 93.6629, -3.4957, 0.23 ) }
    dend_1 { pt3dadd( 24.3988, 96.4127, -3.46144, 0.68 ) }
    dend_1 { pt3dadd( 24.3613, 97.9964, -3.46374, 0.23 ) }
    dend_1 { pt3dadd( 24.178, 100.368, -3.48836, 0.91 ) }
    dend_1 { pt3dadd( 23.9516, 101.935, -3.50252, 0.91 ) }
    dend_1 { pt3dadd( 22.7205, 108.286, -3.59122, 0.23 ) }
    dend_1 { pt3dadd( 22.3064, 110.181, -3.66227, 1.14 ) }
    dend_1 { pt3dadd( 21.3698, 114.152, -3.9503, 0.23 ) }
    dend_1 { pt3dadd( 20.7194, 116.796, -4.19772, 0.91 ) }
    dend_1 { pt3dadd( 20.1338, 119.004, -4.4331, 0.91 ) }
    dend_1 { pt3dadd( 19.1551, 122.594, -4.83888, 0.23 ) }
    dend_1 { pt3dadd( 17.8349, 127.205, -5.53045, 0.91 ) }
    dend_1 { pt3dadd( 17.1374, 129.652, -5.93558, 0.23 ) }
    dend_1 { pt3dadd( 16.7484, 131.154, -6.12697, 0.45 ) }
    dend_1 { pt3dadd( 16.2987, 133.073, -6.36308, 0.23 ) }
    dend_1 { pt3dadd( 15.9715, 134.605, -6.54592, 0.91 ) }
    dend_1 { pt3dadd( 15.2253, 138.285, -7.03296, 0.23 ) }
    dend_1 { pt3dadd( 14.6812, 140.921, -7.44906, 1.14 ) }
    dend_1 { pt3dadd( 13.5359, 146.284, -8.51341, 0.23 ) }
    dend_1 { pt3dadd( 12.6825, 150.022, -9.38697, 1.36 ) }
    dend_1 { pt3dadd( 11.6049, 154.353, -10.6781, 0.45 ) }
    dend_1 { pt3dadd( 10.9789, 156.615, -11.5161, 0.91 ) }
    dend_1 { pt3dadd( 9.93729, 160.003, -12.9646, 0.23 ) }
    dend_1 { pt3dadd( 9.13288, 162.233, -14.1045, 0.68 ) }
    dend_1 { pt3dadd( 8.39569, 163.971, -15.1592, 0.68 ) }
    dend_1 { pt3dadd( 6.84016, 167.473, -17.3523, 0.23 ) }
    dend_1 { pt3dadd( 5.98149, 169.504, -18.6416, 0.23 ) }
    dend_1 { pt3dadd( 5.58901, 170.569, -19.2653, 0.91 ) }
    dend_1 { pt3dadd( 4.99172, 172.919, -20.5924, 0.45 ) }
    dend_1 { pt3dadd( 4.73457, 175.07, -21.7418, 0.23 ) }
    dend_1 { pt3dadd( 4.80075, 176.852, -22.6686, 0.91 ) }
    dend_1 { pt3dadd( 5.24644, 179.105, -23.7602, 0.23 ) }
    dend_1 { pt3dadd( 5.61469, 180.242, -24.3149, 1.14 ) }
    dend_1 { pt3dadd( 6.63515, 182.374, -25.4619, 0.23 ) }
    dend_1 { pt3dadd( 7.69592, 184.183, -26.517, 0.91 ) }
    dend_1 { pt3dadd( 9.15311, 186.525, -27.9751, 0.23 ) }
    dend_1 { pt3dadd( 9.84663, 187.657, -28.6911, 0.23 ) }
    dend_1 { pt3dadd( 10.907, 189.536, -29.9066, 1.14 ) }
    dend_1 { pt3dadd( 12.5614, 192.999, -32.2481, 0.23 ) }
    dend_1 { pt3dadd( 13.708, 196.193, -34.4576, 1.14 ) }
    dend_1 { pt3dadd( 14.3747, 199.928, -37.2039, 0.23 ) }
    dend_1 { pt3dadd( 14.4648, 200.852, -37.8939, 0.23 ) }
    dend_1 { pt3dadd( 14.4766, 202.852, -39.4316, 0.68 ) }
    dend_1 { pt3dadd( 14.1978, 205.041, -41.2199, 0.23 ) }
    dend_1 { pt3dadd( 13.4877, 207.031, -42.8943, 1.14 ) }
    dend_1 { pt3dadd( 11.6492, 210.127, -45.6244, 0.23 ) }
    dend_1 { pt3dadd( 9.45818, 222.767, -49.9051, 0.23 ) }
    dend_1 { pt3dadd( 6.00606, 235.889, -50.7343, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 4.44211, 249.155, -53.2581, 0.23 ) }
    dend_1 { pt3dadd( 1.34499, 262.201, -55.3815, 0.23 ) }
    dend_1 { pt3dadd( 0.491498, 275.605, -57.5849, 0.23 ) }
    dend_1 { pt3dadd( -1.88663, 288.908, -59.158, 0.23 ) }
    dend_1 { pt3dadd( -5.92352, 301.785, -60.5503, 0.23 ) }
    dend_1 { pt3dadd( -10.1207, 314.417, -62.9998, 0.23 ) }
    dend_1 { pt3dadd( -13.8207, 326.853, -66.7616, 0.23 ) }
    dend_1 { pt3dadd( -16.8455, 338.744, -72.2748, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.15 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -15.0064, 17.1771, 2.7736, 0.23 ) }
    dend_62 { pt3dadd( -17.3881, 17.3314, -0.625175, 0.23 ) }
    dend_62 { pt3dadd( -18.7518, 17.4197, -2.57126, 0.23 ) }
    dend_62 { pt3dadd( -20.5483, 17.5361, -5.13508, 0.91 ) }
    dend_62 { pt3dadd( -23.873, 17.7514, -9.87965, 0.23 ) }
    dend_62 { pt3dadd( -27.4115, 17.9806, -14.9293, 0.23 ) }
    dend_62 { pt3dadd( -28.7255, 18.0657, -16.8044, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -15.0064, 17.1771, 2.7736, 0.23 ) }
    dend_57 { pt3dadd( -15.5596, 17.6353, 2.89566, 0.23 ) }
    dend_57 { pt3dadd( -16.312, 18.2589, 3.07261, 0.91 ) }
    dend_57 { pt3dadd( -17.267, 19.0411, 3.30266, 0.68 ) }
    dend_57 { pt3dadd( -18.1726, 19.8031, 3.54211, 0.23 ) }
    dend_57 { pt3dadd( -18.8706, 20.3965, 3.7019, 0.68 ) }
    dend_57 { pt3dadd( -19.4884, 20.9238, 3.83002, 0.23 ) }
    dend_57 { pt3dadd( -19.8139, 21.1972, 3.87693, 1.14 ) }
    dend_57 { pt3dadd( -20.2542, 21.5449, 3.91457, 1.14 ) }
    dend_57 { pt3dadd( -21.3556, 22.3708, 3.92439, 0.23 ) }
    dend_57 { pt3dadd( -22.3682, 23.1114, 3.87335, 0.45 ) }
    dend_57 { pt3dadd( -23.0072, 23.5611, 3.82496, 0.23 ) }
    dend_57 { pt3dadd( -23.8824, 24.1398, 3.75507, 0.23 ) }
    dend_57 { pt3dadd( -24.9431, 24.7967, 3.67391, 0.23 ) }
    dend_57 { pt3dadd( -25.7542, 25.2674, 3.61664, 0.91 ) }
    dend_57 { pt3dadd( -26.1917, 25.4979, 3.59334, 0.91 ) }
    dend_57 { pt3dadd( -27.7699, 26.286, 3.60047, 0.23 ) }
    dend_57 { pt3dadd( -28.742, 26.7615, 3.64126, 0.68 ) }
    dend_57 { pt3dadd( -29.5377, 27.153, 3.71395, 0.23 ) }
    dend_57 { pt3dadd( -29.8488, 27.3054, 3.74554, 0.91 ) }
    dend_57 { pt3dadd( -30.564, 27.6347, 3.83488, 0.91 ) }
    dend_57 { pt3dadd( -31.8407, 28.1993, 3.99183, 0.23 ) }
    dend_57 { pt3dadd( -32.4828, 28.4661, 4.07012, 2.05 ) }
    dend_57 { pt3dadd( -33.118, 28.7558, 4.15701, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 20.9126, 36.0684, 1.22789, 0.68 ) }
    dend_53 { pt3dadd( 22.5625, 36.6154, 1.6906, 0.68 ) }
    dend_53 { pt3dadd( 25.0507, 37.3529, 2.33478, 1.14 ) }
    dend_53 { pt3dadd( 27.4488, 38.0528, 3.01408, 0.68 ) }
    dend_53 { pt3dadd( 30.3837, 38.9271, 3.91149, 0.68 ) }
    dend_53 { pt3dadd( 32.3391, 39.5419, 4.55204, 0.68 ) }
    dend_53 { pt3dadd( 34.0091, 40.0669, 5.09905, 1.14 ) }
    dend_53 { pt3dadd( 36.6713, 40.9149, 6.04044, 0.68 ) }
    dend_53 { pt3dadd( 39.3801, 41.7889, 7.07592, 0.68 ) }
    dend_53 { pt3dadd( 41.0432, 42.3538, 7.71227, 0.68 ) }
    dend_53 { pt3dadd( 42.1977, 42.7273, 8.19244, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 20.9126, 36.0684, 1.22789, 0.68 ) }
    dend_46 { pt3dadd( 20.9232, 37.9737, 1.17195, 0.68 ) }
    dend_46 { pt3dadd( 20.9238, 39.0421, 1.18282, 1.14 ) }
    dend_46 { pt3dadd( 20.922, 40.3103, 1.22988, 0.23 ) }
    dend_46 { pt3dadd( 20.8841, 42.2245, 1.39063, 0.68 ) }
    dend_46 { pt3dadd( 20.8215, 43.6052, 1.5556, 0.68 ) }
    dend_46 { pt3dadd( 20.7772, 44.3137, 1.65341, 0.68 ) }
    dend_46 { pt3dadd( 20.607, 45.9713, 1.96398, 1.14 ) }
    dend_46 { pt3dadd( 20.3239, 48.2796, 2.42604, 0.23 ) }
    dend_46 { pt3dadd( 20.1398, 49.523, 2.6893, 0.23 ) }
    dend_46 { pt3dadd( 19.832, 51.2967, 3.09253, 0.68 ) }
    dend_46 { pt3dadd( 19.6859, 51.9617, 3.23454, 0.68 ) }
    dend_46 { pt3dadd( 19.3667, 53.2674, 3.50848, 0.23 ) }
    dend_46 { pt3dadd( 19.1037, 54.1908, 3.69417, 0.91 ) }
    dend_46 { pt3dadd( 18.6078, 55.7314, 3.97633, 0.23 ) }
    dend_46 { pt3dadd( 18.307, 56.6712, 4.09643, 0.68 ) }
    dend_46 { pt3dadd( 17.7078, 58.4213, 4.286, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -216.702, -121.673, 7.4632, 0.23 ) }
    dend_43 { pt3dadd( -218.984, -121.858, 7.61786, 0.23 ) }
    dend_43 { pt3dadd( -220.374, -121.998, 7.71423, 0.68 ) }
    dend_43 { pt3dadd( -222.201, -122.215, 7.82914, 0.23 ) }
    dend_43 { pt3dadd( -223.661, -122.459, 7.84723, 0.45 ) }
    dend_43 { pt3dadd( -226.809, -123.095, 7.58447, 0.23 ) }
    dend_43 { pt3dadd( -229.105, -123.602, 7.28473, 0.45 ) }
    dend_43 { pt3dadd( -229.898, -123.817, 7.14318, 0.23 ) }
    dend_43 { pt3dadd( -231.191, -124.231, 6.85943, 0.68 ) }
    dend_43 { pt3dadd( -233.896, -125.19, 6.15689, 0.23 ) }
    dend_43 { pt3dadd( -237.633, -126.623, 5.23018, 0.68 ) }
    dend_43 { pt3dadd( -238.541, -126.972, 5.01054, 0.23 ) }
    dend_43 { pt3dadd( -239.473, -127.338, 4.83788, 0.68 ) }
    dend_43 { pt3dadd( -241.363, -128.106, 4.59716, 0.23 ) }
    dend_43 { pt3dadd( -242.654, -128.614, 4.51685, 0.91 ) }
    dend_43 { pt3dadd( -245.745, -129.792, 4.5611, 0.23 ) }
    dend_43 { pt3dadd( -247.484, -130.438, 4.66815, 1.14 ) }
    dend_43 { pt3dadd( -249.601, -131.177, 4.7642, 0.23 ) }
    dend_43 { pt3dadd( -251.004, -131.616, 4.8268, 0.91 ) }
    dend_43 { pt3dadd( -253.155, -132.216, 4.90179, 0.23 ) }
    dend_43 { pt3dadd( -254.324, -132.516, 4.91623, 0.68 ) }
    dend_43 { pt3dadd( -255.654, -132.824, 4.87667, 0.23 ) }
    dend_43 { pt3dadd( -257.385, -133.223, 4.84398, 0.68 ) }
    dend_43 { pt3dadd( -258.946, -133.557, 4.82307, 0.23 ) }
    dend_43 { pt3dadd( -260.288, -133.9, 4.83065, 0.91 ) }
    dend_43 { pt3dadd( -261.231, -134.192, 4.84561, 0.23 ) }
    dend_43 { pt3dadd( -262.925, -134.792, 4.86829, 0.45 ) }
    dend_43 { pt3dadd( -263.7, -135.085, 4.88388, 0.23 ) }
    dend_43 { pt3dadd( -265.552, -135.799, 4.91369, 0.45 ) }
    dend_43 { pt3dadd( -268.583, -136.915, 4.91764, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -270.079, -137.465, 4.92848, 0.23 ) }
    dend_43 { pt3dadd( -272.178, -138.228, 4.95513, 0.68 ) }
    dend_43 { pt3dadd( -274.733, -139.135, 5.00257, 0.23 ) }
    dend_43 { pt3dadd( -276.233, -139.636, 5.033, 0.23 ) }
    dend_43 { pt3dadd( -278.627, -140.363, 5.07872, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -216.702, -121.673, 7.4632, 0.23 ) }
    dend_40 { pt3dadd( -220.158, -124.345, 5.11406, 0.23 ) }
    dend_40 { pt3dadd( -221.334, -125.128, 4.42005, 0.68 ) }
    dend_40 { pt3dadd( -223.51, -126.429, 3.33486, 0.23 ) }
    dend_40 { pt3dadd( -225.278, -127.427, 2.53221, 0.91 ) }
    dend_40 { pt3dadd( -227.782, -128.84, 1.3953, 0.23 ) }
    dend_40 { pt3dadd( -230.286, -130.253, 0.258644, 0.45 ) }
    dend_40 { pt3dadd( -232.727, -131.48, -0.599938, 0.23 ) }
    dend_40 { pt3dadd( -235.619, -132.899, -1.6477, 0.68 ) }
    dend_40 { pt3dadd( -236.408, -133.275, -1.93079, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.58968, -17.0152, 11.5185, 1.14 ) }
    dend_30 { pt3dadd( 3.93776, -20.8083, 15.5437, 1.14 ) }
    dend_30 { pt3dadd( 6.73995, -25.4914, 20.0877, 1.14 ) }
    dend_30 { pt3dadd( 9.06758, -29.5713, 23.6523, 0.68 ) }
    dend_30 { pt3dadd( 10.98, -32.9235, 26.5811, 0.68 ) }
    dend_30 { pt3dadd( 11.9735, -34.6649, 28.1025, 0.91 ) }
    dend_30 { pt3dadd( 13.8126, -37.8885, 30.919, 0.68 ) }
    dend_30 { pt3dadd( 15.3594, -40.8109, 33.2289, 1.14 ) }
    dend_30 { pt3dadd( 16.425, -42.9347, 34.6016, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.58968, -17.0152, 11.5185, 0.23 ) }
    dend_29 { pt3dadd( 3.20371, -20.799, 10.5647, 0.23 ) }
    dend_29 { pt3dadd( 5.05966, -25.2726, 9.18457, 0.23 ) }
    dend_29 { pt3dadd( 7.26197, -30.5227, 7.52137, 0.23 ) }
    dend_29 { pt3dadd( 8.76122, -33.9449, 6.4669, 1.82 ) }
    dend_29 { pt3dadd( 9.79765, -36.407, 5.6431, 1.82 ) }
    dend_29 { pt3dadd( 11.108, -39.507, 4.58843, 0.68 ) }
    dend_29 { pt3dadd( 12.5003, -42.9055, 3.31299, 0.23 ) }
    dend_29 { pt3dadd( 13.6816, -46.0889, 2.22469, 0.23 ) }
    dend_29 { pt3dadd( 14.3603, -48.2058, 1.43027, 0.91 ) }
    dend_29 { pt3dadd( 15.5092, -52.0928, -0.172506, 0.23 ) }
    dend_29 { pt3dadd( 16.0295, -54.2332, -1.02171, 0.23 ) }
    dend_29 { pt3dadd( 16.6898, -57.8958, -2.32466, 0.23 ) }
    dend_29 { pt3dadd( 16.8761, -59.6321, -2.81444, 0.68 ) }
    dend_29 { pt3dadd( 17.1029, -63.9628, -3.92555, 0.23 ) }
    dend_29 { pt3dadd( 17.1329, -65.6674, -4.28877, 1.36 ) }
    dend_29 { pt3dadd( 17.1564, -68.8872, -4.74142, 0.23 ) }
    dend_29 { pt3dadd( 17.1502, -70.9458, -4.96277, 0.23 ) }
    dend_29 { pt3dadd( 17.2158, -74.0562, -5.0962, 0.91 ) }
    dend_29 { pt3dadd( 17.4659, -76.8508, -5.02282, 0.91 ) }
    dend_29 { pt3dadd( 17.7666, -78.7604, -4.91531, 0.91 ) }
    dend_29 { pt3dadd( 18.8566, -83.3831, -4.74186, 0.23 ) }
    dend_29 { pt3dadd( 19.613, -85.7192, -4.72853, 0.23 ) }
    dend_29 { pt3dadd( 20.836, -88.8932, -4.87982, 0.91 ) }
    dend_29 { pt3dadd( 22.5279, -92.7508, -5.20661, 0.23 ) }
    dend_29 { pt3dadd( 24.1163, -96.1005, -5.59363, 0.45 ) }
    dend_29 { pt3dadd( 26.2891, -100.405, -6.20535, 0.23 ) }
    dend_29 { pt3dadd( 28.2757, -104.281, -6.85902, 0.68 ) }
    dend_29 { pt3dadd( 30.5763, -108.946, -7.80997, 0.23 ) }
    dend_29 { pt3dadd( 31.5979, -111.245, -8.33178, 1.14 ) }
    dend_29 { pt3dadd( 31.8604, -111.921, -8.4807, 1.14 ) }
    dend_29 { pt3dadd( 32.4351, -113.573, -8.76115, 1.14 ) }
    dend_29 { pt3dadd( 33.617, -117.279, -9.27546, 0.23 ) }
    dend_29 { pt3dadd( 34.4919, -120.092, -9.58417, 0.91 ) }
    dend_29 { pt3dadd( 35.8969, -124.522, -9.97075, 0.23 ) }
    dend_29 { pt3dadd( 36.5367, -126.52, -10.1365, 1.14 ) }
    dend_29 { pt3dadd( 37.9878, -130.96, -10.5355, 0.23 ) }
    dend_29 { pt3dadd( 38.7477, -133.269, -10.7454, 1.14 ) }
    dend_29 { pt3dadd( 39.8366, -136.624, -11.026, 0.23 ) }
    dend_29 { pt3dadd( 40.361, -138.382, -11.1485, 1.14 ) }
    dend_29 { pt3dadd( 40.9178, -140.41, -11.2897, 1.14 ) }
    dend_29 { pt3dadd( 42.0857, -145.246, -11.7005, 0.23 ) }
    dend_29 { pt3dadd( 42.6649, -148.091, -11.9585, 1.14 ) }
    dend_29 { pt3dadd( 43.3366, -151.896, -12.3454, 0.23 ) }
    dend_29 { pt3dadd( 43.7619, -154.54, -12.6259, 1.14 ) }
    dend_29 { pt3dadd( 44.4478, -158.694, -13.0392, 0.23 ) }
    dend_29 { pt3dadd( 44.8634, -161.093, -13.2794, 1.82 ) }
    dend_29 { pt3dadd( 45.7015, -165.611, -13.6964, 0.23 ) }
    dend_29 { pt3dadd( 45.9298, -166.772, -13.8124, 0.68 ) }
    dend_29 { pt3dadd( 46.3533, -168.891, -14.0348, 0.23 ) }
    dend_29 { pt3dadd( 46.9856, -171.974, -14.3286, 0.91 ) }
    dend_29 { pt3dadd( 47.5966, -175.141, -14.5874, 0.23 ) }
    dend_29 { pt3dadd( 47.8497, -176.515, -14.5915, 1.14 ) }
    dend_29 { pt3dadd( 48.2846, -178.726, -14.4932, 0.23 ) }
    dend_29 { pt3dadd( 48.5881, -180.2, -14.3767, 0.68 ) }
    dend_29 { pt3dadd( 49.466, -184.32, -13.9934, 0.23 ) }
    dend_29 { pt3dadd( 49.7988, -185.781, -13.8341, 1.14 ) }
    dend_29 { pt3dadd( 51.162, -191.234, -13.1473, 0.23 ) }
    dend_29 { pt3dadd( 51.8413, -194.026, -12.6393, 0.91 ) }
    dend_29 { pt3dadd( 52.153, -195.353, -12.3467, 0.91 ) }
    dend_29 { pt3dadd( 52.789, -198.184, -11.648, 0.23 ) }
    dend_29 { pt3dadd( 53.1263, -199.868, -11.214, 1.14 ) }
    dend_29 { pt3dadd( 53.3539, -201.226, -10.8822, 1.14 ) }
    dend_29 { pt3dadd( 54.119, -207.473, -9.88595, 0.23 ) }
    dend_29 { pt3dadd( 54.3582, -210.025, -9.58257, 0.91 ) }
    dend_29 { pt3dadd( 54.4525, -211.069, -9.54198, 0.91 ) }
    dend_29 { pt3dadd( 54.7795, -214.315, -9.65293, 0.23 ) }
    dend_29 { pt3dadd( 54.9761, -215.916, -9.84979, 0.68 ) }
    dend_29 { pt3dadd( 55.6126, -220.001, -10.8309, 0.23 ) }
    dend_29 { pt3dadd( 55.8525, -221.325, -11.3179, 0.91 ) }
    dend_29 { pt3dadd( 56.4601, -224.734, -12.5999, 0.23 ) }
    dend_29 { pt3dadd( 56.7987, -226.696, -13.2876, 1.14 ) }
    dend_29 { pt3dadd( 56.9668, -227.707, -13.6121, 1.14 ) }
    dend_29 { pt3dadd( 57.1876, -229.176, -13.9928, 1.59 ) }
    dend_29 { pt3dadd( 57.59, -232.54, -14.5626, 0.23 ) }
    dend_29 { pt3dadd( 57.74, -234.142, -14.8158, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 57.9611, -236.922, -15.1867, 0.23 ) }
    dend_29 { pt3dadd( 58.0493, -237.804, -15.3285, 0.68 ) }
    dend_29 { pt3dadd( 58.245, -239.255, -15.6085, 0.23 ) }
    dend_29 { pt3dadd( 58.5124, -240.643, -15.8968, 0.91 ) }
    dend_29 { pt3dadd( 59.0375, -242.432, -16.3411, 0.23 ) }
    dend_29 { pt3dadd( 59.5909, -244.144, -16.6832, 1.14 ) }
    dend_29 { pt3dadd( 60.6048, -247.271, -16.9853, 0.23 ) }
    dend_29 { pt3dadd( 61.349, -249.586, -17.057, 0.23 ) }
    dend_29 { pt3dadd( 62.0312, -251.758, -17.0216, 0.91 ) }
    dend_29 { pt3dadd( 63.3136, -255.97, -16.77, 0.23 ) }
    dend_29 { pt3dadd( 64.4468, -259.87, -16.375, 1.14 ) }
    dend_29 { pt3dadd( 66.0365, -265.588, -15.5175, 0.23 ) }
    dend_29 { pt3dadd( 66.4554, -267.268, -15.1997, 0.91 ) }
    dend_29 { pt3dadd( 66.6799, -268.313, -14.9834, 0.91 ) }
    dend_29 { pt3dadd( 67.1846, -271.348, -14.367, 0.23 ) }
    dend_29 { pt3dadd( 67.4399, -273.773, -14.0018, 1.14 ) }
    dend_29 { pt3dadd( 67.6455, -277.369, -13.8198, 0.23 ) }
    dend_29 { pt3dadd( 67.6319, -278.893, -13.8581, 0.68 ) }
    dend_29 { pt3dadd( 67.4849, -281.698, -13.906, 0.23 ) }
    dend_29 { pt3dadd( 67.3656, -283.042, -13.9244, 1.14 ) }
    dend_29 { pt3dadd( 66.8693, -287.312, -13.9491, 0.23 ) }
    dend_29 { pt3dadd( 66.7138, -288.825, -13.9417, 0.91 ) }
    dend_29 { pt3dadd( 66.6582, -289.582, -13.9334, 0.91 ) }
    dend_29 { pt3dadd( 66.5366, -292.825, -13.5966, 0.23 ) }
    dend_29 { pt3dadd( 66.5016, -294.217, -13.286, 0.91 ) }
    dend_29 { pt3dadd( 66.4126, -297.249, -12.3563, 0.23 ) }
    dend_29 { pt3dadd( 66.3756, -298.751, -11.8029, 1.14 ) }
    dend_29 { pt3dadd( 66.2758, -301.251, -10.9004, 0.23 ) }
    dend_29 { pt3dadd( 66.1097, -304.234, -9.88666, 0.91 ) }
    dend_29 { pt3dadd( 66.0287, -306.972, -9.2222, 0.23 ) }
    dend_29 { pt3dadd( 66.0403, -308.48, -8.95008, 0.91 ) }
    dend_29 { pt3dadd( 66.1188, -311.309, -8.62274, 0.23 ) }
    dend_29 { pt3dadd( 66.2356, -314.176, -8.3985, 1.14 ) }
    dend_29 { pt3dadd( 66.3372, -315.233, -8.3842, 1.14 ) }
    dend_29 { pt3dadd( 67.1679, -320.096, -8.84754, 0.23 ) }
    dend_29 { pt3dadd( 67.6668, -322.142, -9.21113, 0.23 ) }
    dend_29 { pt3dadd( 67.9301, -322.983, -9.39662, 0.68 ) }
    dend_29 { pt3dadd( 69.6224, -335.101, -9.86845, 0.68 ) }
    dend_29 { pt3dadd( 72.4891, -346.98, -9.22064, 0.68 ) }
    dend_29 { pt3dadd( 76.6119, -358.281, -7.17348, 0.68 ) }
    dend_29 { pt3dadd( 81.4807, -369.178, -4.76593, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.01786, -27.1486, -4.13968, 1.59 ) }
    dend_23 { pt3dadd( 7.93205, -27.5172, -4.12339, 1.59 ) }
    dend_23 { pt3dadd( 7.3045, -30.2126, -4.00426, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 8.01786, -27.1486, -4.13968, 0.23 ) }
    dend_20 { pt3dadd( 7.99169, -28.4841, -5.56214, 0.23 ) }
    dend_20 { pt3dadd( 7.983, -30.4824, -7.83847, 0.68 ) }
    dend_20 { pt3dadd( 8.01871, -32.6574, -10.2999, 0.23 ) }
    dend_20 { pt3dadd( 8.13164, -34.7949, -12.8707, 0.91 ) }
    dend_20 { pt3dadd( 8.3444, -38.3603, -17.2123, 0.91 ) }
    dend_20 { pt3dadd( 8.45868, -40.4574, -19.7323, 0.23 ) }
    dend_20 { pt3dadd( 8.60102, -42.0598, -21.7924, 0.23 ) }
    dend_20 { pt3dadd( 8.72622, -42.8121, -22.8086, 1.59 ) }
    dend_20 { pt3dadd( 9.41839, -45.529, -26.5273, 0.23 ) }
    dend_20 { pt3dadd( 9.64524, -46.0909, -27.2724, 0.23 ) }
    dend_20 { pt3dadd( 10.0656, -46.8433, -28.0834, 0.23 ) }
    dend_20 { pt3dadd( 10.6653, -47.6201, -28.8719, 0.23 ) }
    dend_20 { pt3dadd( 11.7358, -48.7444, -30.0871, 1.14 ) }
    dend_20 { pt3dadd( 12.9119, -49.8242, -31.3711, 0.68 ) }
    dend_20 { pt3dadd( 14.0859, -50.9374, -32.6563, 0.68 ) }
    dend_20 { pt3dadd( 15.1474, -52.0493, -33.9247, 0.68 ) }
    dend_20 { pt3dadd( 16.2853, -53.4036, -35.7229, 0.23 ) }
    dend_20 { pt3dadd( 17.3805, -55.0547, -37.9997, 0.23 ) }
    dend_20 { pt3dadd( 18.0954, -56.2994, -39.7084, 0.68 ) }
    dend_20 { pt3dadd( 18.7796, -57.5997, -41.5612, 0.23 ) }
    dend_20 { pt3dadd( 19.1998, -58.4678, -42.8592, 0.91 ) }
    dend_20 { pt3dadd( 20.525, -61.623, -47.7485, 0.23 ) }
    dend_20 { pt3dadd( 20.8198, -62.665, -49.2713, 0.23 ) }
    dend_20 { pt3dadd( 21.0942, -63.8531, -51.0057, 0.68 ) }
    dend_20 { pt3dadd( 22.9285, -69.9466, -59.7254, 0.68 ) }
    dend_20 { pt3dadd( 24.2764, -76.6951, -68.0849, 0.68 ) }
    dend_20 { pt3dadd( 26.9575, -83.6058, -75.9953, 0.68 ) }
    dend_20 { pt3dadd( 30.1486, -91.5673, -82.7364, 0.68 ) }
    dend_20 { pt3dadd( 31.7477, -99.8562, -89.6724, 0.68 ) }
    dend_20 { pt3dadd( 32.4926, -108.937, -95.8049, 0.68 ) }
    dend_20 { pt3dadd( 33.3477, -118.803, -100.708, 0.68 ) }
    dend_20 { pt3dadd( 36.6537, -128.025, -105.725, 0.68 ) }
    dend_20 { pt3dadd( 39.8229, -137.549, -110.302, 0.68 ) }
    dend_20 { pt3dadd( 43.8268, -147.145, -114.027, 0.68 ) }
    dend_20 { pt3dadd( 48.3533, -156.693, -117.246, 0.68 ) }
    dend_20 { pt3dadd( 52.8065, -166.697, -119.01, 0.68 ) }
    dend_20 { pt3dadd( 57.0416, -176.842, -120.582, 0.68 ) }
    dend_20 { pt3dadd( 59.963, -187.397, -122.582, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 223.247, -121.459, -43.1094, 0.23 ) }
    dend_18 { pt3dadd( 233.206, -126.311, -45.0287, 0.23 ) }
    dend_18 { pt3dadd( 242.538, -132.438, -46.7825, 0.23 ) }
    dend_18 { pt3dadd( 251.483, -139.448, -46.4025, 0.23 ) }
    dend_18 { pt3dadd( 258.887, -148.201, -45.7371, 0.23 ) }
    dend_18 { pt3dadd( 266.774, -156.072, -43.1062, 0.23 ) }
    dend_18 { pt3dadd( 274.143, -164.241, -39.834, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 223.247, -121.459, -43.1094, 0.23 ) }
    dend_17 { pt3dadd( 234.322, -126.791, -45.086, 0.23 ) }
    dend_17 { pt3dadd( 245.966, -131.017, -45.7909, 0.23 ) }
    dend_17 { pt3dadd( 256.856, -136.572, -48.1998, 0.23 ) }
    dend_17 { pt3dadd( 266.888, -142.854, -52.2113, 0.23 ) }
    dend_17 { pt3dadd( 276.163, -149.738, -57.0703, 0.23 ) }
    dend_17 { pt3dadd( 286.174, -156.585, -60.1888, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 22.0288, 24.2439, -1.9923, 0.23 ) }
    dend_14 { pt3dadd( 24.0852, 25.6676, -2.57659, 0.23 ) }
    dend_14 { pt3dadd( 26.9068, 27.5605, -3.4408, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 29.8459, 29.515, -4.25675, 0.23 ) }
    dend_14 { pt3dadd( 31.427, 30.6089, -4.66688, 0.91 ) }
    dend_14 { pt3dadd( 32.4413, 31.3392, -4.94784, 0.91 ) }
    dend_14 { pt3dadd( 34.0864, 32.576, -5.41671, 0.23 ) }
    dend_14 { pt3dadd( 36.5174, 34.4816, -6.02397, 1.59 ) }
    dend_14 { pt3dadd( 38.6623, 36.2628, -6.55149, 0.23 ) }
    dend_14 { pt3dadd( 39.9278, 37.3831, -6.88564, 1.14 ) }
    dend_14 { pt3dadd( 42.1068, 39.2931, -7.39878, 0.23 ) }
    dend_14 { pt3dadd( 43.0634, 40.0961, -7.62596, 0.23 ) }
    dend_14 { pt3dadd( 44.8314, 41.606, -8.07464, 1.14 ) }
    dend_14 { pt3dadd( 46.1936, 42.7483, -8.51593, 0.23 ) }
    dend_14 { pt3dadd( 47.129, 43.4982, -8.88006, 1.14 ) }
    dend_14 { pt3dadd( 48.5355, 44.5784, -9.44855, 1.14 ) }
    dend_14 { pt3dadd( 51.0516, 46.4454, -10.409, 0.23 ) }
    dend_14 { pt3dadd( 53.1806, 47.9847, -11.1803, 1.59 ) }
    dend_14 { pt3dadd( 56.3144, 50.1968, -12.2544, 0.23 ) }
    dend_14 { pt3dadd( 58.2978, 51.6222, -12.851, 0.68 ) }
    dend_14 { pt3dadd( 60.9307, 53.5162, -13.4925, 0.23 ) }
    dend_14 { pt3dadd( 62.6311, 54.7902, -13.8176, 1.36 ) }
    dend_14 { pt3dadd( 64.3893, 56.1468, -14.0135, 0.23 ) }
    dend_14 { pt3dadd( 66.4882, 57.8421, -14.1111, 1.36 ) }
    dend_14 { pt3dadd( 70.0481, 60.9396, -14.0549, 0.23 ) }
    dend_14 { pt3dadd( 72.6989, 63.3807, -13.9932, 0.23 ) }
    dend_14 { pt3dadd( 74.2072, 64.9048, -13.9432, 0.23 ) }
    dend_14 { pt3dadd( 75.892, 66.7865, -13.9009, 2.05 ) }
    dend_14 { pt3dadd( 77.7563, 69.0753, -13.8511, 0.23 ) }
    dend_14 { pt3dadd( 79.6234, 71.6509, -13.7781, 0.23 ) }
    dend_14 { pt3dadd( 80.6639, 73.237, -13.7198, 1.59 ) }
    dend_14 { pt3dadd( 82.2685, 75.8081, -13.6348, 0.23 ) }
    dend_14 { pt3dadd( 82.8303, 76.7047, -13.5976, 1.14 ) }
    dend_14 { pt3dadd( 83.5988, 77.9799, -13.5472, 1.14 ) }
    dend_14 { pt3dadd( 84.3603, 79.2169, -13.5081, 0.23 ) }
    dend_14 { pt3dadd( 85.7101, 81.4222, -13.4753, 1.14 ) }
    dend_14 { pt3dadd( 86.7374, 83.0306, -13.369, 0.23 ) }
    dend_14 { pt3dadd( 87.4918, 84.0828, -13.2975, 0.23 ) }
    dend_14 { pt3dadd( 88.3921, 85.2242, -13.2415, 0.91 ) }
    dend_14 { pt3dadd( 89.6102, 86.6836, -13.1998, 0.23 ) }
    dend_14 { pt3dadd( 90.8283, 88.1002, -13.1908, 1.36 ) }
    dend_14 { pt3dadd( 92.94, 90.5084, -13.3894, 0.23 ) }
    dend_14 { pt3dadd( 95.1477, 92.9739, -13.7936, 0.23 ) }
    dend_14 { pt3dadd( 96.2838, 94.1371, -14.092, 0.91 ) }
    dend_14 { pt3dadd( 97.0228, 94.8499, -14.3267, 0.91 ) }
    dend_14 { pt3dadd( 98.6842, 96.3103, -15.0032, 0.23 ) }
    dend_14 { pt3dadd( 100.411, 97.6626, -15.8227, 0.91 ) }
    dend_14 { pt3dadd( 102.508, 99.2045, -16.9932, 0.23 ) }
    dend_14 { pt3dadd( 104.285, 100.472, -17.9597, 1.14 ) }
    dend_14 { pt3dadd( 105.087, 100.996, -18.3565, 1.14 ) }
    dend_14 { pt3dadd( 107.073, 102.232, -19.2397, 0.23 ) }
    dend_14 { pt3dadd( 108.296, 102.92, -19.7023, 1.14 ) }
    dend_14 { pt3dadd( 110.265, 104.007, -20.2331, 0.23 ) }
    dend_14 { pt3dadd( 111.22, 104.528, -20.4694, 1.14 ) }
    dend_14 { pt3dadd( 114.602, 106.391, -21.2078, 0.23 ) }
    dend_14 { pt3dadd( 115.842, 107.085, -21.4525, 0.23 ) }
    dend_14 { pt3dadd( 118.247, 108.513, -21.8317, 1.82 ) }
    dend_14 { pt3dadd( 120.855, 110.103, -22.2064, 0.23 ) }
    dend_14 { pt3dadd( 124.018, 112.076, -22.5993, 1.36 ) }
    dend_14 { pt3dadd( 124.893, 112.659, -22.7029, 0.23 ) }
    dend_14 { pt3dadd( 126.093, 113.536, -22.8203, 0.68 ) }
    dend_14 { pt3dadd( 128.258, 115.204, -22.993, 0.23 ) }
    dend_14 { pt3dadd( 129.357, 116.17, -23.0592, 0.23 ) }
    dend_14 { pt3dadd( 130.261, 117.02, -23.1001, 1.14 ) }
    dend_14 { pt3dadd( 131.17, 117.933, -23.0749, 1.14 ) }
    dend_14 { pt3dadd( 131.887, 118.705, -23.0756, 0.23 ) }
    dend_14 { pt3dadd( 132.427, 119.284, -23.1191, 0.23 ) }
    dend_14 { pt3dadd( 133.342, 120.325, -23.2653, 1.14 ) }
    dend_14 { pt3dadd( 134.048, 121.193, -23.4047, 1.14 ) }
    dend_14 { pt3dadd( 135.214, 122.665, -23.7533, 0.23 ) }
    dend_14 { pt3dadd( 135.849, 123.462, -23.9801, 0.91 ) }
    dend_14 { pt3dadd( 137.183, 125.167, -24.5008, 0.23 ) }
    dend_14 { pt3dadd( 138.611, 127.056, -25.1056, 1.14 ) }
    dend_14 { pt3dadd( 139.881, 128.723, -25.6418, 0.23 ) }
    dend_14 { pt3dadd( 141.407, 130.648, -26.3426, 1.14 ) }
    dend_14 { pt3dadd( 142.184, 131.598, -26.706, 0.23 ) }
    dend_14 { pt3dadd( 143.081, 132.681, -27.1036, 0.68 ) }
    dend_14 { pt3dadd( 144.5, 134.337, -27.6487, 0.23 ) }
    dend_14 { pt3dadd( 145.033, 134.901, -27.8631, 0.91 ) }
    dend_14 { pt3dadd( 147.28, 137.279, -28.783, 0.23 ) }
    dend_14 { pt3dadd( 148.109, 138.214, -29.1194, 0.23 ) }
    dend_14 { pt3dadd( 149.06, 139.382, -29.5725, 0.23 ) }
    dend_14 { pt3dadd( 150.11, 140.841, -30.2059, 0.91 ) }
    dend_14 { pt3dadd( 151.292, 142.839, -31.1109, 0.23 ) }
    dend_14 { pt3dadd( 152.129, 144.781, -32.0514, 1.14 ) }
    dend_14 { pt3dadd( 152.388, 145.712, -32.5084, 0.23 ) }
    dend_14 { pt3dadd( 152.627, 146.999, -33.173, 0.91 ) }
    dend_14 { pt3dadd( 152.878, 149.283, -34.3304, 0.23 ) }
    dend_14 { pt3dadd( 152.939, 150.847, -35.0861, 0.91 ) }
    dend_14 { pt3dadd( 152.919, 152.956, -36.0191, 0.23 ) }
    dend_14 { pt3dadd( 152.9, 154.216, -36.6438, 0.91 ) }
    dend_14 { pt3dadd( 152.886, 155.791, -37.4596, 0.23 ) }
    dend_14 { pt3dadd( 152.919, 157.746, -38.494, 0.23 ) }
    dend_14 { pt3dadd( 152.928, 158.668, -38.9734, 0.91 ) }
    dend_14 { pt3dadd( 152.949, 159.898, -39.6219, 0.23 ) }
    dend_14 { pt3dadd( 153.034, 162.34, -40.8871, 1.14 ) }
    dend_14 { pt3dadd( 153.064, 163.25, -41.3632, 1.14 ) }
    dend_14 { pt3dadd( 153.147, 166.533, -43.024, 0.23 ) }
    dend_14 { pt3dadd( 153.185, 168.261, -43.9147, 0.23 ) }
    dend_14 { pt3dadd( 153.205, 168.876, -44.2192, 0.45 ) }
    dend_14 { pt3dadd( 153.237, 169.677, -44.5756, 0.23 ) }
    dend_14 { pt3dadd( 153.25, 170.655, -44.9003, 0.23 ) }
    dend_14 { pt3dadd( 153.279, 172.635, -45.5248, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 161.031, 181.503, -46.2671, 0.23 ) }
    dend_14 { pt3dadd( 169.118, 189.675, -48.8385, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.0288, 24.2439, -1.9923, 0.23 ) }
    dend_5 { pt3dadd( 24.5253, 25.5034, -1.8477, 0.23 ) }
    dend_5 { pt3dadd( 28.9246, 27.7574, -1.61703, 0.91 ) }
    dend_5 { pt3dadd( 32.6755, 29.6116, -1.50628, 0.23 ) }
    dend_5 { pt3dadd( 34.7933, 30.6335, -1.44371, 0.91 ) }
    dend_5 { pt3dadd( 37.1098, 31.7283, -1.34028, 0.23 ) }
    dend_5 { pt3dadd( 39.2425, 32.7341, -1.20586, 0.23 ) }
    dend_5 { pt3dadd( 41.1271, 33.6174, -1.10288, 0.91 ) }
    dend_5 { pt3dadd( 43.0857, 34.5788, -1.00563, 0.23 ) }
    dend_5 { pt3dadd( 45.358, 35.7422, -0.744951, 0.91 ) }
    dend_5 { pt3dadd( 48.0979, 37.1787, -0.416666, 0.23 ) }
    dend_5 { pt3dadd( 50.6232, 38.5439, -0.0399823, 0.68 ) }
    dend_5 { pt3dadd( 52.3928, 39.5044, 0.222363, 0.23 ) }
    dend_5 { pt3dadd( 54.1074, 40.4605, 0.488175, 1.14 ) }
    dend_5 { pt3dadd( 56.586, 41.9577, 0.926263, 0.23 ) }
    dend_5 { pt3dadd( 58.0213, 42.8618, 1.12969, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.8455, 338.744, -72.2748, 0.23 ) }
    dend_3 { pt3dadd( -17.2434, 346.389, -74.3752, 0.23 ) }
    dend_3 { pt3dadd( -19.1088, 353.663, -76.8453, 0.23 ) }
    dend_3 { pt3dadd( -20.0208, 361.051, -79.5234, 0.23 ) }
    dend_3 { pt3dadd( -21.8474, 368.656, -80.9101, 0.23 ) }
    dend_3 { pt3dadd( -25.0955, 375.826, -81.7254, 0.23 ) }
    dend_3 { pt3dadd( -28.6771, 382.85, -81.0205, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.8455, 338.744, -72.2748, 0.23 ) }
    dend_2 { pt3dadd( -18.1003, 351.625, -74.5759, 0.23 ) }
    dend_2 { pt3dadd( -17.8013, 364.729, -75.8381, 0.23 ) }
    dend_2 { pt3dadd( -16.7495, 377.86, -75.2693, 0.23 ) }
    dend_2 { pt3dadd( -16.7979, 391.049, -74.898, 0.23 ) }
    dend_2 { pt3dadd( -16.3806, 404.081, -72.8736, 0.23 ) }
    dend_2 { pt3dadd( -14.6076, 417.062, -71.4769, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -28.7255, 18.0657, -16.8044, 0.23 ) }
    dend_70 { pt3dadd( -30.5593, 16.4761, -18.5786, 0.23 ) }
    dend_70 { pt3dadd( -31.6482, 15.5938, -19.6709, 0.23 ) }
    dend_70 { pt3dadd( -32.6167, 14.7965, -20.6082, 0.91 ) }
    dend_70 { pt3dadd( -34.4616, 13.2453, -22.2476, 0.68 ) }
    dend_70 { pt3dadd( -36.1043, 11.8553, -23.5605, 0.23 ) }
    dend_70 { pt3dadd( -37.3262, 10.8615, -24.4098, 0.68 ) }
    dend_70 { pt3dadd( -39.3289, 9.22401, -25.7272, 0.23 ) }
    dend_70 { pt3dadd( -40.2177, 8.5613, -26.1856, 0.91 ) }
    dend_70 { pt3dadd( -42.0844, 7.30436, -26.9255, 0.23 ) }
    dend_70 { pt3dadd( -43.2532, 6.57199, -27.2048, 1.14 ) }
    dend_70 { pt3dadd( -45.6612, 5.01345, -27.5049, 0.23 ) }
    dend_70 { pt3dadd( -46.6363, 4.33447, -27.5802, 0.68 ) }
    dend_70 { pt3dadd( -47.6553, 3.58622, -27.6046, 0.23 ) }
    dend_70 { pt3dadd( -48.443, 2.96143, -27.6235, 0.23 ) }
    dend_70 { pt3dadd( -49.0653, 2.42659, -27.6237, 0.23 ) }
    dend_70 { pt3dadd( -50.6049, 0.862448, -27.6761, 1.14 ) }
    dend_70 { pt3dadd( -52.2001, -1.00734, -27.737, 0.23 ) }
    dend_70 { pt3dadd( -53.89, -3.16155, -27.9321, 0.91 ) }
    dend_70 { pt3dadd( -55.217, -4.92317, -28.1561, 0.23 ) }
    dend_70 { pt3dadd( -56.1639, -6.27443, -28.351, 1.14 ) }
    dend_70 { pt3dadd( -57.8743, -8.73244, -28.7484, 0.23 ) }
    dend_70 { pt3dadd( -58.7595, -10.0344, -28.9881, 0.91 ) }
    dend_70 { pt3dadd( -60.1777, -12.2336, -29.3918, 0.23 ) }
    dend_70 { pt3dadd( -61.0103, -13.6488, -29.6716, 1.14 ) }
    dend_70 { pt3dadd( -62.1016, -15.5748, -30.1739, 0.23 ) }
    dend_70 { pt3dadd( -68.9561, -24.3665, -31.3967, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -28.7255, 18.0657, -16.8044, 0.23 ) }
    dend_63 { pt3dadd( -27.3438, 18.0363, -18.7569, 0.23 ) }
    dend_63 { pt3dadd( -25.603, 18.0945, -21.1199, 0.91 ) }
    dend_63 { pt3dadd( -24.187, 18.1362, -22.9332, 0.23 ) }
    dend_63 { pt3dadd( -23.7699, 18.1685, -23.4979, 0.68 ) }
    dend_63 { pt3dadd( -22.7835, 18.3006, -24.9288, 0.23 ) }
    dend_63 { pt3dadd( -22.1595, 18.4349, -25.953, 1.14 ) }
    dend_63 { pt3dadd( -20.6656, 18.8132, -28.5863, 0.23 ) }
    dend_63 { pt3dadd( -19.6522, 19.1099, -30.7897, 0.91 ) }
    dend_63 { pt3dadd( -18.2631, 19.4766, -34.3792, 0.23 ) }
    dend_63 { pt3dadd( -17.7175, 19.6139, -36.0429, 1.36 ) }
    dend_63 { pt3dadd( -16.6906, 19.9355, -40.0986, 0.23 ) }
    dend_63 { pt3dadd( -16.3458, 20.0649, -42.1101, 0.91 ) }
    dend_63 { pt3dadd( -15.9085, 20.2323, -47.176, 0.23 ) }
    dend_63 { pt3dadd( -15.8141, 20.2812, -49.6477, 0.68 ) }
    dend_63 { pt3dadd( -15.8215, 20.2342, -52.3039, 0.91 ) }
    dend_63 { pt3dadd( -15.9224, 20.0846, -55.2824, 0.23 ) }
    dend_63 { pt3dadd( -16.0941, 19.951, -56.9388, 0.23 ) }
    dend_63 { pt3dadd( -16.4355, 19.8645, -58.7595, 1.14 ) }
    dend_63 { pt3dadd( -13.5004, 20.8211, -68.582, 1.14 ) }
    dend_63 { pt3dadd( -8.57986, 23.5557, -77.2244, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -33.118, 28.7558, 4.15701, 0.23 ) }
    dend_59 { pt3dadd( -34.0449, 30.5204, 4.86578, 0.23 ) }
    dend_59 { pt3dadd( -34.9286, 32.0757, 5.47859, 0.23 ) }
    dend_59 { pt3dadd( -35.3179, 32.7038, 5.71746, 0.91 ) }
    dend_59 { pt3dadd( -36.5932, 34.6795, 6.53619, 0.23 ) }
    dend_59 { pt3dadd( -37.3707, 35.8353, 7.02549, 0.91 ) }
    dend_59 { pt3dadd( -39.0194, 38.2016, 8.02411, 0.23 ) }
    dend_59 { pt3dadd( -40.0472, 39.5916, 8.69657, 1.14 ) }
    dend_59 { pt3dadd( -41.6824, 41.6708, 9.73339, 0.23 ) }
    dend_59 { pt3dadd( -42.8707, 43.1202, 10.4372, 0.91 ) }
    dend_59 { pt3dadd( -43.9672, 44.3659, 11.0209, 0.23 ) }
    dend_59 { pt3dadd( -44.8845, 45.3677, 11.5722, 0.91 ) }
    dend_59 { pt3dadd( -46.2435, 46.7203, 12.4454, 0.23 ) }
    dend_59 { pt3dadd( -47.3357, 47.7443, 13.1852, 0.68 ) }
    dend_59 { pt3dadd( -48.1462, 48.4025, 13.7096, 0.23 ) }
    dend_59 { pt3dadd( -49.0279, 49.0027, 14.254, 0.68 ) }
    dend_59 { pt3dadd( -50.9089, 50.0752, 15.4131, 0.23 ) }
    dend_59 { pt3dadd( -51.8302, 50.4976, 15.979, 1.14 ) }
    dend_59 { pt3dadd( -53.3204, 51.0375, 16.8524, 0.23 ) }
    dend_59 { pt3dadd( -55.147, 51.5788, 17.9439, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -57.0376, 52.0273, 18.9867, 0.68 ) }
    dend_59 { pt3dadd( -58.0041, 52.2372, 19.4519, 0.23 ) }
    dend_59 { pt3dadd( -60.2799, 52.6906, 20.3561, 0.68 ) }
    dend_59 { pt3dadd( -61.1292, 52.8613, 20.6702, 0.23 ) }
    dend_59 { pt3dadd( -62.3651, 53.1238, 21.0825, 0.68 ) }
    dend_59 { pt3dadd( -63.7747, 53.4838, 21.4933, 0.23 ) }
    dend_59 { pt3dadd( -65.7306, 54.0548, 21.9899, 0.91 ) }
    dend_59 { pt3dadd( -67.8674, 54.8044, 22.5262, 0.23 ) }
    dend_59 { pt3dadd( -69.6798, 55.551, 22.9601, 0.91 ) }
    dend_59 { pt3dadd( -71.529, 56.4269, 23.5149, 0.23 ) }
    dend_59 { pt3dadd( -72.3892, 56.8668, 23.8161, 0.23 ) }
    dend_59 { pt3dadd( -74.1023, 57.8431, 24.4657, 0.91 ) }
    dend_59 { pt3dadd( -75.5968, 58.7927, 25.128, 0.23 ) }
    dend_59 { pt3dadd( -76.563, 59.4791, 25.6012, 0.68 ) }
    dend_59 { pt3dadd( -78.9656, 61.3495, 26.8819, 0.23 ) }
    dend_59 { pt3dadd( -80.386, 62.5662, 27.6875, 0.68 ) }
    dend_59 { pt3dadd( -82.0923, 64.155, 28.6814, 0.23 ) }
    dend_59 { pt3dadd( -83.5894, 65.7802, 29.6642, 0.23 ) }
    dend_59 { pt3dadd( -84.4891, 66.9109, 30.3166, 0.23 ) }
    dend_59 { pt3dadd( -85.23, 68.0462, 30.9001, 0.68 ) }
    dend_59 { pt3dadd( -85.6116, 68.7771, 31.2359, 0.23 ) }
    dend_59 { pt3dadd( -85.8785, 69.3855, 31.5175, 0.91 ) }
    dend_59 { pt3dadd( -87.0019, 72.3497, 32.9197, 0.23 ) }
    dend_59 { pt3dadd( -87.4155, 73.5809, 33.4468, 0.23 ) }
    dend_59 { pt3dadd( -87.9457, 75.3546, 34.2263, 0.23 ) }
    dend_59 { pt3dadd( -88.4873, 77.1292, 35.0123, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -33.118, 28.7558, 4.15701, 0.45 ) }
    dend_58 { pt3dadd( -35.3808, 28.3804, 3.60334, 0.45 ) }
    dend_58 { pt3dadd( -38.279, 27.7897, 2.95198, 0.91 ) }
    dend_58 { pt3dadd( -39.7904, 27.4399, 2.53233, 0.23 ) }
    dend_58 { pt3dadd( -42.0663, 26.7854, 1.74578, 0.91 ) }
    dend_58 { pt3dadd( -42.8899, 26.5199, 1.43924, 0.91 ) }
    dend_58 { pt3dadd( -43.8758, 26.1876, 1.05021, 0.23 ) }
    dend_58 { pt3dadd( -45.705, 25.5106, 0.267697, 0.68 ) }
    dend_58 { pt3dadd( -47.7839, 24.641, -0.670388, 0.23 ) }
    dend_58 { pt3dadd( -49.9041, 23.7428, -1.63152, 1.14 ) }
    dend_58 { pt3dadd( -51.1036, 23.2417, -2.1955, 1.14 ) }
    dend_58 { pt3dadd( -53.4738, 22.3043, -3.33603, 0.23 ) }
    dend_58 { pt3dadd( -54.8892, 21.8165, -3.99685, 1.14 ) }
    dend_58 { pt3dadd( -57.4518, 21.0196, -5.18933, 0.23 ) }
    dend_58 { pt3dadd( -58.8948, 20.6248, -5.7773, 0.23 ) }
    dend_58 { pt3dadd( -61.3164, 20.01, -6.67375, 0.23 ) }
    dend_58 { pt3dadd( -61.7733, 19.8842, -6.81898, 0.91 ) }
    dend_58 { pt3dadd( -63.1156, 19.5051, -7.15383, 1.59 ) }
    dend_58 { pt3dadd( -66.1282, 18.6866, -7.72424, 0.23 ) }
    dend_58 { pt3dadd( -69.0084, 17.9611, -8.08897, 1.36 ) }
    dend_58 { pt3dadd( -71.3936, 17.3885, -8.24189, 0.91 ) }
    dend_58 { pt3dadd( -74.7396, 16.6217, -8.25094, 0.23 ) }
    dend_58 { pt3dadd( -77.2102, 16.0748, -8.18026, 1.14 ) }
    dend_58 { pt3dadd( -79.6893, 15.5481, -8.02804, 0.23 ) }
    dend_58 { pt3dadd( -81.1506, 15.2933, -7.86583, 0.23 ) }
    dend_58 { pt3dadd( -83.2748, 14.9986, -7.60776, 0.68 ) }
    dend_58 { pt3dadd( -84.3999, 14.8844, -7.47056, 0.68 ) }
    dend_58 { pt3dadd( -85.9948, 14.7576, -7.30054, 0.23 ) }
    dend_58 { pt3dadd( -88.0276, 14.5677, -7.10165, 0.91 ) }
    dend_58 { pt3dadd( -89.8861, 14.3861, -6.98079, 0.23 ) }
    dend_58 { pt3dadd( -90.7939, 14.2989, -6.95403, 0.91 ) }
    dend_58 { pt3dadd( -92.3874, 14.1611, -6.96297, 0.23 ) }
    dend_58 { pt3dadd( -95.3719, 13.9016, -7.0073, 1.14 ) }
    dend_58 { pt3dadd( -96.5066, 13.8015, -7.03431, 0.23 ) }
    dend_58 { pt3dadd( -98.1048, 13.6618, -7.08373, 0.68 ) }
    dend_58 { pt3dadd( -100.182, 13.4616, -7.15539, 0.23 ) }
    dend_58 { pt3dadd( -101.774, 13.3106, -7.15508, 0.45 ) }
    dend_58 { pt3dadd( -103.164, 13.1477, -7.05735, 0.23 ) }
    dend_58 { pt3dadd( -103.841, 13.0634, -6.96879, 0.23 ) }
    dend_58 { pt3dadd( -105.636, 12.8143, -6.57928, 0.91 ) }
    dend_58 { pt3dadd( -108.679, 12.319, -5.71781, 0.23 ) }
    dend_58 { pt3dadd( -110.809, 11.9589, -5.04225, 0.91 ) }
    dend_58 { pt3dadd( -114.755, 11.3079, -3.70512, 0.23 ) }
    dend_58 { pt3dadd( -115.814, 11.1291, -3.3292, 0.23 ) }
    dend_58 { pt3dadd( -118.511, 10.6242, -2.31747, 1.59 ) }
    dend_58 { pt3dadd( -121.898, 9.90646, -0.91201, 0.23 ) }
    dend_58 { pt3dadd( -122.949, 9.66518, -0.455192, 0.91 ) }
    dend_58 { pt3dadd( -123.619, 9.5103, -0.159807, 0.91 ) }
    dend_58 { pt3dadd( -126.234, 8.91569, 0.997591, 0.23 ) }
    dend_58 { pt3dadd( -128.634, 8.3312, 2.03458, 0.91 ) }
    dend_58 { pt3dadd( -130.943, 7.75421, 2.98033, 0.23 ) }
    dend_58 { pt3dadd( -132.183, 7.44064, 3.48681, 1.14 ) }
    dend_58 { pt3dadd( -134.597, 6.82301, 4.39717, 0.23 ) }
    dend_58 { pt3dadd( -135.893, 6.48506, 4.82017, 0.91 ) }
    dend_58 { pt3dadd( -136.911, 6.25115, 5.08184, 0.23 ) }
    dend_58 { pt3dadd( -138.282, 5.97836, 5.29123, 0.68 ) }
    dend_58 { pt3dadd( -142.004, 5.29614, 5.60828, 0.23 ) }
    dend_58 { pt3dadd( -143.577, 5.00527, 5.71031, 0.91 ) }
    dend_58 { pt3dadd( -145.466, 4.65725, 5.77918, 0.23 ) }
    dend_58 { pt3dadd( -147.678, 4.28208, 5.80011, 0.68 ) }
    dend_58 { pt3dadd( -149.96, 3.89492, 5.75676, 0.23 ) }
    dend_58 { pt3dadd( -151.675, 3.5897, 5.67284, 0.23 ) }
    dend_58 { pt3dadd( -153.842, 3.14434, 5.48711, 0.91 ) }
    dend_58 { pt3dadd( -156.291, 2.59715, 5.27194, 0.23 ) }
    dend_58 { pt3dadd( -158.019, 2.19718, 5.12662, 1.14 ) }
    dend_58 { pt3dadd( -160.533, 1.5772, 4.93225, 0.23 ) }
    dend_58 { pt3dadd( -161.864, 1.27241, 4.8549, 0.91 ) }
    dend_58 { pt3dadd( -163.979, 0.903138, 4.72244, 0.23 ) }
    dend_58 { pt3dadd( -166.473, 0.618925, 4.6048, 0.91 ) }
    dend_58 { pt3dadd( -167.869, 0.522737, 4.58978, 0.23 ) }
    dend_58 { pt3dadd( -169.047, 0.501915, 4.62774, 0.68 ) }
    dend_58 { pt3dadd( -170.329, 0.558754, 4.6843, 0.23 ) }
    dend_58 { pt3dadd( -172.666, 0.773863, 4.86936, 0.91 ) }
    dend_58 { pt3dadd( -174.938, 1.03517, 5.19748, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -176.044, 1.19379, 5.42276, 0.23 ) }
    dend_58 { pt3dadd( -176.908, 1.3085, 5.63069, 0.91 ) }
    dend_58 { pt3dadd( -177.829, 1.41464, 5.89269, 0.23 ) }
    dend_58 { pt3dadd( -180.192, 1.6166, 6.62688, 0.91 ) }
    dend_58 { pt3dadd( -182.202, 1.71615, 7.45344, 0.23 ) }
    dend_58 { pt3dadd( -183.706, 1.75809, 8.26259, 0.68 ) }
    dend_58 { pt3dadd( -184.891, 1.75971, 9.00379, 0.23 ) }
    dend_58 { pt3dadd( -187.328, 1.64004, 10.7949, 0.91 ) }
    dend_58 { pt3dadd( -188.59, 1.55695, 11.7739, 0.23 ) }
    dend_58 { pt3dadd( -191.015, 1.34335, 13.7715, 0.91 ) }
    dend_58 { pt3dadd( -193.244, 1.11948, 15.7329, 0.23 ) }
    dend_58 { pt3dadd( -194.64, 0.902808, 17.0953, 0.91 ) }
    dend_58 { pt3dadd( -196.858, 0.540813, 19.5866, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 42.1977, 42.7273, 8.19244, 0.23 ) }
    dend_55 { pt3dadd( 43.8015, 44.0208, 9.85435, 0.23 ) }
    dend_55 { pt3dadd( 44.869, 44.7898, 10.9715, 0.91 ) }
    dend_55 { pt3dadd( 46.2156, 45.6626, 12.4733, 0.23 ) }
    dend_55 { pt3dadd( 48.121, 46.8606, 14.594, 0.23 ) }
    dend_55 { pt3dadd( 48.696, 47.2157, 15.2276, 0.91 ) }
    dend_55 { pt3dadd( 49.9934, 48.05, 16.7289, 0.23 ) }
    dend_55 { pt3dadd( 50.9562, 48.6339, 17.9106, 0.68 ) }
    dend_55 { pt3dadd( 52.2849, 49.5076, 19.6248, 0.23 ) }
    dend_55 { pt3dadd( 53.2174, 50.2083, 20.9416, 0.68 ) }
    dend_55 { pt3dadd( 54.3643, 51.2644, 22.6054, 0.23 ) }
    dend_55 { pt3dadd( 55.4359, 52.3411, 24.1685, 0.68 ) }
    dend_55 { pt3dadd( 55.9599, 52.9182, 24.9092, 0.23 ) }
    dend_55 { pt3dadd( 56.4982, 53.5211, 25.6198, 0.91 ) }
    dend_55 { pt3dadd( 57.7722, 54.8172, 27.0248, 0.23 ) }
    dend_55 { pt3dadd( 58.7847, 55.7064, 27.9794, 0.68 ) }
    dend_55 { pt3dadd( 60.3175, 56.8887, 29.1982, 0.23 ) }
    dend_55 { pt3dadd( 61.3261, 57.53, 29.8961, 0.68 ) }
    dend_55 { pt3dadd( 63.455, 58.7224, 31.381, 0.23 ) }
    dend_55 { pt3dadd( 65.4758, 59.7552, 32.7643, 0.91 ) }
    dend_55 { pt3dadd( 66.878, 60.4525, 33.6191, 0.23 ) }
    dend_55 { pt3dadd( 67.6081, 60.8141, 34.0525, 0.23 ) }
    dend_55 { pt3dadd( 70.0877, 62.1622, 35.5341, 0.68 ) }
    dend_55 { pt3dadd( 72.086, 63.3926, 36.7596, 0.23 ) }
    dend_55 { pt3dadd( 73.2651, 64.2766, 37.5177, 0.91 ) }
    dend_55 { pt3dadd( 75.7895, 66.4886, 39.0665, 0.23 ) }
    dend_55 { pt3dadd( 76.5061, 67.1795, 39.4567, 0.23 ) }
    dend_55 { pt3dadd( 77.6913, 68.4115, 39.9872, 0.91 ) }
    dend_55 { pt3dadd( 79.4749, 70.3701, 40.5351, 0.23 ) }
    dend_55 { pt3dadd( 80.7852, 71.8781, 40.8274, 0.91 ) }
    dend_55 { pt3dadd( 82.7568, 74.1977, 41.2405, 0.23 ) }
    dend_55 { pt3dadd( 84.1984, 75.909, 41.5292, 0.68 ) }
    dend_55 { pt3dadd( 85.9466, 77.8966, 41.7676, 0.23 ) }
    dend_55 { pt3dadd( 87.1637, 79.2072, 41.8201, 0.23 ) }
    dend_55 { pt3dadd( 88.3442, 80.4256, 41.7214, 0.91 ) }
    dend_55 { pt3dadd( 96.4888, 84.5458, 44.9353, 0.91 ) }
    dend_55 { pt3dadd( 104.908, 86.1582, 49.2844, 0.91 ) }
    dend_55 { pt3dadd( 114.308, 86.6336, 51.106, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 42.1977, 42.7273, 8.19244, 0.23 ) }
    dend_54 { pt3dadd( 44.4899, 42.8482, 7.00961, 0.23 ) }
    dend_54 { pt3dadd( 46.3874, 42.9268, 6.09165, 0.68 ) }
    dend_54 { pt3dadd( 49.1281, 42.9984, 4.80643, 1.36 ) }
    dend_54 { pt3dadd( 52.2196, 43.0151, 3.45847, 0.23 ) }
    dend_54 { pt3dadd( 53.7258, 43.0082, 2.86955, 0.45 ) }
    dend_54 { pt3dadd( 56.1581, 43.0001, 1.99693, 0.45 ) }
    dend_54 { pt3dadd( 58.1118, 42.9972, 1.45408, 0.23 ) }
    dend_54 { pt3dadd( 59.7793, 42.967, 1.11152, 1.14 ) }
    dend_54 { pt3dadd( 61.0581, 42.9674, 0.965764, 1.14 ) }
    dend_54 { pt3dadd( 62.5268, 43.0352, 0.92676, 0.45 ) }
    dend_54 { pt3dadd( 66.2494, 43.491, 1.07277, 0.23 ) }
    dend_54 { pt3dadd( 67.861, 43.7718, 1.26629, 1.14 ) }
    dend_54 { pt3dadd( 68.9861, 43.9769, 1.4683, 0.23 ) }
    dend_54 { pt3dadd( 70.3608, 44.2758, 1.78989, 0.23 ) }
    dend_54 { pt3dadd( 72.3851, 44.7221, 2.27573, 0.91 ) }
    dend_54 { pt3dadd( 74.5927, 45.2104, 2.74939, 0.23 ) }
    dend_54 { pt3dadd( 75.1832, 45.3412, 2.8859, 0.68 ) }
    dend_54 { pt3dadd( 76.1451, 45.5391, 3.0638, 0.68 ) }
    dend_54 { pt3dadd( 77.5775, 45.8066, 3.20347, 0.23 ) }
    dend_54 { pt3dadd( 79.9522, 46.2137, 3.39919, 0.91 ) }
    dend_54 { pt3dadd( 82.8401, 46.8027, 3.609, 0.23 ) }
    dend_54 { pt3dadd( 84.2503, 47.0957, 3.69711, 1.14 ) }
    dend_54 { pt3dadd( 85.3296, 47.3052, 3.78127, 1.14 ) }
    dend_54 { pt3dadd( 88.8275, 47.9744, 4.10528, 0.23 ) }
    dend_54 { pt3dadd( 90.6436, 48.3127, 4.31486, 0.68 ) }
    dend_54 { pt3dadd( 91.9315, 48.5941, 4.57086, 0.23 ) }
    dend_54 { pt3dadd( 94.476, 49.2525, 5.29704, 1.14 ) }
    dend_54 { pt3dadd( 96.9116, 50.0613, 6.11947, 0.23 ) }
    dend_54 { pt3dadd( 98.0458, 50.5586, 6.60404, 0.91 ) }
    dend_54 { pt3dadd( 98.6954, 50.9238, 6.92695, 1.36 ) }
    dend_54 { pt3dadd( 100.685, 52.3005, 7.90772, 0.23 ) }
    dend_54 { pt3dadd( 101.974, 53.3451, 8.60884, 0.91 ) }
    dend_54 { pt3dadd( 102.855, 54.1652, 9.13114, 0.91 ) }
    dend_54 { pt3dadd( 104.209, 55.5212, 9.92017, 0.23 ) }
    dend_54 { pt3dadd( 105.571, 56.8462, 10.6965, 0.91 ) }
    dend_54 { pt3dadd( 107.636, 58.6951, 11.8136, 0.23 ) }
    dend_54 { pt3dadd( 108.985, 59.7999, 12.5012, 0.91 ) }
    dend_54 { pt3dadd( 110.762, 61.096, 13.4197, 0.23 ) }
    dend_54 { pt3dadd( 111.277, 61.4475, 13.692, 0.23 ) }
    dend_54 { pt3dadd( 112.719, 62.3825, 14.4664, 0.23 ) }
    dend_54 { pt3dadd( 114.483, 63.4639, 15.4775, 0.68 ) }
    dend_54 { pt3dadd( 115.802, 64.1989, 16.212, 0.23 ) }
    dend_54 { pt3dadd( 117.267, 65.0249, 17.0426, 0.23 ) }
    dend_54 { pt3dadd( 118.797, 65.8489, 17.9446, 0.68 ) }
    dend_54 { pt3dadd( 127.778, 67.1609, 18.1384, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 17.7078, 58.4213, 4.286, 0.23 ) }
    dend_52 { pt3dadd( 16.4988, 59.1994, 3.96739, 0.23 ) }
    dend_52 { pt3dadd( 15.3559, 60.0394, 3.59396, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 13.6809, 61.5274, 2.98543, 0.23 ) }
    dend_52 { pt3dadd( 13.0821, 62.2283, 2.67709, 1.14 ) }
    dend_52 { pt3dadd( 12.5855, 62.9588, 2.36803, 0.23 ) }
    dend_52 { pt3dadd( 12.0948, 63.8232, 2.02669, 0.68 ) }
    dend_52 { pt3dadd( 11.6913, 64.9081, 1.62725, 0.23 ) }
    dend_52 { pt3dadd( 11.4042, 66.2117, 1.14566, 1.36 ) }
    dend_52 { pt3dadd( 11.1566, 68.4015, 0.350704, 0.23 ) }
    dend_52 { pt3dadd( 11.0904, 69.5519, -0.0528437, 0.91 ) }
    dend_52 { pt3dadd( 11.0548, 70.6953, -0.441653, 0.23 ) }
    dend_52 { pt3dadd( 11.0351, 72.0317, -0.854619, 0.68 ) }
    dend_52 { pt3dadd( 11.0172, 73.1681, -1.16563, 0.23 ) }
    dend_52 { pt3dadd( 11.0268, 73.9647, -1.35837, 1.14 ) }
    dend_52 { pt3dadd( 11.108, 75.3843, -1.64956, 0.23 ) }
    dend_52 { pt3dadd( 11.202, 76.3665, -1.85331, 0.23 ) }
    dend_52 { pt3dadd( 11.3083, 77.2878, -2.03611, 0.91 ) }
    dend_52 { pt3dadd( 11.4556, 78.4237, -2.2346, 0.23 ) }
    dend_52 { pt3dadd( 11.6273, 79.688, -2.42588, 0.23 ) }
    dend_52 { pt3dadd( 11.8793, 81.3195, -2.64926, 1.14 ) }
    dend_52 { pt3dadd( 12.0119, 82.1043, -2.73407, 1.14 ) }
    dend_52 { pt3dadd( 12.2979, 83.5612, -2.88994, 0.23 ) }
    dend_52 { pt3dadd( 12.522, 84.7203, -3.00404, 0.23 ) }
    dend_52 { pt3dadd( 12.6924, 85.6469, -3.06792, 0.23 ) }
    dend_52 { pt3dadd( 12.8098, 86.4051, -3.12675, 0.23 ) }
    dend_52 { pt3dadd( 12.8893, 87.0932, -3.20006, 0.45 ) }
    dend_52 { pt3dadd( 12.9838, 88.6718, -3.56229, 0.23 ) }
    dend_52 { pt3dadd( 12.9678, 89.4412, -3.81867, 0.91 ) }
    dend_52 { pt3dadd( 12.9106, 90.1847, -4.14607, 0.91 ) }
    dend_52 { pt3dadd( 12.8012, 91.3043, -4.70455, 0.68 ) }
    dend_52 { pt3dadd( 12.6667, 92.9033, -5.56197, 1.36 ) }
    dend_52 { pt3dadd( 12.5401, 94.8123, -6.6314, 0.23 ) }
    dend_52 { pt3dadd( 12.5406, 95.5681, -7.05148, 0.23 ) }
    dend_52 { pt3dadd( 12.6489, 96.7223, -7.66284, 0.23 ) }
    dend_52 { pt3dadd( 12.8229, 97.493, -8.02997, 1.14 ) }
    dend_52 { pt3dadd( 13.3596, 98.8335, -8.47336, 0.23 ) }
    dend_52 { pt3dadd( 13.5174, 99.1068, -8.51969, 0.68 ) }
    dend_52 { pt3dadd( 14.6335, 100.711, -8.59306, 0.23 ) }
    dend_52 { pt3dadd( 14.9276, 101.121, -8.58786, 1.14 ) }
    dend_52 { pt3dadd( 15.6245, 102.149, -8.51276, 0.23 ) }
    dend_52 { pt3dadd( 16.5275, 103.484, -8.3927, 0.91 ) }
    dend_52 { pt3dadd( 17.0151, 104.216, -8.2937, 0.23 ) }
    dend_52 { pt3dadd( 17.7993, 105.442, -8.10577, 0.68 ) }
    dend_52 { pt3dadd( 18.3348, 106.324, -7.92084, 0.68 ) }
    dend_52 { pt3dadd( 18.8431, 107.216, -7.73326, 0.23 ) }
    dend_52 { pt3dadd( 18.1333, 114.141, -9.01829, 0.23 ) }
    dend_52 { pt3dadd( 18.3308, 121.227, -9.34883, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 17.7078, 58.4213, 4.286, 0.23 ) }
    dend_47 { pt3dadd( 18.368, 59.4739, 4.7007, 0.23 ) }
    dend_47 { pt3dadd( 19.5221, 61.1322, 5.22099, 1.14 ) }
    dend_47 { pt3dadd( 21.2316, 63.5063, 5.89463, 0.23 ) }
    dend_47 { pt3dadd( 22.2224, 64.9045, 6.27398, 0.68 ) }
    dend_47 { pt3dadd( 23.0928, 66.1521, 6.60591, 0.23 ) }
    dend_47 { pt3dadd( 24.0718, 67.571, 6.98017, 0.68 ) }
    dend_47 { pt3dadd( 25.6731, 69.9684, 7.49234, 0.23 ) }
    dend_47 { pt3dadd( 26.7765, 71.7446, 7.7966, 0.91 ) }
    dend_47 { pt3dadd( 27.8262, 73.6406, 8.09451, 0.23 ) }
    dend_47 { pt3dadd( 28.1497, 74.2824, 8.23337, 0.91 ) }
    dend_47 { pt3dadd( 29.2258, 76.6442, 8.88004, 0.23 ) }
    dend_47 { pt3dadd( 30.3276, 79.245, 9.70012, 0.91 ) }
    dend_47 { pt3dadd( 31.2832, 81.7036, 10.5992, 0.23 ) }
    dend_47 { pt3dadd( 31.6672, 82.7338, 11.0021, 0.91 ) }
    dend_47 { pt3dadd( 32.7902, 85.6193, 12.2873, 0.23 ) }
    dend_47 { pt3dadd( 33.1809, 86.5186, 12.788, 1.14 ) }
    dend_47 { pt3dadd( 33.5289, 87.177, 13.2594, 1.14 ) }
    dend_47 { pt3dadd( 34.1881, 88.0853, 14.1542, 0.23 ) }
    dend_47 { pt3dadd( 35.1859, 89.1125, 15.391, 0.91 ) }
    dend_47 { pt3dadd( 36.3894, 89.9843, 16.689, 0.23 ) }
    dend_47 { pt3dadd( 38.0366, 90.822, 18.2066, 0.23 ) }
    dend_47 { pt3dadd( 39.1417, 91.1817, 19.2119, 0.91 ) }
    dend_47 { pt3dadd( 40.8201, 91.5088, 20.6836, 0.23 ) }
    dend_47 { pt3dadd( 41.8286, 91.6224, 21.5346, 0.91 ) }
    dend_47 { pt3dadd( 44.0519, 91.7395, 23.2954, 0.23 ) }
    dend_47 { pt3dadd( 45.4813, 91.7809, 24.3427, 0.68 ) }
    dend_47 { pt3dadd( 48.4528, 91.8255, 26.3293, 0.23 ) }
    dend_47 { pt3dadd( 49.6567, 91.8254, 27.0925, 0.68 ) }
    dend_47 { pt3dadd( 50.5568, 91.8219, 27.6044, 0.23 ) }
    dend_47 { pt3dadd( 52.1196, 91.8126, 28.4403, 0.91 ) }
    dend_47 { pt3dadd( 53.1293, 91.7915, 28.9192, 0.23 ) }
    dend_47 { pt3dadd( 54.2647, 91.7815, 29.395, 0.23 ) }
    dend_47 { pt3dadd( 55.1304, 91.7897, 29.7084, 0.23 ) }
    dend_47 { pt3dadd( 56.9767, 91.8462, 30.4126, 0.91 ) }
    dend_47 { pt3dadd( 57.8311, 91.8958, 30.7522, 0.23 ) }
    dend_47 { pt3dadd( 59.1486, 92.0492, 31.2218, 0.68 ) }
    dend_47 { pt3dadd( 61.3425, 92.4403, 31.9402, 0.23 ) }
    dend_47 { pt3dadd( 62.2868, 92.6835, 32.1948, 0.91 ) }
    dend_47 { pt3dadd( 64.1177, 93.3053, 32.6127, 0.23 ) }
    dend_47 { pt3dadd( 65.0844, 93.6741, 32.8103, 0.91 ) }
    dend_47 { pt3dadd( 67.747, 94.7967, 33.2903, 0.23 ) }
    dend_47 { pt3dadd( 69.3489, 95.5475, 33.5206, 0.91 ) }
    dend_47 { pt3dadd( 71.0155, 96.32, 33.6404, 0.23 ) }
    dend_47 { pt3dadd( 72.5915, 97.0935, 33.6552, 0.68 ) }
    dend_47 { pt3dadd( 80.1178, 102.695, 36.3713, 0.68 ) }
    dend_47 { pt3dadd( 88.4933, 107.467, 37.5918, 0.68 ) }
    dend_47 { pt3dadd( 96.4017, 112.697, 39.8406, 0.68 ) }
    dend_47 { pt3dadd( 103.82, 118.665, 42.0909, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -236.408, -133.275, -1.93079, 0.23 ) }
    dend_42 { pt3dadd( -238.4, -135.815, -1.24055, 0.23 ) }
    dend_42 { pt3dadd( -239.593, -137.49, -0.887883, 0.68 ) }
    dend_42 { pt3dadd( -240.636, -139.039, -0.603179, 0.23 ) }
    dend_42 { pt3dadd( -242.113, -141.281, -0.221382, 0.45 ) }
    dend_42 { pt3dadd( -244.673, -145.23, 0.425653, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -246.313, -147.749, 0.821563, 0.23 ) }
    dend_42 { pt3dadd( -247.865, -150.333, 1.17138, 0.91 ) }
    dend_42 { pt3dadd( -249.212, -152.597, 1.55862, 0.23 ) }
    dend_42 { pt3dadd( -249.777, -153.579, 1.7287, 0.23 ) }
    dend_42 { pt3dadd( -250.607, -155.062, 1.99259, 0.91 ) }
    dend_42 { pt3dadd( -251.731, -157.258, 2.3916, 0.23 ) }
    dend_42 { pt3dadd( -252.332, -158.521, 2.69107, 0.91 ) }
    dend_42 { pt3dadd( -253.833, -162.458, 3.55929, 0.23 ) }
    dend_42 { pt3dadd( -254.742, -165.546, 4.10041, 0.23 ) }
    dend_42 { pt3dadd( -255.525, -168.47, 4.59804, 0.23 ) }
    dend_42 { pt3dadd( -256.276, -171.66, 5.11202, 0.23 ) }
    dend_42 { pt3dadd( -256.866, -174.727, 5.56461, 0.68 ) }
    dend_42 { pt3dadd( -257.533, -178.952, 6.07338, 0.23 ) }
    dend_42 { pt3dadd( -257.84, -182.403, 6.3162, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -236.408, -133.275, -1.93079, 0.23 ) }
    dend_41 { pt3dadd( -241.284, -134.389, -3.72763, 0.23 ) }
    dend_41 { pt3dadd( -244.783, -135.29, -4.82695, 0.45 ) }
    dend_41 { pt3dadd( -248.348, -136.252, -5.69594, 0.23 ) }
    dend_41 { pt3dadd( -250.106, -136.753, -6.15066, 0.23 ) }
    dend_41 { pt3dadd( -251.319, -137.112, -6.45857, 0.23 ) }
    dend_41 { pt3dadd( -252.9, -137.606, -6.9322, 0.68 ) }
    dend_41 { pt3dadd( -256.598, -138.967, -8.03939, 0.23 ) }
    dend_41 { pt3dadd( -258.514, -139.772, -8.62742, 0.45 ) }
    dend_41 { pt3dadd( -262.247, -141.483, -9.87961, 0.23 ) }
    dend_41 { pt3dadd( -266.264, -143.345, -11.2725, 0.91 ) }
    dend_41 { pt3dadd( -270.209, -145.137, -12.6442, 0.23 ) }
    dend_41 { pt3dadd( -273.442, -146.65, -13.7988, 0.91 ) }
    dend_41 { pt3dadd( -275.183, -147.453, -14.4212, 0.23 ) }
    dend_41 { pt3dadd( -276.247, -147.947, -14.8095, 0.91 ) }
    dend_41 { pt3dadd( -278.19, -148.794, -15.4299, 0.23 ) }
    dend_41 { pt3dadd( -280.667, -149.843, -16.5063, 0.68 ) }
    dend_41 { pt3dadd( -283.861, -151.171, -18.0855, 0.23 ) }
    dend_41 { pt3dadd( -285.893, -152.0, -19.2478, 0.68 ) }
    dend_41 { pt3dadd( -288.198, -153.005, -20.6111, 0.23 ) }
    dend_41 { pt3dadd( -289.885, -153.815, -21.7271, 0.91 ) }
    dend_41 { pt3dadd( -295.347, -156.623, -25.5575, 0.23 ) }
    dend_41 { pt3dadd( -297.79, -157.932, -27.3699, 0.23 ) }
    dend_41 { pt3dadd( -299.379, -158.768, -28.5846, 0.23 ) }
    dend_41 { pt3dadd( -302.466, -160.383, -30.8985, 0.91 ) }
    dend_41 { pt3dadd( -305.725, -162.133, -33.3406, 0.23 ) }
    dend_41 { pt3dadd( -307.553, -163.154, -34.6589, 0.23 ) }
    dend_41 { pt3dadd( -309.173, -164.059, -35.7714, 0.68 ) }
    dend_41 { pt3dadd( -311.912, -165.651, -37.7953, 0.23 ) }
    dend_41 { pt3dadd( -313.701, -166.714, -39.1614, 0.91 ) }
    dend_41 { pt3dadd( -316.451, -168.369, -41.3298, 0.23 ) }
    dend_41 { pt3dadd( -318.985, -169.913, -43.1793, 0.91 ) }
    dend_41 { pt3dadd( -322.198, -172.044, -45.4772, 0.23 ) }
    dend_41 { pt3dadd( -323.632, -173.044, -46.4721, 0.23 ) }
    dend_41 { pt3dadd( -325.674, -174.535, -47.8013, 0.68 ) }
    dend_41 { pt3dadd( -327.668, -176.047, -48.9936, 0.23 ) }
    dend_41 { pt3dadd( -329.725, -177.668, -50.0691, 1.14 ) }
    dend_41 { pt3dadd( -331.913, -179.421, -51.1486, 0.23 ) }
    dend_41 { pt3dadd( -333.961, -181.064, -52.0233, 0.23 ) }
    dend_41 { pt3dadd( -336.614, -183.279, -53.153, 0.91 ) }
    dend_41 { pt3dadd( -338.971, -185.272, -54.0826, 0.23 ) }
    dend_41 { pt3dadd( -341.795, -187.765, -55.3631, 1.14 ) }
    dend_41 { pt3dadd( -343.014, -188.842, -55.99, 0.23 ) }
    dend_41 { pt3dadd( -343.949, -189.613, -56.4849, 0.91 ) }
    dend_41 { pt3dadd( -346.197, -191.488, -57.6903, 0.23 ) }
    dend_41 { pt3dadd( -348.839, -193.686, -59.27, 1.14 ) }
    dend_41 { pt3dadd( -352.837, -196.95, -61.8626, 0.23 ) }
    dend_41 { pt3dadd( -354.335, -198.172, -62.8753, 0.23 ) }
    dend_41 { pt3dadd( -356.218, -199.815, -64.2378, 0.45 ) }
    dend_41 { pt3dadd( -366.814, -207.138, -68.9201, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 16.425, -42.9347, 34.6016, 0.23 ) }
    dend_38 { pt3dadd( 17.2567, -43.8975, 34.978, 0.23 ) }
    dend_38 { pt3dadd( 18.1336, -44.961, 35.4033, 0.91 ) }
    dend_38 { pt3dadd( 20.2499, -47.5532, 36.3966, 0.23 ) }
    dend_38 { pt3dadd( 21.7799, -49.4138, 37.0933, 0.91 ) }
    dend_38 { pt3dadd( 23.8812, -51.9886, 37.9772, 0.23 ) }
    dend_38 { pt3dadd( 24.5685, -52.8751, 38.2625, 0.23 ) }
    dend_38 { pt3dadd( 26.0043, -54.9479, 38.8598, 0.23 ) }
    dend_38 { pt3dadd( 26.4641, -55.6807, 39.1295, 0.68 ) }
    dend_38 { pt3dadd( 27.3035, -57.1775, 39.7381, 0.23 ) }
    dend_38 { pt3dadd( 27.9833, -58.5252, 40.4376, 0.91 ) }
    dend_38 { pt3dadd( 29.0307, -60.9216, 41.9471, 0.23 ) }
    dend_38 { pt3dadd( 29.2315, -61.3834, 42.2945, 0.91 ) }
    dend_38 { pt3dadd( 30.8797, -65.1364, 45.3604, 0.23 ) }
    dend_38 { pt3dadd( 31.2381, -65.8913, 46.0194, 0.91 ) }
    dend_38 { pt3dadd( 32.3017, -67.7155, 47.8116, 0.23 ) }
    dend_38 { pt3dadd( 32.9285, -68.498, 48.7252, 0.91 ) }
    dend_38 { pt3dadd( 35.2706, -70.6404, 51.5688, 0.23 ) }
    dend_38 { pt3dadd( 35.9156, -71.1329, 52.2098, 0.23 ) }
    dend_38 { pt3dadd( 36.7827, -71.7085, 52.9411, 0.91 ) }
    dend_38 { pt3dadd( 39.4762, -73.356, 54.9896, 0.23 ) }
    dend_38 { pt3dadd( 42.5023, -75.0425, 57.1789, 0.23 ) }
    dend_38 { pt3dadd( 45.4687, -76.6641, 59.2773, 0.23 ) }
    dend_38 { pt3dadd( 47.5651, -77.8488, 60.7523, 0.23 ) }
    dend_38 { pt3dadd( 50.1979, -79.3616, 62.6736, 0.23 ) }
    dend_38 { pt3dadd( 51.6446, -80.2253, 63.7477, 0.91 ) }
    dend_38 { pt3dadd( 55.0767, -82.3568, 66.0742, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 16.425, -42.9347, 34.6016, 0.23 ) }
    dend_31 { pt3dadd( 15.9374, -47.6174, 35.2683, 0.23 ) }
    dend_31 { pt3dadd( 15.6787, -50.4334, 35.78, 0.23 ) }
    dend_31 { pt3dadd( 15.2823, -54.6895, 36.6192, 0.91 ) }
    dend_31 { pt3dadd( 14.9437, -58.2095, 37.4544, 0.23 ) }
    dend_31 { pt3dadd( 14.7771, -59.7794, 37.8469, 0.23 ) }
    dend_31 { pt3dadd( 14.5534, -62.1826, 38.4363, 1.14 ) }
    dend_31 { pt3dadd( 14.2374, -66.23, 39.4855, 0.23 ) }
    dend_31 { pt3dadd( 14.117, -68.9395, 40.1542, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 14.1186, -71.9262, 40.7937, 0.91 ) }
    dend_31 { pt3dadd( 14.2609, -74.7018, 41.2323, 0.23 ) }
    dend_31 { pt3dadd( 14.6298, -77.9238, 41.6117, 0.23 ) }
    dend_31 { pt3dadd( 14.887, -79.453, 41.72, 0.91 ) }
    dend_31 { pt3dadd( 15.3728, -81.7339, 41.9057, 0.68 ) }
    dend_31 { pt3dadd( 16.1463, -84.8996, 42.3155, 0.23 ) }
    dend_31 { pt3dadd( 16.5751, -86.6346, 42.5948, 0.91 ) }
    dend_31 { pt3dadd( 17.7881, -91.4695, 43.7092, 0.23 ) }
    dend_31 { pt3dadd( 18.2112, -93.4984, 44.2984, 0.91 ) }
    dend_31 { pt3dadd( 19.1719, -99.396, 46.2533, 0.23 ) }
    dend_31 { pt3dadd( 19.4814, -102.483, 47.4553, 0.91 ) }
    dend_31 { pt3dadd( 19.5312, -104.173, 48.237, 0.91 ) }
    dend_31 { pt3dadd( 19.4034, -107.645, 50.0128, 0.23 ) }
    dend_31 { pt3dadd( 19.11, -110.145, 51.3932, 0.91 ) }
    dend_31 { pt3dadd( 18.6844, -112.226, 52.7049, 0.23 ) }
    dend_31 { pt3dadd( 18.012, -114.329, 54.2552, 0.91 ) }
    dend_31 { pt3dadd( 17.1235, -116.421, 56.0896, 0.23 ) }
    dend_31 { pt3dadd( 16.5749, -117.48, 57.1583, 1.14 ) }
    dend_31 { pt3dadd( 16.106, -118.226, 58.0234, 0.23 ) }
    dend_31 { pt3dadd( 14.2645, -121.264, 61.9888, 0.91 ) }
    dend_31 { pt3dadd( 13.32, -122.859, 64.1621, 0.23 ) }
    dend_31 { pt3dadd( 12.8452, -123.706, 65.2843, 1.14 ) }
    dend_31 { pt3dadd( 12.3189, -124.846, 66.759, 0.23 ) }
    dend_31 { pt3dadd( 11.9081, -126.063, 68.2931, 0.91 ) }
    dend_31 { pt3dadd( 11.4352, -128.374, 71.0432, 0.23 ) }
    dend_31 { pt3dadd( 11.3266, -129.447, 72.2174, 0.91 ) }
    dend_31 { pt3dadd( 11.2763, -130.084, 72.8896, 0.23 ) }
    dend_31 { pt3dadd( 11.15, -133.096, 76.1435, 0.91 ) }
    dend_31 { pt3dadd( 11.0913, -135.566, 78.9594, 0.23 ) }
    dend_31 { pt3dadd( 11.0367, -138.247, 82.0304, 0.91 ) }
    dend_31 { pt3dadd( 10.9805, -140.264, 84.3841, 0.23 ) }
    dend_31 { pt3dadd( 10.9558, -141.494, 85.8804, 1.14 ) }
    dend_31 { pt3dadd( 10.8745, -143.896, 88.869, 0.23 ) }
    dend_31 { pt3dadd( 10.6542, -146.132, 91.655, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.3045, -30.2126, -4.00426, 0.23 ) }
    dend_25 { pt3dadd( 7.81892, -33.5838, -2.02325, 0.23 ) }
    dend_25 { pt3dadd( 8.05273, -35.2143, -0.802232, 0.23 ) }
    dend_25 { pt3dadd( 8.4197, -37.3364, 0.928261, 0.91 ) }
    dend_25 { pt3dadd( 8.59194, -38.1834, 1.61864, 0.23 ) }
    dend_25 { pt3dadd( 9.02372, -39.9882, 3.08981, 0.68 ) }
    dend_25 { pt3dadd( 9.43465, -41.5944, 4.54544, 0.23 ) }
    dend_25 { pt3dadd( 10.1616, -44.4296, 7.31345, 0.68 ) }
    dend_25 { pt3dadd( 10.3646, -45.1805, 8.09991, 0.68 ) }
    dend_25 { pt3dadd( 10.6861, -46.2389, 9.19754, 0.23 ) }
    dend_25 { pt3dadd( 11.1584, -47.7909, 10.7966, 1.14 ) }
    dend_25 { pt3dadd( 12.0252, -50.8936, 13.6245, 0.23 ) }
    dend_25 { pt3dadd( 12.1582, -51.5139, 14.0969, 0.23 ) }
    dend_25 { pt3dadd( 12.2856, -52.177, 14.5183, 0.23 ) }
    dend_25 { pt3dadd( 12.5007, -53.5246, 15.3084, 1.14 ) }
    dend_25 { pt3dadd( 12.8668, -56.5357, 17.0794, 0.23 ) }
    dend_25 { pt3dadd( 13.0649, -58.6586, 18.2391, 1.14 ) }
    dend_25 { pt3dadd( 13.393, -62.535, 20.2739, 0.23 ) }
    dend_25 { pt3dadd( 13.6264, -65.3607, 21.8022, 0.23 ) }
    dend_25 { pt3dadd( 13.7973, -67.288, 22.8556, 0.68 ) }
    dend_25 { pt3dadd( 14.1316, -71.0532, 24.8618, 0.23 ) }
    dend_25 { pt3dadd( 14.2719, -72.683, 25.7011, 1.14 ) }
    dend_25 { pt3dadd( 14.5041, -75.5715, 27.193, 0.23 ) }
    dend_25 { pt3dadd( 14.5879, -76.7551, 27.7282, 0.23 ) }
    dend_25 { pt3dadd( 14.695, -77.9738, 28.1817, 0.23 ) }
    dend_25 { pt3dadd( 14.9002, -79.9461, 28.8703, 0.91 ) }
    dend_25 { pt3dadd( 15.0905, -81.7407, 29.5053, 0.23 ) }
    dend_25 { pt3dadd( 15.2574, -83.4023, 30.1709, 0.91 ) }
    dend_25 { pt3dadd( 15.4002, -85.0314, 30.9448, 0.23 ) }
    dend_25 { pt3dadd( 15.5364, -86.7976, 31.9851, 0.91 ) }
    dend_25 { pt3dadd( 15.6068, -88.9589, 33.513, 0.23 ) }
    dend_25 { pt3dadd( 15.6869, -92.8437, 36.5149, 0.23 ) }
    dend_25 { pt3dadd( 15.7373, -93.7364, 37.1469, 0.68 ) }
    dend_25 { pt3dadd( 16.022, -96.4626, 39.0097, 1.14 ) }
    dend_25 { pt3dadd( 16.5298, -99.1187, 40.7971, 0.23 ) }
    dend_25 { pt3dadd( 17.4943, -102.711, 43.0649, 0.23 ) }
    dend_25 { pt3dadd( 18.0432, -104.291, 43.9452, 0.23 ) }
    dend_25 { pt3dadd( 19.995, -109.126, 46.2856, 0.23 ) }
    dend_25 { pt3dadd( 21.0047, -111.505, 47.2995, 0.68 ) }
    dend_25 { pt3dadd( 23.1045, -116.416, 49.2421, 0.23 ) }
    dend_25 { pt3dadd( 23.9778, -118.318, 49.9433, 0.68 ) }
    dend_25 { pt3dadd( 25.59, -121.589, 51.1291, 0.23 ) }
    dend_25 { pt3dadd( 26.5395, -123.603, 51.9487, 0.23 ) }
    dend_25 { pt3dadd( 27.4516, -125.746, 52.9868, 0.91 ) }
    dend_25 { pt3dadd( 29.3032, -130.754, 55.1336, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.3045, -30.2126, -4.00426, 0.23 ) }
    dend_24 { pt3dadd( 5.70522, -31.96, -4.84768, 0.23 ) }
    dend_24 { pt3dadd( 4.12341, -34.0335, -5.63485, 0.68 ) }
    dend_24 { pt3dadd( 2.26899, -36.7515, -6.6552, 0.68 ) }
    dend_24 { pt3dadd( 1.34157, -38.2326, -7.18003, 0.68 ) }
    dend_24 { pt3dadd( 0.515822, -39.6637, -7.63985, 0.68 ) }
    dend_24 { pt3dadd( -0.610117, -41.7017, -8.24416, 0.23 ) }
    dend_24 { pt3dadd( -1.44976, -43.5249, -8.63559, 0.23 ) }
    dend_24 { pt3dadd( -2.36827, -45.8811, -9.04829, 0.23 ) }
    dend_24 { pt3dadd( -2.9611, -47.4858, -9.26288, 0.23 ) }
    dend_24 { pt3dadd( -3.80063, -49.6535, -9.55207, 1.14 ) }
    dend_24 { pt3dadd( -4.27123, -50.8246, -9.69323, 1.14 ) }
    dend_24 { pt3dadd( -5.58453, -53.743, -9.86142, 0.23 ) }
    dend_24 { pt3dadd( -6.62759, -55.9372, -9.84562, 0.91 ) }
    dend_24 { pt3dadd( -7.69582, -58.2445, -9.75587, 0.91 ) }
    dend_24 { pt3dadd( -8.09695, -59.1209, -9.72203, 0.91 ) }
    dend_24 { pt3dadd( -9.44944, -62.1542, -9.69319, 0.23 ) }
    dend_24 { pt3dadd( -10.7346, -65.2354, -9.67164, 0.23 ) }
    dend_24 { pt3dadd( -12.0071, -68.4348, -9.65291, 0.23 ) }
    dend_24 { pt3dadd( -12.8007, -70.611, -9.63918, 0.23 ) }
    dend_24 { pt3dadd( -13.5693, -72.9506, -9.6962, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -14.8478, -77.2072, -9.92127, 0.23 ) }
    dend_24 { pt3dadd( -15.7909, -80.6324, -10.2153, 0.91 ) }
    dend_24 { pt3dadd( -16.1211, -81.9393, -10.3683, 0.91 ) }
    dend_24 { pt3dadd( -16.5308, -83.7068, -10.5515, 0.23 ) }
    dend_24 { pt3dadd( -17.018, -85.9497, -10.7224, 0.68 ) }
    dend_24 { pt3dadd( -17.6211, -88.6677, -10.9111, 0.23 ) }
    dend_24 { pt3dadd( -17.8883, -89.8209, -10.9803, 0.68 ) }
    dend_24 { pt3dadd( -18.566, -92.445, -11.1811, 0.23 ) }
    dend_24 { pt3dadd( -18.9033, -93.594, -11.2563, 1.14 ) }
    dend_24 { pt3dadd( -19.5009, -95.3616, -11.3422, 1.14 ) }
    dend_24 { pt3dadd( -20.5766, -98.0937, -11.4348, 0.23 ) }
    dend_24 { pt3dadd( -21.9059, -100.947, -11.5711, 0.23 ) }
    dend_24 { pt3dadd( -22.7438, -102.435, -11.6605, 0.91 ) }
    dend_24 { pt3dadd( -23.6361, -103.785, -11.7568, 0.91 ) }
    dend_24 { pt3dadd( -24.9549, -105.56, -11.7883, 0.23 ) }
    dend_24 { pt3dadd( -26.3439, -107.263, -11.7305, 0.91 ) }
    dend_24 { pt3dadd( -27.1285, -108.142, -11.6533, 0.91 ) }
    dend_24 { pt3dadd( -29.1461, -110.14, -11.369, 0.23 ) }
    dend_24 { pt3dadd( -30.162, -111.122, -11.2043, 0.23 ) }
    dend_24 { pt3dadd( -32.6949, -113.582, -10.7482, 0.68 ) }
    dend_24 { pt3dadd( -33.8134, -114.725, -10.5306, 0.23 ) }
    dend_24 { pt3dadd( -34.5558, -115.568, -10.3822, 1.14 ) }
    dend_24 { pt3dadd( -35.2328, -116.402, -10.2621, 1.14 ) }
    dend_24 { pt3dadd( -36.9529, -118.71, -10.0229, 0.23 ) }
    dend_24 { pt3dadd( -37.7969, -119.859, -9.96696, 0.23 ) }
    dend_24 { pt3dadd( -39.0496, -121.719, -9.99855, 1.14 ) }
    dend_24 { pt3dadd( -40.2674, -123.745, -10.1104, 0.23 ) }
    dend_24 { pt3dadd( -40.7302, -124.585, -10.2182, 0.68 ) }
    dend_24 { pt3dadd( -41.3623, -125.905, -10.4564, 0.23 ) }
    dend_24 { pt3dadd( -42.0422, -127.568, -10.8236, 0.23 ) }
    dend_24 { pt3dadd( -42.7006, -129.742, -11.3892, 0.68 ) }
    dend_24 { pt3dadd( -43.3, -132.372, -12.1405, 0.23 ) }
    dend_24 { pt3dadd( -43.6415, -134.853, -12.8378, 0.23 ) }
    dend_24 { pt3dadd( -43.7799, -137.384, -13.5045, 0.45 ) }
    dend_24 { pt3dadd( -43.7202, -138.854, -13.8888, 1.59 ) }
    dend_24 { pt3dadd( -43.2574, -142.836, -14.862, 0.23 ) }
    dend_24 { pt3dadd( -43.1109, -143.701, -15.063, 0.23 ) }
    dend_24 { pt3dadd( -42.5539, -146.227, -15.5622, 1.14 ) }
    dend_24 { pt3dadd( -42.1468, -147.864, -15.8476, 1.14 ) }
    dend_24 { pt3dadd( -41.4264, -150.644, -16.3419, 0.23 ) }
    dend_24 { pt3dadd( -40.9717, -152.358, -16.6465, 0.91 ) }
    dend_24 { pt3dadd( -40.0807, -155.75, -17.21, 0.23 ) }
    dend_24 { pt3dadd( -39.7689, -157.138, -17.4641, 0.23 ) }
    dend_24 { pt3dadd( -39.3911, -159.108, -17.8759, 1.14 ) }
    dend_24 { pt3dadd( -39.1992, -160.26, -18.1268, 1.14 ) }
    dend_24 { pt3dadd( -38.4896, -164.965, -19.2196, 0.23 ) }
    dend_24 { pt3dadd( -38.1502, -167.221, -19.7968, 1.14 ) }
    dend_24 { pt3dadd( -37.7357, -170.332, -20.7057, 0.23 ) }
    dend_24 { pt3dadd( -37.4872, -172.347, -21.372, 1.14 ) }
    dend_24 { pt3dadd( -37.4122, -172.932, -21.5836, 1.14 ) }
    dend_24 { pt3dadd( -37.1555, -174.598, -22.1109, 0.23 ) }
    dend_24 { pt3dadd( -36.9701, -175.461, -22.2862, 0.68 ) }
    dend_24 { pt3dadd( -36.339, -177.422, -22.3876, 0.23 ) }
    dend_24 { pt3dadd( -35.5291, -178.992, -22.094, 1.14 ) }
    dend_24 { pt3dadd( -34.792, -180.195, -21.6973, 1.14 ) }
    dend_24 { pt3dadd( -32.8651, -183.005, -20.5822, 0.23 ) }
    dend_24 { pt3dadd( -31.7649, -184.473, -19.9402, 0.91 ) }
    dend_24 { pt3dadd( -31.1221, -185.303, -19.6243, 0.91 ) }
    dend_24 { pt3dadd( -29.1304, -187.822, -18.8575, 0.23 ) }
    dend_24 { pt3dadd( -28.2415, -189.024, -18.6249, 1.14 ) }
    dend_24 { pt3dadd( -27.2089, -190.683, -18.5559, 1.36 ) }
    dend_24 { pt3dadd( -25.8797, -193.204, -18.7764, 0.23 ) }
    dend_24 { pt3dadd( -24.5805, -196.04, -19.1615, 0.23 ) }
    dend_24 { pt3dadd( -23.7793, -197.985, -19.4585, 0.91 ) }
    dend_24 { pt3dadd( -23.19, -199.576, -19.7229, 0.91 ) }
    dend_24 { pt3dadd( -21.8631, -203.273, -20.2803, 0.23 ) }
    dend_24 { pt3dadd( -21.2918, -204.917, -20.5248, 1.14 ) }
    dend_24 { pt3dadd( -20.188, -208.104, -20.9393, 0.23 ) }
    dend_24 { pt3dadd( -19.5618, -209.981, -21.1101, 1.14 ) }
    dend_24 { pt3dadd( -18.9475, -211.98, -21.2524, 0.23 ) }
    dend_24 { pt3dadd( -18.6152, -213.11, -21.3316, 0.91 ) }
    dend_24 { pt3dadd( -17.9452, -216.41, -21.5417, 0.23 ) }
    dend_24 { pt3dadd( -17.8192, -218.505, -21.7002, 1.59 ) }
    dend_24 { pt3dadd( -18.1634, -221.269, -21.937, 0.23 ) }
    dend_24 { pt3dadd( -18.6039, -222.849, -21.9636, 0.91 ) }
    dend_24 { pt3dadd( -18.8997, -223.533, -21.9262, 0.91 ) }
    dend_24 { pt3dadd( -20.5294, -226.515, -21.5368, 0.23 ) }
    dend_24 { pt3dadd( -21.544, -228.032, -21.2105, 1.14 ) }
    dend_24 { pt3dadd( -22.2824, -229.039, -20.9106, 1.14 ) }
    dend_24 { pt3dadd( -24.313, -231.877, -19.9364, 0.23 ) }
    dend_24 { pt3dadd( -24.9115, -232.855, -19.6097, 0.91 ) }
    dend_24 { pt3dadd( -25.8672, -234.658, -18.9924, 0.23 ) }
    dend_24 { pt3dadd( -26.1954, -235.452, -18.7178, 0.91 ) }
    dend_24 { pt3dadd( -26.8246, -237.428, -18.2278, 0.23 ) }
    dend_24 { pt3dadd( -27.3516, -239.389, -17.9855, 0.91 ) }
    dend_24 { pt3dadd( -28.0768, -242.267, -18.1092, 0.23 ) }
    dend_24 { pt3dadd( -28.4088, -243.636, -18.3115, 0.23 ) }
    dend_24 { pt3dadd( -28.9296, -245.681, -18.8663, 1.14 ) }
    dend_24 { pt3dadd( -29.7011, -248.666, -19.9332, 0.23 ) }
    dend_24 { pt3dadd( -30.2554, -250.897, -20.9796, 1.36 ) }
    dend_24 { pt3dadd( -30.9913, -253.72, -22.4843, 0.23 ) }
    dend_24 { pt3dadd( -31.3864, -255.306, -23.4043, 1.14 ) }
    dend_24 { pt3dadd( -31.8599, -257.381, -24.6367, 0.23 ) }
    dend_24 { pt3dadd( -32.1706, -258.725, -25.4343, 0.68 ) }
    dend_24 { pt3dadd( -32.8801, -261.788, -27.1511, 0.23 ) }
    dend_24 { pt3dadd( -33.1326, -263.039, -27.8172, 0.91 ) }
    dend_24 { pt3dadd( -33.4609, -265.145, -28.7893, 0.23 ) }
    dend_24 { pt3dadd( -33.6231, -266.529, -29.3329, 0.23 ) }
    dend_24 { pt3dadd( -33.7642, -268.276, -29.9324, 0.23 ) }
    dend_24 { pt3dadd( -37.18, -277.881, -29.8289, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -41.0682, -287.275, -29.3814, 0.23 ) }
    dend_24 { pt3dadd( -44.4144, -296.877, -28.6338, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 59.963, -187.397, -122.582, 0.23 ) }
    dend_22 { pt3dadd( 63.0011, -195.315, -128.597, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 59.963, -187.397, -122.582, 0.23 ) }
    dend_21 { pt3dadd( 61.0968, -196.912, -128.8, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 58.0213, 42.8618, 1.12969, 0.23 ) }
    dend_13 { pt3dadd( 60.7593, 41.8684, 1.73103, 0.23 ) }
    dend_13 { pt3dadd( 63.3664, 41.149, 2.12047, 0.68 ) }
    dend_13 { pt3dadd( 67.2455, 40.2469, 2.65129, 0.23 ) }
    dend_13 { pt3dadd( 70.1647, 39.7534, 2.98125, 0.91 ) }
    dend_13 { pt3dadd( 73.2251, 39.3103, 3.2275, 0.23 ) }
    dend_13 { pt3dadd( 75.8011, 38.9863, 3.35562, 1.14 ) }
    dend_13 { pt3dadd( 81.4953, 38.521, 3.55428, 0.23 ) }
    dend_13 { pt3dadd( 84.1515, 38.3626, 3.51055, 0.68 ) }
    dend_13 { pt3dadd( 91.1985, 38.078, 3.30383, 0.23 ) }
    dend_13 { pt3dadd( 94.473, 37.9405, 3.22556, 0.68 ) }
    dend_13 { pt3dadd( 100.3, 37.7495, 3.21808, 0.23 ) }
    dend_13 { pt3dadd( 103.981, 37.6461, 3.27074, 0.68 ) }
    dend_13 { pt3dadd( 111.9, 37.5356, 3.47974, 0.23 ) }
    dend_13 { pt3dadd( 117.717, 37.5089, 3.63447, 0.23 ) }
    dend_13 { pt3dadd( 122.858, 37.5308, 3.8507, 0.68 ) }
    dend_13 { pt3dadd( 128.229, 37.6441, 4.18097, 0.23 ) }
    dend_13 { pt3dadd( 131.447, 37.7845, 4.42747, 0.68 ) }
    dend_13 { pt3dadd( 135.4, 38.1121, 4.7484, 0.23 ) }
    dend_13 { pt3dadd( 139.6, 38.6809, 5.21807, 0.23 ) }
    dend_13 { pt3dadd( 141.5, 39.0372, 5.35102, 0.23 ) }
    dend_13 { pt3dadd( 142.723, 39.3597, 5.3595, 0.23 ) }
    dend_13 { pt3dadd( 145.189, 40.091, 5.33944, 0.23 ) }
    dend_13 { pt3dadd( 149.345, 41.5073, 5.39508, 0.68 ) }
    dend_13 { pt3dadd( 151.74, 42.4448, 5.45694, 0.23 ) }
    dend_13 { pt3dadd( 153.639, 43.3327, 5.47121, 0.23 ) }
    dend_13 { pt3dadd( 157.551, 45.2864, 5.31371, 1.36 ) }
    dend_13 { pt3dadd( 171.389, 44.9219, 6.79177, 1.36 ) }
    dend_13 { pt3dadd( 184.921, 42.4093, 9.04497, 1.36 ) }
    dend_13 { pt3dadd( 198.702, 42.528, 11.0084, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 58.0213, 42.8618, 1.12969, 0.23 ) }
    dend_6 { pt3dadd( 58.4456, 43.1294, 1.25196, 0.23 ) }
    dend_6 { pt3dadd( 59.6355, 43.8799, 1.59495, 1.14 ) }
    dend_6 { pt3dadd( 60.966, 44.7191, 1.97842, 0.23 ) }
    dend_6 { pt3dadd( 61.5727, 45.1017, 2.15328, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -68.9561, -24.3665, -31.3967, 0.23 ) }
    dend_74 { pt3dadd( -76.5899, -31.8497, -33.0024, 0.23 ) }
    dend_74 { pt3dadd( -84.2091, -39.2205, -35.0554, 0.23 ) }
    dend_74 { pt3dadd( -90.8556, -47.6936, -36.5621, 0.23 ) }
    dend_74 { pt3dadd( -96.4326, -57.0399, -37.6624, 0.23 ) }
    dend_74 { pt3dadd( -102.773, -65.3761, -40.4865, 0.23 ) }
    dend_74 { pt3dadd( -108.17, -74.3271, -43.5233, 0.23 ) }
    dend_74 { pt3dadd( -113.702, -83.554, -45.397, 0.23 ) }
    dend_74 { pt3dadd( -118.252, -92.9138, -48.6631, 0.23 ) }
    dend_74 { pt3dadd( -121.785, -102.983, -51.1932, 0.23 ) }
    dend_74 { pt3dadd( -124.875, -112.837, -54.786, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -68.9561, -24.3665, -31.3967, 0.23 ) }
    dend_71 { pt3dadd( -76.5993, -32.3085, -33.8596, 0.23 ) }
    dend_71 { pt3dadd( -85.2054, -39.6021, -33.5438, 0.23 ) }
    dend_71 { pt3dadd( -92.8232, -48.0209, -33.3438, 0.23 ) }
    dend_71 { pt3dadd( -100.555, -56.3249, -33.1062, 0.23 ) }
    dend_71 { pt3dadd( -108.503, -64.1883, -34.7388, 0.23 ) }
    dend_71 { pt3dadd( -117.284, -71.2509, -34.5801, 0.23 ) }
    dend_71 { pt3dadd( -125.404, -79.1015, -33.7491, 0.23 ) }
    dend_71 { pt3dadd( -133.692, -86.7935, -33.5784, 0.23 ) }
    dend_71 { pt3dadd( -140.975, -95.3542, -35.1144, 0.23 ) }
    dend_71 { pt3dadd( -148.43, -103.794, -36.4424, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -8.57986, 23.5557, -77.2244, 0.23 ) }
    dend_67 { pt3dadd( -6.2248, 23.3221, -86.6323, 0.23 ) }
    dend_67 { pt3dadd( -3.50228, 22.4455, -95.9052, 0.23 ) }
    dend_67 { pt3dadd( 1.38778, 23.0965, -104.264, 0.23 ) }
    dend_67 { pt3dadd( 5.04675, 24.7326, -113.114, 0.23 ) }
    dend_67 { pt3dadd( 10.4906, 28.0631, -120.511, 0.23 ) }
    dend_67 { pt3dadd( 15.1944, 32.8086, -127.712, 0.23 ) }
    dend_67 { pt3dadd( 21.402, 38.455, -132.942, 0.23 ) }
    dend_67 { pt3dadd( 27.6106, 42.7947, -139.186, 0.23 ) }
    dend_67 { pt3dadd( 34.5662, 47.2354, -144.525, 0.23 ) }
    dend_67 { pt3dadd( 41.7593, 51.1135, -149.943, 0.23 ) }
    dend_67 { pt3dadd( 49.663, 53.2863, -155.215, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.57986, 23.5557, -77.2244, 0.23 ) }
    dend_64 { pt3dadd( -4.02119, 27.7782, -87.6022, 0.23 ) }
    dend_64 { pt3dadd( 0.466559, 31.6565, -98.1372, 0.23 ) }
    dend_64 { pt3dadd( 7.16538, 33.5556, -108.0, 0.23 ) }
    dend_64 { pt3dadd( 15.0, 34.1536, -117.18, 0.23 ) }
    dend_64 { pt3dadd( 21.7575, 33.8402, -127.206, 0.23 ) }
    dend_64 { pt3dadd( 29.3964, 32.2292, -136.487, 0.23 ) }
    dend_64 { pt3dadd( 38.2017, 30.1549, -144.593, 0.23 ) }
    dend_64 { pt3dadd( 46.2668, 27.1737, -153.212, 0.23 ) }
    dend_64 { pt3dadd( 55.0155, 22.9828, -160.659, 0.23 ) }
    dend_64 { pt3dadd( 62.8547, 17.1092, -168.112, 0.23 ) }
    dend_64 { pt3dadd( 71.6099, 10.8405, -174.132, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -88.4873, 77.1292, 35.0123, 0.23 ) }
    dend_61 { pt3dadd( -89.8432, 78.9962, 35.0566, 0.23 ) }
    dend_61 { pt3dadd( -90.9557, 80.521, 35.1672, 0.23 ) }
    dend_61 { pt3dadd( -92.2293, 82.3748, 35.2844, 0.45 ) }
    dend_61 { pt3dadd( -92.9968, 83.6167, 35.3714, 0.23 ) }
    dend_61 { pt3dadd( -93.6826, 85.0045, 35.4989, 0.68 ) }
    dend_61 { pt3dadd( -94.5842, 86.829, 35.6665, 0.23 ) }
    dend_61 { pt3dadd( -95.5488, 89.0036, 35.9279, 0.68 ) }
    dend_61 { pt3dadd( -96.0247, 90.1785, 36.0652, 0.23 ) }
    dend_61 { pt3dadd( -96.5109, 91.6787, 36.2842, 0.68 ) }
    dend_61 { pt3dadd( -97.1998, 94.7842, 36.7735, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -88.4873, 77.1292, 35.0123, 0.23 ) }
    dend_60 { pt3dadd( -90.0128, 78.5316, 35.8509, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -90.8747, 79.3841, 36.515, 0.23 ) }
    dend_60 { pt3dadd( -91.804, 80.3032, 37.2309, 0.23 ) }
    dend_60 { pt3dadd( -93.4197, 81.9014, 38.4757, 0.68 ) }
    dend_60 { pt3dadd( -95.2587, 83.7203, 39.8925, 0.23 ) }
    dend_60 { pt3dadd( -97.457, 85.8945, 41.5861, 0.23 ) }
    dend_60 { pt3dadd( -99.3822, 87.9787, 43.3143, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 103.82, 118.665, 42.0909, 0.23 ) }
    dend_49 { pt3dadd( 112.165, 124.489, 45.7063, 0.23 ) }
    dend_49 { pt3dadd( 121.289, 129.859, 47.6597, 0.23 ) }
    dend_49 { pt3dadd( 129.882, 136.234, 49.2027, 0.23 ) }
    dend_49 { pt3dadd( 137.91, 143.488, 48.5432, 0.23 ) }
    dend_49 { pt3dadd( 145.602, 150.99, 50.2379, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 103.82, 118.665, 42.0909, 0.23 ) }
    dend_48 { pt3dadd( 112.773, 124.763, 45.3718, 0.23 ) }
    dend_48 { pt3dadd( 121.236, 131.736, 48.3433, 0.23 ) }
    dend_48 { pt3dadd( 129.408, 138.42, 52.5479, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.6542, -146.132, 91.655, 0.23 ) }
    dend_35 { pt3dadd( 11.2122, -149.537, 92.2796, 0.23 ) }
    dend_35 { pt3dadd( 11.6106, -152.663, 92.8102, 0.68 ) }
    dend_35 { pt3dadd( 11.9508, -156.495, 93.4171, 0.23 ) }
    dend_35 { pt3dadd( 12.1045, -158.973, 93.7822, 0.91 ) }
    dend_35 { pt3dadd( 12.2229, -160.808, 94.052, 0.23 ) }
    dend_35 { pt3dadd( 12.3401, -162.106, 94.2595, 0.23 ) }
    dend_35 { pt3dadd( 12.5925, -164.213, 94.6302, 0.68 ) }
    dend_35 { pt3dadd( 12.8582, -166.338, 94.92, 0.23 ) }
    dend_35 { pt3dadd( 13.111, -167.856, 95.1417, 0.91 ) }
    dend_35 { pt3dadd( 13.9185, -170.985, 95.7545, 0.23 ) }
    dend_35 { pt3dadd( 15.1733, -174.855, 96.6, 0.91 ) }
    dend_35 { pt3dadd( 15.9115, -176.78, 97.0571, 0.23 ) }
    dend_35 { pt3dadd( 16.8313, -178.859, 97.585, 0.91 ) }
    dend_35 { pt3dadd( 18.7989, -182.9, 98.7595, 0.23 ) }
    dend_35 { pt3dadd( 20.4041, -186.075, 99.7652, 0.23 ) }
    dend_35 { pt3dadd( 21.1985, -187.6, 100.273, 0.91 ) }
    dend_35 { pt3dadd( 22.486, -190.001, 101.125, 0.23 ) }
    dend_35 { pt3dadd( 23.5508, -191.946, 101.882, 0.91 ) }
    dend_35 { pt3dadd( 25.6871, -195.716, 103.399, 0.23 ) }
    dend_35 { pt3dadd( 26.4551, -197.118, 103.888, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.6542, -146.132, 91.655, 0.23 ) }
    dend_32 { pt3dadd( 10.1295, -148.723, 95.2243, 0.23 ) }
    dend_32 { pt3dadd( 9.46883, -151.692, 99.2229, 0.23 ) }
    dend_32 { pt3dadd( 9.07124, -153.918, 102.28, 0.68 ) }
    dend_32 { pt3dadd( 8.94578, -155.144, 103.969, 0.23 ) }
    dend_32 { pt3dadd( 8.87229, -155.932, 105.095, 0.91 ) }
    dend_32 { pt3dadd( 8.68439, -158.887, 109.575, 0.23 ) }
    dend_32 { pt3dadd( 8.6478, -159.97, 111.29, 0.91 ) }
    dend_32 { pt3dadd( 8.56822, -162.379, 115.306, 0.23 ) }
    dend_32 { pt3dadd( 8.45992, -164.602, 119.029, 0.23 ) }
    dend_32 { pt3dadd( 8.38789, -165.539, 120.511, 0.91 ) }
    dend_32 { pt3dadd( 7.91034, -168.579, 125.023, 0.23 ) }
    dend_32 { pt3dadd( 7.66351, -169.347, 126.101, 0.91 ) }
    dend_32 { pt3dadd( 7.11314, -170.56, 127.595, 0.23 ) }
    dend_32 { pt3dadd( 6.42704, -171.769, 128.881, 1.14 ) }
    dend_32 { pt3dadd( 4.78359, -174.336, 131.341, 0.23 ) }
    dend_32 { pt3dadd( 3.01369, -177.127, 133.798, 0.91 ) }
    dend_32 { pt3dadd( 0.913541, -180.226, 136.286, 0.23 ) }
    dend_32 { pt3dadd( -0.790684, -182.769, 138.343, 0.68 ) }
    dend_32 { pt3dadd( -2.36984, -185.057, 140.27, 0.23 ) }
    dend_32 { pt3dadd( -3.59314, -186.716, 141.734, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 61.5727, 45.1017, 2.15328, 0.23 ) }
    dend_10 { pt3dadd( 64.5745, 44.3068, 4.85234, 0.23 ) }
    dend_10 { pt3dadd( 69.4734, 43.6019, 8.40182, 0.23 ) }
    dend_10 { pt3dadd( 73.3673, 43.3746, 10.8082, 0.91 ) }
    dend_10 { pt3dadd( 75.7354, 43.417, 12.1411, 0.23 ) }
    dend_10 { pt3dadd( 77.5633, 43.5421, 13.1297, 0.91 ) }
    dend_10 { pt3dadd( 81.3584, 43.8994, 14.9698, 0.23 ) }
    dend_10 { pt3dadd( 85.7971, 44.6484, 16.8134, 0.23 ) }
    dend_10 { pt3dadd( 89.6947, 45.4287, 18.1437, 0.23 ) }
    dend_10 { pt3dadd( 94.487, 46.3651, 19.6402, 0.23 ) }
    dend_10 { pt3dadd( 98.5234, 47.0872, 20.8072, 0.91 ) }
    dend_10 { pt3dadd( 102.177, 47.7311, 21.8801, 0.23 ) }
    dend_10 { pt3dadd( 104.795, 48.2225, 22.6999, 0.68 ) }
    dend_10 { pt3dadd( 107.928, 48.8259, 23.7886, 0.23 ) }
    dend_10 { pt3dadd( 110.338, 49.3634, 24.7127, 0.23 ) }
    dend_10 { pt3dadd( 111.401, 49.6533, 25.158, 0.23 ) }
    dend_10 { pt3dadd( 114.725, 50.8117, 26.8083, 0.91 ) }
    dend_10 { pt3dadd( 117.086, 51.8287, 28.165, 0.23 ) }
    dend_10 { pt3dadd( 118.748, 52.6809, 29.1903, 0.91 ) }
    dend_10 { pt3dadd( 122.606, 54.8792, 31.3929, 0.23 ) }
    dend_10 { pt3dadd( 125.923, 56.9557, 33.1058, 0.23 ) }
    dend_10 { pt3dadd( 128.186, 58.471, 34.1684, 0.23 ) }
    dend_10 { pt3dadd( 130.141, 59.8317, 34.9935, 0.68 ) }
    dend_10 { pt3dadd( 133.542, 62.1631, 36.2653, 0.23 ) }
    dend_10 { pt3dadd( 138.806, 65.6998, 38.0282, 0.23 ) }
    dend_10 { pt3dadd( 142.136, 67.7762, 38.872, 0.23 ) }
    dend_10 { pt3dadd( 143.794, 68.7099, 39.2143, 0.23 ) }
    dend_10 { pt3dadd( 146.182, 69.8866, 39.601, 0.23 ) }
    dend_10 { pt3dadd( 148.356, 70.8199, 39.93, 0.68 ) }
    dend_10 { pt3dadd( 149.538, 71.2062, 40.1196, 0.68 ) }
    dend_10 { pt3dadd( 152.493, 71.8658, 40.9443, 0.23 ) }
    dend_10 { pt3dadd( 154.872, 72.2278, 41.6487, 0.68 ) }
    dend_10 { pt3dadd( 156.57, 72.4353, 42.1722, 0.23 ) }
    dend_10 { pt3dadd( 158.576, 72.6931, 42.8081, 0.68 ) }
    dend_10 { pt3dadd( 162.348, 73.291, 44.0823, 0.23 ) }
    dend_10 { pt3dadd( 165.562, 73.8387, 45.3554, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 61.5727, 45.1017, 2.15328, 0.68 ) }
    dend_7 { pt3dadd( 62.9949, 46.0478, 2.004, 0.68 ) }
    dend_7 { pt3dadd( 63.9235, 46.6456, 1.9562, 0.68 ) }
    dend_7 { pt3dadd( 66.1001, 48.0096, 1.9213, 0.23 ) }
    dend_7 { pt3dadd( 67.5916, 48.9502, 1.94763, 0.23 ) }
    dend_7 { pt3dadd( 69.6413, 50.2332, 2.06298, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 72.0802, 51.7537, 2.26844, 0.23 ) }
    dend_7 { pt3dadd( 72.6738, 52.1262, 2.33797, 1.36 ) }
    dend_7 { pt3dadd( 73.2573, 52.5093, 2.43135, 1.36 ) }
    dend_7 { pt3dadd( 74.8566, 53.7451, 2.87994, 0.23 ) }
    dend_7 { pt3dadd( 76.3574, 55.1734, 3.40064, 0.23 ) }
    dend_7 { pt3dadd( 77.148, 56.051, 3.69609, 0.23 ) }
    dend_7 { pt3dadd( 77.7681, 56.823, 3.90619, 1.14 ) }
    dend_7 { pt3dadd( 78.9292, 58.2616, 4.13959, 1.14 ) }
    dend_7 { pt3dadd( 81.1221, 60.8688, 4.24447, 0.23 ) }
    dend_7 { pt3dadd( 82.3307, 62.1609, 4.07906, 0.68 ) }
    dend_7 { pt3dadd( 83.5559, 63.2742, 3.79589, 0.23 ) }
    dend_7 { pt3dadd( 85.3142, 64.5881, 3.36173, 0.68 ) }
    dend_7 { pt3dadd( 87.9631, 66.1899, 2.72092, 0.23 ) }
    dend_7 { pt3dadd( 89.6552, 66.9963, 2.38943, 0.23 ) }
    dend_7 { pt3dadd( 92.0298, 67.8573, 2.03946, 1.14 ) }
    dend_7 { pt3dadd( 94.5155, 68.5353, 1.98615, 0.23 ) }
    dend_7 { pt3dadd( 96.5608, 68.9445, 2.24003, 0.68 ) }
    dend_7 { pt3dadd( 97.4761, 69.0726, 2.51478, 0.23 ) }
    dend_7 { pt3dadd( 99.8778, 69.3391, 3.65832, 0.91 ) }
    dend_7 { pt3dadd( 100.908, 69.4499, 4.25248, 0.91 ) }
    dend_7 { pt3dadd( 102.592, 69.6379, 5.32601, 0.23 ) }
    dend_7 { pt3dadd( 103.694, 69.7809, 6.00303, 0.23 ) }
    dend_7 { pt3dadd( 104.344, 69.896, 6.3716, 0.23 ) }
    dend_7 { pt3dadd( 106.182, 70.3391, 7.29367, 0.68 ) }
    dend_7 { pt3dadd( 108.245, 71.016, 8.14479, 0.23 ) }
    dend_7 { pt3dadd( 109.271, 71.4158, 8.49419, 0.68 ) }
    dend_7 { pt3dadd( 110.341, 71.8971, 8.75587, 0.23 ) }
    dend_7 { pt3dadd( 111.358, 72.3533, 8.90463, 0.23 ) }
    dend_7 { pt3dadd( 112.637, 72.8846, 9.03219, 0.23 ) }
    dend_7 { pt3dadd( 113.567, 73.2444, 9.09927, 0.68 ) }
    dend_7 { pt3dadd( 116.009, 74.0886, 9.28188, 0.23 ) }
    dend_7 { pt3dadd( 117.819, 74.6775, 9.40359, 1.14 ) }
    dend_7 { pt3dadd( 120.401, 75.4415, 9.57493, 0.23 ) }
    dend_7 { pt3dadd( 122.666, 76.0373, 9.73954, 0.23 ) }
    dend_7 { pt3dadd( 124.27, 76.4309, 9.86335, 0.91 ) }
    dend_7 { pt3dadd( 127.002, 77.0309, 10.1565, 0.23 ) }
    dend_7 { pt3dadd( 135.667, 82.6742, 10.2291, 0.23 ) }
    dend_7 { pt3dadd( 144.884, 87.2651, 9.97711, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -124.875, -112.837, -54.786, 0.23 ) }
    dend_76 { pt3dadd( -130.073, -120.586, -52.6809, 0.23 ) }
    dend_76 { pt3dadd( -136.619, -127.139, -50.6194, 0.23 ) }
    dend_76 { pt3dadd( -143.036, -133.139, -47.0547, 0.23 ) }
    dend_76 { pt3dadd( -148.722, -139.455, -42.7856, 0.23 ) }
    dend_76 { pt3dadd( -152.694, -146.16, -37.2703, 0.23 ) }
    dend_76 { pt3dadd( -156.146, -152.185, -30.7701, 0.23 ) }
    dend_76 { pt3dadd( -158.455, -158.678, -24.1785, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -124.875, -112.837, -54.786, 0.23 ) }
    dend_75 { pt3dadd( -131.407, -122.736, -59.1407, 0.23 ) }
    dend_75 { pt3dadd( -138.994, -132.435, -62.0529, 0.23 ) }
    dend_75 { pt3dadd( -145.183, -142.548, -66.4456, 0.23 ) }
    dend_75 { pt3dadd( -152.072, -152.676, -69.6901, 0.23 ) }
    dend_75 { pt3dadd( -158.533, -161.954, -75.1977, 0.23 ) }
    dend_75 { pt3dadd( -164.499, -170.658, -81.9403, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -148.43, -103.794, -36.4424, 0.23 ) }
    dend_73 { pt3dadd( -153.137, -108.743, -37.0678, 0.23 ) }
    dend_73 { pt3dadd( -157.725, -113.853, -37.1322, 0.23 ) }
    dend_73 { pt3dadd( -162.325, -118.938, -36.8045, 0.23 ) }
    dend_73 { pt3dadd( -166.854, -124.1, -36.6025, 0.23 ) }
    dend_73 { pt3dadd( -171.744, -128.862, -37.1307, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -148.43, -103.794, -36.4424, 0.23 ) }
    dend_72 { pt3dadd( -155.259, -110.685, -36.9299, 0.23 ) }
    dend_72 { pt3dadd( -160.594, -118.875, -37.621, 0.23 ) }
    dend_72 { pt3dadd( -164.738, -127.698, -38.9215, 0.23 ) }
    dend_72 { pt3dadd( -169.802, -136.038, -39.8849, 0.23 ) }
    dend_72 { pt3dadd( -175.978, -143.568, -40.4445, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 49.663, 53.2863, -155.215, 0.23 ) }
    dend_69 { pt3dadd( 55.445, 56.1906, -162.982, 0.23 ) }
    dend_69 { pt3dadd( 59.448, 57.7959, -172.081, 0.23 ) }
    dend_69 { pt3dadd( 62.6122, 58.6507, -181.591, 0.23 ) }
    dend_69 { pt3dadd( 65.8716, 61.3445, -190.753, 0.23 ) }
    dend_69 { pt3dadd( 69.6497, 64.8439, -199.461, 0.23 ) }
    dend_69 { pt3dadd( 74.5443, 68.3552, -207.597, 0.23 ) }
    dend_69 { pt3dadd( 80.3895, 71.7202, -215.148, 0.23 ) }
    dend_69 { pt3dadd( 86.1478, 74.961, -222.812, 0.23 ) }
    dend_69 { pt3dadd( 93.8478, 76.9913, -229.014, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 49.663, 53.2863, -155.215, 0.23 ) }
    dend_68 { pt3dadd( 56.596, 57.3666, -164.389, 0.23 ) }
    dend_68 { pt3dadd( 61.7447, 61.4064, -174.681, 0.23 ) }
    dend_68 { pt3dadd( 67.5551, 65.2598, -184.682, 0.23 ) }
    dend_68 { pt3dadd( 74.3754, 70.8631, -193.191, 0.23 ) }
    dend_68 { pt3dadd( 81.1685, 76.5285, -201.684, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 71.6099, 10.8405, -174.132, 0.23 ) }
    dend_66 { pt3dadd( 77.8554, 9.94046, -181.641, 0.23 ) }
    dend_66 { pt3dadd( 84.502, 8.26644, -188.691, 0.23 ) }
    dend_66 { pt3dadd( 90.9751, 7.6748, -196.028, 0.23 ) }
    dend_66 { pt3dadd( 96.2808, 5.30722, -203.98, 0.23 ) }
    dend_66 { pt3dadd( 101.386, 3.82633, -212.236, 0.23 ) }
    dend_66 { pt3dadd( 105.399, 1.72053, -220.96, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 71.6099, 10.8405, -174.132, 0.23 ) }
    dend_65 { pt3dadd( 78.2356, 9.26599, -182.599, 0.23 ) }
    dend_65 { pt3dadd( 83.078, 8.33569, -192.267, 0.23 ) }
    dend_65 { pt3dadd( 88.8539, 8.21574, -201.436, 0.23 ) }
    dend_65 { pt3dadd( 93.8849, 8.40232, -211.029, 0.23 ) }
    dend_65 { pt3dadd( 97.7542, 9.64775, -221.064, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 145.602, 150.99, 50.2379, 0.23 ) }
    dend_51 { pt3dadd( 156.459, 159.182, 52.4194, 0.23 ) }
    dend_51 { pt3dadd( 166.633, 167.633, 56.4278, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 145.602, 150.99, 50.2379, 0.23 ) }
    dend_50 { pt3dadd( 153.383, 157.192, 51.5292, 0.23 ) }
    dend_50 { pt3dadd( 160.826, 163.796, 53.01, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 166.901, 171.253, 56.2039, 0.23 ) }
    dend_50 { pt3dadd( 171.87, 179.412, 59.7634, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 26.4551, -197.118, 103.888, 0.23 ) }
    dend_37 { pt3dadd( 27.8731, -199.642, 104.369, 0.23 ) }
    dend_37 { pt3dadd( 28.58, -200.9, 104.609, 0.91 ) }
    dend_37 { pt3dadd( 30.4772, -204.277, 105.252, 0.23 ) }
    dend_37 { pt3dadd( 31.2117, -205.584, 105.502, 0.68 ) }
    dend_37 { pt3dadd( 32.6573, -208.157, 105.992, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 26.4551, -197.118, 103.888, 0.23 ) }
    dend_36 { pt3dadd( 26.71, -198.971, 105.008, 0.23 ) }
    dend_36 { pt3dadd( 27.0256, -201.265, 106.394, 0.68 ) }
    dend_36 { pt3dadd( 27.2257, -202.72, 107.273, 0.23 ) }
    dend_36 { pt3dadd( 27.3658, -203.739, 107.888, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.59314, -186.716, 141.734, 0.23 ) }
    dend_34 { pt3dadd( -2.99247, -188.54, 142.736, 0.23 ) }
    dend_34 { pt3dadd( -2.60705, -189.456, 143.152, 0.68 ) }
    dend_34 { pt3dadd( -1.16926, -193.078, 144.268, 0.23 ) }
    dend_34 { pt3dadd( -0.944866, -193.643, 144.442, 0.23 ) }
    dend_34 { pt3dadd( -0.225377, -195.456, 145.0, 0.23 ) }
    dend_34 { pt3dadd( 0.752825, -197.92, 145.759, 0.91 ) }
    dend_34 { pt3dadd( 1.48113, -199.567, 146.252, 0.23 ) }
    dend_34 { pt3dadd( 2.56403, -201.824, 146.701, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.59314, -186.716, 141.734, 0.23 ) }
    dend_33 { pt3dadd( -3.71367, -187.763, 144.974, 0.23 ) }
    dend_33 { pt3dadd( -3.88061, -188.615, 147.811, 0.91 ) }
    dend_33 { pt3dadd( -4.04887, -189.832, 152.045, 0.23 ) }
    dend_33 { pt3dadd( -4.07319, -190.099, 153.07, 0.68 ) }
    dend_33 { pt3dadd( -4.15938, -190.964, 156.377, 0.23 ) }
    dend_33 { pt3dadd( -4.11795, -191.244, 157.446, 1.14 ) }
    dend_33 { pt3dadd( -3.98862, -191.546, 158.634, 1.14 ) }
    dend_33 { pt3dadd( -3.49493, -192.785, 162.862, 0.23 ) }
    dend_33 { pt3dadd( -3.13797, -193.719, 165.82, 1.14 ) }
    dend_33 { pt3dadd( -3.00307, -194.045, 166.776, 1.14 ) }
    dend_33 { pt3dadd( -2.11033, -196.087, 172.372, 0.23 ) }
    dend_33 { pt3dadd( -1.74026, -196.8, 174.207, 0.23 ) }
    dend_33 { pt3dadd( -0.834036, -198.303, 177.83, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 165.562, 73.8387, 45.3554, 0.23 ) }
    dend_12 { pt3dadd( 166.466, 75.8059, 45.0183, 0.23 ) }
    dend_12 { pt3dadd( 166.97, 76.785, 44.8678, 0.91 ) }
    dend_12 { pt3dadd( 170.007, 81.9209, 44.2835, 0.23 ) }
    dend_12 { pt3dadd( 171.988, 84.8689, 44.1976, 0.68 ) }
    dend_12 { pt3dadd( 173.772, 87.1633, 44.3386, 0.23 ) }
    dend_12 { pt3dadd( 175.605, 89.2958, 44.5958, 0.91 ) }
    dend_12 { pt3dadd( 176.976, 90.6618, 44.9039, 0.23 ) }
    dend_12 { pt3dadd( 179.031, 92.4311, 45.4884, 0.68 ) }
    dend_12 { pt3dadd( 182.026, 94.5892, 46.5101, 0.23 ) }
    dend_12 { pt3dadd( 185.085, 96.6094, 47.7068, 0.23 ) }
    dend_12 { pt3dadd( 186.752, 97.6067, 48.3828, 0.23 ) }
    dend_12 { pt3dadd( 188.33, 98.5468, 49.0543, 0.91 ) }
    dend_12 { pt3dadd( 189.435, 99.184, 49.5539, 0.91 ) }
    dend_12 { pt3dadd( 198.881, 106.24, 52.5816, 0.91 ) }
    dend_12 { pt3dadd( 207.976, 113.518, 56.0817, 0.91 ) }
    dend_12 { pt3dadd( 215.546, 122.695, 58.905, 0.91 ) }
    dend_12 { pt3dadd( 224.396, 131.083, 60.2317, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 165.562, 73.8387, 45.3554, 0.23 ) }
    dend_11 { pt3dadd( 166.925, 73.9464, 46.0777, 0.23 ) }
    dend_11 { pt3dadd( 169.786, 74.1221, 47.5683, 0.45 ) }
    dend_11 { pt3dadd( 172.791, 74.2614, 49.1187, 0.23 ) }
    dend_11 { pt3dadd( 175.8, 74.4247, 50.7622, 0.68 ) }
    dend_11 { pt3dadd( 178.933, 74.652, 52.4964, 0.23 ) }
    dend_11 { pt3dadd( 182.399, 74.9273, 54.4192, 0.68 ) }
    dend_11 { pt3dadd( 183.835, 75.07, 55.213, 0.23 ) }
    dend_11 { pt3dadd( 185.327, 75.2245, 56.0328, 0.68 ) }
    dend_11 { pt3dadd( 188.332, 75.5241, 57.6547, 0.23 ) }
    dend_11 { pt3dadd( 192.244, 76.0027, 59.8379, 1.14 ) }
    dend_11 { pt3dadd( 194.154, 76.2736, 60.9163, 0.23 ) }
    dend_11 { pt3dadd( 195.046, 76.4208, 61.478, 0.91 ) }
    dend_11 { pt3dadd( 197.022, 76.8179, 62.7767, 0.23 ) }
    dend_11 { pt3dadd( 198.231, 77.086, 63.5714, 1.14 ) }
    dend_11 { pt3dadd( 200.774, 77.6442, 65.2198, 0.23 ) }
    dend_11 { pt3dadd( 203.706, 78.345, 67.3559, 0.91 ) }
    dend_11 { pt3dadd( 206.689, 79.0682, 69.615, 0.23 ) }
    dend_11 { pt3dadd( 209.583, 79.7745, 71.7954, 0.68 ) }
    dend_11 { pt3dadd( 213.133, 80.646, 74.4111, 0.23 ) }
    dend_11 { pt3dadd( 214.668, 81.0213, 75.5765, 0.68 ) }
    dend_11 { pt3dadd( 217.948, 81.7917, 78.1552, 0.23 ) }
    dend_11 { pt3dadd( 221.1, 82.5101, 80.6508, 0.68 ) }
    dend_11 { pt3dadd( 223.952, 83.1679, 82.9221, 0.23 ) }
    dend_11 { pt3dadd( 226.18, 83.6901, 84.7439, 0.23 ) }
    dend_11 { pt3dadd( 231.608, 84.9486, 89.1328, 0.23 ) }
    dend_11 { pt3dadd( 235.312, 85.803, 91.9756, 0.23 ) }
    dend_11 { pt3dadd( 238.102, 86.445, 93.9833, 0.68 ) }
    dend_11 { pt3dadd( 242.972, 87.6733, 97.5185, 0.23 ) }
    dend_11 { pt3dadd( 246.226, 88.5369, 99.8302, 0.23 ) }
    dend_11 { pt3dadd( 249.472, 89.4842, 102.124, 0.23 ) }
    dend_11 { pt3dadd( 252.9, 90.5196, 104.385, 0.45 ) }
    dend_11 { pt3dadd( 254.423, 90.9963, 105.368, 0.68 ) }
    dend_11 { pt3dadd( 259.538, 92.6657, 108.728, 0.23 ) }
    dend_11 { pt3dadd( 262.1, 93.5088, 110.402, 0.68 ) }
    dend_11 { pt3dadd( 266.576, 95.2586, 113.603, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 144.884, 87.2651, 9.97711, 0.23 ) }
    dend_9 { pt3dadd( 153.886, 91.8916, 10.3049, 0.23 ) }
    dend_9 { pt3dadd( 163.144, 95.7052, 11.6542, 0.23 ) }
    dend_9 { pt3dadd( 172.648, 99.0645, 11.8272, 0.23 ) }
    dend_9 { pt3dadd( 182.431, 101.301, 12.5047, 0.23 ) }
    dend_9 { pt3dadd( 192.34, 101.767, 14.0491, 0.23 ) }
    dend_9 { pt3dadd( 202.191, 100.302, 15.3971, 0.23 ) }
    dend_9 { pt3dadd( 211.919, 99.7555, 17.8163, 0.23 ) }
    dend_9 { pt3dadd( 221.373, 99.7124, 21.1923, 0.23 ) }
    dend_9 { pt3dadd( 231.196, 100.019, 23.2456, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 240.683, 100.001, 26.5273, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 144.884, 87.2651, 9.97711, 0.23 ) }
    dend_8 { pt3dadd( 154.347, 92.4682, 11.7244, 0.23 ) }
    dend_8 { pt3dadd( 163.647, 97.6145, 14.2346, 0.23 ) }
    dend_8 { pt3dadd( 172.99, 103.309, 15.0977, 0.23 ) }
    dend_8 { pt3dadd( 182.946, 107.839, 15.5318, 0.23 ) }
    dend_8 { pt3dadd( 192.58, 112.373, 17.9031, 0.23 ) }
    dend_8 { pt3dadd( 201.686, 117.844, 20.4737, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 11
    dend_39 nseg = 13
    dend_16 nseg = 13
    dend_1 nseg = 17
    dend_43 nseg = 3
    dend_29 nseg = 19
    dend_20 nseg = 11
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 11
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_59 nseg = 5
    dend_58 nseg = 9
    dend_55 nseg = 5
    dend_54 nseg = 5
    dend_52 nseg = 3
    dend_47 nseg = 7
    dend_42 nseg = 3
    dend_41 nseg = 9
    dend_38 nseg = 3
    dend_31 nseg = 7
    dend_25 nseg = 7
    dend_24 nseg = 15
    dend_13 nseg = 7
    dend_74 nseg = 5
    dend_71 nseg = 5
    dend_67 nseg = 5
    dend_64 nseg = 7
    dend_49 nseg = 3
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_10 nseg = 5
    dend_7 nseg = 5
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 5
    dend_68 nseg = 3
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_50 nseg = 3
    dend_12 nseg = 5
    dend_11 nseg = 7
    dend_9 nseg = 5
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_NBC_81f6eae6fc_0_0


