// Cell: bAC217_L6_BP_11e76689bf_0_0
/*
{
  "id" : "bAC217_L6_BP_11e76689bf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.80952, 9.01832, 2.99649, 0.83", "-7.66774, 12.0088, 3.57837, 1.11", "-9.94257, 13.7708, 3.88105, 0.83", "-12.1527, 15.4678, 4.15224, 0.83", "-13.4612, 16.4355, 4.30085, 1.11", "-17.559, 19.4593, 4.77715, 1.11", "-24.8882, 24.6362, 5.61909, 0.83", "-27.5286, 26.4302, 5.89712, 0.83", "-29.6196, 27.8086, 6.06982, 0.83", "-31.6586, 29.1746, 6.2193, 0.83", "-33.3184, 30.3005, 6.29996, 0.55", "-34.566, 31.0629, 6.38182, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.66908, 6.26983, -6.24424, 0.55", "7.43935, 6.8691, -6.8629, 0.55", "9.04683, 7.02037, -7.6815, 0.83", "11.591, 7.18136, -9.20212, 0.55", "12.8191, 7.25908, -9.93615, 1.38", "15.8387, 7.45015, -11.7409, 0.55", "17.1248, 7.38545, -12.6021, 0.83", "23.7776, 6.19881, -17.4406, 0.55", "24.4212, 6.03924, -17.9729, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.684451, -10.516, 3.24291, 1.11", "-0.733406, -14.8354, 4.79141, 1.11", "-0.753344, -16.5946, 5.42205, 0.83", "-0.779832, -18.9317, 6.2599, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.747018, 9.41598, -1.34806, 1.11", "0.698462, 11.0152, -1.3472, 1.11", "0.582659, 13.6235, -1.2576, 1.38", "0.577769, 13.769, -1.24935, 1.38", "0.614021, 15.5761, -1.09587, 0.83", "0.693299, 17.492, -0.81293, 0.83", "0.874453, 19.6674, -0.189398, 0.83", "1.00694, 20.4992, 0.173872, 0.83", "1.15904, 21.1069, 0.518232, 1.11", "1.65412, 22.5972, 1.44048, 0.55", "2.235, 24.1597, 2.53847, 0.83", "3.07265, 25.7863, 3.84253, 0.55", "3.52749, 26.4706, 4.45784, 0.83", "4.14286, 27.3991, 5.38732, 0.55", "4.87832, 28.5778, 6.61442, 0.55", "5.85892, 30.3429, 8.44337, 0.55", "6.93385, 32.3559, 10.4604, 0.55", "7.55197, 33.6597, 11.908, 0.55", "8.23745, 35.3046, 13.8916, 0.55", "8.37076, 35.6351, 14.3345, 0.83", "8.70141, 36.5083, 15.5692, 0.55", "9.00213, 37.1922, 16.5517, 0.83", "9.65728, 39.0424, 18.8633, 0.55", "9.95789, 39.7197, 19.5737, 0.83", "10.2949, 40.2266, 20.0983, 0.55", "10.6613, 40.6679, 20.5352, 0.83", "11.5222, 41.5012, 21.3901, 0.83", "12.7009, 42.633, 22.3901, 0.83", "13.4521, 43.3764, 22.9058, 0.55", "14.0189, 44.0132, 23.3015, 0.55", "15.5147, 45.6604, 24.3123, 0.83", "16.4963, 46.7174, 24.9187, 0.55", "18.0133, 48.2703, 25.7692, 0.55", "19.4315, 49.5823, 26.4864, 0.55", "20.7164, 50.6992, 27.0906, 0.55", "22.3729, 52.0175, 27.7736, 0.55", "23.4068, 52.6793, 28.158, 0.55", "24.1458, 53.0612, 28.3317, 0.55", "25.1675, 53.3785, 28.482, 0.55", "26.7483, 53.6, 28.5898, 0.55", "27.7539, 53.6156, 28.6237, 0.55", "29.1959, 53.6, 28.7688, 0.55", "31.8638, 53.6552, 29.2734, 0.55", "33.9048, 53.7958, 29.8112, 0.55", "36.0201, 54.051, 30.5068, 0.55", "37.3386, 54.2635, 31.0602, 0.55", "40.6662, 55.1524, 32.7258, 0.55", "42.5727, 55.8477, 33.8669, 0.55", "43.9477, 56.4772, 34.8685, 0.55", "44.7598, 57.0266, 35.5113, 0.55", "45.6917, 57.8207, 36.2478, 0.55", "47.3089, 59.3642, 37.3219, 0.55", "47.6977, 59.7344, 37.508, 0.55", "48.8439, 60.7307, 37.9611, 0.55", "49.8893, 61.7786, 38.3706, 0.83", "50.4624, 62.3591, 38.584, 0.55", "51.3241, 63.3457, 38.8643, 0.83", "55.4456, 68.6066, 41.6346, 0.83", "59.042, 74.542, 43.6782, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-34.566, 31.0629, 6.38182, 0.55", "-36.2924, 32.2025, 5.35937, 0.55", "-38.1698, 33.4417, 4.24756, 0.55", "-40.4353, 34.9372, 2.90584, 0.55", "-42.3061, 36.172, 1.79795, 0.83", "-43.8737, 37.2068, 0.869544, 0.55", "-46.7836, 39.1276, -0.853721, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-34.566, 31.0629, 6.38182, 0.55", "-37.2662, 31.5606, 6.06861, 0.55", "-40.1384, 31.9989, 6.02164, 0.55", "-43.3951, 32.4903, 6.04801, 0.55", "-48.1101, 33.149, 6.52017, 0.55", "-52.0544, 33.584, 7.19655, 0.55", "-56.1906, 33.9755, 8.08339, 0.55", "-60.1868, 34.0802, 9.37359, 0.55", "-63.625, 33.8321, 10.8192, 0.55", "-67.907, 33.2188, 13.0834, 0.55", "-69.7676, 32.8134, 14.3301, 0.55", "-71.7769, 32.3533, 15.7644, 0.55", "-75.3214, 31.2715, 18.1307, 0.55", "-77.2089, 30.703, 19.0893, 0.55", "-79.1858, 30.0463, 20.0814, 0.55", "-81.5378, 29.2965, 21.0202, 0.55", "-84.0943, 28.5356, 21.9699, 0.55", "-87.7431, 27.4409, 23.2448, 0.55", "-92.6188, 26.3092, 24.5063, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.4212, 6.03924, -17.9729, 0.55", "27.122, 7.11493, -18.6456, 0.55", "28.71, 7.5949, -19.2375, 0.55", "30.2909, 7.99391, -19.8291, 0.55", "31.3784, 8.22414, -20.2236, 0.55", "32.9731, 8.52715, -20.78, 0.55", "36.2991, 9.07183, -22.0226, 0.55", "40.0931, 9.61438, -23.6743, 0.55", "41.9604, 9.74034, -24.5752, 0.55", "42.9689, 9.77105, -25.1157, 0.55", "44.0767, 9.80073, -25.7524, 0.55", "46.0621, 9.80331, -26.8697, 0.55", "46.7914, 9.75974, -27.2895, 0.55", "49.8823, 9.59945, -29.3064, 0.55", "52.0749, 9.48631, -30.8931, 0.55", "53.3355, 9.43699, -31.8441, 0.55", "54.5946, 9.37772, -32.7895, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "24.4212, 6.03924, -17.9729, 0.83", "26.0308, 7.32467, -18.1337, 0.83", "26.9534, 8.05087, -18.271, 0.55", "28.3141, 9.13093, -18.6035, 0.83", "29.2273, 9.87718, -18.8614, 0.55", "30.4811, 10.9459, -19.2033, 0.83", "31.9816, 12.2729, -19.5595, 0.55", "32.7423, 12.8859, -19.694, 0.55", "34.5187, 14.0636, -19.8253, 0.83", "36.1455, 14.9648, -19.6846, 0.55", "37.0511, 15.4742, -19.5119, 0.83", "38.3976, 16.2955, -19.1065, 0.55", "40.3122, 17.5568, -18.265, 0.55", "42.9818, 19.1859, -16.9225, 0.55", "45.5293, 20.6735, -15.435, 0.55", "47.5483, 21.8356, -14.2133, 0.55", "50.8738, 23.7713, -12.1833, 0.55", "53.2939, 25.272, -10.6533, 0.55", "54.7346, 26.3198, -9.69426, 0.55", "57.3476, 28.5507, -7.95275, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.779832, -18.9317, 6.2599, 0.83", "-1.12929, -21.9481, 6.15349, 0.83", "-1.46976, -24.8869, 6.04981, 0.83", "-1.84989, -28.1681, 5.93406, 0.83", "-2.04839, -29.8815, 5.87361, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.779832, -18.9317, 6.2599, 0.55", "-0.257979, -20.6182, 7.56455, 0.55", "0.157459, -22.6955, 9.21998, 0.55", "0.265254, -25.442, 11.4325, 0.55", "0.22775, -26.514, 12.3095, 0.83", "-0.167692, -29.2634, 14.8196, 0.55", "-0.491648, -30.6899, 16.1243, 0.55", "-1.1982, -33.4672, 18.7687, 0.83", "-1.86085, -35.536, 20.843, 0.55", "-2.5525, -37.2513, 22.5044, 0.55", "-3.92477, -40.5041, 25.5818, 0.55", "-5.01117, -43.0967, 28.0053, 0.55", "-5.84544, -45.1726, 29.9831, 0.55", "-6.6015, -47.3699, 32.0338, 0.28", "-6.8354, -48.2808, 32.8655, 0.55", "-7.20925, -49.961, 34.3141, 0.28", "-7.37624, -52.5643, 36.2288, 0.55", "-10.0801, -61.3449, 42.7358, 0.55", "-13.1533, -69.4777, 49.8886, 0.55", "-16.0299, -76.1514, 58.4871, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-46.7836, 39.1276, -0.853721, 0.55", "-49.6086, 39.6706, 1.03833, 0.55", "-50.7779, 39.8495, 1.99895, 0.83", "-52.1212, 40.0091, 3.32856, 0.55", "-53.1363, 40.1435, 4.44894, 0.83", "-55.7996, 40.5984, 7.34527, 0.55", "-56.8069, 40.7907, 8.44846, 0.28", "-58.4666, 41.1517, 10.4439, 0.55", "-60.6951, 41.6496, 13.1077, 0.55", "-62.3982, 42.0173, 15.0423, 0.55", "-64.6835, 42.4978, 17.5449, 0.28", "-65.2874, 42.6177, 18.1143, 0.55", "-66.5438, 42.8758, 19.2386, 0.28", "-67.4079, 43.0646, 19.9113, 0.55", "-69.1927, 43.4162, 21.1207, 0.28", "-70.2479, 43.5533, 21.7802, 0.55", "-72.1077, 43.6523, 22.9781, 0.28", "-73.3628, 43.7043, 23.7371, 0.55", "-80.559, 43.8191, 32.0384, 0.55", "-86.996, 42.9583, 40.9003, 0.55", "-93.1555, 41.064, 49.7987, 0.55", "-99.3391, 37.8596, 58.2961, 0.55", "-104.186, 35.2159, 67.7945, 0.55", "-109.884, 32.9314, 76.9067, 0.55", "-115.656, 32.4623, 86.243, 0.55", "-121.417, 31.1139, 95.5009, 0.55", "-126.937, 30.5202, 104.981, 0.55", "-131.923, 29.7972, 114.745, 0.55", "-135.817, 27.8664, 124.835, 0.55", "-139.784, 26.9663, 135.041, 0.55", "-143.937, 24.9472, 145.011, 0.55", "-146.783, 22.4971, 155.336, 0.55", "-147.736, 20.835, 166.154, 0.55", "-148.711, 17.1062, 176.443, 0.55", "-148.122, 13.1566, 186.678, 0.55", "-148.091, 9.6881, 197.103, 0.55", "-149.201, 7.03788, 207.707, 0.55", "-152.577, 6.09585, 218.12, 0.55", "-155.017, 3.93831, 228.613, 0.55", "-155.325, 3.63823, 239.592, 0.55", "-157.392, 4.14071, 250.37, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-46.7836, 39.1276, -0.853721, 0.55", "-48.152, 39.9109, -2.71523, 0.55", "-49.1561, 40.77, -4.75283, 0.55", "-50.0726, 41.8116, -6.89254, 0.55", "-50.6465, 42.4638, -8.2324, 0.55", "-51.6933, 43.6534, -10.6765, 0.83", "-52.4592, 44.5238, -12.4646, 0.55", "-53.2909, 45.7173, -15.0749, 0.83", "-53.5533, 46.5077, -16.5211, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-92.6188, 26.3092, 24.5063, 0.28", "-93.5745, 24.5525, 24.194, 0.28", "-94.0333, 23.7964, 23.9967, 0.28", "-94.6308, 22.7274, 23.6783, 0.55", "-95.1233, 21.7878, 23.4063, 0.28", "-95.8493, 20.3569, 23.0095, 0.55", "-97.8675, 16.1526, 21.9109, 0.28", "-98.5286, 14.6776, 21.4085, 0.55", "-99.5319, 12.4055, 20.5586, 0.28", "-100.109, 11.0462, 19.9893, 0.55", "-100.509, 10.1091, 19.5746, 0.28", "-100.964, 9.03377, 19.1073, 0.55", "-102.339, 5.44699, 17.6342, 0.28", "-102.772, 4.36151, 17.1507, 0.55", "-103.534, 2.69935, 16.242, 0.28", "-104.162, 1.63314, 15.5689, 0.28", "-104.725, 0.919872, 15.0932, 0.55", "-106.684, -1.08338, 13.8134, 0.28", "-107.594, -1.89478, 13.3121, 0.55", "-109.821, -3.74442, 12.0562, 0.28", "-112.048, -5.38303, 10.9043, 0.28", "-114.472, -6.94842, 9.72465, 0.28", "-115.581, -7.53915, 9.27374, 0.55", "-120.91, -14.0518, 6.16595, 0.55", "-126.801, -20.6575, 4.70735, 0.55", "-132.602, -26.914, 1.93683, 0.55", "-138.571, -32.6146, -1.57597, 0.55", "-144.636, -37.6709, -5.83292, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-92.6188, 26.3092, 24.5063, 0.55", "-93.4538, 26.2209, 24.748, 0.55", "-95.7807, 26.0918, 25.7212, 0.55", "-96.6481, 26.0396, 26.1407, 0.55", "-98.6773, 25.8688, 27.1812, 0.55", "-101.816, 25.5778, 28.621, 0.55", "-103.456, 25.4644, 29.3217, 0.28", "-106.007, 25.2142, 30.3848, 0.55", "-107.903, 24.9639, 31.1227, 0.55", "-108.702, 24.8537, 31.4381, 0.28", "-113.5, 24.188, 33.3242, 0.55", "-115.743, 23.7227, 34.1118, 0.28", "-118.784, 23.0145, 35.006, 0.28", "-121.425, 22.3816, 35.614, 0.55", "-131.698, 22.2252, 39.5694, 0.55", "-141.473, 22.2645, 44.633, 0.55", "-150.435, 21.7068, 51.0035, 0.55", "-159.246, 23.1872, 57.4355, 0.55", "-166.49, 25.1039, 65.5014, 0.55", "-172.099, 28.2206, 74.4472, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "54.5946, 9.37772, -32.7895, 0.55", "58.4536, 10.6128, -35.9908, 0.55", "59.681, 10.9408, -37.0741, 0.55", "61.2216, 11.3026, -38.406, 0.55", "64.0246, 11.9165, -40.9844, 0.55", "66.964, 12.4288, -43.7343, 0.55", "68.4112, 12.5686, -45.0298, 0.83", "69.613, 12.5926, -46.1762, 0.55", "70.5218, 12.5275, -47.1145, 0.83", "72.7453, 12.0557, -49.4905, 0.55", "74.5925, 11.5011, -51.4407, 0.55", "76.7154, 10.8605, -53.5822, 0.55", "79.0741, 10.207, -56.0199, 0.55", "80.6608, 9.72865, -57.6885, 0.55", "82.453, 9.17777, -59.6249, 0.55", "84.0, 8.74275, -61.4072, 0.55", "84.9687, 8.54065, -62.6618, 0.55", "86.2312, 8.11794, -65.2075, 0.55", "86.9322, 7.7943, -66.7958, 0.55", "87.5767, 7.24266, -68.9016, 0.55", "88.5025, 6.18399, -72.452, 0.55", "88.6983, 5.91292, -73.2493, 0.28", "91.2057, 2.51736, -82.9256, 0.28", "92.0274, 1.54912, -85.7666, 0.83", "95.2206, -2.04506, -95.8138, 0.83", "96.8514, -3.89496, -100.455, 0.83", "97.6215, -4.71383, -102.321, 0.55", "98.4857, -5.50985, -104.137, 0.55", "100.775, -7.0048, -107.474, 0.55", "103.186, -8.31336, -110.391, 0.28", "103.878, -8.48882, -110.53, 0.55", "105.376, -8.71229, -110.321, 0.28", "106.293, -8.77093, -110.067, 0.55", "107.247, -8.8356, -109.719, 0.28", "108.385, -8.85036, -109.257, 0.55", "110.087, -8.80295, -108.757, 0.28", "111.457, -8.81202, -108.396, 0.55", "112.969, -8.73525, -108.129, 0.28", "115.03, -8.64463, -107.949, 0.55", "117.341, -8.50532, -107.892, 0.55", "119.375, -8.37401, -107.98, 0.28", "122.193, -8.18414, -108.26, 0.55", "127.07, -7.7804, -109.277, 0.55", "129.223, -7.52036, -109.998, 0.55", "130.148, -7.38145, -110.412, 0.83", "131.914, -7.12259, -111.362, 0.55", "133.138, -6.90218, -112.105, 0.83", "136.423, -6.22693, -114.149, 0.55", "138.443, -5.95864, -115.433, 0.28", "139.296, -5.88744, -115.873, 0.55", "141.643, -5.87721, -116.795, 0.28", "142.47, -5.94193, -117.055, 0.55", "144.176, -6.1505, -117.323, 0.28", "145.918, -6.49402, -117.282, 0.55", "149.435, -7.30297, -116.576, 0.28", "151.057, -7.72637, -116.073, 0.55", "153.478, -8.47645, -115.185, 0.28", "156.531, -9.40024, -113.957, 0.55", "158.736, -10.035, -113.038, 0.55", "162.542, -11.0113, -111.399, 0.28", "164.101, -11.3558, -110.86, 0.55", "166.786, -11.8328, -110.239, 0.28", "169.448, -12.1288, -109.826, 0.55", "170.9, -12.1514, -109.819, 0.28", "172.199, -12.0091, -109.936, 0.55", "175.856, -11.4286, -110.637, 0.28", "178.453, -10.8378, -111.201, 0.28", "180.696, -10.1622, -111.745, 0.55", "183.17, -9.36092, -112.481, 0.28", "183.789, -9.11689, -112.65, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "54.5946, 9.37772, -32.7895, 0.55", "55.4692, 7.39905, -33.7619, 0.55", "56.0613, 5.7124, -34.4731, 0.28", "56.5964, 4.18253, -34.9977, 0.55", "57.892, 0.965052, -36.1371, 0.28", "57.9694, 0.75815, -36.2368, 0.55", "58.4074, -0.331075, -36.8444, 0.28", "58.698, -1.26289, -37.4847, 0.55", "58.9554, -2.25729, -38.2564, 0.28", "59.2736, -3.62702, -39.3664, 0.55", "60.0678, -7.05969, -42.0954, 0.55", "60.7621, -10.2002, -44.6333, 0.55", "61.2952, -12.7147, -46.6651, 0.55", "61.7774, -15.1888, -48.6237, 0.55", "61.8991, -15.8254, -49.1055, 0.28", "62.0439, -16.4961, -49.5691, 0.55", "62.3188, -17.4017, -50.1319, 0.28", "62.9569, -18.9811, -51.0001, 0.55", "64.4013, -21.9063, -52.202, 0.55", "65.1852, -23.4599, -52.7093, 0.28", "65.895, -25.0637, -53.2953, 0.55", "66.7337, -27.3483, -54.2013, 0.28", "67.3002, -29.2171, -54.9759, 0.55", "68.0356, -32.0318, -56.1411, 0.28", "68.8123, -34.9301, -57.2614, 0.55", "69.8894, -39.1519, -58.9239, 0.28", "70.418, -41.4113, -59.8177, 0.55", "70.9262, -43.735, -60.784, 0.28", "71.3593, -45.7993, -61.7539, 0.28", "71.9918, -48.3932, -63.1721, 0.55", "72.7273, -50.7642, -64.4289, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.3476, 28.5507, -7.95275, 0.55", "60.1309, 28.6823, -7.15934, 0.55", "62.1809, 28.6617, -6.75643, 0.55", "66.6893, 28.5184, -6.09431, 0.55", "68.7326, 28.3766, -5.96472, 0.55", "70.9643, 28.2452, -5.94302, 0.55", "73.9683, 28.0772, -6.13053, 0.55", "77.1643, 27.759, -6.60237, 0.55", "78.8555, 27.5331, -7.02958, 0.55", "82.3199, 26.9808, -8.34465, 0.55", "83.917, 26.7291, -9.00092, 0.55", "87.6722, 26.0525, -10.6162, 0.55", "90.2247, 25.5019, -11.6703, 0.55", "92.0996, 25.1021, -12.3633, 0.83", "95.1046, 24.3649, -13.4166, 0.55", "98.0557, 23.5299, -14.3124, 0.83", "100.567, 22.7304, -14.9661, 0.55", "102.791, 22.0721, -15.4445, 0.55", "104.047, 21.7635, -15.6617, 0.83", "106.969, 21.0818, -16.0236, 0.28", "108.411, 20.8182, -16.1277, 0.28", "109.82, 20.4638, -16.28, 0.28", "111.338, 20.1181, -16.4591, 0.28", "113.766, 19.5987, -16.8026, 0.28", "114.741, 19.4069, -16.9155, 0.55", "117.056, 19.0159, -16.9721, 0.55", "121.215, 18.315, -16.864, 0.55", "122.367, 18.1018, -16.7794, 0.55", "123.396, 17.8878, -16.6546, 0.83", "125.615, 17.5251, -16.2235, 0.55", "127.542, 17.2196, -15.8195, 0.55", "129.361, 16.9402, -15.4311, 0.55", "130.775, 16.692, -15.1642, 0.55", "133.038, 16.1246, -14.8163, 0.55", "135.736, 15.2007, -14.5023, 0.55", "139.989, 13.2578, -14.2031, 0.55", "142.364, 11.839, -14.113, 0.55", "144.459, 10.2635, -14.0652, 0.28", "145.099, 9.66162, -14.059, 0.55", "146.551, 7.9362, -14.0344, 0.28", "147.849, 5.96703, -13.9757, 0.55", "149.124, 3.50838, -13.7125, 0.55", "149.976, 1.91117, -13.4603, 0.28", "150.284, 1.354, -13.3423, 0.55", "151.076, -0.0222494, -13.0286, 0.28", "152.146, -1.79772, -12.5735, 0.55", "154.895, -6.02879, -11.3583, 0.55", "156.318, -8.14567, -10.6965, 0.55", "157.635, -10.0798, -10.0708, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "57.3476, 28.5507, -7.95275, 0.55", "59.2845, 30.5307, -6.09169, 0.55", "59.9194, 31.1384, -5.53031, 0.55", "62.341, 33.2059, -3.46166, 0.55", "65.0218, 35.5987, -1.14975, 0.55", "68.4243, 38.721, 1.91541, 0.55", "69.3664, 39.5802, 2.75455, 0.55", "71.0725, 41.0393, 4.29123, 0.55", "72.9633, 42.6361, 5.86923, 0.55", "75.1896, 44.4898, 7.55562, 0.55", "77.2805, 46.2731, 9.13092, 0.55", "78.4398, 47.2702, 9.90213, 0.55", "79.7959, 48.4803, 10.7769, 0.55", "81.4777, 50.0076, 11.793, 0.83", "84.3386, 52.3083, 13.1669, 0.55", "86.2753, 53.6973, 14.0391, 0.83", "89.0126, 55.4457, 15.2447, 0.55", "89.8633, 55.9307, 15.634, 0.55", "92.5385, 57.2765, 16.8767, 0.55", "97.4256, 59.2955, 19.1115, 0.55", "101.056, 60.5415, 20.8004, 0.55", "103.925, 61.4459, 22.2811, 0.55", "106.838, 62.2865, 23.9768, 0.55", "107.452, 62.4501, 24.3466, 0.28", "108.703, 62.7344, 25.1253, 0.83", "113.843, 63.851, 28.3964, 0.55", "117.46, 64.595, 30.6198, 0.55", "120.395, 65.3174, 32.4642, 0.55", "122.145, 65.7541, 33.5846, 0.83", "123.519, 66.1178, 34.4563, 0.28", "124.768, 66.4425, 35.2351, 0.55", "133.761, 71.9858, 41.0723, 0.55", "144.163, 75.0738, 46.3584, 0.55", "154.197, 79.6428, 51.2691, 0.55", "162.547, 83.8352, 58.91, 0.55", "170.242, 86.7932, 67.7245, 0.55", "179.903, 86.7994, 74.9593, 0.55", "190.071, 84.7921, 81.1452, 0.55", "201.212, 84.3976, 85.7694, 0.55", "212.031, 84.243, 91.1185, 0.55", "223.366, 84.869, 95.216, 0.55", "234.172, 86.7276, 100.26, 0.55", "244.313, 87.0622, 106.797, 0.55", "254.181, 89.8205, 113.175, 0.55", "262.936, 94.7907, 119.832, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.04839, -29.8815, 5.87361, 1.38", "1.24924, -33.4789, 4.91585, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.04839, -29.8815, 5.87361, 0.55", "-3.2012, -31.1391, 6.39726, 0.55", "-4.50197, -32.772, 6.97679, 0.55", "-5.48741, -33.8386, 7.43811, 0.55", "-6.3746, -34.7233, 7.7081, 0.55", "-8.37454, -36.5375, 8.14052, 0.55", "-9.78546, -37.7405, 8.41157, 0.55", "-11.0601, -38.8181, 8.61344, 0.55", "-14.3156, -41.4233, 9.13472, 0.55", "-18.201, -44.4263, 9.78663, 0.55", "-21.2245, -46.6916, 10.2487, 0.55", "-23.1705, -48.1837, 10.5207, 0.55", "-25.4101, -49.9849, 10.8382, 0.55", "-28.2735, -52.6084, 11.2706, 0.55", "-29.9747, -54.5078, 11.5515, 0.55", "-32.0491, -57.2826, 12.0428, 0.55", "-33.7237, -59.914, 12.4863, 0.55", "-35.4779, -63.2368, 12.9568, 0.55", "-37.1945, -67.1779, 13.4538, 0.55", "-38.1985, -70.2262, 13.7673, 0.55", "-38.5587, -71.759, 13.969, 0.55", "-39.121, -75.3929, 14.5271, 0.55", "-39.5534, -78.8036, 15.1035, 0.55", "-39.7185, -82.2697, 15.8371, 0.55", "-39.7847, -84.2611, 16.3644, 0.55", "-39.8579, -90.4324, 18.1815, 0.55", "-39.8625, -90.8868, 18.3238, 0.55", "-39.8147, -93.6785, 19.2332, 0.55", "-39.8853, -98.652, 21.0648, 0.55", "-39.9603, -100.309, 21.593, 0.55", "-40.3274, -102.874, 22.0476, 0.55", "-40.5372, -103.819, 22.0077, 0.55", "-41.384, -107.005, 21.2604, 0.55", "-42.0205, -109.061, 20.3254, 0.55", "-43.2488, -112.314, 18.1825, 0.55", "-44.7407, -116.297, 15.2024, 0.28", "-45.1549, -117.277, 14.3353, 0.55", "-45.8374, -118.757, 12.8964, 0.28", "-45.9475, -118.979, 12.6693, 0.55", "-46.5103, -120.201, 11.5278, 0.28", "-46.6846, -120.617, 11.2424, 0.55", "-47.4479, -122.795, 10.171, 0.28", "-47.7298, -123.533, 9.82803, 0.55", "-48.5153, -125.671, 8.96115, 0.28", "-48.7586, -126.345, 8.6892, 0.55", "-49.599, -128.669, 7.79451, 0.28", "-49.9829, -129.738, 7.37536, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.0299, -76.1514, 58.4871, 0.55", "-19.8646, -82.6215, 63.8918, 0.55", "-24.6883, -88.3613, 69.3291, 0.55", "-29.1408, -94.6852, 74.4243, 0.55", "-33.7173, -101.055, 79.3496, 0.55", "-37.1462, -108.381, 83.8599, 0.55", "-40.5983, -115.402, 88.8163, 0.55", "-42.5685, -123.78, 92.2394, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.0299, -76.1514, 58.4871, 0.55", "-15.8786, -84.0013, 65.9116, 0.55", "-15.2213, -93.0312, 71.8103, 0.55", "-16.2972, -102.109, 77.5721, 0.55", "-17.943, -111.684, 82.3022, 0.55", "-19.1633, -121.227, 87.222, 0.55", "-20.3348, -130.394, 92.8234, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-53.5533, 46.5077, -16.5211, 0.83", "-53.0579, 48.5031, -18.9291, 0.83", "-51.9941, 53.3474, -24.3308, 0.55", "-51.531, 55.4485, -26.473, 0.83", "-51.0254, 57.7067, -28.5998, 0.55", "-50.5036, 60.0519, -30.4358, 0.55", "-50.2305, 61.2401, -31.1979, 0.28", "-50.0992, 62.0409, -31.4945, 0.55", "-49.5727, 64.7502, -31.9, 0.28", "-49.3178, 65.9125, -32.0151, 0.55", "-48.4794, 69.9638, -32.248, 0.28", "-47.8966, 73.1816, -32.3216, 0.55", "-47.2246, 78.2182, -32.2748, 0.28", "-46.787, 82.6515, -32.1451, 0.28", "-46.6841, 85.1366, -32.0211, 0.55", "-46.7415, 88.0838, -31.8683, 0.28", "-46.8603, 89.4916, -31.7736, 0.55", "-47.321, 92.7941, -31.6955, 0.28", "-47.775, 94.9884, -31.7547, 0.28", "-48.2676, 97.1396, -31.8775, 0.28", "-48.4847, 98.276, -31.9479, 0.55", "-49.1198, 102.869, -32.3462, 0.28", "-49.6939, 108.304, -32.9224, 0.55", "-49.8648, 110.182, -33.1293, 0.55", "-50.0656, 112.066, -33.2955, 0.55", "-50.7038, 116.062, -33.7091, 0.55", "-51.2917, 118.681, -34.0336, 0.28", "-51.6289, 119.67, -34.1673, 0.55", "-52.7296, 122.35, -34.4679, 0.28", "-54.0197, 125.193, -34.8992, 0.55", "-56.2585, 129.267, -35.6715, 0.28", "-57.3792, 130.961, -36.0456, 0.28", "-59.2469, 133.297, -36.7992, 0.55", "-61.3602, 135.72, -37.7126, 0.28", "-61.7507, 136.098, -37.8744, 0.55", "-63.1717, 137.298, -38.4377, 0.28", "-68.0951, 141.133, -40.2651, 0.55", "-74.9988, 145.821, -43.0331, 0.28", "-76.283, 146.599, -43.6177, 0.55", "-79.8212, 148.593, -45.2744, 0.28", "-81.3097, 149.407, -46.0097, 0.28", "-82.6081, 150.077, -46.7096, 0.55", "-86.4523, 151.559, -49.025, 0.28", "-89.1849, 152.335, -50.5343, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-53.5533, 46.5077, -16.5211, 0.55", "-53.6796, 47.7104, -16.7679, 0.55", "-53.7686, 48.4265, -16.846, 0.28", "-53.927, 48.9523, -16.7716, 0.55", "-54.2907, 50.1598, -16.6007, 0.28", "-54.5463, 51.008, -16.4807, 0.55", "-55.0173, 52.5715, -16.2595, 0.28", "-55.3441, 53.424, -15.9949, 0.55", "-56.6615, 55.5282, -14.6458, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-144.636, -37.6709, -5.83292, 0.55", "-149.17, -43.0345, -8.92182, 0.55", "-152.531, -48.8122, -12.6894, 0.55", "-155.387, -53.7139, -17.8546, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-144.636, -37.6709, -5.83292, 0.55", "-148.33, -41.2699, -8.78043, 0.55", "-151.468, -44.7837, -12.3982, 0.55", "-154.374, -48.3523, -16.1543, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-172.099, 28.2206, 74.4472, 0.55", "-180.669, 28.2065, 80.822, 0.55", "-189.609, 29.7421, 86.4609, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-172.099, 28.2206, 74.4472, 0.55", "-180.606, 27.8424, 77.1324, 0.55", "-188.816, 28.7257, 80.5271, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "72.7273, -50.7642, -64.4289, 0.28", "80.34, -54.8212, -73.7363, 0.28", "81.0791, -55.2685, -74.549, 0.55", "82.327, -56.0238, -75.9211, 0.28", "83.3777, -56.6597, -77.0765, 0.28", "84.7686, -57.5016, -78.6058, 0.55", "86.6024, -58.6114, -80.6222, 0.55", "88.7752, -60.3616, -81.4006, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "72.7273, -50.7642, -64.4289, 0.55", "73.7637, -52.2148, -65.7895, 0.55", "74.1053, -52.8688, -66.4109, 0.28", "74.6331, -53.9913, -67.5087, 0.55", "75.7958, -56.4642, -69.927, 0.28", "76.6016, -58.178, -71.6029, 0.55", "77.9669, -61.0816, -74.4424, 0.28", "79.5699, -64.6323, -78.2146, 0.28", "80.2398, -66.2669, -79.9929, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "157.635, -10.0798, -10.0708, 0.28", "160.055, -12.5559, -8.52631, 0.28", "163.089, -15.7772, -6.1616, 0.28", "165.0, -17.8526, -4.52451, 0.55", "166.139, -18.9684, -3.53992, 0.28", "166.745, -19.5686, -3.00289, 0.28", "169.751, -22.5434, -0.410811, 0.55", "170.43, -23.1768, 0.281, 0.28", "172.026, -24.8414, 2.24182, 0.55", "173.398, -26.3108, 3.86136, 0.28", "174.596, -27.4996, 5.15443, 0.55", "176.014, -28.9525, 6.57754, 0.55", "178.313, -31.3444, 8.45195, 0.55", "178.87, -31.9389, 8.88375, 0.55", "180.876, -34.1785, 10.4569, 0.28", "181.658, -35.1067, 11.0654, 0.55", "182.745, -36.2796, 11.8459, 0.28", "184.289, -37.9671, 12.8581, 0.55", "186.891, -40.7132, 13.9898, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "157.635, -10.0798, -10.0708, 0.55", "153.823, -10.5154, -10.4335, 0.55", "150.727, -10.8692, -10.7281, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.24924, -33.4789, 4.91585, 0.83", "1.39386, -33.7713, 4.89946, 0.83", "3.0533, -36.354, 4.93727, 0.83", "4.51564, -38.6162, 4.8175, 0.55", "5.68227, -40.4209, 4.72194, 0.55", "8.16199, -44.2568, 4.51884, 0.83", "11.1697, -48.9096, 4.27249, 0.55", "12.8067, -51.344, 4.1961, 0.83", "15.6921, -55.2127, 4.26596, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.24924, -33.4789, 4.91585, 0.55", "0.513536, -34.3835, 2.3437, 0.55", "-0.276154, -35.3544, -0.417194, 0.55", "-1.20839, -36.5005, -3.67645, 0.55", "-2.34043, -37.8924, -7.63424, 0.55", "-2.98282, -38.6822, -9.88016, 0.55", "-3.11186, -38.8408, -10.3313, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-20.3348, -130.394, 92.8234, 0.55", "-20.6796, -139.425, 99.2745, 0.55", "-19.3548, -148.956, 104.817, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-20.3348, -130.394, 92.8234, 0.55", "-21.6692, -138.899, 97.5359, 0.55", "-23.3212, -147.13, 102.62, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-56.6615, 55.5282, -14.6458, 0.28", "-57.628, 56.9441, -13.3941, 0.28", "-57.9879, 57.4843, -12.858, 0.55", "-59.0117, 59.0513, -11.2735, 0.28", "-59.5267, 59.823, -10.5669, 0.55", "-60.9418, 61.9077, -8.72708, 0.28", "-62.3801, 64.0264, -6.85718, 0.55", "-64.767, 67.3592, -3.71883, 0.28", "-65.2748, 68.0747, -3.05027, 0.55", "-66.3906, 69.7412, -1.6432, 0.28", "-66.823, 70.43, -1.09331, 0.55", "-71.9884, 75.1254, 3.78769, 0.55", "-77.8067, 80.6138, 6.71629, 0.55", "-82.677, 86.3763, 10.6694, 0.55", "-86.4076, 93.1148, 14.3063, 0.55", "-91.0619, 99.516, 17.4551, 0.55", "-96.4229, 104.711, 21.5569, 0.55", "-101.191, 109.332, 26.8917, 0.55", "-105.149, 113.167, 33.3865, 0.55", "-109.117, 117.465, 39.5777, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-56.6615, 55.5282, -14.6458, 0.55", "-60.73, 53.9386, -13.8109, 0.55", "-62.841, 53.0444, -13.3888, 0.28", "-64.412, 52.379, -13.0746, 0.55", "-65.7214, 51.8244, -12.8128, 0.28", "-66.6385, 51.436, -12.6294, 0.55", "-69.1674, 50.3648, -12.1237, 0.28", "-70.813, 49.5381, -12.0083, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-155.387, -53.7139, -17.8546, 0.55", "-159.984, -63.7776, -20.8336, 0.55", "-164.254, -74.2583, -22.6258, 0.55", "-167.83, -84.4391, -26.4788, 0.55", "-172.432, -94.6869, -28.7341, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-155.387, -53.7139, -17.8546, 0.55", "-162.066, -57.6138, -27.6702, 0.55", "-168.345, -59.6148, -38.2875, 0.55", "-175.447, -63.3501, -47.8673, 0.55", "-184.883, -65.5604, -55.7564, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-154.374, -48.3523, -16.1543, 0.55", "-159.446, -52.7633, -24.1422, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-154.374, -48.3523, -16.1543, 0.55", "-157.638, -55.5182, -16.1519, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "88.7752, -60.3616, -81.4006, 0.28", "91.7084, -62.1159, -82.5037, 0.28", "93.071, -62.9308, -83.0161, 0.55", "95.6693, -64.4848, -83.9933, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "88.7752, -60.3616, -81.4006, 0.55", "88.5739, -61.1289, -82.673, 0.55", "88.1714, -62.6638, -85.2181, 0.28", "88.0402, -63.1638, -86.0472, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "80.2398, -66.2669, -79.9929, 0.28", "81.9842, -69.5799, -82.2313, 0.28", "82.848, -71.2204, -83.3396, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "80.2398, -66.2669, -79.9929, 0.55", "79.2145, -66.9723, -78.9738, 0.55", "76.3555, -68.9394, -76.132, 0.28", "75.6763, -69.4067, -75.4569, 0.55", "73.8184, -70.6851, -73.6102, 0.28", "72.6208, -71.5091, -72.4198, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.6921, -55.2127, 4.26596, 0.83", "15.7525, -55.5793, 4.22069, 0.83", "16.5915, -60.3745, 3.77314, 0.83", "16.8714, -63.9812, 3.61173, 0.83", "16.8385, -67.4771, 3.7699, 0.83", "16.5725, -72.1401, 4.29845, 0.83", "16.0863, -77.52, 5.07722, 0.83", "15.5149, -83.5313, 6.26077, 0.83", "14.9156, -89.3746, 7.67556, 0.83", "13.7491, -96.5592, 9.16938, 0.83", "13.0672, -99.8622, 9.64068, 0.83", "12.5715, -102.344, 9.83969, 0.83", "11.5382, -107.107, 10.1051, 0.83", "10.7513, -111.367, 10.1284, 0.83", "9.73129, -120.422, 9.26417, 0.83", "9.34066, -125.363, 8.16347, 0.83", "9.03475, -129.911, 6.81954, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.6921, -55.2127, 4.26596, 0.55", "14.5984, -57.6903, 4.63883, 0.55", "13.7912, -59.4799, 5.04756, 0.55", "13.3169, -60.6166, 5.42217, 0.55", "12.6774, -62.3841, 6.1762, 0.55", "11.5262, -65.8689, 7.89101, 0.55", "10.6607, -68.4869, 9.48946, 0.55", "9.99125, -70.5701, 11.0025, 0.55", "9.27635, -72.6638, 12.6915, 0.55", "8.67731, -74.394, 14.1889, 0.28", "8.18723, -75.7931, 15.6322, 0.55", "7.26921, -78.3138, 18.6455, 0.55", "6.63262, -79.8467, 20.681, 0.55", "6.26475, -80.7061, 21.8129, 0.55", "5.76958, -81.7235, 23.0956, 0.83", "4.25093, -84.7549, 26.6835, 0.28", "3.74656, -85.7601, 27.8413, 0.55", "2.8909, -87.5793, 29.8619, 0.28", "2.63191, -88.1371, 30.5286, 0.55", "2.1002, -89.4491, 32.0588, 0.28", "1.79753, -90.1992, 32.8692, 0.55", "0.581715, -92.687, 34.8166, 0.55", "-0.65422, -99.2118, 42.6569, 0.55", "-1.36577, -105.38, 50.8434, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.11186, -38.8408, -10.3313, 0.55", "-4.86302, -39.9838, -13.7663, 0.55", "-5.39541, -40.2564, -14.7426, 0.55", "-6.75622, -40.9448, -17.1209, 0.55", "-9.7997, -42.3256, -22.1472, 0.28", "-10.2662, -42.5176, -22.8559, 0.55", "-12.2392, -43.3987, -25.7122, 0.55", "-15.0471, -44.622, -29.2834, 0.55", "-16.1344, -45.0474, -30.6166, 0.28", "-17.1129, -45.3396, -31.7164, 0.28", "-18.8671, -45.8087, -33.3255, 0.55", "-20.9891, -46.259, -35.3777, 0.28", "-22.9485, -46.4742, -37.3213, 0.55", "-24.4832, -46.4935, -38.7888, 0.55", "-25.5365, -46.4019, -39.8358, 0.55", "-28.6127, -45.9649, -43.0152, 0.55", "-31.8889, -45.2485, -46.2886, 0.55", "-33.2593, -44.867, -47.602, 0.28", "-34.5523, -44.5273, -48.877, 0.55", "-37.1715, -44.0361, -51.4363, 0.28", "-38.054, -43.9006, -52.2879, 0.83", "-39.74, -43.6306, -53.7528, 0.28", "-40.9974, -43.5471, -54.6362, 0.55", "-42.8299, -43.4975, -55.8809, 0.28", "-43.5674, -43.4685, -56.3511, 0.55", "-44.9538, -43.4461, -57.1461, 0.55", "-47.0851, -43.1927, -58.2614, 0.55", "-48.5041, -42.9407, -58.9091, 0.28", "-49.6806, -42.5965, -59.3383, 0.55", "-51.0761, -42.0215, -59.8477, 0.28", "-51.305, -41.9086, -59.9388, 0.55", "-53.3336, -40.8047, -61.134, 0.28", "-54.7691, -39.9667, -62.1595, 0.55", "-56.604, -38.7178, -63.7811, 0.83", "-58.0724, -37.6438, -65.2981, 0.28", "-58.4411, -37.3677, -65.7313, 0.55", "-61.2207, -35.2913, -69.234, 0.28", "-61.6923, -34.9352, -69.9027, 0.55", "-63.0634, -33.7647, -71.9788, 0.28", "-63.4164, -33.4635, -72.5179, 0.55", "-64.3432, -32.6825, -73.8254, 0.28", "-65.0135, -32.1221, -74.7018, 0.55", "-66.5813, -30.8821, -76.3944, 0.28", "-67.5196, -30.2234, -77.3605, 0.55", "-69.5477, -28.9669, -79.3056, 0.28", "-70.153, -28.6306, -79.8752, 0.55", "-71.1087, -28.1881, -80.7315, 0.28", "-71.9295, -27.8175, -81.4137, 0.55", "-73.6621, -27.0783, -82.7201, 0.28", "-74.1881, -26.8693, -83.0955, 0.55", "-78.1487, -25.2417, -85.6907, 0.28", "-79.5737, -24.5712, -86.4717, 0.55", "-82.1607, -23.2545, -87.6958, 0.28", "-83.3372, -22.6152, -88.2104, 0.55", "-86.0689, -21.1755, -89.2358, 0.28", "-87.0794, -20.6936, -89.5697, 0.55", "-90.763, -19.2856, -90.59, 0.28", "-92.294, -18.8901, -91.0049, 0.55", "-94.4694, -18.684, -91.5783, 0.55", "-95.8104, -18.6435, -91.9007, 0.55", "-98.5816, -18.64, -92.3503, 0.28", "-101.336, -18.6699, -92.6239, 0.28", "-103.643, -18.6889, -92.7863, 0.55", "-106.518, -18.4845, -92.6793, 0.28", "-107.971, -18.2192, -92.4392, 0.55", "-111.483, -17.0732, -91.5302, 0.28", "-113.332, -16.1628, -90.6505, 0.55", "-114.542, -15.4095, -89.8358, 0.28", "-115.903, -14.5665, -88.6152, 0.55", "-117.605, -13.4589, -86.8928, 0.28", "-118.252, -13.0733, -86.2482, 0.55", "-121.62, -11.3806, -83.3001, 0.28", "-122.757, -10.854, -82.3188, 0.55", "-125.456, -9.70643, -79.9211, 0.28", "-126.923, -9.1006, -78.6197, 0.55", "-128.13, -8.60474, -77.5524, 0.55", "-129.575, -8.02266, -76.3148, 0.28", "-130.339, -7.72632, -75.7938, 0.55", "-132.916, -6.6482, -74.1987, 0.28", "-134.265, -5.93246, -73.3328, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.11186, -38.8408, -10.3313, 0.55", "-2.64816, -38.886, -11.3325, 0.55", "-2.1622, -38.8102, -12.3211, 0.55", "-1.50263, -38.6182, -13.5166, 0.55", "-0.931545, -38.3726, -14.4616, 0.55", "3.18777, -36.0102, -20.3116, 0.55", "4.09265, -35.3055, -21.6362, 0.55", "5.3872, -34.1034, -23.6178, 0.55", "6.29292, -33.1995, -25.0248, 0.55", "7.18963, -32.2275, -26.364, 0.28", "8.63153, -30.5939, -28.3272, 0.55", "10.8904, -28.0481, -31.0911, 0.28", "11.0488, -27.8891, -31.3979, 0.55", "11.632, -27.3241, -33.7318, 0.28", "11.7709, -27.0714, -35.3821, 0.55", "11.7681, -26.942, -37.1944, 0.55", "11.7353, -26.8777, -40.4607, 0.55", "11.6932, -26.7939, -46.873, 0.55", "11.7454, -26.7729, -51.1806, 0.55", "11.8042, -26.7741, -52.6669, 0.55", "12.4111, -26.6781, -62.4179, 0.55", "12.6817, -26.6011, -65.0474, 0.55", "12.9437, -26.5451, -66.5104, 0.55", "13.8596, -26.4638, -69.8697, 0.55", "16.5736, -26.6261, -77.8202, 0.55", "17.4061, -26.7481, -79.9349, 0.28", "17.9772, -26.8622, -81.1061, 0.55", "18.865, -27.1022, -82.8299, 0.28", "19.2912, -27.27, -83.5148, 0.55", "21.0659, -28.0545, -85.2097, 0.28", "22.808, -29.225, -85.6011, 0.55", "23.8768, -30.0781, -85.7726, 0.28", "24.8883, -31.0392, -85.8181, 0.55", "25.8043, -32.1062, -85.7882, 0.28", "26.2077, -32.6621, -85.7907, 0.55", "27.1667, -34.1298, -85.7287, 0.28", "27.4119, -34.5695, -85.7823, 0.55", "28.7928, -37.0872, -86.2407, 0.28", "29.4522, -38.243, -86.6174, 0.55", "30.9301, -40.6914, -87.7322, 0.28", "31.5055, -41.5848, -88.2567, 0.55", "33.5043, -44.497, -90.1897, 0.28", "33.9922, -45.2033, -90.694, 0.55", "35.4592, -47.4456, -92.375, 0.28", "35.7731, -47.9765, -92.7206, 0.55", "36.5525, -49.3862, -93.6152, 0.28", "37.0049, -50.2003, -94.2226, 0.55", "37.473, -50.9939, -94.8924, 0.55", "38.4093, -52.5775, -96.2155, 0.28", "39.0779, -53.541, -97.1708, 0.55", "41.2233, -55.862, -100.236, 0.28", "42.0534, -56.5888, -101.47, 0.55", "42.6376, -57.041, -102.307, 0.28", "43.2406, -57.4422, -103.143, 0.55", "45.1376, -58.5327, -105.676, 0.28", "46.5974, -59.3841, -107.548, 0.55", "49.1892, -61.051, -110.523, 0.28", "50.0077, -61.568, -111.455, 0.55", "51.638, -62.5074, -113.088, 0.28", "52.1988, -62.8144, -113.583, 0.55", "53.167, -63.3048, -114.212, 0.28", "54.0423, -63.714, -114.692, 0.55", "56.4766, -64.7048, -115.746, 0.28", "59.2771, -65.73, -116.906, 0.28", "60.7159, -66.188, -117.393, 0.28", "62.1457, -66.6038, -117.967, 0.55", "64.2299, -67.1162, -118.812, 0.28", "65.161, -67.3307, -119.167, 0.83", "67.5574, -67.9105, -119.987, 0.28", "68.585, -68.1839, -120.399, 0.55", "73.0596, -69.5502, -122.423, 0.28", "75.2544, -70.2563, -123.613, 0.28", "76.823, -70.7677, -124.582, 0.55", "77.7087, -71.0838, -125.252, 0.55", "80.003, -71.9544, -127.223, 0.28", "82.1219, -72.874, -129.162, 0.55", "84.053, -73.7785, -130.931, 0.28", "85.7687, -74.6236, -132.63, 0.55", "87.1896, -75.3029, -134.024, 0.28", "88.3732, -75.7646, -135.095, 0.55", "91.2709, -76.6991, -137.532, 0.28", "92.7607, -77.171, -138.702, 0.55", "95.0263, -77.8874, -140.375, 0.28", "96.8932, -78.4165, -141.698, 0.55", "101.256, -79.4495, -144.794, 0.28", "102.99, -79.7606, -146.175, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-19.3548, -148.956, 104.817, 0.55", "-18.5308, -158.779, 110.445, 0.55", "-15.2645, -168.839, 114.563, 0.55", "-13.4442, -178.847, 119.599, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-19.3548, -148.956, 104.817, 0.55", "-18.809, -157.085, 111.345, 0.55", "-20.2083, -164.281, 118.778, 0.55", "-22.2557, -169.797, 127.401, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-23.3212, -147.13, 102.62, 0.55", "-23.4566, -153.641, 106.26, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-23.3212, -147.13, 102.62, 0.55", "-24.8532, -154.038, 106.584, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.03475, -129.911, 6.81954, 0.83", "9.74733, -133.287, 7.51148, 0.83", "10.3912, -136.133, 8.33862, 0.83", "11.0312, -138.961, 9.16081, 0.83", "11.639, -141.647, 9.94163, 0.83", "12.5757, -145.786, 11.1449, 0.83", "13.5056, -149.895, 12.3395, 0.83", "14.1937, -152.615, 13.5377, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.03475, -129.911, 6.81954, 0.55", "11.0985, -132.739, 7.61303, 0.55", "12.8405, -134.934, 7.86011, 0.55", "14.1234, -136.556, 7.85944, 0.55", "15.45, -138.462, 7.51146, 0.83", "16.9279, -140.624, 6.80673, 0.55", "18.3735, -142.739, 6.11741, 0.83", "19.9042, -145.032, 5.11339, 0.55", "20.8404, -146.358, 4.41119, 0.83", "23.8338, -150.644, 1.74292, 0.55", "26.0032, -154.014, -0.669468, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.36577, -105.38, 50.8434, 0.55", "-3.82242, -111.119, 55.3636, 0.55", "-7.332, -116.145, 60.0356, 0.55", "-11.3746, -120.451, 64.9876, 0.55", "-16.0851, -123.88, 70.0337, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.36577, -105.38, 50.8434, 0.55", "-2.86466, -114.594, 60.7687, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.1937, -152.615, 13.5377, 0.55", "14.2849, -155.222, 14.2439, 0.55", "14.4718, -158.546, 15.2475, 0.55", "14.6531, -161.685, 16.1781, 0.55", "14.7643, -163.917, 16.8007, 0.55", "14.9326, -167.902, 17.8415, 0.55", "15.6353, -179.098, 20.5243, 0.55", "15.9998, -182.896, 21.2946, 0.55", "16.2965, -185.574, 21.7077, 0.55", "16.7136, -188.631, 21.9442, 0.55", "17.0427, -190.995, 21.9122, 0.55", "18.0227, -196.515, 21.6486, 0.55", "18.624, -200.711, 21.4116, 0.55", "19.0742, -203.463, 21.3517, 0.55", "20.1377, -210.603, 21.5509, 0.55", "20.777, -215.404, 21.8877, 0.55", "21.5556, -221.595, 22.6711, 0.55", "22.4134, -228.616, 24.1115, 0.55", "23.1322, -233.297, 25.4036, 0.55", "23.6072, -236.06, 26.2542, 0.55", "24.0, -238.61, 27.0211, 0.55", "24.5837, -241.836, 27.8537, 0.55", "26.0116, -249.615, 29.3207, 0.55", "26.6885, -252.621, 29.7994, 0.55", "27.368, -255.972, 30.2931, 0.55", "28.353, -261.005, 31.0, 0.55", "28.9244, -264.882, 31.5423, 0.55", "29.267, -268.574, 31.966, 0.55", "29.4393, -272.1, 32.338, 0.55", "29.539, -275.543, 32.7379, 0.55", "29.6298, -277.993, 33.0016, 0.55", "29.8323, -282.0, 33.302, 0.55", "30.0878, -286.813, 33.2881, 0.55", "30.3093, -289.147, 33.1208, 0.55", "30.5594, -291.196, 32.8253, 0.55", "31.2563, -295.053, 32.0782, 0.55", "31.6883, -297.499, 31.5318, 0.55", "32.2296, -300.512, 30.9786, 0.55", "32.5028, -302.634, 30.7002, 0.55", "33.068, -308.157, 30.1692, 0.55", "33.3262, -312.296, 30.043, 0.55", "33.5064, -318.711, 30.343, 0.55", "33.6257, -322.848, 30.9402, 0.55", "33.6872, -327.194, 31.6993, 0.28", "33.6536, -328.942, 32.066, 0.28", "33.4683, -333.189, 33.331, 0.28", "33.1934, -337.114, 34.7981, 0.28", "33.1823, -342.285, 37.3651, 0.28", "35.3058, -353.845, 40.5342, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.1937, -152.615, 13.5377, 0.55", "14.8016, -153.233, 15.3062, 0.55", "15.844, -154.834, 19.0552, 0.55", "16.643, -156.418, 22.347, 0.28", "17.4189, -158.225, 25.9218, 0.55", "17.647, -159.397, 28.2005, 0.28", "17.7552, -161.53, 32.2937, 0.55", "17.4355, -162.68, 34.1786, 0.28", "17.2287, -163.104, 34.9013, 0.28", "16.851, -163.72, 36.159, 0.55", "15.6415, -165.752, 40.967, 0.28", "15.1863, -166.546, 42.9934, 0.55", "14.3613, -168.814, 48.9278, 0.28", "14.0957, -169.925, 52.0872, 0.28", "13.9609, -171.334, 55.9542, 0.55", "14.1887, -173.48, 61.5492, 0.28", "14.2885, -173.759, 62.2795, 0.55", "14.9918, -175.103, 65.788, 0.28", "15.0868, -175.225, 66.093, 0.55", "15.8773, -176.675, 68.8084, 0.28", "16.1895, -177.472, 70.13, 0.55", "18.6209, -183.383, 81.0557, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.0851, -123.88, 70.0337, 0.55", "-18.2225, -126.863, 77.0985, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.0851, -123.88, 70.0337, 0.55", "-22.0428, -131.973, 77.4771, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BP_11e76689bf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.80952, 9.01832, 2.99649, 0.83 ) }
    dend_43 { pt3dadd( -7.66774, 12.0088, 3.57837, 1.11 ) }
    dend_43 { pt3dadd( -9.94257, 13.7708, 3.88105, 0.83 ) }
    dend_43 { pt3dadd( -12.1527, 15.4678, 4.15224, 0.83 ) }
    dend_43 { pt3dadd( -13.4612, 16.4355, 4.30085, 1.11 ) }
    dend_43 { pt3dadd( -17.559, 19.4593, 4.77715, 1.11 ) }
    dend_43 { pt3dadd( -24.8882, 24.6362, 5.61909, 0.83 ) }
    dend_43 { pt3dadd( -27.5286, 26.4302, 5.89712, 0.83 ) }
    dend_43 { pt3dadd( -29.6196, 27.8086, 6.06982, 0.83 ) }
    dend_43 { pt3dadd( -31.6586, 29.1746, 6.2193, 0.83 ) }
    dend_43 { pt3dadd( -33.3184, 30.3005, 6.29996, 0.55 ) }
    dend_43 { pt3dadd( -34.566, 31.0629, 6.38182, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.66908, 6.26983, -6.24424, 0.55 ) }
    dend_28 { pt3dadd( 7.43935, 6.8691, -6.8629, 0.55 ) }
    dend_28 { pt3dadd( 9.04683, 7.02037, -7.6815, 0.83 ) }
    dend_28 { pt3dadd( 11.591, 7.18136, -9.20212, 0.55 ) }
    dend_28 { pt3dadd( 12.8191, 7.25908, -9.93615, 1.38 ) }
    dend_28 { pt3dadd( 15.8387, 7.45015, -11.7409, 0.55 ) }
    dend_28 { pt3dadd( 17.1248, 7.38545, -12.6021, 0.83 ) }
    dend_28 { pt3dadd( 23.7776, 6.19881, -17.4406, 0.55 ) }
    dend_28 { pt3dadd( 24.4212, 6.03924, -17.9729, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.684451, -10.516, 3.24291, 1.11 ) }
    dend_1 { pt3dadd( -0.733406, -14.8354, 4.79141, 1.11 ) }
    dend_1 { pt3dadd( -0.753344, -16.5946, 5.42205, 0.83 ) }
    dend_1 { pt3dadd( -0.779832, -18.9317, 6.2599, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.747018, 9.41598, -1.34806, 1.11 ) }
    dend_0 { pt3dadd( 0.698462, 11.0152, -1.3472, 1.11 ) }
    dend_0 { pt3dadd( 0.582659, 13.6235, -1.2576, 1.38 ) }
    dend_0 { pt3dadd( 0.577769, 13.769, -1.24935, 1.38 ) }
    dend_0 { pt3dadd( 0.614021, 15.5761, -1.09587, 0.83 ) }
    dend_0 { pt3dadd( 0.693299, 17.492, -0.81293, 0.83 ) }
    dend_0 { pt3dadd( 0.874453, 19.6674, -0.189398, 0.83 ) }
    dend_0 { pt3dadd( 1.00694, 20.4992, 0.173872, 0.83 ) }
    dend_0 { pt3dadd( 1.15904, 21.1069, 0.518232, 1.11 ) }
    dend_0 { pt3dadd( 1.65412, 22.5972, 1.44048, 0.55 ) }
    dend_0 { pt3dadd( 2.235, 24.1597, 2.53847, 0.83 ) }
    dend_0 { pt3dadd( 3.07265, 25.7863, 3.84253, 0.55 ) }
    dend_0 { pt3dadd( 3.52749, 26.4706, 4.45784, 0.83 ) }
    dend_0 { pt3dadd( 4.14286, 27.3991, 5.38732, 0.55 ) }
    dend_0 { pt3dadd( 4.87832, 28.5778, 6.61442, 0.55 ) }
    dend_0 { pt3dadd( 5.85892, 30.3429, 8.44337, 0.55 ) }
    dend_0 { pt3dadd( 6.93385, 32.3559, 10.4604, 0.55 ) }
    dend_0 { pt3dadd( 7.55197, 33.6597, 11.908, 0.55 ) }
    dend_0 { pt3dadd( 8.23745, 35.3046, 13.8916, 0.55 ) }
    dend_0 { pt3dadd( 8.37076, 35.6351, 14.3345, 0.83 ) }
    dend_0 { pt3dadd( 8.70141, 36.5083, 15.5692, 0.55 ) }
    dend_0 { pt3dadd( 9.00213, 37.1922, 16.5517, 0.83 ) }
    dend_0 { pt3dadd( 9.65728, 39.0424, 18.8633, 0.55 ) }
    dend_0 { pt3dadd( 9.95789, 39.7197, 19.5737, 0.83 ) }
    dend_0 { pt3dadd( 10.2949, 40.2266, 20.0983, 0.55 ) }
    dend_0 { pt3dadd( 10.6613, 40.6679, 20.5352, 0.83 ) }
    dend_0 { pt3dadd( 11.5222, 41.5012, 21.3901, 0.83 ) }
    dend_0 { pt3dadd( 12.7009, 42.633, 22.3901, 0.83 ) }
    dend_0 { pt3dadd( 13.4521, 43.3764, 22.9058, 0.55 ) }
    dend_0 { pt3dadd( 14.0189, 44.0132, 23.3015, 0.55 ) }
    dend_0 { pt3dadd( 15.5147, 45.6604, 24.3123, 0.83 ) }
    dend_0 { pt3dadd( 16.4963, 46.7174, 24.9187, 0.55 ) }
    dend_0 { pt3dadd( 18.0133, 48.2703, 25.7692, 0.55 ) }
    dend_0 { pt3dadd( 19.4315, 49.5823, 26.4864, 0.55 ) }
    dend_0 { pt3dadd( 20.7164, 50.6992, 27.0906, 0.55 ) }
    dend_0 { pt3dadd( 22.3729, 52.0175, 27.7736, 0.55 ) }
    dend_0 { pt3dadd( 23.4068, 52.6793, 28.158, 0.55 ) }
    dend_0 { pt3dadd( 24.1458, 53.0612, 28.3317, 0.55 ) }
    dend_0 { pt3dadd( 25.1675, 53.3785, 28.482, 0.55 ) }
    dend_0 { pt3dadd( 26.7483, 53.6, 28.5898, 0.55 ) }
    dend_0 { pt3dadd( 27.7539, 53.6156, 28.6237, 0.55 ) }
    dend_0 { pt3dadd( 29.1959, 53.6, 28.7688, 0.55 ) }
    dend_0 { pt3dadd( 31.8638, 53.6552, 29.2734, 0.55 ) }
    dend_0 { pt3dadd( 33.9048, 53.7958, 29.8112, 0.55 ) }
    dend_0 { pt3dadd( 36.0201, 54.051, 30.5068, 0.55 ) }
    dend_0 { pt3dadd( 37.3386, 54.2635, 31.0602, 0.55 ) }
    dend_0 { pt3dadd( 40.6662, 55.1524, 32.7258, 0.55 ) }
    dend_0 { pt3dadd( 42.5727, 55.8477, 33.8669, 0.55 ) }
    dend_0 { pt3dadd( 43.9477, 56.4772, 34.8685, 0.55 ) }
    dend_0 { pt3dadd( 44.7598, 57.0266, 35.5113, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 45.6917, 57.8207, 36.2478, 0.55 ) }
    dend_0 { pt3dadd( 47.3089, 59.3642, 37.3219, 0.55 ) }
    dend_0 { pt3dadd( 47.6977, 59.7344, 37.508, 0.55 ) }
    dend_0 { pt3dadd( 48.8439, 60.7307, 37.9611, 0.55 ) }
    dend_0 { pt3dadd( 49.8893, 61.7786, 38.3706, 0.83 ) }
    dend_0 { pt3dadd( 50.4624, 62.3591, 38.584, 0.55 ) }
    dend_0 { pt3dadd( 51.3241, 63.3457, 38.8643, 0.83 ) }
    dend_0 { pt3dadd( 55.4456, 68.6066, 41.6346, 0.83 ) }
    dend_0 { pt3dadd( 59.042, 74.542, 43.6782, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -34.566, 31.0629, 6.38182, 0.55 ) }
    dend_55 { pt3dadd( -36.2924, 32.2025, 5.35937, 0.55 ) }
    dend_55 { pt3dadd( -38.1698, 33.4417, 4.24756, 0.55 ) }
    dend_55 { pt3dadd( -40.4353, 34.9372, 2.90584, 0.55 ) }
    dend_55 { pt3dadd( -42.3061, 36.172, 1.79795, 0.83 ) }
    dend_55 { pt3dadd( -43.8737, 37.2068, 0.869544, 0.55 ) }
    dend_55 { pt3dadd( -46.7836, 39.1276, -0.853721, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -34.566, 31.0629, 6.38182, 0.55 ) }
    dend_44 { pt3dadd( -37.2662, 31.5606, 6.06861, 0.55 ) }
    dend_44 { pt3dadd( -40.1384, 31.9989, 6.02164, 0.55 ) }
    dend_44 { pt3dadd( -43.3951, 32.4903, 6.04801, 0.55 ) }
    dend_44 { pt3dadd( -48.1101, 33.149, 6.52017, 0.55 ) }
    dend_44 { pt3dadd( -52.0544, 33.584, 7.19655, 0.55 ) }
    dend_44 { pt3dadd( -56.1906, 33.9755, 8.08339, 0.55 ) }
    dend_44 { pt3dadd( -60.1868, 34.0802, 9.37359, 0.55 ) }
    dend_44 { pt3dadd( -63.625, 33.8321, 10.8192, 0.55 ) }
    dend_44 { pt3dadd( -67.907, 33.2188, 13.0834, 0.55 ) }
    dend_44 { pt3dadd( -69.7676, 32.8134, 14.3301, 0.55 ) }
    dend_44 { pt3dadd( -71.7769, 32.3533, 15.7644, 0.55 ) }
    dend_44 { pt3dadd( -75.3214, 31.2715, 18.1307, 0.55 ) }
    dend_44 { pt3dadd( -77.2089, 30.703, 19.0893, 0.55 ) }
    dend_44 { pt3dadd( -79.1858, 30.0463, 20.0814, 0.55 ) }
    dend_44 { pt3dadd( -81.5378, 29.2965, 21.0202, 0.55 ) }
    dend_44 { pt3dadd( -84.0943, 28.5356, 21.9699, 0.55 ) }
    dend_44 { pt3dadd( -87.7431, 27.4409, 23.2448, 0.55 ) }
    dend_44 { pt3dadd( -92.6188, 26.3092, 24.5063, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.4212, 6.03924, -17.9729, 0.55 ) }
    dend_34 { pt3dadd( 27.122, 7.11493, -18.6456, 0.55 ) }
    dend_34 { pt3dadd( 28.71, 7.5949, -19.2375, 0.55 ) }
    dend_34 { pt3dadd( 30.2909, 7.99391, -19.8291, 0.55 ) }
    dend_34 { pt3dadd( 31.3784, 8.22414, -20.2236, 0.55 ) }
    dend_34 { pt3dadd( 32.9731, 8.52715, -20.78, 0.55 ) }
    dend_34 { pt3dadd( 36.2991, 9.07183, -22.0226, 0.55 ) }
    dend_34 { pt3dadd( 40.0931, 9.61438, -23.6743, 0.55 ) }
    dend_34 { pt3dadd( 41.9604, 9.74034, -24.5752, 0.55 ) }
    dend_34 { pt3dadd( 42.9689, 9.77105, -25.1157, 0.55 ) }
    dend_34 { pt3dadd( 44.0767, 9.80073, -25.7524, 0.55 ) }
    dend_34 { pt3dadd( 46.0621, 9.80331, -26.8697, 0.55 ) }
    dend_34 { pt3dadd( 46.7914, 9.75974, -27.2895, 0.55 ) }
    dend_34 { pt3dadd( 49.8823, 9.59945, -29.3064, 0.55 ) }
    dend_34 { pt3dadd( 52.0749, 9.48631, -30.8931, 0.55 ) }
    dend_34 { pt3dadd( 53.3355, 9.43699, -31.8441, 0.55 ) }
    dend_34 { pt3dadd( 54.5946, 9.37772, -32.7895, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 24.4212, 6.03924, -17.9729, 0.83 ) }
    dend_29 { pt3dadd( 26.0308, 7.32467, -18.1337, 0.83 ) }
    dend_29 { pt3dadd( 26.9534, 8.05087, -18.271, 0.55 ) }
    dend_29 { pt3dadd( 28.3141, 9.13093, -18.6035, 0.83 ) }
    dend_29 { pt3dadd( 29.2273, 9.87718, -18.8614, 0.55 ) }
    dend_29 { pt3dadd( 30.4811, 10.9459, -19.2033, 0.83 ) }
    dend_29 { pt3dadd( 31.9816, 12.2729, -19.5595, 0.55 ) }
    dend_29 { pt3dadd( 32.7423, 12.8859, -19.694, 0.55 ) }
    dend_29 { pt3dadd( 34.5187, 14.0636, -19.8253, 0.83 ) }
    dend_29 { pt3dadd( 36.1455, 14.9648, -19.6846, 0.55 ) }
    dend_29 { pt3dadd( 37.0511, 15.4742, -19.5119, 0.83 ) }
    dend_29 { pt3dadd( 38.3976, 16.2955, -19.1065, 0.55 ) }
    dend_29 { pt3dadd( 40.3122, 17.5568, -18.265, 0.55 ) }
    dend_29 { pt3dadd( 42.9818, 19.1859, -16.9225, 0.55 ) }
    dend_29 { pt3dadd( 45.5293, 20.6735, -15.435, 0.55 ) }
    dend_29 { pt3dadd( 47.5483, 21.8356, -14.2133, 0.55 ) }
    dend_29 { pt3dadd( 50.8738, 23.7713, -12.1833, 0.55 ) }
    dend_29 { pt3dadd( 53.2939, 25.272, -10.6533, 0.55 ) }
    dend_29 { pt3dadd( 54.7346, 26.3198, -9.69426, 0.55 ) }
    dend_29 { pt3dadd( 57.3476, 28.5507, -7.95275, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.779832, -18.9317, 6.2599, 0.83 ) }
    dend_11 { pt3dadd( -1.12929, -21.9481, 6.15349, 0.83 ) }
    dend_11 { pt3dadd( -1.46976, -24.8869, 6.04981, 0.83 ) }
    dend_11 { pt3dadd( -1.84989, -28.1681, 5.93406, 0.83 ) }
    dend_11 { pt3dadd( -2.04839, -29.8815, 5.87361, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.779832, -18.9317, 6.2599, 0.55 ) }
    dend_2 { pt3dadd( -0.257979, -20.6182, 7.56455, 0.55 ) }
    dend_2 { pt3dadd( 0.157459, -22.6955, 9.21998, 0.55 ) }
    dend_2 { pt3dadd( 0.265254, -25.442, 11.4325, 0.55 ) }
    dend_2 { pt3dadd( 0.22775, -26.514, 12.3095, 0.83 ) }
    dend_2 { pt3dadd( -0.167692, -29.2634, 14.8196, 0.55 ) }
    dend_2 { pt3dadd( -0.491648, -30.6899, 16.1243, 0.55 ) }
    dend_2 { pt3dadd( -1.1982, -33.4672, 18.7687, 0.83 ) }
    dend_2 { pt3dadd( -1.86085, -35.536, 20.843, 0.55 ) }
    dend_2 { pt3dadd( -2.5525, -37.2513, 22.5044, 0.55 ) }
    dend_2 { pt3dadd( -3.92477, -40.5041, 25.5818, 0.55 ) }
    dend_2 { pt3dadd( -5.01117, -43.0967, 28.0053, 0.55 ) }
    dend_2 { pt3dadd( -5.84544, -45.1726, 29.9831, 0.55 ) }
    dend_2 { pt3dadd( -6.6015, -47.3699, 32.0338, 0.28 ) }
    dend_2 { pt3dadd( -6.8354, -48.2808, 32.8655, 0.55 ) }
    dend_2 { pt3dadd( -7.20925, -49.961, 34.3141, 0.28 ) }
    dend_2 { pt3dadd( -7.37624, -52.5643, 36.2288, 0.55 ) }
    dend_2 { pt3dadd( -10.0801, -61.3449, 42.7358, 0.55 ) }
    dend_2 { pt3dadd( -13.1533, -69.4777, 49.8886, 0.55 ) }
    dend_2 { pt3dadd( -16.0299, -76.1514, 58.4871, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -46.7836, 39.1276, -0.853721, 0.55 ) }
    dend_61 { pt3dadd( -49.6086, 39.6706, 1.03833, 0.55 ) }
    dend_61 { pt3dadd( -50.7779, 39.8495, 1.99895, 0.83 ) }
    dend_61 { pt3dadd( -52.1212, 40.0091, 3.32856, 0.55 ) }
    dend_61 { pt3dadd( -53.1363, 40.1435, 4.44894, 0.83 ) }
    dend_61 { pt3dadd( -55.7996, 40.5984, 7.34527, 0.55 ) }
    dend_61 { pt3dadd( -56.8069, 40.7907, 8.44846, 0.28 ) }
    dend_61 { pt3dadd( -58.4666, 41.1517, 10.4439, 0.55 ) }
    dend_61 { pt3dadd( -60.6951, 41.6496, 13.1077, 0.55 ) }
    dend_61 { pt3dadd( -62.3982, 42.0173, 15.0423, 0.55 ) }
    dend_61 { pt3dadd( -64.6835, 42.4978, 17.5449, 0.28 ) }
    dend_61 { pt3dadd( -65.2874, 42.6177, 18.1143, 0.55 ) }
    dend_61 { pt3dadd( -66.5438, 42.8758, 19.2386, 0.28 ) }
    dend_61 { pt3dadd( -67.4079, 43.0646, 19.9113, 0.55 ) }
    dend_61 { pt3dadd( -69.1927, 43.4162, 21.1207, 0.28 ) }
    dend_61 { pt3dadd( -70.2479, 43.5533, 21.7802, 0.55 ) }
    dend_61 { pt3dadd( -72.1077, 43.6523, 22.9781, 0.28 ) }
    dend_61 { pt3dadd( -73.3628, 43.7043, 23.7371, 0.55 ) }
    dend_61 { pt3dadd( -80.559, 43.8191, 32.0384, 0.55 ) }
    dend_61 { pt3dadd( -86.996, 42.9583, 40.9003, 0.55 ) }
    dend_61 { pt3dadd( -93.1555, 41.064, 49.7987, 0.55 ) }
    dend_61 { pt3dadd( -99.3391, 37.8596, 58.2961, 0.55 ) }
    dend_61 { pt3dadd( -104.186, 35.2159, 67.7945, 0.55 ) }
    dend_61 { pt3dadd( -109.884, 32.9314, 76.9067, 0.55 ) }
    dend_61 { pt3dadd( -115.656, 32.4623, 86.243, 0.55 ) }
    dend_61 { pt3dadd( -121.417, 31.1139, 95.5009, 0.55 ) }
    dend_61 { pt3dadd( -126.937, 30.5202, 104.981, 0.55 ) }
    dend_61 { pt3dadd( -131.923, 29.7972, 114.745, 0.55 ) }
    dend_61 { pt3dadd( -135.817, 27.8664, 124.835, 0.55 ) }
    dend_61 { pt3dadd( -139.784, 26.9663, 135.041, 0.55 ) }
    dend_61 { pt3dadd( -143.937, 24.9472, 145.011, 0.55 ) }
    dend_61 { pt3dadd( -146.783, 22.4971, 155.336, 0.55 ) }
    dend_61 { pt3dadd( -147.736, 20.835, 166.154, 0.55 ) }
    dend_61 { pt3dadd( -148.711, 17.1062, 176.443, 0.55 ) }
    dend_61 { pt3dadd( -148.122, 13.1566, 186.678, 0.55 ) }
    dend_61 { pt3dadd( -148.091, 9.6881, 197.103, 0.55 ) }
    dend_61 { pt3dadd( -149.201, 7.03788, 207.707, 0.55 ) }
    dend_61 { pt3dadd( -152.577, 6.09585, 218.12, 0.55 ) }
    dend_61 { pt3dadd( -155.017, 3.93831, 228.613, 0.55 ) }
    dend_61 { pt3dadd( -155.325, 3.63823, 239.592, 0.55 ) }
    dend_61 { pt3dadd( -157.392, 4.14071, 250.37, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -46.7836, 39.1276, -0.853721, 0.55 ) }
    dend_56 { pt3dadd( -48.152, 39.9109, -2.71523, 0.55 ) }
    dend_56 { pt3dadd( -49.1561, 40.77, -4.75283, 0.55 ) }
    dend_56 { pt3dadd( -50.0726, 41.8116, -6.89254, 0.55 ) }
    dend_56 { pt3dadd( -50.6465, 42.4638, -8.2324, 0.55 ) }
    dend_56 { pt3dadd( -51.6933, 43.6534, -10.6765, 0.83 ) }
    dend_56 { pt3dadd( -52.4592, 44.5238, -12.4646, 0.55 ) }
    dend_56 { pt3dadd( -53.2909, 45.7173, -15.0749, 0.83 ) }
    dend_56 { pt3dadd( -53.5533, 46.5077, -16.5211, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -92.6188, 26.3092, 24.5063, 0.28 ) }
    dend_48 { pt3dadd( -93.5745, 24.5525, 24.194, 0.28 ) }
    dend_48 { pt3dadd( -94.0333, 23.7964, 23.9967, 0.28 ) }
    dend_48 { pt3dadd( -94.6308, 22.7274, 23.6783, 0.55 ) }
    dend_48 { pt3dadd( -95.1233, 21.7878, 23.4063, 0.28 ) }
    dend_48 { pt3dadd( -95.8493, 20.3569, 23.0095, 0.55 ) }
    dend_48 { pt3dadd( -97.8675, 16.1526, 21.9109, 0.28 ) }
    dend_48 { pt3dadd( -98.5286, 14.6776, 21.4085, 0.55 ) }
    dend_48 { pt3dadd( -99.5319, 12.4055, 20.5586, 0.28 ) }
    dend_48 { pt3dadd( -100.109, 11.0462, 19.9893, 0.55 ) }
    dend_48 { pt3dadd( -100.509, 10.1091, 19.5746, 0.28 ) }
    dend_48 { pt3dadd( -100.964, 9.03377, 19.1073, 0.55 ) }
    dend_48 { pt3dadd( -102.339, 5.44699, 17.6342, 0.28 ) }
    dend_48 { pt3dadd( -102.772, 4.36151, 17.1507, 0.55 ) }
    dend_48 { pt3dadd( -103.534, 2.69935, 16.242, 0.28 ) }
    dend_48 { pt3dadd( -104.162, 1.63314, 15.5689, 0.28 ) }
    dend_48 { pt3dadd( -104.725, 0.919872, 15.0932, 0.55 ) }
    dend_48 { pt3dadd( -106.684, -1.08338, 13.8134, 0.28 ) }
    dend_48 { pt3dadd( -107.594, -1.89478, 13.3121, 0.55 ) }
    dend_48 { pt3dadd( -109.821, -3.74442, 12.0562, 0.28 ) }
    dend_48 { pt3dadd( -112.048, -5.38303, 10.9043, 0.28 ) }
    dend_48 { pt3dadd( -114.472, -6.94842, 9.72465, 0.28 ) }
    dend_48 { pt3dadd( -115.581, -7.53915, 9.27374, 0.55 ) }
    dend_48 { pt3dadd( -120.91, -14.0518, 6.16595, 0.55 ) }
    dend_48 { pt3dadd( -126.801, -20.6575, 4.70735, 0.55 ) }
    dend_48 { pt3dadd( -132.602, -26.914, 1.93683, 0.55 ) }
    dend_48 { pt3dadd( -138.571, -32.6146, -1.57597, 0.55 ) }
    dend_48 { pt3dadd( -144.636, -37.6709, -5.83292, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -92.6188, 26.3092, 24.5063, 0.55 ) }
    dend_45 { pt3dadd( -93.4538, 26.2209, 24.748, 0.55 ) }
    dend_45 { pt3dadd( -95.7807, 26.0918, 25.7212, 0.55 ) }
    dend_45 { pt3dadd( -96.6481, 26.0396, 26.1407, 0.55 ) }
    dend_45 { pt3dadd( -98.6773, 25.8688, 27.1812, 0.55 ) }
    dend_45 { pt3dadd( -101.816, 25.5778, 28.621, 0.55 ) }
    dend_45 { pt3dadd( -103.456, 25.4644, 29.3217, 0.28 ) }
    dend_45 { pt3dadd( -106.007, 25.2142, 30.3848, 0.55 ) }
    dend_45 { pt3dadd( -107.903, 24.9639, 31.1227, 0.55 ) }
    dend_45 { pt3dadd( -108.702, 24.8537, 31.4381, 0.28 ) }
    dend_45 { pt3dadd( -113.5, 24.188, 33.3242, 0.55 ) }
    dend_45 { pt3dadd( -115.743, 23.7227, 34.1118, 0.28 ) }
    dend_45 { pt3dadd( -118.784, 23.0145, 35.006, 0.28 ) }
    dend_45 { pt3dadd( -121.425, 22.3816, 35.614, 0.55 ) }
    dend_45 { pt3dadd( -131.698, 22.2252, 39.5694, 0.55 ) }
    dend_45 { pt3dadd( -141.473, 22.2645, 44.633, 0.55 ) }
    dend_45 { pt3dadd( -150.435, 21.7068, 51.0035, 0.55 ) }
    dend_45 { pt3dadd( -159.246, 23.1872, 57.4355, 0.55 ) }
    dend_45 { pt3dadd( -166.49, 25.1039, 65.5014, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -172.099, 28.2206, 74.4472, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 54.5946, 9.37772, -32.7895, 0.55 ) }
    dend_42 { pt3dadd( 58.4536, 10.6128, -35.9908, 0.55 ) }
    dend_42 { pt3dadd( 59.681, 10.9408, -37.0741, 0.55 ) }
    dend_42 { pt3dadd( 61.2216, 11.3026, -38.406, 0.55 ) }
    dend_42 { pt3dadd( 64.0246, 11.9165, -40.9844, 0.55 ) }
    dend_42 { pt3dadd( 66.964, 12.4288, -43.7343, 0.55 ) }
    dend_42 { pt3dadd( 68.4112, 12.5686, -45.0298, 0.83 ) }
    dend_42 { pt3dadd( 69.613, 12.5926, -46.1762, 0.55 ) }
    dend_42 { pt3dadd( 70.5218, 12.5275, -47.1145, 0.83 ) }
    dend_42 { pt3dadd( 72.7453, 12.0557, -49.4905, 0.55 ) }
    dend_42 { pt3dadd( 74.5925, 11.5011, -51.4407, 0.55 ) }
    dend_42 { pt3dadd( 76.7154, 10.8605, -53.5822, 0.55 ) }
    dend_42 { pt3dadd( 79.0741, 10.207, -56.0199, 0.55 ) }
    dend_42 { pt3dadd( 80.6608, 9.72865, -57.6885, 0.55 ) }
    dend_42 { pt3dadd( 82.453, 9.17777, -59.6249, 0.55 ) }
    dend_42 { pt3dadd( 84.0, 8.74275, -61.4072, 0.55 ) }
    dend_42 { pt3dadd( 84.9687, 8.54065, -62.6618, 0.55 ) }
    dend_42 { pt3dadd( 86.2312, 8.11794, -65.2075, 0.55 ) }
    dend_42 { pt3dadd( 86.9322, 7.7943, -66.7958, 0.55 ) }
    dend_42 { pt3dadd( 87.5767, 7.24266, -68.9016, 0.55 ) }
    dend_42 { pt3dadd( 88.5025, 6.18399, -72.452, 0.55 ) }
    dend_42 { pt3dadd( 88.6983, 5.91292, -73.2493, 0.28 ) }
    dend_42 { pt3dadd( 91.2057, 2.51736, -82.9256, 0.28 ) }
    dend_42 { pt3dadd( 92.0274, 1.54912, -85.7666, 0.83 ) }
    dend_42 { pt3dadd( 95.2206, -2.04506, -95.8138, 0.83 ) }
    dend_42 { pt3dadd( 96.8514, -3.89496, -100.455, 0.83 ) }
    dend_42 { pt3dadd( 97.6215, -4.71383, -102.321, 0.55 ) }
    dend_42 { pt3dadd( 98.4857, -5.50985, -104.137, 0.55 ) }
    dend_42 { pt3dadd( 100.775, -7.0048, -107.474, 0.55 ) }
    dend_42 { pt3dadd( 103.186, -8.31336, -110.391, 0.28 ) }
    dend_42 { pt3dadd( 103.878, -8.48882, -110.53, 0.55 ) }
    dend_42 { pt3dadd( 105.376, -8.71229, -110.321, 0.28 ) }
    dend_42 { pt3dadd( 106.293, -8.77093, -110.067, 0.55 ) }
    dend_42 { pt3dadd( 107.247, -8.8356, -109.719, 0.28 ) }
    dend_42 { pt3dadd( 108.385, -8.85036, -109.257, 0.55 ) }
    dend_42 { pt3dadd( 110.087, -8.80295, -108.757, 0.28 ) }
    dend_42 { pt3dadd( 111.457, -8.81202, -108.396, 0.55 ) }
    dend_42 { pt3dadd( 112.969, -8.73525, -108.129, 0.28 ) }
    dend_42 { pt3dadd( 115.03, -8.64463, -107.949, 0.55 ) }
    dend_42 { pt3dadd( 117.341, -8.50532, -107.892, 0.55 ) }
    dend_42 { pt3dadd( 119.375, -8.37401, -107.98, 0.28 ) }
    dend_42 { pt3dadd( 122.193, -8.18414, -108.26, 0.55 ) }
    dend_42 { pt3dadd( 127.07, -7.7804, -109.277, 0.55 ) }
    dend_42 { pt3dadd( 129.223, -7.52036, -109.998, 0.55 ) }
    dend_42 { pt3dadd( 130.148, -7.38145, -110.412, 0.83 ) }
    dend_42 { pt3dadd( 131.914, -7.12259, -111.362, 0.55 ) }
    dend_42 { pt3dadd( 133.138, -6.90218, -112.105, 0.83 ) }
    dend_42 { pt3dadd( 136.423, -6.22693, -114.149, 0.55 ) }
    dend_42 { pt3dadd( 138.443, -5.95864, -115.433, 0.28 ) }
    dend_42 { pt3dadd( 139.296, -5.88744, -115.873, 0.55 ) }
    dend_42 { pt3dadd( 141.643, -5.87721, -116.795, 0.28 ) }
    dend_42 { pt3dadd( 142.47, -5.94193, -117.055, 0.55 ) }
    dend_42 { pt3dadd( 144.176, -6.1505, -117.323, 0.28 ) }
    dend_42 { pt3dadd( 145.918, -6.49402, -117.282, 0.55 ) }
    dend_42 { pt3dadd( 149.435, -7.30297, -116.576, 0.28 ) }
    dend_42 { pt3dadd( 151.057, -7.72637, -116.073, 0.55 ) }
    dend_42 { pt3dadd( 153.478, -8.47645, -115.185, 0.28 ) }
    dend_42 { pt3dadd( 156.531, -9.40024, -113.957, 0.55 ) }
    dend_42 { pt3dadd( 158.736, -10.035, -113.038, 0.55 ) }
    dend_42 { pt3dadd( 162.542, -11.0113, -111.399, 0.28 ) }
    dend_42 { pt3dadd( 164.101, -11.3558, -110.86, 0.55 ) }
    dend_42 { pt3dadd( 166.786, -11.8328, -110.239, 0.28 ) }
    dend_42 { pt3dadd( 169.448, -12.1288, -109.826, 0.55 ) }
    dend_42 { pt3dadd( 170.9, -12.1514, -109.819, 0.28 ) }
    dend_42 { pt3dadd( 172.199, -12.0091, -109.936, 0.55 ) }
    dend_42 { pt3dadd( 175.856, -11.4286, -110.637, 0.28 ) }
    dend_42 { pt3dadd( 178.453, -10.8378, -111.201, 0.28 ) }
    dend_42 { pt3dadd( 180.696, -10.1622, -111.745, 0.55 ) }
    dend_42 { pt3dadd( 183.17, -9.36092, -112.481, 0.28 ) }
    dend_42 { pt3dadd( 183.789, -9.11689, -112.65, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 54.5946, 9.37772, -32.7895, 0.55 ) }
    dend_35 { pt3dadd( 55.4692, 7.39905, -33.7619, 0.55 ) }
    dend_35 { pt3dadd( 56.0613, 5.7124, -34.4731, 0.28 ) }
    dend_35 { pt3dadd( 56.5964, 4.18253, -34.9977, 0.55 ) }
    dend_35 { pt3dadd( 57.892, 0.965052, -36.1371, 0.28 ) }
    dend_35 { pt3dadd( 57.9694, 0.75815, -36.2368, 0.55 ) }
    dend_35 { pt3dadd( 58.4074, -0.331075, -36.8444, 0.28 ) }
    dend_35 { pt3dadd( 58.698, -1.26289, -37.4847, 0.55 ) }
    dend_35 { pt3dadd( 58.9554, -2.25729, -38.2564, 0.28 ) }
    dend_35 { pt3dadd( 59.2736, -3.62702, -39.3664, 0.55 ) }
    dend_35 { pt3dadd( 60.0678, -7.05969, -42.0954, 0.55 ) }
    dend_35 { pt3dadd( 60.7621, -10.2002, -44.6333, 0.55 ) }
    dend_35 { pt3dadd( 61.2952, -12.7147, -46.6651, 0.55 ) }
    dend_35 { pt3dadd( 61.7774, -15.1888, -48.6237, 0.55 ) }
    dend_35 { pt3dadd( 61.8991, -15.8254, -49.1055, 0.28 ) }
    dend_35 { pt3dadd( 62.0439, -16.4961, -49.5691, 0.55 ) }
    dend_35 { pt3dadd( 62.3188, -17.4017, -50.1319, 0.28 ) }
    dend_35 { pt3dadd( 62.9569, -18.9811, -51.0001, 0.55 ) }
    dend_35 { pt3dadd( 64.4013, -21.9063, -52.202, 0.55 ) }
    dend_35 { pt3dadd( 65.1852, -23.4599, -52.7093, 0.28 ) }
    dend_35 { pt3dadd( 65.895, -25.0637, -53.2953, 0.55 ) }
    dend_35 { pt3dadd( 66.7337, -27.3483, -54.2013, 0.28 ) }
    dend_35 { pt3dadd( 67.3002, -29.2171, -54.9759, 0.55 ) }
    dend_35 { pt3dadd( 68.0356, -32.0318, -56.1411, 0.28 ) }
    dend_35 { pt3dadd( 68.8123, -34.9301, -57.2614, 0.55 ) }
    dend_35 { pt3dadd( 69.8894, -39.1519, -58.9239, 0.28 ) }
    dend_35 { pt3dadd( 70.418, -41.4113, -59.8177, 0.55 ) }
    dend_35 { pt3dadd( 70.9262, -43.735, -60.784, 0.28 ) }
    dend_35 { pt3dadd( 71.3593, -45.7993, -61.7539, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 71.9918, -48.3932, -63.1721, 0.55 ) }
    dend_35 { pt3dadd( 72.7273, -50.7642, -64.4289, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.3476, 28.5507, -7.95275, 0.55 ) }
    dend_31 { pt3dadd( 60.1309, 28.6823, -7.15934, 0.55 ) }
    dend_31 { pt3dadd( 62.1809, 28.6617, -6.75643, 0.55 ) }
    dend_31 { pt3dadd( 66.6893, 28.5184, -6.09431, 0.55 ) }
    dend_31 { pt3dadd( 68.7326, 28.3766, -5.96472, 0.55 ) }
    dend_31 { pt3dadd( 70.9643, 28.2452, -5.94302, 0.55 ) }
    dend_31 { pt3dadd( 73.9683, 28.0772, -6.13053, 0.55 ) }
    dend_31 { pt3dadd( 77.1643, 27.759, -6.60237, 0.55 ) }
    dend_31 { pt3dadd( 78.8555, 27.5331, -7.02958, 0.55 ) }
    dend_31 { pt3dadd( 82.3199, 26.9808, -8.34465, 0.55 ) }
    dend_31 { pt3dadd( 83.917, 26.7291, -9.00092, 0.55 ) }
    dend_31 { pt3dadd( 87.6722, 26.0525, -10.6162, 0.55 ) }
    dend_31 { pt3dadd( 90.2247, 25.5019, -11.6703, 0.55 ) }
    dend_31 { pt3dadd( 92.0996, 25.1021, -12.3633, 0.83 ) }
    dend_31 { pt3dadd( 95.1046, 24.3649, -13.4166, 0.55 ) }
    dend_31 { pt3dadd( 98.0557, 23.5299, -14.3124, 0.83 ) }
    dend_31 { pt3dadd( 100.567, 22.7304, -14.9661, 0.55 ) }
    dend_31 { pt3dadd( 102.791, 22.0721, -15.4445, 0.55 ) }
    dend_31 { pt3dadd( 104.047, 21.7635, -15.6617, 0.83 ) }
    dend_31 { pt3dadd( 106.969, 21.0818, -16.0236, 0.28 ) }
    dend_31 { pt3dadd( 108.411, 20.8182, -16.1277, 0.28 ) }
    dend_31 { pt3dadd( 109.82, 20.4638, -16.28, 0.28 ) }
    dend_31 { pt3dadd( 111.338, 20.1181, -16.4591, 0.28 ) }
    dend_31 { pt3dadd( 113.766, 19.5987, -16.8026, 0.28 ) }
    dend_31 { pt3dadd( 114.741, 19.4069, -16.9155, 0.55 ) }
    dend_31 { pt3dadd( 117.056, 19.0159, -16.9721, 0.55 ) }
    dend_31 { pt3dadd( 121.215, 18.315, -16.864, 0.55 ) }
    dend_31 { pt3dadd( 122.367, 18.1018, -16.7794, 0.55 ) }
    dend_31 { pt3dadd( 123.396, 17.8878, -16.6546, 0.83 ) }
    dend_31 { pt3dadd( 125.615, 17.5251, -16.2235, 0.55 ) }
    dend_31 { pt3dadd( 127.542, 17.2196, -15.8195, 0.55 ) }
    dend_31 { pt3dadd( 129.361, 16.9402, -15.4311, 0.55 ) }
    dend_31 { pt3dadd( 130.775, 16.692, -15.1642, 0.55 ) }
    dend_31 { pt3dadd( 133.038, 16.1246, -14.8163, 0.55 ) }
    dend_31 { pt3dadd( 135.736, 15.2007, -14.5023, 0.55 ) }
    dend_31 { pt3dadd( 139.989, 13.2578, -14.2031, 0.55 ) }
    dend_31 { pt3dadd( 142.364, 11.839, -14.113, 0.55 ) }
    dend_31 { pt3dadd( 144.459, 10.2635, -14.0652, 0.28 ) }
    dend_31 { pt3dadd( 145.099, 9.66162, -14.059, 0.55 ) }
    dend_31 { pt3dadd( 146.551, 7.9362, -14.0344, 0.28 ) }
    dend_31 { pt3dadd( 147.849, 5.96703, -13.9757, 0.55 ) }
    dend_31 { pt3dadd( 149.124, 3.50838, -13.7125, 0.55 ) }
    dend_31 { pt3dadd( 149.976, 1.91117, -13.4603, 0.28 ) }
    dend_31 { pt3dadd( 150.284, 1.354, -13.3423, 0.55 ) }
    dend_31 { pt3dadd( 151.076, -0.0222494, -13.0286, 0.28 ) }
    dend_31 { pt3dadd( 152.146, -1.79772, -12.5735, 0.55 ) }
    dend_31 { pt3dadd( 154.895, -6.02879, -11.3583, 0.55 ) }
    dend_31 { pt3dadd( 156.318, -8.14567, -10.6965, 0.55 ) }
    dend_31 { pt3dadd( 157.635, -10.0798, -10.0708, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 57.3476, 28.5507, -7.95275, 0.55 ) }
    dend_30 { pt3dadd( 59.2845, 30.5307, -6.09169, 0.55 ) }
    dend_30 { pt3dadd( 59.9194, 31.1384, -5.53031, 0.55 ) }
    dend_30 { pt3dadd( 62.341, 33.2059, -3.46166, 0.55 ) }
    dend_30 { pt3dadd( 65.0218, 35.5987, -1.14975, 0.55 ) }
    dend_30 { pt3dadd( 68.4243, 38.721, 1.91541, 0.55 ) }
    dend_30 { pt3dadd( 69.3664, 39.5802, 2.75455, 0.55 ) }
    dend_30 { pt3dadd( 71.0725, 41.0393, 4.29123, 0.55 ) }
    dend_30 { pt3dadd( 72.9633, 42.6361, 5.86923, 0.55 ) }
    dend_30 { pt3dadd( 75.1896, 44.4898, 7.55562, 0.55 ) }
    dend_30 { pt3dadd( 77.2805, 46.2731, 9.13092, 0.55 ) }
    dend_30 { pt3dadd( 78.4398, 47.2702, 9.90213, 0.55 ) }
    dend_30 { pt3dadd( 79.7959, 48.4803, 10.7769, 0.55 ) }
    dend_30 { pt3dadd( 81.4777, 50.0076, 11.793, 0.83 ) }
    dend_30 { pt3dadd( 84.3386, 52.3083, 13.1669, 0.55 ) }
    dend_30 { pt3dadd( 86.2753, 53.6973, 14.0391, 0.83 ) }
    dend_30 { pt3dadd( 89.0126, 55.4457, 15.2447, 0.55 ) }
    dend_30 { pt3dadd( 89.8633, 55.9307, 15.634, 0.55 ) }
    dend_30 { pt3dadd( 92.5385, 57.2765, 16.8767, 0.55 ) }
    dend_30 { pt3dadd( 97.4256, 59.2955, 19.1115, 0.55 ) }
    dend_30 { pt3dadd( 101.056, 60.5415, 20.8004, 0.55 ) }
    dend_30 { pt3dadd( 103.925, 61.4459, 22.2811, 0.55 ) }
    dend_30 { pt3dadd( 106.838, 62.2865, 23.9768, 0.55 ) }
    dend_30 { pt3dadd( 107.452, 62.4501, 24.3466, 0.28 ) }
    dend_30 { pt3dadd( 108.703, 62.7344, 25.1253, 0.83 ) }
    dend_30 { pt3dadd( 113.843, 63.851, 28.3964, 0.55 ) }
    dend_30 { pt3dadd( 117.46, 64.595, 30.6198, 0.55 ) }
    dend_30 { pt3dadd( 120.395, 65.3174, 32.4642, 0.55 ) }
    dend_30 { pt3dadd( 122.145, 65.7541, 33.5846, 0.83 ) }
    dend_30 { pt3dadd( 123.519, 66.1178, 34.4563, 0.28 ) }
    dend_30 { pt3dadd( 124.768, 66.4425, 35.2351, 0.55 ) }
    dend_30 { pt3dadd( 133.761, 71.9858, 41.0723, 0.55 ) }
    dend_30 { pt3dadd( 144.163, 75.0738, 46.3584, 0.55 ) }
    dend_30 { pt3dadd( 154.197, 79.6428, 51.2691, 0.55 ) }
    dend_30 { pt3dadd( 162.547, 83.8352, 58.91, 0.55 ) }
    dend_30 { pt3dadd( 170.242, 86.7932, 67.7245, 0.55 ) }
    dend_30 { pt3dadd( 179.903, 86.7994, 74.9593, 0.55 ) }
    dend_30 { pt3dadd( 190.071, 84.7921, 81.1452, 0.55 ) }
    dend_30 { pt3dadd( 201.212, 84.3976, 85.7694, 0.55 ) }
    dend_30 { pt3dadd( 212.031, 84.243, 91.1185, 0.55 ) }
    dend_30 { pt3dadd( 223.366, 84.869, 95.216, 0.55 ) }
    dend_30 { pt3dadd( 234.172, 86.7276, 100.26, 0.55 ) }
    dend_30 { pt3dadd( 244.313, 87.0622, 106.797, 0.55 ) }
    dend_30 { pt3dadd( 254.181, 89.8205, 113.175, 0.55 ) }
    dend_30 { pt3dadd( 262.936, 94.7907, 119.832, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.04839, -29.8815, 5.87361, 1.38 ) }
    dend_13 { pt3dadd( 1.24924, -33.4789, 4.91585, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.04839, -29.8815, 5.87361, 0.55 ) }
    dend_12 { pt3dadd( -3.2012, -31.1391, 6.39726, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.50197, -32.772, 6.97679, 0.55 ) }
    dend_12 { pt3dadd( -5.48741, -33.8386, 7.43811, 0.55 ) }
    dend_12 { pt3dadd( -6.3746, -34.7233, 7.7081, 0.55 ) }
    dend_12 { pt3dadd( -8.37454, -36.5375, 8.14052, 0.55 ) }
    dend_12 { pt3dadd( -9.78546, -37.7405, 8.41157, 0.55 ) }
    dend_12 { pt3dadd( -11.0601, -38.8181, 8.61344, 0.55 ) }
    dend_12 { pt3dadd( -14.3156, -41.4233, 9.13472, 0.55 ) }
    dend_12 { pt3dadd( -18.201, -44.4263, 9.78663, 0.55 ) }
    dend_12 { pt3dadd( -21.2245, -46.6916, 10.2487, 0.55 ) }
    dend_12 { pt3dadd( -23.1705, -48.1837, 10.5207, 0.55 ) }
    dend_12 { pt3dadd( -25.4101, -49.9849, 10.8382, 0.55 ) }
    dend_12 { pt3dadd( -28.2735, -52.6084, 11.2706, 0.55 ) }
    dend_12 { pt3dadd( -29.9747, -54.5078, 11.5515, 0.55 ) }
    dend_12 { pt3dadd( -32.0491, -57.2826, 12.0428, 0.55 ) }
    dend_12 { pt3dadd( -33.7237, -59.914, 12.4863, 0.55 ) }
    dend_12 { pt3dadd( -35.4779, -63.2368, 12.9568, 0.55 ) }
    dend_12 { pt3dadd( -37.1945, -67.1779, 13.4538, 0.55 ) }
    dend_12 { pt3dadd( -38.1985, -70.2262, 13.7673, 0.55 ) }
    dend_12 { pt3dadd( -38.5587, -71.759, 13.969, 0.55 ) }
    dend_12 { pt3dadd( -39.121, -75.3929, 14.5271, 0.55 ) }
    dend_12 { pt3dadd( -39.5534, -78.8036, 15.1035, 0.55 ) }
    dend_12 { pt3dadd( -39.7185, -82.2697, 15.8371, 0.55 ) }
    dend_12 { pt3dadd( -39.7847, -84.2611, 16.3644, 0.55 ) }
    dend_12 { pt3dadd( -39.8579, -90.4324, 18.1815, 0.55 ) }
    dend_12 { pt3dadd( -39.8625, -90.8868, 18.3238, 0.55 ) }
    dend_12 { pt3dadd( -39.8147, -93.6785, 19.2332, 0.55 ) }
    dend_12 { pt3dadd( -39.8853, -98.652, 21.0648, 0.55 ) }
    dend_12 { pt3dadd( -39.9603, -100.309, 21.593, 0.55 ) }
    dend_12 { pt3dadd( -40.3274, -102.874, 22.0476, 0.55 ) }
    dend_12 { pt3dadd( -40.5372, -103.819, 22.0077, 0.55 ) }
    dend_12 { pt3dadd( -41.384, -107.005, 21.2604, 0.55 ) }
    dend_12 { pt3dadd( -42.0205, -109.061, 20.3254, 0.55 ) }
    dend_12 { pt3dadd( -43.2488, -112.314, 18.1825, 0.55 ) }
    dend_12 { pt3dadd( -44.7407, -116.297, 15.2024, 0.28 ) }
    dend_12 { pt3dadd( -45.1549, -117.277, 14.3353, 0.55 ) }
    dend_12 { pt3dadd( -45.8374, -118.757, 12.8964, 0.28 ) }
    dend_12 { pt3dadd( -45.9475, -118.979, 12.6693, 0.55 ) }
    dend_12 { pt3dadd( -46.5103, -120.201, 11.5278, 0.28 ) }
    dend_12 { pt3dadd( -46.6846, -120.617, 11.2424, 0.55 ) }
    dend_12 { pt3dadd( -47.4479, -122.795, 10.171, 0.28 ) }
    dend_12 { pt3dadd( -47.7298, -123.533, 9.82803, 0.55 ) }
    dend_12 { pt3dadd( -48.5153, -125.671, 8.96115, 0.28 ) }
    dend_12 { pt3dadd( -48.7586, -126.345, 8.6892, 0.55 ) }
    dend_12 { pt3dadd( -49.599, -128.669, 7.79451, 0.28 ) }
    dend_12 { pt3dadd( -49.9829, -129.738, 7.37536, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.0299, -76.1514, 58.4871, 0.55 ) }
    dend_10 { pt3dadd( -19.8646, -82.6215, 63.8918, 0.55 ) }
    dend_10 { pt3dadd( -24.6883, -88.3613, 69.3291, 0.55 ) }
    dend_10 { pt3dadd( -29.1408, -94.6852, 74.4243, 0.55 ) }
    dend_10 { pt3dadd( -33.7173, -101.055, 79.3496, 0.55 ) }
    dend_10 { pt3dadd( -37.1462, -108.381, 83.8599, 0.55 ) }
    dend_10 { pt3dadd( -40.5983, -115.402, 88.8163, 0.55 ) }
    dend_10 { pt3dadd( -42.5685, -123.78, 92.2394, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.0299, -76.1514, 58.4871, 0.55 ) }
    dend_3 { pt3dadd( -15.8786, -84.0013, 65.9116, 0.55 ) }
    dend_3 { pt3dadd( -15.2213, -93.0312, 71.8103, 0.55 ) }
    dend_3 { pt3dadd( -16.2972, -102.109, 77.5721, 0.55 ) }
    dend_3 { pt3dadd( -17.943, -111.684, 82.3022, 0.55 ) }
    dend_3 { pt3dadd( -19.1633, -121.227, 87.222, 0.55 ) }
    dend_3 { pt3dadd( -20.3348, -130.394, 92.8234, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -53.5533, 46.5077, -16.5211, 0.83 ) }
    dend_60 { pt3dadd( -53.0579, 48.5031, -18.9291, 0.83 ) }
    dend_60 { pt3dadd( -51.9941, 53.3474, -24.3308, 0.55 ) }
    dend_60 { pt3dadd( -51.531, 55.4485, -26.473, 0.83 ) }
    dend_60 { pt3dadd( -51.0254, 57.7067, -28.5998, 0.55 ) }
    dend_60 { pt3dadd( -50.5036, 60.0519, -30.4358, 0.55 ) }
    dend_60 { pt3dadd( -50.2305, 61.2401, -31.1979, 0.28 ) }
    dend_60 { pt3dadd( -50.0992, 62.0409, -31.4945, 0.55 ) }
    dend_60 { pt3dadd( -49.5727, 64.7502, -31.9, 0.28 ) }
    dend_60 { pt3dadd( -49.3178, 65.9125, -32.0151, 0.55 ) }
    dend_60 { pt3dadd( -48.4794, 69.9638, -32.248, 0.28 ) }
    dend_60 { pt3dadd( -47.8966, 73.1816, -32.3216, 0.55 ) }
    dend_60 { pt3dadd( -47.2246, 78.2182, -32.2748, 0.28 ) }
    dend_60 { pt3dadd( -46.787, 82.6515, -32.1451, 0.28 ) }
    dend_60 { pt3dadd( -46.6841, 85.1366, -32.0211, 0.55 ) }
    dend_60 { pt3dadd( -46.7415, 88.0838, -31.8683, 0.28 ) }
    dend_60 { pt3dadd( -46.8603, 89.4916, -31.7736, 0.55 ) }
    dend_60 { pt3dadd( -47.321, 92.7941, -31.6955, 0.28 ) }
    dend_60 { pt3dadd( -47.775, 94.9884, -31.7547, 0.28 ) }
    dend_60 { pt3dadd( -48.2676, 97.1396, -31.8775, 0.28 ) }
    dend_60 { pt3dadd( -48.4847, 98.276, -31.9479, 0.55 ) }
    dend_60 { pt3dadd( -49.1198, 102.869, -32.3462, 0.28 ) }
    dend_60 { pt3dadd( -49.6939, 108.304, -32.9224, 0.55 ) }
    dend_60 { pt3dadd( -49.8648, 110.182, -33.1293, 0.55 ) }
    dend_60 { pt3dadd( -50.0656, 112.066, -33.2955, 0.55 ) }
    dend_60 { pt3dadd( -50.7038, 116.062, -33.7091, 0.55 ) }
    dend_60 { pt3dadd( -51.2917, 118.681, -34.0336, 0.28 ) }
    dend_60 { pt3dadd( -51.6289, 119.67, -34.1673, 0.55 ) }
    dend_60 { pt3dadd( -52.7296, 122.35, -34.4679, 0.28 ) }
    dend_60 { pt3dadd( -54.0197, 125.193, -34.8992, 0.55 ) }
    dend_60 { pt3dadd( -56.2585, 129.267, -35.6715, 0.28 ) }
    dend_60 { pt3dadd( -57.3792, 130.961, -36.0456, 0.28 ) }
    dend_60 { pt3dadd( -59.2469, 133.297, -36.7992, 0.55 ) }
    dend_60 { pt3dadd( -61.3602, 135.72, -37.7126, 0.28 ) }
    dend_60 { pt3dadd( -61.7507, 136.098, -37.8744, 0.55 ) }
    dend_60 { pt3dadd( -63.1717, 137.298, -38.4377, 0.28 ) }
    dend_60 { pt3dadd( -68.0951, 141.133, -40.2651, 0.55 ) }
    dend_60 { pt3dadd( -74.9988, 145.821, -43.0331, 0.28 ) }
    dend_60 { pt3dadd( -76.283, 146.599, -43.6177, 0.55 ) }
    dend_60 { pt3dadd( -79.8212, 148.593, -45.2744, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -81.3097, 149.407, -46.0097, 0.28 ) }
    dend_60 { pt3dadd( -82.6081, 150.077, -46.7096, 0.55 ) }
    dend_60 { pt3dadd( -86.4523, 151.559, -49.025, 0.28 ) }
    dend_60 { pt3dadd( -89.1849, 152.335, -50.5343, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -53.5533, 46.5077, -16.5211, 0.55 ) }
    dend_57 { pt3dadd( -53.6796, 47.7104, -16.7679, 0.55 ) }
    dend_57 { pt3dadd( -53.7686, 48.4265, -16.846, 0.28 ) }
    dend_57 { pt3dadd( -53.927, 48.9523, -16.7716, 0.55 ) }
    dend_57 { pt3dadd( -54.2907, 50.1598, -16.6007, 0.28 ) }
    dend_57 { pt3dadd( -54.5463, 51.008, -16.4807, 0.55 ) }
    dend_57 { pt3dadd( -55.0173, 52.5715, -16.2595, 0.28 ) }
    dend_57 { pt3dadd( -55.3441, 53.424, -15.9949, 0.55 ) }
    dend_57 { pt3dadd( -56.6615, 55.5282, -14.6458, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -144.636, -37.6709, -5.83292, 0.55 ) }
    dend_52 { pt3dadd( -149.17, -43.0345, -8.92182, 0.55 ) }
    dend_52 { pt3dadd( -152.531, -48.8122, -12.6894, 0.55 ) }
    dend_52 { pt3dadd( -155.387, -53.7139, -17.8546, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -144.636, -37.6709, -5.83292, 0.55 ) }
    dend_49 { pt3dadd( -148.33, -41.2699, -8.78043, 0.55 ) }
    dend_49 { pt3dadd( -151.468, -44.7837, -12.3982, 0.55 ) }
    dend_49 { pt3dadd( -154.374, -48.3523, -16.1543, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -172.099, 28.2206, 74.4472, 0.55 ) }
    dend_47 { pt3dadd( -180.669, 28.2065, 80.822, 0.55 ) }
    dend_47 { pt3dadd( -189.609, 29.7421, 86.4609, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -172.099, 28.2206, 74.4472, 0.55 ) }
    dend_46 { pt3dadd( -180.606, 27.8424, 77.1324, 0.55 ) }
    dend_46 { pt3dadd( -188.816, 28.7257, 80.5271, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 72.7273, -50.7642, -64.4289, 0.28 ) }
    dend_39 { pt3dadd( 80.34, -54.8212, -73.7363, 0.28 ) }
    dend_39 { pt3dadd( 81.0791, -55.2685, -74.549, 0.55 ) }
    dend_39 { pt3dadd( 82.327, -56.0238, -75.9211, 0.28 ) }
    dend_39 { pt3dadd( 83.3777, -56.6597, -77.0765, 0.28 ) }
    dend_39 { pt3dadd( 84.7686, -57.5016, -78.6058, 0.55 ) }
    dend_39 { pt3dadd( 86.6024, -58.6114, -80.6222, 0.55 ) }
    dend_39 { pt3dadd( 88.7752, -60.3616, -81.4006, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 72.7273, -50.7642, -64.4289, 0.55 ) }
    dend_36 { pt3dadd( 73.7637, -52.2148, -65.7895, 0.55 ) }
    dend_36 { pt3dadd( 74.1053, -52.8688, -66.4109, 0.28 ) }
    dend_36 { pt3dadd( 74.6331, -53.9913, -67.5087, 0.55 ) }
    dend_36 { pt3dadd( 75.7958, -56.4642, -69.927, 0.28 ) }
    dend_36 { pt3dadd( 76.6016, -58.178, -71.6029, 0.55 ) }
    dend_36 { pt3dadd( 77.9669, -61.0816, -74.4424, 0.28 ) }
    dend_36 { pt3dadd( 79.5699, -64.6323, -78.2146, 0.28 ) }
    dend_36 { pt3dadd( 80.2398, -66.2669, -79.9929, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 157.635, -10.0798, -10.0708, 0.28 ) }
    dend_33 { pt3dadd( 160.055, -12.5559, -8.52631, 0.28 ) }
    dend_33 { pt3dadd( 163.089, -15.7772, -6.1616, 0.28 ) }
    dend_33 { pt3dadd( 165.0, -17.8526, -4.52451, 0.55 ) }
    dend_33 { pt3dadd( 166.139, -18.9684, -3.53992, 0.28 ) }
    dend_33 { pt3dadd( 166.745, -19.5686, -3.00289, 0.28 ) }
    dend_33 { pt3dadd( 169.751, -22.5434, -0.410811, 0.55 ) }
    dend_33 { pt3dadd( 170.43, -23.1768, 0.281, 0.28 ) }
    dend_33 { pt3dadd( 172.026, -24.8414, 2.24182, 0.55 ) }
    dend_33 { pt3dadd( 173.398, -26.3108, 3.86136, 0.28 ) }
    dend_33 { pt3dadd( 174.596, -27.4996, 5.15443, 0.55 ) }
    dend_33 { pt3dadd( 176.014, -28.9525, 6.57754, 0.55 ) }
    dend_33 { pt3dadd( 178.313, -31.3444, 8.45195, 0.55 ) }
    dend_33 { pt3dadd( 178.87, -31.9389, 8.88375, 0.55 ) }
    dend_33 { pt3dadd( 180.876, -34.1785, 10.4569, 0.28 ) }
    dend_33 { pt3dadd( 181.658, -35.1067, 11.0654, 0.55 ) }
    dend_33 { pt3dadd( 182.745, -36.2796, 11.8459, 0.28 ) }
    dend_33 { pt3dadd( 184.289, -37.9671, 12.8581, 0.55 ) }
    dend_33 { pt3dadd( 186.891, -40.7132, 13.9898, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 157.635, -10.0798, -10.0708, 0.55 ) }
    dend_32 { pt3dadd( 153.823, -10.5154, -10.4335, 0.55 ) }
    dend_32 { pt3dadd( 150.727, -10.8692, -10.7281, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.24924, -33.4789, 4.91585, 0.83 ) }
    dend_17 { pt3dadd( 1.39386, -33.7713, 4.89946, 0.83 ) }
    dend_17 { pt3dadd( 3.0533, -36.354, 4.93727, 0.83 ) }
    dend_17 { pt3dadd( 4.51564, -38.6162, 4.8175, 0.55 ) }
    dend_17 { pt3dadd( 5.68227, -40.4209, 4.72194, 0.55 ) }
    dend_17 { pt3dadd( 8.16199, -44.2568, 4.51884, 0.83 ) }
    dend_17 { pt3dadd( 11.1697, -48.9096, 4.27249, 0.55 ) }
    dend_17 { pt3dadd( 12.8067, -51.344, 4.1961, 0.83 ) }
    dend_17 { pt3dadd( 15.6921, -55.2127, 4.26596, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.24924, -33.4789, 4.91585, 0.55 ) }
    dend_14 { pt3dadd( 0.513536, -34.3835, 2.3437, 0.55 ) }
    dend_14 { pt3dadd( -0.276154, -35.3544, -0.417194, 0.55 ) }
    dend_14 { pt3dadd( -1.20839, -36.5005, -3.67645, 0.55 ) }
    dend_14 { pt3dadd( -2.34043, -37.8924, -7.63424, 0.55 ) }
    dend_14 { pt3dadd( -2.98282, -38.6822, -9.88016, 0.55 ) }
    dend_14 { pt3dadd( -3.11186, -38.8408, -10.3313, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -20.3348, -130.394, 92.8234, 0.55 ) }
    dend_7 { pt3dadd( -20.6796, -139.425, 99.2745, 0.55 ) }
    dend_7 { pt3dadd( -19.3548, -148.956, 104.817, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -20.3348, -130.394, 92.8234, 0.55 ) }
    dend_4 { pt3dadd( -21.6692, -138.899, 97.5359, 0.55 ) }
    dend_4 { pt3dadd( -23.3212, -147.13, 102.62, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -56.6615, 55.5282, -14.6458, 0.28 ) }
    dend_59 { pt3dadd( -57.628, 56.9441, -13.3941, 0.28 ) }
    dend_59 { pt3dadd( -57.9879, 57.4843, -12.858, 0.55 ) }
    dend_59 { pt3dadd( -59.0117, 59.0513, -11.2735, 0.28 ) }
    dend_59 { pt3dadd( -59.5267, 59.823, -10.5669, 0.55 ) }
    dend_59 { pt3dadd( -60.9418, 61.9077, -8.72708, 0.28 ) }
    dend_59 { pt3dadd( -62.3801, 64.0264, -6.85718, 0.55 ) }
    dend_59 { pt3dadd( -64.767, 67.3592, -3.71883, 0.28 ) }
    dend_59 { pt3dadd( -65.2748, 68.0747, -3.05027, 0.55 ) }
    dend_59 { pt3dadd( -66.3906, 69.7412, -1.6432, 0.28 ) }
    dend_59 { pt3dadd( -66.823, 70.43, -1.09331, 0.55 ) }
    dend_59 { pt3dadd( -71.9884, 75.1254, 3.78769, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -77.8067, 80.6138, 6.71629, 0.55 ) }
    dend_59 { pt3dadd( -82.677, 86.3763, 10.6694, 0.55 ) }
    dend_59 { pt3dadd( -86.4076, 93.1148, 14.3063, 0.55 ) }
    dend_59 { pt3dadd( -91.0619, 99.516, 17.4551, 0.55 ) }
    dend_59 { pt3dadd( -96.4229, 104.711, 21.5569, 0.55 ) }
    dend_59 { pt3dadd( -101.191, 109.332, 26.8917, 0.55 ) }
    dend_59 { pt3dadd( -105.149, 113.167, 33.3865, 0.55 ) }
    dend_59 { pt3dadd( -109.117, 117.465, 39.5777, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -56.6615, 55.5282, -14.6458, 0.55 ) }
    dend_58 { pt3dadd( -60.73, 53.9386, -13.8109, 0.55 ) }
    dend_58 { pt3dadd( -62.841, 53.0444, -13.3888, 0.28 ) }
    dend_58 { pt3dadd( -64.412, 52.379, -13.0746, 0.55 ) }
    dend_58 { pt3dadd( -65.7214, 51.8244, -12.8128, 0.28 ) }
    dend_58 { pt3dadd( -66.6385, 51.436, -12.6294, 0.55 ) }
    dend_58 { pt3dadd( -69.1674, 50.3648, -12.1237, 0.28 ) }
    dend_58 { pt3dadd( -70.813, 49.5381, -12.0083, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -155.387, -53.7139, -17.8546, 0.55 ) }
    dend_54 { pt3dadd( -159.984, -63.7776, -20.8336, 0.55 ) }
    dend_54 { pt3dadd( -164.254, -74.2583, -22.6258, 0.55 ) }
    dend_54 { pt3dadd( -167.83, -84.4391, -26.4788, 0.55 ) }
    dend_54 { pt3dadd( -172.432, -94.6869, -28.7341, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -155.387, -53.7139, -17.8546, 0.55 ) }
    dend_53 { pt3dadd( -162.066, -57.6138, -27.6702, 0.55 ) }
    dend_53 { pt3dadd( -168.345, -59.6148, -38.2875, 0.55 ) }
    dend_53 { pt3dadd( -175.447, -63.3501, -47.8673, 0.55 ) }
    dend_53 { pt3dadd( -184.883, -65.5604, -55.7564, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -154.374, -48.3523, -16.1543, 0.55 ) }
    dend_51 { pt3dadd( -159.446, -52.7633, -24.1422, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -154.374, -48.3523, -16.1543, 0.55 ) }
    dend_50 { pt3dadd( -157.638, -55.5182, -16.1519, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 88.7752, -60.3616, -81.4006, 0.28 ) }
    dend_41 { pt3dadd( 91.7084, -62.1159, -82.5037, 0.28 ) }
    dend_41 { pt3dadd( 93.071, -62.9308, -83.0161, 0.55 ) }
    dend_41 { pt3dadd( 95.6693, -64.4848, -83.9933, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 88.7752, -60.3616, -81.4006, 0.55 ) }
    dend_40 { pt3dadd( 88.5739, -61.1289, -82.673, 0.55 ) }
    dend_40 { pt3dadd( 88.1714, -62.6638, -85.2181, 0.28 ) }
    dend_40 { pt3dadd( 88.0402, -63.1638, -86.0472, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 80.2398, -66.2669, -79.9929, 0.28 ) }
    dend_38 { pt3dadd( 81.9842, -69.5799, -82.2313, 0.28 ) }
    dend_38 { pt3dadd( 82.848, -71.2204, -83.3396, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 80.2398, -66.2669, -79.9929, 0.55 ) }
    dend_37 { pt3dadd( 79.2145, -66.9723, -78.9738, 0.55 ) }
    dend_37 { pt3dadd( 76.3555, -68.9394, -76.132, 0.28 ) }
    dend_37 { pt3dadd( 75.6763, -69.4067, -75.4569, 0.55 ) }
    dend_37 { pt3dadd( 73.8184, -70.6851, -73.6102, 0.28 ) }
    dend_37 { pt3dadd( 72.6208, -71.5091, -72.4198, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.6921, -55.2127, 4.26596, 0.83 ) }
    dend_23 { pt3dadd( 15.7525, -55.5793, 4.22069, 0.83 ) }
    dend_23 { pt3dadd( 16.5915, -60.3745, 3.77314, 0.83 ) }
    dend_23 { pt3dadd( 16.8714, -63.9812, 3.61173, 0.83 ) }
    dend_23 { pt3dadd( 16.8385, -67.4771, 3.7699, 0.83 ) }
    dend_23 { pt3dadd( 16.5725, -72.1401, 4.29845, 0.83 ) }
    dend_23 { pt3dadd( 16.0863, -77.52, 5.07722, 0.83 ) }
    dend_23 { pt3dadd( 15.5149, -83.5313, 6.26077, 0.83 ) }
    dend_23 { pt3dadd( 14.9156, -89.3746, 7.67556, 0.83 ) }
    dend_23 { pt3dadd( 13.7491, -96.5592, 9.16938, 0.83 ) }
    dend_23 { pt3dadd( 13.0672, -99.8622, 9.64068, 0.83 ) }
    dend_23 { pt3dadd( 12.5715, -102.344, 9.83969, 0.83 ) }
    dend_23 { pt3dadd( 11.5382, -107.107, 10.1051, 0.83 ) }
    dend_23 { pt3dadd( 10.7513, -111.367, 10.1284, 0.83 ) }
    dend_23 { pt3dadd( 9.73129, -120.422, 9.26417, 0.83 ) }
    dend_23 { pt3dadd( 9.34066, -125.363, 8.16347, 0.83 ) }
    dend_23 { pt3dadd( 9.03475, -129.911, 6.81954, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.6921, -55.2127, 4.26596, 0.55 ) }
    dend_18 { pt3dadd( 14.5984, -57.6903, 4.63883, 0.55 ) }
    dend_18 { pt3dadd( 13.7912, -59.4799, 5.04756, 0.55 ) }
    dend_18 { pt3dadd( 13.3169, -60.6166, 5.42217, 0.55 ) }
    dend_18 { pt3dadd( 12.6774, -62.3841, 6.1762, 0.55 ) }
    dend_18 { pt3dadd( 11.5262, -65.8689, 7.89101, 0.55 ) }
    dend_18 { pt3dadd( 10.6607, -68.4869, 9.48946, 0.55 ) }
    dend_18 { pt3dadd( 9.99125, -70.5701, 11.0025, 0.55 ) }
    dend_18 { pt3dadd( 9.27635, -72.6638, 12.6915, 0.55 ) }
    dend_18 { pt3dadd( 8.67731, -74.394, 14.1889, 0.28 ) }
    dend_18 { pt3dadd( 8.18723, -75.7931, 15.6322, 0.55 ) }
    dend_18 { pt3dadd( 7.26921, -78.3138, 18.6455, 0.55 ) }
    dend_18 { pt3dadd( 6.63262, -79.8467, 20.681, 0.55 ) }
    dend_18 { pt3dadd( 6.26475, -80.7061, 21.8129, 0.55 ) }
    dend_18 { pt3dadd( 5.76958, -81.7235, 23.0956, 0.83 ) }
    dend_18 { pt3dadd( 4.25093, -84.7549, 26.6835, 0.28 ) }
    dend_18 { pt3dadd( 3.74656, -85.7601, 27.8413, 0.55 ) }
    dend_18 { pt3dadd( 2.8909, -87.5793, 29.8619, 0.28 ) }
    dend_18 { pt3dadd( 2.63191, -88.1371, 30.5286, 0.55 ) }
    dend_18 { pt3dadd( 2.1002, -89.4491, 32.0588, 0.28 ) }
    dend_18 { pt3dadd( 1.79753, -90.1992, 32.8692, 0.55 ) }
    dend_18 { pt3dadd( 0.581715, -92.687, 34.8166, 0.55 ) }
    dend_18 { pt3dadd( -0.65422, -99.2118, 42.6569, 0.55 ) }
    dend_18 { pt3dadd( -1.36577, -105.38, 50.8434, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.11186, -38.8408, -10.3313, 0.55 ) }
    dend_16 { pt3dadd( -4.86302, -39.9838, -13.7663, 0.55 ) }
    dend_16 { pt3dadd( -5.39541, -40.2564, -14.7426, 0.55 ) }
    dend_16 { pt3dadd( -6.75622, -40.9448, -17.1209, 0.55 ) }
    dend_16 { pt3dadd( -9.7997, -42.3256, -22.1472, 0.28 ) }
    dend_16 { pt3dadd( -10.2662, -42.5176, -22.8559, 0.55 ) }
    dend_16 { pt3dadd( -12.2392, -43.3987, -25.7122, 0.55 ) }
    dend_16 { pt3dadd( -15.0471, -44.622, -29.2834, 0.55 ) }
    dend_16 { pt3dadd( -16.1344, -45.0474, -30.6166, 0.28 ) }
    dend_16 { pt3dadd( -17.1129, -45.3396, -31.7164, 0.28 ) }
    dend_16 { pt3dadd( -18.8671, -45.8087, -33.3255, 0.55 ) }
    dend_16 { pt3dadd( -20.9891, -46.259, -35.3777, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -22.9485, -46.4742, -37.3213, 0.55 ) }
    dend_16 { pt3dadd( -24.4832, -46.4935, -38.7888, 0.55 ) }
    dend_16 { pt3dadd( -25.5365, -46.4019, -39.8358, 0.55 ) }
    dend_16 { pt3dadd( -28.6127, -45.9649, -43.0152, 0.55 ) }
    dend_16 { pt3dadd( -31.8889, -45.2485, -46.2886, 0.55 ) }
    dend_16 { pt3dadd( -33.2593, -44.867, -47.602, 0.28 ) }
    dend_16 { pt3dadd( -34.5523, -44.5273, -48.877, 0.55 ) }
    dend_16 { pt3dadd( -37.1715, -44.0361, -51.4363, 0.28 ) }
    dend_16 { pt3dadd( -38.054, -43.9006, -52.2879, 0.83 ) }
    dend_16 { pt3dadd( -39.74, -43.6306, -53.7528, 0.28 ) }
    dend_16 { pt3dadd( -40.9974, -43.5471, -54.6362, 0.55 ) }
    dend_16 { pt3dadd( -42.8299, -43.4975, -55.8809, 0.28 ) }
    dend_16 { pt3dadd( -43.5674, -43.4685, -56.3511, 0.55 ) }
    dend_16 { pt3dadd( -44.9538, -43.4461, -57.1461, 0.55 ) }
    dend_16 { pt3dadd( -47.0851, -43.1927, -58.2614, 0.55 ) }
    dend_16 { pt3dadd( -48.5041, -42.9407, -58.9091, 0.28 ) }
    dend_16 { pt3dadd( -49.6806, -42.5965, -59.3383, 0.55 ) }
    dend_16 { pt3dadd( -51.0761, -42.0215, -59.8477, 0.28 ) }
    dend_16 { pt3dadd( -51.305, -41.9086, -59.9388, 0.55 ) }
    dend_16 { pt3dadd( -53.3336, -40.8047, -61.134, 0.28 ) }
    dend_16 { pt3dadd( -54.7691, -39.9667, -62.1595, 0.55 ) }
    dend_16 { pt3dadd( -56.604, -38.7178, -63.7811, 0.83 ) }
    dend_16 { pt3dadd( -58.0724, -37.6438, -65.2981, 0.28 ) }
    dend_16 { pt3dadd( -58.4411, -37.3677, -65.7313, 0.55 ) }
    dend_16 { pt3dadd( -61.2207, -35.2913, -69.234, 0.28 ) }
    dend_16 { pt3dadd( -61.6923, -34.9352, -69.9027, 0.55 ) }
    dend_16 { pt3dadd( -63.0634, -33.7647, -71.9788, 0.28 ) }
    dend_16 { pt3dadd( -63.4164, -33.4635, -72.5179, 0.55 ) }
    dend_16 { pt3dadd( -64.3432, -32.6825, -73.8254, 0.28 ) }
    dend_16 { pt3dadd( -65.0135, -32.1221, -74.7018, 0.55 ) }
    dend_16 { pt3dadd( -66.5813, -30.8821, -76.3944, 0.28 ) }
    dend_16 { pt3dadd( -67.5196, -30.2234, -77.3605, 0.55 ) }
    dend_16 { pt3dadd( -69.5477, -28.9669, -79.3056, 0.28 ) }
    dend_16 { pt3dadd( -70.153, -28.6306, -79.8752, 0.55 ) }
    dend_16 { pt3dadd( -71.1087, -28.1881, -80.7315, 0.28 ) }
    dend_16 { pt3dadd( -71.9295, -27.8175, -81.4137, 0.55 ) }
    dend_16 { pt3dadd( -73.6621, -27.0783, -82.7201, 0.28 ) }
    dend_16 { pt3dadd( -74.1881, -26.8693, -83.0955, 0.55 ) }
    dend_16 { pt3dadd( -78.1487, -25.2417, -85.6907, 0.28 ) }
    dend_16 { pt3dadd( -79.5737, -24.5712, -86.4717, 0.55 ) }
    dend_16 { pt3dadd( -82.1607, -23.2545, -87.6958, 0.28 ) }
    dend_16 { pt3dadd( -83.3372, -22.6152, -88.2104, 0.55 ) }
    dend_16 { pt3dadd( -86.0689, -21.1755, -89.2358, 0.28 ) }
    dend_16 { pt3dadd( -87.0794, -20.6936, -89.5697, 0.55 ) }
    dend_16 { pt3dadd( -90.763, -19.2856, -90.59, 0.28 ) }
    dend_16 { pt3dadd( -92.294, -18.8901, -91.0049, 0.55 ) }
    dend_16 { pt3dadd( -94.4694, -18.684, -91.5783, 0.55 ) }
    dend_16 { pt3dadd( -95.8104, -18.6435, -91.9007, 0.55 ) }
    dend_16 { pt3dadd( -98.5816, -18.64, -92.3503, 0.28 ) }
    dend_16 { pt3dadd( -101.336, -18.6699, -92.6239, 0.28 ) }
    dend_16 { pt3dadd( -103.643, -18.6889, -92.7863, 0.55 ) }
    dend_16 { pt3dadd( -106.518, -18.4845, -92.6793, 0.28 ) }
    dend_16 { pt3dadd( -107.971, -18.2192, -92.4392, 0.55 ) }
    dend_16 { pt3dadd( -111.483, -17.0732, -91.5302, 0.28 ) }
    dend_16 { pt3dadd( -113.332, -16.1628, -90.6505, 0.55 ) }
    dend_16 { pt3dadd( -114.542, -15.4095, -89.8358, 0.28 ) }
    dend_16 { pt3dadd( -115.903, -14.5665, -88.6152, 0.55 ) }
    dend_16 { pt3dadd( -117.605, -13.4589, -86.8928, 0.28 ) }
    dend_16 { pt3dadd( -118.252, -13.0733, -86.2482, 0.55 ) }
    dend_16 { pt3dadd( -121.62, -11.3806, -83.3001, 0.28 ) }
    dend_16 { pt3dadd( -122.757, -10.854, -82.3188, 0.55 ) }
    dend_16 { pt3dadd( -125.456, -9.70643, -79.9211, 0.28 ) }
    dend_16 { pt3dadd( -126.923, -9.1006, -78.6197, 0.55 ) }
    dend_16 { pt3dadd( -128.13, -8.60474, -77.5524, 0.55 ) }
    dend_16 { pt3dadd( -129.575, -8.02266, -76.3148, 0.28 ) }
    dend_16 { pt3dadd( -130.339, -7.72632, -75.7938, 0.55 ) }
    dend_16 { pt3dadd( -132.916, -6.6482, -74.1987, 0.28 ) }
    dend_16 { pt3dadd( -134.265, -5.93246, -73.3328, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.11186, -38.8408, -10.3313, 0.55 ) }
    dend_15 { pt3dadd( -2.64816, -38.886, -11.3325, 0.55 ) }
    dend_15 { pt3dadd( -2.1622, -38.8102, -12.3211, 0.55 ) }
    dend_15 { pt3dadd( -1.50263, -38.6182, -13.5166, 0.55 ) }
    dend_15 { pt3dadd( -0.931545, -38.3726, -14.4616, 0.55 ) }
    dend_15 { pt3dadd( 3.18777, -36.0102, -20.3116, 0.55 ) }
    dend_15 { pt3dadd( 4.09265, -35.3055, -21.6362, 0.55 ) }
    dend_15 { pt3dadd( 5.3872, -34.1034, -23.6178, 0.55 ) }
    dend_15 { pt3dadd( 6.29292, -33.1995, -25.0248, 0.55 ) }
    dend_15 { pt3dadd( 7.18963, -32.2275, -26.364, 0.28 ) }
    dend_15 { pt3dadd( 8.63153, -30.5939, -28.3272, 0.55 ) }
    dend_15 { pt3dadd( 10.8904, -28.0481, -31.0911, 0.28 ) }
    dend_15 { pt3dadd( 11.0488, -27.8891, -31.3979, 0.55 ) }
    dend_15 { pt3dadd( 11.632, -27.3241, -33.7318, 0.28 ) }
    dend_15 { pt3dadd( 11.7709, -27.0714, -35.3821, 0.55 ) }
    dend_15 { pt3dadd( 11.7681, -26.942, -37.1944, 0.55 ) }
    dend_15 { pt3dadd( 11.7353, -26.8777, -40.4607, 0.55 ) }
    dend_15 { pt3dadd( 11.6932, -26.7939, -46.873, 0.55 ) }
    dend_15 { pt3dadd( 11.7454, -26.7729, -51.1806, 0.55 ) }
    dend_15 { pt3dadd( 11.8042, -26.7741, -52.6669, 0.55 ) }
    dend_15 { pt3dadd( 12.4111, -26.6781, -62.4179, 0.55 ) }
    dend_15 { pt3dadd( 12.6817, -26.6011, -65.0474, 0.55 ) }
    dend_15 { pt3dadd( 12.9437, -26.5451, -66.5104, 0.55 ) }
    dend_15 { pt3dadd( 13.8596, -26.4638, -69.8697, 0.55 ) }
    dend_15 { pt3dadd( 16.5736, -26.6261, -77.8202, 0.55 ) }
    dend_15 { pt3dadd( 17.4061, -26.7481, -79.9349, 0.28 ) }
    dend_15 { pt3dadd( 17.9772, -26.8622, -81.1061, 0.55 ) }
    dend_15 { pt3dadd( 18.865, -27.1022, -82.8299, 0.28 ) }
    dend_15 { pt3dadd( 19.2912, -27.27, -83.5148, 0.55 ) }
    dend_15 { pt3dadd( 21.0659, -28.0545, -85.2097, 0.28 ) }
    dend_15 { pt3dadd( 22.808, -29.225, -85.6011, 0.55 ) }
    dend_15 { pt3dadd( 23.8768, -30.0781, -85.7726, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 24.8883, -31.0392, -85.8181, 0.55 ) }
    dend_15 { pt3dadd( 25.8043, -32.1062, -85.7882, 0.28 ) }
    dend_15 { pt3dadd( 26.2077, -32.6621, -85.7907, 0.55 ) }
    dend_15 { pt3dadd( 27.1667, -34.1298, -85.7287, 0.28 ) }
    dend_15 { pt3dadd( 27.4119, -34.5695, -85.7823, 0.55 ) }
    dend_15 { pt3dadd( 28.7928, -37.0872, -86.2407, 0.28 ) }
    dend_15 { pt3dadd( 29.4522, -38.243, -86.6174, 0.55 ) }
    dend_15 { pt3dadd( 30.9301, -40.6914, -87.7322, 0.28 ) }
    dend_15 { pt3dadd( 31.5055, -41.5848, -88.2567, 0.55 ) }
    dend_15 { pt3dadd( 33.5043, -44.497, -90.1897, 0.28 ) }
    dend_15 { pt3dadd( 33.9922, -45.2033, -90.694, 0.55 ) }
    dend_15 { pt3dadd( 35.4592, -47.4456, -92.375, 0.28 ) }
    dend_15 { pt3dadd( 35.7731, -47.9765, -92.7206, 0.55 ) }
    dend_15 { pt3dadd( 36.5525, -49.3862, -93.6152, 0.28 ) }
    dend_15 { pt3dadd( 37.0049, -50.2003, -94.2226, 0.55 ) }
    dend_15 { pt3dadd( 37.473, -50.9939, -94.8924, 0.55 ) }
    dend_15 { pt3dadd( 38.4093, -52.5775, -96.2155, 0.28 ) }
    dend_15 { pt3dadd( 39.0779, -53.541, -97.1708, 0.55 ) }
    dend_15 { pt3dadd( 41.2233, -55.862, -100.236, 0.28 ) }
    dend_15 { pt3dadd( 42.0534, -56.5888, -101.47, 0.55 ) }
    dend_15 { pt3dadd( 42.6376, -57.041, -102.307, 0.28 ) }
    dend_15 { pt3dadd( 43.2406, -57.4422, -103.143, 0.55 ) }
    dend_15 { pt3dadd( 45.1376, -58.5327, -105.676, 0.28 ) }
    dend_15 { pt3dadd( 46.5974, -59.3841, -107.548, 0.55 ) }
    dend_15 { pt3dadd( 49.1892, -61.051, -110.523, 0.28 ) }
    dend_15 { pt3dadd( 50.0077, -61.568, -111.455, 0.55 ) }
    dend_15 { pt3dadd( 51.638, -62.5074, -113.088, 0.28 ) }
    dend_15 { pt3dadd( 52.1988, -62.8144, -113.583, 0.55 ) }
    dend_15 { pt3dadd( 53.167, -63.3048, -114.212, 0.28 ) }
    dend_15 { pt3dadd( 54.0423, -63.714, -114.692, 0.55 ) }
    dend_15 { pt3dadd( 56.4766, -64.7048, -115.746, 0.28 ) }
    dend_15 { pt3dadd( 59.2771, -65.73, -116.906, 0.28 ) }
    dend_15 { pt3dadd( 60.7159, -66.188, -117.393, 0.28 ) }
    dend_15 { pt3dadd( 62.1457, -66.6038, -117.967, 0.55 ) }
    dend_15 { pt3dadd( 64.2299, -67.1162, -118.812, 0.28 ) }
    dend_15 { pt3dadd( 65.161, -67.3307, -119.167, 0.83 ) }
    dend_15 { pt3dadd( 67.5574, -67.9105, -119.987, 0.28 ) }
    dend_15 { pt3dadd( 68.585, -68.1839, -120.399, 0.55 ) }
    dend_15 { pt3dadd( 73.0596, -69.5502, -122.423, 0.28 ) }
    dend_15 { pt3dadd( 75.2544, -70.2563, -123.613, 0.28 ) }
    dend_15 { pt3dadd( 76.823, -70.7677, -124.582, 0.55 ) }
    dend_15 { pt3dadd( 77.7087, -71.0838, -125.252, 0.55 ) }
    dend_15 { pt3dadd( 80.003, -71.9544, -127.223, 0.28 ) }
    dend_15 { pt3dadd( 82.1219, -72.874, -129.162, 0.55 ) }
    dend_15 { pt3dadd( 84.053, -73.7785, -130.931, 0.28 ) }
    dend_15 { pt3dadd( 85.7687, -74.6236, -132.63, 0.55 ) }
    dend_15 { pt3dadd( 87.1896, -75.3029, -134.024, 0.28 ) }
    dend_15 { pt3dadd( 88.3732, -75.7646, -135.095, 0.55 ) }
    dend_15 { pt3dadd( 91.2709, -76.6991, -137.532, 0.28 ) }
    dend_15 { pt3dadd( 92.7607, -77.171, -138.702, 0.55 ) }
    dend_15 { pt3dadd( 95.0263, -77.8874, -140.375, 0.28 ) }
    dend_15 { pt3dadd( 96.8932, -78.4165, -141.698, 0.55 ) }
    dend_15 { pt3dadd( 101.256, -79.4495, -144.794, 0.28 ) }
    dend_15 { pt3dadd( 102.99, -79.7606, -146.175, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -19.3548, -148.956, 104.817, 0.55 ) }
    dend_9 { pt3dadd( -18.5308, -158.779, 110.445, 0.55 ) }
    dend_9 { pt3dadd( -15.2645, -168.839, 114.563, 0.55 ) }
    dend_9 { pt3dadd( -13.4442, -178.847, 119.599, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -19.3548, -148.956, 104.817, 0.55 ) }
    dend_8 { pt3dadd( -18.809, -157.085, 111.345, 0.55 ) }
    dend_8 { pt3dadd( -20.2083, -164.281, 118.778, 0.55 ) }
    dend_8 { pt3dadd( -22.2557, -169.797, 127.401, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -23.3212, -147.13, 102.62, 0.55 ) }
    dend_6 { pt3dadd( -23.4566, -153.641, 106.26, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -23.3212, -147.13, 102.62, 0.55 ) }
    dend_5 { pt3dadd( -24.8532, -154.038, 106.584, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.03475, -129.911, 6.81954, 0.83 ) }
    dend_25 { pt3dadd( 9.74733, -133.287, 7.51148, 0.83 ) }
    dend_25 { pt3dadd( 10.3912, -136.133, 8.33862, 0.83 ) }
    dend_25 { pt3dadd( 11.0312, -138.961, 9.16081, 0.83 ) }
    dend_25 { pt3dadd( 11.639, -141.647, 9.94163, 0.83 ) }
    dend_25 { pt3dadd( 12.5757, -145.786, 11.1449, 0.83 ) }
    dend_25 { pt3dadd( 13.5056, -149.895, 12.3395, 0.83 ) }
    dend_25 { pt3dadd( 14.1937, -152.615, 13.5377, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.03475, -129.911, 6.81954, 0.55 ) }
    dend_24 { pt3dadd( 11.0985, -132.739, 7.61303, 0.55 ) }
    dend_24 { pt3dadd( 12.8405, -134.934, 7.86011, 0.55 ) }
    dend_24 { pt3dadd( 14.1234, -136.556, 7.85944, 0.55 ) }
    dend_24 { pt3dadd( 15.45, -138.462, 7.51146, 0.83 ) }
    dend_24 { pt3dadd( 16.9279, -140.624, 6.80673, 0.55 ) }
    dend_24 { pt3dadd( 18.3735, -142.739, 6.11741, 0.83 ) }
    dend_24 { pt3dadd( 19.9042, -145.032, 5.11339, 0.55 ) }
    dend_24 { pt3dadd( 20.8404, -146.358, 4.41119, 0.83 ) }
    dend_24 { pt3dadd( 23.8338, -150.644, 1.74292, 0.55 ) }
    dend_24 { pt3dadd( 26.0032, -154.014, -0.669468, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.36577, -105.38, 50.8434, 0.55 ) }
    dend_20 { pt3dadd( -3.82242, -111.119, 55.3636, 0.55 ) }
    dend_20 { pt3dadd( -7.332, -116.145, 60.0356, 0.55 ) }
    dend_20 { pt3dadd( -11.3746, -120.451, 64.9876, 0.55 ) }
    dend_20 { pt3dadd( -16.0851, -123.88, 70.0337, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.36577, -105.38, 50.8434, 0.55 ) }
    dend_19 { pt3dadd( -2.86466, -114.594, 60.7687, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.1937, -152.615, 13.5377, 0.55 ) }
    dend_27 { pt3dadd( 14.2849, -155.222, 14.2439, 0.55 ) }
    dend_27 { pt3dadd( 14.4718, -158.546, 15.2475, 0.55 ) }
    dend_27 { pt3dadd( 14.6531, -161.685, 16.1781, 0.55 ) }
    dend_27 { pt3dadd( 14.7643, -163.917, 16.8007, 0.55 ) }
    dend_27 { pt3dadd( 14.9326, -167.902, 17.8415, 0.55 ) }
    dend_27 { pt3dadd( 15.6353, -179.098, 20.5243, 0.55 ) }
    dend_27 { pt3dadd( 15.9998, -182.896, 21.2946, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 16.2965, -185.574, 21.7077, 0.55 ) }
    dend_27 { pt3dadd( 16.7136, -188.631, 21.9442, 0.55 ) }
    dend_27 { pt3dadd( 17.0427, -190.995, 21.9122, 0.55 ) }
    dend_27 { pt3dadd( 18.0227, -196.515, 21.6486, 0.55 ) }
    dend_27 { pt3dadd( 18.624, -200.711, 21.4116, 0.55 ) }
    dend_27 { pt3dadd( 19.0742, -203.463, 21.3517, 0.55 ) }
    dend_27 { pt3dadd( 20.1377, -210.603, 21.5509, 0.55 ) }
    dend_27 { pt3dadd( 20.777, -215.404, 21.8877, 0.55 ) }
    dend_27 { pt3dadd( 21.5556, -221.595, 22.6711, 0.55 ) }
    dend_27 { pt3dadd( 22.4134, -228.616, 24.1115, 0.55 ) }
    dend_27 { pt3dadd( 23.1322, -233.297, 25.4036, 0.55 ) }
    dend_27 { pt3dadd( 23.6072, -236.06, 26.2542, 0.55 ) }
    dend_27 { pt3dadd( 24.0, -238.61, 27.0211, 0.55 ) }
    dend_27 { pt3dadd( 24.5837, -241.836, 27.8537, 0.55 ) }
    dend_27 { pt3dadd( 26.0116, -249.615, 29.3207, 0.55 ) }
    dend_27 { pt3dadd( 26.6885, -252.621, 29.7994, 0.55 ) }
    dend_27 { pt3dadd( 27.368, -255.972, 30.2931, 0.55 ) }
    dend_27 { pt3dadd( 28.353, -261.005, 31.0, 0.55 ) }
    dend_27 { pt3dadd( 28.9244, -264.882, 31.5423, 0.55 ) }
    dend_27 { pt3dadd( 29.267, -268.574, 31.966, 0.55 ) }
    dend_27 { pt3dadd( 29.4393, -272.1, 32.338, 0.55 ) }
    dend_27 { pt3dadd( 29.539, -275.543, 32.7379, 0.55 ) }
    dend_27 { pt3dadd( 29.6298, -277.993, 33.0016, 0.55 ) }
    dend_27 { pt3dadd( 29.8323, -282.0, 33.302, 0.55 ) }
    dend_27 { pt3dadd( 30.0878, -286.813, 33.2881, 0.55 ) }
    dend_27 { pt3dadd( 30.3093, -289.147, 33.1208, 0.55 ) }
    dend_27 { pt3dadd( 30.5594, -291.196, 32.8253, 0.55 ) }
    dend_27 { pt3dadd( 31.2563, -295.053, 32.0782, 0.55 ) }
    dend_27 { pt3dadd( 31.6883, -297.499, 31.5318, 0.55 ) }
    dend_27 { pt3dadd( 32.2296, -300.512, 30.9786, 0.55 ) }
    dend_27 { pt3dadd( 32.5028, -302.634, 30.7002, 0.55 ) }
    dend_27 { pt3dadd( 33.068, -308.157, 30.1692, 0.55 ) }
    dend_27 { pt3dadd( 33.3262, -312.296, 30.043, 0.55 ) }
    dend_27 { pt3dadd( 33.5064, -318.711, 30.343, 0.55 ) }
    dend_27 { pt3dadd( 33.6257, -322.848, 30.9402, 0.55 ) }
    dend_27 { pt3dadd( 33.6872, -327.194, 31.6993, 0.28 ) }
    dend_27 { pt3dadd( 33.6536, -328.942, 32.066, 0.28 ) }
    dend_27 { pt3dadd( 33.4683, -333.189, 33.331, 0.28 ) }
    dend_27 { pt3dadd( 33.1934, -337.114, 34.7981, 0.28 ) }
    dend_27 { pt3dadd( 33.1823, -342.285, 37.3651, 0.28 ) }
    dend_27 { pt3dadd( 35.3058, -353.845, 40.5342, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.1937, -152.615, 13.5377, 0.55 ) }
    dend_26 { pt3dadd( 14.8016, -153.233, 15.3062, 0.55 ) }
    dend_26 { pt3dadd( 15.844, -154.834, 19.0552, 0.55 ) }
    dend_26 { pt3dadd( 16.643, -156.418, 22.347, 0.28 ) }
    dend_26 { pt3dadd( 17.4189, -158.225, 25.9218, 0.55 ) }
    dend_26 { pt3dadd( 17.647, -159.397, 28.2005, 0.28 ) }
    dend_26 { pt3dadd( 17.7552, -161.53, 32.2937, 0.55 ) }
    dend_26 { pt3dadd( 17.4355, -162.68, 34.1786, 0.28 ) }
    dend_26 { pt3dadd( 17.2287, -163.104, 34.9013, 0.28 ) }
    dend_26 { pt3dadd( 16.851, -163.72, 36.159, 0.55 ) }
    dend_26 { pt3dadd( 15.6415, -165.752, 40.967, 0.28 ) }
    dend_26 { pt3dadd( 15.1863, -166.546, 42.9934, 0.55 ) }
    dend_26 { pt3dadd( 14.3613, -168.814, 48.9278, 0.28 ) }
    dend_26 { pt3dadd( 14.0957, -169.925, 52.0872, 0.28 ) }
    dend_26 { pt3dadd( 13.9609, -171.334, 55.9542, 0.55 ) }
    dend_26 { pt3dadd( 14.1887, -173.48, 61.5492, 0.28 ) }
    dend_26 { pt3dadd( 14.2885, -173.759, 62.2795, 0.55 ) }
    dend_26 { pt3dadd( 14.9918, -175.103, 65.788, 0.28 ) }
    dend_26 { pt3dadd( 15.0868, -175.225, 66.093, 0.55 ) }
    dend_26 { pt3dadd( 15.8773, -176.675, 68.8084, 0.28 ) }
    dend_26 { pt3dadd( 16.1895, -177.472, 70.13, 0.55 ) }
    dend_26 { pt3dadd( 18.6209, -183.383, 81.0557, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.0851, -123.88, 70.0337, 0.55 ) }
    dend_22 { pt3dadd( -18.2225, -126.863, 77.0985, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.0851, -123.88, 70.0337, 0.55 ) }
    dend_21 { pt3dadd( -22.0428, -131.973, 77.4771, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BP_11e76689bf_0_0


