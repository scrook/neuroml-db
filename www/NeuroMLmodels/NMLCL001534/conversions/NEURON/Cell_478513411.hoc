// Cell: Cell_478513411
/*
{
  "id" : "Cell_478513411",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "441.207, 380.952, 31.92, 13.795", "448.105, 380.952, 31.92, 13.795", "455.002, 380.952, 31.92, 13.795" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "448.104, 380.952, 31.92, 1.0", "453.946, 394.768, 31.92, 1.0", "459.787, 408.584, 31.92, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "452.437, 376.882, 33.049, 1.3966", "453.2, 376.043, 33.8444, 0.5658", "453.818, 375.108, 34.1897, 0.4764", "454.516, 374.225, 34.6066, 0.4506", "455.298, 373.451, 35.1044, 0.4246", "455.985, 372.63, 35.6787, 0.4686", "456.545, 371.713, 36.276, 0.5364", "457.107, 370.744, 36.8004, 0.5614", "457.641, 369.741, 37.2176, 0.5994", "458.314, 368.844, 37.436, 0.6364", "458.983, 367.944, 37.4889, 0.6966", "459.616, 366.996, 37.5222, 0.7232", "460.349, 366.134, 37.6079, 0.682", "461.278, 365.479, 37.732, 0.5902", "462.319, 365.03, 37.9179, 0.5044", "463.388, 364.655, 38.1721, 0.4888", "464.515, 364.498, 38.3944, 0.5042", "465.649, 364.448, 38.6294, 0.503", "466.752, 364.315, 38.9211, 0.4868", "467.835, 363.992, 39.2123, 0.4832", "468.925, 363.651, 39.4271, 0.483", "470.022, 363.339, 39.6214, 0.476", "471.139, 363.118, 39.8068, 0.4838", "472.281, 363.067, 39.947, 0.5358", "473.382, 362.869, 40.1162, 0.557", "474.48, 362.579, 40.276, 0.511", "475.393, 361.908, 40.3749, 0.4182", "476.119, 361.062, 40.3416, 0.3672", "476.673, 360.073, 40.2514, 0.3578", "477.414, 359.207, 40.1789, 0.411", "478.015, 358.273, 40.2055, 0.4886", "478.845, 357.5, 40.25, 0.5638", "479.795, 356.904, 40.2128, 0.5786", "480.846, 356.481, 40.1352, 0.5184", "481.951, 356.19, 40.0716, 0.4228", "483.038, 355.864, 40.063, 0.3238", "484.12, 355.498, 40.0702, 0.2648", "485.134, 355.121, 39.9616, 0.2596", "486.094, 354.514, 39.9204, 0.3068", "487.043, 353.882, 39.9358, 0.377", "487.957, 353.204, 39.9946, 0.4316", "488.956, 352.698, 40.117, 0.4798", "490.035, 352.322, 40.1932, 0.5086", "491.085, 351.929, 40.1626, 0.5246", "492.095, 351.398, 40.1184, 0.4806", "493.161, 351.03, 40.1198, 0.4288", "494.257, 350.78, 40.0179, 0.3878", "495.35, 350.749, 39.7958, 0.4096", "496.489, 350.742, 39.6553, 0.4356", "497.628, 350.698, 39.5763, 0.457", "498.753, 350.493, 39.4901, 0.4664", "499.825, 350.096, 39.3898, 0.5214", "500.84, 349.568, 39.2815, 0.5042", "501.754, 348.888, 39.1289, 0.4848", "502.643, 348.241, 38.8578, 0.483", "503.491, 347.61, 38.4756, 0.4762", "504.352, 346.908, 38.0929, 0.4342", "505.303, 346.304, 37.8913, 0.3732", "506.004, 345.509, 37.9061, 0.3632", "506.631, 344.645, 38.0573, 0.3812", "507.388, 343.787, 38.1374, 0.5074", "507.878, 342.804, 38.0027, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "452.864, 377.535, 29.818, 1.3486", "453.926, 377.133, 29.6783, 0.5526", "454.985, 376.709, 29.6243, 0.464", "456.016, 376.267, 29.5232, 0.439", "456.95, 375.621, 29.4504, 0.4048", "457.648, 374.742, 29.5014, 0.3526", "458.17, 373.744, 29.6568, 0.3478", "458.395, 372.651, 29.906, 0.3854", "458.146, 371.561, 30.1983, 0.4688", "457.771, 370.482, 30.4576, 0.5032", "457.427, 369.392, 30.6446, 0.5082", "457.285, 368.268, 30.7854, 0.4578", "457.262, 367.159, 30.9089, 0.4354", "457.287, 366.042, 30.9837, 0.4324", "457.454, 364.938, 30.8412, 0.4504", "457.705, 363.974, 30.4077, 0.4756", "458.1, 363.094, 29.7419, 0.5016", "458.628, 362.197, 28.9713, 0.5276", "459.251, 361.258, 28.257, 0.4932", "460.114, 360.512, 27.6815, 0.4632", "461.135, 360.001, 27.2513, 0.4166", "462.22, 359.64, 26.916, 0.428", "463.319, 359.47, 26.5557, 0.4108", "464.455, 359.446, 26.1988, 0.407", "465.597, 359.445, 25.8494, 0.3644", "466.696, 359.443, 25.4166, 0.3128", "467.699, 359.433, 24.8523, 0.4616", "468.802, 359.359, 24.308, 0.5256", "469.756, 358.765, 23.9679, 0.4802", "470.586, 357.98, 23.736, 0.3914", "471.313, 357.11, 23.5075, 0.34", "472.032, 356.22, 23.3358, 0.3724", "472.767, 355.345, 23.2068, 0.4462", "473.454, 354.505, 22.9339, 0.5022", "474.153, 353.686, 22.5359, 0.5084", "474.711, 352.69, 22.1863, 0.485", "475.326, 351.726, 21.8985, 0.483", "475.707, 350.667, 21.6072, 0.5538", "475.981, 349.562, 21.4432, 0.6076", "475.959, 348.43, 21.2907, 0.6352", "475.695, 347.326, 21.1473, 0.5598", "475.718, 346.184, 21.0678, 0.5338" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "451.886, 376.101, 38.9634, 0.4512", "452.525, 375.285, 39.8479, 0.4768", "453.258, 374.531, 40.2578, 0.5078", "454.279, 374.106, 40.6216, 0.5372", "455.308, 373.681, 40.8727, 0.5592", "456.22, 373.045, 40.962, 0.502", "457.169, 372.512, 40.8895, 0.4258", "458.126, 371.954, 40.8162, 0.361", "459.107, 371.535, 40.9259, 0.4646", "460.154, 371.193, 41.1348, 0.5648", "461.239, 370.895, 41.3286, 0.4968", "462.301, 370.647, 41.6452, 0.434", "463.319, 370.293, 42.1112, 0.5808", "464.24, 369.764, 42.66, 0.5184", "465.044, 369.227, 43.2989, 0.416", "465.989, 368.835, 43.9354, 0.357", "466.788, 368.092, 44.399, 0.533", "467.718, 367.615, 44.5315, 0.6144", "468.627, 367.118, 44.35, 0.5972", "469.342, 366.29, 44.0322, 0.5624", "470.13, 365.476, 43.6856, 0.6004", "470.816, 364.577, 43.3597, 0.614", "471.275, 363.543, 43.1634, 0.5098", "471.568, 362.464, 43.1385, 0.5212", "471.544, 361.336, 43.1978, 0.5158", "471.616, 360.215, 43.1634, 0.5198", "471.837, 359.105, 43.0559, 0.4782", "472.576, 358.242, 42.9268, 0.4372", "473.355, 357.411, 42.8299, 0.3874", "473.942, 356.431, 42.7, 0.403", "474.292, 355.379, 42.4872, 0.4498", "474.586, 354.276, 42.2962, 0.523", "474.65, 353.134, 42.1406, 0.5996", "474.712, 351.994, 42.0213, 0.6536", "475.048, 350.931, 41.9905, 0.6608", "475.759, 350.036, 41.9233, 0.592", "476.239, 349.184, 41.6265, 0.4662", "476.746, 348.186, 41.2793, 0.3372", "477.274, 347.202, 40.896, 0.258", "477.796, 346.2, 40.6479, 0.2292", "477.923, 345.103, 40.5476, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "450.046, 387.385, 31.7472, 0.531", "450.943, 387.946, 30.6972, 0.3738", "451.925, 387.866, 30.2014, 0.3962", "452.949, 387.642, 29.6512, 0.4508", "454.011, 387.901, 29.1598, 0.522", "454.953, 388.538, 28.8428, 0.5544", "455.715, 389.364, 28.7927, 0.5436", "456.291, 390.277, 29.0287, 0.519", "456.851, 391.237, 29.4252, 0.5094", "457.545, 392.091, 29.9088, 0.542", "458.431, 392.585, 30.4741, 0.5394", "459.507, 392.556, 30.9823, 0.4954", "460.617, 392.818, 31.2903, 0.4022", "461.556, 393.382, 31.2796, 0.3392", "462.0, 394.35, 31.0019, 0.3082", "462.254, 395.378, 30.5248, 0.3274", "462.312, 396.47, 29.9597, 0.353", "462.531, 397.589, 29.5257, 0.4286", "463.281, 398.44, 29.2331, 0.5056", "464.092, 399.247, 28.9923, 0.6082", "465.081, 399.699, 28.6661, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "444.461, 385.737, 29.5792, 1.1462", "443.955, 386.735, 28.8322, 0.4238", "443.942, 387.847, 28.5466, 0.502", "444.564, 388.761, 28.1666, 0.5226", "445.284, 389.523, 27.6639, 0.4658", "445.569, 390.572, 27.1876, 0.4806", "445.417, 391.625, 26.7098, 0.3914", "445.874, 392.536, 26.165, 0.4008", "446.344, 393.499, 25.7264, 0.3954", "446.198, 394.609, 25.3885, 0.4962", "446.197, 395.654, 24.9869, 0.4984", "446.889, 396.461, 24.4645, 0.4704", "446.969, 397.288, 23.767, 0.4122", "447.012, 398.28, 22.8951, 0.5052", "447.528, 399.272, 21.9825, 0.3488", "447.616, 400.286, 20.9369, 0.2288", "447.957, 401.035, 19.7059, 0.2288", "448.281, 401.748, 18.3963, 0.2288", "448.789, 402.399, 17.0999, 0.2288", "449.896, 402.426, 16.0555, 0.2288", "451.022, 402.241, 15.2952, 0.2288", "452.158, 402.125, 14.8008, 0.2288", "453.294, 401.991, 14.5319, 0.2288", "454.351, 401.573, 14.5172, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "442.307, 382.738, 35.0672, 0.3902", "441.171, 382.846, 35.0333, 0.4802", "440.122, 383.302, 35.021, 0.483", "439.05, 383.693, 34.972, 0.408", "438.026, 384.1, 34.8267, 0.3816", "437.062, 384.714, 34.7189, 0.4322", "436.228, 385.497, 34.6724, 0.5084", "435.408, 386.288, 34.6626, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "447.936, 375.396, 33.7646, 0.413", "447.903, 374.263, 34.204, 0.431", "447.926, 373.119, 34.3708, 0.4322", "447.865, 371.976, 34.5495, 0.4576", "447.523, 370.885, 34.7416, 0.4068" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "443.051, 383.2, 39.1952, 0.4074", "442.074, 383.393, 40.2808, 0.3276", "441.305, 384.143, 40.7736, 0.4252", "441.038, 385.25, 41.2255, 0.5292", "440.749, 386.32, 41.4999, 0.5832", "440.466, 387.428, 41.7242, 0.6098", "440.299, 388.526, 42.0204, 0.5848", "440.183, 389.492, 42.4782, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000362450163115
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "459.787, 408.584, 31.92, 1.0", "465.628, 422.4, 31.92, 1.0", "471.47, 436.216, 31.92, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "507.878, 342.804, 38.0027, 0.5084", "508.396, 342.03, 37.6771, 0.4586", "509.07, 341.237, 37.1529, 0.4344", "509.822, 340.689, 36.4459, 0.419", "510.74, 340.373, 35.7008, 0.379", "511.829, 340.244, 35.1736, 0.3414", "512.932, 340.161, 34.9759, 0.3468", "514.018, 339.937, 35.016, 0.3882", "515.021, 339.483, 35.2212, 0.4224", "515.933, 338.894, 35.5496, 0.4224", "516.892, 338.332, 35.8394, 0.4012", "517.89, 337.822, 35.9178, 0.3844", "518.88, 337.33, 35.7792, 0.3712", "519.883, 336.812, 35.5275, 0.3594", "520.865, 336.239, 35.2232, 0.359", "521.833, 335.655, 34.8746, 0.3886", "522.829, 335.119, 34.5282, 0.435", "523.856, 334.619, 34.2378, 0.4758", "524.932, 334.247, 34.0015, 0.5044", "526.052, 334.164, 33.7666, 0.534", "527.179, 334.219, 33.4992, 0.5776", "528.294, 334.08, 33.2259, 0.6048", "529.287, 333.564, 32.9762, 0.6052", "529.99, 332.694, 32.7356, 0.5958", "530.411, 331.652, 32.4705, 0.581", "530.854, 330.624, 32.1835, 0.5228", "531.574, 329.767, 31.9178, 0.4352", "532.546, 329.189, 31.712, 0.402", "533.563, 328.673, 31.5504, 0.4632", "534.494, 328.032, 31.388, 0.5226", "535.362, 327.303, 31.236, 0.5436", "536.209, 326.536, 31.131, 0.5714", "537.083, 325.797, 31.078, 0.6158", "537.996, 325.116, 31.0822, 0.658", "538.879, 324.405, 31.1486, 0.6824", "539.672, 323.594, 31.2315, 0.6976", "540.388, 322.703, 31.2738, 0.7278", "541.051, 321.772, 31.2698, 0.772", "541.737, 320.86, 31.1962, 0.8028", "542.507, 320.026, 31.0162, 0.802", "543.356, 319.336, 30.6883, 0.7822", "544.309, 318.892, 30.2159, 0.7598", "545.391, 318.821, 29.7038, 0.7196", "546.474, 319.115, 29.2807, 0.6498", "547.56, 319.454, 28.9696, 0.5848", "548.558, 319.13, 28.6633, 0.579", "549.214, 318.279, 28.2775, 0.6082", "550.008, 317.523, 27.839, 0.6212", "551.067, 317.149, 27.4082, 0.632", "552.183, 316.903, 27.0048, 0.6784", "553.265, 316.562, 26.5926, 0.7594", "554.262, 316.077, 26.1419, 0.8202", "555.086, 315.344, 25.6609, 0.8174", "555.677, 314.409, 25.1567, 0.7534", "556.371, 313.517, 24.6765, 0.6882", "557.407, 313.069, 24.2725, 0.664", "558.504, 312.948, 23.8463, 0.7048", "559.614, 312.791, 23.4321, 0.7786", "560.752, 312.728, 23.0872, 0.873", "561.883, 312.549, 22.8018, 0.8782", "562.964, 312.177, 22.5451, 0.7842", "563.814, 311.423, 22.2777, 0.6358", "564.079, 310.356, 21.9326, 0.569", "564.104, 309.25, 21.5257, 0.5788", "564.104, 308.149, 21.0691, 0.546", "564.099, 307.044, 20.6004, 0.496", "564.063, 305.903, 20.2245, 0.4446", "564.589, 304.892, 19.9785, 0.5156", "565.501, 304.227, 19.8931, 0.5764", "566.552, 303.788, 19.817, 0.6288", "567.589, 303.313, 19.745, 0.591", "568.506, 302.633, 19.6977, 0.5624", "569.353, 301.862, 19.6623, 0.537", "570.273, 301.182, 19.6307, 0.5114", "571.327, 300.739, 19.5903, 0.4856", "572.469, 300.675, 19.5625, 0.4594", "573.589, 300.849, 19.5988, 0.4576", "574.705, 300.776, 19.7093, 0.4822", "575.794, 300.609, 19.6732, 0.5082", "576.861, 300.43, 19.5085, 0.5338" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "507.878, 342.804, 38.0027, 0.5084", "509.121, 342.3, 39.6497, 0.4216", "510.254, 342.298, 39.7516, 0.334", "511.392, 342.276, 39.8247, 0.2662", "512.516, 342.349, 39.8588, 0.34", "513.62, 342.477, 40.0089, 0.2624", "514.671, 342.175, 40.2682, 0.28", "515.676, 341.661, 40.5443, 0.293", "516.084, 340.764, 40.9063, 0.3326", "517.205, 340.682, 41.1603, 0.424", "518.267, 340.502, 41.1687, 0.3702", "519.341, 340.157, 41.0581, 0.434", "520.382, 339.695, 40.9441, 0.3118", "521.459, 339.371, 40.7898, 0.2368", "522.558, 339.31, 40.5292, 0.2628", "523.671, 339.138, 40.3155, 0.3", "524.703, 338.67, 40.1909, 0.2582", "525.812, 338.397, 40.077, 0.3454", "526.874, 338.143, 39.926, 0.4156", "527.859, 337.932, 39.6679, 0.3096", "528.948, 337.875, 39.5786, 0.4326", "529.975, 338.077, 39.6637, 0.4848", "531.0, 338.527, 39.7284, 0.3294", "531.918, 339.003, 39.6488, 0.3268", "532.943, 339.068, 39.5469, 0.4082", "533.966, 338.835, 39.6553, 0.4224", "534.964, 338.852, 39.9636, 0.5058", "536.005, 338.911, 40.4079, 0.3858", "536.984, 339.168, 40.6202, 0.4534", "538.103, 338.95, 40.8481, 0.4824", "539.184, 338.632, 41.1272, 0.3316", "540.246, 338.459, 41.4938, 0.2796", "541.047, 338.64, 41.7738, 0.3488", "542.112, 338.768, 42.1347, 0.486", "543.198, 338.993, 42.5438, 0.4762", "544.251, 339.33, 42.95, 0.2798", "545.375, 339.363, 43.2807, 0.233", "546.512, 339.429, 43.5212, 0.2584", "547.651, 339.35, 43.6632, 0.3154", "548.633, 339.42, 43.5372, 0.2874", "549.729, 339.379, 43.3322, 0.2628", "550.828, 339.433, 43.2916, 0.3654", "551.886, 339.0, 43.3196, 0.2752", "552.947, 338.629, 43.4176, 0.267", "553.823, 338.41, 43.7954, 0.3492", "554.758, 338.496, 44.2148, 0.258", "555.752, 338.4, 44.3724, 0.274", "556.875, 338.368, 44.4514, 0.2526", "557.99, 338.54, 44.5281, 0.306", "559.099, 338.542, 44.6645, 0.3766", "560.214, 338.386, 44.814, 0.3536", "561.336, 338.267, 44.9324, 0.2958", "562.468, 338.244, 45.0307, 0.2602", "563.528, 338.385, 45.0402, 0.2842", "564.603, 338.673, 44.9736, 0.4406", "565.724, 338.546, 44.9364, 0.4646", "566.284, 339.402, 44.9739, 0.348", "567.241, 339.918, 45.0128, 0.3184", "567.886, 340.404, 44.7549, 0.4382", "568.303, 340.758, 44.4399, 0.414", "569.224, 341.071, 44.3324, 0.2876", "570.005, 341.783, 44.2162, 0.2288", "570.765, 342.292, 43.9258, 0.315", "571.859, 342.599, 43.769, 0.3614", "572.969, 342.722, 43.766, 0.4376", "574.094, 342.607, 43.8071, 0.2288", "575.219, 342.688, 43.8287, 0.2288", "576.288, 343.049, 43.7847, 0.2338", "577.388, 343.028, 43.6232, 0.2906", "578.453, 342.853, 43.3219, 0.404", "579.533, 342.835, 42.9531, 0.3208", "580.625, 342.929, 42.7076, 0.2512", "581.586, 343.36, 42.6482, 0.3236", "582.703, 343.243, 42.6955, 0.31", "583.758, 343.46, 42.7258, 0.2788", "584.729, 343.918, 42.8688, 0.3322", "585.751, 344.297, 43.1133, 0.3292", "586.755, 344.82, 43.3597, 0.3028", "587.794, 345.233, 43.6111, 0.3072", "588.898, 345.497, 43.8785, 0.2606", "589.905, 345.99, 44.1372, 0.3008", "590.917, 346.188, 44.4483, 0.252", "592.036, 346.268, 44.7199, 0.2288", "593.178, 346.292, 44.8958, 0.2288", "594.32, 346.34, 44.9994, 0.2378", "595.463, 346.333, 45.024, 0.2942", "596.573, 346.453, 44.9137, 0.2404", "597.605, 346.912, 44.7972, 0.3276", "598.655, 347.204, 44.24, 0.356" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "475.718, 346.184, 21.0678, 0.5338", "476.496, 345.027, 21.104, 0.3962", "477.438, 344.408, 21.1217, 0.448", "478.534, 344.15, 21.0807, 0.49", "479.65, 343.909, 21.0871, 0.4986", "480.788, 343.829, 21.1279, 0.4662", "481.892, 343.607, 21.1526, 0.429", "482.845, 342.984, 21.2333, 0.4142", "483.718, 342.267, 21.4048, 0.407", "484.698, 341.688, 21.589, 0.4116", "485.784, 341.415, 21.8095, 0.4356", "486.845, 341.568, 22.1476, 0.4674", "487.876, 342.027, 22.4952, 0.4616", "488.969, 342.312, 22.7744, 0.4524", "490.089, 342.147, 23.0078, 0.4496", "491.12, 341.688, 23.2531, 0.4678", "492.103, 341.143, 23.5075, 0.4518", "493.041, 340.5, 23.714, 0.42", "493.896, 339.739, 23.8636, 0.3886", "494.731, 338.957, 23.9662, 0.39", "495.614, 338.234, 24.0286, 0.4132", "496.592, 337.645, 24.0563, 0.445", "497.636, 337.189, 24.0471, 0.477", "498.704, 336.816, 24.0071, 0.481", "499.755, 336.388, 24.022, 0.4634", "500.783, 335.965, 24.1717, 0.4164", "501.844, 335.642, 24.4216, 0.3664", "502.925, 335.316, 24.6952, 0.3276", "503.977, 334.865, 24.9282, 0.3266", "505.038, 334.441, 25.1078, 0.357", "506.124, 334.082, 25.2206, 0.3526", "507.218, 333.879, 25.2948, 0.3638", "508.313, 334.126, 25.3932, 0.46", "509.355, 334.529, 25.5244, 0.4614", "510.419, 334.864, 25.6037, 0.3616", "511.497, 334.887, 25.5021, 0.349", "512.544, 334.638, 25.2609, 0.3508", "513.641, 334.385, 24.9942, 0.3634", "514.771, 334.397, 24.7571, 0.3732", "515.908, 334.469, 24.6207, 0.5096", "517.036, 334.337, 24.5633, 0.5854", "518.11, 333.96, 24.5559, 0.5428", "519.153, 333.504, 24.5948, 0.5494", "520.112, 333.314, 24.7838, 0.4962", "521.017, 333.152, 25.0186, 0.3492", "521.969, 332.715, 25.0209, 0.4506", "522.956, 332.261, 24.9165, 0.4724", "524.043, 332.251, 24.8476, 0.4442", "525.111, 332.641, 24.8094, 0.5588", "526.198, 332.981, 24.7999, 0.5812", "527.297, 332.95, 24.8819, 0.4008", "528.247, 332.377, 24.9912, 0.3464", "529.034, 331.592, 24.986, 0.504", "529.917, 330.881, 24.9381, 0.6234", "530.75, 330.101, 24.902, 0.58", "531.261, 329.115, 24.8075, 0.6434", "532.12, 328.421, 24.6874, 0.5124", "533.057, 327.804, 24.7049, 0.4082", "534.15, 327.504, 24.8219, 0.6332", "535.286, 327.527, 24.9978, 0.524", "536.423, 327.579, 25.1334, 0.6012", "537.538, 327.48, 25.2148, 0.595", "538.567, 327.054, 25.4254, 0.432", "539.526, 326.737, 25.8186, 0.4068", "540.658, 326.672, 26.1881, 0.4094", "541.703, 326.277, 26.4487, 0.3402", "542.635, 325.708, 26.8055, 0.3406", "543.501, 325.343, 27.3019, 0.436", "544.606, 325.43, 27.755, 0.416", "545.734, 325.409, 28.0988, 0.331", "546.741, 325.533, 28.3402, 0.3346", "547.746, 326.04, 28.56, 0.2796" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "475.718, 346.184, 21.0678, 0.5338", "475.66, 345.631, 20.7351, 0.4874", "475.665, 344.501, 20.0656, 0.4224", "476.003, 343.448, 19.7595, 0.3818", "476.635, 342.543, 19.3883, 0.432", "477.39, 341.711, 19.0179, 0.4576" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "477.923, 345.103, 40.5476, 0.2542", "478.202, 343.813, 40.4074, 0.3836", "478.329, 342.688, 40.2338, 0.365", "478.507, 341.577, 39.9837, 0.3182", "478.932, 340.522, 39.69, 0.3158", "479.585, 339.585, 39.3688, 0.3492", "480.353, 338.743, 39.0188, 0.39", "481.132, 337.957, 38.5949, 0.4054", "481.803, 337.177, 38.0402, 0.3904", "482.365, 336.283, 37.427, 0.351", "482.828, 335.25, 36.8794, 0.3088", "483.31, 334.219, 36.4563, 0.2978", "484.039, 333.344, 36.1407, 0.3406", "484.951, 332.663, 35.8758, 0.4178", "485.861, 331.996, 35.6196, 0.4752", "486.661, 331.19, 35.3716, 0.469", "487.315, 330.258, 35.1324, 0.4002", "487.835, 329.248, 34.8726, 0.316", "488.325, 328.231, 34.5923, 0.2708", "488.941, 327.272, 34.3375, 0.2938", "489.586, 326.331, 34.1261, 0.3674", "490.107, 325.32, 33.9237, 0.4408", "490.57, 324.29, 33.7151, 0.4762", "491.137, 323.306, 33.5476, 0.4848", "491.87, 322.443, 33.4824, 0.4982", "492.749, 321.731, 33.4827, 0.53", "493.692, 321.091, 33.4485, 0.5686", "494.58, 320.388, 33.3712, 0.6054", "495.35, 319.547, 33.3068, 0.6342", "495.974, 318.599, 33.2578, 0.6632", "496.351, 317.54, 33.1582, 0.6944", "496.36, 316.415, 32.991, 0.697", "496.258, 315.308, 32.7692, 0.6412", "496.339, 314.217, 32.5116, 0.5616", "496.693, 313.141, 32.3271, 0.5422", "497.211, 312.136, 32.2812, 0.5932", "497.766, 311.168, 32.3719, 0.6428", "498.227, 310.199, 32.6004, 0.6242", "498.597, 309.188, 32.8815, 0.5694", "499.142, 308.268, 32.9851, 0.5466", "499.912, 307.59, 32.8121, 0.5884", "500.693, 306.812, 32.5125, 0.609", "501.374, 305.894, 32.202, 0.5832", "501.93, 304.905, 31.913, 0.534", "502.178, 303.806, 31.6518, 0.5442", "502.178, 302.676, 31.4012, 0.6052", "502.311, 301.571, 31.157, 0.693", "502.825, 300.58, 30.9473, 0.7676", "503.699, 299.89, 30.7434, 0.791", "504.745, 299.47, 30.5242, 0.7186", "505.687, 298.943, 30.3988, 0.5682", "506.05, 298.082, 30.4738, 0.4562", "506.375, 297.385, 30.4858, 0.526", "507.053, 296.68, 30.2873, 0.649", "507.621, 295.709, 30.0362, 0.7094", "508.232, 294.744, 29.7917, 0.7192", "508.833, 293.771, 29.5492, 0.6902", "509.27, 292.732, 29.2846, 0.6496", "509.373, 291.64, 29.0013, 0.641", "509.344, 290.513, 28.7566, 0.6522", "509.509, 289.392, 28.5944, 0.6384", "509.876, 288.313, 28.4984, 0.5938", "510.366, 287.281, 28.4362, 0.5526", "510.907, 286.273, 28.3934, 0.53", "511.345, 285.221, 28.3553, 0.4992", "511.52, 284.101, 28.3002, 0.455", "511.542, 282.961, 28.1994, 0.4288", "511.664, 281.843, 28.0347, 0.4424", "512.074, 280.799, 27.8445, 0.4652", "512.775, 279.908, 27.6786, 0.4612", "513.621, 279.142, 27.5521, 0.4434", "514.454, 278.358, 27.4625, 0.4426", "515.255, 277.542, 27.4035, 0.4732", "516.164, 276.859, 27.3641, 0.5268", "517.208, 276.41, 27.3285, 0.6004", "518.296, 276.055, 27.2854, 0.6732", "519.341, 275.599, 27.2282, 0.7202", "520.293, 274.979, 27.137, 0.7596", "521.192, 274.295, 26.9964, 0.797", "522.042, 273.544, 26.8475, 0.8292", "522.801, 272.693, 26.744, 0.8414", "523.401, 271.729, 26.7137, 0.851", "523.771, 270.667, 26.7627, 0.8588", "523.99, 269.553, 26.8501, 0.8432", "524.062, 268.416, 26.9132, 0.7996", "523.902, 267.292, 26.9036, 0.7604", "523.885, 266.174, 26.7905, 0.764", "524.492, 265.268, 26.6175, 0.7954", "525.372, 264.542, 26.4432, 0.7998", "526.133, 263.694, 26.2873, 0.7658", "526.678, 262.693, 26.1529, 0.722", "527.221, 261.688, 26.0265, 0.7018", "527.856, 260.747, 25.8756, 0.7056", "528.52, 259.83, 25.6926, 0.711", "529.146, 258.878, 25.5154, 0.6908", "529.767, 257.918, 25.3735, 0.6478", "530.525, 257.064, 25.2705, 0.6112", "531.354, 256.275, 25.202, 0.5992", "532.084, 255.398, 25.1608, 0.605", "532.744, 254.463, 25.1338, 0.6096", "533.478, 253.587, 25.1039, 0.6102", "534.341, 252.84, 25.0594, 0.6022", "535.287, 252.202, 25.0078, 0.5658", "536.195, 251.518, 24.9631, 0.5166", "536.958, 250.672, 24.8547, 0.4984", "537.578, 249.787, 24.5811, 0.5524", "538.203, 248.922, 24.1678, 0.6238", "538.922, 248.065, 23.7313, 0.6554", "539.682, 247.215, 23.3539, 0.6302", "540.335, 246.278, 23.0506, 0.5962", "540.647, 245.191, 22.7905, 0.5628", "540.531, 244.062, 22.6212, 0.5392", "540.079, 243.019, 22.5374, 0.496", "539.422, 242.088, 22.4468, 0.4776", "538.913, 241.085, 22.2877, 0.4812", "539.075, 239.973, 22.1148, 0.548", "539.698, 239.017, 21.9715, 0.6146", "540.361, 238.085, 21.8495, 0.6672", "541.031, 237.158, 21.7452, 0.6682", "541.812, 236.323, 21.6598, 0.6448", "542.754, 235.673, 21.5831, 0.6018", "543.876, 235.526, 21.4641, 0.5858", "544.996, 235.544, 21.2769, 0.5848", "546.1, 235.257, 21.1099, 0.624", "547.181, 234.88, 20.9938, 0.6548", "548.255, 234.487, 20.928, 0.6608", "549.28, 233.979, 20.9082, 0.641", "550.192, 233.288, 20.9345, 0.5952", "550.891, 232.413, 21.0549, 0.5642", "551.581, 231.516, 21.1982, 0.4956", "552.135, 230.516, 21.2821, 0.4194", "552.624, 229.482, 21.2917, 0.3644", "553.169, 228.476, 21.2237, 0.3782", "554.052, 227.753, 21.0625, 0.4478", "554.927, 227.128, 20.711, 0.4574", "555.893, 226.636, 20.2416, 0.4114", "556.949, 226.202, 19.794, 0.3368", "557.88, 225.537, 19.4019, 0.3072", "558.926, 225.076, 19.0551, 0.3288", "559.986, 224.83, 18.6499, 0.3304", "560.995, 225.353, 18.2962, 0.3804", "561.818, 226.054, 17.36, 0.4068" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "477.923, 345.103, 40.5476, 0.2542", "477.406, 343.78, 41.3619, 0.4774", "477.365, 342.654, 42.1341, 0.6054", "477.612, 341.891, 42.5942, 0.2524", "477.814, 340.855, 43.0657, 0.3106", "478.527, 340.065, 43.5921, 0.4878", "479.198, 339.154, 44.0, 0.5404", "479.797, 338.245, 44.3276, 0.5336", "480.606, 337.531, 44.6555, 0.4714", "481.543, 336.941, 44.8196, 0.4066", "482.498, 336.384, 44.8286, 0.4688", "483.443, 335.777, 44.7586, 0.4346", "484.183, 334.963, 44.6617, 0.2792", "484.356, 334.162, 44.7826, 0.3684", "484.263, 333.24, 45.1122, 0.4722", "484.554, 332.18, 45.4359, 0.3832", "485.129, 331.197, 45.6915, 0.3332", "485.875, 330.341, 45.8917, 0.3596", "486.741, 329.646, 46.121, 0.4068", "487.655, 328.983, 46.3072, 0.3506", "488.689, 328.52, 46.4296, 0.2624", "489.74, 328.094, 46.5867, 0.2652", "490.698, 327.48, 46.7482, 0.278", "491.737, 327.01, 46.8768, 0.277", "492.819, 326.642, 46.9834, 0.2676", "493.88, 326.231, 47.1162, 0.2466", "494.821, 325.613, 47.2928, 0.232", "495.865, 325.161, 47.4443, 0.229", "496.919, 324.734, 47.5266, 0.2288", "497.985, 324.372, 47.654, 0.2288", "499.117, 324.306, 47.7582, 0.2288", "500.156, 323.858, 47.8293, 0.2288", "501.028, 323.125, 47.8778, 0.23", "501.842, 322.322, 47.9206, 0.2514", "502.873, 321.848, 47.9618, 0.2898", "503.84, 321.242, 47.9914, 0.2588", "504.825, 320.661, 48.0332, 0.2318", "505.819, 320.096, 48.0864, 0.2432", "506.625, 319.365, 48.2622, 0.303", "507.543, 318.776, 48.3594, 0.3562", "508.631, 318.438, 48.4761, 0.3922", "509.65, 318.207, 48.475, 0.448", "510.607, 317.899, 48.5668, 0.3434", "511.632, 317.814, 48.8466, 0.3604", "512.637, 318.166, 49.2352, 0.3846", "513.656, 318.227, 49.7386, 0.4262", "514.715, 317.962, 50.0438, 0.4092", "515.25, 317.966, 49.9993, 0.4752", "515.902, 317.632, 50.2303, 0.579", "516.922, 317.267, 50.3616, 0.693", "517.956, 317.224, 50.3278, 0.66", "519.038, 317.088, 50.3784, 0.335", "520.083, 316.628, 50.4356, 0.3954", "521.03, 316.071, 50.4062, 0.3928", "521.812, 315.346, 50.2499, 0.328", "522.534, 314.528, 50.2471, 0.3946", "523.176, 313.654, 50.3289, 0.5466", "523.698, 312.648, 50.3367, 0.5574", "524.208, 311.635, 50.3328, 0.4582", "524.801, 310.667, 50.37, 0.4022", "525.424, 309.716, 50.3639, 0.3904", "526.073, 308.793, 50.3233, 0.3838", "526.616, 307.842, 50.1833, 0.2982", "527.136, 306.861, 49.9162, 0.2902", "527.963, 306.14, 49.5751, 0.4162", "528.756, 305.791, 48.16, 0.4322" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "465.081, 399.699, 28.6661, 0.6102", "465.082, 400.001, 29.3885, 0.4938", "465.382, 400.629, 31.4241, 0.3536", "465.811, 401.535, 32.277, 0.371", "465.832, 402.629, 33.1218, 0.423", "465.409, 403.56, 33.9861, 0.54", "465.125, 404.574, 34.7976, 0.5814", "465.133, 405.717, 35.385, 0.5614", "465.099, 406.826, 35.6569, 0.4886", "465.4, 407.925, 35.7941, 0.483", "465.906, 408.953, 35.8952, 0.5312", "466.479, 409.941, 36.0021, 0.5822", "466.925, 410.974, 36.211, 0.6096", "467.236, 412.031, 36.5621, 0.6352", "467.125, 413.125, 37.0199, 0.6102", "466.726, 414.197, 37.4088, 0.5848", "467.139, 414.83, 37.8073, 0.4708", "467.696, 415.726, 38.2659, 0.3026", "467.96, 416.762, 38.6954, 0.234", "467.649, 417.788, 38.9413, 0.2536", "467.807, 418.791, 38.9928, 0.5976", "468.404, 419.747, 39.0365, 0.6644", "468.823, 420.783, 38.9696, 0.689", "468.957, 421.915, 38.9066, 0.4728", "468.721, 423.019, 38.8178, 0.5922", "468.401, 424.068, 38.9057, 0.4556", "468.623, 425.187, 39.0421, 0.4188", "469.081, 426.222, 39.2241, 0.2794", "469.681, 427.183, 39.4184, 0.3332", "470.398, 428.054, 39.5133, 0.3548", "471.106, 428.809, 39.5853, 0.3532", "471.308, 429.677, 39.7216, 0.3762", "471.401, 430.737, 39.758, 0.4554", "471.567, 431.845, 39.8647, 0.3718", "471.69, 432.974, 39.9899, 0.38", "471.714, 434.108, 40.0775, 0.4286", "471.446, 435.203, 40.1478, 0.4608", "471.002, 436.245, 40.2489, 0.4936", "470.586, 437.291, 40.3136, 0.4194", "470.348, 438.365, 40.4132, 0.427", "470.376, 439.488, 40.5524, 0.2962", "470.474, 439.878, 40.4057, 0.5176", "471.102, 440.819, 40.383, 0.4202", "471.616, 441.824, 40.4298, 0.4506", "471.971, 442.905, 40.5009, 0.4054", "472.281, 443.946, 40.7112, 0.3174", "472.495, 444.943, 41.1379, 0.325", "472.677, 446.055, 41.6136, 0.259", "472.704, 447.186, 42.0736, 0.2764", "472.781, 448.291, 42.5816, 0.2762", "473.146, 449.311, 43.1144, 0.259", "473.876, 450.164, 43.605, 0.3304", "474.634, 451.008, 44.021, 0.4614", "475.258, 451.849, 44.4948, 0.406", "475.853, 452.669, 45.0178, 0.2746", "476.612, 453.48, 45.4272, 0.305", "477.628, 453.93, 45.8301, 0.3068", "478.586, 454.456, 46.286, 0.3318", "479.574, 454.976, 46.6754, 0.2818", "480.599, 455.239, 47.1307, 0.4558", "481.639, 455.454, 47.6874, 0.5232", "482.492, 455.966, 48.3504, 0.4142", "483.126, 456.838, 48.9849, 0.2882", "483.984, 457.567, 49.4908, 0.3494", "485.055, 457.943, 50.12, 0.4576" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "465.081, 399.699, 28.6661, 0.6102", "465.899, 399.916, 28.3626, 0.4462", "466.887, 400.44, 27.996, 0.365", "467.999, 400.288, 27.5817, 0.3842", "469.137, 400.199, 27.201, 0.4834", "470.237, 400.332, 26.7868, 0.5602", "471.193, 400.924, 26.3896, 0.6094", "471.933, 401.748, 25.9765, 0.6066", "472.678, 402.616, 25.6756, 0.5622", "473.729, 402.95, 25.5518, 0.5084", "475.029, 403.308, 25.3388, 0.4474", "476.041, 403.821, 25.1217, 0.4042", "477.025, 404.383, 24.891, 0.376", "477.945, 405.025, 24.6342, 0.3738", "478.763, 405.812, 24.3922, 0.4324", "479.577, 406.59, 24.1632, 0.5268", "480.179, 407.563, 24.0453, 0.581", "480.747, 408.518, 24.1171, 0.5756", "481.268, 409.478, 24.3511, 0.5418", "481.895, 410.42, 24.6248, 0.491", "482.738, 411.191, 24.8491, 0.4588", "483.665, 411.847, 25.0439, 0.478", "484.556, 412.548, 25.1901, 0.5616", "485.478, 413.207, 25.1733, 0.646", "486.351, 413.929, 25.035, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "435.408, 386.288, 34.6626, 0.4576", "434.923, 387.084, 34.7805, 0.426", "434.851, 388.133, 35.1128, 0.4704", "434.827, 389.197, 35.5925, 0.5026", "434.292, 390.203, 36.0279, 0.5082", "433.679, 391.169, 36.3969, 0.5084", "433.066, 392.119, 36.748, 0.4656", "432.52, 393.102, 37.0737, 0.393", "431.887, 394.054, 37.3083, 0.36", "431.313, 395.044, 37.4752, 0.3778", "430.757, 396.045, 37.6118, 0.4684", "430.315, 397.1, 37.7283, 0.5268", "430.15, 398.231, 37.8314, 0.5336", "429.858, 399.336, 37.9453, 0.444", "429.777, 400.447, 38.1578, 0.3866", "429.508, 401.479, 38.4919, 0.3576", "429.094, 402.524, 38.6789, 0.4046", "429.16, 403.666, 38.8136, 0.4564", "428.934, 404.76, 38.9855, 0.4828", "428.885, 405.891, 39.1311, 0.483", "428.824, 406.309, 39.1709, 0.3966", "428.418, 407.334, 39.1054, 0.2512", "427.907, 408.33, 38.99, 0.327", "427.386, 409.225, 38.7548, 0.4604", "426.518, 409.807, 38.386, 0.4642", "425.556, 410.393, 38.0458, 0.39", "425.057, 411.252, 37.9641, 0.3564", "424.569, 412.225, 37.835, 0.303", "423.82, 413.072, 37.6998, 0.2486", "423.376, 414.125, 37.6057, 0.3994", "422.765, 415.084, 37.5662, 0.7976", "422.27, 416.098, 37.5483, 0.783", "422.163, 417.153, 37.5477, 0.438", "421.539, 417.716, 37.2392, 0.3174", "421.012, 418.64, 36.8332, 0.2486", "420.579, 419.681, 36.5378, 0.3944", "420.168, 420.699, 36.3446, 0.6618", "419.616, 421.566, 36.2967, 0.6762", "419.272, 422.058, 36.0024, 0.5172", "419.267, 422.051, 35.3766, 0.3012", "418.844, 422.598, 34.6772, 0.2536", "418.346, 423.582, 34.1334, 0.3248", "418.293, 424.641, 33.9744, 0.4854", "418.239, 425.725, 34.19, 0.4486", "417.751, 426.513, 34.8295, 0.2674", "416.904, 426.836, 35.7776, 0.3554", "416.013, 427.244, 36.846, 0.518", "415.606, 428.137, 37.9184, 0.8866", "415.328, 429.212, 38.8128, 0.281", "414.752, 430.161, 39.3607, 0.4704", "414.436, 431.185, 39.7617, 0.4092", "414.287, 431.607, 40.3455, 0.239", "414.214, 432.647, 40.7126, 0.3134", "414.447, 433.602, 40.7708, 0.422", "414.128, 434.182, 40.9371, 0.5626", "413.929, 434.973, 41.3193, 0.3486", "413.864, 436.081, 41.6044, 0.3514", "413.587, 437.186, 41.7925, 0.4042", "413.39, 438.301, 41.9003, 0.2946", "413.254, 439.34, 41.8298, 0.5548", "413.135, 440.408, 41.6545, 0.3706", "412.962, 441.523, 41.6125, 0.3072", "412.565, 442.559, 41.809, 0.2776", "412.203, 443.627, 42.177, 0.2288", "411.84, 444.657, 42.7011, 0.2896", "411.251, 445.347, 43.5005, 0.4328", "410.416, 445.637, 44.4679, 0.2756", "409.732, 446.025, 45.4532, 0.3558", "409.279, 447.068, 46.2465, 0.3514", "408.978, 448.154, 46.8983, 0.2916", "408.943, 449.266, 47.4751, 0.3276", "408.348, 449.943, 48.0388, 0.3282", "408.356, 450.797, 48.6517, 0.2866", "408.444, 451.903, 49.1621, 0.2592", "408.736, 452.965, 49.4273, 0.3022", "408.527, 454.003, 49.4928, 0.4148", "408.249, 454.88, 49.672, 0.3734", "407.567, 455.744, 49.7162, 0.3276", "407.334, 456.82, 49.5527, 0.243", "407.588, 457.914, 49.2887, 0.2288", "407.996, 458.96, 48.8939, 0.2288", "408.166, 459.919, 48.251, 0.2288", "408.415, 460.828, 47.3925, 0.2512", "409.207, 461.007, 46.4562, 0.3786", "409.926, 461.424, 45.4681, 0.3708", "410.094, 462.495, 44.6326, 0.2678", "409.836, 463.559, 44.0843, 0.337", "409.554, 464.501, 43.8766, 0.24", "408.906, 465.411, 43.6582, 0.2894", "408.386, 466.314, 43.2835, 0.3352", "407.867, 466.976, 42.67, 0.284", "407.263, 467.782, 40.88, 0.2796" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "435.408, 386.288, 34.6626, 0.4576", "434.927, 386.638, 33.1708, 0.5142", "433.971, 386.922, 32.7093, 0.4698", "432.828, 386.931, 32.5422, 0.3832", "432.172, 386.015, 32.5035, 0.305" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "447.523, 370.885, 34.7416, 0.4068", "447.83, 370.022, 34.1617, 0.39", "448.156, 368.926, 34.2572, 0.3656", "448.298, 367.794, 34.2924, 0.3586", "448.171, 366.665, 34.3344, 0.391", "447.912, 365.569, 34.4025, 0.451", "447.891, 364.548, 34.568, 0.5076", "448.509, 363.638, 34.655, 0.5162", "449.306, 363.132, 34.3762, 0.5264", "450.074, 362.623, 33.8002, 0.551", "450.682, 361.782, 33.096, 0.5774", "451.185, 360.798, 32.398, 0.5462", "451.624, 359.811, 31.7232, 0.4774", "451.985, 358.747, 31.1895, 0.4394", "452.189, 357.666, 30.9842, 0.4326", "452.216, 356.615, 31.0503, 0.4322", "452.195, 355.516, 31.2214, 0.4112", "452.024, 354.397, 31.2486, 0.385", "451.578, 353.363, 31.1108, 0.3814", "451.092, 352.369, 30.7762, 0.3592", "450.641, 351.33, 30.315, 0.356", "450.659, 350.244, 29.7046, 0.4032", "451.333, 349.448, 28.9797, 0.5044", "452.325, 348.943, 28.2831, 0.5336", "453.26, 348.82, 27.4846, 0.483" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "447.523, 370.885, 34.7416, 0.4068", "446.945, 370.186, 35.114, 0.5062", "446.161, 369.39, 35.5264, 0.433", "445.386, 368.572, 35.9318, 0.3562", "444.692, 367.662, 36.2664, 0.356" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "440.183, 389.492, 42.4782, 0.5084", "439.904, 390.193, 42.838, 0.5392", "439.757, 391.314, 43.1995, 0.4028", "439.88, 392.44, 43.5515, 0.3682", "440.452, 393.355, 43.8721, 0.5656", "441.387, 393.934, 44.219, 0.696", "442.11, 394.682, 44.6113, 0.5702", "442.402, 395.737, 45.0162, 0.3648", "442.661, 396.835, 45.3194, 0.3914", "442.684, 397.941, 45.5406, 0.4544", "442.37, 399.034, 45.6842, 0.4636", "442.031, 400.117, 45.7839, 0.573", "441.764, 401.224, 45.8354, 0.6068", "441.577, 402.333, 45.7671, 0.4474", "441.242, 403.214, 45.8497, 0.516", "440.703, 404.191, 45.8853, 0.4872", "440.553, 405.205, 45.6232, 0.5084" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "440.183, 389.492, 42.4782, 0.5084", "439.83, 389.596, 43.7674, 0.4112", "438.866, 389.278, 44.3682, 0.361", "437.943, 388.615, 44.6043, 0.4896", "437.016, 387.944, 44.7625, 0.5694", "436.054, 387.337, 44.8143, 0.5474", "434.992, 387.084, 44.702, 0.3814" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "576.861, 300.43, 19.5085, 0.5338", "577.855, 299.391, 19.4648, 0.4876", "578.691, 298.62, 19.4716, 0.4432", "579.7, 298.094, 19.4831, 0.3922", "580.811, 297.841, 19.504, 0.3834", "581.945, 297.737, 19.5616, 0.4334", "583.084, 297.648, 19.5908, 0.5202", "584.181, 297.358, 19.5224, 0.5962", "585.177, 296.81, 19.3929, 0.6204", "586.055, 296.098, 19.1997, 0.579", "586.939, 295.393, 18.9604, 0.5086", "588.013, 295.031, 18.7344, 0.4552", "589.132, 295.216, 18.5527, 0.4584", "590.244, 295.487, 18.411, 0.4776", "591.382, 295.592, 18.2934, 0.4828", "592.526, 295.604, 18.1859, 0.483", "593.669, 295.571, 18.0696, 0.5064", "594.784, 295.371, 17.8858, 0.5538", "595.889, 295.154, 17.6242, 0.567", "597.002, 294.948, 17.3198, 0.535", "598.129, 295.11, 17.0246, 0.4966", "599.226, 295.432, 16.773, 0.5166", "600.329, 295.333, 16.4612, 0.5498", "601.409, 295.383, 16.0785, 0.5208", "602.519, 295.136, 15.7428, 0.4504", "603.553, 294.674, 15.5396, 0.3728", "604.537, 294.117, 15.4304, 0.3568", "605.546, 293.633, 15.2456, 0.3346", "606.678, 293.535, 15.0539, 0.3752", "607.749, 293.935, 14.888, 0.3814", "608.867, 294.173, 14.7146, 0.4274", "609.865, 293.779, 14.0, 0.4068" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "576.861, 300.43, 19.5085, 0.5338", "576.828, 301.459, 16.6117, 0.2852", "576.456, 302.225, 15.4263, 0.2332", "575.651, 302.849, 14.8871, 0.2288", "574.794, 303.587, 14.4988, 0.2288", "573.929, 304.327, 14.2706, 0.244", "573.019, 304.906, 14.0948, 0.2688", "572.556, 305.906, 14.0446, 0.2976", "572.68, 306.993, 14.2841, 0.2838", "572.238, 307.135, 14.9617, 0.3048", "571.536, 307.135, 17.2869, 0.3814" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "477.39, 341.711, 19.0179, 0.4576", "477.646, 340.81, 18.7604, 0.3908", "478.308, 339.877, 18.581, 0.4078", "479.07, 339.027, 18.4738, 0.4154", "479.912, 338.266, 18.4409, 0.425", "480.781, 337.546, 18.4339, 0.428", "481.387, 336.635, 18.2917, 0.4636", "481.232, 335.557, 17.989, 0.4848", "481.06, 334.542, 17.5573, 0.4964", "481.589, 333.629, 17.06, 0.4944", "482.378, 332.833, 16.6207, 0.4892", "483.141, 331.988, 16.3288, 0.483", "483.845, 331.099, 16.2567, 0.4842", "484.52, 330.216, 16.4008, 0.4912", "485.102, 329.289, 16.7063, 0.5056", "485.414, 328.248, 17.098, 0.5268", "485.396, 327.128, 17.4635, 0.5464", "485.261, 325.994, 17.7059, 0.5326", "485.275, 324.858, 17.7869, 0.4712", "485.573, 323.771, 17.722, 0.3934", "486.15, 322.792, 17.5641, 0.369", "486.726, 321.847, 17.2864, 0.4312", "486.998, 320.806, 16.9204, 0.5568", "487.158, 319.717, 16.5442, 0.6948", "487.664, 318.753, 16.2835, 0.7108", "488.064, 317.775, 16.1438, 0.818", "488.375, 316.707, 16.0846, 0.7498", "488.792, 315.662, 16.1377, 0.505", "489.068, 314.568, 16.2238, 0.4702", "489.648, 313.597, 16.2389, 0.515", "490.395, 312.731, 16.2116, 0.584", "491.084, 311.821, 16.158, 0.625", "491.644, 310.824, 16.0833, 0.5998", "492.226, 309.841, 15.9876, 0.538", "492.964, 308.976, 15.8656, 0.507", "493.835, 308.259, 15.6853, 0.481", "494.7, 307.53, 15.4679, 0.4464", "495.465, 306.687, 15.2824, 0.3978", "495.994, 305.711, 15.1563, 0.4534", "495.981, 304.595, 15.0193, 0.5864", "495.596, 303.555, 14.776, 0.699", "495.304, 302.482, 14.4714, 0.6388", "495.406, 301.445, 14.0799, 0.547", "496.099, 300.577, 13.6726, 0.525", "496.718, 299.625, 13.3821, 0.5894", "497.099, 298.575, 13.2366, 0.5986", "497.253, 297.491, 13.0511, 0.6304", "497.554, 296.437, 12.8395, 0.5592", "497.791, 295.451, 12.8462, 0.4346", "498.402, 294.563, 12.9549, 0.3904", "499.033, 293.651, 12.9732, 0.5024", "499.739, 292.763, 12.985, 0.572", "500.371, 291.849, 13.1206, 0.45", "500.637, 290.76, 13.2875, 0.424", "500.91, 289.708, 13.3048, 0.5654", "501.213, 288.615, 13.3291, 0.5066", "501.872, 287.945, 14.0, 0.483" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "477.39, 341.711, 19.0179, 0.4576", "478.588, 341.328, 17.8246, 0.4608", "479.59, 340.872, 16.8646, 0.4348", "480.613, 340.942, 16.4187, 0.4542", "481.718, 341.092, 15.9354, 0.4898", "482.808, 340.797, 15.5004, 0.483", "483.71, 340.116, 15.0875, 0.4232", "484.451, 339.286, 14.6596, 0.3366", "485.535, 339.159, 14.2614, 0.2854", "486.339, 339.953, 13.9018, 0.2952", "487.142, 340.747, 13.1788, 0.305" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "486.351, 413.929, 25.035, 0.2288", "486.768, 414.508, 24.5977, 0.4852", "486.794, 415.602, 24.2305, 0.4974", "487.359, 416.354, 24.1694, 0.6562", "488.104, 417.213, 24.1464, 0.6136", "488.906, 418.005, 24.0539, 0.6238", "489.742, 418.754, 23.9273, 0.6708", "490.59, 419.246, 23.6181, 0.5804", "491.53, 419.863, 23.3733, 0.5344", "492.464, 420.384, 23.1995, 0.6046", "493.412, 420.868, 22.8941, 0.5424", "494.443, 421.132, 22.511, 0.5354", "495.329, 421.752, 22.115, 0.5726", "495.96, 422.643, 21.7248, 0.6278", "496.438, 423.677, 21.4071, 0.563", "496.639, 424.74, 21.2636, 0.4174", "496.914, 425.798, 21.236, 0.3646", "497.474, 426.648, 21.0936, 0.493", "498.362, 427.25, 20.9409, 0.4964", "499.027, 428.104, 20.9143, 0.5002", "499.697, 429.002, 20.9749, 0.507", "500.472, 429.832, 21.0722, 0.4384", "500.995, 430.717, 21.0139, 0.4434", "501.267, 431.799, 20.9655, 0.456", "501.601, 432.893, 20.9489, 0.5184", "502.19, 433.713, 21.1196, 0.4916", "502.66, 434.742, 21.2488, 0.4324", "502.97, 435.84, 21.4027, 0.259", "503.139, 436.97, 21.5293, 0.2604", "503.267, 438.097, 21.676, 0.2404", "503.932, 438.954, 21.8047, 0.3206", "505.033, 439.235, 21.8461, 0.3608", "506.066, 439.706, 21.8614, 0.342", "506.999, 440.323, 21.8324, 0.317", "507.896, 440.997, 21.9059, 0.4378", "508.705, 441.767, 22.0447, 0.2998", "509.707, 442.293, 22.2223, 0.3068", "510.655, 442.837, 22.443, 0.316", "511.542, 443.49, 22.546, 0.406", "512.422, 444.203, 22.6707, 0.4946", "513.36, 444.834, 22.7539, 0.4708", "514.284, 445.427, 22.8607, 0.3882", "515.023, 446.271, 22.9331, 0.338", "516.021, 446.695, 22.9498, 0.456", "517.104, 446.933, 23.0294, 0.5656", "518.031, 447.539, 23.1787, 0.6168", "518.825, 448.347, 23.3226, 0.5458", "519.662, 449.103, 23.4057, 0.4906", "520.687, 449.555, 23.4597, 0.5148", "521.771, 449.893, 23.4955, 0.597", "522.625, 450.562, 23.5785, 0.479", "523.387, 451.063, 23.8908, 0.3838", "524.393, 451.322, 24.3366, 0.3324", "525.11, 451.819, 24.4913, 0.3946", "526.153, 452.041, 24.7194, 0.5758", "526.849, 452.219, 25.2307, 0.3012", "527.479, 452.688, 25.8063, 0.3106", "528.449, 453.089, 26.0416, 0.494", "529.339, 453.694, 26.0755, 0.4674", "530.292, 454.297, 26.0852, 0.2586", "531.355, 454.329, 26.1779, 0.2288", "532.485, 454.462, 26.2181, 0.2288", "533.229, 455.311, 26.2517, 0.2288", "534.104, 456.049, 26.3111, 0.2288", "535.047, 456.696, 26.365, 0.2288", "536.011, 457.309, 26.3928, 0.2288", "537.064, 457.759, 26.3948, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "486.351, 413.929, 25.035, 0.2288", "486.68, 413.713, 24.5595, 0.2288", "487.731, 413.586, 24.4454, 0.2288", "488.839, 413.831, 24.411, 0.2288", "489.876, 414.308, 24.4097, 0.2288", "490.989, 414.474, 24.4523, 0.2288", "492.132, 414.497, 24.5314, 0.2288", "493.276, 414.501, 24.6401, 0.2288", "494.341, 414.19, 24.8369, 0.2288", "494.716, 413.248, 25.1863, 0.2288", "495.187, 412.212, 25.8331, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "432.172, 386.015, 32.5035, 0.305", "432.185, 386.037, 31.2309, 0.4546", "432.119, 385.188, 30.3968, 0.4696", "432.22, 384.055, 30.0807, 0.3648", "432.818, 383.11, 29.7531, 0.3504", "433.623, 382.527, 29.2522, 0.4042", "434.243, 381.966, 28.5379, 0.3412", "434.793, 380.989, 27.9296, 0.5334", "435.749, 380.38, 26.88, 0.4322" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "432.172, 386.015, 32.5035, 0.305", "431.644, 385.208, 32.6253, 0.5638", "430.796, 384.513, 32.8236, 0.5656", "429.704, 384.183, 32.9193, 0.5848", "428.591, 384.255, 32.8563, 0.5956", "427.5, 384.51, 32.6477, 0.6356" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "453.26, 348.82, 27.4846, 0.483", "454.159, 348.571, 26.8554, 0.4956", "454.973, 347.793, 26.4163, 0.5074", "455.808, 347.016, 26.0875, 0.469", "456.582, 346.243, 25.6687, 0.4172", "457.08, 345.409, 25.0736, 0.386", "457.102, 344.417, 24.3716, 0.382", "456.746, 343.364, 23.6903, 0.4258", "456.685, 342.262, 23.0455, 0.4568", "457.208, 341.247, 22.5546, 0.5282", "457.906, 340.378, 22.3182, 0.4852", "458.457, 339.377, 22.1868, 0.4816", "458.809, 338.331, 21.9916, 0.4086", "459.304, 337.302, 21.812, 0.4064", "459.884, 336.317, 21.6403, 0.3814", "460.611, 335.47, 21.3918, 0.358", "461.324, 334.582, 21.1386, 0.4302", "462.037, 333.689, 20.9289, 0.4474", "462.772, 332.814, 20.7728, 0.4232", "463.417, 331.875, 20.6705, 0.4016", "463.918, 330.86, 20.6143, 0.4104", "464.375, 329.814, 20.5177, 0.4346", "464.988, 329.049, 20.1891, 0.4428", "465.808, 328.314, 19.7743, 0.4158", "466.459, 327.374, 19.4214, 0.4068" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "453.26, 348.82, 27.4846, 0.483", "453.015, 347.978, 24.8148, 0.3428", "452.357, 347.199, 23.6566, 0.38", "451.256, 347.036, 23.1814, 0.3814", "450.149, 346.788, 22.7047, 0.4322" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "444.692, 367.662, 36.2664, 0.356", "444.134, 367.182, 37.023, 0.3618", "443.089, 366.818, 37.3288, 0.421", "442.025, 366.827, 37.3526, 0.4108", "440.958, 367.137, 37.3372, 0.332", "440.464, 367.795, 37.6614, 0.2394", "440.051, 368.711, 38.1685, 0.4394", "439.563, 369.718, 38.5792, 0.337", "438.772, 370.365, 38.8024, 0.2948", "437.779, 370.835, 39.0552, 0.293", "436.766, 370.815, 39.5531, 0.3338", "435.928, 370.527, 40.313, 0.345", "434.948, 370.606, 41.2152, 0.2748", "434.243, 370.601, 42.2685, 0.2742", "433.671, 370.121, 43.5008, 0.2602", "432.723, 369.773, 44.6384, 0.3154", "431.602, 369.637, 45.57, 0.267", "430.506, 369.543, 46.2218, 0.3598", "429.479, 369.541, 46.8731, 0.3024", "428.818, 369.621, 47.7285, 0.2946", "428.114, 369.911, 48.7043, 0.2402", "427.077, 370.151, 49.5866, 0.3798", "425.99, 370.336, 50.1564, 0.5562", "424.871, 370.546, 50.5756, 0.5934", "423.897, 370.894, 50.9838, 0.2756", "422.959, 371.523, 51.1398, 0.5046", "421.911, 371.972, 51.1815, 0.673", "420.8, 372.185, 51.2056, 0.5574", "419.768, 372.192, 51.0983, 0.2962", "418.646, 372.325, 51.0994, 0.236", "417.562, 372.589, 51.2252, 0.3004", "416.446, 372.531, 51.4693, 0.4466", "415.439, 372.238, 51.8168, 0.5378", "414.558, 371.961, 52.3205, 0.5322", "413.451, 371.723, 52.7318, 0.3484", "412.401, 371.378, 52.9796, 0.3162", "411.523, 370.86, 53.2563, 0.521", "410.567, 370.44, 53.648, 0.2954", "409.586, 369.871, 54.0442, 0.2288", "408.561, 369.987, 54.5804, 0.2288", "407.533, 370.151, 55.244, 0.2288", "406.467, 370.263, 55.9521, 0.2288", "405.336, 370.113, 56.5222, 0.2288", "404.204, 369.951, 56.9971, 0.2288", "403.071, 369.79, 57.398, 0.2288", "401.939, 369.628, 57.7312, 0.2288", "400.878, 369.311, 58.1218, 0.2288", "399.989, 368.853, 58.6606, 0.2288", "399.102, 368.394, 60.2129, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "444.692, 367.662, 36.2664, 0.356", "444.119, 367.13, 36.577, 0.4194", "443.313, 366.325, 36.8259, 0.4782", "442.725, 365.375, 36.9494, 0.4756", "442.364, 364.3, 37.0602, 0.433", "441.994, 363.247, 37.28, 0.396", "441.494, 362.292, 37.6488, 0.375", "440.83, 361.41, 38.0901, 0.345", "440.046, 360.597, 38.5316, 0.3082", "439.246, 359.809, 38.9704, 0.3034", "438.494, 359.003, 39.3996, 0.3474", "437.793, 358.128, 39.7522, 0.4184", "437.295, 357.107, 39.9574, 0.4584", "436.992, 356.017, 39.9781, 0.4606", "436.771, 354.898, 39.8759, 0.4266", "436.603, 353.768, 39.6942, 0.3928", "436.326, 352.685, 39.3887, 0.3708", "435.981, 351.624, 38.9956, 0.3952", "435.766, 350.515, 38.5868, 0.4602", "435.563, 349.409, 38.1573, 0.5364", "435.394, 348.287, 37.7342, 0.5886", "435.409, 347.148, 37.3551, 0.581", "435.626, 346.027, 37.0168, 0.5378", "435.944, 344.958, 36.6304, 0.4718", "436.168, 343.906, 36.1502, 0.4388", "436.168, 342.786, 35.6591, 0.4326", "435.735, 341.739, 35.2069, 0.4322", "435.062, 340.817, 34.79, 0.4322", "434.583, 339.782, 34.391, 0.4154", "434.685, 338.686, 33.9282, 0.4264", "434.913, 337.886, 33.2324, 0.412", "435.164, 336.937, 32.4355, 0.4072", "434.972, 335.832, 31.7251, 0.3854", "434.515, 334.784, 31.1615, 0.36", "434.082, 333.725, 30.7339, 0.3562", "433.93, 332.592, 30.4212, 0.3338", "433.888, 331.451, 30.1728, 0.3528", "433.719, 330.366, 29.855, 0.356", "433.72, 329.273, 29.4574, 0.379", "434.362, 328.346, 29.0612, 0.3578", "435.149, 327.517, 28.7314, 0.3324", "435.889, 326.644, 28.4679, 0.3546", "436.289, 325.573, 28.264, 0.4514", "436.435, 324.438, 28.11, 0.5848", "436.378, 323.139, 27.7181, 0.4068", "435.84, 322.171, 27.4365, 0.4518", "435.174, 321.304, 27.3122, 0.4926", "434.78, 320.314, 27.2123, 0.5906", "434.887, 319.192, 27.0465, 0.677", "435.047, 318.076, 26.8186, 0.6574", "435.206, 317.0, 26.5073, 0.6356", "435.353, 315.968, 26.0514, 0.6198", "435.313, 314.88, 25.6155, 0.5988", "435.465, 313.781, 25.285, 0.5734", "435.892, 312.731, 25.0831, 0.5706", "436.352, 311.743, 25.077, 0.5256", "437.01, 310.905, 25.0859, 0.6028", "437.631, 310.008, 24.9855, 0.6776", "437.994, 308.954, 24.818, 0.5026", "437.846, 307.886, 24.7243, 0.3278", "437.314, 306.895, 24.6613, 0.4382", "437.059, 305.806, 24.5401, 0.448", "437.137, 304.671, 24.4056, 0.359", "437.229, 303.534, 24.2474, 0.3368", "437.394, 302.487, 23.9405, 0.485", "437.634, 301.404, 23.5788, 0.6476", "438.119, 300.409, 23.2073, 0.4754", "438.198, 299.299, 22.8982, 0.5496", "437.83, 298.228, 22.7, 0.4764", "436.898, 297.657, 22.6845, 0.4114", "436.216, 296.938, 22.9254, 0.4188", "435.431, 296.12, 23.1642, 0.4718", "434.584, 295.438, 23.4323, 0.4408", "433.688, 294.775, 23.5015, 0.4798", "432.621, 294.447, 23.3712, 0.577", "431.671, 293.878, 23.0527, 0.6222", "430.904, 293.124, 22.6022, 0.649", "430.573, 292.158, 22.0408, 0.588", "430.138, 291.126, 21.5784, 0.5086", "429.69, 290.121, 21.1011, 0.4788", "429.382, 289.077, 20.5982, 0.514", "428.782, 288.139, 20.0918, 0.5424", "428.132, 287.216, 19.6205, 0.4518", "427.352, 286.561, 19.1245, 0.4694", "426.571, 285.995, 18.5775, 0.5236", "426.018, 285.022, 18.1645, 0.5914", "425.409, 284.075, 17.9247, 0.5224", "424.563, 283.331, 17.8584, 0.4384", "423.836, 282.561, 18.0045, 0.5482", "423.642, 281.542, 18.2927, 0.5988", "423.914, 280.463, 18.5389, 0.5056", "424.201, 279.415, 18.5944, 0.5056", "423.986, 278.366, 18.5165, 0.5246", "423.352, 277.475, 18.4952, 0.513", "422.326, 277.108, 18.4893, 0.5076", "421.387, 276.514, 18.5456, 0.6534", "420.623, 275.666, 18.5898, 0.6374", "420.432, 274.558, 18.5844, 0.7262", "419.947, 273.561, 18.6502, 0.6822", "420.387, 272.547, 18.5966, 0.5196", "420.526, 271.594, 18.3822, 0.3802", "420.232, 270.58, 18.3987, 0.4328", "419.519, 270.046, 18.4978, 0.357", "418.631, 269.75, 18.7722, 0.4892", "418.144, 268.825, 19.152, 0.5108", "417.731, 267.853, 19.5413, 0.4508", "417.776, 266.938, 19.6341, 0.4422", "417.423, 265.924, 19.7268, 0.3152", "416.615, 265.274, 19.6872, 0.402", "415.532, 265.167, 19.6529, 0.424", "414.699, 264.629, 19.5778, 0.5192", "414.077, 263.7, 19.4674, 0.606", "413.597, 262.665, 19.4144, 0.6186", "413.301, 261.57, 19.3548, 0.5636", "412.714, 260.73, 19.4335, 0.5082", "411.82, 260.124, 19.4617, 0.5474", "411.047, 259.308, 19.5117, 0.4422", "410.203, 258.56, 19.6253, 0.4698", "409.591, 257.606, 19.7419, 0.431", "409.533, 256.491, 19.7415, 0.3342", "409.088, 255.443, 19.7374, 0.3736", "408.91, 254.333, 19.7931, 0.4388", "409.138, 253.216, 19.7759, 0.3714", "409.532, 252.142, 19.7302, 0.3958", "409.695, 251.036, 19.6103, 0.405", "409.077, 250.089, 19.4434, 0.3234", "408.825, 248.999, 19.2229, 0.2724", "409.121, 247.933, 19.0139, 0.3332", "409.84, 247.074, 18.8127, 0.4902", "410.19, 245.995, 18.6141, 0.3574", "410.702, 245.059, 18.3238, 0.3674", "411.467, 244.311, 17.9994, 0.3586", "411.738, 243.234, 17.711, 0.4086", "411.975, 242.174, 17.4188, 0.5652", "412.646, 241.28, 17.2011, 0.4998", "413.533, 240.581, 16.9769, 0.4774", "414.344, 239.828, 16.7317, 0.428", "414.831, 238.843, 16.513, 0.4932", "415.19, 237.763, 16.3792, 0.5718", "415.413, 236.658, 16.3216, 0.6358", "415.492, 235.516, 16.3139, 0.6196", "415.842, 234.448, 16.3582, 0.445", "416.361, 233.439, 16.3951, 0.4424", "416.535, 232.33, 16.4398, 0.4982", "416.953, 231.289, 16.5416, 0.68", "417.564, 230.372, 16.7551, 0.6108", "418.451, 229.747, 17.0561, 0.4888", "419.46, 230.102, 17.3857, 0.4598", "420.344, 230.82, 17.592, 0.4246", "421.105, 231.66, 17.64, 0.5338" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "440.553, 405.205, 45.6232, 0.5084", "440.087, 406.49, 47.1097, 0.4086", "439.677, 407.552, 47.7638, 0.3596", "439.2, 408.591, 47.9906, 0.3102", "438.57, 409.466, 48.347, 0.2636", "437.894, 410.101, 48.9149, 0.2388", "437.319, 410.963, 49.5323, 0.2372", "436.885, 412.01, 50.0301, 0.2484", "436.438, 413.064, 50.3882, 0.257", "435.967, 414.106, 50.6226, 0.262", "435.491, 415.146, 50.7452, 0.2668", "435.016, 416.187, 50.7872, 0.2714", "434.541, 417.227, 50.7976, 0.2762", "433.827, 418.111, 50.8063, 0.2928", "433.196, 419.063, 50.818, 0.3004", "432.734, 420.108, 50.8346, 0.2968", "432.299, 421.166, 50.8578, 0.2914", "431.865, 422.224, 50.8897, 0.2862", "431.48, 423.302, 50.9348, 0.2792", "431.336, 424.432, 50.9986, 0.2648", "430.99, 425.519, 51.0877, 0.2508", "430.412, 426.504, 51.2078, 0.2404", "429.803, 427.473, 51.3716, 0.2318", "429.296, 428.482, 51.6326, 0.229", "428.839, 429.503, 51.9957, 0.2288", "428.387, 430.525, 52.4359, 0.2288", "427.968, 431.56, 52.927, 0.2288", "427.684, 432.637, 53.4456, 0.2288", "427.458, 433.726, 53.9666, 0.2288", "427.236, 434.816, 54.4667, 0.2288", "426.567, 435.718, 54.8996, 0.2288", "425.56, 436.251, 55.2244, 0.2288", "424.516, 436.719, 55.459, 0.2288", "423.636, 437.446, 55.6422, 0.2288", "423.119, 438.461, 55.8107, 0.2288", "422.652, 439.502, 55.9807, 0.2288", "422.185, 440.543, 56.1669, 0.2288", "421.719, 441.584, 56.3752, 0.2288", "421.252, 442.625, 56.6026, 0.2288", "420.715, 443.635, 56.8263, 0.2288", "420.144, 444.627, 57.0422, 0.2288", "419.623, 445.578, 57.3846, 0.2672", "419.626, 446.714, 57.7441, 0.3292", "419.614, 447.857, 58.0866, 0.389", "418.966, 448.773, 58.4693, 0.4252", "418.319, 449.688, 58.8692, 0.4612", "417.671, 450.604, 59.2628, 0.4976", "417.024, 451.52, 60.0793, 0.5338" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "440.553, 405.205, 45.6232, 0.5084", "440.739, 405.719, 45.2474, 0.4666", "441.024, 406.692, 44.6799, 0.4264", "441.189, 407.485, 43.8785, 0.3318", "441.187, 408.375, 43.0083, 0.241", "440.988, 409.324, 42.5258, 0.4608", "440.978, 410.387, 42.3203, 0.5132", "441.204, 411.39, 42.0339, 0.4812", "441.456, 411.345, 41.4635, 0.2924", "441.37, 412.275, 40.9198, 0.413", "441.518, 413.158, 40.7719, 0.382", "441.741, 414.261, 40.7263, 0.3866", "441.934, 415.361, 40.791, 0.4536", "442.156, 416.442, 40.9352, 0.4012", "442.465, 417.531, 40.9643, 0.5334", "442.574, 418.61, 40.7918, 0.5522", "442.3, 419.681, 40.4214, 0.5336", "441.99, 420.763, 39.968, 0.451", "441.561, 421.777, 39.468, 0.3266", "441.1, 422.639, 38.8545, 0.3324", "440.949, 423.623, 38.2452, 0.5098", "440.744, 424.729, 37.8227, 0.5412", "440.608, 425.853, 37.4758, 0.388", "440.233, 426.852, 37.0647, 0.2836", "439.851, 427.618, 36.463, 0.2852", "439.096, 428.295, 35.8495, 0.3454", "438.124, 428.857, 35.4001, 0.5458", "437.574, 429.579, 35.2478, 0.5528", "437.047, 430.413, 34.958, 0.3656", "436.374, 431.275, 34.6156, 0.4486", "435.64, 431.996, 34.1995, 0.423", "434.606, 432.469, 33.8178, 0.3544", "433.63, 433.001, 33.439, 0.4064", "432.97, 433.865, 33.0394, 0.4044", "432.65, 434.918, 32.7219, 0.3826", "432.329, 435.78, 32.6715, 0.2734", "431.89, 436.596, 32.7751, 0.2986", "431.729, 437.559, 32.6326, 0.3804", "431.483, 438.568, 32.3134, 0.3522", "430.522, 439.064, 31.8872, 0.2706", "429.991, 440.059, 31.4023, 0.5338", "429.935, 440.55, 30.7955, 0.4824", "429.832, 441.452, 30.0504, 0.3878", "429.753, 442.408, 29.3196, 0.3044", "429.83, 443.516, 28.7876, 0.2748", "430.088, 444.626, 28.502, 0.309", "430.086, 445.534, 28.4959, 0.3558", "429.865, 446.072, 28.9556, 0.364", "429.605, 447.034, 29.4064, 0.4082", "429.383, 448.147, 29.794, 0.3094", "428.629, 448.893, 29.9855, 0.4446", "427.846, 449.653, 30.198, 0.4556", "427.099, 450.472, 30.2366, 0.4246", "426.218, 451.184, 30.2092, 0.4366", "425.716, 452.184, 30.2988, 0.4634", "425.195, 453.173, 30.4727, 0.4864", "424.666, 454.176, 30.6538, 0.3934", "424.139, 455.169, 30.7885, 0.493", "423.384, 456.016, 30.8977, 0.4462", "422.777, 456.969, 30.914, 0.477", "422.288, 457.936, 30.7154, 0.6446", "422.254, 458.912, 30.3895, 0.81", "422.932, 459.745, 30.1624, 0.6352", "423.639, 460.489, 29.9194, 0.3776", "423.542, 461.318, 29.4064, 0.3884", "423.155, 462.265, 28.7944, 0.545", "422.863, 463.352, 28.1884, 0.5108", "422.715, 464.422, 27.527, 0.398", "422.904, 465.361, 26.7446, 0.3232", "422.904, 466.466, 26.1792, 0.3628", "423.263, 467.474, 25.7922, 0.5348", "423.301, 468.405, 25.2695, 0.431", "423.015, 469.42, 24.7807, 0.3782", "423.253, 470.462, 24.2496, 0.25", "423.546, 471.416, 23.6296, 0.2802", "424.02, 472.399, 23.0097, 0.318", "424.337, 473.478, 22.488, 0.303", "424.581, 474.592, 22.1211, 0.333", "424.666, 475.703, 21.9022, 0.4798", "424.594, 476.816, 21.8357, 0.4756", "424.321, 477.883, 21.8183, 0.3102", "423.767, 478.782, 21.6435, 0.3518", "423.339, 479.748, 21.3287, 0.4832", "423.272, 480.863, 21.0319, 0.35", "422.709, 481.238, 20.5118, 0.4618", "421.792, 481.602, 19.9113, 0.522", "421.334, 482.425, 19.6, 0.356" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "434.992, 387.084, 44.702, 0.3814", "434.873, 386.55, 43.932, 0.4264", "434.573, 385.473, 43.1547, 0.438", "434.246, 384.408, 42.8098, 0.4186", "433.807, 383.372, 42.427, 0.3748", "433.154, 382.443, 42.0526, 0.5654", "432.313, 381.685, 41.7396, 0.523", "431.583, 381.432, 41.2157, 0.2526", "430.532, 381.561, 40.9735, 0.5498", "429.556, 381.023, 40.8736, 0.5728", "428.823, 380.152, 40.7702, 0.484", "428.222, 379.197, 40.6218, 0.5468", "427.618, 378.256, 40.4186, 0.482", "426.98, 377.351, 40.2245, 0.3996", "426.205, 376.615, 40.1604, 0.3974", "425.561, 375.676, 40.0733, 0.5214", "425.036, 374.677, 39.9291, 0.515", "424.436, 373.754, 39.7009, 0.4706", "423.71, 372.921, 39.4349, 0.4482", "422.985, 372.049, 39.2658, 0.438", "422.241, 371.215, 39.151, 0.5196", "421.372, 370.494, 39.0079, 0.6016", "420.647, 369.617, 38.8808, 0.5396", "420.012, 368.667, 38.7778, 0.4846", "419.697, 367.684, 38.6092, 0.5714", "420.02, 366.636, 38.3821, 0.7282", "420.307, 365.556, 38.1822, 0.664", "420.467, 364.442, 37.9705, 0.6346", "420.64, 363.315, 37.7899, 0.6096", "420.708, 362.174, 37.6474, 0.6568", "420.667, 361.046, 37.5827, 0.5678", "420.508, 359.932, 37.5886, 0.402", "420.403, 358.827, 37.522, 0.3922", "420.404, 357.72, 37.3209, 0.4698", "420.604, 356.618, 37.0423, 0.5582", "420.763, 355.503, 36.7315, 0.6154", "420.833, 354.435, 36.3342, 0.626", "420.918, 353.375, 35.8767, 0.583", "420.901, 352.299, 35.6, 0.5882", "420.782, 351.211, 35.4337, 0.5382", "420.548, 350.11, 35.3478, 0.5574", "420.489, 348.99, 35.3808, 0.5376", "420.42, 347.853, 35.4544, 0.4616", "420.209, 346.781, 35.6188, 0.3582", "420.091, 345.661, 35.6905, 0.4402", "420.201, 344.653, 35.53, 0.563", "420.397, 343.618, 35.2251, 0.419", "420.234, 342.529, 35.0543, 0.3448", "419.996, 341.446, 35.0311, 0.5344", "419.704, 340.345, 35.0515, 0.5626", "419.428, 339.244, 35.0518, 0.4186", "418.749, 338.339, 35.0546, 0.455", "418.818, 337.213, 35.0633, 0.3962", "418.671, 336.12, 34.9938, 0.3952", "417.938, 335.253, 35.0465, 0.436", "417.169, 334.451, 35.2716, 0.492", "416.386, 333.69, 35.6566, 0.4862", "415.406, 333.157, 36.1166, 0.3292", "414.463, 332.62, 36.6481, 0.2864", "413.512, 332.01, 37.142, 0.3344", "412.699, 331.253, 37.6001, 0.3342", "412.091, 330.315, 37.942, 0.4068", "411.458, 329.464, 38.0481, 0.4602", "410.621, 328.76, 38.162, 0.4578", "409.647, 328.366, 38.3998, 0.3868", "408.775, 327.641, 38.6411, 0.4074", "407.943, 326.891, 38.9026, 0.4084", "406.916, 326.591, 39.1832, 0.3592", "405.814, 326.463, 39.3963, 0.3854", "404.854, 325.898, 39.5962, 0.3264", "403.929, 325.255, 39.7816, 0.3356", "403.029, 324.602, 40.003, 0.316", "402.14, 323.934, 40.294, 0.2596", "401.363, 323.157, 40.6398, 0.267", "400.711, 322.251, 40.9158, 0.34", "400.056, 321.35, 41.44, 0.305" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "434.992, 387.084, 44.702, 0.3814", "434.488, 387.038, 44.5973, 0.3718", "433.345, 387.011, 44.5063, 0.3742", "432.205, 387.104, 44.4632, 0.4152", "431.06, 387.114, 44.4713, 0.4194", "429.922, 387.04, 44.5542, 0.3946", "428.839, 386.865, 44.77, 0.3412", "427.742, 387.171, 44.966, 0.2774", "426.629, 387.436, 45.1139, 0.2694", "425.491, 387.313, 45.2147, 0.2938", "424.464, 386.81, 45.2715, 0.3242", "423.441, 386.298, 45.2866, 0.3552", "422.431, 385.759, 45.2684, 0.4304", "421.305, 385.954, 45.2365, 0.4142", "420.174, 386.128, 45.1909, 0.3796", "419.041, 386.283, 45.1262, 0.3304" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "427.5, 384.51, 32.6477, 0.6356", "427.756, 383.749, 31.9589, 0.5102", "428.056, 382.778, 30.7026, 0.3762", "427.823, 381.787, 30.1546, 0.4422", "426.986, 381.125, 29.6629, 0.433", "426.171, 380.545, 29.1038, 0.4508", "425.527, 379.737, 28.4346, 0.479", "425.422, 378.804, 27.6906, 0.4708", "425.675, 377.743, 27.021, 0.5162", "426.05, 376.671, 26.4566, 0.4786", "426.676, 375.727, 26.0035, 0.5562", "427.251, 374.763, 25.5986, 0.5318", "427.776, 373.775, 25.3319, 0.3828", "428.492, 372.944, 25.1922, 0.3498", "428.977, 372.013, 24.8632, 0.2978", "429.002, 370.88, 24.4572, 0.422", "428.542, 369.884, 23.9004, 0.4926", "427.658, 369.474, 23.1207, 0.518", "426.698, 369.187, 22.2105, 0.555", "426.137, 368.303, 21.2734, 0.403", "426.032, 367.344, 20.2949, 0.507", "426.077, 366.317, 19.3932, 0.4122", "426.702, 365.387, 18.6389, 0.4456", "427.185, 364.365, 18.0782, 0.503", "427.536, 363.298, 17.6668, 0.4712", "428.108, 362.353, 17.2637, 0.5554", "428.482, 361.337, 16.8669, 0.5032", "428.58, 360.223, 16.5011, 0.5584", "428.234, 359.208, 16.0649, 0.4484", "428.285, 358.13, 15.6725, 0.4206", "428.72, 357.077, 15.3416, 0.4518", "429.0, 356.196, 14.8471, 0.4128", "428.934, 355.115, 14.3598, 0.2924", "428.737, 353.989, 13.9876, 0.2362", "427.76, 353.463, 13.7305, 0.2712", "427.741, 352.323, 13.5607, 0.3022", "427.741, 351.179, 13.4674, 0.2428", "427.618, 350.042, 13.4424, 0.23", "427.397, 348.92, 13.44, 0.3304" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "427.5, 384.51, 32.6477, 0.6356", "426.661, 384.868, 32.2773, 0.3932", "425.627, 385.054, 31.782, 0.4476", "424.492, 385.076, 31.4412, 0.5962", "423.389, 385.107, 31.3093, 0.7262", "422.267, 385.327, 31.2262, 0.761", "421.246, 385.763, 31.0708, 0.7146", "420.139, 386.033, 30.9243, 0.6636", "419.043, 386.363, 30.7958, 0.7594", "418.178, 387.111, 30.6572, 0.9114", "417.425, 387.969, 30.5038, 0.9898", "416.636, 388.739, 30.2792, 0.891", "415.932, 389.638, 30.0969, 0.7372", "415.254, 390.559, 29.9569, 0.6102" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "466.459, 327.374, 19.4214, 0.4068", "466.107, 326.986, 19.0534, 0.3904", "465.9, 326.045, 18.6503, 0.3782", "466.447, 325.101, 18.3195, 0.3814", "467.191, 324.239, 18.1398, 0.3842", "467.711, 323.252, 18.1058, 0.402", "468.077, 322.174, 18.1467, 0.445", "468.477, 321.104, 18.2298, 0.5038", "468.917, 320.049, 18.3402, 0.5414", "469.362, 318.995, 18.4441, 0.5352", "469.892, 317.985, 18.5244, 0.5076", "470.541, 317.045, 18.5854, 0.5124", "471.142, 316.078, 18.6511, 0.5706", "471.518, 315.021, 18.7499, 0.6424", "471.726, 313.908, 18.856, 0.6488", "471.675, 312.781, 18.9111, 0.5524", "471.361, 311.687, 18.8754, 0.4016", "471.157, 310.582, 18.7185, 0.3534", "471.368, 309.498, 18.446, 0.4386", "472.016, 308.593, 18.0955, 0.5716", "472.946, 307.988, 17.6775, 0.6554", "473.972, 307.557, 17.2078, 0.6638", "474.983, 307.075, 16.7265, 0.6396", "475.831, 306.347, 16.2637, 0.6326", "476.229, 305.326, 15.8198, 0.6528", "476.194, 304.21, 15.4064, 0.6662", "476.126, 303.083, 15.0349, 0.6408", "476.255, 301.978, 14.6889, 0.5778", "476.631, 300.928, 14.3776, 0.5148", "477.387, 300.102, 14.1869, 0.5054", "478.38, 299.647, 14.1949, 0.5602", "479.302, 299.032, 14.3357, 0.635", "479.809, 298.029, 14.4691, 0.6484", "479.875, 296.897, 14.5528, 0.5896", "479.767, 295.758, 14.6063, 0.5112", "479.827, 294.625, 14.5871, 0.4784", "480.072, 293.53, 14.4882, 0.4926", "480.416, 292.441, 14.4369, 0.5184", "480.76, 291.391, 14.546, 0.5316", "480.986, 290.288, 14.7398, 0.52", "481.119, 289.153, 14.9312, 0.4826", "481.482, 288.072, 15.1127, 0.418", "482.023, 287.139, 15.3754, 0.3856", "482.417, 286.069, 15.5451, 0.3988", "482.912, 285.102, 15.4861, 0.4626", "483.634, 284.224, 15.3443, 0.4432", "484.446, 283.418, 15.1854, 0.3936", "485.236, 282.6, 15.0463, 0.3016", "486.232, 282.064, 14.9251, 0.3008", "487.108, 281.379, 14.6727, 0.3266", "487.828, 280.54, 14.3107, 0.375", "488.327, 279.627, 13.7954, 0.3358", "488.744, 278.587, 13.2682, 0.2836", "489.193, 277.577, 12.7342, 0.2552", "488.941, 276.468, 12.2935, 0.2794", "488.373, 275.475, 11.76, 0.3304" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "466.459, 327.374, 19.4214, 0.4068", "466.543, 327.501, 19.8228, 0.3964", "465.551, 328.009, 19.665, 0.4064", "464.596, 328.485, 19.4856, 0.4064", "463.795, 329.3, 19.2904, 0.3928", "463.002, 330.125, 19.0895, 0.382", "462.228, 330.964, 18.8576, 0.3794", "461.608, 331.864, 18.5158, 0.3704", "460.993, 332.767, 18.1026, 0.3614", "460.419, 333.737, 17.7242, 0.3392", "459.918, 334.765, 17.4389, 0.301", "459.512, 335.835, 17.2406, 0.257", "458.6, 336.524, 17.1215, 0.2688", "457.596, 337.073, 17.0689, 0.2982", "456.489, 337.363, 17.0548, 0.356" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "450.149, 346.788, 22.7047, 0.4322", "449.949, 347.79, 20.69, 0.4376", "449.921, 348.928, 20.7948, 0.4134", "449.847, 350.046, 20.9042, 0.388", "449.748, 351.185, 20.9878, 0.4242", "449.656, 352.301, 20.9845, 0.4772", "449.206, 353.315, 20.9163, 0.5288", "448.697, 354.333, 20.9554, 0.486", "448.431, 355.278, 21.2554, 0.4588", "447.962, 356.322, 21.5583, 0.4084", "447.456, 357.328, 21.8008, 0.4318", "446.972, 358.349, 22.1411, 0.3816", "446.654, 359.428, 22.5517, 0.3814" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "450.149, 346.788, 22.7047, 0.4322", "449.934, 346.174, 22.1952, 0.305" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "419.041, 386.283, 45.1262, 0.3304", "418.393, 385.695, 46.1023, 0.291", "417.551, 384.998, 46.8138, 0.2486", "416.591, 384.424, 47.1125, 0.2288", "415.585, 383.89, 47.3903, 0.2288", "414.924, 383.034, 47.6594, 0.229", "414.455, 382.001, 47.945, 0.2336", "413.761, 381.129, 48.3011, 0.2588", "412.913, 380.396, 48.7194, 0.311", "412.083, 379.658, 49.2092, 0.3834", "411.381, 378.921, 49.8476, 0.4568", "410.398, 378.637, 50.5128, 0.4682", "409.284, 378.516, 51.1518, 0.4294", "408.164, 378.353, 51.7252, 0.3836", "407.101, 377.963, 52.2217, 0.3438", "406.872, 376.998, 52.7066, 0.3178", "407.16, 375.91, 53.1678, 0.3014", "407.472, 374.816, 53.6127, 0.2838", "407.517, 373.771, 54.171, 0.2668", "407.199, 372.745, 54.7901, 0.2478", "406.673, 371.738, 55.3364, 0.2322", "406.283, 370.664, 55.788, 0.229", "405.601, 370.122, 56.404, 0.2652", "404.839, 369.312, 56.9724, 0.2938", "404.16, 368.391, 57.386, 0.312", "403.482, 367.47, 57.6873, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "419.041, 386.283, 45.1262, 0.3304", "418.52, 386.512, 45.0363, 0.3092", "417.472, 386.972, 44.9182, 0.2664", "416.428, 387.435, 44.7563, 0.2298", "415.419, 387.902, 44.4763, 0.2288", "414.412, 388.369, 44.1098, 0.2288", "413.405, 388.835, 43.6878, 0.2288", "412.559, 389.601, 43.3045, 0.2288", "411.773, 390.432, 42.9853, 0.2396", "410.964, 391.241, 42.7174, 0.2596", "410.155, 392.05, 42.4875, 0.2796", "409.805, 392.467, 42.2108, 0.2796", "409.109, 393.299, 41.8298, 0.2796", "408.414, 394.132, 41.3748, 0.2796", "407.718, 394.964, 40.8884, 0.2796", "407.336, 396.023, 40.4953, 0.2736", "407.141, 397.149, 40.257, 0.2644", "406.911, 398.269, 40.1792, 0.255", "406.453, 399.315, 40.2483, 0.2452", "405.915, 400.324, 40.4404, 0.235", "405.669, 401.412, 40.8128, 0.2296", "405.696, 402.478, 41.3745, 0.2288", "405.769, 403.53, 42.0739, 0.2288", "405.843, 404.582, 42.8548, 0.2288", "405.918, 405.634, 43.6654, 0.2288", "405.992, 406.686, 44.4578, 0.2288", "405.7, 407.763, 45.1212, 0.2288", "405.182, 408.781, 45.5818, 0.2302", "404.778, 409.851, 45.8707, 0.2342", "404.396, 410.929, 46.0314, 0.2386", "404.015, 412.008, 46.104, 0.2426", "403.633, 413.086, 46.1252, 0.247", "403.252, 414.165, 46.128, 0.2514", "402.557, 415.072, 46.1294, 0.258", "401.54, 415.594, 46.1308, 0.2672", "400.509, 416.091, 46.1334, 0.2764", "399.726, 416.924, 46.1364, 0.2896", "399.101, 417.883, 46.1409, 0.3042", "398.314, 418.713, 46.1471, 0.2986", "397.517, 419.534, 46.1558, 0.2922", "396.722, 420.357, 46.1681, 0.2856", "395.956, 421.206, 46.1849, 0.2786", "395.387, 422.199, 46.2084, 0.273", "394.822, 423.193, 46.242, 0.267", "394.257, 424.187, 46.2893, 0.2612", "393.692, 425.182, 46.354, 0.2554", "393.315, 426.262, 46.4394, 0.2412", "392.91, 427.331, 46.5646, 0.2288", "392.308, 428.286, 46.7678, 0.2288", "391.703, 429.241, 47.0243, 0.2288", "391.101, 430.197, 47.3102, 0.2288", "390.496, 431.152, 47.6034, 0.2288", "389.894, 432.107, 47.8831, 0.2288", "389.544, 433.22, 48.0645, 0.2912", "389.205, 434.313, 48.1547, 0.3234", "388.873, 435.408, 48.1695, 0.321", "388.541, 436.502, 48.1244, 0.3142", "388.21, 437.597, 48.0348, 0.3076", "387.683, 438.525, 47.7722, 0.3052", "387.109, 439.511, 47.5154, 0.305", "386.541, 440.504, 47.2836, 0.305", "385.974, 441.498, 47.0702, 0.305", "385.407, 442.491, 46.8709, 0.305", "384.838, 443.484, 46.6833, 0.305", "384.354, 444.439, 46.3663, 0.305", "383.921, 445.351, 45.8948, 0.305", "383.387, 446.361, 45.5123, 0.305", "382.849, 447.371, 45.2166, 0.305", "382.315, 448.383, 44.9977, 0.305", "381.777, 449.393, 44.8456, 0.305", "381.24, 450.403, 44.7457, 0.305", "380.737, 451.43, 44.6648, 0.305", "380.562, 452.552, 44.5276, 0.305", "380.393, 453.675, 44.3523, 0.305", "380.222, 454.797, 44.1566, 0.305", "379.801, 455.86, 43.7996, 0.305" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "415.254, 390.559, 29.9569, 0.6102", "414.335, 390.868, 29.9432, 0.5544", "413.39, 391.457, 29.9807, 0.5588", "412.561, 392.235, 29.9681, 0.571", "411.748, 393.022, 29.8738, 0.524", "410.891, 393.768, 29.7441, 0.4644", "409.965, 394.431, 29.5943, 0.4276", "409.042, 395.003, 29.335, 0.413", "408.134, 395.569, 28.989, 0.402", "407.226, 396.224, 28.7146, 0.394", "406.431, 396.987, 28.6154, 0.403", "405.722, 397.797, 28.6773, 0.4156", "404.989, 398.629, 28.7655, 0.4258", "404.311, 399.433, 28.6815, 0.4318", "403.529, 400.08, 28.4099, 0.4278", "402.59, 400.673, 28.0734, 0.4152", "401.564, 401.151, 27.7608, 0.4136", "400.466, 401.454, 27.5418, 0.437", "399.35, 401.689, 27.4219, 0.47", "398.261, 402.023, 27.3739, 0.4748", "397.272, 402.582, 27.3528, 0.4898", "396.547, 403.412, 27.3882, 0.4676", "395.623, 403.97, 27.4033, 0.4338", "394.539, 404.326, 27.3372, 0.4242", "393.574, 404.919, 27.2122, 0.4312", "392.678, 405.629, 27.0621, 0.4644", "391.848, 406.358, 26.8099, 0.4426", "391.153, 406.873, 26.3381, 0.3676", "390.269, 407.581, 26.0372, 0.3994", "389.487, 408.4, 25.7956, 0.4202", "388.652, 409.155, 25.6259, 0.4644", "387.767, 409.793, 25.6922, 0.4106", "386.981, 410.487, 25.9661, 0.4104", "386.209, 411.274, 26.2916, 0.4556", "385.256, 411.687, 26.6428, 0.3894", "384.17, 411.933, 26.8038, 0.5596", "383.098, 412.225, 26.8244, 0.5586", "381.961, 412.326, 26.766, 0.6776", "380.823, 412.339, 26.6301, 0.5946", "379.714, 412.478, 26.4842, 0.5386", "378.69, 412.932, 26.3108, 0.6416", "377.632, 413.186, 26.1319, 0.6222", "376.529, 412.982, 25.9608, 0.5492", "375.46, 412.739, 25.7228, 0.4216", "374.348, 412.658, 25.4873, 0.3492", "373.284, 412.669, 25.4366, 0.4406", "372.196, 412.783, 25.4729, 0.471", "371.099, 413.064, 25.5459, 0.3448", "370.057, 413.474, 25.5693, 0.4928", "368.961, 413.745, 25.5627, 0.4388", "367.848, 414.004, 25.5485, 0.2886", "366.804, 414.457, 25.5128, 0.2356", "365.903, 415.148, 25.4534, 0.2874", "365.036, 415.862, 25.4513, 0.258", "364.076, 416.387, 25.3682, 0.405", "363.192, 417.076, 25.2594, 0.3988", "362.371, 417.871, 25.1227, 0.3752", "361.378, 418.412, 24.9813, 0.2866", "360.365, 418.936, 24.7962, 0.4424", "359.334, 419.416, 24.5398, 0.504", "358.559, 420.049, 24.1008, 0.452", "357.841, 420.888, 23.605, 0.3132", "356.84, 421.404, 23.1587, 0.2982", "355.865, 421.994, 22.8013, 0.237", "354.911, 422.47, 22.371, 0.2288", "354.18, 423.181, 21.8609, 0.3792", "354.067, 424.31, 21.0, 0.3304" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "415.254, 390.559, 29.9569, 0.6102", "414.58, 391.661, 29.0707, 0.4652", "414.151, 392.599, 28.1064, 0.4758", "413.596, 393.51, 27.663, 0.55", "413.167, 394.546, 27.3033, 0.548", "413.313, 395.601, 27.042, 0.484", "413.869, 396.497, 26.7605, 0.5482", "414.168, 397.479, 26.346, 0.5716", "414.194, 398.57, 25.9575, 0.5452", "413.945, 399.683, 25.6162, 0.6562", "413.874, 400.804, 25.2752, 0.6488", "413.807, 401.926, 24.971, 0.599", "413.46, 402.921, 24.6136, 0.6138", "413.251, 403.909, 24.1593, 0.538", "413.191, 404.992, 23.8134, 0.4772", "413.067, 406.112, 23.6107, 0.565", "412.873, 407.202, 23.3901, 0.5608", "412.658, 408.304, 23.1709, 0.459", "412.344, 409.395, 23.0026, 0.569", "411.777, 410.32, 23.0056, 0.5128", "411.173, 411.273, 23.0368, 0.3518", "410.682, 412.294, 23.0297, 0.4182", "410.279, 413.331, 23.1206, 0.5356", "410.158, 414.447, 23.1709, 0.6248", "409.679, 415.438, 23.2822, 0.5488", "409.074, 416.379, 23.4134, 0.6198", "408.441, 417.291, 23.3848, 0.7158", "407.718, 418.176, 23.3, 0.5344", "407.428, 419.277, 23.128, 0.6004", "407.257, 420.407, 22.9109, 0.5606", "406.909, 421.496, 22.6642, 0.6192", "406.446, 422.525, 22.3653, 0.7128", "406.216, 423.441, 21.8643, 0.5812", "405.808, 424.448, 21.3195, 0.3404", "405.51, 425.52, 20.8002, 0.4238", "405.232, 426.625, 20.4172, 0.462", "404.8, 427.66, 20.198, 0.4738", "404.7, 428.777, 20.1016, 0.4878", "404.928, 429.872, 19.985, 0.4344", "405.309, 430.78, 19.7264, 0.57", "404.795, 431.643, 19.3066, 0.4334", "404.117, 432.49, 19.0037, 0.4684", "403.505, 433.345, 18.825, 0.4948", "403.219, 434.319, 18.5121, 0.514", "403.292, 435.311, 18.0408, 0.4638", "403.686, 436.317, 17.5788, 0.3534", "404.098, 437.378, 17.1929, 0.3856", "404.549, 438.191, 16.6958, 0.3682", "404.894, 439.187, 16.3026, 0.4036", "404.818, 440.123, 16.2673, 0.4542", "404.465, 441.121, 16.414, 0.4678", "404.355, 442.225, 16.449, 0.4438", "404.308, 443.269, 16.5116, 0.3148", "404.181, 444.254, 16.2962, 0.3396", "404.241, 445.341, 15.9188, 0.3572", "404.33, 446.415, 15.4467, 0.4734", "404.659, 447.438, 14.9189, 0.5694", "404.683, 448.544, 14.5028, 0.4392", "404.724, 449.655, 14.1731, 0.3108", "405.16, 450.555, 14.0766, 0.382", "405.313, 451.588, 14.1207, 0.4796", "404.845, 452.469, 14.0366, 0.5708", "404.06, 453.253, 14.0, 0.3814" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "446.654, 359.428, 22.5517, 0.3814", "446.287, 360.125, 23.0474, 0.3338", "445.644, 360.953, 23.6222, 0.3254", "444.926, 361.784, 24.2104, 0.3886", "444.181, 362.633, 24.7377, 0.5094", "443.362, 363.402, 25.1784, 0.6208", "442.45, 364.072, 25.5088, 0.6452", "441.468, 364.651, 25.6958, 0.5664", "440.425, 365.119, 25.7462, 0.4678", "439.331, 365.44, 25.6818, 0.409", "438.222, 365.392, 25.4861, 0.4076", "437.211, 364.926, 25.1673, 0.4142", "436.224, 364.364, 24.7722, 0.421", "435.187, 363.935, 24.2925, 0.4408", "434.139, 363.524, 23.7472, 0.4776", "433.106, 363.102, 23.1441, 0.5138", "432.208, 362.561, 22.4493, 0.5174", "432.018, 361.954, 21.5701, 0.3332", "431.384, 361.449, 20.6334, 0.2318", "430.766, 360.51, 19.9758, 0.2288", "430.286, 359.477, 19.5656, 0.2288", "430.614, 358.395, 19.3261, 0.2288", "431.485, 357.653, 19.236, 0.2288", "432.261, 356.812, 19.2376, 0.2288", "433.029, 355.966, 19.2881, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "446.654, 359.428, 22.5517, 0.3814", "446.51, 359.384, 19.593, 0.3002", "446.335, 359.469, 17.4504, 0.2494", "445.803, 359.672, 16.4628, 0.2322", "444.787, 359.584, 15.591, 0.2288", "443.689, 359.274, 14.9772, 0.2288", "442.573, 359.035, 14.5983, 0.2288", "441.438, 359.024, 14.4311, 0.2288", "440.354, 359.116, 14.5219, 0.2288", "439.43, 359.446, 14.8002, 0.2288", "438.746, 360.274, 14.9926, 0.2288", "437.882, 360.822, 14.8926, 0.2288", "436.839, 360.996, 14.5738, 0.2288", "436.696, 360.055, 14.142, 0.254", "437.579, 359.445, 12.88, 0.2796" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "449.934, 346.174, 22.1952, 0.305", "449.591, 345.505, 21.7483, 0.3318", "449.042, 344.518, 21.3316, 0.3698", "448.454, 343.548, 20.9607, 0.4078", "447.833, 342.59, 20.6386, 0.4364", "447.176, 341.655, 20.355, 0.4416", "446.5, 340.736, 20.0715, 0.435", "445.817, 339.855, 19.7192, 0.4394", "445.063, 339.067, 19.2819, 0.4642", "444.182, 338.402, 18.8071, 0.5006", "443.259, 337.761, 18.3416, 0.5354", "442.511, 336.932, 17.9227, 0.56", "442.17, 335.87, 17.5808, 0.5756", "442.054, 334.74, 17.3076, 0.589", "441.869, 333.617, 17.1179, 0.596", "441.542, 332.523, 17.0252, 0.5784", "441.026, 331.514, 16.9692, 0.5358", "440.264, 330.681, 16.9233, 0.4912", "439.367, 329.986, 16.9508, 0.4734", "438.435, 329.352, 17.0752, 0.4856", "437.538, 328.671, 17.2627, 0.51", "436.758, 327.848, 17.4388, 0.5102", "435.951, 327.039, 17.5799, 0.4734", "434.988, 326.45, 17.7027, 0.422", "434.086, 325.757, 17.7641, 0.4008", "433.747, 324.723, 17.6905, 0.4308", "433.762, 323.586, 17.5452, 0.4952", "433.498, 322.481, 17.3521, 0.6008", "432.889, 321.527, 17.1008, 0.6522", "432.333, 320.541, 16.7863, 0.6374", "432.015, 319.472, 16.4147, 0.592", "431.717, 318.426, 15.9863, 0.5652", "431.263, 317.446, 15.5272, 0.5596", "430.615, 316.525, 15.1372, 0.5462", "430.029, 315.546, 14.8889, 0.4814", "429.597, 314.585, 14.8572, 0.395", "429.129, 313.713, 15.0266, 0.3146", "428.427, 312.891, 15.243, 0.2676", "427.714, 312.15, 15.1659, 0.2354", "427.753, 311.366, 14.7165, 0.2288", "428.627, 310.906, 13.0396, 0.2542" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "449.934, 346.174, 22.1952, 0.305", "450.22, 345.727, 19.6819, 0.381", "450.581, 344.922, 18.1863, 0.4448", "451.037, 343.976, 17.5491, 0.4588", "451.725, 343.112, 16.9162, 0.423", "452.581, 342.372, 16.3612, 0.3592", "453.147, 341.414, 15.8711, 0.322", "452.826, 340.359, 15.4741, 0.3954", "452.413, 339.294, 15.2536, 0.4926", "452.367, 338.155, 15.1293, 0.5296", "452.435, 337.012, 15.0418, 0.4866", "452.756, 335.917, 14.978, 0.4266", "452.809, 334.875, 15.0506, 0.3694", "453.016, 333.753, 15.0388, 0.3126", "453.192, 332.894, 14.6582, 0.305", "453.532, 332.021, 14.0415, 0.329", "453.994, 330.979, 13.476, 0.3796", "454.023, 329.836, 13.0, 0.3322", "453.815, 328.712, 12.5955, 0.3054", "453.137, 327.87, 11.76, 0.2796" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "403.482, 367.47, 57.6873, 0.3304", "403.647, 367.257, 57.9396, 0.3244", "404.329, 366.375, 58.2151, 0.2994", "404.937, 365.422, 58.4606, 0.279", "405.418, 364.386, 58.6575, 0.2664", "405.866, 363.333, 58.8115, 0.2554", "406.31, 362.279, 58.9263, 0.2436", "406.754, 361.225, 59.0094, 0.2322", "406.964, 360.102, 59.0716, 0.2292", "407.089, 358.964, 59.1371, 0.2288", "407.498, 357.897, 59.2136, 0.2288", "408.425, 357.24, 59.3258, 0.2288", "409.129, 356.421, 59.5672, 0.2288", "410.153, 355.916, 59.7685, 0.2288", "411.056, 355.214, 60.0793, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "403.482, 367.47, 57.6873, 0.3304", "402.701, 366.691, 57.6892, 0.2822", "402.033, 365.763, 57.864, 0.2362", "402.158, 364.642, 57.9356, 0.229", "401.862, 363.538, 58.0188, 0.2288", "401.461, 362.467, 58.1101, 0.2288", "400.748, 361.648, 58.3299, 0.2288", "400.298, 360.604, 58.5522, 0.2288", "399.988, 359.502, 58.9165, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_44", "dend_41", "dend_36", "dend_35", "dend_26", "dend_11", "dend_0", "dend_51", "dend_50", "dend_48", "dend_45", "dend_43", "dend_42", "dend_40", "dend_37", "dend_34", "dend_27", "dend_15", "dend_12", "dend_8", "dend_1", "dend_53", "dend_52", "dend_47", "dend_46", "dend_39", "dend_38", "dend_33", "dend_28", "dend_23", "dend_16", "dend_14", "dend_13", "dend_10", "dend_9", "dend_7", "dend_2", "dend_32", "dend_29", "dend_25", "dend_24", "dend_20", "dend_17", "dend_4", "dend_3", "dend_31", "dend_30", "dend_22", "dend_21", "dend_19", "dend_18", "dend_6", "dend_5" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12649",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.5279788"
  }, {
    "group" : "axon",
    "value" : "1.5279788"
  }, {
    "group" : "dend",
    "value" : "1.5279788"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "85.18745"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.003153942",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.037263636",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.278427E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.06921077",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.1819464",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.049117353",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.001189832",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.060787E-6",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.1410919E-4",
    "erev" : "-79.57963"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.384058E-4",
    "erev" : "-79.57963"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.2192376E-7",
    "erev" : "-79.57963"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.945268E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.66963E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513411",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513411

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_26
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_49, dend_44, dend_41, dend_36, dend_35, dend_26, dend_11, dend_0, dend_51, dend_50, dend_48, dend_45, dend_43, dend_42, dend_40, dend_37, dend_34, dend_27, dend_15, dend_12, dend_8, dend_1, dend_53, dend_52, dend_47, dend_46, dend_39, dend_38, dend_33, dend_28, dend_23, dend_16, dend_14, dend_13, dend_10, dend_9, dend_7, dend_2, dend_32, dend_29, dend_25, dend_24, dend_20, dend_17, dend_4, dend_3, dend_31, dend_30, dend_22, dend_21, dend_19, dend_18, dend_6, dend_5]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_12649, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_12649
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513411
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000362450163115)
    connect dend_49(0), soma_0(0.5000362450163115)
    connect dend_44(0), soma_0(0.5000362450163115)
    connect dend_41(0), soma_0(0.5000362450163115)
    connect dend_36(0), soma_0(0.5000362450163115)
    connect dend_35(0), soma_0(0.5000362450163115)
    connect dend_26(0), soma_0(0.5000362450163115)
    connect dend_11(0), soma_0(0.5000362450163115)
    connect dend_0(0), soma_0(0.5000362450163115)
    connect axon_1(0), axon_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_34(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 441.207, 380.952, 31.92, 13.795 ) }
    soma_0 { pt3dadd( 448.105, 380.952, 31.92, 13.795 ) }
    soma_0 { pt3dadd( 455.002, 380.952, 31.92, 13.795 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 448.104, 380.952, 31.92, 1.0 ) }
    axon_0 { pt3dadd( 453.946, 394.768, 31.92, 1.0 ) }
    axon_0 { pt3dadd( 459.787, 408.584, 31.92, 1.0 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 452.437, 376.882, 33.049, 1.3966 ) }
    dend_49 { pt3dadd( 453.2, 376.043, 33.8444, 0.5658 ) }
    dend_49 { pt3dadd( 453.818, 375.108, 34.1897, 0.4764 ) }
    dend_49 { pt3dadd( 454.516, 374.225, 34.6066, 0.4506 ) }
    dend_49 { pt3dadd( 455.298, 373.451, 35.1044, 0.4246 ) }
    dend_49 { pt3dadd( 455.985, 372.63, 35.6787, 0.4686 ) }
    dend_49 { pt3dadd( 456.545, 371.713, 36.276, 0.5364 ) }
    dend_49 { pt3dadd( 457.107, 370.744, 36.8004, 0.5614 ) }
    dend_49 { pt3dadd( 457.641, 369.741, 37.2176, 0.5994 ) }
    dend_49 { pt3dadd( 458.314, 368.844, 37.436, 0.6364 ) }
    dend_49 { pt3dadd( 458.983, 367.944, 37.4889, 0.6966 ) }
    dend_49 { pt3dadd( 459.616, 366.996, 37.5222, 0.7232 ) }
    dend_49 { pt3dadd( 460.349, 366.134, 37.6079, 0.682 ) }
    dend_49 { pt3dadd( 461.278, 365.479, 37.732, 0.5902 ) }
    dend_49 { pt3dadd( 462.319, 365.03, 37.9179, 0.5044 ) }
    dend_49 { pt3dadd( 463.388, 364.655, 38.1721, 0.4888 ) }
    dend_49 { pt3dadd( 464.515, 364.498, 38.3944, 0.5042 ) }
    dend_49 { pt3dadd( 465.649, 364.448, 38.6294, 0.503 ) }
    dend_49 { pt3dadd( 466.752, 364.315, 38.9211, 0.4868 ) }
    dend_49 { pt3dadd( 467.835, 363.992, 39.2123, 0.4832 ) }
    dend_49 { pt3dadd( 468.925, 363.651, 39.4271, 0.483 ) }
    dend_49 { pt3dadd( 470.022, 363.339, 39.6214, 0.476 ) }
    dend_49 { pt3dadd( 471.139, 363.118, 39.8068, 0.4838 ) }
    dend_49 { pt3dadd( 472.281, 363.067, 39.947, 0.5358 ) }
    dend_49 { pt3dadd( 473.382, 362.869, 40.1162, 0.557 ) }
    dend_49 { pt3dadd( 474.48, 362.579, 40.276, 0.511 ) }
    dend_49 { pt3dadd( 475.393, 361.908, 40.3749, 0.4182 ) }
    dend_49 { pt3dadd( 476.119, 361.062, 40.3416, 0.3672 ) }
    dend_49 { pt3dadd( 476.673, 360.073, 40.2514, 0.3578 ) }
    dend_49 { pt3dadd( 477.414, 359.207, 40.1789, 0.411 ) }
    dend_49 { pt3dadd( 478.015, 358.273, 40.2055, 0.4886 ) }
    dend_49 { pt3dadd( 478.845, 357.5, 40.25, 0.5638 ) }
    dend_49 { pt3dadd( 479.795, 356.904, 40.2128, 0.5786 ) }
    dend_49 { pt3dadd( 480.846, 356.481, 40.1352, 0.5184 ) }
    dend_49 { pt3dadd( 481.951, 356.19, 40.0716, 0.4228 ) }
    dend_49 { pt3dadd( 483.038, 355.864, 40.063, 0.3238 ) }
    dend_49 { pt3dadd( 484.12, 355.498, 40.0702, 0.2648 ) }
    dend_49 { pt3dadd( 485.134, 355.121, 39.9616, 0.2596 ) }
    dend_49 { pt3dadd( 486.094, 354.514, 39.9204, 0.3068 ) }
    dend_49 { pt3dadd( 487.043, 353.882, 39.9358, 0.377 ) }
    dend_49 { pt3dadd( 487.957, 353.204, 39.9946, 0.4316 ) }
    dend_49 { pt3dadd( 488.956, 352.698, 40.117, 0.4798 ) }
    dend_49 { pt3dadd( 490.035, 352.322, 40.1932, 0.5086 ) }
    dend_49 { pt3dadd( 491.085, 351.929, 40.1626, 0.5246 ) }
    dend_49 { pt3dadd( 492.095, 351.398, 40.1184, 0.4806 ) }
    dend_49 { pt3dadd( 493.161, 351.03, 40.1198, 0.4288 ) }
    dend_49 { pt3dadd( 494.257, 350.78, 40.0179, 0.3878 ) }
    dend_49 { pt3dadd( 495.35, 350.749, 39.7958, 0.4096 ) }
    dend_49 { pt3dadd( 496.489, 350.742, 39.6553, 0.4356 ) }
    dend_49 { pt3dadd( 497.628, 350.698, 39.5763, 0.457 ) }
    dend_49 { pt3dadd( 498.753, 350.493, 39.4901, 0.4664 ) }
    dend_49 { pt3dadd( 499.825, 350.096, 39.3898, 0.5214 ) }
    dend_49 { pt3dadd( 500.84, 349.568, 39.2815, 0.5042 ) }
    dend_49 { pt3dadd( 501.754, 348.888, 39.1289, 0.4848 ) }
    dend_49 { pt3dadd( 502.643, 348.241, 38.8578, 0.483 ) }
    dend_49 { pt3dadd( 503.491, 347.61, 38.4756, 0.4762 ) }
    dend_49 { pt3dadd( 504.352, 346.908, 38.0929, 0.4342 ) }
    dend_49 { pt3dadd( 505.303, 346.304, 37.8913, 0.3732 ) }
    dend_49 { pt3dadd( 506.004, 345.509, 37.9061, 0.3632 ) }
    dend_49 { pt3dadd( 506.631, 344.645, 38.0573, 0.3812 ) }
    dend_49 { pt3dadd( 507.388, 343.787, 38.1374, 0.5074 ) }
    dend_49 { pt3dadd( 507.878, 342.804, 38.0027, 0.5084 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 68/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 452.864, 377.535, 29.818, 1.3486 ) }
    dend_44 { pt3dadd( 453.926, 377.133, 29.6783, 0.5526 ) }
    dend_44 { pt3dadd( 454.985, 376.709, 29.6243, 0.464 ) }
    dend_44 { pt3dadd( 456.016, 376.267, 29.5232, 0.439 ) }
    dend_44 { pt3dadd( 456.95, 375.621, 29.4504, 0.4048 ) }
    dend_44 { pt3dadd( 457.648, 374.742, 29.5014, 0.3526 ) }
    dend_44 { pt3dadd( 458.17, 373.744, 29.6568, 0.3478 ) }
    dend_44 { pt3dadd( 458.395, 372.651, 29.906, 0.3854 ) }
    dend_44 { pt3dadd( 458.146, 371.561, 30.1983, 0.4688 ) }
    dend_44 { pt3dadd( 457.771, 370.482, 30.4576, 0.5032 ) }
    dend_44 { pt3dadd( 457.427, 369.392, 30.6446, 0.5082 ) }
    dend_44 { pt3dadd( 457.285, 368.268, 30.7854, 0.4578 ) }
    dend_44 { pt3dadd( 457.262, 367.159, 30.9089, 0.4354 ) }
    dend_44 { pt3dadd( 457.287, 366.042, 30.9837, 0.4324 ) }
    dend_44 { pt3dadd( 457.454, 364.938, 30.8412, 0.4504 ) }
    dend_44 { pt3dadd( 457.705, 363.974, 30.4077, 0.4756 ) }
    dend_44 { pt3dadd( 458.1, 363.094, 29.7419, 0.5016 ) }
    dend_44 { pt3dadd( 458.628, 362.197, 28.9713, 0.5276 ) }
    dend_44 { pt3dadd( 459.251, 361.258, 28.257, 0.4932 ) }
    dend_44 { pt3dadd( 460.114, 360.512, 27.6815, 0.4632 ) }
    dend_44 { pt3dadd( 461.135, 360.001, 27.2513, 0.4166 ) }
    dend_44 { pt3dadd( 462.22, 359.64, 26.916, 0.428 ) }
    dend_44 { pt3dadd( 463.319, 359.47, 26.5557, 0.4108 ) }
    dend_44 { pt3dadd( 464.455, 359.446, 26.1988, 0.407 ) }
    dend_44 { pt3dadd( 465.597, 359.445, 25.8494, 0.3644 ) }
    dend_44 { pt3dadd( 466.696, 359.443, 25.4166, 0.3128 ) }
    dend_44 { pt3dadd( 467.699, 359.433, 24.8523, 0.4616 ) }
    dend_44 { pt3dadd( 468.802, 359.359, 24.308, 0.5256 ) }
    dend_44 { pt3dadd( 469.756, 358.765, 23.9679, 0.4802 ) }
    dend_44 { pt3dadd( 470.586, 357.98, 23.736, 0.3914 ) }
    dend_44 { pt3dadd( 471.313, 357.11, 23.5075, 0.34 ) }
    dend_44 { pt3dadd( 472.032, 356.22, 23.3358, 0.3724 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_44 { pt3dadd( 472.767, 355.345, 23.2068, 0.4462 ) }
    dend_44 { pt3dadd( 473.454, 354.505, 22.9339, 0.5022 ) }
    dend_44 { pt3dadd( 474.153, 353.686, 22.5359, 0.5084 ) }
    dend_44 { pt3dadd( 474.711, 352.69, 22.1863, 0.485 ) }
    dend_44 { pt3dadd( 475.326, 351.726, 21.8985, 0.483 ) }
    dend_44 { pt3dadd( 475.707, 350.667, 21.6072, 0.5538 ) }
    dend_44 { pt3dadd( 475.981, 349.562, 21.4432, 0.6076 ) }
    dend_44 { pt3dadd( 475.959, 348.43, 21.2907, 0.6352 ) }
    dend_44 { pt3dadd( 475.695, 347.326, 21.1473, 0.5598 ) }
    dend_44 { pt3dadd( 475.718, 346.184, 21.0678, 0.5338 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 10/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 451.886, 376.101, 38.9634, 0.4512 ) }
    dend_41 { pt3dadd( 452.525, 375.285, 39.8479, 0.4768 ) }
    dend_41 { pt3dadd( 453.258, 374.531, 40.2578, 0.5078 ) }
    dend_41 { pt3dadd( 454.279, 374.106, 40.6216, 0.5372 ) }
    dend_41 { pt3dadd( 455.308, 373.681, 40.8727, 0.5592 ) }
    dend_41 { pt3dadd( 456.22, 373.045, 40.962, 0.502 ) }
    dend_41 { pt3dadd( 457.169, 372.512, 40.8895, 0.4258 ) }
    dend_41 { pt3dadd( 458.126, 371.954, 40.8162, 0.361 ) }
    dend_41 { pt3dadd( 459.107, 371.535, 40.9259, 0.4646 ) }
    dend_41 { pt3dadd( 460.154, 371.193, 41.1348, 0.5648 ) }
    dend_41 { pt3dadd( 461.239, 370.895, 41.3286, 0.4968 ) }
    dend_41 { pt3dadd( 462.301, 370.647, 41.6452, 0.434 ) }
    dend_41 { pt3dadd( 463.319, 370.293, 42.1112, 0.5808 ) }
    dend_41 { pt3dadd( 464.24, 369.764, 42.66, 0.5184 ) }
    dend_41 { pt3dadd( 465.044, 369.227, 43.2989, 0.416 ) }
    dend_41 { pt3dadd( 465.989, 368.835, 43.9354, 0.357 ) }
    dend_41 { pt3dadd( 466.788, 368.092, 44.399, 0.533 ) }
    dend_41 { pt3dadd( 467.718, 367.615, 44.5315, 0.6144 ) }
    dend_41 { pt3dadd( 468.627, 367.118, 44.35, 0.5972 ) }
    dend_41 { pt3dadd( 469.342, 366.29, 44.0322, 0.5624 ) }
    dend_41 { pt3dadd( 470.13, 365.476, 43.6856, 0.6004 ) }
    dend_41 { pt3dadd( 470.816, 364.577, 43.3597, 0.614 ) }
    dend_41 { pt3dadd( 471.275, 363.543, 43.1634, 0.5098 ) }
    dend_41 { pt3dadd( 471.568, 362.464, 43.1385, 0.5212 ) }
    dend_41 { pt3dadd( 471.544, 361.336, 43.1978, 0.5158 ) }
    dend_41 { pt3dadd( 471.616, 360.215, 43.1634, 0.5198 ) }
    dend_41 { pt3dadd( 471.837, 359.105, 43.0559, 0.4782 ) }
    dend_41 { pt3dadd( 472.576, 358.242, 42.9268, 0.4372 ) }
    dend_41 { pt3dadd( 473.355, 357.411, 42.8299, 0.3874 ) }
    dend_41 { pt3dadd( 473.942, 356.431, 42.7, 0.403 ) }
    dend_41 { pt3dadd( 474.292, 355.379, 42.4872, 0.4498 ) }
    dend_41 { pt3dadd( 474.586, 354.276, 42.2962, 0.523 ) }
    dend_41 { pt3dadd( 474.65, 353.134, 42.1406, 0.5996 ) }
    dend_41 { pt3dadd( 474.712, 351.994, 42.0213, 0.6536 ) }
    dend_41 { pt3dadd( 475.048, 350.931, 41.9905, 0.6608 ) }
    dend_41 { pt3dadd( 475.759, 350.036, 41.9233, 0.592 ) }
    dend_41 { pt3dadd( 476.239, 349.184, 41.6265, 0.4662 ) }
    dend_41 { pt3dadd( 476.746, 348.186, 41.2793, 0.3372 ) }
    dend_41 { pt3dadd( 477.274, 347.202, 40.896, 0.258 ) }
    dend_41 { pt3dadd( 477.796, 346.2, 40.6479, 0.2292 ) }
    dend_41 { pt3dadd( 477.923, 345.103, 40.5476, 0.2542 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 51/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 450.046, 387.385, 31.7472, 0.531 ) }
    dend_36 { pt3dadd( 450.943, 387.946, 30.6972, 0.3738 ) }
    dend_36 { pt3dadd( 451.925, 387.866, 30.2014, 0.3962 ) }
    dend_36 { pt3dadd( 452.949, 387.642, 29.6512, 0.4508 ) }
    dend_36 { pt3dadd( 454.011, 387.901, 29.1598, 0.522 ) }
    dend_36 { pt3dadd( 454.953, 388.538, 28.8428, 0.5544 ) }
    dend_36 { pt3dadd( 455.715, 389.364, 28.7927, 0.5436 ) }
    dend_36 { pt3dadd( 456.291, 390.277, 29.0287, 0.519 ) }
    dend_36 { pt3dadd( 456.851, 391.237, 29.4252, 0.5094 ) }
    dend_36 { pt3dadd( 457.545, 392.091, 29.9088, 0.542 ) }
    dend_36 { pt3dadd( 458.431, 392.585, 30.4741, 0.5394 ) }
    dend_36 { pt3dadd( 459.507, 392.556, 30.9823, 0.4954 ) }
    dend_36 { pt3dadd( 460.617, 392.818, 31.2903, 0.4022 ) }
    dend_36 { pt3dadd( 461.556, 393.382, 31.2796, 0.3392 ) }
    dend_36 { pt3dadd( 462.0, 394.35, 31.0019, 0.3082 ) }
    dend_36 { pt3dadd( 462.254, 395.378, 30.5248, 0.3274 ) }
    dend_36 { pt3dadd( 462.312, 396.47, 29.9597, 0.353 ) }
    dend_36 { pt3dadd( 462.531, 397.589, 29.5257, 0.4286 ) }
    dend_36 { pt3dadd( 463.281, 398.44, 29.2331, 0.5056 ) }
    dend_36 { pt3dadd( 464.092, 399.247, 28.9923, 0.6082 ) }
    dend_36 { pt3dadd( 465.081, 399.699, 28.6661, 0.6102 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 444.461, 385.737, 29.5792, 1.1462 ) }
    dend_35 { pt3dadd( 443.955, 386.735, 28.8322, 0.4238 ) }
    dend_35 { pt3dadd( 443.942, 387.847, 28.5466, 0.502 ) }
    dend_35 { pt3dadd( 444.564, 388.761, 28.1666, 0.5226 ) }
    dend_35 { pt3dadd( 445.284, 389.523, 27.6639, 0.4658 ) }
    dend_35 { pt3dadd( 445.569, 390.572, 27.1876, 0.4806 ) }
    dend_35 { pt3dadd( 445.417, 391.625, 26.7098, 0.3914 ) }
    dend_35 { pt3dadd( 445.874, 392.536, 26.165, 0.4008 ) }
    dend_35 { pt3dadd( 446.344, 393.499, 25.7264, 0.3954 ) }
    dend_35 { pt3dadd( 446.198, 394.609, 25.3885, 0.4962 ) }
    dend_35 { pt3dadd( 446.197, 395.654, 24.9869, 0.4984 ) }
    dend_35 { pt3dadd( 446.889, 396.461, 24.4645, 0.4704 ) }
    dend_35 { pt3dadd( 446.969, 397.288, 23.767, 0.4122 ) }
    dend_35 { pt3dadd( 447.012, 398.28, 22.8951, 0.5052 ) }
    dend_35 { pt3dadd( 447.528, 399.272, 21.9825, 0.3488 ) }
    dend_35 { pt3dadd( 447.616, 400.286, 20.9369, 0.2288 ) }
    dend_35 { pt3dadd( 447.957, 401.035, 19.7059, 0.2288 ) }
    dend_35 { pt3dadd( 448.281, 401.748, 18.3963, 0.2288 ) }
    dend_35 { pt3dadd( 448.789, 402.399, 17.0999, 0.2288 ) }
    dend_35 { pt3dadd( 449.896, 402.426, 16.0555, 0.2288 ) }
    dend_35 { pt3dadd( 451.022, 402.241, 15.2952, 0.2288 ) }
    dend_35 { pt3dadd( 452.158, 402.125, 14.8008, 0.2288 ) }
    dend_35 { pt3dadd( 453.294, 401.991, 14.5319, 0.2288 ) }
    dend_35 { pt3dadd( 454.351, 401.573, 14.5172, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 442.307, 382.738, 35.0672, 0.3902 ) }
    dend_26 { pt3dadd( 441.171, 382.846, 35.0333, 0.4802 ) }
    dend_26 { pt3dadd( 440.122, 383.302, 35.021, 0.483 ) }
    dend_26 { pt3dadd( 439.05, 383.693, 34.972, 0.408 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_26 { pt3dadd( 438.026, 384.1, 34.8267, 0.3816 ) }
    dend_26 { pt3dadd( 437.062, 384.714, 34.7189, 0.4322 ) }
    dend_26 { pt3dadd( 436.228, 385.497, 34.6724, 0.5084 ) }
    dend_26 { pt3dadd( 435.408, 386.288, 34.6626, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 4/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 447.936, 375.396, 33.7646, 0.413 ) }
    dend_11 { pt3dadd( 447.903, 374.263, 34.204, 0.431 ) }
    dend_11 { pt3dadd( 447.926, 373.119, 34.3708, 0.4322 ) }
    dend_11 { pt3dadd( 447.865, 371.976, 34.5495, 0.4576 ) }
    dend_11 { pt3dadd( 447.523, 370.885, 34.7416, 0.4068 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 9/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 443.051, 383.2, 39.1952, 0.4074 ) }
    dend_0 { pt3dadd( 442.074, 383.393, 40.2808, 0.3276 ) }
    dend_0 { pt3dadd( 441.305, 384.143, 40.7736, 0.4252 ) }
    dend_0 { pt3dadd( 441.038, 385.25, 41.2255, 0.5292 ) }
    dend_0 { pt3dadd( 440.749, 386.32, 41.4999, 0.5832 ) }
    dend_0 { pt3dadd( 440.466, 387.428, 41.7242, 0.6098 ) }
    dend_0 { pt3dadd( 440.299, 388.526, 42.0204, 0.5848 ) }
    dend_0 { pt3dadd( 440.183, 389.492, 42.4782, 0.5084 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 459.787, 408.584, 31.92, 1.0 ) }
    axon_1 { pt3dadd( 465.628, 422.4, 31.92, 1.0 ) }
    axon_1 { pt3dadd( 471.47, 436.216, 31.92, 1.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 20/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 507.878, 342.804, 38.0027, 0.5084 ) }
    dend_51 { pt3dadd( 508.396, 342.03, 37.6771, 0.4586 ) }
    dend_51 { pt3dadd( 509.07, 341.237, 37.1529, 0.4344 ) }
    dend_51 { pt3dadd( 509.822, 340.689, 36.4459, 0.419 ) }
    dend_51 { pt3dadd( 510.74, 340.373, 35.7008, 0.379 ) }
    dend_51 { pt3dadd( 511.829, 340.244, 35.1736, 0.3414 ) }
    dend_51 { pt3dadd( 512.932, 340.161, 34.9759, 0.3468 ) }
    dend_51 { pt3dadd( 514.018, 339.937, 35.016, 0.3882 ) }
    dend_51 { pt3dadd( 515.021, 339.483, 35.2212, 0.4224 ) }
    dend_51 { pt3dadd( 515.933, 338.894, 35.5496, 0.4224 ) }
    dend_51 { pt3dadd( 516.892, 338.332, 35.8394, 0.4012 ) }
    dend_51 { pt3dadd( 517.89, 337.822, 35.9178, 0.3844 ) }
    dend_51 { pt3dadd( 518.88, 337.33, 35.7792, 0.3712 ) }
    dend_51 { pt3dadd( 519.883, 336.812, 35.5275, 0.3594 ) }
    dend_51 { pt3dadd( 520.865, 336.239, 35.2232, 0.359 ) }
    dend_51 { pt3dadd( 521.833, 335.655, 34.8746, 0.3886 ) }
    dend_51 { pt3dadd( 522.829, 335.119, 34.5282, 0.435 ) }
    dend_51 { pt3dadd( 523.856, 334.619, 34.2378, 0.4758 ) }
    dend_51 { pt3dadd( 524.932, 334.247, 34.0015, 0.5044 ) }
    dend_51 { pt3dadd( 526.052, 334.164, 33.7666, 0.534 ) }
    dend_51 { pt3dadd( 527.179, 334.219, 33.4992, 0.5776 ) }
    dend_51 { pt3dadd( 528.294, 334.08, 33.2259, 0.6048 ) }
    dend_51 { pt3dadd( 529.287, 333.564, 32.9762, 0.6052 ) }
    dend_51 { pt3dadd( 529.99, 332.694, 32.7356, 0.5958 ) }
    dend_51 { pt3dadd( 530.411, 331.652, 32.4705, 0.581 ) }
    dend_51 { pt3dadd( 530.854, 330.624, 32.1835, 0.5228 ) }
    dend_51 { pt3dadd( 531.574, 329.767, 31.9178, 0.4352 ) }
    dend_51 { pt3dadd( 532.546, 329.189, 31.712, 0.402 ) }
    dend_51 { pt3dadd( 533.563, 328.673, 31.5504, 0.4632 ) }
    dend_51 { pt3dadd( 534.494, 328.032, 31.388, 0.5226 ) }
    dend_51 { pt3dadd( 535.362, 327.303, 31.236, 0.5436 ) }
    dend_51 { pt3dadd( 536.209, 326.536, 31.131, 0.5714 ) }
    dend_51 { pt3dadd( 537.083, 325.797, 31.078, 0.6158 ) }
    dend_51 { pt3dadd( 537.996, 325.116, 31.0822, 0.658 ) }
    dend_51 { pt3dadd( 538.879, 324.405, 31.1486, 0.6824 ) }
    dend_51 { pt3dadd( 539.672, 323.594, 31.2315, 0.6976 ) }
    dend_51 { pt3dadd( 540.388, 322.703, 31.2738, 0.7278 ) }
    dend_51 { pt3dadd( 541.051, 321.772, 31.2698, 0.772 ) }
    dend_51 { pt3dadd( 541.737, 320.86, 31.1962, 0.8028 ) }
    dend_51 { pt3dadd( 542.507, 320.026, 31.0162, 0.802 ) }
    dend_51 { pt3dadd( 543.356, 319.336, 30.6883, 0.7822 ) }
    dend_51 { pt3dadd( 544.309, 318.892, 30.2159, 0.7598 ) }
    dend_51 { pt3dadd( 545.391, 318.821, 29.7038, 0.7196 ) }
    dend_51 { pt3dadd( 546.474, 319.115, 29.2807, 0.6498 ) }
    dend_51 { pt3dadd( 547.56, 319.454, 28.9696, 0.5848 ) }
    dend_51 { pt3dadd( 548.558, 319.13, 28.6633, 0.579 ) }
    dend_51 { pt3dadd( 549.214, 318.279, 28.2775, 0.6082 ) }
    dend_51 { pt3dadd( 550.008, 317.523, 27.839, 0.6212 ) }
    dend_51 { pt3dadd( 551.067, 317.149, 27.4082, 0.632 ) }
    dend_51 { pt3dadd( 552.183, 316.903, 27.0048, 0.6784 ) }
    dend_51 { pt3dadd( 553.265, 316.562, 26.5926, 0.7594 ) }
    dend_51 { pt3dadd( 554.262, 316.077, 26.1419, 0.8202 ) }
    dend_51 { pt3dadd( 555.086, 315.344, 25.6609, 0.8174 ) }
    dend_51 { pt3dadd( 555.677, 314.409, 25.1567, 0.7534 ) }
    dend_51 { pt3dadd( 556.371, 313.517, 24.6765, 0.6882 ) }
    dend_51 { pt3dadd( 557.407, 313.069, 24.2725, 0.664 ) }
    dend_51 { pt3dadd( 558.504, 312.948, 23.8463, 0.7048 ) }
    dend_51 { pt3dadd( 559.614, 312.791, 23.4321, 0.7786 ) }
    dend_51 { pt3dadd( 560.752, 312.728, 23.0872, 0.873 ) }
    dend_51 { pt3dadd( 561.883, 312.549, 22.8018, 0.8782 ) }
    dend_51 { pt3dadd( 562.964, 312.177, 22.5451, 0.7842 ) }
    dend_51 { pt3dadd( 563.814, 311.423, 22.2777, 0.6358 ) }
    dend_51 { pt3dadd( 564.079, 310.356, 21.9326, 0.569 ) }
    dend_51 { pt3dadd( 564.104, 309.25, 21.5257, 0.5788 ) }
    dend_51 { pt3dadd( 564.104, 308.149, 21.0691, 0.546 ) }
    dend_51 { pt3dadd( 564.099, 307.044, 20.6004, 0.496 ) }
    dend_51 { pt3dadd( 564.063, 305.903, 20.2245, 0.4446 ) }
    dend_51 { pt3dadd( 564.589, 304.892, 19.9785, 0.5156 ) }
    dend_51 { pt3dadd( 565.501, 304.227, 19.8931, 0.5764 ) }
    dend_51 { pt3dadd( 566.552, 303.788, 19.817, 0.6288 ) }
    dend_51 { pt3dadd( 567.589, 303.313, 19.745, 0.591 ) }
    dend_51 { pt3dadd( 568.506, 302.633, 19.6977, 0.5624 ) }
    dend_51 { pt3dadd( 569.353, 301.862, 19.6623, 0.537 ) }
    dend_51 { pt3dadd( 570.273, 301.182, 19.6307, 0.5114 ) }
    dend_51 { pt3dadd( 571.327, 300.739, 19.5903, 0.4856 ) }
    dend_51 { pt3dadd( 572.469, 300.675, 19.5625, 0.4594 ) }
    dend_51 { pt3dadd( 573.589, 300.849, 19.5988, 0.4576 ) }
    dend_51 { pt3dadd( 574.705, 300.776, 19.7093, 0.4822 ) }
    dend_51 { pt3dadd( 575.794, 300.609, 19.6732, 0.5082 ) }
    dend_51 { pt3dadd( 576.861, 300.43, 19.5085, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 0/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 507.878, 342.804, 38.0027, 0.5084 ) }
    dend_50 { pt3dadd( 509.121, 342.3, 39.6497, 0.4216 ) }
    dend_50 { pt3dadd( 510.254, 342.298, 39.7516, 0.334 ) }
    dend_50 { pt3dadd( 511.392, 342.276, 39.8247, 0.2662 ) }
    dend_50 { pt3dadd( 512.516, 342.349, 39.8588, 0.34 ) }
    dend_50 { pt3dadd( 513.62, 342.477, 40.0089, 0.2624 ) }
    dend_50 { pt3dadd( 514.671, 342.175, 40.2682, 0.28 ) }
    dend_50 { pt3dadd( 515.676, 341.661, 40.5443, 0.293 ) }
    dend_50 { pt3dadd( 516.084, 340.764, 40.9063, 0.3326 ) }
    dend_50 { pt3dadd( 517.205, 340.682, 41.1603, 0.424 ) }
    dend_50 { pt3dadd( 518.267, 340.502, 41.1687, 0.3702 ) }
    dend_50 { pt3dadd( 519.341, 340.157, 41.0581, 0.434 ) }
    dend_50 { pt3dadd( 520.382, 339.695, 40.9441, 0.3118 ) }
    dend_50 { pt3dadd( 521.459, 339.371, 40.7898, 0.2368 ) }
    dend_50 { pt3dadd( 522.558, 339.31, 40.5292, 0.2628 ) }
    dend_50 { pt3dadd( 523.671, 339.138, 40.3155, 0.3 ) }
    dend_50 { pt3dadd( 524.703, 338.67, 40.1909, 0.2582 ) }
    dend_50 { pt3dadd( 525.812, 338.397, 40.077, 0.3454 ) }
    dend_50 { pt3dadd( 526.874, 338.143, 39.926, 0.4156 ) }
    dend_50 { pt3dadd( 527.859, 337.932, 39.6679, 0.3096 ) }
    dend_50 { pt3dadd( 528.948, 337.875, 39.5786, 0.4326 ) }
    dend_50 { pt3dadd( 529.975, 338.077, 39.6637, 0.4848 ) }
    dend_50 { pt3dadd( 531.0, 338.527, 39.7284, 0.3294 ) }
    dend_50 { pt3dadd( 531.918, 339.003, 39.6488, 0.3268 ) }
    dend_50 { pt3dadd( 532.943, 339.068, 39.5469, 0.4082 ) }
    dend_50 { pt3dadd( 533.966, 338.835, 39.6553, 0.4224 ) }
    dend_50 { pt3dadd( 534.964, 338.852, 39.9636, 0.5058 ) }
    dend_50 { pt3dadd( 536.005, 338.911, 40.4079, 0.3858 ) }
    dend_50 { pt3dadd( 536.984, 339.168, 40.6202, 0.4534 ) }
    dend_50 { pt3dadd( 538.103, 338.95, 40.8481, 0.4824 ) }
    dend_50 { pt3dadd( 539.184, 338.632, 41.1272, 0.3316 ) }
    dend_50 { pt3dadd( 540.246, 338.459, 41.4938, 0.2796 ) }
    dend_50 { pt3dadd( 541.047, 338.64, 41.7738, 0.3488 ) }
    dend_50 { pt3dadd( 542.112, 338.768, 42.1347, 0.486 ) }
    dend_50 { pt3dadd( 543.198, 338.993, 42.5438, 0.4762 ) }
    dend_50 { pt3dadd( 544.251, 339.33, 42.95, 0.2798 ) }
    dend_50 { pt3dadd( 545.375, 339.363, 43.2807, 0.233 ) }
    dend_50 { pt3dadd( 546.512, 339.429, 43.5212, 0.2584 ) }
    dend_50 { pt3dadd( 547.651, 339.35, 43.6632, 0.3154 ) }
    dend_50 { pt3dadd( 548.633, 339.42, 43.5372, 0.2874 ) }
    dend_50 { pt3dadd( 549.729, 339.379, 43.3322, 0.2628 ) }
    dend_50 { pt3dadd( 550.828, 339.433, 43.2916, 0.3654 ) }
    dend_50 { pt3dadd( 551.886, 339.0, 43.3196, 0.2752 ) }
    dend_50 { pt3dadd( 552.947, 338.629, 43.4176, 0.267 ) }
    dend_50 { pt3dadd( 553.823, 338.41, 43.7954, 0.3492 ) }
    dend_50 { pt3dadd( 554.758, 338.496, 44.2148, 0.258 ) }
    dend_50 { pt3dadd( 555.752, 338.4, 44.3724, 0.274 ) }
    dend_50 { pt3dadd( 556.875, 338.368, 44.4514, 0.2526 ) }
    dend_50 { pt3dadd( 557.99, 338.54, 44.5281, 0.306 ) }
    dend_50 { pt3dadd( 559.099, 338.542, 44.6645, 0.3766 ) }
    dend_50 { pt3dadd( 560.214, 338.386, 44.814, 0.3536 ) }
    dend_50 { pt3dadd( 561.336, 338.267, 44.9324, 0.2958 ) }
    dend_50 { pt3dadd( 562.468, 338.244, 45.0307, 0.2602 ) }
    dend_50 { pt3dadd( 563.528, 338.385, 45.0402, 0.2842 ) }
    dend_50 { pt3dadd( 564.603, 338.673, 44.9736, 0.4406 ) }
    dend_50 { pt3dadd( 565.724, 338.546, 44.9364, 0.4646 ) }
    dend_50 { pt3dadd( 566.284, 339.402, 44.9739, 0.348 ) }
    dend_50 { pt3dadd( 567.241, 339.918, 45.0128, 0.3184 ) }
    dend_50 { pt3dadd( 567.886, 340.404, 44.7549, 0.4382 ) }
    dend_50 { pt3dadd( 568.303, 340.758, 44.4399, 0.414 ) }
    dend_50 { pt3dadd( 569.224, 341.071, 44.3324, 0.2876 ) }
    dend_50 { pt3dadd( 570.005, 341.783, 44.2162, 0.2288 ) }
    dend_50 { pt3dadd( 570.765, 342.292, 43.9258, 0.315 ) }
    dend_50 { pt3dadd( 571.859, 342.599, 43.769, 0.3614 ) }
    dend_50 { pt3dadd( 572.969, 342.722, 43.766, 0.4376 ) }
    dend_50 { pt3dadd( 574.094, 342.607, 43.8071, 0.2288 ) }
    dend_50 { pt3dadd( 575.219, 342.688, 43.8287, 0.2288 ) }
    dend_50 { pt3dadd( 576.288, 343.049, 43.7847, 0.2338 ) }
    dend_50 { pt3dadd( 577.388, 343.028, 43.6232, 0.2906 ) }
    dend_50 { pt3dadd( 578.453, 342.853, 43.3219, 0.404 ) }
    dend_50 { pt3dadd( 579.533, 342.835, 42.9531, 0.3208 ) }
    dend_50 { pt3dadd( 580.625, 342.929, 42.7076, 0.2512 ) }
    dend_50 { pt3dadd( 581.586, 343.36, 42.6482, 0.3236 ) }
    dend_50 { pt3dadd( 582.703, 343.243, 42.6955, 0.31 ) }
    dend_50 { pt3dadd( 583.758, 343.46, 42.7258, 0.2788 ) }
    dend_50 { pt3dadd( 584.729, 343.918, 42.8688, 0.3322 ) }
    dend_50 { pt3dadd( 585.751, 344.297, 43.1133, 0.3292 ) }
    dend_50 { pt3dadd( 586.755, 344.82, 43.3597, 0.3028 ) }
    dend_50 { pt3dadd( 587.794, 345.233, 43.6111, 0.3072 ) }
    dend_50 { pt3dadd( 588.898, 345.497, 43.8785, 0.2606 ) }
    dend_50 { pt3dadd( 589.905, 345.99, 44.1372, 0.3008 ) }
    dend_50 { pt3dadd( 590.917, 346.188, 44.4483, 0.252 ) }
    dend_50 { pt3dadd( 592.036, 346.268, 44.7199, 0.2288 ) }
    dend_50 { pt3dadd( 593.178, 346.292, 44.8958, 0.2288 ) }
    dend_50 { pt3dadd( 594.32, 346.34, 44.9994, 0.2378 ) }
    dend_50 { pt3dadd( 595.463, 346.333, 45.024, 0.2942 ) }
    dend_50 { pt3dadd( 596.573, 346.453, 44.9137, 0.2404 ) }
    dend_50 { pt3dadd( 597.605, 346.912, 44.7972, 0.3276 ) }
    dend_50 { pt3dadd( 598.655, 347.204, 44.24, 0.356 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 475.718, 346.184, 21.0678, 0.5338 ) }
    dend_48 { pt3dadd( 476.496, 345.027, 21.104, 0.3962 ) }
    dend_48 { pt3dadd( 477.438, 344.408, 21.1217, 0.448 ) }
    dend_48 { pt3dadd( 478.534, 344.15, 21.0807, 0.49 ) }
    dend_48 { pt3dadd( 479.65, 343.909, 21.0871, 0.4986 ) }
    dend_48 { pt3dadd( 480.788, 343.829, 21.1279, 0.4662 ) }
    dend_48 { pt3dadd( 481.892, 343.607, 21.1526, 0.429 ) }
    dend_48 { pt3dadd( 482.845, 342.984, 21.2333, 0.4142 ) }
    dend_48 { pt3dadd( 483.718, 342.267, 21.4048, 0.407 ) }
    dend_48 { pt3dadd( 484.698, 341.688, 21.589, 0.4116 ) }
    dend_48 { pt3dadd( 485.784, 341.415, 21.8095, 0.4356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 486.845, 341.568, 22.1476, 0.4674 ) }
    dend_48 { pt3dadd( 487.876, 342.027, 22.4952, 0.4616 ) }
    dend_48 { pt3dadd( 488.969, 342.312, 22.7744, 0.4524 ) }
    dend_48 { pt3dadd( 490.089, 342.147, 23.0078, 0.4496 ) }
    dend_48 { pt3dadd( 491.12, 341.688, 23.2531, 0.4678 ) }
    dend_48 { pt3dadd( 492.103, 341.143, 23.5075, 0.4518 ) }
    dend_48 { pt3dadd( 493.041, 340.5, 23.714, 0.42 ) }
    dend_48 { pt3dadd( 493.896, 339.739, 23.8636, 0.3886 ) }
    dend_48 { pt3dadd( 494.731, 338.957, 23.9662, 0.39 ) }
    dend_48 { pt3dadd( 495.614, 338.234, 24.0286, 0.4132 ) }
    dend_48 { pt3dadd( 496.592, 337.645, 24.0563, 0.445 ) }
    dend_48 { pt3dadd( 497.636, 337.189, 24.0471, 0.477 ) }
    dend_48 { pt3dadd( 498.704, 336.816, 24.0071, 0.481 ) }
    dend_48 { pt3dadd( 499.755, 336.388, 24.022, 0.4634 ) }
    dend_48 { pt3dadd( 500.783, 335.965, 24.1717, 0.4164 ) }
    dend_48 { pt3dadd( 501.844, 335.642, 24.4216, 0.3664 ) }
    dend_48 { pt3dadd( 502.925, 335.316, 24.6952, 0.3276 ) }
    dend_48 { pt3dadd( 503.977, 334.865, 24.9282, 0.3266 ) }
    dend_48 { pt3dadd( 505.038, 334.441, 25.1078, 0.357 ) }
    dend_48 { pt3dadd( 506.124, 334.082, 25.2206, 0.3526 ) }
    dend_48 { pt3dadd( 507.218, 333.879, 25.2948, 0.3638 ) }
    dend_48 { pt3dadd( 508.313, 334.126, 25.3932, 0.46 ) }
    dend_48 { pt3dadd( 509.355, 334.529, 25.5244, 0.4614 ) }
    dend_48 { pt3dadd( 510.419, 334.864, 25.6037, 0.3616 ) }
    dend_48 { pt3dadd( 511.497, 334.887, 25.5021, 0.349 ) }
    dend_48 { pt3dadd( 512.544, 334.638, 25.2609, 0.3508 ) }
    dend_48 { pt3dadd( 513.641, 334.385, 24.9942, 0.3634 ) }
    dend_48 { pt3dadd( 514.771, 334.397, 24.7571, 0.3732 ) }
    dend_48 { pt3dadd( 515.908, 334.469, 24.6207, 0.5096 ) }
    dend_48 { pt3dadd( 517.036, 334.337, 24.5633, 0.5854 ) }
    dend_48 { pt3dadd( 518.11, 333.96, 24.5559, 0.5428 ) }
    dend_48 { pt3dadd( 519.153, 333.504, 24.5948, 0.5494 ) }
    dend_48 { pt3dadd( 520.112, 333.314, 24.7838, 0.4962 ) }
    dend_48 { pt3dadd( 521.017, 333.152, 25.0186, 0.3492 ) }
    dend_48 { pt3dadd( 521.969, 332.715, 25.0209, 0.4506 ) }
    dend_48 { pt3dadd( 522.956, 332.261, 24.9165, 0.4724 ) }
    dend_48 { pt3dadd( 524.043, 332.251, 24.8476, 0.4442 ) }
    dend_48 { pt3dadd( 525.111, 332.641, 24.8094, 0.5588 ) }
    dend_48 { pt3dadd( 526.198, 332.981, 24.7999, 0.5812 ) }
    dend_48 { pt3dadd( 527.297, 332.95, 24.8819, 0.4008 ) }
    dend_48 { pt3dadd( 528.247, 332.377, 24.9912, 0.3464 ) }
    dend_48 { pt3dadd( 529.034, 331.592, 24.986, 0.504 ) }
    dend_48 { pt3dadd( 529.917, 330.881, 24.9381, 0.6234 ) }
    dend_48 { pt3dadd( 530.75, 330.101, 24.902, 0.58 ) }
    dend_48 { pt3dadd( 531.261, 329.115, 24.8075, 0.6434 ) }
    dend_48 { pt3dadd( 532.12, 328.421, 24.6874, 0.5124 ) }
    dend_48 { pt3dadd( 533.057, 327.804, 24.7049, 0.4082 ) }
    dend_48 { pt3dadd( 534.15, 327.504, 24.8219, 0.6332 ) }
    dend_48 { pt3dadd( 535.286, 327.527, 24.9978, 0.524 ) }
    dend_48 { pt3dadd( 536.423, 327.579, 25.1334, 0.6012 ) }
    dend_48 { pt3dadd( 537.538, 327.48, 25.2148, 0.595 ) }
    dend_48 { pt3dadd( 538.567, 327.054, 25.4254, 0.432 ) }
    dend_48 { pt3dadd( 539.526, 326.737, 25.8186, 0.4068 ) }
    dend_48 { pt3dadd( 540.658, 326.672, 26.1881, 0.4094 ) }
    dend_48 { pt3dadd( 541.703, 326.277, 26.4487, 0.3402 ) }
    dend_48 { pt3dadd( 542.635, 325.708, 26.8055, 0.3406 ) }
    dend_48 { pt3dadd( 543.501, 325.343, 27.3019, 0.436 ) }
    dend_48 { pt3dadd( 544.606, 325.43, 27.755, 0.416 ) }
    dend_48 { pt3dadd( 545.734, 325.409, 28.0988, 0.331 ) }
    dend_48 { pt3dadd( 546.741, 325.533, 28.3402, 0.3346 ) }
    dend_48 { pt3dadd( 547.746, 326.04, 28.56, 0.2796 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 61/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 475.718, 346.184, 21.0678, 0.5338 ) }
    dend_45 { pt3dadd( 475.66, 345.631, 20.7351, 0.4874 ) }
    dend_45 { pt3dadd( 475.665, 344.501, 20.0656, 0.4224 ) }
    dend_45 { pt3dadd( 476.003, 343.448, 19.7595, 0.3818 ) }
    dend_45 { pt3dadd( 476.635, 342.543, 19.3883, 0.432 ) }
    dend_45 { pt3dadd( 477.39, 341.711, 19.0179, 0.4576 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 67/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 477.923, 345.103, 40.5476, 0.2542 ) }
    dend_43 { pt3dadd( 478.202, 343.813, 40.4074, 0.3836 ) }
    dend_43 { pt3dadd( 478.329, 342.688, 40.2338, 0.365 ) }
    dend_43 { pt3dadd( 478.507, 341.577, 39.9837, 0.3182 ) }
    dend_43 { pt3dadd( 478.932, 340.522, 39.69, 0.3158 ) }
    dend_43 { pt3dadd( 479.585, 339.585, 39.3688, 0.3492 ) }
    dend_43 { pt3dadd( 480.353, 338.743, 39.0188, 0.39 ) }
    dend_43 { pt3dadd( 481.132, 337.957, 38.5949, 0.4054 ) }
    dend_43 { pt3dadd( 481.803, 337.177, 38.0402, 0.3904 ) }
    dend_43 { pt3dadd( 482.365, 336.283, 37.427, 0.351 ) }
    dend_43 { pt3dadd( 482.828, 335.25, 36.8794, 0.3088 ) }
    dend_43 { pt3dadd( 483.31, 334.219, 36.4563, 0.2978 ) }
    dend_43 { pt3dadd( 484.039, 333.344, 36.1407, 0.3406 ) }
    dend_43 { pt3dadd( 484.951, 332.663, 35.8758, 0.4178 ) }
    dend_43 { pt3dadd( 485.861, 331.996, 35.6196, 0.4752 ) }
    dend_43 { pt3dadd( 486.661, 331.19, 35.3716, 0.469 ) }
    dend_43 { pt3dadd( 487.315, 330.258, 35.1324, 0.4002 ) }
    dend_43 { pt3dadd( 487.835, 329.248, 34.8726, 0.316 ) }
    dend_43 { pt3dadd( 488.325, 328.231, 34.5923, 0.2708 ) }
    dend_43 { pt3dadd( 488.941, 327.272, 34.3375, 0.2938 ) }
    dend_43 { pt3dadd( 489.586, 326.331, 34.1261, 0.3674 ) }
    dend_43 { pt3dadd( 490.107, 325.32, 33.9237, 0.4408 ) }
    dend_43 { pt3dadd( 490.57, 324.29, 33.7151, 0.4762 ) }
    dend_43 { pt3dadd( 491.137, 323.306, 33.5476, 0.4848 ) }
    dend_43 { pt3dadd( 491.87, 322.443, 33.4824, 0.4982 ) }
    dend_43 { pt3dadd( 492.749, 321.731, 33.4827, 0.53 ) }
    dend_43 { pt3dadd( 493.692, 321.091, 33.4485, 0.5686 ) }
    dend_43 { pt3dadd( 494.58, 320.388, 33.3712, 0.6054 ) }
    dend_43 { pt3dadd( 495.35, 319.547, 33.3068, 0.6342 ) }
    dend_43 { pt3dadd( 495.974, 318.599, 33.2578, 0.6632 ) }
    dend_43 { pt3dadd( 496.351, 317.54, 33.1582, 0.6944 ) }
    dend_43 { pt3dadd( 496.36, 316.415, 32.991, 0.697 ) }
    dend_43 { pt3dadd( 496.258, 315.308, 32.7692, 0.6412 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 496.339, 314.217, 32.5116, 0.5616 ) }
    dend_43 { pt3dadd( 496.693, 313.141, 32.3271, 0.5422 ) }
    dend_43 { pt3dadd( 497.211, 312.136, 32.2812, 0.5932 ) }
    dend_43 { pt3dadd( 497.766, 311.168, 32.3719, 0.6428 ) }
    dend_43 { pt3dadd( 498.227, 310.199, 32.6004, 0.6242 ) }
    dend_43 { pt3dadd( 498.597, 309.188, 32.8815, 0.5694 ) }
    dend_43 { pt3dadd( 499.142, 308.268, 32.9851, 0.5466 ) }
    dend_43 { pt3dadd( 499.912, 307.59, 32.8121, 0.5884 ) }
    dend_43 { pt3dadd( 500.693, 306.812, 32.5125, 0.609 ) }
    dend_43 { pt3dadd( 501.374, 305.894, 32.202, 0.5832 ) }
    dend_43 { pt3dadd( 501.93, 304.905, 31.913, 0.534 ) }
    dend_43 { pt3dadd( 502.178, 303.806, 31.6518, 0.5442 ) }
    dend_43 { pt3dadd( 502.178, 302.676, 31.4012, 0.6052 ) }
    dend_43 { pt3dadd( 502.311, 301.571, 31.157, 0.693 ) }
    dend_43 { pt3dadd( 502.825, 300.58, 30.9473, 0.7676 ) }
    dend_43 { pt3dadd( 503.699, 299.89, 30.7434, 0.791 ) }
    dend_43 { pt3dadd( 504.745, 299.47, 30.5242, 0.7186 ) }
    dend_43 { pt3dadd( 505.687, 298.943, 30.3988, 0.5682 ) }
    dend_43 { pt3dadd( 506.05, 298.082, 30.4738, 0.4562 ) }
    dend_43 { pt3dadd( 506.375, 297.385, 30.4858, 0.526 ) }
    dend_43 { pt3dadd( 507.053, 296.68, 30.2873, 0.649 ) }
    dend_43 { pt3dadd( 507.621, 295.709, 30.0362, 0.7094 ) }
    dend_43 { pt3dadd( 508.232, 294.744, 29.7917, 0.7192 ) }
    dend_43 { pt3dadd( 508.833, 293.771, 29.5492, 0.6902 ) }
    dend_43 { pt3dadd( 509.27, 292.732, 29.2846, 0.6496 ) }
    dend_43 { pt3dadd( 509.373, 291.64, 29.0013, 0.641 ) }
    dend_43 { pt3dadd( 509.344, 290.513, 28.7566, 0.6522 ) }
    dend_43 { pt3dadd( 509.509, 289.392, 28.5944, 0.6384 ) }
    dend_43 { pt3dadd( 509.876, 288.313, 28.4984, 0.5938 ) }
    dend_43 { pt3dadd( 510.366, 287.281, 28.4362, 0.5526 ) }
    dend_43 { pt3dadd( 510.907, 286.273, 28.3934, 0.53 ) }
    dend_43 { pt3dadd( 511.345, 285.221, 28.3553, 0.4992 ) }
    dend_43 { pt3dadd( 511.52, 284.101, 28.3002, 0.455 ) }
    dend_43 { pt3dadd( 511.542, 282.961, 28.1994, 0.4288 ) }
    dend_43 { pt3dadd( 511.664, 281.843, 28.0347, 0.4424 ) }
    dend_43 { pt3dadd( 512.074, 280.799, 27.8445, 0.4652 ) }
    dend_43 { pt3dadd( 512.775, 279.908, 27.6786, 0.4612 ) }
    dend_43 { pt3dadd( 513.621, 279.142, 27.5521, 0.4434 ) }
    dend_43 { pt3dadd( 514.454, 278.358, 27.4625, 0.4426 ) }
    dend_43 { pt3dadd( 515.255, 277.542, 27.4035, 0.4732 ) }
    dend_43 { pt3dadd( 516.164, 276.859, 27.3641, 0.5268 ) }
    dend_43 { pt3dadd( 517.208, 276.41, 27.3285, 0.6004 ) }
    dend_43 { pt3dadd( 518.296, 276.055, 27.2854, 0.6732 ) }
    dend_43 { pt3dadd( 519.341, 275.599, 27.2282, 0.7202 ) }
    dend_43 { pt3dadd( 520.293, 274.979, 27.137, 0.7596 ) }
    dend_43 { pt3dadd( 521.192, 274.295, 26.9964, 0.797 ) }
    dend_43 { pt3dadd( 522.042, 273.544, 26.8475, 0.8292 ) }
    dend_43 { pt3dadd( 522.801, 272.693, 26.744, 0.8414 ) }
    dend_43 { pt3dadd( 523.401, 271.729, 26.7137, 0.851 ) }
    dend_43 { pt3dadd( 523.771, 270.667, 26.7627, 0.8588 ) }
    dend_43 { pt3dadd( 523.99, 269.553, 26.8501, 0.8432 ) }
    dend_43 { pt3dadd( 524.062, 268.416, 26.9132, 0.7996 ) }
    dend_43 { pt3dadd( 523.902, 267.292, 26.9036, 0.7604 ) }
    dend_43 { pt3dadd( 523.885, 266.174, 26.7905, 0.764 ) }
    dend_43 { pt3dadd( 524.492, 265.268, 26.6175, 0.7954 ) }
    dend_43 { pt3dadd( 525.372, 264.542, 26.4432, 0.7998 ) }
    dend_43 { pt3dadd( 526.133, 263.694, 26.2873, 0.7658 ) }
    dend_43 { pt3dadd( 526.678, 262.693, 26.1529, 0.722 ) }
    dend_43 { pt3dadd( 527.221, 261.688, 26.0265, 0.7018 ) }
    dend_43 { pt3dadd( 527.856, 260.747, 25.8756, 0.7056 ) }
    dend_43 { pt3dadd( 528.52, 259.83, 25.6926, 0.711 ) }
    dend_43 { pt3dadd( 529.146, 258.878, 25.5154, 0.6908 ) }
    dend_43 { pt3dadd( 529.767, 257.918, 25.3735, 0.6478 ) }
    dend_43 { pt3dadd( 530.525, 257.064, 25.2705, 0.6112 ) }
    dend_43 { pt3dadd( 531.354, 256.275, 25.202, 0.5992 ) }
    dend_43 { pt3dadd( 532.084, 255.398, 25.1608, 0.605 ) }
    dend_43 { pt3dadd( 532.744, 254.463, 25.1338, 0.6096 ) }
    dend_43 { pt3dadd( 533.478, 253.587, 25.1039, 0.6102 ) }
    dend_43 { pt3dadd( 534.341, 252.84, 25.0594, 0.6022 ) }
    dend_43 { pt3dadd( 535.287, 252.202, 25.0078, 0.5658 ) }
    dend_43 { pt3dadd( 536.195, 251.518, 24.9631, 0.5166 ) }
    dend_43 { pt3dadd( 536.958, 250.672, 24.8547, 0.4984 ) }
    dend_43 { pt3dadd( 537.578, 249.787, 24.5811, 0.5524 ) }
    dend_43 { pt3dadd( 538.203, 248.922, 24.1678, 0.6238 ) }
    dend_43 { pt3dadd( 538.922, 248.065, 23.7313, 0.6554 ) }
    dend_43 { pt3dadd( 539.682, 247.215, 23.3539, 0.6302 ) }
    dend_43 { pt3dadd( 540.335, 246.278, 23.0506, 0.5962 ) }
    dend_43 { pt3dadd( 540.647, 245.191, 22.7905, 0.5628 ) }
    dend_43 { pt3dadd( 540.531, 244.062, 22.6212, 0.5392 ) }
    dend_43 { pt3dadd( 540.079, 243.019, 22.5374, 0.496 ) }
    dend_43 { pt3dadd( 539.422, 242.088, 22.4468, 0.4776 ) }
    dend_43 { pt3dadd( 538.913, 241.085, 22.2877, 0.4812 ) }
    dend_43 { pt3dadd( 539.075, 239.973, 22.1148, 0.548 ) }
    dend_43 { pt3dadd( 539.698, 239.017, 21.9715, 0.6146 ) }
    dend_43 { pt3dadd( 540.361, 238.085, 21.8495, 0.6672 ) }
    dend_43 { pt3dadd( 541.031, 237.158, 21.7452, 0.6682 ) }
    dend_43 { pt3dadd( 541.812, 236.323, 21.6598, 0.6448 ) }
    dend_43 { pt3dadd( 542.754, 235.673, 21.5831, 0.6018 ) }
    dend_43 { pt3dadd( 543.876, 235.526, 21.4641, 0.5858 ) }
    dend_43 { pt3dadd( 544.996, 235.544, 21.2769, 0.5848 ) }
    dend_43 { pt3dadd( 546.1, 235.257, 21.1099, 0.624 ) }
    dend_43 { pt3dadd( 547.181, 234.88, 20.9938, 0.6548 ) }
    dend_43 { pt3dadd( 548.255, 234.487, 20.928, 0.6608 ) }
    dend_43 { pt3dadd( 549.28, 233.979, 20.9082, 0.641 ) }
    dend_43 { pt3dadd( 550.192, 233.288, 20.9345, 0.5952 ) }
    dend_43 { pt3dadd( 550.891, 232.413, 21.0549, 0.5642 ) }
    dend_43 { pt3dadd( 551.581, 231.516, 21.1982, 0.4956 ) }
    dend_43 { pt3dadd( 552.135, 230.516, 21.2821, 0.4194 ) }
    dend_43 { pt3dadd( 552.624, 229.482, 21.2917, 0.3644 ) }
    dend_43 { pt3dadd( 553.169, 228.476, 21.2237, 0.3782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 554.052, 227.753, 21.0625, 0.4478 ) }
    dend_43 { pt3dadd( 554.927, 227.128, 20.711, 0.4574 ) }
    dend_43 { pt3dadd( 555.893, 226.636, 20.2416, 0.4114 ) }
    dend_43 { pt3dadd( 556.949, 226.202, 19.794, 0.3368 ) }
    dend_43 { pt3dadd( 557.88, 225.537, 19.4019, 0.3072 ) }
    dend_43 { pt3dadd( 558.926, 225.076, 19.0551, 0.3288 ) }
    dend_43 { pt3dadd( 559.986, 224.83, 18.6499, 0.3304 ) }
    dend_43 { pt3dadd( 560.995, 225.353, 18.2962, 0.3804 ) }
    dend_43 { pt3dadd( 561.818, 226.054, 17.36, 0.4068 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 9/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 477.923, 345.103, 40.5476, 0.2542 ) }
    dend_42 { pt3dadd( 477.406, 343.78, 41.3619, 0.4774 ) }
    dend_42 { pt3dadd( 477.365, 342.654, 42.1341, 0.6054 ) }
    dend_42 { pt3dadd( 477.612, 341.891, 42.5942, 0.2524 ) }
    dend_42 { pt3dadd( 477.814, 340.855, 43.0657, 0.3106 ) }
    dend_42 { pt3dadd( 478.527, 340.065, 43.5921, 0.4878 ) }
    dend_42 { pt3dadd( 479.198, 339.154, 44.0, 0.5404 ) }
    dend_42 { pt3dadd( 479.797, 338.245, 44.3276, 0.5336 ) }
    dend_42 { pt3dadd( 480.606, 337.531, 44.6555, 0.4714 ) }
    dend_42 { pt3dadd( 481.543, 336.941, 44.8196, 0.4066 ) }
    dend_42 { pt3dadd( 482.498, 336.384, 44.8286, 0.4688 ) }
    dend_42 { pt3dadd( 483.443, 335.777, 44.7586, 0.4346 ) }
    dend_42 { pt3dadd( 484.183, 334.963, 44.6617, 0.2792 ) }
    dend_42 { pt3dadd( 484.356, 334.162, 44.7826, 0.3684 ) }
    dend_42 { pt3dadd( 484.263, 333.24, 45.1122, 0.4722 ) }
    dend_42 { pt3dadd( 484.554, 332.18, 45.4359, 0.3832 ) }
    dend_42 { pt3dadd( 485.129, 331.197, 45.6915, 0.3332 ) }
    dend_42 { pt3dadd( 485.875, 330.341, 45.8917, 0.3596 ) }
    dend_42 { pt3dadd( 486.741, 329.646, 46.121, 0.4068 ) }
    dend_42 { pt3dadd( 487.655, 328.983, 46.3072, 0.3506 ) }
    dend_42 { pt3dadd( 488.689, 328.52, 46.4296, 0.2624 ) }
    dend_42 { pt3dadd( 489.74, 328.094, 46.5867, 0.2652 ) }
    dend_42 { pt3dadd( 490.698, 327.48, 46.7482, 0.278 ) }
    dend_42 { pt3dadd( 491.737, 327.01, 46.8768, 0.277 ) }
    dend_42 { pt3dadd( 492.819, 326.642, 46.9834, 0.2676 ) }
    dend_42 { pt3dadd( 493.88, 326.231, 47.1162, 0.2466 ) }
    dend_42 { pt3dadd( 494.821, 325.613, 47.2928, 0.232 ) }
    dend_42 { pt3dadd( 495.865, 325.161, 47.4443, 0.229 ) }
    dend_42 { pt3dadd( 496.919, 324.734, 47.5266, 0.2288 ) }
    dend_42 { pt3dadd( 497.985, 324.372, 47.654, 0.2288 ) }
    dend_42 { pt3dadd( 499.117, 324.306, 47.7582, 0.2288 ) }
    dend_42 { pt3dadd( 500.156, 323.858, 47.8293, 0.2288 ) }
    dend_42 { pt3dadd( 501.028, 323.125, 47.8778, 0.23 ) }
    dend_42 { pt3dadd( 501.842, 322.322, 47.9206, 0.2514 ) }
    dend_42 { pt3dadd( 502.873, 321.848, 47.9618, 0.2898 ) }
    dend_42 { pt3dadd( 503.84, 321.242, 47.9914, 0.2588 ) }
    dend_42 { pt3dadd( 504.825, 320.661, 48.0332, 0.2318 ) }
    dend_42 { pt3dadd( 505.819, 320.096, 48.0864, 0.2432 ) }
    dend_42 { pt3dadd( 506.625, 319.365, 48.2622, 0.303 ) }
    dend_42 { pt3dadd( 507.543, 318.776, 48.3594, 0.3562 ) }
    dend_42 { pt3dadd( 508.631, 318.438, 48.4761, 0.3922 ) }
    dend_42 { pt3dadd( 509.65, 318.207, 48.475, 0.448 ) }
    dend_42 { pt3dadd( 510.607, 317.899, 48.5668, 0.3434 ) }
    dend_42 { pt3dadd( 511.632, 317.814, 48.8466, 0.3604 ) }
    dend_42 { pt3dadd( 512.637, 318.166, 49.2352, 0.3846 ) }
    dend_42 { pt3dadd( 513.656, 318.227, 49.7386, 0.4262 ) }
    dend_42 { pt3dadd( 514.715, 317.962, 50.0438, 0.4092 ) }
    dend_42 { pt3dadd( 515.25, 317.966, 49.9993, 0.4752 ) }
    dend_42 { pt3dadd( 515.902, 317.632, 50.2303, 0.579 ) }
    dend_42 { pt3dadd( 516.922, 317.267, 50.3616, 0.693 ) }
    dend_42 { pt3dadd( 517.956, 317.224, 50.3278, 0.66 ) }
    dend_42 { pt3dadd( 519.038, 317.088, 50.3784, 0.335 ) }
    dend_42 { pt3dadd( 520.083, 316.628, 50.4356, 0.3954 ) }
    dend_42 { pt3dadd( 521.03, 316.071, 50.4062, 0.3928 ) }
    dend_42 { pt3dadd( 521.812, 315.346, 50.2499, 0.328 ) }
    dend_42 { pt3dadd( 522.534, 314.528, 50.2471, 0.3946 ) }
    dend_42 { pt3dadd( 523.176, 313.654, 50.3289, 0.5466 ) }
    dend_42 { pt3dadd( 523.698, 312.648, 50.3367, 0.5574 ) }
    dend_42 { pt3dadd( 524.208, 311.635, 50.3328, 0.4582 ) }
    dend_42 { pt3dadd( 524.801, 310.667, 50.37, 0.4022 ) }
    dend_42 { pt3dadd( 525.424, 309.716, 50.3639, 0.3904 ) }
    dend_42 { pt3dadd( 526.073, 308.793, 50.3233, 0.3838 ) }
    dend_42 { pt3dadd( 526.616, 307.842, 50.1833, 0.2982 ) }
    dend_42 { pt3dadd( 527.136, 306.861, 49.9162, 0.2902 ) }
    dend_42 { pt3dadd( 527.963, 306.14, 49.5751, 0.4162 ) }
    dend_42 { pt3dadd( 528.756, 305.791, 48.16, 0.4322 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 75/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 465.081, 399.699, 28.6661, 0.6102 ) }
    dend_40 { pt3dadd( 465.082, 400.001, 29.3885, 0.4938 ) }
    dend_40 { pt3dadd( 465.382, 400.629, 31.4241, 0.3536 ) }
    dend_40 { pt3dadd( 465.811, 401.535, 32.277, 0.371 ) }
    dend_40 { pt3dadd( 465.832, 402.629, 33.1218, 0.423 ) }
    dend_40 { pt3dadd( 465.409, 403.56, 33.9861, 0.54 ) }
    dend_40 { pt3dadd( 465.125, 404.574, 34.7976, 0.5814 ) }
    dend_40 { pt3dadd( 465.133, 405.717, 35.385, 0.5614 ) }
    dend_40 { pt3dadd( 465.099, 406.826, 35.6569, 0.4886 ) }
    dend_40 { pt3dadd( 465.4, 407.925, 35.7941, 0.483 ) }
    dend_40 { pt3dadd( 465.906, 408.953, 35.8952, 0.5312 ) }
    dend_40 { pt3dadd( 466.479, 409.941, 36.0021, 0.5822 ) }
    dend_40 { pt3dadd( 466.925, 410.974, 36.211, 0.6096 ) }
    dend_40 { pt3dadd( 467.236, 412.031, 36.5621, 0.6352 ) }
    dend_40 { pt3dadd( 467.125, 413.125, 37.0199, 0.6102 ) }
    dend_40 { pt3dadd( 466.726, 414.197, 37.4088, 0.5848 ) }
    dend_40 { pt3dadd( 467.139, 414.83, 37.8073, 0.4708 ) }
    dend_40 { pt3dadd( 467.696, 415.726, 38.2659, 0.3026 ) }
    dend_40 { pt3dadd( 467.96, 416.762, 38.6954, 0.234 ) }
    dend_40 { pt3dadd( 467.649, 417.788, 38.9413, 0.2536 ) }
    dend_40 { pt3dadd( 467.807, 418.791, 38.9928, 0.5976 ) }
    dend_40 { pt3dadd( 468.404, 419.747, 39.0365, 0.6644 ) }
    dend_40 { pt3dadd( 468.823, 420.783, 38.9696, 0.689 ) }
    dend_40 { pt3dadd( 468.957, 421.915, 38.9066, 0.4728 ) }
    dend_40 { pt3dadd( 468.721, 423.019, 38.8178, 0.5922 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 468.401, 424.068, 38.9057, 0.4556 ) }
    dend_40 { pt3dadd( 468.623, 425.187, 39.0421, 0.4188 ) }
    dend_40 { pt3dadd( 469.081, 426.222, 39.2241, 0.2794 ) }
    dend_40 { pt3dadd( 469.681, 427.183, 39.4184, 0.3332 ) }
    dend_40 { pt3dadd( 470.398, 428.054, 39.5133, 0.3548 ) }
    dend_40 { pt3dadd( 471.106, 428.809, 39.5853, 0.3532 ) }
    dend_40 { pt3dadd( 471.308, 429.677, 39.7216, 0.3762 ) }
    dend_40 { pt3dadd( 471.401, 430.737, 39.758, 0.4554 ) }
    dend_40 { pt3dadd( 471.567, 431.845, 39.8647, 0.3718 ) }
    dend_40 { pt3dadd( 471.69, 432.974, 39.9899, 0.38 ) }
    dend_40 { pt3dadd( 471.714, 434.108, 40.0775, 0.4286 ) }
    dend_40 { pt3dadd( 471.446, 435.203, 40.1478, 0.4608 ) }
    dend_40 { pt3dadd( 471.002, 436.245, 40.2489, 0.4936 ) }
    dend_40 { pt3dadd( 470.586, 437.291, 40.3136, 0.4194 ) }
    dend_40 { pt3dadd( 470.348, 438.365, 40.4132, 0.427 ) }
    dend_40 { pt3dadd( 470.376, 439.488, 40.5524, 0.2962 ) }
    dend_40 { pt3dadd( 470.474, 439.878, 40.4057, 0.5176 ) }
    dend_40 { pt3dadd( 471.102, 440.819, 40.383, 0.4202 ) }
    dend_40 { pt3dadd( 471.616, 441.824, 40.4298, 0.4506 ) }
    dend_40 { pt3dadd( 471.971, 442.905, 40.5009, 0.4054 ) }
    dend_40 { pt3dadd( 472.281, 443.946, 40.7112, 0.3174 ) }
    dend_40 { pt3dadd( 472.495, 444.943, 41.1379, 0.325 ) }
    dend_40 { pt3dadd( 472.677, 446.055, 41.6136, 0.259 ) }
    dend_40 { pt3dadd( 472.704, 447.186, 42.0736, 0.2764 ) }
    dend_40 { pt3dadd( 472.781, 448.291, 42.5816, 0.2762 ) }
    dend_40 { pt3dadd( 473.146, 449.311, 43.1144, 0.259 ) }
    dend_40 { pt3dadd( 473.876, 450.164, 43.605, 0.3304 ) }
    dend_40 { pt3dadd( 474.634, 451.008, 44.021, 0.4614 ) }
    dend_40 { pt3dadd( 475.258, 451.849, 44.4948, 0.406 ) }
    dend_40 { pt3dadd( 475.853, 452.669, 45.0178, 0.2746 ) }
    dend_40 { pt3dadd( 476.612, 453.48, 45.4272, 0.305 ) }
    dend_40 { pt3dadd( 477.628, 453.93, 45.8301, 0.3068 ) }
    dend_40 { pt3dadd( 478.586, 454.456, 46.286, 0.3318 ) }
    dend_40 { pt3dadd( 479.574, 454.976, 46.6754, 0.2818 ) }
    dend_40 { pt3dadd( 480.599, 455.239, 47.1307, 0.4558 ) }
    dend_40 { pt3dadd( 481.639, 455.454, 47.6874, 0.5232 ) }
    dend_40 { pt3dadd( 482.492, 455.966, 48.3504, 0.4142 ) }
    dend_40 { pt3dadd( 483.126, 456.838, 48.9849, 0.2882 ) }
    dend_40 { pt3dadd( 483.984, 457.567, 49.4908, 0.3494 ) }
    dend_40 { pt3dadd( 485.055, 457.943, 50.12, 0.4576 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 40/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 465.081, 399.699, 28.6661, 0.6102 ) }
    dend_37 { pt3dadd( 465.899, 399.916, 28.3626, 0.4462 ) }
    dend_37 { pt3dadd( 466.887, 400.44, 27.996, 0.365 ) }
    dend_37 { pt3dadd( 467.999, 400.288, 27.5817, 0.3842 ) }
    dend_37 { pt3dadd( 469.137, 400.199, 27.201, 0.4834 ) }
    dend_37 { pt3dadd( 470.237, 400.332, 26.7868, 0.5602 ) }
    dend_37 { pt3dadd( 471.193, 400.924, 26.3896, 0.6094 ) }
    dend_37 { pt3dadd( 471.933, 401.748, 25.9765, 0.6066 ) }
    dend_37 { pt3dadd( 472.678, 402.616, 25.6756, 0.5622 ) }
    dend_37 { pt3dadd( 473.729, 402.95, 25.5518, 0.5084 ) }
    dend_37 { pt3dadd( 475.029, 403.308, 25.3388, 0.4474 ) }
    dend_37 { pt3dadd( 476.041, 403.821, 25.1217, 0.4042 ) }
    dend_37 { pt3dadd( 477.025, 404.383, 24.891, 0.376 ) }
    dend_37 { pt3dadd( 477.945, 405.025, 24.6342, 0.3738 ) }
    dend_37 { pt3dadd( 478.763, 405.812, 24.3922, 0.4324 ) }
    dend_37 { pt3dadd( 479.577, 406.59, 24.1632, 0.5268 ) }
    dend_37 { pt3dadd( 480.179, 407.563, 24.0453, 0.581 ) }
    dend_37 { pt3dadd( 480.747, 408.518, 24.1171, 0.5756 ) }
    dend_37 { pt3dadd( 481.268, 409.478, 24.3511, 0.5418 ) }
    dend_37 { pt3dadd( 481.895, 410.42, 24.6248, 0.491 ) }
    dend_37 { pt3dadd( 482.738, 411.191, 24.8491, 0.4588 ) }
    dend_37 { pt3dadd( 483.665, 411.847, 25.0439, 0.478 ) }
    dend_37 { pt3dadd( 484.556, 412.548, 25.1901, 0.5616 ) }
    dend_37 { pt3dadd( 485.478, 413.207, 25.1733, 0.646 ) }
    dend_37 { pt3dadd( 486.351, 413.929, 25.035, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_26 (entry count 65/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 435.408, 386.288, 34.6626, 0.4576 ) }
    dend_34 { pt3dadd( 434.923, 387.084, 34.7805, 0.426 ) }
    dend_34 { pt3dadd( 434.851, 388.133, 35.1128, 0.4704 ) }
    dend_34 { pt3dadd( 434.827, 389.197, 35.5925, 0.5026 ) }
    dend_34 { pt3dadd( 434.292, 390.203, 36.0279, 0.5082 ) }
    dend_34 { pt3dadd( 433.679, 391.169, 36.3969, 0.5084 ) }
    dend_34 { pt3dadd( 433.066, 392.119, 36.748, 0.4656 ) }
    dend_34 { pt3dadd( 432.52, 393.102, 37.0737, 0.393 ) }
    dend_34 { pt3dadd( 431.887, 394.054, 37.3083, 0.36 ) }
    dend_34 { pt3dadd( 431.313, 395.044, 37.4752, 0.3778 ) }
    dend_34 { pt3dadd( 430.757, 396.045, 37.6118, 0.4684 ) }
    dend_34 { pt3dadd( 430.315, 397.1, 37.7283, 0.5268 ) }
    dend_34 { pt3dadd( 430.15, 398.231, 37.8314, 0.5336 ) }
    dend_34 { pt3dadd( 429.858, 399.336, 37.9453, 0.444 ) }
    dend_34 { pt3dadd( 429.777, 400.447, 38.1578, 0.3866 ) }
    dend_34 { pt3dadd( 429.508, 401.479, 38.4919, 0.3576 ) }
    dend_34 { pt3dadd( 429.094, 402.524, 38.6789, 0.4046 ) }
    dend_34 { pt3dadd( 429.16, 403.666, 38.8136, 0.4564 ) }
    dend_34 { pt3dadd( 428.934, 404.76, 38.9855, 0.4828 ) }
    dend_34 { pt3dadd( 428.885, 405.891, 39.1311, 0.483 ) }
    dend_34 { pt3dadd( 428.824, 406.309, 39.1709, 0.3966 ) }
    dend_34 { pt3dadd( 428.418, 407.334, 39.1054, 0.2512 ) }
    dend_34 { pt3dadd( 427.907, 408.33, 38.99, 0.327 ) }
    dend_34 { pt3dadd( 427.386, 409.225, 38.7548, 0.4604 ) }
    dend_34 { pt3dadd( 426.518, 409.807, 38.386, 0.4642 ) }
    dend_34 { pt3dadd( 425.556, 410.393, 38.0458, 0.39 ) }
    dend_34 { pt3dadd( 425.057, 411.252, 37.9641, 0.3564 ) }
    dend_34 { pt3dadd( 424.569, 412.225, 37.835, 0.303 ) }
    dend_34 { pt3dadd( 423.82, 413.072, 37.6998, 0.2486 ) }
    dend_34 { pt3dadd( 423.376, 414.125, 37.6057, 0.3994 ) }
    dend_34 { pt3dadd( 422.765, 415.084, 37.5662, 0.7976 ) }
    dend_34 { pt3dadd( 422.27, 416.098, 37.5483, 0.783 ) }
    dend_34 { pt3dadd( 422.163, 417.153, 37.5477, 0.438 ) }
    dend_34 { pt3dadd( 421.539, 417.716, 37.2392, 0.3174 ) }
    dend_34 { pt3dadd( 421.012, 418.64, 36.8332, 0.2486 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 420.579, 419.681, 36.5378, 0.3944 ) }
    dend_34 { pt3dadd( 420.168, 420.699, 36.3446, 0.6618 ) }
    dend_34 { pt3dadd( 419.616, 421.566, 36.2967, 0.6762 ) }
    dend_34 { pt3dadd( 419.272, 422.058, 36.0024, 0.5172 ) }
    dend_34 { pt3dadd( 419.267, 422.051, 35.3766, 0.3012 ) }
    dend_34 { pt3dadd( 418.844, 422.598, 34.6772, 0.2536 ) }
    dend_34 { pt3dadd( 418.346, 423.582, 34.1334, 0.3248 ) }
    dend_34 { pt3dadd( 418.293, 424.641, 33.9744, 0.4854 ) }
    dend_34 { pt3dadd( 418.239, 425.725, 34.19, 0.4486 ) }
    dend_34 { pt3dadd( 417.751, 426.513, 34.8295, 0.2674 ) }
    dend_34 { pt3dadd( 416.904, 426.836, 35.7776, 0.3554 ) }
    dend_34 { pt3dadd( 416.013, 427.244, 36.846, 0.518 ) }
    dend_34 { pt3dadd( 415.606, 428.137, 37.9184, 0.8866 ) }
    dend_34 { pt3dadd( 415.328, 429.212, 38.8128, 0.281 ) }
    dend_34 { pt3dadd( 414.752, 430.161, 39.3607, 0.4704 ) }
    dend_34 { pt3dadd( 414.436, 431.185, 39.7617, 0.4092 ) }
    dend_34 { pt3dadd( 414.287, 431.607, 40.3455, 0.239 ) }
    dend_34 { pt3dadd( 414.214, 432.647, 40.7126, 0.3134 ) }
    dend_34 { pt3dadd( 414.447, 433.602, 40.7708, 0.422 ) }
    dend_34 { pt3dadd( 414.128, 434.182, 40.9371, 0.5626 ) }
    dend_34 { pt3dadd( 413.929, 434.973, 41.3193, 0.3486 ) }
    dend_34 { pt3dadd( 413.864, 436.081, 41.6044, 0.3514 ) }
    dend_34 { pt3dadd( 413.587, 437.186, 41.7925, 0.4042 ) }
    dend_34 { pt3dadd( 413.39, 438.301, 41.9003, 0.2946 ) }
    dend_34 { pt3dadd( 413.254, 439.34, 41.8298, 0.5548 ) }
    dend_34 { pt3dadd( 413.135, 440.408, 41.6545, 0.3706 ) }
    dend_34 { pt3dadd( 412.962, 441.523, 41.6125, 0.3072 ) }
    dend_34 { pt3dadd( 412.565, 442.559, 41.809, 0.2776 ) }
    dend_34 { pt3dadd( 412.203, 443.627, 42.177, 0.2288 ) }
    dend_34 { pt3dadd( 411.84, 444.657, 42.7011, 0.2896 ) }
    dend_34 { pt3dadd( 411.251, 445.347, 43.5005, 0.4328 ) }
    dend_34 { pt3dadd( 410.416, 445.637, 44.4679, 0.2756 ) }
    dend_34 { pt3dadd( 409.732, 446.025, 45.4532, 0.3558 ) }
    dend_34 { pt3dadd( 409.279, 447.068, 46.2465, 0.3514 ) }
    dend_34 { pt3dadd( 408.978, 448.154, 46.8983, 0.2916 ) }
    dend_34 { pt3dadd( 408.943, 449.266, 47.4751, 0.3276 ) }
    dend_34 { pt3dadd( 408.348, 449.943, 48.0388, 0.3282 ) }
    dend_34 { pt3dadd( 408.356, 450.797, 48.6517, 0.2866 ) }
    dend_34 { pt3dadd( 408.444, 451.903, 49.1621, 0.2592 ) }
    dend_34 { pt3dadd( 408.736, 452.965, 49.4273, 0.3022 ) }
    dend_34 { pt3dadd( 408.527, 454.003, 49.4928, 0.4148 ) }
    dend_34 { pt3dadd( 408.249, 454.88, 49.672, 0.3734 ) }
    dend_34 { pt3dadd( 407.567, 455.744, 49.7162, 0.3276 ) }
    dend_34 { pt3dadd( 407.334, 456.82, 49.5527, 0.243 ) }
    dend_34 { pt3dadd( 407.588, 457.914, 49.2887, 0.2288 ) }
    dend_34 { pt3dadd( 407.996, 458.96, 48.8939, 0.2288 ) }
    dend_34 { pt3dadd( 408.166, 459.919, 48.251, 0.2288 ) }
    dend_34 { pt3dadd( 408.415, 460.828, 47.3925, 0.2512 ) }
    dend_34 { pt3dadd( 409.207, 461.007, 46.4562, 0.3786 ) }
    dend_34 { pt3dadd( 409.926, 461.424, 45.4681, 0.3708 ) }
    dend_34 { pt3dadd( 410.094, 462.495, 44.6326, 0.2678 ) }
    dend_34 { pt3dadd( 409.836, 463.559, 44.0843, 0.337 ) }
    dend_34 { pt3dadd( 409.554, 464.501, 43.8766, 0.24 ) }
    dend_34 { pt3dadd( 408.906, 465.411, 43.6582, 0.2894 ) }
    dend_34 { pt3dadd( 408.386, 466.314, 43.2835, 0.3352 ) }
    dend_34 { pt3dadd( 407.867, 466.976, 42.67, 0.284 ) }
    dend_34 { pt3dadd( 407.263, 467.782, 40.88, 0.2796 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 435.408, 386.288, 34.6626, 0.4576 ) }
    dend_27 { pt3dadd( 434.927, 386.638, 33.1708, 0.5142 ) }
    dend_27 { pt3dadd( 433.971, 386.922, 32.7093, 0.4698 ) }
    dend_27 { pt3dadd( 432.828, 386.931, 32.5422, 0.3832 ) }
    dend_27 { pt3dadd( 432.172, 386.015, 32.5035, 0.305 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 62/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 447.523, 370.885, 34.7416, 0.4068 ) }
    dend_15 { pt3dadd( 447.83, 370.022, 34.1617, 0.39 ) }
    dend_15 { pt3dadd( 448.156, 368.926, 34.2572, 0.3656 ) }
    dend_15 { pt3dadd( 448.298, 367.794, 34.2924, 0.3586 ) }
    dend_15 { pt3dadd( 448.171, 366.665, 34.3344, 0.391 ) }
    dend_15 { pt3dadd( 447.912, 365.569, 34.4025, 0.451 ) }
    dend_15 { pt3dadd( 447.891, 364.548, 34.568, 0.5076 ) }
    dend_15 { pt3dadd( 448.509, 363.638, 34.655, 0.5162 ) }
    dend_15 { pt3dadd( 449.306, 363.132, 34.3762, 0.5264 ) }
    dend_15 { pt3dadd( 450.074, 362.623, 33.8002, 0.551 ) }
    dend_15 { pt3dadd( 450.682, 361.782, 33.096, 0.5774 ) }
    dend_15 { pt3dadd( 451.185, 360.798, 32.398, 0.5462 ) }
    dend_15 { pt3dadd( 451.624, 359.811, 31.7232, 0.4774 ) }
    dend_15 { pt3dadd( 451.985, 358.747, 31.1895, 0.4394 ) }
    dend_15 { pt3dadd( 452.189, 357.666, 30.9842, 0.4326 ) }
    dend_15 { pt3dadd( 452.216, 356.615, 31.0503, 0.4322 ) }
    dend_15 { pt3dadd( 452.195, 355.516, 31.2214, 0.4112 ) }
    dend_15 { pt3dadd( 452.024, 354.397, 31.2486, 0.385 ) }
    dend_15 { pt3dadd( 451.578, 353.363, 31.1108, 0.3814 ) }
    dend_15 { pt3dadd( 451.092, 352.369, 30.7762, 0.3592 ) }
    dend_15 { pt3dadd( 450.641, 351.33, 30.315, 0.356 ) }
    dend_15 { pt3dadd( 450.659, 350.244, 29.7046, 0.4032 ) }
    dend_15 { pt3dadd( 451.333, 349.448, 28.9797, 0.5044 ) }
    dend_15 { pt3dadd( 452.325, 348.943, 28.2831, 0.5336 ) }
    dend_15 { pt3dadd( 453.26, 348.82, 27.4846, 0.483 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 87/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 447.523, 370.885, 34.7416, 0.4068 ) }
    dend_12 { pt3dadd( 446.945, 370.186, 35.114, 0.5062 ) }
    dend_12 { pt3dadd( 446.161, 369.39, 35.5264, 0.433 ) }
    dend_12 { pt3dadd( 445.386, 368.572, 35.9318, 0.3562 ) }
    dend_12 { pt3dadd( 444.692, 367.662, 36.2664, 0.356 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 440.183, 389.492, 42.4782, 0.5084 ) }
    dend_8 { pt3dadd( 439.904, 390.193, 42.838, 0.5392 ) }
    dend_8 { pt3dadd( 439.757, 391.314, 43.1995, 0.4028 ) }
    dend_8 { pt3dadd( 439.88, 392.44, 43.5515, 0.3682 ) }
    dend_8 { pt3dadd( 440.452, 393.355, 43.8721, 0.5656 ) }
    dend_8 { pt3dadd( 441.387, 393.934, 44.219, 0.696 ) }
    dend_8 { pt3dadd( 442.11, 394.682, 44.6113, 0.5702 ) }
    dend_8 { pt3dadd( 442.402, 395.737, 45.0162, 0.3648 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( 442.661, 396.835, 45.3194, 0.3914 ) }
    dend_8 { pt3dadd( 442.684, 397.941, 45.5406, 0.4544 ) }
    dend_8 { pt3dadd( 442.37, 399.034, 45.6842, 0.4636 ) }
    dend_8 { pt3dadd( 442.031, 400.117, 45.7839, 0.573 ) }
    dend_8 { pt3dadd( 441.764, 401.224, 45.8354, 0.6068 ) }
    dend_8 { pt3dadd( 441.577, 402.333, 45.7671, 0.4474 ) }
    dend_8 { pt3dadd( 441.242, 403.214, 45.8497, 0.516 ) }
    dend_8 { pt3dadd( 440.703, 404.191, 45.8853, 0.4872 ) }
    dend_8 { pt3dadd( 440.553, 405.205, 45.6232, 0.5084 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 440.183, 389.492, 42.4782, 0.5084 ) }
    dend_1 { pt3dadd( 439.83, 389.596, 43.7674, 0.4112 ) }
    dend_1 { pt3dadd( 438.866, 389.278, 44.3682, 0.361 ) }
    dend_1 { pt3dadd( 437.943, 388.615, 44.6043, 0.4896 ) }
    dend_1 { pt3dadd( 437.016, 387.944, 44.7625, 0.5694 ) }
    dend_1 { pt3dadd( 436.054, 387.337, 44.8143, 0.5474 ) }
    dend_1 { pt3dadd( 434.992, 387.084, 44.702, 0.3814 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 16/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 576.861, 300.43, 19.5085, 0.5338 ) }
    dend_53 { pt3dadd( 577.855, 299.391, 19.4648, 0.4876 ) }
    dend_53 { pt3dadd( 578.691, 298.62, 19.4716, 0.4432 ) }
    dend_53 { pt3dadd( 579.7, 298.094, 19.4831, 0.3922 ) }
    dend_53 { pt3dadd( 580.811, 297.841, 19.504, 0.3834 ) }
    dend_53 { pt3dadd( 581.945, 297.737, 19.5616, 0.4334 ) }
    dend_53 { pt3dadd( 583.084, 297.648, 19.5908, 0.5202 ) }
    dend_53 { pt3dadd( 584.181, 297.358, 19.5224, 0.5962 ) }
    dend_53 { pt3dadd( 585.177, 296.81, 19.3929, 0.6204 ) }
    dend_53 { pt3dadd( 586.055, 296.098, 19.1997, 0.579 ) }
    dend_53 { pt3dadd( 586.939, 295.393, 18.9604, 0.5086 ) }
    dend_53 { pt3dadd( 588.013, 295.031, 18.7344, 0.4552 ) }
    dend_53 { pt3dadd( 589.132, 295.216, 18.5527, 0.4584 ) }
    dend_53 { pt3dadd( 590.244, 295.487, 18.411, 0.4776 ) }
    dend_53 { pt3dadd( 591.382, 295.592, 18.2934, 0.4828 ) }
    dend_53 { pt3dadd( 592.526, 295.604, 18.1859, 0.483 ) }
    dend_53 { pt3dadd( 593.669, 295.571, 18.0696, 0.5064 ) }
    dend_53 { pt3dadd( 594.784, 295.371, 17.8858, 0.5538 ) }
    dend_53 { pt3dadd( 595.889, 295.154, 17.6242, 0.567 ) }
    dend_53 { pt3dadd( 597.002, 294.948, 17.3198, 0.535 ) }
    dend_53 { pt3dadd( 598.129, 295.11, 17.0246, 0.4966 ) }
    dend_53 { pt3dadd( 599.226, 295.432, 16.773, 0.5166 ) }
    dend_53 { pt3dadd( 600.329, 295.333, 16.4612, 0.5498 ) }
    dend_53 { pt3dadd( 601.409, 295.383, 16.0785, 0.5208 ) }
    dend_53 { pt3dadd( 602.519, 295.136, 15.7428, 0.4504 ) }
    dend_53 { pt3dadd( 603.553, 294.674, 15.5396, 0.3728 ) }
    dend_53 { pt3dadd( 604.537, 294.117, 15.4304, 0.3568 ) }
    dend_53 { pt3dadd( 605.546, 293.633, 15.2456, 0.3346 ) }
    dend_53 { pt3dadd( 606.678, 293.535, 15.0539, 0.3752 ) }
    dend_53 { pt3dadd( 607.749, 293.935, 14.888, 0.3814 ) }
    dend_53 { pt3dadd( 608.867, 294.173, 14.7146, 0.4274 ) }
    dend_53 { pt3dadd( 609.865, 293.779, 14.0, 0.4068 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 48/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 576.861, 300.43, 19.5085, 0.5338 ) }
    dend_52 { pt3dadd( 576.828, 301.459, 16.6117, 0.2852 ) }
    dend_52 { pt3dadd( 576.456, 302.225, 15.4263, 0.2332 ) }
    dend_52 { pt3dadd( 575.651, 302.849, 14.8871, 0.2288 ) }
    dend_52 { pt3dadd( 574.794, 303.587, 14.4988, 0.2288 ) }
    dend_52 { pt3dadd( 573.929, 304.327, 14.2706, 0.244 ) }
    dend_52 { pt3dadd( 573.019, 304.906, 14.0948, 0.2688 ) }
    dend_52 { pt3dadd( 572.556, 305.906, 14.0446, 0.2976 ) }
    dend_52 { pt3dadd( 572.68, 306.993, 14.2841, 0.2838 ) }
    dend_52 { pt3dadd( 572.238, 307.135, 14.9617, 0.3048 ) }
    dend_52 { pt3dadd( 571.536, 307.135, 17.2869, 0.3814 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 59/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 477.39, 341.711, 19.0179, 0.4576 ) }
    dend_47 { pt3dadd( 477.646, 340.81, 18.7604, 0.3908 ) }
    dend_47 { pt3dadd( 478.308, 339.877, 18.581, 0.4078 ) }
    dend_47 { pt3dadd( 479.07, 339.027, 18.4738, 0.4154 ) }
    dend_47 { pt3dadd( 479.912, 338.266, 18.4409, 0.425 ) }
    dend_47 { pt3dadd( 480.781, 337.546, 18.4339, 0.428 ) }
    dend_47 { pt3dadd( 481.387, 336.635, 18.2917, 0.4636 ) }
    dend_47 { pt3dadd( 481.232, 335.557, 17.989, 0.4848 ) }
    dend_47 { pt3dadd( 481.06, 334.542, 17.5573, 0.4964 ) }
    dend_47 { pt3dadd( 481.589, 333.629, 17.06, 0.4944 ) }
    dend_47 { pt3dadd( 482.378, 332.833, 16.6207, 0.4892 ) }
    dend_47 { pt3dadd( 483.141, 331.988, 16.3288, 0.483 ) }
    dend_47 { pt3dadd( 483.845, 331.099, 16.2567, 0.4842 ) }
    dend_47 { pt3dadd( 484.52, 330.216, 16.4008, 0.4912 ) }
    dend_47 { pt3dadd( 485.102, 329.289, 16.7063, 0.5056 ) }
    dend_47 { pt3dadd( 485.414, 328.248, 17.098, 0.5268 ) }
    dend_47 { pt3dadd( 485.396, 327.128, 17.4635, 0.5464 ) }
    dend_47 { pt3dadd( 485.261, 325.994, 17.7059, 0.5326 ) }
    dend_47 { pt3dadd( 485.275, 324.858, 17.7869, 0.4712 ) }
    dend_47 { pt3dadd( 485.573, 323.771, 17.722, 0.3934 ) }
    dend_47 { pt3dadd( 486.15, 322.792, 17.5641, 0.369 ) }
    dend_47 { pt3dadd( 486.726, 321.847, 17.2864, 0.4312 ) }
    dend_47 { pt3dadd( 486.998, 320.806, 16.9204, 0.5568 ) }
    dend_47 { pt3dadd( 487.158, 319.717, 16.5442, 0.6948 ) }
    dend_47 { pt3dadd( 487.664, 318.753, 16.2835, 0.7108 ) }
    dend_47 { pt3dadd( 488.064, 317.775, 16.1438, 0.818 ) }
    dend_47 { pt3dadd( 488.375, 316.707, 16.0846, 0.7498 ) }
    dend_47 { pt3dadd( 488.792, 315.662, 16.1377, 0.505 ) }
    dend_47 { pt3dadd( 489.068, 314.568, 16.2238, 0.4702 ) }
    dend_47 { pt3dadd( 489.648, 313.597, 16.2389, 0.515 ) }
    dend_47 { pt3dadd( 490.395, 312.731, 16.2116, 0.584 ) }
    dend_47 { pt3dadd( 491.084, 311.821, 16.158, 0.625 ) }
    dend_47 { pt3dadd( 491.644, 310.824, 16.0833, 0.5998 ) }
    dend_47 { pt3dadd( 492.226, 309.841, 15.9876, 0.538 ) }
    dend_47 { pt3dadd( 492.964, 308.976, 15.8656, 0.507 ) }
    dend_47 { pt3dadd( 493.835, 308.259, 15.6853, 0.481 ) }
    dend_47 { pt3dadd( 494.7, 307.53, 15.4679, 0.4464 ) }
    dend_47 { pt3dadd( 495.465, 306.687, 15.2824, 0.3978 ) }
    dend_47 { pt3dadd( 495.994, 305.711, 15.1563, 0.4534 ) }
    dend_47 { pt3dadd( 495.981, 304.595, 15.0193, 0.5864 ) }
    dend_47 { pt3dadd( 495.596, 303.555, 14.776, 0.699 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_47 { pt3dadd( 495.304, 302.482, 14.4714, 0.6388 ) }
    dend_47 { pt3dadd( 495.406, 301.445, 14.0799, 0.547 ) }
    dend_47 { pt3dadd( 496.099, 300.577, 13.6726, 0.525 ) }
    dend_47 { pt3dadd( 496.718, 299.625, 13.3821, 0.5894 ) }
    dend_47 { pt3dadd( 497.099, 298.575, 13.2366, 0.5986 ) }
    dend_47 { pt3dadd( 497.253, 297.491, 13.0511, 0.6304 ) }
    dend_47 { pt3dadd( 497.554, 296.437, 12.8395, 0.5592 ) }
    dend_47 { pt3dadd( 497.791, 295.451, 12.8462, 0.4346 ) }
    dend_47 { pt3dadd( 498.402, 294.563, 12.9549, 0.3904 ) }
    dend_47 { pt3dadd( 499.033, 293.651, 12.9732, 0.5024 ) }
    dend_47 { pt3dadd( 499.739, 292.763, 12.985, 0.572 ) }
    dend_47 { pt3dadd( 500.371, 291.849, 13.1206, 0.45 ) }
    dend_47 { pt3dadd( 500.637, 290.76, 13.2875, 0.424 ) }
    dend_47 { pt3dadd( 500.91, 289.708, 13.3048, 0.5654 ) }
    dend_47 { pt3dadd( 501.213, 288.615, 13.3291, 0.5066 ) }
    dend_47 { pt3dadd( 501.872, 287.945, 14.0, 0.483 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 477.39, 341.711, 19.0179, 0.4576 ) }
    dend_46 { pt3dadd( 478.588, 341.328, 17.8246, 0.4608 ) }
    dend_46 { pt3dadd( 479.59, 340.872, 16.8646, 0.4348 ) }
    dend_46 { pt3dadd( 480.613, 340.942, 16.4187, 0.4542 ) }
    dend_46 { pt3dadd( 481.718, 341.092, 15.9354, 0.4898 ) }
    dend_46 { pt3dadd( 482.808, 340.797, 15.5004, 0.483 ) }
    dend_46 { pt3dadd( 483.71, 340.116, 15.0875, 0.4232 ) }
    dend_46 { pt3dadd( 484.451, 339.286, 14.6596, 0.3366 ) }
    dend_46 { pt3dadd( 485.535, 339.159, 14.2614, 0.2854 ) }
    dend_46 { pt3dadd( 486.339, 339.953, 13.9018, 0.2952 ) }
    dend_46 { pt3dadd( 487.142, 340.747, 13.1788, 0.305 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 486.351, 413.929, 25.035, 0.2288 ) }
    dend_39 { pt3dadd( 486.768, 414.508, 24.5977, 0.4852 ) }
    dend_39 { pt3dadd( 486.794, 415.602, 24.2305, 0.4974 ) }
    dend_39 { pt3dadd( 487.359, 416.354, 24.1694, 0.6562 ) }
    dend_39 { pt3dadd( 488.104, 417.213, 24.1464, 0.6136 ) }
    dend_39 { pt3dadd( 488.906, 418.005, 24.0539, 0.6238 ) }
    dend_39 { pt3dadd( 489.742, 418.754, 23.9273, 0.6708 ) }
    dend_39 { pt3dadd( 490.59, 419.246, 23.6181, 0.5804 ) }
    dend_39 { pt3dadd( 491.53, 419.863, 23.3733, 0.5344 ) }
    dend_39 { pt3dadd( 492.464, 420.384, 23.1995, 0.6046 ) }
    dend_39 { pt3dadd( 493.412, 420.868, 22.8941, 0.5424 ) }
    dend_39 { pt3dadd( 494.443, 421.132, 22.511, 0.5354 ) }
    dend_39 { pt3dadd( 495.329, 421.752, 22.115, 0.5726 ) }
    dend_39 { pt3dadd( 495.96, 422.643, 21.7248, 0.6278 ) }
    dend_39 { pt3dadd( 496.438, 423.677, 21.4071, 0.563 ) }
    dend_39 { pt3dadd( 496.639, 424.74, 21.2636, 0.4174 ) }
    dend_39 { pt3dadd( 496.914, 425.798, 21.236, 0.3646 ) }
    dend_39 { pt3dadd( 497.474, 426.648, 21.0936, 0.493 ) }
    dend_39 { pt3dadd( 498.362, 427.25, 20.9409, 0.4964 ) }
    dend_39 { pt3dadd( 499.027, 428.104, 20.9143, 0.5002 ) }
    dend_39 { pt3dadd( 499.697, 429.002, 20.9749, 0.507 ) }
    dend_39 { pt3dadd( 500.472, 429.832, 21.0722, 0.4384 ) }
    dend_39 { pt3dadd( 500.995, 430.717, 21.0139, 0.4434 ) }
    dend_39 { pt3dadd( 501.267, 431.799, 20.9655, 0.456 ) }
    dend_39 { pt3dadd( 501.601, 432.893, 20.9489, 0.5184 ) }
    dend_39 { pt3dadd( 502.19, 433.713, 21.1196, 0.4916 ) }
    dend_39 { pt3dadd( 502.66, 434.742, 21.2488, 0.4324 ) }
    dend_39 { pt3dadd( 502.97, 435.84, 21.4027, 0.259 ) }
    dend_39 { pt3dadd( 503.139, 436.97, 21.5293, 0.2604 ) }
    dend_39 { pt3dadd( 503.267, 438.097, 21.676, 0.2404 ) }
    dend_39 { pt3dadd( 503.932, 438.954, 21.8047, 0.3206 ) }
    dend_39 { pt3dadd( 505.033, 439.235, 21.8461, 0.3608 ) }
    dend_39 { pt3dadd( 506.066, 439.706, 21.8614, 0.342 ) }
    dend_39 { pt3dadd( 506.999, 440.323, 21.8324, 0.317 ) }
    dend_39 { pt3dadd( 507.896, 440.997, 21.9059, 0.4378 ) }
    dend_39 { pt3dadd( 508.705, 441.767, 22.0447, 0.2998 ) }
    dend_39 { pt3dadd( 509.707, 442.293, 22.2223, 0.3068 ) }
    dend_39 { pt3dadd( 510.655, 442.837, 22.443, 0.316 ) }
    dend_39 { pt3dadd( 511.542, 443.49, 22.546, 0.406 ) }
    dend_39 { pt3dadd( 512.422, 444.203, 22.6707, 0.4946 ) }
    dend_39 { pt3dadd( 513.36, 444.834, 22.7539, 0.4708 ) }
    dend_39 { pt3dadd( 514.284, 445.427, 22.8607, 0.3882 ) }
    dend_39 { pt3dadd( 515.023, 446.271, 22.9331, 0.338 ) }
    dend_39 { pt3dadd( 516.021, 446.695, 22.9498, 0.456 ) }
    dend_39 { pt3dadd( 517.104, 446.933, 23.0294, 0.5656 ) }
    dend_39 { pt3dadd( 518.031, 447.539, 23.1787, 0.6168 ) }
    dend_39 { pt3dadd( 518.825, 448.347, 23.3226, 0.5458 ) }
    dend_39 { pt3dadd( 519.662, 449.103, 23.4057, 0.4906 ) }
    dend_39 { pt3dadd( 520.687, 449.555, 23.4597, 0.5148 ) }
    dend_39 { pt3dadd( 521.771, 449.893, 23.4955, 0.597 ) }
    dend_39 { pt3dadd( 522.625, 450.562, 23.5785, 0.479 ) }
    dend_39 { pt3dadd( 523.387, 451.063, 23.8908, 0.3838 ) }
    dend_39 { pt3dadd( 524.393, 451.322, 24.3366, 0.3324 ) }
    dend_39 { pt3dadd( 525.11, 451.819, 24.4913, 0.3946 ) }
    dend_39 { pt3dadd( 526.153, 452.041, 24.7194, 0.5758 ) }
    dend_39 { pt3dadd( 526.849, 452.219, 25.2307, 0.3012 ) }
    dend_39 { pt3dadd( 527.479, 452.688, 25.8063, 0.3106 ) }
    dend_39 { pt3dadd( 528.449, 453.089, 26.0416, 0.494 ) }
    dend_39 { pt3dadd( 529.339, 453.694, 26.0755, 0.4674 ) }
    dend_39 { pt3dadd( 530.292, 454.297, 26.0852, 0.2586 ) }
    dend_39 { pt3dadd( 531.355, 454.329, 26.1779, 0.2288 ) }
    dend_39 { pt3dadd( 532.485, 454.462, 26.2181, 0.2288 ) }
    dend_39 { pt3dadd( 533.229, 455.311, 26.2517, 0.2288 ) }
    dend_39 { pt3dadd( 534.104, 456.049, 26.3111, 0.2288 ) }
    dend_39 { pt3dadd( 535.047, 456.696, 26.365, 0.2288 ) }
    dend_39 { pt3dadd( 536.011, 457.309, 26.3928, 0.2288 ) }
    dend_39 { pt3dadd( 537.064, 457.759, 26.3948, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 486.351, 413.929, 25.035, 0.2288 ) }
    dend_38 { pt3dadd( 486.68, 413.713, 24.5595, 0.2288 ) }
    dend_38 { pt3dadd( 487.731, 413.586, 24.4454, 0.2288 ) }
    dend_38 { pt3dadd( 488.839, 413.831, 24.411, 0.2288 ) }
    dend_38 { pt3dadd( 489.876, 414.308, 24.4097, 0.2288 ) }
    dend_38 { pt3dadd( 490.989, 414.474, 24.4523, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( 492.132, 414.497, 24.5314, 0.2288 ) }
    dend_38 { pt3dadd( 493.276, 414.501, 24.6401, 0.2288 ) }
    dend_38 { pt3dadd( 494.341, 414.19, 24.8369, 0.2288 ) }
    dend_38 { pt3dadd( 494.716, 413.248, 25.1863, 0.2288 ) }
    dend_38 { pt3dadd( 495.187, 412.212, 25.8331, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 5/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 432.172, 386.015, 32.5035, 0.305 ) }
    dend_33 { pt3dadd( 432.185, 386.037, 31.2309, 0.4546 ) }
    dend_33 { pt3dadd( 432.119, 385.188, 30.3968, 0.4696 ) }
    dend_33 { pt3dadd( 432.22, 384.055, 30.0807, 0.3648 ) }
    dend_33 { pt3dadd( 432.818, 383.11, 29.7531, 0.3504 ) }
    dend_33 { pt3dadd( 433.623, 382.527, 29.2522, 0.4042 ) }
    dend_33 { pt3dadd( 434.243, 381.966, 28.5379, 0.3412 ) }
    dend_33 { pt3dadd( 434.793, 380.989, 27.9296, 0.5334 ) }
    dend_33 { pt3dadd( 435.749, 380.38, 26.88, 0.4322 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 14/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 432.172, 386.015, 32.5035, 0.305 ) }
    dend_28 { pt3dadd( 431.644, 385.208, 32.6253, 0.5638 ) }
    dend_28 { pt3dadd( 430.796, 384.513, 32.8236, 0.5656 ) }
    dend_28 { pt3dadd( 429.704, 384.183, 32.9193, 0.5848 ) }
    dend_28 { pt3dadd( 428.591, 384.255, 32.8563, 0.5956 ) }
    dend_28 { pt3dadd( 427.5, 384.51, 32.6477, 0.6356 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 453.26, 348.82, 27.4846, 0.483 ) }
    dend_23 { pt3dadd( 454.159, 348.571, 26.8554, 0.4956 ) }
    dend_23 { pt3dadd( 454.973, 347.793, 26.4163, 0.5074 ) }
    dend_23 { pt3dadd( 455.808, 347.016, 26.0875, 0.469 ) }
    dend_23 { pt3dadd( 456.582, 346.243, 25.6687, 0.4172 ) }
    dend_23 { pt3dadd( 457.08, 345.409, 25.0736, 0.386 ) }
    dend_23 { pt3dadd( 457.102, 344.417, 24.3716, 0.382 ) }
    dend_23 { pt3dadd( 456.746, 343.364, 23.6903, 0.4258 ) }
    dend_23 { pt3dadd( 456.685, 342.262, 23.0455, 0.4568 ) }
    dend_23 { pt3dadd( 457.208, 341.247, 22.5546, 0.5282 ) }
    dend_23 { pt3dadd( 457.906, 340.378, 22.3182, 0.4852 ) }
    dend_23 { pt3dadd( 458.457, 339.377, 22.1868, 0.4816 ) }
    dend_23 { pt3dadd( 458.809, 338.331, 21.9916, 0.4086 ) }
    dend_23 { pt3dadd( 459.304, 337.302, 21.812, 0.4064 ) }
    dend_23 { pt3dadd( 459.884, 336.317, 21.6403, 0.3814 ) }
    dend_23 { pt3dadd( 460.611, 335.47, 21.3918, 0.358 ) }
    dend_23 { pt3dadd( 461.324, 334.582, 21.1386, 0.4302 ) }
    dend_23 { pt3dadd( 462.037, 333.689, 20.9289, 0.4474 ) }
    dend_23 { pt3dadd( 462.772, 332.814, 20.7728, 0.4232 ) }
    dend_23 { pt3dadd( 463.417, 331.875, 20.6705, 0.4016 ) }
    dend_23 { pt3dadd( 463.918, 330.86, 20.6143, 0.4104 ) }
    dend_23 { pt3dadd( 464.375, 329.814, 20.5177, 0.4346 ) }
    dend_23 { pt3dadd( 464.988, 329.049, 20.1891, 0.4428 ) }
    dend_23 { pt3dadd( 465.808, 328.314, 19.7743, 0.4158 ) }
    dend_23 { pt3dadd( 466.459, 327.374, 19.4214, 0.4068 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 453.26, 348.82, 27.4846, 0.483 ) }
    dend_16 { pt3dadd( 453.015, 347.978, 24.8148, 0.3428 ) }
    dend_16 { pt3dadd( 452.357, 347.199, 23.6566, 0.38 ) }
    dend_16 { pt3dadd( 451.256, 347.036, 23.1814, 0.3814 ) }
    dend_16 { pt3dadd( 450.149, 346.788, 22.7047, 0.4322 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 444.692, 367.662, 36.2664, 0.356 ) }
    dend_14 { pt3dadd( 444.134, 367.182, 37.023, 0.3618 ) }
    dend_14 { pt3dadd( 443.089, 366.818, 37.3288, 0.421 ) }
    dend_14 { pt3dadd( 442.025, 366.827, 37.3526, 0.4108 ) }
    dend_14 { pt3dadd( 440.958, 367.137, 37.3372, 0.332 ) }
    dend_14 { pt3dadd( 440.464, 367.795, 37.6614, 0.2394 ) }
    dend_14 { pt3dadd( 440.051, 368.711, 38.1685, 0.4394 ) }
    dend_14 { pt3dadd( 439.563, 369.718, 38.5792, 0.337 ) }
    dend_14 { pt3dadd( 438.772, 370.365, 38.8024, 0.2948 ) }
    dend_14 { pt3dadd( 437.779, 370.835, 39.0552, 0.293 ) }
    dend_14 { pt3dadd( 436.766, 370.815, 39.5531, 0.3338 ) }
    dend_14 { pt3dadd( 435.928, 370.527, 40.313, 0.345 ) }
    dend_14 { pt3dadd( 434.948, 370.606, 41.2152, 0.2748 ) }
    dend_14 { pt3dadd( 434.243, 370.601, 42.2685, 0.2742 ) }
    dend_14 { pt3dadd( 433.671, 370.121, 43.5008, 0.2602 ) }
    dend_14 { pt3dadd( 432.723, 369.773, 44.6384, 0.3154 ) }
    dend_14 { pt3dadd( 431.602, 369.637, 45.57, 0.267 ) }
    dend_14 { pt3dadd( 430.506, 369.543, 46.2218, 0.3598 ) }
    dend_14 { pt3dadd( 429.479, 369.541, 46.8731, 0.3024 ) }
    dend_14 { pt3dadd( 428.818, 369.621, 47.7285, 0.2946 ) }
    dend_14 { pt3dadd( 428.114, 369.911, 48.7043, 0.2402 ) }
    dend_14 { pt3dadd( 427.077, 370.151, 49.5866, 0.3798 ) }
    dend_14 { pt3dadd( 425.99, 370.336, 50.1564, 0.5562 ) }
    dend_14 { pt3dadd( 424.871, 370.546, 50.5756, 0.5934 ) }
    dend_14 { pt3dadd( 423.897, 370.894, 50.9838, 0.2756 ) }
    dend_14 { pt3dadd( 422.959, 371.523, 51.1398, 0.5046 ) }
    dend_14 { pt3dadd( 421.911, 371.972, 51.1815, 0.673 ) }
    dend_14 { pt3dadd( 420.8, 372.185, 51.2056, 0.5574 ) }
    dend_14 { pt3dadd( 419.768, 372.192, 51.0983, 0.2962 ) }
    dend_14 { pt3dadd( 418.646, 372.325, 51.0994, 0.236 ) }
    dend_14 { pt3dadd( 417.562, 372.589, 51.2252, 0.3004 ) }
    dend_14 { pt3dadd( 416.446, 372.531, 51.4693, 0.4466 ) }
    dend_14 { pt3dadd( 415.439, 372.238, 51.8168, 0.5378 ) }
    dend_14 { pt3dadd( 414.558, 371.961, 52.3205, 0.5322 ) }
    dend_14 { pt3dadd( 413.451, 371.723, 52.7318, 0.3484 ) }
    dend_14 { pt3dadd( 412.401, 371.378, 52.9796, 0.3162 ) }
    dend_14 { pt3dadd( 411.523, 370.86, 53.2563, 0.521 ) }
    dend_14 { pt3dadd( 410.567, 370.44, 53.648, 0.2954 ) }
    dend_14 { pt3dadd( 409.586, 369.871, 54.0442, 0.2288 ) }
    dend_14 { pt3dadd( 408.561, 369.987, 54.5804, 0.2288 ) }
    dend_14 { pt3dadd( 407.533, 370.151, 55.244, 0.2288 ) }
    dend_14 { pt3dadd( 406.467, 370.263, 55.9521, 0.2288 ) }
    dend_14 { pt3dadd( 405.336, 370.113, 56.5222, 0.2288 ) }
    dend_14 { pt3dadd( 404.204, 369.951, 56.9971, 0.2288 ) }
    dend_14 { pt3dadd( 403.071, 369.79, 57.398, 0.2288 ) }
    dend_14 { pt3dadd( 401.939, 369.628, 57.7312, 0.2288 ) }
    dend_14 { pt3dadd( 400.878, 369.311, 58.1218, 0.2288 ) }
    dend_14 { pt3dadd( 399.989, 368.853, 58.6606, 0.2288 ) }
    dend_14 { pt3dadd( 399.102, 368.394, 60.2129, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 99/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 444.692, 367.662, 36.2664, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 444.119, 367.13, 36.577, 0.4194 ) }
    dend_13 { pt3dadd( 443.313, 366.325, 36.8259, 0.4782 ) }
    dend_13 { pt3dadd( 442.725, 365.375, 36.9494, 0.4756 ) }
    dend_13 { pt3dadd( 442.364, 364.3, 37.0602, 0.433 ) }
    dend_13 { pt3dadd( 441.994, 363.247, 37.28, 0.396 ) }
    dend_13 { pt3dadd( 441.494, 362.292, 37.6488, 0.375 ) }
    dend_13 { pt3dadd( 440.83, 361.41, 38.0901, 0.345 ) }
    dend_13 { pt3dadd( 440.046, 360.597, 38.5316, 0.3082 ) }
    dend_13 { pt3dadd( 439.246, 359.809, 38.9704, 0.3034 ) }
    dend_13 { pt3dadd( 438.494, 359.003, 39.3996, 0.3474 ) }
    dend_13 { pt3dadd( 437.793, 358.128, 39.7522, 0.4184 ) }
    dend_13 { pt3dadd( 437.295, 357.107, 39.9574, 0.4584 ) }
    dend_13 { pt3dadd( 436.992, 356.017, 39.9781, 0.4606 ) }
    dend_13 { pt3dadd( 436.771, 354.898, 39.8759, 0.4266 ) }
    dend_13 { pt3dadd( 436.603, 353.768, 39.6942, 0.3928 ) }
    dend_13 { pt3dadd( 436.326, 352.685, 39.3887, 0.3708 ) }
    dend_13 { pt3dadd( 435.981, 351.624, 38.9956, 0.3952 ) }
    dend_13 { pt3dadd( 435.766, 350.515, 38.5868, 0.4602 ) }
    dend_13 { pt3dadd( 435.563, 349.409, 38.1573, 0.5364 ) }
    dend_13 { pt3dadd( 435.394, 348.287, 37.7342, 0.5886 ) }
    dend_13 { pt3dadd( 435.409, 347.148, 37.3551, 0.581 ) }
    dend_13 { pt3dadd( 435.626, 346.027, 37.0168, 0.5378 ) }
    dend_13 { pt3dadd( 435.944, 344.958, 36.6304, 0.4718 ) }
    dend_13 { pt3dadd( 436.168, 343.906, 36.1502, 0.4388 ) }
    dend_13 { pt3dadd( 436.168, 342.786, 35.6591, 0.4326 ) }
    dend_13 { pt3dadd( 435.735, 341.739, 35.2069, 0.4322 ) }
    dend_13 { pt3dadd( 435.062, 340.817, 34.79, 0.4322 ) }
    dend_13 { pt3dadd( 434.583, 339.782, 34.391, 0.4154 ) }
    dend_13 { pt3dadd( 434.685, 338.686, 33.9282, 0.4264 ) }
    dend_13 { pt3dadd( 434.913, 337.886, 33.2324, 0.412 ) }
    dend_13 { pt3dadd( 435.164, 336.937, 32.4355, 0.4072 ) }
    dend_13 { pt3dadd( 434.972, 335.832, 31.7251, 0.3854 ) }
    dend_13 { pt3dadd( 434.515, 334.784, 31.1615, 0.36 ) }
    dend_13 { pt3dadd( 434.082, 333.725, 30.7339, 0.3562 ) }
    dend_13 { pt3dadd( 433.93, 332.592, 30.4212, 0.3338 ) }
    dend_13 { pt3dadd( 433.888, 331.451, 30.1728, 0.3528 ) }
    dend_13 { pt3dadd( 433.719, 330.366, 29.855, 0.356 ) }
    dend_13 { pt3dadd( 433.72, 329.273, 29.4574, 0.379 ) }
    dend_13 { pt3dadd( 434.362, 328.346, 29.0612, 0.3578 ) }
    dend_13 { pt3dadd( 435.149, 327.517, 28.7314, 0.3324 ) }
    dend_13 { pt3dadd( 435.889, 326.644, 28.4679, 0.3546 ) }
    dend_13 { pt3dadd( 436.289, 325.573, 28.264, 0.4514 ) }
    dend_13 { pt3dadd( 436.435, 324.438, 28.11, 0.5848 ) }
    dend_13 { pt3dadd( 436.378, 323.139, 27.7181, 0.4068 ) }
    dend_13 { pt3dadd( 435.84, 322.171, 27.4365, 0.4518 ) }
    dend_13 { pt3dadd( 435.174, 321.304, 27.3122, 0.4926 ) }
    dend_13 { pt3dadd( 434.78, 320.314, 27.2123, 0.5906 ) }
    dend_13 { pt3dadd( 434.887, 319.192, 27.0465, 0.677 ) }
    dend_13 { pt3dadd( 435.047, 318.076, 26.8186, 0.6574 ) }
    dend_13 { pt3dadd( 435.206, 317.0, 26.5073, 0.6356 ) }
    dend_13 { pt3dadd( 435.353, 315.968, 26.0514, 0.6198 ) }
    dend_13 { pt3dadd( 435.313, 314.88, 25.6155, 0.5988 ) }
    dend_13 { pt3dadd( 435.465, 313.781, 25.285, 0.5734 ) }
    dend_13 { pt3dadd( 435.892, 312.731, 25.0831, 0.5706 ) }
    dend_13 { pt3dadd( 436.352, 311.743, 25.077, 0.5256 ) }
    dend_13 { pt3dadd( 437.01, 310.905, 25.0859, 0.6028 ) }
    dend_13 { pt3dadd( 437.631, 310.008, 24.9855, 0.6776 ) }
    dend_13 { pt3dadd( 437.994, 308.954, 24.818, 0.5026 ) }
    dend_13 { pt3dadd( 437.846, 307.886, 24.7243, 0.3278 ) }
    dend_13 { pt3dadd( 437.314, 306.895, 24.6613, 0.4382 ) }
    dend_13 { pt3dadd( 437.059, 305.806, 24.5401, 0.448 ) }
    dend_13 { pt3dadd( 437.137, 304.671, 24.4056, 0.359 ) }
    dend_13 { pt3dadd( 437.229, 303.534, 24.2474, 0.3368 ) }
    dend_13 { pt3dadd( 437.394, 302.487, 23.9405, 0.485 ) }
    dend_13 { pt3dadd( 437.634, 301.404, 23.5788, 0.6476 ) }
    dend_13 { pt3dadd( 438.119, 300.409, 23.2073, 0.4754 ) }
    dend_13 { pt3dadd( 438.198, 299.299, 22.8982, 0.5496 ) }
    dend_13 { pt3dadd( 437.83, 298.228, 22.7, 0.4764 ) }
    dend_13 { pt3dadd( 436.898, 297.657, 22.6845, 0.4114 ) }
    dend_13 { pt3dadd( 436.216, 296.938, 22.9254, 0.4188 ) }
    dend_13 { pt3dadd( 435.431, 296.12, 23.1642, 0.4718 ) }
    dend_13 { pt3dadd( 434.584, 295.438, 23.4323, 0.4408 ) }
    dend_13 { pt3dadd( 433.688, 294.775, 23.5015, 0.4798 ) }
    dend_13 { pt3dadd( 432.621, 294.447, 23.3712, 0.577 ) }
    dend_13 { pt3dadd( 431.671, 293.878, 23.0527, 0.6222 ) }
    dend_13 { pt3dadd( 430.904, 293.124, 22.6022, 0.649 ) }
    dend_13 { pt3dadd( 430.573, 292.158, 22.0408, 0.588 ) }
    dend_13 { pt3dadd( 430.138, 291.126, 21.5784, 0.5086 ) }
    dend_13 { pt3dadd( 429.69, 290.121, 21.1011, 0.4788 ) }
    dend_13 { pt3dadd( 429.382, 289.077, 20.5982, 0.514 ) }
    dend_13 { pt3dadd( 428.782, 288.139, 20.0918, 0.5424 ) }
    dend_13 { pt3dadd( 428.132, 287.216, 19.6205, 0.4518 ) }
    dend_13 { pt3dadd( 427.352, 286.561, 19.1245, 0.4694 ) }
    dend_13 { pt3dadd( 426.571, 285.995, 18.5775, 0.5236 ) }
    dend_13 { pt3dadd( 426.018, 285.022, 18.1645, 0.5914 ) }
    dend_13 { pt3dadd( 425.409, 284.075, 17.9247, 0.5224 ) }
    dend_13 { pt3dadd( 424.563, 283.331, 17.8584, 0.4384 ) }
    dend_13 { pt3dadd( 423.836, 282.561, 18.0045, 0.5482 ) }
    dend_13 { pt3dadd( 423.642, 281.542, 18.2927, 0.5988 ) }
    dend_13 { pt3dadd( 423.914, 280.463, 18.5389, 0.5056 ) }
    dend_13 { pt3dadd( 424.201, 279.415, 18.5944, 0.5056 ) }
    dend_13 { pt3dadd( 423.986, 278.366, 18.5165, 0.5246 ) }
    dend_13 { pt3dadd( 423.352, 277.475, 18.4952, 0.513 ) }
    dend_13 { pt3dadd( 422.326, 277.108, 18.4893, 0.5076 ) }
    dend_13 { pt3dadd( 421.387, 276.514, 18.5456, 0.6534 ) }
    dend_13 { pt3dadd( 420.623, 275.666, 18.5898, 0.6374 ) }
    dend_13 { pt3dadd( 420.432, 274.558, 18.5844, 0.7262 ) }
    dend_13 { pt3dadd( 419.947, 273.561, 18.6502, 0.6822 ) }
    dend_13 { pt3dadd( 420.387, 272.547, 18.5966, 0.5196 ) }
    dend_13 { pt3dadd( 420.526, 271.594, 18.3822, 0.3802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( 420.232, 270.58, 18.3987, 0.4328 ) }
    dend_13 { pt3dadd( 419.519, 270.046, 18.4978, 0.357 ) }
    dend_13 { pt3dadd( 418.631, 269.75, 18.7722, 0.4892 ) }
    dend_13 { pt3dadd( 418.144, 268.825, 19.152, 0.5108 ) }
    dend_13 { pt3dadd( 417.731, 267.853, 19.5413, 0.4508 ) }
    dend_13 { pt3dadd( 417.776, 266.938, 19.6341, 0.4422 ) }
    dend_13 { pt3dadd( 417.423, 265.924, 19.7268, 0.3152 ) }
    dend_13 { pt3dadd( 416.615, 265.274, 19.6872, 0.402 ) }
    dend_13 { pt3dadd( 415.532, 265.167, 19.6529, 0.424 ) }
    dend_13 { pt3dadd( 414.699, 264.629, 19.5778, 0.5192 ) }
    dend_13 { pt3dadd( 414.077, 263.7, 19.4674, 0.606 ) }
    dend_13 { pt3dadd( 413.597, 262.665, 19.4144, 0.6186 ) }
    dend_13 { pt3dadd( 413.301, 261.57, 19.3548, 0.5636 ) }
    dend_13 { pt3dadd( 412.714, 260.73, 19.4335, 0.5082 ) }
    dend_13 { pt3dadd( 411.82, 260.124, 19.4617, 0.5474 ) }
    dend_13 { pt3dadd( 411.047, 259.308, 19.5117, 0.4422 ) }
    dend_13 { pt3dadd( 410.203, 258.56, 19.6253, 0.4698 ) }
    dend_13 { pt3dadd( 409.591, 257.606, 19.7419, 0.431 ) }
    dend_13 { pt3dadd( 409.533, 256.491, 19.7415, 0.3342 ) }
    dend_13 { pt3dadd( 409.088, 255.443, 19.7374, 0.3736 ) }
    dend_13 { pt3dadd( 408.91, 254.333, 19.7931, 0.4388 ) }
    dend_13 { pt3dadd( 409.138, 253.216, 19.7759, 0.3714 ) }
    dend_13 { pt3dadd( 409.532, 252.142, 19.7302, 0.3958 ) }
    dend_13 { pt3dadd( 409.695, 251.036, 19.6103, 0.405 ) }
    dend_13 { pt3dadd( 409.077, 250.089, 19.4434, 0.3234 ) }
    dend_13 { pt3dadd( 408.825, 248.999, 19.2229, 0.2724 ) }
    dend_13 { pt3dadd( 409.121, 247.933, 19.0139, 0.3332 ) }
    dend_13 { pt3dadd( 409.84, 247.074, 18.8127, 0.4902 ) }
    dend_13 { pt3dadd( 410.19, 245.995, 18.6141, 0.3574 ) }
    dend_13 { pt3dadd( 410.702, 245.059, 18.3238, 0.3674 ) }
    dend_13 { pt3dadd( 411.467, 244.311, 17.9994, 0.3586 ) }
    dend_13 { pt3dadd( 411.738, 243.234, 17.711, 0.4086 ) }
    dend_13 { pt3dadd( 411.975, 242.174, 17.4188, 0.5652 ) }
    dend_13 { pt3dadd( 412.646, 241.28, 17.2011, 0.4998 ) }
    dend_13 { pt3dadd( 413.533, 240.581, 16.9769, 0.4774 ) }
    dend_13 { pt3dadd( 414.344, 239.828, 16.7317, 0.428 ) }
    dend_13 { pt3dadd( 414.831, 238.843, 16.513, 0.4932 ) }
    dend_13 { pt3dadd( 415.19, 237.763, 16.3792, 0.5718 ) }
    dend_13 { pt3dadd( 415.413, 236.658, 16.3216, 0.6358 ) }
    dend_13 { pt3dadd( 415.492, 235.516, 16.3139, 0.6196 ) }
    dend_13 { pt3dadd( 415.842, 234.448, 16.3582, 0.445 ) }
    dend_13 { pt3dadd( 416.361, 233.439, 16.3951, 0.4424 ) }
    dend_13 { pt3dadd( 416.535, 232.33, 16.4398, 0.4982 ) }
    dend_13 { pt3dadd( 416.953, 231.289, 16.5416, 0.68 ) }
    dend_13 { pt3dadd( 417.564, 230.372, 16.7551, 0.6108 ) }
    dend_13 { pt3dadd( 418.451, 229.747, 17.0561, 0.4888 ) }
    dend_13 { pt3dadd( 419.46, 230.102, 17.3857, 0.4598 ) }
    dend_13 { pt3dadd( 420.344, 230.82, 17.592, 0.4246 ) }
    dend_13 { pt3dadd( 421.105, 231.66, 17.64, 0.5338 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 440.553, 405.205, 45.6232, 0.5084 ) }
    dend_10 { pt3dadd( 440.087, 406.49, 47.1097, 0.4086 ) }
    dend_10 { pt3dadd( 439.677, 407.552, 47.7638, 0.3596 ) }
    dend_10 { pt3dadd( 439.2, 408.591, 47.9906, 0.3102 ) }
    dend_10 { pt3dadd( 438.57, 409.466, 48.347, 0.2636 ) }
    dend_10 { pt3dadd( 437.894, 410.101, 48.9149, 0.2388 ) }
    dend_10 { pt3dadd( 437.319, 410.963, 49.5323, 0.2372 ) }
    dend_10 { pt3dadd( 436.885, 412.01, 50.0301, 0.2484 ) }
    dend_10 { pt3dadd( 436.438, 413.064, 50.3882, 0.257 ) }
    dend_10 { pt3dadd( 435.967, 414.106, 50.6226, 0.262 ) }
    dend_10 { pt3dadd( 435.491, 415.146, 50.7452, 0.2668 ) }
    dend_10 { pt3dadd( 435.016, 416.187, 50.7872, 0.2714 ) }
    dend_10 { pt3dadd( 434.541, 417.227, 50.7976, 0.2762 ) }
    dend_10 { pt3dadd( 433.827, 418.111, 50.8063, 0.2928 ) }
    dend_10 { pt3dadd( 433.196, 419.063, 50.818, 0.3004 ) }
    dend_10 { pt3dadd( 432.734, 420.108, 50.8346, 0.2968 ) }
    dend_10 { pt3dadd( 432.299, 421.166, 50.8578, 0.2914 ) }
    dend_10 { pt3dadd( 431.865, 422.224, 50.8897, 0.2862 ) }
    dend_10 { pt3dadd( 431.48, 423.302, 50.9348, 0.2792 ) }
    dend_10 { pt3dadd( 431.336, 424.432, 50.9986, 0.2648 ) }
    dend_10 { pt3dadd( 430.99, 425.519, 51.0877, 0.2508 ) }
    dend_10 { pt3dadd( 430.412, 426.504, 51.2078, 0.2404 ) }
    dend_10 { pt3dadd( 429.803, 427.473, 51.3716, 0.2318 ) }
    dend_10 { pt3dadd( 429.296, 428.482, 51.6326, 0.229 ) }
    dend_10 { pt3dadd( 428.839, 429.503, 51.9957, 0.2288 ) }
    dend_10 { pt3dadd( 428.387, 430.525, 52.4359, 0.2288 ) }
    dend_10 { pt3dadd( 427.968, 431.56, 52.927, 0.2288 ) }
    dend_10 { pt3dadd( 427.684, 432.637, 53.4456, 0.2288 ) }
    dend_10 { pt3dadd( 427.458, 433.726, 53.9666, 0.2288 ) }
    dend_10 { pt3dadd( 427.236, 434.816, 54.4667, 0.2288 ) }
    dend_10 { pt3dadd( 426.567, 435.718, 54.8996, 0.2288 ) }
    dend_10 { pt3dadd( 425.56, 436.251, 55.2244, 0.2288 ) }
    dend_10 { pt3dadd( 424.516, 436.719, 55.459, 0.2288 ) }
    dend_10 { pt3dadd( 423.636, 437.446, 55.6422, 0.2288 ) }
    dend_10 { pt3dadd( 423.119, 438.461, 55.8107, 0.2288 ) }
    dend_10 { pt3dadd( 422.652, 439.502, 55.9807, 0.2288 ) }
    dend_10 { pt3dadd( 422.185, 440.543, 56.1669, 0.2288 ) }
    dend_10 { pt3dadd( 421.719, 441.584, 56.3752, 0.2288 ) }
    dend_10 { pt3dadd( 421.252, 442.625, 56.6026, 0.2288 ) }
    dend_10 { pt3dadd( 420.715, 443.635, 56.8263, 0.2288 ) }
    dend_10 { pt3dadd( 420.144, 444.627, 57.0422, 0.2288 ) }
    dend_10 { pt3dadd( 419.623, 445.578, 57.3846, 0.2672 ) }
    dend_10 { pt3dadd( 419.626, 446.714, 57.7441, 0.3292 ) }
    dend_10 { pt3dadd( 419.614, 447.857, 58.0866, 0.389 ) }
    dend_10 { pt3dadd( 418.966, 448.773, 58.4693, 0.4252 ) }
    dend_10 { pt3dadd( 418.319, 449.688, 58.8692, 0.4612 ) }
    dend_10 { pt3dadd( 417.671, 450.604, 59.2628, 0.4976 ) }
    dend_10 { pt3dadd( 417.024, 451.52, 60.0793, 0.5338 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 97/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 440.553, 405.205, 45.6232, 0.5084 ) }
    dend_9 { pt3dadd( 440.739, 405.719, 45.2474, 0.4666 ) }
    dend_9 { pt3dadd( 441.024, 406.692, 44.6799, 0.4264 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( 441.189, 407.485, 43.8785, 0.3318 ) }
    dend_9 { pt3dadd( 441.187, 408.375, 43.0083, 0.241 ) }
    dend_9 { pt3dadd( 440.988, 409.324, 42.5258, 0.4608 ) }
    dend_9 { pt3dadd( 440.978, 410.387, 42.3203, 0.5132 ) }
    dend_9 { pt3dadd( 441.204, 411.39, 42.0339, 0.4812 ) }
    dend_9 { pt3dadd( 441.456, 411.345, 41.4635, 0.2924 ) }
    dend_9 { pt3dadd( 441.37, 412.275, 40.9198, 0.413 ) }
    dend_9 { pt3dadd( 441.518, 413.158, 40.7719, 0.382 ) }
    dend_9 { pt3dadd( 441.741, 414.261, 40.7263, 0.3866 ) }
    dend_9 { pt3dadd( 441.934, 415.361, 40.791, 0.4536 ) }
    dend_9 { pt3dadd( 442.156, 416.442, 40.9352, 0.4012 ) }
    dend_9 { pt3dadd( 442.465, 417.531, 40.9643, 0.5334 ) }
    dend_9 { pt3dadd( 442.574, 418.61, 40.7918, 0.5522 ) }
    dend_9 { pt3dadd( 442.3, 419.681, 40.4214, 0.5336 ) }
    dend_9 { pt3dadd( 441.99, 420.763, 39.968, 0.451 ) }
    dend_9 { pt3dadd( 441.561, 421.777, 39.468, 0.3266 ) }
    dend_9 { pt3dadd( 441.1, 422.639, 38.8545, 0.3324 ) }
    dend_9 { pt3dadd( 440.949, 423.623, 38.2452, 0.5098 ) }
    dend_9 { pt3dadd( 440.744, 424.729, 37.8227, 0.5412 ) }
    dend_9 { pt3dadd( 440.608, 425.853, 37.4758, 0.388 ) }
    dend_9 { pt3dadd( 440.233, 426.852, 37.0647, 0.2836 ) }
    dend_9 { pt3dadd( 439.851, 427.618, 36.463, 0.2852 ) }
    dend_9 { pt3dadd( 439.096, 428.295, 35.8495, 0.3454 ) }
    dend_9 { pt3dadd( 438.124, 428.857, 35.4001, 0.5458 ) }
    dend_9 { pt3dadd( 437.574, 429.579, 35.2478, 0.5528 ) }
    dend_9 { pt3dadd( 437.047, 430.413, 34.958, 0.3656 ) }
    dend_9 { pt3dadd( 436.374, 431.275, 34.6156, 0.4486 ) }
    dend_9 { pt3dadd( 435.64, 431.996, 34.1995, 0.423 ) }
    dend_9 { pt3dadd( 434.606, 432.469, 33.8178, 0.3544 ) }
    dend_9 { pt3dadd( 433.63, 433.001, 33.439, 0.4064 ) }
    dend_9 { pt3dadd( 432.97, 433.865, 33.0394, 0.4044 ) }
    dend_9 { pt3dadd( 432.65, 434.918, 32.7219, 0.3826 ) }
    dend_9 { pt3dadd( 432.329, 435.78, 32.6715, 0.2734 ) }
    dend_9 { pt3dadd( 431.89, 436.596, 32.7751, 0.2986 ) }
    dend_9 { pt3dadd( 431.729, 437.559, 32.6326, 0.3804 ) }
    dend_9 { pt3dadd( 431.483, 438.568, 32.3134, 0.3522 ) }
    dend_9 { pt3dadd( 430.522, 439.064, 31.8872, 0.2706 ) }
    dend_9 { pt3dadd( 429.991, 440.059, 31.4023, 0.5338 ) }
    dend_9 { pt3dadd( 429.935, 440.55, 30.7955, 0.4824 ) }
    dend_9 { pt3dadd( 429.832, 441.452, 30.0504, 0.3878 ) }
    dend_9 { pt3dadd( 429.753, 442.408, 29.3196, 0.3044 ) }
    dend_9 { pt3dadd( 429.83, 443.516, 28.7876, 0.2748 ) }
    dend_9 { pt3dadd( 430.088, 444.626, 28.502, 0.309 ) }
    dend_9 { pt3dadd( 430.086, 445.534, 28.4959, 0.3558 ) }
    dend_9 { pt3dadd( 429.865, 446.072, 28.9556, 0.364 ) }
    dend_9 { pt3dadd( 429.605, 447.034, 29.4064, 0.4082 ) }
    dend_9 { pt3dadd( 429.383, 448.147, 29.794, 0.3094 ) }
    dend_9 { pt3dadd( 428.629, 448.893, 29.9855, 0.4446 ) }
    dend_9 { pt3dadd( 427.846, 449.653, 30.198, 0.4556 ) }
    dend_9 { pt3dadd( 427.099, 450.472, 30.2366, 0.4246 ) }
    dend_9 { pt3dadd( 426.218, 451.184, 30.2092, 0.4366 ) }
    dend_9 { pt3dadd( 425.716, 452.184, 30.2988, 0.4634 ) }
    dend_9 { pt3dadd( 425.195, 453.173, 30.4727, 0.4864 ) }
    dend_9 { pt3dadd( 424.666, 454.176, 30.6538, 0.3934 ) }
    dend_9 { pt3dadd( 424.139, 455.169, 30.7885, 0.493 ) }
    dend_9 { pt3dadd( 423.384, 456.016, 30.8977, 0.4462 ) }
    dend_9 { pt3dadd( 422.777, 456.969, 30.914, 0.477 ) }
    dend_9 { pt3dadd( 422.288, 457.936, 30.7154, 0.6446 ) }
    dend_9 { pt3dadd( 422.254, 458.912, 30.3895, 0.81 ) }
    dend_9 { pt3dadd( 422.932, 459.745, 30.1624, 0.6352 ) }
    dend_9 { pt3dadd( 423.639, 460.489, 29.9194, 0.3776 ) }
    dend_9 { pt3dadd( 423.542, 461.318, 29.4064, 0.3884 ) }
    dend_9 { pt3dadd( 423.155, 462.265, 28.7944, 0.545 ) }
    dend_9 { pt3dadd( 422.863, 463.352, 28.1884, 0.5108 ) }
    dend_9 { pt3dadd( 422.715, 464.422, 27.527, 0.398 ) }
    dend_9 { pt3dadd( 422.904, 465.361, 26.7446, 0.3232 ) }
    dend_9 { pt3dadd( 422.904, 466.466, 26.1792, 0.3628 ) }
    dend_9 { pt3dadd( 423.263, 467.474, 25.7922, 0.5348 ) }
    dend_9 { pt3dadd( 423.301, 468.405, 25.2695, 0.431 ) }
    dend_9 { pt3dadd( 423.015, 469.42, 24.7807, 0.3782 ) }
    dend_9 { pt3dadd( 423.253, 470.462, 24.2496, 0.25 ) }
    dend_9 { pt3dadd( 423.546, 471.416, 23.6296, 0.2802 ) }
    dend_9 { pt3dadd( 424.02, 472.399, 23.0097, 0.318 ) }
    dend_9 { pt3dadd( 424.337, 473.478, 22.488, 0.303 ) }
    dend_9 { pt3dadd( 424.581, 474.592, 22.1211, 0.333 ) }
    dend_9 { pt3dadd( 424.666, 475.703, 21.9022, 0.4798 ) }
    dend_9 { pt3dadd( 424.594, 476.816, 21.8357, 0.4756 ) }
    dend_9 { pt3dadd( 424.321, 477.883, 21.8183, 0.3102 ) }
    dend_9 { pt3dadd( 423.767, 478.782, 21.6435, 0.3518 ) }
    dend_9 { pt3dadd( 423.339, 479.748, 21.3287, 0.4832 ) }
    dend_9 { pt3dadd( 423.272, 480.863, 21.0319, 0.35 ) }
    dend_9 { pt3dadd( 422.709, 481.238, 20.5118, 0.4618 ) }
    dend_9 { pt3dadd( 421.792, 481.602, 19.9113, 0.522 ) }
    dend_9 { pt3dadd( 421.334, 482.425, 19.6, 0.356 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 434.992, 387.084, 44.702, 0.3814 ) }
    dend_7 { pt3dadd( 434.873, 386.55, 43.932, 0.4264 ) }
    dend_7 { pt3dadd( 434.573, 385.473, 43.1547, 0.438 ) }
    dend_7 { pt3dadd( 434.246, 384.408, 42.8098, 0.4186 ) }
    dend_7 { pt3dadd( 433.807, 383.372, 42.427, 0.3748 ) }
    dend_7 { pt3dadd( 433.154, 382.443, 42.0526, 0.5654 ) }
    dend_7 { pt3dadd( 432.313, 381.685, 41.7396, 0.523 ) }
    dend_7 { pt3dadd( 431.583, 381.432, 41.2157, 0.2526 ) }
    dend_7 { pt3dadd( 430.532, 381.561, 40.9735, 0.5498 ) }
    dend_7 { pt3dadd( 429.556, 381.023, 40.8736, 0.5728 ) }
    dend_7 { pt3dadd( 428.823, 380.152, 40.7702, 0.484 ) }
    dend_7 { pt3dadd( 428.222, 379.197, 40.6218, 0.5468 ) }
    dend_7 { pt3dadd( 427.618, 378.256, 40.4186, 0.482 ) }
    dend_7 { pt3dadd( 426.98, 377.351, 40.2245, 0.3996 ) }
    dend_7 { pt3dadd( 426.205, 376.615, 40.1604, 0.3974 ) }
    dend_7 { pt3dadd( 425.561, 375.676, 40.0733, 0.5214 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_7 { pt3dadd( 425.036, 374.677, 39.9291, 0.515 ) }
    dend_7 { pt3dadd( 424.436, 373.754, 39.7009, 0.4706 ) }
    dend_7 { pt3dadd( 423.71, 372.921, 39.4349, 0.4482 ) }
    dend_7 { pt3dadd( 422.985, 372.049, 39.2658, 0.438 ) }
    dend_7 { pt3dadd( 422.241, 371.215, 39.151, 0.5196 ) }
    dend_7 { pt3dadd( 421.372, 370.494, 39.0079, 0.6016 ) }
    dend_7 { pt3dadd( 420.647, 369.617, 38.8808, 0.5396 ) }
    dend_7 { pt3dadd( 420.012, 368.667, 38.7778, 0.4846 ) }
    dend_7 { pt3dadd( 419.697, 367.684, 38.6092, 0.5714 ) }
    dend_7 { pt3dadd( 420.02, 366.636, 38.3821, 0.7282 ) }
    dend_7 { pt3dadd( 420.307, 365.556, 38.1822, 0.664 ) }
    dend_7 { pt3dadd( 420.467, 364.442, 37.9705, 0.6346 ) }
    dend_7 { pt3dadd( 420.64, 363.315, 37.7899, 0.6096 ) }
    dend_7 { pt3dadd( 420.708, 362.174, 37.6474, 0.6568 ) }
    dend_7 { pt3dadd( 420.667, 361.046, 37.5827, 0.5678 ) }
    dend_7 { pt3dadd( 420.508, 359.932, 37.5886, 0.402 ) }
    dend_7 { pt3dadd( 420.403, 358.827, 37.522, 0.3922 ) }
    dend_7 { pt3dadd( 420.404, 357.72, 37.3209, 0.4698 ) }
    dend_7 { pt3dadd( 420.604, 356.618, 37.0423, 0.5582 ) }
    dend_7 { pt3dadd( 420.763, 355.503, 36.7315, 0.6154 ) }
    dend_7 { pt3dadd( 420.833, 354.435, 36.3342, 0.626 ) }
    dend_7 { pt3dadd( 420.918, 353.375, 35.8767, 0.583 ) }
    dend_7 { pt3dadd( 420.901, 352.299, 35.6, 0.5882 ) }
    dend_7 { pt3dadd( 420.782, 351.211, 35.4337, 0.5382 ) }
    dend_7 { pt3dadd( 420.548, 350.11, 35.3478, 0.5574 ) }
    dend_7 { pt3dadd( 420.489, 348.99, 35.3808, 0.5376 ) }
    dend_7 { pt3dadd( 420.42, 347.853, 35.4544, 0.4616 ) }
    dend_7 { pt3dadd( 420.209, 346.781, 35.6188, 0.3582 ) }
    dend_7 { pt3dadd( 420.091, 345.661, 35.6905, 0.4402 ) }
    dend_7 { pt3dadd( 420.201, 344.653, 35.53, 0.563 ) }
    dend_7 { pt3dadd( 420.397, 343.618, 35.2251, 0.419 ) }
    dend_7 { pt3dadd( 420.234, 342.529, 35.0543, 0.3448 ) }
    dend_7 { pt3dadd( 419.996, 341.446, 35.0311, 0.5344 ) }
    dend_7 { pt3dadd( 419.704, 340.345, 35.0515, 0.5626 ) }
    dend_7 { pt3dadd( 419.428, 339.244, 35.0518, 0.4186 ) }
    dend_7 { pt3dadd( 418.749, 338.339, 35.0546, 0.455 ) }
    dend_7 { pt3dadd( 418.818, 337.213, 35.0633, 0.3962 ) }
    dend_7 { pt3dadd( 418.671, 336.12, 34.9938, 0.3952 ) }
    dend_7 { pt3dadd( 417.938, 335.253, 35.0465, 0.436 ) }
    dend_7 { pt3dadd( 417.169, 334.451, 35.2716, 0.492 ) }
    dend_7 { pt3dadd( 416.386, 333.69, 35.6566, 0.4862 ) }
    dend_7 { pt3dadd( 415.406, 333.157, 36.1166, 0.3292 ) }
    dend_7 { pt3dadd( 414.463, 332.62, 36.6481, 0.2864 ) }
    dend_7 { pt3dadd( 413.512, 332.01, 37.142, 0.3344 ) }
    dend_7 { pt3dadd( 412.699, 331.253, 37.6001, 0.3342 ) }
    dend_7 { pt3dadd( 412.091, 330.315, 37.942, 0.4068 ) }
    dend_7 { pt3dadd( 411.458, 329.464, 38.0481, 0.4602 ) }
    dend_7 { pt3dadd( 410.621, 328.76, 38.162, 0.4578 ) }
    dend_7 { pt3dadd( 409.647, 328.366, 38.3998, 0.3868 ) }
    dend_7 { pt3dadd( 408.775, 327.641, 38.6411, 0.4074 ) }
    dend_7 { pt3dadd( 407.943, 326.891, 38.9026, 0.4084 ) }
    dend_7 { pt3dadd( 406.916, 326.591, 39.1832, 0.3592 ) }
    dend_7 { pt3dadd( 405.814, 326.463, 39.3963, 0.3854 ) }
    dend_7 { pt3dadd( 404.854, 325.898, 39.5962, 0.3264 ) }
    dend_7 { pt3dadd( 403.929, 325.255, 39.7816, 0.3356 ) }
    dend_7 { pt3dadd( 403.029, 324.602, 40.003, 0.316 ) }
    dend_7 { pt3dadd( 402.14, 323.934, 40.294, 0.2596 ) }
    dend_7 { pt3dadd( 401.363, 323.157, 40.6398, 0.267 ) }
    dend_7 { pt3dadd( 400.711, 322.251, 40.9158, 0.34 ) }
    dend_7 { pt3dadd( 400.056, 321.35, 41.44, 0.305 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 60/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 434.992, 387.084, 44.702, 0.3814 ) }
    dend_2 { pt3dadd( 434.488, 387.038, 44.5973, 0.3718 ) }
    dend_2 { pt3dadd( 433.345, 387.011, 44.5063, 0.3742 ) }
    dend_2 { pt3dadd( 432.205, 387.104, 44.4632, 0.4152 ) }
    dend_2 { pt3dadd( 431.06, 387.114, 44.4713, 0.4194 ) }
    dend_2 { pt3dadd( 429.922, 387.04, 44.5542, 0.3946 ) }
    dend_2 { pt3dadd( 428.839, 386.865, 44.77, 0.3412 ) }
    dend_2 { pt3dadd( 427.742, 387.171, 44.966, 0.2774 ) }
    dend_2 { pt3dadd( 426.629, 387.436, 45.1139, 0.2694 ) }
    dend_2 { pt3dadd( 425.491, 387.313, 45.2147, 0.2938 ) }
    dend_2 { pt3dadd( 424.464, 386.81, 45.2715, 0.3242 ) }
    dend_2 { pt3dadd( 423.441, 386.298, 45.2866, 0.3552 ) }
    dend_2 { pt3dadd( 422.431, 385.759, 45.2684, 0.4304 ) }
    dend_2 { pt3dadd( 421.305, 385.954, 45.2365, 0.4142 ) }
    dend_2 { pt3dadd( 420.174, 386.128, 45.1909, 0.3796 ) }
    dend_2 { pt3dadd( 419.041, 386.283, 45.1262, 0.3304 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 427.5, 384.51, 32.6477, 0.6356 ) }
    dend_32 { pt3dadd( 427.756, 383.749, 31.9589, 0.5102 ) }
    dend_32 { pt3dadd( 428.056, 382.778, 30.7026, 0.3762 ) }
    dend_32 { pt3dadd( 427.823, 381.787, 30.1546, 0.4422 ) }
    dend_32 { pt3dadd( 426.986, 381.125, 29.6629, 0.433 ) }
    dend_32 { pt3dadd( 426.171, 380.545, 29.1038, 0.4508 ) }
    dend_32 { pt3dadd( 425.527, 379.737, 28.4346, 0.479 ) }
    dend_32 { pt3dadd( 425.422, 378.804, 27.6906, 0.4708 ) }
    dend_32 { pt3dadd( 425.675, 377.743, 27.021, 0.5162 ) }
    dend_32 { pt3dadd( 426.05, 376.671, 26.4566, 0.4786 ) }
    dend_32 { pt3dadd( 426.676, 375.727, 26.0035, 0.5562 ) }
    dend_32 { pt3dadd( 427.251, 374.763, 25.5986, 0.5318 ) }
    dend_32 { pt3dadd( 427.776, 373.775, 25.3319, 0.3828 ) }
    dend_32 { pt3dadd( 428.492, 372.944, 25.1922, 0.3498 ) }
    dend_32 { pt3dadd( 428.977, 372.013, 24.8632, 0.2978 ) }
    dend_32 { pt3dadd( 429.002, 370.88, 24.4572, 0.422 ) }
    dend_32 { pt3dadd( 428.542, 369.884, 23.9004, 0.4926 ) }
    dend_32 { pt3dadd( 427.658, 369.474, 23.1207, 0.518 ) }
    dend_32 { pt3dadd( 426.698, 369.187, 22.2105, 0.555 ) }
    dend_32 { pt3dadd( 426.137, 368.303, 21.2734, 0.403 ) }
    dend_32 { pt3dadd( 426.032, 367.344, 20.2949, 0.507 ) }
    dend_32 { pt3dadd( 426.077, 366.317, 19.3932, 0.4122 ) }
    dend_32 { pt3dadd( 426.702, 365.387, 18.6389, 0.4456 ) }
    dend_32 { pt3dadd( 427.185, 364.365, 18.0782, 0.503 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_32 { pt3dadd( 427.536, 363.298, 17.6668, 0.4712 ) }
    dend_32 { pt3dadd( 428.108, 362.353, 17.2637, 0.5554 ) }
    dend_32 { pt3dadd( 428.482, 361.337, 16.8669, 0.5032 ) }
    dend_32 { pt3dadd( 428.58, 360.223, 16.5011, 0.5584 ) }
    dend_32 { pt3dadd( 428.234, 359.208, 16.0649, 0.4484 ) }
    dend_32 { pt3dadd( 428.285, 358.13, 15.6725, 0.4206 ) }
    dend_32 { pt3dadd( 428.72, 357.077, 15.3416, 0.4518 ) }
    dend_32 { pt3dadd( 429.0, 356.196, 14.8471, 0.4128 ) }
    dend_32 { pt3dadd( 428.934, 355.115, 14.3598, 0.2924 ) }
    dend_32 { pt3dadd( 428.737, 353.989, 13.9876, 0.2362 ) }
    dend_32 { pt3dadd( 427.76, 353.463, 13.7305, 0.2712 ) }
    dend_32 { pt3dadd( 427.741, 352.323, 13.5607, 0.3022 ) }
    dend_32 { pt3dadd( 427.741, 351.179, 13.4674, 0.2428 ) }
    dend_32 { pt3dadd( 427.618, 350.042, 13.4424, 0.23 ) }
    dend_32 { pt3dadd( 427.397, 348.92, 13.44, 0.3304 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 427.5, 384.51, 32.6477, 0.6356 ) }
    dend_29 { pt3dadd( 426.661, 384.868, 32.2773, 0.3932 ) }
    dend_29 { pt3dadd( 425.627, 385.054, 31.782, 0.4476 ) }
    dend_29 { pt3dadd( 424.492, 385.076, 31.4412, 0.5962 ) }
    dend_29 { pt3dadd( 423.389, 385.107, 31.3093, 0.7262 ) }
    dend_29 { pt3dadd( 422.267, 385.327, 31.2262, 0.761 ) }
    dend_29 { pt3dadd( 421.246, 385.763, 31.0708, 0.7146 ) }
    dend_29 { pt3dadd( 420.139, 386.033, 30.9243, 0.6636 ) }
    dend_29 { pt3dadd( 419.043, 386.363, 30.7958, 0.7594 ) }
    dend_29 { pt3dadd( 418.178, 387.111, 30.6572, 0.9114 ) }
    dend_29 { pt3dadd( 417.425, 387.969, 30.5038, 0.9898 ) }
    dend_29 { pt3dadd( 416.636, 388.739, 30.2792, 0.891 ) }
    dend_29 { pt3dadd( 415.932, 389.638, 30.0969, 0.7372 ) }
    dend_29 { pt3dadd( 415.254, 390.559, 29.9569, 0.6102 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 466.459, 327.374, 19.4214, 0.4068 ) }
    dend_25 { pt3dadd( 466.107, 326.986, 19.0534, 0.3904 ) }
    dend_25 { pt3dadd( 465.9, 326.045, 18.6503, 0.3782 ) }
    dend_25 { pt3dadd( 466.447, 325.101, 18.3195, 0.3814 ) }
    dend_25 { pt3dadd( 467.191, 324.239, 18.1398, 0.3842 ) }
    dend_25 { pt3dadd( 467.711, 323.252, 18.1058, 0.402 ) }
    dend_25 { pt3dadd( 468.077, 322.174, 18.1467, 0.445 ) }
    dend_25 { pt3dadd( 468.477, 321.104, 18.2298, 0.5038 ) }
    dend_25 { pt3dadd( 468.917, 320.049, 18.3402, 0.5414 ) }
    dend_25 { pt3dadd( 469.362, 318.995, 18.4441, 0.5352 ) }
    dend_25 { pt3dadd( 469.892, 317.985, 18.5244, 0.5076 ) }
    dend_25 { pt3dadd( 470.541, 317.045, 18.5854, 0.5124 ) }
    dend_25 { pt3dadd( 471.142, 316.078, 18.6511, 0.5706 ) }
    dend_25 { pt3dadd( 471.518, 315.021, 18.7499, 0.6424 ) }
    dend_25 { pt3dadd( 471.726, 313.908, 18.856, 0.6488 ) }
    dend_25 { pt3dadd( 471.675, 312.781, 18.9111, 0.5524 ) }
    dend_25 { pt3dadd( 471.361, 311.687, 18.8754, 0.4016 ) }
    dend_25 { pt3dadd( 471.157, 310.582, 18.7185, 0.3534 ) }
    dend_25 { pt3dadd( 471.368, 309.498, 18.446, 0.4386 ) }
    dend_25 { pt3dadd( 472.016, 308.593, 18.0955, 0.5716 ) }
    dend_25 { pt3dadd( 472.946, 307.988, 17.6775, 0.6554 ) }
    dend_25 { pt3dadd( 473.972, 307.557, 17.2078, 0.6638 ) }
    dend_25 { pt3dadd( 474.983, 307.075, 16.7265, 0.6396 ) }
    dend_25 { pt3dadd( 475.831, 306.347, 16.2637, 0.6326 ) }
    dend_25 { pt3dadd( 476.229, 305.326, 15.8198, 0.6528 ) }
    dend_25 { pt3dadd( 476.194, 304.21, 15.4064, 0.6662 ) }
    dend_25 { pt3dadd( 476.126, 303.083, 15.0349, 0.6408 ) }
    dend_25 { pt3dadd( 476.255, 301.978, 14.6889, 0.5778 ) }
    dend_25 { pt3dadd( 476.631, 300.928, 14.3776, 0.5148 ) }
    dend_25 { pt3dadd( 477.387, 300.102, 14.1869, 0.5054 ) }
    dend_25 { pt3dadd( 478.38, 299.647, 14.1949, 0.5602 ) }
    dend_25 { pt3dadd( 479.302, 299.032, 14.3357, 0.635 ) }
    dend_25 { pt3dadd( 479.809, 298.029, 14.4691, 0.6484 ) }
    dend_25 { pt3dadd( 479.875, 296.897, 14.5528, 0.5896 ) }
    dend_25 { pt3dadd( 479.767, 295.758, 14.6063, 0.5112 ) }
    dend_25 { pt3dadd( 479.827, 294.625, 14.5871, 0.4784 ) }
    dend_25 { pt3dadd( 480.072, 293.53, 14.4882, 0.4926 ) }
    dend_25 { pt3dadd( 480.416, 292.441, 14.4369, 0.5184 ) }
    dend_25 { pt3dadd( 480.76, 291.391, 14.546, 0.5316 ) }
    dend_25 { pt3dadd( 480.986, 290.288, 14.7398, 0.52 ) }
    dend_25 { pt3dadd( 481.119, 289.153, 14.9312, 0.4826 ) }
    dend_25 { pt3dadd( 481.482, 288.072, 15.1127, 0.418 ) }
    dend_25 { pt3dadd( 482.023, 287.139, 15.3754, 0.3856 ) }
    dend_25 { pt3dadd( 482.417, 286.069, 15.5451, 0.3988 ) }
    dend_25 { pt3dadd( 482.912, 285.102, 15.4861, 0.4626 ) }
    dend_25 { pt3dadd( 483.634, 284.224, 15.3443, 0.4432 ) }
    dend_25 { pt3dadd( 484.446, 283.418, 15.1854, 0.3936 ) }
    dend_25 { pt3dadd( 485.236, 282.6, 15.0463, 0.3016 ) }
    dend_25 { pt3dadd( 486.232, 282.064, 14.9251, 0.3008 ) }
    dend_25 { pt3dadd( 487.108, 281.379, 14.6727, 0.3266 ) }
    dend_25 { pt3dadd( 487.828, 280.54, 14.3107, 0.375 ) }
    dend_25 { pt3dadd( 488.327, 279.627, 13.7954, 0.3358 ) }
    dend_25 { pt3dadd( 488.744, 278.587, 13.2682, 0.2836 ) }
    dend_25 { pt3dadd( 489.193, 277.577, 12.7342, 0.2552 ) }
    dend_25 { pt3dadd( 488.941, 276.468, 12.2935, 0.2794 ) }
    dend_25 { pt3dadd( 488.373, 275.475, 11.76, 0.3304 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 85/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 466.459, 327.374, 19.4214, 0.4068 ) }
    dend_24 { pt3dadd( 466.543, 327.501, 19.8228, 0.3964 ) }
    dend_24 { pt3dadd( 465.551, 328.009, 19.665, 0.4064 ) }
    dend_24 { pt3dadd( 464.596, 328.485, 19.4856, 0.4064 ) }
    dend_24 { pt3dadd( 463.795, 329.3, 19.2904, 0.3928 ) }
    dend_24 { pt3dadd( 463.002, 330.125, 19.0895, 0.382 ) }
    dend_24 { pt3dadd( 462.228, 330.964, 18.8576, 0.3794 ) }
    dend_24 { pt3dadd( 461.608, 331.864, 18.5158, 0.3704 ) }
    dend_24 { pt3dadd( 460.993, 332.767, 18.1026, 0.3614 ) }
    dend_24 { pt3dadd( 460.419, 333.737, 17.7242, 0.3392 ) }
    dend_24 { pt3dadd( 459.918, 334.765, 17.4389, 0.301 ) }
    dend_24 { pt3dadd( 459.512, 335.835, 17.2406, 0.257 ) }
    dend_24 { pt3dadd( 458.6, 336.524, 17.1215, 0.2688 ) }
    dend_24 { pt3dadd( 457.596, 337.073, 17.0689, 0.2982 ) }
    dend_24 { pt3dadd( 456.489, 337.363, 17.0548, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 450.149, 346.788, 22.7047, 0.4322 ) }
    dend_20 { pt3dadd( 449.949, 347.79, 20.69, 0.4376 ) }
    dend_20 { pt3dadd( 449.921, 348.928, 20.7948, 0.4134 ) }
    dend_20 { pt3dadd( 449.847, 350.046, 20.9042, 0.388 ) }
    dend_20 { pt3dadd( 449.748, 351.185, 20.9878, 0.4242 ) }
    dend_20 { pt3dadd( 449.656, 352.301, 20.9845, 0.4772 ) }
    dend_20 { pt3dadd( 449.206, 353.315, 20.9163, 0.5288 ) }
    dend_20 { pt3dadd( 448.697, 354.333, 20.9554, 0.486 ) }
    dend_20 { pt3dadd( 448.431, 355.278, 21.2554, 0.4588 ) }
    dend_20 { pt3dadd( 447.962, 356.322, 21.5583, 0.4084 ) }
    dend_20 { pt3dadd( 447.456, 357.328, 21.8008, 0.4318 ) }
    dend_20 { pt3dadd( 446.972, 358.349, 22.1411, 0.3816 ) }
    dend_20 { pt3dadd( 446.654, 359.428, 22.5517, 0.3814 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 450.149, 346.788, 22.7047, 0.4322 ) }
    dend_17 { pt3dadd( 449.934, 346.174, 22.1952, 0.305 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 15/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 419.041, 386.283, 45.1262, 0.3304 ) }
    dend_4 { pt3dadd( 418.393, 385.695, 46.1023, 0.291 ) }
    dend_4 { pt3dadd( 417.551, 384.998, 46.8138, 0.2486 ) }
    dend_4 { pt3dadd( 416.591, 384.424, 47.1125, 0.2288 ) }
    dend_4 { pt3dadd( 415.585, 383.89, 47.3903, 0.2288 ) }
    dend_4 { pt3dadd( 414.924, 383.034, 47.6594, 0.229 ) }
    dend_4 { pt3dadd( 414.455, 382.001, 47.945, 0.2336 ) }
    dend_4 { pt3dadd( 413.761, 381.129, 48.3011, 0.2588 ) }
    dend_4 { pt3dadd( 412.913, 380.396, 48.7194, 0.311 ) }
    dend_4 { pt3dadd( 412.083, 379.658, 49.2092, 0.3834 ) }
    dend_4 { pt3dadd( 411.381, 378.921, 49.8476, 0.4568 ) }
    dend_4 { pt3dadd( 410.398, 378.637, 50.5128, 0.4682 ) }
    dend_4 { pt3dadd( 409.284, 378.516, 51.1518, 0.4294 ) }
    dend_4 { pt3dadd( 408.164, 378.353, 51.7252, 0.3836 ) }
    dend_4 { pt3dadd( 407.101, 377.963, 52.2217, 0.3438 ) }
    dend_4 { pt3dadd( 406.872, 376.998, 52.7066, 0.3178 ) }
    dend_4 { pt3dadd( 407.16, 375.91, 53.1678, 0.3014 ) }
    dend_4 { pt3dadd( 407.472, 374.816, 53.6127, 0.2838 ) }
    dend_4 { pt3dadd( 407.517, 373.771, 54.171, 0.2668 ) }
    dend_4 { pt3dadd( 407.199, 372.745, 54.7901, 0.2478 ) }
    dend_4 { pt3dadd( 406.673, 371.738, 55.3364, 0.2322 ) }
    dend_4 { pt3dadd( 406.283, 370.664, 55.788, 0.229 ) }
    dend_4 { pt3dadd( 405.601, 370.122, 56.404, 0.2652 ) }
    dend_4 { pt3dadd( 404.839, 369.312, 56.9724, 0.2938 ) }
    dend_4 { pt3dadd( 404.16, 368.391, 57.386, 0.312 ) }
    dend_4 { pt3dadd( 403.482, 367.47, 57.6873, 0.3304 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 41/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 419.041, 386.283, 45.1262, 0.3304 ) }
    dend_3 { pt3dadd( 418.52, 386.512, 45.0363, 0.3092 ) }
    dend_3 { pt3dadd( 417.472, 386.972, 44.9182, 0.2664 ) }
    dend_3 { pt3dadd( 416.428, 387.435, 44.7563, 0.2298 ) }
    dend_3 { pt3dadd( 415.419, 387.902, 44.4763, 0.2288 ) }
    dend_3 { pt3dadd( 414.412, 388.369, 44.1098, 0.2288 ) }
    dend_3 { pt3dadd( 413.405, 388.835, 43.6878, 0.2288 ) }
    dend_3 { pt3dadd( 412.559, 389.601, 43.3045, 0.2288 ) }
    dend_3 { pt3dadd( 411.773, 390.432, 42.9853, 0.2396 ) }
    dend_3 { pt3dadd( 410.964, 391.241, 42.7174, 0.2596 ) }
    dend_3 { pt3dadd( 410.155, 392.05, 42.4875, 0.2796 ) }
    dend_3 { pt3dadd( 409.805, 392.467, 42.2108, 0.2796 ) }
    dend_3 { pt3dadd( 409.109, 393.299, 41.8298, 0.2796 ) }
    dend_3 { pt3dadd( 408.414, 394.132, 41.3748, 0.2796 ) }
    dend_3 { pt3dadd( 407.718, 394.964, 40.8884, 0.2796 ) }
    dend_3 { pt3dadd( 407.336, 396.023, 40.4953, 0.2736 ) }
    dend_3 { pt3dadd( 407.141, 397.149, 40.257, 0.2644 ) }
    dend_3 { pt3dadd( 406.911, 398.269, 40.1792, 0.255 ) }
    dend_3 { pt3dadd( 406.453, 399.315, 40.2483, 0.2452 ) }
    dend_3 { pt3dadd( 405.915, 400.324, 40.4404, 0.235 ) }
    dend_3 { pt3dadd( 405.669, 401.412, 40.8128, 0.2296 ) }
    dend_3 { pt3dadd( 405.696, 402.478, 41.3745, 0.2288 ) }
    dend_3 { pt3dadd( 405.769, 403.53, 42.0739, 0.2288 ) }
    dend_3 { pt3dadd( 405.843, 404.582, 42.8548, 0.2288 ) }
    dend_3 { pt3dadd( 405.918, 405.634, 43.6654, 0.2288 ) }
    dend_3 { pt3dadd( 405.992, 406.686, 44.4578, 0.2288 ) }
    dend_3 { pt3dadd( 405.7, 407.763, 45.1212, 0.2288 ) }
    dend_3 { pt3dadd( 405.182, 408.781, 45.5818, 0.2302 ) }
    dend_3 { pt3dadd( 404.778, 409.851, 45.8707, 0.2342 ) }
    dend_3 { pt3dadd( 404.396, 410.929, 46.0314, 0.2386 ) }
    dend_3 { pt3dadd( 404.015, 412.008, 46.104, 0.2426 ) }
    dend_3 { pt3dadd( 403.633, 413.086, 46.1252, 0.247 ) }
    dend_3 { pt3dadd( 403.252, 414.165, 46.128, 0.2514 ) }
    dend_3 { pt3dadd( 402.557, 415.072, 46.1294, 0.258 ) }
    dend_3 { pt3dadd( 401.54, 415.594, 46.1308, 0.2672 ) }
    dend_3 { pt3dadd( 400.509, 416.091, 46.1334, 0.2764 ) }
    dend_3 { pt3dadd( 399.726, 416.924, 46.1364, 0.2896 ) }
    dend_3 { pt3dadd( 399.101, 417.883, 46.1409, 0.3042 ) }
    dend_3 { pt3dadd( 398.314, 418.713, 46.1471, 0.2986 ) }
    dend_3 { pt3dadd( 397.517, 419.534, 46.1558, 0.2922 ) }
    dend_3 { pt3dadd( 396.722, 420.357, 46.1681, 0.2856 ) }
    dend_3 { pt3dadd( 395.956, 421.206, 46.1849, 0.2786 ) }
    dend_3 { pt3dadd( 395.387, 422.199, 46.2084, 0.273 ) }
    dend_3 { pt3dadd( 394.822, 423.193, 46.242, 0.267 ) }
    dend_3 { pt3dadd( 394.257, 424.187, 46.2893, 0.2612 ) }
    dend_3 { pt3dadd( 393.692, 425.182, 46.354, 0.2554 ) }
    dend_3 { pt3dadd( 393.315, 426.262, 46.4394, 0.2412 ) }
    dend_3 { pt3dadd( 392.91, 427.331, 46.5646, 0.2288 ) }
    dend_3 { pt3dadd( 392.308, 428.286, 46.7678, 0.2288 ) }
    dend_3 { pt3dadd( 391.703, 429.241, 47.0243, 0.2288 ) }
    dend_3 { pt3dadd( 391.101, 430.197, 47.3102, 0.2288 ) }
    dend_3 { pt3dadd( 390.496, 431.152, 47.6034, 0.2288 ) }
    dend_3 { pt3dadd( 389.894, 432.107, 47.8831, 0.2288 ) }
    dend_3 { pt3dadd( 389.544, 433.22, 48.0645, 0.2912 ) }
    dend_3 { pt3dadd( 389.205, 434.313, 48.1547, 0.3234 ) }
    dend_3 { pt3dadd( 388.873, 435.408, 48.1695, 0.321 ) }
    dend_3 { pt3dadd( 388.541, 436.502, 48.1244, 0.3142 ) }
    dend_3 { pt3dadd( 388.21, 437.597, 48.0348, 0.3076 ) }
    dend_3 { pt3dadd( 387.683, 438.525, 47.7722, 0.3052 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( 387.109, 439.511, 47.5154, 0.305 ) }
    dend_3 { pt3dadd( 386.541, 440.504, 47.2836, 0.305 ) }
    dend_3 { pt3dadd( 385.974, 441.498, 47.0702, 0.305 ) }
    dend_3 { pt3dadd( 385.407, 442.491, 46.8709, 0.305 ) }
    dend_3 { pt3dadd( 384.838, 443.484, 46.6833, 0.305 ) }
    dend_3 { pt3dadd( 384.354, 444.439, 46.3663, 0.305 ) }
    dend_3 { pt3dadd( 383.921, 445.351, 45.8948, 0.305 ) }
    dend_3 { pt3dadd( 383.387, 446.361, 45.5123, 0.305 ) }
    dend_3 { pt3dadd( 382.849, 447.371, 45.2166, 0.305 ) }
    dend_3 { pt3dadd( 382.315, 448.383, 44.9977, 0.305 ) }
    dend_3 { pt3dadd( 381.777, 449.393, 44.8456, 0.305 ) }
    dend_3 { pt3dadd( 381.24, 450.403, 44.7457, 0.305 ) }
    dend_3 { pt3dadd( 380.737, 451.43, 44.6648, 0.305 ) }
    dend_3 { pt3dadd( 380.562, 452.552, 44.5276, 0.305 ) }
    dend_3 { pt3dadd( 380.393, 453.675, 44.3523, 0.305 ) }
    dend_3 { pt3dadd( 380.222, 454.797, 44.1566, 0.305 ) }
    dend_3 { pt3dadd( 379.801, 455.86, 43.7996, 0.305 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 17/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 415.254, 390.559, 29.9569, 0.6102 ) }
    dend_31 { pt3dadd( 414.335, 390.868, 29.9432, 0.5544 ) }
    dend_31 { pt3dadd( 413.39, 391.457, 29.9807, 0.5588 ) }
    dend_31 { pt3dadd( 412.561, 392.235, 29.9681, 0.571 ) }
    dend_31 { pt3dadd( 411.748, 393.022, 29.8738, 0.524 ) }
    dend_31 { pt3dadd( 410.891, 393.768, 29.7441, 0.4644 ) }
    dend_31 { pt3dadd( 409.965, 394.431, 29.5943, 0.4276 ) }
    dend_31 { pt3dadd( 409.042, 395.003, 29.335, 0.413 ) }
    dend_31 { pt3dadd( 408.134, 395.569, 28.989, 0.402 ) }
    dend_31 { pt3dadd( 407.226, 396.224, 28.7146, 0.394 ) }
    dend_31 { pt3dadd( 406.431, 396.987, 28.6154, 0.403 ) }
    dend_31 { pt3dadd( 405.722, 397.797, 28.6773, 0.4156 ) }
    dend_31 { pt3dadd( 404.989, 398.629, 28.7655, 0.4258 ) }
    dend_31 { pt3dadd( 404.311, 399.433, 28.6815, 0.4318 ) }
    dend_31 { pt3dadd( 403.529, 400.08, 28.4099, 0.4278 ) }
    dend_31 { pt3dadd( 402.59, 400.673, 28.0734, 0.4152 ) }
    dend_31 { pt3dadd( 401.564, 401.151, 27.7608, 0.4136 ) }
    dend_31 { pt3dadd( 400.466, 401.454, 27.5418, 0.437 ) }
    dend_31 { pt3dadd( 399.35, 401.689, 27.4219, 0.47 ) }
    dend_31 { pt3dadd( 398.261, 402.023, 27.3739, 0.4748 ) }
    dend_31 { pt3dadd( 397.272, 402.582, 27.3528, 0.4898 ) }
    dend_31 { pt3dadd( 396.547, 403.412, 27.3882, 0.4676 ) }
    dend_31 { pt3dadd( 395.623, 403.97, 27.4033, 0.4338 ) }
    dend_31 { pt3dadd( 394.539, 404.326, 27.3372, 0.4242 ) }
    dend_31 { pt3dadd( 393.574, 404.919, 27.2122, 0.4312 ) }
    dend_31 { pt3dadd( 392.678, 405.629, 27.0621, 0.4644 ) }
    dend_31 { pt3dadd( 391.848, 406.358, 26.8099, 0.4426 ) }
    dend_31 { pt3dadd( 391.153, 406.873, 26.3381, 0.3676 ) }
    dend_31 { pt3dadd( 390.269, 407.581, 26.0372, 0.3994 ) }
    dend_31 { pt3dadd( 389.487, 408.4, 25.7956, 0.4202 ) }
    dend_31 { pt3dadd( 388.652, 409.155, 25.6259, 0.4644 ) }
    dend_31 { pt3dadd( 387.767, 409.793, 25.6922, 0.4106 ) }
    dend_31 { pt3dadd( 386.981, 410.487, 25.9661, 0.4104 ) }
    dend_31 { pt3dadd( 386.209, 411.274, 26.2916, 0.4556 ) }
    dend_31 { pt3dadd( 385.256, 411.687, 26.6428, 0.3894 ) }
    dend_31 { pt3dadd( 384.17, 411.933, 26.8038, 0.5596 ) }
    dend_31 { pt3dadd( 383.098, 412.225, 26.8244, 0.5586 ) }
    dend_31 { pt3dadd( 381.961, 412.326, 26.766, 0.6776 ) }
    dend_31 { pt3dadd( 380.823, 412.339, 26.6301, 0.5946 ) }
    dend_31 { pt3dadd( 379.714, 412.478, 26.4842, 0.5386 ) }
    dend_31 { pt3dadd( 378.69, 412.932, 26.3108, 0.6416 ) }
    dend_31 { pt3dadd( 377.632, 413.186, 26.1319, 0.6222 ) }
    dend_31 { pt3dadd( 376.529, 412.982, 25.9608, 0.5492 ) }
    dend_31 { pt3dadd( 375.46, 412.739, 25.7228, 0.4216 ) }
    dend_31 { pt3dadd( 374.348, 412.658, 25.4873, 0.3492 ) }
    dend_31 { pt3dadd( 373.284, 412.669, 25.4366, 0.4406 ) }
    dend_31 { pt3dadd( 372.196, 412.783, 25.4729, 0.471 ) }
    dend_31 { pt3dadd( 371.099, 413.064, 25.5459, 0.3448 ) }
    dend_31 { pt3dadd( 370.057, 413.474, 25.5693, 0.4928 ) }
    dend_31 { pt3dadd( 368.961, 413.745, 25.5627, 0.4388 ) }
    dend_31 { pt3dadd( 367.848, 414.004, 25.5485, 0.2886 ) }
    dend_31 { pt3dadd( 366.804, 414.457, 25.5128, 0.2356 ) }
    dend_31 { pt3dadd( 365.903, 415.148, 25.4534, 0.2874 ) }
    dend_31 { pt3dadd( 365.036, 415.862, 25.4513, 0.258 ) }
    dend_31 { pt3dadd( 364.076, 416.387, 25.3682, 0.405 ) }
    dend_31 { pt3dadd( 363.192, 417.076, 25.2594, 0.3988 ) }
    dend_31 { pt3dadd( 362.371, 417.871, 25.1227, 0.3752 ) }
    dend_31 { pt3dadd( 361.378, 418.412, 24.9813, 0.2866 ) }
    dend_31 { pt3dadd( 360.365, 418.936, 24.7962, 0.4424 ) }
    dend_31 { pt3dadd( 359.334, 419.416, 24.5398, 0.504 ) }
    dend_31 { pt3dadd( 358.559, 420.049, 24.1008, 0.452 ) }
    dend_31 { pt3dadd( 357.841, 420.888, 23.605, 0.3132 ) }
    dend_31 { pt3dadd( 356.84, 421.404, 23.1587, 0.2982 ) }
    dend_31 { pt3dadd( 355.865, 421.994, 22.8013, 0.237 ) }
    dend_31 { pt3dadd( 354.911, 422.47, 22.371, 0.2288 ) }
    dend_31 { pt3dadd( 354.18, 423.181, 21.8609, 0.3792 ) }
    dend_31 { pt3dadd( 354.067, 424.31, 21.0, 0.3304 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 415.254, 390.559, 29.9569, 0.6102 ) }
    dend_30 { pt3dadd( 414.58, 391.661, 29.0707, 0.4652 ) }
    dend_30 { pt3dadd( 414.151, 392.599, 28.1064, 0.4758 ) }
    dend_30 { pt3dadd( 413.596, 393.51, 27.663, 0.55 ) }
    dend_30 { pt3dadd( 413.167, 394.546, 27.3033, 0.548 ) }
    dend_30 { pt3dadd( 413.313, 395.601, 27.042, 0.484 ) }
    dend_30 { pt3dadd( 413.869, 396.497, 26.7605, 0.5482 ) }
    dend_30 { pt3dadd( 414.168, 397.479, 26.346, 0.5716 ) }
    dend_30 { pt3dadd( 414.194, 398.57, 25.9575, 0.5452 ) }
    dend_30 { pt3dadd( 413.945, 399.683, 25.6162, 0.6562 ) }
    dend_30 { pt3dadd( 413.874, 400.804, 25.2752, 0.6488 ) }
    dend_30 { pt3dadd( 413.807, 401.926, 24.971, 0.599 ) }
    dend_30 { pt3dadd( 413.46, 402.921, 24.6136, 0.6138 ) }
    dend_30 { pt3dadd( 413.251, 403.909, 24.1593, 0.538 ) }
    dend_30 { pt3dadd( 413.191, 404.992, 23.8134, 0.4772 ) }
    dend_30 { pt3dadd( 413.067, 406.112, 23.6107, 0.565 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_30 { pt3dadd( 412.873, 407.202, 23.3901, 0.5608 ) }
    dend_30 { pt3dadd( 412.658, 408.304, 23.1709, 0.459 ) }
    dend_30 { pt3dadd( 412.344, 409.395, 23.0026, 0.569 ) }
    dend_30 { pt3dadd( 411.777, 410.32, 23.0056, 0.5128 ) }
    dend_30 { pt3dadd( 411.173, 411.273, 23.0368, 0.3518 ) }
    dend_30 { pt3dadd( 410.682, 412.294, 23.0297, 0.4182 ) }
    dend_30 { pt3dadd( 410.279, 413.331, 23.1206, 0.5356 ) }
    dend_30 { pt3dadd( 410.158, 414.447, 23.1709, 0.6248 ) }
    dend_30 { pt3dadd( 409.679, 415.438, 23.2822, 0.5488 ) }
    dend_30 { pt3dadd( 409.074, 416.379, 23.4134, 0.6198 ) }
    dend_30 { pt3dadd( 408.441, 417.291, 23.3848, 0.7158 ) }
    dend_30 { pt3dadd( 407.718, 418.176, 23.3, 0.5344 ) }
    dend_30 { pt3dadd( 407.428, 419.277, 23.128, 0.6004 ) }
    dend_30 { pt3dadd( 407.257, 420.407, 22.9109, 0.5606 ) }
    dend_30 { pt3dadd( 406.909, 421.496, 22.6642, 0.6192 ) }
    dend_30 { pt3dadd( 406.446, 422.525, 22.3653, 0.7128 ) }
    dend_30 { pt3dadd( 406.216, 423.441, 21.8643, 0.5812 ) }
    dend_30 { pt3dadd( 405.808, 424.448, 21.3195, 0.3404 ) }
    dend_30 { pt3dadd( 405.51, 425.52, 20.8002, 0.4238 ) }
    dend_30 { pt3dadd( 405.232, 426.625, 20.4172, 0.462 ) }
    dend_30 { pt3dadd( 404.8, 427.66, 20.198, 0.4738 ) }
    dend_30 { pt3dadd( 404.7, 428.777, 20.1016, 0.4878 ) }
    dend_30 { pt3dadd( 404.928, 429.872, 19.985, 0.4344 ) }
    dend_30 { pt3dadd( 405.309, 430.78, 19.7264, 0.57 ) }
    dend_30 { pt3dadd( 404.795, 431.643, 19.3066, 0.4334 ) }
    dend_30 { pt3dadd( 404.117, 432.49, 19.0037, 0.4684 ) }
    dend_30 { pt3dadd( 403.505, 433.345, 18.825, 0.4948 ) }
    dend_30 { pt3dadd( 403.219, 434.319, 18.5121, 0.514 ) }
    dend_30 { pt3dadd( 403.292, 435.311, 18.0408, 0.4638 ) }
    dend_30 { pt3dadd( 403.686, 436.317, 17.5788, 0.3534 ) }
    dend_30 { pt3dadd( 404.098, 437.378, 17.1929, 0.3856 ) }
    dend_30 { pt3dadd( 404.549, 438.191, 16.6958, 0.3682 ) }
    dend_30 { pt3dadd( 404.894, 439.187, 16.3026, 0.4036 ) }
    dend_30 { pt3dadd( 404.818, 440.123, 16.2673, 0.4542 ) }
    dend_30 { pt3dadd( 404.465, 441.121, 16.414, 0.4678 ) }
    dend_30 { pt3dadd( 404.355, 442.225, 16.449, 0.4438 ) }
    dend_30 { pt3dadd( 404.308, 443.269, 16.5116, 0.3148 ) }
    dend_30 { pt3dadd( 404.181, 444.254, 16.2962, 0.3396 ) }
    dend_30 { pt3dadd( 404.241, 445.341, 15.9188, 0.3572 ) }
    dend_30 { pt3dadd( 404.33, 446.415, 15.4467, 0.4734 ) }
    dend_30 { pt3dadd( 404.659, 447.438, 14.9189, 0.5694 ) }
    dend_30 { pt3dadd( 404.683, 448.544, 14.5028, 0.4392 ) }
    dend_30 { pt3dadd( 404.724, 449.655, 14.1731, 0.3108 ) }
    dend_30 { pt3dadd( 405.16, 450.555, 14.0766, 0.382 ) }
    dend_30 { pt3dadd( 405.313, 451.588, 14.1207, 0.4796 ) }
    dend_30 { pt3dadd( 404.845, 452.469, 14.0366, 0.5708 ) }
    dend_30 { pt3dadd( 404.06, 453.253, 14.0, 0.3814 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 47/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 446.654, 359.428, 22.5517, 0.3814 ) }
    dend_22 { pt3dadd( 446.287, 360.125, 23.0474, 0.3338 ) }
    dend_22 { pt3dadd( 445.644, 360.953, 23.6222, 0.3254 ) }
    dend_22 { pt3dadd( 444.926, 361.784, 24.2104, 0.3886 ) }
    dend_22 { pt3dadd( 444.181, 362.633, 24.7377, 0.5094 ) }
    dend_22 { pt3dadd( 443.362, 363.402, 25.1784, 0.6208 ) }
    dend_22 { pt3dadd( 442.45, 364.072, 25.5088, 0.6452 ) }
    dend_22 { pt3dadd( 441.468, 364.651, 25.6958, 0.5664 ) }
    dend_22 { pt3dadd( 440.425, 365.119, 25.7462, 0.4678 ) }
    dend_22 { pt3dadd( 439.331, 365.44, 25.6818, 0.409 ) }
    dend_22 { pt3dadd( 438.222, 365.392, 25.4861, 0.4076 ) }
    dend_22 { pt3dadd( 437.211, 364.926, 25.1673, 0.4142 ) }
    dend_22 { pt3dadd( 436.224, 364.364, 24.7722, 0.421 ) }
    dend_22 { pt3dadd( 435.187, 363.935, 24.2925, 0.4408 ) }
    dend_22 { pt3dadd( 434.139, 363.524, 23.7472, 0.4776 ) }
    dend_22 { pt3dadd( 433.106, 363.102, 23.1441, 0.5138 ) }
    dend_22 { pt3dadd( 432.208, 362.561, 22.4493, 0.5174 ) }
    dend_22 { pt3dadd( 432.018, 361.954, 21.5701, 0.3332 ) }
    dend_22 { pt3dadd( 431.384, 361.449, 20.6334, 0.2318 ) }
    dend_22 { pt3dadd( 430.766, 360.51, 19.9758, 0.2288 ) }
    dend_22 { pt3dadd( 430.286, 359.477, 19.5656, 0.2288 ) }
    dend_22 { pt3dadd( 430.614, 358.395, 19.3261, 0.2288 ) }
    dend_22 { pt3dadd( 431.485, 357.653, 19.236, 0.2288 ) }
    dend_22 { pt3dadd( 432.261, 356.812, 19.2376, 0.2288 ) }
    dend_22 { pt3dadd( 433.029, 355.966, 19.2881, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 446.654, 359.428, 22.5517, 0.3814 ) }
    dend_21 { pt3dadd( 446.51, 359.384, 19.593, 0.3002 ) }
    dend_21 { pt3dadd( 446.335, 359.469, 17.4504, 0.2494 ) }
    dend_21 { pt3dadd( 445.803, 359.672, 16.4628, 0.2322 ) }
    dend_21 { pt3dadd( 444.787, 359.584, 15.591, 0.2288 ) }
    dend_21 { pt3dadd( 443.689, 359.274, 14.9772, 0.2288 ) }
    dend_21 { pt3dadd( 442.573, 359.035, 14.5983, 0.2288 ) }
    dend_21 { pt3dadd( 441.438, 359.024, 14.4311, 0.2288 ) }
    dend_21 { pt3dadd( 440.354, 359.116, 14.5219, 0.2288 ) }
    dend_21 { pt3dadd( 439.43, 359.446, 14.8002, 0.2288 ) }
    dend_21 { pt3dadd( 438.746, 360.274, 14.9926, 0.2288 ) }
    dend_21 { pt3dadd( 437.882, 360.822, 14.8926, 0.2288 ) }
    dend_21 { pt3dadd( 436.839, 360.996, 14.5738, 0.2288 ) }
    dend_21 { pt3dadd( 436.696, 360.055, 14.142, 0.254 ) }
    dend_21 { pt3dadd( 437.579, 359.445, 12.88, 0.2796 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 449.934, 346.174, 22.1952, 0.305 ) }
    dend_19 { pt3dadd( 449.591, 345.505, 21.7483, 0.3318 ) }
    dend_19 { pt3dadd( 449.042, 344.518, 21.3316, 0.3698 ) }
    dend_19 { pt3dadd( 448.454, 343.548, 20.9607, 0.4078 ) }
    dend_19 { pt3dadd( 447.833, 342.59, 20.6386, 0.4364 ) }
    dend_19 { pt3dadd( 447.176, 341.655, 20.355, 0.4416 ) }
    dend_19 { pt3dadd( 446.5, 340.736, 20.0715, 0.435 ) }
    dend_19 { pt3dadd( 445.817, 339.855, 19.7192, 0.4394 ) }
    dend_19 { pt3dadd( 445.063, 339.067, 19.2819, 0.4642 ) }
    dend_19 { pt3dadd( 444.182, 338.402, 18.8071, 0.5006 ) }
    dend_19 { pt3dadd( 443.259, 337.761, 18.3416, 0.5354 ) }
    dend_19 { pt3dadd( 442.511, 336.932, 17.9227, 0.56 ) }
    dend_19 { pt3dadd( 442.17, 335.87, 17.5808, 0.5756 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_19 { pt3dadd( 442.054, 334.74, 17.3076, 0.589 ) }
    dend_19 { pt3dadd( 441.869, 333.617, 17.1179, 0.596 ) }
    dend_19 { pt3dadd( 441.542, 332.523, 17.0252, 0.5784 ) }
    dend_19 { pt3dadd( 441.026, 331.514, 16.9692, 0.5358 ) }
    dend_19 { pt3dadd( 440.264, 330.681, 16.9233, 0.4912 ) }
    dend_19 { pt3dadd( 439.367, 329.986, 16.9508, 0.4734 ) }
    dend_19 { pt3dadd( 438.435, 329.352, 17.0752, 0.4856 ) }
    dend_19 { pt3dadd( 437.538, 328.671, 17.2627, 0.51 ) }
    dend_19 { pt3dadd( 436.758, 327.848, 17.4388, 0.5102 ) }
    dend_19 { pt3dadd( 435.951, 327.039, 17.5799, 0.4734 ) }
    dend_19 { pt3dadd( 434.988, 326.45, 17.7027, 0.422 ) }
    dend_19 { pt3dadd( 434.086, 325.757, 17.7641, 0.4008 ) }
    dend_19 { pt3dadd( 433.747, 324.723, 17.6905, 0.4308 ) }
    dend_19 { pt3dadd( 433.762, 323.586, 17.5452, 0.4952 ) }
    dend_19 { pt3dadd( 433.498, 322.481, 17.3521, 0.6008 ) }
    dend_19 { pt3dadd( 432.889, 321.527, 17.1008, 0.6522 ) }
    dend_19 { pt3dadd( 432.333, 320.541, 16.7863, 0.6374 ) }
    dend_19 { pt3dadd( 432.015, 319.472, 16.4147, 0.592 ) }
    dend_19 { pt3dadd( 431.717, 318.426, 15.9863, 0.5652 ) }
    dend_19 { pt3dadd( 431.263, 317.446, 15.5272, 0.5596 ) }
    dend_19 { pt3dadd( 430.615, 316.525, 15.1372, 0.5462 ) }
    dend_19 { pt3dadd( 430.029, 315.546, 14.8889, 0.4814 ) }
    dend_19 { pt3dadd( 429.597, 314.585, 14.8572, 0.395 ) }
    dend_19 { pt3dadd( 429.129, 313.713, 15.0266, 0.3146 ) }
    dend_19 { pt3dadd( 428.427, 312.891, 15.243, 0.2676 ) }
    dend_19 { pt3dadd( 427.714, 312.15, 15.1659, 0.2354 ) }
    dend_19 { pt3dadd( 427.753, 311.366, 14.7165, 0.2288 ) }
    dend_19 { pt3dadd( 428.627, 310.906, 13.0396, 0.2542 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 28/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 449.934, 346.174, 22.1952, 0.305 ) }
    dend_18 { pt3dadd( 450.22, 345.727, 19.6819, 0.381 ) }
    dend_18 { pt3dadd( 450.581, 344.922, 18.1863, 0.4448 ) }
    dend_18 { pt3dadd( 451.037, 343.976, 17.5491, 0.4588 ) }
    dend_18 { pt3dadd( 451.725, 343.112, 16.9162, 0.423 ) }
    dend_18 { pt3dadd( 452.581, 342.372, 16.3612, 0.3592 ) }
    dend_18 { pt3dadd( 453.147, 341.414, 15.8711, 0.322 ) }
    dend_18 { pt3dadd( 452.826, 340.359, 15.4741, 0.3954 ) }
    dend_18 { pt3dadd( 452.413, 339.294, 15.2536, 0.4926 ) }
    dend_18 { pt3dadd( 452.367, 338.155, 15.1293, 0.5296 ) }
    dend_18 { pt3dadd( 452.435, 337.012, 15.0418, 0.4866 ) }
    dend_18 { pt3dadd( 452.756, 335.917, 14.978, 0.4266 ) }
    dend_18 { pt3dadd( 452.809, 334.875, 15.0506, 0.3694 ) }
    dend_18 { pt3dadd( 453.016, 333.753, 15.0388, 0.3126 ) }
    dend_18 { pt3dadd( 453.192, 332.894, 14.6582, 0.305 ) }
    dend_18 { pt3dadd( 453.532, 332.021, 14.0415, 0.329 ) }
    dend_18 { pt3dadd( 453.994, 330.979, 13.476, 0.3796 ) }
    dend_18 { pt3dadd( 454.023, 329.836, 13.0, 0.3322 ) }
    dend_18 { pt3dadd( 453.815, 328.712, 12.5955, 0.3054 ) }
    dend_18 { pt3dadd( 453.137, 327.87, 11.76, 0.2796 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 403.482, 367.47, 57.6873, 0.3304 ) }
    dend_6 { pt3dadd( 403.647, 367.257, 57.9396, 0.3244 ) }
    dend_6 { pt3dadd( 404.329, 366.375, 58.2151, 0.2994 ) }
    dend_6 { pt3dadd( 404.937, 365.422, 58.4606, 0.279 ) }
    dend_6 { pt3dadd( 405.418, 364.386, 58.6575, 0.2664 ) }
    dend_6 { pt3dadd( 405.866, 363.333, 58.8115, 0.2554 ) }
    dend_6 { pt3dadd( 406.31, 362.279, 58.9263, 0.2436 ) }
    dend_6 { pt3dadd( 406.754, 361.225, 59.0094, 0.2322 ) }
    dend_6 { pt3dadd( 406.964, 360.102, 59.0716, 0.2292 ) }
    dend_6 { pt3dadd( 407.089, 358.964, 59.1371, 0.2288 ) }
    dend_6 { pt3dadd( 407.498, 357.897, 59.2136, 0.2288 ) }
    dend_6 { pt3dadd( 408.425, 357.24, 59.3258, 0.2288 ) }
    dend_6 { pt3dadd( 409.129, 356.421, 59.5672, 0.2288 ) }
    dend_6 { pt3dadd( 410.153, 355.916, 59.7685, 0.2288 ) }
    dend_6 { pt3dadd( 411.056, 355.214, 60.0793, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 403.482, 367.47, 57.6873, 0.3304 ) }
    dend_5 { pt3dadd( 402.701, 366.691, 57.6892, 0.2822 ) }
    dend_5 { pt3dadd( 402.033, 365.763, 57.864, 0.2362 ) }
    dend_5 { pt3dadd( 402.158, 364.642, 57.9356, 0.229 ) }
    dend_5 { pt3dadd( 401.862, 363.538, 58.0188, 0.2288 ) }
    dend_5 { pt3dadd( 401.461, 362.467, 58.1101, 0.2288 ) }
    dend_5 { pt3dadd( 400.748, 361.648, 58.3299, 0.2288 ) }
    dend_5 { pt3dadd( 400.298, 360.604, 58.5522, 0.2288 ) }
    dend_5 { pt3dadd( 399.988, 359.502, 58.9165, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_49, dend_44, dend_41, dend_36, dend_35, dend_26, dend_11, dend_0, dend_51, dend_50, dend_48, dend_45, dend_43, dend_42, dend_40, dend_37, dend_34, dend_27, dend_15, dend_12, dend_8, dend_1, dend_53, dend_52, dend_47, dend_46, dend_39, dend_38, dend_33, dend_28, dend_23, dend_16, dend_14, dend_13, dend_10, dend_9, dend_7, dend_2, dend_32, dend_29, dend_25, dend_24, dend_20, dend_17, dend_4, dend_3, dend_31, dend_30, dend_22, dend_21, dend_19, dend_18, dend_6, dend_5]}
    dend = new SectionList()
    dend_49 dend.append()
    dend_44 dend.append()
    dend_41 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_26 dend.append()
    dend_11 dend.append()
    dend_0 dend.append()
    dend_51 dend.append()
    dend_50 dend.append()
    dend_48 dend.append()
    dend_45 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_40 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_27 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_53 dend.append()
    dend_52 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_12649, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_12649 = new SectionList()
    soma_0 OneSecGrp_SectionRef_12649.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.5279788  // units: uF/cm2
    forsec axon cm = 1.5279788  // units: uF/cm2
    forsec dend cm = 1.5279788  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 85.18745  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 0.003153942  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.037263636  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 3.278427E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.06921077  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.1819464  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.049117353  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.001189832  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.060787E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.1410919E-4  // units: S cm-2
        e_pas_nml2 = -79.57963  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.384058E-4  // units: S cm-2
        e_pas_nml2 = -79.57963  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.2192376E-7  // units: S cm-2
        e_pas_nml2 = -79.57963  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.945268E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 6.66963E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513411
    forsec soma {
        insert CaDynamics_478513411
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_41 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_48 nseg = 5
    dend_43 nseg = 9
    dend_42 nseg = 3
    dend_40 nseg = 3
    dend_34 nseg = 5
    dend_47 nseg = 3
    dend_39 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 9
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_7 nseg = 5
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_3 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513411


