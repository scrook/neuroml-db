// Cell: dNAC222_L4_BTC_5612242ada_0_0
/*
{
  "id" : "dNAC222_L4_BTC_5612242ada_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.10901, 8.17427, -3.38986, 2.59058", "-1.02513, 7.19062, -3.06257, 4.73751", "-0.941247, 6.20697, -2.73528, 6.32924", "-0.857366, 5.22332, -2.408, 7.36132", "-0.773484, 4.23967, -2.08071, 9.22299", "-0.689602, 3.25602, -1.75342, 10.2547", "-0.605721, 2.27237, -1.42613, 10.8399", "-0.521839, 1.28871, -1.09885, 11.0364", "-0.437957, 0.305064, -0.771561, 11.233", "-0.354076, -0.678586, -0.444273, 11.4012", "-0.270194, -1.66224, -0.116986, 10.7587", "-0.186312, -2.64589, 0.210301, 10.0838", "-0.102431, -3.62954, 0.537588, 9.4089", "-0.018549, -4.61319, 0.864875, 8.86981", "0.0653327, -5.59684, 1.19216, 8.72262", "0.149214, -6.58049, 1.51945, 8.42438", "0.233096, -7.56414, 1.84674, 7.90042", "0.316978, -8.54779, 2.17402, 7.02226", "0.400859, -9.53144, 2.50131, 6.10711", "0.484741, -10.5151, 2.8286, 5.19196", "0.568623, -11.4987, 3.15589, 3.05014" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.40148, -1.66302, -9.60359, 0.67", "-7.39988, -1.99532, -12.6163, 0.67", "-10.4639, -2.19868, -15.4011, 0.67", "-10.4639, -2.19868, -15.4011, 0.67", "-12.0669, -2.28281, -16.4443, 1.33", "-18.8083, -2.29992, -20.999, 0.33", "-19.8341, -2.33195, -21.8664, 0.33", "-21.9137, -2.41318, -24.0491, 1.33", "-24.0024, -2.607, -26.6143, 0.33", "-24.6855, -2.71458, -27.5079, 1.33", "-29.2148, -3.74757, -34.0904, 0.67", "-34.4857, -5.35969, -42.4362, 0.33", "-36.6765, -6.0909, -46.1826, 0.67", "-39.7722, -7.23528, -51.7293, 0.33", "-40.4018, -7.48406, -52.8847, 0.67", "-43.261, -8.68414, -57.9548, 0.33", "-44.571, -9.25684, -60.1074, 1.33", "-47.2025, -10.222, -63.8811, 0.33", "-48.6319, -10.6945, -65.8654, 1.33", "-53.3808, -12.2147, -72.1679, 0.33", "-53.8888, -12.3749, -72.8154, 0.67", "-56.5014, -13.2168, -75.8572, 0.33", "-57.0221, -13.3923, -76.5048, 1.33", "-61.056, -14.9589, -82.0204, 0.33", "-62.2525, -15.4566, -83.784, 0.67", "-63.2781, -15.8458, -85.3184, 0.33", "-64.0814, -16.1133, -86.5352, 1.33", "-67.6699, -17.0648, -91.9015, 0.33", "-68.0516, -17.1545, -92.4728, 0.33", "-69.4109, -17.4649, -94.5708, 1.33", "-72.5934, -18.2644, -99.8782, 0.33", "-73.1109, -18.4486, -100.864, 1.33", "-76.0168, -19.7835, -106.786, 0.33", "-76.3606, -19.981, -107.512, 0.67", "-79.006, -21.7897, -113.499, 0.33", "-79.5886, -22.2752, -114.949, 1.33", "-81.8884, -24.5476, -121.463, 0.33", "-82.1141, -24.7879, -122.13, 1.33", "-83.3952, -26.2224, -126.166, 0.33", "-83.8886, -26.711, -127.632, 0.67", "-86.0947, -28.7985, -134.038, 0.33", "-87.8191, -30.2506, -138.8, 0.67", "-88.5311, -30.7473, -140.636, 0.33", "-89.8819, -31.6631, -144.211, 0.67", "-91.9514, -33.0991, -149.964, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.84148, 4.10348, -11.1036, 0.67", "-3.11642, 4.75387, -12.1736, 0.67", "-3.66497, 6.37922, -14.197, 0.67", "-4.58266, 8.69157, -17.0703, 0.67", "-5.29366, 10.4831, -19.2965, 0.67", "-5.59556, 11.2438, -20.2418, 0.67", "-5.98359, 12.2216, -21.4567, 0.67", "-6.89259, 15.2012, -24.9961, 0.67", "-7.54681, 18.0467, -28.0491, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.21148, 5.32898, -10.3036, 0.67", "-0.436264, 8.15625, -12.2964, 0.67", "0.125625, 9.08394, -12.9308, 0.67", "1.07391, 10.6495, -14.0013, 1.33", "4.53076, 16.3569, -17.904, 0.67", "6.16454, 19.0542, -19.7485, 0.67", "7.0377, 20.4958, -20.7342, 0.67", "8.08686, 22.3683, -22.2085, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "4.30852, 5.51898, 7.4864, 2.0", "4.69551, 5.7972, 7.69558, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.571479, -11.0775, 6.4864, 4.0", "-0.639207, -13.4983, 6.4864, 4.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.568623, -11.4987, 3.15589, 0.469314", "1.84314, -26.4445, 3.15589, 0.469314", "3.11765, -41.3902, 3.15589, 0.469314" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.54681, 18.0467, -28.0491, 0.33", "-6.97214, 20.9236, -36.1565, 0.33", "-6.92607, 21.1928, -36.8281, 1.33", "-6.61403, 23.0114, -41.0383, 0.33", "-6.58044, 23.336, -41.6952, 1.33", "-6.4635, 25.1749, -45.0846, 0.33", "-6.46152, 25.4017, -45.4709, 0.67", "-6.66096, 27.1161, -47.8309, 0.33", "-6.7081, 27.3803, -48.1864, 1.33", "-7.02612, 28.9445, -50.155, 0.33", "-7.35424, 30.5779, -52.1956, 1.33", "-7.83277, 32.8508, -54.9608, 0.33", "-8.22676, 34.7451, -57.3165, 1.33", "-8.69725, 36.9875, -60.1052, 0.33", "-8.7729, 37.3862, -60.5862, 1.33", "-8.97617, 38.769, -62.2042, 0.33", "-9.06872, 39.4096, -62.9021, 0.67", "-9.43716, 42.8591, -66.7506, 0.33", "-9.47574, 43.337, -67.2657, 1.33", "-9.54605, 44.6026, -68.6766, 0.33", "-9.56223, 44.8905, -69.0145, 1.33", "-9.71899, 47.9687, -73.1128, 0.33", "-9.81893, 49.721, -75.6201, 1.33", "-9.89047, 50.9367, -77.461, 0.33", "-9.97161, 51.9376, -79.1456, 0.67", "-10.1574, 53.6577, -82.2203, 0.33", "-10.5585, 56.1979, -86.5732, 0.67", "-10.9437, 58.1509, -89.7626, 0.33", "-11.2697, 59.1079, -91.3125, 0.67", "-13.24, 63.2425, -98.1383, 0.33", "-13.3745, 63.4551, -98.4916, 0.67", "-14.7674, 65.1698, -101.307, 0.33", "-15.0903, 65.5135, -101.875, 0.67", "-17.4009, 67.8715, -106.164, 0.33", "-17.8096, 68.3902, -107.093, 0.67", "-18.8995, 70.121, -110.249, 0.33", "-19.0157, 70.4738, -110.881, 0.67", "-18.9681, 72.9025, -115.39, 0.33", "-18.5869, 74.5868, -118.047, 0.67", "-17.435, 77.3051, -121.662, 0.33", "-17.3455, 77.4881, -121.893, 0.67", "-15.856, 80.2016, -124.914, 0.33", "-14.1419, 83.123, -127.952, 1.33", "-11.4681, 87.5088, -131.42, 0.33", "-11.3267, 87.7473, -131.569, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.54681, 18.0467, -28.0491, 0.33", "-11.2369, 17.0729, -32.3055, 0.33", "-12.7455, 16.8251, -33.6846, 1.33", "-18.196, 16.1583, -38.0773, 0.33", "-19.4984, 16.0648, -39.1559, 0.67", "-23.2548, 15.9383, -42.2703, 0.33", "-26.947, 15.9358, -45.37, 1.33", "-33.6854, 16.3748, -50.5265, 0.33", "-34.9307, 16.5455, -51.5187, 1.33", "-39.5974, 17.55, -55.1023, 0.33", "-40.4337, 17.7879, -55.8095, 0.67", "-43.7027, 18.9398, -58.7555, 0.33", "-44.8774, 19.392, -59.8127, 0.67", "-48.5265, 20.9046, -62.8479, 0.33", "-49.7462, 21.4322, -63.8469, 1.33", "-54.4199, 23.4982, -67.477, 0.33", "-56.1428, 24.3184, -68.8622, 1.33", "-63.6159, 28.1825, -74.9118, 0.33", "-65.2297, 29.0619, -76.281, 1.33", "-69.0244, 31.2328, -79.5088, 0.33", "-69.4038, 31.4813, -79.8526, 0.67", "-73.0063, 34.1304, -83.2067, 0.33", "-73.7039, 34.6891, -83.8781, 0.67", "-76.4078, 37.0785, -86.4418, 0.33", "-77.1538, 37.7134, -87.0866, 2.0", "-85.6069, 44.6106, -93.9563, 0.33", "-86.199, 45.064, -94.4183, 0.67", "-88.6568, 46.8475, -96.1936, 0.33", "-89.2897, 47.2834, -96.627, 0.67", "-91.0882, 48.4818, -97.9489, 0.33", "-92.9733, 49.7278, -99.349, 0.67", "-98.1335, 53.0497, -103.111, 0.33", "-99.5504, 53.9986, -104.146, 0.67", "-105.03, 57.8493, -108.205, 0.33", "-109.562, 61.2742, -111.726, 1.33", "-112.229, 63.4345, -113.845, 0.33", "-112.734, 63.8692, -114.266, 0.67", "-114.302, 65.2092, -115.737, 0.33", "-114.378, 65.2709, -115.805, 0.67", "-118.391, 67.7238, -118.905, 0.33", "-119.394, 68.1572, -119.535, 1.33", "-123.37, 69.452, -122.756, 0.33", "-125.441, 70.0426, -124.461, 0.33", "-129.929, 71.0211, -128.17, 0.67", "-136.211, 72.078, -133.162, 0.33", "-137.186, 72.1406, -133.863, 0.67", "-143.405, 72.3895, -138.542, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "8.08686, 22.3683, -22.2085, 0.33", "10.7357, 24.4603, -23.0004, 0.33", "11.9871, 25.5003, -23.3578, 0.67", "13.6842, 26.9583, -23.835, 0.33", "13.9178, 27.157, -23.9339, 0.67", "15.5236, 28.5632, -24.6693, 0.33", "16.9691, 29.7701, -25.2162, 1.33", "19.6784, 31.9991, -25.958, 0.33", "19.9232, 32.1963, -26.035, 0.67", "24.94, 36.3186, -27.616, 0.33", "26.1865, 37.3686, -27.9955, 2.0", "30.7201, 41.2658, -29.3205, 0.33", "32.9037, 43.1816, -29.9653, 2.0", "39.3793, 49.0535, -31.9754, 0.33", "40.7248, 50.3057, -32.4473, 1.33", "42.7767, 52.2823, -33.236, 0.33", "43.3778, 52.8461, -33.5432, 0.67", "46.0771, 55.3688, -35.3468, 0.33", "47.1501, 56.2399, -36.1807, 0.67", "50.2288, 58.3352, -38.6868, 0.33", "51.0685, 58.8109, -39.3502, 1.33", "54.2864, 60.3538, -41.7515, 0.33", "55.1841, 60.7059, -42.375, 1.33", "59.3444, 62.008, -44.9721, 0.33", "59.6076, 62.0753, -45.1162, 0.67", "62.6723, 62.7385, -46.5711, 0.33", "64.2279, 63.0379, -47.2202, 1.33", "67.768, 63.6453, -48.394, 0.33", "68.6087, 63.7739, -48.696, 0.67", "72.3001, 64.3212, -50.0108, 0.33", "73.9778, 64.5663, -50.7412, 1.33", "76.8748, 65.0011, -52.1822, 0.33", "78.1641, 65.2264, -52.9106, 1.33", "84.0457, 66.3743, -56.4464, 0.33", "84.8095, 66.5253, -56.9022, 1.33", "89.0459, 67.3698, -59.4446, 0.33", "90.0224, 67.5559, -60.0022, 0.67", "94.9401, 68.4309, -62.9075, 0.33", "95.7911, 68.5555, -63.4001, 1.33", "100.754, 69.0501, -65.9238, 0.33", "101.559, 69.1039, -66.2975, 0.67", "103.054, 69.1619, -66.8902, 0.33", "106.034, 69.2163, -67.869, 0.67", "108.051, 69.2441, -68.3362, 0.33", "108.663, 69.2682, -68.4796, 0.67", "111.941, 69.4784, -69.069, 0.33", "112.254, 69.5173, -69.1389, 0.67", "116.274, 70.2191, -70.1455, 0.33", "117.232, 70.4157, -70.3679, 0.67", "118.669, 70.7644, -70.8008, 0.33", "121.212, 71.3342, -71.6867, 0.67", "127.17, 72.608, -74.0625, 0.33", "128.177, 72.804, -74.5242, 0.67", "130.428, 73.2442, -75.6761, 0.33", "132.014, 73.5317, -76.5521, 1.33", "135.325, 74.0755, -78.4245, 0.33", "135.711, 74.1354, -78.6593, 0.67", "140.326, 74.6919, -81.2252, 0.33", "141.104, 74.7495, -81.6786, 1.33", "143.98, 74.8731, -83.4802, 0.33", "144.506, 74.8461, -83.8233, 0.67", "146.767, 74.5143, -85.4064, 0.33", "147.748, 74.1957, -85.9283, 0.67", "150.5, 72.7712, -86.851, 0.33", "150.5, 72.7712, -86.851, 1.33", "153.728, 70.3808, -86.9983, 0.33", "154.403, 69.8689, -86.9758, 1.33", "158.99, 66.3652, -86.4258, 0.33", "159.234, 66.188, -86.3866, 0.67", "161.672, 64.6824, -85.9078, 0.33", "162.06, 64.4792, -85.8321, 0.67", "165.003, 63.3881, -85.2643, 0.33", "167.076, 62.8509, -84.9851, 0.33", "167.702, 62.7687, -85.0003, 0.67", "172.474, 62.4616, -85.4237, 0.33", "172.798, 62.4986, -85.4588, 0.67", "176.321, 63.3408, -85.8843, 0.33", "177.127, 63.6872, -85.993, 0.67", "181.771, 66.3903, -86.6734, 0.33", "182.562, 66.9264, -86.8018, 1.33", "187.632, 71.2623, -87.7577, 0.33", "188.345, 71.9351, -87.8842, 1.33", "190.285, 74.1368, -88.162, 0.33", "190.511, 74.4176, -88.1619, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.08686, 22.3683, -22.2085, 0.33", "9.98288, 25.6531, -27.9789, 0.33", "10.2931, 26.2117, -28.8977, 0.67", "11.2949, 28.552, -32.7126, 0.33", "11.7512, 29.8761, -34.7915, 0.33", "11.8332, 30.3334, -35.5057, 0.67", "11.953, 31.9511, -37.941, 0.33", "11.8626, 32.6954, -38.876, 0.67", "11.4833, 34.2684, -40.9222, 0.33", "11.3152, 34.7425, -41.5644, 1.33", "10.3302, 37.0847, -44.9224, 0.33", "10.1216, 37.6393, -45.7965, 1.33", "9.37528, 39.9685, -49.6435, 0.33", "9.02363, 41.3302, -51.919, 2.0", "8.62414, 43.5198, -55.6307, 0.33", "8.57996, 43.8133, -56.1505, 0.67", "8.37418, 46.8299, -61.7044, 0.33", "8.34181, 47.6725, -63.3847, 2.0" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.69551, 5.7972, 7.69558, 0.67", "6.42897, 7.42306, 7.55239, 0.67", "7.27962, 8.22091, 7.48212, 0.33", "9.21281, 10.0341, 7.32242, 1.33", "13.1349, 13.7128, 6.99844, 0.67", "17.1665, 17.4941, 6.6654, 0.67", "18.4114, 18.6617, 6.56257, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "4.69551, 5.7972, 7.69558, 0.67", "4.72719, 8.50518, 9.68641, 0.67", "4.75678, 11.0351, 11.5463, 0.67", "4.78544, 13.485, 13.3474, 0.67", "4.84406, 18.4954, 17.0309, 0.67", "4.87298, 20.9675, 18.8483, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.639207, -13.4983, 6.4864, 3.33", "0.472026, -16.0921, 5.95888, 3.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.639207, -13.4983, 6.4864, 1.33", "-3.34931, -17.7834, 6.83057, 1.33", "-4.93505, -20.2907, 7.03196, 1.33", "-5.35055, -20.9477, 7.08472, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.11765, -41.3902, 3.15589, 0.518467", "4.39217, -56.336, 3.15589, 0.518467", "5.66668, -71.2817, 3.15589, 0.518467" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.34181, 47.6725, -63.3847, 0.33", "8.60009, 49.953, -63.9192, 0.33", "8.78284, 50.5732, -64.1387, 0.67", "9.65084, 53.0243, -65.0712, 0.33", "9.9251, 53.6288, -65.2608, 0.67", "11.2894, 56.4396, -66.0735, 0.33", "11.4226, 56.6973, -66.1396, 0.67", "13.9641, 61.1777, -67.3517, 0.33", "14.3374, 61.714, -67.5658, 1.33", "17.0232, 65.0806, -69.1885, 0.33", "17.2028, 65.2904, -69.3087, 0.67", "18.5197, 66.7794, -70.2226, 0.33", "19.2463, 67.6191, -70.7722, 0.67", "23.479, 72.7153, -74.3846, 0.33", "24.0144, 73.3569, -74.9021, 0.67", "26.7934, 76.6624, -78.0197, 0.33", "27.4619, 77.4027, -78.7649, 1.33", "28.1761, 78.1357, -79.5906, 0.33", "28.5492, 78.4607, -80.0292, 0.67", "31.4174, 80.6824, -83.3057, 0.33", "32.8038, 81.5968, -84.8308, 0.67", "36.4889, 83.7946, -88.7729, 0.33", "38.0691, 84.644, -90.408, 1.33", "43.0236, 87.1056, -95.4131, 0.33", "44.8004, 87.9338, -97.1557, 1.33", "50.2638, 90.3097, -102.223, 0.33", "50.9618, 90.5927, -102.868, 0.67", "52.5823, 91.1911, -104.499, 0.33", "53.677, 91.5182, -105.706, 0.67", "55.7396, 92.0241, -108.04, 0.33", "56.3383, 92.1441, -108.772, 0.67", "59.2017, 92.4843, -112.731, 0.33", "61.1301, 92.6613, -115.544, 0.67", "63.8016, 92.9229, -119.823, 0.33", "66.627, 93.0038, -124.677, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "8.34181, 47.6725, -63.3847, 0.33", "6.2295, 48.8694, -66.8087, 0.33", "5.65862, 49.2248, -67.8081, 0.67", "3.81699, 50.6181, -72.0454, 0.33", "3.32473, 51.1354, -73.4432, 0.67", "1.73098, 53.0265, -78.3423, 0.33", "1.35287, 53.5227, -79.558, 0.67", "0.322362, 55.1593, -83.531, 0.33", "-0.865867, 57.4476, -88.578, 1.33", "-1.87848, 59.7939, -93.2059, 0.33", "-1.93523, 59.9559, -93.528, 1.33", "-2.67066, 62.2042, -97.7705, 0.33", "-2.79709, 62.6091, -98.499, 1.33", "-3.07285, 63.5993, -100.262, 0.33", "-3.12801, 63.8121, -100.587, 0.67", "-4.32762, 68.9917, -108.084, 0.33", "-4.50702, 69.8974, -109.378, 0.67", "-4.7462, 71.2773, -111.331, 0.33", "-5.39143, 74.6698, -116.057, 1.33", "-6.332, 79.3842, -122.58, 0.33", "-6.41001, 79.8799, -123.251, 0.67", "-6.84696, 83.8191, -128.257, 0.33", "-6.84696, 83.8191, -128.257, 0.67", "-7.12504, 87.7705, -133.629, 0.33", "-7.24229, 88.9094, -135.122, 1.33", "-7.62235, 92.2376, -139.657, 0.33", "-7.69884, 92.7524, -140.309, 0.67", "-8.43595, 96.6653, -144.723, 0.33", "-8.60618, 97.376, -145.48, 0.67", "-9.61911, 100.73, -148.807, 0.33", "-9.89333, 101.474, -149.501, 1.33", "-10.7143, 103.26, -151.033, 0.33", "-11.012, 103.856, -151.543, 0.67", "-13.0207, 107.501, -154.458, 0.33", "-13.8919, 109.134, -155.762, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "18.4114, 18.6617, 6.56257, 0.67", "30.0047, 20.8463, 4.12747, 0.67", "34.3478, 21.9749, 2.92031, 0.67", "39.5584, 23.7451, 1.36522, 0.67", "44.2543, 25.587, -0.0360372, 0.67", "46.4128, 26.493, -0.674047, 0.67", "50.6435, 28.2985, -1.89366, 0.67", "57.75, 31.8224, -3.48452, 0.67", "62.1827, 34.2591, -4.42594, 0.67", "65.4761, 36.2779, -4.94216, 0.33", "66.3134, 36.7911, -5.01599, 0.67", "68.2485, 37.9486, -5.10383, 0.33", "73.5217, 40.9396, -4.99923, 0.67", "75.7173, 42.2552, -4.82668, 0.33", "76.9386, 42.9865, -4.81841, 0.67", "79.373, 44.5124, -5.05533, 0.33", "79.373, 44.5124, -5.05533, 0.67", "83.0358, 46.8771, -6.01304, 0.33", "87.6244, 49.6836, -7.16896, 1.33", "95.241, 54.1105, -8.82681, 0.33", "98.3552, 55.6946, -9.47009, 0.67", "104.801, 58.608, -10.7217, 0.33", "108.911, 60.1745, -11.5711, 1.33", "115.931, 62.2513, -13.0349, 0.33", "116.554, 62.3644, -13.162, 0.67", "125.282, 63.0332, -15.2828, 0.33", "127.045, 63.0224, -15.7034, 1.33", "132.229, 62.588, -17.097, 0.33", "134.026, 62.3812, -17.5878, 0.67", "139.274, 61.7664, -19.2866, 0.33", "140.244, 61.6789, -19.5962, 0.67", "144.197, 61.4998, -20.7461, 0.33", "146.154, 61.5211, -21.265, 0.67", "149.302, 61.7727, -21.9701, 0.33", "151.538, 62.0632, -22.386, 1.33", "157.35, 63.0432, -23.2581, 0.33", "159.365, 63.3514, -23.5104, 2.0", "164.333, 64.0852, -24.0297, 0.33", "166.597, 64.3135, -24.1999, 0.67", "172.884, 64.6492, -24.4789, 0.33", "175.217, 64.5965, -24.5004, 0.67", "179.328, 64.2586, -24.3689, 0.33", "180.357, 64.1168, -24.3483, 1.33", "186.318, 62.9219, -24.3017, 0.33", "188.277, 62.4223, -24.3112, 1.33", "193.798, 60.7984, -24.4167, 0.33", "195.974, 60.1491, -24.4553, 1.33", "202.983, 58.1255, -24.5698, 0.33", "205.483, 57.5464, -24.6534, 1.33", "213.262, 56.2894, -25.0021, 0.33", "215.125, 56.1094, -25.1013, 0.67", "217.902, 56.0106, -25.2705, 0.33", "219.182, 56.0108, -25.3545, 0.67", "229.977, 56.5143, -26.7726, 0.33", "232.225, 56.6849, -27.1847, 1.33", "237.1, 57.1541, -28.4741, 0.33", "239.276, 57.3121, -29.2231, 0.67", "243.946, 57.5083, -31.1478, 0.33", "250.051, 57.467, -33.9994, 1.33", "253.721, 57.2571, -35.8736, 0.33", "256.643, 57.0566, -37.3614, 1.33", "262.689, 56.8413, -40.1981, 0.33", "263.538, 56.8435, -40.5395, 0.67", "266.707, 56.9707, -41.502, 1.33", "271.788, 57.3704, -42.2201, 0.33", "273.224, 57.5317, -42.2942, 0.67", "279.951, 58.4929, -41.8382, 0.33", "281.55, 58.7835, -41.6034, 0.67", "284.63, 59.4437, -41.0717, 0.33", "288.559, 60.4918, -40.1356, 1.33", "292.76, 61.7671, -38.8777, 0.33", "295.402, 62.7034, -37.7802, 1.33", "299.593, 64.6343, -35.3719, 0.33", "300.921, 65.5173, -34.3539, 1.33", "303.536, 67.926, -31.879, 0.33", "303.987, 68.4814, -31.3336, 0.67", "305.994, 71.6719, -28.2626, 0.33", "306.43, 72.5499, -27.3859, 1.33", "308.462, 78.0247, -21.4387, 0.33", "308.89, 79.2315, -20.1002, 0.67", "309.829, 82.1066, -16.9517, 0.33", "310.05, 82.7666, -16.2175, 0.67", "311.051, 85.7064, -12.9892, 0.33", "311.539, 87.4222, -10.8867, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "18.4114, 18.6617, 6.56257, 0.33", "19.5881, 20.7724, 7.49987, 0.33", "21.8725, 24.0937, 9.20135, 0.67", "24.3587, 27.8034, 11.0958, 0.67", "25.4456, 29.4183, 11.8962, 0.67", "28.2448, 33.4245, 13.8923, 0.67", "31.0158, 37.2319, 15.7137, 0.67", "34.8569, 41.9897, 18.091, 0.67", "36.7127, 44.1519, 19.202, 0.67", "38.769, 46.7183, 20.4932, 0.67", "39.9478, 48.2375, 21.3161, 0.67", "42.3618, 51.2687, 22.8566, 0.67", "45.2912, 54.6991, 24.3977, 0.67", "47.6601, 57.5836, 25.5908, 0.67", "51.0496, 61.7406, 27.2088, 0.67", "52.4884, 63.7374, 27.9359, 0.67", "55.2463, 67.7784, 29.4972, 0.67", "56.258, 69.2233, 30.0857, 0.67", "59.0987, 72.957, 31.8069, 0.67", "60.3884, 74.4625, 32.7135, 0.67", "63.2188, 77.3035, 35.0578, 0.67", "66.1583, 80.0227, 37.7181, 0.67", "68.6848, 82.3879, 40.3867, 0.67", "71.7515, 84.9595, 43.6894, 0.67", "74.4708, 86.6972, 46.5374, 0.67", "76.1504, 87.5535, 48.2654, 0.33", "78.2688, 88.3193, 50.3708, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.87298, 20.9675, 18.8483, 0.67", "5.39277, 25.1164, 20.5421, 0.67", "5.95195, 29.0877, 22.5897, 0.67", "6.41577, 31.0443, 23.7219, 0.67", "6.8345, 32.6041, 24.6149, 0.67", "7.7808, 35.7967, 26.5265, 0.67", "8.86095, 39.1859, 28.5718, 0.67", "9.93562, 42.5751, 30.6993, 0.67", "11.0082, 45.7145, 32.5597, 0.67", "12.3903, 49.8012, 35.0362, 0.67", "12.9496, 51.6493, 36.2372, 0.33", "13.2712, 52.6569, 36.9435, 0.67", "13.6683, 53.8868, 37.722, 0.33", "14.4464, 56.4013, 39.1769, 0.67", "14.9086, 57.8516, 40.0064, 1.33", "15.9177, 60.6882, 41.5939, 0.67", "17.9768, 66.219, 44.4896, 0.67", "19.6125, 70.538, 46.6482, 0.67", "20.9834, 74.0325, 48.2437, 0.67", "21.6482, 75.669, 48.8828, 0.67", "22.2517, 77.1689, 49.3788, 0.67", "22.7377, 78.4572, 49.7254, 1.33", "23.4491, 80.7191, 50.2376, 0.33", "24.1693, 83.073, 50.7551, 1.33", "24.4972, 84.7846, 51.0364, 0.33", "24.7618, 86.9911, 51.3872, 1.33", "25.0071, 90.9252, 51.9681, 0.67", "25.0554, 92.6892, 52.2459, 0.33", "25.0604, 93.56, 52.3843, 0.33", "25.0002, 98.8934, 53.2458, 0.67", "24.9646, 100.499, 53.4935, 0.33", "24.9106, 102.827, 53.9379, 0.67", "24.9216, 104.991, 54.3959, 0.67", "25.0335, 106.886, 54.8813, 0.67", "25.2069, 108.077, 55.2533, 0.67", "25.5685, 109.07, 55.6973, 0.67", "26.8656, 111.812, 57.1455, 0.33", "27.4123, 112.721, 57.7292, 0.33", "28.0471, 113.713, 58.4197, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.87298, 20.9675, 18.8483, 0.67", "4.12819, 23.2112, 20.1066, 0.67", "3.35368, 25.7476, 22.0965, 0.67", "2.63553, 28.2137, 24.4148, 0.67", "2.24973, 29.7328, 25.9244, 0.67", "2.01666, 31.8825, 27.9864, 0.67", "2.00155, 34.1083, 30.204, 0.67", "2.10951, 37.4349, 33.6918, 0.67", "2.15992, 39.3736, 35.8662, 0.67", "2.26002, 41.0702, 37.7841, 0.67", "2.56539, 44.3075, 41.2599, 0.67", "2.76782, 46.6484, 43.7452, 0.67", "2.79436, 48.5338, 45.6588, 0.67", "2.72406, 50.0336, 46.9783, 0.67", "2.39033, 54.6104, 50.516, 0.67", "2.03727, 58.2402, 52.9156, 0.67", "1.58305, 61.0807, 54.7213, 0.67", "1.29526, 63.176, 55.8988, 0.67", "1.00539, 67.3909, 58.1545, 0.33", "0.941147, 68.5162, 58.6834, 0.67", "0.76386, 71.256, 59.0255, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.472026, -16.0921, 5.95888, 1.33", "0.828233, -18.7235, 7.68628, 1.33", "1.23804, -21.7508, 9.6736, 1.33", "1.72149, -25.3221, 12.018, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.472026, -16.0921, 5.95888, 0.67", "0.656097, -18.0249, 3.71417, 0.67", "1.2708, -21.1277, 0.478212, 0.67", "1.98929, -24.0665, -2.62797, 0.67", "3.4232, -29.9316, -8.8271, 0.67", "4.12257, -32.7921, -11.8506, 0.67", "4.72895, -35.2724, -14.4722, 0.67", "5.56352, -39.4758, -18.9343, 0.67", "6.12055, -41.7085, -21.2652, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.35055, -20.9477, 7.08472, 0.67", "-6.72783, -27.1508, 8.50793, 0.67", "-7.14629, -29.0355, 8.94034, 0.67", "-8.00212, -32.89, 9.82471, 1.33", "-9.36218, -39.0156, 11.2301, 0.67", "-9.65627, -40.3402, 11.534, 0.67", "-10.2466, -42.9992, 12.1441, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.35055, -20.9477, 7.08472, 0.67", "-5.89017, -21.2609, 8.59039, 0.67", "-6.89333, -21.7193, 11.5334, 0.67", "-7.50883, -21.9272, 13.311, 0.67", "-10.2578, -22.6629, 20.8421, 0.67", "-11.7117, -23.057, 24.5073, 0.67", "-12.9018, -23.3754, 27.4145, 0.67", "-14.119, -23.5522, 30.4925, 0.33", "-15.1408, -23.5795, 33.1203, 0.67", "-15.6273, -23.576, 34.306, 0.33", "-16.7014, -23.4755, 36.2864, 0.67", "-17.9328, -23.5006, 38.7844, 0.67", "-19.6015, -23.4275, 41.9207, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.72149, -25.3221, 12.018, 1.33", "0.140593, -29.3067, 11.9694, 1.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.72149, -25.3221, 12.018, 0.67", "2.44362, -24.772, 15.5882, 0.67", "2.87191, -23.0408, 21.1183, 0.67", "2.79699, -22.1351, 23.6606, 0.67", "2.10242, -20.4814, 28.3085, 0.67", "1.98553, -20.2094, 28.9469, 0.67", "1.53363, -19.1767, 30.9967, 0.67", "0.497325, -16.872, 34.4438, 0.67", "0.0931704, -15.7813, 35.7515, 0.67", "-0.698382, -13.0666, 38.8808, 0.67", "-1.30451, -10.9098, 41.0828, 0.67", "-1.41233, -9.49723, 42.4477, 0.67", "-1.31507, -6.79943, 44.953, 0.67", "-1.02543, -5.13296, 46.4038, 0.67", "-0.69112, -3.80748, 47.4671, 0.67", "-0.106323, -2.12467, 48.6668, 0.67", "1.63895, 1.97378, 52.0243, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.12055, -41.7085, -21.2652, 0.33", "5.13893, -44.1647, -23.3576, 0.33", "4.87247, -44.8314, -23.9256, 1.33", "3.39146, -48.5372, -27.0824, 0.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.12055, -41.7085, -21.2652, 0.33", "8.40722, -42.8725, -26.6462, 0.33", "8.56705, -42.9357, -27.0045, 0.67", "9.59356, -43.2258, -29.1586, 0.33", "10.5057, -43.3915, -30.9142, 1.33", "13.4831, -43.7727, -36.6279, 0.67", "16.364, -43.9532, -41.8715, 0.33", "17.2178, -43.9247, -43.3333, 0.33", "18.0614, -43.8614, -44.8109, 0.67", "19.3544, -43.7365, -47.1272, 0.33", "21.0984, -43.6807, -50.1004, 1.33", "22.5363, -43.7164, -52.3804, 0.33", "24.0213, -43.9118, -54.6278, 1.33", "26.5847, -44.443, -58.4661, 0.33", "27.0438, -44.5758, -59.2195, 0.67", "31.3291, -46.1129, -66.5714, 0.33", "32.2582, -46.5144, -68.2451, 2.0", "35.7793, -48.3537, -75.0439, 0.33", "36.1528, -48.5832, -75.8259, 1.33", "38.6542, -50.4663, -81.9837, 0.33", "38.9518, -50.71, -82.7904, 0.67", "40.0171, -51.8613, -86.4461, 0.33", "40.3537, -52.3511, -87.9187, 1.33", "41.0557, -54.5603, -93.8259, 0.33", "41.3612, -55.5653, -96.4792, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.2466, -42.9992, 12.1441, 0.67", "-10.0199, -45.8083, 12.815, 0.67", "-10.1572, -48.0372, 13.2983, 0.67", "-10.3217, -49.4921, 13.5951, 0.67", "-11.0432, -54.3998, 14.5253, 0.67", "-12.7237, -63.2136, 16.1983, 0.67", "-14.2855, -69.4634, 17.3681, 0.67", "-16.2365, -76.0522, 18.6071, 0.67", "-18.8923, -84.2573, 20.2212, 0.67", "-19.9011, -86.9688, 20.744, 0.67", "-21.4794, -90.1493, 21.3256, 0.67", "-25.3188, -96.2368, 22.4643, 0.67", "-27.1122, -98.739, 22.9463, 0.67", "-30.2674, -102.885, 23.7874, 0.67", "-31.5045, -104.406, 24.1251, 0.67", "-37.6727, -112.304, 25.9577, 0.67", "-41.6048, -117.514, 27.1783, 0.67", "-44.668, -121.74, 28.188, 0.67", "-48.2004, -126.671, 29.3659, 0.67", "-50.9051, -130.567, 30.331, 0.67", "-52.2795, -132.736, 31.0383, 0.67", "-53.8096, -135.518, 32.1615, 0.67", "-55.3386, -138.25, 33.4496, 0.67", "-56.436, -139.985, 34.3585, 0.67", "-58.6208, -142.876, 35.9538, 0.67", "-62.467, -146.876, 38.5531, 0.67", "-64.3349, -148.593, 39.7819, 0.67", "-66.5213, -150.398, 41.2054, 0.67", "-69.0405, -152.17, 42.756, 0.67", "-71.5927, -153.833, 44.2368, 0.33", "-75.3385, -155.87, 45.9563, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.2466, -42.9992, 12.1441, 0.67", "-11.7507, -44.8077, 9.22552, 0.67", "-13.4609, -47.0878, 5.44229, 0.67", "-15.2029, -49.4317, 1.47835, 0.67", "-18.9088, -54.0235, -6.27249, 0.67", "-20.7552, -56.1311, -9.89083, 0.67", "-21.854, -57.312, -11.8916, 0.67", "-23.2263, -58.8372, -14.4448, 0.33", "-24.1337, -59.8457, -16.2033, 1.33", "-25.5838, -61.3181, -18.6957, 0.33", "-27.2073, -62.8244, -20.9743, 0.67", "-28.8754, -64.3501, -23.1364, 0.33", "-30.8399, -66.3816, -25.9619, 0.67", "-32.2307, -67.9097, -28.0523, 0.33", "-33.2061, -69.1611, -29.7257, 0.67", "-35.5963, -72.7473, -34.4112, 0.33", "-36.6087, -74.6319, -36.8066, 1.33", "-38.3306, -77.7149, -40.5797, 0.33", "-38.5029, -78.0197, -40.9555, 0.67", "-39.3348, -79.5535, -42.9092, 0.33", "-39.5468, -80.0063, -43.5543, 0.67", "-41.4506, -84.0701, -49.7817, 0.33", "-42.2813, -86.1751, -53.4149, 2.0", "-43.5611, -89.4598, -59.5673, 0.33", "-44.0222, -90.5941, -61.804, 1.33", "-45.2925, -93.4729, -67.8634, 0.33", "-45.3721, -93.6164, -68.1777, 0.67", "-46.1958, -94.8271, -71.0487, 0.33", "-46.4091, -95.0956, -71.6928, 0.67", "-48.2876, -96.7881, -75.5017, 0.33", "-49.1933, -97.5097, -76.9781, 1.33", "-50.8663, -98.6962, -79.1884, 0.33", "-53.682, -100.793, -82.6778, 1.33", "-56.2836, -102.803, -85.6653, 0.33", "-56.954, -103.388, -86.421, 0.67", "-58.7285, -105.094, -88.3866, 0.33", "-59.1493, -105.535, -88.7981, 0.67", "-62.1157, -108.831, -91.3452, 0.33", "-62.9792, -109.875, -92.064, 0.67", "-65.0399, -112.608, -93.9339, 0.33", "-65.6379, -113.402, -94.5007, 0.67", "-69.414, -118.349, -98.1456, 0.33", "-69.5944, -118.596, -98.3421, 0.67", "-71.751, -121.589, -100.934, 0.33", "-72.4522, -122.578, -101.807, 1.33", "-74.1535, -125.041, -104.006, 0.33", "-75.2063, -126.612, -105.344, 1.33", "-78.2497, -131.227, -109.123, 0.33", "-78.8669, -132.142, -109.802, 1.33", "-80.3038, -134.172, -111.139, 0.33", "-80.6902, -134.679, -111.471, 0.67", "-82.7134, -137.182, -113.09, 0.33", "-83.1887, -137.747, -113.433, 0.67", "-85.0523, -139.931, -114.615, 0.33", "-85.9932, -141.337, -115.289, 1.33", "-89.3963, -147.637, -118.041, 0.33", "-89.6889, -148.337, -118.31, 0.67", "-90.8466, -152.401, -119.619, 0.33", "-91.0869, -153.903, -120.004, 0.67", "-91.1223, -160.447, -121.187, 0.33", "-91.0472, -160.797, -121.225, 1.33", "-90.3286, -162.387, -121.277, 0.33", "-90.1113, -162.823, -121.273, 0.67", "-89.3917, -164.126, -121.214, 0.33", "-89.1643, -164.556, -121.196, 0.67", "-87.2418, -168.61, -120.927, 0.33", "-86.7947, -169.544, -120.873, 1.33", "-84.3004, -174.747, -120.633, 0.33", "-84.1624, -175.056, -120.623, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.140593, -29.3067, 11.9694, 0.67", "-1.08983, -34.7693, 12.0389, 0.67", "-1.50535, -36.2375, 12.1131, 0.67", "-2.42751, -38.7147, 12.2277, 0.67", "-3.7799, -42.3477, 12.3958, 0.67", "-5.20391, -46.173, 12.5729, 0.67", "-6.10668, -48.5982, 12.6851, 0.67", "-8.3562, -53.7915, 13.334, 0.67", "-11.9532, -61.8088, 14.2795, 0.33" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.140593, -29.3067, 11.9694, 0.67", "2.09348, -31.5726, 12.9411, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.39146, -48.5372, -27.0824, 0.33", "4.7733, -50.3473, -28.5581, 0.33", "5.18019, -50.8346, -29.1813, 0.67", "6.09724, -51.9134, -30.5857, 0.33", "6.41173, -52.2677, -31.1017, 0.67", "7.45258, -53.3821, -32.7963, 0.33", "10.2382, -56.1262, -37.4189, 1.33", "12.8651, -58.4464, -42.2165, 0.33", "13.4696, -58.9164, -43.3234, 1.33", "15.4652, -60.3063, -46.9907, 0.33", "15.8818, -60.5434, -47.8067, 0.67", "17.9094, -61.4343, -52.2229, 0.33", "18.9351, -61.748, -54.4784, 2.0", "19.7936, -61.9091, -56.5656, 0.33", "20.0679, -61.9634, -57.3824, 0.67", "21.997, -62.4161, -63.9952, 0.33", "23.0997, -62.8266, -68.1602, 1.33", "23.5954, -63.0771, -70.2239, 0.33", "23.8552, -63.2542, -71.369, 2.0", "26.0202, -65.1671, -81.7844, 0.33", "26.1843, -65.3686, -82.7244, 2.0", "26.7659, -66.2847, -86.2975, 0.33", "27.0071, -66.8135, -88.0475, 0.67", "27.3712, -67.9335, -91.3893, 0.33", "27.5345, -68.3274, -92.4226, 1.33", "29.9765, -73.0839, -102.992, 0.33", "30.7606, -74.2369, -105.411, 0.67", "31.951, -75.6043, -108.091, 0.33", "32.1617, -75.8038, -108.433, 0.67", "36.0326, -78.8203, -113.091, 0.33", "37.0657, -79.5056, -114.029, 0.67", "39.8362, -81.113, -115.716, 0.33", "40.3846, -81.432, -116.018, 0.67", "44.931, -83.9979, -118.475, 0.33", "45.7144, -84.4846, -118.725, 1.33", "48.228, -86.1931, -118.907, 0.33", "48.5914, -86.4426, -118.82, 0.67", "53.4254, -89.8254, -116.733, 0.33", "55.4028, -91.1875, -115.642, 0.67", "61.5825, -95.3498, -111.232, 0.33", "62.068, -95.6843, -110.837, 0.67", "67.1631, -99.2446, -105.918, 0.33", "67.3568, -99.3787, -105.708, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.39146, -48.5372, -27.0824, 0.33", "4.32649, -52.8794, -26.5361, 0.33", "4.71552, -54.43, -26.3961, 0.67", "6.09487, -59.5089, -26.025, 0.33", "6.59029, -61.2433, -25.9237, 0.67", "7.15334, -63.3057, -25.8192, 0.33", "7.7659, -65.7575, -25.716, 1.33", "8.75878, -69.7775, -25.6103, 0.33", "8.88909, -70.3368, -25.6072, 0.67", "9.34052, -72.4295, -25.6532, 0.33", "9.84946, -74.8101, -25.6997, 1.33", "10.7807, -79.5957, -26.0921, 0.33", "11.016, -80.8317, -26.2716, 0.67", "11.551, -83.6338, -26.8173, 0.33", "11.8558, -84.9969, -27.2315, 0.67", "12.5977, -87.9424, -28.3747, 0.33", "13.795, -91.6539, -30.1041, 0.67", "15.3095, -95.7232, -32.3823, 0.33", "15.9394, -97.1922, -33.2622, 1.33", "18.682, -102.86, -36.8734, 0.33", "18.8606, -103.192, -37.0843, 0.67", "20.2742, -105.535, -38.5317, 0.33", "21.5513, -107.388, -39.5157, 2.0", "23.4903, -109.935, -40.9627, 0.33", "23.7225, -110.233, -41.1112, 0.67", "25.1888, -112.214, -41.9743, 0.33", "25.4588, -112.671, -42.1851, 0.67", "26.7058, -115.319, -43.3993, 0.33", "27.2654, -116.714, -43.9918, 0.67", "28.3867, -120.142, -45.2135, 0.33", "29.195, -122.756, -45.9555, 1.33", "30.8914, -128.663, -47.3151, 0.33", "31.1282, -129.432, -47.4432, 0.67", "32.2024, -132.674, -47.7865, 0.33", "33.5134, -136.147, -47.9139, 1.33", "35.0995, -139.855, -47.8116, 0.33", "35.4498, -140.562, -47.7471, 0.67", "37.2652, -143.826, -47.3348, 0.33", "37.735, -144.606, -47.2771, 0.67", "39.0247, -146.585, -47.2717, 0.33", "39.3465, -147.065, -47.3058, 0.67", "41.8542, -150.815, -47.5844, 0.33", "42.8658, -152.293, -47.7106, 1.33", "44.6215, -154.91, -47.9522, 0.33", "46.5204, -157.953, -48.208, 0.67", "48.0326, -160.416, -48.4191, 0.33", "48.3413, -160.908, -48.46, 0.67", "49.5972, -162.916, -48.6217, 0.33", "50.0038, -163.584, -48.6765, 0.67", "52.7486, -168.226, -49.0133, 0.33", "53.3869, -169.338, -49.0824, 0.67", "56.4978, -174.812, -49.3836, 0.33", "57.3075, -176.256, -49.4544, 2.0" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "41.3612, -55.5653, -96.4792, 0.33", "42.9091, -55.1803, -99.2943, 0.33", "43.3397, -55.0594, -100.09, 0.67", "47.0094, -53.9582, -106.937, 0.33", "47.9495, -53.7193, -108.263, 1.33", "52.3588, -52.7716, -113.661, 0.33", "53.2158, -52.6341, -114.538, 0.67", "60.0719, -51.818, -120.437, 0.33", "61.0495, -51.7856, -121.187, 1.33", "69.6193, -52.3315, -126.5, 0.33", "70.8146, -52.598, -127.218, 1.33", "75.4453, -54.4336, -129.749, 0.33", "76.2196, -54.8746, -130.205, 1.33", "81.4004, -59.1548, -133.571, 0.33", "82.4379, -60.2474, -134.605, 0.67", "84.8257, -63.5135, -138.339, 0.33", "85.0936, -63.8451, -138.795, 0.67", "86.453, -65.286, -141.088, 0.33", "86.6887, -65.4605, -141.432, 0.67", "90.9264, -67.5144, -146.521, 0.33", "92.2186, -68.0434, -148.077, 0.67", "93.3606, -68.4065, -149.233, 0.33", "97.2839, -69.5849, -153.152, 1.33", "103.624, -71.3305, -159.247, 0.33", "104.342, -71.535, -159.936, 0.67", "108.891, -72.8815, -164.196, 0.33", "112.931, -74.4355, -168.368, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "41.3612, -55.5653, -96.4792, 0.33", "41.3603, -56.8778, -99.5529, 0.33", "41.3802, -57.127, -100.153, 0.67", "41.7373, -59.1259, -105.02, 0.33", "41.7764, -59.3336, -105.563, 0.67", "42.0517, -60.936, -110.009, 0.33", "42.0551, -61.1066, -110.566, 0.67", "41.9215, -62.333, -115.391, 0.33", "41.847, -62.6298, -116.553, 1.33", "41.4274, -63.8915, -121.628, 0.33", "41.239, -64.3046, -123.411, 0.67", "40.2163, -65.8117, -130.934, 0.33", "39.9596, -66.0871, -132.469, 1.33", "39.0898, -66.6208, -135.945, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.09348, -31.5726, 12.9411, 0.67", "3.21217, -33.7653, 15.6411, 0.67", "4.63639, -36.5504, 18.7523, 0.67", "5.84754, -38.4607, 20.6632, 0.67", "6.98223, -40.1526, 22.3816, 0.67", "7.4872, -40.9036, 23.1179, 0.67", "8.05025, -41.8753, 24.0428, 0.33", "8.76763, -43.2376, 25.2839, 0.67", "9.8218, -45.1656, 27.1287, 0.33", "10.8759, -47.3501, 28.7818, 0.67", "11.2412, -48.2645, 29.4176, 0.33", "12.1511, -50.5688, 31.2638, 0.67", "12.9125, -53.0929, 33.6378, 0.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.09348, -31.5726, 12.9411, 0.67", "5.1703, -32.2609, 16.6727, 0.67", "7.33678, -32.7455, 19.3001, 0.67", "10.5462, -33.4635, 23.1925, 0.67", "12.9029, -33.9907, 26.0507, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "57.3075, -176.256, -49.4544, 0.33", "58.7863, -180.548, -49.0453, 0.33", "58.8857, -180.86, -48.9975, 0.67", "60.4448, -186.071, -48.0804, 0.33", "60.7457, -187.019, -47.9113, 0.67", "61.7048, -189.936, -47.3906, 0.33", "61.8137, -190.255, -47.3364, 0.67", "62.8914, -193.238, -46.9137, 0.33", "63.2585, -194.225, -46.8611, 1.33", "64.9014, -198.385, -46.9314, 0.33", "65.0685, -198.815, -46.9678, 0.67", "66.1416, -201.426, -47.4357, 0.33", "66.6963, -202.763, -47.7823, 0.67", "68.8102, -207.713, -49.5021, 0.33", "69.173, -208.635, -49.8443, 0.67", "69.821, -210.5, -50.579, 0.33", "70.3592, -212.143, -51.2314, 0.67", "70.9144, -213.947, -51.9543, 0.33", "71.2901, -215.224, -52.4332, 0.67", "72.038, -218.05, -53.2648, 0.33", "72.3718, -219.43, -53.6762, 1.33", "73.051, -222.227, -54.4695, 0.33", "73.051, -222.227, -54.4695, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "57.3075, -176.256, -49.4544, 0.67", "57.281, -178.065, -50.5977, 0.67", "57.1912, -179.26, -51.4623, 0.33", "57.1569, -179.713, -51.7647, 0.67", "56.9532, -182.711, -53.685, 0.33", "56.947, -182.936, -53.8404, 0.67", "56.9434, -186.61, -56.4553, 0.33", "57.1338, -188.743, -58.0873, 1.33", "57.5187, -191.163, -60.0167, 0.33", "57.5911, -191.461, -60.2443, 0.67", "58.4742, -194.266, -62.2575, 0.33", "58.5942, -194.551, -62.4801, 0.67", "60.6034, -198.282, -65.5581, 0.33", "61.2097, -199.362, -66.3758, 1.33", "62.4793, -201.549, -68.0153, 0.33", "62.8555, -202.206, -68.4503, 1.33", "64.7342, -205.547, -70.3503, 0.33", "65.1225, -206.216, -70.7368, 0.67", "66.3876, -208.336, -71.9415, 0.33", "66.6781, -208.807, -72.2187, 1.33", "69.7453, -213.65, -75.1187, 0.33", "70.2262, -214.397, -75.5469, 0.67", "72.5291, -217.978, -77.3433, 0.33", "72.6682, -218.186, -77.4583, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "12.9029, -33.9907, 26.0507, 0.67", "16.2721, -34.8207, 26.0324, 0.67", "18.9473, -35.0531, 25.98, 0.67", "22.2039, -35.1557, 25.965, 0.67", "27.7412, -35.1356, 26.1445, 0.67", "30.6368, -35.1046, 26.4106, 0.67", "32.2003, -35.0662, 26.6016, 0.67", "39.9603, -34.5872, 27.6522, 0.67", "41.6002, -34.4324, 27.8775, 1.33", "45.3701, -34.0428, 28.3885, 0.67", "49.8621, -33.7498, 29.0735, 0.67", "52.1765, -33.6679, 29.419, 1.33", "55.2452, -33.7789, 29.8354, 0.33", "58.0704, -34.0891, 30.1952, 0.67", "60.2654, -34.3882, 30.3707, 0.33", "62.2841, -34.7416, 30.3795, 0.67", "63.7426, -35.0388, 30.2804, 0.33", "65.3386, -35.4434, 30.25, 0.67", "70.3643, -36.6884, 30.747, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.9029, -33.9907, 26.0507, 0.67", "14.9848, -35.2331, 30.195, 0.67", "16.8082, -36.3214, 33.8249, 0.67", "18.4055, -37.2746, 37.0045, 0.67", "20.0672, -38.2663, 40.3124, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_BTC_5612242ada_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.4500008757444842)
    connect dend_37(0), soma_0(0.4500008757444842)
    connect dend_32(0), soma_0(0.4500008757444842)
    connect dend_25(0), soma_0(0.4500008757444842)
    connect dend_0(0), soma_0(0.4500008757444842)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.10901, 8.17427, -3.38986, 2.59058 ) }
    soma_0 { pt3dadd( -1.02513, 7.19062, -3.06257, 4.73751 ) }
    soma_0 { pt3dadd( -0.941247, 6.20697, -2.73528, 6.32924 ) }
    soma_0 { pt3dadd( -0.857366, 5.22332, -2.408, 7.36132 ) }
    soma_0 { pt3dadd( -0.773484, 4.23967, -2.08071, 9.22299 ) }
    soma_0 { pt3dadd( -0.689602, 3.25602, -1.75342, 10.2547 ) }
    soma_0 { pt3dadd( -0.605721, 2.27237, -1.42613, 10.8399 ) }
    soma_0 { pt3dadd( -0.521839, 1.28871, -1.09885, 11.0364 ) }
    soma_0 { pt3dadd( -0.437957, 0.305064, -0.771561, 11.233 ) }
    soma_0 { pt3dadd( -0.354076, -0.678586, -0.444273, 11.4012 ) }
    soma_0 { pt3dadd( -0.270194, -1.66224, -0.116986, 10.7587 ) }
    soma_0 { pt3dadd( -0.186312, -2.64589, 0.210301, 10.0838 ) }
    soma_0 { pt3dadd( -0.102431, -3.62954, 0.537588, 9.4089 ) }
    soma_0 { pt3dadd( -0.018549, -4.61319, 0.864875, 8.86981 ) }
    soma_0 { pt3dadd( 0.0653327, -5.59684, 1.19216, 8.72262 ) }
    soma_0 { pt3dadd( 0.149214, -6.58049, 1.51945, 8.42438 ) }
    soma_0 { pt3dadd( 0.233096, -7.56414, 1.84674, 7.90042 ) }
    soma_0 { pt3dadd( 0.316978, -8.54779, 2.17402, 7.02226 ) }
    soma_0 { pt3dadd( 0.400859, -9.53144, 2.50131, 6.10711 ) }
    soma_0 { pt3dadd( 0.484741, -10.5151, 2.8286, 5.19196 ) }
    soma_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 3.05014 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.40148, -1.66302, -9.60359, 0.67 ) }
    dend_40 { pt3dadd( -7.39988, -1.99532, -12.6163, 0.67 ) }
    dend_40 { pt3dadd( -10.4639, -2.19868, -15.4011, 0.67 ) }
    dend_40 { pt3dadd( -10.4639, -2.19868, -15.4011, 0.67 ) }
    dend_40 { pt3dadd( -12.0669, -2.28281, -16.4443, 1.33 ) }
    dend_40 { pt3dadd( -18.8083, -2.29992, -20.999, 0.33 ) }
    dend_40 { pt3dadd( -19.8341, -2.33195, -21.8664, 0.33 ) }
    dend_40 { pt3dadd( -21.9137, -2.41318, -24.0491, 1.33 ) }
    dend_40 { pt3dadd( -24.0024, -2.607, -26.6143, 0.33 ) }
    dend_40 { pt3dadd( -24.6855, -2.71458, -27.5079, 1.33 ) }
    dend_40 { pt3dadd( -29.2148, -3.74757, -34.0904, 0.67 ) }
    dend_40 { pt3dadd( -34.4857, -5.35969, -42.4362, 0.33 ) }
    dend_40 { pt3dadd( -36.6765, -6.0909, -46.1826, 0.67 ) }
    dend_40 { pt3dadd( -39.7722, -7.23528, -51.7293, 0.33 ) }
    dend_40 { pt3dadd( -40.4018, -7.48406, -52.8847, 0.67 ) }
    dend_40 { pt3dadd( -43.261, -8.68414, -57.9548, 0.33 ) }
    dend_40 { pt3dadd( -44.571, -9.25684, -60.1074, 1.33 ) }
    dend_40 { pt3dadd( -47.2025, -10.222, -63.8811, 0.33 ) }
    dend_40 { pt3dadd( -48.6319, -10.6945, -65.8654, 1.33 ) }
    dend_40 { pt3dadd( -53.3808, -12.2147, -72.1679, 0.33 ) }
    dend_40 { pt3dadd( -53.8888, -12.3749, -72.8154, 0.67 ) }
    dend_40 { pt3dadd( -56.5014, -13.2168, -75.8572, 0.33 ) }
    dend_40 { pt3dadd( -57.0221, -13.3923, -76.5048, 1.33 ) }
    dend_40 { pt3dadd( -61.056, -14.9589, -82.0204, 0.33 ) }
    dend_40 { pt3dadd( -62.2525, -15.4566, -83.784, 0.67 ) }
    dend_40 { pt3dadd( -63.2781, -15.8458, -85.3184, 0.33 ) }
    dend_40 { pt3dadd( -64.0814, -16.1133, -86.5352, 1.33 ) }
    dend_40 { pt3dadd( -67.6699, -17.0648, -91.9015, 0.33 ) }
    dend_40 { pt3dadd( -68.0516, -17.1545, -92.4728, 0.33 ) }
    dend_40 { pt3dadd( -69.4109, -17.4649, -94.5708, 1.33 ) }
    dend_40 { pt3dadd( -72.5934, -18.2644, -99.8782, 0.33 ) }
    dend_40 { pt3dadd( -73.1109, -18.4486, -100.864, 1.33 ) }
    dend_40 { pt3dadd( -76.0168, -19.7835, -106.786, 0.33 ) }
    dend_40 { pt3dadd( -76.3606, -19.981, -107.512, 0.67 ) }
    dend_40 { pt3dadd( -79.006, -21.7897, -113.499, 0.33 ) }
    dend_40 { pt3dadd( -79.5886, -22.2752, -114.949, 1.33 ) }
    dend_40 { pt3dadd( -81.8884, -24.5476, -121.463, 0.33 ) }
    dend_40 { pt3dadd( -82.1141, -24.7879, -122.13, 1.33 ) }
    dend_40 { pt3dadd( -83.3952, -26.2224, -126.166, 0.33 ) }
    dend_40 { pt3dadd( -83.8886, -26.711, -127.632, 0.67 ) }
    dend_40 { pt3dadd( -86.0947, -28.7985, -134.038, 0.33 ) }
    dend_40 { pt3dadd( -87.8191, -30.2506, -138.8, 0.67 ) }
    dend_40 { pt3dadd( -88.5311, -30.7473, -140.636, 0.33 ) }
    dend_40 { pt3dadd( -89.8819, -31.6631, -144.211, 0.67 ) }
    dend_40 { pt3dadd( -91.9514, -33.0991, -149.964, 0.33 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.84148, 4.10348, -11.1036, 0.67 ) }
    dend_37 { pt3dadd( -3.11642, 4.75387, -12.1736, 0.67 ) }
    dend_37 { pt3dadd( -3.66497, 6.37922, -14.197, 0.67 ) }
    dend_37 { pt3dadd( -4.58266, 8.69157, -17.0703, 0.67 ) }
    dend_37 { pt3dadd( -5.29366, 10.4831, -19.2965, 0.67 ) }
    dend_37 { pt3dadd( -5.59556, 11.2438, -20.2418, 0.67 ) }
    dend_37 { pt3dadd( -5.98359, 12.2216, -21.4567, 0.67 ) }
    dend_37 { pt3dadd( -6.89259, 15.2012, -24.9961, 0.67 ) }
    dend_37 { pt3dadd( -7.54681, 18.0467, -28.0491, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.21148, 5.32898, -10.3036, 0.67 ) }
    dend_32 { pt3dadd( -0.436264, 8.15625, -12.2964, 0.67 ) }
    dend_32 { pt3dadd( 0.125625, 9.08394, -12.9308, 0.67 ) }
    dend_32 { pt3dadd( 1.07391, 10.6495, -14.0013, 1.33 ) }
    dend_32 { pt3dadd( 4.53076, 16.3569, -17.904, 0.67 ) }
    dend_32 { pt3dadd( 6.16454, 19.0542, -19.7485, 0.67 ) }
    dend_32 { pt3dadd( 7.0377, 20.4958, -20.7342, 0.67 ) }
    dend_32 { pt3dadd( 8.08686, 22.3683, -22.2085, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 83/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 4.30852, 5.51898, 7.4864, 2.0 ) }
    dend_25 { pt3dadd( 4.69551, 5.7972, 7.69558, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.571479, -11.0775, 6.4864, 4.0 ) }
    dend_0 { pt3dadd( -0.639207, -13.4983, 6.4864, 4.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 87/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 0.469314 ) }
    axon_0 { pt3dadd( 1.84314, -26.4445, 3.15589, 0.469314 ) }
    axon_0 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.469314 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.54681, 18.0467, -28.0491, 0.33 ) }
    dend_39 { pt3dadd( -6.97214, 20.9236, -36.1565, 0.33 ) }
    dend_39 { pt3dadd( -6.92607, 21.1928, -36.8281, 1.33 ) }
    dend_39 { pt3dadd( -6.61403, 23.0114, -41.0383, 0.33 ) }
    dend_39 { pt3dadd( -6.58044, 23.336, -41.6952, 1.33 ) }
    dend_39 { pt3dadd( -6.4635, 25.1749, -45.0846, 0.33 ) }
    dend_39 { pt3dadd( -6.46152, 25.4017, -45.4709, 0.67 ) }
    dend_39 { pt3dadd( -6.66096, 27.1161, -47.8309, 0.33 ) }
    dend_39 { pt3dadd( -6.7081, 27.3803, -48.1864, 1.33 ) }
    dend_39 { pt3dadd( -7.02612, 28.9445, -50.155, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -7.35424, 30.5779, -52.1956, 1.33 ) }
    dend_39 { pt3dadd( -7.83277, 32.8508, -54.9608, 0.33 ) }
    dend_39 { pt3dadd( -8.22676, 34.7451, -57.3165, 1.33 ) }
    dend_39 { pt3dadd( -8.69725, 36.9875, -60.1052, 0.33 ) }
    dend_39 { pt3dadd( -8.7729, 37.3862, -60.5862, 1.33 ) }
    dend_39 { pt3dadd( -8.97617, 38.769, -62.2042, 0.33 ) }
    dend_39 { pt3dadd( -9.06872, 39.4096, -62.9021, 0.67 ) }
    dend_39 { pt3dadd( -9.43716, 42.8591, -66.7506, 0.33 ) }
    dend_39 { pt3dadd( -9.47574, 43.337, -67.2657, 1.33 ) }
    dend_39 { pt3dadd( -9.54605, 44.6026, -68.6766, 0.33 ) }
    dend_39 { pt3dadd( -9.56223, 44.8905, -69.0145, 1.33 ) }
    dend_39 { pt3dadd( -9.71899, 47.9687, -73.1128, 0.33 ) }
    dend_39 { pt3dadd( -9.81893, 49.721, -75.6201, 1.33 ) }
    dend_39 { pt3dadd( -9.89047, 50.9367, -77.461, 0.33 ) }
    dend_39 { pt3dadd( -9.97161, 51.9376, -79.1456, 0.67 ) }
    dend_39 { pt3dadd( -10.1574, 53.6577, -82.2203, 0.33 ) }
    dend_39 { pt3dadd( -10.5585, 56.1979, -86.5732, 0.67 ) }
    dend_39 { pt3dadd( -10.9437, 58.1509, -89.7626, 0.33 ) }
    dend_39 { pt3dadd( -11.2697, 59.1079, -91.3125, 0.67 ) }
    dend_39 { pt3dadd( -13.24, 63.2425, -98.1383, 0.33 ) }
    dend_39 { pt3dadd( -13.3745, 63.4551, -98.4916, 0.67 ) }
    dend_39 { pt3dadd( -14.7674, 65.1698, -101.307, 0.33 ) }
    dend_39 { pt3dadd( -15.0903, 65.5135, -101.875, 0.67 ) }
    dend_39 { pt3dadd( -17.4009, 67.8715, -106.164, 0.33 ) }
    dend_39 { pt3dadd( -17.8096, 68.3902, -107.093, 0.67 ) }
    dend_39 { pt3dadd( -18.8995, 70.121, -110.249, 0.33 ) }
    dend_39 { pt3dadd( -19.0157, 70.4738, -110.881, 0.67 ) }
    dend_39 { pt3dadd( -18.9681, 72.9025, -115.39, 0.33 ) }
    dend_39 { pt3dadd( -18.5869, 74.5868, -118.047, 0.67 ) }
    dend_39 { pt3dadd( -17.435, 77.3051, -121.662, 0.33 ) }
    dend_39 { pt3dadd( -17.3455, 77.4881, -121.893, 0.67 ) }
    dend_39 { pt3dadd( -15.856, 80.2016, -124.914, 0.33 ) }
    dend_39 { pt3dadd( -14.1419, 83.123, -127.952, 1.33 ) }
    dend_39 { pt3dadd( -11.4681, 87.5088, -131.42, 0.33 ) }
    dend_39 { pt3dadd( -11.3267, 87.7473, -131.569, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.54681, 18.0467, -28.0491, 0.33 ) }
    dend_38 { pt3dadd( -11.2369, 17.0729, -32.3055, 0.33 ) }
    dend_38 { pt3dadd( -12.7455, 16.8251, -33.6846, 1.33 ) }
    dend_38 { pt3dadd( -18.196, 16.1583, -38.0773, 0.33 ) }
    dend_38 { pt3dadd( -19.4984, 16.0648, -39.1559, 0.67 ) }
    dend_38 { pt3dadd( -23.2548, 15.9383, -42.2703, 0.33 ) }
    dend_38 { pt3dadd( -26.947, 15.9358, -45.37, 1.33 ) }
    dend_38 { pt3dadd( -33.6854, 16.3748, -50.5265, 0.33 ) }
    dend_38 { pt3dadd( -34.9307, 16.5455, -51.5187, 1.33 ) }
    dend_38 { pt3dadd( -39.5974, 17.55, -55.1023, 0.33 ) }
    dend_38 { pt3dadd( -40.4337, 17.7879, -55.8095, 0.67 ) }
    dend_38 { pt3dadd( -43.7027, 18.9398, -58.7555, 0.33 ) }
    dend_38 { pt3dadd( -44.8774, 19.392, -59.8127, 0.67 ) }
    dend_38 { pt3dadd( -48.5265, 20.9046, -62.8479, 0.33 ) }
    dend_38 { pt3dadd( -49.7462, 21.4322, -63.8469, 1.33 ) }
    dend_38 { pt3dadd( -54.4199, 23.4982, -67.477, 0.33 ) }
    dend_38 { pt3dadd( -56.1428, 24.3184, -68.8622, 1.33 ) }
    dend_38 { pt3dadd( -63.6159, 28.1825, -74.9118, 0.33 ) }
    dend_38 { pt3dadd( -65.2297, 29.0619, -76.281, 1.33 ) }
    dend_38 { pt3dadd( -69.0244, 31.2328, -79.5088, 0.33 ) }
    dend_38 { pt3dadd( -69.4038, 31.4813, -79.8526, 0.67 ) }
    dend_38 { pt3dadd( -73.0063, 34.1304, -83.2067, 0.33 ) }
    dend_38 { pt3dadd( -73.7039, 34.6891, -83.8781, 0.67 ) }
    dend_38 { pt3dadd( -76.4078, 37.0785, -86.4418, 0.33 ) }
    dend_38 { pt3dadd( -77.1538, 37.7134, -87.0866, 2.0 ) }
    dend_38 { pt3dadd( -85.6069, 44.6106, -93.9563, 0.33 ) }
    dend_38 { pt3dadd( -86.199, 45.064, -94.4183, 0.67 ) }
    dend_38 { pt3dadd( -88.6568, 46.8475, -96.1936, 0.33 ) }
    dend_38 { pt3dadd( -89.2897, 47.2834, -96.627, 0.67 ) }
    dend_38 { pt3dadd( -91.0882, 48.4818, -97.9489, 0.33 ) }
    dend_38 { pt3dadd( -92.9733, 49.7278, -99.349, 0.67 ) }
    dend_38 { pt3dadd( -98.1335, 53.0497, -103.111, 0.33 ) }
    dend_38 { pt3dadd( -99.5504, 53.9986, -104.146, 0.67 ) }
    dend_38 { pt3dadd( -105.03, 57.8493, -108.205, 0.33 ) }
    dend_38 { pt3dadd( -109.562, 61.2742, -111.726, 1.33 ) }
    dend_38 { pt3dadd( -112.229, 63.4345, -113.845, 0.33 ) }
    dend_38 { pt3dadd( -112.734, 63.8692, -114.266, 0.67 ) }
    dend_38 { pt3dadd( -114.302, 65.2092, -115.737, 0.33 ) }
    dend_38 { pt3dadd( -114.378, 65.2709, -115.805, 0.67 ) }
    dend_38 { pt3dadd( -118.391, 67.7238, -118.905, 0.33 ) }
    dend_38 { pt3dadd( -119.394, 68.1572, -119.535, 1.33 ) }
    dend_38 { pt3dadd( -123.37, 69.452, -122.756, 0.33 ) }
    dend_38 { pt3dadd( -125.441, 70.0426, -124.461, 0.33 ) }
    dend_38 { pt3dadd( -129.929, 71.0211, -128.17, 0.67 ) }
    dend_38 { pt3dadd( -136.211, 72.078, -133.162, 0.33 ) }
    dend_38 { pt3dadd( -137.186, 72.1406, -133.863, 0.67 ) }
    dend_38 { pt3dadd( -143.405, 72.3895, -138.542, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 8.08686, 22.3683, -22.2085, 0.33 ) }
    dend_36 { pt3dadd( 10.7357, 24.4603, -23.0004, 0.33 ) }
    dend_36 { pt3dadd( 11.9871, 25.5003, -23.3578, 0.67 ) }
    dend_36 { pt3dadd( 13.6842, 26.9583, -23.835, 0.33 ) }
    dend_36 { pt3dadd( 13.9178, 27.157, -23.9339, 0.67 ) }
    dend_36 { pt3dadd( 15.5236, 28.5632, -24.6693, 0.33 ) }
    dend_36 { pt3dadd( 16.9691, 29.7701, -25.2162, 1.33 ) }
    dend_36 { pt3dadd( 19.6784, 31.9991, -25.958, 0.33 ) }
    dend_36 { pt3dadd( 19.9232, 32.1963, -26.035, 0.67 ) }
    dend_36 { pt3dadd( 24.94, 36.3186, -27.616, 0.33 ) }
    dend_36 { pt3dadd( 26.1865, 37.3686, -27.9955, 2.0 ) }
    dend_36 { pt3dadd( 30.7201, 41.2658, -29.3205, 0.33 ) }
    dend_36 { pt3dadd( 32.9037, 43.1816, -29.9653, 2.0 ) }
    dend_36 { pt3dadd( 39.3793, 49.0535, -31.9754, 0.33 ) }
    dend_36 { pt3dadd( 40.7248, 50.3057, -32.4473, 1.33 ) }
    dend_36 { pt3dadd( 42.7767, 52.2823, -33.236, 0.33 ) }
    dend_36 { pt3dadd( 43.3778, 52.8461, -33.5432, 0.67 ) }
    dend_36 { pt3dadd( 46.0771, 55.3688, -35.3468, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 47.1501, 56.2399, -36.1807, 0.67 ) }
    dend_36 { pt3dadd( 50.2288, 58.3352, -38.6868, 0.33 ) }
    dend_36 { pt3dadd( 51.0685, 58.8109, -39.3502, 1.33 ) }
    dend_36 { pt3dadd( 54.2864, 60.3538, -41.7515, 0.33 ) }
    dend_36 { pt3dadd( 55.1841, 60.7059, -42.375, 1.33 ) }
    dend_36 { pt3dadd( 59.3444, 62.008, -44.9721, 0.33 ) }
    dend_36 { pt3dadd( 59.6076, 62.0753, -45.1162, 0.67 ) }
    dend_36 { pt3dadd( 62.6723, 62.7385, -46.5711, 0.33 ) }
    dend_36 { pt3dadd( 64.2279, 63.0379, -47.2202, 1.33 ) }
    dend_36 { pt3dadd( 67.768, 63.6453, -48.394, 0.33 ) }
    dend_36 { pt3dadd( 68.6087, 63.7739, -48.696, 0.67 ) }
    dend_36 { pt3dadd( 72.3001, 64.3212, -50.0108, 0.33 ) }
    dend_36 { pt3dadd( 73.9778, 64.5663, -50.7412, 1.33 ) }
    dend_36 { pt3dadd( 76.8748, 65.0011, -52.1822, 0.33 ) }
    dend_36 { pt3dadd( 78.1641, 65.2264, -52.9106, 1.33 ) }
    dend_36 { pt3dadd( 84.0457, 66.3743, -56.4464, 0.33 ) }
    dend_36 { pt3dadd( 84.8095, 66.5253, -56.9022, 1.33 ) }
    dend_36 { pt3dadd( 89.0459, 67.3698, -59.4446, 0.33 ) }
    dend_36 { pt3dadd( 90.0224, 67.5559, -60.0022, 0.67 ) }
    dend_36 { pt3dadd( 94.9401, 68.4309, -62.9075, 0.33 ) }
    dend_36 { pt3dadd( 95.7911, 68.5555, -63.4001, 1.33 ) }
    dend_36 { pt3dadd( 100.754, 69.0501, -65.9238, 0.33 ) }
    dend_36 { pt3dadd( 101.559, 69.1039, -66.2975, 0.67 ) }
    dend_36 { pt3dadd( 103.054, 69.1619, -66.8902, 0.33 ) }
    dend_36 { pt3dadd( 106.034, 69.2163, -67.869, 0.67 ) }
    dend_36 { pt3dadd( 108.051, 69.2441, -68.3362, 0.33 ) }
    dend_36 { pt3dadd( 108.663, 69.2682, -68.4796, 0.67 ) }
    dend_36 { pt3dadd( 111.941, 69.4784, -69.069, 0.33 ) }
    dend_36 { pt3dadd( 112.254, 69.5173, -69.1389, 0.67 ) }
    dend_36 { pt3dadd( 116.274, 70.2191, -70.1455, 0.33 ) }
    dend_36 { pt3dadd( 117.232, 70.4157, -70.3679, 0.67 ) }
    dend_36 { pt3dadd( 118.669, 70.7644, -70.8008, 0.33 ) }
    dend_36 { pt3dadd( 121.212, 71.3342, -71.6867, 0.67 ) }
    dend_36 { pt3dadd( 127.17, 72.608, -74.0625, 0.33 ) }
    dend_36 { pt3dadd( 128.177, 72.804, -74.5242, 0.67 ) }
    dend_36 { pt3dadd( 130.428, 73.2442, -75.6761, 0.33 ) }
    dend_36 { pt3dadd( 132.014, 73.5317, -76.5521, 1.33 ) }
    dend_36 { pt3dadd( 135.325, 74.0755, -78.4245, 0.33 ) }
    dend_36 { pt3dadd( 135.711, 74.1354, -78.6593, 0.67 ) }
    dend_36 { pt3dadd( 140.326, 74.6919, -81.2252, 0.33 ) }
    dend_36 { pt3dadd( 141.104, 74.7495, -81.6786, 1.33 ) }
    dend_36 { pt3dadd( 143.98, 74.8731, -83.4802, 0.33 ) }
    dend_36 { pt3dadd( 144.506, 74.8461, -83.8233, 0.67 ) }
    dend_36 { pt3dadd( 146.767, 74.5143, -85.4064, 0.33 ) }
    dend_36 { pt3dadd( 147.748, 74.1957, -85.9283, 0.67 ) }
    dend_36 { pt3dadd( 150.5, 72.7712, -86.851, 0.33 ) }
    dend_36 { pt3dadd( 150.5, 72.7712, -86.851, 1.33 ) }
    dend_36 { pt3dadd( 153.728, 70.3808, -86.9983, 0.33 ) }
    dend_36 { pt3dadd( 154.403, 69.8689, -86.9758, 1.33 ) }
    dend_36 { pt3dadd( 158.99, 66.3652, -86.4258, 0.33 ) }
    dend_36 { pt3dadd( 159.234, 66.188, -86.3866, 0.67 ) }
    dend_36 { pt3dadd( 161.672, 64.6824, -85.9078, 0.33 ) }
    dend_36 { pt3dadd( 162.06, 64.4792, -85.8321, 0.67 ) }
    dend_36 { pt3dadd( 165.003, 63.3881, -85.2643, 0.33 ) }
    dend_36 { pt3dadd( 167.076, 62.8509, -84.9851, 0.33 ) }
    dend_36 { pt3dadd( 167.702, 62.7687, -85.0003, 0.67 ) }
    dend_36 { pt3dadd( 172.474, 62.4616, -85.4237, 0.33 ) }
    dend_36 { pt3dadd( 172.798, 62.4986, -85.4588, 0.67 ) }
    dend_36 { pt3dadd( 176.321, 63.3408, -85.8843, 0.33 ) }
    dend_36 { pt3dadd( 177.127, 63.6872, -85.993, 0.67 ) }
    dend_36 { pt3dadd( 181.771, 66.3903, -86.6734, 0.33 ) }
    dend_36 { pt3dadd( 182.562, 66.9264, -86.8018, 1.33 ) }
    dend_36 { pt3dadd( 187.632, 71.2623, -87.7577, 0.33 ) }
    dend_36 { pt3dadd( 188.345, 71.9351, -87.8842, 1.33 ) }
    dend_36 { pt3dadd( 190.285, 74.1368, -88.162, 0.33 ) }
    dend_36 { pt3dadd( 190.511, 74.4176, -88.1619, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 66/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.08686, 22.3683, -22.2085, 0.33 ) }
    dend_33 { pt3dadd( 9.98288, 25.6531, -27.9789, 0.33 ) }
    dend_33 { pt3dadd( 10.2931, 26.2117, -28.8977, 0.67 ) }
    dend_33 { pt3dadd( 11.2949, 28.552, -32.7126, 0.33 ) }
    dend_33 { pt3dadd( 11.7512, 29.8761, -34.7915, 0.33 ) }
    dend_33 { pt3dadd( 11.8332, 30.3334, -35.5057, 0.67 ) }
    dend_33 { pt3dadd( 11.953, 31.9511, -37.941, 0.33 ) }
    dend_33 { pt3dadd( 11.8626, 32.6954, -38.876, 0.67 ) }
    dend_33 { pt3dadd( 11.4833, 34.2684, -40.9222, 0.33 ) }
    dend_33 { pt3dadd( 11.3152, 34.7425, -41.5644, 1.33 ) }
    dend_33 { pt3dadd( 10.3302, 37.0847, -44.9224, 0.33 ) }
    dend_33 { pt3dadd( 10.1216, 37.6393, -45.7965, 1.33 ) }
    dend_33 { pt3dadd( 9.37528, 39.9685, -49.6435, 0.33 ) }
    dend_33 { pt3dadd( 9.02363, 41.3302, -51.919, 2.0 ) }
    dend_33 { pt3dadd( 8.62414, 43.5198, -55.6307, 0.33 ) }
    dend_33 { pt3dadd( 8.57996, 43.8133, -56.1505, 0.67 ) }
    dend_33 { pt3dadd( 8.37418, 46.8299, -61.7044, 0.33 ) }
    dend_33 { pt3dadd( 8.34181, 47.6725, -63.3847, 2.0 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.69551, 5.7972, 7.69558, 0.67 ) }
    dend_29 { pt3dadd( 6.42897, 7.42306, 7.55239, 0.67 ) }
    dend_29 { pt3dadd( 7.27962, 8.22091, 7.48212, 0.33 ) }
    dend_29 { pt3dadd( 9.21281, 10.0341, 7.32242, 1.33 ) }
    dend_29 { pt3dadd( 13.1349, 13.7128, 6.99844, 0.67 ) }
    dend_29 { pt3dadd( 17.1665, 17.4941, 6.6654, 0.67 ) }
    dend_29 { pt3dadd( 18.4114, 18.6617, 6.56257, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 4.69551, 5.7972, 7.69558, 0.67 ) }
    dend_26 { pt3dadd( 4.72719, 8.50518, 9.68641, 0.67 ) }
    dend_26 { pt3dadd( 4.75678, 11.0351, 11.5463, 0.67 ) }
    dend_26 { pt3dadd( 4.78544, 13.485, 13.3474, 0.67 ) }
    dend_26 { pt3dadd( 4.84406, 18.4954, 17.0309, 0.67 ) }
    dend_26 { pt3dadd( 4.87298, 20.9675, 18.8483, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.639207, -13.4983, 6.4864, 3.33 ) }
    dend_6 { pt3dadd( 0.472026, -16.0921, 5.95888, 3.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.639207, -13.4983, 6.4864, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -3.34931, -17.7834, 6.83057, 1.33 ) }
    dend_1 { pt3dadd( -4.93505, -20.2907, 7.03196, 1.33 ) }
    dend_1 { pt3dadd( -5.35055, -20.9477, 7.08472, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 3/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.518467 ) }
    axon_1 { pt3dadd( 4.39217, -56.336, 3.15589, 0.518467 ) }
    axon_1 { pt3dadd( 5.66668, -71.2817, 3.15589, 0.518467 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.34181, 47.6725, -63.3847, 0.33 ) }
    dend_35 { pt3dadd( 8.60009, 49.953, -63.9192, 0.33 ) }
    dend_35 { pt3dadd( 8.78284, 50.5732, -64.1387, 0.67 ) }
    dend_35 { pt3dadd( 9.65084, 53.0243, -65.0712, 0.33 ) }
    dend_35 { pt3dadd( 9.9251, 53.6288, -65.2608, 0.67 ) }
    dend_35 { pt3dadd( 11.2894, 56.4396, -66.0735, 0.33 ) }
    dend_35 { pt3dadd( 11.4226, 56.6973, -66.1396, 0.67 ) }
    dend_35 { pt3dadd( 13.9641, 61.1777, -67.3517, 0.33 ) }
    dend_35 { pt3dadd( 14.3374, 61.714, -67.5658, 1.33 ) }
    dend_35 { pt3dadd( 17.0232, 65.0806, -69.1885, 0.33 ) }
    dend_35 { pt3dadd( 17.2028, 65.2904, -69.3087, 0.67 ) }
    dend_35 { pt3dadd( 18.5197, 66.7794, -70.2226, 0.33 ) }
    dend_35 { pt3dadd( 19.2463, 67.6191, -70.7722, 0.67 ) }
    dend_35 { pt3dadd( 23.479, 72.7153, -74.3846, 0.33 ) }
    dend_35 { pt3dadd( 24.0144, 73.3569, -74.9021, 0.67 ) }
    dend_35 { pt3dadd( 26.7934, 76.6624, -78.0197, 0.33 ) }
    dend_35 { pt3dadd( 27.4619, 77.4027, -78.7649, 1.33 ) }
    dend_35 { pt3dadd( 28.1761, 78.1357, -79.5906, 0.33 ) }
    dend_35 { pt3dadd( 28.5492, 78.4607, -80.0292, 0.67 ) }
    dend_35 { pt3dadd( 31.4174, 80.6824, -83.3057, 0.33 ) }
    dend_35 { pt3dadd( 32.8038, 81.5968, -84.8308, 0.67 ) }
    dend_35 { pt3dadd( 36.4889, 83.7946, -88.7729, 0.33 ) }
    dend_35 { pt3dadd( 38.0691, 84.644, -90.408, 1.33 ) }
    dend_35 { pt3dadd( 43.0236, 87.1056, -95.4131, 0.33 ) }
    dend_35 { pt3dadd( 44.8004, 87.9338, -97.1557, 1.33 ) }
    dend_35 { pt3dadd( 50.2638, 90.3097, -102.223, 0.33 ) }
    dend_35 { pt3dadd( 50.9618, 90.5927, -102.868, 0.67 ) }
    dend_35 { pt3dadd( 52.5823, 91.1911, -104.499, 0.33 ) }
    dend_35 { pt3dadd( 53.677, 91.5182, -105.706, 0.67 ) }
    dend_35 { pt3dadd( 55.7396, 92.0241, -108.04, 0.33 ) }
    dend_35 { pt3dadd( 56.3383, 92.1441, -108.772, 0.67 ) }
    dend_35 { pt3dadd( 59.2017, 92.4843, -112.731, 0.33 ) }
    dend_35 { pt3dadd( 61.1301, 92.6613, -115.544, 0.67 ) }
    dend_35 { pt3dadd( 63.8016, 92.9229, -119.823, 0.33 ) }
    dend_35 { pt3dadd( 66.627, 93.0038, -124.677, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 41/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 8.34181, 47.6725, -63.3847, 0.33 ) }
    dend_34 { pt3dadd( 6.2295, 48.8694, -66.8087, 0.33 ) }
    dend_34 { pt3dadd( 5.65862, 49.2248, -67.8081, 0.67 ) }
    dend_34 { pt3dadd( 3.81699, 50.6181, -72.0454, 0.33 ) }
    dend_34 { pt3dadd( 3.32473, 51.1354, -73.4432, 0.67 ) }
    dend_34 { pt3dadd( 1.73098, 53.0265, -78.3423, 0.33 ) }
    dend_34 { pt3dadd( 1.35287, 53.5227, -79.558, 0.67 ) }
    dend_34 { pt3dadd( 0.322362, 55.1593, -83.531, 0.33 ) }
    dend_34 { pt3dadd( -0.865867, 57.4476, -88.578, 1.33 ) }
    dend_34 { pt3dadd( -1.87848, 59.7939, -93.2059, 0.33 ) }
    dend_34 { pt3dadd( -1.93523, 59.9559, -93.528, 1.33 ) }
    dend_34 { pt3dadd( -2.67066, 62.2042, -97.7705, 0.33 ) }
    dend_34 { pt3dadd( -2.79709, 62.6091, -98.499, 1.33 ) }
    dend_34 { pt3dadd( -3.07285, 63.5993, -100.262, 0.33 ) }
    dend_34 { pt3dadd( -3.12801, 63.8121, -100.587, 0.67 ) }
    dend_34 { pt3dadd( -4.32762, 68.9917, -108.084, 0.33 ) }
    dend_34 { pt3dadd( -4.50702, 69.8974, -109.378, 0.67 ) }
    dend_34 { pt3dadd( -4.7462, 71.2773, -111.331, 0.33 ) }
    dend_34 { pt3dadd( -5.39143, 74.6698, -116.057, 1.33 ) }
    dend_34 { pt3dadd( -6.332, 79.3842, -122.58, 0.33 ) }
    dend_34 { pt3dadd( -6.41001, 79.8799, -123.251, 0.67 ) }
    dend_34 { pt3dadd( -6.84696, 83.8191, -128.257, 0.33 ) }
    dend_34 { pt3dadd( -6.84696, 83.8191, -128.257, 0.67 ) }
    dend_34 { pt3dadd( -7.12504, 87.7705, -133.629, 0.33 ) }
    dend_34 { pt3dadd( -7.24229, 88.9094, -135.122, 1.33 ) }
    dend_34 { pt3dadd( -7.62235, 92.2376, -139.657, 0.33 ) }
    dend_34 { pt3dadd( -7.69884, 92.7524, -140.309, 0.67 ) }
    dend_34 { pt3dadd( -8.43595, 96.6653, -144.723, 0.33 ) }
    dend_34 { pt3dadd( -8.60618, 97.376, -145.48, 0.67 ) }
    dend_34 { pt3dadd( -9.61911, 100.73, -148.807, 0.33 ) }
    dend_34 { pt3dadd( -9.89333, 101.474, -149.501, 1.33 ) }
    dend_34 { pt3dadd( -10.7143, 103.26, -151.033, 0.33 ) }
    dend_34 { pt3dadd( -11.012, 103.856, -151.543, 0.67 ) }
    dend_34 { pt3dadd( -13.0207, 107.501, -154.458, 0.33 ) }
    dend_34 { pt3dadd( -13.8919, 109.134, -155.762, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 18.4114, 18.6617, 6.56257, 0.67 ) }
    dend_31 { pt3dadd( 30.0047, 20.8463, 4.12747, 0.67 ) }
    dend_31 { pt3dadd( 34.3478, 21.9749, 2.92031, 0.67 ) }
    dend_31 { pt3dadd( 39.5584, 23.7451, 1.36522, 0.67 ) }
    dend_31 { pt3dadd( 44.2543, 25.587, -0.0360372, 0.67 ) }
    dend_31 { pt3dadd( 46.4128, 26.493, -0.674047, 0.67 ) }
    dend_31 { pt3dadd( 50.6435, 28.2985, -1.89366, 0.67 ) }
    dend_31 { pt3dadd( 57.75, 31.8224, -3.48452, 0.67 ) }
    dend_31 { pt3dadd( 62.1827, 34.2591, -4.42594, 0.67 ) }
    dend_31 { pt3dadd( 65.4761, 36.2779, -4.94216, 0.33 ) }
    dend_31 { pt3dadd( 66.3134, 36.7911, -5.01599, 0.67 ) }
    dend_31 { pt3dadd( 68.2485, 37.9486, -5.10383, 0.33 ) }
    dend_31 { pt3dadd( 73.5217, 40.9396, -4.99923, 0.67 ) }
    dend_31 { pt3dadd( 75.7173, 42.2552, -4.82668, 0.33 ) }
    dend_31 { pt3dadd( 76.9386, 42.9865, -4.81841, 0.67 ) }
    dend_31 { pt3dadd( 79.373, 44.5124, -5.05533, 0.33 ) }
    dend_31 { pt3dadd( 79.373, 44.5124, -5.05533, 0.67 ) }
    dend_31 { pt3dadd( 83.0358, 46.8771, -6.01304, 0.33 ) }
    dend_31 { pt3dadd( 87.6244, 49.6836, -7.16896, 1.33 ) }
    dend_31 { pt3dadd( 95.241, 54.1105, -8.82681, 0.33 ) }
    dend_31 { pt3dadd( 98.3552, 55.6946, -9.47009, 0.67 ) }
    dend_31 { pt3dadd( 104.801, 58.608, -10.7217, 0.33 ) }
    dend_31 { pt3dadd( 108.911, 60.1745, -11.5711, 1.33 ) }
    dend_31 { pt3dadd( 115.931, 62.2513, -13.0349, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 116.554, 62.3644, -13.162, 0.67 ) }
    dend_31 { pt3dadd( 125.282, 63.0332, -15.2828, 0.33 ) }
    dend_31 { pt3dadd( 127.045, 63.0224, -15.7034, 1.33 ) }
    dend_31 { pt3dadd( 132.229, 62.588, -17.097, 0.33 ) }
    dend_31 { pt3dadd( 134.026, 62.3812, -17.5878, 0.67 ) }
    dend_31 { pt3dadd( 139.274, 61.7664, -19.2866, 0.33 ) }
    dend_31 { pt3dadd( 140.244, 61.6789, -19.5962, 0.67 ) }
    dend_31 { pt3dadd( 144.197, 61.4998, -20.7461, 0.33 ) }
    dend_31 { pt3dadd( 146.154, 61.5211, -21.265, 0.67 ) }
    dend_31 { pt3dadd( 149.302, 61.7727, -21.9701, 0.33 ) }
    dend_31 { pt3dadd( 151.538, 62.0632, -22.386, 1.33 ) }
    dend_31 { pt3dadd( 157.35, 63.0432, -23.2581, 0.33 ) }
    dend_31 { pt3dadd( 159.365, 63.3514, -23.5104, 2.0 ) }
    dend_31 { pt3dadd( 164.333, 64.0852, -24.0297, 0.33 ) }
    dend_31 { pt3dadd( 166.597, 64.3135, -24.1999, 0.67 ) }
    dend_31 { pt3dadd( 172.884, 64.6492, -24.4789, 0.33 ) }
    dend_31 { pt3dadd( 175.217, 64.5965, -24.5004, 0.67 ) }
    dend_31 { pt3dadd( 179.328, 64.2586, -24.3689, 0.33 ) }
    dend_31 { pt3dadd( 180.357, 64.1168, -24.3483, 1.33 ) }
    dend_31 { pt3dadd( 186.318, 62.9219, -24.3017, 0.33 ) }
    dend_31 { pt3dadd( 188.277, 62.4223, -24.3112, 1.33 ) }
    dend_31 { pt3dadd( 193.798, 60.7984, -24.4167, 0.33 ) }
    dend_31 { pt3dadd( 195.974, 60.1491, -24.4553, 1.33 ) }
    dend_31 { pt3dadd( 202.983, 58.1255, -24.5698, 0.33 ) }
    dend_31 { pt3dadd( 205.483, 57.5464, -24.6534, 1.33 ) }
    dend_31 { pt3dadd( 213.262, 56.2894, -25.0021, 0.33 ) }
    dend_31 { pt3dadd( 215.125, 56.1094, -25.1013, 0.67 ) }
    dend_31 { pt3dadd( 217.902, 56.0106, -25.2705, 0.33 ) }
    dend_31 { pt3dadd( 219.182, 56.0108, -25.3545, 0.67 ) }
    dend_31 { pt3dadd( 229.977, 56.5143, -26.7726, 0.33 ) }
    dend_31 { pt3dadd( 232.225, 56.6849, -27.1847, 1.33 ) }
    dend_31 { pt3dadd( 237.1, 57.1541, -28.4741, 0.33 ) }
    dend_31 { pt3dadd( 239.276, 57.3121, -29.2231, 0.67 ) }
    dend_31 { pt3dadd( 243.946, 57.5083, -31.1478, 0.33 ) }
    dend_31 { pt3dadd( 250.051, 57.467, -33.9994, 1.33 ) }
    dend_31 { pt3dadd( 253.721, 57.2571, -35.8736, 0.33 ) }
    dend_31 { pt3dadd( 256.643, 57.0566, -37.3614, 1.33 ) }
    dend_31 { pt3dadd( 262.689, 56.8413, -40.1981, 0.33 ) }
    dend_31 { pt3dadd( 263.538, 56.8435, -40.5395, 0.67 ) }
    dend_31 { pt3dadd( 266.707, 56.9707, -41.502, 1.33 ) }
    dend_31 { pt3dadd( 271.788, 57.3704, -42.2201, 0.33 ) }
    dend_31 { pt3dadd( 273.224, 57.5317, -42.2942, 0.67 ) }
    dend_31 { pt3dadd( 279.951, 58.4929, -41.8382, 0.33 ) }
    dend_31 { pt3dadd( 281.55, 58.7835, -41.6034, 0.67 ) }
    dend_31 { pt3dadd( 284.63, 59.4437, -41.0717, 0.33 ) }
    dend_31 { pt3dadd( 288.559, 60.4918, -40.1356, 1.33 ) }
    dend_31 { pt3dadd( 292.76, 61.7671, -38.8777, 0.33 ) }
    dend_31 { pt3dadd( 295.402, 62.7034, -37.7802, 1.33 ) }
    dend_31 { pt3dadd( 299.593, 64.6343, -35.3719, 0.33 ) }
    dend_31 { pt3dadd( 300.921, 65.5173, -34.3539, 1.33 ) }
    dend_31 { pt3dadd( 303.536, 67.926, -31.879, 0.33 ) }
    dend_31 { pt3dadd( 303.987, 68.4814, -31.3336, 0.67 ) }
    dend_31 { pt3dadd( 305.994, 71.6719, -28.2626, 0.33 ) }
    dend_31 { pt3dadd( 306.43, 72.5499, -27.3859, 1.33 ) }
    dend_31 { pt3dadd( 308.462, 78.0247, -21.4387, 0.33 ) }
    dend_31 { pt3dadd( 308.89, 79.2315, -20.1002, 0.67 ) }
    dend_31 { pt3dadd( 309.829, 82.1066, -16.9517, 0.33 ) }
    dend_31 { pt3dadd( 310.05, 82.7666, -16.2175, 0.67 ) }
    dend_31 { pt3dadd( 311.051, 85.7064, -12.9892, 0.33 ) }
    dend_31 { pt3dadd( 311.539, 87.4222, -10.8867, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 60/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 18.4114, 18.6617, 6.56257, 0.33 ) }
    dend_30 { pt3dadd( 19.5881, 20.7724, 7.49987, 0.33 ) }
    dend_30 { pt3dadd( 21.8725, 24.0937, 9.20135, 0.67 ) }
    dend_30 { pt3dadd( 24.3587, 27.8034, 11.0958, 0.67 ) }
    dend_30 { pt3dadd( 25.4456, 29.4183, 11.8962, 0.67 ) }
    dend_30 { pt3dadd( 28.2448, 33.4245, 13.8923, 0.67 ) }
    dend_30 { pt3dadd( 31.0158, 37.2319, 15.7137, 0.67 ) }
    dend_30 { pt3dadd( 34.8569, 41.9897, 18.091, 0.67 ) }
    dend_30 { pt3dadd( 36.7127, 44.1519, 19.202, 0.67 ) }
    dend_30 { pt3dadd( 38.769, 46.7183, 20.4932, 0.67 ) }
    dend_30 { pt3dadd( 39.9478, 48.2375, 21.3161, 0.67 ) }
    dend_30 { pt3dadd( 42.3618, 51.2687, 22.8566, 0.67 ) }
    dend_30 { pt3dadd( 45.2912, 54.6991, 24.3977, 0.67 ) }
    dend_30 { pt3dadd( 47.6601, 57.5836, 25.5908, 0.67 ) }
    dend_30 { pt3dadd( 51.0496, 61.7406, 27.2088, 0.67 ) }
    dend_30 { pt3dadd( 52.4884, 63.7374, 27.9359, 0.67 ) }
    dend_30 { pt3dadd( 55.2463, 67.7784, 29.4972, 0.67 ) }
    dend_30 { pt3dadd( 56.258, 69.2233, 30.0857, 0.67 ) }
    dend_30 { pt3dadd( 59.0987, 72.957, 31.8069, 0.67 ) }
    dend_30 { pt3dadd( 60.3884, 74.4625, 32.7135, 0.67 ) }
    dend_30 { pt3dadd( 63.2188, 77.3035, 35.0578, 0.67 ) }
    dend_30 { pt3dadd( 66.1583, 80.0227, 37.7181, 0.67 ) }
    dend_30 { pt3dadd( 68.6848, 82.3879, 40.3867, 0.67 ) }
    dend_30 { pt3dadd( 71.7515, 84.9595, 43.6894, 0.67 ) }
    dend_30 { pt3dadd( 74.4708, 86.6972, 46.5374, 0.67 ) }
    dend_30 { pt3dadd( 76.1504, 87.5535, 48.2654, 0.33 ) }
    dend_30 { pt3dadd( 78.2688, 88.3193, 50.3708, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.87298, 20.9675, 18.8483, 0.67 ) }
    dend_28 { pt3dadd( 5.39277, 25.1164, 20.5421, 0.67 ) }
    dend_28 { pt3dadd( 5.95195, 29.0877, 22.5897, 0.67 ) }
    dend_28 { pt3dadd( 6.41577, 31.0443, 23.7219, 0.67 ) }
    dend_28 { pt3dadd( 6.8345, 32.6041, 24.6149, 0.67 ) }
    dend_28 { pt3dadd( 7.7808, 35.7967, 26.5265, 0.67 ) }
    dend_28 { pt3dadd( 8.86095, 39.1859, 28.5718, 0.67 ) }
    dend_28 { pt3dadd( 9.93562, 42.5751, 30.6993, 0.67 ) }
    dend_28 { pt3dadd( 11.0082, 45.7145, 32.5597, 0.67 ) }
    dend_28 { pt3dadd( 12.3903, 49.8012, 35.0362, 0.67 ) }
    dend_28 { pt3dadd( 12.9496, 51.6493, 36.2372, 0.33 ) }
    dend_28 { pt3dadd( 13.2712, 52.6569, 36.9435, 0.67 ) }
    dend_28 { pt3dadd( 13.6683, 53.8868, 37.722, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 14.4464, 56.4013, 39.1769, 0.67 ) }
    dend_28 { pt3dadd( 14.9086, 57.8516, 40.0064, 1.33 ) }
    dend_28 { pt3dadd( 15.9177, 60.6882, 41.5939, 0.67 ) }
    dend_28 { pt3dadd( 17.9768, 66.219, 44.4896, 0.67 ) }
    dend_28 { pt3dadd( 19.6125, 70.538, 46.6482, 0.67 ) }
    dend_28 { pt3dadd( 20.9834, 74.0325, 48.2437, 0.67 ) }
    dend_28 { pt3dadd( 21.6482, 75.669, 48.8828, 0.67 ) }
    dend_28 { pt3dadd( 22.2517, 77.1689, 49.3788, 0.67 ) }
    dend_28 { pt3dadd( 22.7377, 78.4572, 49.7254, 1.33 ) }
    dend_28 { pt3dadd( 23.4491, 80.7191, 50.2376, 0.33 ) }
    dend_28 { pt3dadd( 24.1693, 83.073, 50.7551, 1.33 ) }
    dend_28 { pt3dadd( 24.4972, 84.7846, 51.0364, 0.33 ) }
    dend_28 { pt3dadd( 24.7618, 86.9911, 51.3872, 1.33 ) }
    dend_28 { pt3dadd( 25.0071, 90.9252, 51.9681, 0.67 ) }
    dend_28 { pt3dadd( 25.0554, 92.6892, 52.2459, 0.33 ) }
    dend_28 { pt3dadd( 25.0604, 93.56, 52.3843, 0.33 ) }
    dend_28 { pt3dadd( 25.0002, 98.8934, 53.2458, 0.67 ) }
    dend_28 { pt3dadd( 24.9646, 100.499, 53.4935, 0.33 ) }
    dend_28 { pt3dadd( 24.9106, 102.827, 53.9379, 0.67 ) }
    dend_28 { pt3dadd( 24.9216, 104.991, 54.3959, 0.67 ) }
    dend_28 { pt3dadd( 25.0335, 106.886, 54.8813, 0.67 ) }
    dend_28 { pt3dadd( 25.2069, 108.077, 55.2533, 0.67 ) }
    dend_28 { pt3dadd( 25.5685, 109.07, 55.6973, 0.67 ) }
    dend_28 { pt3dadd( 26.8656, 111.812, 57.1455, 0.33 ) }
    dend_28 { pt3dadd( 27.4123, 112.721, 57.7292, 0.33 ) }
    dend_28 { pt3dadd( 28.0471, 113.713, 58.4197, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.87298, 20.9675, 18.8483, 0.67 ) }
    dend_27 { pt3dadd( 4.12819, 23.2112, 20.1066, 0.67 ) }
    dend_27 { pt3dadd( 3.35368, 25.7476, 22.0965, 0.67 ) }
    dend_27 { pt3dadd( 2.63553, 28.2137, 24.4148, 0.67 ) }
    dend_27 { pt3dadd( 2.24973, 29.7328, 25.9244, 0.67 ) }
    dend_27 { pt3dadd( 2.01666, 31.8825, 27.9864, 0.67 ) }
    dend_27 { pt3dadd( 2.00155, 34.1083, 30.204, 0.67 ) }
    dend_27 { pt3dadd( 2.10951, 37.4349, 33.6918, 0.67 ) }
    dend_27 { pt3dadd( 2.15992, 39.3736, 35.8662, 0.67 ) }
    dend_27 { pt3dadd( 2.26002, 41.0702, 37.7841, 0.67 ) }
    dend_27 { pt3dadd( 2.56539, 44.3075, 41.2599, 0.67 ) }
    dend_27 { pt3dadd( 2.76782, 46.6484, 43.7452, 0.67 ) }
    dend_27 { pt3dadd( 2.79436, 48.5338, 45.6588, 0.67 ) }
    dend_27 { pt3dadd( 2.72406, 50.0336, 46.9783, 0.67 ) }
    dend_27 { pt3dadd( 2.39033, 54.6104, 50.516, 0.67 ) }
    dend_27 { pt3dadd( 2.03727, 58.2402, 52.9156, 0.67 ) }
    dend_27 { pt3dadd( 1.58305, 61.0807, 54.7213, 0.67 ) }
    dend_27 { pt3dadd( 1.29526, 63.176, 55.8988, 0.67 ) }
    dend_27 { pt3dadd( 1.00539, 67.3909, 58.1545, 0.33 ) }
    dend_27 { pt3dadd( 0.941147, 68.5162, 58.6834, 0.67 ) }
    dend_27 { pt3dadd( 0.76386, 71.256, 59.0255, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.472026, -16.0921, 5.95888, 1.33 ) }
    dend_16 { pt3dadd( 0.828233, -18.7235, 7.68628, 1.33 ) }
    dend_16 { pt3dadd( 1.23804, -21.7508, 9.6736, 1.33 ) }
    dend_16 { pt3dadd( 1.72149, -25.3221, 12.018, 1.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.472026, -16.0921, 5.95888, 0.67 ) }
    dend_7 { pt3dadd( 0.656097, -18.0249, 3.71417, 0.67 ) }
    dend_7 { pt3dadd( 1.2708, -21.1277, 0.478212, 0.67 ) }
    dend_7 { pt3dadd( 1.98929, -24.0665, -2.62797, 0.67 ) }
    dend_7 { pt3dadd( 3.4232, -29.9316, -8.8271, 0.67 ) }
    dend_7 { pt3dadd( 4.12257, -32.7921, -11.8506, 0.67 ) }
    dend_7 { pt3dadd( 4.72895, -35.2724, -14.4722, 0.67 ) }
    dend_7 { pt3dadd( 5.56352, -39.4758, -18.9343, 0.67 ) }
    dend_7 { pt3dadd( 6.12055, -41.7085, -21.2652, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.35055, -20.9477, 7.08472, 0.67 ) }
    dend_3 { pt3dadd( -6.72783, -27.1508, 8.50793, 0.67 ) }
    dend_3 { pt3dadd( -7.14629, -29.0355, 8.94034, 0.67 ) }
    dend_3 { pt3dadd( -8.00212, -32.89, 9.82471, 1.33 ) }
    dend_3 { pt3dadd( -9.36218, -39.0156, 11.2301, 0.67 ) }
    dend_3 { pt3dadd( -9.65627, -40.3402, 11.534, 0.67 ) }
    dend_3 { pt3dadd( -10.2466, -42.9992, 12.1441, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 67/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.35055, -20.9477, 7.08472, 0.67 ) }
    dend_2 { pt3dadd( -5.89017, -21.2609, 8.59039, 0.67 ) }
    dend_2 { pt3dadd( -6.89333, -21.7193, 11.5334, 0.67 ) }
    dend_2 { pt3dadd( -7.50883, -21.9272, 13.311, 0.67 ) }
    dend_2 { pt3dadd( -10.2578, -22.6629, 20.8421, 0.67 ) }
    dend_2 { pt3dadd( -11.7117, -23.057, 24.5073, 0.67 ) }
    dend_2 { pt3dadd( -12.9018, -23.3754, 27.4145, 0.67 ) }
    dend_2 { pt3dadd( -14.119, -23.5522, 30.4925, 0.33 ) }
    dend_2 { pt3dadd( -15.1408, -23.5795, 33.1203, 0.67 ) }
    dend_2 { pt3dadd( -15.6273, -23.576, 34.306, 0.33 ) }
    dend_2 { pt3dadd( -16.7014, -23.4755, 36.2864, 0.67 ) }
    dend_2 { pt3dadd( -17.9328, -23.5006, 38.7844, 0.67 ) }
    dend_2 { pt3dadd( -19.6015, -23.4275, 41.9207, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.72149, -25.3221, 12.018, 1.33 ) }
    dend_18 { pt3dadd( 0.140593, -29.3067, 11.9694, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 82/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.72149, -25.3221, 12.018, 0.67 ) }
    dend_17 { pt3dadd( 2.44362, -24.772, 15.5882, 0.67 ) }
    dend_17 { pt3dadd( 2.87191, -23.0408, 21.1183, 0.67 ) }
    dend_17 { pt3dadd( 2.79699, -22.1351, 23.6606, 0.67 ) }
    dend_17 { pt3dadd( 2.10242, -20.4814, 28.3085, 0.67 ) }
    dend_17 { pt3dadd( 1.98553, -20.2094, 28.9469, 0.67 ) }
    dend_17 { pt3dadd( 1.53363, -19.1767, 30.9967, 0.67 ) }
    dend_17 { pt3dadd( 0.497325, -16.872, 34.4438, 0.67 ) }
    dend_17 { pt3dadd( 0.0931704, -15.7813, 35.7515, 0.67 ) }
    dend_17 { pt3dadd( -0.698382, -13.0666, 38.8808, 0.67 ) }
    dend_17 { pt3dadd( -1.30451, -10.9098, 41.0828, 0.67 ) }
    dend_17 { pt3dadd( -1.41233, -9.49723, 42.4477, 0.67 ) }
    dend_17 { pt3dadd( -1.31507, -6.79943, 44.953, 0.67 ) }
    dend_17 { pt3dadd( -1.02543, -5.13296, 46.4038, 0.67 ) }
    dend_17 { pt3dadd( -0.69112, -3.80748, 47.4671, 0.67 ) }
    dend_17 { pt3dadd( -0.106323, -2.12467, 48.6668, 0.67 ) }
    dend_17 { pt3dadd( 1.63895, 1.97378, 52.0243, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 99/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.12055, -41.7085, -21.2652, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 5.13893, -44.1647, -23.3576, 0.33 ) }
    dend_11 { pt3dadd( 4.87247, -44.8314, -23.9256, 1.33 ) }
    dend_11 { pt3dadd( 3.39146, -48.5372, -27.0824, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 3/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.12055, -41.7085, -21.2652, 0.33 ) }
    dend_8 { pt3dadd( 8.40722, -42.8725, -26.6462, 0.33 ) }
    dend_8 { pt3dadd( 8.56705, -42.9357, -27.0045, 0.67 ) }
    dend_8 { pt3dadd( 9.59356, -43.2258, -29.1586, 0.33 ) }
    dend_8 { pt3dadd( 10.5057, -43.3915, -30.9142, 1.33 ) }
    dend_8 { pt3dadd( 13.4831, -43.7727, -36.6279, 0.67 ) }
    dend_8 { pt3dadd( 16.364, -43.9532, -41.8715, 0.33 ) }
    dend_8 { pt3dadd( 17.2178, -43.9247, -43.3333, 0.33 ) }
    dend_8 { pt3dadd( 18.0614, -43.8614, -44.8109, 0.67 ) }
    dend_8 { pt3dadd( 19.3544, -43.7365, -47.1272, 0.33 ) }
    dend_8 { pt3dadd( 21.0984, -43.6807, -50.1004, 1.33 ) }
    dend_8 { pt3dadd( 22.5363, -43.7164, -52.3804, 0.33 ) }
    dend_8 { pt3dadd( 24.0213, -43.9118, -54.6278, 1.33 ) }
    dend_8 { pt3dadd( 26.5847, -44.443, -58.4661, 0.33 ) }
    dend_8 { pt3dadd( 27.0438, -44.5758, -59.2195, 0.67 ) }
    dend_8 { pt3dadd( 31.3291, -46.1129, -66.5714, 0.33 ) }
    dend_8 { pt3dadd( 32.2582, -46.5144, -68.2451, 2.0 ) }
    dend_8 { pt3dadd( 35.7793, -48.3537, -75.0439, 0.33 ) }
    dend_8 { pt3dadd( 36.1528, -48.5832, -75.8259, 1.33 ) }
    dend_8 { pt3dadd( 38.6542, -50.4663, -81.9837, 0.33 ) }
    dend_8 { pt3dadd( 38.9518, -50.71, -82.7904, 0.67 ) }
    dend_8 { pt3dadd( 40.0171, -51.8613, -86.4461, 0.33 ) }
    dend_8 { pt3dadd( 40.3537, -52.3511, -87.9187, 1.33 ) }
    dend_8 { pt3dadd( 41.0557, -54.5603, -93.8259, 0.33 ) }
    dend_8 { pt3dadd( 41.3612, -55.5653, -96.4792, 1.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.2466, -42.9992, 12.1441, 0.67 ) }
    dend_5 { pt3dadd( -10.0199, -45.8083, 12.815, 0.67 ) }
    dend_5 { pt3dadd( -10.1572, -48.0372, 13.2983, 0.67 ) }
    dend_5 { pt3dadd( -10.3217, -49.4921, 13.5951, 0.67 ) }
    dend_5 { pt3dadd( -11.0432, -54.3998, 14.5253, 0.67 ) }
    dend_5 { pt3dadd( -12.7237, -63.2136, 16.1983, 0.67 ) }
    dend_5 { pt3dadd( -14.2855, -69.4634, 17.3681, 0.67 ) }
    dend_5 { pt3dadd( -16.2365, -76.0522, 18.6071, 0.67 ) }
    dend_5 { pt3dadd( -18.8923, -84.2573, 20.2212, 0.67 ) }
    dend_5 { pt3dadd( -19.9011, -86.9688, 20.744, 0.67 ) }
    dend_5 { pt3dadd( -21.4794, -90.1493, 21.3256, 0.67 ) }
    dend_5 { pt3dadd( -25.3188, -96.2368, 22.4643, 0.67 ) }
    dend_5 { pt3dadd( -27.1122, -98.739, 22.9463, 0.67 ) }
    dend_5 { pt3dadd( -30.2674, -102.885, 23.7874, 0.67 ) }
    dend_5 { pt3dadd( -31.5045, -104.406, 24.1251, 0.67 ) }
    dend_5 { pt3dadd( -37.6727, -112.304, 25.9577, 0.67 ) }
    dend_5 { pt3dadd( -41.6048, -117.514, 27.1783, 0.67 ) }
    dend_5 { pt3dadd( -44.668, -121.74, 28.188, 0.67 ) }
    dend_5 { pt3dadd( -48.2004, -126.671, 29.3659, 0.67 ) }
    dend_5 { pt3dadd( -50.9051, -130.567, 30.331, 0.67 ) }
    dend_5 { pt3dadd( -52.2795, -132.736, 31.0383, 0.67 ) }
    dend_5 { pt3dadd( -53.8096, -135.518, 32.1615, 0.67 ) }
    dend_5 { pt3dadd( -55.3386, -138.25, 33.4496, 0.67 ) }
    dend_5 { pt3dadd( -56.436, -139.985, 34.3585, 0.67 ) }
    dend_5 { pt3dadd( -58.6208, -142.876, 35.9538, 0.67 ) }
    dend_5 { pt3dadd( -62.467, -146.876, 38.5531, 0.67 ) }
    dend_5 { pt3dadd( -64.3349, -148.593, 39.7819, 0.67 ) }
    dend_5 { pt3dadd( -66.5213, -150.398, 41.2054, 0.67 ) }
    dend_5 { pt3dadd( -69.0405, -152.17, 42.756, 0.67 ) }
    dend_5 { pt3dadd( -71.5927, -153.833, 44.2368, 0.33 ) }
    dend_5 { pt3dadd( -75.3385, -155.87, 45.9563, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.2466, -42.9992, 12.1441, 0.67 ) }
    dend_4 { pt3dadd( -11.7507, -44.8077, 9.22552, 0.67 ) }
    dend_4 { pt3dadd( -13.4609, -47.0878, 5.44229, 0.67 ) }
    dend_4 { pt3dadd( -15.2029, -49.4317, 1.47835, 0.67 ) }
    dend_4 { pt3dadd( -18.9088, -54.0235, -6.27249, 0.67 ) }
    dend_4 { pt3dadd( -20.7552, -56.1311, -9.89083, 0.67 ) }
    dend_4 { pt3dadd( -21.854, -57.312, -11.8916, 0.67 ) }
    dend_4 { pt3dadd( -23.2263, -58.8372, -14.4448, 0.33 ) }
    dend_4 { pt3dadd( -24.1337, -59.8457, -16.2033, 1.33 ) }
    dend_4 { pt3dadd( -25.5838, -61.3181, -18.6957, 0.33 ) }
    dend_4 { pt3dadd( -27.2073, -62.8244, -20.9743, 0.67 ) }
    dend_4 { pt3dadd( -28.8754, -64.3501, -23.1364, 0.33 ) }
    dend_4 { pt3dadd( -30.8399, -66.3816, -25.9619, 0.67 ) }
    dend_4 { pt3dadd( -32.2307, -67.9097, -28.0523, 0.33 ) }
    dend_4 { pt3dadd( -33.2061, -69.1611, -29.7257, 0.67 ) }
    dend_4 { pt3dadd( -35.5963, -72.7473, -34.4112, 0.33 ) }
    dend_4 { pt3dadd( -36.6087, -74.6319, -36.8066, 1.33 ) }
    dend_4 { pt3dadd( -38.3306, -77.7149, -40.5797, 0.33 ) }
    dend_4 { pt3dadd( -38.5029, -78.0197, -40.9555, 0.67 ) }
    dend_4 { pt3dadd( -39.3348, -79.5535, -42.9092, 0.33 ) }
    dend_4 { pt3dadd( -39.5468, -80.0063, -43.5543, 0.67 ) }
    dend_4 { pt3dadd( -41.4506, -84.0701, -49.7817, 0.33 ) }
    dend_4 { pt3dadd( -42.2813, -86.1751, -53.4149, 2.0 ) }
    dend_4 { pt3dadd( -43.5611, -89.4598, -59.5673, 0.33 ) }
    dend_4 { pt3dadd( -44.0222, -90.5941, -61.804, 1.33 ) }
    dend_4 { pt3dadd( -45.2925, -93.4729, -67.8634, 0.33 ) }
    dend_4 { pt3dadd( -45.3721, -93.6164, -68.1777, 0.67 ) }
    dend_4 { pt3dadd( -46.1958, -94.8271, -71.0487, 0.33 ) }
    dend_4 { pt3dadd( -46.4091, -95.0956, -71.6928, 0.67 ) }
    dend_4 { pt3dadd( -48.2876, -96.7881, -75.5017, 0.33 ) }
    dend_4 { pt3dadd( -49.1933, -97.5097, -76.9781, 1.33 ) }
    dend_4 { pt3dadd( -50.8663, -98.6962, -79.1884, 0.33 ) }
    dend_4 { pt3dadd( -53.682, -100.793, -82.6778, 1.33 ) }
    dend_4 { pt3dadd( -56.2836, -102.803, -85.6653, 0.33 ) }
    dend_4 { pt3dadd( -56.954, -103.388, -86.421, 0.67 ) }
    dend_4 { pt3dadd( -58.7285, -105.094, -88.3866, 0.33 ) }
    dend_4 { pt3dadd( -59.1493, -105.535, -88.7981, 0.67 ) }
    dend_4 { pt3dadd( -62.1157, -108.831, -91.3452, 0.33 ) }
    dend_4 { pt3dadd( -62.9792, -109.875, -92.064, 0.67 ) }
    dend_4 { pt3dadd( -65.0399, -112.608, -93.9339, 0.33 ) }
    dend_4 { pt3dadd( -65.6379, -113.402, -94.5007, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -69.414, -118.349, -98.1456, 0.33 ) }
    dend_4 { pt3dadd( -69.5944, -118.596, -98.3421, 0.67 ) }
    dend_4 { pt3dadd( -71.751, -121.589, -100.934, 0.33 ) }
    dend_4 { pt3dadd( -72.4522, -122.578, -101.807, 1.33 ) }
    dend_4 { pt3dadd( -74.1535, -125.041, -104.006, 0.33 ) }
    dend_4 { pt3dadd( -75.2063, -126.612, -105.344, 1.33 ) }
    dend_4 { pt3dadd( -78.2497, -131.227, -109.123, 0.33 ) }
    dend_4 { pt3dadd( -78.8669, -132.142, -109.802, 1.33 ) }
    dend_4 { pt3dadd( -80.3038, -134.172, -111.139, 0.33 ) }
    dend_4 { pt3dadd( -80.6902, -134.679, -111.471, 0.67 ) }
    dend_4 { pt3dadd( -82.7134, -137.182, -113.09, 0.33 ) }
    dend_4 { pt3dadd( -83.1887, -137.747, -113.433, 0.67 ) }
    dend_4 { pt3dadd( -85.0523, -139.931, -114.615, 0.33 ) }
    dend_4 { pt3dadd( -85.9932, -141.337, -115.289, 1.33 ) }
    dend_4 { pt3dadd( -89.3963, -147.637, -118.041, 0.33 ) }
    dend_4 { pt3dadd( -89.6889, -148.337, -118.31, 0.67 ) }
    dend_4 { pt3dadd( -90.8466, -152.401, -119.619, 0.33 ) }
    dend_4 { pt3dadd( -91.0869, -153.903, -120.004, 0.67 ) }
    dend_4 { pt3dadd( -91.1223, -160.447, -121.187, 0.33 ) }
    dend_4 { pt3dadd( -91.0472, -160.797, -121.225, 1.33 ) }
    dend_4 { pt3dadd( -90.3286, -162.387, -121.277, 0.33 ) }
    dend_4 { pt3dadd( -90.1113, -162.823, -121.273, 0.67 ) }
    dend_4 { pt3dadd( -89.3917, -164.126, -121.214, 0.33 ) }
    dend_4 { pt3dadd( -89.1643, -164.556, -121.196, 0.67 ) }
    dend_4 { pt3dadd( -87.2418, -168.61, -120.927, 0.33 ) }
    dend_4 { pt3dadd( -86.7947, -169.544, -120.873, 1.33 ) }
    dend_4 { pt3dadd( -84.3004, -174.747, -120.633, 0.33 ) }
    dend_4 { pt3dadd( -84.1624, -175.056, -120.623, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 28/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.140593, -29.3067, 11.9694, 0.67 ) }
    dend_24 { pt3dadd( -1.08983, -34.7693, 12.0389, 0.67 ) }
    dend_24 { pt3dadd( -1.50535, -36.2375, 12.1131, 0.67 ) }
    dend_24 { pt3dadd( -2.42751, -38.7147, 12.2277, 0.67 ) }
    dend_24 { pt3dadd( -3.7799, -42.3477, 12.3958, 0.67 ) }
    dend_24 { pt3dadd( -5.20391, -46.173, 12.5729, 0.67 ) }
    dend_24 { pt3dadd( -6.10668, -48.5982, 12.6851, 0.67 ) }
    dend_24 { pt3dadd( -8.3562, -53.7915, 13.334, 0.67 ) }
    dend_24 { pt3dadd( -11.9532, -61.8088, 14.2795, 0.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.140593, -29.3067, 11.9694, 0.67 ) }
    dend_19 { pt3dadd( 2.09348, -31.5726, 12.9411, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.39146, -48.5372, -27.0824, 0.33 ) }
    dend_15 { pt3dadd( 4.7733, -50.3473, -28.5581, 0.33 ) }
    dend_15 { pt3dadd( 5.18019, -50.8346, -29.1813, 0.67 ) }
    dend_15 { pt3dadd( 6.09724, -51.9134, -30.5857, 0.33 ) }
    dend_15 { pt3dadd( 6.41173, -52.2677, -31.1017, 0.67 ) }
    dend_15 { pt3dadd( 7.45258, -53.3821, -32.7963, 0.33 ) }
    dend_15 { pt3dadd( 10.2382, -56.1262, -37.4189, 1.33 ) }
    dend_15 { pt3dadd( 12.8651, -58.4464, -42.2165, 0.33 ) }
    dend_15 { pt3dadd( 13.4696, -58.9164, -43.3234, 1.33 ) }
    dend_15 { pt3dadd( 15.4652, -60.3063, -46.9907, 0.33 ) }
    dend_15 { pt3dadd( 15.8818, -60.5434, -47.8067, 0.67 ) }
    dend_15 { pt3dadd( 17.9094, -61.4343, -52.2229, 0.33 ) }
    dend_15 { pt3dadd( 18.9351, -61.748, -54.4784, 2.0 ) }
    dend_15 { pt3dadd( 19.7936, -61.9091, -56.5656, 0.33 ) }
    dend_15 { pt3dadd( 20.0679, -61.9634, -57.3824, 0.67 ) }
    dend_15 { pt3dadd( 21.997, -62.4161, -63.9952, 0.33 ) }
    dend_15 { pt3dadd( 23.0997, -62.8266, -68.1602, 1.33 ) }
    dend_15 { pt3dadd( 23.5954, -63.0771, -70.2239, 0.33 ) }
    dend_15 { pt3dadd( 23.8552, -63.2542, -71.369, 2.0 ) }
    dend_15 { pt3dadd( 26.0202, -65.1671, -81.7844, 0.33 ) }
    dend_15 { pt3dadd( 26.1843, -65.3686, -82.7244, 2.0 ) }
    dend_15 { pt3dadd( 26.7659, -66.2847, -86.2975, 0.33 ) }
    dend_15 { pt3dadd( 27.0071, -66.8135, -88.0475, 0.67 ) }
    dend_15 { pt3dadd( 27.3712, -67.9335, -91.3893, 0.33 ) }
    dend_15 { pt3dadd( 27.5345, -68.3274, -92.4226, 1.33 ) }
    dend_15 { pt3dadd( 29.9765, -73.0839, -102.992, 0.33 ) }
    dend_15 { pt3dadd( 30.7606, -74.2369, -105.411, 0.67 ) }
    dend_15 { pt3dadd( 31.951, -75.6043, -108.091, 0.33 ) }
    dend_15 { pt3dadd( 32.1617, -75.8038, -108.433, 0.67 ) }
    dend_15 { pt3dadd( 36.0326, -78.8203, -113.091, 0.33 ) }
    dend_15 { pt3dadd( 37.0657, -79.5056, -114.029, 0.67 ) }
    dend_15 { pt3dadd( 39.8362, -81.113, -115.716, 0.33 ) }
    dend_15 { pt3dadd( 40.3846, -81.432, -116.018, 0.67 ) }
    dend_15 { pt3dadd( 44.931, -83.9979, -118.475, 0.33 ) }
    dend_15 { pt3dadd( 45.7144, -84.4846, -118.725, 1.33 ) }
    dend_15 { pt3dadd( 48.228, -86.1931, -118.907, 0.33 ) }
    dend_15 { pt3dadd( 48.5914, -86.4426, -118.82, 0.67 ) }
    dend_15 { pt3dadd( 53.4254, -89.8254, -116.733, 0.33 ) }
    dend_15 { pt3dadd( 55.4028, -91.1875, -115.642, 0.67 ) }
    dend_15 { pt3dadd( 61.5825, -95.3498, -111.232, 0.33 ) }
    dend_15 { pt3dadd( 62.068, -95.6843, -110.837, 0.67 ) }
    dend_15 { pt3dadd( 67.1631, -99.2446, -105.918, 0.33 ) }
    dend_15 { pt3dadd( 67.3568, -99.3787, -105.708, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.39146, -48.5372, -27.0824, 0.33 ) }
    dend_12 { pt3dadd( 4.32649, -52.8794, -26.5361, 0.33 ) }
    dend_12 { pt3dadd( 4.71552, -54.43, -26.3961, 0.67 ) }
    dend_12 { pt3dadd( 6.09487, -59.5089, -26.025, 0.33 ) }
    dend_12 { pt3dadd( 6.59029, -61.2433, -25.9237, 0.67 ) }
    dend_12 { pt3dadd( 7.15334, -63.3057, -25.8192, 0.33 ) }
    dend_12 { pt3dadd( 7.7659, -65.7575, -25.716, 1.33 ) }
    dend_12 { pt3dadd( 8.75878, -69.7775, -25.6103, 0.33 ) }
    dend_12 { pt3dadd( 8.88909, -70.3368, -25.6072, 0.67 ) }
    dend_12 { pt3dadd( 9.34052, -72.4295, -25.6532, 0.33 ) }
    dend_12 { pt3dadd( 9.84946, -74.8101, -25.6997, 1.33 ) }
    dend_12 { pt3dadd( 10.7807, -79.5957, -26.0921, 0.33 ) }
    dend_12 { pt3dadd( 11.016, -80.8317, -26.2716, 0.67 ) }
    dend_12 { pt3dadd( 11.551, -83.6338, -26.8173, 0.33 ) }
    dend_12 { pt3dadd( 11.8558, -84.9969, -27.2315, 0.67 ) }
    dend_12 { pt3dadd( 12.5977, -87.9424, -28.3747, 0.33 ) }
    dend_12 { pt3dadd( 13.795, -91.6539, -30.1041, 0.67 ) }
    dend_12 { pt3dadd( 15.3095, -95.7232, -32.3823, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 15.9394, -97.1922, -33.2622, 1.33 ) }
    dend_12 { pt3dadd( 18.682, -102.86, -36.8734, 0.33 ) }
    dend_12 { pt3dadd( 18.8606, -103.192, -37.0843, 0.67 ) }
    dend_12 { pt3dadd( 20.2742, -105.535, -38.5317, 0.33 ) }
    dend_12 { pt3dadd( 21.5513, -107.388, -39.5157, 2.0 ) }
    dend_12 { pt3dadd( 23.4903, -109.935, -40.9627, 0.33 ) }
    dend_12 { pt3dadd( 23.7225, -110.233, -41.1112, 0.67 ) }
    dend_12 { pt3dadd( 25.1888, -112.214, -41.9743, 0.33 ) }
    dend_12 { pt3dadd( 25.4588, -112.671, -42.1851, 0.67 ) }
    dend_12 { pt3dadd( 26.7058, -115.319, -43.3993, 0.33 ) }
    dend_12 { pt3dadd( 27.2654, -116.714, -43.9918, 0.67 ) }
    dend_12 { pt3dadd( 28.3867, -120.142, -45.2135, 0.33 ) }
    dend_12 { pt3dadd( 29.195, -122.756, -45.9555, 1.33 ) }
    dend_12 { pt3dadd( 30.8914, -128.663, -47.3151, 0.33 ) }
    dend_12 { pt3dadd( 31.1282, -129.432, -47.4432, 0.67 ) }
    dend_12 { pt3dadd( 32.2024, -132.674, -47.7865, 0.33 ) }
    dend_12 { pt3dadd( 33.5134, -136.147, -47.9139, 1.33 ) }
    dend_12 { pt3dadd( 35.0995, -139.855, -47.8116, 0.33 ) }
    dend_12 { pt3dadd( 35.4498, -140.562, -47.7471, 0.67 ) }
    dend_12 { pt3dadd( 37.2652, -143.826, -47.3348, 0.33 ) }
    dend_12 { pt3dadd( 37.735, -144.606, -47.2771, 0.67 ) }
    dend_12 { pt3dadd( 39.0247, -146.585, -47.2717, 0.33 ) }
    dend_12 { pt3dadd( 39.3465, -147.065, -47.3058, 0.67 ) }
    dend_12 { pt3dadd( 41.8542, -150.815, -47.5844, 0.33 ) }
    dend_12 { pt3dadd( 42.8658, -152.293, -47.7106, 1.33 ) }
    dend_12 { pt3dadd( 44.6215, -154.91, -47.9522, 0.33 ) }
    dend_12 { pt3dadd( 46.5204, -157.953, -48.208, 0.67 ) }
    dend_12 { pt3dadd( 48.0326, -160.416, -48.4191, 0.33 ) }
    dend_12 { pt3dadd( 48.3413, -160.908, -48.46, 0.67 ) }
    dend_12 { pt3dadd( 49.5972, -162.916, -48.6217, 0.33 ) }
    dend_12 { pt3dadd( 50.0038, -163.584, -48.6765, 0.67 ) }
    dend_12 { pt3dadd( 52.7486, -168.226, -49.0133, 0.33 ) }
    dend_12 { pt3dadd( 53.3869, -169.338, -49.0824, 0.67 ) }
    dend_12 { pt3dadd( 56.4978, -174.812, -49.3836, 0.33 ) }
    dend_12 { pt3dadd( 57.3075, -176.256, -49.4544, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 41.3612, -55.5653, -96.4792, 0.33 ) }
    dend_10 { pt3dadd( 42.9091, -55.1803, -99.2943, 0.33 ) }
    dend_10 { pt3dadd( 43.3397, -55.0594, -100.09, 0.67 ) }
    dend_10 { pt3dadd( 47.0094, -53.9582, -106.937, 0.33 ) }
    dend_10 { pt3dadd( 47.9495, -53.7193, -108.263, 1.33 ) }
    dend_10 { pt3dadd( 52.3588, -52.7716, -113.661, 0.33 ) }
    dend_10 { pt3dadd( 53.2158, -52.6341, -114.538, 0.67 ) }
    dend_10 { pt3dadd( 60.0719, -51.818, -120.437, 0.33 ) }
    dend_10 { pt3dadd( 61.0495, -51.7856, -121.187, 1.33 ) }
    dend_10 { pt3dadd( 69.6193, -52.3315, -126.5, 0.33 ) }
    dend_10 { pt3dadd( 70.8146, -52.598, -127.218, 1.33 ) }
    dend_10 { pt3dadd( 75.4453, -54.4336, -129.749, 0.33 ) }
    dend_10 { pt3dadd( 76.2196, -54.8746, -130.205, 1.33 ) }
    dend_10 { pt3dadd( 81.4004, -59.1548, -133.571, 0.33 ) }
    dend_10 { pt3dadd( 82.4379, -60.2474, -134.605, 0.67 ) }
    dend_10 { pt3dadd( 84.8257, -63.5135, -138.339, 0.33 ) }
    dend_10 { pt3dadd( 85.0936, -63.8451, -138.795, 0.67 ) }
    dend_10 { pt3dadd( 86.453, -65.286, -141.088, 0.33 ) }
    dend_10 { pt3dadd( 86.6887, -65.4605, -141.432, 0.67 ) }
    dend_10 { pt3dadd( 90.9264, -67.5144, -146.521, 0.33 ) }
    dend_10 { pt3dadd( 92.2186, -68.0434, -148.077, 0.67 ) }
    dend_10 { pt3dadd( 93.3606, -68.4065, -149.233, 0.33 ) }
    dend_10 { pt3dadd( 97.2839, -69.5849, -153.152, 1.33 ) }
    dend_10 { pt3dadd( 103.624, -71.3305, -159.247, 0.33 ) }
    dend_10 { pt3dadd( 104.342, -71.535, -159.936, 0.67 ) }
    dend_10 { pt3dadd( 108.891, -72.8815, -164.196, 0.33 ) }
    dend_10 { pt3dadd( 112.931, -74.4355, -168.368, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 41.3612, -55.5653, -96.4792, 0.33 ) }
    dend_9 { pt3dadd( 41.3603, -56.8778, -99.5529, 0.33 ) }
    dend_9 { pt3dadd( 41.3802, -57.127, -100.153, 0.67 ) }
    dend_9 { pt3dadd( 41.7373, -59.1259, -105.02, 0.33 ) }
    dend_9 { pt3dadd( 41.7764, -59.3336, -105.563, 0.67 ) }
    dend_9 { pt3dadd( 42.0517, -60.936, -110.009, 0.33 ) }
    dend_9 { pt3dadd( 42.0551, -61.1066, -110.566, 0.67 ) }
    dend_9 { pt3dadd( 41.9215, -62.333, -115.391, 0.33 ) }
    dend_9 { pt3dadd( 41.847, -62.6298, -116.553, 1.33 ) }
    dend_9 { pt3dadd( 41.4274, -63.8915, -121.628, 0.33 ) }
    dend_9 { pt3dadd( 41.239, -64.3046, -123.411, 0.67 ) }
    dend_9 { pt3dadd( 40.2163, -65.8117, -130.934, 0.33 ) }
    dend_9 { pt3dadd( 39.9596, -66.0871, -132.469, 1.33 ) }
    dend_9 { pt3dadd( 39.0898, -66.6208, -135.945, 0.33 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.09348, -31.5726, 12.9411, 0.67 ) }
    dend_23 { pt3dadd( 3.21217, -33.7653, 15.6411, 0.67 ) }
    dend_23 { pt3dadd( 4.63639, -36.5504, 18.7523, 0.67 ) }
    dend_23 { pt3dadd( 5.84754, -38.4607, 20.6632, 0.67 ) }
    dend_23 { pt3dadd( 6.98223, -40.1526, 22.3816, 0.67 ) }
    dend_23 { pt3dadd( 7.4872, -40.9036, 23.1179, 0.67 ) }
    dend_23 { pt3dadd( 8.05025, -41.8753, 24.0428, 0.33 ) }
    dend_23 { pt3dadd( 8.76763, -43.2376, 25.2839, 0.67 ) }
    dend_23 { pt3dadd( 9.8218, -45.1656, 27.1287, 0.33 ) }
    dend_23 { pt3dadd( 10.8759, -47.3501, 28.7818, 0.67 ) }
    dend_23 { pt3dadd( 11.2412, -48.2645, 29.4176, 0.33 ) }
    dend_23 { pt3dadd( 12.1511, -50.5688, 31.2638, 0.67 ) }
    dend_23 { pt3dadd( 12.9125, -53.0929, 33.6378, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 89/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.09348, -31.5726, 12.9411, 0.67 ) }
    dend_20 { pt3dadd( 5.1703, -32.2609, 16.6727, 0.67 ) }
    dend_20 { pt3dadd( 7.33678, -32.7455, 19.3001, 0.67 ) }
    dend_20 { pt3dadd( 10.5462, -33.4635, 23.1925, 0.67 ) }
    dend_20 { pt3dadd( 12.9029, -33.9907, 26.0507, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 94/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 57.3075, -176.256, -49.4544, 0.33 ) }
    dend_14 { pt3dadd( 58.7863, -180.548, -49.0453, 0.33 ) }
    dend_14 { pt3dadd( 58.8857, -180.86, -48.9975, 0.67 ) }
    dend_14 { pt3dadd( 60.4448, -186.071, -48.0804, 0.33 ) }
    dend_14 { pt3dadd( 60.7457, -187.019, -47.9113, 0.67 ) }
    dend_14 { pt3dadd( 61.7048, -189.936, -47.3906, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 61.8137, -190.255, -47.3364, 0.67 ) }
    dend_14 { pt3dadd( 62.8914, -193.238, -46.9137, 0.33 ) }
    dend_14 { pt3dadd( 63.2585, -194.225, -46.8611, 1.33 ) }
    dend_14 { pt3dadd( 64.9014, -198.385, -46.9314, 0.33 ) }
    dend_14 { pt3dadd( 65.0685, -198.815, -46.9678, 0.67 ) }
    dend_14 { pt3dadd( 66.1416, -201.426, -47.4357, 0.33 ) }
    dend_14 { pt3dadd( 66.6963, -202.763, -47.7823, 0.67 ) }
    dend_14 { pt3dadd( 68.8102, -207.713, -49.5021, 0.33 ) }
    dend_14 { pt3dadd( 69.173, -208.635, -49.8443, 0.67 ) }
    dend_14 { pt3dadd( 69.821, -210.5, -50.579, 0.33 ) }
    dend_14 { pt3dadd( 70.3592, -212.143, -51.2314, 0.67 ) }
    dend_14 { pt3dadd( 70.9144, -213.947, -51.9543, 0.33 ) }
    dend_14 { pt3dadd( 71.2901, -215.224, -52.4332, 0.67 ) }
    dend_14 { pt3dadd( 72.038, -218.05, -53.2648, 0.33 ) }
    dend_14 { pt3dadd( 72.3718, -219.43, -53.6762, 1.33 ) }
    dend_14 { pt3dadd( 73.051, -222.227, -54.4695, 0.33 ) }
    dend_14 { pt3dadd( 73.051, -222.227, -54.4695, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 17/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 57.3075, -176.256, -49.4544, 0.67 ) }
    dend_13 { pt3dadd( 57.281, -178.065, -50.5977, 0.67 ) }
    dend_13 { pt3dadd( 57.1912, -179.26, -51.4623, 0.33 ) }
    dend_13 { pt3dadd( 57.1569, -179.713, -51.7647, 0.67 ) }
    dend_13 { pt3dadd( 56.9532, -182.711, -53.685, 0.33 ) }
    dend_13 { pt3dadd( 56.947, -182.936, -53.8404, 0.67 ) }
    dend_13 { pt3dadd( 56.9434, -186.61, -56.4553, 0.33 ) }
    dend_13 { pt3dadd( 57.1338, -188.743, -58.0873, 1.33 ) }
    dend_13 { pt3dadd( 57.5187, -191.163, -60.0167, 0.33 ) }
    dend_13 { pt3dadd( 57.5911, -191.461, -60.2443, 0.67 ) }
    dend_13 { pt3dadd( 58.4742, -194.266, -62.2575, 0.33 ) }
    dend_13 { pt3dadd( 58.5942, -194.551, -62.4801, 0.67 ) }
    dend_13 { pt3dadd( 60.6034, -198.282, -65.5581, 0.33 ) }
    dend_13 { pt3dadd( 61.2097, -199.362, -66.3758, 1.33 ) }
    dend_13 { pt3dadd( 62.4793, -201.549, -68.0153, 0.33 ) }
    dend_13 { pt3dadd( 62.8555, -202.206, -68.4503, 1.33 ) }
    dend_13 { pt3dadd( 64.7342, -205.547, -70.3503, 0.33 ) }
    dend_13 { pt3dadd( 65.1225, -206.216, -70.7368, 0.67 ) }
    dend_13 { pt3dadd( 66.3876, -208.336, -71.9415, 0.33 ) }
    dend_13 { pt3dadd( 66.6781, -208.807, -72.2187, 1.33 ) }
    dend_13 { pt3dadd( 69.7453, -213.65, -75.1187, 0.33 ) }
    dend_13 { pt3dadd( 70.2262, -214.397, -75.5469, 0.67 ) }
    dend_13 { pt3dadd( 72.5291, -217.978, -77.3433, 0.33 ) }
    dend_13 { pt3dadd( 72.6682, -218.186, -77.4583, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 12.9029, -33.9907, 26.0507, 0.67 ) }
    dend_22 { pt3dadd( 16.2721, -34.8207, 26.0324, 0.67 ) }
    dend_22 { pt3dadd( 18.9473, -35.0531, 25.98, 0.67 ) }
    dend_22 { pt3dadd( 22.2039, -35.1557, 25.965, 0.67 ) }
    dend_22 { pt3dadd( 27.7412, -35.1356, 26.1445, 0.67 ) }
    dend_22 { pt3dadd( 30.6368, -35.1046, 26.4106, 0.67 ) }
    dend_22 { pt3dadd( 32.2003, -35.0662, 26.6016, 0.67 ) }
    dend_22 { pt3dadd( 39.9603, -34.5872, 27.6522, 0.67 ) }
    dend_22 { pt3dadd( 41.6002, -34.4324, 27.8775, 1.33 ) }
    dend_22 { pt3dadd( 45.3701, -34.0428, 28.3885, 0.67 ) }
    dend_22 { pt3dadd( 49.8621, -33.7498, 29.0735, 0.67 ) }
    dend_22 { pt3dadd( 52.1765, -33.6679, 29.419, 1.33 ) }
    dend_22 { pt3dadd( 55.2452, -33.7789, 29.8354, 0.33 ) }
    dend_22 { pt3dadd( 58.0704, -34.0891, 30.1952, 0.67 ) }
    dend_22 { pt3dadd( 60.2654, -34.3882, 30.3707, 0.33 ) }
    dend_22 { pt3dadd( 62.2841, -34.7416, 30.3795, 0.67 ) }
    dend_22 { pt3dadd( 63.7426, -35.0388, 30.2804, 0.33 ) }
    dend_22 { pt3dadd( 65.3386, -35.4434, 30.25, 0.67 ) }
    dend_22 { pt3dadd( 70.3643, -36.6884, 30.747, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.9029, -33.9907, 26.0507, 0.67 ) }
    dend_21 { pt3dadd( 14.9848, -35.2331, 30.195, 0.67 ) }
    dend_21 { pt3dadd( 16.8082, -36.3214, 33.8249, 0.67 ) }
    dend_21 { pt3dadd( 18.4055, -37.2746, 37.0045, 0.67 ) }
    dend_21 { pt3dadd( 20.0672, -38.2663, 40.3124, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_28 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_19 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_20 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_7 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_21 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 9
    dend_39 nseg = 7
    dend_38 nseg = 9
    dend_36 nseg = 11
    dend_33 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 5
    dend_31 nseg = 17
    dend_30 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_5 nseg = 7
    dend_4 nseg = 11
    dend_15 nseg = 7
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_9 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_BTC_5612242ada_0_0


