// Cell: cACint209_L23_MC_ba3c5063e4_0_0
/*
{
  "id" : "cACint209_L23_MC_ba3c5063e4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.9859, 12.8549, -5.10984, 3.40449", "-2.74527, 11.442, -4.51041, 6.04084", "-2.50465, 10.0291, -3.91097, 6.93662", "-2.26402, 8.61621, -3.31154, 7.83365", "-2.0234, 7.20331, -2.7121, 8.89842", "-1.78278, 5.7904, -2.11267, 9.41118", "-1.54215, 4.37749, -1.51323, 9.63685", "-1.30153, 2.96459, -0.913797, 10.0321", "-1.06091, 1.55168, -0.314362, 10.5627", "-0.820282, 0.138772, 0.285073, 11.052", "-0.579658, -1.27413, 0.884508, 11.5412", "-0.339035, -2.68704, 1.48394, 11.8933", "-0.0984111, -4.09995, 2.08338, 11.8707", "0.142213, -5.51286, 2.68281, 11.8464", "0.382836, -6.92576, 3.28225, 11.8221", "0.62346, -8.33867, 3.88168, 11.7811", "0.864084, -9.75158, 4.48112, 11.6712", "1.10471, -11.1645, 5.08056, 11.0156", "1.34533, -12.5774, 5.67999, 9.02603", "1.58595, -13.9903, 6.27943, 6.99711", "1.82658, -15.4032, 6.87886, 3.87771" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "3.75254, -15.3958, 3.08956, 2.22", "3.99149, -17.6805, 3.08956, 2.22", "4.3671, -21.2715, 3.08956, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999939972181734
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.57746, 10.8141, -5.26044, 3.6", "-9.10139, 13.3434, -7.13933, 3.6", "-13.1848, 16.2744, -9.31652, 3.05", "-15.2228, 17.7372, -10.4032, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999939972181734
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.897466, 12.8441, -2.11044, 3.32", "-1.60186, 16.7097, -2.11044, 3.32", "-2.1082, 19.4884, -2.11044, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999939972181734
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.82658, -15.4032, 6.87886, 0.5517", "4.34489, -30.1903, 6.87886, 0.5517", "6.86319, -44.9774, 6.87886, 0.5517" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.3671, -21.2715, 3.08956, 1.11", "6.68841, -25.1084, 4.26142, 1.11", "8.26995, -27.7223, 5.05983, 1.11", "9.69044, -30.0702, 5.77693, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "4.3671, -21.2715, 3.08956, 0.55", "3.16079, -23.3195, 3.82168, 0.55", "2.36865, -24.778, 4.00862, 0.28", "1.70923, -25.9921, 4.16424, 0.83", "0.740839, -27.7752, 4.39278, 0.55", "-0.205562, -29.5177, 4.61613, 0.28", "-1.08801, -31.1426, 4.82438, 0.28", "-2.65429, -34.2702, 4.78679, 1.11" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.2228, 17.7372, -10.4032, 2.77", "-19.1728, 21.8372, -10.4032, 2.77" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.2228, 17.7372, -10.4032, 1.39", "-16.8067, 17.4575, -11.0919, 1.39", "-19.4852, 17.1441, -12.5177, 1.11", "-21.2389, 16.939, -13.4513, 1.66", "-24.5595, 16.5506, -15.2189, 1.11", "-27.2065, 16.2411, -16.628, 1.11", "-31.6781, 15.7182, -19.0083, 1.66", "-34.0949, 15.5104, -20.4832, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.1082, 19.4884, -2.11044, 3.32", "-3.3082, 24.7484, -6.68044, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.1082, 19.4884, -2.11044, 0.83", "0.768264, 21.3431, -2.77973, 0.83", "3.24903, 22.6894, -2.92612, 0.83", "6.74433, 24.3332, -2.94605, 0.83", "9.8413, 25.611, -2.89688, 0.83", "12.4866, 26.6653, -2.83605, 0.83", "15.9875, 28.0046, -2.64772, 0.83", "22.0714, 30.1381, -2.28467, 0.83", "25.2223, 31.2244, -2.13324, 0.83", "30.8308, 33.2837, -1.91329, 0.83", "33.4988, 34.3061, -1.80959, 0.83", "38.9648, 36.2438, -1.498, 0.83", "42.3131, 37.3842, -1.36242, 0.55", "43.7147, 37.9091, -1.39415, 0.55", "44.9878, 38.4454, -1.43923, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.86319, -44.9774, 6.87886, 0.28", "9.3815, -59.7645, 6.87886, 0.28", "11.8998, -74.5516, 6.87886, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "9.69044, -30.0702, 5.77693, 2.49", "11.0904, -30.8803, 4.97693, 2.49" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "9.69044, -30.0702, 5.77693, 0.83", "10.2111, -34.6236, 8.12462, 0.83", "10.2465, -35.8607, 8.82477, 0.83", "10.3682, -37.5648, 9.85971, 0.83", "10.6226, -39.8148, 11.3204, 0.55", "10.8855, -41.953, 12.8327, 0.83", "11.115, -44.0859, 14.2242, 0.83", "11.3427, -47.0037, 16.1491, 0.28", "11.5043, -48.8596, 17.5017, 0.28", "11.5813, -49.6226, 18.0899, 1.11", "11.993, -52.1366, 20.0663, 0.28", "12.4263, -54.5966, 22.001, 0.83", "12.8864, -57.4338, 24.0901, 0.28", "12.9486, -58.0914, 24.5145, 0.55", "12.9966, -60.3194, 25.886, 0.28", "13.0007, -60.8512, 26.2022, 0.55", "13.0765, -63.3535, 27.7082, 0.28", "13.0804, -63.6465, 27.9216, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.65429, -34.2702, 4.78679, 0.28", "-2.45185, -36.5729, 5.77129, 0.28", "-2.34894, -38.8358, 6.92588, 0.83", "-2.31532, -39.3863, 7.21299, 0.83", "-2.2486, -41.1811, 8.1866, 0.28", "-2.11945, -42.7141, 9.07402, 0.55", "-1.82774, -45.1446, 10.4866, 0.28", "-1.61705, -46.9771, 11.6834, 0.83", "-1.53597, -48.1092, 12.4723, 0.83", "-1.45473, -49.9647, 13.7574, 0.83", "-1.5022, -52.854, 15.7896, 0.55", "-1.56253, -53.862, 16.5073, 0.55", "-1.9129, -56.2884, 18.2217, 0.55", "-2.40305, -58.2243, 19.5806, 0.55", "-2.98348, -59.7597, 20.6337, 0.83", "-4.08063, -62.1395, 22.1482, 0.28", "-4.35442, -62.5508, 22.3899, 0.55", "-5.41704, -63.8921, 23.15, 0.28", "-6.95001, -65.7155, 24.0859, 0.55", "-8.1767, -67.0452, 24.734, 0.28", "-9.15717, -68.0052, 25.2032, 0.55", "-12.183, -70.9106, 26.3782, 0.55", "-12.6316, -71.3333, 26.5398, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.65429, -34.2702, 4.78679, 0.28", "-2.42324, -34.6978, 2.61625, 0.28", "-2.38924, -34.8526, 1.61786, 0.83", "-2.63997, -36.1408, -8.31172, 0.83", "-2.83784, -36.4883, -10.7374, 0.28", "-3.03548, -36.758, -12.3638, 0.28", "-3.2309, -36.9805, -13.5668, 0.55", "-4.03483, -37.5841, -16.1408, 0.28", "-4.37757, -37.8134, -16.8612, 0.55", "-5.79089, -38.7868, -18.5015, 0.28", "-6.78143, -39.4813, -19.4669, 0.83", "-7.42562, -40.0374, -20.1799, 1.39", "-9.3988, -42.0625, -22.5103, 0.28", "-9.82257, -42.5204, -23.0579, 0.83", "-10.9669, -43.7024, -24.8259, 0.55", "-12.2706, -44.9439, -26.8266, 0.55", "-14.2846, -46.5005, -30.0306, 0.55", "-15.1908, -47.1371, -31.5002, 1.39", "-17.243, -48.4151, -34.9453, 1.11", "-19.6618, -49.819, -38.9384, 0.28", "-20.9428, -50.4274, -41.0672, 0.83", "-23.8341, -51.544, -46.5698, 0.28", "-24.4732, -51.7034, -47.7963, 0.83", "-25.8506, -51.9068, -50.4265, 0.28", "-26.4652, -51.9133, -51.7481, 0.83", "-28.2818, -51.7071, -55.8505, 1.11", "-31.4642, -51.1501, -64.3241, 0.28", "-32.6915, -50.9421, -67.8535, 0.28", "-33.3992, -50.8327, -70.0448, 0.83", "-36.3658, -50.447, -79.4826, 0.28", "-36.7647, -50.4414, -80.8425, 1.11", "-39.8043, -50.6226, -91.4502, 0.28", "-40.0158, -50.653, -92.2135, 0.55", "-40.5718, -50.7906, -94.4954, 0.28", "-40.8729, -50.9112, -95.8181, 0.55", "-41.8625, -51.8265, -99.8915, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-19.1728, 21.8372, -10.4032, 0.55", "-20.3946, 24.9557, -10.7392, 0.55", "-21.2247, 27.1591, -10.7722, 1.39", "-22.849, 31.6317, -10.5711, 0.83", "-24.7232, 36.7921, -10.339, 1.11", "-25.9684, 40.2206, -10.1848, 1.11", "-27.425, 44.2312, -10.0044, 1.11", "-28.5481, 47.3778, -9.89085, 1.39", "-29.3555, 49.9418, -9.58996, 1.39" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.1728, 21.8372, -10.4032, 1.66", "-20.828, 23.1532, -11.9332, 1.66", "-23.7074, 25.4426, -14.5951, 1.66", "-25.4093, 26.7959, -16.1684, 1.66", "-29.0915, 29.7234, -19.5723, 1.39", "-32.4624, 32.4037, -22.6885, 1.39", "-35.0707, 34.4776, -25.0997, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.0949, 15.5104, -20.4832, 0.83", "-35.9412, 14.9782, -20.9321, 0.83", "-42.2396, 13.5028, -22.5728, 0.83", "-44.2487, 13.1301, -23.1615, 0.55", "-46.314, 12.9232, -23.7696, 1.11", "-49.6693, 12.776, -24.8787, 0.55", "-52.326, 12.7625, -25.8393, 0.55", "-54.8434, 12.9018, -26.9939, 0.55", "-56.1716, 13.0934, -27.8651, 0.55", "-59.1003, 13.6235, -30.1091, 1.11", "-61.7765, 14.3377, -32.6698, 0.55", "-63.2725, 14.8035, -34.3579, 0.55", "-65.1828, 15.2662, -36.6481, 0.55", "-67.2166, 15.4455, -39.2906, 0.55", "-67.9011, 15.4514, -40.2519, 1.11", "-70.0873, 15.2303, -43.473, 0.28", "-70.5286, 15.1334, -44.2283, 0.28", "-72.0502, 14.6133, -47.1044, 1.11", "-73.3094, 14.0639, -50.38, 1.11", "-74.4438, 13.5817, -53.9646, 0.28", "-75.2592, 13.2598, -56.8551, 1.11", "-77.098, 12.5746, -64.7873, 0.28", "-77.4409, 12.5075, -66.5156, 1.66", "-79.3186, 12.4903, -77.51, 0.28", "-79.4932, 12.5112, -78.5014, 1.11", "-80.0334, 12.6069, -81.3262, 0.55", "-80.6295, 12.8309, -84.5829, 0.55", "-81.1101, 13.0897, -87.0128, 0.83", "-81.5511, 13.4801, -89.7972, 0.28", "-81.796, 13.9241, -92.2327, 1.11", "-81.9008, 14.5213, -94.9154, 1.11", "-81.7102, 16.7323, -102.005, 0.28", "-81.679, 16.8703, -102.368, 1.11", "-81.1732, 18.4736, -105.945, 0.28", "-80.9361, 19.1702, -107.334, 0.55", "-80.3405, 21.1551, -110.953, 1.39", "-79.542, 24.6243, -117.046, 0.28", "-79.4478, 25.8106, -119.143, 1.66", "-79.5491, 27.5865, -122.587, 0.28", "-79.6762, 28.1395, -123.798, 0.83", "-80.2797, 29.6028, -127.329, 0.28", "-80.6089, 30.1814, -128.88, 0.83", "-81.4515, 31.0788, -131.588, 0.28", "-82.5236, 31.9589, -134.314, 0.55", "-83.7246, 32.7416, -136.905, 0.28", "-84.4056, 33.1372, -138.319, 1.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-34.0949, 15.5104, -20.4832, 0.55", "-37.6287, 13.4007, -19.8455, 0.55", "-38.8585, 12.632, -19.4747, 0.55", "-41.2722, 11.1173, -18.6454, 1.39", "-45.203, 8.69441, -17.2026, 0.83", "-46.8607, 7.67265, -16.5941, 1.39", "-48.6234, 6.5862, -15.9471, 1.39", "-51.1425, 4.86319, -14.7652, 0.55", "-52.2805, 4.1116, -14.156, 1.11", "-54.4578, 2.83182, -12.818, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.3082, 24.7484, -6.68044, 2.49", "-1.20137, 29.8008, -10.2744, 2.49", "0.355031, 33.5331, -12.9294, 2.49", "1.90038, 37.2389, -15.5655, 2.49", "2.68734, 39.126, -16.908, 2.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.3082, 24.7484, -6.68044, 1.11", "-5.02343, 26.5935, -6.18164, 1.11", "-7.32318, 29.0676, -5.51287, 1.11", "-11.0134, 33.0373, -4.43973, 1.11", "-12.2819, 34.4019, -4.07086, 0.83", "-14.1078, 36.3661, -3.53987, 0.83", "-15.0837, 37.416, -3.25608, 1.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "11.0904, -30.8803, 4.97693, 1.11", "14.497, -30.3741, 3.11549, 1.11", "15.9439, -30.1591, 2.3249, 1.66" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "11.0904, -30.8803, 4.97693, 0.83", "12.1104, -32.6502, 7.37693, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-29.3555, 49.9418, -9.58996, 0.55", "-32.4185, 54.4193, -8.78113, 0.55", "-36.2008, 60.188, -7.36854, 0.83", "-38.2867, 63.604, -6.64387, 0.55", "-39.5463, 65.8941, -6.21415, 0.55", "-40.2027, 67.1877, -6.03762, 0.55", "-41.4524, 69.9474, -5.7685, 0.55", "-42.5671, 73.1431, -5.30507, 1.11", "-43.0866, 76.0706, -5.22735, 1.11", "-43.2646, 77.8291, -5.2719, 0.28", "-43.4102, 80.5842, -5.34342, 1.11", "-43.4858, 82.8725, -5.42527, 0.28", "-43.484, 85.4438, -5.51226, 0.28", "-43.5312, 87.9444, -5.73049, 1.11", "-43.6502, 90.489, -5.787, 0.28", "-43.6822, 91.0473, -5.8184, 0.55", "-43.7996, 93.0152, -6.24784, 0.28", "-43.9592, 94.6696, -6.89144, 0.83", "-44.3057, 97.198, -8.20373, 0.28", "-44.6395, 99.0717, -9.25783, 0.55", "-45.2883, 102.49, -11.3484, 0.83", "-46.2673, 107.244, -14.7068, 0.55", "-46.6105, 108.834, -15.9209, 0.28", "-46.9802, 110.361, -17.184, 1.39", "-47.5769, 112.752, -19.1763, 0.28", "-48.2425, 115.281, -21.3692, 0.55", "-49.2123, 118.65, -24.1569, 0.28", "-49.4566, 119.528, -24.7916, 0.55", "-49.9998, 121.61, -26.3357, 0.28", "-50.2854, 123.038, -27.3732, 1.11", "-50.6016, 125.201, -28.8352, 0.28", "-50.6727, 125.834, -29.1464, 0.55", "-50.7543, 127.218, -29.6605, 0.28", "-50.8339, 129.192, -30.341, 0.83", "-50.9703, 133.689, -31.749, 0.28", "-51.0203, 136.151, -32.498, 1.66", "-51.0537, 139.2, -33.3571, 0.28", "-51.0854, 141.4, -33.9694, 1.94", "-51.1377, 144.217, -34.6684, 0.28", "-51.1671, 145.437, -34.884, 0.28", "-51.2117, 146.84, -35.041, 0.55", "-51.2498, 148.847, -35.1421, 0.28", "-51.2607, 149.999, -35.2001, 1.11", "-51.2844, 152.064, -35.2011, 0.28", "-51.2742, 153.302, -35.167, 0.55", "-51.2298, 156.277, -35.0359, 0.28", "-51.2283, 159.107, -34.8346, 0.83", "-51.2637, 162.07, -34.4907, 0.28", "-51.2841, 163.255, -34.3597, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-29.3555, 49.9418, -9.58996, 0.83", "-30.4372, 50.848, -6.78424, 0.83", "-30.9866, 51.1511, -5.72089, 0.83", "-31.6947, 51.5258, -4.52221, 0.83", "-32.7055, 52.0732, -2.90925, 1.39", "-38.183, 55.4809, 5.0635, 1.11", "-38.6494, 55.7711, 5.74228, 1.11", "-40.3554, 56.8843, 8.5163, 1.11", "-41.0729, 57.3862, 9.73061, 0.83", "-42.4467, 58.3372, 12.0464, 0.83", "-44.0306, 59.2693, 14.5199, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-35.0707, 34.4776, -25.0997, 0.83", "-36.4368, 35.8051, -25.9041, 0.83", "-37.9181, 37.3531, -26.8815, 0.83", "-39.7242, 39.3951, -28.1475, 1.11", "-42.0439, 42.2035, -29.6578, 0.83", "-45.4493, 46.4198, -31.79, 1.39", "-47.1102, 48.4948, -32.9096, 0.83", "-48.3413, 50.0695, -33.7517, 0.83", "-49.8694, 52.1839, -34.9019, 0.83", "-52.7338, 56.6906, -37.1214, 1.11", "-54.0742, 59.1548, -38.2441, 0.83", "-55.9792, 63.0237, -39.9859, 1.66", "-57.374, 65.9203, -41.2343, 2.22", "-58.8075, 68.8746, -42.5453, 0.83", "-60.1118, 71.858, -43.9678, 1.94", "-61.0089, 74.7672, -45.5368, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-35.0707, 34.4776, -25.0997, 0.83", "-38.2883, 33.2359, -23.0309, 0.83", "-40.923, 32.1618, -21.44, 0.83", "-43.1606, 31.2495, -20.0889, 0.83", "-45.2563, 30.3951, -18.8236, 0.83", "-49.6036, 28.6229, -16.1986, 0.83", "-51.4001, 27.8904, -15.1139, 0.83", "-52.9457, 27.1815, -14.3586, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-54.4578, 2.83182, -12.818, 0.28", "-56.4422, 2.29256, -12.6423, 0.28", "-59.2769, 1.59315, -12.258, 0.55", "-61.0944, 1.2044, -12.1692, 0.28", "-64.8337, 0.530649, -12.1264, 0.83", "-66.8105, 0.213558, -12.1469, 0.55", "-71.2576, -0.53505, -12.3136, 0.55", "-73.9671, -1.01731, -12.5275, 1.39", "-78.8499, -1.81078, -13.034, 0.55", "-80.0075, -1.99078, -13.1842, 0.55", "-81.9278, -2.27035, -13.4324, 0.55", "-84.5868, -2.54147, -14.0115, 0.28", "-87.1292, -2.72111, -14.7629, 1.11", "-89.6775, -2.83126, -15.504, 0.55", "-91.3953, -2.87169, -15.946, 0.55", "-94.8224, -2.87022, -16.8171, 0.55", "-101.332, -2.55376, -18.4528, 0.28", "-103.744, -2.33341, -19.033, 1.11", "-110.681, -1.66497, -20.8656, 0.55", "-112.433, -1.5236, -21.3896, 1.39", "-114.865, -1.43144, -22.1916, 0.55", "-116.036, -1.44972, -22.5931, 0.28", "-117.101, -1.54054, -22.8931, 0.55", "-119.59, -2.0108, -23.813, 0.28", "-120.265, -2.24168, -24.1242, 0.83", "-123.684, -3.74568, -25.5205, 0.28", "-125.399, -4.5619, -26.0291, 1.11", "-127.525, -5.62667, -26.3995, 0.55", "-129.496, -6.60823, -26.482, 0.28", "-131.358, -7.55761, -26.2194, 0.55", "-134.31, -9.14055, -25.2936, 0.55", "-137.155, -10.7127, -24.0894, 0.55", "-138.825, -11.6173, -23.2693, 0.28", "-141.203, -12.9165, -21.8784, 0.83", "-144.467, -14.6997, -19.7174, 0.28", "-146.604, -15.9368, -18.0466, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-54.4578, 2.83182, -12.818, 0.28", "-56.021, 0.881275, -12.7598, 0.28", "-57.0857, -0.49681, -12.4536, 0.55", "-58.4376, -2.44633, -11.9016, 0.28", "-60.0807, -4.96597, -11.2025, 0.83", "-62.2508, -8.35526, -10.3045, 0.28", "-64.4794, -11.7716, -9.39744, 0.83", "-66.2299, -14.3696, -8.59659, 0.55", "-67.2595, -16.0105, -8.00251, 0.83", "-68.1377, -17.4893, -7.37605, 0.28", "-69.2137, -19.3771, -6.46548, 0.55", "-70.4609, -21.3269, -5.49195, 0.28", "-71.044, -22.0655, -5.08066, 0.55", "-73.1172, -24.2278, -3.66787, 0.28", "-74.2024, -25.128, -2.88594, 1.11", "-76.4545, -26.6859, -1.14642, 0.28", "-77.5628, -27.288, -0.354585, 0.55", "-79.2762, -27.9748, 0.64804, 0.28", "-79.5141, -28.0298, 0.76539, 0.83", "-81.7912, -28.3841, 1.62773, 0.28", "-82.5665, -28.5233, 1.88931, 0.83", "-84.7224, -29.0487, 2.64256, 0.28", "-86.0458, -29.4877, 3.18814, 0.83", "-89.7571, -30.8522, 4.77838, 0.28", "-92.2931, -31.8265, 5.91527, 0.28", "-93.1558, -32.1819, 6.33121, 0.55", "-95.1833, -33.1251, 7.50813, 0.28", "-95.9774, -33.5577, 8.09776, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.68734, 39.126, -16.908, 2.22", "5.15733, 39.4961, -23.818, 2.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.68734, 39.126, -16.908, 0.55", "2.92517, 40.5759, -24.3688, 0.55", "2.9863, 40.9486, -26.2867, 0.55", "3.06483, 41.4272, -28.7499, 0.55", "3.16714, 42.0509, -31.9596, 1.11", "3.30143, 42.8695, -36.1722, 0.55", "3.43648, 43.6927, -40.4085, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.0837, 37.416, -3.25608, 0.83", "-13.2857, 39.9617, -1.4069, 0.83", "-12.5041, 41.2719, -0.500566, 0.83", "-11.1022, 44.0658, 1.28003, 0.83", "-9.88374, 46.6409, 2.87704, 0.83", "-8.71109, 49.3391, 4.52384, 0.83", "-8.36764, 50.2513, 5.0553, 0.83", "-7.49436, 53.0376, 6.52321, 0.83", "-7.07478, 54.5291, 7.19447, 0.83", "-6.28444, 57.53, 8.21102, 0.83", "-5.98592, 59.1105, 8.56295, 0.83", "-5.65498, 61.6459, 8.98983, 0.83", "-5.42016, 64.2682, 9.34532, 0.83", "-5.1353, 67.9482, 9.87201, 1.11", "-5.01251, 70.1875, 10.3345, 1.11", "-4.94184, 72.7318, 11.0389, 1.11", "-4.8547, 75.5054, 12.0575, 0.83", "-4.8082, 78.0515, 13.1538, 0.83", "-4.87962, 81.5932, 14.9762, 0.83", "-5.01026, 84.1358, 16.6001, 1.66", "-5.09252, 86.9998, 18.7135, 0.83", "-5.03708, 87.9317, 19.5056, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.0837, 37.416, -3.25608, 0.28", "-18.2174, 39.1001, -3.02456, 0.28", "-19.7811, 39.8792, -3.17642, 0.83", "-21.4897, 40.6435, -3.3603, 0.28", "-22.0009, 40.8376, -3.42052, 0.28", "-24.9255, 41.7228, -3.53083, 1.39", "-28.7141, 42.6437, -3.09443, 0.55", "-33.0664, 43.3867, -2.00964, 0.55", "-35.253, 43.6278, -1.36382, 0.83", "-37.64, 43.7445, -0.473238, 1.11", "-41.2439, 43.7389, 1.14609, 0.55", "-46.1616, 43.3558, 3.77712, 0.55", "-48.1712, 43.0009, 5.20439, 1.11", "-49.9612, 42.3932, 6.85657, 0.55", "-52.1197, 41.209, 9.39356, 1.11", "-52.9147, 40.5019, 10.7353, 1.11", "-53.3145, 39.8182, 11.7978, 0.55", "-53.9204, 37.952, 14.2097, 0.55", "-54.5105, 35.3628, 17.3282, 1.11", "-55.0206, 32.9689, 19.9967, 1.11", "-55.6904, 30.7682, 22.2934, 1.11", "-56.379, 29.2355, 23.8143, 0.55", "-57.4363, 27.3531, 25.5633, 0.55", "-57.9539, 26.4958, 26.2943, 0.83", "-59.2101, 25.1206, 27.2922, 0.55", "-60.8632, 23.7071, 28.0084, 0.55", "-63.0415, 22.1798, 28.5984, 0.55", "-65.4434, 20.8347, 29.1439, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "15.9439, -30.1591, 2.3249, 0.28", "17.2495, -29.2327, 0.78131, 0.28", "18.9502, -27.8643, -1.28781, 0.55", "20.458, -26.424, -3.32664, 0.55", "21.9982, -24.7444, -5.52981, 0.28", "22.7396, -23.923, -6.52405, 0.55", "23.9964, -22.4886, -8.20465, 0.28", "24.2683, -22.1644, -8.57291, 0.55", "25.1802, -21.0263, -9.70633, 0.28", "25.6526, -20.4965, -10.2257, 0.55", "28.2421, -17.7747, -12.9031, 0.28", "29.2133, -16.8906, -13.8363, 0.83", "31.1653, -15.2897, -15.6171, 0.28", "32.0839, -14.6271, -16.424, 0.83", "33.593, -13.757, -17.5991, 0.55", "34.4679, -13.3266, -18.2656, 0.55", "35.8718, -12.8239, -19.3053, 0.83", "38.0923, -12.2338, -20.9511, 0.28", "39.3538, -11.9538, -21.8305, 0.28", "41.3793, -11.4927, -23.3287, 0.28", "43.1258, -11.0697, -24.6088, 0.83", "46.2349, -10.5192, -26.9923, 0.28", "48.2123, -10.3531, -28.509, 0.83", "49.8022, -10.4408, -30.0478, 0.28", "51.0035, -10.4853, -32.0677, 0.83", "51.5168, -10.4934, -33.3843, 0.83", "52.2564, -10.4962, -36.0959, 0.28", "52.618, -10.4448, -37.8251, 0.83", "53.6506, -10.2743, -43.0645, 1.39", "55.0134, -10.1207, -50.0096, 0.28", "55.186, -10.1094, -50.8215, 0.55", "55.8763, -10.0326, -54.0074, 0.28", "56.1832, -10.0061, -55.3579, 0.83", "57.0538, -10.0258, -59.105, 0.28", "57.6159, -10.1229, -61.2295, 0.55", "58.2717, -10.456, -63.4417, 0.28", "58.609, -10.6716, -64.638, 0.83", "60.7911, -12.4756, -73.2518, 0.28", "61.256, -12.9551, -75.4393, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "15.9439, -30.1591, 2.3249, 0.83", "20.1254, -31.1734, 3.51814, 0.83", "24.7998, -32.0233, 4.52475, 0.83", "27.9188, -32.4333, 5.01767, 0.83", "31.8018, -32.9435, 5.63131, 1.11", "34.9526, -33.3576, 6.12924, 0.83", "38.298, -33.7971, 6.65792, 0.55", "39.9734, -33.8479, 6.75159, 1.11", "43.0041, -33.5195, 6.86223, 1.39" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "12.1104, -32.6502, 7.37693, 0.83", "13.9814, -33.0695, 8.99758, 0.83", "16.7344, -33.3316, 10.9849, 0.83", "19.8132, -33.4678, 12.9192, 1.11", "24.0642, -33.634, 15.3142, 0.55", "25.5125, -33.7121, 16.0307, 0.55", "29.4794, -33.9257, 17.9932, 1.11", "32.7834, -34.0233, 19.4535, 0.55", "34.2094, -34.0097, 19.8771, 0.55", "35.599, -33.945, 20.1094, 0.83", "38.329, -33.7299, 20.077, 1.39" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "12.1104, -32.6502, 7.37693, 0.28", "15.0988, -34.4109, 5.59323, 0.28", "15.9645, -34.9817, 4.90684, 0.28", "16.5766, -35.4372, 4.2614, 0.55", "18.6329, -37.158, 1.54347, 0.28", "19.955, -38.6682, -1.38509, 0.28", "20.5566, -39.5523, -3.23588, 0.83", "21.1478, -40.7168, -5.91531, 0.28", "21.3488, -41.5373, -8.02935, 1.11", "21.231, -42.5615, -10.9175, 1.11", "19.9715, -45.1763, -18.1856, 0.28", "19.4801, -45.8162, -19.9661, 0.28", "19.3349, -45.9678, -20.3622, 1.11", "17.3254, -47.699, -24.5893, 0.55", "16.4308, -48.4048, -26.1853, 0.55", "15.5275, -49.0167, -27.8051, 0.55", "14.9943, -49.4716, -29.0137, 0.28", "14.3973, -50.1361, -30.8404, 0.55", "14.0151, -50.6558, -32.2199, 0.55", "13.4634, -51.6049, -34.8329, 1.39", "12.3692, -54.5905, -42.7813, 0.55", "12.0315, -56.0462, -46.4602, 0.28", "11.9902, -56.4901, -47.5078, 0.83", "12.0216, -57.2837, -49.2136, 0.28", "12.1503, -58.1306, -50.9207, 0.55", "12.6259, -60.2262, -54.769, 0.28", "12.9165, -61.0849, -56.2034, 0.28", "13.3916, -62.3017, -58.3648, 0.83", "14.6553, -65.4521, -64.065, 0.28", "14.8649, -65.9798, -65.0243, 0.28", "14.9095, -66.1192, -65.2629, 0.83", "15.5581, -68.4252, -69.4133, 0.28", "15.5958, -68.5598, -69.6577, 0.55", "15.8859, -69.8264, -71.6334, 0.28", "15.9891, -70.9836, -73.1039, 0.28", "15.9694, -71.9332, -74.2729, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-44.0306, 59.2693, 14.5199, 0.55", "-45.6579, 56.7388, 18.2481, 0.55", "-46.0181, 56.3091, 18.7982, 0.55", "-46.9863, 55.2569, 19.7791, 1.11", "-48.2313, 53.8054, 21.0477, 0.55", "-48.7752, 53.1455, 21.5636, 0.55", "-50.3295, 51.2851, 22.9541, 0.55", "-50.8589, 50.6986, 23.2178, 0.55", "-52.1356, 49.4507, 23.8016, 0.83", "-54.527, 47.2976, 24.6373, 0.83", "-55.8531, 46.1648, 25.0151, 0.83", "-58.4206, 44.0051, 25.7797, 1.39", "-60.9529, 41.7589, 26.5914, 0.83", "-62.9205, 40.0535, 27.1898, 1.11", "-64.7632, 38.5932, 27.6764, 0.55", "-66.1976, 37.5718, 27.8376, 0.55", "-68.1522, 36.2481, 28.0077, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-44.0306, 59.2693, 14.5199, 0.55", "-45.7194, 61.968, 17.2363, 0.55", "-46.6083, 63.2569, 18.4641, 1.39", "-48.0557, 65.1254, 20.2692, 0.83", "-49.2871, 66.5228, 21.7628, 0.83", "-51.7655, 68.8723, 24.902, 0.83", "-53.3093, 70.3358, 26.8575, 0.83", "-54.0351, 70.9075, 27.5212, 0.83", "-55.2784, 71.8837, 28.4736, 0.83", "-56.7649, 73.1281, 29.4279, 1.66", "-58.7679, 73.4568, 31.561, 1.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-61.0089, 74.7672, -45.5368, 0.55", "-60.9097, 79.2456, -48.0899, 0.55", "-61.0688, 81.2696, -49.335, 0.83", "-61.8551, 85.7068, -52.8288, 0.83", "-62.1411, 87.5395, -54.413, 2.22", "-62.3272, 88.7929, -55.5268, 2.22", "-62.5429, 90.2442, -56.7963, 0.55", "-62.9759, 91.9548, -58.6622, 1.11", "-64.0618, 94.5454, -61.6406, 0.55", "-65.137, 96.4645, -63.6767, 0.55", "-65.5022, 97.0102, -64.2829, 0.55", "-66.0213, 97.6963, -65.057, 0.55", "-67.8084, 99.8259, -67.4493, 1.39", "-69.7855, 102.121, -69.6032, 0.55", "-70.5507, 102.959, -70.4063, 0.83", "-72.2976, 104.911, -72.8071, 0.55", "-72.6506, 105.357, -73.4292, 0.83", "-73.5619, 106.864, -75.7296, 0.28", "-74.3175, 108.379, -78.31, 0.83", "-75.5742, 111.224, -83.619, 0.55", "-76.7968, 114.06, -89.0897, 0.28", "-77.4325, 115.563, -92.0348, 0.83", "-78.3631, 117.739, -96.2875, 0.55", "-78.9793, 119.074, -98.9446, 0.83", "-79.9549, 120.797, -102.491, 0.28", "-80.618, 121.757, -104.106, 0.55", "-81.002, 122.18, -104.654, 0.28", "-81.6561, 122.794, -105.291, 0.55", "-83.6768, 124.47, -106.491, 0.28", "-84.8268, 125.556, -107.103, 0.55", "-86.3991, 127.132, -107.801, 0.28", "-86.8421, 127.69, -108.114, 0.55", "-88.6452, 130.272, -109.425, 0.28", "-89.0534, 130.959, -109.788, 0.55", "-90.4265, 133.56, -111.144, 0.28", "-91.2306, 135.247, -112.109, 1.39", "-93.3846, 139.828, -114.912, 0.28", "-94.5075, 142.165, -116.453, 1.39", "-96.5142, 146.045, -119.401, 0.28", "-96.9531, 146.789, -120.163, 0.83", "-97.709, 147.889, -121.534, 0.28", "-98.0908, 148.415, -122.292, 0.83", "-99.6059, 150.356, -125.4, 0.28", "-100.815, 151.996, -128.265, 1.39", "-102.962, 154.874, -133.561, 0.28", "-103.19, 155.177, -134.133, 0.55", "-104.057, 156.349, -136.384, 0.28", "-104.173, 156.523, -136.712, 0.55", "-104.886, 157.837, -138.935, 0.28", "-105.063, 158.288, -139.548, 1.11", "-105.305, 159.352, -140.497, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-61.0089, 74.7672, -45.5368, 0.55", "-62.9747, 76.9729, -46.3299, 0.55", "-64.3687, 78.537, -46.8924, 0.55", "-65.9291, 80.2878, -47.5219, 0.28", "-67.7, 82.2748, -48.2364, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-52.9457, 27.1815, -14.3586, 0.83", "-55.0686, 27.8741, -14.3586, 0.83", "-57.7556, 28.7509, -14.3586, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-52.9457, 27.1815, -14.3586, 0.55", "-57.1042, 27.3018, -14.9116, 0.55", "-59.3061, 27.3655, -15.2044, 0.55", "-62.6129, 27.4613, -15.6442, 0.55", "-64.0728, 27.5035, -15.8384, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.15733, 39.4961, -23.818, 2.22", "6.53911, 40.2463, -22.9335, 2.22", "12.2861, 43.3094, -21.403, 0.55", "14.1657, 44.2916, -22.1183, 1.11", "17.1332, 45.8424, -23.2476, 0.83", "19.2581, 46.9529, -24.0563, 0.55", "22.8205, 48.8145, -25.412, 0.55", "25.9919, 50.4548, -27.3921, 0.83", "32.1071, 53.6008, -32.9528, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "5.15733, 39.4961, -23.818, 0.83", "10.3906, 37.287, -22.666, 0.83", "13.3631, 35.7295, -21.9684, 1.11", "15.0987, 34.6118, -21.543, 0.55", "16.1722, 33.7495, -21.2928, 1.66", "19.646, 30.2971, -20.5187, 1.66", "21.8085, 27.8566, -20.0614, 0.83", "23.5786, 25.3312, -19.7516, 0.83", "24.9279, 23.1651, -19.5327, 0.83", "26.5857, 20.2687, -19.3299, 1.39", "27.872, 17.8151, -19.3202, 1.39", "28.423, 17.8526, -20.1522, 0.55", "30.4514, 18.3724, -23.7052, 1.11", "31.4597, 18.6765, -25.5148, 0.55", "31.8781, 18.7943, -26.2777, 1.39", "33.2153, 19.1292, -28.7905, 1.39", "37.7171, 19.9606, -37.5195, 1.66", "38.6877, 20.0109, -39.4517, 1.66", "39.9621, 19.7551, -42.0661, 0.83", "40.8363, 19.3965, -43.7842, 0.28", "41.51, 19.0354, -44.9718, 0.28", "42.4525, 18.3552, -46.323, 0.28", "43.4348, 17.5578, -47.106, 0.55", "45.3116, 16.291, -48.3176, 0.28", "46.7213, 15.5471, -49.072, 1.11", "48.4674, 14.8448, -50.0245, 0.28", "49.2679, 14.5409, -50.5384, 0.55", "50.9714, 13.7675, -51.7573, 1.39", "52.8434, 12.7858, -53.3225, 0.55", "54.4081, 11.823, -55.1671, 0.55", "55.0999, 11.2219, -56.3056, 0.83", "56.1169, 9.97734, -58.5039, 1.11", "56.684, 9.13473, -59.9279, 1.11", "57.1893, 8.16175, -61.4208, 1.11", "58.3015, 5.56753, -64.876, 0.28", "58.73, 4.44785, -66.0662, 0.28", "59.2909, 3.07564, -67.3556, 0.55", "60.2998, 0.902803, -69.3731, 0.28", "60.6602, 0.219118, -70.0062, 1.11", "61.2135, -0.60969, -70.7426, 1.66", "63.8774, -4.09332, -73.6602, 0.28", "64.2914, -4.60104, -74.1054, 0.55", "65.7827, -6.41915, -75.6811, 0.28", "65.9481, -6.57523, -75.8492, 0.83", "68.3299, -8.25728, -78.3144, 0.28", "68.9975, -8.57272, -78.9868, 1.39", "69.9628, -8.89067, -79.9323, 1.94", "70.8238, -9.12625, -80.7916, 1.11", "74.2507, -9.80495, -84.267, 0.28", "75.9951, -10.0927, -86.0775, 0.83", "79.4711, -10.5672, -89.6523, 0.28", "80.3614, -10.6709, -90.5856, 0.55", "82.4757, -10.8949, -92.835, 1.11", "85.1107, -11.2002, -95.5795, 0.28", "85.8537, -11.325, -96.2519, 1.94", "87.5007, -11.5644, -97.5452, 2.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "3.43648, 43.6927, -40.4085, 2.49", "6.43385, 44.2257, -41.1722, 2.49", "11.4455, 45.5874, -42.2147, 1.11", "13.8684, 46.2468, -42.6425, 0.83", "17.7372, 47.2887, -43.4351, 0.83", "22.383, 48.54, -44.3869, 1.66", "25.4994, 49.3792, -45.0253, 1.94", "27.8075, 50.1786, -45.5492, 0.55", "29.7099, 51.0671, -45.7333, 0.55", "31.8842, 52.1214, -45.9857, 1.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.43648, 43.6927, -40.4085, 0.55", "4.66871, 45.5532, -43.2539, 0.55", "4.92153, 46.0009, -43.8565, 0.55", "5.44126, 47.1618, -45.2606, 1.11", "6.23102, 49.5241, -47.7633, 1.39", "6.86381, 51.7886, -49.9192, 0.55", "7.36384, 53.8587, -51.7112, 0.28", "7.68236, 55.6007, -53.0926, 1.11", "8.15709, 59.1259, -55.4433, 0.28", "8.47111, 61.958, -56.9753, 1.11", "8.61076, 63.4952, -57.6604, 0.28", "8.73455, 65.0253, -58.2927, 0.83", "9.17828, 70.1369, -60.2024, 0.28", "9.39408, 72.3044, -60.9085, 1.11", "10.006, 77.8369, -62.3771, 0.28", "10.1381, 78.909, -62.6346, 1.66", "10.3676, 80.7664, -63.035, 2.22", "10.7244, 83.4077, -63.5973, 1.11", "11.1926, 86.7558, -64.191, 0.55", "11.2946, 87.6189, -64.3426, 0.83", "11.4974, 89.9317, -64.7209, 0.28", "11.5555, 90.7874, -64.9148, 0.83", "11.7824, 93.922, -65.8301, 0.28", "11.8848, 94.9489, -66.2511, 1.11", "12.3373, 98.7227, -67.9853, 0.28", "12.5948, 100.936, -69.0608, 0.83", "12.9491, 103.914, -70.4195, 0.28", "13.3504, 108.8, -72.3598, 0.55", "13.711, 113.565, -74.1309, 0.28", "13.7934, 114.623, -74.5422, 0.83", "14.0533, 117.848, -75.7873, 0.28", "14.294, 120.849, -76.8652, 0.83", "14.7953, 127.153, -79.1172, 0.28", "15.0156, 130.424, -80.3028, 0.55", "15.1569, 132.038, -80.7935, 0.83", "15.4755, 134.976, -81.62, 0.28", "15.5473, 135.574, -81.7597, 0.55", "16.5267, 143.047, -83.2294, 0.28", "16.6132, 143.66, -83.2945, 0.55", "17.3432, 150.248, -83.479, 0.28", "17.5429, 152.202, -83.4402, 0.55", "17.9399, 156.682, -83.099, 0.28", "18.0961, 158.765, -82.8345, 0.83", "18.2635, 162.025, -82.0542, 0.28", "18.2826, 162.63, -81.9093, 0.55", "18.2527, 164.614, -81.4547, 0.28", "18.2579, 166.858, -80.8973, 1.11" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "43.0041, -33.5195, 6.86223, 0.55", "44.8, -31.1461, 4.30376, 0.55", "46.2978, -29.4494, 2.1845, 0.55", "46.7357, -28.9562, 1.60299, 0.55", "48.0249, -27.5891, -0.138583, 0.55", "49.015, -26.6154, -1.49399, 0.55", "50.009, -25.677, -2.82299, 0.55", "51.7156, -24.205, -4.87904, 0.55", "52.7824, -23.2518, -6.07097, 0.55", "54.3832, -21.8279, -7.71787, 0.55", "55.3306, -21.0301, -8.57959, 0.55", "56.3414, -20.1164, -9.50622, 0.55", "57.6356, -18.7029, -10.6837, 1.39", "59.3784, -16.5485, -12.3927, 0.55", "61.2066, -14.2324, -14.2371, 0.55", "62.7445, -12.1861, -15.9129, 1.11", "64.3663, -9.98555, -17.8276, 0.55", "65.1359, -8.94519, -18.8841, 0.55", "66.2179, -7.52902, -20.522, 0.28", "66.6244, -7.09659, -21.1616, 0.83", "68.2454, -5.6125, -23.3134, 0.28", "68.8731, -5.07572, -24.1476, 0.83", "70.4098, -3.8962, -26.1688, 0.28", "70.91, -3.53545, -26.8171, 1.39", "73.5736, -1.56356, -30.1797, 0.28", "75.7063, 0.00743198, -32.8624, 0.28", "77.14, 1.01212, -34.5069, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "43.0041, -33.5195, 6.86223, 0.83", "42.3529, -35.4622, 5.02634, 0.83", "41.9793, -36.6977, 3.9654, 0.83", "41.1428, -40.4292, 1.2279, 0.83", "40.5843, -42.9842, -0.43509, 0.83", "39.9014, -45.7965, -2.24811, 0.28", "39.5315, -47.3293, -3.2128, 0.83", "39.1417, -48.7071, -4.16247, 0.28", "38.7228, -50.6199, -5.50686, 0.28", "38.5972, -51.8476, -6.35421, 0.55", "38.7077, -53.9399, -7.9333, 0.28", "38.8367, -55.0342, -8.93396, 0.83", "38.9115, -56.9931, -10.8838, 0.28", "38.899, -57.8265, -11.8221, 0.28", "38.9035, -59.4379, -13.8332, 0.28", "38.9614, -60.9091, -15.6968, 0.28", "39.0154, -62.1669, -17.3255, 1.39", "39.1093, -65.3911, -21.6277, 0.28", "39.1439, -67.1682, -24.0263, 1.11", "39.1994, -68.9485, -26.5641, 0.28", "39.2269, -69.2583, -27.0299, 0.83", "39.5487, -71.4357, -30.3931, 0.28", "39.6565, -71.7793, -30.8998, 0.55", "40.4077, -73.2554, -32.9768, 0.28", "40.6848, -73.7955, -33.6559, 1.11", "41.4544, -75.308, -35.384, 0.28", "42.0839, -76.5916, -36.7814, 0.83", "43.2982, -79.1814, -39.5041, 0.28", "43.4056, -79.4126, -39.7979, 0.83", "44.0228, -80.6481, -41.5549, 0.28", "44.487, -81.3994, -42.9972, 0.83", "45.2198, -82.4866, -45.4011, 0.28", "45.7026, -83.0863, -46.8426, 1.11", "47.2583, -84.7272, -51.0295, 0.28", "47.603, -85.0246, -51.8192, 0.83", "50.1038, -86.7655, -56.6671, 0.28", "51.0186, -87.3324, -58.3107, 0.28", "52.0591, -87.9319, -59.9327, 0.28", "52.2176, -88.0179, -60.147, 0.83", "53.8028, -88.8288, -61.9402, 0.28", "54.074, -88.953, -62.2315, 0.55", "56.2761, -89.7363, -64.2236, 0.28", "56.6652, -89.8147, -64.6044, 0.55", "57.9904, -90.1053, -65.9876, 0.28", "58.5527, -90.2563, -66.5791, 0.83", "60.2312, -90.7724, -68.3448, 0.28", "60.9195, -90.9827, -69.0577, 0.55", "63.2038, -91.6924, -71.3083, 0.28", "64.5154, -92.1702, -72.6568, 0.55", "67.9909, -93.7448, -76.3821, 0.28", "68.3667, -93.9368, -76.806, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "38.329, -33.7299, 20.077, 0.83", "40.8123, -32.6457, 20.8779, 0.83", "43.2868, -31.2481, 21.8535, 0.83", "44.0562, -30.6936, 22.1662, 0.83", "46.9808, -28.3069, 23.3206, 0.83", "47.9899, -27.4209, 23.7065, 0.83", "49.6466, -25.9622, 24.3035, 1.39", "51.8352, -24.0109, 25.1611, 1.39", "54.1549, -21.9398, 26.0832, 1.39", "55.6494, -20.7591, 26.5445, 0.55", "56.4485, -20.1831, 26.708, 1.39", "57.8687, -19.3587, 26.9533, 1.39", "60.5047, -18.1094, 27.3099, 0.55", "62.1498, -17.4522, 27.5107, 1.66", "67.5975, -15.4137, 28.083, 0.83", "71.4564, -13.8939, 28.4166, 0.83", "73.5194, -12.9562, 28.5893, 0.83", "75.1919, -12.1379, 28.702, 0.55", "75.9254, -11.7495, 28.7245, 1.11", "77.7464, -10.7486, 28.7784, 0.55", "79.105, -9.61825, 28.8672, 1.39", "80.9931, -7.59175, 28.9299, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "38.329, -33.7299, 20.077, 0.55", "41.0369, -38.2937, 20.3413, 0.55", "43.6712, -42.6011, 20.7328, 0.83", "44.531, -44.0024, 20.8815, 0.28", "45.4765, -45.4885, 21.1015, 0.83", "47.5867, -48.6813, 21.4781, 0.28", "48.3703, -49.8237, 21.5945, 0.83", "49.2551, -51.0154, 21.789, 0.83", "50.6283, -52.6147, 21.936, 0.28", "52.3115, -54.5942, 21.9057, 0.83", "54.2844, -56.9581, 21.686, 0.28", "54.6767, -57.4276, 21.5751, 1.11", "55.7961, -58.7179, 21.2002, 1.11", "57.4115, -60.4636, 20.5464, 0.28", "58.7927, -61.8871, 19.8171, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-67.7, 82.2748, -48.2364, 0.28", "-69.1933, 84.0947, -50.158, 0.28", "-69.9194, 84.9887, -51.1082, 0.83", "-71.6185, 87.0175, -53.271, 0.28", "-72.3517, 87.8813, -54.2354, 0.55", "-74.0198, 89.7397, -56.3662, 0.28", "-74.3439, 90.0735, -56.7741, 0.83", "-75.6311, 91.2678, -58.3308, 0.28", "-75.9409, 91.505, -58.7185, 0.55", "-77.2388, 92.2956, -60.1584, 0.28", "-77.8107, 92.6334, -60.7989, 0.55", "-79.8324, 93.6916, -62.9075, 0.55", "-80.57, 94.0714, -63.6889, 0.83", "-82.9217, 95.2751, -66.1331, 0.28", "-85.6562, 96.8216, -68.9827, 1.11", "-87.759, 98.0661, -71.1139, 0.28", "-88.3287, 98.4149, -71.6857, 0.55", "-89.6405, 99.2113, -72.9311, 0.28", "-90.3061, 99.6261, -73.5645, 1.11", "-92.4743, 101.092, -75.5476, 0.28", "-93.8361, 102.005, -76.9059, 1.11", "-95.4432, 103.009, -78.4151, 0.28", "-95.8237, 103.238, -78.7613, 0.55", "-97.116, 103.977, -79.8334, 0.28", "-97.7101, 104.304, -80.321, 0.55", "-100.009, 105.52, -82.0316, 0.28", "-100.755, 105.978, -82.6167, 0.55", "-102.021, 106.815, -83.6787, 0.28", "-102.821, 107.327, -84.3818, 0.55", "-104.67, 108.385, -85.9994, 0.28", "-105.447, 108.835, -86.7024, 0.55", "-107.523, 109.998, -88.5771, 0.28", "-107.987, 110.255, -89.0593, 0.55", "-109.338, 110.98, -90.6908, 0.28", "-110.157, 111.377, -91.7599, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-67.7, 82.2748, -48.2364, 0.55", "-68.3025, 80.8967, -49.4062, 0.55", "-68.906, 79.6474, -50.5468, 1.11", "-70.245, 77.1779, -52.824, 0.28", "-71.0704, 75.7906, -54.0, 0.28", "-72.6994, 73.4868, -56.0138, 0.28", "-73.0022, 73.1361, -56.3103, 0.55", "-73.8915, 72.3213, -57.0056, 0.28", "-74.8608, 71.5493, -57.6357, 0.83", "-76.5812, 70.175, -58.5817, 0.28", "-78.5575, 68.493, -59.6352, 0.28", "-80.7683, 66.3272, -60.9064, 0.55", "-82.4749, 64.3683, -62.0307, 0.28", "-83.2703, 63.3704, -62.5824, 0.83", "-85.4247, 60.3965, -64.2735, 0.28", "-86.2132, 59.1184, -65.0047, 0.83", "-87.3603, 56.5029, -66.3049, 0.28", "-87.4818, 56.0256, -66.5507, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-57.7556, 28.7509, -14.3586, 0.28", "-60.9288, 27.8648, -14.748, 0.28", "-62.5126, 27.3153, -14.8398, 0.55", "-64.8328, 26.4345, -14.8553, 0.28", "-66.1078, 25.8755, -14.7615, 0.83", "-68.232, 24.8764, -14.4833, 0.28", "-68.9276, 24.5443, -14.3267, 0.83", "-71.2637, 23.1152, -13.5843, 0.28", "-72.0586, 22.5672, -13.3558, 0.83", "-73.7006, 21.3027, -12.966, 0.28", "-74.9796, 20.2481, -12.7123, 0.83", "-77.5504, 18.3022, -12.4199, 0.55", "-80.0369, 16.4948, -12.3977, 0.28", "-81.6853, 15.3885, -12.5197, 1.11", "-83.1916, 14.4503, -12.6839, 1.39", "-85.9783, 12.8888, -12.9695, 0.55", "-89.0108, 11.2008, -13.305, 0.28", "-91.4404, 9.9136, -13.5926, 0.28", "-93.4579, 8.99068, -13.6817, 0.28", "-95.178, 8.28138, -13.6689, 0.28", "-97.2619, 7.5457, -13.6459, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-57.7556, 28.7509, -14.3586, 0.55", "-60.4588, 27.4613, -14.7558, 0.55", "-61.9391, 26.7526, -15.0065, 0.55", "-66.4395, 24.5826, -15.0619, 0.83", "-69.8299, 22.9977, -14.8761, 0.55", "-71.6286, 22.2038, -14.857, 0.55", "-72.8616, 21.6705, -14.8879, 0.83", "-75.4584, 20.59, -15.0042, 1.39", "-82.4882, 17.601, -15.8436, 0.55", "-84.5436, 16.7962, -16.1716, 0.55", "-89.1743, 15.1454, -17.0069, 0.55", "-91.1495, 14.4508, -17.4343, 0.55", "-94.0869, 13.4099, -18.1965, 1.39", "-97.5895, 12.1733, -19.2951, 0.28", "-101.48, 10.8168, -20.8604, 0.55", "-102.746, 10.3743, -21.3238, 1.11", "-108.4, 8.50872, -22.9834, 0.55", "-109.894, 8.06087, -23.3329, 0.55", "-110.264, 7.95434, -23.394, 1.39", "-112.852, 7.19854, -23.6231, 1.39", "-114.694, 6.61725, -23.7994, 1.11", "-117.642, 5.71143, -24.0532, 0.55", "-120.688, 4.78716, -23.9717, 0.55", "-122.378, 4.21359, -23.8313, 1.11", "-124.651, 3.36002, -23.4267, 0.28", "-127.412, 2.24185, -22.5671, 0.83", "-129.816, 1.16077, -21.6489, 0.28", "-133.298, -0.62736, -20.1517, 0.28", "-134.577, -1.37651, -19.6356, 0.83", "-137.504, -3.34231, -18.2423, 0.28", "-139.265, -4.62811, -17.4814, 1.11", "-140.881, -5.90401, -16.7967, 1.11", "-142.172, -6.8732, -16.277, 0.55", "-145.332, -9.33945, -15.3065, 0.55", "-146.982, -10.6597, -14.9167, 0.55", "-150.573, -13.5737, -14.4931, 0.55", "-152.053, -14.7359, -14.4019, 1.39", "-156.825, -18.0473, -14.0216, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "32.1071, 53.6008, -32.9528, 0.55", "39.205, 53.8303, -29.7869, 0.55", "42.6986, 54.1221, -28.631, 0.55", "43.9491, 54.2655, -28.2409, 0.83", "45.3539, 54.5195, -27.7902, 0.83", "47.1724, 54.8646, -27.2083, 0.28", "49.5676, 55.3749, -26.4923, 0.55", "51.2475, 55.8101, -26.1149, 0.28", "54.9762, 56.8619, -25.3691, 0.55", "61.2382, 58.8112, -24.2489, 0.55", "61.9771, 59.0603, -24.1573, 0.55", "65.6968, 60.3588, -23.7316, 0.28", "67.2772, 60.9174, -23.5891, 1.39", "71.3187, 62.3405, -23.4575, 0.55", "73.4783, 63.1758, -23.7286, 1.11", "75.9791, 64.1805, -24.6378, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "32.1071, 53.6008, -32.9528, 0.55", "33.2125, 54.4269, -33.9261, 0.55", "33.8711, 54.8512, -34.3254, 1.11", "35.9731, 56.1864, -35.3438, 0.55", "37.0791, 56.8895, -35.8084, 0.55", "39.1331, 58.1906, -36.537, 1.11", "40.0862, 58.8166, -36.8447, 1.11", "42.269, 60.1046, -37.3066, 0.28", "43.1288, 60.5676, -37.5559, 0.55", "44.945, 61.5326, -38.1752, 0.28", "45.6619, 61.9738, -38.612, 0.55", "47.0456, 62.8731, -39.5289, 0.28", "48.4963, 63.818, -40.6313, 0.83", "52.6694, 66.4306, -44.0677, 0.28", "53.8625, 67.1245, -44.9906, 0.83", "57.9838, 69.6163, -48.0663, 0.28", "60.0512, 70.9281, -49.5664, 1.11", "61.7526, 72.0618, -50.718, 0.28", "62.6393, 72.6904, -51.3224, 0.28", "64.8261, 74.2822, -52.5851, 0.28", "67.4152, 76.0116, -53.9841, 1.66", "70.0273, 77.6116, -55.2379, 0.28", "71.2529, 78.3956, -55.8679, 0.83", "74.9736, 80.9431, -57.6587, 0.28", "75.9349, 81.6427, -58.1055, 1.11", "78.2667, 83.3452, -59.1933, 0.28", "79.6437, 84.2903, -59.7981, 0.28", "82.1196, 85.955, -60.8078, 1.11", "84.3491, 87.4052, -61.6433, 0.28", "85.5371, 88.1331, -62.0079, 0.28", "87.5904, 89.3421, -62.5798, 0.83", "89.9934, 90.7458, -63.1699, 0.28", "91.4458, 91.5571, -63.4485, 1.11", "94.1118, 92.8725, -63.7583, 0.55", "96.8965, 94.2245, -63.9364, 0.55", "99.093, 95.3609, -63.8683, 1.66", "100.778, 96.3336, -63.6418, 0.55", "102.33, 97.3418, -63.4525, 0.28", "104.366, 98.7975, -63.2578, 0.28", "105.614, 99.7509, -63.2489, 0.28", "107.962, 101.616, -63.4473, 1.11", "108.828, 102.286, -63.6314, 1.11", "112.783, 105.249, -64.7452, 0.28", "114.8, 106.714, -65.3018, 1.11", "117.217, 108.474, -65.9295, 0.28", "118.014, 109.044, -66.1223, 0.55", "119.946, 110.362, -66.562, 0.28", "121.949, 111.621, -66.9245, 0.83", "125.044, 113.557, -67.2933, 0.28", "127.251, 114.944, -67.5547, 0.83", "128.314, 115.584, -67.6407, 1.39", "130.017, 116.599, -67.822, 1.39", "133.071, 118.434, -68.256, 0.28", "135.265, 119.713, -68.7112, 0.83", "137.799, 121.164, -69.4549, 0.28", "140.349, 122.65, -70.3753, 0.28", "141.936, 123.546, -70.9967, 0.55", "143.379, 124.361, -71.5884, 0.28", "144.958, 125.226, -72.312, 0.28", "147.824, 126.646, -73.8801, 1.39", "150.968, 128.049, -76.0021, 0.55", "152.035, 128.469, -76.7747, 0.55", "153.209, 128.882, -77.5891, 0.55", "157.306, 130.177, -80.3221, 1.11", "159.673, 130.872, -81.9266, 0.55", "162.726, 131.498, -84.0628, 1.11", "164.76, 131.79, -85.4994, 0.83", "167.365, 132.159, -87.3729, 0.28", "168.936, 132.326, -88.4996, 0.55", "171.745, 132.463, -90.3633, 0.83", "175.615, 132.625, -92.6774, 0.28", "175.853, 132.63, -92.8112, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "87.5007, -11.5644, -97.5452, 0.28", "89.6574, -14.7434, -97.8727, 0.28", "89.8176, -14.9795, -97.897, 0.55", "92.8969, -19.5184, -98.3646, 0.28", "93.0537, -19.7493, -98.3884, 0.55", "94.3258, -21.6245, -98.5816, 0.28", "96.0435, -24.1565, -98.8424, 1.11" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "87.5007, -11.5644, -97.5452, 0.28", "92.5337, -12.309, -100.739, 0.28", "93.4329, -12.4422, -101.31, 0.55", "98.5327, -13.1967, -104.546, 0.28", "100.245, -13.4502, -105.633, 1.39", "104.625, -14.0983, -108.413, 0.28", "105.588, -14.2409, -109.024, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "31.8842, 52.1214, -45.9857, 0.55", "34.154, 53.2271, -44.9212, 0.55", "36.4211, 54.2467, -44.0809, 0.28", "39.1208, 55.411, -43.2406, 0.83", "42.9724, 56.9809, -42.1366, 0.55", "45.3511, 57.8352, -41.7014, 1.11", "48.5061, 58.8372, -41.2264, 1.39", "51.2995, 59.6034, -41.0113, 0.55", "52.7432, 59.9538, -40.9324, 0.55", "56.3764, 60.8231, -40.8973, 1.11", "63.0596, 62.3652, -40.856, 0.55", "66.0845, 63.0514, -40.7585, 0.28", "68.9445, 63.7504, -40.4215, 0.55", "73.3357, 64.8523, -39.5337, 0.28", "75.9701, 65.5013, -38.7967, 0.83", "80.2571, 66.493, -37.2109, 0.55", "82.499, 66.9702, -36.0954, 0.55", "85.4047, 67.5639, -34.4883, 2.22", "86.5831, 67.789, -33.7771, 2.22", "89.3706, 68.3988, -32.2043, 0.28", "90.554, 68.7097, -31.5441, 0.28", "92.2612, 69.2428, -30.7919, 0.28", "94.5938, 70.1207, -29.9515, 0.83", "96.3467, 70.9453, -29.4254, 1.11", "100.116, 72.7265, -28.546, 0.55", "101.243, 73.231, -28.4276, 1.11", "104.115, 74.3952, -28.3212, 0.55", "105.664, 74.9128, -28.327, 0.55", "109.1, 75.8224, -28.5724, 0.83", "116.111, 77.3855, -29.3514, 0.55", "120.487, 78.2663, -29.9745, 1.11", "121.695, 78.5045, -30.147, 0.83", "123.854, 78.9026, -30.4726, 0.28", "126.599, 79.3483, -30.9275, 1.66", "129.77, 79.8073, -31.4139, 0.55", "133.433, 80.3712, -31.7524, 0.55", "137.834, 80.9774, -31.8733, 0.55", "139.903, 81.1882, -31.8852, 0.28", "142.173, 81.2952, -31.8548, 1.11", "145.682, 81.147, -31.6407, 0.55", "147.524, 80.8952, -31.4885, 0.28", "148.974, 80.5531, -31.34, 1.11", "152.211, 79.5753, -30.9469, 0.55", "153.722, 79.03, -30.7538, 0.55", "155.776, 78.1826, -30.5311, 0.55", "156.488, 77.8551, -30.4902, 0.55", "157.935, 77.1407, -30.3826, 0.28", "158.943, 76.6095, -30.3295, 0.55", "160.808, 75.511, -30.191, 0.28", "161.776, 74.9229, -30.0574, 0.83", "163.71, 73.6678, -29.7012, 0.28", "164.549, 73.1373, -29.5336, 0.83", "166.317, 72.0549, -29.1422, 0.28", "168.096, 70.9449, -28.7012, 0.83", "170.747, 69.312, -27.9554, 0.28", "171.744, 68.6445, -27.6472, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "31.8842, 52.1214, -45.9857, 0.55", "31.9942, 52.5327, -48.3296, 0.55", "32.0799, 53.0188, -49.7428, 0.55", "32.1289, 53.5882, -50.7408, 0.55", "32.2943, 55.4557, -53.2807, 1.11", "33.317, 62.6895, -61.3476, 1.11", "33.8621, 66.1163, -64.5889, 0.28", "34.1771, 68.1884, -66.19, 1.11", "34.8526, 72.6472, -69.1459, 0.55", "35.2498, 74.935, -70.457, 1.11", "36.1251, 79.2982, -72.5507, 0.28", "36.6722, 81.9397, -73.4311, 1.39", "37.6337, 86.4727, -74.9458, 0.28", "37.8793, 87.4996, -75.2887, 1.11", "38.4843, 89.8555, -76.0663, 0.28", "38.6589, 90.6225, -76.332, 0.83", "39.0721, 92.9548, -77.1511, 0.28", "39.1647, 93.7679, -77.473, 0.83", "39.2041, 96.582, -78.6138, 0.83", "38.9634, 98.6302, -79.4697, 0.83", "38.502, 100.176, -80.0534, 0.28", "37.965, 101.247, -80.3678, 0.83", "36.3085, 103.028, -80.5887, 0.28", "35.2341, 103.605, -80.3582, 1.11", "33.7486, 103.937, -79.6954, 0.28", "31.3611, 103.938, -78.337, 1.11", "28.1538, 103.41, -75.9289, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "77.14, 1.01212, -34.5069, 0.55", "79.3829, 2.10236, -33.1175, 0.55", "81.3637, 3.06524, -31.8904, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "77.14, 1.01212, -34.5069, 0.28", "77.516, 1.76582, -35.9707, 0.28", "77.7281, 2.17718, -36.6598, 0.28", "77.9711, 2.63542, -37.314, 0.83", "79.056, 4.82283, -39.9465, 0.55", "81.5407, 9.60987, -45.0914, 0.28", "82.4324, 11.2781, -46.7458, 0.28", "83.1384, 12.6589, -47.9425, 0.83", "84.2017, 14.4788, -49.3271, 0.28", "85.1878, 15.9244, -50.2201, 0.55", "86.2111, 17.1213, -50.7463, 0.55", "87.5659, 18.4501, -51.2094, 0.28", "88.3106, 19.1343, -51.5971, 0.83", "91.1721, 21.8251, -53.5294, 0.28", "91.6718, 22.2826, -53.9119, 0.55", "93.9075, 24.2705, -55.7021, 0.28", "95.5112, 25.8118, -57.1085, 0.83", "97.076, 27.3612, -58.5505, 0.28", "97.6966, 28.0464, -59.2362, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "75.9791, 64.1805, -24.6378, 1.11", "78.2316, 64.1351, -24.7692, 1.11", "81.6224, 63.9832, -24.8431, 0.55", "85.2784, 63.7135, -24.8536, 0.28", "86.9731, 63.6026, -24.8135, 0.83", "87.5934, 63.5667, -24.7886, 0.83", "89.4132, 63.415, -24.6685, 0.55", "90.5728, 63.3181, -24.5137, 0.55", "91.1216, 63.2681, -24.4133, 0.55", "93.5016, 63.0784, -24.093, 0.28", "94.5934, 63.0108, -23.9729, 1.11", "97.5019, 62.8964, -23.7076, 0.28", "99.8533, 62.8116, -23.4624, 0.55", "101.532, 62.7366, -23.2613, 0.28", "102.939, 62.6269, -23.2182, 0.55", "105.205, 62.3264, -23.3349, 0.83", "106.067, 62.1898, -23.3717, 1.11", "109.176, 61.6053, -23.5011, 0.28", "110.735, 61.1785, -23.5645, 1.11", "115.388, 59.5244, -23.7374, 0.28", "116.733, 58.8887, -23.7228, 0.55", "120.078, 56.9922, -23.5465, 0.28", "121.12, 56.3154, -23.4886, 0.83", "123.141, 54.9168, -23.4003, 0.28", "124.884, 53.6409, -23.2823, 1.39", "127.814, 51.356, -22.9532, 0.28", "129.167, 50.2416, -22.8862, 0.55", "130.815, 48.8038, -22.9988, 0.28", "132.156, 47.6278, -23.1014, 0.55", "133.026, 46.895, -23.1783, 0.28", "133.636, 46.4185, -23.308, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "75.9791, 64.1805, -24.6378, 0.28", "75.7442, 65.7953, -25.3341, 0.28", "75.5288, 67.0916, -25.8782, 1.39", "74.9837, 69.8517, -26.9767, 0.28", "74.5949, 71.7809, -27.8077, 0.55", "74.4019, 72.8535, -28.1664, 0.28", "74.2826, 73.6382, -28.4103, 0.55", "74.2203, 74.0069, -28.5175, 0.28", "74.1454, 75.0022, -28.6501, 0.55", "74.3895, 78.2449, -28.6018, 0.28", "74.9006, 81.4613, -28.633, 0.83", "75.3655, 83.5114, -28.7512, 0.28", "75.5973, 84.3148, -28.8424, 0.55", "76.8034, 87.7453, -29.3656, 0.28", "77.4289, 89.3091, -29.7071, 0.83", "78.8268, 92.3784, -30.5654, 0.28", "79.2315, 93.2189, -30.9232, 0.55", "79.9719, 94.6841, -31.5863, 0.28", "80.2308, 95.1814, -31.8552, 0.55", "81.1303, 96.905, -33.0425, 0.28", "81.4764, 97.5414, -33.4486, 0.55", "82.5539, 99.2666, -34.4039, 0.28", "83.0737, 100.163, -34.9372, 1.39" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_21", "dend_0", "dend_48", "dend_45", "dend_27", "dend_22", "dend_2", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_39", "dend_28", "dend_26", "dend_23", "dend_6", "dend_3", "dend_56", "dend_51", "dend_43", "dend_40", "dend_34", "dend_29", "dend_25", "dend_24", "dend_12", "dend_7", "dend_5", "dend_4", "dend_62", "dend_57", "dend_53", "dend_52", "dend_42", "dend_41", "dend_38", "dend_35", "dend_31", "dend_30", "dend_16", "dend_13", "dend_9", "dend_8", "dend_59", "dend_58", "dend_55", "dend_54", "dend_37", "dend_36", "dend_33", "dend_32", "dend_18", "dend_17", "dend_15", "dend_14", "dend_11", "dend_10", "dend_61", "dend_60", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_21", "dend_0", "dend_48", "dend_45", "dend_27", "dend_22", "dend_2", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_39", "dend_28", "dend_26", "dend_23", "dend_6", "dend_3", "dend_56", "dend_51", "dend_43", "dend_40", "dend_34", "dend_29", "dend_25", "dend_24", "dend_12", "dend_7", "dend_5", "dend_4", "dend_62", "dend_57", "dend_53", "dend_52", "dend_42", "dend_41", "dend_38", "dend_35", "dend_31", "dend_30", "dend_16", "dend_13", "dend_9", "dend_8", "dend_59", "dend_58", "dend_55", "dend_54", "dend_37", "dend_36", "dend_33", "dend_32", "dend_18", "dend_17", "dend_15", "dend_14", "dend_11", "dend_10", "dend_61", "dend_60", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_21", "dend_0", "axon_0", "dend_48", "dend_45", "dend_27", "dend_22", "dend_2", "dend_1", "axon_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_39", "dend_28", "dend_26", "dend_23", "dend_6", "dend_3", "dend_56", "dend_51", "dend_43", "dend_40", "dend_34", "dend_29", "dend_25", "dend_24", "dend_12", "dend_7", "dend_5", "dend_4", "dend_62", "dend_57", "dend_53", "dend_52", "dend_42", "dend_41", "dend_38", "dend_35", "dend_31", "dend_30", "dend_16", "dend_13", "dend_9", "dend_8", "dend_59", "dend_58", "dend_55", "dend_54", "dend_37", "dend_36", "dend_33", "dend_32", "dend_18", "dend_17", "dend_15", "dend_14", "dend_11", "dend_10", "dend_61", "dend_60", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_MC_ba3c5063e4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_21, dend_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_21, dend_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_21, dend_0, axon_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, axon_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999939972181734)
    connect dend_21(0), soma_0(0.49999939972181734)
    connect dend_0(0), soma_0(0.49999939972181734)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.9859, 12.8549, -5.10984, 3.40449 ) }
    soma_0 { pt3dadd( -2.74527, 11.442, -4.51041, 6.04084 ) }
    soma_0 { pt3dadd( -2.50465, 10.0291, -3.91097, 6.93662 ) }
    soma_0 { pt3dadd( -2.26402, 8.61621, -3.31154, 7.83365 ) }
    soma_0 { pt3dadd( -2.0234, 7.20331, -2.7121, 8.89842 ) }
    soma_0 { pt3dadd( -1.78278, 5.7904, -2.11267, 9.41118 ) }
    soma_0 { pt3dadd( -1.54215, 4.37749, -1.51323, 9.63685 ) }
    soma_0 { pt3dadd( -1.30153, 2.96459, -0.913797, 10.0321 ) }
    soma_0 { pt3dadd( -1.06091, 1.55168, -0.314362, 10.5627 ) }
    soma_0 { pt3dadd( -0.820282, 0.138772, 0.285073, 11.052 ) }
    soma_0 { pt3dadd( -0.579658, -1.27413, 0.884508, 11.5412 ) }
    soma_0 { pt3dadd( -0.339035, -2.68704, 1.48394, 11.8933 ) }
    soma_0 { pt3dadd( -0.0984111, -4.09995, 2.08338, 11.8707 ) }
    soma_0 { pt3dadd( 0.142213, -5.51286, 2.68281, 11.8464 ) }
    soma_0 { pt3dadd( 0.382836, -6.92576, 3.28225, 11.8221 ) }
    soma_0 { pt3dadd( 0.62346, -8.33867, 3.88168, 11.7811 ) }
    soma_0 { pt3dadd( 0.864084, -9.75158, 4.48112, 11.6712 ) }
    soma_0 { pt3dadd( 1.10471, -11.1645, 5.08056, 11.0156 ) }
    soma_0 { pt3dadd( 1.34533, -12.5774, 5.67999, 9.02603 ) }
    soma_0 { pt3dadd( 1.58595, -13.9903, 6.27943, 6.99711 ) }
    soma_0 { pt3dadd( 1.82658, -15.4032, 6.87886, 3.87771 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 3.75254, -15.3958, 3.08956, 2.22 ) }
    dend_44 { pt3dadd( 3.99149, -17.6805, 3.08956, 2.22 ) }
    dend_44 { pt3dadd( 4.3671, -21.2715, 3.08956, 2.22 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.57746, 10.8141, -5.26044, 3.6 ) }
    dend_21 { pt3dadd( -9.10139, 13.3434, -7.13933, 3.6 ) }
    dend_21 { pt3dadd( -13.1848, 16.2744, -9.31652, 3.05 ) }
    dend_21 { pt3dadd( -15.2228, 17.7372, -10.4032, 3.6 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.897466, 12.8441, -2.11044, 3.32 ) }
    dend_0 { pt3dadd( -1.60186, 16.7097, -2.11044, 3.32 ) }
    dend_0 { pt3dadd( -2.1082, 19.4884, -2.11044, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.82658, -15.4032, 6.87886, 0.5517 ) }
    axon_0 { pt3dadd( 4.34489, -30.1903, 6.87886, 0.5517 ) }
    axon_0 { pt3dadd( 6.86319, -44.9774, 6.87886, 0.5517 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 34/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.3671, -21.2715, 3.08956, 1.11 ) }
    dend_48 { pt3dadd( 6.68841, -25.1084, 4.26142, 1.11 ) }
    dend_48 { pt3dadd( 8.26995, -27.7223, 5.05983, 1.11 ) }
    dend_48 { pt3dadd( 9.69044, -30.0702, 5.77693, 2.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 38/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 4.3671, -21.2715, 3.08956, 0.55 ) }
    dend_45 { pt3dadd( 3.16079, -23.3195, 3.82168, 0.55 ) }
    dend_45 { pt3dadd( 2.36865, -24.778, 4.00862, 0.28 ) }
    dend_45 { pt3dadd( 1.70923, -25.9921, 4.16424, 0.83 ) }
    dend_45 { pt3dadd( 0.740839, -27.7752, 4.39278, 0.55 ) }
    dend_45 { pt3dadd( -0.205562, -29.5177, 4.61613, 0.28 ) }
    dend_45 { pt3dadd( -1.08801, -31.1426, 4.82438, 0.28 ) }
    dend_45 { pt3dadd( -2.65429, -34.2702, 4.78679, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.2228, 17.7372, -10.4032, 2.77 ) }
    dend_27 { pt3dadd( -19.1728, 21.8372, -10.4032, 2.77 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.2228, 17.7372, -10.4032, 1.39 ) }
    dend_22 { pt3dadd( -16.8067, 17.4575, -11.0919, 1.39 ) }
    dend_22 { pt3dadd( -19.4852, 17.1441, -12.5177, 1.11 ) }
    dend_22 { pt3dadd( -21.2389, 16.939, -13.4513, 1.66 ) }
    dend_22 { pt3dadd( -24.5595, 16.5506, -15.2189, 1.11 ) }
    dend_22 { pt3dadd( -27.2065, 16.2411, -16.628, 1.11 ) }
    dend_22 { pt3dadd( -31.6781, 15.7182, -19.0083, 1.66 ) }
    dend_22 { pt3dadd( -34.0949, 15.5104, -20.4832, 1.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 56/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.1082, 19.4884, -2.11044, 3.32 ) }
    dend_2 { pt3dadd( -3.3082, 24.7484, -6.68044, 3.32 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.1082, 19.4884, -2.11044, 0.83 ) }
    dend_1 { pt3dadd( 0.768264, 21.3431, -2.77973, 0.83 ) }
    dend_1 { pt3dadd( 3.24903, 22.6894, -2.92612, 0.83 ) }
    dend_1 { pt3dadd( 6.74433, 24.3332, -2.94605, 0.83 ) }
    dend_1 { pt3dadd( 9.8413, 25.611, -2.89688, 0.83 ) }
    dend_1 { pt3dadd( 12.4866, 26.6653, -2.83605, 0.83 ) }
    dend_1 { pt3dadd( 15.9875, 28.0046, -2.64772, 0.83 ) }
    dend_1 { pt3dadd( 22.0714, 30.1381, -2.28467, 0.83 ) }
    dend_1 { pt3dadd( 25.2223, 31.2244, -2.13324, 0.83 ) }
    dend_1 { pt3dadd( 30.8308, 33.2837, -1.91329, 0.83 ) }
    dend_1 { pt3dadd( 33.4988, 34.3061, -1.80959, 0.83 ) }
    dend_1 { pt3dadd( 38.9648, 36.2438, -1.498, 0.83 ) }
    dend_1 { pt3dadd( 42.3131, 37.3842, -1.36242, 0.55 ) }
    dend_1 { pt3dadd( 43.7147, 37.9091, -1.39415, 0.55 ) }
    dend_1 { pt3dadd( 44.9878, 38.4454, -1.43923, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.86319, -44.9774, 6.87886, 0.28 ) }
    axon_1 { pt3dadd( 9.3815, -59.7645, 6.87886, 0.28 ) }
    axon_1 { pt3dadd( 11.8998, -74.5516, 6.87886, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 76/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 9.69044, -30.0702, 5.77693, 2.49 ) }
    dend_50 { pt3dadd( 11.0904, -30.8803, 4.97693, 2.49 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 78/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 9.69044, -30.0702, 5.77693, 0.83 ) }
    dend_49 { pt3dadd( 10.2111, -34.6236, 8.12462, 0.83 ) }
    dend_49 { pt3dadd( 10.2465, -35.8607, 8.82477, 0.83 ) }
    dend_49 { pt3dadd( 10.3682, -37.5648, 9.85971, 0.83 ) }
    dend_49 { pt3dadd( 10.6226, -39.8148, 11.3204, 0.55 ) }
    dend_49 { pt3dadd( 10.8855, -41.953, 12.8327, 0.83 ) }
    dend_49 { pt3dadd( 11.115, -44.0859, 14.2242, 0.83 ) }
    dend_49 { pt3dadd( 11.3427, -47.0037, 16.1491, 0.28 ) }
    dend_49 { pt3dadd( 11.5043, -48.8596, 17.5017, 0.28 ) }
    dend_49 { pt3dadd( 11.5813, -49.6226, 18.0899, 1.11 ) }
    dend_49 { pt3dadd( 11.993, -52.1366, 20.0663, 0.28 ) }
    dend_49 { pt3dadd( 12.4263, -54.5966, 22.001, 0.83 ) }
    dend_49 { pt3dadd( 12.8864, -57.4338, 24.0901, 0.28 ) }
    dend_49 { pt3dadd( 12.9486, -58.0914, 24.5145, 0.55 ) }
    dend_49 { pt3dadd( 12.9966, -60.3194, 25.886, 0.28 ) }
    dend_49 { pt3dadd( 13.0007, -60.8512, 26.2022, 0.55 ) }
    dend_49 { pt3dadd( 13.0765, -63.3535, 27.7082, 0.28 ) }
    dend_49 { pt3dadd( 13.0804, -63.6465, 27.9216, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 96/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.65429, -34.2702, 4.78679, 0.28 ) }
    dend_47 { pt3dadd( -2.45185, -36.5729, 5.77129, 0.28 ) }
    dend_47 { pt3dadd( -2.34894, -38.8358, 6.92588, 0.83 ) }
    dend_47 { pt3dadd( -2.31532, -39.3863, 7.21299, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -2.2486, -41.1811, 8.1866, 0.28 ) }
    dend_47 { pt3dadd( -2.11945, -42.7141, 9.07402, 0.55 ) }
    dend_47 { pt3dadd( -1.82774, -45.1446, 10.4866, 0.28 ) }
    dend_47 { pt3dadd( -1.61705, -46.9771, 11.6834, 0.83 ) }
    dend_47 { pt3dadd( -1.53597, -48.1092, 12.4723, 0.83 ) }
    dend_47 { pt3dadd( -1.45473, -49.9647, 13.7574, 0.83 ) }
    dend_47 { pt3dadd( -1.5022, -52.854, 15.7896, 0.55 ) }
    dend_47 { pt3dadd( -1.56253, -53.862, 16.5073, 0.55 ) }
    dend_47 { pt3dadd( -1.9129, -56.2884, 18.2217, 0.55 ) }
    dend_47 { pt3dadd( -2.40305, -58.2243, 19.5806, 0.55 ) }
    dend_47 { pt3dadd( -2.98348, -59.7597, 20.6337, 0.83 ) }
    dend_47 { pt3dadd( -4.08063, -62.1395, 22.1482, 0.28 ) }
    dend_47 { pt3dadd( -4.35442, -62.5508, 22.3899, 0.55 ) }
    dend_47 { pt3dadd( -5.41704, -63.8921, 23.15, 0.28 ) }
    dend_47 { pt3dadd( -6.95001, -65.7155, 24.0859, 0.55 ) }
    dend_47 { pt3dadd( -8.1767, -67.0452, 24.734, 0.28 ) }
    dend_47 { pt3dadd( -9.15717, -68.0052, 25.2032, 0.55 ) }
    dend_47 { pt3dadd( -12.183, -70.9106, 26.3782, 0.55 ) }
    dend_47 { pt3dadd( -12.6316, -71.3333, 26.5398, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 19/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.65429, -34.2702, 4.78679, 0.28 ) }
    dend_46 { pt3dadd( -2.42324, -34.6978, 2.61625, 0.28 ) }
    dend_46 { pt3dadd( -2.38924, -34.8526, 1.61786, 0.83 ) }
    dend_46 { pt3dadd( -2.63997, -36.1408, -8.31172, 0.83 ) }
    dend_46 { pt3dadd( -2.83784, -36.4883, -10.7374, 0.28 ) }
    dend_46 { pt3dadd( -3.03548, -36.758, -12.3638, 0.28 ) }
    dend_46 { pt3dadd( -3.2309, -36.9805, -13.5668, 0.55 ) }
    dend_46 { pt3dadd( -4.03483, -37.5841, -16.1408, 0.28 ) }
    dend_46 { pt3dadd( -4.37757, -37.8134, -16.8612, 0.55 ) }
    dend_46 { pt3dadd( -5.79089, -38.7868, -18.5015, 0.28 ) }
    dend_46 { pt3dadd( -6.78143, -39.4813, -19.4669, 0.83 ) }
    dend_46 { pt3dadd( -7.42562, -40.0374, -20.1799, 1.39 ) }
    dend_46 { pt3dadd( -9.3988, -42.0625, -22.5103, 0.28 ) }
    dend_46 { pt3dadd( -9.82257, -42.5204, -23.0579, 0.83 ) }
    dend_46 { pt3dadd( -10.9669, -43.7024, -24.8259, 0.55 ) }
    dend_46 { pt3dadd( -12.2706, -44.9439, -26.8266, 0.55 ) }
    dend_46 { pt3dadd( -14.2846, -46.5005, -30.0306, 0.55 ) }
    dend_46 { pt3dadd( -15.1908, -47.1371, -31.5002, 1.39 ) }
    dend_46 { pt3dadd( -17.243, -48.4151, -34.9453, 1.11 ) }
    dend_46 { pt3dadd( -19.6618, -49.819, -38.9384, 0.28 ) }
    dend_46 { pt3dadd( -20.9428, -50.4274, -41.0672, 0.83 ) }
    dend_46 { pt3dadd( -23.8341, -51.544, -46.5698, 0.28 ) }
    dend_46 { pt3dadd( -24.4732, -51.7034, -47.7963, 0.83 ) }
    dend_46 { pt3dadd( -25.8506, -51.9068, -50.4265, 0.28 ) }
    dend_46 { pt3dadd( -26.4652, -51.9133, -51.7481, 0.83 ) }
    dend_46 { pt3dadd( -28.2818, -51.7071, -55.8505, 1.11 ) }
    dend_46 { pt3dadd( -31.4642, -51.1501, -64.3241, 0.28 ) }
    dend_46 { pt3dadd( -32.6915, -50.9421, -67.8535, 0.28 ) }
    dend_46 { pt3dadd( -33.3992, -50.8327, -70.0448, 0.83 ) }
    dend_46 { pt3dadd( -36.3658, -50.447, -79.4826, 0.28 ) }
    dend_46 { pt3dadd( -36.7647, -50.4414, -80.8425, 1.11 ) }
    dend_46 { pt3dadd( -39.8043, -50.6226, -91.4502, 0.28 ) }
    dend_46 { pt3dadd( -40.0158, -50.653, -92.2135, 0.55 ) }
    dend_46 { pt3dadd( -40.5718, -50.7906, -94.4954, 0.28 ) }
    dend_46 { pt3dadd( -40.8729, -50.9112, -95.8181, 0.55 ) }
    dend_46 { pt3dadd( -41.8625, -51.8265, -99.8915, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 55/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -19.1728, 21.8372, -10.4032, 0.55 ) }
    dend_39 { pt3dadd( -20.3946, 24.9557, -10.7392, 0.55 ) }
    dend_39 { pt3dadd( -21.2247, 27.1591, -10.7722, 1.39 ) }
    dend_39 { pt3dadd( -22.849, 31.6317, -10.5711, 0.83 ) }
    dend_39 { pt3dadd( -24.7232, 36.7921, -10.339, 1.11 ) }
    dend_39 { pt3dadd( -25.9684, 40.2206, -10.1848, 1.11 ) }
    dend_39 { pt3dadd( -27.425, 44.2312, -10.0044, 1.11 ) }
    dend_39 { pt3dadd( -28.5481, 47.3778, -9.89085, 1.39 ) }
    dend_39 { pt3dadd( -29.3555, 49.9418, -9.58996, 1.39 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.1728, 21.8372, -10.4032, 1.66 ) }
    dend_28 { pt3dadd( -20.828, 23.1532, -11.9332, 1.66 ) }
    dend_28 { pt3dadd( -23.7074, 25.4426, -14.5951, 1.66 ) }
    dend_28 { pt3dadd( -25.4093, 26.7959, -16.1684, 1.66 ) }
    dend_28 { pt3dadd( -29.0915, 29.7234, -19.5723, 1.39 ) }
    dend_28 { pt3dadd( -32.4624, 32.4037, -22.6885, 1.39 ) }
    dend_28 { pt3dadd( -35.0707, 34.4776, -25.0997, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.0949, 15.5104, -20.4832, 0.83 ) }
    dend_26 { pt3dadd( -35.9412, 14.9782, -20.9321, 0.83 ) }
    dend_26 { pt3dadd( -42.2396, 13.5028, -22.5728, 0.83 ) }
    dend_26 { pt3dadd( -44.2487, 13.1301, -23.1615, 0.55 ) }
    dend_26 { pt3dadd( -46.314, 12.9232, -23.7696, 1.11 ) }
    dend_26 { pt3dadd( -49.6693, 12.776, -24.8787, 0.55 ) }
    dend_26 { pt3dadd( -52.326, 12.7625, -25.8393, 0.55 ) }
    dend_26 { pt3dadd( -54.8434, 12.9018, -26.9939, 0.55 ) }
    dend_26 { pt3dadd( -56.1716, 13.0934, -27.8651, 0.55 ) }
    dend_26 { pt3dadd( -59.1003, 13.6235, -30.1091, 1.11 ) }
    dend_26 { pt3dadd( -61.7765, 14.3377, -32.6698, 0.55 ) }
    dend_26 { pt3dadd( -63.2725, 14.8035, -34.3579, 0.55 ) }
    dend_26 { pt3dadd( -65.1828, 15.2662, -36.6481, 0.55 ) }
    dend_26 { pt3dadd( -67.2166, 15.4455, -39.2906, 0.55 ) }
    dend_26 { pt3dadd( -67.9011, 15.4514, -40.2519, 1.11 ) }
    dend_26 { pt3dadd( -70.0873, 15.2303, -43.473, 0.28 ) }
    dend_26 { pt3dadd( -70.5286, 15.1334, -44.2283, 0.28 ) }
    dend_26 { pt3dadd( -72.0502, 14.6133, -47.1044, 1.11 ) }
    dend_26 { pt3dadd( -73.3094, 14.0639, -50.38, 1.11 ) }
    dend_26 { pt3dadd( -74.4438, 13.5817, -53.9646, 0.28 ) }
    dend_26 { pt3dadd( -75.2592, 13.2598, -56.8551, 1.11 ) }
    dend_26 { pt3dadd( -77.098, 12.5746, -64.7873, 0.28 ) }
    dend_26 { pt3dadd( -77.4409, 12.5075, -66.5156, 1.66 ) }
    dend_26 { pt3dadd( -79.3186, 12.4903, -77.51, 0.28 ) }
    dend_26 { pt3dadd( -79.4932, 12.5112, -78.5014, 1.11 ) }
    dend_26 { pt3dadd( -80.0334, 12.6069, -81.3262, 0.55 ) }
    dend_26 { pt3dadd( -80.6295, 12.8309, -84.5829, 0.55 ) }
    dend_26 { pt3dadd( -81.1101, 13.0897, -87.0128, 0.83 ) }
    dend_26 { pt3dadd( -81.5511, 13.4801, -89.7972, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_26 { pt3dadd( -81.796, 13.9241, -92.2327, 1.11 ) }
    dend_26 { pt3dadd( -81.9008, 14.5213, -94.9154, 1.11 ) }
    dend_26 { pt3dadd( -81.7102, 16.7323, -102.005, 0.28 ) }
    dend_26 { pt3dadd( -81.679, 16.8703, -102.368, 1.11 ) }
    dend_26 { pt3dadd( -81.1732, 18.4736, -105.945, 0.28 ) }
    dend_26 { pt3dadd( -80.9361, 19.1702, -107.334, 0.55 ) }
    dend_26 { pt3dadd( -80.3405, 21.1551, -110.953, 1.39 ) }
    dend_26 { pt3dadd( -79.542, 24.6243, -117.046, 0.28 ) }
    dend_26 { pt3dadd( -79.4478, 25.8106, -119.143, 1.66 ) }
    dend_26 { pt3dadd( -79.5491, 27.5865, -122.587, 0.28 ) }
    dend_26 { pt3dadd( -79.6762, 28.1395, -123.798, 0.83 ) }
    dend_26 { pt3dadd( -80.2797, 29.6028, -127.329, 0.28 ) }
    dend_26 { pt3dadd( -80.6089, 30.1814, -128.88, 0.83 ) }
    dend_26 { pt3dadd( -81.4515, 31.0788, -131.588, 0.28 ) }
    dend_26 { pt3dadd( -82.5236, 31.9589, -134.314, 0.55 ) }
    dend_26 { pt3dadd( -83.7246, 32.7416, -136.905, 0.28 ) }
    dend_26 { pt3dadd( -84.4056, 33.1372, -138.319, 1.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 17/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -34.0949, 15.5104, -20.4832, 0.55 ) }
    dend_23 { pt3dadd( -37.6287, 13.4007, -19.8455, 0.55 ) }
    dend_23 { pt3dadd( -38.8585, 12.632, -19.4747, 0.55 ) }
    dend_23 { pt3dadd( -41.2722, 11.1173, -18.6454, 1.39 ) }
    dend_23 { pt3dadd( -45.203, 8.69441, -17.2026, 0.83 ) }
    dend_23 { pt3dadd( -46.8607, 7.67265, -16.5941, 1.39 ) }
    dend_23 { pt3dadd( -48.6234, 6.5862, -15.9471, 1.39 ) }
    dend_23 { pt3dadd( -51.1425, 4.86319, -14.7652, 0.55 ) }
    dend_23 { pt3dadd( -52.2805, 4.1116, -14.156, 1.11 ) }
    dend_23 { pt3dadd( -54.4578, 2.83182, -12.818, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.3082, 24.7484, -6.68044, 2.49 ) }
    dend_6 { pt3dadd( -1.20137, 29.8008, -10.2744, 2.49 ) }
    dend_6 { pt3dadd( 0.355031, 33.5331, -12.9294, 2.49 ) }
    dend_6 { pt3dadd( 1.90038, 37.2389, -15.5655, 2.49 ) }
    dend_6 { pt3dadd( 2.68734, 39.126, -16.908, 2.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.3082, 24.7484, -6.68044, 1.11 ) }
    dend_3 { pt3dadd( -5.02343, 26.5935, -6.18164, 1.11 ) }
    dend_3 { pt3dadd( -7.32318, 29.0676, -5.51287, 1.11 ) }
    dend_3 { pt3dadd( -11.0134, 33.0373, -4.43973, 1.11 ) }
    dend_3 { pt3dadd( -12.2819, 34.4019, -4.07086, 0.83 ) }
    dend_3 { pt3dadd( -14.1078, 36.3661, -3.53987, 0.83 ) }
    dend_3 { pt3dadd( -15.0837, 37.416, -3.25608, 1.66 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 39/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 11.0904, -30.8803, 4.97693, 1.11 ) }
    dend_56 { pt3dadd( 14.497, -30.3741, 3.11549, 1.11 ) }
    dend_56 { pt3dadd( 15.9439, -30.1591, 2.3249, 1.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 42/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 11.0904, -30.8803, 4.97693, 0.83 ) }
    dend_51 { pt3dadd( 12.1104, -32.6502, 7.37693, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -29.3555, 49.9418, -9.58996, 0.55 ) }
    dend_43 { pt3dadd( -32.4185, 54.4193, -8.78113, 0.55 ) }
    dend_43 { pt3dadd( -36.2008, 60.188, -7.36854, 0.83 ) }
    dend_43 { pt3dadd( -38.2867, 63.604, -6.64387, 0.55 ) }
    dend_43 { pt3dadd( -39.5463, 65.8941, -6.21415, 0.55 ) }
    dend_43 { pt3dadd( -40.2027, 67.1877, -6.03762, 0.55 ) }
    dend_43 { pt3dadd( -41.4524, 69.9474, -5.7685, 0.55 ) }
    dend_43 { pt3dadd( -42.5671, 73.1431, -5.30507, 1.11 ) }
    dend_43 { pt3dadd( -43.0866, 76.0706, -5.22735, 1.11 ) }
    dend_43 { pt3dadd( -43.2646, 77.8291, -5.2719, 0.28 ) }
    dend_43 { pt3dadd( -43.4102, 80.5842, -5.34342, 1.11 ) }
    dend_43 { pt3dadd( -43.4858, 82.8725, -5.42527, 0.28 ) }
    dend_43 { pt3dadd( -43.484, 85.4438, -5.51226, 0.28 ) }
    dend_43 { pt3dadd( -43.5312, 87.9444, -5.73049, 1.11 ) }
    dend_43 { pt3dadd( -43.6502, 90.489, -5.787, 0.28 ) }
    dend_43 { pt3dadd( -43.6822, 91.0473, -5.8184, 0.55 ) }
    dend_43 { pt3dadd( -43.7996, 93.0152, -6.24784, 0.28 ) }
    dend_43 { pt3dadd( -43.9592, 94.6696, -6.89144, 0.83 ) }
    dend_43 { pt3dadd( -44.3057, 97.198, -8.20373, 0.28 ) }
    dend_43 { pt3dadd( -44.6395, 99.0717, -9.25783, 0.55 ) }
    dend_43 { pt3dadd( -45.2883, 102.49, -11.3484, 0.83 ) }
    dend_43 { pt3dadd( -46.2673, 107.244, -14.7068, 0.55 ) }
    dend_43 { pt3dadd( -46.6105, 108.834, -15.9209, 0.28 ) }
    dend_43 { pt3dadd( -46.9802, 110.361, -17.184, 1.39 ) }
    dend_43 { pt3dadd( -47.5769, 112.752, -19.1763, 0.28 ) }
    dend_43 { pt3dadd( -48.2425, 115.281, -21.3692, 0.55 ) }
    dend_43 { pt3dadd( -49.2123, 118.65, -24.1569, 0.28 ) }
    dend_43 { pt3dadd( -49.4566, 119.528, -24.7916, 0.55 ) }
    dend_43 { pt3dadd( -49.9998, 121.61, -26.3357, 0.28 ) }
    dend_43 { pt3dadd( -50.2854, 123.038, -27.3732, 1.11 ) }
    dend_43 { pt3dadd( -50.6016, 125.201, -28.8352, 0.28 ) }
    dend_43 { pt3dadd( -50.6727, 125.834, -29.1464, 0.55 ) }
    dend_43 { pt3dadd( -50.7543, 127.218, -29.6605, 0.28 ) }
    dend_43 { pt3dadd( -50.8339, 129.192, -30.341, 0.83 ) }
    dend_43 { pt3dadd( -50.9703, 133.689, -31.749, 0.28 ) }
    dend_43 { pt3dadd( -51.0203, 136.151, -32.498, 1.66 ) }
    dend_43 { pt3dadd( -51.0537, 139.2, -33.3571, 0.28 ) }
    dend_43 { pt3dadd( -51.0854, 141.4, -33.9694, 1.94 ) }
    dend_43 { pt3dadd( -51.1377, 144.217, -34.6684, 0.28 ) }
    dend_43 { pt3dadd( -51.1671, 145.437, -34.884, 0.28 ) }
    dend_43 { pt3dadd( -51.2117, 146.84, -35.041, 0.55 ) }
    dend_43 { pt3dadd( -51.2498, 148.847, -35.1421, 0.28 ) }
    dend_43 { pt3dadd( -51.2607, 149.999, -35.2001, 1.11 ) }
    dend_43 { pt3dadd( -51.2844, 152.064, -35.2011, 0.28 ) }
    dend_43 { pt3dadd( -51.2742, 153.302, -35.167, 0.55 ) }
    dend_43 { pt3dadd( -51.2298, 156.277, -35.0359, 0.28 ) }
    dend_43 { pt3dadd( -51.2283, 159.107, -34.8346, 0.83 ) }
    dend_43 { pt3dadd( -51.2637, 162.07, -34.4907, 0.28 ) }
    dend_43 { pt3dadd( -51.2841, 163.255, -34.3597, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -29.3555, 49.9418, -9.58996, 0.83 ) }
    dend_40 { pt3dadd( -30.4372, 50.848, -6.78424, 0.83 ) }
    dend_40 { pt3dadd( -30.9866, 51.1511, -5.72089, 0.83 ) }
    dend_40 { pt3dadd( -31.6947, 51.5258, -4.52221, 0.83 ) }
    dend_40 { pt3dadd( -32.7055, 52.0732, -2.90925, 1.39 ) }
    dend_40 { pt3dadd( -38.183, 55.4809, 5.0635, 1.11 ) }
    dend_40 { pt3dadd( -38.6494, 55.7711, 5.74228, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_40 { pt3dadd( -40.3554, 56.8843, 8.5163, 1.11 ) }
    dend_40 { pt3dadd( -41.0729, 57.3862, 9.73061, 0.83 ) }
    dend_40 { pt3dadd( -42.4467, 58.3372, 12.0464, 0.83 ) }
    dend_40 { pt3dadd( -44.0306, 59.2693, 14.5199, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 4/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -35.0707, 34.4776, -25.0997, 0.83 ) }
    dend_34 { pt3dadd( -36.4368, 35.8051, -25.9041, 0.83 ) }
    dend_34 { pt3dadd( -37.9181, 37.3531, -26.8815, 0.83 ) }
    dend_34 { pt3dadd( -39.7242, 39.3951, -28.1475, 1.11 ) }
    dend_34 { pt3dadd( -42.0439, 42.2035, -29.6578, 0.83 ) }
    dend_34 { pt3dadd( -45.4493, 46.4198, -31.79, 1.39 ) }
    dend_34 { pt3dadd( -47.1102, 48.4948, -32.9096, 0.83 ) }
    dend_34 { pt3dadd( -48.3413, 50.0695, -33.7517, 0.83 ) }
    dend_34 { pt3dadd( -49.8694, 52.1839, -34.9019, 0.83 ) }
    dend_34 { pt3dadd( -52.7338, 56.6906, -37.1214, 1.11 ) }
    dend_34 { pt3dadd( -54.0742, 59.1548, -38.2441, 0.83 ) }
    dend_34 { pt3dadd( -55.9792, 63.0237, -39.9859, 1.66 ) }
    dend_34 { pt3dadd( -57.374, 65.9203, -41.2343, 2.22 ) }
    dend_34 { pt3dadd( -58.8075, 68.8746, -42.5453, 0.83 ) }
    dend_34 { pt3dadd( -60.1118, 71.858, -43.9678, 1.94 ) }
    dend_34 { pt3dadd( -61.0089, 74.7672, -45.5368, 1.94 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 20/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -35.0707, 34.4776, -25.0997, 0.83 ) }
    dend_29 { pt3dadd( -38.2883, 33.2359, -23.0309, 0.83 ) }
    dend_29 { pt3dadd( -40.923, 32.1618, -21.44, 0.83 ) }
    dend_29 { pt3dadd( -43.1606, 31.2495, -20.0889, 0.83 ) }
    dend_29 { pt3dadd( -45.2563, 30.3951, -18.8236, 0.83 ) }
    dend_29 { pt3dadd( -49.6036, 28.6229, -16.1986, 0.83 ) }
    dend_29 { pt3dadd( -51.4001, 27.8904, -15.1139, 0.83 ) }
    dend_29 { pt3dadd( -52.9457, 27.1815, -14.3586, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -54.4578, 2.83182, -12.818, 0.28 ) }
    dend_25 { pt3dadd( -56.4422, 2.29256, -12.6423, 0.28 ) }
    dend_25 { pt3dadd( -59.2769, 1.59315, -12.258, 0.55 ) }
    dend_25 { pt3dadd( -61.0944, 1.2044, -12.1692, 0.28 ) }
    dend_25 { pt3dadd( -64.8337, 0.530649, -12.1264, 0.83 ) }
    dend_25 { pt3dadd( -66.8105, 0.213558, -12.1469, 0.55 ) }
    dend_25 { pt3dadd( -71.2576, -0.53505, -12.3136, 0.55 ) }
    dend_25 { pt3dadd( -73.9671, -1.01731, -12.5275, 1.39 ) }
    dend_25 { pt3dadd( -78.8499, -1.81078, -13.034, 0.55 ) }
    dend_25 { pt3dadd( -80.0075, -1.99078, -13.1842, 0.55 ) }
    dend_25 { pt3dadd( -81.9278, -2.27035, -13.4324, 0.55 ) }
    dend_25 { pt3dadd( -84.5868, -2.54147, -14.0115, 0.28 ) }
    dend_25 { pt3dadd( -87.1292, -2.72111, -14.7629, 1.11 ) }
    dend_25 { pt3dadd( -89.6775, -2.83126, -15.504, 0.55 ) }
    dend_25 { pt3dadd( -91.3953, -2.87169, -15.946, 0.55 ) }
    dend_25 { pt3dadd( -94.8224, -2.87022, -16.8171, 0.55 ) }
    dend_25 { pt3dadd( -101.332, -2.55376, -18.4528, 0.28 ) }
    dend_25 { pt3dadd( -103.744, -2.33341, -19.033, 1.11 ) }
    dend_25 { pt3dadd( -110.681, -1.66497, -20.8656, 0.55 ) }
    dend_25 { pt3dadd( -112.433, -1.5236, -21.3896, 1.39 ) }
    dend_25 { pt3dadd( -114.865, -1.43144, -22.1916, 0.55 ) }
    dend_25 { pt3dadd( -116.036, -1.44972, -22.5931, 0.28 ) }
    dend_25 { pt3dadd( -117.101, -1.54054, -22.8931, 0.55 ) }
    dend_25 { pt3dadd( -119.59, -2.0108, -23.813, 0.28 ) }
    dend_25 { pt3dadd( -120.265, -2.24168, -24.1242, 0.83 ) }
    dend_25 { pt3dadd( -123.684, -3.74568, -25.5205, 0.28 ) }
    dend_25 { pt3dadd( -125.399, -4.5619, -26.0291, 1.11 ) }
    dend_25 { pt3dadd( -127.525, -5.62667, -26.3995, 0.55 ) }
    dend_25 { pt3dadd( -129.496, -6.60823, -26.482, 0.28 ) }
    dend_25 { pt3dadd( -131.358, -7.55761, -26.2194, 0.55 ) }
    dend_25 { pt3dadd( -134.31, -9.14055, -25.2936, 0.55 ) }
    dend_25 { pt3dadd( -137.155, -10.7127, -24.0894, 0.55 ) }
    dend_25 { pt3dadd( -138.825, -11.6173, -23.2693, 0.28 ) }
    dend_25 { pt3dadd( -141.203, -12.9165, -21.8784, 0.83 ) }
    dend_25 { pt3dadd( -144.467, -14.6997, -19.7174, 0.28 ) }
    dend_25 { pt3dadd( -146.604, -15.9368, -18.0466, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 64/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -54.4578, 2.83182, -12.818, 0.28 ) }
    dend_24 { pt3dadd( -56.021, 0.881275, -12.7598, 0.28 ) }
    dend_24 { pt3dadd( -57.0857, -0.49681, -12.4536, 0.55 ) }
    dend_24 { pt3dadd( -58.4376, -2.44633, -11.9016, 0.28 ) }
    dend_24 { pt3dadd( -60.0807, -4.96597, -11.2025, 0.83 ) }
    dend_24 { pt3dadd( -62.2508, -8.35526, -10.3045, 0.28 ) }
    dend_24 { pt3dadd( -64.4794, -11.7716, -9.39744, 0.83 ) }
    dend_24 { pt3dadd( -66.2299, -14.3696, -8.59659, 0.55 ) }
    dend_24 { pt3dadd( -67.2595, -16.0105, -8.00251, 0.83 ) }
    dend_24 { pt3dadd( -68.1377, -17.4893, -7.37605, 0.28 ) }
    dend_24 { pt3dadd( -69.2137, -19.3771, -6.46548, 0.55 ) }
    dend_24 { pt3dadd( -70.4609, -21.3269, -5.49195, 0.28 ) }
    dend_24 { pt3dadd( -71.044, -22.0655, -5.08066, 0.55 ) }
    dend_24 { pt3dadd( -73.1172, -24.2278, -3.66787, 0.28 ) }
    dend_24 { pt3dadd( -74.2024, -25.128, -2.88594, 1.11 ) }
    dend_24 { pt3dadd( -76.4545, -26.6859, -1.14642, 0.28 ) }
    dend_24 { pt3dadd( -77.5628, -27.288, -0.354585, 0.55 ) }
    dend_24 { pt3dadd( -79.2762, -27.9748, 0.64804, 0.28 ) }
    dend_24 { pt3dadd( -79.5141, -28.0298, 0.76539, 0.83 ) }
    dend_24 { pt3dadd( -81.7912, -28.3841, 1.62773, 0.28 ) }
    dend_24 { pt3dadd( -82.5665, -28.5233, 1.88931, 0.83 ) }
    dend_24 { pt3dadd( -84.7224, -29.0487, 2.64256, 0.28 ) }
    dend_24 { pt3dadd( -86.0458, -29.4877, 3.18814, 0.83 ) }
    dend_24 { pt3dadd( -89.7571, -30.8522, 4.77838, 0.28 ) }
    dend_24 { pt3dadd( -92.2931, -31.8265, 5.91527, 0.28 ) }
    dend_24 { pt3dadd( -93.1558, -32.1819, 6.33121, 0.55 ) }
    dend_24 { pt3dadd( -95.1833, -33.1251, 7.50813, 0.28 ) }
    dend_24 { pt3dadd( -95.9774, -33.5577, 8.09776, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.68734, 39.126, -16.908, 2.22 ) }
    dend_12 { pt3dadd( 5.15733, 39.4961, -23.818, 2.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.68734, 39.126, -16.908, 0.55 ) }
    dend_7 { pt3dadd( 2.92517, 40.5759, -24.3688, 0.55 ) }
    dend_7 { pt3dadd( 2.9863, 40.9486, -26.2867, 0.55 ) }
    dend_7 { pt3dadd( 3.06483, 41.4272, -28.7499, 0.55 ) }
    dend_7 { pt3dadd( 3.16714, 42.0509, -31.9596, 1.11 ) }
    dend_7 { pt3dadd( 3.30143, 42.8695, -36.1722, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_7 { pt3dadd( 3.43648, 43.6927, -40.4085, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.0837, 37.416, -3.25608, 0.83 ) }
    dend_5 { pt3dadd( -13.2857, 39.9617, -1.4069, 0.83 ) }
    dend_5 { pt3dadd( -12.5041, 41.2719, -0.500566, 0.83 ) }
    dend_5 { pt3dadd( -11.1022, 44.0658, 1.28003, 0.83 ) }
    dend_5 { pt3dadd( -9.88374, 46.6409, 2.87704, 0.83 ) }
    dend_5 { pt3dadd( -8.71109, 49.3391, 4.52384, 0.83 ) }
    dend_5 { pt3dadd( -8.36764, 50.2513, 5.0553, 0.83 ) }
    dend_5 { pt3dadd( -7.49436, 53.0376, 6.52321, 0.83 ) }
    dend_5 { pt3dadd( -7.07478, 54.5291, 7.19447, 0.83 ) }
    dend_5 { pt3dadd( -6.28444, 57.53, 8.21102, 0.83 ) }
    dend_5 { pt3dadd( -5.98592, 59.1105, 8.56295, 0.83 ) }
    dend_5 { pt3dadd( -5.65498, 61.6459, 8.98983, 0.83 ) }
    dend_5 { pt3dadd( -5.42016, 64.2682, 9.34532, 0.83 ) }
    dend_5 { pt3dadd( -5.1353, 67.9482, 9.87201, 1.11 ) }
    dend_5 { pt3dadd( -5.01251, 70.1875, 10.3345, 1.11 ) }
    dend_5 { pt3dadd( -4.94184, 72.7318, 11.0389, 1.11 ) }
    dend_5 { pt3dadd( -4.8547, 75.5054, 12.0575, 0.83 ) }
    dend_5 { pt3dadd( -4.8082, 78.0515, 13.1538, 0.83 ) }
    dend_5 { pt3dadd( -4.87962, 81.5932, 14.9762, 0.83 ) }
    dend_5 { pt3dadd( -5.01026, 84.1358, 16.6001, 1.66 ) }
    dend_5 { pt3dadd( -5.09252, 86.9998, 18.7135, 0.83 ) }
    dend_5 { pt3dadd( -5.03708, 87.9317, 19.5056, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.0837, 37.416, -3.25608, 0.28 ) }
    dend_4 { pt3dadd( -18.2174, 39.1001, -3.02456, 0.28 ) }
    dend_4 { pt3dadd( -19.7811, 39.8792, -3.17642, 0.83 ) }
    dend_4 { pt3dadd( -21.4897, 40.6435, -3.3603, 0.28 ) }
    dend_4 { pt3dadd( -22.0009, 40.8376, -3.42052, 0.28 ) }
    dend_4 { pt3dadd( -24.9255, 41.7228, -3.53083, 1.39 ) }
    dend_4 { pt3dadd( -28.7141, 42.6437, -3.09443, 0.55 ) }
    dend_4 { pt3dadd( -33.0664, 43.3867, -2.00964, 0.55 ) }
    dend_4 { pt3dadd( -35.253, 43.6278, -1.36382, 0.83 ) }
    dend_4 { pt3dadd( -37.64, 43.7445, -0.473238, 1.11 ) }
    dend_4 { pt3dadd( -41.2439, 43.7389, 1.14609, 0.55 ) }
    dend_4 { pt3dadd( -46.1616, 43.3558, 3.77712, 0.55 ) }
    dend_4 { pt3dadd( -48.1712, 43.0009, 5.20439, 1.11 ) }
    dend_4 { pt3dadd( -49.9612, 42.3932, 6.85657, 0.55 ) }
    dend_4 { pt3dadd( -52.1197, 41.209, 9.39356, 1.11 ) }
    dend_4 { pt3dadd( -52.9147, 40.5019, 10.7353, 1.11 ) }
    dend_4 { pt3dadd( -53.3145, 39.8182, 11.7978, 0.55 ) }
    dend_4 { pt3dadd( -53.9204, 37.952, 14.2097, 0.55 ) }
    dend_4 { pt3dadd( -54.5105, 35.3628, 17.3282, 1.11 ) }
    dend_4 { pt3dadd( -55.0206, 32.9689, 19.9967, 1.11 ) }
    dend_4 { pt3dadd( -55.6904, 30.7682, 22.2934, 1.11 ) }
    dend_4 { pt3dadd( -56.379, 29.2355, 23.8143, 0.55 ) }
    dend_4 { pt3dadd( -57.4363, 27.3531, 25.5633, 0.55 ) }
    dend_4 { pt3dadd( -57.9539, 26.4958, 26.2943, 0.83 ) }
    dend_4 { pt3dadd( -59.2101, 25.1206, 27.2922, 0.55 ) }
    dend_4 { pt3dadd( -60.8632, 23.7071, 28.0084, 0.55 ) }
    dend_4 { pt3dadd( -63.0415, 22.1798, 28.5984, 0.55 ) }
    dend_4 { pt3dadd( -65.4434, 20.8347, 29.1439, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 15.9439, -30.1591, 2.3249, 0.28 ) }
    dend_62 { pt3dadd( 17.2495, -29.2327, 0.78131, 0.28 ) }
    dend_62 { pt3dadd( 18.9502, -27.8643, -1.28781, 0.55 ) }
    dend_62 { pt3dadd( 20.458, -26.424, -3.32664, 0.55 ) }
    dend_62 { pt3dadd( 21.9982, -24.7444, -5.52981, 0.28 ) }
    dend_62 { pt3dadd( 22.7396, -23.923, -6.52405, 0.55 ) }
    dend_62 { pt3dadd( 23.9964, -22.4886, -8.20465, 0.28 ) }
    dend_62 { pt3dadd( 24.2683, -22.1644, -8.57291, 0.55 ) }
    dend_62 { pt3dadd( 25.1802, -21.0263, -9.70633, 0.28 ) }
    dend_62 { pt3dadd( 25.6526, -20.4965, -10.2257, 0.55 ) }
    dend_62 { pt3dadd( 28.2421, -17.7747, -12.9031, 0.28 ) }
    dend_62 { pt3dadd( 29.2133, -16.8906, -13.8363, 0.83 ) }
    dend_62 { pt3dadd( 31.1653, -15.2897, -15.6171, 0.28 ) }
    dend_62 { pt3dadd( 32.0839, -14.6271, -16.424, 0.83 ) }
    dend_62 { pt3dadd( 33.593, -13.757, -17.5991, 0.55 ) }
    dend_62 { pt3dadd( 34.4679, -13.3266, -18.2656, 0.55 ) }
    dend_62 { pt3dadd( 35.8718, -12.8239, -19.3053, 0.83 ) }
    dend_62 { pt3dadd( 38.0923, -12.2338, -20.9511, 0.28 ) }
    dend_62 { pt3dadd( 39.3538, -11.9538, -21.8305, 0.28 ) }
    dend_62 { pt3dadd( 41.3793, -11.4927, -23.3287, 0.28 ) }
    dend_62 { pt3dadd( 43.1258, -11.0697, -24.6088, 0.83 ) }
    dend_62 { pt3dadd( 46.2349, -10.5192, -26.9923, 0.28 ) }
    dend_62 { pt3dadd( 48.2123, -10.3531, -28.509, 0.83 ) }
    dend_62 { pt3dadd( 49.8022, -10.4408, -30.0478, 0.28 ) }
    dend_62 { pt3dadd( 51.0035, -10.4853, -32.0677, 0.83 ) }
    dend_62 { pt3dadd( 51.5168, -10.4934, -33.3843, 0.83 ) }
    dend_62 { pt3dadd( 52.2564, -10.4962, -36.0959, 0.28 ) }
    dend_62 { pt3dadd( 52.618, -10.4448, -37.8251, 0.83 ) }
    dend_62 { pt3dadd( 53.6506, -10.2743, -43.0645, 1.39 ) }
    dend_62 { pt3dadd( 55.0134, -10.1207, -50.0096, 0.28 ) }
    dend_62 { pt3dadd( 55.186, -10.1094, -50.8215, 0.55 ) }
    dend_62 { pt3dadd( 55.8763, -10.0326, -54.0074, 0.28 ) }
    dend_62 { pt3dadd( 56.1832, -10.0061, -55.3579, 0.83 ) }
    dend_62 { pt3dadd( 57.0538, -10.0258, -59.105, 0.28 ) }
    dend_62 { pt3dadd( 57.6159, -10.1229, -61.2295, 0.55 ) }
    dend_62 { pt3dadd( 58.2717, -10.456, -63.4417, 0.28 ) }
    dend_62 { pt3dadd( 58.609, -10.6716, -64.638, 0.83 ) }
    dend_62 { pt3dadd( 60.7911, -12.4756, -73.2518, 0.28 ) }
    dend_62 { pt3dadd( 61.256, -12.9551, -75.4393, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 15.9439, -30.1591, 2.3249, 0.83 ) }
    dend_57 { pt3dadd( 20.1254, -31.1734, 3.51814, 0.83 ) }
    dend_57 { pt3dadd( 24.7998, -32.0233, 4.52475, 0.83 ) }
    dend_57 { pt3dadd( 27.9188, -32.4333, 5.01767, 0.83 ) }
    dend_57 { pt3dadd( 31.8018, -32.9435, 5.63131, 1.11 ) }
    dend_57 { pt3dadd( 34.9526, -33.3576, 6.12924, 0.83 ) }
    dend_57 { pt3dadd( 38.298, -33.7971, 6.65792, 0.55 ) }
    dend_57 { pt3dadd( 39.9734, -33.8479, 6.75159, 1.11 ) }
    dend_57 { pt3dadd( 43.0041, -33.5195, 6.86223, 1.39 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 99/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 12.1104, -32.6502, 7.37693, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 13.9814, -33.0695, 8.99758, 0.83 ) }
    dend_53 { pt3dadd( 16.7344, -33.3316, 10.9849, 0.83 ) }
    dend_53 { pt3dadd( 19.8132, -33.4678, 12.9192, 1.11 ) }
    dend_53 { pt3dadd( 24.0642, -33.634, 15.3142, 0.55 ) }
    dend_53 { pt3dadd( 25.5125, -33.7121, 16.0307, 0.55 ) }
    dend_53 { pt3dadd( 29.4794, -33.9257, 17.9932, 1.11 ) }
    dend_53 { pt3dadd( 32.7834, -34.0233, 19.4535, 0.55 ) }
    dend_53 { pt3dadd( 34.2094, -34.0097, 19.8771, 0.55 ) }
    dend_53 { pt3dadd( 35.599, -33.945, 20.1094, 0.83 ) }
    dend_53 { pt3dadd( 38.329, -33.7299, 20.077, 1.39 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 10/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 12.1104, -32.6502, 7.37693, 0.28 ) }
    dend_52 { pt3dadd( 15.0988, -34.4109, 5.59323, 0.28 ) }
    dend_52 { pt3dadd( 15.9645, -34.9817, 4.90684, 0.28 ) }
    dend_52 { pt3dadd( 16.5766, -35.4372, 4.2614, 0.55 ) }
    dend_52 { pt3dadd( 18.6329, -37.158, 1.54347, 0.28 ) }
    dend_52 { pt3dadd( 19.955, -38.6682, -1.38509, 0.28 ) }
    dend_52 { pt3dadd( 20.5566, -39.5523, -3.23588, 0.83 ) }
    dend_52 { pt3dadd( 21.1478, -40.7168, -5.91531, 0.28 ) }
    dend_52 { pt3dadd( 21.3488, -41.5373, -8.02935, 1.11 ) }
    dend_52 { pt3dadd( 21.231, -42.5615, -10.9175, 1.11 ) }
    dend_52 { pt3dadd( 19.9715, -45.1763, -18.1856, 0.28 ) }
    dend_52 { pt3dadd( 19.4801, -45.8162, -19.9661, 0.28 ) }
    dend_52 { pt3dadd( 19.3349, -45.9678, -20.3622, 1.11 ) }
    dend_52 { pt3dadd( 17.3254, -47.699, -24.5893, 0.55 ) }
    dend_52 { pt3dadd( 16.4308, -48.4048, -26.1853, 0.55 ) }
    dend_52 { pt3dadd( 15.5275, -49.0167, -27.8051, 0.55 ) }
    dend_52 { pt3dadd( 14.9943, -49.4716, -29.0137, 0.28 ) }
    dend_52 { pt3dadd( 14.3973, -50.1361, -30.8404, 0.55 ) }
    dend_52 { pt3dadd( 14.0151, -50.6558, -32.2199, 0.55 ) }
    dend_52 { pt3dadd( 13.4634, -51.6049, -34.8329, 1.39 ) }
    dend_52 { pt3dadd( 12.3692, -54.5905, -42.7813, 0.55 ) }
    dend_52 { pt3dadd( 12.0315, -56.0462, -46.4602, 0.28 ) }
    dend_52 { pt3dadd( 11.9902, -56.4901, -47.5078, 0.83 ) }
    dend_52 { pt3dadd( 12.0216, -57.2837, -49.2136, 0.28 ) }
    dend_52 { pt3dadd( 12.1503, -58.1306, -50.9207, 0.55 ) }
    dend_52 { pt3dadd( 12.6259, -60.2262, -54.769, 0.28 ) }
    dend_52 { pt3dadd( 12.9165, -61.0849, -56.2034, 0.28 ) }
    dend_52 { pt3dadd( 13.3916, -62.3017, -58.3648, 0.83 ) }
    dend_52 { pt3dadd( 14.6553, -65.4521, -64.065, 0.28 ) }
    dend_52 { pt3dadd( 14.8649, -65.9798, -65.0243, 0.28 ) }
    dend_52 { pt3dadd( 14.9095, -66.1192, -65.2629, 0.83 ) }
    dend_52 { pt3dadd( 15.5581, -68.4252, -69.4133, 0.28 ) }
    dend_52 { pt3dadd( 15.5958, -68.5598, -69.6577, 0.55 ) }
    dend_52 { pt3dadd( 15.8859, -69.8264, -71.6334, 0.28 ) }
    dend_52 { pt3dadd( 15.9891, -70.9836, -73.1039, 0.28 ) }
    dend_52 { pt3dadd( 15.9694, -71.9332, -74.2729, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 46/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -44.0306, 59.2693, 14.5199, 0.55 ) }
    dend_42 { pt3dadd( -45.6579, 56.7388, 18.2481, 0.55 ) }
    dend_42 { pt3dadd( -46.0181, 56.3091, 18.7982, 0.55 ) }
    dend_42 { pt3dadd( -46.9863, 55.2569, 19.7791, 1.11 ) }
    dend_42 { pt3dadd( -48.2313, 53.8054, 21.0477, 0.55 ) }
    dend_42 { pt3dadd( -48.7752, 53.1455, 21.5636, 0.55 ) }
    dend_42 { pt3dadd( -50.3295, 51.2851, 22.9541, 0.55 ) }
    dend_42 { pt3dadd( -50.8589, 50.6986, 23.2178, 0.55 ) }
    dend_42 { pt3dadd( -52.1356, 49.4507, 23.8016, 0.83 ) }
    dend_42 { pt3dadd( -54.527, 47.2976, 24.6373, 0.83 ) }
    dend_42 { pt3dadd( -55.8531, 46.1648, 25.0151, 0.83 ) }
    dend_42 { pt3dadd( -58.4206, 44.0051, 25.7797, 1.39 ) }
    dend_42 { pt3dadd( -60.9529, 41.7589, 26.5914, 0.83 ) }
    dend_42 { pt3dadd( -62.9205, 40.0535, 27.1898, 1.11 ) }
    dend_42 { pt3dadd( -64.7632, 38.5932, 27.6764, 0.55 ) }
    dend_42 { pt3dadd( -66.1976, 37.5718, 27.8376, 0.55 ) }
    dend_42 { pt3dadd( -68.1522, 36.2481, 28.0077, 1.11 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -44.0306, 59.2693, 14.5199, 0.55 ) }
    dend_41 { pt3dadd( -45.7194, 61.968, 17.2363, 0.55 ) }
    dend_41 { pt3dadd( -46.6083, 63.2569, 18.4641, 1.39 ) }
    dend_41 { pt3dadd( -48.0557, 65.1254, 20.2692, 0.83 ) }
    dend_41 { pt3dadd( -49.2871, 66.5228, 21.7628, 0.83 ) }
    dend_41 { pt3dadd( -51.7655, 68.8723, 24.902, 0.83 ) }
    dend_41 { pt3dadd( -53.3093, 70.3358, 26.8575, 0.83 ) }
    dend_41 { pt3dadd( -54.0351, 70.9075, 27.5212, 0.83 ) }
    dend_41 { pt3dadd( -55.2784, 71.8837, 28.4736, 0.83 ) }
    dend_41 { pt3dadd( -56.7649, 73.1281, 29.4279, 1.66 ) }
    dend_41 { pt3dadd( -58.7679, 73.4568, 31.561, 1.66 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 74/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -61.0089, 74.7672, -45.5368, 0.55 ) }
    dend_38 { pt3dadd( -60.9097, 79.2456, -48.0899, 0.55 ) }
    dend_38 { pt3dadd( -61.0688, 81.2696, -49.335, 0.83 ) }
    dend_38 { pt3dadd( -61.8551, 85.7068, -52.8288, 0.83 ) }
    dend_38 { pt3dadd( -62.1411, 87.5395, -54.413, 2.22 ) }
    dend_38 { pt3dadd( -62.3272, 88.7929, -55.5268, 2.22 ) }
    dend_38 { pt3dadd( -62.5429, 90.2442, -56.7963, 0.55 ) }
    dend_38 { pt3dadd( -62.9759, 91.9548, -58.6622, 1.11 ) }
    dend_38 { pt3dadd( -64.0618, 94.5454, -61.6406, 0.55 ) }
    dend_38 { pt3dadd( -65.137, 96.4645, -63.6767, 0.55 ) }
    dend_38 { pt3dadd( -65.5022, 97.0102, -64.2829, 0.55 ) }
    dend_38 { pt3dadd( -66.0213, 97.6963, -65.057, 0.55 ) }
    dend_38 { pt3dadd( -67.8084, 99.8259, -67.4493, 1.39 ) }
    dend_38 { pt3dadd( -69.7855, 102.121, -69.6032, 0.55 ) }
    dend_38 { pt3dadd( -70.5507, 102.959, -70.4063, 0.83 ) }
    dend_38 { pt3dadd( -72.2976, 104.911, -72.8071, 0.55 ) }
    dend_38 { pt3dadd( -72.6506, 105.357, -73.4292, 0.83 ) }
    dend_38 { pt3dadd( -73.5619, 106.864, -75.7296, 0.28 ) }
    dend_38 { pt3dadd( -74.3175, 108.379, -78.31, 0.83 ) }
    dend_38 { pt3dadd( -75.5742, 111.224, -83.619, 0.55 ) }
    dend_38 { pt3dadd( -76.7968, 114.06, -89.0897, 0.28 ) }
    dend_38 { pt3dadd( -77.4325, 115.563, -92.0348, 0.83 ) }
    dend_38 { pt3dadd( -78.3631, 117.739, -96.2875, 0.55 ) }
    dend_38 { pt3dadd( -78.9793, 119.074, -98.9446, 0.83 ) }
    dend_38 { pt3dadd( -79.9549, 120.797, -102.491, 0.28 ) }
    dend_38 { pt3dadd( -80.618, 121.757, -104.106, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -81.002, 122.18, -104.654, 0.28 ) }
    dend_38 { pt3dadd( -81.6561, 122.794, -105.291, 0.55 ) }
    dend_38 { pt3dadd( -83.6768, 124.47, -106.491, 0.28 ) }
    dend_38 { pt3dadd( -84.8268, 125.556, -107.103, 0.55 ) }
    dend_38 { pt3dadd( -86.3991, 127.132, -107.801, 0.28 ) }
    dend_38 { pt3dadd( -86.8421, 127.69, -108.114, 0.55 ) }
    dend_38 { pt3dadd( -88.6452, 130.272, -109.425, 0.28 ) }
    dend_38 { pt3dadd( -89.0534, 130.959, -109.788, 0.55 ) }
    dend_38 { pt3dadd( -90.4265, 133.56, -111.144, 0.28 ) }
    dend_38 { pt3dadd( -91.2306, 135.247, -112.109, 1.39 ) }
    dend_38 { pt3dadd( -93.3846, 139.828, -114.912, 0.28 ) }
    dend_38 { pt3dadd( -94.5075, 142.165, -116.453, 1.39 ) }
    dend_38 { pt3dadd( -96.5142, 146.045, -119.401, 0.28 ) }
    dend_38 { pt3dadd( -96.9531, 146.789, -120.163, 0.83 ) }
    dend_38 { pt3dadd( -97.709, 147.889, -121.534, 0.28 ) }
    dend_38 { pt3dadd( -98.0908, 148.415, -122.292, 0.83 ) }
    dend_38 { pt3dadd( -99.6059, 150.356, -125.4, 0.28 ) }
    dend_38 { pt3dadd( -100.815, 151.996, -128.265, 1.39 ) }
    dend_38 { pt3dadd( -102.962, 154.874, -133.561, 0.28 ) }
    dend_38 { pt3dadd( -103.19, 155.177, -134.133, 0.55 ) }
    dend_38 { pt3dadd( -104.057, 156.349, -136.384, 0.28 ) }
    dend_38 { pt3dadd( -104.173, 156.523, -136.712, 0.55 ) }
    dend_38 { pt3dadd( -104.886, 157.837, -138.935, 0.28 ) }
    dend_38 { pt3dadd( -105.063, 158.288, -139.548, 1.11 ) }
    dend_38 { pt3dadd( -105.305, 159.352, -140.497, 1.11 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 25/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -61.0089, 74.7672, -45.5368, 0.55 ) }
    dend_35 { pt3dadd( -62.9747, 76.9729, -46.3299, 0.55 ) }
    dend_35 { pt3dadd( -64.3687, 78.537, -46.8924, 0.55 ) }
    dend_35 { pt3dadd( -65.9291, 80.2878, -47.5219, 0.28 ) }
    dend_35 { pt3dadd( -67.7, 82.2748, -48.2364, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -52.9457, 27.1815, -14.3586, 0.83 ) }
    dend_31 { pt3dadd( -55.0686, 27.8741, -14.3586, 0.83 ) }
    dend_31 { pt3dadd( -57.7556, 28.7509, -14.3586, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 33/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -52.9457, 27.1815, -14.3586, 0.55 ) }
    dend_30 { pt3dadd( -57.1042, 27.3018, -14.9116, 0.55 ) }
    dend_30 { pt3dadd( -59.3061, 27.3655, -15.2044, 0.55 ) }
    dend_30 { pt3dadd( -62.6129, 27.4613, -15.6442, 0.55 ) }
    dend_30 { pt3dadd( -64.0728, 27.5035, -15.8384, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.15733, 39.4961, -23.818, 2.22 ) }
    dend_16 { pt3dadd( 6.53911, 40.2463, -22.9335, 2.22 ) }
    dend_16 { pt3dadd( 12.2861, 43.3094, -21.403, 0.55 ) }
    dend_16 { pt3dadd( 14.1657, 44.2916, -22.1183, 1.11 ) }
    dend_16 { pt3dadd( 17.1332, 45.8424, -23.2476, 0.83 ) }
    dend_16 { pt3dadd( 19.2581, 46.9529, -24.0563, 0.55 ) }
    dend_16 { pt3dadd( 22.8205, 48.8145, -25.412, 0.55 ) }
    dend_16 { pt3dadd( 25.9919, 50.4548, -27.3921, 0.83 ) }
    dend_16 { pt3dadd( 32.1071, 53.6008, -32.9528, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 5.15733, 39.4961, -23.818, 0.83 ) }
    dend_13 { pt3dadd( 10.3906, 37.287, -22.666, 0.83 ) }
    dend_13 { pt3dadd( 13.3631, 35.7295, -21.9684, 1.11 ) }
    dend_13 { pt3dadd( 15.0987, 34.6118, -21.543, 0.55 ) }
    dend_13 { pt3dadd( 16.1722, 33.7495, -21.2928, 1.66 ) }
    dend_13 { pt3dadd( 19.646, 30.2971, -20.5187, 1.66 ) }
    dend_13 { pt3dadd( 21.8085, 27.8566, -20.0614, 0.83 ) }
    dend_13 { pt3dadd( 23.5786, 25.3312, -19.7516, 0.83 ) }
    dend_13 { pt3dadd( 24.9279, 23.1651, -19.5327, 0.83 ) }
    dend_13 { pt3dadd( 26.5857, 20.2687, -19.3299, 1.39 ) }
    dend_13 { pt3dadd( 27.872, 17.8151, -19.3202, 1.39 ) }
    dend_13 { pt3dadd( 28.423, 17.8526, -20.1522, 0.55 ) }
    dend_13 { pt3dadd( 30.4514, 18.3724, -23.7052, 1.11 ) }
    dend_13 { pt3dadd( 31.4597, 18.6765, -25.5148, 0.55 ) }
    dend_13 { pt3dadd( 31.8781, 18.7943, -26.2777, 1.39 ) }
    dend_13 { pt3dadd( 33.2153, 19.1292, -28.7905, 1.39 ) }
    dend_13 { pt3dadd( 37.7171, 19.9606, -37.5195, 1.66 ) }
    dend_13 { pt3dadd( 38.6877, 20.0109, -39.4517, 1.66 ) }
    dend_13 { pt3dadd( 39.9621, 19.7551, -42.0661, 0.83 ) }
    dend_13 { pt3dadd( 40.8363, 19.3965, -43.7842, 0.28 ) }
    dend_13 { pt3dadd( 41.51, 19.0354, -44.9718, 0.28 ) }
    dend_13 { pt3dadd( 42.4525, 18.3552, -46.323, 0.28 ) }
    dend_13 { pt3dadd( 43.4348, 17.5578, -47.106, 0.55 ) }
    dend_13 { pt3dadd( 45.3116, 16.291, -48.3176, 0.28 ) }
    dend_13 { pt3dadd( 46.7213, 15.5471, -49.072, 1.11 ) }
    dend_13 { pt3dadd( 48.4674, 14.8448, -50.0245, 0.28 ) }
    dend_13 { pt3dadd( 49.2679, 14.5409, -50.5384, 0.55 ) }
    dend_13 { pt3dadd( 50.9714, 13.7675, -51.7573, 1.39 ) }
    dend_13 { pt3dadd( 52.8434, 12.7858, -53.3225, 0.55 ) }
    dend_13 { pt3dadd( 54.4081, 11.823, -55.1671, 0.55 ) }
    dend_13 { pt3dadd( 55.0999, 11.2219, -56.3056, 0.83 ) }
    dend_13 { pt3dadd( 56.1169, 9.97734, -58.5039, 1.11 ) }
    dend_13 { pt3dadd( 56.684, 9.13473, -59.9279, 1.11 ) }
    dend_13 { pt3dadd( 57.1893, 8.16175, -61.4208, 1.11 ) }
    dend_13 { pt3dadd( 58.3015, 5.56753, -64.876, 0.28 ) }
    dend_13 { pt3dadd( 58.73, 4.44785, -66.0662, 0.28 ) }
    dend_13 { pt3dadd( 59.2909, 3.07564, -67.3556, 0.55 ) }
    dend_13 { pt3dadd( 60.2998, 0.902803, -69.3731, 0.28 ) }
    dend_13 { pt3dadd( 60.6602, 0.219118, -70.0062, 1.11 ) }
    dend_13 { pt3dadd( 61.2135, -0.60969, -70.7426, 1.66 ) }
    dend_13 { pt3dadd( 63.8774, -4.09332, -73.6602, 0.28 ) }
    dend_13 { pt3dadd( 64.2914, -4.60104, -74.1054, 0.55 ) }
    dend_13 { pt3dadd( 65.7827, -6.41915, -75.6811, 0.28 ) }
    dend_13 { pt3dadd( 65.9481, -6.57523, -75.8492, 0.83 ) }
    dend_13 { pt3dadd( 68.3299, -8.25728, -78.3144, 0.28 ) }
    dend_13 { pt3dadd( 68.9975, -8.57272, -78.9868, 1.39 ) }
    dend_13 { pt3dadd( 69.9628, -8.89067, -79.9323, 1.94 ) }
    dend_13 { pt3dadd( 70.8238, -9.12625, -80.7916, 1.11 ) }
    dend_13 { pt3dadd( 74.2507, -9.80495, -84.267, 0.28 ) }
    dend_13 { pt3dadd( 75.9951, -10.0927, -86.0775, 0.83 ) }
    dend_13 { pt3dadd( 79.4711, -10.5672, -89.6523, 0.28 ) }
    dend_13 { pt3dadd( 80.3614, -10.6709, -90.5856, 0.55 ) }
    dend_13 { pt3dadd( 82.4757, -10.8949, -92.835, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_13 { pt3dadd( 85.1107, -11.2002, -95.5795, 0.28 ) }
    dend_13 { pt3dadd( 85.8537, -11.325, -96.2519, 1.94 ) }
    dend_13 { pt3dadd( 87.5007, -11.5644, -97.5452, 2.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 3/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 3.43648, 43.6927, -40.4085, 2.49 ) }
    dend_9 { pt3dadd( 6.43385, 44.2257, -41.1722, 2.49 ) }
    dend_9 { pt3dadd( 11.4455, 45.5874, -42.2147, 1.11 ) }
    dend_9 { pt3dadd( 13.8684, 46.2468, -42.6425, 0.83 ) }
    dend_9 { pt3dadd( 17.7372, 47.2887, -43.4351, 0.83 ) }
    dend_9 { pt3dadd( 22.383, 48.54, -44.3869, 1.66 ) }
    dend_9 { pt3dadd( 25.4994, 49.3792, -45.0253, 1.94 ) }
    dend_9 { pt3dadd( 27.8075, 50.1786, -45.5492, 0.55 ) }
    dend_9 { pt3dadd( 29.7099, 51.0671, -45.7333, 0.55 ) }
    dend_9 { pt3dadd( 31.8842, 52.1214, -45.9857, 1.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.43648, 43.6927, -40.4085, 0.55 ) }
    dend_8 { pt3dadd( 4.66871, 45.5532, -43.2539, 0.55 ) }
    dend_8 { pt3dadd( 4.92153, 46.0009, -43.8565, 0.55 ) }
    dend_8 { pt3dadd( 5.44126, 47.1618, -45.2606, 1.11 ) }
    dend_8 { pt3dadd( 6.23102, 49.5241, -47.7633, 1.39 ) }
    dend_8 { pt3dadd( 6.86381, 51.7886, -49.9192, 0.55 ) }
    dend_8 { pt3dadd( 7.36384, 53.8587, -51.7112, 0.28 ) }
    dend_8 { pt3dadd( 7.68236, 55.6007, -53.0926, 1.11 ) }
    dend_8 { pt3dadd( 8.15709, 59.1259, -55.4433, 0.28 ) }
    dend_8 { pt3dadd( 8.47111, 61.958, -56.9753, 1.11 ) }
    dend_8 { pt3dadd( 8.61076, 63.4952, -57.6604, 0.28 ) }
    dend_8 { pt3dadd( 8.73455, 65.0253, -58.2927, 0.83 ) }
    dend_8 { pt3dadd( 9.17828, 70.1369, -60.2024, 0.28 ) }
    dend_8 { pt3dadd( 9.39408, 72.3044, -60.9085, 1.11 ) }
    dend_8 { pt3dadd( 10.006, 77.8369, -62.3771, 0.28 ) }
    dend_8 { pt3dadd( 10.1381, 78.909, -62.6346, 1.66 ) }
    dend_8 { pt3dadd( 10.3676, 80.7664, -63.035, 2.22 ) }
    dend_8 { pt3dadd( 10.7244, 83.4077, -63.5973, 1.11 ) }
    dend_8 { pt3dadd( 11.1926, 86.7558, -64.191, 0.55 ) }
    dend_8 { pt3dadd( 11.2946, 87.6189, -64.3426, 0.83 ) }
    dend_8 { pt3dadd( 11.4974, 89.9317, -64.7209, 0.28 ) }
    dend_8 { pt3dadd( 11.5555, 90.7874, -64.9148, 0.83 ) }
    dend_8 { pt3dadd( 11.7824, 93.922, -65.8301, 0.28 ) }
    dend_8 { pt3dadd( 11.8848, 94.9489, -66.2511, 1.11 ) }
    dend_8 { pt3dadd( 12.3373, 98.7227, -67.9853, 0.28 ) }
    dend_8 { pt3dadd( 12.5948, 100.936, -69.0608, 0.83 ) }
    dend_8 { pt3dadd( 12.9491, 103.914, -70.4195, 0.28 ) }
    dend_8 { pt3dadd( 13.3504, 108.8, -72.3598, 0.55 ) }
    dend_8 { pt3dadd( 13.711, 113.565, -74.1309, 0.28 ) }
    dend_8 { pt3dadd( 13.7934, 114.623, -74.5422, 0.83 ) }
    dend_8 { pt3dadd( 14.0533, 117.848, -75.7873, 0.28 ) }
    dend_8 { pt3dadd( 14.294, 120.849, -76.8652, 0.83 ) }
    dend_8 { pt3dadd( 14.7953, 127.153, -79.1172, 0.28 ) }
    dend_8 { pt3dadd( 15.0156, 130.424, -80.3028, 0.55 ) }
    dend_8 { pt3dadd( 15.1569, 132.038, -80.7935, 0.83 ) }
    dend_8 { pt3dadd( 15.4755, 134.976, -81.62, 0.28 ) }
    dend_8 { pt3dadd( 15.5473, 135.574, -81.7597, 0.55 ) }
    dend_8 { pt3dadd( 16.5267, 143.047, -83.2294, 0.28 ) }
    dend_8 { pt3dadd( 16.6132, 143.66, -83.2945, 0.55 ) }
    dend_8 { pt3dadd( 17.3432, 150.248, -83.479, 0.28 ) }
    dend_8 { pt3dadd( 17.5429, 152.202, -83.4402, 0.55 ) }
    dend_8 { pt3dadd( 17.9399, 156.682, -83.099, 0.28 ) }
    dend_8 { pt3dadd( 18.0961, 158.765, -82.8345, 0.83 ) }
    dend_8 { pt3dadd( 18.2635, 162.025, -82.0542, 0.28 ) }
    dend_8 { pt3dadd( 18.2826, 162.63, -81.9093, 0.55 ) }
    dend_8 { pt3dadd( 18.2527, 164.614, -81.4547, 0.28 ) }
    dend_8 { pt3dadd( 18.2579, 166.858, -80.8973, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 43.0041, -33.5195, 6.86223, 0.55 ) }
    dend_59 { pt3dadd( 44.8, -31.1461, 4.30376, 0.55 ) }
    dend_59 { pt3dadd( 46.2978, -29.4494, 2.1845, 0.55 ) }
    dend_59 { pt3dadd( 46.7357, -28.9562, 1.60299, 0.55 ) }
    dend_59 { pt3dadd( 48.0249, -27.5891, -0.138583, 0.55 ) }
    dend_59 { pt3dadd( 49.015, -26.6154, -1.49399, 0.55 ) }
    dend_59 { pt3dadd( 50.009, -25.677, -2.82299, 0.55 ) }
    dend_59 { pt3dadd( 51.7156, -24.205, -4.87904, 0.55 ) }
    dend_59 { pt3dadd( 52.7824, -23.2518, -6.07097, 0.55 ) }
    dend_59 { pt3dadd( 54.3832, -21.8279, -7.71787, 0.55 ) }
    dend_59 { pt3dadd( 55.3306, -21.0301, -8.57959, 0.55 ) }
    dend_59 { pt3dadd( 56.3414, -20.1164, -9.50622, 0.55 ) }
    dend_59 { pt3dadd( 57.6356, -18.7029, -10.6837, 1.39 ) }
    dend_59 { pt3dadd( 59.3784, -16.5485, -12.3927, 0.55 ) }
    dend_59 { pt3dadd( 61.2066, -14.2324, -14.2371, 0.55 ) }
    dend_59 { pt3dadd( 62.7445, -12.1861, -15.9129, 1.11 ) }
    dend_59 { pt3dadd( 64.3663, -9.98555, -17.8276, 0.55 ) }
    dend_59 { pt3dadd( 65.1359, -8.94519, -18.8841, 0.55 ) }
    dend_59 { pt3dadd( 66.2179, -7.52902, -20.522, 0.28 ) }
    dend_59 { pt3dadd( 66.6244, -7.09659, -21.1616, 0.83 ) }
    dend_59 { pt3dadd( 68.2454, -5.6125, -23.3134, 0.28 ) }
    dend_59 { pt3dadd( 68.8731, -5.07572, -24.1476, 0.83 ) }
    dend_59 { pt3dadd( 70.4098, -3.8962, -26.1688, 0.28 ) }
    dend_59 { pt3dadd( 70.91, -3.53545, -26.8171, 1.39 ) }
    dend_59 { pt3dadd( 73.5736, -1.56356, -30.1797, 0.28 ) }
    dend_59 { pt3dadd( 75.7063, 0.00743198, -32.8624, 0.28 ) }
    dend_59 { pt3dadd( 77.14, 1.01212, -34.5069, 1.11 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 87/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 43.0041, -33.5195, 6.86223, 0.83 ) }
    dend_58 { pt3dadd( 42.3529, -35.4622, 5.02634, 0.83 ) }
    dend_58 { pt3dadd( 41.9793, -36.6977, 3.9654, 0.83 ) }
    dend_58 { pt3dadd( 41.1428, -40.4292, 1.2279, 0.83 ) }
    dend_58 { pt3dadd( 40.5843, -42.9842, -0.43509, 0.83 ) }
    dend_58 { pt3dadd( 39.9014, -45.7965, -2.24811, 0.28 ) }
    dend_58 { pt3dadd( 39.5315, -47.3293, -3.2128, 0.83 ) }
    dend_58 { pt3dadd( 39.1417, -48.7071, -4.16247, 0.28 ) }
    dend_58 { pt3dadd( 38.7228, -50.6199, -5.50686, 0.28 ) }
    dend_58 { pt3dadd( 38.5972, -51.8476, -6.35421, 0.55 ) }
    dend_58 { pt3dadd( 38.7077, -53.9399, -7.9333, 0.28 ) }
    dend_58 { pt3dadd( 38.8367, -55.0342, -8.93396, 0.83 ) }
    dend_58 { pt3dadd( 38.9115, -56.9931, -10.8838, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 38.899, -57.8265, -11.8221, 0.28 ) }
    dend_58 { pt3dadd( 38.9035, -59.4379, -13.8332, 0.28 ) }
    dend_58 { pt3dadd( 38.9614, -60.9091, -15.6968, 0.28 ) }
    dend_58 { pt3dadd( 39.0154, -62.1669, -17.3255, 1.39 ) }
    dend_58 { pt3dadd( 39.1093, -65.3911, -21.6277, 0.28 ) }
    dend_58 { pt3dadd( 39.1439, -67.1682, -24.0263, 1.11 ) }
    dend_58 { pt3dadd( 39.1994, -68.9485, -26.5641, 0.28 ) }
    dend_58 { pt3dadd( 39.2269, -69.2583, -27.0299, 0.83 ) }
    dend_58 { pt3dadd( 39.5487, -71.4357, -30.3931, 0.28 ) }
    dend_58 { pt3dadd( 39.6565, -71.7793, -30.8998, 0.55 ) }
    dend_58 { pt3dadd( 40.4077, -73.2554, -32.9768, 0.28 ) }
    dend_58 { pt3dadd( 40.6848, -73.7955, -33.6559, 1.11 ) }
    dend_58 { pt3dadd( 41.4544, -75.308, -35.384, 0.28 ) }
    dend_58 { pt3dadd( 42.0839, -76.5916, -36.7814, 0.83 ) }
    dend_58 { pt3dadd( 43.2982, -79.1814, -39.5041, 0.28 ) }
    dend_58 { pt3dadd( 43.4056, -79.4126, -39.7979, 0.83 ) }
    dend_58 { pt3dadd( 44.0228, -80.6481, -41.5549, 0.28 ) }
    dend_58 { pt3dadd( 44.487, -81.3994, -42.9972, 0.83 ) }
    dend_58 { pt3dadd( 45.2198, -82.4866, -45.4011, 0.28 ) }
    dend_58 { pt3dadd( 45.7026, -83.0863, -46.8426, 1.11 ) }
    dend_58 { pt3dadd( 47.2583, -84.7272, -51.0295, 0.28 ) }
    dend_58 { pt3dadd( 47.603, -85.0246, -51.8192, 0.83 ) }
    dend_58 { pt3dadd( 50.1038, -86.7655, -56.6671, 0.28 ) }
    dend_58 { pt3dadd( 51.0186, -87.3324, -58.3107, 0.28 ) }
    dend_58 { pt3dadd( 52.0591, -87.9319, -59.9327, 0.28 ) }
    dend_58 { pt3dadd( 52.2176, -88.0179, -60.147, 0.83 ) }
    dend_58 { pt3dadd( 53.8028, -88.8288, -61.9402, 0.28 ) }
    dend_58 { pt3dadd( 54.074, -88.953, -62.2315, 0.55 ) }
    dend_58 { pt3dadd( 56.2761, -89.7363, -64.2236, 0.28 ) }
    dend_58 { pt3dadd( 56.6652, -89.8147, -64.6044, 0.55 ) }
    dend_58 { pt3dadd( 57.9904, -90.1053, -65.9876, 0.28 ) }
    dend_58 { pt3dadd( 58.5527, -90.2563, -66.5791, 0.83 ) }
    dend_58 { pt3dadd( 60.2312, -90.7724, -68.3448, 0.28 ) }
    dend_58 { pt3dadd( 60.9195, -90.9827, -69.0577, 0.55 ) }
    dend_58 { pt3dadd( 63.2038, -91.6924, -71.3083, 0.28 ) }
    dend_58 { pt3dadd( 64.5154, -92.1702, -72.6568, 0.55 ) }
    dend_58 { pt3dadd( 67.9909, -93.7448, -76.3821, 0.28 ) }
    dend_58 { pt3dadd( 68.3667, -93.9368, -76.806, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 38/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 38.329, -33.7299, 20.077, 0.83 ) }
    dend_55 { pt3dadd( 40.8123, -32.6457, 20.8779, 0.83 ) }
    dend_55 { pt3dadd( 43.2868, -31.2481, 21.8535, 0.83 ) }
    dend_55 { pt3dadd( 44.0562, -30.6936, 22.1662, 0.83 ) }
    dend_55 { pt3dadd( 46.9808, -28.3069, 23.3206, 0.83 ) }
    dend_55 { pt3dadd( 47.9899, -27.4209, 23.7065, 0.83 ) }
    dend_55 { pt3dadd( 49.6466, -25.9622, 24.3035, 1.39 ) }
    dend_55 { pt3dadd( 51.8352, -24.0109, 25.1611, 1.39 ) }
    dend_55 { pt3dadd( 54.1549, -21.9398, 26.0832, 1.39 ) }
    dend_55 { pt3dadd( 55.6494, -20.7591, 26.5445, 0.55 ) }
    dend_55 { pt3dadd( 56.4485, -20.1831, 26.708, 1.39 ) }
    dend_55 { pt3dadd( 57.8687, -19.3587, 26.9533, 1.39 ) }
    dend_55 { pt3dadd( 60.5047, -18.1094, 27.3099, 0.55 ) }
    dend_55 { pt3dadd( 62.1498, -17.4522, 27.5107, 1.66 ) }
    dend_55 { pt3dadd( 67.5975, -15.4137, 28.083, 0.83 ) }
    dend_55 { pt3dadd( 71.4564, -13.8939, 28.4166, 0.83 ) }
    dend_55 { pt3dadd( 73.5194, -12.9562, 28.5893, 0.83 ) }
    dend_55 { pt3dadd( 75.1919, -12.1379, 28.702, 0.55 ) }
    dend_55 { pt3dadd( 75.9254, -11.7495, 28.7245, 1.11 ) }
    dend_55 { pt3dadd( 77.7464, -10.7486, 28.7784, 0.55 ) }
    dend_55 { pt3dadd( 79.105, -9.61825, 28.8672, 1.39 ) }
    dend_55 { pt3dadd( 80.9931, -7.59175, 28.9299, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 60/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 38.329, -33.7299, 20.077, 0.55 ) }
    dend_54 { pt3dadd( 41.0369, -38.2937, 20.3413, 0.55 ) }
    dend_54 { pt3dadd( 43.6712, -42.6011, 20.7328, 0.83 ) }
    dend_54 { pt3dadd( 44.531, -44.0024, 20.8815, 0.28 ) }
    dend_54 { pt3dadd( 45.4765, -45.4885, 21.1015, 0.83 ) }
    dend_54 { pt3dadd( 47.5867, -48.6813, 21.4781, 0.28 ) }
    dend_54 { pt3dadd( 48.3703, -49.8237, 21.5945, 0.83 ) }
    dend_54 { pt3dadd( 49.2551, -51.0154, 21.789, 0.83 ) }
    dend_54 { pt3dadd( 50.6283, -52.6147, 21.936, 0.28 ) }
    dend_54 { pt3dadd( 52.3115, -54.5942, 21.9057, 0.83 ) }
    dend_54 { pt3dadd( 54.2844, -56.9581, 21.686, 0.28 ) }
    dend_54 { pt3dadd( 54.6767, -57.4276, 21.5751, 1.11 ) }
    dend_54 { pt3dadd( 55.7961, -58.7179, 21.2002, 1.11 ) }
    dend_54 { pt3dadd( 57.4115, -60.4636, 20.5464, 0.28 ) }
    dend_54 { pt3dadd( 58.7927, -61.8871, 19.8171, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 75/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -67.7, 82.2748, -48.2364, 0.28 ) }
    dend_37 { pt3dadd( -69.1933, 84.0947, -50.158, 0.28 ) }
    dend_37 { pt3dadd( -69.9194, 84.9887, -51.1082, 0.83 ) }
    dend_37 { pt3dadd( -71.6185, 87.0175, -53.271, 0.28 ) }
    dend_37 { pt3dadd( -72.3517, 87.8813, -54.2354, 0.55 ) }
    dend_37 { pt3dadd( -74.0198, 89.7397, -56.3662, 0.28 ) }
    dend_37 { pt3dadd( -74.3439, 90.0735, -56.7741, 0.83 ) }
    dend_37 { pt3dadd( -75.6311, 91.2678, -58.3308, 0.28 ) }
    dend_37 { pt3dadd( -75.9409, 91.505, -58.7185, 0.55 ) }
    dend_37 { pt3dadd( -77.2388, 92.2956, -60.1584, 0.28 ) }
    dend_37 { pt3dadd( -77.8107, 92.6334, -60.7989, 0.55 ) }
    dend_37 { pt3dadd( -79.8324, 93.6916, -62.9075, 0.55 ) }
    dend_37 { pt3dadd( -80.57, 94.0714, -63.6889, 0.83 ) }
    dend_37 { pt3dadd( -82.9217, 95.2751, -66.1331, 0.28 ) }
    dend_37 { pt3dadd( -85.6562, 96.8216, -68.9827, 1.11 ) }
    dend_37 { pt3dadd( -87.759, 98.0661, -71.1139, 0.28 ) }
    dend_37 { pt3dadd( -88.3287, 98.4149, -71.6857, 0.55 ) }
    dend_37 { pt3dadd( -89.6405, 99.2113, -72.9311, 0.28 ) }
    dend_37 { pt3dadd( -90.3061, 99.6261, -73.5645, 1.11 ) }
    dend_37 { pt3dadd( -92.4743, 101.092, -75.5476, 0.28 ) }
    dend_37 { pt3dadd( -93.8361, 102.005, -76.9059, 1.11 ) }
    dend_37 { pt3dadd( -95.4432, 103.009, -78.4151, 0.28 ) }
    dend_37 { pt3dadd( -95.8237, 103.238, -78.7613, 0.55 ) }
    dend_37 { pt3dadd( -97.116, 103.977, -79.8334, 0.28 ) }
    dend_37 { pt3dadd( -97.7101, 104.304, -80.321, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_37 { pt3dadd( -100.009, 105.52, -82.0316, 0.28 ) }
    dend_37 { pt3dadd( -100.755, 105.978, -82.6167, 0.55 ) }
    dend_37 { pt3dadd( -102.021, 106.815, -83.6787, 0.28 ) }
    dend_37 { pt3dadd( -102.821, 107.327, -84.3818, 0.55 ) }
    dend_37 { pt3dadd( -104.67, 108.385, -85.9994, 0.28 ) }
    dend_37 { pt3dadd( -105.447, 108.835, -86.7024, 0.55 ) }
    dend_37 { pt3dadd( -107.523, 109.998, -88.5771, 0.28 ) }
    dend_37 { pt3dadd( -107.987, 110.255, -89.0593, 0.55 ) }
    dend_37 { pt3dadd( -109.338, 110.98, -90.6908, 0.28 ) }
    dend_37 { pt3dadd( -110.157, 111.377, -91.7599, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 10/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -67.7, 82.2748, -48.2364, 0.55 ) }
    dend_36 { pt3dadd( -68.3025, 80.8967, -49.4062, 0.55 ) }
    dend_36 { pt3dadd( -68.906, 79.6474, -50.5468, 1.11 ) }
    dend_36 { pt3dadd( -70.245, 77.1779, -52.824, 0.28 ) }
    dend_36 { pt3dadd( -71.0704, 75.7906, -54.0, 0.28 ) }
    dend_36 { pt3dadd( -72.6994, 73.4868, -56.0138, 0.28 ) }
    dend_36 { pt3dadd( -73.0022, 73.1361, -56.3103, 0.55 ) }
    dend_36 { pt3dadd( -73.8915, 72.3213, -57.0056, 0.28 ) }
    dend_36 { pt3dadd( -74.8608, 71.5493, -57.6357, 0.83 ) }
    dend_36 { pt3dadd( -76.5812, 70.175, -58.5817, 0.28 ) }
    dend_36 { pt3dadd( -78.5575, 68.493, -59.6352, 0.28 ) }
    dend_36 { pt3dadd( -80.7683, 66.3272, -60.9064, 0.55 ) }
    dend_36 { pt3dadd( -82.4749, 64.3683, -62.0307, 0.28 ) }
    dend_36 { pt3dadd( -83.2703, 63.3704, -62.5824, 0.83 ) }
    dend_36 { pt3dadd( -85.4247, 60.3965, -64.2735, 0.28 ) }
    dend_36 { pt3dadd( -86.2132, 59.1184, -65.0047, 0.83 ) }
    dend_36 { pt3dadd( -87.3603, 56.5029, -66.3049, 0.28 ) }
    dend_36 { pt3dadd( -87.4818, 56.0256, -66.5507, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -57.7556, 28.7509, -14.3586, 0.28 ) }
    dend_33 { pt3dadd( -60.9288, 27.8648, -14.748, 0.28 ) }
    dend_33 { pt3dadd( -62.5126, 27.3153, -14.8398, 0.55 ) }
    dend_33 { pt3dadd( -64.8328, 26.4345, -14.8553, 0.28 ) }
    dend_33 { pt3dadd( -66.1078, 25.8755, -14.7615, 0.83 ) }
    dend_33 { pt3dadd( -68.232, 24.8764, -14.4833, 0.28 ) }
    dend_33 { pt3dadd( -68.9276, 24.5443, -14.3267, 0.83 ) }
    dend_33 { pt3dadd( -71.2637, 23.1152, -13.5843, 0.28 ) }
    dend_33 { pt3dadd( -72.0586, 22.5672, -13.3558, 0.83 ) }
    dend_33 { pt3dadd( -73.7006, 21.3027, -12.966, 0.28 ) }
    dend_33 { pt3dadd( -74.9796, 20.2481, -12.7123, 0.83 ) }
    dend_33 { pt3dadd( -77.5504, 18.3022, -12.4199, 0.55 ) }
    dend_33 { pt3dadd( -80.0369, 16.4948, -12.3977, 0.28 ) }
    dend_33 { pt3dadd( -81.6853, 15.3885, -12.5197, 1.11 ) }
    dend_33 { pt3dadd( -83.1916, 14.4503, -12.6839, 1.39 ) }
    dend_33 { pt3dadd( -85.9783, 12.8888, -12.9695, 0.55 ) }
    dend_33 { pt3dadd( -89.0108, 11.2008, -13.305, 0.28 ) }
    dend_33 { pt3dadd( -91.4404, 9.9136, -13.5926, 0.28 ) }
    dend_33 { pt3dadd( -93.4579, 8.99068, -13.6817, 0.28 ) }
    dend_33 { pt3dadd( -95.178, 8.28138, -13.6689, 0.28 ) }
    dend_33 { pt3dadd( -97.2619, 7.5457, -13.6459, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 49/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -57.7556, 28.7509, -14.3586, 0.55 ) }
    dend_32 { pt3dadd( -60.4588, 27.4613, -14.7558, 0.55 ) }
    dend_32 { pt3dadd( -61.9391, 26.7526, -15.0065, 0.55 ) }
    dend_32 { pt3dadd( -66.4395, 24.5826, -15.0619, 0.83 ) }
    dend_32 { pt3dadd( -69.8299, 22.9977, -14.8761, 0.55 ) }
    dend_32 { pt3dadd( -71.6286, 22.2038, -14.857, 0.55 ) }
    dend_32 { pt3dadd( -72.8616, 21.6705, -14.8879, 0.83 ) }
    dend_32 { pt3dadd( -75.4584, 20.59, -15.0042, 1.39 ) }
    dend_32 { pt3dadd( -82.4882, 17.601, -15.8436, 0.55 ) }
    dend_32 { pt3dadd( -84.5436, 16.7962, -16.1716, 0.55 ) }
    dend_32 { pt3dadd( -89.1743, 15.1454, -17.0069, 0.55 ) }
    dend_32 { pt3dadd( -91.1495, 14.4508, -17.4343, 0.55 ) }
    dend_32 { pt3dadd( -94.0869, 13.4099, -18.1965, 1.39 ) }
    dend_32 { pt3dadd( -97.5895, 12.1733, -19.2951, 0.28 ) }
    dend_32 { pt3dadd( -101.48, 10.8168, -20.8604, 0.55 ) }
    dend_32 { pt3dadd( -102.746, 10.3743, -21.3238, 1.11 ) }
    dend_32 { pt3dadd( -108.4, 8.50872, -22.9834, 0.55 ) }
    dend_32 { pt3dadd( -109.894, 8.06087, -23.3329, 0.55 ) }
    dend_32 { pt3dadd( -110.264, 7.95434, -23.394, 1.39 ) }
    dend_32 { pt3dadd( -112.852, 7.19854, -23.6231, 1.39 ) }
    dend_32 { pt3dadd( -114.694, 6.61725, -23.7994, 1.11 ) }
    dend_32 { pt3dadd( -117.642, 5.71143, -24.0532, 0.55 ) }
    dend_32 { pt3dadd( -120.688, 4.78716, -23.9717, 0.55 ) }
    dend_32 { pt3dadd( -122.378, 4.21359, -23.8313, 1.11 ) }
    dend_32 { pt3dadd( -124.651, 3.36002, -23.4267, 0.28 ) }
    dend_32 { pt3dadd( -127.412, 2.24185, -22.5671, 0.83 ) }
    dend_32 { pt3dadd( -129.816, 1.16077, -21.6489, 0.28 ) }
    dend_32 { pt3dadd( -133.298, -0.62736, -20.1517, 0.28 ) }
    dend_32 { pt3dadd( -134.577, -1.37651, -19.6356, 0.83 ) }
    dend_32 { pt3dadd( -137.504, -3.34231, -18.2423, 0.28 ) }
    dend_32 { pt3dadd( -139.265, -4.62811, -17.4814, 1.11 ) }
    dend_32 { pt3dadd( -140.881, -5.90401, -16.7967, 1.11 ) }
    dend_32 { pt3dadd( -142.172, -6.8732, -16.277, 0.55 ) }
    dend_32 { pt3dadd( -145.332, -9.33945, -15.3065, 0.55 ) }
    dend_32 { pt3dadd( -146.982, -10.6597, -14.9167, 0.55 ) }
    dend_32 { pt3dadd( -150.573, -13.5737, -14.4931, 0.55 ) }
    dend_32 { pt3dadd( -152.053, -14.7359, -14.4019, 1.39 ) }
    dend_32 { pt3dadd( -156.825, -18.0473, -14.0216, 0.28 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 32.1071, 53.6008, -32.9528, 0.55 ) }
    dend_18 { pt3dadd( 39.205, 53.8303, -29.7869, 0.55 ) }
    dend_18 { pt3dadd( 42.6986, 54.1221, -28.631, 0.55 ) }
    dend_18 { pt3dadd( 43.9491, 54.2655, -28.2409, 0.83 ) }
    dend_18 { pt3dadd( 45.3539, 54.5195, -27.7902, 0.83 ) }
    dend_18 { pt3dadd( 47.1724, 54.8646, -27.2083, 0.28 ) }
    dend_18 { pt3dadd( 49.5676, 55.3749, -26.4923, 0.55 ) }
    dend_18 { pt3dadd( 51.2475, 55.8101, -26.1149, 0.28 ) }
    dend_18 { pt3dadd( 54.9762, 56.8619, -25.3691, 0.55 ) }
    dend_18 { pt3dadd( 61.2382, 58.8112, -24.2489, 0.55 ) }
    dend_18 { pt3dadd( 61.9771, 59.0603, -24.1573, 0.55 ) }
    dend_18 { pt3dadd( 65.6968, 60.3588, -23.7316, 0.28 ) }
    dend_18 { pt3dadd( 67.2772, 60.9174, -23.5891, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 71.3187, 62.3405, -23.4575, 0.55 ) }
    dend_18 { pt3dadd( 73.4783, 63.1758, -23.7286, 1.11 ) }
    dend_18 { pt3dadd( 75.9791, 64.1805, -24.6378, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 32.1071, 53.6008, -32.9528, 0.55 ) }
    dend_17 { pt3dadd( 33.2125, 54.4269, -33.9261, 0.55 ) }
    dend_17 { pt3dadd( 33.8711, 54.8512, -34.3254, 1.11 ) }
    dend_17 { pt3dadd( 35.9731, 56.1864, -35.3438, 0.55 ) }
    dend_17 { pt3dadd( 37.0791, 56.8895, -35.8084, 0.55 ) }
    dend_17 { pt3dadd( 39.1331, 58.1906, -36.537, 1.11 ) }
    dend_17 { pt3dadd( 40.0862, 58.8166, -36.8447, 1.11 ) }
    dend_17 { pt3dadd( 42.269, 60.1046, -37.3066, 0.28 ) }
    dend_17 { pt3dadd( 43.1288, 60.5676, -37.5559, 0.55 ) }
    dend_17 { pt3dadd( 44.945, 61.5326, -38.1752, 0.28 ) }
    dend_17 { pt3dadd( 45.6619, 61.9738, -38.612, 0.55 ) }
    dend_17 { pt3dadd( 47.0456, 62.8731, -39.5289, 0.28 ) }
    dend_17 { pt3dadd( 48.4963, 63.818, -40.6313, 0.83 ) }
    dend_17 { pt3dadd( 52.6694, 66.4306, -44.0677, 0.28 ) }
    dend_17 { pt3dadd( 53.8625, 67.1245, -44.9906, 0.83 ) }
    dend_17 { pt3dadd( 57.9838, 69.6163, -48.0663, 0.28 ) }
    dend_17 { pt3dadd( 60.0512, 70.9281, -49.5664, 1.11 ) }
    dend_17 { pt3dadd( 61.7526, 72.0618, -50.718, 0.28 ) }
    dend_17 { pt3dadd( 62.6393, 72.6904, -51.3224, 0.28 ) }
    dend_17 { pt3dadd( 64.8261, 74.2822, -52.5851, 0.28 ) }
    dend_17 { pt3dadd( 67.4152, 76.0116, -53.9841, 1.66 ) }
    dend_17 { pt3dadd( 70.0273, 77.6116, -55.2379, 0.28 ) }
    dend_17 { pt3dadd( 71.2529, 78.3956, -55.8679, 0.83 ) }
    dend_17 { pt3dadd( 74.9736, 80.9431, -57.6587, 0.28 ) }
    dend_17 { pt3dadd( 75.9349, 81.6427, -58.1055, 1.11 ) }
    dend_17 { pt3dadd( 78.2667, 83.3452, -59.1933, 0.28 ) }
    dend_17 { pt3dadd( 79.6437, 84.2903, -59.7981, 0.28 ) }
    dend_17 { pt3dadd( 82.1196, 85.955, -60.8078, 1.11 ) }
    dend_17 { pt3dadd( 84.3491, 87.4052, -61.6433, 0.28 ) }
    dend_17 { pt3dadd( 85.5371, 88.1331, -62.0079, 0.28 ) }
    dend_17 { pt3dadd( 87.5904, 89.3421, -62.5798, 0.83 ) }
    dend_17 { pt3dadd( 89.9934, 90.7458, -63.1699, 0.28 ) }
    dend_17 { pt3dadd( 91.4458, 91.5571, -63.4485, 1.11 ) }
    dend_17 { pt3dadd( 94.1118, 92.8725, -63.7583, 0.55 ) }
    dend_17 { pt3dadd( 96.8965, 94.2245, -63.9364, 0.55 ) }
    dend_17 { pt3dadd( 99.093, 95.3609, -63.8683, 1.66 ) }
    dend_17 { pt3dadd( 100.778, 96.3336, -63.6418, 0.55 ) }
    dend_17 { pt3dadd( 102.33, 97.3418, -63.4525, 0.28 ) }
    dend_17 { pt3dadd( 104.366, 98.7975, -63.2578, 0.28 ) }
    dend_17 { pt3dadd( 105.614, 99.7509, -63.2489, 0.28 ) }
    dend_17 { pt3dadd( 107.962, 101.616, -63.4473, 1.11 ) }
    dend_17 { pt3dadd( 108.828, 102.286, -63.6314, 1.11 ) }
    dend_17 { pt3dadd( 112.783, 105.249, -64.7452, 0.28 ) }
    dend_17 { pt3dadd( 114.8, 106.714, -65.3018, 1.11 ) }
    dend_17 { pt3dadd( 117.217, 108.474, -65.9295, 0.28 ) }
    dend_17 { pt3dadd( 118.014, 109.044, -66.1223, 0.55 ) }
    dend_17 { pt3dadd( 119.946, 110.362, -66.562, 0.28 ) }
    dend_17 { pt3dadd( 121.949, 111.621, -66.9245, 0.83 ) }
    dend_17 { pt3dadd( 125.044, 113.557, -67.2933, 0.28 ) }
    dend_17 { pt3dadd( 127.251, 114.944, -67.5547, 0.83 ) }
    dend_17 { pt3dadd( 128.314, 115.584, -67.6407, 1.39 ) }
    dend_17 { pt3dadd( 130.017, 116.599, -67.822, 1.39 ) }
    dend_17 { pt3dadd( 133.071, 118.434, -68.256, 0.28 ) }
    dend_17 { pt3dadd( 135.265, 119.713, -68.7112, 0.83 ) }
    dend_17 { pt3dadd( 137.799, 121.164, -69.4549, 0.28 ) }
    dend_17 { pt3dadd( 140.349, 122.65, -70.3753, 0.28 ) }
    dend_17 { pt3dadd( 141.936, 123.546, -70.9967, 0.55 ) }
    dend_17 { pt3dadd( 143.379, 124.361, -71.5884, 0.28 ) }
    dend_17 { pt3dadd( 144.958, 125.226, -72.312, 0.28 ) }
    dend_17 { pt3dadd( 147.824, 126.646, -73.8801, 1.39 ) }
    dend_17 { pt3dadd( 150.968, 128.049, -76.0021, 0.55 ) }
    dend_17 { pt3dadd( 152.035, 128.469, -76.7747, 0.55 ) }
    dend_17 { pt3dadd( 153.209, 128.882, -77.5891, 0.55 ) }
    dend_17 { pt3dadd( 157.306, 130.177, -80.3221, 1.11 ) }
    dend_17 { pt3dadd( 159.673, 130.872, -81.9266, 0.55 ) }
    dend_17 { pt3dadd( 162.726, 131.498, -84.0628, 1.11 ) }
    dend_17 { pt3dadd( 164.76, 131.79, -85.4994, 0.83 ) }
    dend_17 { pt3dadd( 167.365, 132.159, -87.3729, 0.28 ) }
    dend_17 { pt3dadd( 168.936, 132.326, -88.4996, 0.55 ) }
    dend_17 { pt3dadd( 171.745, 132.463, -90.3633, 0.83 ) }
    dend_17 { pt3dadd( 175.615, 132.625, -92.6774, 0.28 ) }
    dend_17 { pt3dadd( 175.853, 132.63, -92.8112, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 87.5007, -11.5644, -97.5452, 0.28 ) }
    dend_15 { pt3dadd( 89.6574, -14.7434, -97.8727, 0.28 ) }
    dend_15 { pt3dadd( 89.8176, -14.9795, -97.897, 0.55 ) }
    dend_15 { pt3dadd( 92.8969, -19.5184, -98.3646, 0.28 ) }
    dend_15 { pt3dadd( 93.0537, -19.7493, -98.3884, 0.55 ) }
    dend_15 { pt3dadd( 94.3258, -21.6245, -98.5816, 0.28 ) }
    dend_15 { pt3dadd( 96.0435, -24.1565, -98.8424, 1.11 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 82/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 87.5007, -11.5644, -97.5452, 0.28 ) }
    dend_14 { pt3dadd( 92.5337, -12.309, -100.739, 0.28 ) }
    dend_14 { pt3dadd( 93.4329, -12.4422, -101.31, 0.55 ) }
    dend_14 { pt3dadd( 98.5327, -13.1967, -104.546, 0.28 ) }
    dend_14 { pt3dadd( 100.245, -13.4502, -105.633, 1.39 ) }
    dend_14 { pt3dadd( 104.625, -14.0983, -108.413, 0.28 ) }
    dend_14 { pt3dadd( 105.588, -14.2409, -109.024, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 89/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 31.8842, 52.1214, -45.9857, 0.55 ) }
    dend_11 { pt3dadd( 34.154, 53.2271, -44.9212, 0.55 ) }
    dend_11 { pt3dadd( 36.4211, 54.2467, -44.0809, 0.28 ) }
    dend_11 { pt3dadd( 39.1208, 55.411, -43.2406, 0.83 ) }
    dend_11 { pt3dadd( 42.9724, 56.9809, -42.1366, 0.55 ) }
    dend_11 { pt3dadd( 45.3511, 57.8352, -41.7014, 1.11 ) }
    dend_11 { pt3dadd( 48.5061, 58.8372, -41.2264, 1.39 ) }
    dend_11 { pt3dadd( 51.2995, 59.6034, -41.0113, 0.55 ) }
    dend_11 { pt3dadd( 52.7432, 59.9538, -40.9324, 0.55 ) }
    dend_11 { pt3dadd( 56.3764, 60.8231, -40.8973, 1.11 ) }
    dend_11 { pt3dadd( 63.0596, 62.3652, -40.856, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 66.0845, 63.0514, -40.7585, 0.28 ) }
    dend_11 { pt3dadd( 68.9445, 63.7504, -40.4215, 0.55 ) }
    dend_11 { pt3dadd( 73.3357, 64.8523, -39.5337, 0.28 ) }
    dend_11 { pt3dadd( 75.9701, 65.5013, -38.7967, 0.83 ) }
    dend_11 { pt3dadd( 80.2571, 66.493, -37.2109, 0.55 ) }
    dend_11 { pt3dadd( 82.499, 66.9702, -36.0954, 0.55 ) }
    dend_11 { pt3dadd( 85.4047, 67.5639, -34.4883, 2.22 ) }
    dend_11 { pt3dadd( 86.5831, 67.789, -33.7771, 2.22 ) }
    dend_11 { pt3dadd( 89.3706, 68.3988, -32.2043, 0.28 ) }
    dend_11 { pt3dadd( 90.554, 68.7097, -31.5441, 0.28 ) }
    dend_11 { pt3dadd( 92.2612, 69.2428, -30.7919, 0.28 ) }
    dend_11 { pt3dadd( 94.5938, 70.1207, -29.9515, 0.83 ) }
    dend_11 { pt3dadd( 96.3467, 70.9453, -29.4254, 1.11 ) }
    dend_11 { pt3dadd( 100.116, 72.7265, -28.546, 0.55 ) }
    dend_11 { pt3dadd( 101.243, 73.231, -28.4276, 1.11 ) }
    dend_11 { pt3dadd( 104.115, 74.3952, -28.3212, 0.55 ) }
    dend_11 { pt3dadd( 105.664, 74.9128, -28.327, 0.55 ) }
    dend_11 { pt3dadd( 109.1, 75.8224, -28.5724, 0.83 ) }
    dend_11 { pt3dadd( 116.111, 77.3855, -29.3514, 0.55 ) }
    dend_11 { pt3dadd( 120.487, 78.2663, -29.9745, 1.11 ) }
    dend_11 { pt3dadd( 121.695, 78.5045, -30.147, 0.83 ) }
    dend_11 { pt3dadd( 123.854, 78.9026, -30.4726, 0.28 ) }
    dend_11 { pt3dadd( 126.599, 79.3483, -30.9275, 1.66 ) }
    dend_11 { pt3dadd( 129.77, 79.8073, -31.4139, 0.55 ) }
    dend_11 { pt3dadd( 133.433, 80.3712, -31.7524, 0.55 ) }
    dend_11 { pt3dadd( 137.834, 80.9774, -31.8733, 0.55 ) }
    dend_11 { pt3dadd( 139.903, 81.1882, -31.8852, 0.28 ) }
    dend_11 { pt3dadd( 142.173, 81.2952, -31.8548, 1.11 ) }
    dend_11 { pt3dadd( 145.682, 81.147, -31.6407, 0.55 ) }
    dend_11 { pt3dadd( 147.524, 80.8952, -31.4885, 0.28 ) }
    dend_11 { pt3dadd( 148.974, 80.5531, -31.34, 1.11 ) }
    dend_11 { pt3dadd( 152.211, 79.5753, -30.9469, 0.55 ) }
    dend_11 { pt3dadd( 153.722, 79.03, -30.7538, 0.55 ) }
    dend_11 { pt3dadd( 155.776, 78.1826, -30.5311, 0.55 ) }
    dend_11 { pt3dadd( 156.488, 77.8551, -30.4902, 0.55 ) }
    dend_11 { pt3dadd( 157.935, 77.1407, -30.3826, 0.28 ) }
    dend_11 { pt3dadd( 158.943, 76.6095, -30.3295, 0.55 ) }
    dend_11 { pt3dadd( 160.808, 75.511, -30.191, 0.28 ) }
    dend_11 { pt3dadd( 161.776, 74.9229, -30.0574, 0.83 ) }
    dend_11 { pt3dadd( 163.71, 73.6678, -29.7012, 0.28 ) }
    dend_11 { pt3dadd( 164.549, 73.1373, -29.5336, 0.83 ) }
    dend_11 { pt3dadd( 166.317, 72.0549, -29.1422, 0.28 ) }
    dend_11 { pt3dadd( 168.096, 70.9449, -28.7012, 0.83 ) }
    dend_11 { pt3dadd( 170.747, 69.312, -27.9554, 0.28 ) }
    dend_11 { pt3dadd( 171.744, 68.6445, -27.6472, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 31.8842, 52.1214, -45.9857, 0.55 ) }
    dend_10 { pt3dadd( 31.9942, 52.5327, -48.3296, 0.55 ) }
    dend_10 { pt3dadd( 32.0799, 53.0188, -49.7428, 0.55 ) }
    dend_10 { pt3dadd( 32.1289, 53.5882, -50.7408, 0.55 ) }
    dend_10 { pt3dadd( 32.2943, 55.4557, -53.2807, 1.11 ) }
    dend_10 { pt3dadd( 33.317, 62.6895, -61.3476, 1.11 ) }
    dend_10 { pt3dadd( 33.8621, 66.1163, -64.5889, 0.28 ) }
    dend_10 { pt3dadd( 34.1771, 68.1884, -66.19, 1.11 ) }
    dend_10 { pt3dadd( 34.8526, 72.6472, -69.1459, 0.55 ) }
    dend_10 { pt3dadd( 35.2498, 74.935, -70.457, 1.11 ) }
    dend_10 { pt3dadd( 36.1251, 79.2982, -72.5507, 0.28 ) }
    dend_10 { pt3dadd( 36.6722, 81.9397, -73.4311, 1.39 ) }
    dend_10 { pt3dadd( 37.6337, 86.4727, -74.9458, 0.28 ) }
    dend_10 { pt3dadd( 37.8793, 87.4996, -75.2887, 1.11 ) }
    dend_10 { pt3dadd( 38.4843, 89.8555, -76.0663, 0.28 ) }
    dend_10 { pt3dadd( 38.6589, 90.6225, -76.332, 0.83 ) }
    dend_10 { pt3dadd( 39.0721, 92.9548, -77.1511, 0.28 ) }
    dend_10 { pt3dadd( 39.1647, 93.7679, -77.473, 0.83 ) }
    dend_10 { pt3dadd( 39.2041, 96.582, -78.6138, 0.83 ) }
    dend_10 { pt3dadd( 38.9634, 98.6302, -79.4697, 0.83 ) }
    dend_10 { pt3dadd( 38.502, 100.176, -80.0534, 0.28 ) }
    dend_10 { pt3dadd( 37.965, 101.247, -80.3678, 0.83 ) }
    dend_10 { pt3dadd( 36.3085, 103.028, -80.5887, 0.28 ) }
    dend_10 { pt3dadd( 35.2341, 103.605, -80.3582, 1.11 ) }
    dend_10 { pt3dadd( 33.7486, 103.937, -79.6954, 0.28 ) }
    dend_10 { pt3dadd( 31.3611, 103.938, -78.337, 1.11 ) }
    dend_10 { pt3dadd( 28.1538, 103.41, -75.9289, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 77.14, 1.01212, -34.5069, 0.55 ) }
    dend_61 { pt3dadd( 79.3829, 2.10236, -33.1175, 0.55 ) }
    dend_61 { pt3dadd( 81.3637, 3.06524, -31.8904, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 75/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 77.14, 1.01212, -34.5069, 0.28 ) }
    dend_60 { pt3dadd( 77.516, 1.76582, -35.9707, 0.28 ) }
    dend_60 { pt3dadd( 77.7281, 2.17718, -36.6598, 0.28 ) }
    dend_60 { pt3dadd( 77.9711, 2.63542, -37.314, 0.83 ) }
    dend_60 { pt3dadd( 79.056, 4.82283, -39.9465, 0.55 ) }
    dend_60 { pt3dadd( 81.5407, 9.60987, -45.0914, 0.28 ) }
    dend_60 { pt3dadd( 82.4324, 11.2781, -46.7458, 0.28 ) }
    dend_60 { pt3dadd( 83.1384, 12.6589, -47.9425, 0.83 ) }
    dend_60 { pt3dadd( 84.2017, 14.4788, -49.3271, 0.28 ) }
    dend_60 { pt3dadd( 85.1878, 15.9244, -50.2201, 0.55 ) }
    dend_60 { pt3dadd( 86.2111, 17.1213, -50.7463, 0.55 ) }
    dend_60 { pt3dadd( 87.5659, 18.4501, -51.2094, 0.28 ) }
    dend_60 { pt3dadd( 88.3106, 19.1343, -51.5971, 0.83 ) }
    dend_60 { pt3dadd( 91.1721, 21.8251, -53.5294, 0.28 ) }
    dend_60 { pt3dadd( 91.6718, 22.2826, -53.9119, 0.55 ) }
    dend_60 { pt3dadd( 93.9075, 24.2705, -55.7021, 0.28 ) }
    dend_60 { pt3dadd( 95.5112, 25.8118, -57.1085, 0.83 ) }
    dend_60 { pt3dadd( 97.076, 27.3612, -58.5505, 0.28 ) }
    dend_60 { pt3dadd( 97.6966, 28.0464, -59.2362, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 94/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 75.9791, 64.1805, -24.6378, 1.11 ) }
    dend_20 { pt3dadd( 78.2316, 64.1351, -24.7692, 1.11 ) }
    dend_20 { pt3dadd( 81.6224, 63.9832, -24.8431, 0.55 ) }
    dend_20 { pt3dadd( 85.2784, 63.7135, -24.8536, 0.28 ) }
    dend_20 { pt3dadd( 86.9731, 63.6026, -24.8135, 0.83 ) }
    dend_20 { pt3dadd( 87.5934, 63.5667, -24.7886, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_20 { pt3dadd( 89.4132, 63.415, -24.6685, 0.55 ) }
    dend_20 { pt3dadd( 90.5728, 63.3181, -24.5137, 0.55 ) }
    dend_20 { pt3dadd( 91.1216, 63.2681, -24.4133, 0.55 ) }
    dend_20 { pt3dadd( 93.5016, 63.0784, -24.093, 0.28 ) }
    dend_20 { pt3dadd( 94.5934, 63.0108, -23.9729, 1.11 ) }
    dend_20 { pt3dadd( 97.5019, 62.8964, -23.7076, 0.28 ) }
    dend_20 { pt3dadd( 99.8533, 62.8116, -23.4624, 0.55 ) }
    dend_20 { pt3dadd( 101.532, 62.7366, -23.2613, 0.28 ) }
    dend_20 { pt3dadd( 102.939, 62.6269, -23.2182, 0.55 ) }
    dend_20 { pt3dadd( 105.205, 62.3264, -23.3349, 0.83 ) }
    dend_20 { pt3dadd( 106.067, 62.1898, -23.3717, 1.11 ) }
    dend_20 { pt3dadd( 109.176, 61.6053, -23.5011, 0.28 ) }
    dend_20 { pt3dadd( 110.735, 61.1785, -23.5645, 1.11 ) }
    dend_20 { pt3dadd( 115.388, 59.5244, -23.7374, 0.28 ) }
    dend_20 { pt3dadd( 116.733, 58.8887, -23.7228, 0.55 ) }
    dend_20 { pt3dadd( 120.078, 56.9922, -23.5465, 0.28 ) }
    dend_20 { pt3dadd( 121.12, 56.3154, -23.4886, 0.83 ) }
    dend_20 { pt3dadd( 123.141, 54.9168, -23.4003, 0.28 ) }
    dend_20 { pt3dadd( 124.884, 53.6409, -23.2823, 1.39 ) }
    dend_20 { pt3dadd( 127.814, 51.356, -22.9532, 0.28 ) }
    dend_20 { pt3dadd( 129.167, 50.2416, -22.8862, 0.55 ) }
    dend_20 { pt3dadd( 130.815, 48.8038, -22.9988, 0.28 ) }
    dend_20 { pt3dadd( 132.156, 47.6278, -23.1014, 0.55 ) }
    dend_20 { pt3dadd( 133.026, 46.895, -23.1783, 0.28 ) }
    dend_20 { pt3dadd( 133.636, 46.4185, -23.308, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 75.9791, 64.1805, -24.6378, 0.28 ) }
    dend_19 { pt3dadd( 75.7442, 65.7953, -25.3341, 0.28 ) }
    dend_19 { pt3dadd( 75.5288, 67.0916, -25.8782, 1.39 ) }
    dend_19 { pt3dadd( 74.9837, 69.8517, -26.9767, 0.28 ) }
    dend_19 { pt3dadd( 74.5949, 71.7809, -27.8077, 0.55 ) }
    dend_19 { pt3dadd( 74.4019, 72.8535, -28.1664, 0.28 ) }
    dend_19 { pt3dadd( 74.2826, 73.6382, -28.4103, 0.55 ) }
    dend_19 { pt3dadd( 74.2203, 74.0069, -28.5175, 0.28 ) }
    dend_19 { pt3dadd( 74.1454, 75.0022, -28.6501, 0.55 ) }
    dend_19 { pt3dadd( 74.3895, 78.2449, -28.6018, 0.28 ) }
    dend_19 { pt3dadd( 74.9006, 81.4613, -28.633, 0.83 ) }
    dend_19 { pt3dadd( 75.3655, 83.5114, -28.7512, 0.28 ) }
    dend_19 { pt3dadd( 75.5973, 84.3148, -28.8424, 0.55 ) }
    dend_19 { pt3dadd( 76.8034, 87.7453, -29.3656, 0.28 ) }
    dend_19 { pt3dadd( 77.4289, 89.3091, -29.7071, 0.83 ) }
    dend_19 { pt3dadd( 78.8268, 92.3784, -30.5654, 0.28 ) }
    dend_19 { pt3dadd( 79.2315, 93.2189, -30.9232, 0.55 ) }
    dend_19 { pt3dadd( 79.9719, 94.6841, -31.5863, 0.28 ) }
    dend_19 { pt3dadd( 80.2308, 95.1814, -31.8552, 0.55 ) }
    dend_19 { pt3dadd( 81.1303, 96.905, -33.0425, 0.28 ) }
    dend_19 { pt3dadd( 81.4764, 97.5414, -33.4486, 0.55 ) }
    dend_19 { pt3dadd( 82.5539, 99.2666, -34.4039, 0.28 ) }
    dend_19 { pt3dadd( 83.0737, 100.163, -34.9372, 1.39 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_21, dend_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_21, dend_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_21, dend_0, axon_0, dend_48, dend_45, dend_27, dend_22, dend_2, dend_1, axon_1, dend_50, dend_49, dend_47, dend_46, dend_39, dend_28, dend_26, dend_23, dend_6, dend_3, dend_56, dend_51, dend_43, dend_40, dend_34, dend_29, dend_25, dend_24, dend_12, dend_7, dend_5, dend_4, dend_62, dend_57, dend_53, dend_52, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_16, dend_13, dend_9, dend_8, dend_59, dend_58, dend_55, dend_54, dend_37, dend_36, dend_33, dend_32, dend_18, dend_17, dend_15, dend_14, dend_11, dend_10, dend_61, dend_60, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_26 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_25 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_24 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_62 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_52 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_59 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_58 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_55 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_37 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_33 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_32 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_17 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_10 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_60 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_20 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_50 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_39 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_53 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_31 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_40 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_54 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_41 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_42 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_61 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_36 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_19 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_15 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_14 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_49 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 5
    dend_26 nseg = 7
    dend_43 nseg = 7
    dend_34 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_62 nseg = 5
    dend_52 nseg = 5
    dend_38 nseg = 7
    dend_13 nseg = 7
    dend_8 nseg = 7
    dend_59 nseg = 3
    dend_58 nseg = 5
    dend_55 nseg = 3
    dend_37 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 5
    dend_18 nseg = 3
    dend_17 nseg = 9
    dend_11 nseg = 7
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_20 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_MC_ba3c5063e4_0_0


