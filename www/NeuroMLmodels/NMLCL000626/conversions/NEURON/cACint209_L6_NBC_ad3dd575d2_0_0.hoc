// Cell: cACint209_L6_NBC_ad3dd575d2_0_0
/*
{
  "id" : "cACint209_L6_NBC_ad3dd575d2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.94345, -11.2623, 0.984599, 4.09477", "-6.27697, -10.213, 0.889449, 7.03886", "-5.61048, -9.16359, 0.794299, 9.0513", "-4.94399, -8.11421, 0.699149, 10.7049", "-4.2775, -7.06483, 0.603999, 12.1545", "-3.61101, -6.01545, 0.508849, 13.4148", "-2.94452, -4.96607, 0.413699, 14.3077", "-2.27803, -3.91669, 0.318549, 14.7157", "-1.61155, -2.86731, 0.223399, 14.8034", "-0.945058, -1.81793, 0.128249, 14.7825", "-0.278569, -0.768556, 0.0330986, 14.484", "0.387919, 0.280823, -0.0620515, 14.2451", "1.05441, 1.3302, -0.157201, 13.4939", "1.7209, 2.37958, -0.252352, 12.4612", "2.38738, 3.42896, -0.347502, 11.3514", "3.05387, 4.47834, -0.442652, 10.0759", "3.72036, 5.52772, -0.537802, 8.68542", "4.38685, 6.5771, -0.632952, 7.03735", "5.05334, 7.62648, -0.728102, 5.61823", "5.71983, 8.67585, -0.823252, 4.41136", "6.38632, 9.72523, -0.918402, 2.8094" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.13964, -5.96464, -15.1942, 1.03", "-2.13964, -5.96464, -15.1942, 1.03", "-1.62592, -6.73954, -15.1942, 1.03", "-1.15255, -7.67465, -15.2265, 0.88", "-0.791823, -8.66923, -15.2821, 0.96", "-0.47069, -9.94879, -15.3699, 0.52", "-0.373991, -10.589, -15.4187, 0.44", "-0.415885, -11.6466, -15.5142, 0.37", "-0.749178, -12.5856, -15.6172, 0.96", "-1.12649, -13.1303, -15.6825, 1.18", "-1.40363, -13.414, -15.738, 1.18", "-1.77824, -13.7503, -15.8468, 0.88", "-2.23684, -14.1866, -16.0368, 0.66", "-2.68592, -14.6963, -16.3246, 0.52", "-3.06955, -15.309, -16.7853, 0.37", "-3.35752, -16.0602, -17.5114, 0.37", "-3.52187, -16.746, -18.2991, 1.11", "-3.59592, -17.1766, -18.8494, 1.33", "-3.64631, -17.5221, -19.3146, 1.4", "-3.76884, -18.2497, -20.3597, 0.66", "-3.92968, -18.7271, -21.1118, 0.52", "-4.25364, -19.2052, -21.8586, 0.59", "-4.52965, -19.4754, -22.2502, 0.66", "-4.91761, -19.8187, -22.7128, 0.66", "-5.24366, -20.1131, -23.0649, 0.37", "-5.81368, -20.764, -23.7586, 0.29", "-6.00597, -21.0941, -24.1401, 0.29", "-6.29235, -21.8899, -25.1017, 1.4", "-6.40767, -22.364, -25.6537, 1.84", "-6.46932, -22.7562, -26.104, 1.84", "-6.58118, -23.8881, -27.4079, 0.81", "-6.64658, -24.9525, -28.6484, 0.37", "-6.67769, -25.4803, -29.3221, 0.37", "-6.71832, -26.1156, -30.1782, 1.55", "-6.75797, -26.7192, -31.0753, 2.06", "-6.8013, -27.2193, -31.8662, 2.21", "-6.90495, -28.3979, -33.7823, 0.66", "-7.00698, -29.6253, -35.8176, 0.66", "-7.04423, -30.1852, -36.8069, 0.88", "-7.11087, -31.49, -39.3191, 1.77", "-7.1527, -32.1786, -40.6917, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.29965, -8.28114, 0.925891, 1.25", "-8.29965, -8.28114, 0.925891, 1.25", "-8.71309, -8.96938, 1.08432, 1.25", "-9.46666, -10.3152, 1.39968, 1.11", "-10.0643, -11.3825, 1.64979, 1.55", "-10.5191, -12.1947, 1.84012, 1.92", "-11.0618, -13.1641, 2.06726, 2.14", "-11.5044, -13.9851, 2.26676, 2.14", "-11.8612, -14.7145, 2.45918, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.83964, -11.7149, -0.944109, 1.62", "-5.06984, -12.3225, -0.852641, 1.62", "-5.43331, -13.286, -0.694665, 1.47", "-5.73917, -14.1108, -0.556096, 1.18", "-6.07734, -15.0327, -0.402942, 1.18", "-6.38271, -15.8812, -0.272424, 1.77", "-6.54452, -16.3497, -0.208791, 2.14", "-6.76037, -17.0006, -0.111248, 2.65", "-6.93558, -17.5202, -0.032178, 2.73", "-7.19766, -18.2437, 0.0685818, 2.5", "-7.60428, -19.2669, 0.191312, 1.92", "-8.10667, -20.4443, 0.319172, 1.47", "-8.7191, -21.7533, 0.451599, 1.18", "-9.12957, -22.5482, 0.530427, 1.03", "-9.79484, -23.691, 0.637245, 1.47", "-10.152, -24.2325, 0.68106, 1.99", "-10.425, -24.6197, 0.705735, 2.43", "-10.7279, -25.0621, 0.725436, 2.65", "-11.0594, -25.6378, 0.735795, 2.36", "-11.4891, -26.672, 0.725392, 1.77", "-11.8991, -28.2522, 0.684446, 1.33", "-12.0667, -29.3824, 0.644125, 1.33", "-12.1408, -30.5377, 0.60092, 1.55", "-12.115, -31.905, 0.561661, 1.25", "-11.9709, -33.3512, 0.550947, 1.11", "-11.735, -34.6236, 0.568103, 1.55", "-11.5592, -35.2949, 0.581604, 2.06", "-11.4347, -35.7121, 0.594606, 2.43", "-11.2544, -36.2895, 0.625011, 2.8", "-11.0515, -36.9589, 0.709459, 2.95", "-10.9192, -37.4844, 0.865484, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.93036, 10.4251, -0.514109, 3.54", "5.93036, 10.4251, -0.514109, 3.54", "6.36995, 11.4412, -0.448019, 3.54", "6.86363, 12.5822, -0.373798, 3.54", "7.17993, 13.3133, -0.326245, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.38632, 9.72523, -0.918402, 0.7173", "14.4283, 22.3872, -0.918402, 0.7173", "22.4703, 35.0492, -0.918402, 0.7173" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.1527, -32.1786, -40.6917, 0.88", "-6.4368, -32.6097, -41.3876, 0.88", "-5.75918, -33.0049, -41.9853, 0.52", "-5.24283, -33.2908, -42.405, 0.29", "-4.59672, -33.6408, -42.9472, 0.22", "-3.94032, -34.0006, -43.5023, 1.33", "-3.38563, -34.3008, -43.9974, 1.47", "-2.81199, -34.6131, -44.5195, 0.15", "-2.38697, -34.8469, -44.8892, 0.15", "-1.4437, -35.3644, -45.7381, 0.81", "-1.27823, -35.4537, -45.8919, 0.96", "0.195377, -36.2364, -47.2913, 0.22", "0.378284, -36.3339, -47.4796, 0.74", "0.700247, -36.5149, -47.8417, 0.74", "1.77848, -37.131, -49.1502, 0.22", "2.06622, -37.2999, -49.5147, 0.88", "2.22246, -37.3939, -49.727, 1.11", "3.37534, -38.1053, -51.4367, 0.22", "4.0684, -38.5236, -52.5124, 1.62", "4.50065, -38.7862, -53.2044, 2.06", "5.25997, -39.2861, -54.4642, 0.81", "5.82686, -39.6934, -55.4469, 1.33", "6.69986, -40.3897, -57.0073, 0.22", "7.28202, -40.8998, -58.0404, 1.33", "7.52743, -41.1345, -58.5113, 1.62", "8.42318, -42.0919, -60.3473, 0.59", "9.00953, -42.8069, -61.6956, 0.22", "9.29405, -43.2433, -62.5072, 0.74", "9.40568, -43.4631, -62.8942, 0.96", "9.82403, -44.4908, -64.6697, 0.29", "9.96367, -44.9507, -65.5161, 1.18", "10.0199, -45.2399, -66.0763, 1.4", "10.1679, -46.4146, -68.3574, 0.22", "10.1864, -46.7622, -69.0593, 1.03", "10.1797, -46.9809, -69.5024, 1.18", "9.99415, -48.4873, -72.5485, 0.44", "9.86731, -49.1007, -73.8611, 0.22", "9.81301, -49.3163, -74.3275, 1.18", "9.64625, -49.9145, -75.6537, 1.18", "9.5132, -50.343, -76.6558, 1.62", "9.31375, -51.0369, -78.3127, 1.84", "9.24971, -51.319, -78.995, 1.99", "9.1013, -52.3554, -81.6093, 0.22", "9.05137, -53.0072, -83.31, 1.47", "9.0531, -53.5459, -84.6889, 1.69", "9.07118, -53.8799, -85.5688, 1.4", "9.15096, -54.55, -87.3601, 0.81", "9.31716, -55.4513, -89.8265, 1.03", "9.54158, -56.4671, -92.7513, 0.22", "9.62746, -56.7638, -93.6032, 1.47", "9.91219, -57.529, -95.6924, 1.62", "10.1464, -58.0704, -97.1223, 0.29", "10.4919, -58.684, -98.7118, 1.18", "10.8784, -59.1972, -100.0, 1.47", "11.4724, -59.8263, -101.542, 0.15", "11.8874, -60.2399, -102.528, 0.15", "12.3335, -60.6584, -103.414, 1.18", "13.0925, -61.407, -104.814, 0.22", "13.3894, -61.7209, -105.361, 0.22", "13.9386, -62.3234, -106.436, 0.88", "14.2222, -62.6634, -107.059, 0.88", "14.5715, -63.0842, -107.882, 1.11", "14.9451, -63.5099, -108.753, 1.33", "16.1438, -64.8059, -111.577, 0.22", "16.7238, -65.4142, -112.999, 1.03", "16.8096, -65.4996, -113.213, 1.25", "17.7656, -66.4093, -115.568, 0.22", "18.2348, -66.8349, -116.725, 1.33", "18.5211, -67.0856, -117.41, 1.4", "19.418, -67.9317, -119.613, 0.22", "19.8454, -68.3628, -120.735, 0.74", "20.5121, -69.084, -122.65, 0.22", "21.1328, -69.8166, -124.551, 1.4", "21.3415, -70.0821, -125.222, 1.47", "22.0853, -71.0421, -127.647, 0.15", "22.6512, -71.7514, -129.506, 1.25", "22.8645, -72.0251, -130.254, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-7.1527, -32.1786, -40.6917, 1.92", "-8.18125, -32.8372, -42.0263, 1.92", "-9.09264, -33.4448, -43.2439, 1.77", "-10.2128, -34.2265, -44.7338, 2.21", "-11.0431, -34.8605, -45.904, 0.22", "-11.321, -35.0858, -46.3238, 0.22", "-11.8873, -35.5677, -47.2164, 0.22", "-12.534, -36.171, -48.3438, 1.47", "-12.7192, -36.3586, -48.6999, 1.77", "-13.4849, -37.1795, -50.2869, 0.52", "-14.0593, -37.8062, -51.5563, 1.25", "-14.2694, -38.0428, -52.0425, 1.4", "-14.868, -38.8128, -53.595, 0.29", "-15.3558, -39.5114, -54.9574, 1.62", "-15.5401, -39.7921, -55.5271, 1.84", "-15.9267, -40.4442, -56.8206, 0.52", "-16.308, -41.1668, -58.216, 1.69", "-16.525, -41.6301, -59.0686, 2.06", "-16.66, -41.9751, -59.6554, 2.21", "-17.3574, -43.8649, -62.759, 0.44", "-17.5253, -44.3748, -63.6016, 0.81", "-17.5753, -44.5654, -63.9023, 0.81", "-17.6744, -44.965, -64.4972, 0.59", "-17.7291, -45.2069, -64.8319, 0.88", "-17.8603, -45.9942, -65.8287, 0.37", "-18.115, -47.9007, -67.9912, 1.4", "-18.1805, -48.3798, -68.5297, 1.92", "-18.4079, -49.7233, -70.2043, 0.22", "-18.5015, -50.1946, -70.8323, 0.22", "-18.58, -50.5189, -71.2723, 0.22", "-18.7991, -51.2585, -72.2551, 1.84", "-18.8595, -51.4129, -72.4862, 2.06", "-19.6938, -53.2214, -75.5355, 0.22", "-19.8469, -53.4959, -76.0468, 0.22", "-19.9828, -53.6958, -76.4482, 0.96", "-20.145, -53.9052, -76.8833, 1.18", "-21.3456, -55.322, -79.9012, 0.44", "-21.5561, -55.5636, -80.3902, 1.18", "-21.8283, -55.8618, -80.9561, 1.18", "-22.4636, -56.546, -82.3003, 1.33", "-22.7691, -56.8873, -82.949, 1.47", "-23.6369, -57.9119, -84.7295, 0.29", "-24.0722, -58.4554, -85.5589, 1.4", "-24.3079, -58.7683, -86.0613, 1.62", "-25.2496, -60.1605, -88.4272, 0.22", "-25.4275, -60.4482, -88.916, 0.81", "-25.6362, -60.7994, -89.5086, 0.29", "-25.9173, -61.2939, -90.3101, 1.11", "-26.8204, -62.8891, -92.8997, 0.59", "-27.7471, -64.4663, -95.3366, 0.22", "-28.0278, -64.9189, -96.0064, 0.22", "-28.4149, -65.4891, -96.8615, 1.69", "-28.6471, -65.7924, -97.3453, 2.14", "-29.7139, -67.0704, -99.3557, 0.22", "-30.1839, -67.5859, -100.113, 1.92", "-30.4586, -67.8644, -100.527, 2.21", "-30.8203, -68.2154, -101.079, 2.21", "-32.5661, -69.9023, -103.751, 0.22", "-32.7308, -70.0643, -104.005, 0.44", "-33.1417, -70.503, -104.641, 0.29", "-33.6578, -71.1014, -105.475, 1.03", "-33.8125, -71.2917, -105.727, 0.81", "-34.1804, -71.7894, -106.28, 0.29", "-34.5977, -72.3873, -106.828, 1.11", "-34.76, -72.6138, -107.082, 1.33", "-34.9584, -72.8966, -107.42, 1.33", "-36.2465, -74.7596, -109.669, 0.22", "-36.7179, -75.4348, -110.53, 1.99", "-36.9243, -75.7208, -110.903, 2.43", "-38.5129, -77.8872, -113.776, 0.22", "-38.7318, -78.1725, -114.195, 0.59", "-38.8872, -78.3858, -114.504, 0.59", "-39.467, -79.1981, -115.673, 0.22", "-39.7069, -79.541, -116.174, 1.25", "-40.0231, -80.0311, -116.876, 1.62", "-41.1383, -81.9118, -119.374, 0.22", "-41.5614, -82.6582, -120.372, 0.22", "-41.732, -82.9947, -120.8, 0.96", "-41.8298, -83.2239, -121.073, 1.33", "-42.4345, -84.9177, -123.063, 0.22", "-42.5277, -85.2353, -123.448, 0.74", "-42.5998, -85.5613, -123.839, 0.74", "-42.6802, -85.991, -124.383, 0.22", "-42.819, -86.9029, -125.528, 1.84", "-42.8866, -87.4148, -126.171, 2.14", "-43.1054, -89.4138, -128.624, 0.22", "-43.1406, -89.7591, -129.051, 0.22", "-43.2114, -90.4615, -129.91, 1.55", "-43.2587, -90.8938, -130.43, 1.84", "-43.4286, -92.1714, -131.969, 0.22", "-43.5011, -92.6264, -132.52, 0.52", "-43.6441, -93.2384, -133.384, 0.22", "-43.8798, -93.956, -134.575, 1.03", "-43.9358, -94.0963, -134.827, 1.18", "-44.5224, -95.4045, -137.308, 1.25", "-44.7149, -95.7841, -138.064, 1.62", "-45.5786, -97.3956, -141.282, 0.22", "-45.8575, -97.8721, -142.282, 0.22", "-46.0947, -98.2654, -143.088, 1.47", "-46.4155, -98.7895, -144.142, 1.62", "-46.9266, -99.6187, -145.807, 0.22", "-47.0872, -99.8823, -146.379, 0.96", "-47.9442, -101.367, -149.593, 0.22", "-48.1394, -101.701, -150.371, 1.18", "-48.4446, -102.189, -151.561, 1.4", "-49.0723, -103.134, -153.851, 1.03", "-50.0405, -104.499, -157.158, 0.22", "-50.2893, -104.828, -157.958, 1.47", "-50.698, -105.322, -159.179, 1.55", "-51.1703, -105.85, -160.509, 0.22", "-51.6023, -106.306, -161.596, 0.22", "-51.8309, -106.525, -162.084, 1.11", "-52.2339, -106.853, -162.908, 1.33", "-53.7186, -107.913, -165.964, 0.22", "-53.9275, -108.053, -166.394, 1.18", "-54.1959, -108.218, -166.97, 1.18", "-54.8303, -108.598, -168.367, 0.66", "-56.6229, -109.647, -172.31, 0.22", "-57.0035, -109.86, -173.109, 0.22", "-57.5902, -110.166, -174.271, 1.18", "-58.1063, -110.412, -175.32, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.8612, -14.7145, 2.45918, 0.59", "-13.6512, -15.3418, 2.49899, 0.59", "-14.4193, -15.5317, 2.47493, 0.66", "-15.0256, -15.6148, 2.44927, 0.81", "-15.3913, -15.6288, 2.43581, 0.81", "-16.1161, -15.634, 2.42837, 0.81", "-17.0717, -15.6403, 2.49297, 0.96", "-17.6253, -15.5936, 2.55652, 0.66", "-18.3198, -15.5107, 2.67447, 0.37", "-19.0017, -15.4068, 2.83026, 0.37", "-19.8628, -15.2663, 3.09466, 1.18", "-20.8873, -15.1109, 3.55739, 1.69", "-21.1964, -15.1009, 3.76478, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.8612, -14.7145, 2.45918, 1.25", "-12.2703, -15.8813, 2.14743, 1.25", "-12.7616, -17.08, 1.84598, 0.74", "-13.1248, -17.8608, 1.66559, 0.96", "-13.6173, -18.7966, 1.47227, 1.18", "-14.0214, -19.4989, 1.37575, 1.47", "-14.4425, -20.2105, 1.31418, 1.47", "-14.808, -20.7668, 1.30541, 1.55", "-15.2522, -21.4093, 1.35673, 1.55", "-15.7117, -22.0978, 1.4465, 1.33", "-16.4257, -23.2163, 1.64256, 1.11", "-16.8395, -23.9289, 1.7431, 0.96", "-17.1629, -24.5763, 1.76303, 0.81", "-17.5147, -25.4822, 1.4748, 0.66", "-17.7159, -26.1464, 1.05664, 0.52", "-17.8367, -26.5854, 0.693394, 0.52", "-18.0552, -27.3271, -0.00731231, 1.11", "-18.433, -28.4661, -1.14346, 1.55", "-19.2683, -30.7436, -3.46413, 1.33", "-19.6108, -31.5735, -4.3158, 0.88", "-19.9615, -32.306, -5.02649, 1.18", "-20.3663, -33.0383, -5.628, 1.84", "-20.6754, -33.5056, -5.88842, 2.21", "-21.0478, -33.9941, -6.01028, 2.36", "-21.4101, -34.4271, -6.01576, 2.5", "-21.8839, -34.9734, -6.00726, 2.28", "-22.5263, -35.7335, -5.99756, 1.92", "-23.2862, -36.6582, -6.02809, 1.18", "-23.799, -37.2907, -6.08618, 0.96", "-24.3145, -37.9299, -6.19902, 0.66", "-24.9709, -38.7587, -6.44117, 0.44", "-25.7695, -39.7995, -6.89045, 1.77", "-26.2474, -40.445, -7.24091, 2.28", "-26.5773, -40.916, -7.54487, 2.28", "-26.9751, -41.5306, -7.97227, 2.43", "-27.4392, -42.3113, -8.50839, 1.92", "-28.0269, -43.3934, -9.20867, 0.81", "-28.4551, -44.2342, -9.69197, 0.96", "-28.9098, -45.1496, -10.1207, 1.18", "-29.1958, -45.7109, -10.3259, 0.96", "-29.6522, -46.5204, -10.5122, 0.44", "-30.0224, -47.0803, -10.5738, 0.96", "-30.2377, -47.3812, -10.5847, 1.11", "-30.8439, -48.1487, -10.5679, 0.52", "-31.3714, -48.7336, -10.5047, 0.44", "-32.3103, -49.6235, -10.3797, 1.03", "-32.9195, -50.1106, -10.2866, 1.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.9192, -37.4844, 0.865484, 0.81", "-10.5988, -39.2875, -3.29447, 0.81", "-10.5549, -40.0179, -5.19096, 1.18", "-10.5562, -40.4732, -6.32155, 1.25", "-10.5339, -41.2495, -8.19452, 0.66", "-10.5141, -41.5295, -8.83045, 0.52", "-10.4576, -42.1028, -10.0344, 0.66", "-10.4426, -42.4515, -10.6968, 0.88", "-10.2439, -43.2111, -11.7115, 1.11", "-9.76355, -44.1661, -12.9307, 1.25", "-9.54696, -44.5323, -13.4171, 1.25", "-9.32991, -44.8798, -13.8885, 0.96", "-8.95777, -45.4542, -14.6636, 0.59", "-8.27003, -46.4821, -16.1649, 1.18", "-7.06987, -48.3021, -18.9222, 1.25", "-6.24782, -49.6411, -20.8753, 1.25", "-5.86367, -50.2982, -21.789, 1.69", "-5.63331, -50.7359, -22.349, 1.77", "-4.64466, -53.0828, -24.8866, 0.81", "-4.31105, -54.0891, -25.785, 1.11", "-4.06298, -54.9363, -26.3806, 0.96", "-3.83189, -55.9684, -27.0068, 0.52", "-3.64304, -57.392, -27.7947, 0.52", "-3.53454, -59.8023, -28.9816, 2.21", "-3.61118, -60.9155, -29.4275, 2.5", "-3.67033, -61.3359, -29.6064, 2.5", "-3.93565, -62.6064, -30.1837, 0.66", "-4.22653, -63.6157, -30.6916, 1.25", "-4.41276, -64.125, -30.9548, 1.47", "-4.66598, -64.6577, -31.2296, 1.47", "-5.16676, -65.5989, -31.682, 1.33", "-5.4812, -66.1355, -31.955, 0.74", "-5.97636, -66.9273, -32.3729, 0.29", "-6.21857, -67.3255, -32.5933, 0.22", "-6.52938, -67.8815, -32.8907, 0.22", "-6.88789, -68.6337, -33.2352, 0.96", "-7.087, -69.1423, -33.4161, 1.18", "-7.21416, -69.6322, -33.5717, 0.96", "-7.41919, -71.0765, -34.023, 0.22", "-7.45467, -71.5943, -34.2003, 0.22", "-7.47338, -72.4289, -34.5449, 0.88", "-7.46795, -72.927, -34.7719, 1.11", "-7.45918, -74.2341, -35.3859, 0.22", "-7.46917, -75.5964, -36.1696, 1.77", "-7.46746, -76.1427, -36.5907, 2.28", "-7.4378, -77.0059, -37.4493, 2.28", "-7.38689, -78.3401, -39.0752, 0.15", "-7.34637, -78.8882, -39.8339, 0.74", "-7.17871, -80.2519, -41.8913, 0.44", "-6.87908, -81.9355, -44.465, 1.69", "-6.61373, -83.1103, -46.2948, 2.28", "-6.4542, -83.7356, -47.2699, 2.58", "-6.07001, -85.228, -49.5858, 0.52", "-5.82039, -86.2285, -51.0383, 0.29", "-5.46077, -87.8967, -53.1578, 2.21", "-5.22759, -89.2684, -54.704, 2.58", "-4.95184, -91.6072, -57.116, 0.29", "-4.90609, -92.3008, -57.7748, 0.22", "-4.91668, -92.7663, -58.1876, 0.22", "-4.99334, -93.5058, -58.801, 1.33", "-5.10534, -94.0687, -59.2202, 1.55", "-5.72914, -96.5266, -60.8735, 0.22", "-5.91436, -97.1539, -61.2815, 0.96", "-6.0293, -97.5373, -61.5606, 1.25", "-6.15144, -97.9453, -61.9122, 1.25", "-6.56998, -99.294, -63.2072, 0.22", "-6.85984, -100.146, -64.068, 0.88", "-6.96331, -100.442, -64.3811, 1.11", "-7.16139, -101.062, -65.0404, 1.11", "-7.79182, -103.143, -67.1227, 0.22", "-8.01779, -103.897, -67.8277, 1.77", "-8.16094, -104.381, -68.2519, 2.28", "-8.35754, -105.044, -68.7792, 2.14", "-8.9051, -106.956, -70.2032, 0.22", "-9.16855, -107.917, -70.8377, 1.03", "-9.28974, -108.419, -71.1474, 1.33", "-9.65831, -110.067, -72.2504, 0.22", "-9.78724, -110.655, -72.6708, 0.96", "-9.92284, -111.262, -73.146, 1.25", "-10.0004, -111.611, -73.4409, 1.33", "-10.4698, -113.814, -75.4043, 0.15", "-10.6425, -114.756, -76.2567, 1.18", "-10.7501, -115.412, -76.8445, 1.55", "-11.0061, -117.139, -78.3238, 0.22", "-11.0751, -117.607, -78.6942, 0.96", "-11.1703, -118.249, -79.1747, 0.96", "-11.3622, -119.64, -80.111, 0.22", "-11.412, -120.112, -80.3867, 0.66", "-11.5167, -121.424, -81.1327, 0.22", "-11.5726, -122.233, -81.5655, 1.4", "-11.6144, -122.989, -81.9758, 1.84", "-11.6422, -123.433, -82.2251, 1.62", "-11.8246, -125.511, -83.4154, 0.15", "-11.9534, -126.978, -84.2856, 1.03", "-11.9932, -127.478, -84.6187, 1.55", "-12.0382, -128.057, -85.0166, 1.55", "-12.188, -129.949, -86.335, 0.22", "-12.2197, -130.466, -86.7119, 0.88", "-12.2689, -131.061, -87.1691, 0.88", "-12.5096, -133.264, -88.766, 0.22", "-12.6185, -134.078, -89.3258, 1.18", "-12.7116, -134.632, -89.6834, 1.33", "-13.0487, -136.529, -90.8715, 0.22", "-13.2133, -137.38, -91.3878, 0.22", "-13.4612, -138.427, -92.0213, 0.22", "-13.716, -139.381, -92.5488, 0.22", "-14.0639, -140.671, -93.2736, 1.55", "-14.3178, -141.673, -93.835, 1.92", "-14.4425, -142.243, -94.1357, 1.77", "-14.8124, -144.592, -95.3765, 0.22", "-14.9261, -145.473, -95.8579, 0.96", "-14.9781, -145.987, -96.1379, 1.11", "-15.1029, -147.77, -97.106, 0.22", "-15.168, -148.912, -97.7058, 0.22", "-15.1982, -149.934, -98.255, 1.03", "-15.2021, -150.553, -98.5853, 1.33", "-15.2034, -151.233, -98.9725, 1.33", "-15.2451, -153.513, -100.305, 0.15", "-15.281, -154.477, -100.859, 0.15", "-15.3651, -155.821, -101.623, 1.55", "-15.4153, -156.427, -101.94, 1.84", "-15.4818, -157.059, -102.246, 1.77", "-15.7006, -158.478, -102.882, 0.22", "-15.8887, -159.315, -103.211, 0.22", "-16.1127, -160.117, -103.516, 0.96", "-16.282, -160.613, -103.684, 1.11", "-16.8324, -162.0, -104.149, 0.22", "-17.1094, -162.593, -104.388, 0.22", "-17.4588, -163.208, -104.692, 0.22", "-17.7399, -163.629, -104.943, 0.96", "-17.9335, -163.876, -105.111, 1.25", "-18.3524, -164.336, -105.461, 1.25", "-19.3966, -165.396, -106.408, 0.15", "-19.955, -165.998, -107.001, 0.15", "-20.149, -166.246, -107.26, 0.44", "-20.3332, -166.527, -107.57, 0.44", "-20.6726, -167.096, -108.218, 0.15", "-21.1477, -168.082, -109.334, 1.33", "-21.3191, -168.557, -109.896, 1.4", "-21.5249, -169.794, -111.426, 0.22", "-21.5521, -170.478, -112.284, 0.44", "-21.5323, -170.902, -112.798, 0.22", "-21.4137, -171.793, -113.883, 1.33", "-21.2276, -172.705, -114.984, 1.62", "-20.7383, -174.683, -117.326, 0.22", "-20.541, -175.37, -118.11, 0.22", "-20.3312, -176.036, -118.845, 0.96", "-19.8958, -177.268, -120.125, 1.18", "-19.2365, -179.036, -121.855, 0.22", "-19.0611, -179.505, -122.252, 0.22", "-18.9505, -179.81, -122.475, 0.66", "-18.3953, -181.376, -123.502, 0.22", "-17.921, -182.723, -124.298, 2.06", "-17.8007, -183.086, -124.495, 2.28", "-17.0902, -185.261, -125.608, 0.22", "-16.8861, -185.865, -125.922, 0.22", "-16.4473, -187.147, -126.63, 1.33", "-16.2917, -187.6, -126.895, 1.62", "-15.4533, -190.24, -128.519, 0.37", "-15.2008, -191.129, -129.076, 0.22", "-14.9847, -192.009, -129.648, 0.22", "-14.6561, -193.522, -130.645, 1.03", "-14.4909, -194.576, -131.37, 1.4", "-14.3464, -196.281, -132.599, 0.22", "-14.3476, -197.492, -133.473, 1.25", "-14.3962, -198.289, -134.062, 1.55", "-14.4392, -198.575, -134.269, 1.55", "-14.9716, -200.781, -135.778, 0.29", "-15.1857, -201.442, -136.23, 0.52", "-15.2997, -201.712, -136.428, 0.52", "-15.647, -202.411, -136.918, 0.22", "-16.1749, -203.349, -137.5, 0.22", "-16.5973, -204.024, -137.886, 1.25", "-16.9503, -204.518, -138.136, 1.4", "-17.4095, -205.129, -138.453, 1.11", "-18.1143, -206.013, -138.989, 0.15", "-18.6431, -206.708, -139.505, 0.15", "-19.1629, -207.474, -140.147, 0.88", "-19.4159, -207.842, -140.487, 1.11", "-19.6293, -208.13, -140.764, 1.11", "-20.4514, -209.169, -141.767, 0.22", "-21.2854, -210.206, -142.784, 0.22", "-21.5762, -210.628, -143.267, 0.22", "-22.1258, -211.537, -144.332, 0.22", "-22.5353, -212.307, -145.226, 1.25", "-22.7787, -212.836, -145.802, 1.55", "-23.0685, -213.57, -146.573, 1.55", "-24.0891, -216.26, -149.383, 0.22", "-24.2082, -216.628, -149.795, 0.66", "-24.2903, -216.941, -150.214, 0.66", "-24.4401, -217.526, -151.094, 0.22", "-24.6067, -218.043, -151.935, 0.22", "-24.7631, -218.376, -152.48, 0.66", "-25.0681, -218.845, -153.16, 0.74", "-25.9286, -220.115, -154.887, 0.22", "-26.2472, -220.577, -155.463, 0.44", "-26.4614, -220.889, -155.809, 0.44", "-26.8246, -221.614, -156.545, 0.22", "-27.0701, -222.282, -157.247, 1.33", "-27.1899, -222.701, -157.711, 1.69", "-27.2369, -222.871, -157.929, 1.92", "-27.3533, -223.405, -158.738, 1.69", "-27.6108, -225.106, -161.509, 0.59", "-27.6692, -226.013, -163.086, 0.96", "-27.6759, -226.761, -164.386, 0.44", "-27.6618, -227.43, -165.505, 0.29", "-27.6249, -228.151, -166.671, 0.29", "-27.588, -228.571, -167.308, 0.29", "-27.5227, -229.766, -168.953, 0.88", "-27.5088, -230.317, -169.73, 1.55", "-27.5167, -230.496, -169.999, 2.06", "-27.6791, -232.025, -172.444, 1.69", "-27.6978, -232.105, -172.621, 1.84", "-27.9862, -232.955, -174.947, 0.37", "-28.2371, -233.554, -176.759, 0.22", "-28.4108, -234.01, -178.231, 1.84", "-28.5511, -234.396, -179.459, 2.06", "-28.9949, -235.853, -184.241, 0.22", "-29.0667, -236.114, -185.113, 0.22", "-29.1374, -236.48, -186.303, 1.55", "-29.235, -237.137, -188.262, 1.69", "-29.2325, -237.366, -188.909, 1.69", "-29.0781, -239.229, -193.731, 0.52", "-29.0411, -239.544, -194.463, 1.92", "-28.9906, -239.958, -195.431, 1.92", "-28.7956, -242.054, -200.372, 1.92", "-28.6997, -244.516, -206.022, 0.66", "-28.6842, -244.842, -206.75, 0.66", "-28.6522, -245.367, -207.823, 0.29", "-28.6146, -245.786, -208.647, 0.29", "-28.5829, -246.163, -209.355, 1.11", "-28.558, -246.528, -209.939, 1.62", "-28.5602, -248.861, -213.819, 0.22", "-28.5641, -249.054, -214.176, 0.22", "-28.5844, -249.491, -215.008, 1.47", "-28.6137, -250.092, -216.197, 1.77", "-28.6267, -250.434, -216.942, 1.77", "-28.8013, -252.609, -221.873, 0.22", "-28.8619, -253.099, -223.022, 1.33", "-28.8678, -253.537, -224.096, 1.62", "-28.825, -254.202, -225.717, 1.62", "-28.5891, -255.962, -230.093, 0.22", "-28.5192, -256.248, -230.837, 1.18", "-28.3238, -256.951, -232.663, 1.33", "-27.9024, -258.472, -236.501, 0.15", "-27.812, -258.849, -237.405, 1.25", "-27.6257, -259.997, -239.996, 1.62", "-27.4563, -262.226, -244.952, 0.22", "-27.454, -263.007, -246.721, 0.22", "-27.4986, -263.476, -247.752, 0.44", "-27.5736, -264.024, -248.913, 0.88", "-27.5933, -264.298, -249.474, 1.47", "-27.5483, -265.126, -251.007, 1.62", "-27.2233, -267.236, -254.721, 0.22", "-27.1702, -267.443, -255.09, 1.03", "-26.8054, -268.707, -257.353, 1.11", "-26.607, -269.384, -258.533, 0.96", "-25.8904, -271.772, -262.529, 0.22", "-25.8217, -272.048, -262.988, 0.81", "-25.7314, -272.566, -263.833, 0.81", "-25.645, -273.468, -265.283, 0.22", "-25.6294, -274.398, -266.734, 1.47", "-25.6816, -275.441, -268.293, 1.62", "-26.0162, -278.16, -272.058, 0.15", "-26.1049, -278.806, -272.946, 0.15", "-26.1944, -279.475, -273.808, 0.96", "-26.2411, -279.842, -274.263, 0.96", "-26.3211, -280.423, -274.919, 0.22", "-26.4051, -280.939, -275.403, 1.11", "-26.5432, -282.003, -276.098, 1.11", "-26.7634, -284.116, -277.782, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-10.9192, -37.4844, 0.865484, 2.8", "-10.785, -38.1111, 1.14833, 2.8", "-10.3558, -40.1161, 2.05321, 1.84", "-9.92744, -42.1178, 2.95659, 1.03", "-9.72255, -43.0748, 3.38848, 1.03", "-9.45882, -44.3069, 3.94454, 1.18", "-9.22504, -45.3991, 4.43744, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.17993, 13.3133, -0.326245, 0.81", "8.40511, 13.5663, 0.0560011, 0.81", "9.1216, 13.7303, 0.365424, 0.37", "10.2562, 14.017, 0.897941, 0.88", "11.2295, 14.2978, 1.36655, 1.25", "12.5381, 14.7277, 1.99855, 1.25", "13.1485, 14.9576, 2.28543, 1.11", "14.8666, 15.7642, 3.14846, 1.11", "15.3663, 16.0396, 3.3793, 1.11", "15.9599, 16.4069, 3.59062, 0.96", "17.2037, 17.2294, 3.85396, 0.66", "18.1415, 17.8438, 3.92595, 0.74", "19.1082, 18.428, 3.89436, 0.88", "20.151, 18.9816, 3.72893, 0.96", "21.1482, 19.4173, 3.45831, 0.74", "22.2212, 19.7738, 3.04569, 1.62", "23.1762, 19.9922, 2.56763, 1.84", "23.9455, 20.0909, 2.11742, 1.69", "24.8121, 20.1566, 1.54124, 1.62", "26.17, 20.236, 0.629226, 0.88", "26.9074, 20.3305, 0.161111, 0.74", "27.835, 20.5158, -0.365514, 0.74", "28.8144, 20.8005, -0.843696, 0.96", "29.6786, 21.1212, -1.16203, 0.81", "30.8462, 21.6349, -1.43759, 0.74", "32.4597, 22.3595, -1.49864, 1.25", "33.1805, 22.6769, -1.41413, 1.47", "33.9455, 22.9738, -1.15276, 1.77", "34.5499, 23.1935, -0.845821, 1.77", "35.3741, 23.4438, -0.298787, 1.11", "37.1146, 23.8188, 0.973653, 1.03", "38.1819, 23.9709, 1.78464, 1.18", "40.3513, 24.199, 3.42758, 1.4", "40.9736, 24.238, 3.88777, 1.55", "43.0543, 24.2386, 5.31326, 1.4", "44.3603, 24.1614, 6.08486, 1.84", "44.9966, 24.0894, 6.36399, 2.43", "45.687, 23.9859, 6.55666, 2.43", "46.5219, 23.8392, 6.65185, 2.21", "48.6807, 23.4395, 6.71795, 0.96", "49.7858, 23.2807, 6.67102, 0.66", "50.5887, 23.2224, 6.63354, 0.66", "51.4748, 23.1957, 6.59959, 0.66", "52.3521, 23.2223, 6.55599, 0.66", "53.5497, 23.3553, 6.49759, 0.66", "54.8199, 23.6401, 6.42224, 1.03", "55.9083, 23.9966, 6.38167, 0.59", "57.0741, 24.4637, 6.33564, 0.59", "57.8721, 24.842, 6.30323, 0.96", "58.89, 25.4019, 6.25996, 0.66", "59.8251, 26.0153, 6.19935, 0.66", "61.0556, 26.9329, 6.09476, 1.33", "61.2819, 27.1226, 6.07445, 1.55", "61.6884, 27.508, 6.027, 1.69", "62.1768, 28.0002, 5.96826, 1.4", "62.778, 28.6445, 5.871, 1.11", "63.1883, 29.0849, 5.81488, 1.11", "75.3076, 33.1839, 9.71265, 1.11", "87.6073, 36.6412, 13.6257, 1.11", "99.8153, 41.1704, 16.7001, 1.11", "111.469, 45.9792, 21.2194, 1.11", "123.812, 49.1296, 25.2359, 1.11", "136.199, 52.2701, 29.1226, 1.11", "148.217, 57.4682, 31.9304, 1.11", "160.4, 62.4514, 34.3605, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.17993, 13.3133, -0.326245, 2.95", "7.28815, 14.8628, -0.0767963, 2.95", "7.38963, 16.3157, 0.157115, 2.95", "7.47052, 17.4739, 0.343567, 2.95", "7.51941, 18.1739, 0.456256, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.4703, 35.0492, -0.918402, 0.37", "30.5123, 47.7112, -0.918402, 0.37", "38.5543, 60.3732, -0.918402, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-21.1964, -15.1009, 3.76478, 0.59", "-21.2592, -16.0799, 4.48024, 0.59", "-21.3501, -16.7181, 5.05787, 0.52", "-21.4409, -17.1742, 5.50691, 0.88", "-21.5571, -17.6655, 6.01004, 1.03", "-21.6447, -18.0357, 6.38926, 1.03", "-21.7704, -18.5673, 6.93365, 0.52", "-22.0032, -19.2697, 7.74669, 1.11", "-22.1069, -19.5047, 8.06576, 1.4", "-22.2394, -19.751, 8.4457, 1.4", "-23.2961, -26.0945, 15.8155, 1.4", "-25.0719, -31.4978, 23.7386, 1.4", "-27.09, -36.3134, 31.9563, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.1964, -15.1009, 3.76478, 0.29", "-22.4178, -14.8626, 3.41498, 0.29", "-23.4616, -14.659, 3.11602, 0.59", "-23.8305, -14.5871, 3.01037, 0.81", "-24.3225, -14.4911, 2.86946, 0.81", "-25.0903, -14.3413, 2.64956, 0.29", "-25.5531, -14.2511, 2.51701, 0.59", "-34.4692, -10.4273, 1.07593, 0.59", "-42.6452, -4.9531, 1.20942, 0.59", "-50.57, 0.812225, 0.184187, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.22504, -45.3991, 4.43744, 0.59", "-8.9775, -46.3851, 5.83426, 0.59", "-8.75989, -47.3195, 7.09964, 0.44", "-8.65707, -47.6642, 7.59668, 0.44", "-8.42229, -48.3358, 8.63951, 0.81", "-8.22877, -48.7988, 9.38848, 1.25", "-8.0776, -49.109, 9.92931, 1.47", "-7.91989, -49.3873, 10.4797, 1.47", "-7.26642, -50.4781, 12.6676, 0.74", "-6.55061, -51.4854, 14.8953, 0.37", "-6.33667, -51.7256, 15.4874, 0.37", "-6.02306, -52.0198, 16.3091, 0.81", "-5.71939, -52.2726, 17.0888, 0.96", "-2.03577, -56.0166, 26.899, 0.96", "1.43119, -61.9008, 35.7392, 0.96", "6.57262, -65.4851, 44.931, 0.96", "11.4364, -69.2293, 54.2126, 0.96", "17.6873, -73.3585, 62.449, 0.96", "25.0569, -75.1498, 70.5615, 0.96", "31.6253, -75.9179, 79.4772, 0.96", "38.7233, -78.1889, 87.7161, 0.96", "47.0479, -81.2539, 94.4181, 0.96", "54.3633, -83.3689, 102.505, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.22504, -45.3991, 4.43744, 1.11", "-9.59308, -46.5623, 4.27899, 1.11", "-10.0722, -47.9161, 4.28314, 1.11", "-10.6861, -49.5828, 4.46349, 1.11", "-11.052, -50.563, 4.66216, 0.96", "-11.3226, -51.2685, 4.85731, 0.96", "-12.0335, -53.0763, 5.50216, 1.11", "-12.398, -53.9861, 5.95879, 1.25", "-12.7218, -54.791, 6.47242, 1.25", "-13.0935, -55.7264, 7.16549, 1.03", "-13.422, -56.6156, 7.8226, 1.03", "-13.8275, -57.798, 8.58889, 1.18", "-14.0122, -58.4179, 8.88789, 1.77", "-14.198, -59.0283, 9.09914, 2.28", "-14.4041, -59.6858, 9.24352, 2.14", "-14.739, -60.7506, 9.35483, 1.62", "-15.0811, -61.8667, 9.39163, 1.03", "-15.4671, -63.1243, 9.37417, 0.74", "-15.8812, -64.4033, 9.35819, 0.96", "-16.3814, -65.9001, 9.35863, 1.25", "-16.9324, -67.4253, 9.41293, 1.62", "-17.2384, -68.2415, 9.47441, 1.55", "-17.4946, -68.8962, 9.54633, 1.69", "-18.1394, -70.4033, 9.74735, 1.18", "-18.6362, -71.4595, 9.92276, 1.03", "-19.1405, -72.4217, 10.103, 1.33", "-19.5441, -73.1407, 10.243, 1.62", "-19.8756, -73.7217, 10.3449, 1.62", "-20.3157, -74.5338, 10.4808, 1.77", "-20.6034, -75.1417, 10.5744, 1.77", "-21.0062, -76.1047, 10.7473, 1.55", "-21.351, -76.9962, 10.9344, 1.25", "-21.7075, -78.1232, 11.1753, 0.81", "-22.0513, -79.6217, 11.4803, 0.81", "-22.2688, -80.7774, 11.734, 1.03", "-22.5097, -82.1661, 12.0798, 1.03", "-22.6333, -82.9822, 12.3193, 1.18", "-22.8572, -84.6421, 12.8681, 0.29", "-22.967, -85.55, 13.1837, 0.37", "-23.161, -87.0578, 13.682, 0.37", "-23.3097, -88.1117, 14.0385, 0.29", "-23.4133, -88.8529, 14.2848, 0.29", "-23.542, -89.5703, 14.5508, 0.29", "-23.754, -90.209, 14.8552, 0.29", "-24.0486, -91.0034, 15.2272, 0.22", "-26.86, -101.539, 19.5858, 0.22", "-31.0625, -111.602, 23.8861, 0.22", "-35.2712, -121.418, 28.6996, 0.22", "-40.7118, -129.533, 35.0574, 0.22", "-45.049, -138.049, 41.7607, 0.22", "-50.1739, -146.427, 48.0562, 0.22", "-54.4046, -156.415, 52.4958, 0.22", "-60.11, -165.487, 57.1486, 0.22", "-66.762, -174.095, 61.3561, 0.22", "-71.8872, -182.634, 67.441, 0.22", "-76.4253, -190.371, 74.8722, 0.22", "-82.2934, -196.307, 82.9176, 0.22", "-85.869, -203.085, 91.6543, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.51941, 18.1739, 0.456256, 0.66", "6.86015, 19.0644, 0.669844, 0.66", "6.482, 19.6905, 0.812241, 0.29", "6.32752, 19.9841, 0.878956, 0.44", "5.8958, 20.9225, 1.08916, 0.44", "5.44464, 21.9918, 1.32826, 0.81", "5.2668, 22.4379, 1.4285, 0.96", "5.05947, 23.0407, 1.56459, 0.81", "4.91576, 23.4292, 1.66076, 1.03", "4.65208, 24.0057, 1.81387, 1.18", "4.27441, 24.6036, 1.99517, 0.66", "3.61307, 25.2717, 2.24964, 0.22", "3.11435, 25.6038, 2.41281, 0.22", "2.56822, 25.832, 2.56917, 0.22", "1.86086, 26.041, 2.75724, 0.66", "1.39487, 26.1436, 2.8771, 0.81", "1.0196, 26.2176, 2.96949, 0.66", "0.477978, 26.3342, 3.09685, 0.52", "-0.364931, 26.5831, 3.2964, 0.44", "-1.12329, 26.8601, 3.45712, 0.52", "-1.68644, 27.1, 3.54744, 0.88", "-2.22436, 27.3646, 3.59253, 1.11", "-2.65421, 27.6005, 3.60353, 1.11", "-3.1115, 27.877, 3.57164, 0.96", "-3.80833, 28.3293, 3.45921, 0.37", "-4.58319, 28.8675, 3.27273, 0.29", "-5.21791, 29.3423, 3.09533, 0.88", "-5.52752, 29.5964, 3.01038, 1.03", "-6.10122, 30.1146, 2.8388, 1.03", "-6.26302, 30.2782, 2.78753, 1.03", "-6.94501, 31.0708, 2.5885, 0.29", "-7.24897, 31.48, 2.48513, 0.29", "-7.73467, 32.1829, 2.29518, 0.96", "-8.07228, 32.6695, 2.15109, 1.11", "-8.26676, 32.9464, 2.07271, 1.11", "-8.5563, 33.3415, 1.95507, 0.66", "-9.22466, 34.2303, 1.69264, 0.29", "-9.63275, 34.7403, 1.53324, 0.29", "-10.1007, 35.2944, 1.38397, 0.66", "-10.4002, 35.625, 1.30568, 0.88", "-10.6749, 35.9116, 1.24342, 1.03", "-11.105, 36.3466, 1.15985, 0.74", "-11.6544, 36.8848, 1.09371, 0.44", "-12.3177, 37.5323, 1.02419, 0.22", "-12.9473, 38.1466, 0.957957, 0.44", "-13.2722, 38.4605, 0.930699, 0.59", "-13.5205, 38.7136, 0.948857, 0.59", "-14.0052, 39.2539, 1.09998, 0.29", "-14.4826, 39.8596, 1.39542, 0.59", "-14.7468, 40.2358, 1.64005, 0.59", "-14.9299, 40.4943, 1.85864, 0.59", "-15.7541, 41.5611, 2.9242, 1.69", "-16.1494, 42.0479, 3.48152, 2.14", "-16.391, 42.3386, 3.84009, 2.36", "-16.5785, 42.5538, 4.12287, 2.36", "-17.4282, 43.4554, 5.348, 0.29", "-17.9278, 43.9338, 6.01308, 0.22", "-18.6249, 44.5312, 6.85209, 0.74", "-18.924, 44.7771, 7.19857, 0.96", "-19.098, 44.9236, 7.40571, 0.96", "-19.7005, 45.4694, 8.12311, 0.22", "-20.2626, 46.0529, 8.8025, 0.81", "-20.3615, 46.1633, 8.91741, 1.18", "-20.7241, 46.5584, 9.31406, 1.18", "-20.8672, 46.7156, 9.46942, 1.18", "-21.3089, 47.2194, 9.92571, 0.15", "-21.5024, 47.4682, 10.1121, 0.37", "-21.6782, 47.7442, 10.2673, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.51941, 18.1739, 0.456256, 2.8", "9.07423, 20.3441, 0.84057, 2.8", "10.0471, 21.7021, 1.08103, 2.8", "10.8777, 22.8614, 1.28632, 2.95", "11.7783, 24.1185, 1.50893, 3.68", "12.3983, 24.9839, 1.66218, 3.9", "12.9865, 25.8049, 1.80756, 4.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-27.09, -36.3134, 31.9563, 0.66", "-28.9427, -43.6511, 41.1552, 0.66", "-29.1325, -50.3708, 50.9713, 0.66", "-32.004, -56.0054, 61.0065, 0.66", "-36.2746, -60.8478, 70.9254, 0.66", "-41.1886, -65.3121, 80.7077, 0.66", "-44.9208, -70.8499, 90.5036, 0.66", "-50.1206, -74.4691, 100.46, 0.66", "-54.3855, -78.8799, 110.568, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.09, -36.3134, 31.9563, 0.59", "-29.5501, -43.2123, 42.3077, 0.66", "-32.1229, -50.6421, 52.2727, 0.66", "-35.0473, -59.303, 61.1182, 0.66", "-38.901, -68.2807, 69.2611, 0.66", "-39.8547, -78.6198, 76.6909, 0.66", "-40.6221, -86.8842, 86.3347, 0.66", "-41.8681, -95.2759, 95.8188, 0.66", "-43.9598, -104.657, 104.185, 0.66", "-45.3565, -113.312, 113.415, 0.66", "-46.3899, -120.856, 123.585, 0.66", "-46.6082, -129.796, 132.662, 0.66", "-46.7674, -136.707, 143.304, 0.66", "-44.9217, -145.187, 152.62, 0.66", "-44.2227, -155.637, 159.935, 0.66", "-42.6631, -164.832, 168.628, 0.66", "-42.1555, -174.857, 176.516, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-50.57, 0.812225, 0.184187, 0.59", "-59.147, 5.37768, -1.22623, 0.59", "-67.3299, 10.2787, -3.6065, 0.59", "-76.3406, 14.1027, -4.05076, 0.59", "-85.3106, 17.8243, -5.36328, 0.59", "-93.2882, 23.5819, -5.69577, 0.59", "-101.354, 29.1134, -6.79694, 0.59", "-108.031, 36.3998, -6.50644, 0.59", "-113.883, 44.4016, -6.77091, 0.59", "-118.018, 53.4582, -6.97509, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-50.57, 0.812225, 0.184187, 0.59", "-59.2515, 5.76547, 0.3783, 0.59", "-67.9334, 10.5914, -0.777925, 0.59", "-76.911, 14.3738, -2.95089, 0.59", "-85.6906, 17.8142, -6.21459, 0.59", "-93.5123, 22.5073, -10.3382, 0.59", "-101.607, 26.3522, -14.7571, 0.59", "-108.9, 30.6437, -20.0972, 0.59", "-116.658, 32.8942, -25.9319, 0.59", "-124.549, 34.6819, -31.738, 0.59", "-133.017, 35.8792, -36.8227, 0.59", "-141.411, 35.2548, -42.1032, 0.59", "-149.319, 35.0757, -48.1225, 0.59", "-157.55, 35.6048, -53.6759, 0.59", "-166.469, 35.326, -58.0517, 0.59", "-175.371, 34.1103, -62.2955, 0.59", "-184.608, 34.5957, -65.936, 0.59", "-194.067, 34.4407, -68.9799, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.9865, 25.8049, 1.80756, 2.36", "14.3378, 26.097, 3.11845, 2.36", "15.2561, 26.2091, 4.21124, 1.99", "15.7297, 26.2478, 4.84772, 1.84", "17.1229, 26.3325, 6.95319, 1.55", "18.5022, 26.3801, 9.30501, 2.06", "19.8232, 26.4216, 11.8696, 2.43", "20.57, 26.3413, 13.8233, 2.58", "20.7604, 26.2818, 14.4694, 2.36", "20.9692, 26.165, 15.3782, 2.21", "21.1923, 25.9584, 16.8099, 2.06", "21.3271, 25.7991, 17.9349, 1.25", "21.7329, 25.4717, 20.8938, 1.55", "22.0857, 25.3644, 22.8147, 1.18", "22.3761, 25.3449, 23.8947, 1.47", "22.7372, 25.3785, 24.8995, 2.14", "23.1618, 25.4851, 25.7956, 1.84", "23.7517, 25.7179, 26.6955, 1.47", "24.5197, 26.2283, 27.4655, 0.88", "25.4115, 26.9481, 28.0667, 0.52", "25.8691, 27.3486, 28.2822, 0.22", "26.3989, 27.8043, 28.4534, 0.22", "26.8368, 28.1846, 28.5436, 0.59", "27.1007, 28.4035, 28.5718, 0.66", "27.5735, 28.7997, 28.6099, 0.22", "28.007, 29.3323, 28.647, 0.44", "32.0407, 29.0976, 38.0238, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.9865, 25.8049, 1.80756, 0.96", "11.8637, 28.5339, 0.430033, 0.96", "11.5572, 29.2957, 0.0169752, 1.33", "11.4046, 29.6922, -0.199567, 1.55", "11.2709, 30.0396, -0.389331, 1.77", "11.0662, 30.5713, -0.679787, 1.92", "10.7642, 31.3559, -1.10836, 0.96", "10.4252, 32.5533, -1.64151, 1.11", "10.3553, 32.7824, -1.75643, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "32.0407, 29.0976, 38.0238, 0.44", "41.6254, 30.1667, 45.0812, 0.44", "50.4563, 33.914, 52.2746, 0.44", "58.3655, 40.3568, 58.6376, 0.44", "66.5691, 48.2201, 62.4704, 0.44", "75.0762, 55.0934, 67.4013, 0.44", "84.7463, 59.716, 72.723, 0.44", "94.0303, 65.7217, 77.3196, 0.44", "103.361, 71.7872, 81.732, 0.44", "111.661, 77.9968, 87.7985, 0.44", "120.133, 84.3009, 93.5058, 0.44", "126.443, 91.2478, 101.102, 0.44", "133.795, 99.1126, 106.467, 0.44", "141.257, 107.823, 110.01, 0.44", "148.433, 116.125, 114.936, 0.44", "155.244, 123.776, 121.286, 0.44", "162.002, 131.256, 127.899, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "32.0407, 29.0976, 38.0238, 0.44", "38.2286, 29.4919, 46.3962, 0.44", "43.5024, 29.781, 55.3818, 0.44", "49.4199, 29.834, 63.9524, 0.44", "54.5556, 28.2894, 72.861, 0.44", "58.272, 25.7449, 82.2271, 0.44", "63.6896, 24.0564, 90.9376, 0.44", "70.0423, 22.9432, 99.0934, 0.44", "76.6419, 22.7387, 107.138, 0.44", "82.3406, 20.2955, 115.474, 0.44", "86.8428, 16.841, 124.172, 0.44", "92.6152, 14.2793, 132.42, 0.44", "99.055, 12.1331, 140.285, 0.44", "105.741, 10.3605, 148.038, 0.44", "111.851, 9.8302, 156.445, 0.44", "117.337, 9.74483, 165.298, 0.44", "121.241, 11.434, 174.853, 0.44", "124.019, 12.8164, 184.841, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.3553, 32.7824, -1.75643, 0.66", "10.9017, 32.5262, -3.76488, 0.66", "11.9178, 32.136, -6.53599, 0.88", "12.8371, 31.9229, -8.66774, 1.11", "13.62, 31.8404, -10.2873, 1.25", "14.0127, 31.841, -11.0447, 1.47", "14.6659, 31.9131, -12.2429, 1.18", "15.2575, 32.0765, -13.0889, 0.66", "16.425, 32.8805, -14.3203, 0.52", "16.9146, 33.3993, -14.7595, 0.66", "17.3125, 33.8814, -15.1225, 0.66", "17.793, 34.5086, -15.6236, 0.37", "18.5519, 35.3957, -16.422, 0.37", "19.2099, 35.9128, -17.091, 1.18", "19.966, 36.1909, -17.7358, 1.77", "21.053, 36.3757, -18.6035, 1.92", "21.7133, 36.4117, -19.0884, 1.69", "22.8656, 36.4048, -19.8571, 0.66", "24.166, 36.4149, -20.6897, 0.52", "25.1139, 36.487, -21.3324, 0.37", "25.8927, 36.6258, -21.8865, 0.37", "26.8863, 36.924, -22.648, 0.29", "27.5218, 37.2025, -23.2061, 0.29", "28.7806, 37.9859, -24.4481, 0.59", "29.456, 38.5826, -25.2777, 1.55", "29.7599, 38.8981, -25.7251, 1.77", "30.3233, 39.4698, -26.6126, 1.92", "30.6361, 39.7501, -27.1153, 2.06", "30.8645, 39.9054, -27.4826, 2.06", "32.6275, 40.7996, -30.4403, 0.29", "33.0277, 40.9701, -31.1293, 0.29", "33.672, 41.2117, -32.247, 0.29", "34.1176, 41.3578, -32.9976, 0.29", "35.4128, 41.7645, -35.1998, 1.18", "36.4451, 42.1262, -36.9939, 1.47", "36.795, 42.3216, -37.6845, 1.69", "37.0408, 42.5101, -38.224, 1.92", "37.1992, 42.6401, -38.5999, 2.14", "37.4409, 42.8119, -39.1564, 2.14", "37.9672, 43.0822, -40.292, 2.14", "39.5393, 43.6095, -43.4576, 1.03", "40.4015, 43.8314, -45.2174, 0.29", "41.2564, 44.0029, -47.0021, 0.52", "41.7131, 44.0668, -47.9194, 0.81", "42.1499, 44.1064, -48.7861, 0.81", "42.6314, 44.1272, -49.7015, 0.52", "43.2718, 44.1667, -50.8571, 0.74", "43.8872, 44.3052, -51.9895, 0.81", "44.498, 44.5623, -53.1274, 1.69", "45.4232, 45.0539, -54.7333, 2.06", "45.9114, 45.3208, -55.4873, 2.43", "47.166, 45.9501, -57.2036, 1.11", "48.0591, 46.3277, -58.2385, 0.96", "48.9597, 46.6826, -59.1282, 1.03", "50.2909, 47.2184, -60.3192, 0.29", "51.1336, 47.5575, -60.9737, 0.37", "51.8814, 47.879, -61.5069, 0.37", "52.5964, 48.2318, -61.9857, 0.22", "53.1461, 48.541, -62.3872, 0.22", "54.001, 49.0785, -63.0917, 0.22", "54.4902, 49.4607, -63.5893, 0.22", "54.8981, 49.8306, -64.0664, 0.22", "55.9069, 50.7805, -65.2803, 1.62", "56.6953, 51.4835, -66.1928, 2.5", "57.0711, 51.7878, -66.5968, 2.73", "57.8374, 52.3502, -67.3583, 2.14", "59.9383, 53.8268, -69.4063, 0.22", "60.4493, 54.1745, -69.908, 0.22", "61.0549, 54.5897, -70.5174, 0.44", "61.327, 54.7839, -70.7948, 0.44", "62.147, 55.4208, -71.6489, 0.29", "62.7391, 55.8952, -72.2841, 0.74", "63.2491, 56.2984, -72.8591, 0.74", "64.3517, 57.1436, -74.1332, 0.22", "65.0424, 57.664, -74.9378, 0.22", "66.2964, 58.5865, -76.4374, 1.84", "66.8919, 59.0012, -77.1348, 2.14", "68.3501, 59.9618, -78.8927, 0.29", "68.8287, 60.2363, -79.5134, 0.44", "69.2434, 60.4455, -80.0976, 0.44", "70.1583, 60.868, -81.5363, 0.29", "71.0026, 61.2204, -83.0123, 1.84", "71.7897, 61.598, -84.6186, 2.14", "72.9911, 62.2651, -87.4998, 0.29", "73.6977, 62.7051, -89.2482, 0.81", "74.2633, 63.0585, -90.6038, 0.81", "74.7107, 63.3379, -91.6235, 0.52", "75.9, 64.1269, -94.2555, 0.52", "76.3809, 64.4648, -95.2087, 0.81", "77.7287, 65.4631, -97.5455, 2.14", "78.1837, 65.781, -98.2323, 2.65", "78.4821, 65.9788, -98.6235, 2.65", "80.6871, 67.3392, -101.109, 0.29", "81.3584, 67.7463, -101.767, 0.22", "82.1139, 68.2477, -102.481, 0.96", "82.6353, 68.6356, -102.976, 1.18", "83.3122, 69.1743, -103.614, 0.96", "84.1778, 69.8762, -104.36, 0.22", "84.979, 70.5201, -104.904, 0.22", "85.543, 70.9587, -105.268, 0.22", "86.7382, 71.7706, -106.038, 1.4", "87.453, 72.2355, -106.493, 1.84", "87.6162, 72.3422, -106.597, 2.06", "88.2147, 72.7137, -106.979, 1.99", "89.1379, 73.2374, -107.562, 0.88", "90.6002, 74.0658, -108.455, 0.22", "91.2395, 74.435, -108.808, 0.29", "91.9146, 74.8024, -109.127, 0.29", "92.5701, 75.1252, -109.42, 0.29", "92.9627, 75.2969, -109.587, 0.66", "93.5143, 75.5016, -109.799, 0.66", "93.9923, 75.6499, -109.974, 0.66", "94.8491, 75.86, -110.307, 0.22", "95.6145, 76.0196, -110.612, 0.22", "96.7729, 76.2642, -111.086, 1.33", "97.8905, 76.5071, -111.57, 2.14", "98.4474, 76.6434, -111.827, 2.28", "99.1175, 76.8295, -112.148, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.3553, 32.7824, -1.75643, 0.59", "8.62623, 34.0036, -2.33493, 0.59", "8.14576, 34.3084, -2.56081, 0.96", "7.68483, 34.5656, -2.77604, 0.96", "7.19879, 34.7975, -3.06285, 0.81", "6.15736, 35.276, -3.81814, 0.59", "5.7572, 35.4869, -4.13802, 0.81", "5.30404, 35.7586, -4.56707, 0.81", "5.02483, 35.9662, -4.85688, 0.74", "4.25659, 36.7219, -5.72407, 0.74", "3.77784, 37.4066, -6.31184, 0.74", "3.42031, 38.2693, -6.80862, 0.52", "3.29919, 38.871, -7.05461, 0.66", "3.27247, 39.8036, -7.25265, 0.96", "3.34076, 40.4482, -7.29821, 0.88", "3.47048, 41.0271, -7.24621, 0.44", "3.65384, 41.613, -7.12999, 0.29", "3.91951, 42.2691, -6.92883, 0.29", "4.23794, 42.9939, -6.66359, 0.88", "4.42285, 43.416, -6.49291, 1.11", "4.59777, 43.8518, -6.30687, 1.18", "4.73914, 44.2817, -6.12748, 0.88", "4.99389, 45.3418, -5.74005, 0.37", "5.09102, 45.9741, -5.55275, 0.29", "5.15311, 46.8436, -5.39436, 0.29", "5.14268, 47.4359, -5.32375, 0.29", "5.03657, 48.4782, -5.36318, 1.25", "4.9335, 49.1658, -5.48199, 1.77", "4.88035, 49.4938, -5.58105, 1.92", "4.78996, 50.149, -5.81244, 1.92", "4.72749, 50.7875, -6.05821, 1.11", "4.66486, 52.3029, -6.68714, 0.44", "4.66436, 52.9898, -6.96465, 0.66", "4.67991, 53.7096, -7.19888, 0.88", "4.70201, 54.2828, -7.35209, 1.11", "4.72519, 54.7423, -7.44961, 1.11", "4.75956, 55.4281, -7.59267, 0.66", "4.79371, 56.4176, -7.74607, 0.37", "4.83487, 57.6522, -7.92791, 0.88", "4.86234, 58.2514, -8.03485, 1.47", "4.91298, 58.8177, -8.15027, 1.77", "5.01157, 59.5146, -8.32812, 1.92", "5.10748, 59.9691, -8.48569, 2.14", "5.29768, 60.6046, -8.81027, 2.14", "5.50029, 61.3143, -9.43411, 1.62", "5.59902, 61.788, -9.97476, 1.11", "5.66724, 62.3913, -10.7418, 0.66", "5.65151, 62.9755, -11.5477, 0.81", "5.55237, 63.5084, -12.3439, 0.66", "5.0435, 64.9637, -14.6667, 0.81", "4.79691, 65.4605, -15.4322, 0.74", "4.56206, 65.8409, -15.9947, 1.11", "4.04532, 66.5626, -16.9727, 1.62", "3.56019, 67.1788, -17.7252, 1.69", "3.00095, 67.8563, -18.4313, 1.55", "2.44596, 68.6052, -19.0275, 0.37", "2.26588, 68.9226, -19.239, 0.52", "2.07371, 69.3992, -19.499, 0.66", "1.94661, 69.8405, -19.683, 0.66", "1.81523, 70.4241, -19.8982, 0.22", "1.63758, 71.2822, -20.2658, 0.22", "1.35571, 72.579, -20.9407, 1.99", "1.18558, 73.2779, -21.3291, 2.43", "1.02648, 73.8703, -21.6695, 2.73", "0.87368, 74.3602, -21.9692, 2.95", "0.0511759, 76.5247, -23.3489, 0.52", "-0.282032, 77.2085, -23.8076, 0.59", "-0.520406, 77.6366, -24.1092, 1.11", "-0.67729, 77.9151, -24.303, 1.25", "-0.938563, 78.4076, -24.6065, 1.25", "-1.2972, 79.1056, -25.0, 0.22", "-1.61429, 79.7171, -25.3278, 0.22", "-1.90436, 80.3031, -25.6674, 0.37", "-2.18117, 80.8575, -26.049, 0.37", "-2.63794, 81.8106, -26.7155, 1.69", "-2.97808, 82.5281, -27.2035, 2.28", "-3.18965, 82.9569, -27.4967, 2.65", "-3.4694, 83.5313, -27.8636, 2.65", "-3.89241, 84.4165, -28.4046, 2.5", "-4.54098, 85.8839, -29.243, 0.29", "-4.75188, 86.4504, -29.5523, 0.29", "-4.90842, 87.0101, -29.8443, 0.29", "-5.0545, 87.6771, -30.1858, 0.74", "-5.17136, 88.3231, -30.5129, 0.96", "-5.29183, 89.0808, -30.9175, 0.96", "-5.41534, 89.6749, -31.3151, 0.29", "-5.65871, 90.5295, -31.9319, 0.22", "-5.75562, 90.7723, -32.1135, 0.22", "-5.9292, 91.0934, -32.3745, 0.22", "-6.20555, 91.5356, -32.7334, 0.22", "-6.98601, 92.6768, -33.7242, 2.28", "-7.32181, 93.1678, -34.1996, 2.43", "-7.57214, 93.548, -34.5872, 2.65", "-8.59129, 95.244, -36.3766, 0.59", "-8.87335, 95.7505, -36.9257, 0.52", "-9.36274, 96.6872, -37.9452, 0.59", "-9.84684, 97.682, -38.9965, 0.37", "-10.0245, 98.085, -39.393, 0.52", "-10.1928, 98.5245, -39.7882, 0.66", "-10.3262, 98.9154, -40.0936, 0.66", "-10.4836, 99.4199, -40.4312, 0.44", "-10.8307, 100.595, -41.097, 2.14", "-11.1055, 101.505, -41.5728, 2.5", "-11.3262, 102.235, -41.9546, 1.92", "-11.8251, 103.893, -42.8109, 0.22", "-12.03, 104.595, -43.1573, 0.22", "-12.4849, 106.228, -43.9196, 1.69", "-12.5689, 106.54, -44.0469, 2.06", "-12.7315, 107.192, -44.2657, 2.14", "-12.8146, 107.543, -44.3624, 1.62", "-13.128, 109.008, -44.7186, 0.37", "-13.296, 109.799, -44.9118, 0.37", "-13.5451, 111.006, -45.1955, 0.37", "-13.7341, 111.871, -45.4115, 0.37", "-14.1421, 113.704, -45.8926, 1.69", "-14.2689, 114.255, -46.0442, 1.92", "-14.3455, 114.589, -46.1385, 1.92", "-14.6054, 115.726, -46.4718, 0.22", "-14.7854, 116.586, -46.731, 0.22", "-14.9077, 117.325, -46.9291, 0.37", "-14.9782, 117.882, -47.0736, 0.37", "-15.0428, 118.528, -47.2287, 1.33", "-15.0722, 119.002, -47.3418, 1.84", "-15.0883, 119.52, -47.456, 1.84", "-15.108, 120.815, -47.7145, 0.29", "-15.135, 121.617, -47.8569, 0.44", "-15.1533, 121.99, -47.9166, 0.59", "-15.1931, 122.586, -47.9927, 0.59", "-15.2979, 123.699, -48.1406, 0.22", "-15.3956, 124.499, -48.263, 1.33", "-15.4582, 124.865, -48.3288, 1.77", "-15.529, 125.232, -48.3913, 1.92", "-15.6077, 125.599, -48.4599, 1.4", "-16.0573, 127.35, -48.9321, 0.22", "-16.2632, 128.082, -49.1714, 0.22", "-16.5728, 129.178, -49.5673, 1.11", "-16.7167, 129.715, -49.7708, 1.55", "-16.8574, 130.272, -49.9833, 1.4", "-17.3627, 132.355, -50.7827, 0.29", "-17.4906, 132.902, -50.975, 0.37", "-17.6, 133.39, -51.1493, 0.44", "-17.7205, 133.978, -51.3595, 0.44", "-17.8255, 134.53, -51.5426, 0.22", "-17.8989, 135.033, -51.6922, 0.22", "-18.013, 136.137, -51.9808, 1.33", "-18.0902, 136.75, -52.2174, 1.55", "-18.1441, 137.094, -52.3849, 1.55", "-18.4329, 138.616, -53.2935, 0.22", "-18.6509, 139.548, -53.9874, 0.22", "-18.7824, 140.049, -54.405, 0.66", "-19.286, 141.7, -55.9844, 0.44", "-19.5689, 142.559, -56.9479, 1.4", "-19.8287, 143.293, -57.8215, 1.77", "-20.3328, 144.573, -59.4805, 1.33", "-20.5581, 145.096, -60.1903, 1.62", "-21.1859, 146.525, -62.1707, 0.74", "-22.2287, 149.017, -65.6001, 2.58" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "99.1175, 76.8295, -112.148, 0.44", "100.08, 77.0604, -112.525, 0.44", "100.663, 77.218, -112.778, 0.37", "101.378, 77.4215, -113.1, 0.29", "101.819, 77.5385, -113.317, 0.59", "102.678, 77.7183, -113.798, 0.29", "103.265, 77.8429, -114.138, 0.96", "103.684, 77.9604, -114.407, 1.25", "104.028, 78.0684, -114.634, 1.33", "104.868, 78.3413, -115.19, 0.22", "105.903, 78.6862, -115.9, 0.22", "106.445, 78.87, -116.273, 0.37", "107.194, 79.1355, -116.781, 0.22", "107.8, 79.3779, -117.17, 1.18", "108.214, 79.5658, -117.426, 1.4", "108.577, 79.7557, -117.627, 1.4", "109.085, 80.0432, -117.872, 0.44", "109.718, 80.376, -118.148, 0.22", "110.083, 80.5586, -118.3, 0.52", "110.368, 80.7015, -118.427, 0.52", "111.271, 81.1789, -118.828, 0.22", "111.831, 81.4727, -119.072, 0.81", "112.396, 81.7429, -119.341, 1.25", "113.072, 82.0337, -119.665, 1.25", "114.132, 82.438, -120.154, 0.22", "114.636, 82.6174, -120.388, 0.59", "115.034, 82.7473, -120.573, 0.74", "116.367, 83.0936, -121.177, 0.22", "117.048, 83.2374, -121.474, 0.22", "118.059, 83.4134, -121.866, 1.25", "118.609, 83.4919, -122.07, 1.62", "118.807, 83.5204, -122.148, 1.62", "120.598, 83.7913, -122.852, 0.22", "121.1, 83.8629, -123.044, 0.22", "121.921, 83.9629, -123.375, 1.03", "122.47, 84.0111, -123.601, 1.25", "123.727, 84.0959, -124.113, 0.22", "124.242, 84.1227, -124.337, 0.22", "124.634, 84.1389, -124.526, 0.66", "125.62, 84.1404, -125.046, 0.22", "126.272, 84.1136, -125.437, 0.22", "126.804, 84.0745, -125.777, 0.74", "127.291, 84.0435, -126.106, 0.96", "128.136, 84.0248, -126.702, 0.22", "129.117, 84.0486, -127.389, 1.33", "129.641, 84.0833, -127.745, 1.77", "129.923, 84.115, -127.929, 1.77", "131.565, 84.3395, -128.942, 0.22", "131.916, 84.3932, -129.144, 0.22", "132.331, 84.4668, -129.378, 0.74", "132.696, 84.5427, -129.577, 0.74", "133.646, 84.7455, -130.087, 0.22", "134.121, 84.8513, -130.35, 1.03", "134.469, 84.9374, -130.554, 1.33", "134.866, 85.055, -130.783, 1.47", "136.079, 85.4582, -131.455, 0.15", "136.429, 85.5891, -131.634, 0.29", "136.765, 85.736, -131.774, 0.29", "137.527, 86.1097, -131.98, 0.15", "138.139, 86.4567, -132.06, 0.66", "138.375, 86.6064, -132.063, 0.74", "138.551, 86.7324, -132.041, 0.74", "139.424, 87.3376, -131.891, 0.15", "140.334, 87.9565, -131.717, 0.15", "140.97, 88.3803, -131.59, 1.03", "141.275, 88.5794, -131.537, 1.18", "141.498, 88.7178, -131.504, 1.18", "142.737, 89.4421, -131.361, 0.15", "143.216, 89.7103, -131.33, 0.81", "143.54, 89.8922, -131.33, 1.11", "143.824, 90.0523, -131.338, 1.11", "145.859, 91.2191, -131.476, 0.22", "146.519, 91.6051, -131.518, 0.88", "146.919, 91.8512, -131.539, 0.74", "147.939, 92.4847, -131.555, 0.22", "148.331, 92.7293, -131.547, 0.59", "148.775, 93.0205, -131.521, 0.74", "149.866, 93.8137, -131.389, 0.22", "150.366, 94.1702, -131.308, 1.47", "150.878, 94.5167, -131.203, 1.77", "151.226, 94.7336, -131.125, 1.77", "152.627, 95.591, -130.779, 0.22", "153.25, 95.9709, -130.621, 0.66", "153.669, 96.2245, -130.531, 0.88", "154.531, 96.7377, -130.316, 0.22", "154.95, 96.9939, -130.207, 0.44", "155.8, 97.5305, -129.949, 0.22", "155.923, 97.6103, -129.904, 0.81", "156.156, 97.7852, -129.819, 0.81", "157.228, 98.7763, -129.452, 0.22", "157.739, 99.2908, -129.306, 1.03", "157.91, 99.4666, -129.265, 1.33", "158.177, 99.7364, -129.217, 1.33", "159.571, 101.039, -129.124, 0.22", "160.267, 101.621, -129.153, 0.22", "161.043, 102.173, -129.264, 1.03", "161.39, 102.378, -129.333, 1.33", "161.695, 102.52, -129.402, 1.33", "163.083, 103.016, -129.734, 0.22", "164.048, 103.256, -129.971, 0.22", "164.967, 103.444, -130.174, 0.74", "165.494, 103.55, -130.261, 0.88", "166.635, 103.782, -130.367, 0.22", "167.185, 103.893, -130.37, 0.22", "167.46, 103.95, -130.336, 0.66", "167.691, 103.988, -130.303, 0.66", "168.664, 104.12, -130.189, 0.22", "169.28, 104.192, -130.133, 0.88", "169.437, 104.207, -130.124, 1.18", "169.621, 104.221, -130.121, 1.18", "171.294, 104.323, -130.094, 0.22", "172.029, 104.363, -130.086, 0.44", "172.32, 104.381, -130.083, 0.29", "172.814, 104.434, -130.137, 0.29", "173.64, 104.587, -130.308, 0.96", "174.044, 104.686, -130.44, 1.18", "174.369, 104.783, -130.573, 1.18", "174.655, 104.87, -130.694, 0.88", "176.632, 105.493, -131.63, 0.22", "177.001, 105.616, -131.826, 0.81", "177.341, 105.733, -132.022, 0.81", "178.409, 106.042, -132.596, 0.22", "178.895, 106.171, -132.85, 0.22", "179.714, 106.369, -133.254, 1.03", "180.198, 106.481, -133.472, 1.11", "181.516, 106.794, -134.132, 0.22", "182.342, 107.018, -134.586, 0.22", "183.174, 107.26, -135.11, 0.96", "183.616, 107.387, -135.402, 1.18", "185.029, 107.814, -136.383, 0.22", "185.691, 108.032, -136.877, 0.22", "186.303, 108.257, -137.374, 1.11", "186.733, 108.433, -137.77, 1.33", "186.847, 108.477, -137.884, 1.47", "187.384, 108.682, -138.478, 1.18", "188.168, 108.995, -139.465, 0.15", "188.508, 109.126, -139.913, 0.59", "189.039, 109.311, -140.623, 0.81", "189.767, 109.566, -141.592, 0.22", "190.212, 109.739, -142.211, 1.03", "190.566, 109.895, -142.74, 1.25", "191.365, 110.393, -144.19, 0.22", "191.694, 110.647, -144.833, 0.37", "191.981, 110.913, -145.434, 0.15", "192.346, 111.307, -146.271, 0.59", "192.554, 111.543, -146.834, 0.59", "193.154, 112.172, -148.554, 0.22", "193.352, 112.362, -149.107, 0.22", "193.888, 112.793, -150.484, 1.25", "194.031, 112.882, -150.812, 1.92", "195.523, 113.634, -154.108, 0.52", "196.15, 113.914, -155.511, 0.29", "196.475, 114.056, -156.257, 0.96", "196.81, 114.226, -157.065, 1.18", "197.378, 114.565, -158.425, 0.81", "198.307, 115.239, -160.732, 1.69", "198.712, 115.631, -161.778, 1.92", "199.504, 116.632, -164.05, 0.22", "199.682, 116.93, -164.636, 0.22", "199.877, 117.372, -165.366, 1.33", "200.107, 118.123, -166.413, 1.33", "200.349, 119.351, -167.917, 0.22", "200.391, 119.885, -168.555, 0.22", "200.353, 120.597, -169.51, 0.22", "200.273, 121.26, -170.572, 1.4", "200.225, 121.519, -171.06, 1.62", "200.02, 122.539, -173.358, 0.22", "199.92, 123.014, -174.549, 0.96", "199.783, 123.813, -176.712, 1.55", "199.721, 124.474, -178.605, 2.21", "199.713, 124.932, -179.967, 2.43", "199.826, 126.131, -183.541, 0.81", "199.887, 126.415, -184.371, 0.29", "200.029, 126.864, -185.616, 0.74", "200.415, 127.78, -187.913, 0.81", "200.545, 128.016, -188.468, 0.96", "201.057, 128.729, -190.124, 0.22", "201.266, 128.95, -190.644, 0.52", "201.43, 129.102, -191.013, 0.59", "201.888, 129.483, -191.916, 0.22", "202.521, 129.954, -193.092, 1.47", "202.834, 130.211, -193.728, 1.69", "203.51, 130.856, -195.338, 0.37", "203.706, 131.083, -195.905, 0.88", "203.875, 131.33, -196.525, 1.11", "204.289, 132.158, -198.706, 0.22", "204.413, 132.419, -199.432, 0.37", "204.666, 133.021, -201.111, 0.22", "204.864, 133.56, -202.709, 1.47", "204.983, 133.915, -203.809, 1.69", "205.169, 134.548, -205.71, 1.77", "205.271, 134.899, -206.813, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "99.1175, 76.8295, -112.148, 0.29", "100.776, 78.2461, -112.836, 0.29", "101.606, 78.9137, -113.154, 0.29", "102.57, 79.6752, -113.517, 0.81", "103.209, 80.1574, -113.748, 0.96", "104.37, 80.9907, -114.158, 0.22", "105.135, 81.5152, -114.421, 0.44", "105.515, 81.7467, -114.554, 0.44", "106.35, 82.1668, -114.821, 0.22", "107.198, 82.4937, -115.097, 1.03", "107.612, 82.6149, -115.215, 1.33", "107.965, 82.6882, -115.307, 1.55", "108.796, 82.7925, -115.48, 1.25", "110.131, 82.8783, -115.685, 0.15", "110.938, 82.8929, -115.751, 0.74", "112.015, 82.8975, -115.76, 1.11", "112.624, 82.9246, -115.786, 1.18", "113.382, 82.9923, -115.858, 0.88", "114.715, 83.1649, -116.017, 0.15", "115.471, 83.3014, -116.166, 0.37", "116.023, 83.4282, -116.33, 0.52", "117.97, 83.9659, -117.177, 0.22", "118.864, 84.2358, -117.633, 1.25", "119.435, 84.4131, -117.965, 1.77", "119.897, 84.5558, -118.262, 1.77", "120.302, 84.6816, -118.53, 1.55", "121.793, 85.1359, -119.475, 0.22", "122.359, 85.3015, -119.784, 0.37", "122.905, 85.4938, -120.095, 0.37", "123.925, 85.8952, -120.682, 0.15", "124.662, 86.2454, -121.072, 0.96", "124.958, 86.4157, -121.221, 1.11", "125.212, 86.5911, -121.342, 1.11", "126.763, 87.7626, -122.019, 0.22", "127.45, 88.3142, -122.306, 0.22", "128.315, 89.0318, -122.646, 0.22", "128.882, 89.5195, -122.88, 0.22", "129.717, 90.2763, -123.212, 1.18", "130.074, 90.6075, -123.345, 1.84", "130.467, 91.0004, -123.486, 1.84", "130.698, 91.2379, -123.574, 1.84", "132.143, 92.7227, -124.195, 0.22", "132.867, 93.5225, -124.511, 0.81", "133.139, 93.8545, -124.627, 1.11", "133.572, 94.4127, -124.796, 1.11", "133.794, 94.7099, -124.873, 0.74", "134.474, 95.6049, -125.092, 0.29", "134.887, 96.1337, -125.201, 0.44", "135.283, 96.6019, -125.312, 0.44", "135.754, 97.1099, -125.432, 0.22", "136.137, 97.4898, -125.511, 0.22", "137.103, 98.4084, -125.693, 1.18", "137.43, 98.7041, -125.747, 1.4", "137.782, 99.0299, -125.814, 1.4", "138.29, 99.5023, -125.918, 0.88", "138.706, 99.8842, -125.972, 0.37", "139.47, 100.583, -126.008, 0.22", "139.996, 101.055, -125.984, 0.29", "140.511, 101.511, -125.936, 0.29", "141.579, 102.443, -125.805, 0.22", "142.5, 103.248, -125.681, 0.22", "143.302, 103.976, -125.56, 1.33", "143.816, 104.453, -125.474, 1.55", "145.418, 105.999, -125.196, 0.22", "146.043, 106.644, -125.118, 0.22", "146.862, 107.567, -125.045, 0.22", "147.821, 108.726, -125.017, 1.55", "148.106, 109.082, -125.022, 1.84", "148.402, 109.465, -125.039, 1.84", "149.676, 111.17, -125.169, 0.22", "150.139, 111.802, -125.249, 0.44", "150.63, 112.428, -125.366, 0.59", "151.628, 113.639, -125.637, 0.29", "152.057, 114.159, -125.749, 1.18", "152.488, 114.668, -125.844, 1.4", "152.88, 115.107, -125.909, 1.4", "154.154, 116.453, -126.094, 0.22", "154.631, 116.909, -126.136, 0.22", "155.033, 117.255, -126.14, 0.44", "155.574, 117.713, -126.096, 0.22", "155.838, 117.945, -126.046, 0.22", "156.515, 118.56, -125.874, 1.11", "156.947, 118.977, -125.749, 1.33", "157.01, 119.033, -125.735, 1.55", "158.146, 119.99, -125.6, 0.22", "158.564, 120.325, -125.548, 0.22", "159.019, 120.667, -125.474, 0.44", "159.385, 120.924, -125.395, 0.44", "160.319, 121.588, -125.17, 0.22", "161.086, 122.13, -124.979, 0.22", "162.128, 122.866, -124.707, 1.18", "162.598, 123.239, -124.577, 1.33", "163.139, 123.691, -124.369, 1.11", "164.03, 124.497, -123.944, 0.22", "164.274, 124.737, -123.807, 0.44", "164.699, 125.145, -123.564, 0.44", "165.298, 125.675, -123.275, 0.22", "166.583, 126.63, -122.779, 0.22", "167.175, 126.992, -122.608, 1.11", "167.725, 127.291, -122.469, 1.55", "168.36, 127.641, -122.339, 1.62", "168.901, 127.929, -122.25, 1.25", "170.369, 128.673, -122.072, 0.22", "171.384, 129.211, -122.013, 0.22", "172.025, 129.556, -121.976, 0.22", "173.017, 130.124, -121.915, 0.44", "173.6, 130.494, -121.879, 0.44", "174.295, 130.957, -121.829, 0.22", "174.878, 131.343, -121.786, 0.22", "175.52, 131.741, -121.754, 0.59", "175.847, 131.93, -121.76, 0.59", "176.549, 132.349, -121.807, 0.22", "177.403, 132.895, -121.891, 0.74", "177.782, 133.133, -121.937, 0.88", "178.398, 133.497, -122.035, 0.52", "179.439, 134.072, -122.239, 0.22", "180.333, 134.604, -122.472, 0.22", "181.31, 135.24, -122.774, 1.11", "181.811, 135.605, -122.959, 1.47", "182.309, 136.017, -123.171, 1.55", "183.635, 137.299, -123.85, 0.22", "184.68, 138.448, -124.462, 0.96", "184.978, 138.802, -124.653, 1.4", "185.444, 139.421, -124.984, 1.25", "185.792, 139.913, -125.233, 0.88", "186.636, 141.148, -125.812, 0.22", "187.064, 141.821, -126.108, 0.37", "187.502, 142.49, -126.376, 0.22", "188.181, 143.507, -126.802, 0.52", "188.549, 144.063, -127.022, 0.66", "189.21, 145.129, -127.445, 0.22", "189.655, 145.912, -127.747, 0.66", "189.775, 146.149, -127.833, 0.66", "190.464, 147.69, -128.348, 0.22", "190.761, 148.407, -128.531, 0.59", "191.394, 150.109, -128.832, 0.22", "191.601, 150.707, -128.889, 0.22", "191.936, 151.712, -128.928, 1.47", "192.074, 152.188, -128.92, 1.69", "192.56, 154.181, -128.732, 0.22", "192.849, 155.499, -128.577, 0.22", "193.033, 156.462, -128.427, 0.74", "193.131, 156.998, -128.342, 0.88", "193.425, 158.708, -128.073, 0.22", "193.65, 160.12, -127.87, 1.25", "193.74, 160.735, -127.802, 1.25", "193.838, 161.354, -127.747, 0.74", "194.028, 162.482, -127.656, 0.22", "194.287, 163.774, -127.544, 1.4", "194.396, 164.249, -127.504, 1.62", "194.771, 165.816, -127.359, 0.22", "195.023, 166.767, -127.251, 0.59", "195.13, 167.116, -127.187, 0.59", "195.615, 168.569, -126.822, 0.15", "195.916, 169.379, -126.557, 0.15", "196.199, 170.095, -126.276, 0.15", "196.561, 171.006, -125.887, 0.15", "197.305, 172.842, -125.102, 1.18", "197.422, 173.173, -124.98, 1.47", "197.57, 173.696, -124.832, 1.11", "197.851, 175.011, -124.559, 0.22", "198.003, 176.01, -124.425, 0.96", "198.064, 176.692, -124.392, 0.96", "198.203, 178.548, -124.605, 0.22", "198.343, 179.917, -124.84, 0.22", "198.49, 181.087, -125.085, 1.18", "198.55, 181.502, -125.183, 1.4", "198.694, 182.286, -125.363, 1.55", "199.391, 185.454, -126.098, 0.22", "199.82, 187.046, -126.48, 0.22", "200.147, 188.118, -126.756, 0.81", "200.229, 188.366, -126.824, 1.03", "200.734, 189.894, -127.238, 0.22", "200.963, 190.566, -127.404, 0.66", "201.148, 191.134, -127.529, 0.66", "201.458, 192.14, -127.793, 0.15", "201.823, 193.317, -128.065, 1.25", "202.008, 193.925, -128.171, 1.4", "202.415, 195.279, -128.348, 0.15", "202.666, 196.096, -128.413, 0.37", "202.791, 196.477, -128.426, 0.37", "203.48, 198.527, -128.453, 0.22", "203.871, 199.631, -128.446, 1.03", "204.049, 200.112, -128.434, 1.18", "204.146, 200.375, -128.424, 1.18", "204.824, 202.165, -128.319, 0.22", "205.11, 202.901, -128.286, 0.52", "205.25, 203.242, -128.273, 0.52", "205.87, 204.663, -128.197, 0.22", "206.246, 205.482, -128.132, 0.22", "206.699, 206.394, -128.048, 1.11", "207.068, 207.098, -127.97, 1.11", "208.047, 208.853, -127.769, 0.22", "208.654, 209.884, -127.665, 0.22", "209.217, 210.772, -127.588, 1.03", "209.601, 211.364, -127.549, 1.47", "209.899, 211.828, -127.521, 1.11", "210.696, 213.076, -127.382, 0.15", "210.984, 213.526, -127.334, 0.37", "211.64, 214.552, -127.229, 0.22", "211.985, 215.091, -127.157, 0.37", "212.173, 215.392, -127.121, 0.37", "213.1, 216.809, -126.98, 0.22", "213.67, 217.665, -126.905, 0.81", "214.019, 218.174, -126.866, 1.03", "214.945, 219.476, -126.789, 0.15", "215.487, 220.212, -126.759, 0.29", "215.979, 220.898, -126.75, 0.22", "216.415, 221.542, -126.76, 0.88", "216.657, 221.918, -126.748, 1.11", "216.884, 222.313, -126.718, 1.11", "217.62, 223.795, -126.552, 0.22", "217.976, 224.614, -126.413, 1.03", "218.136, 225.034, -126.333, 1.25", "218.646, 226.463, -126.043, 0.22", "219.042, 227.66, -125.783, 0.88", "219.413, 228.833, -125.512, 0.29", "219.699, 229.781, -125.281, 0.96", "219.832, 230.231, -125.17, 0.96", "220.067, 231.063, -124.958, 0.22", "220.242, 231.747, -124.777, 0.37", "220.48, 232.714, -124.524, 0.22", "220.681, 233.566, -124.304, 0.52", "221.101, 235.27, -123.882, 0.22", "221.283, 236.048, -123.702, 0.81", "221.496, 236.997, -123.498, 0.22", "221.658, 237.711, -123.354, 0.88", "221.809, 238.313, -123.251, 1.03", "222.441, 240.578, -122.92, 0.22", "222.684, 241.351, -122.824, 0.22", "222.981, 242.205, -122.727, 0.81", "223.112, 242.559, -122.689, 1.03", "223.799, 244.353, -122.527, 0.22", "223.958, 244.765, -122.484, 0.29", "224.391, 245.902, -122.34, 0.15", "224.626, 246.508, -122.247, 0.29", "224.939, 247.349, -122.111, 0.88", "225.178, 248.07, -121.992, 0.88", "225.649, 249.436, -121.659, 0.22", "225.852, 250.014, -121.489, 0.22", "226.077, 250.701, -121.27, 0.88", "226.23, 251.15, -121.103, 1.11", "226.422, 251.656, -120.892, 1.11", "227.18, 253.26, -120.135, 0.22", "227.7, 254.181, -119.706, 0.22", "228.129, 254.825, -119.376, 0.22", "228.755, 255.63, -118.932, 0.81", "229.032, 255.947, -118.752, 1.03", "230.077, 256.434, -117.756, 0.22", "230.52, 256.511, -117.256, 0.22", "231.312, 256.511, -116.363, 1.11", "231.652, 256.485, -115.993, 1.25", "232.012, 256.439, -115.612, 1.25", "237.231, 255.633, -110.21, 0.66", "237.964, 255.505, -109.464, 0.88", "239.155, 255.248, -108.235, 0.29", "239.813, 255.082, -107.551, 0.22", "240.296, 254.957, -107.05, 0.44", "240.744, 254.847, -106.619, 0.22", "241.599, 255.018, -106.476, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-22.2287, 149.017, -65.6001, 1.77", "-22.5543, 149.694, -68.6358, 1.77", "-22.8364, 150.551, -71.4513, 1.47", "-23.0063, 151.134, -73.0189, 1.18", "-23.2127, 151.817, -74.649, 1.11", "-23.4433, 152.538, -76.2392, 0.88", "-23.5521, 152.839, -76.8722, 0.66", "-23.8086, 153.512, -78.0564, 0.96", "-24.1577, 154.351, -79.319, 1.11", "-24.522, 155.068, -80.4081, 1.33", "-24.7409, 155.424, -80.9975, 1.62", "-25.3688, 156.28, -82.5205, 1.47", "-26.626, 157.783, -85.3582, 0.96", "-27.2809, 158.503, -86.7298, 0.96", "-28.1772, 159.466, -88.5166, 1.55", "-29.0291, 160.382, -90.2117, 1.33", "-29.7018, 161.123, -91.5776, 1.62", "-30.5789, 162.111, -93.3606, 1.11", "-30.8792, 162.45, -93.9588, 0.59", "-31.8678, 163.58, -95.9253, 0.88", "-32.61, 164.468, -97.391, 1.25", "-33.2422, 165.252, -98.623, 1.4", "-33.9933, 166.207, -100.084, 0.52", "-34.6964, 167.131, -101.42, 0.59", "-35.1164, 167.664, -102.214, 0.37", "-35.3545, 167.95, -102.624, 0.59", "-35.8485, 168.517, -103.418, 0.44", "-36.5536, 169.32, -104.514, 0.37", "-37.3559, 170.263, -105.764, 1.47", "-38.4185, 171.544, -107.402, 1.84", "-39.5029, 172.866, -109.026, 0.52", "-40.2005, 173.726, -110.015, 0.52", "-40.5984, 174.216, -110.531, 1.18", "-40.9685, 174.644, -110.939, 1.18", "-42.2575, 176.069, -112.123, 0.22", "-42.5492, 176.395, -112.338, 0.37", "-43.0902, 176.976, -112.699, 0.96", "-43.7888, 177.696, -113.152, 1.25", "-45.2279, 179.102, -114.087, 0.22", "-45.5738, 179.422, -114.339, 0.37", "-45.8831, 179.704, -114.585, 0.37", "-47.0135, 180.767, -115.65, 1.11", "-47.3042, 181.049, -115.955, 1.55", "-47.5409, 181.292, -116.22, 1.69", "-49.2754, 183.132, -118.37, 0.29", "-49.6374, 183.531, -118.893, 0.29", "-50.4237, 184.492, -120.206, 1.03", "-50.6836, 184.853, -120.721, 0.81", "-50.931, 185.275, -121.347, 1.11", "-51.3479, 186.164, -122.679, 1.33", "-51.9687, 187.872, -125.276, 0.59", "-52.1753, 188.477, -126.21, 1.18", "-52.4183, 189.221, -127.371, 1.33", "-52.8925, 190.789, -129.799, 0.52", "-53.0496, 191.383, -130.688, 0.81", "-53.2264, 192.083, -131.684, 0.81", "-53.4735, 193.108, -133.063, 0.37", "-53.6162, 193.621, -133.761, 0.37", "-53.7392, 194.035, -134.319, 0.22", "-54.007, 194.928, -135.507, 1.18", "-54.4395, 196.468, -137.513, 1.33", "-54.6771, 197.42, -138.727, 0.44", "-54.9068, 198.606, -140.285, 0.74", "-55.092, 199.9, -142.016, 0.52", "-55.1499, 200.532, -142.913, 0.66", "-55.151, 200.97, -143.575, 1.47", "-55.0807, 201.6, -144.557, 1.55", "-54.7972, 203.134, -147.142, 0.96", "-54.5904, 203.741, -148.197, 0.37", "-54.1551, 204.793, -150.129, 0.29", "-53.9402, 205.34, -151.159, 0.81", "-53.8264, 205.702, -151.833, 1.25", "-53.6724, 206.412, -153.055, 1.25", "-53.6145, 206.945, -154.037, 0.59", "-53.5811, 207.739, -155.87, 0.44", "-53.5803, 208.291, -157.564, 0.74", "-53.5941, 208.755, -159.47, 1.03", "-53.5746, 208.903, -160.535, 1.25", "-53.3895, 209.026, -164.194, 0.74", "-53.2118, 208.843, -166.428, 0.22", "-52.9624, 208.478, -167.991, 0.96", "-52.883, 208.35, -168.33, 0.96", "-52.4939, 207.689, -169.605, 0.29", "-52.2425, 207.285, -170.195, 0.52", "-51.8582, 206.753, -170.788, 0.22", "-51.3746, 206.184, -171.395, 0.22", "-51.0387, 205.831, -171.751, 0.96", "-50.7639, 205.566, -172.004, 0.96", "-49.3847, 204.351, -173.044, 0.22", "-48.8544, 203.923, -173.363, 0.44", "-48.4072, 203.592, -173.563, 0.44", "-47.3848, 202.863, -173.876, 0.15", "-46.5563, 202.274, -174.124, 0.15", "-45.9348, 201.837, -174.34, 0.22", "-45.4802, 201.524, -174.543, 0.81", "-44.7161, 200.985, -174.869, 1.11", "-44.4042, 200.752, -175.034, 1.11", "-43.123, 199.678, -176.469, 0.15", "-42.7864, 199.344, -177.312, 0.37", "-42.6659, 199.203, -177.787, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.2287, 149.017, -65.6001, 0.29", "-22.8723, 150.194, -65.1093, 0.29", "-23.314, 150.964, -64.8117, 0.22", "-23.4875, 151.254, -64.7078, 0.74", "-23.6629, 151.541, -64.622, 0.74", "-23.9922, 152.06, -64.4842, 0.22", "-24.347, 152.598, -64.3599, 0.37", "-24.6373, 153.006, -64.2925, 0.22", "-24.9737, 153.454, -64.2352, 0.52", "-25.3044, 153.86, -64.2064, 0.52", "-25.728, 154.34, -64.2124, 0.22", "-26.0044, 154.614, -64.2455, 0.22", "-26.4766, 155.035, -64.3098, 1.47", "-26.734, 155.256, -64.3365, 1.92", "-27.1624, 155.612, -64.3688, 2.06", "-27.5688, 155.947, -64.3833, 1.69", "-28.4801, 156.719, -64.404, 0.44", "-29.0871, 157.248, -64.3928, 0.22", "-29.5329, 157.65, -64.3792, 0.52", "-29.81, 157.906, -64.3685, 0.66", "-30.4882, 158.561, -64.3971, 0.22", "-30.7988, 158.88, -64.4274, 0.22", "-31.253, 159.387, -64.4969, 1.47", "-31.5505, 159.736, -64.5703, 1.77", "-31.9074, 160.178, -64.6782, 1.99", "-33.2073, 161.859, -65.1751, 0.22", "-33.7211, 162.561, -65.407, 0.22", "-34.0524, 163.026, -65.5709, 0.96", "-34.4016, 163.53, -65.752, 1.03", "-34.814, 164.144, -65.9554, 0.22", "-35.2471, 164.823, -66.1548, 0.22", "-35.4682, 165.181, -66.2537, 0.81", "-35.694, 165.531, -66.3691, 0.96", "-36.1955, 166.239, -66.6402, 0.22", "-36.4997, 166.636, -66.7989, 0.22", "-36.9909, 167.247, -67.0667, 1.11", "-37.2176, 167.525, -67.1904, 1.4", "-37.4634, 167.813, -67.3287, 1.4", "-38.3104, 168.766, -67.8053, 0.22", "-38.6897, 169.173, -68.0048, 0.22", "-39.2513, 169.74, -68.2739, 0.96", "-39.5868, 170.058, -68.4313, 1.18", "-40.3595, 170.729, -68.7903, 0.22", "-40.688, 170.996, -68.9393, 0.22", "-41.2653, 171.442, -69.1945, 1.55", "-41.5678, 171.673, -69.3261, 1.99", "-42.1823, 172.153, -69.5967, 1.99", "-43.5079, 173.251, -70.2203, 0.22", "-43.763, 173.48, -70.3552, 0.44", "-43.8864, 173.61, -70.4285, 0.44", "-44.2655, 174.099, -70.6831, 0.22", "-44.79, 174.955, -71.039, 1.25", "-45.0293, 175.454, -71.197, 1.62", "-45.161, 175.811, -71.2935, 1.62", "-45.5177, 176.804, -71.5398, 0.22", "-45.7027, 177.327, -71.6658, 0.22", "-45.8881, 177.88, -71.7959, 0.29", "-46.0903, 178.498, -71.9102, 0.66", "-46.2146, 178.871, -71.9703, 0.66", "-46.4777, 179.602, -72.0777, 0.22", "-46.895, 180.608, -72.2283, 1.55", "-47.1208, 181.122, -72.3113, 1.77", "-47.3203, 181.592, -72.3989, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-47.3203, 181.592, -72.3989, 0.22", "-48.0658, 184.177, -73.5405, 0.22", "-48.2405, 184.722, -73.7193, 0.44", "-48.342, 185.002, -73.796, 0.44", "-48.7002, 185.905, -74.0169, 0.22", "-48.976, 186.564, -74.1576, 0.59", "-49.2399, 187.164, -74.28, 0.59", "-49.8614, 188.366, -74.4441, 0.22", "-50.1593, 188.887, -74.5264, 0.22", "-50.773, 189.922, -74.6757, 1.11", "-51.0274, 190.326, -74.7301, 1.33", "-51.2778, 190.716, -74.8105, 1.33", "-52.4093, 192.535, -75.274, 0.22", "-52.9596, 193.499, -75.5724, 0.22", "-53.4946, 194.51, -75.9466, 1.33", "-53.7919, 195.074, -76.2345, 1.69", "-54.8194, 196.94, -77.5052, 0.22", "-55.1815, 197.594, -78.0239, 0.22", "-55.6125, 198.35, -78.7701, 1.11", "-55.9874, 198.984, -79.5537, 1.4", "-56.7735, 200.268, -81.4898, 1.11", "-57.4166, 201.211, -83.183, 1.03", "-57.6114, 201.471, -83.6983, 1.55", "-58.1603, 202.159, -85.1266, 1.69", "-58.947, 203.088, -87.0971, 0.74", "-59.8754, 204.198, -89.3867, 1.4", "-61.064, 205.757, -92.3127, 1.18", "-61.5557, 206.418, -93.4967, 1.55", "-61.9712, 206.986, -94.4396, 1.69", "-63.0295, 208.541, -96.6694, 1.18", "-63.5082, 209.282, -97.5995, 0.59", "-64.489, 211.011, -99.4661, 1.33", "-64.8897, 211.862, -100.272, 1.77", "-65.4046, 213.122, -101.405, 0.52", "-65.7112, 213.99, -102.15, 1.25", "-66.0923, 215.185, -103.101, 1.11", "-66.6319, 216.843, -104.366, 0.22", "-67.0421, 218.023, -105.263, 0.22", "-67.4941, 219.26, -106.161, 1.55", "-67.8642, 220.174, -106.794, 1.69", "-68.7647, 222.152, -108.117, 0.15", "-69.1736, 222.966, -108.623, 0.81", "-69.6397, 223.795, -109.083, 1.03", "-70.5001, 225.258, -109.775, 0.22", "-71.0576, 226.183, -110.14, 1.03", "-71.5079, 226.942, -110.341, 1.47", "-72.0276, 227.833, -110.487, 1.47", "-72.995, 229.478, -110.681, 0.22", "-73.3984, 230.16, -110.736, 0.74", "-73.686, 230.64, -110.768, 0.88", "-74.9342, 232.758, -110.881, 0.22", "-75.6054, 233.918, -110.927, 1.11", "-75.9733, 234.563, -110.954, 1.4", "-76.7926, 235.989, -111.071, 0.22", "-77.0542, 236.474, -111.123, 0.52", "-77.4666, 237.318, -111.243, 0.22", "-77.775, 238.066, -111.393, 0.52", "-77.8856, 238.384, -111.456, 0.52", "-78.175, 239.338, -111.619, 0.22", "-78.4907, 240.442, -111.818, 1.33", "-78.7334, 241.22, -112.028, 1.55", "-79.1807, 242.723, -112.51, 0.22", "-79.545, 243.912, -112.948, 0.22", "-79.9373, 245.05, -113.586, 1.47", "-80.1702, 245.763, -114.043, 1.69", "-80.8612, 248.176, -115.627, 0.22", "-81.1824, 249.413, -116.474, 1.99", "-81.3858, 250.223, -117.058, 2.36", "-82.4676, 254.56, -120.325, 0.22", "-82.8991, 256.301, -121.6, 0.44", "-83.2454, 257.735, -122.576, 0.22", "-83.8619, 260.302, -124.088, 1.84", "-84.0392, 261.004, -124.448, 2.28", "-84.2138, 261.705, -124.732, 2.28", "-84.9793, 264.462, -125.567, 0.22", "-85.2303, 265.225, -125.792, 0.74", "-86.1328, 267.739, -126.496, 0.22", "-86.482, 268.811, -126.728, 0.74", "-86.6631, 269.404, -126.85, 0.81", "-87.5271, 272.335, -127.461, 0.15", "-87.8401, 273.361, -127.722, 1.11", "-88.1815, 274.432, -128.028, 1.11", "-89.0349, 276.974, -128.843, 0.22", "-89.2849, 277.703, -129.075, 0.66", "-89.4798, 278.267, -129.237, 0.81", "-90.1066, 279.994, -129.618, 0.22", "-90.4636, 280.758, -129.792, 1.11", "-90.778, 281.26, -129.913, 1.33", "-91.6328, 282.217, -130.202, 0.22", "-92.0533, 282.628, -130.336, 0.66", "-92.4323, 282.951, -130.444, 0.88", "-94.0948, 284.211, -130.849, 0.22", "-95.1822, 284.98, -131.133, 0.22", "-95.719, 285.347, -131.271, 0.96", "-96.4185, 285.815, -131.45, 1.11", "-97.3084, 286.449, -131.666, 0.22", "-97.8697, 286.896, -131.766, 0.59", "-98.0533, 287.068, -131.771, 0.59", "-98.4966, 287.555, -131.732, 0.22", "-98.9389, 288.088, -131.686, 0.44", "-99.1527, 288.357, -131.662, 0.52", "-100.04, 289.54, -131.6, 0.15", "-100.328, 289.931, -131.587, 0.44", "-101.244, 291.163, -131.584, 0.22", "-101.754, 291.84, -131.618, 0.44", "-102.002, 292.172, -131.642, 0.44", "-102.402, 292.738, -131.684, 0.22", "-102.782, 293.299, -131.722, 0.59", "-103.278, 294.031, -131.764, 0.59", "-103.923, 294.987, -131.818, 0.22", "-104.498, 295.865, -131.897, 0.22", "-105.13, 296.851, -132.018, 0.81", "-105.292, 297.107, -132.061, 0.81", "-105.679, 297.73, -132.202, 0.22", "-106.086, 298.408, -132.368, 0.44", "-107.056, 300.073, -132.814, 0.22", "-107.305, 300.498, -132.939, 0.96", "-107.791, 301.309, -133.189, 1.11", "-109.177, 303.605, -133.877, 0.22", "-109.797, 304.65, -134.174, 0.22", "-110.015, 305.028, -134.275, 0.74", "-110.295, 305.525, -134.393, 0.96", "-110.611, 306.091, -134.524, 1.18", "-110.838, 306.499, -134.63, 1.18", "-111.638, 308.006, -135.049, 0.15", "-111.994, 308.649, -135.256, 0.52", "-112.13, 308.902, -135.344, 0.81", "-112.306, 309.262, -135.468, 0.81", "-113.037, 310.859, -136.021, 0.22", "-113.423, 311.767, -136.326, 0.96", "-113.668, 312.412, -136.524, 1.47", "-114.272, 314.243, -137.053, 0.22", "-114.608, 315.404, -137.382, 0.22", "-114.933, 316.628, -137.735, 1.03", "-115.049, 317.105, -137.871, 1.03", "-115.264, 318.055, -138.178, 0.22", "-115.415, 318.788, -138.449, 0.44", "-115.561, 319.517, -138.748, 0.37", "-115.774, 320.596, -139.224, 0.74", "-115.854, 320.999, -139.408, 0.96", "-116.414, 323.643, -140.681, 0.22", "-116.724, 325.013, -141.373, 0.74", "-116.807, 325.387, -141.561, 1.11", "-116.887, 325.774, -141.75, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-47.3203, 181.592, -72.3989, 0.22", "-48.0878, 183.136, -71.7782, 0.22", "-48.2981, 183.579, -71.6039, 0.22", "-48.426, 183.919, -71.4853, 0.66", "-48.5433, 184.288, -71.3674, 0.88", "-48.6204, 184.611, -71.2582, 0.88", "-48.922, 186.121, -70.7315, 0.15", "-48.9468, 186.302, -70.669, 0.29", "-49.1564, 187.923, -70.0497, 0.22", "-49.2224, 188.429, -69.8424, 0.37", "-49.3964, 189.629, -69.3352, 0.22", "-49.5474, 190.609, -68.8887, 1.33", "-49.5785, 190.801, -68.7925, 1.62", "-49.8653, 192.216, -68.0021, 0.22", "-50.097, 193.141, -67.3996, 0.22", "-50.545, 194.642, -66.2961, 0.22", "-50.746, 195.235, -65.816, 0.96", "-50.9081, 195.686, -65.4033, 1.18", "-51.2612, 196.597, -64.4207, 0.22", "-51.5025, 197.13, -63.7091, 0.22", "-51.7549, 197.634, -62.9311, 1.11", "-51.8282, 197.768, -62.699, 1.4", "-51.9584, 198.032, -62.2978, 1.4", "-52.3461, 198.976, -61.0967, 0.22", "-52.5138, 199.532, -60.5147, 0.22", "-52.6515, 200.109, -60.0278, 0.44", "-52.6957, 200.34, -59.8637, 0.44", "-52.8874, 201.47, -59.1521, 0.22", "-52.9788, 202.139, -58.7855, 0.66", "-53.0445, 202.758, -58.4946, 0.66", "-53.1032, 203.572, -58.1121, 0.22", "-53.1323, 204.017, -57.8844, 0.44", "-53.1595, 204.41, -57.6692, 0.44", "-53.2069, 205.153, -57.237, 0.22", "-53.223, 205.439, -57.0658, 0.37", "-53.2807, 206.473, -56.4512, 0.22", "-53.2889, 206.969, -56.1525, 0.52", "-53.2852, 207.218, -55.9984, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "axon_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "axon_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_NBC_ad3dd575d2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, axon_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, axon_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.49999920512097007)
    connect dend_22(0), soma_0(0.49999920512097007)
    connect dend_17(0), soma_0(0.49999920512097007)
    connect dend_0(0), soma_0(0.49999920512097007)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.94345, -11.2623, 0.984599, 4.09477 ) }
    soma_0 { pt3dadd( -6.27697, -10.213, 0.889449, 7.03886 ) }
    soma_0 { pt3dadd( -5.61048, -9.16359, 0.794299, 9.0513 ) }
    soma_0 { pt3dadd( -4.94399, -8.11421, 0.699149, 10.7049 ) }
    soma_0 { pt3dadd( -4.2775, -7.06483, 0.603999, 12.1545 ) }
    soma_0 { pt3dadd( -3.61101, -6.01545, 0.508849, 13.4148 ) }
    soma_0 { pt3dadd( -2.94452, -4.96607, 0.413699, 14.3077 ) }
    soma_0 { pt3dadd( -2.27803, -3.91669, 0.318549, 14.7157 ) }
    soma_0 { pt3dadd( -1.61155, -2.86731, 0.223399, 14.8034 ) }
    soma_0 { pt3dadd( -0.945058, -1.81793, 0.128249, 14.7825 ) }
    soma_0 { pt3dadd( -0.278569, -0.768556, 0.0330986, 14.484 ) }
    soma_0 { pt3dadd( 0.387919, 0.280823, -0.0620515, 14.2451 ) }
    soma_0 { pt3dadd( 1.05441, 1.3302, -0.157201, 13.4939 ) }
    soma_0 { pt3dadd( 1.7209, 2.37958, -0.252352, 12.4612 ) }
    soma_0 { pt3dadd( 2.38738, 3.42896, -0.347502, 11.3514 ) }
    soma_0 { pt3dadd( 3.05387, 4.47834, -0.442652, 10.0759 ) }
    soma_0 { pt3dadd( 3.72036, 5.52772, -0.537802, 8.68542 ) }
    soma_0 { pt3dadd( 4.38685, 6.5771, -0.632952, 7.03735 ) }
    soma_0 { pt3dadd( 5.05334, 7.62648, -0.728102, 5.61823 ) }
    soma_0 { pt3dadd( 5.71983, 8.67585, -0.823252, 4.41136 ) }
    soma_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 2.8094 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.13964, -5.96464, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -2.13964, -5.96464, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.62592, -6.73954, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.15255, -7.67465, -15.2265, 0.88 ) }
    dend_31 { pt3dadd( -0.791823, -8.66923, -15.2821, 0.96 ) }
    dend_31 { pt3dadd( -0.47069, -9.94879, -15.3699, 0.52 ) }
    dend_31 { pt3dadd( -0.373991, -10.589, -15.4187, 0.44 ) }
    dend_31 { pt3dadd( -0.415885, -11.6466, -15.5142, 0.37 ) }
    dend_31 { pt3dadd( -0.749178, -12.5856, -15.6172, 0.96 ) }
    dend_31 { pt3dadd( -1.12649, -13.1303, -15.6825, 1.18 ) }
    dend_31 { pt3dadd( -1.40363, -13.414, -15.738, 1.18 ) }
    dend_31 { pt3dadd( -1.77824, -13.7503, -15.8468, 0.88 ) }
    dend_31 { pt3dadd( -2.23684, -14.1866, -16.0368, 0.66 ) }
    dend_31 { pt3dadd( -2.68592, -14.6963, -16.3246, 0.52 ) }
    dend_31 { pt3dadd( -3.06955, -15.309, -16.7853, 0.37 ) }
    dend_31 { pt3dadd( -3.35752, -16.0602, -17.5114, 0.37 ) }
    dend_31 { pt3dadd( -3.52187, -16.746, -18.2991, 1.11 ) }
    dend_31 { pt3dadd( -3.59592, -17.1766, -18.8494, 1.33 ) }
    dend_31 { pt3dadd( -3.64631, -17.5221, -19.3146, 1.4 ) }
    dend_31 { pt3dadd( -3.76884, -18.2497, -20.3597, 0.66 ) }
    dend_31 { pt3dadd( -3.92968, -18.7271, -21.1118, 0.52 ) }
    dend_31 { pt3dadd( -4.25364, -19.2052, -21.8586, 0.59 ) }
    dend_31 { pt3dadd( -4.52965, -19.4754, -22.2502, 0.66 ) }
    dend_31 { pt3dadd( -4.91761, -19.8187, -22.7128, 0.66 ) }
    dend_31 { pt3dadd( -5.24366, -20.1131, -23.0649, 0.37 ) }
    dend_31 { pt3dadd( -5.81368, -20.764, -23.7586, 0.29 ) }
    dend_31 { pt3dadd( -6.00597, -21.0941, -24.1401, 0.29 ) }
    dend_31 { pt3dadd( -6.29235, -21.8899, -25.1017, 1.4 ) }
    dend_31 { pt3dadd( -6.40767, -22.364, -25.6537, 1.84 ) }
    dend_31 { pt3dadd( -6.46932, -22.7562, -26.104, 1.84 ) }
    dend_31 { pt3dadd( -6.58118, -23.8881, -27.4079, 0.81 ) }
    dend_31 { pt3dadd( -6.64658, -24.9525, -28.6484, 0.37 ) }
    dend_31 { pt3dadd( -6.67769, -25.4803, -29.3221, 0.37 ) }
    dend_31 { pt3dadd( -6.71832, -26.1156, -30.1782, 1.55 ) }
    dend_31 { pt3dadd( -6.75797, -26.7192, -31.0753, 2.06 ) }
    dend_31 { pt3dadd( -6.8013, -27.2193, -31.8662, 2.21 ) }
    dend_31 { pt3dadd( -6.90495, -28.3979, -33.7823, 0.66 ) }
    dend_31 { pt3dadd( -7.00698, -29.6253, -35.8176, 0.66 ) }
    dend_31 { pt3dadd( -7.04423, -30.1852, -36.8069, 0.88 ) }
    dend_31 { pt3dadd( -7.11087, -31.49, -39.3191, 1.77 ) }
    dend_31 { pt3dadd( -7.1527, -32.1786, -40.6917, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.29965, -8.28114, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.29965, -8.28114, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.71309, -8.96938, 1.08432, 1.25 ) }
    dend_22 { pt3dadd( -9.46666, -10.3152, 1.39968, 1.11 ) }
    dend_22 { pt3dadd( -10.0643, -11.3825, 1.64979, 1.55 ) }
    dend_22 { pt3dadd( -10.5191, -12.1947, 1.84012, 1.92 ) }
    dend_22 { pt3dadd( -11.0618, -13.1641, 2.06726, 2.14 ) }
    dend_22 { pt3dadd( -11.5044, -13.9851, 2.26676, 2.14 ) }
    dend_22 { pt3dadd( -11.8612, -14.7145, 2.45918, 2.14 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.83964, -11.7149, -0.944109, 1.62 ) }
    dend_17 { pt3dadd( -5.06984, -12.3225, -0.852641, 1.62 ) }
    dend_17 { pt3dadd( -5.43331, -13.286, -0.694665, 1.47 ) }
    dend_17 { pt3dadd( -5.73917, -14.1108, -0.556096, 1.18 ) }
    dend_17 { pt3dadd( -6.07734, -15.0327, -0.402942, 1.18 ) }
    dend_17 { pt3dadd( -6.38271, -15.8812, -0.272424, 1.77 ) }
    dend_17 { pt3dadd( -6.54452, -16.3497, -0.208791, 2.14 ) }
    dend_17 { pt3dadd( -6.76037, -17.0006, -0.111248, 2.65 ) }
    dend_17 { pt3dadd( -6.93558, -17.5202, -0.032178, 2.73 ) }
    dend_17 { pt3dadd( -7.19766, -18.2437, 0.0685818, 2.5 ) }
    dend_17 { pt3dadd( -7.60428, -19.2669, 0.191312, 1.92 ) }
    dend_17 { pt3dadd( -8.10667, -20.4443, 0.319172, 1.47 ) }
    dend_17 { pt3dadd( -8.7191, -21.7533, 0.451599, 1.18 ) }
    dend_17 { pt3dadd( -9.12957, -22.5482, 0.530427, 1.03 ) }
    dend_17 { pt3dadd( -9.79484, -23.691, 0.637245, 1.47 ) }
    dend_17 { pt3dadd( -10.152, -24.2325, 0.68106, 1.99 ) }
    dend_17 { pt3dadd( -10.425, -24.6197, 0.705735, 2.43 ) }
    dend_17 { pt3dadd( -10.7279, -25.0621, 0.725436, 2.65 ) }
    dend_17 { pt3dadd( -11.0594, -25.6378, 0.735795, 2.36 ) }
    dend_17 { pt3dadd( -11.4891, -26.672, 0.725392, 1.77 ) }
    dend_17 { pt3dadd( -11.8991, -28.2522, 0.684446, 1.33 ) }
    dend_17 { pt3dadd( -12.0667, -29.3824, 0.644125, 1.33 ) }
    dend_17 { pt3dadd( -12.1408, -30.5377, 0.60092, 1.55 ) }
    dend_17 { pt3dadd( -12.115, -31.905, 0.561661, 1.25 ) }
    dend_17 { pt3dadd( -11.9709, -33.3512, 0.550947, 1.11 ) }
    dend_17 { pt3dadd( -11.735, -34.6236, 0.568103, 1.55 ) }
    dend_17 { pt3dadd( -11.5592, -35.2949, 0.581604, 2.06 ) }
    dend_17 { pt3dadd( -11.4347, -35.7121, 0.594606, 2.43 ) }
    dend_17 { pt3dadd( -11.2544, -36.2895, 0.625011, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -11.0515, -36.9589, 0.709459, 2.95 ) }
    dend_17 { pt3dadd( -10.9192, -37.4844, 0.865484, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 2/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.93036, 10.4251, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 5.93036, 10.4251, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 6.36995, 11.4412, -0.448019, 3.54 ) }
    dend_0 { pt3dadd( 6.86363, 12.5822, -0.373798, 3.54 ) }
    dend_0 { pt3dadd( 7.17993, 13.3133, -0.326245, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 0.7173 ) }
    axon_0 { pt3dadd( 14.4283, 22.3872, -0.918402, 0.7173 ) }
    axon_0 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.7173 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.1527, -32.1786, -40.6917, 0.88 ) }
    dend_33 { pt3dadd( -6.4368, -32.6097, -41.3876, 0.88 ) }
    dend_33 { pt3dadd( -5.75918, -33.0049, -41.9853, 0.52 ) }
    dend_33 { pt3dadd( -5.24283, -33.2908, -42.405, 0.29 ) }
    dend_33 { pt3dadd( -4.59672, -33.6408, -42.9472, 0.22 ) }
    dend_33 { pt3dadd( -3.94032, -34.0006, -43.5023, 1.33 ) }
    dend_33 { pt3dadd( -3.38563, -34.3008, -43.9974, 1.47 ) }
    dend_33 { pt3dadd( -2.81199, -34.6131, -44.5195, 0.15 ) }
    dend_33 { pt3dadd( -2.38697, -34.8469, -44.8892, 0.15 ) }
    dend_33 { pt3dadd( -1.4437, -35.3644, -45.7381, 0.81 ) }
    dend_33 { pt3dadd( -1.27823, -35.4537, -45.8919, 0.96 ) }
    dend_33 { pt3dadd( 0.195377, -36.2364, -47.2913, 0.22 ) }
    dend_33 { pt3dadd( 0.378284, -36.3339, -47.4796, 0.74 ) }
    dend_33 { pt3dadd( 0.700247, -36.5149, -47.8417, 0.74 ) }
    dend_33 { pt3dadd( 1.77848, -37.131, -49.1502, 0.22 ) }
    dend_33 { pt3dadd( 2.06622, -37.2999, -49.5147, 0.88 ) }
    dend_33 { pt3dadd( 2.22246, -37.3939, -49.727, 1.11 ) }
    dend_33 { pt3dadd( 3.37534, -38.1053, -51.4367, 0.22 ) }
    dend_33 { pt3dadd( 4.0684, -38.5236, -52.5124, 1.62 ) }
    dend_33 { pt3dadd( 4.50065, -38.7862, -53.2044, 2.06 ) }
    dend_33 { pt3dadd( 5.25997, -39.2861, -54.4642, 0.81 ) }
    dend_33 { pt3dadd( 5.82686, -39.6934, -55.4469, 1.33 ) }
    dend_33 { pt3dadd( 6.69986, -40.3897, -57.0073, 0.22 ) }
    dend_33 { pt3dadd( 7.28202, -40.8998, -58.0404, 1.33 ) }
    dend_33 { pt3dadd( 7.52743, -41.1345, -58.5113, 1.62 ) }
    dend_33 { pt3dadd( 8.42318, -42.0919, -60.3473, 0.59 ) }
    dend_33 { pt3dadd( 9.00953, -42.8069, -61.6956, 0.22 ) }
    dend_33 { pt3dadd( 9.29405, -43.2433, -62.5072, 0.74 ) }
    dend_33 { pt3dadd( 9.40568, -43.4631, -62.8942, 0.96 ) }
    dend_33 { pt3dadd( 9.82403, -44.4908, -64.6697, 0.29 ) }
    dend_33 { pt3dadd( 9.96367, -44.9507, -65.5161, 1.18 ) }
    dend_33 { pt3dadd( 10.0199, -45.2399, -66.0763, 1.4 ) }
    dend_33 { pt3dadd( 10.1679, -46.4146, -68.3574, 0.22 ) }
    dend_33 { pt3dadd( 10.1864, -46.7622, -69.0593, 1.03 ) }
    dend_33 { pt3dadd( 10.1797, -46.9809, -69.5024, 1.18 ) }
    dend_33 { pt3dadd( 9.99415, -48.4873, -72.5485, 0.44 ) }
    dend_33 { pt3dadd( 9.86731, -49.1007, -73.8611, 0.22 ) }
    dend_33 { pt3dadd( 9.81301, -49.3163, -74.3275, 1.18 ) }
    dend_33 { pt3dadd( 9.64625, -49.9145, -75.6537, 1.18 ) }
    dend_33 { pt3dadd( 9.5132, -50.343, -76.6558, 1.62 ) }
    dend_33 { pt3dadd( 9.31375, -51.0369, -78.3127, 1.84 ) }
    dend_33 { pt3dadd( 9.24971, -51.319, -78.995, 1.99 ) }
    dend_33 { pt3dadd( 9.1013, -52.3554, -81.6093, 0.22 ) }
    dend_33 { pt3dadd( 9.05137, -53.0072, -83.31, 1.47 ) }
    dend_33 { pt3dadd( 9.0531, -53.5459, -84.6889, 1.69 ) }
    dend_33 { pt3dadd( 9.07118, -53.8799, -85.5688, 1.4 ) }
    dend_33 { pt3dadd( 9.15096, -54.55, -87.3601, 0.81 ) }
    dend_33 { pt3dadd( 9.31716, -55.4513, -89.8265, 1.03 ) }
    dend_33 { pt3dadd( 9.54158, -56.4671, -92.7513, 0.22 ) }
    dend_33 { pt3dadd( 9.62746, -56.7638, -93.6032, 1.47 ) }
    dend_33 { pt3dadd( 9.91219, -57.529, -95.6924, 1.62 ) }
    dend_33 { pt3dadd( 10.1464, -58.0704, -97.1223, 0.29 ) }
    dend_33 { pt3dadd( 10.4919, -58.684, -98.7118, 1.18 ) }
    dend_33 { pt3dadd( 10.8784, -59.1972, -100.0, 1.47 ) }
    dend_33 { pt3dadd( 11.4724, -59.8263, -101.542, 0.15 ) }
    dend_33 { pt3dadd( 11.8874, -60.2399, -102.528, 0.15 ) }
    dend_33 { pt3dadd( 12.3335, -60.6584, -103.414, 1.18 ) }
    dend_33 { pt3dadd( 13.0925, -61.407, -104.814, 0.22 ) }
    dend_33 { pt3dadd( 13.3894, -61.7209, -105.361, 0.22 ) }
    dend_33 { pt3dadd( 13.9386, -62.3234, -106.436, 0.88 ) }
    dend_33 { pt3dadd( 14.2222, -62.6634, -107.059, 0.88 ) }
    dend_33 { pt3dadd( 14.5715, -63.0842, -107.882, 1.11 ) }
    dend_33 { pt3dadd( 14.9451, -63.5099, -108.753, 1.33 ) }
    dend_33 { pt3dadd( 16.1438, -64.8059, -111.577, 0.22 ) }
    dend_33 { pt3dadd( 16.7238, -65.4142, -112.999, 1.03 ) }
    dend_33 { pt3dadd( 16.8096, -65.4996, -113.213, 1.25 ) }
    dend_33 { pt3dadd( 17.7656, -66.4093, -115.568, 0.22 ) }
    dend_33 { pt3dadd( 18.2348, -66.8349, -116.725, 1.33 ) }
    dend_33 { pt3dadd( 18.5211, -67.0856, -117.41, 1.4 ) }
    dend_33 { pt3dadd( 19.418, -67.9317, -119.613, 0.22 ) }
    dend_33 { pt3dadd( 19.8454, -68.3628, -120.735, 0.74 ) }
    dend_33 { pt3dadd( 20.5121, -69.084, -122.65, 0.22 ) }
    dend_33 { pt3dadd( 21.1328, -69.8166, -124.551, 1.4 ) }
    dend_33 { pt3dadd( 21.3415, -70.0821, -125.222, 1.47 ) }
    dend_33 { pt3dadd( 22.0853, -71.0421, -127.647, 0.15 ) }
    dend_33 { pt3dadd( 22.6512, -71.7514, -129.506, 1.25 ) }
    dend_33 { pt3dadd( 22.8645, -72.0251, -130.254, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -7.1527, -32.1786, -40.6917, 1.92 ) }
    dend_32 { pt3dadd( -8.18125, -32.8372, -42.0263, 1.92 ) }
    dend_32 { pt3dadd( -9.09264, -33.4448, -43.2439, 1.77 ) }
    dend_32 { pt3dadd( -10.2128, -34.2265, -44.7338, 2.21 ) }
    dend_32 { pt3dadd( -11.0431, -34.8605, -45.904, 0.22 ) }
    dend_32 { pt3dadd( -11.321, -35.0858, -46.3238, 0.22 ) }
    dend_32 { pt3dadd( -11.8873, -35.5677, -47.2164, 0.22 ) }
    dend_32 { pt3dadd( -12.534, -36.171, -48.3438, 1.47 ) }
    dend_32 { pt3dadd( -12.7192, -36.3586, -48.6999, 1.77 ) }
    dend_32 { pt3dadd( -13.4849, -37.1795, -50.2869, 0.52 ) }
    dend_32 { pt3dadd( -14.0593, -37.8062, -51.5563, 1.25 ) }
    dend_32 { pt3dadd( -14.2694, -38.0428, -52.0425, 1.4 ) }
    dend_32 { pt3dadd( -14.868, -38.8128, -53.595, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -15.3558, -39.5114, -54.9574, 1.62 ) }
    dend_32 { pt3dadd( -15.5401, -39.7921, -55.5271, 1.84 ) }
    dend_32 { pt3dadd( -15.9267, -40.4442, -56.8206, 0.52 ) }
    dend_32 { pt3dadd( -16.308, -41.1668, -58.216, 1.69 ) }
    dend_32 { pt3dadd( -16.525, -41.6301, -59.0686, 2.06 ) }
    dend_32 { pt3dadd( -16.66, -41.9751, -59.6554, 2.21 ) }
    dend_32 { pt3dadd( -17.3574, -43.8649, -62.759, 0.44 ) }
    dend_32 { pt3dadd( -17.5253, -44.3748, -63.6016, 0.81 ) }
    dend_32 { pt3dadd( -17.5753, -44.5654, -63.9023, 0.81 ) }
    dend_32 { pt3dadd( -17.6744, -44.965, -64.4972, 0.59 ) }
    dend_32 { pt3dadd( -17.7291, -45.2069, -64.8319, 0.88 ) }
    dend_32 { pt3dadd( -17.8603, -45.9942, -65.8287, 0.37 ) }
    dend_32 { pt3dadd( -18.115, -47.9007, -67.9912, 1.4 ) }
    dend_32 { pt3dadd( -18.1805, -48.3798, -68.5297, 1.92 ) }
    dend_32 { pt3dadd( -18.4079, -49.7233, -70.2043, 0.22 ) }
    dend_32 { pt3dadd( -18.5015, -50.1946, -70.8323, 0.22 ) }
    dend_32 { pt3dadd( -18.58, -50.5189, -71.2723, 0.22 ) }
    dend_32 { pt3dadd( -18.7991, -51.2585, -72.2551, 1.84 ) }
    dend_32 { pt3dadd( -18.8595, -51.4129, -72.4862, 2.06 ) }
    dend_32 { pt3dadd( -19.6938, -53.2214, -75.5355, 0.22 ) }
    dend_32 { pt3dadd( -19.8469, -53.4959, -76.0468, 0.22 ) }
    dend_32 { pt3dadd( -19.9828, -53.6958, -76.4482, 0.96 ) }
    dend_32 { pt3dadd( -20.145, -53.9052, -76.8833, 1.18 ) }
    dend_32 { pt3dadd( -21.3456, -55.322, -79.9012, 0.44 ) }
    dend_32 { pt3dadd( -21.5561, -55.5636, -80.3902, 1.18 ) }
    dend_32 { pt3dadd( -21.8283, -55.8618, -80.9561, 1.18 ) }
    dend_32 { pt3dadd( -22.4636, -56.546, -82.3003, 1.33 ) }
    dend_32 { pt3dadd( -22.7691, -56.8873, -82.949, 1.47 ) }
    dend_32 { pt3dadd( -23.6369, -57.9119, -84.7295, 0.29 ) }
    dend_32 { pt3dadd( -24.0722, -58.4554, -85.5589, 1.4 ) }
    dend_32 { pt3dadd( -24.3079, -58.7683, -86.0613, 1.62 ) }
    dend_32 { pt3dadd( -25.2496, -60.1605, -88.4272, 0.22 ) }
    dend_32 { pt3dadd( -25.4275, -60.4482, -88.916, 0.81 ) }
    dend_32 { pt3dadd( -25.6362, -60.7994, -89.5086, 0.29 ) }
    dend_32 { pt3dadd( -25.9173, -61.2939, -90.3101, 1.11 ) }
    dend_32 { pt3dadd( -26.8204, -62.8891, -92.8997, 0.59 ) }
    dend_32 { pt3dadd( -27.7471, -64.4663, -95.3366, 0.22 ) }
    dend_32 { pt3dadd( -28.0278, -64.9189, -96.0064, 0.22 ) }
    dend_32 { pt3dadd( -28.4149, -65.4891, -96.8615, 1.69 ) }
    dend_32 { pt3dadd( -28.6471, -65.7924, -97.3453, 2.14 ) }
    dend_32 { pt3dadd( -29.7139, -67.0704, -99.3557, 0.22 ) }
    dend_32 { pt3dadd( -30.1839, -67.5859, -100.113, 1.92 ) }
    dend_32 { pt3dadd( -30.4586, -67.8644, -100.527, 2.21 ) }
    dend_32 { pt3dadd( -30.8203, -68.2154, -101.079, 2.21 ) }
    dend_32 { pt3dadd( -32.5661, -69.9023, -103.751, 0.22 ) }
    dend_32 { pt3dadd( -32.7308, -70.0643, -104.005, 0.44 ) }
    dend_32 { pt3dadd( -33.1417, -70.503, -104.641, 0.29 ) }
    dend_32 { pt3dadd( -33.6578, -71.1014, -105.475, 1.03 ) }
    dend_32 { pt3dadd( -33.8125, -71.2917, -105.727, 0.81 ) }
    dend_32 { pt3dadd( -34.1804, -71.7894, -106.28, 0.29 ) }
    dend_32 { pt3dadd( -34.5977, -72.3873, -106.828, 1.11 ) }
    dend_32 { pt3dadd( -34.76, -72.6138, -107.082, 1.33 ) }
    dend_32 { pt3dadd( -34.9584, -72.8966, -107.42, 1.33 ) }
    dend_32 { pt3dadd( -36.2465, -74.7596, -109.669, 0.22 ) }
    dend_32 { pt3dadd( -36.7179, -75.4348, -110.53, 1.99 ) }
    dend_32 { pt3dadd( -36.9243, -75.7208, -110.903, 2.43 ) }
    dend_32 { pt3dadd( -38.5129, -77.8872, -113.776, 0.22 ) }
    dend_32 { pt3dadd( -38.7318, -78.1725, -114.195, 0.59 ) }
    dend_32 { pt3dadd( -38.8872, -78.3858, -114.504, 0.59 ) }
    dend_32 { pt3dadd( -39.467, -79.1981, -115.673, 0.22 ) }
    dend_32 { pt3dadd( -39.7069, -79.541, -116.174, 1.25 ) }
    dend_32 { pt3dadd( -40.0231, -80.0311, -116.876, 1.62 ) }
    dend_32 { pt3dadd( -41.1383, -81.9118, -119.374, 0.22 ) }
    dend_32 { pt3dadd( -41.5614, -82.6582, -120.372, 0.22 ) }
    dend_32 { pt3dadd( -41.732, -82.9947, -120.8, 0.96 ) }
    dend_32 { pt3dadd( -41.8298, -83.2239, -121.073, 1.33 ) }
    dend_32 { pt3dadd( -42.4345, -84.9177, -123.063, 0.22 ) }
    dend_32 { pt3dadd( -42.5277, -85.2353, -123.448, 0.74 ) }
    dend_32 { pt3dadd( -42.5998, -85.5613, -123.839, 0.74 ) }
    dend_32 { pt3dadd( -42.6802, -85.991, -124.383, 0.22 ) }
    dend_32 { pt3dadd( -42.819, -86.9029, -125.528, 1.84 ) }
    dend_32 { pt3dadd( -42.8866, -87.4148, -126.171, 2.14 ) }
    dend_32 { pt3dadd( -43.1054, -89.4138, -128.624, 0.22 ) }
    dend_32 { pt3dadd( -43.1406, -89.7591, -129.051, 0.22 ) }
    dend_32 { pt3dadd( -43.2114, -90.4615, -129.91, 1.55 ) }
    dend_32 { pt3dadd( -43.2587, -90.8938, -130.43, 1.84 ) }
    dend_32 { pt3dadd( -43.4286, -92.1714, -131.969, 0.22 ) }
    dend_32 { pt3dadd( -43.5011, -92.6264, -132.52, 0.52 ) }
    dend_32 { pt3dadd( -43.6441, -93.2384, -133.384, 0.22 ) }
    dend_32 { pt3dadd( -43.8798, -93.956, -134.575, 1.03 ) }
    dend_32 { pt3dadd( -43.9358, -94.0963, -134.827, 1.18 ) }
    dend_32 { pt3dadd( -44.5224, -95.4045, -137.308, 1.25 ) }
    dend_32 { pt3dadd( -44.7149, -95.7841, -138.064, 1.62 ) }
    dend_32 { pt3dadd( -45.5786, -97.3956, -141.282, 0.22 ) }
    dend_32 { pt3dadd( -45.8575, -97.8721, -142.282, 0.22 ) }
    dend_32 { pt3dadd( -46.0947, -98.2654, -143.088, 1.47 ) }
    dend_32 { pt3dadd( -46.4155, -98.7895, -144.142, 1.62 ) }
    dend_32 { pt3dadd( -46.9266, -99.6187, -145.807, 0.22 ) }
    dend_32 { pt3dadd( -47.0872, -99.8823, -146.379, 0.96 ) }
    dend_32 { pt3dadd( -47.9442, -101.367, -149.593, 0.22 ) }
    dend_32 { pt3dadd( -48.1394, -101.701, -150.371, 1.18 ) }
    dend_32 { pt3dadd( -48.4446, -102.189, -151.561, 1.4 ) }
    dend_32 { pt3dadd( -49.0723, -103.134, -153.851, 1.03 ) }
    dend_32 { pt3dadd( -50.0405, -104.499, -157.158, 0.22 ) }
    dend_32 { pt3dadd( -50.2893, -104.828, -157.958, 1.47 ) }
    dend_32 { pt3dadd( -50.698, -105.322, -159.179, 1.55 ) }
    dend_32 { pt3dadd( -51.1703, -105.85, -160.509, 0.22 ) }
    dend_32 { pt3dadd( -51.6023, -106.306, -161.596, 0.22 ) }
    dend_32 { pt3dadd( -51.8309, -106.525, -162.084, 1.11 ) }
    dend_32 { pt3dadd( -52.2339, -106.853, -162.908, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -53.7186, -107.913, -165.964, 0.22 ) }
    dend_32 { pt3dadd( -53.9275, -108.053, -166.394, 1.18 ) }
    dend_32 { pt3dadd( -54.1959, -108.218, -166.97, 1.18 ) }
    dend_32 { pt3dadd( -54.8303, -108.598, -168.367, 0.66 ) }
    dend_32 { pt3dadd( -56.6229, -109.647, -172.31, 0.22 ) }
    dend_32 { pt3dadd( -57.0035, -109.86, -173.109, 0.22 ) }
    dend_32 { pt3dadd( -57.5902, -110.166, -174.271, 1.18 ) }
    dend_32 { pt3dadd( -58.1063, -110.412, -175.32, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.8612, -14.7145, 2.45918, 0.59 ) }
    dend_24 { pt3dadd( -13.6512, -15.3418, 2.49899, 0.59 ) }
    dend_24 { pt3dadd( -14.4193, -15.5317, 2.47493, 0.66 ) }
    dend_24 { pt3dadd( -15.0256, -15.6148, 2.44927, 0.81 ) }
    dend_24 { pt3dadd( -15.3913, -15.6288, 2.43581, 0.81 ) }
    dend_24 { pt3dadd( -16.1161, -15.634, 2.42837, 0.81 ) }
    dend_24 { pt3dadd( -17.0717, -15.6403, 2.49297, 0.96 ) }
    dend_24 { pt3dadd( -17.6253, -15.5936, 2.55652, 0.66 ) }
    dend_24 { pt3dadd( -18.3198, -15.5107, 2.67447, 0.37 ) }
    dend_24 { pt3dadd( -19.0017, -15.4068, 2.83026, 0.37 ) }
    dend_24 { pt3dadd( -19.8628, -15.2663, 3.09466, 1.18 ) }
    dend_24 { pt3dadd( -20.8873, -15.1109, 3.55739, 1.69 ) }
    dend_24 { pt3dadd( -21.1964, -15.1009, 3.76478, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.8612, -14.7145, 2.45918, 1.25 ) }
    dend_23 { pt3dadd( -12.2703, -15.8813, 2.14743, 1.25 ) }
    dend_23 { pt3dadd( -12.7616, -17.08, 1.84598, 0.74 ) }
    dend_23 { pt3dadd( -13.1248, -17.8608, 1.66559, 0.96 ) }
    dend_23 { pt3dadd( -13.6173, -18.7966, 1.47227, 1.18 ) }
    dend_23 { pt3dadd( -14.0214, -19.4989, 1.37575, 1.47 ) }
    dend_23 { pt3dadd( -14.4425, -20.2105, 1.31418, 1.47 ) }
    dend_23 { pt3dadd( -14.808, -20.7668, 1.30541, 1.55 ) }
    dend_23 { pt3dadd( -15.2522, -21.4093, 1.35673, 1.55 ) }
    dend_23 { pt3dadd( -15.7117, -22.0978, 1.4465, 1.33 ) }
    dend_23 { pt3dadd( -16.4257, -23.2163, 1.64256, 1.11 ) }
    dend_23 { pt3dadd( -16.8395, -23.9289, 1.7431, 0.96 ) }
    dend_23 { pt3dadd( -17.1629, -24.5763, 1.76303, 0.81 ) }
    dend_23 { pt3dadd( -17.5147, -25.4822, 1.4748, 0.66 ) }
    dend_23 { pt3dadd( -17.7159, -26.1464, 1.05664, 0.52 ) }
    dend_23 { pt3dadd( -17.8367, -26.5854, 0.693394, 0.52 ) }
    dend_23 { pt3dadd( -18.0552, -27.3271, -0.00731231, 1.11 ) }
    dend_23 { pt3dadd( -18.433, -28.4661, -1.14346, 1.55 ) }
    dend_23 { pt3dadd( -19.2683, -30.7436, -3.46413, 1.33 ) }
    dend_23 { pt3dadd( -19.6108, -31.5735, -4.3158, 0.88 ) }
    dend_23 { pt3dadd( -19.9615, -32.306, -5.02649, 1.18 ) }
    dend_23 { pt3dadd( -20.3663, -33.0383, -5.628, 1.84 ) }
    dend_23 { pt3dadd( -20.6754, -33.5056, -5.88842, 2.21 ) }
    dend_23 { pt3dadd( -21.0478, -33.9941, -6.01028, 2.36 ) }
    dend_23 { pt3dadd( -21.4101, -34.4271, -6.01576, 2.5 ) }
    dend_23 { pt3dadd( -21.8839, -34.9734, -6.00726, 2.28 ) }
    dend_23 { pt3dadd( -22.5263, -35.7335, -5.99756, 1.92 ) }
    dend_23 { pt3dadd( -23.2862, -36.6582, -6.02809, 1.18 ) }
    dend_23 { pt3dadd( -23.799, -37.2907, -6.08618, 0.96 ) }
    dend_23 { pt3dadd( -24.3145, -37.9299, -6.19902, 0.66 ) }
    dend_23 { pt3dadd( -24.9709, -38.7587, -6.44117, 0.44 ) }
    dend_23 { pt3dadd( -25.7695, -39.7995, -6.89045, 1.77 ) }
    dend_23 { pt3dadd( -26.2474, -40.445, -7.24091, 2.28 ) }
    dend_23 { pt3dadd( -26.5773, -40.916, -7.54487, 2.28 ) }
    dend_23 { pt3dadd( -26.9751, -41.5306, -7.97227, 2.43 ) }
    dend_23 { pt3dadd( -27.4392, -42.3113, -8.50839, 1.92 ) }
    dend_23 { pt3dadd( -28.0269, -43.3934, -9.20867, 0.81 ) }
    dend_23 { pt3dadd( -28.4551, -44.2342, -9.69197, 0.96 ) }
    dend_23 { pt3dadd( -28.9098, -45.1496, -10.1207, 1.18 ) }
    dend_23 { pt3dadd( -29.1958, -45.7109, -10.3259, 0.96 ) }
    dend_23 { pt3dadd( -29.6522, -46.5204, -10.5122, 0.44 ) }
    dend_23 { pt3dadd( -30.0224, -47.0803, -10.5738, 0.96 ) }
    dend_23 { pt3dadd( -30.2377, -47.3812, -10.5847, 1.11 ) }
    dend_23 { pt3dadd( -30.8439, -48.1487, -10.5679, 0.52 ) }
    dend_23 { pt3dadd( -31.3714, -48.7336, -10.5047, 0.44 ) }
    dend_23 { pt3dadd( -32.3103, -49.6235, -10.3797, 1.03 ) }
    dend_23 { pt3dadd( -32.9195, -50.1106, -10.2866, 1.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.9192, -37.4844, 0.865484, 0.81 ) }
    dend_21 { pt3dadd( -10.5988, -39.2875, -3.29447, 0.81 ) }
    dend_21 { pt3dadd( -10.5549, -40.0179, -5.19096, 1.18 ) }
    dend_21 { pt3dadd( -10.5562, -40.4732, -6.32155, 1.25 ) }
    dend_21 { pt3dadd( -10.5339, -41.2495, -8.19452, 0.66 ) }
    dend_21 { pt3dadd( -10.5141, -41.5295, -8.83045, 0.52 ) }
    dend_21 { pt3dadd( -10.4576, -42.1028, -10.0344, 0.66 ) }
    dend_21 { pt3dadd( -10.4426, -42.4515, -10.6968, 0.88 ) }
    dend_21 { pt3dadd( -10.2439, -43.2111, -11.7115, 1.11 ) }
    dend_21 { pt3dadd( -9.76355, -44.1661, -12.9307, 1.25 ) }
    dend_21 { pt3dadd( -9.54696, -44.5323, -13.4171, 1.25 ) }
    dend_21 { pt3dadd( -9.32991, -44.8798, -13.8885, 0.96 ) }
    dend_21 { pt3dadd( -8.95777, -45.4542, -14.6636, 0.59 ) }
    dend_21 { pt3dadd( -8.27003, -46.4821, -16.1649, 1.18 ) }
    dend_21 { pt3dadd( -7.06987, -48.3021, -18.9222, 1.25 ) }
    dend_21 { pt3dadd( -6.24782, -49.6411, -20.8753, 1.25 ) }
    dend_21 { pt3dadd( -5.86367, -50.2982, -21.789, 1.69 ) }
    dend_21 { pt3dadd( -5.63331, -50.7359, -22.349, 1.77 ) }
    dend_21 { pt3dadd( -4.64466, -53.0828, -24.8866, 0.81 ) }
    dend_21 { pt3dadd( -4.31105, -54.0891, -25.785, 1.11 ) }
    dend_21 { pt3dadd( -4.06298, -54.9363, -26.3806, 0.96 ) }
    dend_21 { pt3dadd( -3.83189, -55.9684, -27.0068, 0.52 ) }
    dend_21 { pt3dadd( -3.64304, -57.392, -27.7947, 0.52 ) }
    dend_21 { pt3dadd( -3.53454, -59.8023, -28.9816, 2.21 ) }
    dend_21 { pt3dadd( -3.61118, -60.9155, -29.4275, 2.5 ) }
    dend_21 { pt3dadd( -3.67033, -61.3359, -29.6064, 2.5 ) }
    dend_21 { pt3dadd( -3.93565, -62.6064, -30.1837, 0.66 ) }
    dend_21 { pt3dadd( -4.22653, -63.6157, -30.6916, 1.25 ) }
    dend_21 { pt3dadd( -4.41276, -64.125, -30.9548, 1.47 ) }
    dend_21 { pt3dadd( -4.66598, -64.6577, -31.2296, 1.47 ) }
    dend_21 { pt3dadd( -5.16676, -65.5989, -31.682, 1.33 ) }
    dend_21 { pt3dadd( -5.4812, -66.1355, -31.955, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -5.97636, -66.9273, -32.3729, 0.29 ) }
    dend_21 { pt3dadd( -6.21857, -67.3255, -32.5933, 0.22 ) }
    dend_21 { pt3dadd( -6.52938, -67.8815, -32.8907, 0.22 ) }
    dend_21 { pt3dadd( -6.88789, -68.6337, -33.2352, 0.96 ) }
    dend_21 { pt3dadd( -7.087, -69.1423, -33.4161, 1.18 ) }
    dend_21 { pt3dadd( -7.21416, -69.6322, -33.5717, 0.96 ) }
    dend_21 { pt3dadd( -7.41919, -71.0765, -34.023, 0.22 ) }
    dend_21 { pt3dadd( -7.45467, -71.5943, -34.2003, 0.22 ) }
    dend_21 { pt3dadd( -7.47338, -72.4289, -34.5449, 0.88 ) }
    dend_21 { pt3dadd( -7.46795, -72.927, -34.7719, 1.11 ) }
    dend_21 { pt3dadd( -7.45918, -74.2341, -35.3859, 0.22 ) }
    dend_21 { pt3dadd( -7.46917, -75.5964, -36.1696, 1.77 ) }
    dend_21 { pt3dadd( -7.46746, -76.1427, -36.5907, 2.28 ) }
    dend_21 { pt3dadd( -7.4378, -77.0059, -37.4493, 2.28 ) }
    dend_21 { pt3dadd( -7.38689, -78.3401, -39.0752, 0.15 ) }
    dend_21 { pt3dadd( -7.34637, -78.8882, -39.8339, 0.74 ) }
    dend_21 { pt3dadd( -7.17871, -80.2519, -41.8913, 0.44 ) }
    dend_21 { pt3dadd( -6.87908, -81.9355, -44.465, 1.69 ) }
    dend_21 { pt3dadd( -6.61373, -83.1103, -46.2948, 2.28 ) }
    dend_21 { pt3dadd( -6.4542, -83.7356, -47.2699, 2.58 ) }
    dend_21 { pt3dadd( -6.07001, -85.228, -49.5858, 0.52 ) }
    dend_21 { pt3dadd( -5.82039, -86.2285, -51.0383, 0.29 ) }
    dend_21 { pt3dadd( -5.46077, -87.8967, -53.1578, 2.21 ) }
    dend_21 { pt3dadd( -5.22759, -89.2684, -54.704, 2.58 ) }
    dend_21 { pt3dadd( -4.95184, -91.6072, -57.116, 0.29 ) }
    dend_21 { pt3dadd( -4.90609, -92.3008, -57.7748, 0.22 ) }
    dend_21 { pt3dadd( -4.91668, -92.7663, -58.1876, 0.22 ) }
    dend_21 { pt3dadd( -4.99334, -93.5058, -58.801, 1.33 ) }
    dend_21 { pt3dadd( -5.10534, -94.0687, -59.2202, 1.55 ) }
    dend_21 { pt3dadd( -5.72914, -96.5266, -60.8735, 0.22 ) }
    dend_21 { pt3dadd( -5.91436, -97.1539, -61.2815, 0.96 ) }
    dend_21 { pt3dadd( -6.0293, -97.5373, -61.5606, 1.25 ) }
    dend_21 { pt3dadd( -6.15144, -97.9453, -61.9122, 1.25 ) }
    dend_21 { pt3dadd( -6.56998, -99.294, -63.2072, 0.22 ) }
    dend_21 { pt3dadd( -6.85984, -100.146, -64.068, 0.88 ) }
    dend_21 { pt3dadd( -6.96331, -100.442, -64.3811, 1.11 ) }
    dend_21 { pt3dadd( -7.16139, -101.062, -65.0404, 1.11 ) }
    dend_21 { pt3dadd( -7.79182, -103.143, -67.1227, 0.22 ) }
    dend_21 { pt3dadd( -8.01779, -103.897, -67.8277, 1.77 ) }
    dend_21 { pt3dadd( -8.16094, -104.381, -68.2519, 2.28 ) }
    dend_21 { pt3dadd( -8.35754, -105.044, -68.7792, 2.14 ) }
    dend_21 { pt3dadd( -8.9051, -106.956, -70.2032, 0.22 ) }
    dend_21 { pt3dadd( -9.16855, -107.917, -70.8377, 1.03 ) }
    dend_21 { pt3dadd( -9.28974, -108.419, -71.1474, 1.33 ) }
    dend_21 { pt3dadd( -9.65831, -110.067, -72.2504, 0.22 ) }
    dend_21 { pt3dadd( -9.78724, -110.655, -72.6708, 0.96 ) }
    dend_21 { pt3dadd( -9.92284, -111.262, -73.146, 1.25 ) }
    dend_21 { pt3dadd( -10.0004, -111.611, -73.4409, 1.33 ) }
    dend_21 { pt3dadd( -10.4698, -113.814, -75.4043, 0.15 ) }
    dend_21 { pt3dadd( -10.6425, -114.756, -76.2567, 1.18 ) }
    dend_21 { pt3dadd( -10.7501, -115.412, -76.8445, 1.55 ) }
    dend_21 { pt3dadd( -11.0061, -117.139, -78.3238, 0.22 ) }
    dend_21 { pt3dadd( -11.0751, -117.607, -78.6942, 0.96 ) }
    dend_21 { pt3dadd( -11.1703, -118.249, -79.1747, 0.96 ) }
    dend_21 { pt3dadd( -11.3622, -119.64, -80.111, 0.22 ) }
    dend_21 { pt3dadd( -11.412, -120.112, -80.3867, 0.66 ) }
    dend_21 { pt3dadd( -11.5167, -121.424, -81.1327, 0.22 ) }
    dend_21 { pt3dadd( -11.5726, -122.233, -81.5655, 1.4 ) }
    dend_21 { pt3dadd( -11.6144, -122.989, -81.9758, 1.84 ) }
    dend_21 { pt3dadd( -11.6422, -123.433, -82.2251, 1.62 ) }
    dend_21 { pt3dadd( -11.8246, -125.511, -83.4154, 0.15 ) }
    dend_21 { pt3dadd( -11.9534, -126.978, -84.2856, 1.03 ) }
    dend_21 { pt3dadd( -11.9932, -127.478, -84.6187, 1.55 ) }
    dend_21 { pt3dadd( -12.0382, -128.057, -85.0166, 1.55 ) }
    dend_21 { pt3dadd( -12.188, -129.949, -86.335, 0.22 ) }
    dend_21 { pt3dadd( -12.2197, -130.466, -86.7119, 0.88 ) }
    dend_21 { pt3dadd( -12.2689, -131.061, -87.1691, 0.88 ) }
    dend_21 { pt3dadd( -12.5096, -133.264, -88.766, 0.22 ) }
    dend_21 { pt3dadd( -12.6185, -134.078, -89.3258, 1.18 ) }
    dend_21 { pt3dadd( -12.7116, -134.632, -89.6834, 1.33 ) }
    dend_21 { pt3dadd( -13.0487, -136.529, -90.8715, 0.22 ) }
    dend_21 { pt3dadd( -13.2133, -137.38, -91.3878, 0.22 ) }
    dend_21 { pt3dadd( -13.4612, -138.427, -92.0213, 0.22 ) }
    dend_21 { pt3dadd( -13.716, -139.381, -92.5488, 0.22 ) }
    dend_21 { pt3dadd( -14.0639, -140.671, -93.2736, 1.55 ) }
    dend_21 { pt3dadd( -14.3178, -141.673, -93.835, 1.92 ) }
    dend_21 { pt3dadd( -14.4425, -142.243, -94.1357, 1.77 ) }
    dend_21 { pt3dadd( -14.8124, -144.592, -95.3765, 0.22 ) }
    dend_21 { pt3dadd( -14.9261, -145.473, -95.8579, 0.96 ) }
    dend_21 { pt3dadd( -14.9781, -145.987, -96.1379, 1.11 ) }
    dend_21 { pt3dadd( -15.1029, -147.77, -97.106, 0.22 ) }
    dend_21 { pt3dadd( -15.168, -148.912, -97.7058, 0.22 ) }
    dend_21 { pt3dadd( -15.1982, -149.934, -98.255, 1.03 ) }
    dend_21 { pt3dadd( -15.2021, -150.553, -98.5853, 1.33 ) }
    dend_21 { pt3dadd( -15.2034, -151.233, -98.9725, 1.33 ) }
    dend_21 { pt3dadd( -15.2451, -153.513, -100.305, 0.15 ) }
    dend_21 { pt3dadd( -15.281, -154.477, -100.859, 0.15 ) }
    dend_21 { pt3dadd( -15.3651, -155.821, -101.623, 1.55 ) }
    dend_21 { pt3dadd( -15.4153, -156.427, -101.94, 1.84 ) }
    dend_21 { pt3dadd( -15.4818, -157.059, -102.246, 1.77 ) }
    dend_21 { pt3dadd( -15.7006, -158.478, -102.882, 0.22 ) }
    dend_21 { pt3dadd( -15.8887, -159.315, -103.211, 0.22 ) }
    dend_21 { pt3dadd( -16.1127, -160.117, -103.516, 0.96 ) }
    dend_21 { pt3dadd( -16.282, -160.613, -103.684, 1.11 ) }
    dend_21 { pt3dadd( -16.8324, -162.0, -104.149, 0.22 ) }
    dend_21 { pt3dadd( -17.1094, -162.593, -104.388, 0.22 ) }
    dend_21 { pt3dadd( -17.4588, -163.208, -104.692, 0.22 ) }
    dend_21 { pt3dadd( -17.7399, -163.629, -104.943, 0.96 ) }
    dend_21 { pt3dadd( -17.9335, -163.876, -105.111, 1.25 ) }
    dend_21 { pt3dadd( -18.3524, -164.336, -105.461, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( -19.3966, -165.396, -106.408, 0.15 ) }
    dend_21 { pt3dadd( -19.955, -165.998, -107.001, 0.15 ) }
    dend_21 { pt3dadd( -20.149, -166.246, -107.26, 0.44 ) }
    dend_21 { pt3dadd( -20.3332, -166.527, -107.57, 0.44 ) }
    dend_21 { pt3dadd( -20.6726, -167.096, -108.218, 0.15 ) }
    dend_21 { pt3dadd( -21.1477, -168.082, -109.334, 1.33 ) }
    dend_21 { pt3dadd( -21.3191, -168.557, -109.896, 1.4 ) }
    dend_21 { pt3dadd( -21.5249, -169.794, -111.426, 0.22 ) }
    dend_21 { pt3dadd( -21.5521, -170.478, -112.284, 0.44 ) }
    dend_21 { pt3dadd( -21.5323, -170.902, -112.798, 0.22 ) }
    dend_21 { pt3dadd( -21.4137, -171.793, -113.883, 1.33 ) }
    dend_21 { pt3dadd( -21.2276, -172.705, -114.984, 1.62 ) }
    dend_21 { pt3dadd( -20.7383, -174.683, -117.326, 0.22 ) }
    dend_21 { pt3dadd( -20.541, -175.37, -118.11, 0.22 ) }
    dend_21 { pt3dadd( -20.3312, -176.036, -118.845, 0.96 ) }
    dend_21 { pt3dadd( -19.8958, -177.268, -120.125, 1.18 ) }
    dend_21 { pt3dadd( -19.2365, -179.036, -121.855, 0.22 ) }
    dend_21 { pt3dadd( -19.0611, -179.505, -122.252, 0.22 ) }
    dend_21 { pt3dadd( -18.9505, -179.81, -122.475, 0.66 ) }
    dend_21 { pt3dadd( -18.3953, -181.376, -123.502, 0.22 ) }
    dend_21 { pt3dadd( -17.921, -182.723, -124.298, 2.06 ) }
    dend_21 { pt3dadd( -17.8007, -183.086, -124.495, 2.28 ) }
    dend_21 { pt3dadd( -17.0902, -185.261, -125.608, 0.22 ) }
    dend_21 { pt3dadd( -16.8861, -185.865, -125.922, 0.22 ) }
    dend_21 { pt3dadd( -16.4473, -187.147, -126.63, 1.33 ) }
    dend_21 { pt3dadd( -16.2917, -187.6, -126.895, 1.62 ) }
    dend_21 { pt3dadd( -15.4533, -190.24, -128.519, 0.37 ) }
    dend_21 { pt3dadd( -15.2008, -191.129, -129.076, 0.22 ) }
    dend_21 { pt3dadd( -14.9847, -192.009, -129.648, 0.22 ) }
    dend_21 { pt3dadd( -14.6561, -193.522, -130.645, 1.03 ) }
    dend_21 { pt3dadd( -14.4909, -194.576, -131.37, 1.4 ) }
    dend_21 { pt3dadd( -14.3464, -196.281, -132.599, 0.22 ) }
    dend_21 { pt3dadd( -14.3476, -197.492, -133.473, 1.25 ) }
    dend_21 { pt3dadd( -14.3962, -198.289, -134.062, 1.55 ) }
    dend_21 { pt3dadd( -14.4392, -198.575, -134.269, 1.55 ) }
    dend_21 { pt3dadd( -14.9716, -200.781, -135.778, 0.29 ) }
    dend_21 { pt3dadd( -15.1857, -201.442, -136.23, 0.52 ) }
    dend_21 { pt3dadd( -15.2997, -201.712, -136.428, 0.52 ) }
    dend_21 { pt3dadd( -15.647, -202.411, -136.918, 0.22 ) }
    dend_21 { pt3dadd( -16.1749, -203.349, -137.5, 0.22 ) }
    dend_21 { pt3dadd( -16.5973, -204.024, -137.886, 1.25 ) }
    dend_21 { pt3dadd( -16.9503, -204.518, -138.136, 1.4 ) }
    dend_21 { pt3dadd( -17.4095, -205.129, -138.453, 1.11 ) }
    dend_21 { pt3dadd( -18.1143, -206.013, -138.989, 0.15 ) }
    dend_21 { pt3dadd( -18.6431, -206.708, -139.505, 0.15 ) }
    dend_21 { pt3dadd( -19.1629, -207.474, -140.147, 0.88 ) }
    dend_21 { pt3dadd( -19.4159, -207.842, -140.487, 1.11 ) }
    dend_21 { pt3dadd( -19.6293, -208.13, -140.764, 1.11 ) }
    dend_21 { pt3dadd( -20.4514, -209.169, -141.767, 0.22 ) }
    dend_21 { pt3dadd( -21.2854, -210.206, -142.784, 0.22 ) }
    dend_21 { pt3dadd( -21.5762, -210.628, -143.267, 0.22 ) }
    dend_21 { pt3dadd( -22.1258, -211.537, -144.332, 0.22 ) }
    dend_21 { pt3dadd( -22.5353, -212.307, -145.226, 1.25 ) }
    dend_21 { pt3dadd( -22.7787, -212.836, -145.802, 1.55 ) }
    dend_21 { pt3dadd( -23.0685, -213.57, -146.573, 1.55 ) }
    dend_21 { pt3dadd( -24.0891, -216.26, -149.383, 0.22 ) }
    dend_21 { pt3dadd( -24.2082, -216.628, -149.795, 0.66 ) }
    dend_21 { pt3dadd( -24.2903, -216.941, -150.214, 0.66 ) }
    dend_21 { pt3dadd( -24.4401, -217.526, -151.094, 0.22 ) }
    dend_21 { pt3dadd( -24.6067, -218.043, -151.935, 0.22 ) }
    dend_21 { pt3dadd( -24.7631, -218.376, -152.48, 0.66 ) }
    dend_21 { pt3dadd( -25.0681, -218.845, -153.16, 0.74 ) }
    dend_21 { pt3dadd( -25.9286, -220.115, -154.887, 0.22 ) }
    dend_21 { pt3dadd( -26.2472, -220.577, -155.463, 0.44 ) }
    dend_21 { pt3dadd( -26.4614, -220.889, -155.809, 0.44 ) }
    dend_21 { pt3dadd( -26.8246, -221.614, -156.545, 0.22 ) }
    dend_21 { pt3dadd( -27.0701, -222.282, -157.247, 1.33 ) }
    dend_21 { pt3dadd( -27.1899, -222.701, -157.711, 1.69 ) }
    dend_21 { pt3dadd( -27.2369, -222.871, -157.929, 1.92 ) }
    dend_21 { pt3dadd( -27.3533, -223.405, -158.738, 1.69 ) }
    dend_21 { pt3dadd( -27.6108, -225.106, -161.509, 0.59 ) }
    dend_21 { pt3dadd( -27.6692, -226.013, -163.086, 0.96 ) }
    dend_21 { pt3dadd( -27.6759, -226.761, -164.386, 0.44 ) }
    dend_21 { pt3dadd( -27.6618, -227.43, -165.505, 0.29 ) }
    dend_21 { pt3dadd( -27.6249, -228.151, -166.671, 0.29 ) }
    dend_21 { pt3dadd( -27.588, -228.571, -167.308, 0.29 ) }
    dend_21 { pt3dadd( -27.5227, -229.766, -168.953, 0.88 ) }
    dend_21 { pt3dadd( -27.5088, -230.317, -169.73, 1.55 ) }
    dend_21 { pt3dadd( -27.5167, -230.496, -169.999, 2.06 ) }
    dend_21 { pt3dadd( -27.6791, -232.025, -172.444, 1.69 ) }
    dend_21 { pt3dadd( -27.6978, -232.105, -172.621, 1.84 ) }
    dend_21 { pt3dadd( -27.9862, -232.955, -174.947, 0.37 ) }
    dend_21 { pt3dadd( -28.2371, -233.554, -176.759, 0.22 ) }
    dend_21 { pt3dadd( -28.4108, -234.01, -178.231, 1.84 ) }
    dend_21 { pt3dadd( -28.5511, -234.396, -179.459, 2.06 ) }
    dend_21 { pt3dadd( -28.9949, -235.853, -184.241, 0.22 ) }
    dend_21 { pt3dadd( -29.0667, -236.114, -185.113, 0.22 ) }
    dend_21 { pt3dadd( -29.1374, -236.48, -186.303, 1.55 ) }
    dend_21 { pt3dadd( -29.235, -237.137, -188.262, 1.69 ) }
    dend_21 { pt3dadd( -29.2325, -237.366, -188.909, 1.69 ) }
    dend_21 { pt3dadd( -29.0781, -239.229, -193.731, 0.52 ) }
    dend_21 { pt3dadd( -29.0411, -239.544, -194.463, 1.92 ) }
    dend_21 { pt3dadd( -28.9906, -239.958, -195.431, 1.92 ) }
    dend_21 { pt3dadd( -28.7956, -242.054, -200.372, 1.92 ) }
    dend_21 { pt3dadd( -28.6997, -244.516, -206.022, 0.66 ) }
    dend_21 { pt3dadd( -28.6842, -244.842, -206.75, 0.66 ) }
    dend_21 { pt3dadd( -28.6522, -245.367, -207.823, 0.29 ) }
    dend_21 { pt3dadd( -28.6146, -245.786, -208.647, 0.29 ) }
    dend_21 { pt3dadd( -28.5829, -246.163, -209.355, 1.11 ) }
    dend_21 { pt3dadd( -28.558, -246.528, -209.939, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -28.5602, -248.861, -213.819, 0.22 ) }
    dend_21 { pt3dadd( -28.5641, -249.054, -214.176, 0.22 ) }
    dend_21 { pt3dadd( -28.5844, -249.491, -215.008, 1.47 ) }
    dend_21 { pt3dadd( -28.6137, -250.092, -216.197, 1.77 ) }
    dend_21 { pt3dadd( -28.6267, -250.434, -216.942, 1.77 ) }
    dend_21 { pt3dadd( -28.8013, -252.609, -221.873, 0.22 ) }
    dend_21 { pt3dadd( -28.8619, -253.099, -223.022, 1.33 ) }
    dend_21 { pt3dadd( -28.8678, -253.537, -224.096, 1.62 ) }
    dend_21 { pt3dadd( -28.825, -254.202, -225.717, 1.62 ) }
    dend_21 { pt3dadd( -28.5891, -255.962, -230.093, 0.22 ) }
    dend_21 { pt3dadd( -28.5192, -256.248, -230.837, 1.18 ) }
    dend_21 { pt3dadd( -28.3238, -256.951, -232.663, 1.33 ) }
    dend_21 { pt3dadd( -27.9024, -258.472, -236.501, 0.15 ) }
    dend_21 { pt3dadd( -27.812, -258.849, -237.405, 1.25 ) }
    dend_21 { pt3dadd( -27.6257, -259.997, -239.996, 1.62 ) }
    dend_21 { pt3dadd( -27.4563, -262.226, -244.952, 0.22 ) }
    dend_21 { pt3dadd( -27.454, -263.007, -246.721, 0.22 ) }
    dend_21 { pt3dadd( -27.4986, -263.476, -247.752, 0.44 ) }
    dend_21 { pt3dadd( -27.5736, -264.024, -248.913, 0.88 ) }
    dend_21 { pt3dadd( -27.5933, -264.298, -249.474, 1.47 ) }
    dend_21 { pt3dadd( -27.5483, -265.126, -251.007, 1.62 ) }
    dend_21 { pt3dadd( -27.2233, -267.236, -254.721, 0.22 ) }
    dend_21 { pt3dadd( -27.1702, -267.443, -255.09, 1.03 ) }
    dend_21 { pt3dadd( -26.8054, -268.707, -257.353, 1.11 ) }
    dend_21 { pt3dadd( -26.607, -269.384, -258.533, 0.96 ) }
    dend_21 { pt3dadd( -25.8904, -271.772, -262.529, 0.22 ) }
    dend_21 { pt3dadd( -25.8217, -272.048, -262.988, 0.81 ) }
    dend_21 { pt3dadd( -25.7314, -272.566, -263.833, 0.81 ) }
    dend_21 { pt3dadd( -25.645, -273.468, -265.283, 0.22 ) }
    dend_21 { pt3dadd( -25.6294, -274.398, -266.734, 1.47 ) }
    dend_21 { pt3dadd( -25.6816, -275.441, -268.293, 1.62 ) }
    dend_21 { pt3dadd( -26.0162, -278.16, -272.058, 0.15 ) }
    dend_21 { pt3dadd( -26.1049, -278.806, -272.946, 0.15 ) }
    dend_21 { pt3dadd( -26.1944, -279.475, -273.808, 0.96 ) }
    dend_21 { pt3dadd( -26.2411, -279.842, -274.263, 0.96 ) }
    dend_21 { pt3dadd( -26.3211, -280.423, -274.919, 0.22 ) }
    dend_21 { pt3dadd( -26.4051, -280.939, -275.403, 1.11 ) }
    dend_21 { pt3dadd( -26.5432, -282.003, -276.098, 1.11 ) }
    dend_21 { pt3dadd( -26.7634, -284.116, -277.782, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -10.9192, -37.4844, 0.865484, 2.8 ) }
    dend_18 { pt3dadd( -10.785, -38.1111, 1.14833, 2.8 ) }
    dend_18 { pt3dadd( -10.3558, -40.1161, 2.05321, 1.84 ) }
    dend_18 { pt3dadd( -9.92744, -42.1178, 2.95659, 1.03 ) }
    dend_18 { pt3dadd( -9.72255, -43.0748, 3.38848, 1.03 ) }
    dend_18 { pt3dadd( -9.45882, -44.3069, 3.94454, 1.18 ) }
    dend_18 { pt3dadd( -9.22504, -45.3991, 4.43744, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 46/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.17993, 13.3133, -0.326245, 0.81 ) }
    dend_16 { pt3dadd( 8.40511, 13.5663, 0.0560011, 0.81 ) }
    dend_16 { pt3dadd( 9.1216, 13.7303, 0.365424, 0.37 ) }
    dend_16 { pt3dadd( 10.2562, 14.017, 0.897941, 0.88 ) }
    dend_16 { pt3dadd( 11.2295, 14.2978, 1.36655, 1.25 ) }
    dend_16 { pt3dadd( 12.5381, 14.7277, 1.99855, 1.25 ) }
    dend_16 { pt3dadd( 13.1485, 14.9576, 2.28543, 1.11 ) }
    dend_16 { pt3dadd( 14.8666, 15.7642, 3.14846, 1.11 ) }
    dend_16 { pt3dadd( 15.3663, 16.0396, 3.3793, 1.11 ) }
    dend_16 { pt3dadd( 15.9599, 16.4069, 3.59062, 0.96 ) }
    dend_16 { pt3dadd( 17.2037, 17.2294, 3.85396, 0.66 ) }
    dend_16 { pt3dadd( 18.1415, 17.8438, 3.92595, 0.74 ) }
    dend_16 { pt3dadd( 19.1082, 18.428, 3.89436, 0.88 ) }
    dend_16 { pt3dadd( 20.151, 18.9816, 3.72893, 0.96 ) }
    dend_16 { pt3dadd( 21.1482, 19.4173, 3.45831, 0.74 ) }
    dend_16 { pt3dadd( 22.2212, 19.7738, 3.04569, 1.62 ) }
    dend_16 { pt3dadd( 23.1762, 19.9922, 2.56763, 1.84 ) }
    dend_16 { pt3dadd( 23.9455, 20.0909, 2.11742, 1.69 ) }
    dend_16 { pt3dadd( 24.8121, 20.1566, 1.54124, 1.62 ) }
    dend_16 { pt3dadd( 26.17, 20.236, 0.629226, 0.88 ) }
    dend_16 { pt3dadd( 26.9074, 20.3305, 0.161111, 0.74 ) }
    dend_16 { pt3dadd( 27.835, 20.5158, -0.365514, 0.74 ) }
    dend_16 { pt3dadd( 28.8144, 20.8005, -0.843696, 0.96 ) }
    dend_16 { pt3dadd( 29.6786, 21.1212, -1.16203, 0.81 ) }
    dend_16 { pt3dadd( 30.8462, 21.6349, -1.43759, 0.74 ) }
    dend_16 { pt3dadd( 32.4597, 22.3595, -1.49864, 1.25 ) }
    dend_16 { pt3dadd( 33.1805, 22.6769, -1.41413, 1.47 ) }
    dend_16 { pt3dadd( 33.9455, 22.9738, -1.15276, 1.77 ) }
    dend_16 { pt3dadd( 34.5499, 23.1935, -0.845821, 1.77 ) }
    dend_16 { pt3dadd( 35.3741, 23.4438, -0.298787, 1.11 ) }
    dend_16 { pt3dadd( 37.1146, 23.8188, 0.973653, 1.03 ) }
    dend_16 { pt3dadd( 38.1819, 23.9709, 1.78464, 1.18 ) }
    dend_16 { pt3dadd( 40.3513, 24.199, 3.42758, 1.4 ) }
    dend_16 { pt3dadd( 40.9736, 24.238, 3.88777, 1.55 ) }
    dend_16 { pt3dadd( 43.0543, 24.2386, 5.31326, 1.4 ) }
    dend_16 { pt3dadd( 44.3603, 24.1614, 6.08486, 1.84 ) }
    dend_16 { pt3dadd( 44.9966, 24.0894, 6.36399, 2.43 ) }
    dend_16 { pt3dadd( 45.687, 23.9859, 6.55666, 2.43 ) }
    dend_16 { pt3dadd( 46.5219, 23.8392, 6.65185, 2.21 ) }
    dend_16 { pt3dadd( 48.6807, 23.4395, 6.71795, 0.96 ) }
    dend_16 { pt3dadd( 49.7858, 23.2807, 6.67102, 0.66 ) }
    dend_16 { pt3dadd( 50.5887, 23.2224, 6.63354, 0.66 ) }
    dend_16 { pt3dadd( 51.4748, 23.1957, 6.59959, 0.66 ) }
    dend_16 { pt3dadd( 52.3521, 23.2223, 6.55599, 0.66 ) }
    dend_16 { pt3dadd( 53.5497, 23.3553, 6.49759, 0.66 ) }
    dend_16 { pt3dadd( 54.8199, 23.6401, 6.42224, 1.03 ) }
    dend_16 { pt3dadd( 55.9083, 23.9966, 6.38167, 0.59 ) }
    dend_16 { pt3dadd( 57.0741, 24.4637, 6.33564, 0.59 ) }
    dend_16 { pt3dadd( 57.8721, 24.842, 6.30323, 0.96 ) }
    dend_16 { pt3dadd( 58.89, 25.4019, 6.25996, 0.66 ) }
    dend_16 { pt3dadd( 59.8251, 26.0153, 6.19935, 0.66 ) }
    dend_16 { pt3dadd( 61.0556, 26.9329, 6.09476, 1.33 ) }
    dend_16 { pt3dadd( 61.2819, 27.1226, 6.07445, 1.55 ) }
    dend_16 { pt3dadd( 61.6884, 27.508, 6.027, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 62.1768, 28.0002, 5.96826, 1.4 ) }
    dend_16 { pt3dadd( 62.778, 28.6445, 5.871, 1.11 ) }
    dend_16 { pt3dadd( 63.1883, 29.0849, 5.81488, 1.11 ) }
    dend_16 { pt3dadd( 75.3076, 33.1839, 9.71265, 1.11 ) }
    dend_16 { pt3dadd( 87.6073, 36.6412, 13.6257, 1.11 ) }
    dend_16 { pt3dadd( 99.8153, 41.1704, 16.7001, 1.11 ) }
    dend_16 { pt3dadd( 111.469, 45.9792, 21.2194, 1.11 ) }
    dend_16 { pt3dadd( 123.812, 49.1296, 25.2359, 1.11 ) }
    dend_16 { pt3dadd( 136.199, 52.2701, 29.1226, 1.11 ) }
    dend_16 { pt3dadd( 148.217, 57.4682, 31.9304, 1.11 ) }
    dend_16 { pt3dadd( 160.4, 62.4514, 34.3605, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.17993, 13.3133, -0.326245, 2.95 ) }
    dend_1 { pt3dadd( 7.28815, 14.8628, -0.0767963, 2.95 ) }
    dend_1 { pt3dadd( 7.38963, 16.3157, 0.157115, 2.95 ) }
    dend_1 { pt3dadd( 7.47052, 17.4739, 0.343567, 2.95 ) }
    dend_1 { pt3dadd( 7.51941, 18.1739, 0.456256, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 30.5123, 47.7112, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 38.5543, 60.3732, -0.918402, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -21.1964, -15.1009, 3.76478, 0.59 ) }
    dend_28 { pt3dadd( -21.2592, -16.0799, 4.48024, 0.59 ) }
    dend_28 { pt3dadd( -21.3501, -16.7181, 5.05787, 0.52 ) }
    dend_28 { pt3dadd( -21.4409, -17.1742, 5.50691, 0.88 ) }
    dend_28 { pt3dadd( -21.5571, -17.6655, 6.01004, 1.03 ) }
    dend_28 { pt3dadd( -21.6447, -18.0357, 6.38926, 1.03 ) }
    dend_28 { pt3dadd( -21.7704, -18.5673, 6.93365, 0.52 ) }
    dend_28 { pt3dadd( -22.0032, -19.2697, 7.74669, 1.11 ) }
    dend_28 { pt3dadd( -22.1069, -19.5047, 8.06576, 1.4 ) }
    dend_28 { pt3dadd( -22.2394, -19.751, 8.4457, 1.4 ) }
    dend_28 { pt3dadd( -23.2961, -26.0945, 15.8155, 1.4 ) }
    dend_28 { pt3dadd( -25.0719, -31.4978, 23.7386, 1.4 ) }
    dend_28 { pt3dadd( -27.09, -36.3134, 31.9563, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.1964, -15.1009, 3.76478, 0.29 ) }
    dend_25 { pt3dadd( -22.4178, -14.8626, 3.41498, 0.29 ) }
    dend_25 { pt3dadd( -23.4616, -14.659, 3.11602, 0.59 ) }
    dend_25 { pt3dadd( -23.8305, -14.5871, 3.01037, 0.81 ) }
    dend_25 { pt3dadd( -24.3225, -14.4911, 2.86946, 0.81 ) }
    dend_25 { pt3dadd( -25.0903, -14.3413, 2.64956, 0.29 ) }
    dend_25 { pt3dadd( -25.5531, -14.2511, 2.51701, 0.59 ) }
    dend_25 { pt3dadd( -34.4692, -10.4273, 1.07593, 0.59 ) }
    dend_25 { pt3dadd( -42.6452, -4.9531, 1.20942, 0.59 ) }
    dend_25 { pt3dadd( -50.57, 0.812225, 0.184187, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.22504, -45.3991, 4.43744, 0.59 ) }
    dend_20 { pt3dadd( -8.9775, -46.3851, 5.83426, 0.59 ) }
    dend_20 { pt3dadd( -8.75989, -47.3195, 7.09964, 0.44 ) }
    dend_20 { pt3dadd( -8.65707, -47.6642, 7.59668, 0.44 ) }
    dend_20 { pt3dadd( -8.42229, -48.3358, 8.63951, 0.81 ) }
    dend_20 { pt3dadd( -8.22877, -48.7988, 9.38848, 1.25 ) }
    dend_20 { pt3dadd( -8.0776, -49.109, 9.92931, 1.47 ) }
    dend_20 { pt3dadd( -7.91989, -49.3873, 10.4797, 1.47 ) }
    dend_20 { pt3dadd( -7.26642, -50.4781, 12.6676, 0.74 ) }
    dend_20 { pt3dadd( -6.55061, -51.4854, 14.8953, 0.37 ) }
    dend_20 { pt3dadd( -6.33667, -51.7256, 15.4874, 0.37 ) }
    dend_20 { pt3dadd( -6.02306, -52.0198, 16.3091, 0.81 ) }
    dend_20 { pt3dadd( -5.71939, -52.2726, 17.0888, 0.96 ) }
    dend_20 { pt3dadd( -2.03577, -56.0166, 26.899, 0.96 ) }
    dend_20 { pt3dadd( 1.43119, -61.9008, 35.7392, 0.96 ) }
    dend_20 { pt3dadd( 6.57262, -65.4851, 44.931, 0.96 ) }
    dend_20 { pt3dadd( 11.4364, -69.2293, 54.2126, 0.96 ) }
    dend_20 { pt3dadd( 17.6873, -73.3585, 62.449, 0.96 ) }
    dend_20 { pt3dadd( 25.0569, -75.1498, 70.5615, 0.96 ) }
    dend_20 { pt3dadd( 31.6253, -75.9179, 79.4772, 0.96 ) }
    dend_20 { pt3dadd( 38.7233, -78.1889, 87.7161, 0.96 ) }
    dend_20 { pt3dadd( 47.0479, -81.2539, 94.4181, 0.96 ) }
    dend_20 { pt3dadd( 54.3633, -83.3689, 102.505, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.22504, -45.3991, 4.43744, 1.11 ) }
    dend_19 { pt3dadd( -9.59308, -46.5623, 4.27899, 1.11 ) }
    dend_19 { pt3dadd( -10.0722, -47.9161, 4.28314, 1.11 ) }
    dend_19 { pt3dadd( -10.6861, -49.5828, 4.46349, 1.11 ) }
    dend_19 { pt3dadd( -11.052, -50.563, 4.66216, 0.96 ) }
    dend_19 { pt3dadd( -11.3226, -51.2685, 4.85731, 0.96 ) }
    dend_19 { pt3dadd( -12.0335, -53.0763, 5.50216, 1.11 ) }
    dend_19 { pt3dadd( -12.398, -53.9861, 5.95879, 1.25 ) }
    dend_19 { pt3dadd( -12.7218, -54.791, 6.47242, 1.25 ) }
    dend_19 { pt3dadd( -13.0935, -55.7264, 7.16549, 1.03 ) }
    dend_19 { pt3dadd( -13.422, -56.6156, 7.8226, 1.03 ) }
    dend_19 { pt3dadd( -13.8275, -57.798, 8.58889, 1.18 ) }
    dend_19 { pt3dadd( -14.0122, -58.4179, 8.88789, 1.77 ) }
    dend_19 { pt3dadd( -14.198, -59.0283, 9.09914, 2.28 ) }
    dend_19 { pt3dadd( -14.4041, -59.6858, 9.24352, 2.14 ) }
    dend_19 { pt3dadd( -14.739, -60.7506, 9.35483, 1.62 ) }
    dend_19 { pt3dadd( -15.0811, -61.8667, 9.39163, 1.03 ) }
    dend_19 { pt3dadd( -15.4671, -63.1243, 9.37417, 0.74 ) }
    dend_19 { pt3dadd( -15.8812, -64.4033, 9.35819, 0.96 ) }
    dend_19 { pt3dadd( -16.3814, -65.9001, 9.35863, 1.25 ) }
    dend_19 { pt3dadd( -16.9324, -67.4253, 9.41293, 1.62 ) }
    dend_19 { pt3dadd( -17.2384, -68.2415, 9.47441, 1.55 ) }
    dend_19 { pt3dadd( -17.4946, -68.8962, 9.54633, 1.69 ) }
    dend_19 { pt3dadd( -18.1394, -70.4033, 9.74735, 1.18 ) }
    dend_19 { pt3dadd( -18.6362, -71.4595, 9.92276, 1.03 ) }
    dend_19 { pt3dadd( -19.1405, -72.4217, 10.103, 1.33 ) }
    dend_19 { pt3dadd( -19.5441, -73.1407, 10.243, 1.62 ) }
    dend_19 { pt3dadd( -19.8756, -73.7217, 10.3449, 1.62 ) }
    dend_19 { pt3dadd( -20.3157, -74.5338, 10.4808, 1.77 ) }
    dend_19 { pt3dadd( -20.6034, -75.1417, 10.5744, 1.77 ) }
    dend_19 { pt3dadd( -21.0062, -76.1047, 10.7473, 1.55 ) }
    dend_19 { pt3dadd( -21.351, -76.9962, 10.9344, 1.25 ) }
    dend_19 { pt3dadd( -21.7075, -78.1232, 11.1753, 0.81 ) }
    dend_19 { pt3dadd( -22.0513, -79.6217, 11.4803, 0.81 ) }
    dend_19 { pt3dadd( -22.2688, -80.7774, 11.734, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -22.5097, -82.1661, 12.0798, 1.03 ) }
    dend_19 { pt3dadd( -22.6333, -82.9822, 12.3193, 1.18 ) }
    dend_19 { pt3dadd( -22.8572, -84.6421, 12.8681, 0.29 ) }
    dend_19 { pt3dadd( -22.967, -85.55, 13.1837, 0.37 ) }
    dend_19 { pt3dadd( -23.161, -87.0578, 13.682, 0.37 ) }
    dend_19 { pt3dadd( -23.3097, -88.1117, 14.0385, 0.29 ) }
    dend_19 { pt3dadd( -23.4133, -88.8529, 14.2848, 0.29 ) }
    dend_19 { pt3dadd( -23.542, -89.5703, 14.5508, 0.29 ) }
    dend_19 { pt3dadd( -23.754, -90.209, 14.8552, 0.29 ) }
    dend_19 { pt3dadd( -24.0486, -91.0034, 15.2272, 0.22 ) }
    dend_19 { pt3dadd( -26.86, -101.539, 19.5858, 0.22 ) }
    dend_19 { pt3dadd( -31.0625, -111.602, 23.8861, 0.22 ) }
    dend_19 { pt3dadd( -35.2712, -121.418, 28.6996, 0.22 ) }
    dend_19 { pt3dadd( -40.7118, -129.533, 35.0574, 0.22 ) }
    dend_19 { pt3dadd( -45.049, -138.049, 41.7607, 0.22 ) }
    dend_19 { pt3dadd( -50.1739, -146.427, 48.0562, 0.22 ) }
    dend_19 { pt3dadd( -54.4046, -156.415, 52.4958, 0.22 ) }
    dend_19 { pt3dadd( -60.11, -165.487, 57.1486, 0.22 ) }
    dend_19 { pt3dadd( -66.762, -174.095, 61.3561, 0.22 ) }
    dend_19 { pt3dadd( -71.8872, -182.634, 67.441, 0.22 ) }
    dend_19 { pt3dadd( -76.4253, -190.371, 74.8722, 0.22 ) }
    dend_19 { pt3dadd( -82.2934, -196.307, 82.9176, 0.22 ) }
    dend_19 { pt3dadd( -85.869, -203.085, 91.6543, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.51941, 18.1739, 0.456256, 0.66 ) }
    dend_15 { pt3dadd( 6.86015, 19.0644, 0.669844, 0.66 ) }
    dend_15 { pt3dadd( 6.482, 19.6905, 0.812241, 0.29 ) }
    dend_15 { pt3dadd( 6.32752, 19.9841, 0.878956, 0.44 ) }
    dend_15 { pt3dadd( 5.8958, 20.9225, 1.08916, 0.44 ) }
    dend_15 { pt3dadd( 5.44464, 21.9918, 1.32826, 0.81 ) }
    dend_15 { pt3dadd( 5.2668, 22.4379, 1.4285, 0.96 ) }
    dend_15 { pt3dadd( 5.05947, 23.0407, 1.56459, 0.81 ) }
    dend_15 { pt3dadd( 4.91576, 23.4292, 1.66076, 1.03 ) }
    dend_15 { pt3dadd( 4.65208, 24.0057, 1.81387, 1.18 ) }
    dend_15 { pt3dadd( 4.27441, 24.6036, 1.99517, 0.66 ) }
    dend_15 { pt3dadd( 3.61307, 25.2717, 2.24964, 0.22 ) }
    dend_15 { pt3dadd( 3.11435, 25.6038, 2.41281, 0.22 ) }
    dend_15 { pt3dadd( 2.56822, 25.832, 2.56917, 0.22 ) }
    dend_15 { pt3dadd( 1.86086, 26.041, 2.75724, 0.66 ) }
    dend_15 { pt3dadd( 1.39487, 26.1436, 2.8771, 0.81 ) }
    dend_15 { pt3dadd( 1.0196, 26.2176, 2.96949, 0.66 ) }
    dend_15 { pt3dadd( 0.477978, 26.3342, 3.09685, 0.52 ) }
    dend_15 { pt3dadd( -0.364931, 26.5831, 3.2964, 0.44 ) }
    dend_15 { pt3dadd( -1.12329, 26.8601, 3.45712, 0.52 ) }
    dend_15 { pt3dadd( -1.68644, 27.1, 3.54744, 0.88 ) }
    dend_15 { pt3dadd( -2.22436, 27.3646, 3.59253, 1.11 ) }
    dend_15 { pt3dadd( -2.65421, 27.6005, 3.60353, 1.11 ) }
    dend_15 { pt3dadd( -3.1115, 27.877, 3.57164, 0.96 ) }
    dend_15 { pt3dadd( -3.80833, 28.3293, 3.45921, 0.37 ) }
    dend_15 { pt3dadd( -4.58319, 28.8675, 3.27273, 0.29 ) }
    dend_15 { pt3dadd( -5.21791, 29.3423, 3.09533, 0.88 ) }
    dend_15 { pt3dadd( -5.52752, 29.5964, 3.01038, 1.03 ) }
    dend_15 { pt3dadd( -6.10122, 30.1146, 2.8388, 1.03 ) }
    dend_15 { pt3dadd( -6.26302, 30.2782, 2.78753, 1.03 ) }
    dend_15 { pt3dadd( -6.94501, 31.0708, 2.5885, 0.29 ) }
    dend_15 { pt3dadd( -7.24897, 31.48, 2.48513, 0.29 ) }
    dend_15 { pt3dadd( -7.73467, 32.1829, 2.29518, 0.96 ) }
    dend_15 { pt3dadd( -8.07228, 32.6695, 2.15109, 1.11 ) }
    dend_15 { pt3dadd( -8.26676, 32.9464, 2.07271, 1.11 ) }
    dend_15 { pt3dadd( -8.5563, 33.3415, 1.95507, 0.66 ) }
    dend_15 { pt3dadd( -9.22466, 34.2303, 1.69264, 0.29 ) }
    dend_15 { pt3dadd( -9.63275, 34.7403, 1.53324, 0.29 ) }
    dend_15 { pt3dadd( -10.1007, 35.2944, 1.38397, 0.66 ) }
    dend_15 { pt3dadd( -10.4002, 35.625, 1.30568, 0.88 ) }
    dend_15 { pt3dadd( -10.6749, 35.9116, 1.24342, 1.03 ) }
    dend_15 { pt3dadd( -11.105, 36.3466, 1.15985, 0.74 ) }
    dend_15 { pt3dadd( -11.6544, 36.8848, 1.09371, 0.44 ) }
    dend_15 { pt3dadd( -12.3177, 37.5323, 1.02419, 0.22 ) }
    dend_15 { pt3dadd( -12.9473, 38.1466, 0.957957, 0.44 ) }
    dend_15 { pt3dadd( -13.2722, 38.4605, 0.930699, 0.59 ) }
    dend_15 { pt3dadd( -13.5205, 38.7136, 0.948857, 0.59 ) }
    dend_15 { pt3dadd( -14.0052, 39.2539, 1.09998, 0.29 ) }
    dend_15 { pt3dadd( -14.4826, 39.8596, 1.39542, 0.59 ) }
    dend_15 { pt3dadd( -14.7468, 40.2358, 1.64005, 0.59 ) }
    dend_15 { pt3dadd( -14.9299, 40.4943, 1.85864, 0.59 ) }
    dend_15 { pt3dadd( -15.7541, 41.5611, 2.9242, 1.69 ) }
    dend_15 { pt3dadd( -16.1494, 42.0479, 3.48152, 2.14 ) }
    dend_15 { pt3dadd( -16.391, 42.3386, 3.84009, 2.36 ) }
    dend_15 { pt3dadd( -16.5785, 42.5538, 4.12287, 2.36 ) }
    dend_15 { pt3dadd( -17.4282, 43.4554, 5.348, 0.29 ) }
    dend_15 { pt3dadd( -17.9278, 43.9338, 6.01308, 0.22 ) }
    dend_15 { pt3dadd( -18.6249, 44.5312, 6.85209, 0.74 ) }
    dend_15 { pt3dadd( -18.924, 44.7771, 7.19857, 0.96 ) }
    dend_15 { pt3dadd( -19.098, 44.9236, 7.40571, 0.96 ) }
    dend_15 { pt3dadd( -19.7005, 45.4694, 8.12311, 0.22 ) }
    dend_15 { pt3dadd( -20.2626, 46.0529, 8.8025, 0.81 ) }
    dend_15 { pt3dadd( -20.3615, 46.1633, 8.91741, 1.18 ) }
    dend_15 { pt3dadd( -20.7241, 46.5584, 9.31406, 1.18 ) }
    dend_15 { pt3dadd( -20.8672, 46.7156, 9.46942, 1.18 ) }
    dend_15 { pt3dadd( -21.3089, 47.2194, 9.92571, 0.15 ) }
    dend_15 { pt3dadd( -21.5024, 47.4682, 10.1121, 0.37 ) }
    dend_15 { pt3dadd( -21.6782, 47.7442, 10.2673, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.51941, 18.1739, 0.456256, 2.8 ) }
    dend_2 { pt3dadd( 9.07423, 20.3441, 0.84057, 2.8 ) }
    dend_2 { pt3dadd( 10.0471, 21.7021, 1.08103, 2.8 ) }
    dend_2 { pt3dadd( 10.8777, 22.8614, 1.28632, 2.95 ) }
    dend_2 { pt3dadd( 11.7783, 24.1185, 1.50893, 3.68 ) }
    dend_2 { pt3dadd( 12.3983, 24.9839, 1.66218, 3.9 ) }
    dend_2 { pt3dadd( 12.9865, 25.8049, 1.80756, 4.57 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -27.09, -36.3134, 31.9563, 0.66 ) }
    dend_30 { pt3dadd( -28.9427, -43.6511, 41.1552, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -29.1325, -50.3708, 50.9713, 0.66 ) }
    dend_30 { pt3dadd( -32.004, -56.0054, 61.0065, 0.66 ) }
    dend_30 { pt3dadd( -36.2746, -60.8478, 70.9254, 0.66 ) }
    dend_30 { pt3dadd( -41.1886, -65.3121, 80.7077, 0.66 ) }
    dend_30 { pt3dadd( -44.9208, -70.8499, 90.5036, 0.66 ) }
    dend_30 { pt3dadd( -50.1206, -74.4691, 100.46, 0.66 ) }
    dend_30 { pt3dadd( -54.3855, -78.8799, 110.568, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.09, -36.3134, 31.9563, 0.59 ) }
    dend_29 { pt3dadd( -29.5501, -43.2123, 42.3077, 0.66 ) }
    dend_29 { pt3dadd( -32.1229, -50.6421, 52.2727, 0.66 ) }
    dend_29 { pt3dadd( -35.0473, -59.303, 61.1182, 0.66 ) }
    dend_29 { pt3dadd( -38.901, -68.2807, 69.2611, 0.66 ) }
    dend_29 { pt3dadd( -39.8547, -78.6198, 76.6909, 0.66 ) }
    dend_29 { pt3dadd( -40.6221, -86.8842, 86.3347, 0.66 ) }
    dend_29 { pt3dadd( -41.8681, -95.2759, 95.8188, 0.66 ) }
    dend_29 { pt3dadd( -43.9598, -104.657, 104.185, 0.66 ) }
    dend_29 { pt3dadd( -45.3565, -113.312, 113.415, 0.66 ) }
    dend_29 { pt3dadd( -46.3899, -120.856, 123.585, 0.66 ) }
    dend_29 { pt3dadd( -46.6082, -129.796, 132.662, 0.66 ) }
    dend_29 { pt3dadd( -46.7674, -136.707, 143.304, 0.66 ) }
    dend_29 { pt3dadd( -44.9217, -145.187, 152.62, 0.66 ) }
    dend_29 { pt3dadd( -44.2227, -155.637, 159.935, 0.66 ) }
    dend_29 { pt3dadd( -42.6631, -164.832, 168.628, 0.66 ) }
    dend_29 { pt3dadd( -42.1555, -174.857, 176.516, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -50.57, 0.812225, 0.184187, 0.59 ) }
    dend_27 { pt3dadd( -59.147, 5.37768, -1.22623, 0.59 ) }
    dend_27 { pt3dadd( -67.3299, 10.2787, -3.6065, 0.59 ) }
    dend_27 { pt3dadd( -76.3406, 14.1027, -4.05076, 0.59 ) }
    dend_27 { pt3dadd( -85.3106, 17.8243, -5.36328, 0.59 ) }
    dend_27 { pt3dadd( -93.2882, 23.5819, -5.69577, 0.59 ) }
    dend_27 { pt3dadd( -101.354, 29.1134, -6.79694, 0.59 ) }
    dend_27 { pt3dadd( -108.031, 36.3998, -6.50644, 0.59 ) }
    dend_27 { pt3dadd( -113.883, 44.4016, -6.77091, 0.59 ) }
    dend_27 { pt3dadd( -118.018, 53.4582, -6.97509, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 34/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -50.57, 0.812225, 0.184187, 0.59 ) }
    dend_26 { pt3dadd( -59.2515, 5.76547, 0.3783, 0.59 ) }
    dend_26 { pt3dadd( -67.9334, 10.5914, -0.777925, 0.59 ) }
    dend_26 { pt3dadd( -76.911, 14.3738, -2.95089, 0.59 ) }
    dend_26 { pt3dadd( -85.6906, 17.8142, -6.21459, 0.59 ) }
    dend_26 { pt3dadd( -93.5123, 22.5073, -10.3382, 0.59 ) }
    dend_26 { pt3dadd( -101.607, 26.3522, -14.7571, 0.59 ) }
    dend_26 { pt3dadd( -108.9, 30.6437, -20.0972, 0.59 ) }
    dend_26 { pt3dadd( -116.658, 32.8942, -25.9319, 0.59 ) }
    dend_26 { pt3dadd( -124.549, 34.6819, -31.738, 0.59 ) }
    dend_26 { pt3dadd( -133.017, 35.8792, -36.8227, 0.59 ) }
    dend_26 { pt3dadd( -141.411, 35.2548, -42.1032, 0.59 ) }
    dend_26 { pt3dadd( -149.319, 35.0757, -48.1225, 0.59 ) }
    dend_26 { pt3dadd( -157.55, 35.6048, -53.6759, 0.59 ) }
    dend_26 { pt3dadd( -166.469, 35.326, -58.0517, 0.59 ) }
    dend_26 { pt3dadd( -175.371, 34.1103, -62.2955, 0.59 ) }
    dend_26 { pt3dadd( -184.608, 34.5957, -65.936, 0.59 ) }
    dend_26 { pt3dadd( -194.067, 34.4407, -68.9799, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.9865, 25.8049, 1.80756, 2.36 ) }
    dend_12 { pt3dadd( 14.3378, 26.097, 3.11845, 2.36 ) }
    dend_12 { pt3dadd( 15.2561, 26.2091, 4.21124, 1.99 ) }
    dend_12 { pt3dadd( 15.7297, 26.2478, 4.84772, 1.84 ) }
    dend_12 { pt3dadd( 17.1229, 26.3325, 6.95319, 1.55 ) }
    dend_12 { pt3dadd( 18.5022, 26.3801, 9.30501, 2.06 ) }
    dend_12 { pt3dadd( 19.8232, 26.4216, 11.8696, 2.43 ) }
    dend_12 { pt3dadd( 20.57, 26.3413, 13.8233, 2.58 ) }
    dend_12 { pt3dadd( 20.7604, 26.2818, 14.4694, 2.36 ) }
    dend_12 { pt3dadd( 20.9692, 26.165, 15.3782, 2.21 ) }
    dend_12 { pt3dadd( 21.1923, 25.9584, 16.8099, 2.06 ) }
    dend_12 { pt3dadd( 21.3271, 25.7991, 17.9349, 1.25 ) }
    dend_12 { pt3dadd( 21.7329, 25.4717, 20.8938, 1.55 ) }
    dend_12 { pt3dadd( 22.0857, 25.3644, 22.8147, 1.18 ) }
    dend_12 { pt3dadd( 22.3761, 25.3449, 23.8947, 1.47 ) }
    dend_12 { pt3dadd( 22.7372, 25.3785, 24.8995, 2.14 ) }
    dend_12 { pt3dadd( 23.1618, 25.4851, 25.7956, 1.84 ) }
    dend_12 { pt3dadd( 23.7517, 25.7179, 26.6955, 1.47 ) }
    dend_12 { pt3dadd( 24.5197, 26.2283, 27.4655, 0.88 ) }
    dend_12 { pt3dadd( 25.4115, 26.9481, 28.0667, 0.52 ) }
    dend_12 { pt3dadd( 25.8691, 27.3486, 28.2822, 0.22 ) }
    dend_12 { pt3dadd( 26.3989, 27.8043, 28.4534, 0.22 ) }
    dend_12 { pt3dadd( 26.8368, 28.1846, 28.5436, 0.59 ) }
    dend_12 { pt3dadd( 27.1007, 28.4035, 28.5718, 0.66 ) }
    dend_12 { pt3dadd( 27.5735, 28.7997, 28.6099, 0.22 ) }
    dend_12 { pt3dadd( 28.007, 29.3323, 28.647, 0.44 ) }
    dend_12 { pt3dadd( 32.0407, 29.0976, 38.0238, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.9865, 25.8049, 1.80756, 0.96 ) }
    dend_3 { pt3dadd( 11.8637, 28.5339, 0.430033, 0.96 ) }
    dend_3 { pt3dadd( 11.5572, 29.2957, 0.0169752, 1.33 ) }
    dend_3 { pt3dadd( 11.4046, 29.6922, -0.199567, 1.55 ) }
    dend_3 { pt3dadd( 11.2709, 30.0396, -0.389331, 1.77 ) }
    dend_3 { pt3dadd( 11.0662, 30.5713, -0.679787, 1.92 ) }
    dend_3 { pt3dadd( 10.7642, 31.3559, -1.10836, 0.96 ) }
    dend_3 { pt3dadd( 10.4252, 32.5533, -1.64151, 1.11 ) }
    dend_3 { pt3dadd( 10.3553, 32.7824, -1.75643, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 32.0407, 29.0976, 38.0238, 0.44 ) }
    dend_14 { pt3dadd( 41.6254, 30.1667, 45.0812, 0.44 ) }
    dend_14 { pt3dadd( 50.4563, 33.914, 52.2746, 0.44 ) }
    dend_14 { pt3dadd( 58.3655, 40.3568, 58.6376, 0.44 ) }
    dend_14 { pt3dadd( 66.5691, 48.2201, 62.4704, 0.44 ) }
    dend_14 { pt3dadd( 75.0762, 55.0934, 67.4013, 0.44 ) }
    dend_14 { pt3dadd( 84.7463, 59.716, 72.723, 0.44 ) }
    dend_14 { pt3dadd( 94.0303, 65.7217, 77.3196, 0.44 ) }
    dend_14 { pt3dadd( 103.361, 71.7872, 81.732, 0.44 ) }
    dend_14 { pt3dadd( 111.661, 77.9968, 87.7985, 0.44 ) }
    dend_14 { pt3dadd( 120.133, 84.3009, 93.5058, 0.44 ) }
    dend_14 { pt3dadd( 126.443, 91.2478, 101.102, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 133.795, 99.1126, 106.467, 0.44 ) }
    dend_14 { pt3dadd( 141.257, 107.823, 110.01, 0.44 ) }
    dend_14 { pt3dadd( 148.433, 116.125, 114.936, 0.44 ) }
    dend_14 { pt3dadd( 155.244, 123.776, 121.286, 0.44 ) }
    dend_14 { pt3dadd( 162.002, 131.256, 127.899, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 32.0407, 29.0976, 38.0238, 0.44 ) }
    dend_13 { pt3dadd( 38.2286, 29.4919, 46.3962, 0.44 ) }
    dend_13 { pt3dadd( 43.5024, 29.781, 55.3818, 0.44 ) }
    dend_13 { pt3dadd( 49.4199, 29.834, 63.9524, 0.44 ) }
    dend_13 { pt3dadd( 54.5556, 28.2894, 72.861, 0.44 ) }
    dend_13 { pt3dadd( 58.272, 25.7449, 82.2271, 0.44 ) }
    dend_13 { pt3dadd( 63.6896, 24.0564, 90.9376, 0.44 ) }
    dend_13 { pt3dadd( 70.0423, 22.9432, 99.0934, 0.44 ) }
    dend_13 { pt3dadd( 76.6419, 22.7387, 107.138, 0.44 ) }
    dend_13 { pt3dadd( 82.3406, 20.2955, 115.474, 0.44 ) }
    dend_13 { pt3dadd( 86.8428, 16.841, 124.172, 0.44 ) }
    dend_13 { pt3dadd( 92.6152, 14.2793, 132.42, 0.44 ) }
    dend_13 { pt3dadd( 99.055, 12.1331, 140.285, 0.44 ) }
    dend_13 { pt3dadd( 105.741, 10.3605, 148.038, 0.44 ) }
    dend_13 { pt3dadd( 111.851, 9.8302, 156.445, 0.44 ) }
    dend_13 { pt3dadd( 117.337, 9.74483, 165.298, 0.44 ) }
    dend_13 { pt3dadd( 121.241, 11.434, 174.853, 0.44 ) }
    dend_13 { pt3dadd( 124.019, 12.8164, 184.841, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.3553, 32.7824, -1.75643, 0.66 ) }
    dend_9 { pt3dadd( 10.9017, 32.5262, -3.76488, 0.66 ) }
    dend_9 { pt3dadd( 11.9178, 32.136, -6.53599, 0.88 ) }
    dend_9 { pt3dadd( 12.8371, 31.9229, -8.66774, 1.11 ) }
    dend_9 { pt3dadd( 13.62, 31.8404, -10.2873, 1.25 ) }
    dend_9 { pt3dadd( 14.0127, 31.841, -11.0447, 1.47 ) }
    dend_9 { pt3dadd( 14.6659, 31.9131, -12.2429, 1.18 ) }
    dend_9 { pt3dadd( 15.2575, 32.0765, -13.0889, 0.66 ) }
    dend_9 { pt3dadd( 16.425, 32.8805, -14.3203, 0.52 ) }
    dend_9 { pt3dadd( 16.9146, 33.3993, -14.7595, 0.66 ) }
    dend_9 { pt3dadd( 17.3125, 33.8814, -15.1225, 0.66 ) }
    dend_9 { pt3dadd( 17.793, 34.5086, -15.6236, 0.37 ) }
    dend_9 { pt3dadd( 18.5519, 35.3957, -16.422, 0.37 ) }
    dend_9 { pt3dadd( 19.2099, 35.9128, -17.091, 1.18 ) }
    dend_9 { pt3dadd( 19.966, 36.1909, -17.7358, 1.77 ) }
    dend_9 { pt3dadd( 21.053, 36.3757, -18.6035, 1.92 ) }
    dend_9 { pt3dadd( 21.7133, 36.4117, -19.0884, 1.69 ) }
    dend_9 { pt3dadd( 22.8656, 36.4048, -19.8571, 0.66 ) }
    dend_9 { pt3dadd( 24.166, 36.4149, -20.6897, 0.52 ) }
    dend_9 { pt3dadd( 25.1139, 36.487, -21.3324, 0.37 ) }
    dend_9 { pt3dadd( 25.8927, 36.6258, -21.8865, 0.37 ) }
    dend_9 { pt3dadd( 26.8863, 36.924, -22.648, 0.29 ) }
    dend_9 { pt3dadd( 27.5218, 37.2025, -23.2061, 0.29 ) }
    dend_9 { pt3dadd( 28.7806, 37.9859, -24.4481, 0.59 ) }
    dend_9 { pt3dadd( 29.456, 38.5826, -25.2777, 1.55 ) }
    dend_9 { pt3dadd( 29.7599, 38.8981, -25.7251, 1.77 ) }
    dend_9 { pt3dadd( 30.3233, 39.4698, -26.6126, 1.92 ) }
    dend_9 { pt3dadd( 30.6361, 39.7501, -27.1153, 2.06 ) }
    dend_9 { pt3dadd( 30.8645, 39.9054, -27.4826, 2.06 ) }
    dend_9 { pt3dadd( 32.6275, 40.7996, -30.4403, 0.29 ) }
    dend_9 { pt3dadd( 33.0277, 40.9701, -31.1293, 0.29 ) }
    dend_9 { pt3dadd( 33.672, 41.2117, -32.247, 0.29 ) }
    dend_9 { pt3dadd( 34.1176, 41.3578, -32.9976, 0.29 ) }
    dend_9 { pt3dadd( 35.4128, 41.7645, -35.1998, 1.18 ) }
    dend_9 { pt3dadd( 36.4451, 42.1262, -36.9939, 1.47 ) }
    dend_9 { pt3dadd( 36.795, 42.3216, -37.6845, 1.69 ) }
    dend_9 { pt3dadd( 37.0408, 42.5101, -38.224, 1.92 ) }
    dend_9 { pt3dadd( 37.1992, 42.6401, -38.5999, 2.14 ) }
    dend_9 { pt3dadd( 37.4409, 42.8119, -39.1564, 2.14 ) }
    dend_9 { pt3dadd( 37.9672, 43.0822, -40.292, 2.14 ) }
    dend_9 { pt3dadd( 39.5393, 43.6095, -43.4576, 1.03 ) }
    dend_9 { pt3dadd( 40.4015, 43.8314, -45.2174, 0.29 ) }
    dend_9 { pt3dadd( 41.2564, 44.0029, -47.0021, 0.52 ) }
    dend_9 { pt3dadd( 41.7131, 44.0668, -47.9194, 0.81 ) }
    dend_9 { pt3dadd( 42.1499, 44.1064, -48.7861, 0.81 ) }
    dend_9 { pt3dadd( 42.6314, 44.1272, -49.7015, 0.52 ) }
    dend_9 { pt3dadd( 43.2718, 44.1667, -50.8571, 0.74 ) }
    dend_9 { pt3dadd( 43.8872, 44.3052, -51.9895, 0.81 ) }
    dend_9 { pt3dadd( 44.498, 44.5623, -53.1274, 1.69 ) }
    dend_9 { pt3dadd( 45.4232, 45.0539, -54.7333, 2.06 ) }
    dend_9 { pt3dadd( 45.9114, 45.3208, -55.4873, 2.43 ) }
    dend_9 { pt3dadd( 47.166, 45.9501, -57.2036, 1.11 ) }
    dend_9 { pt3dadd( 48.0591, 46.3277, -58.2385, 0.96 ) }
    dend_9 { pt3dadd( 48.9597, 46.6826, -59.1282, 1.03 ) }
    dend_9 { pt3dadd( 50.2909, 47.2184, -60.3192, 0.29 ) }
    dend_9 { pt3dadd( 51.1336, 47.5575, -60.9737, 0.37 ) }
    dend_9 { pt3dadd( 51.8814, 47.879, -61.5069, 0.37 ) }
    dend_9 { pt3dadd( 52.5964, 48.2318, -61.9857, 0.22 ) }
    dend_9 { pt3dadd( 53.1461, 48.541, -62.3872, 0.22 ) }
    dend_9 { pt3dadd( 54.001, 49.0785, -63.0917, 0.22 ) }
    dend_9 { pt3dadd( 54.4902, 49.4607, -63.5893, 0.22 ) }
    dend_9 { pt3dadd( 54.8981, 49.8306, -64.0664, 0.22 ) }
    dend_9 { pt3dadd( 55.9069, 50.7805, -65.2803, 1.62 ) }
    dend_9 { pt3dadd( 56.6953, 51.4835, -66.1928, 2.5 ) }
    dend_9 { pt3dadd( 57.0711, 51.7878, -66.5968, 2.73 ) }
    dend_9 { pt3dadd( 57.8374, 52.3502, -67.3583, 2.14 ) }
    dend_9 { pt3dadd( 59.9383, 53.8268, -69.4063, 0.22 ) }
    dend_9 { pt3dadd( 60.4493, 54.1745, -69.908, 0.22 ) }
    dend_9 { pt3dadd( 61.0549, 54.5897, -70.5174, 0.44 ) }
    dend_9 { pt3dadd( 61.327, 54.7839, -70.7948, 0.44 ) }
    dend_9 { pt3dadd( 62.147, 55.4208, -71.6489, 0.29 ) }
    dend_9 { pt3dadd( 62.7391, 55.8952, -72.2841, 0.74 ) }
    dend_9 { pt3dadd( 63.2491, 56.2984, -72.8591, 0.74 ) }
    dend_9 { pt3dadd( 64.3517, 57.1436, -74.1332, 0.22 ) }
    dend_9 { pt3dadd( 65.0424, 57.664, -74.9378, 0.22 ) }
    dend_9 { pt3dadd( 66.2964, 58.5865, -76.4374, 1.84 ) }
    dend_9 { pt3dadd( 66.8919, 59.0012, -77.1348, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 68.3501, 59.9618, -78.8927, 0.29 ) }
    dend_9 { pt3dadd( 68.8287, 60.2363, -79.5134, 0.44 ) }
    dend_9 { pt3dadd( 69.2434, 60.4455, -80.0976, 0.44 ) }
    dend_9 { pt3dadd( 70.1583, 60.868, -81.5363, 0.29 ) }
    dend_9 { pt3dadd( 71.0026, 61.2204, -83.0123, 1.84 ) }
    dend_9 { pt3dadd( 71.7897, 61.598, -84.6186, 2.14 ) }
    dend_9 { pt3dadd( 72.9911, 62.2651, -87.4998, 0.29 ) }
    dend_9 { pt3dadd( 73.6977, 62.7051, -89.2482, 0.81 ) }
    dend_9 { pt3dadd( 74.2633, 63.0585, -90.6038, 0.81 ) }
    dend_9 { pt3dadd( 74.7107, 63.3379, -91.6235, 0.52 ) }
    dend_9 { pt3dadd( 75.9, 64.1269, -94.2555, 0.52 ) }
    dend_9 { pt3dadd( 76.3809, 64.4648, -95.2087, 0.81 ) }
    dend_9 { pt3dadd( 77.7287, 65.4631, -97.5455, 2.14 ) }
    dend_9 { pt3dadd( 78.1837, 65.781, -98.2323, 2.65 ) }
    dend_9 { pt3dadd( 78.4821, 65.9788, -98.6235, 2.65 ) }
    dend_9 { pt3dadd( 80.6871, 67.3392, -101.109, 0.29 ) }
    dend_9 { pt3dadd( 81.3584, 67.7463, -101.767, 0.22 ) }
    dend_9 { pt3dadd( 82.1139, 68.2477, -102.481, 0.96 ) }
    dend_9 { pt3dadd( 82.6353, 68.6356, -102.976, 1.18 ) }
    dend_9 { pt3dadd( 83.3122, 69.1743, -103.614, 0.96 ) }
    dend_9 { pt3dadd( 84.1778, 69.8762, -104.36, 0.22 ) }
    dend_9 { pt3dadd( 84.979, 70.5201, -104.904, 0.22 ) }
    dend_9 { pt3dadd( 85.543, 70.9587, -105.268, 0.22 ) }
    dend_9 { pt3dadd( 86.7382, 71.7706, -106.038, 1.4 ) }
    dend_9 { pt3dadd( 87.453, 72.2355, -106.493, 1.84 ) }
    dend_9 { pt3dadd( 87.6162, 72.3422, -106.597, 2.06 ) }
    dend_9 { pt3dadd( 88.2147, 72.7137, -106.979, 1.99 ) }
    dend_9 { pt3dadd( 89.1379, 73.2374, -107.562, 0.88 ) }
    dend_9 { pt3dadd( 90.6002, 74.0658, -108.455, 0.22 ) }
    dend_9 { pt3dadd( 91.2395, 74.435, -108.808, 0.29 ) }
    dend_9 { pt3dadd( 91.9146, 74.8024, -109.127, 0.29 ) }
    dend_9 { pt3dadd( 92.5701, 75.1252, -109.42, 0.29 ) }
    dend_9 { pt3dadd( 92.9627, 75.2969, -109.587, 0.66 ) }
    dend_9 { pt3dadd( 93.5143, 75.5016, -109.799, 0.66 ) }
    dend_9 { pt3dadd( 93.9923, 75.6499, -109.974, 0.66 ) }
    dend_9 { pt3dadd( 94.8491, 75.86, -110.307, 0.22 ) }
    dend_9 { pt3dadd( 95.6145, 76.0196, -110.612, 0.22 ) }
    dend_9 { pt3dadd( 96.7729, 76.2642, -111.086, 1.33 ) }
    dend_9 { pt3dadd( 97.8905, 76.5071, -111.57, 2.14 ) }
    dend_9 { pt3dadd( 98.4474, 76.6434, -111.827, 2.28 ) }
    dend_9 { pt3dadd( 99.1175, 76.8295, -112.148, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.3553, 32.7824, -1.75643, 0.59 ) }
    dend_4 { pt3dadd( 8.62623, 34.0036, -2.33493, 0.59 ) }
    dend_4 { pt3dadd( 8.14576, 34.3084, -2.56081, 0.96 ) }
    dend_4 { pt3dadd( 7.68483, 34.5656, -2.77604, 0.96 ) }
    dend_4 { pt3dadd( 7.19879, 34.7975, -3.06285, 0.81 ) }
    dend_4 { pt3dadd( 6.15736, 35.276, -3.81814, 0.59 ) }
    dend_4 { pt3dadd( 5.7572, 35.4869, -4.13802, 0.81 ) }
    dend_4 { pt3dadd( 5.30404, 35.7586, -4.56707, 0.81 ) }
    dend_4 { pt3dadd( 5.02483, 35.9662, -4.85688, 0.74 ) }
    dend_4 { pt3dadd( 4.25659, 36.7219, -5.72407, 0.74 ) }
    dend_4 { pt3dadd( 3.77784, 37.4066, -6.31184, 0.74 ) }
    dend_4 { pt3dadd( 3.42031, 38.2693, -6.80862, 0.52 ) }
    dend_4 { pt3dadd( 3.29919, 38.871, -7.05461, 0.66 ) }
    dend_4 { pt3dadd( 3.27247, 39.8036, -7.25265, 0.96 ) }
    dend_4 { pt3dadd( 3.34076, 40.4482, -7.29821, 0.88 ) }
    dend_4 { pt3dadd( 3.47048, 41.0271, -7.24621, 0.44 ) }
    dend_4 { pt3dadd( 3.65384, 41.613, -7.12999, 0.29 ) }
    dend_4 { pt3dadd( 3.91951, 42.2691, -6.92883, 0.29 ) }
    dend_4 { pt3dadd( 4.23794, 42.9939, -6.66359, 0.88 ) }
    dend_4 { pt3dadd( 4.42285, 43.416, -6.49291, 1.11 ) }
    dend_4 { pt3dadd( 4.59777, 43.8518, -6.30687, 1.18 ) }
    dend_4 { pt3dadd( 4.73914, 44.2817, -6.12748, 0.88 ) }
    dend_4 { pt3dadd( 4.99389, 45.3418, -5.74005, 0.37 ) }
    dend_4 { pt3dadd( 5.09102, 45.9741, -5.55275, 0.29 ) }
    dend_4 { pt3dadd( 5.15311, 46.8436, -5.39436, 0.29 ) }
    dend_4 { pt3dadd( 5.14268, 47.4359, -5.32375, 0.29 ) }
    dend_4 { pt3dadd( 5.03657, 48.4782, -5.36318, 1.25 ) }
    dend_4 { pt3dadd( 4.9335, 49.1658, -5.48199, 1.77 ) }
    dend_4 { pt3dadd( 4.88035, 49.4938, -5.58105, 1.92 ) }
    dend_4 { pt3dadd( 4.78996, 50.149, -5.81244, 1.92 ) }
    dend_4 { pt3dadd( 4.72749, 50.7875, -6.05821, 1.11 ) }
    dend_4 { pt3dadd( 4.66486, 52.3029, -6.68714, 0.44 ) }
    dend_4 { pt3dadd( 4.66436, 52.9898, -6.96465, 0.66 ) }
    dend_4 { pt3dadd( 4.67991, 53.7096, -7.19888, 0.88 ) }
    dend_4 { pt3dadd( 4.70201, 54.2828, -7.35209, 1.11 ) }
    dend_4 { pt3dadd( 4.72519, 54.7423, -7.44961, 1.11 ) }
    dend_4 { pt3dadd( 4.75956, 55.4281, -7.59267, 0.66 ) }
    dend_4 { pt3dadd( 4.79371, 56.4176, -7.74607, 0.37 ) }
    dend_4 { pt3dadd( 4.83487, 57.6522, -7.92791, 0.88 ) }
    dend_4 { pt3dadd( 4.86234, 58.2514, -8.03485, 1.47 ) }
    dend_4 { pt3dadd( 4.91298, 58.8177, -8.15027, 1.77 ) }
    dend_4 { pt3dadd( 5.01157, 59.5146, -8.32812, 1.92 ) }
    dend_4 { pt3dadd( 5.10748, 59.9691, -8.48569, 2.14 ) }
    dend_4 { pt3dadd( 5.29768, 60.6046, -8.81027, 2.14 ) }
    dend_4 { pt3dadd( 5.50029, 61.3143, -9.43411, 1.62 ) }
    dend_4 { pt3dadd( 5.59902, 61.788, -9.97476, 1.11 ) }
    dend_4 { pt3dadd( 5.66724, 62.3913, -10.7418, 0.66 ) }
    dend_4 { pt3dadd( 5.65151, 62.9755, -11.5477, 0.81 ) }
    dend_4 { pt3dadd( 5.55237, 63.5084, -12.3439, 0.66 ) }
    dend_4 { pt3dadd( 5.0435, 64.9637, -14.6667, 0.81 ) }
    dend_4 { pt3dadd( 4.79691, 65.4605, -15.4322, 0.74 ) }
    dend_4 { pt3dadd( 4.56206, 65.8409, -15.9947, 1.11 ) }
    dend_4 { pt3dadd( 4.04532, 66.5626, -16.9727, 1.62 ) }
    dend_4 { pt3dadd( 3.56019, 67.1788, -17.7252, 1.69 ) }
    dend_4 { pt3dadd( 3.00095, 67.8563, -18.4313, 1.55 ) }
    dend_4 { pt3dadd( 2.44596, 68.6052, -19.0275, 0.37 ) }
    dend_4 { pt3dadd( 2.26588, 68.9226, -19.239, 0.52 ) }
    dend_4 { pt3dadd( 2.07371, 69.3992, -19.499, 0.66 ) }
    dend_4 { pt3dadd( 1.94661, 69.8405, -19.683, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 1.81523, 70.4241, -19.8982, 0.22 ) }
    dend_4 { pt3dadd( 1.63758, 71.2822, -20.2658, 0.22 ) }
    dend_4 { pt3dadd( 1.35571, 72.579, -20.9407, 1.99 ) }
    dend_4 { pt3dadd( 1.18558, 73.2779, -21.3291, 2.43 ) }
    dend_4 { pt3dadd( 1.02648, 73.8703, -21.6695, 2.73 ) }
    dend_4 { pt3dadd( 0.87368, 74.3602, -21.9692, 2.95 ) }
    dend_4 { pt3dadd( 0.0511759, 76.5247, -23.3489, 0.52 ) }
    dend_4 { pt3dadd( -0.282032, 77.2085, -23.8076, 0.59 ) }
    dend_4 { pt3dadd( -0.520406, 77.6366, -24.1092, 1.11 ) }
    dend_4 { pt3dadd( -0.67729, 77.9151, -24.303, 1.25 ) }
    dend_4 { pt3dadd( -0.938563, 78.4076, -24.6065, 1.25 ) }
    dend_4 { pt3dadd( -1.2972, 79.1056, -25.0, 0.22 ) }
    dend_4 { pt3dadd( -1.61429, 79.7171, -25.3278, 0.22 ) }
    dend_4 { pt3dadd( -1.90436, 80.3031, -25.6674, 0.37 ) }
    dend_4 { pt3dadd( -2.18117, 80.8575, -26.049, 0.37 ) }
    dend_4 { pt3dadd( -2.63794, 81.8106, -26.7155, 1.69 ) }
    dend_4 { pt3dadd( -2.97808, 82.5281, -27.2035, 2.28 ) }
    dend_4 { pt3dadd( -3.18965, 82.9569, -27.4967, 2.65 ) }
    dend_4 { pt3dadd( -3.4694, 83.5313, -27.8636, 2.65 ) }
    dend_4 { pt3dadd( -3.89241, 84.4165, -28.4046, 2.5 ) }
    dend_4 { pt3dadd( -4.54098, 85.8839, -29.243, 0.29 ) }
    dend_4 { pt3dadd( -4.75188, 86.4504, -29.5523, 0.29 ) }
    dend_4 { pt3dadd( -4.90842, 87.0101, -29.8443, 0.29 ) }
    dend_4 { pt3dadd( -5.0545, 87.6771, -30.1858, 0.74 ) }
    dend_4 { pt3dadd( -5.17136, 88.3231, -30.5129, 0.96 ) }
    dend_4 { pt3dadd( -5.29183, 89.0808, -30.9175, 0.96 ) }
    dend_4 { pt3dadd( -5.41534, 89.6749, -31.3151, 0.29 ) }
    dend_4 { pt3dadd( -5.65871, 90.5295, -31.9319, 0.22 ) }
    dend_4 { pt3dadd( -5.75562, 90.7723, -32.1135, 0.22 ) }
    dend_4 { pt3dadd( -5.9292, 91.0934, -32.3745, 0.22 ) }
    dend_4 { pt3dadd( -6.20555, 91.5356, -32.7334, 0.22 ) }
    dend_4 { pt3dadd( -6.98601, 92.6768, -33.7242, 2.28 ) }
    dend_4 { pt3dadd( -7.32181, 93.1678, -34.1996, 2.43 ) }
    dend_4 { pt3dadd( -7.57214, 93.548, -34.5872, 2.65 ) }
    dend_4 { pt3dadd( -8.59129, 95.244, -36.3766, 0.59 ) }
    dend_4 { pt3dadd( -8.87335, 95.7505, -36.9257, 0.52 ) }
    dend_4 { pt3dadd( -9.36274, 96.6872, -37.9452, 0.59 ) }
    dend_4 { pt3dadd( -9.84684, 97.682, -38.9965, 0.37 ) }
    dend_4 { pt3dadd( -10.0245, 98.085, -39.393, 0.52 ) }
    dend_4 { pt3dadd( -10.1928, 98.5245, -39.7882, 0.66 ) }
    dend_4 { pt3dadd( -10.3262, 98.9154, -40.0936, 0.66 ) }
    dend_4 { pt3dadd( -10.4836, 99.4199, -40.4312, 0.44 ) }
    dend_4 { pt3dadd( -10.8307, 100.595, -41.097, 2.14 ) }
    dend_4 { pt3dadd( -11.1055, 101.505, -41.5728, 2.5 ) }
    dend_4 { pt3dadd( -11.3262, 102.235, -41.9546, 1.92 ) }
    dend_4 { pt3dadd( -11.8251, 103.893, -42.8109, 0.22 ) }
    dend_4 { pt3dadd( -12.03, 104.595, -43.1573, 0.22 ) }
    dend_4 { pt3dadd( -12.4849, 106.228, -43.9196, 1.69 ) }
    dend_4 { pt3dadd( -12.5689, 106.54, -44.0469, 2.06 ) }
    dend_4 { pt3dadd( -12.7315, 107.192, -44.2657, 2.14 ) }
    dend_4 { pt3dadd( -12.8146, 107.543, -44.3624, 1.62 ) }
    dend_4 { pt3dadd( -13.128, 109.008, -44.7186, 0.37 ) }
    dend_4 { pt3dadd( -13.296, 109.799, -44.9118, 0.37 ) }
    dend_4 { pt3dadd( -13.5451, 111.006, -45.1955, 0.37 ) }
    dend_4 { pt3dadd( -13.7341, 111.871, -45.4115, 0.37 ) }
    dend_4 { pt3dadd( -14.1421, 113.704, -45.8926, 1.69 ) }
    dend_4 { pt3dadd( -14.2689, 114.255, -46.0442, 1.92 ) }
    dend_4 { pt3dadd( -14.3455, 114.589, -46.1385, 1.92 ) }
    dend_4 { pt3dadd( -14.6054, 115.726, -46.4718, 0.22 ) }
    dend_4 { pt3dadd( -14.7854, 116.586, -46.731, 0.22 ) }
    dend_4 { pt3dadd( -14.9077, 117.325, -46.9291, 0.37 ) }
    dend_4 { pt3dadd( -14.9782, 117.882, -47.0736, 0.37 ) }
    dend_4 { pt3dadd( -15.0428, 118.528, -47.2287, 1.33 ) }
    dend_4 { pt3dadd( -15.0722, 119.002, -47.3418, 1.84 ) }
    dend_4 { pt3dadd( -15.0883, 119.52, -47.456, 1.84 ) }
    dend_4 { pt3dadd( -15.108, 120.815, -47.7145, 0.29 ) }
    dend_4 { pt3dadd( -15.135, 121.617, -47.8569, 0.44 ) }
    dend_4 { pt3dadd( -15.1533, 121.99, -47.9166, 0.59 ) }
    dend_4 { pt3dadd( -15.1931, 122.586, -47.9927, 0.59 ) }
    dend_4 { pt3dadd( -15.2979, 123.699, -48.1406, 0.22 ) }
    dend_4 { pt3dadd( -15.3956, 124.499, -48.263, 1.33 ) }
    dend_4 { pt3dadd( -15.4582, 124.865, -48.3288, 1.77 ) }
    dend_4 { pt3dadd( -15.529, 125.232, -48.3913, 1.92 ) }
    dend_4 { pt3dadd( -15.6077, 125.599, -48.4599, 1.4 ) }
    dend_4 { pt3dadd( -16.0573, 127.35, -48.9321, 0.22 ) }
    dend_4 { pt3dadd( -16.2632, 128.082, -49.1714, 0.22 ) }
    dend_4 { pt3dadd( -16.5728, 129.178, -49.5673, 1.11 ) }
    dend_4 { pt3dadd( -16.7167, 129.715, -49.7708, 1.55 ) }
    dend_4 { pt3dadd( -16.8574, 130.272, -49.9833, 1.4 ) }
    dend_4 { pt3dadd( -17.3627, 132.355, -50.7827, 0.29 ) }
    dend_4 { pt3dadd( -17.4906, 132.902, -50.975, 0.37 ) }
    dend_4 { pt3dadd( -17.6, 133.39, -51.1493, 0.44 ) }
    dend_4 { pt3dadd( -17.7205, 133.978, -51.3595, 0.44 ) }
    dend_4 { pt3dadd( -17.8255, 134.53, -51.5426, 0.22 ) }
    dend_4 { pt3dadd( -17.8989, 135.033, -51.6922, 0.22 ) }
    dend_4 { pt3dadd( -18.013, 136.137, -51.9808, 1.33 ) }
    dend_4 { pt3dadd( -18.0902, 136.75, -52.2174, 1.55 ) }
    dend_4 { pt3dadd( -18.1441, 137.094, -52.3849, 1.55 ) }
    dend_4 { pt3dadd( -18.4329, 138.616, -53.2935, 0.22 ) }
    dend_4 { pt3dadd( -18.6509, 139.548, -53.9874, 0.22 ) }
    dend_4 { pt3dadd( -18.7824, 140.049, -54.405, 0.66 ) }
    dend_4 { pt3dadd( -19.286, 141.7, -55.9844, 0.44 ) }
    dend_4 { pt3dadd( -19.5689, 142.559, -56.9479, 1.4 ) }
    dend_4 { pt3dadd( -19.8287, 143.293, -57.8215, 1.77 ) }
    dend_4 { pt3dadd( -20.3328, 144.573, -59.4805, 1.33 ) }
    dend_4 { pt3dadd( -20.5581, 145.096, -60.1903, 1.62 ) }
    dend_4 { pt3dadd( -21.1859, 146.525, -62.1707, 0.74 ) }
    dend_4 { pt3dadd( -22.2287, 149.017, -65.6001, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 99.1175, 76.8295, -112.148, 0.44 ) }
    dend_11 { pt3dadd( 100.08, 77.0604, -112.525, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 100.663, 77.218, -112.778, 0.37 ) }
    dend_11 { pt3dadd( 101.378, 77.4215, -113.1, 0.29 ) }
    dend_11 { pt3dadd( 101.819, 77.5385, -113.317, 0.59 ) }
    dend_11 { pt3dadd( 102.678, 77.7183, -113.798, 0.29 ) }
    dend_11 { pt3dadd( 103.265, 77.8429, -114.138, 0.96 ) }
    dend_11 { pt3dadd( 103.684, 77.9604, -114.407, 1.25 ) }
    dend_11 { pt3dadd( 104.028, 78.0684, -114.634, 1.33 ) }
    dend_11 { pt3dadd( 104.868, 78.3413, -115.19, 0.22 ) }
    dend_11 { pt3dadd( 105.903, 78.6862, -115.9, 0.22 ) }
    dend_11 { pt3dadd( 106.445, 78.87, -116.273, 0.37 ) }
    dend_11 { pt3dadd( 107.194, 79.1355, -116.781, 0.22 ) }
    dend_11 { pt3dadd( 107.8, 79.3779, -117.17, 1.18 ) }
    dend_11 { pt3dadd( 108.214, 79.5658, -117.426, 1.4 ) }
    dend_11 { pt3dadd( 108.577, 79.7557, -117.627, 1.4 ) }
    dend_11 { pt3dadd( 109.085, 80.0432, -117.872, 0.44 ) }
    dend_11 { pt3dadd( 109.718, 80.376, -118.148, 0.22 ) }
    dend_11 { pt3dadd( 110.083, 80.5586, -118.3, 0.52 ) }
    dend_11 { pt3dadd( 110.368, 80.7015, -118.427, 0.52 ) }
    dend_11 { pt3dadd( 111.271, 81.1789, -118.828, 0.22 ) }
    dend_11 { pt3dadd( 111.831, 81.4727, -119.072, 0.81 ) }
    dend_11 { pt3dadd( 112.396, 81.7429, -119.341, 1.25 ) }
    dend_11 { pt3dadd( 113.072, 82.0337, -119.665, 1.25 ) }
    dend_11 { pt3dadd( 114.132, 82.438, -120.154, 0.22 ) }
    dend_11 { pt3dadd( 114.636, 82.6174, -120.388, 0.59 ) }
    dend_11 { pt3dadd( 115.034, 82.7473, -120.573, 0.74 ) }
    dend_11 { pt3dadd( 116.367, 83.0936, -121.177, 0.22 ) }
    dend_11 { pt3dadd( 117.048, 83.2374, -121.474, 0.22 ) }
    dend_11 { pt3dadd( 118.059, 83.4134, -121.866, 1.25 ) }
    dend_11 { pt3dadd( 118.609, 83.4919, -122.07, 1.62 ) }
    dend_11 { pt3dadd( 118.807, 83.5204, -122.148, 1.62 ) }
    dend_11 { pt3dadd( 120.598, 83.7913, -122.852, 0.22 ) }
    dend_11 { pt3dadd( 121.1, 83.8629, -123.044, 0.22 ) }
    dend_11 { pt3dadd( 121.921, 83.9629, -123.375, 1.03 ) }
    dend_11 { pt3dadd( 122.47, 84.0111, -123.601, 1.25 ) }
    dend_11 { pt3dadd( 123.727, 84.0959, -124.113, 0.22 ) }
    dend_11 { pt3dadd( 124.242, 84.1227, -124.337, 0.22 ) }
    dend_11 { pt3dadd( 124.634, 84.1389, -124.526, 0.66 ) }
    dend_11 { pt3dadd( 125.62, 84.1404, -125.046, 0.22 ) }
    dend_11 { pt3dadd( 126.272, 84.1136, -125.437, 0.22 ) }
    dend_11 { pt3dadd( 126.804, 84.0745, -125.777, 0.74 ) }
    dend_11 { pt3dadd( 127.291, 84.0435, -126.106, 0.96 ) }
    dend_11 { pt3dadd( 128.136, 84.0248, -126.702, 0.22 ) }
    dend_11 { pt3dadd( 129.117, 84.0486, -127.389, 1.33 ) }
    dend_11 { pt3dadd( 129.641, 84.0833, -127.745, 1.77 ) }
    dend_11 { pt3dadd( 129.923, 84.115, -127.929, 1.77 ) }
    dend_11 { pt3dadd( 131.565, 84.3395, -128.942, 0.22 ) }
    dend_11 { pt3dadd( 131.916, 84.3932, -129.144, 0.22 ) }
    dend_11 { pt3dadd( 132.331, 84.4668, -129.378, 0.74 ) }
    dend_11 { pt3dadd( 132.696, 84.5427, -129.577, 0.74 ) }
    dend_11 { pt3dadd( 133.646, 84.7455, -130.087, 0.22 ) }
    dend_11 { pt3dadd( 134.121, 84.8513, -130.35, 1.03 ) }
    dend_11 { pt3dadd( 134.469, 84.9374, -130.554, 1.33 ) }
    dend_11 { pt3dadd( 134.866, 85.055, -130.783, 1.47 ) }
    dend_11 { pt3dadd( 136.079, 85.4582, -131.455, 0.15 ) }
    dend_11 { pt3dadd( 136.429, 85.5891, -131.634, 0.29 ) }
    dend_11 { pt3dadd( 136.765, 85.736, -131.774, 0.29 ) }
    dend_11 { pt3dadd( 137.527, 86.1097, -131.98, 0.15 ) }
    dend_11 { pt3dadd( 138.139, 86.4567, -132.06, 0.66 ) }
    dend_11 { pt3dadd( 138.375, 86.6064, -132.063, 0.74 ) }
    dend_11 { pt3dadd( 138.551, 86.7324, -132.041, 0.74 ) }
    dend_11 { pt3dadd( 139.424, 87.3376, -131.891, 0.15 ) }
    dend_11 { pt3dadd( 140.334, 87.9565, -131.717, 0.15 ) }
    dend_11 { pt3dadd( 140.97, 88.3803, -131.59, 1.03 ) }
    dend_11 { pt3dadd( 141.275, 88.5794, -131.537, 1.18 ) }
    dend_11 { pt3dadd( 141.498, 88.7178, -131.504, 1.18 ) }
    dend_11 { pt3dadd( 142.737, 89.4421, -131.361, 0.15 ) }
    dend_11 { pt3dadd( 143.216, 89.7103, -131.33, 0.81 ) }
    dend_11 { pt3dadd( 143.54, 89.8922, -131.33, 1.11 ) }
    dend_11 { pt3dadd( 143.824, 90.0523, -131.338, 1.11 ) }
    dend_11 { pt3dadd( 145.859, 91.2191, -131.476, 0.22 ) }
    dend_11 { pt3dadd( 146.519, 91.6051, -131.518, 0.88 ) }
    dend_11 { pt3dadd( 146.919, 91.8512, -131.539, 0.74 ) }
    dend_11 { pt3dadd( 147.939, 92.4847, -131.555, 0.22 ) }
    dend_11 { pt3dadd( 148.331, 92.7293, -131.547, 0.59 ) }
    dend_11 { pt3dadd( 148.775, 93.0205, -131.521, 0.74 ) }
    dend_11 { pt3dadd( 149.866, 93.8137, -131.389, 0.22 ) }
    dend_11 { pt3dadd( 150.366, 94.1702, -131.308, 1.47 ) }
    dend_11 { pt3dadd( 150.878, 94.5167, -131.203, 1.77 ) }
    dend_11 { pt3dadd( 151.226, 94.7336, -131.125, 1.77 ) }
    dend_11 { pt3dadd( 152.627, 95.591, -130.779, 0.22 ) }
    dend_11 { pt3dadd( 153.25, 95.9709, -130.621, 0.66 ) }
    dend_11 { pt3dadd( 153.669, 96.2245, -130.531, 0.88 ) }
    dend_11 { pt3dadd( 154.531, 96.7377, -130.316, 0.22 ) }
    dend_11 { pt3dadd( 154.95, 96.9939, -130.207, 0.44 ) }
    dend_11 { pt3dadd( 155.8, 97.5305, -129.949, 0.22 ) }
    dend_11 { pt3dadd( 155.923, 97.6103, -129.904, 0.81 ) }
    dend_11 { pt3dadd( 156.156, 97.7852, -129.819, 0.81 ) }
    dend_11 { pt3dadd( 157.228, 98.7763, -129.452, 0.22 ) }
    dend_11 { pt3dadd( 157.739, 99.2908, -129.306, 1.03 ) }
    dend_11 { pt3dadd( 157.91, 99.4666, -129.265, 1.33 ) }
    dend_11 { pt3dadd( 158.177, 99.7364, -129.217, 1.33 ) }
    dend_11 { pt3dadd( 159.571, 101.039, -129.124, 0.22 ) }
    dend_11 { pt3dadd( 160.267, 101.621, -129.153, 0.22 ) }
    dend_11 { pt3dadd( 161.043, 102.173, -129.264, 1.03 ) }
    dend_11 { pt3dadd( 161.39, 102.378, -129.333, 1.33 ) }
    dend_11 { pt3dadd( 161.695, 102.52, -129.402, 1.33 ) }
    dend_11 { pt3dadd( 163.083, 103.016, -129.734, 0.22 ) }
    dend_11 { pt3dadd( 164.048, 103.256, -129.971, 0.22 ) }
    dend_11 { pt3dadd( 164.967, 103.444, -130.174, 0.74 ) }
    dend_11 { pt3dadd( 165.494, 103.55, -130.261, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 166.635, 103.782, -130.367, 0.22 ) }
    dend_11 { pt3dadd( 167.185, 103.893, -130.37, 0.22 ) }
    dend_11 { pt3dadd( 167.46, 103.95, -130.336, 0.66 ) }
    dend_11 { pt3dadd( 167.691, 103.988, -130.303, 0.66 ) }
    dend_11 { pt3dadd( 168.664, 104.12, -130.189, 0.22 ) }
    dend_11 { pt3dadd( 169.28, 104.192, -130.133, 0.88 ) }
    dend_11 { pt3dadd( 169.437, 104.207, -130.124, 1.18 ) }
    dend_11 { pt3dadd( 169.621, 104.221, -130.121, 1.18 ) }
    dend_11 { pt3dadd( 171.294, 104.323, -130.094, 0.22 ) }
    dend_11 { pt3dadd( 172.029, 104.363, -130.086, 0.44 ) }
    dend_11 { pt3dadd( 172.32, 104.381, -130.083, 0.29 ) }
    dend_11 { pt3dadd( 172.814, 104.434, -130.137, 0.29 ) }
    dend_11 { pt3dadd( 173.64, 104.587, -130.308, 0.96 ) }
    dend_11 { pt3dadd( 174.044, 104.686, -130.44, 1.18 ) }
    dend_11 { pt3dadd( 174.369, 104.783, -130.573, 1.18 ) }
    dend_11 { pt3dadd( 174.655, 104.87, -130.694, 0.88 ) }
    dend_11 { pt3dadd( 176.632, 105.493, -131.63, 0.22 ) }
    dend_11 { pt3dadd( 177.001, 105.616, -131.826, 0.81 ) }
    dend_11 { pt3dadd( 177.341, 105.733, -132.022, 0.81 ) }
    dend_11 { pt3dadd( 178.409, 106.042, -132.596, 0.22 ) }
    dend_11 { pt3dadd( 178.895, 106.171, -132.85, 0.22 ) }
    dend_11 { pt3dadd( 179.714, 106.369, -133.254, 1.03 ) }
    dend_11 { pt3dadd( 180.198, 106.481, -133.472, 1.11 ) }
    dend_11 { pt3dadd( 181.516, 106.794, -134.132, 0.22 ) }
    dend_11 { pt3dadd( 182.342, 107.018, -134.586, 0.22 ) }
    dend_11 { pt3dadd( 183.174, 107.26, -135.11, 0.96 ) }
    dend_11 { pt3dadd( 183.616, 107.387, -135.402, 1.18 ) }
    dend_11 { pt3dadd( 185.029, 107.814, -136.383, 0.22 ) }
    dend_11 { pt3dadd( 185.691, 108.032, -136.877, 0.22 ) }
    dend_11 { pt3dadd( 186.303, 108.257, -137.374, 1.11 ) }
    dend_11 { pt3dadd( 186.733, 108.433, -137.77, 1.33 ) }
    dend_11 { pt3dadd( 186.847, 108.477, -137.884, 1.47 ) }
    dend_11 { pt3dadd( 187.384, 108.682, -138.478, 1.18 ) }
    dend_11 { pt3dadd( 188.168, 108.995, -139.465, 0.15 ) }
    dend_11 { pt3dadd( 188.508, 109.126, -139.913, 0.59 ) }
    dend_11 { pt3dadd( 189.039, 109.311, -140.623, 0.81 ) }
    dend_11 { pt3dadd( 189.767, 109.566, -141.592, 0.22 ) }
    dend_11 { pt3dadd( 190.212, 109.739, -142.211, 1.03 ) }
    dend_11 { pt3dadd( 190.566, 109.895, -142.74, 1.25 ) }
    dend_11 { pt3dadd( 191.365, 110.393, -144.19, 0.22 ) }
    dend_11 { pt3dadd( 191.694, 110.647, -144.833, 0.37 ) }
    dend_11 { pt3dadd( 191.981, 110.913, -145.434, 0.15 ) }
    dend_11 { pt3dadd( 192.346, 111.307, -146.271, 0.59 ) }
    dend_11 { pt3dadd( 192.554, 111.543, -146.834, 0.59 ) }
    dend_11 { pt3dadd( 193.154, 112.172, -148.554, 0.22 ) }
    dend_11 { pt3dadd( 193.352, 112.362, -149.107, 0.22 ) }
    dend_11 { pt3dadd( 193.888, 112.793, -150.484, 1.25 ) }
    dend_11 { pt3dadd( 194.031, 112.882, -150.812, 1.92 ) }
    dend_11 { pt3dadd( 195.523, 113.634, -154.108, 0.52 ) }
    dend_11 { pt3dadd( 196.15, 113.914, -155.511, 0.29 ) }
    dend_11 { pt3dadd( 196.475, 114.056, -156.257, 0.96 ) }
    dend_11 { pt3dadd( 196.81, 114.226, -157.065, 1.18 ) }
    dend_11 { pt3dadd( 197.378, 114.565, -158.425, 0.81 ) }
    dend_11 { pt3dadd( 198.307, 115.239, -160.732, 1.69 ) }
    dend_11 { pt3dadd( 198.712, 115.631, -161.778, 1.92 ) }
    dend_11 { pt3dadd( 199.504, 116.632, -164.05, 0.22 ) }
    dend_11 { pt3dadd( 199.682, 116.93, -164.636, 0.22 ) }
    dend_11 { pt3dadd( 199.877, 117.372, -165.366, 1.33 ) }
    dend_11 { pt3dadd( 200.107, 118.123, -166.413, 1.33 ) }
    dend_11 { pt3dadd( 200.349, 119.351, -167.917, 0.22 ) }
    dend_11 { pt3dadd( 200.391, 119.885, -168.555, 0.22 ) }
    dend_11 { pt3dadd( 200.353, 120.597, -169.51, 0.22 ) }
    dend_11 { pt3dadd( 200.273, 121.26, -170.572, 1.4 ) }
    dend_11 { pt3dadd( 200.225, 121.519, -171.06, 1.62 ) }
    dend_11 { pt3dadd( 200.02, 122.539, -173.358, 0.22 ) }
    dend_11 { pt3dadd( 199.92, 123.014, -174.549, 0.96 ) }
    dend_11 { pt3dadd( 199.783, 123.813, -176.712, 1.55 ) }
    dend_11 { pt3dadd( 199.721, 124.474, -178.605, 2.21 ) }
    dend_11 { pt3dadd( 199.713, 124.932, -179.967, 2.43 ) }
    dend_11 { pt3dadd( 199.826, 126.131, -183.541, 0.81 ) }
    dend_11 { pt3dadd( 199.887, 126.415, -184.371, 0.29 ) }
    dend_11 { pt3dadd( 200.029, 126.864, -185.616, 0.74 ) }
    dend_11 { pt3dadd( 200.415, 127.78, -187.913, 0.81 ) }
    dend_11 { pt3dadd( 200.545, 128.016, -188.468, 0.96 ) }
    dend_11 { pt3dadd( 201.057, 128.729, -190.124, 0.22 ) }
    dend_11 { pt3dadd( 201.266, 128.95, -190.644, 0.52 ) }
    dend_11 { pt3dadd( 201.43, 129.102, -191.013, 0.59 ) }
    dend_11 { pt3dadd( 201.888, 129.483, -191.916, 0.22 ) }
    dend_11 { pt3dadd( 202.521, 129.954, -193.092, 1.47 ) }
    dend_11 { pt3dadd( 202.834, 130.211, -193.728, 1.69 ) }
    dend_11 { pt3dadd( 203.51, 130.856, -195.338, 0.37 ) }
    dend_11 { pt3dadd( 203.706, 131.083, -195.905, 0.88 ) }
    dend_11 { pt3dadd( 203.875, 131.33, -196.525, 1.11 ) }
    dend_11 { pt3dadd( 204.289, 132.158, -198.706, 0.22 ) }
    dend_11 { pt3dadd( 204.413, 132.419, -199.432, 0.37 ) }
    dend_11 { pt3dadd( 204.666, 133.021, -201.111, 0.22 ) }
    dend_11 { pt3dadd( 204.864, 133.56, -202.709, 1.47 ) }
    dend_11 { pt3dadd( 204.983, 133.915, -203.809, 1.69 ) }
    dend_11 { pt3dadd( 205.169, 134.548, -205.71, 1.77 ) }
    dend_11 { pt3dadd( 205.271, 134.899, -206.813, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 99.1175, 76.8295, -112.148, 0.29 ) }
    dend_10 { pt3dadd( 100.776, 78.2461, -112.836, 0.29 ) }
    dend_10 { pt3dadd( 101.606, 78.9137, -113.154, 0.29 ) }
    dend_10 { pt3dadd( 102.57, 79.6752, -113.517, 0.81 ) }
    dend_10 { pt3dadd( 103.209, 80.1574, -113.748, 0.96 ) }
    dend_10 { pt3dadd( 104.37, 80.9907, -114.158, 0.22 ) }
    dend_10 { pt3dadd( 105.135, 81.5152, -114.421, 0.44 ) }
    dend_10 { pt3dadd( 105.515, 81.7467, -114.554, 0.44 ) }
    dend_10 { pt3dadd( 106.35, 82.1668, -114.821, 0.22 ) }
    dend_10 { pt3dadd( 107.198, 82.4937, -115.097, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 107.612, 82.6149, -115.215, 1.33 ) }
    dend_10 { pt3dadd( 107.965, 82.6882, -115.307, 1.55 ) }
    dend_10 { pt3dadd( 108.796, 82.7925, -115.48, 1.25 ) }
    dend_10 { pt3dadd( 110.131, 82.8783, -115.685, 0.15 ) }
    dend_10 { pt3dadd( 110.938, 82.8929, -115.751, 0.74 ) }
    dend_10 { pt3dadd( 112.015, 82.8975, -115.76, 1.11 ) }
    dend_10 { pt3dadd( 112.624, 82.9246, -115.786, 1.18 ) }
    dend_10 { pt3dadd( 113.382, 82.9923, -115.858, 0.88 ) }
    dend_10 { pt3dadd( 114.715, 83.1649, -116.017, 0.15 ) }
    dend_10 { pt3dadd( 115.471, 83.3014, -116.166, 0.37 ) }
    dend_10 { pt3dadd( 116.023, 83.4282, -116.33, 0.52 ) }
    dend_10 { pt3dadd( 117.97, 83.9659, -117.177, 0.22 ) }
    dend_10 { pt3dadd( 118.864, 84.2358, -117.633, 1.25 ) }
    dend_10 { pt3dadd( 119.435, 84.4131, -117.965, 1.77 ) }
    dend_10 { pt3dadd( 119.897, 84.5558, -118.262, 1.77 ) }
    dend_10 { pt3dadd( 120.302, 84.6816, -118.53, 1.55 ) }
    dend_10 { pt3dadd( 121.793, 85.1359, -119.475, 0.22 ) }
    dend_10 { pt3dadd( 122.359, 85.3015, -119.784, 0.37 ) }
    dend_10 { pt3dadd( 122.905, 85.4938, -120.095, 0.37 ) }
    dend_10 { pt3dadd( 123.925, 85.8952, -120.682, 0.15 ) }
    dend_10 { pt3dadd( 124.662, 86.2454, -121.072, 0.96 ) }
    dend_10 { pt3dadd( 124.958, 86.4157, -121.221, 1.11 ) }
    dend_10 { pt3dadd( 125.212, 86.5911, -121.342, 1.11 ) }
    dend_10 { pt3dadd( 126.763, 87.7626, -122.019, 0.22 ) }
    dend_10 { pt3dadd( 127.45, 88.3142, -122.306, 0.22 ) }
    dend_10 { pt3dadd( 128.315, 89.0318, -122.646, 0.22 ) }
    dend_10 { pt3dadd( 128.882, 89.5195, -122.88, 0.22 ) }
    dend_10 { pt3dadd( 129.717, 90.2763, -123.212, 1.18 ) }
    dend_10 { pt3dadd( 130.074, 90.6075, -123.345, 1.84 ) }
    dend_10 { pt3dadd( 130.467, 91.0004, -123.486, 1.84 ) }
    dend_10 { pt3dadd( 130.698, 91.2379, -123.574, 1.84 ) }
    dend_10 { pt3dadd( 132.143, 92.7227, -124.195, 0.22 ) }
    dend_10 { pt3dadd( 132.867, 93.5225, -124.511, 0.81 ) }
    dend_10 { pt3dadd( 133.139, 93.8545, -124.627, 1.11 ) }
    dend_10 { pt3dadd( 133.572, 94.4127, -124.796, 1.11 ) }
    dend_10 { pt3dadd( 133.794, 94.7099, -124.873, 0.74 ) }
    dend_10 { pt3dadd( 134.474, 95.6049, -125.092, 0.29 ) }
    dend_10 { pt3dadd( 134.887, 96.1337, -125.201, 0.44 ) }
    dend_10 { pt3dadd( 135.283, 96.6019, -125.312, 0.44 ) }
    dend_10 { pt3dadd( 135.754, 97.1099, -125.432, 0.22 ) }
    dend_10 { pt3dadd( 136.137, 97.4898, -125.511, 0.22 ) }
    dend_10 { pt3dadd( 137.103, 98.4084, -125.693, 1.18 ) }
    dend_10 { pt3dadd( 137.43, 98.7041, -125.747, 1.4 ) }
    dend_10 { pt3dadd( 137.782, 99.0299, -125.814, 1.4 ) }
    dend_10 { pt3dadd( 138.29, 99.5023, -125.918, 0.88 ) }
    dend_10 { pt3dadd( 138.706, 99.8842, -125.972, 0.37 ) }
    dend_10 { pt3dadd( 139.47, 100.583, -126.008, 0.22 ) }
    dend_10 { pt3dadd( 139.996, 101.055, -125.984, 0.29 ) }
    dend_10 { pt3dadd( 140.511, 101.511, -125.936, 0.29 ) }
    dend_10 { pt3dadd( 141.579, 102.443, -125.805, 0.22 ) }
    dend_10 { pt3dadd( 142.5, 103.248, -125.681, 0.22 ) }
    dend_10 { pt3dadd( 143.302, 103.976, -125.56, 1.33 ) }
    dend_10 { pt3dadd( 143.816, 104.453, -125.474, 1.55 ) }
    dend_10 { pt3dadd( 145.418, 105.999, -125.196, 0.22 ) }
    dend_10 { pt3dadd( 146.043, 106.644, -125.118, 0.22 ) }
    dend_10 { pt3dadd( 146.862, 107.567, -125.045, 0.22 ) }
    dend_10 { pt3dadd( 147.821, 108.726, -125.017, 1.55 ) }
    dend_10 { pt3dadd( 148.106, 109.082, -125.022, 1.84 ) }
    dend_10 { pt3dadd( 148.402, 109.465, -125.039, 1.84 ) }
    dend_10 { pt3dadd( 149.676, 111.17, -125.169, 0.22 ) }
    dend_10 { pt3dadd( 150.139, 111.802, -125.249, 0.44 ) }
    dend_10 { pt3dadd( 150.63, 112.428, -125.366, 0.59 ) }
    dend_10 { pt3dadd( 151.628, 113.639, -125.637, 0.29 ) }
    dend_10 { pt3dadd( 152.057, 114.159, -125.749, 1.18 ) }
    dend_10 { pt3dadd( 152.488, 114.668, -125.844, 1.4 ) }
    dend_10 { pt3dadd( 152.88, 115.107, -125.909, 1.4 ) }
    dend_10 { pt3dadd( 154.154, 116.453, -126.094, 0.22 ) }
    dend_10 { pt3dadd( 154.631, 116.909, -126.136, 0.22 ) }
    dend_10 { pt3dadd( 155.033, 117.255, -126.14, 0.44 ) }
    dend_10 { pt3dadd( 155.574, 117.713, -126.096, 0.22 ) }
    dend_10 { pt3dadd( 155.838, 117.945, -126.046, 0.22 ) }
    dend_10 { pt3dadd( 156.515, 118.56, -125.874, 1.11 ) }
    dend_10 { pt3dadd( 156.947, 118.977, -125.749, 1.33 ) }
    dend_10 { pt3dadd( 157.01, 119.033, -125.735, 1.55 ) }
    dend_10 { pt3dadd( 158.146, 119.99, -125.6, 0.22 ) }
    dend_10 { pt3dadd( 158.564, 120.325, -125.548, 0.22 ) }
    dend_10 { pt3dadd( 159.019, 120.667, -125.474, 0.44 ) }
    dend_10 { pt3dadd( 159.385, 120.924, -125.395, 0.44 ) }
    dend_10 { pt3dadd( 160.319, 121.588, -125.17, 0.22 ) }
    dend_10 { pt3dadd( 161.086, 122.13, -124.979, 0.22 ) }
    dend_10 { pt3dadd( 162.128, 122.866, -124.707, 1.18 ) }
    dend_10 { pt3dadd( 162.598, 123.239, -124.577, 1.33 ) }
    dend_10 { pt3dadd( 163.139, 123.691, -124.369, 1.11 ) }
    dend_10 { pt3dadd( 164.03, 124.497, -123.944, 0.22 ) }
    dend_10 { pt3dadd( 164.274, 124.737, -123.807, 0.44 ) }
    dend_10 { pt3dadd( 164.699, 125.145, -123.564, 0.44 ) }
    dend_10 { pt3dadd( 165.298, 125.675, -123.275, 0.22 ) }
    dend_10 { pt3dadd( 166.583, 126.63, -122.779, 0.22 ) }
    dend_10 { pt3dadd( 167.175, 126.992, -122.608, 1.11 ) }
    dend_10 { pt3dadd( 167.725, 127.291, -122.469, 1.55 ) }
    dend_10 { pt3dadd( 168.36, 127.641, -122.339, 1.62 ) }
    dend_10 { pt3dadd( 168.901, 127.929, -122.25, 1.25 ) }
    dend_10 { pt3dadd( 170.369, 128.673, -122.072, 0.22 ) }
    dend_10 { pt3dadd( 171.384, 129.211, -122.013, 0.22 ) }
    dend_10 { pt3dadd( 172.025, 129.556, -121.976, 0.22 ) }
    dend_10 { pt3dadd( 173.017, 130.124, -121.915, 0.44 ) }
    dend_10 { pt3dadd( 173.6, 130.494, -121.879, 0.44 ) }
    dend_10 { pt3dadd( 174.295, 130.957, -121.829, 0.22 ) }
    dend_10 { pt3dadd( 174.878, 131.343, -121.786, 0.22 ) }
    dend_10 { pt3dadd( 175.52, 131.741, -121.754, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 175.847, 131.93, -121.76, 0.59 ) }
    dend_10 { pt3dadd( 176.549, 132.349, -121.807, 0.22 ) }
    dend_10 { pt3dadd( 177.403, 132.895, -121.891, 0.74 ) }
    dend_10 { pt3dadd( 177.782, 133.133, -121.937, 0.88 ) }
    dend_10 { pt3dadd( 178.398, 133.497, -122.035, 0.52 ) }
    dend_10 { pt3dadd( 179.439, 134.072, -122.239, 0.22 ) }
    dend_10 { pt3dadd( 180.333, 134.604, -122.472, 0.22 ) }
    dend_10 { pt3dadd( 181.31, 135.24, -122.774, 1.11 ) }
    dend_10 { pt3dadd( 181.811, 135.605, -122.959, 1.47 ) }
    dend_10 { pt3dadd( 182.309, 136.017, -123.171, 1.55 ) }
    dend_10 { pt3dadd( 183.635, 137.299, -123.85, 0.22 ) }
    dend_10 { pt3dadd( 184.68, 138.448, -124.462, 0.96 ) }
    dend_10 { pt3dadd( 184.978, 138.802, -124.653, 1.4 ) }
    dend_10 { pt3dadd( 185.444, 139.421, -124.984, 1.25 ) }
    dend_10 { pt3dadd( 185.792, 139.913, -125.233, 0.88 ) }
    dend_10 { pt3dadd( 186.636, 141.148, -125.812, 0.22 ) }
    dend_10 { pt3dadd( 187.064, 141.821, -126.108, 0.37 ) }
    dend_10 { pt3dadd( 187.502, 142.49, -126.376, 0.22 ) }
    dend_10 { pt3dadd( 188.181, 143.507, -126.802, 0.52 ) }
    dend_10 { pt3dadd( 188.549, 144.063, -127.022, 0.66 ) }
    dend_10 { pt3dadd( 189.21, 145.129, -127.445, 0.22 ) }
    dend_10 { pt3dadd( 189.655, 145.912, -127.747, 0.66 ) }
    dend_10 { pt3dadd( 189.775, 146.149, -127.833, 0.66 ) }
    dend_10 { pt3dadd( 190.464, 147.69, -128.348, 0.22 ) }
    dend_10 { pt3dadd( 190.761, 148.407, -128.531, 0.59 ) }
    dend_10 { pt3dadd( 191.394, 150.109, -128.832, 0.22 ) }
    dend_10 { pt3dadd( 191.601, 150.707, -128.889, 0.22 ) }
    dend_10 { pt3dadd( 191.936, 151.712, -128.928, 1.47 ) }
    dend_10 { pt3dadd( 192.074, 152.188, -128.92, 1.69 ) }
    dend_10 { pt3dadd( 192.56, 154.181, -128.732, 0.22 ) }
    dend_10 { pt3dadd( 192.849, 155.499, -128.577, 0.22 ) }
    dend_10 { pt3dadd( 193.033, 156.462, -128.427, 0.74 ) }
    dend_10 { pt3dadd( 193.131, 156.998, -128.342, 0.88 ) }
    dend_10 { pt3dadd( 193.425, 158.708, -128.073, 0.22 ) }
    dend_10 { pt3dadd( 193.65, 160.12, -127.87, 1.25 ) }
    dend_10 { pt3dadd( 193.74, 160.735, -127.802, 1.25 ) }
    dend_10 { pt3dadd( 193.838, 161.354, -127.747, 0.74 ) }
    dend_10 { pt3dadd( 194.028, 162.482, -127.656, 0.22 ) }
    dend_10 { pt3dadd( 194.287, 163.774, -127.544, 1.4 ) }
    dend_10 { pt3dadd( 194.396, 164.249, -127.504, 1.62 ) }
    dend_10 { pt3dadd( 194.771, 165.816, -127.359, 0.22 ) }
    dend_10 { pt3dadd( 195.023, 166.767, -127.251, 0.59 ) }
    dend_10 { pt3dadd( 195.13, 167.116, -127.187, 0.59 ) }
    dend_10 { pt3dadd( 195.615, 168.569, -126.822, 0.15 ) }
    dend_10 { pt3dadd( 195.916, 169.379, -126.557, 0.15 ) }
    dend_10 { pt3dadd( 196.199, 170.095, -126.276, 0.15 ) }
    dend_10 { pt3dadd( 196.561, 171.006, -125.887, 0.15 ) }
    dend_10 { pt3dadd( 197.305, 172.842, -125.102, 1.18 ) }
    dend_10 { pt3dadd( 197.422, 173.173, -124.98, 1.47 ) }
    dend_10 { pt3dadd( 197.57, 173.696, -124.832, 1.11 ) }
    dend_10 { pt3dadd( 197.851, 175.011, -124.559, 0.22 ) }
    dend_10 { pt3dadd( 198.003, 176.01, -124.425, 0.96 ) }
    dend_10 { pt3dadd( 198.064, 176.692, -124.392, 0.96 ) }
    dend_10 { pt3dadd( 198.203, 178.548, -124.605, 0.22 ) }
    dend_10 { pt3dadd( 198.343, 179.917, -124.84, 0.22 ) }
    dend_10 { pt3dadd( 198.49, 181.087, -125.085, 1.18 ) }
    dend_10 { pt3dadd( 198.55, 181.502, -125.183, 1.4 ) }
    dend_10 { pt3dadd( 198.694, 182.286, -125.363, 1.55 ) }
    dend_10 { pt3dadd( 199.391, 185.454, -126.098, 0.22 ) }
    dend_10 { pt3dadd( 199.82, 187.046, -126.48, 0.22 ) }
    dend_10 { pt3dadd( 200.147, 188.118, -126.756, 0.81 ) }
    dend_10 { pt3dadd( 200.229, 188.366, -126.824, 1.03 ) }
    dend_10 { pt3dadd( 200.734, 189.894, -127.238, 0.22 ) }
    dend_10 { pt3dadd( 200.963, 190.566, -127.404, 0.66 ) }
    dend_10 { pt3dadd( 201.148, 191.134, -127.529, 0.66 ) }
    dend_10 { pt3dadd( 201.458, 192.14, -127.793, 0.15 ) }
    dend_10 { pt3dadd( 201.823, 193.317, -128.065, 1.25 ) }
    dend_10 { pt3dadd( 202.008, 193.925, -128.171, 1.4 ) }
    dend_10 { pt3dadd( 202.415, 195.279, -128.348, 0.15 ) }
    dend_10 { pt3dadd( 202.666, 196.096, -128.413, 0.37 ) }
    dend_10 { pt3dadd( 202.791, 196.477, -128.426, 0.37 ) }
    dend_10 { pt3dadd( 203.48, 198.527, -128.453, 0.22 ) }
    dend_10 { pt3dadd( 203.871, 199.631, -128.446, 1.03 ) }
    dend_10 { pt3dadd( 204.049, 200.112, -128.434, 1.18 ) }
    dend_10 { pt3dadd( 204.146, 200.375, -128.424, 1.18 ) }
    dend_10 { pt3dadd( 204.824, 202.165, -128.319, 0.22 ) }
    dend_10 { pt3dadd( 205.11, 202.901, -128.286, 0.52 ) }
    dend_10 { pt3dadd( 205.25, 203.242, -128.273, 0.52 ) }
    dend_10 { pt3dadd( 205.87, 204.663, -128.197, 0.22 ) }
    dend_10 { pt3dadd( 206.246, 205.482, -128.132, 0.22 ) }
    dend_10 { pt3dadd( 206.699, 206.394, -128.048, 1.11 ) }
    dend_10 { pt3dadd( 207.068, 207.098, -127.97, 1.11 ) }
    dend_10 { pt3dadd( 208.047, 208.853, -127.769, 0.22 ) }
    dend_10 { pt3dadd( 208.654, 209.884, -127.665, 0.22 ) }
    dend_10 { pt3dadd( 209.217, 210.772, -127.588, 1.03 ) }
    dend_10 { pt3dadd( 209.601, 211.364, -127.549, 1.47 ) }
    dend_10 { pt3dadd( 209.899, 211.828, -127.521, 1.11 ) }
    dend_10 { pt3dadd( 210.696, 213.076, -127.382, 0.15 ) }
    dend_10 { pt3dadd( 210.984, 213.526, -127.334, 0.37 ) }
    dend_10 { pt3dadd( 211.64, 214.552, -127.229, 0.22 ) }
    dend_10 { pt3dadd( 211.985, 215.091, -127.157, 0.37 ) }
    dend_10 { pt3dadd( 212.173, 215.392, -127.121, 0.37 ) }
    dend_10 { pt3dadd( 213.1, 216.809, -126.98, 0.22 ) }
    dend_10 { pt3dadd( 213.67, 217.665, -126.905, 0.81 ) }
    dend_10 { pt3dadd( 214.019, 218.174, -126.866, 1.03 ) }
    dend_10 { pt3dadd( 214.945, 219.476, -126.789, 0.15 ) }
    dend_10 { pt3dadd( 215.487, 220.212, -126.759, 0.29 ) }
    dend_10 { pt3dadd( 215.979, 220.898, -126.75, 0.22 ) }
    dend_10 { pt3dadd( 216.415, 221.542, -126.76, 0.88 ) }
    dend_10 { pt3dadd( 216.657, 221.918, -126.748, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 216.884, 222.313, -126.718, 1.11 ) }
    dend_10 { pt3dadd( 217.62, 223.795, -126.552, 0.22 ) }
    dend_10 { pt3dadd( 217.976, 224.614, -126.413, 1.03 ) }
    dend_10 { pt3dadd( 218.136, 225.034, -126.333, 1.25 ) }
    dend_10 { pt3dadd( 218.646, 226.463, -126.043, 0.22 ) }
    dend_10 { pt3dadd( 219.042, 227.66, -125.783, 0.88 ) }
    dend_10 { pt3dadd( 219.413, 228.833, -125.512, 0.29 ) }
    dend_10 { pt3dadd( 219.699, 229.781, -125.281, 0.96 ) }
    dend_10 { pt3dadd( 219.832, 230.231, -125.17, 0.96 ) }
    dend_10 { pt3dadd( 220.067, 231.063, -124.958, 0.22 ) }
    dend_10 { pt3dadd( 220.242, 231.747, -124.777, 0.37 ) }
    dend_10 { pt3dadd( 220.48, 232.714, -124.524, 0.22 ) }
    dend_10 { pt3dadd( 220.681, 233.566, -124.304, 0.52 ) }
    dend_10 { pt3dadd( 221.101, 235.27, -123.882, 0.22 ) }
    dend_10 { pt3dadd( 221.283, 236.048, -123.702, 0.81 ) }
    dend_10 { pt3dadd( 221.496, 236.997, -123.498, 0.22 ) }
    dend_10 { pt3dadd( 221.658, 237.711, -123.354, 0.88 ) }
    dend_10 { pt3dadd( 221.809, 238.313, -123.251, 1.03 ) }
    dend_10 { pt3dadd( 222.441, 240.578, -122.92, 0.22 ) }
    dend_10 { pt3dadd( 222.684, 241.351, -122.824, 0.22 ) }
    dend_10 { pt3dadd( 222.981, 242.205, -122.727, 0.81 ) }
    dend_10 { pt3dadd( 223.112, 242.559, -122.689, 1.03 ) }
    dend_10 { pt3dadd( 223.799, 244.353, -122.527, 0.22 ) }
    dend_10 { pt3dadd( 223.958, 244.765, -122.484, 0.29 ) }
    dend_10 { pt3dadd( 224.391, 245.902, -122.34, 0.15 ) }
    dend_10 { pt3dadd( 224.626, 246.508, -122.247, 0.29 ) }
    dend_10 { pt3dadd( 224.939, 247.349, -122.111, 0.88 ) }
    dend_10 { pt3dadd( 225.178, 248.07, -121.992, 0.88 ) }
    dend_10 { pt3dadd( 225.649, 249.436, -121.659, 0.22 ) }
    dend_10 { pt3dadd( 225.852, 250.014, -121.489, 0.22 ) }
    dend_10 { pt3dadd( 226.077, 250.701, -121.27, 0.88 ) }
    dend_10 { pt3dadd( 226.23, 251.15, -121.103, 1.11 ) }
    dend_10 { pt3dadd( 226.422, 251.656, -120.892, 1.11 ) }
    dend_10 { pt3dadd( 227.18, 253.26, -120.135, 0.22 ) }
    dend_10 { pt3dadd( 227.7, 254.181, -119.706, 0.22 ) }
    dend_10 { pt3dadd( 228.129, 254.825, -119.376, 0.22 ) }
    dend_10 { pt3dadd( 228.755, 255.63, -118.932, 0.81 ) }
    dend_10 { pt3dadd( 229.032, 255.947, -118.752, 1.03 ) }
    dend_10 { pt3dadd( 230.077, 256.434, -117.756, 0.22 ) }
    dend_10 { pt3dadd( 230.52, 256.511, -117.256, 0.22 ) }
    dend_10 { pt3dadd( 231.312, 256.511, -116.363, 1.11 ) }
    dend_10 { pt3dadd( 231.652, 256.485, -115.993, 1.25 ) }
    dend_10 { pt3dadd( 232.012, 256.439, -115.612, 1.25 ) }
    dend_10 { pt3dadd( 237.231, 255.633, -110.21, 0.66 ) }
    dend_10 { pt3dadd( 237.964, 255.505, -109.464, 0.88 ) }
    dend_10 { pt3dadd( 239.155, 255.248, -108.235, 0.29 ) }
    dend_10 { pt3dadd( 239.813, 255.082, -107.551, 0.22 ) }
    dend_10 { pt3dadd( 240.296, 254.957, -107.05, 0.44 ) }
    dend_10 { pt3dadd( 240.744, 254.847, -106.619, 0.22 ) }
    dend_10 { pt3dadd( 241.599, 255.018, -106.476, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -22.2287, 149.017, -65.6001, 1.77 ) }
    dend_8 { pt3dadd( -22.5543, 149.694, -68.6358, 1.77 ) }
    dend_8 { pt3dadd( -22.8364, 150.551, -71.4513, 1.47 ) }
    dend_8 { pt3dadd( -23.0063, 151.134, -73.0189, 1.18 ) }
    dend_8 { pt3dadd( -23.2127, 151.817, -74.649, 1.11 ) }
    dend_8 { pt3dadd( -23.4433, 152.538, -76.2392, 0.88 ) }
    dend_8 { pt3dadd( -23.5521, 152.839, -76.8722, 0.66 ) }
    dend_8 { pt3dadd( -23.8086, 153.512, -78.0564, 0.96 ) }
    dend_8 { pt3dadd( -24.1577, 154.351, -79.319, 1.11 ) }
    dend_8 { pt3dadd( -24.522, 155.068, -80.4081, 1.33 ) }
    dend_8 { pt3dadd( -24.7409, 155.424, -80.9975, 1.62 ) }
    dend_8 { pt3dadd( -25.3688, 156.28, -82.5205, 1.47 ) }
    dend_8 { pt3dadd( -26.626, 157.783, -85.3582, 0.96 ) }
    dend_8 { pt3dadd( -27.2809, 158.503, -86.7298, 0.96 ) }
    dend_8 { pt3dadd( -28.1772, 159.466, -88.5166, 1.55 ) }
    dend_8 { pt3dadd( -29.0291, 160.382, -90.2117, 1.33 ) }
    dend_8 { pt3dadd( -29.7018, 161.123, -91.5776, 1.62 ) }
    dend_8 { pt3dadd( -30.5789, 162.111, -93.3606, 1.11 ) }
    dend_8 { pt3dadd( -30.8792, 162.45, -93.9588, 0.59 ) }
    dend_8 { pt3dadd( -31.8678, 163.58, -95.9253, 0.88 ) }
    dend_8 { pt3dadd( -32.61, 164.468, -97.391, 1.25 ) }
    dend_8 { pt3dadd( -33.2422, 165.252, -98.623, 1.4 ) }
    dend_8 { pt3dadd( -33.9933, 166.207, -100.084, 0.52 ) }
    dend_8 { pt3dadd( -34.6964, 167.131, -101.42, 0.59 ) }
    dend_8 { pt3dadd( -35.1164, 167.664, -102.214, 0.37 ) }
    dend_8 { pt3dadd( -35.3545, 167.95, -102.624, 0.59 ) }
    dend_8 { pt3dadd( -35.8485, 168.517, -103.418, 0.44 ) }
    dend_8 { pt3dadd( -36.5536, 169.32, -104.514, 0.37 ) }
    dend_8 { pt3dadd( -37.3559, 170.263, -105.764, 1.47 ) }
    dend_8 { pt3dadd( -38.4185, 171.544, -107.402, 1.84 ) }
    dend_8 { pt3dadd( -39.5029, 172.866, -109.026, 0.52 ) }
    dend_8 { pt3dadd( -40.2005, 173.726, -110.015, 0.52 ) }
    dend_8 { pt3dadd( -40.5984, 174.216, -110.531, 1.18 ) }
    dend_8 { pt3dadd( -40.9685, 174.644, -110.939, 1.18 ) }
    dend_8 { pt3dadd( -42.2575, 176.069, -112.123, 0.22 ) }
    dend_8 { pt3dadd( -42.5492, 176.395, -112.338, 0.37 ) }
    dend_8 { pt3dadd( -43.0902, 176.976, -112.699, 0.96 ) }
    dend_8 { pt3dadd( -43.7888, 177.696, -113.152, 1.25 ) }
    dend_8 { pt3dadd( -45.2279, 179.102, -114.087, 0.22 ) }
    dend_8 { pt3dadd( -45.5738, 179.422, -114.339, 0.37 ) }
    dend_8 { pt3dadd( -45.8831, 179.704, -114.585, 0.37 ) }
    dend_8 { pt3dadd( -47.0135, 180.767, -115.65, 1.11 ) }
    dend_8 { pt3dadd( -47.3042, 181.049, -115.955, 1.55 ) }
    dend_8 { pt3dadd( -47.5409, 181.292, -116.22, 1.69 ) }
    dend_8 { pt3dadd( -49.2754, 183.132, -118.37, 0.29 ) }
    dend_8 { pt3dadd( -49.6374, 183.531, -118.893, 0.29 ) }
    dend_8 { pt3dadd( -50.4237, 184.492, -120.206, 1.03 ) }
    dend_8 { pt3dadd( -50.6836, 184.853, -120.721, 0.81 ) }
    dend_8 { pt3dadd( -50.931, 185.275, -121.347, 1.11 ) }
    dend_8 { pt3dadd( -51.3479, 186.164, -122.679, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( -51.9687, 187.872, -125.276, 0.59 ) }
    dend_8 { pt3dadd( -52.1753, 188.477, -126.21, 1.18 ) }
    dend_8 { pt3dadd( -52.4183, 189.221, -127.371, 1.33 ) }
    dend_8 { pt3dadd( -52.8925, 190.789, -129.799, 0.52 ) }
    dend_8 { pt3dadd( -53.0496, 191.383, -130.688, 0.81 ) }
    dend_8 { pt3dadd( -53.2264, 192.083, -131.684, 0.81 ) }
    dend_8 { pt3dadd( -53.4735, 193.108, -133.063, 0.37 ) }
    dend_8 { pt3dadd( -53.6162, 193.621, -133.761, 0.37 ) }
    dend_8 { pt3dadd( -53.7392, 194.035, -134.319, 0.22 ) }
    dend_8 { pt3dadd( -54.007, 194.928, -135.507, 1.18 ) }
    dend_8 { pt3dadd( -54.4395, 196.468, -137.513, 1.33 ) }
    dend_8 { pt3dadd( -54.6771, 197.42, -138.727, 0.44 ) }
    dend_8 { pt3dadd( -54.9068, 198.606, -140.285, 0.74 ) }
    dend_8 { pt3dadd( -55.092, 199.9, -142.016, 0.52 ) }
    dend_8 { pt3dadd( -55.1499, 200.532, -142.913, 0.66 ) }
    dend_8 { pt3dadd( -55.151, 200.97, -143.575, 1.47 ) }
    dend_8 { pt3dadd( -55.0807, 201.6, -144.557, 1.55 ) }
    dend_8 { pt3dadd( -54.7972, 203.134, -147.142, 0.96 ) }
    dend_8 { pt3dadd( -54.5904, 203.741, -148.197, 0.37 ) }
    dend_8 { pt3dadd( -54.1551, 204.793, -150.129, 0.29 ) }
    dend_8 { pt3dadd( -53.9402, 205.34, -151.159, 0.81 ) }
    dend_8 { pt3dadd( -53.8264, 205.702, -151.833, 1.25 ) }
    dend_8 { pt3dadd( -53.6724, 206.412, -153.055, 1.25 ) }
    dend_8 { pt3dadd( -53.6145, 206.945, -154.037, 0.59 ) }
    dend_8 { pt3dadd( -53.5811, 207.739, -155.87, 0.44 ) }
    dend_8 { pt3dadd( -53.5803, 208.291, -157.564, 0.74 ) }
    dend_8 { pt3dadd( -53.5941, 208.755, -159.47, 1.03 ) }
    dend_8 { pt3dadd( -53.5746, 208.903, -160.535, 1.25 ) }
    dend_8 { pt3dadd( -53.3895, 209.026, -164.194, 0.74 ) }
    dend_8 { pt3dadd( -53.2118, 208.843, -166.428, 0.22 ) }
    dend_8 { pt3dadd( -52.9624, 208.478, -167.991, 0.96 ) }
    dend_8 { pt3dadd( -52.883, 208.35, -168.33, 0.96 ) }
    dend_8 { pt3dadd( -52.4939, 207.689, -169.605, 0.29 ) }
    dend_8 { pt3dadd( -52.2425, 207.285, -170.195, 0.52 ) }
    dend_8 { pt3dadd( -51.8582, 206.753, -170.788, 0.22 ) }
    dend_8 { pt3dadd( -51.3746, 206.184, -171.395, 0.22 ) }
    dend_8 { pt3dadd( -51.0387, 205.831, -171.751, 0.96 ) }
    dend_8 { pt3dadd( -50.7639, 205.566, -172.004, 0.96 ) }
    dend_8 { pt3dadd( -49.3847, 204.351, -173.044, 0.22 ) }
    dend_8 { pt3dadd( -48.8544, 203.923, -173.363, 0.44 ) }
    dend_8 { pt3dadd( -48.4072, 203.592, -173.563, 0.44 ) }
    dend_8 { pt3dadd( -47.3848, 202.863, -173.876, 0.15 ) }
    dend_8 { pt3dadd( -46.5563, 202.274, -174.124, 0.15 ) }
    dend_8 { pt3dadd( -45.9348, 201.837, -174.34, 0.22 ) }
    dend_8 { pt3dadd( -45.4802, 201.524, -174.543, 0.81 ) }
    dend_8 { pt3dadd( -44.7161, 200.985, -174.869, 1.11 ) }
    dend_8 { pt3dadd( -44.4042, 200.752, -175.034, 1.11 ) }
    dend_8 { pt3dadd( -43.123, 199.678, -176.469, 0.15 ) }
    dend_8 { pt3dadd( -42.7864, 199.344, -177.312, 0.37 ) }
    dend_8 { pt3dadd( -42.6659, 199.203, -177.787, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.2287, 149.017, -65.6001, 0.29 ) }
    dend_5 { pt3dadd( -22.8723, 150.194, -65.1093, 0.29 ) }
    dend_5 { pt3dadd( -23.314, 150.964, -64.8117, 0.22 ) }
    dend_5 { pt3dadd( -23.4875, 151.254, -64.7078, 0.74 ) }
    dend_5 { pt3dadd( -23.6629, 151.541, -64.622, 0.74 ) }
    dend_5 { pt3dadd( -23.9922, 152.06, -64.4842, 0.22 ) }
    dend_5 { pt3dadd( -24.347, 152.598, -64.3599, 0.37 ) }
    dend_5 { pt3dadd( -24.6373, 153.006, -64.2925, 0.22 ) }
    dend_5 { pt3dadd( -24.9737, 153.454, -64.2352, 0.52 ) }
    dend_5 { pt3dadd( -25.3044, 153.86, -64.2064, 0.52 ) }
    dend_5 { pt3dadd( -25.728, 154.34, -64.2124, 0.22 ) }
    dend_5 { pt3dadd( -26.0044, 154.614, -64.2455, 0.22 ) }
    dend_5 { pt3dadd( -26.4766, 155.035, -64.3098, 1.47 ) }
    dend_5 { pt3dadd( -26.734, 155.256, -64.3365, 1.92 ) }
    dend_5 { pt3dadd( -27.1624, 155.612, -64.3688, 2.06 ) }
    dend_5 { pt3dadd( -27.5688, 155.947, -64.3833, 1.69 ) }
    dend_5 { pt3dadd( -28.4801, 156.719, -64.404, 0.44 ) }
    dend_5 { pt3dadd( -29.0871, 157.248, -64.3928, 0.22 ) }
    dend_5 { pt3dadd( -29.5329, 157.65, -64.3792, 0.52 ) }
    dend_5 { pt3dadd( -29.81, 157.906, -64.3685, 0.66 ) }
    dend_5 { pt3dadd( -30.4882, 158.561, -64.3971, 0.22 ) }
    dend_5 { pt3dadd( -30.7988, 158.88, -64.4274, 0.22 ) }
    dend_5 { pt3dadd( -31.253, 159.387, -64.4969, 1.47 ) }
    dend_5 { pt3dadd( -31.5505, 159.736, -64.5703, 1.77 ) }
    dend_5 { pt3dadd( -31.9074, 160.178, -64.6782, 1.99 ) }
    dend_5 { pt3dadd( -33.2073, 161.859, -65.1751, 0.22 ) }
    dend_5 { pt3dadd( -33.7211, 162.561, -65.407, 0.22 ) }
    dend_5 { pt3dadd( -34.0524, 163.026, -65.5709, 0.96 ) }
    dend_5 { pt3dadd( -34.4016, 163.53, -65.752, 1.03 ) }
    dend_5 { pt3dadd( -34.814, 164.144, -65.9554, 0.22 ) }
    dend_5 { pt3dadd( -35.2471, 164.823, -66.1548, 0.22 ) }
    dend_5 { pt3dadd( -35.4682, 165.181, -66.2537, 0.81 ) }
    dend_5 { pt3dadd( -35.694, 165.531, -66.3691, 0.96 ) }
    dend_5 { pt3dadd( -36.1955, 166.239, -66.6402, 0.22 ) }
    dend_5 { pt3dadd( -36.4997, 166.636, -66.7989, 0.22 ) }
    dend_5 { pt3dadd( -36.9909, 167.247, -67.0667, 1.11 ) }
    dend_5 { pt3dadd( -37.2176, 167.525, -67.1904, 1.4 ) }
    dend_5 { pt3dadd( -37.4634, 167.813, -67.3287, 1.4 ) }
    dend_5 { pt3dadd( -38.3104, 168.766, -67.8053, 0.22 ) }
    dend_5 { pt3dadd( -38.6897, 169.173, -68.0048, 0.22 ) }
    dend_5 { pt3dadd( -39.2513, 169.74, -68.2739, 0.96 ) }
    dend_5 { pt3dadd( -39.5868, 170.058, -68.4313, 1.18 ) }
    dend_5 { pt3dadd( -40.3595, 170.729, -68.7903, 0.22 ) }
    dend_5 { pt3dadd( -40.688, 170.996, -68.9393, 0.22 ) }
    dend_5 { pt3dadd( -41.2653, 171.442, -69.1945, 1.55 ) }
    dend_5 { pt3dadd( -41.5678, 171.673, -69.3261, 1.99 ) }
    dend_5 { pt3dadd( -42.1823, 172.153, -69.5967, 1.99 ) }
    dend_5 { pt3dadd( -43.5079, 173.251, -70.2203, 0.22 ) }
    dend_5 { pt3dadd( -43.763, 173.48, -70.3552, 0.44 ) }
    dend_5 { pt3dadd( -43.8864, 173.61, -70.4285, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( -44.2655, 174.099, -70.6831, 0.22 ) }
    dend_5 { pt3dadd( -44.79, 174.955, -71.039, 1.25 ) }
    dend_5 { pt3dadd( -45.0293, 175.454, -71.197, 1.62 ) }
    dend_5 { pt3dadd( -45.161, 175.811, -71.2935, 1.62 ) }
    dend_5 { pt3dadd( -45.5177, 176.804, -71.5398, 0.22 ) }
    dend_5 { pt3dadd( -45.7027, 177.327, -71.6658, 0.22 ) }
    dend_5 { pt3dadd( -45.8881, 177.88, -71.7959, 0.29 ) }
    dend_5 { pt3dadd( -46.0903, 178.498, -71.9102, 0.66 ) }
    dend_5 { pt3dadd( -46.2146, 178.871, -71.9703, 0.66 ) }
    dend_5 { pt3dadd( -46.4777, 179.602, -72.0777, 0.22 ) }
    dend_5 { pt3dadd( -46.895, 180.608, -72.2283, 1.55 ) }
    dend_5 { pt3dadd( -47.1208, 181.122, -72.3113, 1.77 ) }
    dend_5 { pt3dadd( -47.3203, 181.592, -72.3989, 1.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -47.3203, 181.592, -72.3989, 0.22 ) }
    dend_7 { pt3dadd( -48.0658, 184.177, -73.5405, 0.22 ) }
    dend_7 { pt3dadd( -48.2405, 184.722, -73.7193, 0.44 ) }
    dend_7 { pt3dadd( -48.342, 185.002, -73.796, 0.44 ) }
    dend_7 { pt3dadd( -48.7002, 185.905, -74.0169, 0.22 ) }
    dend_7 { pt3dadd( -48.976, 186.564, -74.1576, 0.59 ) }
    dend_7 { pt3dadd( -49.2399, 187.164, -74.28, 0.59 ) }
    dend_7 { pt3dadd( -49.8614, 188.366, -74.4441, 0.22 ) }
    dend_7 { pt3dadd( -50.1593, 188.887, -74.5264, 0.22 ) }
    dend_7 { pt3dadd( -50.773, 189.922, -74.6757, 1.11 ) }
    dend_7 { pt3dadd( -51.0274, 190.326, -74.7301, 1.33 ) }
    dend_7 { pt3dadd( -51.2778, 190.716, -74.8105, 1.33 ) }
    dend_7 { pt3dadd( -52.4093, 192.535, -75.274, 0.22 ) }
    dend_7 { pt3dadd( -52.9596, 193.499, -75.5724, 0.22 ) }
    dend_7 { pt3dadd( -53.4946, 194.51, -75.9466, 1.33 ) }
    dend_7 { pt3dadd( -53.7919, 195.074, -76.2345, 1.69 ) }
    dend_7 { pt3dadd( -54.8194, 196.94, -77.5052, 0.22 ) }
    dend_7 { pt3dadd( -55.1815, 197.594, -78.0239, 0.22 ) }
    dend_7 { pt3dadd( -55.6125, 198.35, -78.7701, 1.11 ) }
    dend_7 { pt3dadd( -55.9874, 198.984, -79.5537, 1.4 ) }
    dend_7 { pt3dadd( -56.7735, 200.268, -81.4898, 1.11 ) }
    dend_7 { pt3dadd( -57.4166, 201.211, -83.183, 1.03 ) }
    dend_7 { pt3dadd( -57.6114, 201.471, -83.6983, 1.55 ) }
    dend_7 { pt3dadd( -58.1603, 202.159, -85.1266, 1.69 ) }
    dend_7 { pt3dadd( -58.947, 203.088, -87.0971, 0.74 ) }
    dend_7 { pt3dadd( -59.8754, 204.198, -89.3867, 1.4 ) }
    dend_7 { pt3dadd( -61.064, 205.757, -92.3127, 1.18 ) }
    dend_7 { pt3dadd( -61.5557, 206.418, -93.4967, 1.55 ) }
    dend_7 { pt3dadd( -61.9712, 206.986, -94.4396, 1.69 ) }
    dend_7 { pt3dadd( -63.0295, 208.541, -96.6694, 1.18 ) }
    dend_7 { pt3dadd( -63.5082, 209.282, -97.5995, 0.59 ) }
    dend_7 { pt3dadd( -64.489, 211.011, -99.4661, 1.33 ) }
    dend_7 { pt3dadd( -64.8897, 211.862, -100.272, 1.77 ) }
    dend_7 { pt3dadd( -65.4046, 213.122, -101.405, 0.52 ) }
    dend_7 { pt3dadd( -65.7112, 213.99, -102.15, 1.25 ) }
    dend_7 { pt3dadd( -66.0923, 215.185, -103.101, 1.11 ) }
    dend_7 { pt3dadd( -66.6319, 216.843, -104.366, 0.22 ) }
    dend_7 { pt3dadd( -67.0421, 218.023, -105.263, 0.22 ) }
    dend_7 { pt3dadd( -67.4941, 219.26, -106.161, 1.55 ) }
    dend_7 { pt3dadd( -67.8642, 220.174, -106.794, 1.69 ) }
    dend_7 { pt3dadd( -68.7647, 222.152, -108.117, 0.15 ) }
    dend_7 { pt3dadd( -69.1736, 222.966, -108.623, 0.81 ) }
    dend_7 { pt3dadd( -69.6397, 223.795, -109.083, 1.03 ) }
    dend_7 { pt3dadd( -70.5001, 225.258, -109.775, 0.22 ) }
    dend_7 { pt3dadd( -71.0576, 226.183, -110.14, 1.03 ) }
    dend_7 { pt3dadd( -71.5079, 226.942, -110.341, 1.47 ) }
    dend_7 { pt3dadd( -72.0276, 227.833, -110.487, 1.47 ) }
    dend_7 { pt3dadd( -72.995, 229.478, -110.681, 0.22 ) }
    dend_7 { pt3dadd( -73.3984, 230.16, -110.736, 0.74 ) }
    dend_7 { pt3dadd( -73.686, 230.64, -110.768, 0.88 ) }
    dend_7 { pt3dadd( -74.9342, 232.758, -110.881, 0.22 ) }
    dend_7 { pt3dadd( -75.6054, 233.918, -110.927, 1.11 ) }
    dend_7 { pt3dadd( -75.9733, 234.563, -110.954, 1.4 ) }
    dend_7 { pt3dadd( -76.7926, 235.989, -111.071, 0.22 ) }
    dend_7 { pt3dadd( -77.0542, 236.474, -111.123, 0.52 ) }
    dend_7 { pt3dadd( -77.4666, 237.318, -111.243, 0.22 ) }
    dend_7 { pt3dadd( -77.775, 238.066, -111.393, 0.52 ) }
    dend_7 { pt3dadd( -77.8856, 238.384, -111.456, 0.52 ) }
    dend_7 { pt3dadd( -78.175, 239.338, -111.619, 0.22 ) }
    dend_7 { pt3dadd( -78.4907, 240.442, -111.818, 1.33 ) }
    dend_7 { pt3dadd( -78.7334, 241.22, -112.028, 1.55 ) }
    dend_7 { pt3dadd( -79.1807, 242.723, -112.51, 0.22 ) }
    dend_7 { pt3dadd( -79.545, 243.912, -112.948, 0.22 ) }
    dend_7 { pt3dadd( -79.9373, 245.05, -113.586, 1.47 ) }
    dend_7 { pt3dadd( -80.1702, 245.763, -114.043, 1.69 ) }
    dend_7 { pt3dadd( -80.8612, 248.176, -115.627, 0.22 ) }
    dend_7 { pt3dadd( -81.1824, 249.413, -116.474, 1.99 ) }
    dend_7 { pt3dadd( -81.3858, 250.223, -117.058, 2.36 ) }
    dend_7 { pt3dadd( -82.4676, 254.56, -120.325, 0.22 ) }
    dend_7 { pt3dadd( -82.8991, 256.301, -121.6, 0.44 ) }
    dend_7 { pt3dadd( -83.2454, 257.735, -122.576, 0.22 ) }
    dend_7 { pt3dadd( -83.8619, 260.302, -124.088, 1.84 ) }
    dend_7 { pt3dadd( -84.0392, 261.004, -124.448, 2.28 ) }
    dend_7 { pt3dadd( -84.2138, 261.705, -124.732, 2.28 ) }
    dend_7 { pt3dadd( -84.9793, 264.462, -125.567, 0.22 ) }
    dend_7 { pt3dadd( -85.2303, 265.225, -125.792, 0.74 ) }
    dend_7 { pt3dadd( -86.1328, 267.739, -126.496, 0.22 ) }
    dend_7 { pt3dadd( -86.482, 268.811, -126.728, 0.74 ) }
    dend_7 { pt3dadd( -86.6631, 269.404, -126.85, 0.81 ) }
    dend_7 { pt3dadd( -87.5271, 272.335, -127.461, 0.15 ) }
    dend_7 { pt3dadd( -87.8401, 273.361, -127.722, 1.11 ) }
    dend_7 { pt3dadd( -88.1815, 274.432, -128.028, 1.11 ) }
    dend_7 { pt3dadd( -89.0349, 276.974, -128.843, 0.22 ) }
    dend_7 { pt3dadd( -89.2849, 277.703, -129.075, 0.66 ) }
    dend_7 { pt3dadd( -89.4798, 278.267, -129.237, 0.81 ) }
    dend_7 { pt3dadd( -90.1066, 279.994, -129.618, 0.22 ) }
    dend_7 { pt3dadd( -90.4636, 280.758, -129.792, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -90.778, 281.26, -129.913, 1.33 ) }
    dend_7 { pt3dadd( -91.6328, 282.217, -130.202, 0.22 ) }
    dend_7 { pt3dadd( -92.0533, 282.628, -130.336, 0.66 ) }
    dend_7 { pt3dadd( -92.4323, 282.951, -130.444, 0.88 ) }
    dend_7 { pt3dadd( -94.0948, 284.211, -130.849, 0.22 ) }
    dend_7 { pt3dadd( -95.1822, 284.98, -131.133, 0.22 ) }
    dend_7 { pt3dadd( -95.719, 285.347, -131.271, 0.96 ) }
    dend_7 { pt3dadd( -96.4185, 285.815, -131.45, 1.11 ) }
    dend_7 { pt3dadd( -97.3084, 286.449, -131.666, 0.22 ) }
    dend_7 { pt3dadd( -97.8697, 286.896, -131.766, 0.59 ) }
    dend_7 { pt3dadd( -98.0533, 287.068, -131.771, 0.59 ) }
    dend_7 { pt3dadd( -98.4966, 287.555, -131.732, 0.22 ) }
    dend_7 { pt3dadd( -98.9389, 288.088, -131.686, 0.44 ) }
    dend_7 { pt3dadd( -99.1527, 288.357, -131.662, 0.52 ) }
    dend_7 { pt3dadd( -100.04, 289.54, -131.6, 0.15 ) }
    dend_7 { pt3dadd( -100.328, 289.931, -131.587, 0.44 ) }
    dend_7 { pt3dadd( -101.244, 291.163, -131.584, 0.22 ) }
    dend_7 { pt3dadd( -101.754, 291.84, -131.618, 0.44 ) }
    dend_7 { pt3dadd( -102.002, 292.172, -131.642, 0.44 ) }
    dend_7 { pt3dadd( -102.402, 292.738, -131.684, 0.22 ) }
    dend_7 { pt3dadd( -102.782, 293.299, -131.722, 0.59 ) }
    dend_7 { pt3dadd( -103.278, 294.031, -131.764, 0.59 ) }
    dend_7 { pt3dadd( -103.923, 294.987, -131.818, 0.22 ) }
    dend_7 { pt3dadd( -104.498, 295.865, -131.897, 0.22 ) }
    dend_7 { pt3dadd( -105.13, 296.851, -132.018, 0.81 ) }
    dend_7 { pt3dadd( -105.292, 297.107, -132.061, 0.81 ) }
    dend_7 { pt3dadd( -105.679, 297.73, -132.202, 0.22 ) }
    dend_7 { pt3dadd( -106.086, 298.408, -132.368, 0.44 ) }
    dend_7 { pt3dadd( -107.056, 300.073, -132.814, 0.22 ) }
    dend_7 { pt3dadd( -107.305, 300.498, -132.939, 0.96 ) }
    dend_7 { pt3dadd( -107.791, 301.309, -133.189, 1.11 ) }
    dend_7 { pt3dadd( -109.177, 303.605, -133.877, 0.22 ) }
    dend_7 { pt3dadd( -109.797, 304.65, -134.174, 0.22 ) }
    dend_7 { pt3dadd( -110.015, 305.028, -134.275, 0.74 ) }
    dend_7 { pt3dadd( -110.295, 305.525, -134.393, 0.96 ) }
    dend_7 { pt3dadd( -110.611, 306.091, -134.524, 1.18 ) }
    dend_7 { pt3dadd( -110.838, 306.499, -134.63, 1.18 ) }
    dend_7 { pt3dadd( -111.638, 308.006, -135.049, 0.15 ) }
    dend_7 { pt3dadd( -111.994, 308.649, -135.256, 0.52 ) }
    dend_7 { pt3dadd( -112.13, 308.902, -135.344, 0.81 ) }
    dend_7 { pt3dadd( -112.306, 309.262, -135.468, 0.81 ) }
    dend_7 { pt3dadd( -113.037, 310.859, -136.021, 0.22 ) }
    dend_7 { pt3dadd( -113.423, 311.767, -136.326, 0.96 ) }
    dend_7 { pt3dadd( -113.668, 312.412, -136.524, 1.47 ) }
    dend_7 { pt3dadd( -114.272, 314.243, -137.053, 0.22 ) }
    dend_7 { pt3dadd( -114.608, 315.404, -137.382, 0.22 ) }
    dend_7 { pt3dadd( -114.933, 316.628, -137.735, 1.03 ) }
    dend_7 { pt3dadd( -115.049, 317.105, -137.871, 1.03 ) }
    dend_7 { pt3dadd( -115.264, 318.055, -138.178, 0.22 ) }
    dend_7 { pt3dadd( -115.415, 318.788, -138.449, 0.44 ) }
    dend_7 { pt3dadd( -115.561, 319.517, -138.748, 0.37 ) }
    dend_7 { pt3dadd( -115.774, 320.596, -139.224, 0.74 ) }
    dend_7 { pt3dadd( -115.854, 320.999, -139.408, 0.96 ) }
    dend_7 { pt3dadd( -116.414, 323.643, -140.681, 0.22 ) }
    dend_7 { pt3dadd( -116.724, 325.013, -141.373, 0.74 ) }
    dend_7 { pt3dadd( -116.807, 325.387, -141.561, 1.11 ) }
    dend_7 { pt3dadd( -116.887, 325.774, -141.75, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -47.3203, 181.592, -72.3989, 0.22 ) }
    dend_6 { pt3dadd( -48.0878, 183.136, -71.7782, 0.22 ) }
    dend_6 { pt3dadd( -48.2981, 183.579, -71.6039, 0.22 ) }
    dend_6 { pt3dadd( -48.426, 183.919, -71.4853, 0.66 ) }
    dend_6 { pt3dadd( -48.5433, 184.288, -71.3674, 0.88 ) }
    dend_6 { pt3dadd( -48.6204, 184.611, -71.2582, 0.88 ) }
    dend_6 { pt3dadd( -48.922, 186.121, -70.7315, 0.15 ) }
    dend_6 { pt3dadd( -48.9468, 186.302, -70.669, 0.29 ) }
    dend_6 { pt3dadd( -49.1564, 187.923, -70.0497, 0.22 ) }
    dend_6 { pt3dadd( -49.2224, 188.429, -69.8424, 0.37 ) }
    dend_6 { pt3dadd( -49.3964, 189.629, -69.3352, 0.22 ) }
    dend_6 { pt3dadd( -49.5474, 190.609, -68.8887, 1.33 ) }
    dend_6 { pt3dadd( -49.5785, 190.801, -68.7925, 1.62 ) }
    dend_6 { pt3dadd( -49.8653, 192.216, -68.0021, 0.22 ) }
    dend_6 { pt3dadd( -50.097, 193.141, -67.3996, 0.22 ) }
    dend_6 { pt3dadd( -50.545, 194.642, -66.2961, 0.22 ) }
    dend_6 { pt3dadd( -50.746, 195.235, -65.816, 0.96 ) }
    dend_6 { pt3dadd( -50.9081, 195.686, -65.4033, 1.18 ) }
    dend_6 { pt3dadd( -51.2612, 196.597, -64.4207, 0.22 ) }
    dend_6 { pt3dadd( -51.5025, 197.13, -63.7091, 0.22 ) }
    dend_6 { pt3dadd( -51.7549, 197.634, -62.9311, 1.11 ) }
    dend_6 { pt3dadd( -51.8282, 197.768, -62.699, 1.4 ) }
    dend_6 { pt3dadd( -51.9584, 198.032, -62.2978, 1.4 ) }
    dend_6 { pt3dadd( -52.3461, 198.976, -61.0967, 0.22 ) }
    dend_6 { pt3dadd( -52.5138, 199.532, -60.5147, 0.22 ) }
    dend_6 { pt3dadd( -52.6515, 200.109, -60.0278, 0.44 ) }
    dend_6 { pt3dadd( -52.6957, 200.34, -59.8637, 0.44 ) }
    dend_6 { pt3dadd( -52.8874, 201.47, -59.1521, 0.22 ) }
    dend_6 { pt3dadd( -52.9788, 202.139, -58.7855, 0.66 ) }
    dend_6 { pt3dadd( -53.0445, 202.758, -58.4946, 0.66 ) }
    dend_6 { pt3dadd( -53.1032, 203.572, -58.1121, 0.22 ) }
    dend_6 { pt3dadd( -53.1323, 204.017, -57.8844, 0.44 ) }
    dend_6 { pt3dadd( -53.1595, 204.41, -57.6692, 0.44 ) }
    dend_6 { pt3dadd( -53.2069, 205.153, -57.237, 0.22 ) }
    dend_6 { pt3dadd( -53.223, 205.439, -57.0658, 0.37 ) }
    dend_6 { pt3dadd( -53.2807, 206.473, -56.4512, 0.22 ) }
    dend_6 { pt3dadd( -53.2889, 206.969, -56.1525, 0.52 ) }
    dend_6 { pt3dadd( -53.2852, 207.218, -55.9984, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, axon_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, axon_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_5 = new SectionList()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_33 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 3
    dend_33 nseg = 5
    dend_32 nseg = 9
    dend_23 nseg = 3
    dend_21 nseg = 19
    dend_16 nseg = 9
    dend_20 nseg = 7
    dend_19 nseg = 11
    dend_15 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 11
    dend_27 nseg = 5
    dend_26 nseg = 9
    dend_12 nseg = 3
    dend_14 nseg = 9
    dend_13 nseg = 9
    dend_9 nseg = 7
    dend_4 nseg = 7
    dend_11 nseg = 9
    dend_10 nseg = 13
    dend_8 nseg = 7
    dend_5 nseg = 3
    dend_7 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_NBC_ad3dd575d2_0_0


