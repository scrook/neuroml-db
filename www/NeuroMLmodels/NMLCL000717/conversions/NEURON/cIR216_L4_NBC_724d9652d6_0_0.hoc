// Cell: cIR216_L4_NBC_724d9652d6_0_0
/*
{
  "id" : "cIR216_L4_NBC_724d9652d6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.190434, -8.37619, -0.191873, 3.16963", "0.239078, -7.58067, -0.204067, 4.68322", "0.287721, -6.78515, -0.21626, 6.09107", "0.336365, -5.98962, -0.228454, 7.08639", "0.385009, -5.1941, -0.240647, 7.87255", "0.433652, -4.39858, -0.252841, 8.61453", "0.482296, -3.60306, -0.265034, 9.03338", "0.530939, -2.80753, -0.277228, 9.4484", "0.579583, -2.01201, -0.289421, 9.86343", "0.628227, -1.21649, -0.301615, 10.1821", "0.67687, -0.420966, -0.313808, 10.5388", "0.725514, 0.374556, -0.326002, 10.9457", "0.774158, 1.17008, -0.338196, 11.3525", "0.822801, 1.9656, -0.350389, 11.4966", "0.871445, 2.76112, -0.362583, 11.3133", "0.920089, 3.55665, -0.374776, 11.1299", "0.968732, 4.35217, -0.38697, 10.5886", "1.01738, 5.14769, -0.399163, 9.07759", "1.06602, 5.94321, -0.411357, 7.53256", "1.11466, 6.73874, -0.42355, 4.48485", "1.16331, 7.53426, -0.435744, 2.46912" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.849734, -0.0894252, -7.71032, 1.94", "0.969367, -1.54205, -9.99899, 1.94", "0.959287, -3.34405, -12.5456, 1.94", "0.523545, -6.91393, -17.3199, 1.66", "0.310472, -8.65957, -19.6545, 1.66", "0.0085567, -11.1331, -22.9625, 1.94", "-0.20486, -12.8815, -25.3009, 1.38", "-0.11562, -14.4159, -27.44, 2.22", "0.236794, -16.0466, -29.8345, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.36026, 1.64608, 20.9197, 0.83", "-1.36886, 4.43598, 20.9197, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.490266, -3.40442, 15.3397, 1.11", "-0.216075, -6.59129, 15.3397, 1.11", "-9.798E-4, -9.09129, 15.3397, 0.83", "0.076865, -9.99607, 15.3397, 1.11", "0.26234, -12.1518, 15.3397, 0.83", "0.436037, -14.1706, 15.3397, 0.83", "0.690757, -17.1312, 15.3397, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.94974, 3.87882, -2.73032, 0.55", "6.26899, 5.84516, -3.20383, 0.55", "8.67108, 9.03835, -4.10173, 0.83", "9.97727, 10.7775, -4.70997, 0.55", "12.8115, 14.6877, -6.32186, 1.38", "14.9278, 17.6658, -7.7319, 0.83", "16.6521, 20.086, -8.92053, 0.83", "18.9401, 23.2608, -10.6286, 0.83", "21.6646, 26.9074, -12.7192, 0.55", "24.0642, 30.2301, -14.7752, 1.11", "25.6952, 32.6273, -16.3822, 0.83", "27.369, 35.2924, -18.0897, 0.83", "28.4323, 37.0711, -19.3654, 0.28", "29.4099, 38.6706, -20.5428, 0.83", "30.9073, 40.9341, -22.2592, 0.28", "32.4909, 43.0953, -23.9927, 0.55", "34.5675, 45.5653, -26.268, 1.38", "38.9269, 50.0737, -31.24, 0.55", "40.9739, 51.8146, -33.6599, 0.55", "41.8121, 52.4541, -34.6866, 0.55", "43.0743, 53.3352, -36.2413, 0.55", "46.0208, 55.3172, -40.0044, 0.55", "48.0765, 56.5969, -42.6553, 1.38", "51.7991, 58.9499, -47.1119, 0.55", "53.1855, 59.9926, -49.0889, 0.55", "53.6751, 60.4822, -49.9075, 0.55", "54.7028, 61.8667, -51.8795, 1.11", "55.4268, 63.0912, -53.3621, 1.11", "55.9157, 63.986, -54.3229, 1.11", "58.3473, 68.7802, -58.747, 0.55", "59.1043, 70.2409, -59.9625, 0.83", "60.0915, 72.1806, -61.3706, 0.55", "61.0766, 74.1561, -62.5907, 1.38", "62.455, 76.968, -64.1045, 0.55", "63.0485, 78.1164, -64.6244, 0.55", "65.3358, 82.4373, -66.0783, 1.38", "67.028, 85.5746, -67.0942, 0.55", "68.7442, 88.8865, -68.1239, 0.28", "69.9131, 91.2967, -68.837, 0.55", "70.904, 93.4296, -69.4238, 0.28", "72.0993, 95.9302, -70.1235, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "0.199734, 5.77033, 13.4497, 1.11", "-0.24714, 11.415, 13.6556, 1.11", "-0.611639, 18.059, 13.9091, 1.11", "-0.776511, 20.9438, 13.9123, 1.11", "-0.972414, 24.2395, 13.8389, 1.38", "-1.22214, 28.3088, 13.7422, 1.11", "-1.66675, 35.2123, 13.6077, 1.11", "-2.36479, 43.782, 13.5776, 1.11", "-2.69353, 47.7488, 13.5517, 1.38", "-3.04522, 51.3775, 13.5135, 0.83", "-3.32157, 53.9586, 13.4946, 1.38", "-4.37123, 61.7941, 13.4963, 0.83", "-5.79643, 70.5336, 13.6643, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.27026, 1.68507, -2.23032, 1.11", "-6.76103, 1.7721, -2.23032, 1.11", "-11.0139, 2.02036, -2.23032, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.50974, -8.69867, -4.26032, 3.6", "2.25911, -14.6207, -4.26032, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992925952297
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.16331, 7.53426, -0.435744, 0.83", "2.07881, 22.5063, -0.435744, 0.83", "2.9943, 37.4783, -0.435744, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "0.236794, -16.0466, -29.8345, 1.11", "0.952048, -18.5707, -29.4909, 1.11", "1.67231, -19.8099, -29.7553, 1.11", "2.63449, -21.4927, -30.2377, 1.11", "3.20116, -22.7836, -30.7162, 1.11", "4.03445, -25.185, -31.6695, 1.66", "4.76808, -27.7734, -32.6448, 0.83", "5.75978, -31.9691, -34.1712, 0.83", "6.0677, -33.3199, -34.6459, 0.83", "6.7456, -36.5334, -35.7773, 1.66", "7.36557, -40.124, -37.0767, 1.94", "7.75475, -43.4826, -38.2935, 0.83", "7.88803, -44.9356, -38.7731, 0.83", "8.18368, -47.8149, -39.4141, 1.38", "8.5268, -50.2433, -39.8116, 0.28", "8.81931, -51.891, -40.0, 0.83", "9.36292, -54.6825, -40.2423, 0.28", "10.0864, -58.2764, -40.5585, 1.38", "10.7594, -61.7796, -40.8624, 0.55", "11.3049, -64.4512, -41.0304, 1.66", "11.7875, -66.7737, -41.0925, 0.55", "11.9505, -67.6203, -41.1001, 0.83", "12.3675, -70.2801, -41.1848, 1.11", "12.5864, -72.5929, -41.511, 1.38" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "0.236794, -16.0466, -29.8345, 0.83", "-7.44152, -13.5007, -42.3732, 0.83", "-9.93295, -12.8577, -46.0205, 0.83", "-12.6323, -12.3294, -49.6794, 1.66", "-16.3256, -11.7228, -54.4132, 3.6", "-19.8547, -11.2537, -58.7893, 0.55", "-22.6567, -10.914, -62.179, 0.55", "-24.1047, -10.7212, -63.7107, 0.55", "-26.3342, -10.5252, -66.3044, 0.28", "-27.0435, -10.4403, -67.2399, 1.11", "-29.3454, -10.1206, -71.0079, 0.55", "-29.9109, -10.0027, -72.0752, 0.83", "-32.6696, -9.37114, -77.845, 1.38", "-35.2845, -8.76303, -83.4129, 0.28", "-36.2969, -8.51652, -85.6435, 1.94", "-39.2268, -7.85748, -92.2057, 0.28", "-39.4993, -7.80442, -92.8102, 0.83", "-42.246, -7.51042, -98.5731, 0.28", "-43.6688, -7.56012, -101.053, 1.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.36886, 4.43598, 20.9197, 0.55", "0.583406, 4.17234, 20.8802, 0.55", "3.58772, 3.76662, 20.8195, 1.94" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.36886, 4.43598, 20.9197, 0.83", "-0.197316, 6.0892, 22.0756, 0.83", "1.30966, 8.21575, 23.5624, 0.83", "3.2653, 10.9754, 25.4919, 1.11", "5.02295, 13.4557, 27.2261, 0.55", "5.82319, 14.585, 28.0156, 0.83", "7.00546, 16.2533, 29.1821, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.690757, -17.1312, 15.3397, 0.55", "-0.728351, -17.9452, 16.2423, 0.55", "-1.99496, -18.7345, 17.1699, 0.55", "-2.88581, -19.3357, 17.8562, 0.55", "-4.23641, -20.3296, 19.0647, 0.55", "-5.86155, -21.5255, 20.5189, 0.83", "-8.66188, -23.5861, 23.0247, 0.55", "-9.61936, -24.3439, 24.0087, 0.55", "-10.3588, -24.9599, 24.8775, 1.38", "-12.0936, -26.4554, 27.1802, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.690757, -17.1312, 15.3397, 0.83", "-0.118559, -19.358, 14.8122, 0.83", "-0.747855, -21.6397, 14.203, 0.83", "-1.59688, -25.4325, 13.1371, 1.11", "-2.22045, -28.8164, 12.1493, 0.83", "-2.82406, -32.677, 11.0094, 0.83", "-3.11617, -35.2952, 10.2174, 0.83", "-3.23913, -38.4742, 9.23007, 0.83", "-3.15551, -40.2978, 8.66543, 0.83", "-3.00764, -41.6505, 8.28997, 0.83", "-2.62271, -44.3316, 7.58388, 0.83", "-2.21143, -47.3383, 6.82586, 0.83", "-1.80097, -50.2747, 6.19821, 0.83", "-1.13332, -54.7429, 5.42622, 0.83", "-0.460154, -59.2372, 4.7383, 0.83", "-0.179899, -61.0086, 4.56849, 0.83", "0.540064, -65.5317, 4.36644, 1.11", "1.01984, -69.1919, 4.3134, 0.83", "1.45485, -73.2262, 4.40828, 0.83", "1.71105, -76.6043, 4.63455, 1.11", "1.97168, -82.4546, 5.16435, 1.11", "2.09546, -89.4145, 5.95813, 1.11", "2.09428, -93.8289, 6.53769, 0.83", "1.99607, -97.6369, 7.06067, 1.11", "1.77274, -101.609, 7.62938, 0.83", "1.50204, -105.794, 8.23017, 1.11", "1.16374, -109.255, 8.66936, 0.83", "0.903814, -111.638, 9.00543, 0.83", "0.717319, -113.739, 9.29428, 1.11", "0.486723, -117.039, 9.6613, 1.11", "0.285275, -119.981, 9.96231, 0.55", "-0.0361879, -123.734, 10.3694, 0.83", "-0.203421, -125.554, 10.58, 0.55", "-0.524132, -129.261, 11.1133, 1.11", "-0.779501, -132.406, 11.6307, 0.83", "-1.05476, -136.015, 12.2748, 0.83", "-1.44668, -141.532, 13.3139, 0.83", "-1.62607, -145.221, 14.0598, 1.11", "-1.7805, -148.284, 14.7782, 0.83", "-1.84813, -149.458, 15.1155, 0.83", "-1.93084, -151.184, 15.7386, 0.83", "-1.93299, -152.651, 16.3489, 0.55", "-1.89069, -154.066, 17.0018, 0.83", "-1.78957, -156.519, 18.1242, 0.28", "-1.62799, -159.194, 19.3566, 1.11", "-1.4303, -163.112, 21.098, 0.55", "-1.28516, -166.328, 22.3957, 0.55", "-1.26862, -167.127, 22.6572, 0.28", "-1.26496, -169.632, 23.2719, 0.83", "-1.48191, -173.733, 23.857, 0.55", "-1.83565, -177.438, 24.1086, 0.55", "-2.39329, -181.073, 24.1759, 0.55", "-3.34812, -185.641, 23.9778, 0.55", "-4.24926, -189.182, 23.6632, 0.55", "-5.90582, -194.675, 22.9611, 0.55", "-6.6509, -196.978, 22.563, 0.28", "-7.7521, -200.449, 21.947, 0.55", "-9.05558, -204.851, 21.1, 0.83", "-9.607, -206.912, 20.705, 0.28", "-10.2099, -210.158, 20.1351, 0.55", "-10.4265, -212.706, 19.7443, 0.28", "-10.4942, -217.486, 19.0295, 0.55", "-10.202, -221.695, 18.4226, 0.28", "-9.8477, -224.63, 18.0447, 0.83", "-9.01074, -230.246, 17.2355, 0.55", "-8.58872, -232.766, 16.8594, 0.83", "-8.09042, -236.097, 16.411, 0.28", "-7.69977, -239.014, 16.0825, 0.55", "-7.58119, -240.32, 15.9292, 0.28", "-7.32861, -244.214, 15.39, 0.55", "-7.3001, -246.417, 15.0448, 0.28", "-7.35501, -252.105, 14.1029, 0.55", "-7.46272, -255.986, 13.4341, 0.55", "-7.66242, -260.647, 12.4929, 0.28", "-7.72433, -262.358, 12.0775, 0.83", "-7.76522, -263.41, 11.7633, 0.28", "-7.82245, -264.321, 11.4413, 0.55", "-8.00878, -266.898, 10.348, 0.28", "-8.17236, -268.262, 9.76198, 0.55", "-8.56706, -270.234, 9.05016, 0.28", "-8.8248, -271.236, 8.71755, 0.55", "-9.36835, -273.143, 8.11825, 0.28", "-9.54529, -273.703, 7.95293, 0.55", "-10.0864, -275.158, 7.57641, 0.28", "-10.8158, -276.992, 7.21466, 0.55", "-11.9991, -279.84, 6.74807, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "72.0993, 95.9302, -70.1235, 0.28", "72.2683, 98.1525, -71.5356, 0.28", "72.415, 99.5362, -72.5135, 0.55", "72.5788, 100.971, -73.5204, 0.28", "72.9214, 103.288, -75.2049, 1.11", "73.3201, 105.757, -76.9672, 0.28", "73.4238, 106.293, -77.3503, 0.55", "74.0304, 109.102, -79.4283, 0.28", "74.4263, 110.553, -80.5117, 1.11", "75.6685, 114.345, -83.3198, 0.28", "76.0574, 115.3, -84.0334, 0.55", "77.0478, 117.381, -85.6121, 0.28", "77.3908, 118.029, -86.1089, 0.55", "78.6076, 120.119, -87.794, 0.28", "78.9625, 120.663, -88.262, 0.55", "80.7064, 123.016, -90.3854, 0.28", "81.3257, 123.796, -91.1545, 0.55", "81.8848, 124.476, -91.8579, 0.28", "82.5589, 125.245, -92.7064, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "72.0993, 95.9302, -70.1235, 0.28", "73.6111, 98.6144, -71.2544, 0.28", "74.8876, 100.859, -72.1915, 1.11", "76.034, 102.806, -72.865, 0.28", "76.5107, 103.634, -73.1108, 0.55", "78.624, 107.339, -74.0647, 0.28", "79.3119, 108.515, -74.3105, 0.28", "80.0276, 109.796, -74.5473, 0.83", "81.2681, 111.96, -74.8031, 0.28", "81.9722, 113.163, -74.8643, 0.83", "82.7805, 114.499, -74.8692, 0.83", "84.3778, 117.016, -74.7137, 0.28", "85.2666, 118.317, -74.6302, 1.11", "86.8253, 120.351, -74.595, 0.28", "87.4016, 120.97, -74.6149, 0.55", "88.7894, 122.193, -74.6674, 0.28", "90.0422, 123.134, -74.7401, 0.83", "93.6864, 125.367, -75.0322, 0.28", "96.0404, 126.605, -75.2165, 1.11", "98.0052, 127.506, -75.4099, 0.28", "99.2813, 128.086, -75.5893, 0.55", "100.683, 128.714, -75.8443, 0.28", "102.044, 129.348, -76.2266, 0.83", "103.732, 130.232, -76.888, 0.28", "104.495, 130.723, -77.2299, 0.55", "106.496, 132.188, -78.2278, 0.28", "107.727, 133.158, -78.8769, 0.83", "110.159, 135.158, -80.16, 0.28", "111.386, 136.216, -80.7934, 0.83", "114.066, 138.554, -82.0964, 0.28", "115.312, 139.693, -82.6448, 0.55", "116.714, 141.08, -83.1846, 0.28", "117.3, 141.691, -83.3847, 0.83", "118.804, 143.319, -83.7651, 0.28", "119.869, 144.484, -84.0037, 1.11", "121.234, 146.026, -84.2613, 0.28", "122.393, 147.314, -84.4874, 0.83", "123.734, 148.802, -84.7329, 0.28", "123.999, 149.091, -84.7922, 0.83", "125.315, 150.413, -85.0924, 0.28", "126.254, 151.235, -85.289, 0.55", "127.736, 152.354, -85.5757, 0.28", "129.047, 153.222, -85.9031, 1.11", "131.224, 154.566, -86.5136, 0.28", "132.421, 155.228, -86.8988, 0.55", "133.642, 155.829, -87.317, 0.28", "134.862, 156.398, -87.7816, 0.83", "137.123, 157.462, -88.7015, 0.28", "138.52, 158.196, -89.3338, 1.66", "141.082, 159.711, -90.5566, 0.28", "141.729, 160.132, -90.8717, 0.83", "144.217, 161.864, -92.0692, 0.28", "144.695, 162.208, -92.2666, 0.55", "146.899, 163.798, -92.9954, 0.28", "147.408, 164.134, -93.1307, 0.83", "149.37, 165.216, -93.468, 0.28", "149.37, 165.216, -93.468, 0.55", "151.865, 166.116, -93.5827, 0.28", "152.836, 166.404, -93.6024, 1.11", "155.321, 166.928, -93.5393, 0.28", "157.134, 167.255, -93.4963, 0.28", "158.008, 167.378, -93.4764, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-5.79643, 70.5336, 13.6643, 0.55", "-7.77654, 74.6097, 14.6189, 0.55", "-8.85115, 77.1328, 15.1426, 0.55", "-9.91473, 79.5949, 15.5878, 0.83", "-11.514, 83.2016, 16.054, 0.83", "-12.386, 85.1574, 16.2454, 0.28", "-13.2374, 87.0306, 16.4143, 0.55", "-14.4246, 89.6635, 16.5396, 0.28", "-16.3038, 93.5012, 16.6066, 0.55", "-17.6249, 95.9528, 16.5486, 0.55", "-19.8465, 99.6762, 16.251, 0.55", "-21.0903, 101.619, 16.0119, 0.28", "-22.1942, 103.227, 15.7712, 0.55", "-23.2809, 104.704, 15.5246, 0.28", "-24.9629, 106.98, 15.0775, 0.83", "-26.8298, 109.429, 14.5786, 0.28", "-27.4544, 110.228, 14.3615, 0.55", "-28.6123, 111.728, 13.9183, 0.28", "-29.273, 112.676, 13.6706, 0.55", "-30.04, 113.926, 13.3707, 0.28", "-30.2332, 114.284, 13.2868, 0.55", "-31.0924, 116.282, 12.8174, 0.28", "-31.5941, 117.683, 12.4428, 0.55", "-32.2249, 119.844, 11.8126, 0.55", "-32.92, 122.638, 10.9994, 0.28", "-33.1624, 123.704, 10.6925, 0.55", "-33.8085, 126.706, 9.83353, 0.28", "-33.925, 127.245, 9.67966, 0.55", "-34.3958, 129.26, 9.10929, 0.28", "-34.8037, 130.565, 8.72265, 0.83", "-35.9453, 133.385, 7.93351, 0.28", "-36.4465, 134.424, 7.67664, 0.55", "-37.0952, 135.409, 7.36968, 0.28", "-37.5702, 136.033, 7.16112, 0.55", "-39.1952, 137.883, 6.50726, 0.28", "-40.0323, 138.79, 6.17014, 0.55", "-41.3572, 140.221, 5.71918, 0.55", "-44.5504, 143.795, 4.7283, 0.28", "-45.3166, 144.682, 4.5119, 0.55", "-47.4714, 147.249, 3.96214, 0.28", "-47.8724, 147.742, 3.88859, 0.55", "-51.0717, 151.747, 3.35969, 0.28", "-51.7054, 152.547, 3.30225, 0.55", "-52.9788, 154.254, 3.37102, 0.28", "-53.5629, 154.939, 3.38431, 0.55", "-54.799, 156.25, 3.40429, 0.28", "-56.1587, 157.54, 3.27783, 0.55", "-57.1992, 158.458, 3.08056, 0.28", "-58.4463, 159.46, 2.55448, 0.55", "-61.8429, 162.08, 0.694956, 0.28", "-62.4796, 162.568, 0.26892, 0.55", "-64.9793, 164.472, -1.61874, 0.28", "-65.9522, 165.235, -2.42037, 0.83", "-70.3007, 168.793, -6.44254, 0.28", "-70.8162, 169.241, -6.96258, 0.55", "-72.7246, 171.13, -9.00339, 0.28", "-73.1837, 171.632, -9.4802, 0.55", "-74.4506, 173.188, -10.6854, 0.28", "-75.0333, 174.037, -11.183, 0.55", "-76.4818, 176.548, -12.2034, 0.28", "-77.2501, 178.035, -12.7079, 0.55", "-78.684, 181.078, -13.5669, 0.28", "-79.3322, 182.515, -13.9486, 0.55", "-81.5834, 187.626, -15.2495, 0.28", "-82.0286, 188.682, -15.5093, 0.55", "-84.233, 194.164, -16.8574, 0.28", "-84.5444, 194.972, -17.0236, 0.55", "-85.621, 198.076, -17.5205, 0.28", "-86.1474, 199.772, -17.7266, 0.55", "-87.2308, 203.643, -17.9881, 0.28", "-87.4855, 204.536, -17.9883, 0.55", "-88.7223, 208.773, -17.6976, 0.28", "-89.0694, 209.986, -17.5692, 0.83", "-89.3478, 210.993, -17.4037, 0.28", "-89.6251, 211.969, -17.2091, 0.55", "-92.2601, 220.371, -15.4236, 0.28", "-92.4543, 220.948, -15.3221, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.79643, 70.5336, 13.6643, 0.55", "-5.62824, 72.2447, 14.9291, 0.55", "-5.3426, 74.2435, 16.4404, 0.55", "-4.92137, 76.7754, 18.3732, 0.55", "-4.39095, 79.9636, 20.8069, 0.55", "-3.97354, 82.4726, 22.7222, 0.55", "-3.7187, 84.0044, 23.8915, 0.55", "-3.40908, 85.6591, 25.3231, 0.55", "-2.92763, 87.6741, 27.2326, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.0139, 2.02036, -2.23032, 0.83", "-12.9511, 0.53489, -2.58215, 0.83", "-14.4762, -0.547008, -2.88187, 0.83", "-16.8768, -2.16712, -3.42797, 1.38", "-19.0253, -3.53984, -3.93414, 0.55", "-21.7463, -5.16153, -4.54791, 1.11", "-24.3271, -6.68087, -5.09545, 0.55", "-26.0756, -7.62791, -5.45924, 0.83", "-28.8599, -9.1157, -6.0505, 0.55", "-30.1398, -9.80462, -6.35092, 0.55", "-31.405, -10.4837, -6.672, 0.55", "-34.0752, -12.0802, -7.44654, 0.83", "-36.0977, -13.4693, -8.08656, 0.55", "-37.2487, -14.3509, -8.49334, 0.83", "-38.4894, -15.4152, -8.97782, 0.28", "-39.327, -16.2308, -9.35025, 0.55", "-40.9666, -18.0273, -10.1529, 0.83", "-42.8194, -20.2562, -11.1151, 0.55", "-44.0515, -21.8419, -11.7294, 0.55", "-44.9349, -23.0071, -12.145, 0.55", "-46.0025, -24.3775, -12.573, 1.11", "-47.071, -25.6674, -12.9723, 0.28", "-48.0283, -26.6556, -13.2975, 0.83", "-49.0846, -27.3462, -13.5754, 0.28", "-50.0738, -27.6509, -13.8033, 0.55", "-51.607, -27.896, -14.0127, 0.28", "-53.3903, -28.0359, -14.1321, 0.83", "-55.2227, -28.2024, -14.1095, 0.28", "-58.8446, -28.4611, -13.8574, 0.55", "-60.5782, -28.6191, -13.6589, 0.55", "-63.4711, -28.9985, -13.1439, 0.55", "-66.9475, -29.712, -12.3671, 0.55", "-70.0401, -30.535, -11.5827, 0.55", "-71.6627, -31.0803, -11.175, 0.55", "-74.0687, -32.0964, -10.6698, 0.55", "-76.5472, -33.2754, -10.2805, 0.83", "-78.3743, -34.1157, -10.1827, 0.55", "-81.2843, -35.5048, -10.1992, 0.55", "-83.1936, -36.4097, -10.3532, 0.55", "-85.5875, -37.5879, -10.6447, 0.55", "-87.1242, -38.3927, -10.9006, 0.55", "-91.0538, -40.6953, -12.0773, 0.55", "-92.3537, -41.5269, -12.5753, 0.83", "-94.8117, -43.2892, -13.7732, 0.55", "-96.5037, -44.617, -14.7427, 0.55", "-99.3186, -47.1017, -16.609, 1.11", "-102.977, -50.9785, -19.5223, 0.28", "-103.448, -51.5857, -19.9792, 0.55", "-104.385, -52.9041, -20.9813, 0.28", "-105.267, -54.276, -22.0215, 0.83", "-106.054, -55.5785, -22.9833, 0.28", "-107.416, -57.8913, -24.5944, 1.11", "-108.237, -59.2508, -25.3536, 0.55", "-108.727, -60.0771, -25.794, 0.28", "-109.085, -60.6796, -26.0655, 0.55", "-109.876, -62.0654, -26.6196, 1.11", "-110.583, -63.398, -27.0494, 0.28", "-110.697, -63.6534, -27.1011, 0.55", "-111.603, -65.8887, -27.4172, 0.55", "-112.244, -67.6638, -27.6502, 0.28", "-112.549, -68.5398, -27.7569, 0.55", "-113.331, -70.9176, -28.0262, 0.28", "-113.905, -72.7489, -28.2204, 0.83", "-114.29, -74.0185, -28.3689, 0.83", "-115.233, -77.2296, -28.8011, 0.28", "-115.368, -77.6745, -28.8716, 0.55", "-115.687, -78.6748, -29.0232, 0.28", "-115.84, -79.1096, -29.0725, 0.55", "-116.234, -80.1104, -29.1687, 0.28", "-116.451, -80.6526, -29.194, 0.55", "-116.982, -81.8244, -29.1691, 0.28", "-117.432, -82.7781, -29.1311, 0.83", "-118.146, -84.3037, -29.0191, 0.28", "-118.652, -85.4118, -28.9312, 0.55", "-119.218, -86.6221, -28.8154, 0.55", "-119.974, -88.2347, -28.732, 0.28", "-120.528, -89.3756, -28.7194, 0.55", "-121.467, -91.1248, -28.8613, 0.28", "-122.07, -92.1682, -29.0654, 0.55", "-122.917, -93.5484, -29.6092, 0.55", "-123.944, -95.1651, -30.6226, 0.28", "-124.294, -95.6989, -31.0363, 0.55", "-125.366, -97.2158, -32.4693, 0.28", "-125.907, -97.9115, -33.2853, 0.55", "-127.415, -99.8032, -35.853, 0.28", "-128.001, -100.541, -37.0183, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.0139, 2.02036, -2.23032, 0.83", "-12.1593, 2.34521, -2.18277, 0.83", "-14.4918, 3.07653, -1.98403, 1.11", "-17.5233, 4.10993, -1.54494, 0.83", "-19.8285, 5.00546, -1.14145, 0.55", "-21.2901, 5.67026, -0.854732, 0.83", "-23.5116, 6.8124, -0.37326, 0.55", "-26.5181, 8.63115, 0.449869, 1.11", "-28.6477, 10.0619, 1.12682, 0.83", "-29.9744, 11.1132, 1.62963, 0.83", "-31.4958, 12.4633, 2.28704, 0.83", "-32.934, 13.9263, 2.98968, 0.83", "-35.1098, 16.6542, 4.21407, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.25911, -14.6207, -4.26032, 2.49", "2.05987, -18.7524, -5.39424, 2.49", "1.92533, -21.5423, -6.15989, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.25911, -14.6207, -4.26032, 1.11", "4.73707, -17.3906, -4.30233, 1.11", "6.87689, -19.7565, -4.33867, 0.83", "9.67899, -22.9491, -4.38679, 0.83", "12.5719, -26.3963, -4.5232, 0.83", "15.2129, -29.6646, -4.68991, 0.83", "17.0511, -31.9341, -4.81932, 0.55", "19.6339, -35.1236, -5.02251, 0.83", "21.5705, -37.5241, -5.18892, 0.83", "24.4739, -41.1816, -5.47615, 0.55", "25.9959, -43.1825, -5.61712, 0.55", "28.8149, -47.084, -5.84358, 0.55", "32.5896, -52.4298, -6.09284, 0.83", "34.8632, -55.6633, -6.2023, 0.55", "36.4953, -57.9977, -6.2404, 0.55", "39.0894, -61.7684, -6.20832, 0.83", "39.9146, -63.0616, -6.18997, 0.55", "40.8596, -64.7893, -6.10047, 0.55", "41.4418, -65.9696, -5.99593, 0.83", "42.5121, -68.2096, -5.64301, 0.55", "43.3176, -69.8899, -5.30971, 0.28", "44.4411, -72.252, -4.79055, 0.55", "46.0876, -75.6524, -3.9962, 0.55", "47.6807, -78.892, -3.21531, 0.55", "49.5841, -82.7568, -2.2834, 0.55", "50.7466, -85.0669, -1.7382, 0.55", "52.1374, -87.8126, -1.12686, 0.55", "53.6619, -90.7049, -0.546093, 0.55", "54.8641, -93.0156, -0.193494, 0.55", "56.2383, -95.7042, 0.144476, 0.55", "57.2277, -97.5772, 0.293886, 0.55", "57.92, -98.862, 0.38368, 0.55", "58.5478, -100.006, 0.444262, 0.28", "60.1811, -102.943, 0.552636, 0.83", "62.0096, -106.178, 0.660763, 0.55", "63.0664, -107.981, 0.709162, 0.83", "64.3487, -110.151, 0.770913, 0.83", "65.468, -111.965, 0.822242, 0.55", "66.4009, -113.451, 0.862074, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.9943, 37.4783, -0.435744, 0.28", "3.9098, 52.4504, -0.435744, 0.28", "4.82529, 67.4224, -0.435744, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "12.5864, -72.5929, -41.511, 0.83", "12.8949, -77.7544, -42.7106, 0.83", "13.0959, -80.4134, -43.3053, 0.28", "13.2351, -82.0526, -43.6133, 0.55", "13.4705, -84.3641, -44.0032, 0.28", "13.7908, -87.2585, -44.4408, 0.55", "14.1767, -90.7161, -44.9248, 0.28", "14.6552, -94.6889, -45.4487, 0.83", "15.3009, -99.6745, -46.0653, 0.28", "15.7238, -102.763, -46.4294, 1.38", "16.2798, -106.959, -46.8575, 0.28", "16.4524, -108.342, -46.9483, 0.55", "16.7421, -110.96, -47.0808, 0.28", "16.8174, -111.776, -47.1469, 0.55", "16.9958, -114.134, -47.3756, 0.28", "17.0117, -114.492, -47.412, 0.55", "17.0644, -116.521, -47.6417, 0.28", "17.0871, -117.918, -47.8034, 0.55", "17.0334, -120.212, -48.0367, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "12.5864, -72.5929, -41.511, 0.28", "11.6532, -73.2023, -42.3202, 0.28", "11.0508, -73.5903, -42.8039, 0.83", "8.57552, -75.204, -44.7672, 0.28", "8.28801, -75.3989, -45.0262, 0.83", "6.76072, -76.3986, -46.4637, 0.28", "5.73606, -77.0799, -47.3936, 0.55", "4.02753, -78.2271, -48.9772, 0.28", "3.17605, -78.7889, -49.7616, 0.83", "0.372531, -80.6124, -52.2376, 0.28", "-0.696857, -81.3181, -53.2085, 0.83", "-3.10218, -82.9725, -55.4633, 0.28", "-4.02477, -83.5848, -56.3748, 0.83" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-43.6688, -7.56012, -101.053, 0.28", "-46.0291, -3.61796, -102.683, 0.28", "-46.7757, -2.37107, -103.198, 1.66", "-48.0464, -0.248798, -104.076, 0.28", "-48.4851, 0.483939, -104.378, 0.55", "-49.4133, 2.0343, -105.019, 0.28", "-49.9424, 2.91799, -105.385, 1.38" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-43.6688, -7.56012, -101.053, 0.28", "-45.1817, -10.9212, -102.39, 0.28", "-46.2097, -12.5764, -103.306, 0.55", "-47.5557, -14.2536, -104.435, 0.28", "-47.9084, -14.5972, -104.727, 0.55", "-51.0153, -17.2937, -107.196, 0.28", "-52.9355, -18.7722, -108.732, 0.83", "-56.1637, -20.747, -111.337, 0.28", "-59.0282, -22.1806, -113.557, 0.83", "-62.6143, -23.6678, -116.201, 0.28", "-64.0154, -24.1223, -117.216, 0.55", "-66.728, -24.6711, -119.116, 0.28", "-67.6955, -24.7989, -119.825, 0.55", "-69.4847, -24.8795, -121.11, 0.28", "-69.9218, -24.8449, -121.434, 0.55", "-72.6227, -24.5027, -123.44, 0.28", "-74.1035, -24.2555, -124.573, 0.28", "-77.7354, -23.5922, -127.319, 1.66", "-79.9455, -23.1337, -129.079, 0.28", "-82.844, -22.476, -131.435, 1.38" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-35.1098, 16.6542, 4.21407, 0.83", "-36.8835, 18.1333, 4.31597, 0.83", "-38.1881, 19.1843, 4.38945, 0.83", "-39.2587, 20.0012, 4.46337, 0.83", "-41.1795, 21.4433, 4.60785, 0.83", "-43.0655, 22.9265, 4.7887, 0.83", "-44.5331, 24.1314, 4.94412, 0.55", "-45.2126, 24.7158, 5.01977, 0.83", "-46.5119, 25.8765, 5.18066, 0.55", "-47.388, 26.6911, 5.30316, 0.55", "-49.0958, 28.2742, 5.45108, 0.83", "-50.9206, 29.9752, 5.52185, 0.83", "-51.787, 30.787, 5.51808, 0.55", "-53.3739, 32.2603, 5.45507, 0.55", "-54.8779, 33.6501, 5.35121, 0.55", "-56.6927, 35.2423, 5.19359, 0.83", "-57.7815, 36.148, 5.08263, 0.83", "-58.8784, 37.0606, 4.97988, 0.83", "-59.5963, 37.6769, 4.92916, 0.55", "-60.6398, 38.6908, 4.92991, 0.83", "-61.2047, 39.3001, 4.98906, 0.83", "-62.211, 40.4856, 5.21195, 0.55", "-62.582, 40.9569, 5.29524, 0.83", "-63.3955, 42.0075, 5.42176, 0.55", "-65.1197, 44.1894, 5.56234, 0.55", "-66.331, 45.6856, 5.56343, 0.55", "-66.7925, 46.2594, 5.53666, 0.55", "-67.9093, 47.6607, 5.38187, 1.11", "-69.5696, 49.7375, 5.05267, 0.55", "-70.8162, 51.3044, 4.67112, 0.55", "-71.5305, 52.1861, 4.38192, 0.55", "-72.5999, 53.533, 3.8926, 0.83", "-73.2909, 54.3729, 3.56541, 0.55", "-74.5255, 55.8582, 2.9456, 0.55", "-75.7186, 57.3908, 2.31808, 0.55", "-76.0101, 57.7916, 2.14499, 0.55", "-76.5786, 58.6223, 1.79977, 0.55", "-77.7051, 60.3286, 1.03721, 0.83", "-78.7917, 61.9566, 0.234274, 0.55", "-79.6561, 63.2335, -0.430801, 0.83", "-80.4104, 64.35, -0.979684, 0.28", "-81.2312, 65.5635, -1.55382, 1.11", "-82.572, 67.483, -2.40846, 0.55", "-83.7225, 69.0158, -3.03291, 0.55", "-85.2581, 70.8713, -3.7316, 0.55", "-86.4885, 72.2406, -4.20185, 0.55", "-87.3609, 73.1547, -4.46861, 0.55", "-89.2071, 75.0502, -4.92769, 1.66", "-90.3846, 76.2203, -5.13233, 0.55", "-90.8882, 76.7079, -5.20031, 0.55", "-91.61, 77.3479, -5.30513, 0.83", "-92.2464, 77.8809, -5.40096, 0.55", "-92.7629, 78.3361, -5.47857, 0.83", "-94.725, 80.1237, -5.75571, 0.55", "-95.8109, 81.1914, -5.94317, 0.83", "-96.7533, 82.2465, -6.17962, 0.55", "-97.3845, 83.0138, -6.39655, 1.11", "-98.2308, 84.1831, -6.77127, 0.28", "-98.5264, 84.6813, -6.95892, 0.55", "-98.953, 85.7839, -7.39876, 0.28", "-99.4221, 87.4891, -8.12888, 0.55", "-99.5884, 88.305, -8.48581, 0.28", "-99.6862, 88.8427, -8.72878, 0.55", "-99.9235, 90.3176, -9.37397, 0.28", "-100.134, 91.7124, -9.94442, 0.55", "-100.311, 92.8095, -10.351, 0.28", "-100.373, 93.1171, -10.4497, 0.55", "-100.708, 94.5432, -10.853, 0.28", "-100.946, 95.3138, -11.0526, 0.55", "-101.587, 96.864, -11.5829, 0.28", "-101.952, 97.5836, -11.9192, 0.55", "-102.525, 98.6755, -12.4856, 0.28", "-102.791, 99.1524, -12.7614, 0.55", "-103.503, 100.363, -13.5172, 0.28", "-105.05, 102.936, -15.391, 0.83", "-106.085, 104.625, -16.7743, 0.28", "-106.529, 105.341, -17.4153, 0.83", "-107.395, 106.714, -18.8009, 0.28", "-107.559, 106.96, -19.0684, 0.55", "-108.769, 108.37, -21.3238, 0.28", "-109.068, 108.611, -21.8939, 0.28", "-109.538, 108.819, -22.8575, 1.11", "-110.521, 108.989, -24.8242, 0.28", "-111.215, 108.988, -26.1607, 0.83", "-114.102, 108.804, -31.5287, 0.28", "-114.699, 108.716, -32.5911, 1.11", "-115.99, 108.501, -34.8506, 0.28", "-116.608, 108.383, -35.9029, 0.55", "-118.279, 108.057, -38.6628, 0.55", "-119.568, 107.899, -40.6847, 0.28", "-119.846, 107.9, -41.0707, 0.55", "-121.096, 107.965, -42.8535, 0.28", "-121.389, 107.985, -43.274, 0.83", "-122.96, 108.002, -45.7702, 0.28", "-123.402, 107.944, -46.489, 0.55", "-124.048, 107.783, -47.5324, 0.28", "-124.133, 107.761, -47.6787, 0.55", "-124.559, 107.578, -48.46, 0.28", "-124.801, 107.437, -48.9774, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-35.1098, 16.6542, 4.21407, 0.55", "-34.5817, 19.721, 3.85348, 0.55", "-33.8324, 24.8999, 3.43661, 0.55", "-33.1693, 29.0838, 3.46465, 0.28", "-32.4544, 33.3408, 3.63321, 0.55", "-31.4794, 38.8374, 3.88806, 0.55", "-30.3004, 44.6379, 4.20631, 0.55", "-28.5738, 51.7764, 4.78093, 0.55", "-26.2771, 59.5966, 5.76856, 0.55", "-23.9419, 66.392, 6.91306, 0.55", "-22.2308, 70.8547, 7.89819, 0.55", "-19.0627, 78.475, 9.87213, 0.55", "-17.0091, 83.0763, 11.1918, 0.55", "-14.4772, 88.5037, 12.7377, 0.55", "-9.81293, 98.4786, 15.4387, 0.55", "-7.81775, 102.744, 16.6637, 0.28", "-6.87725, 104.875, 17.2679, 0.55", "-5.909, 107.416, 17.8469, 0.28", "-5.17142, 109.743, 18.2421, 0.83", "-4.53635, 112.119, 18.3734, 0.28", "-4.26109, 113.28, 18.2251, 0.55", "-3.46631, 116.364, 17.3297, 0.28", "-2.75648, 118.905, 16.49, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.92533, -21.5423, -6.15989, 0.83", "0.189046, -27.8027, -7.73938, 0.83", "-0.482894, -30.6066, -8.43743, 1.38", "-1.01709, -32.9288, -8.9958, 1.11", "-1.58745, -35.2611, -9.51038, 0.83", "-2.88051, -40.2776, -10.5276, 1.38", "-3.65446, -43.2052, -11.0365, 0.83", "-4.06794, -45.0196, -11.2451, 0.83", "-4.69234, -47.7598, -11.5112, 0.83", "-5.66275, -51.9168, -11.8268, 0.83", "-6.72575, -56.5668, -12.0449, 0.55", "-7.21217, -58.7103, -12.056, 1.66", "-8.13492, -62.8864, -12.0583, 0.83", "-8.8359, -66.191, -12.0667, 0.83", "-9.27772, -68.502, -12.0934, 0.83", "-9.77939, -71.4614, -12.0281, 1.11", "-10.148, -73.7078, -11.895, 1.11", "-10.6959, -76.9708, -11.592, 1.11", "-11.2798, -80.3584, -11.1295, 0.83", "-11.72, -83.1571, -10.676, 0.83", "-12.4537, -87.965, -9.87147, 0.83", "-13.0477, -91.8219, -9.27288, 0.83", "-13.5809, -95.2875, -8.78493, 0.55", "-14.0762, -98.2309, -8.39796, 0.83", "-14.8797, -102.721, -7.85636, 0.55", "-15.6715, -106.756, -7.44479, 1.11", "-16.2707, -109.478, -7.29617, 0.55", "-16.8175, -111.774, -7.21907, 0.83", "-17.6837, -115.352, -7.14961, 0.55", "-18.3436, -118.214, -7.08503, 0.55", "-18.9785, -121.105, -7.00789, 1.11", "-19.6484, -124.367, -6.90564, 0.83", "-20.3091, -127.764, -6.77863, 0.83", "-20.8792, -130.64, -6.68624, 0.83", "-21.6614, -134.57, -6.57921, 0.83", "-22.6382, -139.149, -6.43946, 0.83", "-23.5908, -142.946, -6.27116, 0.83", "-24.3744, -145.7, -6.10349, 0.83", "-25.2045, -148.211, -5.90996, 0.83", "-25.7972, -149.771, -5.77978, 0.83", "-27.4321, -153.724, -5.41985, 0.55", "-28.6569, -156.726, -5.12998, 0.83", "-29.3528, -158.514, -4.95997, 0.83", "-30.3118, -161.2, -4.69668, 0.55", "-31.2351, -164.125, -4.38832, 0.55", "-32.2271, -167.775, -3.98542, 0.55", "-32.9298, -170.701, -3.70523, 0.55", "-33.7918, -174.734, -3.29831, 0.55", "-34.4255, -177.773, -2.98846, 0.55", "-35.008, -180.808, -2.70666, 0.55", "-35.8625, -185.594, -2.31041, 0.55", "-36.5525, -189.599, -2.02409, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.92533, -21.5423, -6.15989, 1.66", "1.67577, -28.7582, -9.72824, 1.66", "1.62541, -32.2893, -11.3742, 1.66", "1.60218, -38.2254, -14.0524, 1.66", "1.64841, -44.4847, -16.7565, 1.66", "1.67578, -48.1903, -18.3575, 1.11", "1.6996, -51.4157, -19.7509, 1.38", "1.79017, -54.7318, -20.919, 1.38", "1.80435, -56.7183, -21.6438, 1.38", "1.95897, -61.3644, -23.3397, 2.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "66.4009, -113.451, 0.862074, 0.28", "67.5168, -116.092, 0.55757, 0.28", "68.349, -117.801, 0.277657, 0.55", "69.0745, -119.175, 0.0330247, 0.28", "69.221, -119.442, 0.00950372, 0.55", "69.9909, -120.762, -0.02678, 0.28", "70.5558, -121.67, -0.0406664, 0.55", "71.5833, -123.068, -0.062001, 0.28", "72.6009, -124.329, -0.102826, 0.83", "74.2635, -126.354, -0.16639, 0.55", "76.058, -128.489, -0.198886, 0.28", "77.1075, -129.715, -0.186134, 0.83", "78.5211, -131.337, -0.158419, 0.28", "79.2438, -132.132, -0.133512, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "66.4009, -113.451, 0.862074, 0.55", "68.9528, -118.804, 0.830831, 0.55", "69.759, -120.518, 0.768935, 0.55", "71.4361, -124.04, 0.396313, 0.83", "73.451, -128.145, -0.171362, 0.28", "75.3306, -131.981, -0.836551, 0.83", "76.3896, -134.215, -1.26786, 0.28", "77.2885, -136.183, -1.74288, 0.55", "79.4659, -140.77, -2.99778, 0.28", "80.0947, -142.055, -3.39096, 0.28", "80.8709, -143.529, -3.82194, 0.28", "82.0075, -145.688, -4.30141, 0.83", "82.925, -147.523, -4.40682, 0.55", "84.0284, -149.785, -4.25371, 0.28", "85.0791, -151.986, -3.78972, 0.55", "86.9946, -156.022, -2.69253, 0.28", "88.3589, -158.934, -1.77359, 0.83", "90.2975, -163.123, -0.38937, 0.28", "91.2607, -165.391, 0.311969, 0.55", "92.9191, -169.594, 1.49322, 0.28", "93.2792, -170.616, 1.74069, 0.55", "93.9415, -172.949, 2.1518, 0.28", "94.7233, -175.957, 2.52983, 0.83", "95.4101, -178.894, 2.61298, 0.55", "95.9412, -181.639, 2.57306, 0.55", "96.302, -184.283, 2.32192, 0.28", "96.6435, -187.4, 2.00398, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "17.0334, -120.212, -48.0367, 0.28", "18.8739, -121.462, -47.3174, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "17.0334, -120.212, -48.0367, 1.11", "16.8448, -123.472, -48.4964, 1.11", "16.7444, -125.213, -48.6532, 0.28", "16.7137, -126.073, -48.8204, 0.55", "16.6727, -127.365, -49.1171, 0.28", "16.6237, -128.417, -49.3733, 0.55", "16.5065, -130.58, -49.9531, 0.28", "16.3787, -133.559, -50.8324, 1.38", "16.2142, -136.746, -51.908, 0.55", "16.0556, -138.659, -52.6434, 0.55", "15.9318, -139.767, -53.1814, 0.28", "15.5773, -142.512, -54.7971, 0.55", "15.3705, -143.904, -55.7264, 0.28", "15.2872, -144.433, -56.0946, 0.28", "15.0823, -145.56, -56.9278, 1.11", "14.6963, -148.048, -58.9066, 0.28", "14.4384, -149.615, -60.17, 0.83", "14.0759, -151.287, -61.4795, 0.55", "13.8408, -152.304, -62.2733, 0.55", "13.264, -155.162, -64.4693, 0.55", "12.8862, -157.237, -66.2695, 0.83", "12.5749, -158.868, -67.6292, 0.55", "12.2705, -160.47, -68.8833, 0.55", "11.8315, -162.849, -70.631, 0.28", "11.5616, -164.345, -71.6242, 0.55", "10.7058, -169.096, -74.3172, 0.55", "10.1594, -172.108, -75.8931, 1.38", "9.62591, -175.446, -77.4404, 0.28", "9.49967, -176.323, -77.8597, 0.55", "9.12203, -178.752, -78.9346, 0.28", "8.8914, -180.079, -79.4892, 0.83", "8.45439, -182.713, -80.4885, 0.28", "8.3058, -183.734, -81.0312, 0.83", "7.84093, -187.592, -83.489, 0.28", "7.66161, -189.642, -84.8895, 1.38" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-82.844, -22.476, -131.435, 0.55", "-84.9838, -19.3977, -136.303, 0.55", "-85.937, -18.0265, -138.472, 0.55", "-86.9138, -16.6213, -140.694, 0.28", "-87.4453, -15.8566, -141.903, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-82.844, -22.476, -131.435, 0.28", "-83.52, -22.8727, -132.638, 0.28", "-84.0512, -23.2574, -133.6, 0.55", "-86.061, -25.0888, -137.638, 0.28", "-86.4113, -25.5017, -138.47, 0.28", "-86.7123, -25.8792, -139.204, 0.83", "-87.4771, -26.9621, -141.171, 0.28", "-88.384, -28.6547, -144.113, 1.94", "-89.3701, -30.983, -148.082, 0.55", "-89.6808, -31.9398, -149.779, 0.55", "-89.8574, -32.7425, -151.308, 0.55", "-90.0227, -34.6914, -155.065, 1.66", "-89.7842, -37.0324, -159.525, 0.28", "-89.4976, -37.9108, -161.139, 0.55", "-88.647, -39.6232, -164.153, 0.28", "-88.0282, -40.6259, -165.84, 1.11", "-87.0303, -41.8758, -167.746, 0.28", "-86.2794, -42.7091, -168.785, 0.83", "-84.6357, -44.5341, -170.532, 0.28", "-83.7743, -45.6569, -171.362, 1.11", "-82.7466, -47.2537, -172.427, 0.55", "-82.4376, -47.8697, -172.974, 1.38", "-82.0385, -49.1703, -174.809, 1.38", "-81.9682, -50.1601, -176.635, 0.55", "-82.1113, -50.994, -178.472, 0.55", "-82.5474, -52.3648, -181.59, 1.38", "-83.4778, -54.3904, -186.695, 0.55", "-84.5982, -56.292, -192.131, 0.28", "-84.8158, -56.5663, -193.068, 0.55", "-85.6732, -57.3781, -196.171, 0.28", "-86.2383, -57.7998, -198.127, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-36.5525, -189.599, -2.02409, 0.55", "-40.6361, -190.469, -0.436702, 0.55", "-43.4661, -191.055, 0.454062, 0.55", "-45.9553, -191.646, 1.13715, 0.55", "-49.003, -192.525, 1.83699, 0.55", "-53.2832, -193.945, 2.72459, 0.55", "-55.5857, -194.834, 3.11975, 0.83", "-59.8246, -196.849, 3.63926, 0.55", "-62.5131, -198.505, 3.78607, 0.83", "-64.8919, -200.334, 3.77212, 0.28", "-65.8535, -201.271, 3.72325, 0.55", "-67.8946, -203.886, 3.55672, 0.28", "-69.0444, -205.723, 3.4494, 0.83", "-70.3902, -208.508, 3.35858, 0.28", "-71.2935, -210.664, 3.45318, 0.83", "-72.1992, -212.862, 3.74948, 0.28", "-72.668, -213.929, 3.95983, 0.55", "-73.551, -215.902, 4.58019, 0.28", "-74.7783, -218.458, 5.53929, 0.83", "-76.5012, -221.808, 6.98399, 0.28", "-77.6427, -223.819, 7.95501, 0.28", "-79.4137, -226.835, 9.54367, 0.83", "-81.4113, -229.941, 11.271, 0.28", "-83.1456, -232.379, 12.5573, 0.83", "-84.4938, -234.158, 13.4327, 0.83", "-86.2884, -236.49, 14.4936, 0.28", "-88.5201, -239.471, 15.7512, 1.11", "-91.4144, -243.352, 17.2902, 0.28", "-94.2588, -247.152, 18.5923, 1.11", "-95.5638, -248.944, 19.1774, 0.55", "-97.4312, -251.422, 19.826, 1.11", "-99.4644, -253.985, 20.3241, 0.28", "-100.001, -254.611, 20.4342, 0.55", "-101.815, -256.641, 20.8394, 0.28", "-103.236, -258.169, 21.2052, 1.11", "-107.354, -262.344, 22.2139, 0.55", "-109.629, -264.54, 22.7772, 0.28", "-112.301, -267.023, 23.5637, 0.83", "-114.347, -268.892, 24.2543, 0.28", "-115.323, -269.73, 24.6073, 0.55", "-116.933, -271.081, 25.2405, 0.28", "-117.694, -271.712, 25.622, 0.55", "-118.61, -272.418, 26.0773, 0.28", "-119.509, -273.078, 26.4818, 0.55", "-123.473, -275.796, 28.1227, 0.28", "-124.157, -276.227, 28.3831, 0.55", "-127.49, -278.233, 29.5918, 0.28", "-128.109, -278.598, 29.81, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-36.5525, -189.599, -2.02409, 0.83", "-36.2959, -191.752, -2.02655, 0.83", "-35.9727, -194.462, -2.02965, 0.28", "-35.7985, -195.924, -2.03132, 0.55", "-35.5924, -197.652, -2.03329, 0.55", "-35.2188, -200.786, -2.03687, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.95897, -61.3644, -23.3397, 1.11", "3.33192, -64.7396, -23.9425, 1.11", "4.54295, -68.0635, -24.5189, 1.11", "5.8537, -71.6954, -25.1485, 1.11", "7.19932, -75.4616, -25.9239, 1.11", "8.78238, -80.0751, -27.0056, 0.83", "10.4891, -85.0486, -28.1717, 0.83", "11.8945, -89.4226, -29.2315, 0.83", "12.6968, -92.1645, -29.9203, 0.83", "13.8996, -96.493, -31.0246, 0.83", "14.5456, -98.7734, -31.6432, 1.94" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.95897, -61.3644, -23.3397, 0.55", "1.83612, -61.3315, -26.2629, 0.55", "1.61745, -61.7832, -31.5668, 0.55", "1.49029, -62.3401, -34.4674, 0.55", "1.27005, -63.2987, -37.3713, 0.83", "1.11986, -64.0992, -39.2799, 0.55", "0.955543, -65.2146, -41.5675, 0.83", "0.880691, -66.918, -44.4418, 0.28", "0.857517, -68.5384, -46.4682, 1.66", "0.85859, -72.9062, -51.1444, 0.28", "0.87207, -74.1158, -52.3761, 1.11", "0.916867, -76.3604, -54.5387, 0.55", "0.967817, -77.8288, -56.0228, 0.55", "1.08432, -79.0497, -57.3452, 0.55", "1.32179, -80.9279, -59.8315, 1.38", "1.69961, -83.3369, -63.9828, 0.28", "1.7726, -83.8837, -65.0729, 1.11", "1.91236, -85.2481, -68.3332, 0.28", "1.92707, -85.5663, -69.2998, 0.55", "1.95626, -86.5361, -73.382, 0.28", "1.87379, -86.9219, -76.4135, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "7.66161, -189.642, -84.8895, 0.28", "7.22949, -192.523, -84.4161, 0.28", "6.92659, -194.744, -84.0939, 0.83", "6.73938, -196.267, -83.9011, 0.28", "6.66445, -196.989, -83.8241, 0.55", "6.57296, -197.934, -83.7397, 0.28", "6.51038, -198.842, -83.6888, 0.55", "6.46932, -199.883, -83.6714, 0.28", "6.44712, -200.834, -83.6741, 1.11", "6.41945, -202.238, -83.6944, 0.28", "6.39847, -203.266, -83.7094, 0.55", "6.34737, -205.392, -83.7413, 0.28", "6.27258, -207.985, -83.7827, 0.83", "6.21417, -210.637, -83.8283, 1.94" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "7.66161, -189.642, -84.8895, 0.28", "5.73377, -192.519, -84.9874, 0.28", "5.00869, -193.602, -85.0243, 1.11", "3.23918, -196.243, -85.1141, 0.28", "2.65915, -197.109, -85.1436, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-87.4453, -15.8566, -141.903, 0.28", "-90.0049, -11.2339, -146.339, 0.28", "-90.5624, -10.227, -147.305, 0.83", "-92.4248, -6.86335, -150.532, 0.28", "-92.9665, -5.88505, -151.471, 0.55", "-94.9892, -2.23212, -154.976, 0.28", "-95.4023, -1.48598, -155.692, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-87.4453, -15.8566, -141.903, 0.28", "-88.3049, -15.5592, -142.712, 0.28", "-89.2066, -15.2983, -143.51, 0.55", "-93.1876, -14.2932, -146.859, 0.28", "-94.4832, -13.9848, -147.945, 0.55", "-95.4967, -13.7353, -148.739, 0.28", "-96.2422, -13.5642, -149.285, 0.55", "-97.9252, -13.1356, -150.481, 0.28", "-99.4631, -12.7777, -151.48, 0.55", "-101.851, -12.2545, -152.874, 0.55", "-103.481, -11.8467, -153.844, 0.28", "-104.605, -11.5291, -154.498, 0.55", "-106.731, -10.8051, -155.741, 0.28", "-107.936, -10.3059, -156.411, 2.49", "-111.222, -8.73256, -158.191, 0.28", "-112.076, -8.30685, -158.719, 0.28", "-113.166, -7.78105, -159.451, 0.55", "-114.59, -7.08038, -160.445, 0.28", "-117.09, -5.96858, -162.33, 0.83", "-118.359, -5.43769, -163.359, 0.55", "-122.418, -3.89012, -166.735, 0.28", "-123.394, -3.55483, -167.58, 0.55", "-124.738, -3.10679, -168.8, 0.28", "-127.527, -2.26786, -171.336, 0.28", "-127.675, -2.22912, -171.472, 0.55", "-129.351, -1.78786, -172.919, 0.28", "-130.038, -1.59651, -173.439, 1.66", "-134.039, -0.530364, -176.443, 0.28", "-134.524, -0.408611, -176.786, 0.55", "-135.909, -0.0401645, -177.675, 0.28", "-136.645, 0.141628, -178.151, 0.55", "-138.668, 0.521719, -179.465, 0.28", "-140.223, 0.757829, -180.445, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-35.2188, -200.786, -2.03687, 1.11", "-36.21, -204.365, -1.66777, 1.11", "-37.057, -207.911, -1.21066, 0.55", "-37.6875, -211.183, -0.773179, 0.28", "-38.2476, -214.257, -0.346485, 0.55", "-38.7244, -217.272, 0.174211, 0.55", "-39.155, -220.472, 0.80302, 0.55", "-39.517, -224.006, 1.54758, 0.55", "-39.6414, -226.698, 2.25137, 0.83", "-39.5874, -228.035, 2.61967, 0.83", "-39.1251, -230.796, 3.72023, 0.28", "-38.8431, -231.858, 4.25678, 0.55", "-38.4661, -233.027, 4.92839, 0.55", "-37.897, -234.612, 5.91425, 0.83", "-36.9074, -237.105, 7.61488, 0.55", "-34.4608, -242.657, 11.4688, 0.28", "-34.2481, -243.138, 11.8025, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-35.2188, -200.786, -2.03687, 0.28", "-34.6009, -203.905, -2.71032, 0.28", "-34.2774, -205.769, -3.05595, 0.83", "-33.5217, -211.164, -3.89138, 0.28", "-33.2806, -213.246, -4.17072, 0.83", "-32.8425, -217.957, -4.66426, 0.28", "-32.5083, -222.226, -5.03407, 0.28", "-32.4775, -223.315, -5.07982, 0.83", "-32.4532, -226.156, -5.09994, 0.28", "-32.4398, -227.11, -5.06665, 0.55", "-32.3645, -231.661, -4.83443, 0.28", "-32.332, -232.263, -4.79773, 0.55", "-32.1886, -233.858, -4.72716, 0.28", "-31.9498, -235.725, -4.68234, 0.55", "-31.1618, -240.674, -4.81511, 0.28", "-31.0196, -241.446, -4.87059, 0.55", "-30.3144, -244.737, -5.27136, 0.28", "-30.0195, -246.059, -5.46873, 0.55", "-29.758, -247.193, -5.66962, 0.55", "-28.9582, -250.573, -6.34588, 0.28", "-28.67, -251.685, -6.61455, 0.55", "-28.1754, -253.495, -7.06639, 0.28", "-28.0838, -253.837, -7.15647, 0.55", "-27.3953, -256.344, -7.72539, 0.28", "-27.2943, -256.701, -7.80399, 0.55", "-26.321, -260.49, -8.88006, 0.28", "-26.0598, -261.71, -9.29282, 0.55", "-25.583, -264.263, -10.3053, 0.28", "-25.1733, -266.671, -11.3681, 0.28", "-24.9924, -267.885, -11.9575, 1.11", "-24.5098, -271.731, -13.9598, 0.28", "-24.4844, -272.234, -14.2575, 0.55", "-24.4481, -273.527, -15.1296, 0.28", "-24.4547, -273.938, -15.4655, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "14.5456, -98.7734, -31.6432, 0.55", "16.4103, -99.0714, -32.6435, 0.55", "18.4247, -99.5403, -33.6885, 0.83", "19.9313, -99.9908, -34.4698, 0.55", "21.5268, -100.515, -35.2904, 0.55", "23.9802, -101.403, -36.5288, 1.11", "25.2083, -101.903, -37.1357, 0.55", "26.977, -102.815, -37.9889, 1.11", "28.0971, -103.482, -38.4975, 0.55", "29.1799, -104.194, -38.9505, 0.55", "30.7002, -105.344, -39.5718, 0.83", "31.863, -106.354, -40.0397, 0.55", "32.7097, -107.142, -40.373, 0.55", "33.735, -108.115, -40.7578, 0.83", "34.4947, -108.866, -41.0264, 0.55", "35.7925, -110.223, -41.4738, 0.83", "36.4948, -110.952, -41.6955, 0.28", "37.5111, -111.968, -41.9924, 0.83", "38.2367, -112.679, -42.1717, 0.28", "38.9766, -113.366, -42.3326, 0.83", "40.0656, -114.31, -42.551, 0.28", "40.9706, -115.07, -42.7299, 1.11", "41.9901, -115.935, -42.9518, 1.11", "43.4301, -117.188, -43.2727, 0.55", "44.5473, -118.173, -43.5442, 0.55", "45.4267, -118.964, -43.7666, 0.55", "46.8191, -120.261, -44.1231, 0.28", "47.653, -121.085, -44.3426, 0.83", "49.6319, -123.148, -44.8496, 0.55", "51.2424, -124.929, -45.2215, 0.55", "52.7202, -126.713, -45.5754, 1.11", "53.4949, -127.726, -45.7671, 0.55", "54.6079, -129.301, -46.0514, 0.83", "55.2066, -130.293, -46.2645, 0.28", "55.8637, -131.62, -46.6046, 0.83", "56.7128, -133.663, -47.1472, 0.55", "57.2102, -135.018, -47.5604, 0.55", "57.7658, -136.673, -48.11, 0.83", "58.5773, -139.385, -49.0987, 0.55", "58.9634, -140.823, -49.6425, 0.55", "59.4468, -142.859, -50.4615, 1.11", "59.7135, -144.056, -50.9331, 0.28", "59.8602, -144.733, -51.2052, 0.83", "60.1785, -146.217, -51.8404, 0.28", "60.4374, -147.235, -52.2524, 0.83", "60.8754, -148.765, -52.8921, 0.28", "61.0979, -149.466, -53.1729, 0.55", "61.8602, -151.591, -53.8828, 0.55", "62.9648, -154.434, -54.7064, 0.55", "64.0965, -157.182, -55.4517, 0.55", "64.7822, -158.793, -55.8676, 0.28", "65.6695, -160.808, -56.3183, 1.11", "66.5408, -162.759, -56.7101, 0.55", "67.0837, -163.948, -56.8836, 1.38" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "14.5456, -98.7734, -31.6432, 1.11", "13.8809, -100.965, -32.0921, 1.11", "12.974, -103.954, -32.7045, 0.83", "12.2072, -106.482, -33.2223, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "1.87379, -86.9219, -76.4135, 0.28", "2.0231, -90.3123, -79.939, 0.28", "2.15301, -92.4726, -81.948, 0.28", "2.27857, -93.8378, -83.0504, 0.83", "2.55309, -97.3984, -85.7909, 0.28", "2.60035, -97.843, -86.1006, 0.55", "2.92998, -100.4, -87.7687, 0.28", "3.25634, -102.273, -88.711, 1.38", "3.78654, -104.912, -89.8306, 0.28", "4.3194, -106.637, -90.4763, 0.55", "5.36719, -109.029, -91.2136, 0.28", "5.51872, -109.345, -91.3328, 0.55", "6.33481, -110.878, -91.9798, 0.28", "6.92401, -112.002, -92.5843, 1.38", "8.35703, -114.811, -94.2186, 0.28", "8.99148, -116.139, -95.0135, 1.11", "10.3161, -119.223, -96.9897, 0.28", "10.5934, -119.896, -97.4007, 0.83", "12.9165, -125.815, -100.944, 0.28", "13.2673, -126.735, -101.445, 0.83", "14.0206, -128.758, -102.421, 0.28", "14.3, -129.544, -102.77, 0.55", "15.6276, -133.303, -104.277, 0.28", "16.1726, -134.857, -104.871, 1.11", "17.7866, -139.433, -106.435, 0.28", "18.041, -140.148, -106.676, 0.55", "20.2331, -146.249, -108.652, 0.28", "20.5688, -147.212, -108.958, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "1.87379, -86.9219, -76.4135, 0.28", "1.80905, -87.2707, -78.9997, 0.28", "1.81192, -87.3641, -79.5959, 1.11", "1.81265, -88.0374, -84.6324, 0.55", "1.82414, -88.3857, -87.8664, 0.28", "1.75906, -88.4773, -89.4845, 0.83", "1.69118, -88.5101, -90.8482, 0.55", "1.53357, -88.4406, -92.1792, 0.55", "1.08228, -87.9555, -95.9735, 0.28", "1.01344, -87.775, -96.7495, 0.83", "0.743214, -86.4841, -101.151, 0.28", "0.738851, -86.2435, -101.951, 0.83", "0.940549, -85.0862, -105.789, 0.28", "1.09688, -84.7404, -107.175, 1.11", "1.65978, -84.2369, -109.945, 0.28", "1.79895, -84.1819, -110.449, 0.83", "3.39416, -84.1159, -114.584, 0.28", "3.88594, -84.1413, -115.799, 1.94", "5.30859, -84.3677, -118.91, 0.28", "5.69423, -84.4243, -119.838, 0.55", "6.14538, -84.4678, -120.901, 0.28", "6.5887, -84.4751, -121.995, 0.55", "7.59128, -84.1964, -124.62, 0.28", "7.70993, -84.1304, -124.973, 0.55", "8.4744, -83.1787, -127.165, 0.28", "8.85144, -82.5155, -128.372, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "6.21417, -210.637, -83.8283, 0.28", "6.10184, -214.06, -83.6017, 0.28", "6.04815, -215.696, -83.4935, 0.83", "5.9445, -218.854, -83.2844, 0.28", "5.8513, -221.694, -83.0964, 1.11", "5.7199, -225.697, -82.8314, 0.28", "5.68342, -226.809, -82.7578, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "6.21417, -210.637, -83.8283, 0.55", "4.0593, -214.501, -84.2763, 0.55", "1.8771, -218.415, -84.73, 0.55", "0.647612, -220.62, -84.9856, 0.83", "-0.524854, -222.722, -85.2293, 0.55", "-2.32188, -225.945, -85.6029, 0.55", "-2.92347, -227.024, -85.728, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-95.4023, -1.48598, -155.692, 0.28", "-95.2975, 1.18021, -155.465, 0.28", "-95.2267, 2.5483, -155.365, 0.55", "-94.8778, 7.23821, -155.106, 0.28", "-94.7808, 8.37528, -155.056, 0.83", "-94.2518, 13.4855, -154.779, 0.28", "-93.8999, 16.7571, -154.595, 0.28", "-93.7563, 17.8909, -154.555, 0.83", "-93.5683, 19.3813, -154.544, 0.28", "-93.4279, 20.5047, -154.635, 0.55", "-93.0839, 23.3533, -155.068, 0.28", "-92.9652, 24.2281, -155.461, 0.55", "-92.7314, 25.8125, -156.5, 0.28", "-92.6026, 26.549, -157.05, 0.55", "-92.1366, 29.3166, -159.235, 0.28", "-91.9833, 30.4318, -160.146, 0.55", "-91.4016, 36.1034, -164.732, 0.28", "-91.2758, 37.5249, -165.804, 0.28", "-91.2116, 38.5834, -166.515, 0.83", "-91.1923, 40.5653, -167.674, 0.28", "-91.3262, 43.2719, -168.997, 0.55", "-91.5581, 44.9627, -169.626, 0.28", "-91.6878, 45.3958, -169.648, 0.55", "-92.2294, 46.8237, -169.627, 0.28", "-92.6494, 47.7295, -169.579, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-95.4023, -1.48598, -155.692, 0.28", "-96.8454, -2.20187, -156.001, 0.28", "-97.4855, -2.50511, -156.189, 0.55", "-99.7639, -3.57791, -157.001, 0.28", "-100.225, -3.78467, -157.193, 0.55", "-102.771, -4.89394, -158.31, 0.28", "-103.317, -5.11565, -158.57, 0.55", "-105.695, -5.98426, -159.851, 0.28", "-106.425, -6.21974, -160.273, 0.55", "-108.115, -6.69321, -161.267, 0.28", "-108.404, -6.75451, -161.466, 0.55", "-109.84, -6.97425, -162.648, 0.28", "-110.096, -7.00348, -162.901, 0.55", "-110.963, -7.08567, -163.88, 0.28", "-111.444, -7.13394, -164.433, 0.55", "-112.865, -7.29386, -166.13, 0.28", "-113.091, -7.32216, -166.41, 0.55", "-115.799, -7.73221, -169.92, 0.28", "-116.189, -7.79811, -170.441, 0.55", "-116.931, -7.95059, -171.451, 0.28", "-117.033, -7.97388, -171.598, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-140.223, 0.757829, -180.445, 0.28", "-139.653, -2.90235, -182.258, 0.28", "-139.051, -4.51964, -183.006, 1.11", "-138.071, -6.59276, -183.92, 0.28", "-137.768, -7.06796, -184.073, 0.55", "-136.193, -9.13904, -184.626, 0.28", "-135.198, -10.3913, -184.878, 0.55", "-133.034, -12.5676, -185.136, 0.28", "-132.294, -13.2629, -185.17, 0.83", "-129.14, -16.1751, -185.186, 0.28", "-128.079, -17.1635, -185.221, 0.55", "-126.161, -18.9897, -185.343, 0.28", "-125.446, -19.6984, -185.459, 0.55", "-122.876, -22.368, -186.192, 0.28", "-122.056, -23.3169, -186.568, 0.83", "-120.239, -25.7309, -187.809, 0.28", "-119.416, -26.9308, -188.49, 0.83", "-117.617, -29.7002, -190.078, 0.28", "-117.021, -30.749, -190.633, 0.55", "-115.65, -33.6072, -192.04, 0.28", "-115.318, -34.3938, -192.376, 0.55", "-114.641, -36.2315, -193.035, 0.28", "-113.91, -38.6584, -193.827, 0.28", "-113.382, -40.843, -194.462, 0.28", "-113.111, -42.1413, -194.818, 0.55", "-112.667, -44.4464, -195.404, 0.28", "-112.414, -45.8313, -195.783, 0.55", "-111.959, -48.7225, -196.649, 0.28", "-111.784, -49.8275, -196.992, 0.55", "-111.311, -52.7306, -197.789, 0.28", "-111.311, -52.7306, -197.789, 0.55", "-110.882, -55.3929, -198.383, 0.28", "-110.635, -56.7161, -198.659, 0.55", "-109.834, -59.8091, -199.251, 0.28", "-109.521, -60.9113, -199.436, 1.38" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-140.223, 0.757829, -180.445, 0.55", "-141.368, 0.708019, -181.185, 0.55", "-142.278, 0.665529, -181.797, 0.28", "-142.689, 0.662499, -182.061, 0.55", "-143.666, 0.724729, -182.756, 0.28", "-144.333, 0.776689, -183.234, 0.83", "-147.046, 1.14087, -185.121, 0.28", "-147.422, 1.21612, -185.39, 0.28", "-148.611, 1.52222, -186.245, 0.83", "-151.767, 2.46526, -188.649, 0.28", "-152.757, 2.80659, -189.424, 0.55", "-154.914, 3.59601, -191.286, 0.28", "-155.591, 3.86755, -191.905, 0.28", "-155.974, 4.01656, -192.247, 0.55", "-158.445, 4.93838, -194.364, 0.28", "-159.737, 5.33793, -195.496, 1.11", "-163.576, 6.24971, -198.949, 0.28", "-163.902, 6.3007, -199.236, 0.55", "-165.695, 6.48843, -200.697, 0.28", "-166.531, 6.52233, -201.328, 1.11", "-171.103, 6.38973, -204.252, 0.28", "-171.661, 6.32997, -204.575, 0.55", "-173.018, 6.1367, -205.481, 0.28", "-173.643, 6.06288, -205.953, 0.55", "-175.587, 5.8705, -207.88, 0.28", "-176.526, 5.8069, -208.875, 0.28", "-177.274, 5.77751, -209.674, 0.55", "-181.254, 5.74754, -214.083, 0.28", "-182.05, 5.76098, -214.989, 0.83", "-185.602, 5.99148, -219.082, 0.28", "-186.231, 6.06869, -219.805, 0.28", "-186.543, 6.1062, -220.168, 0.55", "-188.553, 6.31451, -222.389, 0.28", "-189.294, 6.38275, -223.117, 0.28", "-189.946, 6.4408, -223.741, 0.55", "-191.443, 6.58039, -225.028, 0.28", "-192.368, 6.66303, -225.862, 0.28", "-193.027, 6.77745, -226.576, 0.83", "-195.834, 7.24165, -229.841, 0.28", "-196.197, 7.30313, -230.242, 0.55", "-196.792, 7.41797, -230.861, 0.28", "-197.802, 7.65322, -231.813, 0.55", "-203.636, 9.19079, -236.767, 0.28", "-204.752, 9.499, -237.598, 0.28", "-206.796, 10.1223, -238.86, 0.28", "-207.884, 10.499, -239.475, 0.55", "-211.51, 11.903, -241.269, 0.28", "-213.091, 12.5608, -241.938, 0.28", "-215.499, 13.6658, -242.68, 0.55", "-218.281, 15.0808, -243.554, 0.55", "-220.386, 16.2616, -244.298, 0.55", "-221.787, 17.0746, -244.811, 0.28", "-223.239, 17.9303, -245.381, 0.55", "-225.422, 19.178, -246.31, 0.28", "-226.685, 19.859, -246.883, 0.55", "-228.901, 20.9591, -247.964, 0.28", "-230.008, 21.5033, -248.501, 0.55", "-231.679, 22.3447, -249.343, 0.28", "-232.542, 22.7962, -249.75, 0.28", "-233.408, 23.2371, -250.096, 0.55", "-235.171, 24.1131, -250.708, 0.28", "-235.755, 24.4045, -250.863, 0.55", "-237.406, 25.3841, -251.304, 0.28", "-238.119, 25.8691, -251.459, 0.55", "-239.83, 27.0436, -251.83, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-34.2481, -243.138, 11.8025, 0.55", "-34.5023, -245.605, 12.5304, 0.55", "-34.5523, -247.483, 13.113, 0.28", "-34.5532, -248.389, 13.3919, 0.55", "-34.6838, -250.681, 14.3519, 0.28", "-34.7315, -251.095, 14.5525, 0.55", "-35.0782, -252.535, 15.5882, 0.28", "-35.4322, -253.209, 16.4899, 0.83", "-35.9163, -253.579, 17.3291, 0.83", "-37.7794, -254.406, 19.7536, 0.28", "-38.2553, -254.521, 20.3102, 0.83", "-41.271, -254.937, 23.607, 0.28", "-42.0867, -254.959, 24.4246, 0.83", "-43.7408, -254.867, 26.0173, 0.55", "-44.943, -254.719, 27.1363, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-34.2481, -243.138, 11.8025, 0.55", "-33.6387, -246.917, 13.2658, 0.55", "-33.3192, -248.932, 13.9805, 0.28", "-33.125, -250.05, 14.3582, 0.83", "-32.3815, -254.333, 15.8045, 0.28", "-32.2871, -254.877, 15.9881, 0.55", "-31.6034, -258.814, 17.3179, 0.28", "-31.0754, -262.035, 18.5882, 0.28", "-30.952, -262.784, 18.9037, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "67.0837, -163.948, -56.8836, 0.55", "67.5087, -169.405, -57.5042, 0.55", "68.1052, -174.422, -58.0712, 0.55", "68.6411, -177.971, -58.5824, 0.28", "68.9226, -179.5, -58.8218, 0.83", "69.3467, -181.64, -59.2026, 0.83", "69.766, -183.646, -59.5778, 0.55", "70.4546, -186.451, -60.1691, 1.11", "71.5822, -190.265, -60.8732, 0.28", "72.5808, -193.522, -61.4358, 0.83", "73.1916, -195.593, -61.7805, 0.28", "73.7332, -197.595, -62.0558, 1.38", "74.4118, -200.339, -62.3282, 0.28", "74.5783, -201.099, -62.3599, 0.83", "74.8625, -202.53, -62.3191, 0.28", "75.1722, -204.574, -62.242, 0.83", "75.3994, -206.468, -62.1629, 0.83", "75.5643, -208.033, -62.1418, 0.55", "75.8078, -211.127, -62.2146, 0.83", "75.9739, -213.188, -62.2901, 0.83", "76.1405, -215.12, -62.3602, 0.83", "76.2996, -217.444, -62.484, 0.83", "76.3892, -219.174, -62.6124, 0.83", "76.4844, -221.462, -62.7911, 0.83", "76.565, -224.306, -62.9991, 0.83", "76.6477, -227.436, -63.192, 0.28", "76.769, -230.227, -63.3028, 0.55", "76.8507, -232.115, -63.3541, 0.28", "76.8624, -232.367, -63.3573, 0.83", "76.9416, -233.947, -63.3566, 0.28", "76.9849, -235.26, -63.342, 0.55", "77.0413, -237.872, -63.308, 1.38", "77.14, -241.238, -63.2329, 0.28", "77.2052, -243.824, -63.182, 0.28", "77.2262, -245.695, -63.1545, 0.83", "77.234, -247.579, -63.1509, 0.83", "77.2266, -249.284, -63.1678, 0.28", "77.1753, -251.114, -63.2049, 0.83", "77.0864, -253.468, -63.2808, 0.28", "77.069, -254.04, -63.3035, 0.55", "77.1067, -256.153, -63.4217, 0.28", "77.1417, -256.919, -63.4747, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "67.0837, -163.948, -56.8836, 0.55", "69.2844, -160.648, -57.5448, 0.55", "70.1632, -159.33, -57.8089, 0.83", "71.9159, -156.701, -58.3356, 0.28", "72.8954, -155.232, -58.63, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.2072, -106.482, -33.2223, 0.28", "10.5772, -109.511, -31.9251, 0.28", "9.43155, -111.945, -30.7263, 0.83", "8.45286, -114.024, -29.7023, 0.28", "7.83226, -115.342, -29.0529, 0.28", "6.79936, -117.537, -27.9721, 0.83", "5.43326, -120.439, -26.5427, 0.28", "4.97339, -121.661, -25.7628, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "12.2072, -106.482, -33.2223, 0.55", "13.203, -111.193, -34.9804, 0.55", "13.5358, -112.561, -35.5429, 0.55", "14.2551, -115.427, -36.9056, 0.55", "15.1508, -118.749, -38.5654, 0.83", "16.0864, -122.304, -40.6044, 0.55", "16.6996, -124.554, -41.9668, 0.28", "17.2533, -126.492, -43.3026, 0.83", "18.279, -129.792, -45.8211, 0.28", "18.9599, -131.751, -47.4182, 0.83", "20.4175, -135.971, -50.9757, 0.28", "20.9606, -137.435, -52.2182, 0.55", "21.8608, -139.972, -54.4192, 1.38", "22.972, -143.344, -57.3288, 0.55", "23.5805, -145.378, -59.1065, 0.55", "24.0939, -147.358, -60.8356, 0.28", "24.4891, -149.24, -62.4088, 0.83", "24.7429, -150.962, -63.8353, 0.28", "24.9038, -152.567, -65.1386, 0.83", "25.2205, -155.682, -67.5224, 0.28", "25.3969, -156.806, -68.3675, 0.55", "26.0249, -159.791, -70.4655, 0.28", "26.2978, -160.96, -71.2052, 0.55", "27.0583, -163.467, -72.6308, 0.28", "27.7472, -165.388, -73.626, 1.38", "28.6835, -167.541, -74.5845, 0.28", "28.8704, -167.936, -74.7625, 0.55", "30.0502, -170.07, -75.6977, 0.28", "31.0832, -171.813, -76.4814, 0.55", "32.3395, -173.809, -77.3874, 0.28", "32.7214, -174.389, -77.6734, 0.55", "34.1304, -176.403, -78.6997, 0.28", "35.4061, -178.201, -79.6567, 1.11", "37.4989, -181.072, -81.2064, 0.28", "38.045, -181.864, -81.6155, 0.55", "39.1136, -183.601, -82.3923, 0.28", "40.5256, -186.231, -83.5728, 1.11", "42.1926, -189.746, -85.0951, 0.55", "42.8625, -191.287, -85.7675, 0.55", "43.7663, -193.315, -86.6731, 0.55", "45.1616, -196.154, -87.9832, 0.83", "47.1402, -199.913, -89.8768, 0.55", "47.9159, -201.273, -90.65, 0.55", "49.2026, -203.252, -91.8852, 0.55", "50.6848, -205.349, -93.2902, 0.55", "52.2111, -207.394, -94.7507, 0.83", "53.6419, -209.471, -96.3087, 0.28", "54.422, -210.777, -97.2226, 0.55", "55.5942, -213.274, -98.9515, 0.28", "56.1696, -215.003, -100.1, 0.28", "56.6912, -217.389, -101.792, 1.11", "57.1454, -220.805, -104.172, 0.28", "57.2176, -221.945, -104.997, 0.55", "57.2938, -224.878, -107.262, 0.28", "57.1546, -228.937, -110.656, 2.22", "56.9558, -232.781, -114.063, 0.55", "56.8466, -234.838, -115.884, 0.55", "56.7492, -237.918, -118.478, 0.55", "56.6649, -239.559, -119.751, 0.55", "56.5414, -241.702, -121.234, 0.55", "56.5114, -242.977, -121.93, 0.55", "56.6202, -245.893, -123.161, 0.28", "56.8713, -248.127, -123.908, 0.55", "57.6331, -252.298, -124.823, 0.28", "57.9894, -253.823, -125.046, 0.55", "59.0837, -257.343, -125.344, 0.28", "59.8028, -259.14, -125.33, 0.83", "61.475, -262.425, -125.152, 0.28", "62.5719, -264.397, -124.982, 0.83", "63.8529, -266.59, -124.66, 0.28", "64.5048, -267.803, -124.458, 0.83", "66.6053, -272.15, -123.701, 0.28", "67.5764, -274.528, -123.38, 1.94", "68.5326, -277.511, -123.179, 0.28", "69.026, -279.591, -123.097, 0.28", "69.4183, -281.911, -123.124, 0.28", "69.5833, -283.257, -123.198, 0.83", "69.8477, -285.604, -123.443, 0.28", "69.9694, -286.294, -123.504, 0.83", "70.5052, -288.155, -123.764, 0.28", "71.0504, -289.573, -124.024, 0.83", "72.5116, -292.238, -124.566, 0.28", "73.9333, -294.451, -125.02, 0.28", "74.9565, -295.93, -125.218, 0.83", "76.4946, -298.141, -125.394, 0.28", "77.2205, -299.131, -125.457, 0.83", "81.1878, -304.492, -125.706, 0.28", "81.7946, -305.304, -125.73, 0.83", "85.229, -310.087, -125.66, 0.28", "86.2166, -311.5, -125.576, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "5.68342, -226.809, -82.7578, 0.28", "4.70813, -226.271, -84.0096, 0.28", "4.10911, -225.941, -84.7785, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "5.68342, -226.809, -82.7578, 0.28", "5.48916, -228.618, -82.755, 0.28", "5.33374, -230.334, -82.7572, 0.55", "5.16546, -232.51, -82.7646, 0.28", "5.05654, -234.577, -82.7728, 0.83", "4.9414, -237.033, -82.7834, 0.28", "4.89094, -238.11, -82.7783, 0.83", "4.75123, -240.405, -82.749, 0.28", "4.68579, -241.426, -82.7294, 0.83", "4.55692, -243.648, -82.6798, 0.28", "4.47731, -244.654, -82.6532, 0.83", "4.31788, -246.079, -82.6151, 0.28", "4.04241, -247.915, -82.5654, 0.83", "3.86929, -248.806, -82.5252, 0.83", "3.41865, -250.813, -82.4112, 0.28", "3.13811, -251.92, -82.3432, 0.83", "2.66919, -253.772, -82.2348, 0.28", "2.41438, -254.827, -82.1799, 0.55", "2.15428, -256.009, -82.1159, 0.55", "1.73076, -257.949, -82.0147, 0.28", "1.33691, -259.812, -81.9245, 0.83", "1.03772, -261.409, -81.8568, 0.55", "0.387922, -264.607, -81.7511, 0.28", "0.133413, -265.816, -81.7268, 0.83", "-0.273674, -267.492, -81.7147, 0.28", "-0.555266, -268.489, -81.7048, 0.83", "-0.969907, -269.701, -81.6739, 0.28", "-2.03396, -272.122, -81.5736, 0.28", "-2.80467, -273.36, -81.4576, 0.55", "-3.87386, -274.713, -81.2412, 0.28", "-4.35904, -275.261, -81.1348, 0.55", "-5.30422, -276.205, -80.9134, 0.28", "-6.40893, -277.159, -80.6284, 0.55", "-8.36868, -278.576, -80.0123, 0.28", "-9.14658, -279.025, -79.7471, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-2.92347, -227.024, -85.728, 1.11", "-0.768023, -226.641, -85.1479, 1.11" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-2.92347, -227.024, -85.728, 0.28", "-4.30378, -229.786, -86.8958, 0.28", "-4.85645, -230.757, -87.4251, 0.55", "-5.9763, -232.63, -88.5098, 0.28", "-6.94812, -234.219, -89.466, 0.83", "-8.42325, -236.597, -90.9066, 0.28", "-9.13545, -237.68, -91.5884, 0.83", "-11.2873, -240.636, -93.7077, 0.28", "-11.7496, -241.177, -94.1382, 0.83", "-13.1248, -242.532, -95.3047, 0.28", "-13.6859, -242.993, -95.6803, 0.55", "-15.4078, -244.17, -96.6372, 0.28", "-16.6054, -244.848, -97.2162, 0.55", "-18.5387, -245.803, -97.9899, 0.28", "-19.6435, -246.33, -98.4677, 0.55", "-22.2471, -247.512, -99.6076, 0.28", "-23.2471, -247.979, -100.03, 0.55", "-25.7977, -249.217, -101.065, 0.28", "-26.5303, -249.592, -101.357, 0.55", "-29.9907, -251.467, -102.698, 0.28", "-31.2169, -252.154, -103.162, 0.55", "-35.4733, -254.663, -104.756, 0.28", "-36.4593, -255.265, -105.115, 0.55", "-37.6526, -256.015, -105.512, 0.28", "-37.8892, -256.162, -105.581, 0.55", "-39.5771, -257.228, -105.828, 0.28", "-39.9853, -257.516, -105.885, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-109.521, -60.9113, -199.436, 0.28", "-111.08, -63.065, -199.593, 0.28", "-111.731, -63.9632, -199.658, 0.55", "-113.058, -65.7959, -199.791, 0.28", "-113.599, -66.5433, -199.846, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-109.521, -60.9113, -199.436, 0.55", "-109.159, -61.6644, -201.285, 0.55", "-108.662, -62.6732, -203.662, 0.28", "-108.453, -63.072, -204.426, 0.55", "-107.453, -65.1558, -207.878, 0.28", "-107.183, -65.7462, -208.773, 0.55", "-106.606, -67.0296, -210.57, 0.28", "-106.334, -67.6981, -211.417, 0.55", "-105.444, -69.8015, -213.698, 0.28", "-104.559, -71.9215, -215.712, 0.28", "-104.301, -72.5877, -216.244, 0.55", "-103.849, -73.8632, -217.225, 0.28", "-103.682, -74.4289, -217.596, 0.55", "-103.262, -76.0055, -218.571, 0.28", "-103.015, -77.051, -219.168, 0.55", "-102.245, -80.115, -220.686, 0.28", "-101.868, -81.5725, -221.402, 0.83", "-101.112, -84.0995, -222.455, 0.28", "-100.779, -84.969, -222.779, 0.28", "-100.123, -86.3395, -223.236, 0.55", "-99.2457, -87.9883, -223.727, 0.28", "-98.5703, -89.078, -223.982, 0.55", "-96.3282, -92.2598, -224.728, 0.28", "-94.918, -93.9689, -225.216, 0.28", "-93.6506, -95.4575, -225.604, 0.83" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_34", "dend_31", "dend_28", "dend_23", "dend_0", "dend_54", "dend_41", "dend_39", "dend_38", "dend_36", "dend_35", "dend_33", "dend_32", "dend_30", "dend_29", "dend_27", "dend_24", "dend_4", "dend_1", "dend_56", "dend_55", "dend_53", "dend_42", "dend_26", "dend_25", "dend_16", "dend_5", "dend_3", "dend_2", "dend_66", "dend_57", "dend_44", "dend_43", "dend_22", "dend_17", "dend_9", "dend_6", "dend_59", "dend_58", "dend_50", "dend_45", "dend_19", "dend_18", "dend_13", "dend_10", "dend_8", "dend_7", "dend_63", "dend_60", "dend_52", "dend_51", "dend_47", "dend_46", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_11", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_34", "dend_31", "dend_28", "dend_23", "dend_0", "dend_54", "dend_41", "dend_39", "dend_38", "dend_36", "dend_35", "dend_33", "dend_32", "dend_30", "dend_29", "dend_27", "dend_24", "dend_4", "dend_1", "dend_56", "dend_55", "dend_53", "dend_42", "dend_26", "dend_25", "dend_16", "dend_5", "dend_3", "dend_2", "dend_66", "dend_57", "dend_44", "dend_43", "dend_22", "dend_17", "dend_9", "dend_6", "dend_59", "dend_58", "dend_50", "dend_45", "dend_19", "dend_18", "dend_13", "dend_10", "dend_8", "dend_7", "dend_63", "dend_60", "dend_52", "dend_51", "dend_47", "dend_46", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_11", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_34", "dend_31", "dend_28", "dend_23", "dend_0", "axon_0", "dend_54", "dend_41", "dend_39", "dend_38", "dend_36", "dend_35", "dend_33", "dend_32", "dend_30", "dend_29", "dend_27", "dend_24", "dend_4", "dend_1", "axon_1", "dend_56", "dend_55", "dend_53", "dend_42", "dend_26", "dend_25", "dend_16", "dend_5", "dend_3", "dend_2", "dend_66", "dend_57", "dend_44", "dend_43", "dend_22", "dend_17", "dend_9", "dend_6", "dend_59", "dend_58", "dend_50", "dend_45", "dend_19", "dend_18", "dend_13", "dend_10", "dend_8", "dend_7", "dend_63", "dend_60", "dend_52", "dend_51", "dend_47", "dend_46", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_11", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_NBC_724d9652d6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_40
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_41
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_56
create dend_66
public dend_66
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, axon_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, axon_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.49999992925952297)
    connect dend_37(0), soma_0(0.49999992925952297)
    connect dend_34(0), soma_0(0.49999992925952297)
    connect dend_31(0), soma_0(0.49999992925952297)
    connect dend_28(0), soma_0(0.49999992925952297)
    connect dend_23(0), soma_0(0.49999992925952297)
    connect dend_0(0), soma_0(0.49999992925952297)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.190434, -8.37619, -0.191873, 3.16963 ) }
    soma_0 { pt3dadd( 0.239078, -7.58067, -0.204067, 4.68322 ) }
    soma_0 { pt3dadd( 0.287721, -6.78515, -0.21626, 6.09107 ) }
    soma_0 { pt3dadd( 0.336365, -5.98962, -0.228454, 7.08639 ) }
    soma_0 { pt3dadd( 0.385009, -5.1941, -0.240647, 7.87255 ) }
    soma_0 { pt3dadd( 0.433652, -4.39858, -0.252841, 8.61453 ) }
    soma_0 { pt3dadd( 0.482296, -3.60306, -0.265034, 9.03338 ) }
    soma_0 { pt3dadd( 0.530939, -2.80753, -0.277228, 9.4484 ) }
    soma_0 { pt3dadd( 0.579583, -2.01201, -0.289421, 9.86343 ) }
    soma_0 { pt3dadd( 0.628227, -1.21649, -0.301615, 10.1821 ) }
    soma_0 { pt3dadd( 0.67687, -0.420966, -0.313808, 10.5388 ) }
    soma_0 { pt3dadd( 0.725514, 0.374556, -0.326002, 10.9457 ) }
    soma_0 { pt3dadd( 0.774158, 1.17008, -0.338196, 11.3525 ) }
    soma_0 { pt3dadd( 0.822801, 1.9656, -0.350389, 11.4966 ) }
    soma_0 { pt3dadd( 0.871445, 2.76112, -0.362583, 11.3133 ) }
    soma_0 { pt3dadd( 0.920089, 3.55665, -0.374776, 11.1299 ) }
    soma_0 { pt3dadd( 0.968732, 4.35217, -0.38697, 10.5886 ) }
    soma_0 { pt3dadd( 1.01738, 5.14769, -0.399163, 9.07759 ) }
    soma_0 { pt3dadd( 1.06602, 5.94321, -0.411357, 7.53256 ) }
    soma_0 { pt3dadd( 1.11466, 6.73874, -0.42355, 4.48485 ) }
    soma_0 { pt3dadd( 1.16331, 7.53426, -0.435744, 2.46912 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.849734, -0.0894252, -7.71032, 1.94 ) }
    dend_40 { pt3dadd( 0.969367, -1.54205, -9.99899, 1.94 ) }
    dend_40 { pt3dadd( 0.959287, -3.34405, -12.5456, 1.94 ) }
    dend_40 { pt3dadd( 0.523545, -6.91393, -17.3199, 1.66 ) }
    dend_40 { pt3dadd( 0.310472, -8.65957, -19.6545, 1.66 ) }
    dend_40 { pt3dadd( 0.0085567, -11.1331, -22.9625, 1.94 ) }
    dend_40 { pt3dadd( -0.20486, -12.8815, -25.3009, 1.38 ) }
    dend_40 { pt3dadd( -0.11562, -14.4159, -27.44, 2.22 ) }
    dend_40 { pt3dadd( 0.236794, -16.0466, -29.8345, 3.05 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 30/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.36026, 1.64608, 20.9197, 0.83 ) }
    dend_37 { pt3dadd( -1.36886, 4.43598, 20.9197, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.490266, -3.40442, 15.3397, 1.11 ) }
    dend_34 { pt3dadd( -0.216075, -6.59129, 15.3397, 1.11 ) }
    dend_34 { pt3dadd( -9.798E-4, -9.09129, 15.3397, 0.83 ) }
    dend_34 { pt3dadd( 0.076865, -9.99607, 15.3397, 1.11 ) }
    dend_34 { pt3dadd( 0.26234, -12.1518, 15.3397, 0.83 ) }
    dend_34 { pt3dadd( 0.436037, -14.1706, 15.3397, 0.83 ) }
    dend_34 { pt3dadd( 0.690757, -17.1312, 15.3397, 1.94 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 39/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.94974, 3.87882, -2.73032, 0.55 ) }
    dend_31 { pt3dadd( 6.26899, 5.84516, -3.20383, 0.55 ) }
    dend_31 { pt3dadd( 8.67108, 9.03835, -4.10173, 0.83 ) }
    dend_31 { pt3dadd( 9.97727, 10.7775, -4.70997, 0.55 ) }
    dend_31 { pt3dadd( 12.8115, 14.6877, -6.32186, 1.38 ) }
    dend_31 { pt3dadd( 14.9278, 17.6658, -7.7319, 0.83 ) }
    dend_31 { pt3dadd( 16.6521, 20.086, -8.92053, 0.83 ) }
    dend_31 { pt3dadd( 18.9401, 23.2608, -10.6286, 0.83 ) }
    dend_31 { pt3dadd( 21.6646, 26.9074, -12.7192, 0.55 ) }
    dend_31 { pt3dadd( 24.0642, 30.2301, -14.7752, 1.11 ) }
    dend_31 { pt3dadd( 25.6952, 32.6273, -16.3822, 0.83 ) }
    dend_31 { pt3dadd( 27.369, 35.2924, -18.0897, 0.83 ) }
    dend_31 { pt3dadd( 28.4323, 37.0711, -19.3654, 0.28 ) }
    dend_31 { pt3dadd( 29.4099, 38.6706, -20.5428, 0.83 ) }
    dend_31 { pt3dadd( 30.9073, 40.9341, -22.2592, 0.28 ) }
    dend_31 { pt3dadd( 32.4909, 43.0953, -23.9927, 0.55 ) }
    dend_31 { pt3dadd( 34.5675, 45.5653, -26.268, 1.38 ) }
    dend_31 { pt3dadd( 38.9269, 50.0737, -31.24, 0.55 ) }
    dend_31 { pt3dadd( 40.9739, 51.8146, -33.6599, 0.55 ) }
    dend_31 { pt3dadd( 41.8121, 52.4541, -34.6866, 0.55 ) }
    dend_31 { pt3dadd( 43.0743, 53.3352, -36.2413, 0.55 ) }
    dend_31 { pt3dadd( 46.0208, 55.3172, -40.0044, 0.55 ) }
    dend_31 { pt3dadd( 48.0765, 56.5969, -42.6553, 1.38 ) }
    dend_31 { pt3dadd( 51.7991, 58.9499, -47.1119, 0.55 ) }
    dend_31 { pt3dadd( 53.1855, 59.9926, -49.0889, 0.55 ) }
    dend_31 { pt3dadd( 53.6751, 60.4822, -49.9075, 0.55 ) }
    dend_31 { pt3dadd( 54.7028, 61.8667, -51.8795, 1.11 ) }
    dend_31 { pt3dadd( 55.4268, 63.0912, -53.3621, 1.11 ) }
    dend_31 { pt3dadd( 55.9157, 63.986, -54.3229, 1.11 ) }
    dend_31 { pt3dadd( 58.3473, 68.7802, -58.747, 0.55 ) }
    dend_31 { pt3dadd( 59.1043, 70.2409, -59.9625, 0.83 ) }
    dend_31 { pt3dadd( 60.0915, 72.1806, -61.3706, 0.55 ) }
    dend_31 { pt3dadd( 61.0766, 74.1561, -62.5907, 1.38 ) }
    dend_31 { pt3dadd( 62.455, 76.968, -64.1045, 0.55 ) }
    dend_31 { pt3dadd( 63.0485, 78.1164, -64.6244, 0.55 ) }
    dend_31 { pt3dadd( 65.3358, 82.4373, -66.0783, 1.38 ) }
    dend_31 { pt3dadd( 67.028, 85.5746, -67.0942, 0.55 ) }
    dend_31 { pt3dadd( 68.7442, 88.8865, -68.1239, 0.28 ) }
    dend_31 { pt3dadd( 69.9131, 91.2967, -68.837, 0.55 ) }
    dend_31 { pt3dadd( 70.904, 93.4296, -69.4238, 0.28 ) }
    dend_31 { pt3dadd( 72.0993, 95.9302, -70.1235, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 80/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 0.199734, 5.77033, 13.4497, 1.11 ) }
    dend_28 { pt3dadd( -0.24714, 11.415, 13.6556, 1.11 ) }
    dend_28 { pt3dadd( -0.611639, 18.059, 13.9091, 1.11 ) }
    dend_28 { pt3dadd( -0.776511, 20.9438, 13.9123, 1.11 ) }
    dend_28 { pt3dadd( -0.972414, 24.2395, 13.8389, 1.38 ) }
    dend_28 { pt3dadd( -1.22214, 28.3088, 13.7422, 1.11 ) }
    dend_28 { pt3dadd( -1.66675, 35.2123, 13.6077, 1.11 ) }
    dend_28 { pt3dadd( -2.36479, 43.782, 13.5776, 1.11 ) }
    dend_28 { pt3dadd( -2.69353, 47.7488, 13.5517, 1.38 ) }
    dend_28 { pt3dadd( -3.04522, 51.3775, 13.5135, 0.83 ) }
    dend_28 { pt3dadd( -3.32157, 53.9586, 13.4946, 1.38 ) }
    dend_28 { pt3dadd( -4.37123, 61.7941, 13.4963, 0.83 ) }
    dend_28 { pt3dadd( -5.79643, 70.5336, 13.6643, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 93/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.27026, 1.68507, -2.23032, 1.11 ) }
    dend_23 { pt3dadd( -6.76103, 1.7721, -2.23032, 1.11 ) }
    dend_23 { pt3dadd( -11.0139, 2.02036, -2.23032, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.50974, -8.69867, -4.26032, 3.6 ) }
    dend_0 { pt3dadd( 2.25911, -14.6207, -4.26032, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 98/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.16331, 7.53426, -0.435744, 0.83 ) }
    axon_0 { pt3dadd( 2.07881, 22.5063, -0.435744, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 2.9943, 37.4783, -0.435744, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_40 (entry count 1/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 0.236794, -16.0466, -29.8345, 1.11 ) }
    dend_54 { pt3dadd( 0.952048, -18.5707, -29.4909, 1.11 ) }
    dend_54 { pt3dadd( 1.67231, -19.8099, -29.7553, 1.11 ) }
    dend_54 { pt3dadd( 2.63449, -21.4927, -30.2377, 1.11 ) }
    dend_54 { pt3dadd( 3.20116, -22.7836, -30.7162, 1.11 ) }
    dend_54 { pt3dadd( 4.03445, -25.185, -31.6695, 1.66 ) }
    dend_54 { pt3dadd( 4.76808, -27.7734, -32.6448, 0.83 ) }
    dend_54 { pt3dadd( 5.75978, -31.9691, -34.1712, 0.83 ) }
    dend_54 { pt3dadd( 6.0677, -33.3199, -34.6459, 0.83 ) }
    dend_54 { pt3dadd( 6.7456, -36.5334, -35.7773, 1.66 ) }
    dend_54 { pt3dadd( 7.36557, -40.124, -37.0767, 1.94 ) }
    dend_54 { pt3dadd( 7.75475, -43.4826, -38.2935, 0.83 ) }
    dend_54 { pt3dadd( 7.88803, -44.9356, -38.7731, 0.83 ) }
    dend_54 { pt3dadd( 8.18368, -47.8149, -39.4141, 1.38 ) }
    dend_54 { pt3dadd( 8.5268, -50.2433, -39.8116, 0.28 ) }
    dend_54 { pt3dadd( 8.81931, -51.891, -40.0, 0.83 ) }
    dend_54 { pt3dadd( 9.36292, -54.6825, -40.2423, 0.28 ) }
    dend_54 { pt3dadd( 10.0864, -58.2764, -40.5585, 1.38 ) }
    dend_54 { pt3dadd( 10.7594, -61.7796, -40.8624, 0.55 ) }
    dend_54 { pt3dadd( 11.3049, -64.4512, -41.0304, 1.66 ) }
    dend_54 { pt3dadd( 11.7875, -66.7737, -41.0925, 0.55 ) }
    dend_54 { pt3dadd( 11.9505, -67.6203, -41.1001, 0.83 ) }
    dend_54 { pt3dadd( 12.3675, -70.2801, -41.1848, 1.11 ) }
    dend_54 { pt3dadd( 12.5864, -72.5929, -41.511, 1.38 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 25/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 0.236794, -16.0466, -29.8345, 0.83 ) }
    dend_41 { pt3dadd( -7.44152, -13.5007, -42.3732, 0.83 ) }
    dend_41 { pt3dadd( -9.93295, -12.8577, -46.0205, 0.83 ) }
    dend_41 { pt3dadd( -12.6323, -12.3294, -49.6794, 1.66 ) }
    dend_41 { pt3dadd( -16.3256, -11.7228, -54.4132, 3.6 ) }
    dend_41 { pt3dadd( -19.8547, -11.2537, -58.7893, 0.55 ) }
    dend_41 { pt3dadd( -22.6567, -10.914, -62.179, 0.55 ) }
    dend_41 { pt3dadd( -24.1047, -10.7212, -63.7107, 0.55 ) }
    dend_41 { pt3dadd( -26.3342, -10.5252, -66.3044, 0.28 ) }
    dend_41 { pt3dadd( -27.0435, -10.4403, -67.2399, 1.11 ) }
    dend_41 { pt3dadd( -29.3454, -10.1206, -71.0079, 0.55 ) }
    dend_41 { pt3dadd( -29.9109, -10.0027, -72.0752, 0.83 ) }
    dend_41 { pt3dadd( -32.6696, -9.37114, -77.845, 1.38 ) }
    dend_41 { pt3dadd( -35.2845, -8.76303, -83.4129, 0.28 ) }
    dend_41 { pt3dadd( -36.2969, -8.51652, -85.6435, 1.94 ) }
    dend_41 { pt3dadd( -39.2268, -7.85748, -92.2057, 0.28 ) }
    dend_41 { pt3dadd( -39.4993, -7.80442, -92.8102, 0.83 ) }
    dend_41 { pt3dadd( -42.246, -7.51042, -98.5731, 0.28 ) }
    dend_41 { pt3dadd( -43.6688, -7.56012, -101.053, 1.66 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.36886, 4.43598, 20.9197, 0.55 ) }
    dend_39 { pt3dadd( 0.583406, 4.17234, 20.8802, 0.55 ) }
    dend_39 { pt3dadd( 3.58772, 3.76662, 20.8195, 1.94 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.36886, 4.43598, 20.9197, 0.83 ) }
    dend_38 { pt3dadd( -0.197316, 6.0892, 22.0756, 0.83 ) }
    dend_38 { pt3dadd( 1.30966, 8.21575, 23.5624, 0.83 ) }
    dend_38 { pt3dadd( 3.2653, 10.9754, 25.4919, 1.11 ) }
    dend_38 { pt3dadd( 5.02295, 13.4557, 27.2261, 0.55 ) }
    dend_38 { pt3dadd( 5.82319, 14.585, 28.0156, 0.83 ) }
    dend_38 { pt3dadd( 7.00546, 16.2533, 29.1821, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.690757, -17.1312, 15.3397, 0.55 ) }
    dend_36 { pt3dadd( -0.728351, -17.9452, 16.2423, 0.55 ) }
    dend_36 { pt3dadd( -1.99496, -18.7345, 17.1699, 0.55 ) }
    dend_36 { pt3dadd( -2.88581, -19.3357, 17.8562, 0.55 ) }
    dend_36 { pt3dadd( -4.23641, -20.3296, 19.0647, 0.55 ) }
    dend_36 { pt3dadd( -5.86155, -21.5255, 20.5189, 0.83 ) }
    dend_36 { pt3dadd( -8.66188, -23.5861, 23.0247, 0.55 ) }
    dend_36 { pt3dadd( -9.61936, -24.3439, 24.0087, 0.55 ) }
    dend_36 { pt3dadd( -10.3588, -24.9599, 24.8775, 1.38 ) }
    dend_36 { pt3dadd( -12.0936, -26.4554, 27.1802, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 64/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.690757, -17.1312, 15.3397, 0.83 ) }
    dend_35 { pt3dadd( -0.118559, -19.358, 14.8122, 0.83 ) }
    dend_35 { pt3dadd( -0.747855, -21.6397, 14.203, 0.83 ) }
    dend_35 { pt3dadd( -1.59688, -25.4325, 13.1371, 1.11 ) }
    dend_35 { pt3dadd( -2.22045, -28.8164, 12.1493, 0.83 ) }
    dend_35 { pt3dadd( -2.82406, -32.677, 11.0094, 0.83 ) }
    dend_35 { pt3dadd( -3.11617, -35.2952, 10.2174, 0.83 ) }
    dend_35 { pt3dadd( -3.23913, -38.4742, 9.23007, 0.83 ) }
    dend_35 { pt3dadd( -3.15551, -40.2978, 8.66543, 0.83 ) }
    dend_35 { pt3dadd( -3.00764, -41.6505, 8.28997, 0.83 ) }
    dend_35 { pt3dadd( -2.62271, -44.3316, 7.58388, 0.83 ) }
    dend_35 { pt3dadd( -2.21143, -47.3383, 6.82586, 0.83 ) }
    dend_35 { pt3dadd( -1.80097, -50.2747, 6.19821, 0.83 ) }
    dend_35 { pt3dadd( -1.13332, -54.7429, 5.42622, 0.83 ) }
    dend_35 { pt3dadd( -0.460154, -59.2372, 4.7383, 0.83 ) }
    dend_35 { pt3dadd( -0.179899, -61.0086, 4.56849, 0.83 ) }
    dend_35 { pt3dadd( 0.540064, -65.5317, 4.36644, 1.11 ) }
    dend_35 { pt3dadd( 1.01984, -69.1919, 4.3134, 0.83 ) }
    dend_35 { pt3dadd( 1.45485, -73.2262, 4.40828, 0.83 ) }
    dend_35 { pt3dadd( 1.71105, -76.6043, 4.63455, 1.11 ) }
    dend_35 { pt3dadd( 1.97168, -82.4546, 5.16435, 1.11 ) }
    dend_35 { pt3dadd( 2.09546, -89.4145, 5.95813, 1.11 ) }
    dend_35 { pt3dadd( 2.09428, -93.8289, 6.53769, 0.83 ) }
    dend_35 { pt3dadd( 1.99607, -97.6369, 7.06067, 1.11 ) }
    dend_35 { pt3dadd( 1.77274, -101.609, 7.62938, 0.83 ) }
    dend_35 { pt3dadd( 1.50204, -105.794, 8.23017, 1.11 ) }
    dend_35 { pt3dadd( 1.16374, -109.255, 8.66936, 0.83 ) }
    dend_35 { pt3dadd( 0.903814, -111.638, 9.00543, 0.83 ) }
    dend_35 { pt3dadd( 0.717319, -113.739, 9.29428, 1.11 ) }
    dend_35 { pt3dadd( 0.486723, -117.039, 9.6613, 1.11 ) }
    dend_35 { pt3dadd( 0.285275, -119.981, 9.96231, 0.55 ) }
    dend_35 { pt3dadd( -0.0361879, -123.734, 10.3694, 0.83 ) }
    dend_35 { pt3dadd( -0.203421, -125.554, 10.58, 0.55 ) }
    dend_35 { pt3dadd( -0.524132, -129.261, 11.1133, 1.11 ) }
    dend_35 { pt3dadd( -0.779501, -132.406, 11.6307, 0.83 ) }
    dend_35 { pt3dadd( -1.05476, -136.015, 12.2748, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_35 { pt3dadd( -1.44668, -141.532, 13.3139, 0.83 ) }
    dend_35 { pt3dadd( -1.62607, -145.221, 14.0598, 1.11 ) }
    dend_35 { pt3dadd( -1.7805, -148.284, 14.7782, 0.83 ) }
    dend_35 { pt3dadd( -1.84813, -149.458, 15.1155, 0.83 ) }
    dend_35 { pt3dadd( -1.93084, -151.184, 15.7386, 0.83 ) }
    dend_35 { pt3dadd( -1.93299, -152.651, 16.3489, 0.55 ) }
    dend_35 { pt3dadd( -1.89069, -154.066, 17.0018, 0.83 ) }
    dend_35 { pt3dadd( -1.78957, -156.519, 18.1242, 0.28 ) }
    dend_35 { pt3dadd( -1.62799, -159.194, 19.3566, 1.11 ) }
    dend_35 { pt3dadd( -1.4303, -163.112, 21.098, 0.55 ) }
    dend_35 { pt3dadd( -1.28516, -166.328, 22.3957, 0.55 ) }
    dend_35 { pt3dadd( -1.26862, -167.127, 22.6572, 0.28 ) }
    dend_35 { pt3dadd( -1.26496, -169.632, 23.2719, 0.83 ) }
    dend_35 { pt3dadd( -1.48191, -173.733, 23.857, 0.55 ) }
    dend_35 { pt3dadd( -1.83565, -177.438, 24.1086, 0.55 ) }
    dend_35 { pt3dadd( -2.39329, -181.073, 24.1759, 0.55 ) }
    dend_35 { pt3dadd( -3.34812, -185.641, 23.9778, 0.55 ) }
    dend_35 { pt3dadd( -4.24926, -189.182, 23.6632, 0.55 ) }
    dend_35 { pt3dadd( -5.90582, -194.675, 22.9611, 0.55 ) }
    dend_35 { pt3dadd( -6.6509, -196.978, 22.563, 0.28 ) }
    dend_35 { pt3dadd( -7.7521, -200.449, 21.947, 0.55 ) }
    dend_35 { pt3dadd( -9.05558, -204.851, 21.1, 0.83 ) }
    dend_35 { pt3dadd( -9.607, -206.912, 20.705, 0.28 ) }
    dend_35 { pt3dadd( -10.2099, -210.158, 20.1351, 0.55 ) }
    dend_35 { pt3dadd( -10.4265, -212.706, 19.7443, 0.28 ) }
    dend_35 { pt3dadd( -10.4942, -217.486, 19.0295, 0.55 ) }
    dend_35 { pt3dadd( -10.202, -221.695, 18.4226, 0.28 ) }
    dend_35 { pt3dadd( -9.8477, -224.63, 18.0447, 0.83 ) }
    dend_35 { pt3dadd( -9.01074, -230.246, 17.2355, 0.55 ) }
    dend_35 { pt3dadd( -8.58872, -232.766, 16.8594, 0.83 ) }
    dend_35 { pt3dadd( -8.09042, -236.097, 16.411, 0.28 ) }
    dend_35 { pt3dadd( -7.69977, -239.014, 16.0825, 0.55 ) }
    dend_35 { pt3dadd( -7.58119, -240.32, 15.9292, 0.28 ) }
    dend_35 { pt3dadd( -7.32861, -244.214, 15.39, 0.55 ) }
    dend_35 { pt3dadd( -7.3001, -246.417, 15.0448, 0.28 ) }
    dend_35 { pt3dadd( -7.35501, -252.105, 14.1029, 0.55 ) }
    dend_35 { pt3dadd( -7.46272, -255.986, 13.4341, 0.55 ) }
    dend_35 { pt3dadd( -7.66242, -260.647, 12.4929, 0.28 ) }
    dend_35 { pt3dadd( -7.72433, -262.358, 12.0775, 0.83 ) }
    dend_35 { pt3dadd( -7.76522, -263.41, 11.7633, 0.28 ) }
    dend_35 { pt3dadd( -7.82245, -264.321, 11.4413, 0.55 ) }
    dend_35 { pt3dadd( -8.00878, -266.898, 10.348, 0.28 ) }
    dend_35 { pt3dadd( -8.17236, -268.262, 9.76198, 0.55 ) }
    dend_35 { pt3dadd( -8.56706, -270.234, 9.05016, 0.28 ) }
    dend_35 { pt3dadd( -8.8248, -271.236, 8.71755, 0.55 ) }
    dend_35 { pt3dadd( -9.36835, -273.143, 8.11825, 0.28 ) }
    dend_35 { pt3dadd( -9.54529, -273.703, 7.95293, 0.55 ) }
    dend_35 { pt3dadd( -10.0864, -275.158, 7.57641, 0.28 ) }
    dend_35 { pt3dadd( -10.8158, -276.992, 7.21466, 0.55 ) }
    dend_35 { pt3dadd( -11.9991, -279.84, 6.74807, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 72.0993, 95.9302, -70.1235, 0.28 ) }
    dend_33 { pt3dadd( 72.2683, 98.1525, -71.5356, 0.28 ) }
    dend_33 { pt3dadd( 72.415, 99.5362, -72.5135, 0.55 ) }
    dend_33 { pt3dadd( 72.5788, 100.971, -73.5204, 0.28 ) }
    dend_33 { pt3dadd( 72.9214, 103.288, -75.2049, 1.11 ) }
    dend_33 { pt3dadd( 73.3201, 105.757, -76.9672, 0.28 ) }
    dend_33 { pt3dadd( 73.4238, 106.293, -77.3503, 0.55 ) }
    dend_33 { pt3dadd( 74.0304, 109.102, -79.4283, 0.28 ) }
    dend_33 { pt3dadd( 74.4263, 110.553, -80.5117, 1.11 ) }
    dend_33 { pt3dadd( 75.6685, 114.345, -83.3198, 0.28 ) }
    dend_33 { pt3dadd( 76.0574, 115.3, -84.0334, 0.55 ) }
    dend_33 { pt3dadd( 77.0478, 117.381, -85.6121, 0.28 ) }
    dend_33 { pt3dadd( 77.3908, 118.029, -86.1089, 0.55 ) }
    dend_33 { pt3dadd( 78.6076, 120.119, -87.794, 0.28 ) }
    dend_33 { pt3dadd( 78.9625, 120.663, -88.262, 0.55 ) }
    dend_33 { pt3dadd( 80.7064, 123.016, -90.3854, 0.28 ) }
    dend_33 { pt3dadd( 81.3257, 123.796, -91.1545, 0.55 ) }
    dend_33 { pt3dadd( 81.8848, 124.476, -91.8579, 0.28 ) }
    dend_33 { pt3dadd( 82.5589, 125.245, -92.7064, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 72.0993, 95.9302, -70.1235, 0.28 ) }
    dend_32 { pt3dadd( 73.6111, 98.6144, -71.2544, 0.28 ) }
    dend_32 { pt3dadd( 74.8876, 100.859, -72.1915, 1.11 ) }
    dend_32 { pt3dadd( 76.034, 102.806, -72.865, 0.28 ) }
    dend_32 { pt3dadd( 76.5107, 103.634, -73.1108, 0.55 ) }
    dend_32 { pt3dadd( 78.624, 107.339, -74.0647, 0.28 ) }
    dend_32 { pt3dadd( 79.3119, 108.515, -74.3105, 0.28 ) }
    dend_32 { pt3dadd( 80.0276, 109.796, -74.5473, 0.83 ) }
    dend_32 { pt3dadd( 81.2681, 111.96, -74.8031, 0.28 ) }
    dend_32 { pt3dadd( 81.9722, 113.163, -74.8643, 0.83 ) }
    dend_32 { pt3dadd( 82.7805, 114.499, -74.8692, 0.83 ) }
    dend_32 { pt3dadd( 84.3778, 117.016, -74.7137, 0.28 ) }
    dend_32 { pt3dadd( 85.2666, 118.317, -74.6302, 1.11 ) }
    dend_32 { pt3dadd( 86.8253, 120.351, -74.595, 0.28 ) }
    dend_32 { pt3dadd( 87.4016, 120.97, -74.6149, 0.55 ) }
    dend_32 { pt3dadd( 88.7894, 122.193, -74.6674, 0.28 ) }
    dend_32 { pt3dadd( 90.0422, 123.134, -74.7401, 0.83 ) }
    dend_32 { pt3dadd( 93.6864, 125.367, -75.0322, 0.28 ) }
    dend_32 { pt3dadd( 96.0404, 126.605, -75.2165, 1.11 ) }
    dend_32 { pt3dadd( 98.0052, 127.506, -75.4099, 0.28 ) }
    dend_32 { pt3dadd( 99.2813, 128.086, -75.5893, 0.55 ) }
    dend_32 { pt3dadd( 100.683, 128.714, -75.8443, 0.28 ) }
    dend_32 { pt3dadd( 102.044, 129.348, -76.2266, 0.83 ) }
    dend_32 { pt3dadd( 103.732, 130.232, -76.888, 0.28 ) }
    dend_32 { pt3dadd( 104.495, 130.723, -77.2299, 0.55 ) }
    dend_32 { pt3dadd( 106.496, 132.188, -78.2278, 0.28 ) }
    dend_32 { pt3dadd( 107.727, 133.158, -78.8769, 0.83 ) }
    dend_32 { pt3dadd( 110.159, 135.158, -80.16, 0.28 ) }
    dend_32 { pt3dadd( 111.386, 136.216, -80.7934, 0.83 ) }
    dend_32 { pt3dadd( 114.066, 138.554, -82.0964, 0.28 ) }
    dend_32 { pt3dadd( 115.312, 139.693, -82.6448, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( 116.714, 141.08, -83.1846, 0.28 ) }
    dend_32 { pt3dadd( 117.3, 141.691, -83.3847, 0.83 ) }
    dend_32 { pt3dadd( 118.804, 143.319, -83.7651, 0.28 ) }
    dend_32 { pt3dadd( 119.869, 144.484, -84.0037, 1.11 ) }
    dend_32 { pt3dadd( 121.234, 146.026, -84.2613, 0.28 ) }
    dend_32 { pt3dadd( 122.393, 147.314, -84.4874, 0.83 ) }
    dend_32 { pt3dadd( 123.734, 148.802, -84.7329, 0.28 ) }
    dend_32 { pt3dadd( 123.999, 149.091, -84.7922, 0.83 ) }
    dend_32 { pt3dadd( 125.315, 150.413, -85.0924, 0.28 ) }
    dend_32 { pt3dadd( 126.254, 151.235, -85.289, 0.55 ) }
    dend_32 { pt3dadd( 127.736, 152.354, -85.5757, 0.28 ) }
    dend_32 { pt3dadd( 129.047, 153.222, -85.9031, 1.11 ) }
    dend_32 { pt3dadd( 131.224, 154.566, -86.5136, 0.28 ) }
    dend_32 { pt3dadd( 132.421, 155.228, -86.8988, 0.55 ) }
    dend_32 { pt3dadd( 133.642, 155.829, -87.317, 0.28 ) }
    dend_32 { pt3dadd( 134.862, 156.398, -87.7816, 0.83 ) }
    dend_32 { pt3dadd( 137.123, 157.462, -88.7015, 0.28 ) }
    dend_32 { pt3dadd( 138.52, 158.196, -89.3338, 1.66 ) }
    dend_32 { pt3dadd( 141.082, 159.711, -90.5566, 0.28 ) }
    dend_32 { pt3dadd( 141.729, 160.132, -90.8717, 0.83 ) }
    dend_32 { pt3dadd( 144.217, 161.864, -92.0692, 0.28 ) }
    dend_32 { pt3dadd( 144.695, 162.208, -92.2666, 0.55 ) }
    dend_32 { pt3dadd( 146.899, 163.798, -92.9954, 0.28 ) }
    dend_32 { pt3dadd( 147.408, 164.134, -93.1307, 0.83 ) }
    dend_32 { pt3dadd( 149.37, 165.216, -93.468, 0.28 ) }
    dend_32 { pt3dadd( 149.37, 165.216, -93.468, 0.55 ) }
    dend_32 { pt3dadd( 151.865, 166.116, -93.5827, 0.28 ) }
    dend_32 { pt3dadd( 152.836, 166.404, -93.6024, 1.11 ) }
    dend_32 { pt3dadd( 155.321, 166.928, -93.5393, 0.28 ) }
    dend_32 { pt3dadd( 157.134, 167.255, -93.4963, 0.28 ) }
    dend_32 { pt3dadd( 158.008, 167.378, -93.4764, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -5.79643, 70.5336, 13.6643, 0.55 ) }
    dend_30 { pt3dadd( -7.77654, 74.6097, 14.6189, 0.55 ) }
    dend_30 { pt3dadd( -8.85115, 77.1328, 15.1426, 0.55 ) }
    dend_30 { pt3dadd( -9.91473, 79.5949, 15.5878, 0.83 ) }
    dend_30 { pt3dadd( -11.514, 83.2016, 16.054, 0.83 ) }
    dend_30 { pt3dadd( -12.386, 85.1574, 16.2454, 0.28 ) }
    dend_30 { pt3dadd( -13.2374, 87.0306, 16.4143, 0.55 ) }
    dend_30 { pt3dadd( -14.4246, 89.6635, 16.5396, 0.28 ) }
    dend_30 { pt3dadd( -16.3038, 93.5012, 16.6066, 0.55 ) }
    dend_30 { pt3dadd( -17.6249, 95.9528, 16.5486, 0.55 ) }
    dend_30 { pt3dadd( -19.8465, 99.6762, 16.251, 0.55 ) }
    dend_30 { pt3dadd( -21.0903, 101.619, 16.0119, 0.28 ) }
    dend_30 { pt3dadd( -22.1942, 103.227, 15.7712, 0.55 ) }
    dend_30 { pt3dadd( -23.2809, 104.704, 15.5246, 0.28 ) }
    dend_30 { pt3dadd( -24.9629, 106.98, 15.0775, 0.83 ) }
    dend_30 { pt3dadd( -26.8298, 109.429, 14.5786, 0.28 ) }
    dend_30 { pt3dadd( -27.4544, 110.228, 14.3615, 0.55 ) }
    dend_30 { pt3dadd( -28.6123, 111.728, 13.9183, 0.28 ) }
    dend_30 { pt3dadd( -29.273, 112.676, 13.6706, 0.55 ) }
    dend_30 { pt3dadd( -30.04, 113.926, 13.3707, 0.28 ) }
    dend_30 { pt3dadd( -30.2332, 114.284, 13.2868, 0.55 ) }
    dend_30 { pt3dadd( -31.0924, 116.282, 12.8174, 0.28 ) }
    dend_30 { pt3dadd( -31.5941, 117.683, 12.4428, 0.55 ) }
    dend_30 { pt3dadd( -32.2249, 119.844, 11.8126, 0.55 ) }
    dend_30 { pt3dadd( -32.92, 122.638, 10.9994, 0.28 ) }
    dend_30 { pt3dadd( -33.1624, 123.704, 10.6925, 0.55 ) }
    dend_30 { pt3dadd( -33.8085, 126.706, 9.83353, 0.28 ) }
    dend_30 { pt3dadd( -33.925, 127.245, 9.67966, 0.55 ) }
    dend_30 { pt3dadd( -34.3958, 129.26, 9.10929, 0.28 ) }
    dend_30 { pt3dadd( -34.8037, 130.565, 8.72265, 0.83 ) }
    dend_30 { pt3dadd( -35.9453, 133.385, 7.93351, 0.28 ) }
    dend_30 { pt3dadd( -36.4465, 134.424, 7.67664, 0.55 ) }
    dend_30 { pt3dadd( -37.0952, 135.409, 7.36968, 0.28 ) }
    dend_30 { pt3dadd( -37.5702, 136.033, 7.16112, 0.55 ) }
    dend_30 { pt3dadd( -39.1952, 137.883, 6.50726, 0.28 ) }
    dend_30 { pt3dadd( -40.0323, 138.79, 6.17014, 0.55 ) }
    dend_30 { pt3dadd( -41.3572, 140.221, 5.71918, 0.55 ) }
    dend_30 { pt3dadd( -44.5504, 143.795, 4.7283, 0.28 ) }
    dend_30 { pt3dadd( -45.3166, 144.682, 4.5119, 0.55 ) }
    dend_30 { pt3dadd( -47.4714, 147.249, 3.96214, 0.28 ) }
    dend_30 { pt3dadd( -47.8724, 147.742, 3.88859, 0.55 ) }
    dend_30 { pt3dadd( -51.0717, 151.747, 3.35969, 0.28 ) }
    dend_30 { pt3dadd( -51.7054, 152.547, 3.30225, 0.55 ) }
    dend_30 { pt3dadd( -52.9788, 154.254, 3.37102, 0.28 ) }
    dend_30 { pt3dadd( -53.5629, 154.939, 3.38431, 0.55 ) }
    dend_30 { pt3dadd( -54.799, 156.25, 3.40429, 0.28 ) }
    dend_30 { pt3dadd( -56.1587, 157.54, 3.27783, 0.55 ) }
    dend_30 { pt3dadd( -57.1992, 158.458, 3.08056, 0.28 ) }
    dend_30 { pt3dadd( -58.4463, 159.46, 2.55448, 0.55 ) }
    dend_30 { pt3dadd( -61.8429, 162.08, 0.694956, 0.28 ) }
    dend_30 { pt3dadd( -62.4796, 162.568, 0.26892, 0.55 ) }
    dend_30 { pt3dadd( -64.9793, 164.472, -1.61874, 0.28 ) }
    dend_30 { pt3dadd( -65.9522, 165.235, -2.42037, 0.83 ) }
    dend_30 { pt3dadd( -70.3007, 168.793, -6.44254, 0.28 ) }
    dend_30 { pt3dadd( -70.8162, 169.241, -6.96258, 0.55 ) }
    dend_30 { pt3dadd( -72.7246, 171.13, -9.00339, 0.28 ) }
    dend_30 { pt3dadd( -73.1837, 171.632, -9.4802, 0.55 ) }
    dend_30 { pt3dadd( -74.4506, 173.188, -10.6854, 0.28 ) }
    dend_30 { pt3dadd( -75.0333, 174.037, -11.183, 0.55 ) }
    dend_30 { pt3dadd( -76.4818, 176.548, -12.2034, 0.28 ) }
    dend_30 { pt3dadd( -77.2501, 178.035, -12.7079, 0.55 ) }
    dend_30 { pt3dadd( -78.684, 181.078, -13.5669, 0.28 ) }
    dend_30 { pt3dadd( -79.3322, 182.515, -13.9486, 0.55 ) }
    dend_30 { pt3dadd( -81.5834, 187.626, -15.2495, 0.28 ) }
    dend_30 { pt3dadd( -82.0286, 188.682, -15.5093, 0.55 ) }
    dend_30 { pt3dadd( -84.233, 194.164, -16.8574, 0.28 ) }
    dend_30 { pt3dadd( -84.5444, 194.972, -17.0236, 0.55 ) }
    dend_30 { pt3dadd( -85.621, 198.076, -17.5205, 0.28 ) }
    dend_30 { pt3dadd( -86.1474, 199.772, -17.7266, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_30 { pt3dadd( -87.2308, 203.643, -17.9881, 0.28 ) }
    dend_30 { pt3dadd( -87.4855, 204.536, -17.9883, 0.55 ) }
    dend_30 { pt3dadd( -88.7223, 208.773, -17.6976, 0.28 ) }
    dend_30 { pt3dadd( -89.0694, 209.986, -17.5692, 0.83 ) }
    dend_30 { pt3dadd( -89.3478, 210.993, -17.4037, 0.28 ) }
    dend_30 { pt3dadd( -89.6251, 211.969, -17.2091, 0.55 ) }
    dend_30 { pt3dadd( -92.2601, 220.371, -15.4236, 0.28 ) }
    dend_30 { pt3dadd( -92.4543, 220.948, -15.3221, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.79643, 70.5336, 13.6643, 0.55 ) }
    dend_29 { pt3dadd( -5.62824, 72.2447, 14.9291, 0.55 ) }
    dend_29 { pt3dadd( -5.3426, 74.2435, 16.4404, 0.55 ) }
    dend_29 { pt3dadd( -4.92137, 76.7754, 18.3732, 0.55 ) }
    dend_29 { pt3dadd( -4.39095, 79.9636, 20.8069, 0.55 ) }
    dend_29 { pt3dadd( -3.97354, 82.4726, 22.7222, 0.55 ) }
    dend_29 { pt3dadd( -3.7187, 84.0044, 23.8915, 0.55 ) }
    dend_29 { pt3dadd( -3.40908, 85.6591, 25.3231, 0.55 ) }
    dend_29 { pt3dadd( -2.92763, 87.6741, 27.2326, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.0139, 2.02036, -2.23032, 0.83 ) }
    dend_27 { pt3dadd( -12.9511, 0.53489, -2.58215, 0.83 ) }
    dend_27 { pt3dadd( -14.4762, -0.547008, -2.88187, 0.83 ) }
    dend_27 { pt3dadd( -16.8768, -2.16712, -3.42797, 1.38 ) }
    dend_27 { pt3dadd( -19.0253, -3.53984, -3.93414, 0.55 ) }
    dend_27 { pt3dadd( -21.7463, -5.16153, -4.54791, 1.11 ) }
    dend_27 { pt3dadd( -24.3271, -6.68087, -5.09545, 0.55 ) }
    dend_27 { pt3dadd( -26.0756, -7.62791, -5.45924, 0.83 ) }
    dend_27 { pt3dadd( -28.8599, -9.1157, -6.0505, 0.55 ) }
    dend_27 { pt3dadd( -30.1398, -9.80462, -6.35092, 0.55 ) }
    dend_27 { pt3dadd( -31.405, -10.4837, -6.672, 0.55 ) }
    dend_27 { pt3dadd( -34.0752, -12.0802, -7.44654, 0.83 ) }
    dend_27 { pt3dadd( -36.0977, -13.4693, -8.08656, 0.55 ) }
    dend_27 { pt3dadd( -37.2487, -14.3509, -8.49334, 0.83 ) }
    dend_27 { pt3dadd( -38.4894, -15.4152, -8.97782, 0.28 ) }
    dend_27 { pt3dadd( -39.327, -16.2308, -9.35025, 0.55 ) }
    dend_27 { pt3dadd( -40.9666, -18.0273, -10.1529, 0.83 ) }
    dend_27 { pt3dadd( -42.8194, -20.2562, -11.1151, 0.55 ) }
    dend_27 { pt3dadd( -44.0515, -21.8419, -11.7294, 0.55 ) }
    dend_27 { pt3dadd( -44.9349, -23.0071, -12.145, 0.55 ) }
    dend_27 { pt3dadd( -46.0025, -24.3775, -12.573, 1.11 ) }
    dend_27 { pt3dadd( -47.071, -25.6674, -12.9723, 0.28 ) }
    dend_27 { pt3dadd( -48.0283, -26.6556, -13.2975, 0.83 ) }
    dend_27 { pt3dadd( -49.0846, -27.3462, -13.5754, 0.28 ) }
    dend_27 { pt3dadd( -50.0738, -27.6509, -13.8033, 0.55 ) }
    dend_27 { pt3dadd( -51.607, -27.896, -14.0127, 0.28 ) }
    dend_27 { pt3dadd( -53.3903, -28.0359, -14.1321, 0.83 ) }
    dend_27 { pt3dadd( -55.2227, -28.2024, -14.1095, 0.28 ) }
    dend_27 { pt3dadd( -58.8446, -28.4611, -13.8574, 0.55 ) }
    dend_27 { pt3dadd( -60.5782, -28.6191, -13.6589, 0.55 ) }
    dend_27 { pt3dadd( -63.4711, -28.9985, -13.1439, 0.55 ) }
    dend_27 { pt3dadd( -66.9475, -29.712, -12.3671, 0.55 ) }
    dend_27 { pt3dadd( -70.0401, -30.535, -11.5827, 0.55 ) }
    dend_27 { pt3dadd( -71.6627, -31.0803, -11.175, 0.55 ) }
    dend_27 { pt3dadd( -74.0687, -32.0964, -10.6698, 0.55 ) }
    dend_27 { pt3dadd( -76.5472, -33.2754, -10.2805, 0.83 ) }
    dend_27 { pt3dadd( -78.3743, -34.1157, -10.1827, 0.55 ) }
    dend_27 { pt3dadd( -81.2843, -35.5048, -10.1992, 0.55 ) }
    dend_27 { pt3dadd( -83.1936, -36.4097, -10.3532, 0.55 ) }
    dend_27 { pt3dadd( -85.5875, -37.5879, -10.6447, 0.55 ) }
    dend_27 { pt3dadd( -87.1242, -38.3927, -10.9006, 0.55 ) }
    dend_27 { pt3dadd( -91.0538, -40.6953, -12.0773, 0.55 ) }
    dend_27 { pt3dadd( -92.3537, -41.5269, -12.5753, 0.83 ) }
    dend_27 { pt3dadd( -94.8117, -43.2892, -13.7732, 0.55 ) }
    dend_27 { pt3dadd( -96.5037, -44.617, -14.7427, 0.55 ) }
    dend_27 { pt3dadd( -99.3186, -47.1017, -16.609, 1.11 ) }
    dend_27 { pt3dadd( -102.977, -50.9785, -19.5223, 0.28 ) }
    dend_27 { pt3dadd( -103.448, -51.5857, -19.9792, 0.55 ) }
    dend_27 { pt3dadd( -104.385, -52.9041, -20.9813, 0.28 ) }
    dend_27 { pt3dadd( -105.267, -54.276, -22.0215, 0.83 ) }
    dend_27 { pt3dadd( -106.054, -55.5785, -22.9833, 0.28 ) }
    dend_27 { pt3dadd( -107.416, -57.8913, -24.5944, 1.11 ) }
    dend_27 { pt3dadd( -108.237, -59.2508, -25.3536, 0.55 ) }
    dend_27 { pt3dadd( -108.727, -60.0771, -25.794, 0.28 ) }
    dend_27 { pt3dadd( -109.085, -60.6796, -26.0655, 0.55 ) }
    dend_27 { pt3dadd( -109.876, -62.0654, -26.6196, 1.11 ) }
    dend_27 { pt3dadd( -110.583, -63.398, -27.0494, 0.28 ) }
    dend_27 { pt3dadd( -110.697, -63.6534, -27.1011, 0.55 ) }
    dend_27 { pt3dadd( -111.603, -65.8887, -27.4172, 0.55 ) }
    dend_27 { pt3dadd( -112.244, -67.6638, -27.6502, 0.28 ) }
    dend_27 { pt3dadd( -112.549, -68.5398, -27.7569, 0.55 ) }
    dend_27 { pt3dadd( -113.331, -70.9176, -28.0262, 0.28 ) }
    dend_27 { pt3dadd( -113.905, -72.7489, -28.2204, 0.83 ) }
    dend_27 { pt3dadd( -114.29, -74.0185, -28.3689, 0.83 ) }
    dend_27 { pt3dadd( -115.233, -77.2296, -28.8011, 0.28 ) }
    dend_27 { pt3dadd( -115.368, -77.6745, -28.8716, 0.55 ) }
    dend_27 { pt3dadd( -115.687, -78.6748, -29.0232, 0.28 ) }
    dend_27 { pt3dadd( -115.84, -79.1096, -29.0725, 0.55 ) }
    dend_27 { pt3dadd( -116.234, -80.1104, -29.1687, 0.28 ) }
    dend_27 { pt3dadd( -116.451, -80.6526, -29.194, 0.55 ) }
    dend_27 { pt3dadd( -116.982, -81.8244, -29.1691, 0.28 ) }
    dend_27 { pt3dadd( -117.432, -82.7781, -29.1311, 0.83 ) }
    dend_27 { pt3dadd( -118.146, -84.3037, -29.0191, 0.28 ) }
    dend_27 { pt3dadd( -118.652, -85.4118, -28.9312, 0.55 ) }
    dend_27 { pt3dadd( -119.218, -86.6221, -28.8154, 0.55 ) }
    dend_27 { pt3dadd( -119.974, -88.2347, -28.732, 0.28 ) }
    dend_27 { pt3dadd( -120.528, -89.3756, -28.7194, 0.55 ) }
    dend_27 { pt3dadd( -121.467, -91.1248, -28.8613, 0.28 ) }
    dend_27 { pt3dadd( -122.07, -92.1682, -29.0654, 0.55 ) }
    dend_27 { pt3dadd( -122.917, -93.5484, -29.6092, 0.55 ) }
    dend_27 { pt3dadd( -123.944, -95.1651, -30.6226, 0.28 ) }
    dend_27 { pt3dadd( -124.294, -95.6989, -31.0363, 0.55 ) }
    dend_27 { pt3dadd( -125.366, -97.2158, -32.4693, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( -125.907, -97.9115, -33.2853, 0.55 ) }
    dend_27 { pt3dadd( -127.415, -99.8032, -35.853, 0.28 ) }
    dend_27 { pt3dadd( -128.001, -100.541, -37.0183, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.0139, 2.02036, -2.23032, 0.83 ) }
    dend_24 { pt3dadd( -12.1593, 2.34521, -2.18277, 0.83 ) }
    dend_24 { pt3dadd( -14.4918, 3.07653, -1.98403, 1.11 ) }
    dend_24 { pt3dadd( -17.5233, 4.10993, -1.54494, 0.83 ) }
    dend_24 { pt3dadd( -19.8285, 5.00546, -1.14145, 0.55 ) }
    dend_24 { pt3dadd( -21.2901, 5.67026, -0.854732, 0.83 ) }
    dend_24 { pt3dadd( -23.5116, 6.8124, -0.37326, 0.55 ) }
    dend_24 { pt3dadd( -26.5181, 8.63115, 0.449869, 1.11 ) }
    dend_24 { pt3dadd( -28.6477, 10.0619, 1.12682, 0.83 ) }
    dend_24 { pt3dadd( -29.9744, 11.1132, 1.62963, 0.83 ) }
    dend_24 { pt3dadd( -31.4958, 12.4633, 2.28704, 0.83 ) }
    dend_24 { pt3dadd( -32.934, 13.9263, 2.98968, 0.83 ) }
    dend_24 { pt3dadd( -35.1098, 16.6542, 4.21407, 1.38 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.25911, -14.6207, -4.26032, 2.49 ) }
    dend_4 { pt3dadd( 2.05987, -18.7524, -5.39424, 2.49 ) }
    dend_4 { pt3dadd( 1.92533, -21.5423, -6.15989, 2.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.25911, -14.6207, -4.26032, 1.11 ) }
    dend_1 { pt3dadd( 4.73707, -17.3906, -4.30233, 1.11 ) }
    dend_1 { pt3dadd( 6.87689, -19.7565, -4.33867, 0.83 ) }
    dend_1 { pt3dadd( 9.67899, -22.9491, -4.38679, 0.83 ) }
    dend_1 { pt3dadd( 12.5719, -26.3963, -4.5232, 0.83 ) }
    dend_1 { pt3dadd( 15.2129, -29.6646, -4.68991, 0.83 ) }
    dend_1 { pt3dadd( 17.0511, -31.9341, -4.81932, 0.55 ) }
    dend_1 { pt3dadd( 19.6339, -35.1236, -5.02251, 0.83 ) }
    dend_1 { pt3dadd( 21.5705, -37.5241, -5.18892, 0.83 ) }
    dend_1 { pt3dadd( 24.4739, -41.1816, -5.47615, 0.55 ) }
    dend_1 { pt3dadd( 25.9959, -43.1825, -5.61712, 0.55 ) }
    dend_1 { pt3dadd( 28.8149, -47.084, -5.84358, 0.55 ) }
    dend_1 { pt3dadd( 32.5896, -52.4298, -6.09284, 0.83 ) }
    dend_1 { pt3dadd( 34.8632, -55.6633, -6.2023, 0.55 ) }
    dend_1 { pt3dadd( 36.4953, -57.9977, -6.2404, 0.55 ) }
    dend_1 { pt3dadd( 39.0894, -61.7684, -6.20832, 0.83 ) }
    dend_1 { pt3dadd( 39.9146, -63.0616, -6.18997, 0.55 ) }
    dend_1 { pt3dadd( 40.8596, -64.7893, -6.10047, 0.55 ) }
    dend_1 { pt3dadd( 41.4418, -65.9696, -5.99593, 0.83 ) }
    dend_1 { pt3dadd( 42.5121, -68.2096, -5.64301, 0.55 ) }
    dend_1 { pt3dadd( 43.3176, -69.8899, -5.30971, 0.28 ) }
    dend_1 { pt3dadd( 44.4411, -72.252, -4.79055, 0.55 ) }
    dend_1 { pt3dadd( 46.0876, -75.6524, -3.9962, 0.55 ) }
    dend_1 { pt3dadd( 47.6807, -78.892, -3.21531, 0.55 ) }
    dend_1 { pt3dadd( 49.5841, -82.7568, -2.2834, 0.55 ) }
    dend_1 { pt3dadd( 50.7466, -85.0669, -1.7382, 0.55 ) }
    dend_1 { pt3dadd( 52.1374, -87.8126, -1.12686, 0.55 ) }
    dend_1 { pt3dadd( 53.6619, -90.7049, -0.546093, 0.55 ) }
    dend_1 { pt3dadd( 54.8641, -93.0156, -0.193494, 0.55 ) }
    dend_1 { pt3dadd( 56.2383, -95.7042, 0.144476, 0.55 ) }
    dend_1 { pt3dadd( 57.2277, -97.5772, 0.293886, 0.55 ) }
    dend_1 { pt3dadd( 57.92, -98.862, 0.38368, 0.55 ) }
    dend_1 { pt3dadd( 58.5478, -100.006, 0.444262, 0.28 ) }
    dend_1 { pt3dadd( 60.1811, -102.943, 0.552636, 0.83 ) }
    dend_1 { pt3dadd( 62.0096, -106.178, 0.660763, 0.55 ) }
    dend_1 { pt3dadd( 63.0664, -107.981, 0.709162, 0.83 ) }
    dend_1 { pt3dadd( 64.3487, -110.151, 0.770913, 0.83 ) }
    dend_1 { pt3dadd( 65.468, -111.965, 0.822242, 0.55 ) }
    dend_1 { pt3dadd( 66.4009, -113.451, 0.862074, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 58/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.9943, 37.4783, -0.435744, 0.28 ) }
    axon_1 { pt3dadd( 3.9098, 52.4504, -0.435744, 0.28 ) }
    axon_1 { pt3dadd( 4.82529, 67.4224, -0.435744, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 61/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 12.5864, -72.5929, -41.511, 0.83 ) }
    dend_56 { pt3dadd( 12.8949, -77.7544, -42.7106, 0.83 ) }
    dend_56 { pt3dadd( 13.0959, -80.4134, -43.3053, 0.28 ) }
    dend_56 { pt3dadd( 13.2351, -82.0526, -43.6133, 0.55 ) }
    dend_56 { pt3dadd( 13.4705, -84.3641, -44.0032, 0.28 ) }
    dend_56 { pt3dadd( 13.7908, -87.2585, -44.4408, 0.55 ) }
    dend_56 { pt3dadd( 14.1767, -90.7161, -44.9248, 0.28 ) }
    dend_56 { pt3dadd( 14.6552, -94.6889, -45.4487, 0.83 ) }
    dend_56 { pt3dadd( 15.3009, -99.6745, -46.0653, 0.28 ) }
    dend_56 { pt3dadd( 15.7238, -102.763, -46.4294, 1.38 ) }
    dend_56 { pt3dadd( 16.2798, -106.959, -46.8575, 0.28 ) }
    dend_56 { pt3dadd( 16.4524, -108.342, -46.9483, 0.55 ) }
    dend_56 { pt3dadd( 16.7421, -110.96, -47.0808, 0.28 ) }
    dend_56 { pt3dadd( 16.8174, -111.776, -47.1469, 0.55 ) }
    dend_56 { pt3dadd( 16.9958, -114.134, -47.3756, 0.28 ) }
    dend_56 { pt3dadd( 17.0117, -114.492, -47.412, 0.55 ) }
    dend_56 { pt3dadd( 17.0644, -116.521, -47.6417, 0.28 ) }
    dend_56 { pt3dadd( 17.0871, -117.918, -47.8034, 0.55 ) }
    dend_56 { pt3dadd( 17.0334, -120.212, -48.0367, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 80/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 12.5864, -72.5929, -41.511, 0.28 ) }
    dend_55 { pt3dadd( 11.6532, -73.2023, -42.3202, 0.28 ) }
    dend_55 { pt3dadd( 11.0508, -73.5903, -42.8039, 0.83 ) }
    dend_55 { pt3dadd( 8.57552, -75.204, -44.7672, 0.28 ) }
    dend_55 { pt3dadd( 8.28801, -75.3989, -45.0262, 0.83 ) }
    dend_55 { pt3dadd( 6.76072, -76.3986, -46.4637, 0.28 ) }
    dend_55 { pt3dadd( 5.73606, -77.0799, -47.3936, 0.55 ) }
    dend_55 { pt3dadd( 4.02753, -78.2271, -48.9772, 0.28 ) }
    dend_55 { pt3dadd( 3.17605, -78.7889, -49.7616, 0.83 ) }
    dend_55 { pt3dadd( 0.372531, -80.6124, -52.2376, 0.28 ) }
    dend_55 { pt3dadd( -0.696857, -81.3181, -53.2085, 0.83 ) }
    dend_55 { pt3dadd( -3.10218, -82.9725, -55.4633, 0.28 ) }
    dend_55 { pt3dadd( -4.02477, -83.5848, -56.3748, 0.83 ) }
    // Section: dend_53, id: dend_53, parent: dend_41 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -43.6688, -7.56012, -101.053, 0.28 ) }
    dend_53 { pt3dadd( -46.0291, -3.61796, -102.683, 0.28 ) }
    dend_53 { pt3dadd( -46.7757, -2.37107, -103.198, 1.66 ) }
    dend_53 { pt3dadd( -48.0464, -0.248798, -104.076, 0.28 ) }
    dend_53 { pt3dadd( -48.4851, 0.483939, -104.378, 0.55 ) }
    dend_53 { pt3dadd( -49.4133, 2.0343, -105.019, 0.28 ) }
    dend_53 { pt3dadd( -49.9424, 2.91799, -105.385, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 0/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -43.6688, -7.56012, -101.053, 0.28 ) }
    dend_42 { pt3dadd( -45.1817, -10.9212, -102.39, 0.28 ) }
    dend_42 { pt3dadd( -46.2097, -12.5764, -103.306, 0.55 ) }
    dend_42 { pt3dadd( -47.5557, -14.2536, -104.435, 0.28 ) }
    dend_42 { pt3dadd( -47.9084, -14.5972, -104.727, 0.55 ) }
    dend_42 { pt3dadd( -51.0153, -17.2937, -107.196, 0.28 ) }
    dend_42 { pt3dadd( -52.9355, -18.7722, -108.732, 0.83 ) }
    dend_42 { pt3dadd( -56.1637, -20.747, -111.337, 0.28 ) }
    dend_42 { pt3dadd( -59.0282, -22.1806, -113.557, 0.83 ) }
    dend_42 { pt3dadd( -62.6143, -23.6678, -116.201, 0.28 ) }
    dend_42 { pt3dadd( -64.0154, -24.1223, -117.216, 0.55 ) }
    dend_42 { pt3dadd( -66.728, -24.6711, -119.116, 0.28 ) }
    dend_42 { pt3dadd( -67.6955, -24.7989, -119.825, 0.55 ) }
    dend_42 { pt3dadd( -69.4847, -24.8795, -121.11, 0.28 ) }
    dend_42 { pt3dadd( -69.9218, -24.8449, -121.434, 0.55 ) }
    dend_42 { pt3dadd( -72.6227, -24.5027, -123.44, 0.28 ) }
    dend_42 { pt3dadd( -74.1035, -24.2555, -124.573, 0.28 ) }
    dend_42 { pt3dadd( -77.7354, -23.5922, -127.319, 1.66 ) }
    dend_42 { pt3dadd( -79.9455, -23.1337, -129.079, 0.28 ) }
    dend_42 { pt3dadd( -82.844, -22.476, -131.435, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 20/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -35.1098, 16.6542, 4.21407, 0.83 ) }
    dend_26 { pt3dadd( -36.8835, 18.1333, 4.31597, 0.83 ) }
    dend_26 { pt3dadd( -38.1881, 19.1843, 4.38945, 0.83 ) }
    dend_26 { pt3dadd( -39.2587, 20.0012, 4.46337, 0.83 ) }
    dend_26 { pt3dadd( -41.1795, 21.4433, 4.60785, 0.83 ) }
    dend_26 { pt3dadd( -43.0655, 22.9265, 4.7887, 0.83 ) }
    dend_26 { pt3dadd( -44.5331, 24.1314, 4.94412, 0.55 ) }
    dend_26 { pt3dadd( -45.2126, 24.7158, 5.01977, 0.83 ) }
    dend_26 { pt3dadd( -46.5119, 25.8765, 5.18066, 0.55 ) }
    dend_26 { pt3dadd( -47.388, 26.6911, 5.30316, 0.55 ) }
    dend_26 { pt3dadd( -49.0958, 28.2742, 5.45108, 0.83 ) }
    dend_26 { pt3dadd( -50.9206, 29.9752, 5.52185, 0.83 ) }
    dend_26 { pt3dadd( -51.787, 30.787, 5.51808, 0.55 ) }
    dend_26 { pt3dadd( -53.3739, 32.2603, 5.45507, 0.55 ) }
    dend_26 { pt3dadd( -54.8779, 33.6501, 5.35121, 0.55 ) }
    dend_26 { pt3dadd( -56.6927, 35.2423, 5.19359, 0.83 ) }
    dend_26 { pt3dadd( -57.7815, 36.148, 5.08263, 0.83 ) }
    dend_26 { pt3dadd( -58.8784, 37.0606, 4.97988, 0.83 ) }
    dend_26 { pt3dadd( -59.5963, 37.6769, 4.92916, 0.55 ) }
    dend_26 { pt3dadd( -60.6398, 38.6908, 4.92991, 0.83 ) }
    dend_26 { pt3dadd( -61.2047, 39.3001, 4.98906, 0.83 ) }
    dend_26 { pt3dadd( -62.211, 40.4856, 5.21195, 0.55 ) }
    dend_26 { pt3dadd( -62.582, 40.9569, 5.29524, 0.83 ) }
    dend_26 { pt3dadd( -63.3955, 42.0075, 5.42176, 0.55 ) }
    dend_26 { pt3dadd( -65.1197, 44.1894, 5.56234, 0.55 ) }
    dend_26 { pt3dadd( -66.331, 45.6856, 5.56343, 0.55 ) }
    dend_26 { pt3dadd( -66.7925, 46.2594, 5.53666, 0.55 ) }
    dend_26 { pt3dadd( -67.9093, 47.6607, 5.38187, 1.11 ) }
    dend_26 { pt3dadd( -69.5696, 49.7375, 5.05267, 0.55 ) }
    dend_26 { pt3dadd( -70.8162, 51.3044, 4.67112, 0.55 ) }
    dend_26 { pt3dadd( -71.5305, 52.1861, 4.38192, 0.55 ) }
    dend_26 { pt3dadd( -72.5999, 53.533, 3.8926, 0.83 ) }
    dend_26 { pt3dadd( -73.2909, 54.3729, 3.56541, 0.55 ) }
    dend_26 { pt3dadd( -74.5255, 55.8582, 2.9456, 0.55 ) }
    dend_26 { pt3dadd( -75.7186, 57.3908, 2.31808, 0.55 ) }
    dend_26 { pt3dadd( -76.0101, 57.7916, 2.14499, 0.55 ) }
    dend_26 { pt3dadd( -76.5786, 58.6223, 1.79977, 0.55 ) }
    dend_26 { pt3dadd( -77.7051, 60.3286, 1.03721, 0.83 ) }
    dend_26 { pt3dadd( -78.7917, 61.9566, 0.234274, 0.55 ) }
    dend_26 { pt3dadd( -79.6561, 63.2335, -0.430801, 0.83 ) }
    dend_26 { pt3dadd( -80.4104, 64.35, -0.979684, 0.28 ) }
    dend_26 { pt3dadd( -81.2312, 65.5635, -1.55382, 1.11 ) }
    dend_26 { pt3dadd( -82.572, 67.483, -2.40846, 0.55 ) }
    dend_26 { pt3dadd( -83.7225, 69.0158, -3.03291, 0.55 ) }
    dend_26 { pt3dadd( -85.2581, 70.8713, -3.7316, 0.55 ) }
    dend_26 { pt3dadd( -86.4885, 72.2406, -4.20185, 0.55 ) }
    dend_26 { pt3dadd( -87.3609, 73.1547, -4.46861, 0.55 ) }
    dend_26 { pt3dadd( -89.2071, 75.0502, -4.92769, 1.66 ) }
    dend_26 { pt3dadd( -90.3846, 76.2203, -5.13233, 0.55 ) }
    dend_26 { pt3dadd( -90.8882, 76.7079, -5.20031, 0.55 ) }
    dend_26 { pt3dadd( -91.61, 77.3479, -5.30513, 0.83 ) }
    dend_26 { pt3dadd( -92.2464, 77.8809, -5.40096, 0.55 ) }
    dend_26 { pt3dadd( -92.7629, 78.3361, -5.47857, 0.83 ) }
    dend_26 { pt3dadd( -94.725, 80.1237, -5.75571, 0.55 ) }
    dend_26 { pt3dadd( -95.8109, 81.1914, -5.94317, 0.83 ) }
    dend_26 { pt3dadd( -96.7533, 82.2465, -6.17962, 0.55 ) }
    dend_26 { pt3dadd( -97.3845, 83.0138, -6.39655, 1.11 ) }
    dend_26 { pt3dadd( -98.2308, 84.1831, -6.77127, 0.28 ) }
    dend_26 { pt3dadd( -98.5264, 84.6813, -6.95892, 0.55 ) }
    dend_26 { pt3dadd( -98.953, 85.7839, -7.39876, 0.28 ) }
    dend_26 { pt3dadd( -99.4221, 87.4891, -8.12888, 0.55 ) }
    dend_26 { pt3dadd( -99.5884, 88.305, -8.48581, 0.28 ) }
    dend_26 { pt3dadd( -99.6862, 88.8427, -8.72878, 0.55 ) }
    dend_26 { pt3dadd( -99.9235, 90.3176, -9.37397, 0.28 ) }
    dend_26 { pt3dadd( -100.134, 91.7124, -9.94442, 0.55 ) }
    dend_26 { pt3dadd( -100.311, 92.8095, -10.351, 0.28 ) }
    dend_26 { pt3dadd( -100.373, 93.1171, -10.4497, 0.55 ) }
    dend_26 { pt3dadd( -100.708, 94.5432, -10.853, 0.28 ) }
    dend_26 { pt3dadd( -100.946, 95.3138, -11.0526, 0.55 ) }
    dend_26 { pt3dadd( -101.587, 96.864, -11.5829, 0.28 ) }
    dend_26 { pt3dadd( -101.952, 97.5836, -11.9192, 0.55 ) }
    dend_26 { pt3dadd( -102.525, 98.6755, -12.4856, 0.28 ) }
    dend_26 { pt3dadd( -102.791, 99.1524, -12.7614, 0.55 ) }
    dend_26 { pt3dadd( -103.503, 100.363, -13.5172, 0.28 ) }
    dend_26 { pt3dadd( -105.05, 102.936, -15.391, 0.83 ) }
    dend_26 { pt3dadd( -106.085, 104.625, -16.7743, 0.28 ) }
    dend_26 { pt3dadd( -106.529, 105.341, -17.4153, 0.83 ) }
    dend_26 { pt3dadd( -107.395, 106.714, -18.8009, 0.28 ) }
    dend_26 { pt3dadd( -107.559, 106.96, -19.0684, 0.55 ) }
    dend_26 { pt3dadd( -108.769, 108.37, -21.3238, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_26 { pt3dadd( -109.068, 108.611, -21.8939, 0.28 ) }
    dend_26 { pt3dadd( -109.538, 108.819, -22.8575, 1.11 ) }
    dend_26 { pt3dadd( -110.521, 108.989, -24.8242, 0.28 ) }
    dend_26 { pt3dadd( -111.215, 108.988, -26.1607, 0.83 ) }
    dend_26 { pt3dadd( -114.102, 108.804, -31.5287, 0.28 ) }
    dend_26 { pt3dadd( -114.699, 108.716, -32.5911, 1.11 ) }
    dend_26 { pt3dadd( -115.99, 108.501, -34.8506, 0.28 ) }
    dend_26 { pt3dadd( -116.608, 108.383, -35.9029, 0.55 ) }
    dend_26 { pt3dadd( -118.279, 108.057, -38.6628, 0.55 ) }
    dend_26 { pt3dadd( -119.568, 107.899, -40.6847, 0.28 ) }
    dend_26 { pt3dadd( -119.846, 107.9, -41.0707, 0.55 ) }
    dend_26 { pt3dadd( -121.096, 107.965, -42.8535, 0.28 ) }
    dend_26 { pt3dadd( -121.389, 107.985, -43.274, 0.83 ) }
    dend_26 { pt3dadd( -122.96, 108.002, -45.7702, 0.28 ) }
    dend_26 { pt3dadd( -123.402, 107.944, -46.489, 0.55 ) }
    dend_26 { pt3dadd( -124.048, 107.783, -47.5324, 0.28 ) }
    dend_26 { pt3dadd( -124.133, 107.761, -47.6787, 0.55 ) }
    dend_26 { pt3dadd( -124.559, 107.578, -48.46, 0.28 ) }
    dend_26 { pt3dadd( -124.801, 107.437, -48.9774, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 19/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -35.1098, 16.6542, 4.21407, 0.55 ) }
    dend_25 { pt3dadd( -34.5817, 19.721, 3.85348, 0.55 ) }
    dend_25 { pt3dadd( -33.8324, 24.8999, 3.43661, 0.55 ) }
    dend_25 { pt3dadd( -33.1693, 29.0838, 3.46465, 0.28 ) }
    dend_25 { pt3dadd( -32.4544, 33.3408, 3.63321, 0.55 ) }
    dend_25 { pt3dadd( -31.4794, 38.8374, 3.88806, 0.55 ) }
    dend_25 { pt3dadd( -30.3004, 44.6379, 4.20631, 0.55 ) }
    dend_25 { pt3dadd( -28.5738, 51.7764, 4.78093, 0.55 ) }
    dend_25 { pt3dadd( -26.2771, 59.5966, 5.76856, 0.55 ) }
    dend_25 { pt3dadd( -23.9419, 66.392, 6.91306, 0.55 ) }
    dend_25 { pt3dadd( -22.2308, 70.8547, 7.89819, 0.55 ) }
    dend_25 { pt3dadd( -19.0627, 78.475, 9.87213, 0.55 ) }
    dend_25 { pt3dadd( -17.0091, 83.0763, 11.1918, 0.55 ) }
    dend_25 { pt3dadd( -14.4772, 88.5037, 12.7377, 0.55 ) }
    dend_25 { pt3dadd( -9.81293, 98.4786, 15.4387, 0.55 ) }
    dend_25 { pt3dadd( -7.81775, 102.744, 16.6637, 0.28 ) }
    dend_25 { pt3dadd( -6.87725, 104.875, 17.2679, 0.55 ) }
    dend_25 { pt3dadd( -5.909, 107.416, 17.8469, 0.28 ) }
    dend_25 { pt3dadd( -5.17142, 109.743, 18.2421, 0.83 ) }
    dend_25 { pt3dadd( -4.53635, 112.119, 18.3734, 0.28 ) }
    dend_25 { pt3dadd( -4.26109, 113.28, 18.2251, 0.55 ) }
    dend_25 { pt3dadd( -3.46631, 116.364, 17.3297, 0.28 ) }
    dend_25 { pt3dadd( -2.75648, 118.905, 16.49, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 42/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.92533, -21.5423, -6.15989, 0.83 ) }
    dend_16 { pt3dadd( 0.189046, -27.8027, -7.73938, 0.83 ) }
    dend_16 { pt3dadd( -0.482894, -30.6066, -8.43743, 1.38 ) }
    dend_16 { pt3dadd( -1.01709, -32.9288, -8.9958, 1.11 ) }
    dend_16 { pt3dadd( -1.58745, -35.2611, -9.51038, 0.83 ) }
    dend_16 { pt3dadd( -2.88051, -40.2776, -10.5276, 1.38 ) }
    dend_16 { pt3dadd( -3.65446, -43.2052, -11.0365, 0.83 ) }
    dend_16 { pt3dadd( -4.06794, -45.0196, -11.2451, 0.83 ) }
    dend_16 { pt3dadd( -4.69234, -47.7598, -11.5112, 0.83 ) }
    dend_16 { pt3dadd( -5.66275, -51.9168, -11.8268, 0.83 ) }
    dend_16 { pt3dadd( -6.72575, -56.5668, -12.0449, 0.55 ) }
    dend_16 { pt3dadd( -7.21217, -58.7103, -12.056, 1.66 ) }
    dend_16 { pt3dadd( -8.13492, -62.8864, -12.0583, 0.83 ) }
    dend_16 { pt3dadd( -8.8359, -66.191, -12.0667, 0.83 ) }
    dend_16 { pt3dadd( -9.27772, -68.502, -12.0934, 0.83 ) }
    dend_16 { pt3dadd( -9.77939, -71.4614, -12.0281, 1.11 ) }
    dend_16 { pt3dadd( -10.148, -73.7078, -11.895, 1.11 ) }
    dend_16 { pt3dadd( -10.6959, -76.9708, -11.592, 1.11 ) }
    dend_16 { pt3dadd( -11.2798, -80.3584, -11.1295, 0.83 ) }
    dend_16 { pt3dadd( -11.72, -83.1571, -10.676, 0.83 ) }
    dend_16 { pt3dadd( -12.4537, -87.965, -9.87147, 0.83 ) }
    dend_16 { pt3dadd( -13.0477, -91.8219, -9.27288, 0.83 ) }
    dend_16 { pt3dadd( -13.5809, -95.2875, -8.78493, 0.55 ) }
    dend_16 { pt3dadd( -14.0762, -98.2309, -8.39796, 0.83 ) }
    dend_16 { pt3dadd( -14.8797, -102.721, -7.85636, 0.55 ) }
    dend_16 { pt3dadd( -15.6715, -106.756, -7.44479, 1.11 ) }
    dend_16 { pt3dadd( -16.2707, -109.478, -7.29617, 0.55 ) }
    dend_16 { pt3dadd( -16.8175, -111.774, -7.21907, 0.83 ) }
    dend_16 { pt3dadd( -17.6837, -115.352, -7.14961, 0.55 ) }
    dend_16 { pt3dadd( -18.3436, -118.214, -7.08503, 0.55 ) }
    dend_16 { pt3dadd( -18.9785, -121.105, -7.00789, 1.11 ) }
    dend_16 { pt3dadd( -19.6484, -124.367, -6.90564, 0.83 ) }
    dend_16 { pt3dadd( -20.3091, -127.764, -6.77863, 0.83 ) }
    dend_16 { pt3dadd( -20.8792, -130.64, -6.68624, 0.83 ) }
    dend_16 { pt3dadd( -21.6614, -134.57, -6.57921, 0.83 ) }
    dend_16 { pt3dadd( -22.6382, -139.149, -6.43946, 0.83 ) }
    dend_16 { pt3dadd( -23.5908, -142.946, -6.27116, 0.83 ) }
    dend_16 { pt3dadd( -24.3744, -145.7, -6.10349, 0.83 ) }
    dend_16 { pt3dadd( -25.2045, -148.211, -5.90996, 0.83 ) }
    dend_16 { pt3dadd( -25.7972, -149.771, -5.77978, 0.83 ) }
    dend_16 { pt3dadd( -27.4321, -153.724, -5.41985, 0.55 ) }
    dend_16 { pt3dadd( -28.6569, -156.726, -5.12998, 0.83 ) }
    dend_16 { pt3dadd( -29.3528, -158.514, -4.95997, 0.83 ) }
    dend_16 { pt3dadd( -30.3118, -161.2, -4.69668, 0.55 ) }
    dend_16 { pt3dadd( -31.2351, -164.125, -4.38832, 0.55 ) }
    dend_16 { pt3dadd( -32.2271, -167.775, -3.98542, 0.55 ) }
    dend_16 { pt3dadd( -32.9298, -170.701, -3.70523, 0.55 ) }
    dend_16 { pt3dadd( -33.7918, -174.734, -3.29831, 0.55 ) }
    dend_16 { pt3dadd( -34.4255, -177.773, -2.98846, 0.55 ) }
    dend_16 { pt3dadd( -35.008, -180.808, -2.70666, 0.55 ) }
    dend_16 { pt3dadd( -35.8625, -185.594, -2.31041, 0.55 ) }
    dend_16 { pt3dadd( -36.5525, -189.599, -2.02409, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 94/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.92533, -21.5423, -6.15989, 1.66 ) }
    dend_5 { pt3dadd( 1.67577, -28.7582, -9.72824, 1.66 ) }
    dend_5 { pt3dadd( 1.62541, -32.2893, -11.3742, 1.66 ) }
    dend_5 { pt3dadd( 1.60218, -38.2254, -14.0524, 1.66 ) }
    dend_5 { pt3dadd( 1.64841, -44.4847, -16.7565, 1.66 ) }
    dend_5 { pt3dadd( 1.67578, -48.1903, -18.3575, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 1.6996, -51.4157, -19.7509, 1.38 ) }
    dend_5 { pt3dadd( 1.79017, -54.7318, -20.919, 1.38 ) }
    dend_5 { pt3dadd( 1.80435, -56.7183, -21.6438, 1.38 ) }
    dend_5 { pt3dadd( 1.95897, -61.3644, -23.3397, 2.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 66.4009, -113.451, 0.862074, 0.28 ) }
    dend_3 { pt3dadd( 67.5168, -116.092, 0.55757, 0.28 ) }
    dend_3 { pt3dadd( 68.349, -117.801, 0.277657, 0.55 ) }
    dend_3 { pt3dadd( 69.0745, -119.175, 0.0330247, 0.28 ) }
    dend_3 { pt3dadd( 69.221, -119.442, 0.00950372, 0.55 ) }
    dend_3 { pt3dadd( 69.9909, -120.762, -0.02678, 0.28 ) }
    dend_3 { pt3dadd( 70.5558, -121.67, -0.0406664, 0.55 ) }
    dend_3 { pt3dadd( 71.5833, -123.068, -0.062001, 0.28 ) }
    dend_3 { pt3dadd( 72.6009, -124.329, -0.102826, 0.83 ) }
    dend_3 { pt3dadd( 74.2635, -126.354, -0.16639, 0.55 ) }
    dend_3 { pt3dadd( 76.058, -128.489, -0.198886, 0.28 ) }
    dend_3 { pt3dadd( 77.1075, -129.715, -0.186134, 0.83 ) }
    dend_3 { pt3dadd( 78.5211, -131.337, -0.158419, 0.28 ) }
    dend_3 { pt3dadd( 79.2438, -132.132, -0.133512, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 18/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 66.4009, -113.451, 0.862074, 0.55 ) }
    dend_2 { pt3dadd( 68.9528, -118.804, 0.830831, 0.55 ) }
    dend_2 { pt3dadd( 69.759, -120.518, 0.768935, 0.55 ) }
    dend_2 { pt3dadd( 71.4361, -124.04, 0.396313, 0.83 ) }
    dend_2 { pt3dadd( 73.451, -128.145, -0.171362, 0.28 ) }
    dend_2 { pt3dadd( 75.3306, -131.981, -0.836551, 0.83 ) }
    dend_2 { pt3dadd( 76.3896, -134.215, -1.26786, 0.28 ) }
    dend_2 { pt3dadd( 77.2885, -136.183, -1.74288, 0.55 ) }
    dend_2 { pt3dadd( 79.4659, -140.77, -2.99778, 0.28 ) }
    dend_2 { pt3dadd( 80.0947, -142.055, -3.39096, 0.28 ) }
    dend_2 { pt3dadd( 80.8709, -143.529, -3.82194, 0.28 ) }
    dend_2 { pt3dadd( 82.0075, -145.688, -4.30141, 0.83 ) }
    dend_2 { pt3dadd( 82.925, -147.523, -4.40682, 0.55 ) }
    dend_2 { pt3dadd( 84.0284, -149.785, -4.25371, 0.28 ) }
    dend_2 { pt3dadd( 85.0791, -151.986, -3.78972, 0.55 ) }
    dend_2 { pt3dadd( 86.9946, -156.022, -2.69253, 0.28 ) }
    dend_2 { pt3dadd( 88.3589, -158.934, -1.77359, 0.83 ) }
    dend_2 { pt3dadd( 90.2975, -163.123, -0.38937, 0.28 ) }
    dend_2 { pt3dadd( 91.2607, -165.391, 0.311969, 0.55 ) }
    dend_2 { pt3dadd( 92.9191, -169.594, 1.49322, 0.28 ) }
    dend_2 { pt3dadd( 93.2792, -170.616, 1.74069, 0.55 ) }
    dend_2 { pt3dadd( 93.9415, -172.949, 2.1518, 0.28 ) }
    dend_2 { pt3dadd( 94.7233, -175.957, 2.52983, 0.83 ) }
    dend_2 { pt3dadd( 95.4101, -178.894, 2.61298, 0.55 ) }
    dend_2 { pt3dadd( 95.9412, -181.639, 2.57306, 0.55 ) }
    dend_2 { pt3dadd( 96.302, -184.283, 2.32192, 0.28 ) }
    dend_2 { pt3dadd( 96.6435, -187.4, 2.00398, 0.83 ) }
    // Section: dend_66, id: dend_66, parent: dend_56 (entry count 45/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 17.0334, -120.212, -48.0367, 0.28 ) }
    dend_66 { pt3dadd( 18.8739, -121.462, -47.3174, 0.28 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 47/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 17.0334, -120.212, -48.0367, 1.11 ) }
    dend_57 { pt3dadd( 16.8448, -123.472, -48.4964, 1.11 ) }
    dend_57 { pt3dadd( 16.7444, -125.213, -48.6532, 0.28 ) }
    dend_57 { pt3dadd( 16.7137, -126.073, -48.8204, 0.55 ) }
    dend_57 { pt3dadd( 16.6727, -127.365, -49.1171, 0.28 ) }
    dend_57 { pt3dadd( 16.6237, -128.417, -49.3733, 0.55 ) }
    dend_57 { pt3dadd( 16.5065, -130.58, -49.9531, 0.28 ) }
    dend_57 { pt3dadd( 16.3787, -133.559, -50.8324, 1.38 ) }
    dend_57 { pt3dadd( 16.2142, -136.746, -51.908, 0.55 ) }
    dend_57 { pt3dadd( 16.0556, -138.659, -52.6434, 0.55 ) }
    dend_57 { pt3dadd( 15.9318, -139.767, -53.1814, 0.28 ) }
    dend_57 { pt3dadd( 15.5773, -142.512, -54.7971, 0.55 ) }
    dend_57 { pt3dadd( 15.3705, -143.904, -55.7264, 0.28 ) }
    dend_57 { pt3dadd( 15.2872, -144.433, -56.0946, 0.28 ) }
    dend_57 { pt3dadd( 15.0823, -145.56, -56.9278, 1.11 ) }
    dend_57 { pt3dadd( 14.6963, -148.048, -58.9066, 0.28 ) }
    dend_57 { pt3dadd( 14.4384, -149.615, -60.17, 0.83 ) }
    dend_57 { pt3dadd( 14.0759, -151.287, -61.4795, 0.55 ) }
    dend_57 { pt3dadd( 13.8408, -152.304, -62.2733, 0.55 ) }
    dend_57 { pt3dadd( 13.264, -155.162, -64.4693, 0.55 ) }
    dend_57 { pt3dadd( 12.8862, -157.237, -66.2695, 0.83 ) }
    dend_57 { pt3dadd( 12.5749, -158.868, -67.6292, 0.55 ) }
    dend_57 { pt3dadd( 12.2705, -160.47, -68.8833, 0.55 ) }
    dend_57 { pt3dadd( 11.8315, -162.849, -70.631, 0.28 ) }
    dend_57 { pt3dadd( 11.5616, -164.345, -71.6242, 0.55 ) }
    dend_57 { pt3dadd( 10.7058, -169.096, -74.3172, 0.55 ) }
    dend_57 { pt3dadd( 10.1594, -172.108, -75.8931, 1.38 ) }
    dend_57 { pt3dadd( 9.62591, -175.446, -77.4404, 0.28 ) }
    dend_57 { pt3dadd( 9.49967, -176.323, -77.8597, 0.55 ) }
    dend_57 { pt3dadd( 9.12203, -178.752, -78.9346, 0.28 ) }
    dend_57 { pt3dadd( 8.8914, -180.079, -79.4892, 0.83 ) }
    dend_57 { pt3dadd( 8.45439, -182.713, -80.4885, 0.28 ) }
    dend_57 { pt3dadd( 8.3058, -183.734, -81.0312, 0.83 ) }
    dend_57 { pt3dadd( 7.84093, -187.592, -83.489, 0.28 ) }
    dend_57 { pt3dadd( 7.66161, -189.642, -84.8895, 1.38 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -82.844, -22.476, -131.435, 0.55 ) }
    dend_44 { pt3dadd( -84.9838, -19.3977, -136.303, 0.55 ) }
    dend_44 { pt3dadd( -85.937, -18.0265, -138.472, 0.55 ) }
    dend_44 { pt3dadd( -86.9138, -16.6213, -140.694, 0.28 ) }
    dend_44 { pt3dadd( -87.4453, -15.8566, -141.903, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 87/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -82.844, -22.476, -131.435, 0.28 ) }
    dend_43 { pt3dadd( -83.52, -22.8727, -132.638, 0.28 ) }
    dend_43 { pt3dadd( -84.0512, -23.2574, -133.6, 0.55 ) }
    dend_43 { pt3dadd( -86.061, -25.0888, -137.638, 0.28 ) }
    dend_43 { pt3dadd( -86.4113, -25.5017, -138.47, 0.28 ) }
    dend_43 { pt3dadd( -86.7123, -25.8792, -139.204, 0.83 ) }
    dend_43 { pt3dadd( -87.4771, -26.9621, -141.171, 0.28 ) }
    dend_43 { pt3dadd( -88.384, -28.6547, -144.113, 1.94 ) }
    dend_43 { pt3dadd( -89.3701, -30.983, -148.082, 0.55 ) }
    dend_43 { pt3dadd( -89.6808, -31.9398, -149.779, 0.55 ) }
    dend_43 { pt3dadd( -89.8574, -32.7425, -151.308, 0.55 ) }
    dend_43 { pt3dadd( -90.0227, -34.6914, -155.065, 1.66 ) }
    dend_43 { pt3dadd( -89.7842, -37.0324, -159.525, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( -89.4976, -37.9108, -161.139, 0.55 ) }
    dend_43 { pt3dadd( -88.647, -39.6232, -164.153, 0.28 ) }
    dend_43 { pt3dadd( -88.0282, -40.6259, -165.84, 1.11 ) }
    dend_43 { pt3dadd( -87.0303, -41.8758, -167.746, 0.28 ) }
    dend_43 { pt3dadd( -86.2794, -42.7091, -168.785, 0.83 ) }
    dend_43 { pt3dadd( -84.6357, -44.5341, -170.532, 0.28 ) }
    dend_43 { pt3dadd( -83.7743, -45.6569, -171.362, 1.11 ) }
    dend_43 { pt3dadd( -82.7466, -47.2537, -172.427, 0.55 ) }
    dend_43 { pt3dadd( -82.4376, -47.8697, -172.974, 1.38 ) }
    dend_43 { pt3dadd( -82.0385, -49.1703, -174.809, 1.38 ) }
    dend_43 { pt3dadd( -81.9682, -50.1601, -176.635, 0.55 ) }
    dend_43 { pt3dadd( -82.1113, -50.994, -178.472, 0.55 ) }
    dend_43 { pt3dadd( -82.5474, -52.3648, -181.59, 1.38 ) }
    dend_43 { pt3dadd( -83.4778, -54.3904, -186.695, 0.55 ) }
    dend_43 { pt3dadd( -84.5982, -56.292, -192.131, 0.28 ) }
    dend_43 { pt3dadd( -84.8158, -56.5663, -193.068, 0.55 ) }
    dend_43 { pt3dadd( -85.6732, -57.3781, -196.171, 0.28 ) }
    dend_43 { pt3dadd( -86.2383, -57.7998, -198.127, 1.38 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 18/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -36.5525, -189.599, -2.02409, 0.55 ) }
    dend_22 { pt3dadd( -40.6361, -190.469, -0.436702, 0.55 ) }
    dend_22 { pt3dadd( -43.4661, -191.055, 0.454062, 0.55 ) }
    dend_22 { pt3dadd( -45.9553, -191.646, 1.13715, 0.55 ) }
    dend_22 { pt3dadd( -49.003, -192.525, 1.83699, 0.55 ) }
    dend_22 { pt3dadd( -53.2832, -193.945, 2.72459, 0.55 ) }
    dend_22 { pt3dadd( -55.5857, -194.834, 3.11975, 0.83 ) }
    dend_22 { pt3dadd( -59.8246, -196.849, 3.63926, 0.55 ) }
    dend_22 { pt3dadd( -62.5131, -198.505, 3.78607, 0.83 ) }
    dend_22 { pt3dadd( -64.8919, -200.334, 3.77212, 0.28 ) }
    dend_22 { pt3dadd( -65.8535, -201.271, 3.72325, 0.55 ) }
    dend_22 { pt3dadd( -67.8946, -203.886, 3.55672, 0.28 ) }
    dend_22 { pt3dadd( -69.0444, -205.723, 3.4494, 0.83 ) }
    dend_22 { pt3dadd( -70.3902, -208.508, 3.35858, 0.28 ) }
    dend_22 { pt3dadd( -71.2935, -210.664, 3.45318, 0.83 ) }
    dend_22 { pt3dadd( -72.1992, -212.862, 3.74948, 0.28 ) }
    dend_22 { pt3dadd( -72.668, -213.929, 3.95983, 0.55 ) }
    dend_22 { pt3dadd( -73.551, -215.902, 4.58019, 0.28 ) }
    dend_22 { pt3dadd( -74.7783, -218.458, 5.53929, 0.83 ) }
    dend_22 { pt3dadd( -76.5012, -221.808, 6.98399, 0.28 ) }
    dend_22 { pt3dadd( -77.6427, -223.819, 7.95501, 0.28 ) }
    dend_22 { pt3dadd( -79.4137, -226.835, 9.54367, 0.83 ) }
    dend_22 { pt3dadd( -81.4113, -229.941, 11.271, 0.28 ) }
    dend_22 { pt3dadd( -83.1456, -232.379, 12.5573, 0.83 ) }
    dend_22 { pt3dadd( -84.4938, -234.158, 13.4327, 0.83 ) }
    dend_22 { pt3dadd( -86.2884, -236.49, 14.4936, 0.28 ) }
    dend_22 { pt3dadd( -88.5201, -239.471, 15.7512, 1.11 ) }
    dend_22 { pt3dadd( -91.4144, -243.352, 17.2902, 0.28 ) }
    dend_22 { pt3dadd( -94.2588, -247.152, 18.5923, 1.11 ) }
    dend_22 { pt3dadd( -95.5638, -248.944, 19.1774, 0.55 ) }
    dend_22 { pt3dadd( -97.4312, -251.422, 19.826, 1.11 ) }
    dend_22 { pt3dadd( -99.4644, -253.985, 20.3241, 0.28 ) }
    dend_22 { pt3dadd( -100.001, -254.611, 20.4342, 0.55 ) }
    dend_22 { pt3dadd( -101.815, -256.641, 20.8394, 0.28 ) }
    dend_22 { pt3dadd( -103.236, -258.169, 21.2052, 1.11 ) }
    dend_22 { pt3dadd( -107.354, -262.344, 22.2139, 0.55 ) }
    dend_22 { pt3dadd( -109.629, -264.54, 22.7772, 0.28 ) }
    dend_22 { pt3dadd( -112.301, -267.023, 23.5637, 0.83 ) }
    dend_22 { pt3dadd( -114.347, -268.892, 24.2543, 0.28 ) }
    dend_22 { pt3dadd( -115.323, -269.73, 24.6073, 0.55 ) }
    dend_22 { pt3dadd( -116.933, -271.081, 25.2405, 0.28 ) }
    dend_22 { pt3dadd( -117.694, -271.712, 25.622, 0.55 ) }
    dend_22 { pt3dadd( -118.61, -272.418, 26.0773, 0.28 ) }
    dend_22 { pt3dadd( -119.509, -273.078, 26.4818, 0.55 ) }
    dend_22 { pt3dadd( -123.473, -275.796, 28.1227, 0.28 ) }
    dend_22 { pt3dadd( -124.157, -276.227, 28.3831, 0.55 ) }
    dend_22 { pt3dadd( -127.49, -278.233, 29.5918, 0.28 ) }
    dend_22 { pt3dadd( -128.109, -278.598, 29.81, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -36.5525, -189.599, -2.02409, 0.83 ) }
    dend_17 { pt3dadd( -36.2959, -191.752, -2.02655, 0.83 ) }
    dend_17 { pt3dadd( -35.9727, -194.462, -2.02965, 0.28 ) }
    dend_17 { pt3dadd( -35.7985, -195.924, -2.03132, 0.55 ) }
    dend_17 { pt3dadd( -35.5924, -197.652, -2.03329, 0.55 ) }
    dend_17 { pt3dadd( -35.2188, -200.786, -2.03687, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.95897, -61.3644, -23.3397, 1.11 ) }
    dend_9 { pt3dadd( 3.33192, -64.7396, -23.9425, 1.11 ) }
    dend_9 { pt3dadd( 4.54295, -68.0635, -24.5189, 1.11 ) }
    dend_9 { pt3dadd( 5.8537, -71.6954, -25.1485, 1.11 ) }
    dend_9 { pt3dadd( 7.19932, -75.4616, -25.9239, 1.11 ) }
    dend_9 { pt3dadd( 8.78238, -80.0751, -27.0056, 0.83 ) }
    dend_9 { pt3dadd( 10.4891, -85.0486, -28.1717, 0.83 ) }
    dend_9 { pt3dadd( 11.8945, -89.4226, -29.2315, 0.83 ) }
    dend_9 { pt3dadd( 12.6968, -92.1645, -29.9203, 0.83 ) }
    dend_9 { pt3dadd( 13.8996, -96.493, -31.0246, 0.83 ) }
    dend_9 { pt3dadd( 14.5456, -98.7734, -31.6432, 1.94 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.95897, -61.3644, -23.3397, 0.55 ) }
    dend_6 { pt3dadd( 1.83612, -61.3315, -26.2629, 0.55 ) }
    dend_6 { pt3dadd( 1.61745, -61.7832, -31.5668, 0.55 ) }
    dend_6 { pt3dadd( 1.49029, -62.3401, -34.4674, 0.55 ) }
    dend_6 { pt3dadd( 1.27005, -63.2987, -37.3713, 0.83 ) }
    dend_6 { pt3dadd( 1.11986, -64.0992, -39.2799, 0.55 ) }
    dend_6 { pt3dadd( 0.955543, -65.2146, -41.5675, 0.83 ) }
    dend_6 { pt3dadd( 0.880691, -66.918, -44.4418, 0.28 ) }
    dend_6 { pt3dadd( 0.857517, -68.5384, -46.4682, 1.66 ) }
    dend_6 { pt3dadd( 0.85859, -72.9062, -51.1444, 0.28 ) }
    dend_6 { pt3dadd( 0.87207, -74.1158, -52.3761, 1.11 ) }
    dend_6 { pt3dadd( 0.916867, -76.3604, -54.5387, 0.55 ) }
    dend_6 { pt3dadd( 0.967817, -77.8288, -56.0228, 0.55 ) }
    dend_6 { pt3dadd( 1.08432, -79.0497, -57.3452, 0.55 ) }
    dend_6 { pt3dadd( 1.32179, -80.9279, -59.8315, 1.38 ) }
    dend_6 { pt3dadd( 1.69961, -83.3369, -63.9828, 0.28 ) }
    dend_6 { pt3dadd( 1.7726, -83.8837, -65.0729, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 1.91236, -85.2481, -68.3332, 0.28 ) }
    dend_6 { pt3dadd( 1.92707, -85.5663, -69.2998, 0.55 ) }
    dend_6 { pt3dadd( 1.95626, -86.5361, -73.382, 0.28 ) }
    dend_6 { pt3dadd( 1.87379, -86.9219, -76.4135, 0.83 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 4/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 7.66161, -189.642, -84.8895, 0.28 ) }
    dend_59 { pt3dadd( 7.22949, -192.523, -84.4161, 0.28 ) }
    dend_59 { pt3dadd( 6.92659, -194.744, -84.0939, 0.83 ) }
    dend_59 { pt3dadd( 6.73938, -196.267, -83.9011, 0.28 ) }
    dend_59 { pt3dadd( 6.66445, -196.989, -83.8241, 0.55 ) }
    dend_59 { pt3dadd( 6.57296, -197.934, -83.7397, 0.28 ) }
    dend_59 { pt3dadd( 6.51038, -198.842, -83.6888, 0.55 ) }
    dend_59 { pt3dadd( 6.46932, -199.883, -83.6714, 0.28 ) }
    dend_59 { pt3dadd( 6.44712, -200.834, -83.6741, 1.11 ) }
    dend_59 { pt3dadd( 6.41945, -202.238, -83.6944, 0.28 ) }
    dend_59 { pt3dadd( 6.39847, -203.266, -83.7094, 0.55 ) }
    dend_59 { pt3dadd( 6.34737, -205.392, -83.7413, 0.28 ) }
    dend_59 { pt3dadd( 6.27258, -207.985, -83.7827, 0.83 ) }
    dend_59 { pt3dadd( 6.21417, -210.637, -83.8283, 1.94 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 18/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 7.66161, -189.642, -84.8895, 0.28 ) }
    dend_58 { pt3dadd( 5.73377, -192.519, -84.9874, 0.28 ) }
    dend_58 { pt3dadd( 5.00869, -193.602, -85.0243, 1.11 ) }
    dend_58 { pt3dadd( 3.23918, -196.243, -85.1141, 0.28 ) }
    dend_58 { pt3dadd( 2.65915, -197.109, -85.1436, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -87.4453, -15.8566, -141.903, 0.28 ) }
    dend_50 { pt3dadd( -90.0049, -11.2339, -146.339, 0.28 ) }
    dend_50 { pt3dadd( -90.5624, -10.227, -147.305, 0.83 ) }
    dend_50 { pt3dadd( -92.4248, -6.86335, -150.532, 0.28 ) }
    dend_50 { pt3dadd( -92.9665, -5.88505, -151.471, 0.55 ) }
    dend_50 { pt3dadd( -94.9892, -2.23212, -154.976, 0.28 ) }
    dend_50 { pt3dadd( -95.4023, -1.48598, -155.692, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 30/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -87.4453, -15.8566, -141.903, 0.28 ) }
    dend_45 { pt3dadd( -88.3049, -15.5592, -142.712, 0.28 ) }
    dend_45 { pt3dadd( -89.2066, -15.2983, -143.51, 0.55 ) }
    dend_45 { pt3dadd( -93.1876, -14.2932, -146.859, 0.28 ) }
    dend_45 { pt3dadd( -94.4832, -13.9848, -147.945, 0.55 ) }
    dend_45 { pt3dadd( -95.4967, -13.7353, -148.739, 0.28 ) }
    dend_45 { pt3dadd( -96.2422, -13.5642, -149.285, 0.55 ) }
    dend_45 { pt3dadd( -97.9252, -13.1356, -150.481, 0.28 ) }
    dend_45 { pt3dadd( -99.4631, -12.7777, -151.48, 0.55 ) }
    dend_45 { pt3dadd( -101.851, -12.2545, -152.874, 0.55 ) }
    dend_45 { pt3dadd( -103.481, -11.8467, -153.844, 0.28 ) }
    dend_45 { pt3dadd( -104.605, -11.5291, -154.498, 0.55 ) }
    dend_45 { pt3dadd( -106.731, -10.8051, -155.741, 0.28 ) }
    dend_45 { pt3dadd( -107.936, -10.3059, -156.411, 2.49 ) }
    dend_45 { pt3dadd( -111.222, -8.73256, -158.191, 0.28 ) }
    dend_45 { pt3dadd( -112.076, -8.30685, -158.719, 0.28 ) }
    dend_45 { pt3dadd( -113.166, -7.78105, -159.451, 0.55 ) }
    dend_45 { pt3dadd( -114.59, -7.08038, -160.445, 0.28 ) }
    dend_45 { pt3dadd( -117.09, -5.96858, -162.33, 0.83 ) }
    dend_45 { pt3dadd( -118.359, -5.43769, -163.359, 0.55 ) }
    dend_45 { pt3dadd( -122.418, -3.89012, -166.735, 0.28 ) }
    dend_45 { pt3dadd( -123.394, -3.55483, -167.58, 0.55 ) }
    dend_45 { pt3dadd( -124.738, -3.10679, -168.8, 0.28 ) }
    dend_45 { pt3dadd( -127.527, -2.26786, -171.336, 0.28 ) }
    dend_45 { pt3dadd( -127.675, -2.22912, -171.472, 0.55 ) }
    dend_45 { pt3dadd( -129.351, -1.78786, -172.919, 0.28 ) }
    dend_45 { pt3dadd( -130.038, -1.59651, -173.439, 1.66 ) }
    dend_45 { pt3dadd( -134.039, -0.530364, -176.443, 0.28 ) }
    dend_45 { pt3dadd( -134.524, -0.408611, -176.786, 0.55 ) }
    dend_45 { pt3dadd( -135.909, -0.0401645, -177.675, 0.28 ) }
    dend_45 { pt3dadd( -136.645, 0.141628, -178.151, 0.55 ) }
    dend_45 { pt3dadd( -138.668, 0.521719, -179.465, 0.28 ) }
    dend_45 { pt3dadd( -140.223, 0.757829, -180.445, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -35.2188, -200.786, -2.03687, 1.11 ) }
    dend_19 { pt3dadd( -36.21, -204.365, -1.66777, 1.11 ) }
    dend_19 { pt3dadd( -37.057, -207.911, -1.21066, 0.55 ) }
    dend_19 { pt3dadd( -37.6875, -211.183, -0.773179, 0.28 ) }
    dend_19 { pt3dadd( -38.2476, -214.257, -0.346485, 0.55 ) }
    dend_19 { pt3dadd( -38.7244, -217.272, 0.174211, 0.55 ) }
    dend_19 { pt3dadd( -39.155, -220.472, 0.80302, 0.55 ) }
    dend_19 { pt3dadd( -39.517, -224.006, 1.54758, 0.55 ) }
    dend_19 { pt3dadd( -39.6414, -226.698, 2.25137, 0.83 ) }
    dend_19 { pt3dadd( -39.5874, -228.035, 2.61967, 0.83 ) }
    dend_19 { pt3dadd( -39.1251, -230.796, 3.72023, 0.28 ) }
    dend_19 { pt3dadd( -38.8431, -231.858, 4.25678, 0.55 ) }
    dend_19 { pt3dadd( -38.4661, -233.027, 4.92839, 0.55 ) }
    dend_19 { pt3dadd( -37.897, -234.612, 5.91425, 0.83 ) }
    dend_19 { pt3dadd( -36.9074, -237.105, 7.61488, 0.55 ) }
    dend_19 { pt3dadd( -34.4608, -242.657, 11.4688, 0.28 ) }
    dend_19 { pt3dadd( -34.2481, -243.138, 11.8025, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -35.2188, -200.786, -2.03687, 0.28 ) }
    dend_18 { pt3dadd( -34.6009, -203.905, -2.71032, 0.28 ) }
    dend_18 { pt3dadd( -34.2774, -205.769, -3.05595, 0.83 ) }
    dend_18 { pt3dadd( -33.5217, -211.164, -3.89138, 0.28 ) }
    dend_18 { pt3dadd( -33.2806, -213.246, -4.17072, 0.83 ) }
    dend_18 { pt3dadd( -32.8425, -217.957, -4.66426, 0.28 ) }
    dend_18 { pt3dadd( -32.5083, -222.226, -5.03407, 0.28 ) }
    dend_18 { pt3dadd( -32.4775, -223.315, -5.07982, 0.83 ) }
    dend_18 { pt3dadd( -32.4532, -226.156, -5.09994, 0.28 ) }
    dend_18 { pt3dadd( -32.4398, -227.11, -5.06665, 0.55 ) }
    dend_18 { pt3dadd( -32.3645, -231.661, -4.83443, 0.28 ) }
    dend_18 { pt3dadd( -32.332, -232.263, -4.79773, 0.55 ) }
    dend_18 { pt3dadd( -32.1886, -233.858, -4.72716, 0.28 ) }
    dend_18 { pt3dadd( -31.9498, -235.725, -4.68234, 0.55 ) }
    dend_18 { pt3dadd( -31.1618, -240.674, -4.81511, 0.28 ) }
    dend_18 { pt3dadd( -31.0196, -241.446, -4.87059, 0.55 ) }
    dend_18 { pt3dadd( -30.3144, -244.737, -5.27136, 0.28 ) }
    dend_18 { pt3dadd( -30.0195, -246.059, -5.46873, 0.55 ) }
    dend_18 { pt3dadd( -29.758, -247.193, -5.66962, 0.55 ) }
    dend_18 { pt3dadd( -28.9582, -250.573, -6.34588, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_18 { pt3dadd( -28.67, -251.685, -6.61455, 0.55 ) }
    dend_18 { pt3dadd( -28.1754, -253.495, -7.06639, 0.28 ) }
    dend_18 { pt3dadd( -28.0838, -253.837, -7.15647, 0.55 ) }
    dend_18 { pt3dadd( -27.3953, -256.344, -7.72539, 0.28 ) }
    dend_18 { pt3dadd( -27.2943, -256.701, -7.80399, 0.55 ) }
    dend_18 { pt3dadd( -26.321, -260.49, -8.88006, 0.28 ) }
    dend_18 { pt3dadd( -26.0598, -261.71, -9.29282, 0.55 ) }
    dend_18 { pt3dadd( -25.583, -264.263, -10.3053, 0.28 ) }
    dend_18 { pt3dadd( -25.1733, -266.671, -11.3681, 0.28 ) }
    dend_18 { pt3dadd( -24.9924, -267.885, -11.9575, 1.11 ) }
    dend_18 { pt3dadd( -24.5098, -271.731, -13.9598, 0.28 ) }
    dend_18 { pt3dadd( -24.4844, -272.234, -14.2575, 0.55 ) }
    dend_18 { pt3dadd( -24.4481, -273.527, -15.1296, 0.28 ) }
    dend_18 { pt3dadd( -24.4547, -273.938, -15.4655, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 14/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 14.5456, -98.7734, -31.6432, 0.55 ) }
    dend_13 { pt3dadd( 16.4103, -99.0714, -32.6435, 0.55 ) }
    dend_13 { pt3dadd( 18.4247, -99.5403, -33.6885, 0.83 ) }
    dend_13 { pt3dadd( 19.9313, -99.9908, -34.4698, 0.55 ) }
    dend_13 { pt3dadd( 21.5268, -100.515, -35.2904, 0.55 ) }
    dend_13 { pt3dadd( 23.9802, -101.403, -36.5288, 1.11 ) }
    dend_13 { pt3dadd( 25.2083, -101.903, -37.1357, 0.55 ) }
    dend_13 { pt3dadd( 26.977, -102.815, -37.9889, 1.11 ) }
    dend_13 { pt3dadd( 28.0971, -103.482, -38.4975, 0.55 ) }
    dend_13 { pt3dadd( 29.1799, -104.194, -38.9505, 0.55 ) }
    dend_13 { pt3dadd( 30.7002, -105.344, -39.5718, 0.83 ) }
    dend_13 { pt3dadd( 31.863, -106.354, -40.0397, 0.55 ) }
    dend_13 { pt3dadd( 32.7097, -107.142, -40.373, 0.55 ) }
    dend_13 { pt3dadd( 33.735, -108.115, -40.7578, 0.83 ) }
    dend_13 { pt3dadd( 34.4947, -108.866, -41.0264, 0.55 ) }
    dend_13 { pt3dadd( 35.7925, -110.223, -41.4738, 0.83 ) }
    dend_13 { pt3dadd( 36.4948, -110.952, -41.6955, 0.28 ) }
    dend_13 { pt3dadd( 37.5111, -111.968, -41.9924, 0.83 ) }
    dend_13 { pt3dadd( 38.2367, -112.679, -42.1717, 0.28 ) }
    dend_13 { pt3dadd( 38.9766, -113.366, -42.3326, 0.83 ) }
    dend_13 { pt3dadd( 40.0656, -114.31, -42.551, 0.28 ) }
    dend_13 { pt3dadd( 40.9706, -115.07, -42.7299, 1.11 ) }
    dend_13 { pt3dadd( 41.9901, -115.935, -42.9518, 1.11 ) }
    dend_13 { pt3dadd( 43.4301, -117.188, -43.2727, 0.55 ) }
    dend_13 { pt3dadd( 44.5473, -118.173, -43.5442, 0.55 ) }
    dend_13 { pt3dadd( 45.4267, -118.964, -43.7666, 0.55 ) }
    dend_13 { pt3dadd( 46.8191, -120.261, -44.1231, 0.28 ) }
    dend_13 { pt3dadd( 47.653, -121.085, -44.3426, 0.83 ) }
    dend_13 { pt3dadd( 49.6319, -123.148, -44.8496, 0.55 ) }
    dend_13 { pt3dadd( 51.2424, -124.929, -45.2215, 0.55 ) }
    dend_13 { pt3dadd( 52.7202, -126.713, -45.5754, 1.11 ) }
    dend_13 { pt3dadd( 53.4949, -127.726, -45.7671, 0.55 ) }
    dend_13 { pt3dadd( 54.6079, -129.301, -46.0514, 0.83 ) }
    dend_13 { pt3dadd( 55.2066, -130.293, -46.2645, 0.28 ) }
    dend_13 { pt3dadd( 55.8637, -131.62, -46.6046, 0.83 ) }
    dend_13 { pt3dadd( 56.7128, -133.663, -47.1472, 0.55 ) }
    dend_13 { pt3dadd( 57.2102, -135.018, -47.5604, 0.55 ) }
    dend_13 { pt3dadd( 57.7658, -136.673, -48.11, 0.83 ) }
    dend_13 { pt3dadd( 58.5773, -139.385, -49.0987, 0.55 ) }
    dend_13 { pt3dadd( 58.9634, -140.823, -49.6425, 0.55 ) }
    dend_13 { pt3dadd( 59.4468, -142.859, -50.4615, 1.11 ) }
    dend_13 { pt3dadd( 59.7135, -144.056, -50.9331, 0.28 ) }
    dend_13 { pt3dadd( 59.8602, -144.733, -51.2052, 0.83 ) }
    dend_13 { pt3dadd( 60.1785, -146.217, -51.8404, 0.28 ) }
    dend_13 { pt3dadd( 60.4374, -147.235, -52.2524, 0.83 ) }
    dend_13 { pt3dadd( 60.8754, -148.765, -52.8921, 0.28 ) }
    dend_13 { pt3dadd( 61.0979, -149.466, -53.1729, 0.55 ) }
    dend_13 { pt3dadd( 61.8602, -151.591, -53.8828, 0.55 ) }
    dend_13 { pt3dadd( 62.9648, -154.434, -54.7064, 0.55 ) }
    dend_13 { pt3dadd( 64.0965, -157.182, -55.4517, 0.55 ) }
    dend_13 { pt3dadd( 64.7822, -158.793, -55.8676, 0.28 ) }
    dend_13 { pt3dadd( 65.6695, -160.808, -56.3183, 1.11 ) }
    dend_13 { pt3dadd( 66.5408, -162.759, -56.7101, 0.55 ) }
    dend_13 { pt3dadd( 67.0837, -163.948, -56.8836, 1.38 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 14.5456, -98.7734, -31.6432, 1.11 ) }
    dend_10 { pt3dadd( 13.8809, -100.965, -32.0921, 1.11 ) }
    dend_10 { pt3dadd( 12.974, -103.954, -32.7045, 0.83 ) }
    dend_10 { pt3dadd( 12.2072, -106.482, -33.2223, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 72/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 1.87379, -86.9219, -76.4135, 0.28 ) }
    dend_8 { pt3dadd( 2.0231, -90.3123, -79.939, 0.28 ) }
    dend_8 { pt3dadd( 2.15301, -92.4726, -81.948, 0.28 ) }
    dend_8 { pt3dadd( 2.27857, -93.8378, -83.0504, 0.83 ) }
    dend_8 { pt3dadd( 2.55309, -97.3984, -85.7909, 0.28 ) }
    dend_8 { pt3dadd( 2.60035, -97.843, -86.1006, 0.55 ) }
    dend_8 { pt3dadd( 2.92998, -100.4, -87.7687, 0.28 ) }
    dend_8 { pt3dadd( 3.25634, -102.273, -88.711, 1.38 ) }
    dend_8 { pt3dadd( 3.78654, -104.912, -89.8306, 0.28 ) }
    dend_8 { pt3dadd( 4.3194, -106.637, -90.4763, 0.55 ) }
    dend_8 { pt3dadd( 5.36719, -109.029, -91.2136, 0.28 ) }
    dend_8 { pt3dadd( 5.51872, -109.345, -91.3328, 0.55 ) }
    dend_8 { pt3dadd( 6.33481, -110.878, -91.9798, 0.28 ) }
    dend_8 { pt3dadd( 6.92401, -112.002, -92.5843, 1.38 ) }
    dend_8 { pt3dadd( 8.35703, -114.811, -94.2186, 0.28 ) }
    dend_8 { pt3dadd( 8.99148, -116.139, -95.0135, 1.11 ) }
    dend_8 { pt3dadd( 10.3161, -119.223, -96.9897, 0.28 ) }
    dend_8 { pt3dadd( 10.5934, -119.896, -97.4007, 0.83 ) }
    dend_8 { pt3dadd( 12.9165, -125.815, -100.944, 0.28 ) }
    dend_8 { pt3dadd( 13.2673, -126.735, -101.445, 0.83 ) }
    dend_8 { pt3dadd( 14.0206, -128.758, -102.421, 0.28 ) }
    dend_8 { pt3dadd( 14.3, -129.544, -102.77, 0.55 ) }
    dend_8 { pt3dadd( 15.6276, -133.303, -104.277, 0.28 ) }
    dend_8 { pt3dadd( 16.1726, -134.857, -104.871, 1.11 ) }
    dend_8 { pt3dadd( 17.7866, -139.433, -106.435, 0.28 ) }
    dend_8 { pt3dadd( 18.041, -140.148, -106.676, 0.55 ) }
    dend_8 { pt3dadd( 20.2331, -146.249, -108.652, 0.28 ) }
    dend_8 { pt3dadd( 20.5688, -147.212, -108.958, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 1.87379, -86.9219, -76.4135, 0.28 ) }
    dend_7 { pt3dadd( 1.80905, -87.2707, -78.9997, 0.28 ) }
    dend_7 { pt3dadd( 1.81192, -87.3641, -79.5959, 1.11 ) }
    dend_7 { pt3dadd( 1.81265, -88.0374, -84.6324, 0.55 ) }
    dend_7 { pt3dadd( 1.82414, -88.3857, -87.8664, 0.28 ) }
    dend_7 { pt3dadd( 1.75906, -88.4773, -89.4845, 0.83 ) }
    dend_7 { pt3dadd( 1.69118, -88.5101, -90.8482, 0.55 ) }
    dend_7 { pt3dadd( 1.53357, -88.4406, -92.1792, 0.55 ) }
    dend_7 { pt3dadd( 1.08228, -87.9555, -95.9735, 0.28 ) }
    dend_7 { pt3dadd( 1.01344, -87.775, -96.7495, 0.83 ) }
    dend_7 { pt3dadd( 0.743214, -86.4841, -101.151, 0.28 ) }
    dend_7 { pt3dadd( 0.738851, -86.2435, -101.951, 0.83 ) }
    dend_7 { pt3dadd( 0.940549, -85.0862, -105.789, 0.28 ) }
    dend_7 { pt3dadd( 1.09688, -84.7404, -107.175, 1.11 ) }
    dend_7 { pt3dadd( 1.65978, -84.2369, -109.945, 0.28 ) }
    dend_7 { pt3dadd( 1.79895, -84.1819, -110.449, 0.83 ) }
    dend_7 { pt3dadd( 3.39416, -84.1159, -114.584, 0.28 ) }
    dend_7 { pt3dadd( 3.88594, -84.1413, -115.799, 1.94 ) }
    dend_7 { pt3dadd( 5.30859, -84.3677, -118.91, 0.28 ) }
    dend_7 { pt3dadd( 5.69423, -84.4243, -119.838, 0.55 ) }
    dend_7 { pt3dadd( 6.14538, -84.4678, -120.901, 0.28 ) }
    dend_7 { pt3dadd( 6.5887, -84.4751, -121.995, 0.55 ) }
    dend_7 { pt3dadd( 7.59128, -84.1964, -124.62, 0.28 ) }
    dend_7 { pt3dadd( 7.70993, -84.1304, -124.973, 0.55 ) }
    dend_7 { pt3dadd( 8.4744, -83.1787, -127.165, 0.28 ) }
    dend_7 { pt3dadd( 8.85144, -82.5155, -128.372, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 26/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 6.21417, -210.637, -83.8283, 0.28 ) }
    dend_63 { pt3dadd( 6.10184, -214.06, -83.6017, 0.28 ) }
    dend_63 { pt3dadd( 6.04815, -215.696, -83.4935, 0.83 ) }
    dend_63 { pt3dadd( 5.9445, -218.854, -83.2844, 0.28 ) }
    dend_63 { pt3dadd( 5.8513, -221.694, -83.0964, 1.11 ) }
    dend_63 { pt3dadd( 5.7199, -225.697, -82.8314, 0.28 ) }
    dend_63 { pt3dadd( 5.68342, -226.809, -82.7578, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 33/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 6.21417, -210.637, -83.8283, 0.55 ) }
    dend_60 { pt3dadd( 4.0593, -214.501, -84.2763, 0.55 ) }
    dend_60 { pt3dadd( 1.8771, -218.415, -84.73, 0.55 ) }
    dend_60 { pt3dadd( 0.647612, -220.62, -84.9856, 0.83 ) }
    dend_60 { pt3dadd( -0.524854, -222.722, -85.2293, 0.55 ) }
    dend_60 { pt3dadd( -2.32188, -225.945, -85.6029, 0.55 ) }
    dend_60 { pt3dadd( -2.92347, -227.024, -85.728, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 40/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -95.4023, -1.48598, -155.692, 0.28 ) }
    dend_52 { pt3dadd( -95.2975, 1.18021, -155.465, 0.28 ) }
    dend_52 { pt3dadd( -95.2267, 2.5483, -155.365, 0.55 ) }
    dend_52 { pt3dadd( -94.8778, 7.23821, -155.106, 0.28 ) }
    dend_52 { pt3dadd( -94.7808, 8.37528, -155.056, 0.83 ) }
    dend_52 { pt3dadd( -94.2518, 13.4855, -154.779, 0.28 ) }
    dend_52 { pt3dadd( -93.8999, 16.7571, -154.595, 0.28 ) }
    dend_52 { pt3dadd( -93.7563, 17.8909, -154.555, 0.83 ) }
    dend_52 { pt3dadd( -93.5683, 19.3813, -154.544, 0.28 ) }
    dend_52 { pt3dadd( -93.4279, 20.5047, -154.635, 0.55 ) }
    dend_52 { pt3dadd( -93.0839, 23.3533, -155.068, 0.28 ) }
    dend_52 { pt3dadd( -92.9652, 24.2281, -155.461, 0.55 ) }
    dend_52 { pt3dadd( -92.7314, 25.8125, -156.5, 0.28 ) }
    dend_52 { pt3dadd( -92.6026, 26.549, -157.05, 0.55 ) }
    dend_52 { pt3dadd( -92.1366, 29.3166, -159.235, 0.28 ) }
    dend_52 { pt3dadd( -91.9833, 30.4318, -160.146, 0.55 ) }
    dend_52 { pt3dadd( -91.4016, 36.1034, -164.732, 0.28 ) }
    dend_52 { pt3dadd( -91.2758, 37.5249, -165.804, 0.28 ) }
    dend_52 { pt3dadd( -91.2116, 38.5834, -166.515, 0.83 ) }
    dend_52 { pt3dadd( -91.1923, 40.5653, -167.674, 0.28 ) }
    dend_52 { pt3dadd( -91.3262, 43.2719, -168.997, 0.55 ) }
    dend_52 { pt3dadd( -91.5581, 44.9627, -169.626, 0.28 ) }
    dend_52 { pt3dadd( -91.6878, 45.3958, -169.648, 0.55 ) }
    dend_52 { pt3dadd( -92.2294, 46.8237, -169.627, 0.28 ) }
    dend_52 { pt3dadd( -92.6494, 47.7295, -169.579, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 65/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -95.4023, -1.48598, -155.692, 0.28 ) }
    dend_51 { pt3dadd( -96.8454, -2.20187, -156.001, 0.28 ) }
    dend_51 { pt3dadd( -97.4855, -2.50511, -156.189, 0.55 ) }
    dend_51 { pt3dadd( -99.7639, -3.57791, -157.001, 0.28 ) }
    dend_51 { pt3dadd( -100.225, -3.78467, -157.193, 0.55 ) }
    dend_51 { pt3dadd( -102.771, -4.89394, -158.31, 0.28 ) }
    dend_51 { pt3dadd( -103.317, -5.11565, -158.57, 0.55 ) }
    dend_51 { pt3dadd( -105.695, -5.98426, -159.851, 0.28 ) }
    dend_51 { pt3dadd( -106.425, -6.21974, -160.273, 0.55 ) }
    dend_51 { pt3dadd( -108.115, -6.69321, -161.267, 0.28 ) }
    dend_51 { pt3dadd( -108.404, -6.75451, -161.466, 0.55 ) }
    dend_51 { pt3dadd( -109.84, -6.97425, -162.648, 0.28 ) }
    dend_51 { pt3dadd( -110.096, -7.00348, -162.901, 0.55 ) }
    dend_51 { pt3dadd( -110.963, -7.08567, -163.88, 0.28 ) }
    dend_51 { pt3dadd( -111.444, -7.13394, -164.433, 0.55 ) }
    dend_51 { pt3dadd( -112.865, -7.29386, -166.13, 0.28 ) }
    dend_51 { pt3dadd( -113.091, -7.32216, -166.41, 0.55 ) }
    dend_51 { pt3dadd( -115.799, -7.73221, -169.92, 0.28 ) }
    dend_51 { pt3dadd( -116.189, -7.79811, -170.441, 0.55 ) }
    dend_51 { pt3dadd( -116.931, -7.95059, -171.451, 0.28 ) }
    dend_51 { pt3dadd( -117.033, -7.97388, -171.598, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 86/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -140.223, 0.757829, -180.445, 0.28 ) }
    dend_47 { pt3dadd( -139.653, -2.90235, -182.258, 0.28 ) }
    dend_47 { pt3dadd( -139.051, -4.51964, -183.006, 1.11 ) }
    dend_47 { pt3dadd( -138.071, -6.59276, -183.92, 0.28 ) }
    dend_47 { pt3dadd( -137.768, -7.06796, -184.073, 0.55 ) }
    dend_47 { pt3dadd( -136.193, -9.13904, -184.626, 0.28 ) }
    dend_47 { pt3dadd( -135.198, -10.3913, -184.878, 0.55 ) }
    dend_47 { pt3dadd( -133.034, -12.5676, -185.136, 0.28 ) }
    dend_47 { pt3dadd( -132.294, -13.2629, -185.17, 0.83 ) }
    dend_47 { pt3dadd( -129.14, -16.1751, -185.186, 0.28 ) }
    dend_47 { pt3dadd( -128.079, -17.1635, -185.221, 0.55 ) }
    dend_47 { pt3dadd( -126.161, -18.9897, -185.343, 0.28 ) }
    dend_47 { pt3dadd( -125.446, -19.6984, -185.459, 0.55 ) }
    dend_47 { pt3dadd( -122.876, -22.368, -186.192, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_47 { pt3dadd( -122.056, -23.3169, -186.568, 0.83 ) }
    dend_47 { pt3dadd( -120.239, -25.7309, -187.809, 0.28 ) }
    dend_47 { pt3dadd( -119.416, -26.9308, -188.49, 0.83 ) }
    dend_47 { pt3dadd( -117.617, -29.7002, -190.078, 0.28 ) }
    dend_47 { pt3dadd( -117.021, -30.749, -190.633, 0.55 ) }
    dend_47 { pt3dadd( -115.65, -33.6072, -192.04, 0.28 ) }
    dend_47 { pt3dadd( -115.318, -34.3938, -192.376, 0.55 ) }
    dend_47 { pt3dadd( -114.641, -36.2315, -193.035, 0.28 ) }
    dend_47 { pt3dadd( -113.91, -38.6584, -193.827, 0.28 ) }
    dend_47 { pt3dadd( -113.382, -40.843, -194.462, 0.28 ) }
    dend_47 { pt3dadd( -113.111, -42.1413, -194.818, 0.55 ) }
    dend_47 { pt3dadd( -112.667, -44.4464, -195.404, 0.28 ) }
    dend_47 { pt3dadd( -112.414, -45.8313, -195.783, 0.55 ) }
    dend_47 { pt3dadd( -111.959, -48.7225, -196.649, 0.28 ) }
    dend_47 { pt3dadd( -111.784, -49.8275, -196.992, 0.55 ) }
    dend_47 { pt3dadd( -111.311, -52.7306, -197.789, 0.28 ) }
    dend_47 { pt3dadd( -111.311, -52.7306, -197.789, 0.55 ) }
    dend_47 { pt3dadd( -110.882, -55.3929, -198.383, 0.28 ) }
    dend_47 { pt3dadd( -110.635, -56.7161, -198.659, 0.55 ) }
    dend_47 { pt3dadd( -109.834, -59.8091, -199.251, 0.28 ) }
    dend_47 { pt3dadd( -109.521, -60.9113, -199.436, 1.38 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -140.223, 0.757829, -180.445, 0.55 ) }
    dend_46 { pt3dadd( -141.368, 0.708019, -181.185, 0.55 ) }
    dend_46 { pt3dadd( -142.278, 0.665529, -181.797, 0.28 ) }
    dend_46 { pt3dadd( -142.689, 0.662499, -182.061, 0.55 ) }
    dend_46 { pt3dadd( -143.666, 0.724729, -182.756, 0.28 ) }
    dend_46 { pt3dadd( -144.333, 0.776689, -183.234, 0.83 ) }
    dend_46 { pt3dadd( -147.046, 1.14087, -185.121, 0.28 ) }
    dend_46 { pt3dadd( -147.422, 1.21612, -185.39, 0.28 ) }
    dend_46 { pt3dadd( -148.611, 1.52222, -186.245, 0.83 ) }
    dend_46 { pt3dadd( -151.767, 2.46526, -188.649, 0.28 ) }
    dend_46 { pt3dadd( -152.757, 2.80659, -189.424, 0.55 ) }
    dend_46 { pt3dadd( -154.914, 3.59601, -191.286, 0.28 ) }
    dend_46 { pt3dadd( -155.591, 3.86755, -191.905, 0.28 ) }
    dend_46 { pt3dadd( -155.974, 4.01656, -192.247, 0.55 ) }
    dend_46 { pt3dadd( -158.445, 4.93838, -194.364, 0.28 ) }
    dend_46 { pt3dadd( -159.737, 5.33793, -195.496, 1.11 ) }
    dend_46 { pt3dadd( -163.576, 6.24971, -198.949, 0.28 ) }
    dend_46 { pt3dadd( -163.902, 6.3007, -199.236, 0.55 ) }
    dend_46 { pt3dadd( -165.695, 6.48843, -200.697, 0.28 ) }
    dend_46 { pt3dadd( -166.531, 6.52233, -201.328, 1.11 ) }
    dend_46 { pt3dadd( -171.103, 6.38973, -204.252, 0.28 ) }
    dend_46 { pt3dadd( -171.661, 6.32997, -204.575, 0.55 ) }
    dend_46 { pt3dadd( -173.018, 6.1367, -205.481, 0.28 ) }
    dend_46 { pt3dadd( -173.643, 6.06288, -205.953, 0.55 ) }
    dend_46 { pt3dadd( -175.587, 5.8705, -207.88, 0.28 ) }
    dend_46 { pt3dadd( -176.526, 5.8069, -208.875, 0.28 ) }
    dend_46 { pt3dadd( -177.274, 5.77751, -209.674, 0.55 ) }
    dend_46 { pt3dadd( -181.254, 5.74754, -214.083, 0.28 ) }
    dend_46 { pt3dadd( -182.05, 5.76098, -214.989, 0.83 ) }
    dend_46 { pt3dadd( -185.602, 5.99148, -219.082, 0.28 ) }
    dend_46 { pt3dadd( -186.231, 6.06869, -219.805, 0.28 ) }
    dend_46 { pt3dadd( -186.543, 6.1062, -220.168, 0.55 ) }
    dend_46 { pt3dadd( -188.553, 6.31451, -222.389, 0.28 ) }
    dend_46 { pt3dadd( -189.294, 6.38275, -223.117, 0.28 ) }
    dend_46 { pt3dadd( -189.946, 6.4408, -223.741, 0.55 ) }
    dend_46 { pt3dadd( -191.443, 6.58039, -225.028, 0.28 ) }
    dend_46 { pt3dadd( -192.368, 6.66303, -225.862, 0.28 ) }
    dend_46 { pt3dadd( -193.027, 6.77745, -226.576, 0.83 ) }
    dend_46 { pt3dadd( -195.834, 7.24165, -229.841, 0.28 ) }
    dend_46 { pt3dadd( -196.197, 7.30313, -230.242, 0.55 ) }
    dend_46 { pt3dadd( -196.792, 7.41797, -230.861, 0.28 ) }
    dend_46 { pt3dadd( -197.802, 7.65322, -231.813, 0.55 ) }
    dend_46 { pt3dadd( -203.636, 9.19079, -236.767, 0.28 ) }
    dend_46 { pt3dadd( -204.752, 9.499, -237.598, 0.28 ) }
    dend_46 { pt3dadd( -206.796, 10.1223, -238.86, 0.28 ) }
    dend_46 { pt3dadd( -207.884, 10.499, -239.475, 0.55 ) }
    dend_46 { pt3dadd( -211.51, 11.903, -241.269, 0.28 ) }
    dend_46 { pt3dadd( -213.091, 12.5608, -241.938, 0.28 ) }
    dend_46 { pt3dadd( -215.499, 13.6658, -242.68, 0.55 ) }
    dend_46 { pt3dadd( -218.281, 15.0808, -243.554, 0.55 ) }
    dend_46 { pt3dadd( -220.386, 16.2616, -244.298, 0.55 ) }
    dend_46 { pt3dadd( -221.787, 17.0746, -244.811, 0.28 ) }
    dend_46 { pt3dadd( -223.239, 17.9303, -245.381, 0.55 ) }
    dend_46 { pt3dadd( -225.422, 19.178, -246.31, 0.28 ) }
    dend_46 { pt3dadd( -226.685, 19.859, -246.883, 0.55 ) }
    dend_46 { pt3dadd( -228.901, 20.9591, -247.964, 0.28 ) }
    dend_46 { pt3dadd( -230.008, 21.5033, -248.501, 0.55 ) }
    dend_46 { pt3dadd( -231.679, 22.3447, -249.343, 0.28 ) }
    dend_46 { pt3dadd( -232.542, 22.7962, -249.75, 0.28 ) }
    dend_46 { pt3dadd( -233.408, 23.2371, -250.096, 0.55 ) }
    dend_46 { pt3dadd( -235.171, 24.1131, -250.708, 0.28 ) }
    dend_46 { pt3dadd( -235.755, 24.4045, -250.863, 0.55 ) }
    dend_46 { pt3dadd( -237.406, 25.3841, -251.304, 0.28 ) }
    dend_46 { pt3dadd( -238.119, 25.8691, -251.459, 0.55 ) }
    dend_46 { pt3dadd( -239.83, 27.0436, -251.83, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -34.2481, -243.138, 11.8025, 0.55 ) }
    dend_21 { pt3dadd( -34.5023, -245.605, 12.5304, 0.55 ) }
    dend_21 { pt3dadd( -34.5523, -247.483, 13.113, 0.28 ) }
    dend_21 { pt3dadd( -34.5532, -248.389, 13.3919, 0.55 ) }
    dend_21 { pt3dadd( -34.6838, -250.681, 14.3519, 0.28 ) }
    dend_21 { pt3dadd( -34.7315, -251.095, 14.5525, 0.55 ) }
    dend_21 { pt3dadd( -35.0782, -252.535, 15.5882, 0.28 ) }
    dend_21 { pt3dadd( -35.4322, -253.209, 16.4899, 0.83 ) }
    dend_21 { pt3dadd( -35.9163, -253.579, 17.3291, 0.83 ) }
    dend_21 { pt3dadd( -37.7794, -254.406, 19.7536, 0.28 ) }
    dend_21 { pt3dadd( -38.2553, -254.521, 20.3102, 0.83 ) }
    dend_21 { pt3dadd( -41.271, -254.937, 23.607, 0.28 ) }
    dend_21 { pt3dadd( -42.0867, -254.959, 24.4246, 0.83 ) }
    dend_21 { pt3dadd( -43.7408, -254.867, 26.0173, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( -44.943, -254.719, 27.1363, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 1/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -34.2481, -243.138, 11.8025, 0.55 ) }
    dend_20 { pt3dadd( -33.6387, -246.917, 13.2658, 0.55 ) }
    dend_20 { pt3dadd( -33.3192, -248.932, 13.9805, 0.28 ) }
    dend_20 { pt3dadd( -33.125, -250.05, 14.3582, 0.83 ) }
    dend_20 { pt3dadd( -32.3815, -254.333, 15.8045, 0.28 ) }
    dend_20 { pt3dadd( -32.2871, -254.877, 15.9881, 0.55 ) }
    dend_20 { pt3dadd( -31.6034, -258.814, 17.3179, 0.28 ) }
    dend_20 { pt3dadd( -31.0754, -262.035, 18.5882, 0.28 ) }
    dend_20 { pt3dadd( -30.952, -262.784, 18.9037, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 10/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 67.0837, -163.948, -56.8836, 0.55 ) }
    dend_15 { pt3dadd( 67.5087, -169.405, -57.5042, 0.55 ) }
    dend_15 { pt3dadd( 68.1052, -174.422, -58.0712, 0.55 ) }
    dend_15 { pt3dadd( 68.6411, -177.971, -58.5824, 0.28 ) }
    dend_15 { pt3dadd( 68.9226, -179.5, -58.8218, 0.83 ) }
    dend_15 { pt3dadd( 69.3467, -181.64, -59.2026, 0.83 ) }
    dend_15 { pt3dadd( 69.766, -183.646, -59.5778, 0.55 ) }
    dend_15 { pt3dadd( 70.4546, -186.451, -60.1691, 1.11 ) }
    dend_15 { pt3dadd( 71.5822, -190.265, -60.8732, 0.28 ) }
    dend_15 { pt3dadd( 72.5808, -193.522, -61.4358, 0.83 ) }
    dend_15 { pt3dadd( 73.1916, -195.593, -61.7805, 0.28 ) }
    dend_15 { pt3dadd( 73.7332, -197.595, -62.0558, 1.38 ) }
    dend_15 { pt3dadd( 74.4118, -200.339, -62.3282, 0.28 ) }
    dend_15 { pt3dadd( 74.5783, -201.099, -62.3599, 0.83 ) }
    dend_15 { pt3dadd( 74.8625, -202.53, -62.3191, 0.28 ) }
    dend_15 { pt3dadd( 75.1722, -204.574, -62.242, 0.83 ) }
    dend_15 { pt3dadd( 75.3994, -206.468, -62.1629, 0.83 ) }
    dend_15 { pt3dadd( 75.5643, -208.033, -62.1418, 0.55 ) }
    dend_15 { pt3dadd( 75.8078, -211.127, -62.2146, 0.83 ) }
    dend_15 { pt3dadd( 75.9739, -213.188, -62.2901, 0.83 ) }
    dend_15 { pt3dadd( 76.1405, -215.12, -62.3602, 0.83 ) }
    dend_15 { pt3dadd( 76.2996, -217.444, -62.484, 0.83 ) }
    dend_15 { pt3dadd( 76.3892, -219.174, -62.6124, 0.83 ) }
    dend_15 { pt3dadd( 76.4844, -221.462, -62.7911, 0.83 ) }
    dend_15 { pt3dadd( 76.565, -224.306, -62.9991, 0.83 ) }
    dend_15 { pt3dadd( 76.6477, -227.436, -63.192, 0.28 ) }
    dend_15 { pt3dadd( 76.769, -230.227, -63.3028, 0.55 ) }
    dend_15 { pt3dadd( 76.8507, -232.115, -63.3541, 0.28 ) }
    dend_15 { pt3dadd( 76.8624, -232.367, -63.3573, 0.83 ) }
    dend_15 { pt3dadd( 76.9416, -233.947, -63.3566, 0.28 ) }
    dend_15 { pt3dadd( 76.9849, -235.26, -63.342, 0.55 ) }
    dend_15 { pt3dadd( 77.0413, -237.872, -63.308, 1.38 ) }
    dend_15 { pt3dadd( 77.14, -241.238, -63.2329, 0.28 ) }
    dend_15 { pt3dadd( 77.2052, -243.824, -63.182, 0.28 ) }
    dend_15 { pt3dadd( 77.2262, -245.695, -63.1545, 0.83 ) }
    dend_15 { pt3dadd( 77.234, -247.579, -63.1509, 0.83 ) }
    dend_15 { pt3dadd( 77.2266, -249.284, -63.1678, 0.28 ) }
    dend_15 { pt3dadd( 77.1753, -251.114, -63.2049, 0.83 ) }
    dend_15 { pt3dadd( 77.0864, -253.468, -63.2808, 0.28 ) }
    dend_15 { pt3dadd( 77.069, -254.04, -63.3035, 0.55 ) }
    dend_15 { pt3dadd( 77.1067, -256.153, -63.4217, 0.28 ) }
    dend_15 { pt3dadd( 77.1417, -256.919, -63.4747, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 52/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 67.0837, -163.948, -56.8836, 0.55 ) }
    dend_14 { pt3dadd( 69.2844, -160.648, -57.5448, 0.55 ) }
    dend_14 { pt3dadd( 70.1632, -159.33, -57.8089, 0.83 ) }
    dend_14 { pt3dadd( 71.9159, -156.701, -58.3356, 0.28 ) }
    dend_14 { pt3dadd( 72.8954, -155.232, -58.63, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 57/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.2072, -106.482, -33.2223, 0.28 ) }
    dend_12 { pt3dadd( 10.5772, -109.511, -31.9251, 0.28 ) }
    dend_12 { pt3dadd( 9.43155, -111.945, -30.7263, 0.83 ) }
    dend_12 { pt3dadd( 8.45286, -114.024, -29.7023, 0.28 ) }
    dend_12 { pt3dadd( 7.83226, -115.342, -29.0529, 0.28 ) }
    dend_12 { pt3dadd( 6.79936, -117.537, -27.9721, 0.83 ) }
    dend_12 { pt3dadd( 5.43326, -120.439, -26.5427, 0.28 ) }
    dend_12 { pt3dadd( 4.97339, -121.661, -25.7628, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 65/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 12.2072, -106.482, -33.2223, 0.55 ) }
    dend_11 { pt3dadd( 13.203, -111.193, -34.9804, 0.55 ) }
    dend_11 { pt3dadd( 13.5358, -112.561, -35.5429, 0.55 ) }
    dend_11 { pt3dadd( 14.2551, -115.427, -36.9056, 0.55 ) }
    dend_11 { pt3dadd( 15.1508, -118.749, -38.5654, 0.83 ) }
    dend_11 { pt3dadd( 16.0864, -122.304, -40.6044, 0.55 ) }
    dend_11 { pt3dadd( 16.6996, -124.554, -41.9668, 0.28 ) }
    dend_11 { pt3dadd( 17.2533, -126.492, -43.3026, 0.83 ) }
    dend_11 { pt3dadd( 18.279, -129.792, -45.8211, 0.28 ) }
    dend_11 { pt3dadd( 18.9599, -131.751, -47.4182, 0.83 ) }
    dend_11 { pt3dadd( 20.4175, -135.971, -50.9757, 0.28 ) }
    dend_11 { pt3dadd( 20.9606, -137.435, -52.2182, 0.55 ) }
    dend_11 { pt3dadd( 21.8608, -139.972, -54.4192, 1.38 ) }
    dend_11 { pt3dadd( 22.972, -143.344, -57.3288, 0.55 ) }
    dend_11 { pt3dadd( 23.5805, -145.378, -59.1065, 0.55 ) }
    dend_11 { pt3dadd( 24.0939, -147.358, -60.8356, 0.28 ) }
    dend_11 { pt3dadd( 24.4891, -149.24, -62.4088, 0.83 ) }
    dend_11 { pt3dadd( 24.7429, -150.962, -63.8353, 0.28 ) }
    dend_11 { pt3dadd( 24.9038, -152.567, -65.1386, 0.83 ) }
    dend_11 { pt3dadd( 25.2205, -155.682, -67.5224, 0.28 ) }
    dend_11 { pt3dadd( 25.3969, -156.806, -68.3675, 0.55 ) }
    dend_11 { pt3dadd( 26.0249, -159.791, -70.4655, 0.28 ) }
    dend_11 { pt3dadd( 26.2978, -160.96, -71.2052, 0.55 ) }
    dend_11 { pt3dadd( 27.0583, -163.467, -72.6308, 0.28 ) }
    dend_11 { pt3dadd( 27.7472, -165.388, -73.626, 1.38 ) }
    dend_11 { pt3dadd( 28.6835, -167.541, -74.5845, 0.28 ) }
    dend_11 { pt3dadd( 28.8704, -167.936, -74.7625, 0.55 ) }
    dend_11 { pt3dadd( 30.0502, -170.07, -75.6977, 0.28 ) }
    dend_11 { pt3dadd( 31.0832, -171.813, -76.4814, 0.55 ) }
    dend_11 { pt3dadd( 32.3395, -173.809, -77.3874, 0.28 ) }
    dend_11 { pt3dadd( 32.7214, -174.389, -77.6734, 0.55 ) }
    dend_11 { pt3dadd( 34.1304, -176.403, -78.6997, 0.28 ) }
    dend_11 { pt3dadd( 35.4061, -178.201, -79.6567, 1.11 ) }
    dend_11 { pt3dadd( 37.4989, -181.072, -81.2064, 0.28 ) }
    dend_11 { pt3dadd( 38.045, -181.864, -81.6155, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( 39.1136, -183.601, -82.3923, 0.28 ) }
    dend_11 { pt3dadd( 40.5256, -186.231, -83.5728, 1.11 ) }
    dend_11 { pt3dadd( 42.1926, -189.746, -85.0951, 0.55 ) }
    dend_11 { pt3dadd( 42.8625, -191.287, -85.7675, 0.55 ) }
    dend_11 { pt3dadd( 43.7663, -193.315, -86.6731, 0.55 ) }
    dend_11 { pt3dadd( 45.1616, -196.154, -87.9832, 0.83 ) }
    dend_11 { pt3dadd( 47.1402, -199.913, -89.8768, 0.55 ) }
    dend_11 { pt3dadd( 47.9159, -201.273, -90.65, 0.55 ) }
    dend_11 { pt3dadd( 49.2026, -203.252, -91.8852, 0.55 ) }
    dend_11 { pt3dadd( 50.6848, -205.349, -93.2902, 0.55 ) }
    dend_11 { pt3dadd( 52.2111, -207.394, -94.7507, 0.83 ) }
    dend_11 { pt3dadd( 53.6419, -209.471, -96.3087, 0.28 ) }
    dend_11 { pt3dadd( 54.422, -210.777, -97.2226, 0.55 ) }
    dend_11 { pt3dadd( 55.5942, -213.274, -98.9515, 0.28 ) }
    dend_11 { pt3dadd( 56.1696, -215.003, -100.1, 0.28 ) }
    dend_11 { pt3dadd( 56.6912, -217.389, -101.792, 1.11 ) }
    dend_11 { pt3dadd( 57.1454, -220.805, -104.172, 0.28 ) }
    dend_11 { pt3dadd( 57.2176, -221.945, -104.997, 0.55 ) }
    dend_11 { pt3dadd( 57.2938, -224.878, -107.262, 0.28 ) }
    dend_11 { pt3dadd( 57.1546, -228.937, -110.656, 2.22 ) }
    dend_11 { pt3dadd( 56.9558, -232.781, -114.063, 0.55 ) }
    dend_11 { pt3dadd( 56.8466, -234.838, -115.884, 0.55 ) }
    dend_11 { pt3dadd( 56.7492, -237.918, -118.478, 0.55 ) }
    dend_11 { pt3dadd( 56.6649, -239.559, -119.751, 0.55 ) }
    dend_11 { pt3dadd( 56.5414, -241.702, -121.234, 0.55 ) }
    dend_11 { pt3dadd( 56.5114, -242.977, -121.93, 0.55 ) }
    dend_11 { pt3dadd( 56.6202, -245.893, -123.161, 0.28 ) }
    dend_11 { pt3dadd( 56.8713, -248.127, -123.908, 0.55 ) }
    dend_11 { pt3dadd( 57.6331, -252.298, -124.823, 0.28 ) }
    dend_11 { pt3dadd( 57.9894, -253.823, -125.046, 0.55 ) }
    dend_11 { pt3dadd( 59.0837, -257.343, -125.344, 0.28 ) }
    dend_11 { pt3dadd( 59.8028, -259.14, -125.33, 0.83 ) }
    dend_11 { pt3dadd( 61.475, -262.425, -125.152, 0.28 ) }
    dend_11 { pt3dadd( 62.5719, -264.397, -124.982, 0.83 ) }
    dend_11 { pt3dadd( 63.8529, -266.59, -124.66, 0.28 ) }
    dend_11 { pt3dadd( 64.5048, -267.803, -124.458, 0.83 ) }
    dend_11 { pt3dadd( 66.6053, -272.15, -123.701, 0.28 ) }
    dend_11 { pt3dadd( 67.5764, -274.528, -123.38, 1.94 ) }
    dend_11 { pt3dadd( 68.5326, -277.511, -123.179, 0.28 ) }
    dend_11 { pt3dadd( 69.026, -279.591, -123.097, 0.28 ) }
    dend_11 { pt3dadd( 69.4183, -281.911, -123.124, 0.28 ) }
    dend_11 { pt3dadd( 69.5833, -283.257, -123.198, 0.83 ) }
    dend_11 { pt3dadd( 69.8477, -285.604, -123.443, 0.28 ) }
    dend_11 { pt3dadd( 69.9694, -286.294, -123.504, 0.83 ) }
    dend_11 { pt3dadd( 70.5052, -288.155, -123.764, 0.28 ) }
    dend_11 { pt3dadd( 71.0504, -289.573, -124.024, 0.83 ) }
    dend_11 { pt3dadd( 72.5116, -292.238, -124.566, 0.28 ) }
    dend_11 { pt3dadd( 73.9333, -294.451, -125.02, 0.28 ) }
    dend_11 { pt3dadd( 74.9565, -295.93, -125.218, 0.83 ) }
    dend_11 { pt3dadd( 76.4946, -298.141, -125.394, 0.28 ) }
    dend_11 { pt3dadd( 77.2205, -299.131, -125.457, 0.83 ) }
    dend_11 { pt3dadd( 81.1878, -304.492, -125.706, 0.28 ) }
    dend_11 { pt3dadd( 81.7946, -305.304, -125.73, 0.83 ) }
    dend_11 { pt3dadd( 85.229, -310.087, -125.66, 0.28 ) }
    dend_11 { pt3dadd( 86.2166, -311.5, -125.576, 0.83 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 55/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 5.68342, -226.809, -82.7578, 0.28 ) }
    dend_65 { pt3dadd( 4.70813, -226.271, -84.0096, 0.28 ) }
    dend_65 { pt3dadd( 4.10911, -225.941, -84.7785, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 58/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 5.68342, -226.809, -82.7578, 0.28 ) }
    dend_64 { pt3dadd( 5.48916, -228.618, -82.755, 0.28 ) }
    dend_64 { pt3dadd( 5.33374, -230.334, -82.7572, 0.55 ) }
    dend_64 { pt3dadd( 5.16546, -232.51, -82.7646, 0.28 ) }
    dend_64 { pt3dadd( 5.05654, -234.577, -82.7728, 0.83 ) }
    dend_64 { pt3dadd( 4.9414, -237.033, -82.7834, 0.28 ) }
    dend_64 { pt3dadd( 4.89094, -238.11, -82.7783, 0.83 ) }
    dend_64 { pt3dadd( 4.75123, -240.405, -82.749, 0.28 ) }
    dend_64 { pt3dadd( 4.68579, -241.426, -82.7294, 0.83 ) }
    dend_64 { pt3dadd( 4.55692, -243.648, -82.6798, 0.28 ) }
    dend_64 { pt3dadd( 4.47731, -244.654, -82.6532, 0.83 ) }
    dend_64 { pt3dadd( 4.31788, -246.079, -82.6151, 0.28 ) }
    dend_64 { pt3dadd( 4.04241, -247.915, -82.5654, 0.83 ) }
    dend_64 { pt3dadd( 3.86929, -248.806, -82.5252, 0.83 ) }
    dend_64 { pt3dadd( 3.41865, -250.813, -82.4112, 0.28 ) }
    dend_64 { pt3dadd( 3.13811, -251.92, -82.3432, 0.83 ) }
    dend_64 { pt3dadd( 2.66919, -253.772, -82.2348, 0.28 ) }
    dend_64 { pt3dadd( 2.41438, -254.827, -82.1799, 0.55 ) }
    dend_64 { pt3dadd( 2.15428, -256.009, -82.1159, 0.55 ) }
    dend_64 { pt3dadd( 1.73076, -257.949, -82.0147, 0.28 ) }
    dend_64 { pt3dadd( 1.33691, -259.812, -81.9245, 0.83 ) }
    dend_64 { pt3dadd( 1.03772, -261.409, -81.8568, 0.55 ) }
    dend_64 { pt3dadd( 0.387922, -264.607, -81.7511, 0.28 ) }
    dend_64 { pt3dadd( 0.133413, -265.816, -81.7268, 0.83 ) }
    dend_64 { pt3dadd( -0.273674, -267.492, -81.7147, 0.28 ) }
    dend_64 { pt3dadd( -0.555266, -268.489, -81.7048, 0.83 ) }
    dend_64 { pt3dadd( -0.969907, -269.701, -81.6739, 0.28 ) }
    dend_64 { pt3dadd( -2.03396, -272.122, -81.5736, 0.28 ) }
    dend_64 { pt3dadd( -2.80467, -273.36, -81.4576, 0.55 ) }
    dend_64 { pt3dadd( -3.87386, -274.713, -81.2412, 0.28 ) }
    dend_64 { pt3dadd( -4.35904, -275.261, -81.1348, 0.55 ) }
    dend_64 { pt3dadd( -5.30422, -276.205, -80.9134, 0.28 ) }
    dend_64 { pt3dadd( -6.40893, -277.159, -80.6284, 0.55 ) }
    dend_64 { pt3dadd( -8.36868, -278.576, -80.0123, 0.28 ) }
    dend_64 { pt3dadd( -9.14658, -279.025, -79.7471, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 93/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -2.92347, -227.024, -85.728, 1.11 ) }
    dend_62 { pt3dadd( -0.768023, -226.641, -85.1479, 1.11 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 95/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -2.92347, -227.024, -85.728, 0.28 ) }
    dend_61 { pt3dadd( -4.30378, -229.786, -86.8958, 0.28 ) }
    dend_61 { pt3dadd( -4.85645, -230.757, -87.4251, 0.55 ) }
    dend_61 { pt3dadd( -5.9763, -232.63, -88.5098, 0.28 ) }
    dend_61 { pt3dadd( -6.94812, -234.219, -89.466, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_61 { pt3dadd( -8.42325, -236.597, -90.9066, 0.28 ) }
    dend_61 { pt3dadd( -9.13545, -237.68, -91.5884, 0.83 ) }
    dend_61 { pt3dadd( -11.2873, -240.636, -93.7077, 0.28 ) }
    dend_61 { pt3dadd( -11.7496, -241.177, -94.1382, 0.83 ) }
    dend_61 { pt3dadd( -13.1248, -242.532, -95.3047, 0.28 ) }
    dend_61 { pt3dadd( -13.6859, -242.993, -95.6803, 0.55 ) }
    dend_61 { pt3dadd( -15.4078, -244.17, -96.6372, 0.28 ) }
    dend_61 { pt3dadd( -16.6054, -244.848, -97.2162, 0.55 ) }
    dend_61 { pt3dadd( -18.5387, -245.803, -97.9899, 0.28 ) }
    dend_61 { pt3dadd( -19.6435, -246.33, -98.4677, 0.55 ) }
    dend_61 { pt3dadd( -22.2471, -247.512, -99.6076, 0.28 ) }
    dend_61 { pt3dadd( -23.2471, -247.979, -100.03, 0.55 ) }
    dend_61 { pt3dadd( -25.7977, -249.217, -101.065, 0.28 ) }
    dend_61 { pt3dadd( -26.5303, -249.592, -101.357, 0.55 ) }
    dend_61 { pt3dadd( -29.9907, -251.467, -102.698, 0.28 ) }
    dend_61 { pt3dadd( -31.2169, -252.154, -103.162, 0.55 ) }
    dend_61 { pt3dadd( -35.4733, -254.663, -104.756, 0.28 ) }
    dend_61 { pt3dadd( -36.4593, -255.265, -105.115, 0.55 ) }
    dend_61 { pt3dadd( -37.6526, -256.015, -105.512, 0.28 ) }
    dend_61 { pt3dadd( -37.8892, -256.162, -105.581, 0.55 ) }
    dend_61 { pt3dadd( -39.5771, -257.228, -105.828, 0.28 ) }
    dend_61 { pt3dadd( -39.9853, -257.516, -105.885, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 22/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -109.521, -60.9113, -199.436, 0.28 ) }
    dend_49 { pt3dadd( -111.08, -63.065, -199.593, 0.28 ) }
    dend_49 { pt3dadd( -111.731, -63.9632, -199.658, 0.55 ) }
    dend_49 { pt3dadd( -113.058, -65.7959, -199.791, 0.28 ) }
    dend_49 { pt3dadd( -113.599, -66.5433, -199.846, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 27/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -109.521, -60.9113, -199.436, 0.55 ) }
    dend_48 { pt3dadd( -109.159, -61.6644, -201.285, 0.55 ) }
    dend_48 { pt3dadd( -108.662, -62.6732, -203.662, 0.28 ) }
    dend_48 { pt3dadd( -108.453, -63.072, -204.426, 0.55 ) }
    dend_48 { pt3dadd( -107.453, -65.1558, -207.878, 0.28 ) }
    dend_48 { pt3dadd( -107.183, -65.7462, -208.773, 0.55 ) }
    dend_48 { pt3dadd( -106.606, -67.0296, -210.57, 0.28 ) }
    dend_48 { pt3dadd( -106.334, -67.6981, -211.417, 0.55 ) }
    dend_48 { pt3dadd( -105.444, -69.8015, -213.698, 0.28 ) }
    dend_48 { pt3dadd( -104.559, -71.9215, -215.712, 0.28 ) }
    dend_48 { pt3dadd( -104.301, -72.5877, -216.244, 0.55 ) }
    dend_48 { pt3dadd( -103.849, -73.8632, -217.225, 0.28 ) }
    dend_48 { pt3dadd( -103.682, -74.4289, -217.596, 0.55 ) }
    dend_48 { pt3dadd( -103.262, -76.0055, -218.571, 0.28 ) }
    dend_48 { pt3dadd( -103.015, -77.051, -219.168, 0.55 ) }
    dend_48 { pt3dadd( -102.245, -80.115, -220.686, 0.28 ) }
    dend_48 { pt3dadd( -101.868, -81.5725, -221.402, 0.83 ) }
    dend_48 { pt3dadd( -101.112, -84.0995, -222.455, 0.28 ) }
    dend_48 { pt3dadd( -100.779, -84.969, -222.779, 0.28 ) }
    dend_48 { pt3dadd( -100.123, -86.3395, -223.236, 0.55 ) }
    dend_48 { pt3dadd( -99.2457, -87.9883, -223.727, 0.28 ) }
    dend_48 { pt3dadd( -98.5703, -89.078, -223.982, 0.55 ) }
    dend_48 { pt3dadd( -96.3282, -92.2598, -224.728, 0.28 ) }
    dend_48 { pt3dadd( -94.918, -93.9689, -225.216, 0.28 ) }
    dend_48 { pt3dadd( -93.6506, -95.4575, -225.604, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_37, dend_34, dend_31, dend_28, dend_23, dend_0, axon_0, dend_54, dend_41, dend_39, dend_38, dend_36, dend_35, dend_33, dend_32, dend_30, dend_29, dend_27, dend_24, dend_4, dend_1, axon_1, dend_56, dend_55, dend_53, dend_42, dend_26, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_57, dend_44, dend_43, dend_22, dend_17, dend_9, dend_6, dend_59, dend_58, dend_50, dend_45, dend_19, dend_18, dend_13, dend_10, dend_8, dend_7, dend_63, dend_60, dend_52, dend_51, dend_47, dend_46, dend_21, dend_20, dend_15, dend_14, dend_12, dend_11, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48]}
    ModelViewParmSubset_5 = new SectionList()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_28 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_54 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_41 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_35 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_56 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_42 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_16 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_43 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_8 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_46 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_15 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_64 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_61 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_48 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_38 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_55 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_53 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_66 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_33 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_14 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_58 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_51 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_59 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_63 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_60 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_65 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_49 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_61 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 7
    dend_28 nseg = 3
    dend_54 nseg = 3
    dend_41 nseg = 5
    dend_35 nseg = 13
    dend_32 nseg = 5
    dend_30 nseg = 9
    dend_27 nseg = 9
    dend_1 nseg = 5
    dend_56 nseg = 3
    dend_42 nseg = 3
    dend_26 nseg = 7
    dend_25 nseg = 5
    dend_16 nseg = 9
    dend_5 nseg = 3
    dend_2 nseg = 5
    dend_57 nseg = 5
    dend_43 nseg = 3
    dend_22 nseg = 7
    dend_9 nseg = 3
    dend_6 nseg = 3
    dend_45 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_13 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_52 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 7
    dend_15 nseg = 5
    dend_11 nseg = 13
    dend_64 nseg = 3
    dend_61 nseg = 3
    dend_48 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_NBC_724d9652d6_0_0


